{"buggy_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Threading.Tasks;\nusing System.Web;\nusing API.Constants;\nusing API.Data;\nusing API.Data.Repositories;\nusing API.DTOs;\nusing API.DTOs.Account;\nusing API.DTOs.Email;\nusing API.Entities;\nusing API.Entities.Enums;\nusing API.Errors;\nusing API.Extensions;\nusing API.Services;\nusing API.SignalR;\nusing AutoMapper;\nusing Kavita.Common;\nusing Kavita.Common.EnvironmentInfo;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Identity;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.Logging;\n\nnamespace API.Controllers;\n\n/// <summary>\n/// All Account matters\n/// </summary>\npublic class AccountController : BaseApiController\n{\n    private readonly UserManager<AppUser> _userManager;\n    private readonly SignInManager<AppUser> _signInManager;\n    private readonly ITokenService _tokenService;\n    private readonly IUnitOfWork _unitOfWork;\n    private readonly ILogger<AccountController> _logger;\n    private readonly IMapper _mapper;\n    private readonly IAccountService _accountService;\n    private readonly IEmailService _emailService;\n    private readonly IHostEnvironment _environment;\n    private readonly IEventHub _eventHub;\n\n    /// <inheritdoc />\n    public AccountController(UserManager<AppUser> userManager,\n        SignInManager<AppUser> signInManager,\n        ITokenService tokenService, IUnitOfWork unitOfWork,\n        ILogger<AccountController> logger,\n        IMapper mapper, IAccountService accountService,\n        IEmailService emailService, IHostEnvironment environment,\n        IEventHub eventHub)\n    {\n        _userManager = userManager;\n        _signInManager = signInManager;\n        _tokenService = tokenService;\n        _unitOfWork = unitOfWork;\n        _logger = logger;\n        _mapper = mapper;\n        _accountService = accountService;\n        _emailService = emailService;\n        _environment = environment;\n        _eventHub = eventHub;\n    }\n\n    /// <summary>\n    /// Update a user's password\n    /// </summary>\n    /// <param name=\"resetPasswordDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"reset-password\")]\n    public async Task<ActionResult> UpdatePassword(ResetPasswordDto resetPasswordDto)\n    {\n        // TODO: Log this request to Audit Table\n        _logger.LogInformation(\"{UserName} is changing {ResetUser}'s password\", User.GetUsername(), resetPasswordDto.UserName);\n\n        var user = await _userManager.Users.SingleOrDefaultAsync(x => x.UserName == resetPasswordDto.UserName);\n        if (user == null) return Ok(); // Don't report BadRequest as that would allow brute forcing to find accounts on system\n        var isAdmin = User.IsInRole(PolicyConstants.AdminRole);\n\n\n        if (resetPasswordDto.UserName == User.GetUsername() && !(User.IsInRole(PolicyConstants.ChangePasswordRole) || isAdmin))\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (resetPasswordDto.UserName != User.GetUsername() && !isAdmin)\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (string.IsNullOrEmpty(resetPasswordDto.OldPassword) && !isAdmin)\n            return BadRequest(new ApiException(400, \"You must enter your existing password to change your account unless you're an admin\"));\n\n        // If you're an admin and the username isn't yours, you don't need to validate the password\n        var isResettingOtherUser = (resetPasswordDto.UserName != User.GetUsername() && isAdmin);\n        if (!isResettingOtherUser && !await _userManager.CheckPasswordAsync(user, resetPasswordDto.OldPassword))\n        {\n            return BadRequest(\"Invalid Password\");\n        }\n\n        var errors = await _accountService.ChangeUserPassword(user, resetPasswordDto.Password);\n        if (errors.Any())\n        {\n            return BadRequest(errors);\n        }\n\n        _logger.LogInformation(\"{User}'s Password has been reset\", resetPasswordDto.UserName);\n        return Ok();\n    }\n\n    /// <summary>\n    /// Register the first user (admin) on the server. Will not do anything if an admin is already confirmed\n    /// </summary>\n    /// <param name=\"registerDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"register\")]\n    public async Task<ActionResult<UserDto>> RegisterFirstUser(RegisterDto registerDto)\n    {\n        var admins = await _userManager.GetUsersInRoleAsync(\"Admin\");\n        if (admins.Count > 0) return BadRequest(\"Not allowed\");\n\n        try\n        {\n            var usernameValidation = await _accountService.ValidateUsername(registerDto.Username);\n            if (usernameValidation.Any())\n            {\n                return BadRequest(usernameValidation);\n            }\n\n            var user = new AppUser()\n            {\n                UserName = registerDto.Username,\n                Email = registerDto.Email,\n                UserPreferences = new AppUserPreferences\n                {\n                    Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n                },\n                ApiKey = HashUtil.ApiKey()\n            };\n\n            var result = await _userManager.CreateAsync(user, registerDto.Password);\n            if (!result.Succeeded) return BadRequest(result.Errors);\n\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n            if (string.IsNullOrEmpty(token)) return BadRequest(\"There was an issue generating a confirmation token.\");\n            if (!await ConfirmEmailToken(token, user)) return BadRequest($\"There was an issue validating your email: {token}\");\n\n\n            var roleResult = await _userManager.AddToRoleAsync(user, PolicyConstants.AdminRole);\n            if (!roleResult.Succeeded) return BadRequest(result.Errors);\n\n            return new UserDto\n            {\n                Username = user.UserName,\n                Email = user.Email,\n                Token = await _tokenService.CreateToken(user),\n                RefreshToken = await _tokenService.CreateRefreshToken(user),\n                ApiKey = user.ApiKey,\n                Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Something went wrong when registering user\");\n            // We need to manually delete the User as we've already committed\n            var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(registerDto.Username);\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        return BadRequest(\"Something went wrong when registering user\");\n    }\n\n\n    /// <summary>\n    /// Perform a login. Will send JWT Token of the logged in user back.\n    /// </summary>\n    /// <param name=\"loginDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"login\")]\n    public async Task<ActionResult<UserDto>> Login(LoginDto loginDto)\n    {\n        var user = await _userManager.Users\n            .Include(u => u.UserPreferences)\n            .SingleOrDefaultAsync(x => x.NormalizedUserName == loginDto.Username.ToUpper());\n\n        if (user == null) return Unauthorized(\"Your credentials are not correct\");\n\n        var result = await _signInManager\n            .CheckPasswordSignInAsync(user, loginDto.Password, true);\n\n        if (result.IsLockedOut)\n        {\n            return Unauthorized(\"You've been locked out from too many authorization attempts. Please wait 10 minutes.\");\n        }\n\n        if (!result.Succeeded)\n        {\n            return Unauthorized(result.IsNotAllowed ? \"You must confirm your email first\" : \"Your credentials are not correct\");\n        }\n\n        // Update LastActive on account\n        user.LastActive = DateTime.Now;\n        user.UserPreferences ??= new AppUserPreferences\n        {\n            Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n        };\n\n        _unitOfWork.UserRepository.Update(user);\n        await _unitOfWork.CommitAsync();\n\n        _logger.LogInformation(\"{UserName} logged in at {Time}\", user.UserName, user.LastActive);\n\n        var dto = _mapper.Map<UserDto>(user);\n        dto.Token = await _tokenService.CreateToken(user);\n        dto.RefreshToken = await _tokenService.CreateRefreshToken(user);\n        var pref = await _unitOfWork.UserRepository.GetPreferencesAsync(user.UserName);\n        pref.Theme ??= await _unitOfWork.SiteThemeRepository.GetDefaultTheme();\n        dto.Preferences = _mapper.Map<UserPreferencesDto>(pref);\n        return dto;\n    }\n\n    /// <summary>\n    /// Refreshes the user's JWT token\n    /// </summary>\n    /// <param name=\"tokenRequestDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"refresh-token\")]\n    public async Task<ActionResult<TokenRequestDto>> RefreshToken([FromBody] TokenRequestDto tokenRequestDto)\n    {\n        var token = await _tokenService.ValidateRefreshToken(tokenRequestDto);\n        if (token == null)\n        {\n            return Unauthorized(new { message = \"Invalid token\" });\n        }\n\n        return Ok(token);\n    }\n\n    /// <summary>\n    /// Get All Roles back. See <see cref=\"PolicyConstants\"/>\n    /// </summary>\n    /// <returns></returns>\n    [HttpGet(\"roles\")]\n    public ActionResult<IList<string>> GetRoles()\n    {\n        return typeof(PolicyConstants)\n            .GetFields(BindingFlags.Public | BindingFlags.Static)\n            .Where(f => f.FieldType == typeof(string))\n            .ToDictionary(f => f.Name,\n                f => (string) f.GetValue(null)).Values.ToList();\n    }\n\n\n    /// <summary>\n    /// Resets the API Key assigned with a user\n    /// </summary>\n    /// <returns></returns>\n    [HttpPost(\"reset-api-key\")]\n    public async Task<ActionResult<string>> ResetApiKey()\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n\n        user.ApiKey = HashUtil.ApiKey();\n\n        if (_unitOfWork.HasChanges() && await _unitOfWork.CommitAsync())\n        {\n            return Ok(user.ApiKey);\n        }\n\n        await _unitOfWork.RollbackAsync();\n        return BadRequest(\"Something went wrong, unable to reset key\");\n\n    }\n\n\n    /// <summary>\n    /// Initiates the flow to update a user's email address. The email address is not changed in this API. A confirmation link is sent/dumped which will\n    /// validate the email. It must be confirmed for the email to update.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns>Returns just if the email was sent or server isn't reachable</returns>\n    [HttpPost(\"update/email\")]\n    public async Task<ActionResult> UpdateEmail(UpdateEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized(\"You do not have permission\");\n\n        if (dto == null || string.IsNullOrEmpty(dto.Email)) return BadRequest(\"Invalid payload\");\n\n        // Validate no other users exist with this email\n        if (user.Email.Equals(dto.Email)) return Ok(\"Nothing to do\");\n\n        // Check if email is used by another user\n        var existingUserEmail = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n        if (existingUserEmail != null)\n        {\n            return BadRequest(\"You cannot share emails across multiple accounts\");\n        }\n\n        // All validations complete, generate a new token and email it to the user at the new address. Confirm email link will update the email\n        var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n        if (string.IsNullOrEmpty(token))\n        {\n            _logger.LogError(\"There was an issue generating a token for the email\");\n            return BadRequest(\"There was an issue creating a confirmation email token. See logs.\");\n        }\n\n        user.EmailConfirmed = false;\n        user.ConfirmationToken = token;\n        await _userManager.UpdateAsync(user);\n\n        // Send a confirmation email\n        try\n        {\n            var emailLink = GenerateEmailLink(user.ConfirmationToken, \"confirm-email-update\", dto.Email);\n            _logger.LogCritical(\"[Update Email]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n            var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n            var accessible = await _emailService.CheckIfAccessible(host);\n            if (accessible)\n            {\n                try\n                {\n                    // Email the old address of the update change\n                    await _emailService.SendEmailChangeEmail(new ConfirmationEmailDto()\n                    {\n                        EmailAddress = string.IsNullOrEmpty(user.Email) ? dto.Email : user.Email,\n                        InstallId = BuildInfo.Version.ToString(),\n                        InvitingUser = (await _unitOfWork.UserRepository.GetAdminUsersAsync()).First().UserName,\n                        ServerConfirmationLink = emailLink\n                    });\n                }\n                catch (Exception)\n                {\n                    /* Swallow exception */\n                }\n            }\n\n            return Ok(new InviteUserResponse\n            {\n                EmailLink = string.Empty,\n                EmailSent = accessible\n            });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to send an email\");\n        }\n\n\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        return Ok();\n    }\n\n    [HttpPost(\"update/age-restriction\")]\n    public async Task<ActionResult> UpdateAgeRestriction(UpdateAgeRestrictionDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized(\"You do not have permission\");\n        if (dto == null) return BadRequest(\"Invalid payload\");\n\n        var isAdmin = await _unitOfWork.UserRepository.IsUserAdminAsync(user);\n\n        user.AgeRestriction = isAdmin ? AgeRating.NotApplicable : dto.AgeRating;\n        user.AgeRestrictionIncludeUnknowns = isAdmin || dto.IncludeUnknowns;\n\n        _unitOfWork.UserRepository.Update(user);\n\n        if (!_unitOfWork.HasChanges()) return Ok();\n        try\n        {\n            await _unitOfWork.CommitAsync();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error updating the age restriction\");\n            return BadRequest(\"There was an error updating the age restriction\");\n        }\n\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        return Ok();\n    }\n\n    /// <summary>\n    /// Update the user account. This can only affect Username, Email (will require confirming), Roles, and Library access.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpPost(\"update\")]\n    public async Task<ActionResult> UpdateAccount(UpdateUserDto dto)\n    {\n        var adminUser = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (!await _unitOfWork.UserRepository.IsUserAdminAsync(adminUser)) return Unauthorized(\"You do not have permission\");\n\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(dto.UserId);\n        if (user == null) return BadRequest(\"User does not exist\");\n\n        // Check if username is changing\n        if (!user.UserName.Equals(dto.Username))\n        {\n            // Validate username change\n            var errors = await _accountService.ValidateUsername(dto.Username);\n            if (errors.Any()) return BadRequest(\"Username already taken\");\n            user.UserName = dto.Username;\n            _unitOfWork.UserRepository.Update(user);\n        }\n\n        // Update roles\n        var existingRoles = await _userManager.GetRolesAsync(user);\n        var hasAdminRole = dto.Roles.Contains(PolicyConstants.AdminRole);\n        if (!hasAdminRole)\n        {\n            dto.Roles.Add(PolicyConstants.PlebRole);\n        }\n\n        if (existingRoles.Except(dto.Roles).Any() || dto.Roles.Except(existingRoles).Any())\n        {\n            var roles = dto.Roles;\n\n            var roleResult = await _userManager.RemoveFromRolesAsync(user, existingRoles);\n            if (!roleResult.Succeeded) return BadRequest(roleResult.Errors);\n            roleResult = await _userManager.AddToRolesAsync(user, roles);\n            if (!roleResult.Succeeded) return BadRequest(roleResult.Errors);\n        }\n\n\n        var allLibraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        List<Library> libraries;\n        if (hasAdminRole)\n        {\n            _logger.LogInformation(\"{UserName} is being registered as admin. Granting access to all libraries\",\n                user.UserName);\n            libraries = allLibraries;\n        }\n        else\n        {\n            // Remove user from all libraries\n            foreach (var lib in allLibraries)\n            {\n                lib.AppUsers ??= new List<AppUser>();\n                lib.AppUsers.Remove(user);\n            }\n\n            libraries = (await _unitOfWork.LibraryRepository.GetLibraryForIdsAsync(dto.Libraries, LibraryIncludes.AppUser)).ToList();\n        }\n\n        foreach (var lib in libraries)\n        {\n            lib.AppUsers ??= new List<AppUser>();\n            lib.AppUsers.Add(user);\n        }\n\n        user.AgeRestriction = hasAdminRole ? AgeRating.NotApplicable : dto.AgeRestriction.AgeRating;\n        user.AgeRestrictionIncludeUnknowns = hasAdminRole || dto.AgeRestriction.IncludeUnknowns;\n\n        _unitOfWork.UserRepository.Update(user);\n\n        if (!_unitOfWork.HasChanges() || await _unitOfWork.CommitAsync())\n        {\n            await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n            return Ok();\n        }\n\n        await _unitOfWork.RollbackAsync();\n        return BadRequest(\"There was an exception when updating the user\");\n    }\n\n    /// <summary>\n    /// Requests the Invite Url for the UserId. Will return error if user is already validated.\n    /// </summary>\n    /// <param name=\"userId\"></param>\n    /// <param name=\"withBaseUrl\">Include the \"https://ip:port/\" in the generated link</param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpGet(\"invite-url\")]\n    public async Task<ActionResult<string>> GetInviteUrl(int userId, bool withBaseUrl)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(userId);\n        if (user.EmailConfirmed)\n            return BadRequest(\"User is already confirmed\");\n        if (string.IsNullOrEmpty(user.ConfirmationToken))\n            return BadRequest(\"Manual setup is unable to be completed. Please cancel and recreate the invite.\");\n\n        return GenerateEmailLink(user.ConfirmationToken, \"confirm-email\", user.Email, withBaseUrl);\n    }\n\n\n    /// <summary>\n    /// Invites a user to the server. Will generate a setup link for continuing setup. If the server is not accessible, no\n    /// email will be sent.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpPost(\"invite\")]\n    public async Task<ActionResult<string>> InviteUser(InviteUserDto dto)\n    {\n        var adminUser = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (adminUser == null) return Unauthorized(\"You are not permitted\");\n\n        _logger.LogInformation(\"{User} is inviting {Email} to the server\", adminUser.UserName, dto.Email);\n\n        // Check if there is an existing invite\n        if (!string.IsNullOrEmpty(dto.Email))\n        {\n            dto.Email = dto.Email.Trim();\n            var emailValidationErrors = await _accountService.ValidateEmail(dto.Email);\n            if (emailValidationErrors.Any())\n            {\n                var invitedUser = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n                if (await _userManager.IsEmailConfirmedAsync(invitedUser))\n                    return BadRequest($\"User is already registered as {invitedUser.UserName}\");\n                return BadRequest(\"User is already invited under this email and has yet to accepted invite.\");\n            }\n        }\n\n        // Create a new user\n        var user = new AppUser()\n        {\n            UserName = dto.Email,\n            Email = dto.Email,\n            ApiKey = HashUtil.ApiKey(),\n            UserPreferences = new AppUserPreferences\n            {\n                Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n            }\n        };\n\n        try\n        {\n            var result = await _userManager.CreateAsync(user, AccountService.DefaultPassword);\n            if (!result.Succeeded) return BadRequest(result.Errors);\n\n            // Assign Roles\n            var roles = dto.Roles;\n            var hasAdminRole = dto.Roles.Contains(PolicyConstants.AdminRole);\n            if (!hasAdminRole)\n            {\n                roles.Add(PolicyConstants.PlebRole);\n            }\n\n            foreach (var role in roles)\n            {\n                if (!PolicyConstants.ValidRoles.Contains(role)) continue;\n                var roleResult = await _userManager.AddToRoleAsync(user, role);\n                if (!roleResult.Succeeded)\n                    return\n                        BadRequest(roleResult.Errors);\n            }\n\n            // Grant access to libraries\n            List<Library> libraries;\n            if (hasAdminRole)\n            {\n                _logger.LogInformation(\"{UserName} is being registered as admin. Granting access to all libraries\",\n                    user.UserName);\n                libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync(LibraryIncludes.AppUser)).ToList();\n            }\n            else\n            {\n                libraries = (await _unitOfWork.LibraryRepository.GetLibraryForIdsAsync(dto.Libraries, LibraryIncludes.AppUser)).ToList();\n            }\n\n            foreach (var lib in libraries)\n            {\n                lib.AppUsers ??= new List<AppUser>();\n                lib.AppUsers.Add(user);\n            }\n\n            user.AgeRestriction = hasAdminRole ? AgeRating.NotApplicable : dto.AgeRestriction.AgeRating;\n            user.AgeRestrictionIncludeUnknowns = hasAdminRole || dto.AgeRestriction.IncludeUnknowns;\n\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n            if (string.IsNullOrEmpty(token))\n            {\n                _logger.LogError(\"There was an issue generating a token for the email\");\n                return BadRequest(\"There was an creating the invite user\");\n            }\n\n            user.ConfirmationToken = token;\n            await _unitOfWork.CommitAsync();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to create user. Deleting user for retry\");\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        try\n        {\n            var emailLink = GenerateEmailLink(user.ConfirmationToken, \"confirm-email\", dto.Email);\n            _logger.LogCritical(\"[Invite User]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n            _logger.LogCritical(\"[Invite User]: Token {UserName}: {Token}\", user.UserName, user.ConfirmationToken);\n            var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n            var accessible = await _emailService.CheckIfAccessible(host);\n            if (accessible)\n            {\n                try\n                {\n                    await _emailService.SendConfirmationEmail(new ConfirmationEmailDto()\n                    {\n                        EmailAddress = dto.Email,\n                        InvitingUser = adminUser.UserName,\n                        ServerConfirmationLink = emailLink\n                    });\n                }\n                catch (Exception)\n                {\n                    /* Swallow exception */\n                }\n            }\n\n            return Ok(new InviteUserResponse\n            {\n                EmailLink = emailLink,\n                EmailSent = accessible\n            });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to send an email\");\n        }\n\n        return BadRequest(\"There was an error setting up your account. Please check the logs\");\n    }\n\n    /// <summary>\n    /// Last step in authentication flow, confirms the email token for email\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"confirm-email\")]\n    public async Task<ActionResult<UserDto>> ConfirmEmail(ConfirmEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n\n        if (user == null)\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid registered email: {Email}\", dto.Email);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        // Validate Password and Username\n        var validationErrors = new List<ApiException>();\n        validationErrors.AddRange(await _accountService.ValidateUsername(dto.Username));\n        validationErrors.AddRange(await _accountService.ValidatePassword(user, dto.Password));\n\n        if (validationErrors.Any())\n        {\n            return BadRequest(validationErrors);\n        }\n\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid token: {Token}\", dto.Token);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        user.UserName = dto.Username;\n        user.ConfirmationToken = null;\n        var errors = await _accountService.ChangeUserPassword(user, dto.Password);\n        if (errors.Any())\n        {\n            return BadRequest(errors);\n        }\n        await _unitOfWork.CommitAsync();\n\n\n        user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(user.UserName,\n            AppUserIncludes.UserPreferences);\n\n        // Perform Login code\n        return new UserDto\n        {\n            Username = user.UserName,\n            Email = user.Email,\n            Token = await _tokenService.CreateToken(user),\n            RefreshToken = await _tokenService.CreateRefreshToken(user),\n            ApiKey = user.ApiKey,\n            Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n        };\n    }\n\n    /// <summary>\n    /// Final step in email update change. Given a confirmation token and the email, this will finish the email change.\n    /// </summary>\n    /// <remarks>This will force connected clients to re-authenticate</remarks>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"confirm-email-update\")]\n    public async Task<ActionResult> ConfirmEmailUpdate(ConfirmEmailUpdateDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByConfirmationToken(dto.Token);\n        if (user == null)\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid registered email: {Email}\", dto.Email);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid token: {Token}\", dto.Token);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        _logger.LogInformation(\"User is updating email from {OldEmail} to {NewEmail}\", user.Email, dto.Email);\n        var result = await _userManager.SetEmailAsync(user, dto.Email);\n        if (!result.Succeeded)\n        {\n            _logger.LogError(\"Unable to update email for users: {Errors}\", result.Errors.Select(e => e.Description));\n            return BadRequest(\"Unable to update email for user. Check logs\");\n        }\n        user.ConfirmationToken = null;\n        await _unitOfWork.CommitAsync();\n\n\n        // For the user's connected devices to pull the new information in\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate,\n            MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        // Perform Login code\n        return Ok();\n    }\n\n    [AllowAnonymous]\n    [HttpPost(\"confirm-password-reset\")]\n    public async Task<ActionResult<string>> ConfirmForgotPassword(ConfirmPasswordResetDto dto)\n    {\n        try\n        {\n            var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n            if (user == null)\n            {\n                return BadRequest(\"Invalid credentials\");\n            }\n\n            var result = await _userManager.VerifyUserTokenAsync(user, TokenOptions.DefaultProvider,\n                \"ResetPassword\", dto.Token);\n            if (!result)\n            {\n                _logger.LogInformation(\"Unable to reset password, your email token is not correct: {@Dto}\", dto);\n                return BadRequest(\"Invalid credentials\");\n            }\n\n            var errors = await _accountService.ChangeUserPassword(user, dto.Password);\n            return errors.Any() ? BadRequest(errors) : Ok(\"Password updated\");\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an unexpected error when confirming new password\");\n            return BadRequest(\"There was an unexpected error when confirming new password\");\n        }\n    }\n\n\n    /// <summary>\n    /// Will send user a link to update their password to their email or prompt them if not accessible\n    /// </summary>\n    /// <param name=\"email\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"forgot-password\")]\n    public async Task<ActionResult<string>> ForgotPassword([FromQuery] string email)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(email);\n        if (user == null)\n        {\n            _logger.LogError(\"There are no users with email: {Email} but user is requesting password reset\", email);\n            return Ok(\"An email will be sent to the email if it exists in our database\");\n        }\n\n        var roles = await _userManager.GetRolesAsync(user);\n        if (!roles.Any(r => r is PolicyConstants.AdminRole or PolicyConstants.ChangePasswordRole))\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (string.IsNullOrEmpty(user.Email) || !user.EmailConfirmed)\n            return BadRequest(\"You do not have an email on account or it has not been confirmed\");\n\n        var token = await _userManager.GeneratePasswordResetTokenAsync(user);\n        var emailLink = GenerateEmailLink(token, \"confirm-reset-password\", user.Email);\n        _logger.LogCritical(\"[Forgot Password]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n        var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n        if (await _emailService.CheckIfAccessible(host))\n        {\n            await _emailService.SendPasswordResetEmail(new PasswordResetEmailDto()\n            {\n                EmailAddress = user.Email,\n                ServerConfirmationLink = emailLink,\n                InstallId = (await _unitOfWork.SettingsRepository.GetSettingAsync(ServerSettingKey.InstallId)).Value\n            });\n            return Ok(\"Email sent\");\n        }\n\n        return Ok(\"Your server is not accessible. The Link to reset your password is in the logs.\");\n    }\n\n    [HttpGet(\"email-confirmed\")]\n    public async Task<ActionResult<bool>> IsEmailConfirmed()\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized();\n\n        return Ok(user.EmailConfirmed);\n    }\n\n    [AllowAnonymous]\n    [HttpPost(\"confirm-migration-email\")]\n    public async Task<ActionResult<UserDto>> ConfirmMigrationEmail(ConfirmMigrationEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n        if (user == null) return BadRequest(\"Invalid credentials\");\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-migration-email email token is invalid\");\n            return BadRequest(\"Invalid credentials\");\n        }\n\n        await _unitOfWork.CommitAsync();\n\n        user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(user.UserName,\n            AppUserIncludes.UserPreferences);\n\n        // Perform Login code\n        return new UserDto\n        {\n            Username = user.UserName,\n            Email = user.Email,\n            Token = await _tokenService.CreateToken(user),\n            RefreshToken = await _tokenService.CreateRefreshToken(user),\n            ApiKey = user.ApiKey,\n            Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n        };\n    }\n\n    [HttpPost(\"resend-confirmation-email\")]\n    public async Task<ActionResult<string>> ResendConfirmationSendEmail([FromQuery] int userId)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(userId);\n        if (user == null) return BadRequest(\"User does not exist\");\n\n        if (string.IsNullOrEmpty(user.Email))\n            return BadRequest(\n                \"This user needs to migrate. Have them log out and login to trigger a migration flow\");\n        if (user.EmailConfirmed) return BadRequest(\"User already confirmed\");\n\n        var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n        var emailLink = GenerateEmailLink(token, \"confirm-email\", user.Email);\n        _logger.LogCritical(\"[Email Migration]: Email Link: {Link}\", emailLink);\n        _logger.LogCritical(\"[Email Migration]: Token {UserName}: {Token}\", user.UserName, token);\n        await _emailService.SendMigrationEmail(new EmailMigrationDto()\n        {\n            EmailAddress = user.Email,\n            Username = user.UserName,\n            ServerConfirmationLink = emailLink,\n            InstallId = (await _unitOfWork.SettingsRepository.GetSettingAsync(ServerSettingKey.InstallId)).Value\n        });\n\n\n        return Ok(emailLink);\n    }\n\n    private string GenerateEmailLink(string token, string routePart, string email, bool withHost = true)\n    {\n        var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n        if (withHost) return $\"{Request.Scheme}://{host}{Request.PathBase}/registration/{routePart}?token={HttpUtility.UrlEncode(token)}&email={HttpUtility.UrlEncode(email)}\";\n        return $\"registration/{routePart}?token={HttpUtility.UrlEncode(token)}&email={HttpUtility.UrlEncode(email)}\";\n    }\n\n    /// <summary>\n    /// This is similar to invite. Essentially we authenticate the user's password then go through invite email flow\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"migrate-email\")]\n    public async Task<ActionResult<string>> MigrateEmail(MigrateUserEmailDto dto)\n    {\n        // If there is an admin account already, return\n        var users = await _unitOfWork.UserRepository.GetAdminUsersAsync();\n        if (users.Any()) return BadRequest(\"Admin already exists\");\n\n        // Check if there is an existing invite\n        var emailValidationErrors = await _accountService.ValidateEmail(dto.Email);\n        if (emailValidationErrors.Any())\n        {\n            var invitedUser = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n            if (await _userManager.IsEmailConfirmedAsync(invitedUser))\n                return BadRequest($\"User is already registered as {invitedUser.UserName}\");\n\n            _logger.LogInformation(\"A user is attempting to login, but hasn't accepted email invite\");\n            return BadRequest(\"User is already invited under this email and has yet to accepted invite.\");\n        }\n\n\n        var user = await _userManager.Users\n            .Include(u => u.UserPreferences)\n            .SingleOrDefaultAsync(x => x.NormalizedUserName == dto.Username.ToUpper());\n        if (user == null) return BadRequest(\"Invalid username\");\n\n        var validPassword = await _signInManager.UserManager.CheckPasswordAsync(user, dto.Password);\n        if (!validPassword) return BadRequest(\"Your credentials are not correct\");\n\n        try\n        {\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n\n            user.Email = dto.Email;\n            if (!await ConfirmEmailToken(token, user)) return BadRequest(\"There was a critical error during migration\");\n            _unitOfWork.UserRepository.Update(user);\n\n            await _unitOfWork.CommitAsync();\n\n            return Ok();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an issue during email migration. Contact support\");\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        return BadRequest(\"There was an error setting up your account. Please check the logs\");\n    }\n\n    private async Task<bool> ConfirmEmailToken(string token, AppUser user)\n    {\n        var result = await _userManager.ConfirmEmailAsync(user, token);\n        if (result.Succeeded) return true;\n\n\n\n        _logger.LogCritical(\"[Account] Email validation failed\");\n        if (!result.Errors.Any()) return false;\n\n        foreach (var error in result.Errors)\n        {\n            _logger.LogCritical(\"[Account] Email validation error: {Message}\", error.Description);\n        }\n\n        return false;\n\n    }\n}\n", "namespace API.DTOs.Account;\n\npublic class UpdateEmailDto\n{\n    public string Email { get; set; }\n}\n", "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Net.Http;\nusing System.Runtime.InteropServices;\nusing System.Threading.Tasks;\nusing API.Data;\nusing API.Data.Repositories;\nusing API.DTOs.Stats;\nusing API.Entities.Enums;\nusing API.Entities.Enums.UserPreferences;\nusing Flurl.Http;\nusing Kavita.Common.EnvironmentInfo;\nusing Kavita.Common.Helpers;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Logging;\n\nnamespace API.Services.Tasks;\n\npublic interface IStatsService\n{\n    Task Send();\n    Task<ServerInfoDto> GetServerInfo();\n    Task SendCancellation();\n}\n/// <summary>\n/// This is for reporting to the stat server\n/// </summary>\npublic class StatsService : IStatsService\n{\n    private readonly ILogger<StatsService> _logger;\n    private readonly IUnitOfWork _unitOfWork;\n    private readonly DataContext _context;\n    private readonly IStatisticService _statisticService;\n    private const string ApiUrl = \"https://stats.kavitareader.com\";\n\n    public StatsService(ILogger<StatsService> logger, IUnitOfWork unitOfWork, DataContext context, IStatisticService statisticService)\n    {\n        _logger = logger;\n        _unitOfWork = unitOfWork;\n        _context = context;\n        _statisticService = statisticService;\n\n        FlurlHttp.ConfigureClient(ApiUrl, cli =>\n            cli.Settings.HttpClientFactory = new UntrustedCertClientFactory());\n    }\n\n    /// <summary>\n    /// Due to all instances firing this at the same time, we can DDOS our server. This task when fired will schedule the task to be run\n    /// randomly over a 6 hour spread\n    /// </summary>\n    public async Task Send()\n    {\n        var allowStatCollection = (await _unitOfWork.SettingsRepository.GetSettingsDtoAsync()).AllowStatCollection;\n        if (!allowStatCollection)\n        {\n            return;\n        }\n\n        await SendData();\n    }\n\n    /// <summary>\n    /// This must be public for Hangfire. Do not call this directly.\n    /// </summary>\n    // ReSharper disable once MemberCanBePrivate.Global\n    public async Task SendData()\n    {\n        var data = await GetServerInfo();\n        await SendDataToStatsServer(data);\n    }\n\n\n    private async Task SendDataToStatsServer(ServerInfoDto data)\n    {\n        var responseContent = string.Empty;\n\n        try\n        {\n            var response = await (ApiUrl + \"/api/v2/stats\")\n                .WithHeader(\"Accept\", \"application/json\")\n                .WithHeader(\"User-Agent\", \"Kavita\")\n                .WithHeader(\"x-api-key\", \"MsnvA2DfQqxSK5jh\")\n                .WithHeader(\"x-kavita-version\", BuildInfo.Version)\n                .WithHeader(\"Content-Type\", \"application/json\")\n                .WithTimeout(TimeSpan.FromSeconds(30))\n                .PostJsonAsync(data);\n\n            if (response.StatusCode != StatusCodes.Status200OK)\n            {\n                _logger.LogError(\"KavitaStats did not respond successfully. {Content}\", response);\n            }\n        }\n        catch (HttpRequestException e)\n        {\n            var info = new\n            {\n                dataSent = data,\n                response = responseContent\n            };\n\n            _logger.LogError(e, \"KavitaStats did not respond successfully. {Content}\", info);\n        }\n        catch (Exception e)\n        {\n            _logger.LogError(e, \"An error happened during the request to KavitaStats\");\n        }\n    }\n\n    public async Task<ServerInfoDto> GetServerInfo()\n    {\n        var serverSettings = await _unitOfWork.SettingsRepository.GetSettingsDtoAsync();\n\n        var serverInfo = new ServerInfoDto\n        {\n            InstallId = serverSettings.InstallId,\n            Os = RuntimeInformation.OSDescription,\n            KavitaVersion = serverSettings.InstallVersion,\n            DotnetVersion = Environment.Version.ToString(),\n            IsDocker = new OsInfo().IsDocker,\n            NumOfCores = Math.Max(Environment.ProcessorCount, 1),\n            UsersWithEmulateComicBook = await _context.AppUserPreferences.CountAsync(p => p.EmulateBook),\n            TotalReadingHours = await _statisticService.TimeSpentReadingForUsersAsync(ArraySegment<int>.Empty, ArraySegment<int>.Empty),\n\n            PercentOfLibrariesWithFolderWatchingEnabled = await GetPercentageOfLibrariesWithFolderWatchingEnabled(),\n            PercentOfLibrariesIncludedInRecommended = await GetPercentageOfLibrariesIncludedInRecommended(),\n            PercentOfLibrariesIncludedInDashboard = await GetPercentageOfLibrariesIncludedInDashboard(),\n            PercentOfLibrariesIncludedInSearch = await GetPercentageOfLibrariesIncludedInSearch(),\n\n            HasBookmarks = (await _unitOfWork.UserRepository.GetAllBookmarksAsync()).Any(),\n            NumberOfLibraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).Count(),\n            NumberOfCollections = (await _unitOfWork.CollectionTagRepository.GetAllTagsAsync()).Count(),\n            NumberOfReadingLists = await _unitOfWork.ReadingListRepository.Count(),\n            OPDSEnabled = serverSettings.EnableOpds,\n            NumberOfUsers = (await _unitOfWork.UserRepository.GetAllUsersAsync()).Count(),\n            TotalFiles = await _unitOfWork.LibraryRepository.GetTotalFiles(),\n            TotalGenres = await _unitOfWork.GenreRepository.GetCountAsync(),\n            TotalPeople = await _unitOfWork.PersonRepository.GetCountAsync(),\n            UsingSeriesRelationships = await GetIfUsingSeriesRelationship(),\n            StoreBookmarksAsWebP = serverSettings.ConvertBookmarkToWebP,\n            StoreCoversAsWebP = serverSettings.ConvertCoverToWebP,\n            MaxSeriesInALibrary = await MaxSeriesInAnyLibrary(),\n            MaxVolumesInASeries = await MaxVolumesInASeries(),\n            MaxChaptersInASeries = await MaxChaptersInASeries(),\n            MangaReaderBackgroundColors = await AllMangaReaderBackgroundColors(),\n            MangaReaderPageSplittingModes = await AllMangaReaderPageSplitting(),\n            MangaReaderLayoutModes = await AllMangaReaderLayoutModes(),\n            FileFormats = AllFormats(),\n            UsingRestrictedProfiles = await GetUsingRestrictedProfiles(),\n        };\n\n        var usersWithPref = (await _unitOfWork.UserRepository.GetAllUsersAsync(AppUserIncludes.UserPreferences)).ToList();\n        serverInfo.UsersOnCardLayout =\n            usersWithPref.Count(u => u.UserPreferences.GlobalPageLayoutMode == PageLayoutMode.Cards);\n        serverInfo.UsersOnListLayout =\n            usersWithPref.Count(u => u.UserPreferences.GlobalPageLayoutMode == PageLayoutMode.List);\n\n        var firstAdminUser = (await _unitOfWork.UserRepository.GetAdminUsersAsync()).FirstOrDefault();\n\n        if (firstAdminUser != null)\n        {\n            var firstAdminUserPref = (await _unitOfWork.UserRepository.GetPreferencesAsync(firstAdminUser.UserName));\n            var activeTheme = firstAdminUserPref.Theme ?? Seed.DefaultThemes.First(t => t.IsDefault);\n\n            serverInfo.ActiveSiteTheme = activeTheme.Name;\n            serverInfo.MangaReaderMode = firstAdminUserPref.ReaderMode;\n        }\n\n        return serverInfo;\n    }\n\n    public async Task SendCancellation()\n    {\n        _logger.LogInformation(\"Informing KavitaStats that this instance is no longer sending stats\");\n        var installId = (await _unitOfWork.SettingsRepository.GetSettingsDtoAsync()).InstallId;\n\n        var responseContent = string.Empty;\n\n        try\n        {\n            var response = await (ApiUrl + \"/api/v2/stats/opt-out?installId=\" + installId)\n                .WithHeader(\"Accept\", \"application/json\")\n                .WithHeader(\"User-Agent\", \"Kavita\")\n                .WithHeader(\"x-api-key\", \"MsnvA2DfQqxSK5jh\")\n                .WithHeader(\"x-kavita-version\", BuildInfo.Version)\n                .WithHeader(\"Content-Type\", \"application/json\")\n                .WithTimeout(TimeSpan.FromSeconds(30))\n                .PostAsync();\n\n            if (response.StatusCode != StatusCodes.Status200OK)\n            {\n                _logger.LogError(\"KavitaStats did not respond successfully. {Content}\", response);\n            }\n        }\n        catch (HttpRequestException e)\n        {\n            _logger.LogError(e, \"KavitaStats did not respond successfully. {Response}\", responseContent);\n        }\n        catch (Exception e)\n        {\n            _logger.LogError(e, \"An error happened during the request to KavitaStats\");\n        }\n    }\n\n    private async Task<float> GetPercentageOfLibrariesWithFolderWatchingEnabled()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        return libraries.Count(l => l.FolderWatching) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInRecommended()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInRecommended) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInDashboard()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInDashboard) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInSearch()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInSearch) / (1.0f * libraries.Count);\n    }\n\n    private Task<bool> GetIfUsingSeriesRelationship()\n    {\n        return _context.SeriesRelation.AnyAsync();\n    }\n\n    private async Task<int> MaxSeriesInAnyLibrary()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Series.AnyAsync()) return 0;\n        return await _context.Series\n            .Select(s => _context.Library.Where(l => l.Id == s.LibraryId).SelectMany(l => l.Series).Count())\n            .MaxAsync();\n    }\n\n    private async Task<int> MaxVolumesInASeries()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Volume.AnyAsync()) return 0;\n        return await _context.Volume\n            .Select(v => new\n            {\n                v.SeriesId,\n                Count = _context.Series.Where(s => s.Id == v.SeriesId).SelectMany(s => s.Volumes).Count()\n            })\n            .AsNoTracking()\n            .AsSplitQuery()\n            .MaxAsync(d => d.Count);\n    }\n\n    private async Task<int> MaxChaptersInASeries()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Chapter.AnyAsync()) return 0;\n        return await _context.Series\n            .AsNoTracking()\n            .AsSplitQuery()\n            .MaxAsync(s => s.Volumes\n                .Where(v => v.Number == 0)\n                .SelectMany(v => v.Chapters)\n                .Count());\n    }\n\n    private async Task<IEnumerable<string>> AllMangaReaderBackgroundColors()\n    {\n        return await _context.AppUserPreferences.Select(p => p.BackgroundColor).Distinct().ToListAsync();\n    }\n\n    private async Task<IEnumerable<PageSplitOption>> AllMangaReaderPageSplitting()\n    {\n        return await _context.AppUserPreferences.Select(p => p.PageSplitOption).Distinct().ToListAsync();\n    }\n\n\n    private async Task<IEnumerable<LayoutMode>> AllMangaReaderLayoutModes()\n    {\n        return await _context.AppUserPreferences.Select(p => p.LayoutMode).Distinct().ToListAsync();\n    }\n\n    private IEnumerable<FileFormatDto> AllFormats()\n    {\n        var results =  _context.MangaFile\n            .AsNoTracking()\n            .AsEnumerable()\n            .Select(m => new FileFormatDto()\n            {\n                Format = m.Format,\n                Extension = Path.GetExtension(m.FilePath)?.ToLowerInvariant()\n            })\n            .DistinctBy(f => f.Extension)\n            .ToList();\n\n        return results;\n    }\n\n    private Task<bool> GetUsingRestrictedProfiles()\n    {\n        return _context.Users.AnyAsync(u => u.AgeRestriction > AgeRating.NotApplicable);\n    }\n}\n", "import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { of, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Preferences } from '../_models/preferences/preferences';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { EVENTS, MessageHubService } from './message-hub.service';\nimport { ThemeService } from './theme.service';\nimport { InviteUserResponse } from '../_models/auth/invite-user-response';\nimport { UserUpdateEvent } from '../_models/events/user-update-event';\nimport { UpdateEmailResponse } from '../_models/auth/update-email-response';\nimport { AgeRating } from '../_models/metadata/age-rating';\nimport { AgeRestriction } from '../_models/metadata/age-restriction';\nimport { TextResonse } from '../_types/text-response';\n\nexport enum Role {\n  Admin = 'Admin',\n  ChangePassword = 'Change Password',\n  Bookmark = 'Bookmark',\n  Download = 'Download',\n  ChangeRestriction = 'Change Restriction' \n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService implements OnDestroy {\n\n  baseUrl = environment.apiUrl;\n  userKey = 'kavita-user';\n  public lastLoginKey = 'kavita-lastlogin';\n  currentUser: User | undefined;\n\n  // Stores values, when someone subscribes gives (1) of last values seen.\n  private currentUserSource = new ReplaySubject<User | undefined>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  /**\n   * SetTimeout handler for keeping track of refresh token call\n   */\n  private refreshTokenTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private readonly onDestroy = new Subject<void>();\n\n  constructor(private httpClient: HttpClient, private router: Router, \n    private messageHub: MessageHubService, private themeService: ThemeService) {\n      messageHub.messages$.pipe(filter(evt => evt.event === EVENTS.UserUpdate), \n        map(evt => evt.payload as UserUpdateEvent),\n        filter(userUpdateEvent => userUpdateEvent.userName === this.currentUser?.username),  \n        switchMap(() => this.refreshToken()))\n        .subscribe(() => {});\n    }\n  \n  ngOnDestroy(): void {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n  }\n\n  hasAdminRole(user: User) {\n    return user && user.roles.includes(Role.Admin);\n  }\n\n  hasChangePasswordRole(user: User) {\n    return user && user.roles.includes(Role.ChangePassword);\n  }\n\n  hasChangeAgeRestrictionRole(user: User) {\n    return user && user.roles.includes(Role.ChangeRestriction);\n  }\n\n  hasDownloadRole(user: User) {\n    return user && user.roles.includes(Role.Download);\n  }\n\n  hasBookmarkRole(user: User) {\n    return user && user.roles.includes(Role.Bookmark);\n  }\n\n  getRoles() {\n    return this.httpClient.get<string[]>(this.baseUrl + 'account/roles');\n  }\n\n  login(model: {username: string, password: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.messageHub.createHubConnection(user, this.hasAdminRole(user));\n        }\n      }),\n      takeUntil(this.onDestroy)\n    );\n  }\n\n  setCurrentUser(user?: User) {\n    if (user) {\n      user.roles = [];\n      const roles = this.getDecodedToken(user.token).role;\n      Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n\n      localStorage.setItem(this.userKey, JSON.stringify(user));\n      localStorage.setItem(this.lastLoginKey, user.username);\n      if (user.preferences && user.preferences.theme) {\n        this.themeService.setTheme(user.preferences.theme.name);\n      } else {\n        this.themeService.setTheme(this.themeService.defaultTheme);\n      }\n    } else {\n      this.themeService.setTheme(this.themeService.defaultTheme);\n    }\n\n    this.currentUser = user;\n    this.currentUserSource.next(user);\n    \n    if (this.currentUser !== undefined) {\n      this.startRefreshTokenTimer();\n    } else {\n      this.stopRefreshTokenTimer();\n    }\n  }\n\n  logout() {\n    localStorage.removeItem(this.userKey);\n    this.currentUserSource.next(undefined);\n    this.currentUser = undefined;\n    this.stopRefreshTokenTimer();\n    // Upon logout, perform redirection\n    this.router.navigateByUrl('/login');\n    this.messageHub.stopHubConnection();\n  }\n\n\n  /**\n   * Registers the first admin on the account. Only used for that. All other registrations must occur through invite\n   * @param model \n   * @returns \n   */\n  register(model: {username: string, password: string, email: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        return user;\n      }),\n      takeUntil(this.onDestroy)\n    );\n  }\n\n  isEmailConfirmed() {\n    return this.httpClient.get<boolean>(this.baseUrl + 'account/email-confirmed');\n  }\n\n  migrateUser(model: {email: string, username: string, password: string, sendEmail: boolean}) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/migrate-email', model, TextResonse);\n  }\n\n  confirmMigrationEmail(model: {email: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-migration-email', model);\n  }\n\n  resendConfirmationEmail(userId: number) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/resend-confirmation-email?userId=' + userId, {}, TextResonse);\n  }\n\n  inviteUser(model: {email: string, roles: Array<string>, libraries: Array<number>, ageRestriction: AgeRestriction}) {\n    return this.httpClient.post<InviteUserResponse>(this.baseUrl + 'account/invite', model);\n  }\n\n  confirmEmail(model: {email: string, username: string, password: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-email', model);\n  }\n\n  confirmEmailUpdate(model: {email: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-email-update', model);\n  }\n\n  /**\n   * Given a user id, returns a full url for setting up the user account\n   * @param userId \n   * @returns \n   */\n  getInviteUrl(userId: number, withBaseUrl: boolean = true) {\n    return this.httpClient.get<string>(this.baseUrl + 'account/invite-url?userId=' + userId + '&withBaseUrl=' + withBaseUrl, TextResonse);\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n\n  requestResetPasswordEmail(email: string) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/forgot-password?email=' + encodeURIComponent(email), {}, TextResonse);\n  }\n\n  confirmResetPasswordEmail(model: {email: string, token: string, password: string}) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/confirm-password-reset', model, TextResonse);\n  }\n\n  resetPassword(username: string, password: string, oldPassword: string) {\n    return this.httpClient.post(this.baseUrl + 'account/reset-password', {username, password, oldPassword}, TextResonse);\n  }\n\n  update(model: {email: string, roles: Array<string>, libraries: Array<number>, userId: number, ageRestriction: AgeRestriction}) {\n    return this.httpClient.post(this.baseUrl + 'account/update', model);\n  }\n\n  updateEmail(email: string) {\n    return this.httpClient.post<UpdateEmailResponse>(this.baseUrl + 'account/update/email', {email});\n  }\n\n  updateAgeRestriction(ageRating: AgeRating, includeUnknowns: boolean) {\n    return this.httpClient.post(this.baseUrl + 'account/update/age-restriction', {ageRating, includeUnknowns});\n  }\n\n  /**\n   * This will get latest preferences for a user and cache them into user store\n   * @returns \n   */\n  getPreferences() {\n    return this.httpClient.get<Preferences>(this.baseUrl + 'users/get-preferences').pipe(map(pref => {\n      if (this.currentUser !== undefined || this.currentUser != null) {\n        this.currentUser.preferences = pref;\n        this.setCurrentUser(this.currentUser);\n      }\n      return pref;\n    }), takeUntil(this.onDestroy));\n  }\n\n  updatePreferences(userPreferences: Preferences) {\n    return this.httpClient.post<Preferences>(this.baseUrl + 'users/update-preferences', userPreferences).pipe(map(settings => {\n      if (this.currentUser !== undefined || this.currentUser != null) {\n        this.currentUser.preferences = settings;\n        this.setCurrentUser(this.currentUser);\n      }\n      return settings;\n    }), takeUntil(this.onDestroy));\n  }\n\n  getUserFromLocalStorage(): User | undefined {\n\n    const userString = localStorage.getItem(this.userKey);\n    \n    if (userString) {\n      return JSON.parse(userString)\n    };\n\n    return undefined;\n  }\n\n  resetApiKey() {\n    return this.httpClient.post<string>(this.baseUrl + 'account/reset-api-key', {}, TextResonse).pipe(map(key => {\n      const user = this.getUserFromLocalStorage();\n      if (user) {\n        user.apiKey = key;\n\n        localStorage.setItem(this.userKey, JSON.stringify(user));\n    \n        this.currentUserSource.next(user);\n        this.currentUser = user;\n      }\n      return key;\n    }));\n  }\n\n  private refreshToken() {\n    if (this.currentUser === null || this.currentUser === undefined) return of();\n    \n    return this.httpClient.post<{token: string, refreshToken: string}>(this.baseUrl + 'account/refresh-token',\n     {token: this.currentUser.token, refreshToken: this.currentUser.refreshToken}).pipe(map(user => {\n      if (this.currentUser) {\n        this.currentUser.token = user.token;\n        this.currentUser.refreshToken = user.refreshToken;\n      }\n      \n      this.setCurrentUser(this.currentUser);\n      return user;\n    }));\n  }\n\n  private startRefreshTokenTimer() {\n    if (this.currentUser === null || this.currentUser === undefined) return;\n\n    if (this.refreshTokenTimeout !== undefined) {\n      this.stopRefreshTokenTimer();\n    }\n\n    const jwtToken = JSON.parse(atob(this.currentUser.token.split('.')[1]));\n    // set a timeout to refresh the token a minute before it expires\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\n    this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(() => {}), timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    if (this.refreshTokenTimeout !== undefined) {\n      clearTimeout(this.refreshTokenTimeout);\n    }\n  }\n\n\n\n}\n", "<div class=\"card mt-2\">\n    <div class=\"card-body\">\n        <div class=\"card-title\">\n            <div class=\"container-fluid row mb-2\">\n                <div class=\"col-10 col-sm-11\">\n                    <h4 id=\"email-card\">Email \n                        <ng-container *ngIf=\"!emailConfirmed\">\n                            <i class=\"fa-solid fa-circle ms-1 confirm-icon\" aria-hidden=\"true\" ngbTooltip=\"This email is not confirmed\"></i>\n                            <span class=\"visually-hidden\">This email is not confirmed</span>\n                        </ng-container>\n                    </h4>\n                </div>\n                <div class=\"col-1 text-end\">\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"toggleViewMode()\">{{isViewMode ? 'Edit' : 'Cancel'}}</button>\n                </div>\n            </div>\n        </div>\n        \n        <ng-container *ngIf=\"isViewMode\">\n            <div class=\"container-fluid row\">\n                <span class=\"col-12\">{{user?.email}}</span>  \n            </div>\n        </ng-container>\n\n        <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isViewMode\">\n            <ng-container>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errors.length > 0\">\n                    <div *ngFor=\"let error of errors\">{{error}}</div>\n                </div>\n                <form [formGroup]=\"form\">\n                    <div class=\"mb-3\">\n                        <label for=\"email\" class=\"form-label visually-hidden\">Email</label>\n                        <input class=\"form-control custom-input\" type=\"email\" id=\"email\" formControlName=\"email\"\n                         [class.is-invalid]=\"form.get('email')?.invalid && form.get('email')?.touched\">\n                        <div id=\"email-validations\" class=\"invalid-feedback\" *ngIf=\"form.dirty || form.touched\">\n                            <div *ngIf=\"form.get('email')?.errors?.required\">\n                                This field is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end mb-3\">\n                        <button type=\"button\" class=\"flex-fill btn btn-secondary me-2\" aria-describedby=\"email-card\" (click)=\"resetForm()\">Reset</button>\n                        <button type=\"submit\" class=\"flex-fill btn btn-primary\" aria-describedby=\"email-card\" (click)=\"saveForm()\" [disabled]=\"!form.valid || !(form.dirty || form.touched)\">Save</button>\n                    </div>\n                </form>\n            </ng-container>\n\n            <ng-container *ngIf=\"emailLink !== ''\">\n                <h4>Email Updated</h4>\n                <p>You can use the following link below to confirm the email for your account. \n                    If your server is externally accessible, an email will have been sent to the email and the link can be used to confirm the email.\n                </p>\n                <a class=\"email-link\" href=\"{{emailLink}}\" target=\"_blank\" rel=\"noopener noreferrer\">Setup user's account</a>\n                <app-api-key title=\"Invite Url\" tooltipText=\"Copy this and paste in a new tab. You may need to log out.\" [showRefresh]=\"false\" [transform]=\"makeLink\"></app-api-key>\n            </ng-container>\n            \n            <ng-template #noPermission>\n                <p>You do not have permission to change your password. Reach out to the admin of the server.</p>\n            </ng-template>\n        </div>\n\n        \n    </div>\n    \n\n</div>\n\n", "import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of, Subject, takeUntil, shareReplay, map, tap, take } from 'rxjs';\nimport { UpdateEmailResponse } from 'src/app/_models/auth/update-email-response';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n  styleUrls: ['./change-email.component.scss']\n})\nexport class ChangeEmailComponent implements OnInit, OnDestroy {\n\n  form: FormGroup = new FormGroup({});\n  user: User | undefined = undefined;\n  hasChangePasswordAbility: Observable<boolean> = of(false);\n  passwordsMatch = false;\n  errors: string[] = [];\n  isViewMode: boolean = true;\n  emailLink: string = '';\n  emailConfirmed: boolean = true;\n\n  public get email() { return this.form.get('email'); }\n\n  private onDestroy = new Subject<void>();\n\n  makeLink: (val: string) => string = (val: string) => {return this.emailLink};\n\n  constructor(public accountService: AccountService, private toastr: ToastrService, private readonly cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.accountService.currentUser$.pipe(takeUntil(this.onDestroy), shareReplay(), take(1)).subscribe(user => {\n      this.user = user;\n      this.form.addControl('email', new FormControl(user?.email, [Validators.required, Validators.email]));\n      this.cdRef.markForCheck();\n      this.accountService.isEmailConfirmed().subscribe((confirmed) => {\n        this.emailConfirmed = confirmed;\n        this.cdRef.markForCheck();\n      });\n    });\n\n    \n  }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n  }\n\n  resetForm() {\n    this.form.get('email')?.setValue(this.user?.email);\n    this.errors = [];\n    this.cdRef.markForCheck();\n  }\n\n  saveForm() {\n    if (this.user === undefined) { return; }\n\n    const model = this.form.value;\n    this.errors = [];\n    this.accountService.updateEmail(model.email).subscribe((updateEmailResponse: UpdateEmailResponse) => {\n      if (updateEmailResponse.emailSent) {\n        if (updateEmailResponse.hadNoExistingEmail) {\n          this.toastr.success('An email has been sent to ' + model.email + ' for confirmation.');\n        } else {\n          this.toastr.success('An email has been sent to your old email address for confirmation');\n        }\n      } else {\n        this.toastr.success('The server is not publicly accessible. Ask the admin to fetch your confirmation link from the logs');\n      }\n      \n      this.resetForm();\n      this.isViewMode = true;\n    }, err => {\n      this.errors = err;\n    })\n  }\n\n  toggleViewMode() {\n    this.isViewMode = !this.isViewMode;\n    this.resetForm();\n  }\n\n}\n", "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Kavita\",\n    \"description\": \"Kavita provides a set of APIs that are authenticated by JWT. JWT token can be copied from local storage.\",\n    \"license\": {\n      \"name\": \"GPL-3.0\",\n      \"url\": \"https://github.com/Kareadita/Kavita/blob/develop/LICENSE\"\n    },\n    \"version\": \"0.6.1.27\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"{protocol}://{hostpath}\",\n      \"variables\": {\n        \"protocol\": {\n          \"default\": \"http\",\n          \"enum\": [\n            \"http\",\n            \"https\"\n          ]\n        },\n        \"hostpath\": {\n          \"default\": \"localhost:5000\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/api/Account/reset-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Update a user's password\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Register the first user (admin) on the server. Will not do anything if an admin is already confirmed\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Perform a login. Will send JWT Token of the logged in user back.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Refreshes the user's JWT token\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Get All Roles back. See API.Constants.PolicyConstants\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/reset-api-key\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Resets the API Key assigned with a user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/update/email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Initiates the flow to update a user's email address. The email address is not changed in this API. A confirmation link is sent/dumped which will\\r\\nvalidate the email. It must be confirmed for the email to update.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/update/age-restriction\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Update the user account. This can only affect Username, Email (will require confirming), Roles, and Library access.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/invite-url\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Requests the Invite Url for the UserId. Will return error if user is already validated.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"withBaseUrl\",\n            \"in\": \"query\",\n            \"description\": \"Include the \\\"https://ip:port/\\\" in the generated link\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/invite\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Invites a user to the server. Will generate a setup link for continuing setup. If the server is not accessible, no\\r\\nemail will be sent.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Last step in authentication flow, confirms the email token for email\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-email-update\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Final step in email update change. Given a confirmation token and the email, this will finish the email change.\",\n        \"description\": \"This will force connected clients to re-authenticate\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-password-reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/forgot-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Will send user a link to update their password to their email or prompt them if not accessible\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/email-confirmed\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-migration-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/resend-confirmation-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/migrate-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"This is similar to invite. Essentially we authenticate the user's password then go through invite email flow\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Admin/exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin\"\n        ],\n        \"summary\": \"Checks if an admin exists on the system. This is essentially a check to validate if the system has been setup.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"Retrieves information for the PDF and Epub reader\",\n        \"description\": \"This only applies to Epub or PDF files\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-resources\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This is an entry point to fetch resources from within an epub chapter/book.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/chapters\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This will return a list of mappings from ID -> page num. ID will be the xhtml key and page num will be the reading order\\r\\nthis is used to rewrite anchors in the book text so that we always load properly in our reader.\",\n        \"description\": \"This is essentially building the table of contents\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-page\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This returns a single page within the epub book. All html will be rewritten to be scoped within our reader,\\r\\nall css is scoped, etc.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Return a list of all collection tags on the server\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Searches against the collection tags on the DB and returns matches that meet the search criteria.\\r\\n<remarks>Search strings will be cleaned of certain fields, like %</remarks>\",\n        \"parameters\": [\n          {\n            \"name\": \"queryString\",\n            \"in\": \"query\",\n            \"description\": \"Search term\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Checks if a collection exists with the name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Updates an existing tag with a new title, promotion status, and summary.\\r\\n<remarks>UI does not contain controls to update title</remarks>\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Collection/update-for-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Adds a collection tag onto multiple Series. If tag id is 0, this will create a new tag.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Collection/update-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"For a given tag, update the summary if summary has changed and remove a set of series from the tag.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device/create\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device\": {\n      \"delete\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"summary\": \"Deletes the device from the user\",\n        \"parameters\": [\n          {\n            \"name\": \"deviceId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Device/send-to\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/volume-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a given volume, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/chapter-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a given chapter, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/series-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a series, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/volume\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Downloads all chapters within a volume. If the chapters are multiple zips, they will all be zipped up.\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Returns the zip for a single chapter. If the chapter contains multiple files, they will be zipped.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/series\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Downloads all bookmarks in a zip for\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Health\": {\n      \"get\": {\n        \"tags\": [\n          \"Health\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/chapter-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/library-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Library\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/volume-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Volume\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/series-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"Id of Series\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/collection-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Collection Tag\",\n        \"parameters\": [\n          {\n            \"name\": \"collectionTagId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/readinglist-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for a Reading List\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/bookmark\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns image for a given bookmark page\",\n        \"description\": \"This request is served unauthenticated, but user must be passed via api key to validate\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pageNum\",\n            \"in\": \"query\",\n            \"description\": \"Starts at 0\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"API Key for user. Needed to authenticate request\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/cover-upload\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns a temp coverupload image\",\n        \"parameters\": [\n          {\n            \"name\": \"filename\",\n            \"in\": \"query\",\n            \"description\": \"Filename of file. This is used with upload/upload-by-url\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/create\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Creates a new Library. Upon library creation, adds new library to all Admin accounts.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/list\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Returns a list of directories for a given path. If path is empty, returns root drives.\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/jump-bar\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/grant-access\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"force\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/refresh-metadata\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"force\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/analyze\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/scan-folder\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Given a valid path, will invoke either a Scan Series or Scan Library. If the folder does not exist within Kavita, the request will be ignored\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Checks if the library name exists or not\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Updates an existing Library with new name, folders, and/or type.\",\n        \"description\": \"Any folder or type change will invoke a scan.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/type\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/genres\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches genres from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all genres\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/people\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches people from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all people\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all tags from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all tags\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/age-ratings\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all age ratings from the instance\",\n        \"description\": \"This API is cached for 1 hour, varying by libraryIds\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all ratings\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/publication-status\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all publication status' from the instance\",\n        \"description\": \"This API is cached for 1 hour, varying by libraryIds\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all publication status\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/languages\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all age languages from the libraries passed (or if none passed, all in the server)\",\n        \"description\": \"This does not perform RBS for the user if they have Library access due to the non-sensitive nature of languages\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all ratings\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/all-languages\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/chapter-summary\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Returns summary for the chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}\": {\n      \"post\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/libraries\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/collections\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/collections/{collectionId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"collectionId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/reading-list\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/reading-list/{readingListId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/libraries/{libraryId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/recently-added\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/on-deck\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}/download/{filename}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"summary\": \"Downloads a file\",\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"description\": \"User's API Key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"filename\",\n            \"in\": \"path\",\n            \"description\": \"Not used. Only for Chunky to allow download links\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/image\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/favicon\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Plugin/authenticate\": {\n      \"post\": {\n        \"tags\": [\n          \"Plugin\"\n        ],\n        \"summary\": \"Authenticate with the Server given an apiKey. This will log you in by returning the user object and the JWT token.\",\n        \"description\": \"This API is not fully built out and may require more information in later releases\",\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"API key which will be used to authenticate and return a valid user token back\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pluginName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Plugin\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/pdf\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the PDF for the chapterId.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/image\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns an image for a given chapter. Will perform bounding checks\",\n        \"description\": \"This will cache the chapter images for reading\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"Chapter Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Page in question\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"Should Kavita extract pdf into images. Defaults to false.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark-image\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns an image for a given bookmark series. Side effect: This will cache the bookmark images for reading.\",\n        \"description\": \"We must use api key as bookmarks could be leaked to other users via the API\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"Api key for the user the bookmarks are on\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/file-dimensions\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the file dimensions for all pages in a chapter. If the underlying chapter is PDF, use extractPDF to unpack as images.\",\n        \"description\": \"This has a side effect of caching the images.\\r\\n            This will only be populated on archive filetypes and not in bookmark mode\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/chapter-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns various information about a Chapter. Side effect: This will cache the chapter images for reading.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"Should Kavita extract pdf into images. Defaults to false.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"includeDimensions\",\n            \"in\": \"query\",\n            \"description\": \"Include file dimensions. Only useful for image based reading\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns various information about all bookmark files for a Series. Side effect: This will cache the bookmark images for reading.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"Series Id for all bookmarks\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks a Series as read. All volumes and chapters will be marked as read during this process.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks a Series as Unread. All volumes and chapters will be marked as unread during this process.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-volume-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a volume as unread\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-volume-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a volume as Read\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of volumes as Read. All volumes must belong to the same Series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of volumes as Unread. All volumes must belong to the same Series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-series-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of series as Read.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-series-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of series as Unread.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/get-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns Progress (page number) for a chapter for the logged in user\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/progress\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Save page against Chapter for logged in user\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/continue-point\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Continue point is the chapter which you should start reading again from. If there is no progress on a series, then the first chapter will be returned (non-special unless only specials).\\r\\nOtherwise, loop through the chapters and volumes in order to find the next chapter which has progress.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/has-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns if the user has reading progress on the Series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-chapter-until-as-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks every chapter that is sorted below the passed number as Read. This will not mark any specials as read.\",\n        \"description\": \"This is built for Tachiyomi and is not expected to be called by any other place\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/api/Reader/chapter-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns a list of bookmarked pages for a given Chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/all-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns a list of all bookmarked pages for a User\",\n        \"requestBody\": {\n          \"description\": \"Only supports SeriesNameQuery\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/remove-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes all bookmarks for all chapters linked to a Series\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/bulk-remove-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes all bookmarks for all chapters linked to a Series\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/volume-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns all bookmarked pages for a given volume\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/series-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns all bookmarked pages for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Bookmarks a page against a Chapter\",\n        \"description\": \"This has a side effect of caching the chapter files to disk\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/unbookmark\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes a bookmarked page for a Chapter\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/next-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the next logical chapter from the series.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/prev-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the previous logical chapter from the series.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/time-left\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"For the current user, returns an estimate on how long it would take to finish reading the series.\",\n        \"description\": \"For Epubs, this does not check words inside a chapter due to overhead so may not work in all cases.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Fetches a single Reading List\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Deletes a reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/lists\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns reading lists (paginated) for a given user.\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"includePromoted\",\n            \"in\": \"query\",\n            \"description\": \"Include Promoted Reading Lists along with user's Reading Lists. Defaults to true\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/lists-for-series\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns all Reading Lists the user has access to that have a series within it.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/items\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Fetches all reading list items for a given list including rich metadata around series, volume, chapters, and progress\",\n        \"description\": \"This call is expensive\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-position\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Updates an items position\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/delete-item\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Deletes a list item from the list. Will reorder all item positions afterwards\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/remove-read\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Removes all entries that are fully read from the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/create\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Creates a new List with a unique title. Returns the new ReadingList back\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Update the properties (title, summary) of a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-series\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a Series to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-multiple\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a list of volumes and chapters to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-multiple-series\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a list of series to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-volume\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-chapter\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/next-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns the next chapter within the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/prev-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns the prev chapter within the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Checks if a reading list exists with the name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/quick-reads\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Quick Reads are series that should be readable in less than 10 in total and are not Ongoing in release.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/quick-catchup-reads\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Quick Catchup Reads are series that should be readable in less than 10 in total and are Ongoing in release.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/highly-rated\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Highly Rated based on other users ratings. Will pull series with ratings > 4.0, weighted by count of other users.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/more-in\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Chooses a random genre and shows series that are in that without reading progress\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"genreId\",\n            \"in\": \"query\",\n            \"description\": \"Genre Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/rediscover\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Series that are fully read by the user in no particular order\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/series-for-mangafile\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Returns the series for the MangaFile id. If the user does not have access (shouldn't happen by the UI),\\r\\nthen null is returned\",\n        \"parameters\": [\n          {\n            \"name\": \"mangaFileId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/series-for-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Returns the series for the Chapter id. If the user does not have access (shouldn't happen by the UI),\\r\\nthen null is returned\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"queryString\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/{seriesId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches a Series for a given Id\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"description\": \"Series Id to fetch details for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/delete-multiple\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/volumes\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns All volumes for a series with progress information and Chapters\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/volume\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/chapter-metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/update-rating\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/recently-added\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/recently-updated-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/all\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/on-deck\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches series that are on deck aka have progress on them.\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Default of 0 meaning all libraries\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/refresh-metadata\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Runs a Cover Image Generation task\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Scan a series and force each file to be updated. This should be invoked via the User, hence why we force.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/analyze\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Run a file analysis on the series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns metadata for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Update series metadata\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/series-by-collection\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns all Series grouped by the passed Collection Id with Pagination.\",\n        \"parameters\": [\n          {\n            \"name\": \"collectionId\",\n            \"in\": \"query\",\n            \"description\": \"Collection Id to pull series from\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/series-by-ids\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches Series for a set of Ids. This will check User for permission access and filter out any Ids that don't exist or\\r\\nthe user does not have access to.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/age-rating\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Get the age rating for the API.Entities.Enums.AgeRating enum value\",\n        \"description\": \"This is cached for an hour\",\n        \"parameters\": [\n          {\n            \"name\": \"ageRating\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/series-detail\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Get a special DTO for Series Detail page.\",\n        \"description\": \"Do not rely on this API externally. May change without hesitation.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/related\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches the related series for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"relation\",\n            \"in\": \"query\",\n            \"description\": \"Type of Relationship to pull back\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RelationKind\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/all-related\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns all related series against the passed series Id\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/update-related\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Update the relations attached to the Series. Does not generate associated Sequel/Prequel pairs on target series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/restart\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Attempts to Restart the server. Does not work, will shutdown the instance.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/clear-cache\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc cleanup of Cache\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/cleanup-want-to-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc cleanup of Want To Read, by removing want to read series for users, where the series are fully read and in Completed publication status.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/backup-db\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc backup of the Database\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/analyze-files\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"This is a one time task that needs to be ran for v0.7 statistics to work\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/server-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Returns non-sensitive information about the current system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/convert-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Triggers the scheduling of the convert bookmarks job. Only one job will run at a time.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/convert-covers\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Triggers the scheduling of the convert covers job. Only one job will run at a time.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/check-update\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Checks for updates, if no updates that are > current version installed, returns null\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/changelog\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/accessible\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Is this server accessible to the outside net\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/jobs\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/base-url\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/reset-email-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Resets the email service url\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/test-email-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/task-frequencies\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/library-types\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/log-levels\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/opds-enabled\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/user/{userId}/read\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/publication-status\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/manga-format\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/top/years\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/top/users\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns users with the top reads in the server\",\n        \"parameters\": [\n          {\n            \"name\": \"days\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/file-breakdown\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"A breakdown of different files, their size, and format\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/reading-count-by-day\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns reading history events for a give or all users, broken up by day, and format\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If 0, defaults to all users, else just userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"days\",\n            \"in\": \"query\",\n            \"description\": \"If 0, defaults to all time, else just those days asked for\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/day-breakdown\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/user/reading-history\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/pages-per-year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns a count of pages read per year for a given userId.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If userId is 0 and user is not an admin, API will default to userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/words-per-year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns a count of words read per year for a given userId.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If userId is 0 and user is not an admin, API will default to userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Tachiyomi/latest-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Tachiyomi\"\n        ],\n        \"summary\": \"Given the series Id, this should return the latest chapter that has been fully read.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Tachiyomi/mark-chapter-until-as-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Tachiyomi\"\n        ],\n        \"summary\": \"Marks every chapter that is sorted below the passed number as Read. This will not mark any specials as read.\",\n        \"description\": \"This is built for Tachiyomi and is not expected to be called by any other place\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Theme\": {\n      \"get\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Theme/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Theme/update-default\": {\n      \"post\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Theme/download-content\": {\n      \"get\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Returns css content to the UI. UI is expected to escape the content\",\n        \"parameters\": [\n          {\n            \"name\": \"themeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Upload/upload-by-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"This stores a file (image) in temp directory for use in a cover image replacement flow.\\r\\nThis is automatically cleaned up.\",\n        \"requestBody\": {\n          \"description\": \"Escaped url to download from\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Upload/series\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces series cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/collection\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces collection tag cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/reading-list\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces reading list cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/chapter\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/library\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces library cover image with a base64 encoded image. If empty string passed, will reset to null.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/reset-chapter-lock\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.\",\n        \"requestBody\": {\n          \"description\": \"Does not use Url property\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Users/delete-user\": {\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Users\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/pending\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/myself\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/has-reading-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/has-library-access\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/update-preferences\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/get-preferences\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Returns the preferences of the user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/names\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Returns a list of the user names within the system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/want-to-read\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Return all Series that are in the current logged in user's Want to Read list, filtered\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/want-to-read/add-series\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Given a list of Series Ids, add them to the current logged in user's Want To Read list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/want-to-read/remove-series\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Given a list of Series Ids, remove them from the current logged in user's Want To Read list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AgeRating\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12,\n          13,\n          14,\n          -1\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents Age Rating for content.\",\n        \"format\": \"int32\"\n      },\n      \"AgeRatingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AgeRestrictionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"includeUnknowns\": {\n            \"type\": \"boolean\",\n            \"description\": \"Are Unknowns explicitly allowed against age rating\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppRole\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"concurrencyStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"userRoles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRole\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedUserName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedEmail\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"emailConfirmed\": {\n            \"type\": \"boolean\"\n          },\n          \"passwordHash\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"securityStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"concurrencyStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"phoneNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"phoneNumberConfirmed\": {\n            \"type\": \"boolean\"\n          },\n          \"twoFactorEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"lockoutEnd\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lockoutEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"accessFailedCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Library\"\n            },\n            \"nullable\": true\n          },\n          \"userRoles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRole\"\n            },\n            \"nullable\": true\n          },\n          \"progresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserProgress\"\n            },\n            \"nullable\": true\n          },\n          \"ratings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRating\"\n            },\n            \"nullable\": true\n          },\n          \"userPreferences\": {\n            \"$ref\": \"#/components/schemas/AppUserPreferences\"\n          },\n          \"bookmarks\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserBookmark\"\n            },\n            \"description\": \"Bookmarks associated with this User\",\n            \"nullable\": true\n          },\n          \"readingLists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingList\"\n            },\n            \"description\": \"Reading lists associated with this user\",\n            \"nullable\": true\n          },\n          \"wantToRead\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Series\"\n            },\n            \"description\": \"A list of Series the user want's to read\",\n            \"nullable\": true\n          },\n          \"devices\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Device\"\n            },\n            \"description\": \"A list of Devices which allows the user to send files to\",\n            \"nullable\": true\n          },\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"description\": \"An API Key to interact with external services, like OPDS\",\n            \"nullable\": true\n          },\n          \"confirmationToken\": {\n            \"type\": \"string\",\n            \"description\": \"The confirmation token for the user (invite). This will be set to null after the user confirms.\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"ageRestrictionIncludeUnknowns\": {\n            \"type\": \"boolean\",\n            \"description\": \"If an age rating restriction is applied to the account, if Unknowns should be allowed for the user. Defaults to false.\"\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserBookmark\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"Filename in the Bookmark Directory\",\n            \"nullable\": true\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a saved page in a Chapter entity for a given user.\"\n      },\n      \"AppUserPreferences\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"scalingOption\": {\n            \"$ref\": \"#/components/schemas/ScalingOption\"\n          },\n          \"pageSplitOption\": {\n            \"$ref\": \"#/components/schemas/PageSplitOption\"\n          },\n          \"readerMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"autoCloseMenu\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Allow the menu to close after 6 seconds without interaction\"\n          },\n          \"showScreenHints\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Show screen hints to the user on some actions, ie) pagination direction change\"\n          },\n          \"emulateBook\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Emulate a book by applying a shadow effect on the pages\"\n          },\n          \"layoutMode\": {\n            \"$ref\": \"#/components/schemas/LayoutMode\"\n          },\n          \"backgroundColor\": {\n            \"type\": \"string\",\n            \"description\": \"Manga Reader Option: Background color of the reader\",\n            \"nullable\": true\n          },\n          \"bookReaderMargin\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override extra Margin\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderLineSpacing\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override line-height\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override font size\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontFamily\": {\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: Maps to the default Kavita font-family (inherit) or an override\",\n            \"nullable\": true\n          },\n          \"bookReaderTapToPaginate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: Allows tapping on side of screens to paginate\"\n          },\n          \"bookReaderReadingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/SiteTheme\"\n          },\n          \"bookThemeName\": {\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: The color theme to decorate the book contents\",\n            \"nullable\": true\n          },\n          \"bookReaderLayoutMode\": {\n            \"$ref\": \"#/components/schemas/BookPageLayoutMode\"\n          },\n          \"bookReaderImmersiveMode\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: A flag that hides the menu-ing system behind a click on the screen. This should be used with tap to paginate, but the app doesn't enforce this.\"\n          },\n          \"globalPageLayoutMode\": {\n            \"$ref\": \"#/components/schemas/PageLayoutMode\"\n          },\n          \"blurUnreadSummaries\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: If unread summaries should be blurred until expanded or unless user has read it already\"\n          },\n          \"promptForDownloadSize\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita prompt user to confirm downloads that are greater than 100 MB.\"\n          },\n          \"noTransitions\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita disable CSS transitions\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserProgress\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of Entity\",\n            \"format\": \"int32\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Pages Read for given Chapter\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"description\": \"Chapter\",\n            \"format\": \"int32\"\n          },\n          \"bookScrollId\": {\n            \"type\": \"string\",\n            \"description\": \"For Book Reader, represents the nearest passed anchor on the screen that can be used to resume scroll point\\r\\non next load\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"When this was first created\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last date this was updated\",\n            \"format\": \"date-time\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"description\": \"User this progress belongs to\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents the progress a single user has on a given Chapter.\"\n      },\n      \"AppUserRating\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"rating\": {\n            \"type\": \"integer\",\n            \"description\": \"A number between 0-5 that represents how good a series is.\",\n            \"format\": \"int32\"\n          },\n          \"review\": {\n            \"type\": \"string\",\n            \"description\": \"A short summary the user can write when giving their review.\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserRole\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"roleId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/AppRole\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookChapterItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Chapter\",\n            \"nullable\": true\n          },\n          \"part\": {\n            \"type\": \"string\",\n            \"description\": \"A part represents the id of the anchor so we can scroll to it. 01_values.xhtml#h_sVZPaxUSy/\",\n            \"nullable\": true\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"Page Number to load for the chapter\",\n            \"format\": \"int32\"\n          },\n          \"children\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BookChapterItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\"\n          },\n          \"chapterTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPageLayoutMode\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"BookmarkDto\": {\n        \"required\": [\n          \"chapterId\",\n          \"page\",\n          \"seriesId\",\n          \"volumeId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookmarkInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BulkRemoveBookmarkForSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Chapter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"range\": {\n            \"type\": \"string\",\n            \"description\": \"Range of numbers. Chapter 2-4 -> \\\"2-4\\\". Chapter 2 -> \\\"2\\\".\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"Smallest number of the Range. Can be a partial like Chapter 4.5\",\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFile\"\n            },\n            \"description\": \"The files that represent this Chapter\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Relative path to the (managed) image file representing the cover image\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages in all MangaFiles\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this Chapter contains files that could only be identified as Series or has Special Identifier from filename\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Used for books/specials to display custom title. For non-specials/books, will be set to API.Entities.Chapter.Range\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"titleName\": {\n            \"type\": \"string\",\n            \"description\": \"Chapter title\",\n            \"nullable\": true\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"Date which chapter was released\",\n            \"format\": \"date-time\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"Summary for the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language for the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues or volumes in the series\",\n            \"format\": \"int32\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of the Total Count (progress the Series is complete)\",\n            \"format\": \"int32\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this chapter.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"people\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Person\"\n            },\n            \"description\": \"All people attached at a Chapter level. Usually Comics will have different people per issue.\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Genre\"\n            },\n            \"description\": \"Genres for the Chapter\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"nullable\": true\n          },\n          \"volume\": {\n            \"$ref\": \"#/components/schemas/Volume\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ChapterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"range\": {\n            \"type\": \"string\",\n            \"description\": \"Range of chapters. Chapter 2-4 -> \\\"2-4\\\". Chapter 2 -> \\\"2\\\".\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"Smallest number of the Range.\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages in all MangaFiles\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this Chapter contains files that could only be identified as Series or has Special Identifier from filename\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Used for books/specials to display custom title. For non-specials/books, will be set to API.DTOs.ChapterDto.Range\",\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFileDto\"\n            },\n            \"description\": \"The files that represent this Chapter\",\n            \"nullable\": true\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Calculated at API time. Number of pages read for this Chapter for logged in user.\",\n            \"format\": \"int32\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the Cover Image is locked for this entity\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume Id this Chapter belongs to\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"When chapter was created\",\n            \"format\": \"date-time\"\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"When the chapter was released.\",\n            \"format\": \"date-time\"\n          },\n          \"titleName\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"Summary of the Chapter\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total words in a Chapter (books only)\",\n            \"format\": \"int64\"\n          },\n          \"volumeTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Formatted Volume title ie) Volume 2.\",\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Chapter is the lowest grouping of a reading medium. A Chapter contains a set of MangaFiles which represents the underlying\\r\\nfile (abstracted from type).\"\n      },\n      \"ChapterInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"description\": \"The Chapter Number\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"description\": \"The Volume Number\",\n            \"nullable\": true\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume entity Id\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"description\": \"Series Name\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series entity Id\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library entity Id\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"chapterTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Chapter's title if set via ComicInfo.xml (Title field)\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Number of pages in this Chapter\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File name of the chapter\",\n            \"nullable\": true\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this is marked as a special in Kavita\"\n          },\n          \"subtitle\": {\n            \"type\": \"string\",\n            \"description\": \"The subtitle to render on the reader\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Series Title\",\n            \"nullable\": true\n          },\n          \"pageDimensions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileDimensionDto\"\n            },\n            \"description\": \"List of all files with their inner archive structure maintained in filename and dimensions\",\n            \"nullable\": true\n          },\n          \"doublePairs\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"For Double Page reader, this will contain snap points to ensure the reader always resumes on correct page\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Information about the Chapter for the Reader to render\"\n      },\n      \"CollectionTag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Visible title of the Tag\",\n            \"nullable\": true\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations.\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the tag\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"description\": \"A normalized string used to check if the tag already exists in the DB\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"A promoted collection tag will allow all linked seriesMetadata's Series to show for all users.\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"description\": \"Not Used due to not using concurrency update\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a user entered field that is used as a tagging and grouping mechanism\"\n      },\n      \"CollectionTagBulkAddDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionTagId\": {\n            \"type\": \"integer\",\n            \"description\": \"Collection Tag Id\",\n            \"format\": \"int32\"\n          },\n          \"collectionTagTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"Series Ids to add onto Collection Tag\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CollectionTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"The cover image string. This is used on Frontend to show or hide the Cover Image\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmEmailDto\": {\n        \"required\": [\n          \"email\",\n          \"password\",\n          \"token\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmEmailUpdateDto\": {\n        \"required\": [\n          \"email\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmMigrationEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmPasswordResetDto\": {\n        \"required\": [\n          \"email\",\n          \"password\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateDeviceDto\": {\n        \"required\": [\n          \"emailAddress\",\n          \"name\",\n          \"platform\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"emailAddress\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateLibraryDto\": {\n        \"required\": [\n          \"folders\",\n          \"name\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folders\": {\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateReadingListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DateTimePagesReadOnADayCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The day of the readings\",\n            \"format\": \"date-time\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of pages read\",\n            \"format\": \"int64\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DayOfWeek\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"DayOfWeekStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/DayOfWeek\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DeleteSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Device\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"ipAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Last Seen IP Address of the device\",\n            \"nullable\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A name given to this device\",\n            \"nullable\": true,\n            \"example\": \"Pixel 3a, John's Kindle\"\n          },\n          \"emailAddress\": {\n            \"type\": \"string\",\n            \"description\": \"An email address associated with the device (ie Kindle). Will be used with Send to functionality\",\n            \"nullable\": true\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"lastUsed\": {\n            \"type\": \"string\",\n            \"description\": \"Last time this device was used to send a file\",\n            \"format\": \"date-time\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Device is an entity that can receive data from Kavita (kindle)\"\n      },\n      \"DeviceDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The device Id\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A name given to this device\",\n            \"nullable\": true,\n            \"example\": \"Pixel 3a, John's Kindle\"\n          },\n          \"emailAddress\": {\n            \"type\": \"string\",\n            \"description\": \"An email address associated with the device (ie Kindle). Will be used with Send to functionality\",\n            \"nullable\": true\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"lastUsed\": {\n            \"type\": \"string\",\n            \"description\": \"Last time this device was used to send a file\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Device is an entity that can receive data from Kavita (kindle)\"\n      },\n      \"DevicePlatform\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"DirectoryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the directory\",\n            \"nullable\": true\n          },\n          \"fullPath\": {\n            \"type\": \"string\",\n            \"description\": \"Full Directory Path\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DownloadBookmarkDto\": {\n        \"required\": [\n          \"bookmarks\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookmarks\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BookmarkDto\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailTestResultDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"successful\": {\n            \"type\": \"boolean\"\n          },\n          \"errorMessage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents if Test Email Service URL was successful or not and if any error occured\"\n      },\n      \"FileDimensionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"width\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"height\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the cached file. If this was nested in a subfolder, the foldername will be appended with _\",\n            \"nullable\": true,\n            \"example\": \"chapter01_page01.png\"\n          },\n          \"isWide\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileExtensionBreakdownDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"totalFileSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Total bytes for all files\",\n            \"format\": \"int64\"\n          },\n          \"fileBreakdown\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileExtensionDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileExtensionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extension\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileFormatDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extension\": {\n            \"type\": \"string\",\n            \"description\": \"The extension with the ., in lowercase\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FilterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"formats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFormat\"\n            },\n            \"description\": \"The type of Formats you want to be returned. An empty list will return all formats back\",\n            \"nullable\": true\n          },\n          \"readStatus\": {\n            \"$ref\": \"#/components/schemas/ReadStatus\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of library ids to restrict search to. Defaults to all libraries by passing empty list\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Genre ids to restrict search to. Defaults to all genres by passing an empty list\",\n            \"nullable\": true\n          },\n          \"writers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Writers to restrict search to. Defaults to all Writers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"penciller\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Penciller ids to restrict search to. Defaults to all Pencillers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"inker\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Inker ids to restrict search to. Defaults to all Inkers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"colorist\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Colorist ids to restrict search to. Defaults to all Colorists by passing an empty list\",\n            \"nullable\": true\n          },\n          \"letterer\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Letterer ids to restrict search to. Defaults to all Letterers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"coverArtist\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of CoverArtist ids to restrict search to. Defaults to all CoverArtists by passing an empty list\",\n            \"nullable\": true\n          },\n          \"editor\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Editor ids to restrict search to. Defaults to all Editors by passing an empty list\",\n            \"nullable\": true\n          },\n          \"publisher\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Publisher ids to restrict search to. Defaults to all Publishers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"character\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Character ids to restrict search to. Defaults to all Characters by passing an empty list\",\n            \"nullable\": true\n          },\n          \"translators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Translator ids to restrict search to. Defaults to all Translatorss by passing an empty list\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Collection Tag ids to restrict search to. Defaults to all Collection Tags by passing an empty list\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Tag ids to restrict search to. Defaults to all Tags by passing an empty list\",\n            \"nullable\": true\n          },\n          \"rating\": {\n            \"type\": \"integer\",\n            \"description\": \"Will return back everything with the rating and above\\r\\nAPI.Entities.AppUserRating.Rating\",\n            \"format\": \"int32\"\n          },\n          \"sortOptions\": {\n            \"$ref\": \"#/components/schemas/SortOptions\"\n          },\n          \"ageRating\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AgeRating\"\n            },\n            \"description\": \"Age Ratings. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"languages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Languages (ISO 639-1 code) to filter by. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"publicationStatus\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PublicationStatus\"\n            },\n            \"description\": \"Publication statuses to filter by. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"seriesNameQuery\": {\n            \"type\": \"string\",\n            \"description\": \"An optional name string to filter by. Empty string will ignore.\",\n            \"nullable\": true\n          },\n          \"releaseYearRange\": {\n            \"$ref\": \"#/components/schemas/Int32Range\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FolderPath\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Used when scanning to see if we can skip if nothing has changed\",\n            \"format\": \"date-time\"\n          },\n          \"library\": {\n            \"$ref\": \"#/components/schemas/Library\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Genre\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"externalTag\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"GenreTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"HourEstimateRangeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"minHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Min hours to read the selection\",\n            \"format\": \"int32\"\n          },\n          \"maxHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Max hours to read the selection\",\n            \"format\": \"int32\"\n          },\n          \"avgHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated average hours to read the selection\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A range of time to read a selection (series, chapter, etc)\"\n      },\n      \"Int32Range\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"min\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a range between two int/float/double\"\n      },\n      \"Int32StatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InviteUserDto\": {\n        \"required\": [\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"List of Roles to assign to user. If admin not present, Pleb will be applied.\\r\\nIf admin present, all libraries will be granted access and will ignore those from DTO.\",\n            \"nullable\": true\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of libraries to grant access to\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"JobDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Job Id\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Human Readable title for the Job\",\n            \"nullable\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"When the job was created\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lastExecution\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the job was run\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"cron\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"JumpKeyDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"size\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of items in this Key\",\n            \"format\": \"int32\"\n          },\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"Code to use in URL (url encoded)\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"What is visible to user\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents an individual button in a Jump Bar\"\n      },\n      \"LanguageDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"isoCode\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LayoutMode\": {\n        \"enum\": [\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"Library\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Folder Watching is enabled for this library\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Dashboard Streams\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Recommended Streams\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include library series in Search\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time Library was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FolderPath\"\n            },\n            \"nullable\": true\n          },\n          \"appUsers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUser\"\n            },\n            \"nullable\": true\n          },\n          \"series\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Series\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time Library was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"An optional Cover Image or null\",\n            \"nullable\": true\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Folder Watching is enabled for this library\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Dashboard Streams\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Recommended Streams\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include library series in Search\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/LibraryDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryType\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"LoginDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MangaFile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"filePath\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the archive file\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of pages for the given file\",\n            \"format\": \"int32\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"bytes\": {\n            \"type\": \"integer\",\n            \"description\": \"How many bytes make up this file\",\n            \"format\": \"int64\"\n          },\n          \"extension\": {\n            \"type\": \"string\",\n            \"description\": \"File extension\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last time underlying file was modified\",\n            \"format\": \"date-time\"\n          },\n          \"lastFileAnalysis\": {\n            \"type\": \"string\",\n            \"description\": \"Last time file analysis ran on this file\",\n            \"format\": \"date-time\"\n          },\n          \"chapter\": {\n            \"$ref\": \"#/components/schemas/Chapter\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a wrapper to the underlying file. This provides information around file, like number of pages, format, etc.\"\n      },\n      \"MangaFileDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"filePath\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MangaFormat\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents the format of the file\",\n        \"format\": \"int32\"\n      },\n      \"MangaFormatStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkMultipleSeriesAsReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkVolumeReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkVolumesReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Volumes to mark read\",\n            \"nullable\": true\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of additional Chapters to mark as read\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is used for bulk updating a set of volume and or chapters in one go\"\n      },\n      \"MemberDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a member of a Kavita server.\"\n      },\n      \"MigrateUserEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sendEmail\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PageLayoutMode\": {\n        \"enum\": [\n          0,\n          1\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"PageSplitOption\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"Person\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/PersonRole\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapterMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PersonDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/PersonRole\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PersonRole\": {\n        \"enum\": [\n          1,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ProgressDto\": {\n        \"required\": [\n          \"chapterId\",\n          \"libraryId\",\n          \"pageNum\",\n          \"seriesId\",\n          \"volumeId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageNum\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookScrollId\": {\n            \"type\": \"string\",\n            \"description\": \"For Book reader, this can be an optional string of the id of a part marker, to help resume reading position\\r\\non pages that combine multiple \\\"chapters\\\".\",\n            \"nullable\": true\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the progress was synced from UI or external app\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PublicationStatus\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"PublicationStatusStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadHistoryEvent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"readDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a single User's reading event\"\n      },\n      \"ReadStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"notRead\": {\n            \"type\": \"boolean\"\n          },\n          \"inProgress\": {\n            \"type\": \"boolean\"\n          },\n          \"read\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents the Reading Status. This is a flag and allows multiple statues\"\n      },\n      \"ReaderMode\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ReadingDirection\": {\n        \"enum\": [\n          0,\n          1\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ReadingList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"description\": \"A normalized string used to check if the reading list already exists in the DB\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"Reading lists that are promoted are only done by admins\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingListItem\"\n            },\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is a collection of API.Entities.ReadingListItem which represent individual chapters and an order.\"\n      },\n      \"ReadingListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"Reading lists that are promoted are only done by admins\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"This is used to tell the UI if it should request a Cover Image or not. If null or empty, it has not been set.\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadingListItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"order\": {\n            \"type\": \"integer\",\n            \"description\": \"Order of the chapter within a Reading List\",\n            \"format\": \"int32\"\n          },\n          \"readingList\": {\n            \"$ref\": \"#/components/schemas/ReadingList\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"volume\": {\n            \"$ref\": \"#/components/schemas/Volume\"\n          },\n          \"chapter\": {\n            \"$ref\": \"#/components/schemas/Chapter\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadingListItemDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"order\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pagesTotal\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"chapterTitleName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"Release Date from Chapter\",\n            \"format\": \"date-time\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"description\": \"Used internally only\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RecentlyAddedItemDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"This will automatically map to Volume X, Chapter Y, etc.\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"description\": \"Chapter Id if this is a chapter. Not guaranteed to be set.\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume Id if this is a chapter. Not guaranteed to be set.\",\n            \"format\": \"int32\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"This is used only on the UI. It is just index of being added.\",\n            \"format\": \"int32\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A mesh of data for Recently added volume/chapters\"\n      },\n      \"RefreshSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library Id series belongs to\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series Id\",\n            \"format\": \"int32\"\n          },\n          \"forceUpdate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the task force opening/re-calculation.\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Used for running some task against a Series.\"\n      },\n      \"RegisterDto\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"An email to register with. Optional. Provides Forgot Password functionality\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RelatedSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sourceSeriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"The parent relationship Series\",\n            \"format\": \"int32\"\n          },\n          \"sequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"prequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"spinOffs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"adaptations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"sideStories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"contains\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"others\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeSettings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeVersions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"doujinshis\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"parent\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"editions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RelationKind\": {\n        \"enum\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12,\n          13\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents a relationship between Series\",\n        \"format\": \"int32\"\n      },\n      \"RemoveBookmarkForSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ResetPasswordDto\": {\n        \"required\": [\n          \"password\",\n          \"userName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"The Username of the User\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\",\n            \"description\": \"The new password\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\",\n            \"description\": \"The old, existing password. If an admin is performing the change, this is not required. Otherwise, it is.\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ScalingOption\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ScanFolderDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"description\": \"Api key for a user with Admin permissions\",\n            \"nullable\": true\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"Folder Path to Scan\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"DTO for requesting a folder to be scanned\"\n      },\n      \"SearchResultDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"libraryName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SearchResultGroupDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          },\n          \"series\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchResultDto\"\n            },\n            \"nullable\": true\n          },\n          \"collections\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"nullable\": true\n          },\n          \"readingLists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingListDto\"\n            },\n            \"nullable\": true\n          },\n          \"persons\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GenreTagDto\"\n            },\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TagDto\"\n            },\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFileDto\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents all Search results for a query\"\n      },\n      \"SendToDeviceDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Series\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The UI visible Name of the Series. This may or may not be the same as the OriginalName\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Used internally for name matching. M:API.Services.Tasks.Scanner.Parser.Parser.Normalize(System.String)\",\n            \"nullable\": true\n          },\n          \"normalizedLocalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Used internally for localized name matching. M:API.Services.Tasks.Scanner.Parser.Parser.Normalize(System.String)\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"description\": \"The name used to sort the Series. By default, will be the same as Name.\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Name in original language (Japanese for Manga). By default, will be same as Name.\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"description\": \"Original Name on disk. Not exposed to UI.\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"Time of creation\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Whenever a modification occurs. Ie) New volumes, removed volumes, title update, etc\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations.\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Sum of all Volume page counts\",\n            \"format\": \"int32\"\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"Highest path (that is under library root) that contains the series.\",\n            \"nullable\": true\n          },\n          \"lastFolderScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the folder was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"lastChapterAdded\": {\n            \"type\": \"string\",\n            \"description\": \"When a Chapter was last added onto the Series\",\n            \"format\": \"date-time\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this chapter.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"metadata\": {\n            \"$ref\": \"#/components/schemas/SeriesMetadata\"\n          },\n          \"ratings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRating\"\n            },\n            \"nullable\": true\n          },\n          \"progress\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserProgress\"\n            },\n            \"nullable\": true\n          },\n          \"relations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesRelation\"\n            },\n            \"description\": \"Relations to other Series, like Sequels, Prequels, etc\",\n            \"nullable\": true\n          },\n          \"relationOf\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesRelation\"\n            },\n            \"nullable\": true\n          },\n          \"volumes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Volume\"\n            },\n            \"nullable\": true\n          },\n          \"library\": {\n            \"$ref\": \"#/components/schemas/Library\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesByIdsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesDetailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"specials\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"Specials for the Series. These will have their title and range cleaned to remove the special marker and prepare\",\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"All Chapters, excluding Specials and single chapters (0 chapter) for a volume\",\n            \"nullable\": true\n          },\n          \"volumes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VolumeDto\"\n            },\n            \"description\": \"Just the Volumes for the Series (Excludes Volume 0)\",\n            \"nullable\": true\n          },\n          \"storylineChapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"These are chapters that are in Volume 0 and should be read AFTER the volumes\",\n            \"nullable\": true\n          },\n          \"unreadCount\": {\n            \"type\": \"integer\",\n            \"description\": \"How many chapters are unread\",\n            \"format\": \"int32\"\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"How many chapters are there\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is a special DTO for a UI page in Kavita. This performs sorting and grouping and returns exactly what UI requires for layout.\\r\\nThis is subject to change, do not rely on this Data model.\"\n      },\n      \"SeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Sum of pages read from linked Volumes. Calculated at API-time.\",\n            \"format\": \"int32\"\n          },\n          \"latestReadDate\": {\n            \"type\": \"string\",\n            \"description\": \"DateTime representing last time the series was Read. Calculated at API-time.\",\n            \"format\": \"date-time\"\n          },\n          \"lastChapterAdded\": {\n            \"type\": \"string\",\n            \"description\": \"DateTime representing last time a chapter was added to the Series\",\n            \"format\": \"date-time\"\n          },\n          \"userRating\": {\n            \"type\": \"integer\",\n            \"description\": \"Rating from logged in user. Calculated at API-time.\",\n            \"format\": \"int32\"\n          },\n          \"userReview\": {\n            \"type\": \"string\",\n            \"description\": \"Review from logged in user. Calculated at API-time.\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of words for the series. Only applies to epubs.\",\n            \"format\": \"int64\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"The highest level folder for this Series\",\n            \"nullable\": true\n          },\n          \"lastFolderScanned\": {\n            \"type\": \"string\",\n            \"description\": \"The last time the folder for this series was scanned\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/SeriesDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTag\"\n            },\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Genre\"\n            },\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"nullable\": true\n          },\n          \"people\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Person\"\n            },\n            \"description\": \"All people attached at a Series level.\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"releaseYear\": {\n            \"type\": \"integer\",\n            \"description\": \"Earliest Year from all chapters\",\n            \"format\": \"int32\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language of the content (BCP-47 code)\",\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues/volumes in the series\",\n            \"format\": \"int32\"\n          },\n          \"maxCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of issues/volumes in the series (Max of Volume/Issue field in ComicInfo)\",\n            \"format\": \"int32\"\n          },\n          \"publicationStatus\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"languageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"summaryLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRatingLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override AgeRating\"\n          },\n          \"publicationStatusLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override PublicationStatus\"\n          },\n          \"genresLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"tagsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"writerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"characterLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coloristLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"editorLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"inkerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"lettererLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pencillerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"publisherLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"translatorLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverArtistLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"releaseYearLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesMetadataDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"description\": \"Collections the Series belongs to\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GenreTagDto\"\n            },\n            \"description\": \"Genres for the Series\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TagDto\"\n            },\n            \"description\": \"Collection of all Tags from underlying chapters for a Series\",\n            \"nullable\": true\n          },\n          \"writers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"coverArtists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"publishers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"pencillers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"inkers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"colorists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"letterers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"editors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"translators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"releaseYear\": {\n            \"type\": \"integer\",\n            \"description\": \"Earliest Year from all chapters\",\n            \"format\": \"int32\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language of the content (BCP-47 code)\",\n            \"nullable\": true\n          },\n          \"maxCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of issues/volumes in the series (Max of Volume/Issue field in ComicInfo)\",\n            \"format\": \"int32\"\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues/volumes for the series\",\n            \"format\": \"int32\"\n          },\n          \"publicationStatus\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"languageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"summaryLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRatingLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override AgeRating\"\n          },\n          \"publicationStatusLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override PublicationStatus\"\n          },\n          \"genresLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"tagsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"writersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"charactersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coloristsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"editorsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"inkersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"letterersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pencillersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"publishersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"translatorsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverArtistsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"releaseYearLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesRelation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"relationKind\": {\n            \"$ref\": \"#/components/schemas/RelationKind\"\n          },\n          \"targetSeries\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"targetSeriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"A is Sequel to B. In this example, TargetSeries is A. B will hold the foreign key.\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A relation flows between one series and another.\\r\\nSeries ---kind---> target\"\n      },\n      \"ServerInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"installId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique Id that represents a unique install\",\n            \"nullable\": true\n          },\n          \"os\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isDocker\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the Kavita install is using Docker\"\n          },\n          \"dotnetVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Version of .NET instance is running\",\n            \"nullable\": true\n          },\n          \"kavitaVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Version of Kavita\",\n            \"nullable\": true\n          },\n          \"numOfCores\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of Cores on the instance\",\n            \"format\": \"int32\"\n          },\n          \"numberOfLibraries\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of libraries on the instance\",\n            \"format\": \"int32\"\n          },\n          \"hasBookmarks\": {\n            \"type\": \"boolean\",\n            \"description\": \"Does any user have bookmarks\"\n          },\n          \"activeSiteTheme\": {\n            \"type\": \"string\",\n            \"description\": \"The site theme the install is using\",\n            \"nullable\": true\n          },\n          \"mangaReaderMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"numberOfUsers\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on the install\",\n            \"format\": \"int32\"\n          },\n          \"numberOfCollections\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of collections on the install\",\n            \"format\": \"int32\"\n          },\n          \"numberOfReadingLists\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of reading lists on the install (Sum of all users)\",\n            \"format\": \"int32\"\n          },\n          \"opdsEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is OPDS enabled\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of files in the instance\",\n            \"format\": \"int32\"\n          },\n          \"totalGenres\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of Genres in the instance\",\n            \"format\": \"int32\"\n          },\n          \"totalPeople\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of People in the instance\",\n            \"format\": \"int32\"\n          },\n          \"storeBookmarksAsWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is this instance storing bookmarks as WebP\"\n          },\n          \"usersOnCardLayout\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on this instance using Card Layout\",\n            \"format\": \"int32\"\n          },\n          \"usersOnListLayout\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on this instance using List Layout\",\n            \"format\": \"int32\"\n          },\n          \"maxSeriesInALibrary\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Series for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"maxVolumesInASeries\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Volumes for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"maxChaptersInASeries\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Chapters for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"usingSeriesRelationships\": {\n            \"type\": \"boolean\",\n            \"description\": \"Does this instance have relationships setup between series\"\n          },\n          \"mangaReaderBackgroundColors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A list of background colors set on the instance\",\n            \"nullable\": true\n          },\n          \"mangaReaderPageSplittingModes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PageSplitOption\"\n            },\n            \"description\": \"A list of Page Split defaults being used on the instance\",\n            \"nullable\": true\n          },\n          \"mangaReaderLayoutModes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LayoutMode\"\n            },\n            \"description\": \"A list of Layout Mode defaults being used on the instance\",\n            \"nullable\": true\n          },\n          \"fileFormats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileFormatDto\"\n            },\n            \"description\": \"A list of file formats existing in the instance\",\n            \"nullable\": true\n          },\n          \"usingRestrictedProfiles\": {\n            \"type\": \"boolean\",\n            \"description\": \"If there is at least one user that is using an age restricted profile on the instance\"\n          },\n          \"usersWithEmulateComicBook\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users using the Emulate Comic Book setting\",\n            \"format\": \"int32\"\n          },\n          \"percentOfLibrariesWithFolderWatchingEnabled\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries with folder watching enabled\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInSearch\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Search\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInRecommended\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Recommended\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInDashboard\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Dashboard\",\n            \"format\": \"float\"\n          },\n          \"totalReadingHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Total reading hours of all users\",\n            \"format\": \"int64\"\n          },\n          \"storeCoversAsWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is the Server saving covers as WebP\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents information about a Kavita Installation\"\n      },\n      \"ServerSettingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cacheDirectory\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"taskScan\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"loggingLevel\": {\n            \"type\": \"string\",\n            \"description\": \"Logging level for server. Managed in appsettings.json.\",\n            \"nullable\": true\n          },\n          \"taskBackup\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"description\": \"Port the server listens on. Managed in appsettings.json.\",\n            \"format\": \"int32\"\n          },\n          \"allowStatCollection\": {\n            \"type\": \"boolean\",\n            \"description\": \"Allows anonymous information to be collected and sent to KavitaStats\"\n          },\n          \"enableOpds\": {\n            \"type\": \"boolean\",\n            \"description\": \"Enables OPDS connections to be made to the server.\"\n          },\n          \"baseUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Base Url for the kavita. Requires restart to take effect.\",\n            \"nullable\": true\n          },\n          \"bookmarksDirectory\": {\n            \"type\": \"string\",\n            \"description\": \"Where Bookmarks are stored.\",\n            \"nullable\": true\n          },\n          \"emailServiceUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Email service to use for the invite user flow, forgot password, etc.\",\n            \"nullable\": true\n          },\n          \"installVersion\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"installId\": {\n            \"type\": \"string\",\n            \"description\": \"Represents a unique Id to this Kavita installation. Only used in Stats to identify unique installs.\",\n            \"nullable\": true\n          },\n          \"convertBookmarkToWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the server should save bookmarks as WebP encoding\"\n          },\n          \"totalBackups\": {\n            \"type\": \"integer\",\n            \"description\": \"The amount of Backups before cleanup\",\n            \"format\": \"int32\"\n          },\n          \"enableFolderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Kavita should watch the library folders and process changes\"\n          },\n          \"totalLogs\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of days worth of logs to keep at a given time.\",\n            \"format\": \"int32\"\n          },\n          \"convertCoverToWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the server should save covers as WebP encoding\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ServerStatisticsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"volumeCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"seriesCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalGenres\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalTags\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalPeople\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalReadingTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"mostReadSeries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"mostPopularSeries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDtoICount\"\n            },\n            \"description\": \"Total users who have started/reading/read per series\",\n            \"nullable\": true\n          },\n          \"mostActiveUsers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"mostActiveLibraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"recentlyRead\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"description\": \"Last 5 Series read\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SingleStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SiteTheme\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Theme\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Normalized name for lookups\",\n            \"nullable\": true\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File path to the content. Stored under API.Services.DirectoryService.SiteThemeDirectory.\\r\\nMust be a .css file\",\n            \"nullable\": true\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\",\n            \"description\": \"Only one theme can have this. Will auto-set this as default for new user accounts\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/ThemeProvider\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a set of css overrides the user can upload to Kavita and will load into webui\"\n      },\n      \"SiteThemeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Theme\",\n            \"nullable\": true\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File path to the content. Stored under API.Services.DirectoryService.SiteThemeDirectory.\\r\\nMust be a .css file\",\n            \"nullable\": true\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\",\n            \"description\": \"Only one theme can have this. Will auto-set this as default for new user accounts\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/ThemeProvider\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"selector\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a set of css overrides the user can upload to Kavita and will load into webui\"\n      },\n      \"SortField\": {\n        \"enum\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"SortOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortField\": {\n            \"$ref\": \"#/components/schemas/SortField\"\n          },\n          \"isAscending\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Sorting Options for a query\"\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"externalTag\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TestEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ThemeProvider\": {\n        \"enum\": [\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"TokenRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TopReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"comicsTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Amount of time read on Comic libraries\",\n            \"format\": \"int64\"\n          },\n          \"booksTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Amount of time read on\",\n            \"format\": \"int64\"\n          },\n          \"mangaTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateAgeRestrictionDto\": {\n        \"required\": [\n          \"ageRating\",\n          \"includeUnknowns\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"includeUnknowns\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateDefaultThemeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"themeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateDeviceDto\": {\n        \"required\": [\n          \"emailAddress\",\n          \"id\",\n          \"name\",\n          \"platform\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"emailAddress\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateLibraryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateLibraryForUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"selectedLibraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateNotificationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"currentVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Current installed Version\",\n            \"nullable\": true\n          },\n          \"updateVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Semver of the release version\\r\\n<example>0.4.3</example>\",\n            \"nullable\": true\n          },\n          \"updateBody\": {\n            \"type\": \"string\",\n            \"description\": \"Release body in HTML\",\n            \"nullable\": true\n          },\n          \"updateTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the release\",\n            \"nullable\": true\n          },\n          \"updateUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Github Url\",\n            \"nullable\": true\n          },\n          \"isDocker\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this install is within Docker\"\n          },\n          \"isPrerelease\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is this a pre-release\"\n          },\n          \"publishDate\": {\n            \"type\": \"string\",\n            \"description\": \"Date of the publish\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Update Notification denoting a new release available for user to update to\"\n      },\n      \"UpdateReadingListByChapterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByMultipleDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByMultipleSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListBySeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByVolumeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListDto\": {\n        \"required\": [\n          \"readingListId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListPosition\": {\n        \"required\": [\n          \"readingListId\",\n          \"readingListItemId\",\n          \"toPosition\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListItemId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fromPosition\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"toPosition\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"DTO for moving a reading list item to another position within the same list\"\n      },\n      \"UpdateRelatedSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"adaptations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"contains\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"others\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"prequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"sequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"sideStories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"spinOffs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeSettings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeVersions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"doujinshis\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"editions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesForTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"$ref\": \"#/components/schemas/CollectionTagDto\"\n          },\n          \"seriesIdsToRemove\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesMetadataDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesMetadata\": {\n            \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesRatingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userRating\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userReview\": {\n            \"maxLength\": 1000,\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of libraries to grant access to\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateWantToReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"List of Series Ids that will be Added/Removed\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A list of Series to pass when working with Want To Read APIs\"\n      },\n      \"UploadFileDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of the Entity\",\n            \"format\": \"int32\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"Base Url encoding of the file to upload from (can be null)\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UploadUrlDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"External url\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"preferences\": {\n            \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/UserDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPreferencesDto\": {\n        \"required\": [\n          \"autoCloseMenu\",\n          \"backgroundColor\",\n          \"blurUnreadSummaries\",\n          \"bookReaderFontFamily\",\n          \"bookReaderFontSize\",\n          \"bookReaderImmersiveMode\",\n          \"bookReaderLayoutMode\",\n          \"bookReaderLineSpacing\",\n          \"bookReaderMargin\",\n          \"bookReaderReadingDirection\",\n          \"bookReaderTapToPaginate\",\n          \"bookReaderThemeName\",\n          \"emulateBook\",\n          \"globalPageLayoutMode\",\n          \"layoutMode\",\n          \"noTransitions\",\n          \"pageSplitOption\",\n          \"promptForDownloadSize\",\n          \"readerMode\",\n          \"readingDirection\",\n          \"scalingOption\",\n          \"showScreenHints\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"scalingOption\": {\n            \"$ref\": \"#/components/schemas/ScalingOption\"\n          },\n          \"pageSplitOption\": {\n            \"$ref\": \"#/components/schemas/PageSplitOption\"\n          },\n          \"readerMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"layoutMode\": {\n            \"$ref\": \"#/components/schemas/LayoutMode\"\n          },\n          \"emulateBook\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Emulate a book by applying a shadow effect on the pages\"\n          },\n          \"backgroundColor\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Manga Reader Option: Background color of the reader\"\n          },\n          \"autoCloseMenu\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Allow the menu to close after 6 seconds without interaction\"\n          },\n          \"showScreenHints\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Show screen hints to the user on some actions, ie) pagination direction change\"\n          },\n          \"bookReaderMargin\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override extra Margin\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderLineSpacing\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override line-height\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override font size\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontFamily\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: Maps to the default Kavita font-family (inherit) or an override\"\n          },\n          \"bookReaderTapToPaginate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: Allows tapping on side of screens to paginate\"\n          },\n          \"bookReaderReadingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/SiteTheme\"\n          },\n          \"bookReaderThemeName\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"bookReaderLayoutMode\": {\n            \"$ref\": \"#/components/schemas/BookPageLayoutMode\"\n          },\n          \"bookReaderImmersiveMode\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: A flag that hides the menu-ing system behind a click on the screen. This should be used with tap to paginate, but the app doesn't enforce this.\"\n          },\n          \"globalPageLayoutMode\": {\n            \"$ref\": \"#/components/schemas/PageLayoutMode\"\n          },\n          \"blurUnreadSummaries\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: If unread summaries should be blurred until expanded or unless user has read it already\"\n          },\n          \"promptForDownloadSize\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita prompt user to confirm downloads that are greater than 100 MB.\"\n          },\n          \"noTransitions\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita disable CSS transitions\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserReadStatistics\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"totalPagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages read\",\n            \"format\": \"int64\"\n          },\n          \"totalWordsRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of words read\",\n            \"format\": \"int64\"\n          },\n          \"timeSpentReading\": {\n            \"type\": \"integer\",\n            \"description\": \"Total time spent reading based on estimates\",\n            \"format\": \"int64\"\n          },\n          \"chaptersRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"avgHoursPerWeekSpentReading\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"percentReadPerLibrary\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SingleStatCount\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Volume\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A String representation of the volume number. Allows for floats.\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"integer\",\n            \"description\": \"The minimum number in the Name field in Int form\",\n            \"format\": \"int32\"\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total pages of all chapters in this volume\",\n            \"format\": \"int32\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this volume.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"VolumeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"number\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"apiKey\",\n        \"description\": \"Please insert JWT with Bearer into field\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Account\",\n      \"description\": \"All Account matters\"\n    },\n    {\n      \"name\": \"Collection\",\n      \"description\": \"APIs for Collections\"\n    },\n    {\n      \"name\": \"Device\",\n      \"description\": \"Responsible interacting and creating Devices\"\n    },\n    {\n      \"name\": \"Download\",\n      \"description\": \"All APIs related to downloading entities from the system. Requires Download Role or Admin Role.\"\n    },\n    {\n      \"name\": \"Image\",\n      \"description\": \"Responsible for servicing up images stored in Kavita for entities\"\n    },\n    {\n      \"name\": \"Reader\",\n      \"description\": \"For all things regarding reading, mainly focusing on non-Book related entities\"\n    },\n    {\n      \"name\": \"Search\",\n      \"description\": \"Responsible for the Search interface from the UI\"\n    },\n    {\n      \"name\": \"Tachiyomi\",\n      \"description\": \"All APIs are for Tachiyomi extension and app. They have hacks for our implementation and should not be used for any\\r\\nother purposes.\"\n    },\n    {\n      \"name\": \"Upload\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"WantToRead\",\n      \"description\": \"Responsible for all things Want To Read\"\n    }\n  ]\n}"], "fixing_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Threading.Tasks;\nusing System.Web;\nusing API.Constants;\nusing API.Data;\nusing API.Data.Repositories;\nusing API.DTOs;\nusing API.DTOs.Account;\nusing API.DTOs.Email;\nusing API.Entities;\nusing API.Entities.Enums;\nusing API.Errors;\nusing API.Extensions;\nusing API.Services;\nusing API.SignalR;\nusing AutoMapper;\nusing Kavita.Common;\nusing Kavita.Common.EnvironmentInfo;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Identity;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.Logging;\n\nnamespace API.Controllers;\n\n/// <summary>\n/// All Account matters\n/// </summary>\npublic class AccountController : BaseApiController\n{\n    private readonly UserManager<AppUser> _userManager;\n    private readonly SignInManager<AppUser> _signInManager;\n    private readonly ITokenService _tokenService;\n    private readonly IUnitOfWork _unitOfWork;\n    private readonly ILogger<AccountController> _logger;\n    private readonly IMapper _mapper;\n    private readonly IAccountService _accountService;\n    private readonly IEmailService _emailService;\n    private readonly IHostEnvironment _environment;\n    private readonly IEventHub _eventHub;\n\n    /// <inheritdoc />\n    public AccountController(UserManager<AppUser> userManager,\n        SignInManager<AppUser> signInManager,\n        ITokenService tokenService, IUnitOfWork unitOfWork,\n        ILogger<AccountController> logger,\n        IMapper mapper, IAccountService accountService,\n        IEmailService emailService, IHostEnvironment environment,\n        IEventHub eventHub)\n    {\n        _userManager = userManager;\n        _signInManager = signInManager;\n        _tokenService = tokenService;\n        _unitOfWork = unitOfWork;\n        _logger = logger;\n        _mapper = mapper;\n        _accountService = accountService;\n        _emailService = emailService;\n        _environment = environment;\n        _eventHub = eventHub;\n    }\n\n    /// <summary>\n    /// Update a user's password\n    /// </summary>\n    /// <param name=\"resetPasswordDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"reset-password\")]\n    public async Task<ActionResult> UpdatePassword(ResetPasswordDto resetPasswordDto)\n    {\n        // TODO: Log this request to Audit Table\n        _logger.LogInformation(\"{UserName} is changing {ResetUser}'s password\", User.GetUsername(), resetPasswordDto.UserName);\n\n        var user = await _userManager.Users.SingleOrDefaultAsync(x => x.UserName == resetPasswordDto.UserName);\n        if (user == null) return Ok(); // Don't report BadRequest as that would allow brute forcing to find accounts on system\n        var isAdmin = User.IsInRole(PolicyConstants.AdminRole);\n\n\n        if (resetPasswordDto.UserName == User.GetUsername() && !(User.IsInRole(PolicyConstants.ChangePasswordRole) || isAdmin))\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (resetPasswordDto.UserName != User.GetUsername() && !isAdmin)\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (string.IsNullOrEmpty(resetPasswordDto.OldPassword) && !isAdmin)\n            return BadRequest(new ApiException(400, \"You must enter your existing password to change your account unless you're an admin\"));\n\n        // If you're an admin and the username isn't yours, you don't need to validate the password\n        var isResettingOtherUser = (resetPasswordDto.UserName != User.GetUsername() && isAdmin);\n        if (!isResettingOtherUser && !await _userManager.CheckPasswordAsync(user, resetPasswordDto.OldPassword))\n        {\n            return BadRequest(\"Invalid Password\");\n        }\n\n        var errors = await _accountService.ChangeUserPassword(user, resetPasswordDto.Password);\n        if (errors.Any())\n        {\n            return BadRequest(errors);\n        }\n\n        _logger.LogInformation(\"{User}'s Password has been reset\", resetPasswordDto.UserName);\n        return Ok();\n    }\n\n    /// <summary>\n    /// Register the first user (admin) on the server. Will not do anything if an admin is already confirmed\n    /// </summary>\n    /// <param name=\"registerDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"register\")]\n    public async Task<ActionResult<UserDto>> RegisterFirstUser(RegisterDto registerDto)\n    {\n        var admins = await _userManager.GetUsersInRoleAsync(\"Admin\");\n        if (admins.Count > 0) return BadRequest(\"Not allowed\");\n\n        try\n        {\n            var usernameValidation = await _accountService.ValidateUsername(registerDto.Username);\n            if (usernameValidation.Any())\n            {\n                return BadRequest(usernameValidation);\n            }\n\n            var user = new AppUser()\n            {\n                UserName = registerDto.Username,\n                Email = registerDto.Email,\n                UserPreferences = new AppUserPreferences\n                {\n                    Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n                },\n                ApiKey = HashUtil.ApiKey()\n            };\n\n            var result = await _userManager.CreateAsync(user, registerDto.Password);\n            if (!result.Succeeded) return BadRequest(result.Errors);\n\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n            if (string.IsNullOrEmpty(token)) return BadRequest(\"There was an issue generating a confirmation token.\");\n            if (!await ConfirmEmailToken(token, user)) return BadRequest($\"There was an issue validating your email: {token}\");\n\n\n            var roleResult = await _userManager.AddToRoleAsync(user, PolicyConstants.AdminRole);\n            if (!roleResult.Succeeded) return BadRequest(result.Errors);\n\n            return new UserDto\n            {\n                Username = user.UserName,\n                Email = user.Email,\n                Token = await _tokenService.CreateToken(user),\n                RefreshToken = await _tokenService.CreateRefreshToken(user),\n                ApiKey = user.ApiKey,\n                Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n            };\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Something went wrong when registering user\");\n            // We need to manually delete the User as we've already committed\n            var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(registerDto.Username);\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        return BadRequest(\"Something went wrong when registering user\");\n    }\n\n\n    /// <summary>\n    /// Perform a login. Will send JWT Token of the logged in user back.\n    /// </summary>\n    /// <param name=\"loginDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"login\")]\n    public async Task<ActionResult<UserDto>> Login(LoginDto loginDto)\n    {\n        var user = await _userManager.Users\n            .Include(u => u.UserPreferences)\n            .SingleOrDefaultAsync(x => x.NormalizedUserName == loginDto.Username.ToUpper());\n\n        if (user == null) return Unauthorized(\"Your credentials are not correct\");\n\n        var result = await _signInManager\n            .CheckPasswordSignInAsync(user, loginDto.Password, true);\n\n        if (result.IsLockedOut)\n        {\n            return Unauthorized(\"You've been locked out from too many authorization attempts. Please wait 10 minutes.\");\n        }\n\n        if (!result.Succeeded)\n        {\n            return Unauthorized(result.IsNotAllowed ? \"You must confirm your email first\" : \"Your credentials are not correct\");\n        }\n\n        // Update LastActive on account\n        user.LastActive = DateTime.Now;\n        user.UserPreferences ??= new AppUserPreferences\n        {\n            Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n        };\n\n        _unitOfWork.UserRepository.Update(user);\n        await _unitOfWork.CommitAsync();\n\n        _logger.LogInformation(\"{UserName} logged in at {Time}\", user.UserName, user.LastActive);\n\n        var dto = _mapper.Map<UserDto>(user);\n        dto.Token = await _tokenService.CreateToken(user);\n        dto.RefreshToken = await _tokenService.CreateRefreshToken(user);\n        var pref = await _unitOfWork.UserRepository.GetPreferencesAsync(user.UserName);\n        pref.Theme ??= await _unitOfWork.SiteThemeRepository.GetDefaultTheme();\n        dto.Preferences = _mapper.Map<UserPreferencesDto>(pref);\n        return dto;\n    }\n\n    /// <summary>\n    /// Refreshes the user's JWT token\n    /// </summary>\n    /// <param name=\"tokenRequestDto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"refresh-token\")]\n    public async Task<ActionResult<TokenRequestDto>> RefreshToken([FromBody] TokenRequestDto tokenRequestDto)\n    {\n        var token = await _tokenService.ValidateRefreshToken(tokenRequestDto);\n        if (token == null)\n        {\n            return Unauthorized(new { message = \"Invalid token\" });\n        }\n\n        return Ok(token);\n    }\n\n    /// <summary>\n    /// Get All Roles back. See <see cref=\"PolicyConstants\"/>\n    /// </summary>\n    /// <returns></returns>\n    [HttpGet(\"roles\")]\n    public ActionResult<IList<string>> GetRoles()\n    {\n        return typeof(PolicyConstants)\n            .GetFields(BindingFlags.Public | BindingFlags.Static)\n            .Where(f => f.FieldType == typeof(string))\n            .ToDictionary(f => f.Name,\n                f => (string) f.GetValue(null)).Values.ToList();\n    }\n\n\n    /// <summary>\n    /// Resets the API Key assigned with a user\n    /// </summary>\n    /// <returns></returns>\n    [HttpPost(\"reset-api-key\")]\n    public async Task<ActionResult<string>> ResetApiKey()\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n\n        user.ApiKey = HashUtil.ApiKey();\n\n        if (_unitOfWork.HasChanges() && await _unitOfWork.CommitAsync())\n        {\n            return Ok(user.ApiKey);\n        }\n\n        await _unitOfWork.RollbackAsync();\n        return BadRequest(\"Something went wrong, unable to reset key\");\n\n    }\n\n\n    /// <summary>\n    /// Initiates the flow to update a user's email address. The email address is not changed in this API. A confirmation link is sent/dumped which will\n    /// validate the email. It must be confirmed for the email to update.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns>Returns just if the email was sent or server isn't reachable</returns>\n    [HttpPost(\"update/email\")]\n    public async Task<ActionResult> UpdateEmail(UpdateEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized(\"You do not have permission\");\n\n        if (dto == null || string.IsNullOrEmpty(dto.Email) || string.IsNullOrEmpty(dto.Password)) return BadRequest(\"Invalid payload\");\n\n\n        // Validate this user's password\n        if (! await _userManager.CheckPasswordAsync(user, dto.Password))\n        {\n            _logger.LogCritical(\"A user tried to change {UserName}'s email, but password didn't validate\", user.UserName);\n            return BadRequest(\"You do not have permission\");\n        }\n\n        // Validate no other users exist with this email\n        if (user.Email.Equals(dto.Email)) return Ok(\"Nothing to do\");\n\n        // Check if email is used by another user\n        var existingUserEmail = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n        if (existingUserEmail != null)\n        {\n            return BadRequest(\"You cannot share emails across multiple accounts\");\n        }\n\n        // All validations complete, generate a new token and email it to the user at the new address. Confirm email link will update the email\n        var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n        if (string.IsNullOrEmpty(token))\n        {\n            _logger.LogError(\"There was an issue generating a token for the email\");\n            return BadRequest(\"There was an issue creating a confirmation email token. See logs.\");\n        }\n\n        user.EmailConfirmed = false;\n        user.ConfirmationToken = token;\n        await _userManager.UpdateAsync(user);\n\n        // Send a confirmation email\n        try\n        {\n            var emailLink = GenerateEmailLink(user.ConfirmationToken, \"confirm-email-update\", dto.Email);\n            _logger.LogCritical(\"[Update Email]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n            var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n            var accessible = await _emailService.CheckIfAccessible(host);\n            if (accessible)\n            {\n                try\n                {\n                    // Email the old address of the update change\n                    await _emailService.SendEmailChangeEmail(new ConfirmationEmailDto()\n                    {\n                        EmailAddress = string.IsNullOrEmpty(user.Email) ? dto.Email : user.Email,\n                        InstallId = BuildInfo.Version.ToString(),\n                        InvitingUser = (await _unitOfWork.UserRepository.GetAdminUsersAsync()).First().UserName,\n                        ServerConfirmationLink = emailLink\n                    });\n                }\n                catch (Exception)\n                {\n                    /* Swallow exception */\n                }\n            }\n\n            return Ok(new InviteUserResponse\n            {\n                EmailLink = string.Empty,\n                EmailSent = accessible\n            });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to send an email\");\n        }\n\n\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        return Ok();\n    }\n\n    [HttpPost(\"update/age-restriction\")]\n    public async Task<ActionResult> UpdateAgeRestriction(UpdateAgeRestrictionDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized(\"You do not have permission\");\n        if (dto == null) return BadRequest(\"Invalid payload\");\n\n        var isAdmin = await _unitOfWork.UserRepository.IsUserAdminAsync(user);\n\n        user.AgeRestriction = isAdmin ? AgeRating.NotApplicable : dto.AgeRating;\n        user.AgeRestrictionIncludeUnknowns = isAdmin || dto.IncludeUnknowns;\n\n        _unitOfWork.UserRepository.Update(user);\n\n        if (!_unitOfWork.HasChanges()) return Ok();\n        try\n        {\n            await _unitOfWork.CommitAsync();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error updating the age restriction\");\n            return BadRequest(\"There was an error updating the age restriction\");\n        }\n\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        return Ok();\n    }\n\n    /// <summary>\n    /// Update the user account. This can only affect Username, Email (will require confirming), Roles, and Library access.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpPost(\"update\")]\n    public async Task<ActionResult> UpdateAccount(UpdateUserDto dto)\n    {\n        var adminUser = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (!await _unitOfWork.UserRepository.IsUserAdminAsync(adminUser)) return Unauthorized(\"You do not have permission\");\n\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(dto.UserId);\n        if (user == null) return BadRequest(\"User does not exist\");\n\n        // Check if username is changing\n        if (!user.UserName.Equals(dto.Username))\n        {\n            // Validate username change\n            var errors = await _accountService.ValidateUsername(dto.Username);\n            if (errors.Any()) return BadRequest(\"Username already taken\");\n            user.UserName = dto.Username;\n            _unitOfWork.UserRepository.Update(user);\n        }\n\n        // Update roles\n        var existingRoles = await _userManager.GetRolesAsync(user);\n        var hasAdminRole = dto.Roles.Contains(PolicyConstants.AdminRole);\n        if (!hasAdminRole)\n        {\n            dto.Roles.Add(PolicyConstants.PlebRole);\n        }\n\n        if (existingRoles.Except(dto.Roles).Any() || dto.Roles.Except(existingRoles).Any())\n        {\n            var roles = dto.Roles;\n\n            var roleResult = await _userManager.RemoveFromRolesAsync(user, existingRoles);\n            if (!roleResult.Succeeded) return BadRequest(roleResult.Errors);\n            roleResult = await _userManager.AddToRolesAsync(user, roles);\n            if (!roleResult.Succeeded) return BadRequest(roleResult.Errors);\n        }\n\n\n        var allLibraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        List<Library> libraries;\n        if (hasAdminRole)\n        {\n            _logger.LogInformation(\"{UserName} is being registered as admin. Granting access to all libraries\",\n                user.UserName);\n            libraries = allLibraries;\n        }\n        else\n        {\n            // Remove user from all libraries\n            foreach (var lib in allLibraries)\n            {\n                lib.AppUsers ??= new List<AppUser>();\n                lib.AppUsers.Remove(user);\n            }\n\n            libraries = (await _unitOfWork.LibraryRepository.GetLibraryForIdsAsync(dto.Libraries, LibraryIncludes.AppUser)).ToList();\n        }\n\n        foreach (var lib in libraries)\n        {\n            lib.AppUsers ??= new List<AppUser>();\n            lib.AppUsers.Add(user);\n        }\n\n        user.AgeRestriction = hasAdminRole ? AgeRating.NotApplicable : dto.AgeRestriction.AgeRating;\n        user.AgeRestrictionIncludeUnknowns = hasAdminRole || dto.AgeRestriction.IncludeUnknowns;\n\n        _unitOfWork.UserRepository.Update(user);\n\n        if (!_unitOfWork.HasChanges() || await _unitOfWork.CommitAsync())\n        {\n            await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate, MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n            return Ok();\n        }\n\n        await _unitOfWork.RollbackAsync();\n        return BadRequest(\"There was an exception when updating the user\");\n    }\n\n    /// <summary>\n    /// Requests the Invite Url for the UserId. Will return error if user is already validated.\n    /// </summary>\n    /// <param name=\"userId\"></param>\n    /// <param name=\"withBaseUrl\">Include the \"https://ip:port/\" in the generated link</param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpGet(\"invite-url\")]\n    public async Task<ActionResult<string>> GetInviteUrl(int userId, bool withBaseUrl)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(userId);\n        if (user.EmailConfirmed)\n            return BadRequest(\"User is already confirmed\");\n        if (string.IsNullOrEmpty(user.ConfirmationToken))\n            return BadRequest(\"Manual setup is unable to be completed. Please cancel and recreate the invite.\");\n\n        return GenerateEmailLink(user.ConfirmationToken, \"confirm-email\", user.Email, withBaseUrl);\n    }\n\n\n    /// <summary>\n    /// Invites a user to the server. Will generate a setup link for continuing setup. If the server is not accessible, no\n    /// email will be sent.\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [Authorize(Policy = \"RequireAdminRole\")]\n    [HttpPost(\"invite\")]\n    public async Task<ActionResult<string>> InviteUser(InviteUserDto dto)\n    {\n        var adminUser = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (adminUser == null) return Unauthorized(\"You are not permitted\");\n\n        _logger.LogInformation(\"{User} is inviting {Email} to the server\", adminUser.UserName, dto.Email);\n\n        // Check if there is an existing invite\n        if (!string.IsNullOrEmpty(dto.Email))\n        {\n            dto.Email = dto.Email.Trim();\n            var emailValidationErrors = await _accountService.ValidateEmail(dto.Email);\n            if (emailValidationErrors.Any())\n            {\n                var invitedUser = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n                if (await _userManager.IsEmailConfirmedAsync(invitedUser))\n                    return BadRequest($\"User is already registered as {invitedUser.UserName}\");\n                return BadRequest(\"User is already invited under this email and has yet to accepted invite.\");\n            }\n        }\n\n        // Create a new user\n        var user = new AppUser()\n        {\n            UserName = dto.Email,\n            Email = dto.Email,\n            ApiKey = HashUtil.ApiKey(),\n            UserPreferences = new AppUserPreferences\n            {\n                Theme = await _unitOfWork.SiteThemeRepository.GetDefaultTheme()\n            }\n        };\n\n        try\n        {\n            var result = await _userManager.CreateAsync(user, AccountService.DefaultPassword);\n            if (!result.Succeeded) return BadRequest(result.Errors);\n\n            // Assign Roles\n            var roles = dto.Roles;\n            var hasAdminRole = dto.Roles.Contains(PolicyConstants.AdminRole);\n            if (!hasAdminRole)\n            {\n                roles.Add(PolicyConstants.PlebRole);\n            }\n\n            foreach (var role in roles)\n            {\n                if (!PolicyConstants.ValidRoles.Contains(role)) continue;\n                var roleResult = await _userManager.AddToRoleAsync(user, role);\n                if (!roleResult.Succeeded)\n                    return\n                        BadRequest(roleResult.Errors);\n            }\n\n            // Grant access to libraries\n            List<Library> libraries;\n            if (hasAdminRole)\n            {\n                _logger.LogInformation(\"{UserName} is being registered as admin. Granting access to all libraries\",\n                    user.UserName);\n                libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync(LibraryIncludes.AppUser)).ToList();\n            }\n            else\n            {\n                libraries = (await _unitOfWork.LibraryRepository.GetLibraryForIdsAsync(dto.Libraries, LibraryIncludes.AppUser)).ToList();\n            }\n\n            foreach (var lib in libraries)\n            {\n                lib.AppUsers ??= new List<AppUser>();\n                lib.AppUsers.Add(user);\n            }\n\n            user.AgeRestriction = hasAdminRole ? AgeRating.NotApplicable : dto.AgeRestriction.AgeRating;\n            user.AgeRestrictionIncludeUnknowns = hasAdminRole || dto.AgeRestriction.IncludeUnknowns;\n\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n            if (string.IsNullOrEmpty(token))\n            {\n                _logger.LogError(\"There was an issue generating a token for the email\");\n                return BadRequest(\"There was an creating the invite user\");\n            }\n\n            user.ConfirmationToken = token;\n            await _unitOfWork.CommitAsync();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to create user. Deleting user for retry\");\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        try\n        {\n            var emailLink = GenerateEmailLink(user.ConfirmationToken, \"confirm-email\", dto.Email);\n            _logger.LogCritical(\"[Invite User]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n            _logger.LogCritical(\"[Invite User]: Token {UserName}: {Token}\", user.UserName, user.ConfirmationToken);\n            var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n            var accessible = await _emailService.CheckIfAccessible(host);\n            if (accessible)\n            {\n                try\n                {\n                    await _emailService.SendConfirmationEmail(new ConfirmationEmailDto()\n                    {\n                        EmailAddress = dto.Email,\n                        InvitingUser = adminUser.UserName,\n                        ServerConfirmationLink = emailLink\n                    });\n                }\n                catch (Exception)\n                {\n                    /* Swallow exception */\n                }\n            }\n\n            return Ok(new InviteUserResponse\n            {\n                EmailLink = emailLink,\n                EmailSent = accessible\n            });\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an error during invite user flow, unable to send an email\");\n        }\n\n        return BadRequest(\"There was an error setting up your account. Please check the logs\");\n    }\n\n    /// <summary>\n    /// Last step in authentication flow, confirms the email token for email\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"confirm-email\")]\n    public async Task<ActionResult<UserDto>> ConfirmEmail(ConfirmEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n\n        if (user == null)\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid registered email: {Email}\", dto.Email);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        // Validate Password and Username\n        var validationErrors = new List<ApiException>();\n        validationErrors.AddRange(await _accountService.ValidateUsername(dto.Username));\n        validationErrors.AddRange(await _accountService.ValidatePassword(user, dto.Password));\n\n        if (validationErrors.Any())\n        {\n            return BadRequest(validationErrors);\n        }\n\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid token: {Token}\", dto.Token);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        user.UserName = dto.Username;\n        user.ConfirmationToken = null;\n        var errors = await _accountService.ChangeUserPassword(user, dto.Password);\n        if (errors.Any())\n        {\n            return BadRequest(errors);\n        }\n        await _unitOfWork.CommitAsync();\n\n\n        user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(user.UserName,\n            AppUserIncludes.UserPreferences);\n\n        // Perform Login code\n        return new UserDto\n        {\n            Username = user.UserName,\n            Email = user.Email,\n            Token = await _tokenService.CreateToken(user),\n            RefreshToken = await _tokenService.CreateRefreshToken(user),\n            ApiKey = user.ApiKey,\n            Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n        };\n    }\n\n    /// <summary>\n    /// Final step in email update change. Given a confirmation token and the email, this will finish the email change.\n    /// </summary>\n    /// <remarks>This will force connected clients to re-authenticate</remarks>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"confirm-email-update\")]\n    public async Task<ActionResult> ConfirmEmailUpdate(ConfirmEmailUpdateDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByConfirmationToken(dto.Token);\n        if (user == null)\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid registered email: {Email}\", dto.Email);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-email failed from invalid token: {Token}\", dto.Token);\n            return BadRequest(\"Invalid email confirmation\");\n        }\n\n        _logger.LogInformation(\"User is updating email from {OldEmail} to {NewEmail}\", user.Email, dto.Email);\n        var result = await _userManager.SetEmailAsync(user, dto.Email);\n        if (!result.Succeeded)\n        {\n            _logger.LogError(\"Unable to update email for users: {Errors}\", result.Errors.Select(e => e.Description));\n            return BadRequest(\"Unable to update email for user. Check logs\");\n        }\n        user.ConfirmationToken = null;\n        await _unitOfWork.CommitAsync();\n\n\n        // For the user's connected devices to pull the new information in\n        await _eventHub.SendMessageToAsync(MessageFactory.UserUpdate,\n            MessageFactory.UserUpdateEvent(user.Id, user.UserName), user.Id);\n\n        // Perform Login code\n        return Ok();\n    }\n\n    [AllowAnonymous]\n    [HttpPost(\"confirm-password-reset\")]\n    public async Task<ActionResult<string>> ConfirmForgotPassword(ConfirmPasswordResetDto dto)\n    {\n        try\n        {\n            var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n            if (user == null)\n            {\n                return BadRequest(\"Invalid credentials\");\n            }\n\n            var result = await _userManager.VerifyUserTokenAsync(user, TokenOptions.DefaultProvider,\n                \"ResetPassword\", dto.Token);\n            if (!result)\n            {\n                _logger.LogInformation(\"Unable to reset password, your email token is not correct: {@Dto}\", dto);\n                return BadRequest(\"Invalid credentials\");\n            }\n\n            var errors = await _accountService.ChangeUserPassword(user, dto.Password);\n            return errors.Any() ? BadRequest(errors) : Ok(\"Password updated\");\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an unexpected error when confirming new password\");\n            return BadRequest(\"There was an unexpected error when confirming new password\");\n        }\n    }\n\n\n    /// <summary>\n    /// Will send user a link to update their password to their email or prompt them if not accessible\n    /// </summary>\n    /// <param name=\"email\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"forgot-password\")]\n    public async Task<ActionResult<string>> ForgotPassword([FromQuery] string email)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(email);\n        if (user == null)\n        {\n            _logger.LogError(\"There are no users with email: {Email} but user is requesting password reset\", email);\n            return Ok(\"An email will be sent to the email if it exists in our database\");\n        }\n\n        var roles = await _userManager.GetRolesAsync(user);\n        if (!roles.Any(r => r is PolicyConstants.AdminRole or PolicyConstants.ChangePasswordRole))\n            return Unauthorized(\"You are not permitted to this operation.\");\n\n        if (string.IsNullOrEmpty(user.Email) || !user.EmailConfirmed)\n            return BadRequest(\"You do not have an email on account or it has not been confirmed\");\n\n        var token = await _userManager.GeneratePasswordResetTokenAsync(user);\n        var emailLink = GenerateEmailLink(token, \"confirm-reset-password\", user.Email);\n        _logger.LogCritical(\"[Forgot Password]: Email Link for {UserName}: {Link}\", user.UserName, emailLink);\n        var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n        if (await _emailService.CheckIfAccessible(host))\n        {\n            await _emailService.SendPasswordResetEmail(new PasswordResetEmailDto()\n            {\n                EmailAddress = user.Email,\n                ServerConfirmationLink = emailLink,\n                InstallId = (await _unitOfWork.SettingsRepository.GetSettingAsync(ServerSettingKey.InstallId)).Value\n            });\n            return Ok(\"Email sent\");\n        }\n\n        return Ok(\"Your server is not accessible. The Link to reset your password is in the logs.\");\n    }\n\n    [HttpGet(\"email-confirmed\")]\n    public async Task<ActionResult<bool>> IsEmailConfirmed()\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(User.GetUsername());\n        if (user == null) return Unauthorized();\n\n        return Ok(user.EmailConfirmed);\n    }\n\n    [AllowAnonymous]\n    [HttpPost(\"confirm-migration-email\")]\n    public async Task<ActionResult<UserDto>> ConfirmMigrationEmail(ConfirmMigrationEmailDto dto)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n        if (user == null) return BadRequest(\"Invalid credentials\");\n\n        if (!await ConfirmEmailToken(dto.Token, user))\n        {\n            _logger.LogInformation(\"confirm-migration-email email token is invalid\");\n            return BadRequest(\"Invalid credentials\");\n        }\n\n        await _unitOfWork.CommitAsync();\n\n        user = await _unitOfWork.UserRepository.GetUserByUsernameAsync(user.UserName,\n            AppUserIncludes.UserPreferences);\n\n        // Perform Login code\n        return new UserDto\n        {\n            Username = user.UserName,\n            Email = user.Email,\n            Token = await _tokenService.CreateToken(user),\n            RefreshToken = await _tokenService.CreateRefreshToken(user),\n            ApiKey = user.ApiKey,\n            Preferences = _mapper.Map<UserPreferencesDto>(user.UserPreferences)\n        };\n    }\n\n    [HttpPost(\"resend-confirmation-email\")]\n    public async Task<ActionResult<string>> ResendConfirmationSendEmail([FromQuery] int userId)\n    {\n        var user = await _unitOfWork.UserRepository.GetUserByIdAsync(userId);\n        if (user == null) return BadRequest(\"User does not exist\");\n\n        if (string.IsNullOrEmpty(user.Email))\n            return BadRequest(\n                \"This user needs to migrate. Have them log out and login to trigger a migration flow\");\n        if (user.EmailConfirmed) return BadRequest(\"User already confirmed\");\n\n        var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n        var emailLink = GenerateEmailLink(token, \"confirm-email\", user.Email);\n        _logger.LogCritical(\"[Email Migration]: Email Link: {Link}\", emailLink);\n        _logger.LogCritical(\"[Email Migration]: Token {UserName}: {Token}\", user.UserName, token);\n        await _emailService.SendMigrationEmail(new EmailMigrationDto()\n        {\n            EmailAddress = user.Email,\n            Username = user.UserName,\n            ServerConfirmationLink = emailLink,\n            InstallId = (await _unitOfWork.SettingsRepository.GetSettingAsync(ServerSettingKey.InstallId)).Value\n        });\n\n\n        return Ok(emailLink);\n    }\n\n    private string GenerateEmailLink(string token, string routePart, string email, bool withHost = true)\n    {\n        var host = _environment.IsDevelopment() ? \"localhost:4200\" : Request.Host.ToString();\n        if (withHost) return $\"{Request.Scheme}://{host}{Request.PathBase}/registration/{routePart}?token={HttpUtility.UrlEncode(token)}&email={HttpUtility.UrlEncode(email)}\";\n        return $\"registration/{routePart}?token={HttpUtility.UrlEncode(token)}&email={HttpUtility.UrlEncode(email)}\";\n    }\n\n    /// <summary>\n    /// This is similar to invite. Essentially we authenticate the user's password then go through invite email flow\n    /// </summary>\n    /// <param name=\"dto\"></param>\n    /// <returns></returns>\n    [AllowAnonymous]\n    [HttpPost(\"migrate-email\")]\n    public async Task<ActionResult<string>> MigrateEmail(MigrateUserEmailDto dto)\n    {\n        // If there is an admin account already, return\n        var users = await _unitOfWork.UserRepository.GetAdminUsersAsync();\n        if (users.Any()) return BadRequest(\"Admin already exists\");\n\n        // Check if there is an existing invite\n        var emailValidationErrors = await _accountService.ValidateEmail(dto.Email);\n        if (emailValidationErrors.Any())\n        {\n            var invitedUser = await _unitOfWork.UserRepository.GetUserByEmailAsync(dto.Email);\n            if (await _userManager.IsEmailConfirmedAsync(invitedUser))\n                return BadRequest($\"User is already registered as {invitedUser.UserName}\");\n\n            _logger.LogInformation(\"A user is attempting to login, but hasn't accepted email invite\");\n            return BadRequest(\"User is already invited under this email and has yet to accepted invite.\");\n        }\n\n\n        var user = await _userManager.Users\n            .Include(u => u.UserPreferences)\n            .SingleOrDefaultAsync(x => x.NormalizedUserName == dto.Username.ToUpper());\n        if (user == null) return BadRequest(\"Invalid username\");\n\n        var validPassword = await _signInManager.UserManager.CheckPasswordAsync(user, dto.Password);\n        if (!validPassword) return BadRequest(\"Your credentials are not correct\");\n\n        try\n        {\n            var token = await _userManager.GenerateEmailConfirmationTokenAsync(user);\n\n            user.Email = dto.Email;\n            if (!await ConfirmEmailToken(token, user)) return BadRequest(\"There was a critical error during migration\");\n            _unitOfWork.UserRepository.Update(user);\n\n            await _unitOfWork.CommitAsync();\n\n            return Ok();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"There was an issue during email migration. Contact support\");\n            _unitOfWork.UserRepository.Delete(user);\n            await _unitOfWork.CommitAsync();\n        }\n\n        return BadRequest(\"There was an error setting up your account. Please check the logs\");\n    }\n\n    private async Task<bool> ConfirmEmailToken(string token, AppUser user)\n    {\n        var result = await _userManager.ConfirmEmailAsync(user, token);\n        if (result.Succeeded) return true;\n\n\n\n        _logger.LogCritical(\"[Account] Email validation failed\");\n        if (!result.Errors.Any()) return false;\n\n        foreach (var error in result.Errors)\n        {\n            _logger.LogCritical(\"[Account] Email validation error: {Message}\", error.Description);\n        }\n\n        return false;\n\n    }\n}\n", "namespace API.DTOs.Account;\n\npublic class UpdateEmailDto\n{\n    public string Email { get; set; }\n    public string Password { get; set; }\n}\n", "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Net.Http;\nusing System.Runtime.InteropServices;\nusing System.Threading.Tasks;\nusing API.Data;\nusing API.Data.Repositories;\nusing API.DTOs.Stats;\nusing API.Entities.Enums;\nusing API.Entities.Enums.UserPreferences;\nusing Flurl.Http;\nusing Kavita.Common.EnvironmentInfo;\nusing Kavita.Common.Helpers;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Logging;\n\nnamespace API.Services.Tasks;\n\npublic interface IStatsService\n{\n    Task Send();\n    Task<ServerInfoDto> GetServerInfo();\n    Task SendCancellation();\n}\n/// <summary>\n/// This is for reporting to the stat server\n/// </summary>\npublic class StatsService : IStatsService\n{\n    private readonly ILogger<StatsService> _logger;\n    private readonly IUnitOfWork _unitOfWork;\n    private readonly DataContext _context;\n    private readonly IStatisticService _statisticService;\n    private const string ApiUrl = \"https://stats.kavitareader.com\";\n\n    public StatsService(ILogger<StatsService> logger, IUnitOfWork unitOfWork, DataContext context, IStatisticService statisticService)\n    {\n        _logger = logger;\n        _unitOfWork = unitOfWork;\n        _context = context;\n        _statisticService = statisticService;\n\n        FlurlHttp.ConfigureClient(ApiUrl, cli =>\n            cli.Settings.HttpClientFactory = new UntrustedCertClientFactory());\n    }\n\n    /// <summary>\n    /// Due to all instances firing this at the same time, we can DDOS our server. This task when fired will schedule the task to be run\n    /// randomly over a 6 hour spread\n    /// </summary>\n    public async Task Send()\n    {\n        var allowStatCollection = (await _unitOfWork.SettingsRepository.GetSettingsDtoAsync()).AllowStatCollection;\n        if (!allowStatCollection)\n        {\n            return;\n        }\n\n        await SendData();\n    }\n\n    /// <summary>\n    /// This must be public for Hangfire. Do not call this directly.\n    /// </summary>\n    // ReSharper disable once MemberCanBePrivate.Global\n    public async Task SendData()\n    {\n        var data = await GetServerInfo();\n        await SendDataToStatsServer(data);\n    }\n\n\n    private async Task SendDataToStatsServer(ServerInfoDto data)\n    {\n        var responseContent = string.Empty;\n\n        try\n        {\n            var response = await (ApiUrl + \"/api/v2/stats\")\n                .WithHeader(\"Accept\", \"application/json\")\n                .WithHeader(\"User-Agent\", \"Kavita\")\n                .WithHeader(\"x-api-key\", \"MsnvA2DfQqxSK5jh\")\n                .WithHeader(\"x-kavita-version\", BuildInfo.Version)\n                .WithHeader(\"Content-Type\", \"application/json\")\n                .WithTimeout(TimeSpan.FromSeconds(30))\n                .PostJsonAsync(data);\n\n            if (response.StatusCode != StatusCodes.Status200OK)\n            {\n                _logger.LogError(\"KavitaStats did not respond successfully. {Content}\", response);\n            }\n        }\n        catch (HttpRequestException e)\n        {\n            var info = new\n            {\n                dataSent = data,\n                response = responseContent\n            };\n\n            _logger.LogError(e, \"KavitaStats did not respond successfully. {Content}\", info);\n        }\n        catch (Exception e)\n        {\n            _logger.LogError(e, \"An error happened during the request to KavitaStats\");\n        }\n    }\n\n    public async Task<ServerInfoDto> GetServerInfo()\n    {\n        var serverSettings = await _unitOfWork.SettingsRepository.GetSettingsDtoAsync();\n\n        var serverInfo = new ServerInfoDto\n        {\n            InstallId = serverSettings.InstallId,\n            Os = RuntimeInformation.OSDescription,\n            KavitaVersion = serverSettings.InstallVersion,\n            DotnetVersion = Environment.Version.ToString(),\n            IsDocker = new OsInfo().IsDocker,\n            NumOfCores = Math.Max(Environment.ProcessorCount, 1),\n            UsersWithEmulateComicBook = await _context.AppUserPreferences.CountAsync(p => p.EmulateBook),\n            TotalReadingHours = await _statisticService.TimeSpentReadingForUsersAsync(ArraySegment<int>.Empty, ArraySegment<int>.Empty),\n\n            PercentOfLibrariesWithFolderWatchingEnabled = await GetPercentageOfLibrariesWithFolderWatchingEnabled(),\n            PercentOfLibrariesIncludedInRecommended = await GetPercentageOfLibrariesIncludedInRecommended(),\n            PercentOfLibrariesIncludedInDashboard = await GetPercentageOfLibrariesIncludedInDashboard(),\n            PercentOfLibrariesIncludedInSearch = await GetPercentageOfLibrariesIncludedInSearch(),\n\n            HasBookmarks = (await _unitOfWork.UserRepository.GetAllBookmarksAsync()).Any(),\n            NumberOfLibraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).Count(),\n            NumberOfCollections = (await _unitOfWork.CollectionTagRepository.GetAllTagsAsync()).Count(),\n            NumberOfReadingLists = await _unitOfWork.ReadingListRepository.Count(),\n            OPDSEnabled = serverSettings.EnableOpds,\n            NumberOfUsers = (await _unitOfWork.UserRepository.GetAllUsersAsync()).Count(),\n            TotalFiles = await _unitOfWork.LibraryRepository.GetTotalFiles(),\n            TotalGenres = await _unitOfWork.GenreRepository.GetCountAsync(),\n            TotalPeople = await _unitOfWork.PersonRepository.GetCountAsync(),\n            UsingSeriesRelationships = await GetIfUsingSeriesRelationship(),\n            StoreBookmarksAsWebP = serverSettings.ConvertBookmarkToWebP,\n            StoreCoversAsWebP = serverSettings.ConvertCoverToWebP,\n            MaxSeriesInALibrary = await MaxSeriesInAnyLibrary(),\n            MaxVolumesInASeries = await MaxVolumesInASeries(),\n            MaxChaptersInASeries = await MaxChaptersInASeries(),\n            MangaReaderBackgroundColors = await AllMangaReaderBackgroundColors(),\n            MangaReaderPageSplittingModes = await AllMangaReaderPageSplitting(),\n            MangaReaderLayoutModes = await AllMangaReaderLayoutModes(),\n            FileFormats = AllFormats(),\n            UsingRestrictedProfiles = await GetUsingRestrictedProfiles(),\n        };\n\n        var usersWithPref = (await _unitOfWork.UserRepository.GetAllUsersAsync(AppUserIncludes.UserPreferences)).ToList();\n        serverInfo.UsersOnCardLayout =\n            usersWithPref.Count(u => u.UserPreferences.GlobalPageLayoutMode == PageLayoutMode.Cards);\n        serverInfo.UsersOnListLayout =\n            usersWithPref.Count(u => u.UserPreferences.GlobalPageLayoutMode == PageLayoutMode.List);\n\n        var firstAdminUser = (await _unitOfWork.UserRepository.GetAdminUsersAsync()).FirstOrDefault();\n\n        if (firstAdminUser != null)\n        {\n            var firstAdminUserPref = (await _unitOfWork.UserRepository.GetPreferencesAsync(firstAdminUser.UserName));\n            var activeTheme = firstAdminUserPref.Theme ?? Seed.DefaultThemes.First(t => t.IsDefault);\n\n            serverInfo.ActiveSiteTheme = activeTheme.Name;\n            serverInfo.MangaReaderMode = firstAdminUserPref.ReaderMode;\n        }\n\n        return serverInfo;\n    }\n\n    public async Task SendCancellation()\n    {\n        _logger.LogInformation(\"Informing KavitaStats that this instance is no longer sending stats\");\n        var installId = (await _unitOfWork.SettingsRepository.GetSettingsDtoAsync()).InstallId;\n\n        var responseContent = string.Empty;\n\n        try\n        {\n            var response = await (ApiUrl + \"/api/v2/stats/opt-out?installId=\" + installId)\n                .WithHeader(\"Accept\", \"application/json\")\n                .WithHeader(\"User-Agent\", \"Kavita\")\n                .WithHeader(\"x-api-key\", \"MsnvA2DfQqxSK5jh\")\n                .WithHeader(\"x-kavita-version\", BuildInfo.Version)\n                .WithHeader(\"Content-Type\", \"application/json\")\n                .WithTimeout(TimeSpan.FromSeconds(30))\n                .PostAsync();\n\n            if (response.StatusCode != StatusCodes.Status200OK)\n            {\n                _logger.LogError(\"KavitaStats did not respond successfully. {Content}\", response);\n            }\n        }\n        catch (HttpRequestException e)\n        {\n            _logger.LogError(e, \"KavitaStats did not respond successfully. {Response}\", responseContent);\n        }\n        catch (Exception e)\n        {\n            _logger.LogError(e, \"An error happened during the request to KavitaStats\");\n        }\n    }\n\n    private async Task<float> GetPercentageOfLibrariesWithFolderWatchingEnabled()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.FolderWatching) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInRecommended()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInRecommended) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInDashboard()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInDashboard) / (1.0f * libraries.Count);\n    }\n\n    private async Task<float> GetPercentageOfLibrariesIncludedInSearch()\n    {\n        var libraries = (await _unitOfWork.LibraryRepository.GetLibrariesAsync()).ToList();\n        if (libraries.Count == 0) return 0.0f;\n        return libraries.Count(l => l.IncludeInSearch) / (1.0f * libraries.Count);\n    }\n\n    private Task<bool> GetIfUsingSeriesRelationship()\n    {\n        return _context.SeriesRelation.AnyAsync();\n    }\n\n    private async Task<int> MaxSeriesInAnyLibrary()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Series.AnyAsync()) return 0;\n        return await _context.Series\n            .Select(s => _context.Library.Where(l => l.Id == s.LibraryId).SelectMany(l => l.Series).Count())\n            .MaxAsync();\n    }\n\n    private async Task<int> MaxVolumesInASeries()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Volume.AnyAsync()) return 0;\n        return await _context.Volume\n            .Select(v => new\n            {\n                v.SeriesId,\n                Count = _context.Series.Where(s => s.Id == v.SeriesId).SelectMany(s => s.Volumes).Count()\n            })\n            .AsNoTracking()\n            .AsSplitQuery()\n            .MaxAsync(d => d.Count);\n    }\n\n    private async Task<int> MaxChaptersInASeries()\n    {\n        // If first time flow, just return 0\n        if (!await _context.Chapter.AnyAsync()) return 0;\n        return await _context.Series\n            .AsNoTracking()\n            .AsSplitQuery()\n            .MaxAsync(s => s.Volumes\n                .Where(v => v.Number == 0)\n                .SelectMany(v => v.Chapters)\n                .Count());\n    }\n\n    private async Task<IEnumerable<string>> AllMangaReaderBackgroundColors()\n    {\n        return await _context.AppUserPreferences.Select(p => p.BackgroundColor).Distinct().ToListAsync();\n    }\n\n    private async Task<IEnumerable<PageSplitOption>> AllMangaReaderPageSplitting()\n    {\n        return await _context.AppUserPreferences.Select(p => p.PageSplitOption).Distinct().ToListAsync();\n    }\n\n\n    private async Task<IEnumerable<LayoutMode>> AllMangaReaderLayoutModes()\n    {\n        return await _context.AppUserPreferences.Select(p => p.LayoutMode).Distinct().ToListAsync();\n    }\n\n    private IEnumerable<FileFormatDto> AllFormats()\n    {\n        var results =  _context.MangaFile\n            .AsNoTracking()\n            .AsEnumerable()\n            .Select(m => new FileFormatDto()\n            {\n                Format = m.Format,\n                Extension = Path.GetExtension(m.FilePath)?.ToLowerInvariant()\n            })\n            .DistinctBy(f => f.Extension)\n            .ToList();\n\n        return results;\n    }\n\n    private Task<bool> GetUsingRestrictedProfiles()\n    {\n        return _context.Users.AnyAsync(u => u.AgeRestriction > AgeRating.NotApplicable);\n    }\n}\n", "import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { of, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Preferences } from '../_models/preferences/preferences';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { EVENTS, MessageHubService } from './message-hub.service';\nimport { ThemeService } from './theme.service';\nimport { InviteUserResponse } from '../_models/auth/invite-user-response';\nimport { UserUpdateEvent } from '../_models/events/user-update-event';\nimport { UpdateEmailResponse } from '../_models/auth/update-email-response';\nimport { AgeRating } from '../_models/metadata/age-rating';\nimport { AgeRestriction } from '../_models/metadata/age-restriction';\nimport { TextResonse } from '../_types/text-response';\n\nexport enum Role {\n  Admin = 'Admin',\n  ChangePassword = 'Change Password',\n  Bookmark = 'Bookmark',\n  Download = 'Download',\n  ChangeRestriction = 'Change Restriction' \n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService implements OnDestroy {\n\n  baseUrl = environment.apiUrl;\n  userKey = 'kavita-user';\n  public lastLoginKey = 'kavita-lastlogin';\n  currentUser: User | undefined;\n\n  // Stores values, when someone subscribes gives (1) of last values seen.\n  private currentUserSource = new ReplaySubject<User | undefined>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  /**\n   * SetTimeout handler for keeping track of refresh token call\n   */\n  private refreshTokenTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private readonly onDestroy = new Subject<void>();\n\n  constructor(private httpClient: HttpClient, private router: Router, \n    private messageHub: MessageHubService, private themeService: ThemeService) {\n      messageHub.messages$.pipe(filter(evt => evt.event === EVENTS.UserUpdate), \n        map(evt => evt.payload as UserUpdateEvent),\n        filter(userUpdateEvent => userUpdateEvent.userName === this.currentUser?.username),  \n        switchMap(() => this.refreshToken()))\n        .subscribe(() => {});\n    }\n  \n  ngOnDestroy(): void {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n  }\n\n  hasAdminRole(user: User) {\n    return user && user.roles.includes(Role.Admin);\n  }\n\n  hasChangePasswordRole(user: User) {\n    return user && user.roles.includes(Role.ChangePassword);\n  }\n\n  hasChangeAgeRestrictionRole(user: User) {\n    return user && user.roles.includes(Role.ChangeRestriction);\n  }\n\n  hasDownloadRole(user: User) {\n    return user && user.roles.includes(Role.Download);\n  }\n\n  hasBookmarkRole(user: User) {\n    return user && user.roles.includes(Role.Bookmark);\n  }\n\n  getRoles() {\n    return this.httpClient.get<string[]>(this.baseUrl + 'account/roles');\n  }\n\n  login(model: {username: string, password: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.messageHub.createHubConnection(user, this.hasAdminRole(user));\n        }\n      }),\n      takeUntil(this.onDestroy)\n    );\n  }\n\n  setCurrentUser(user?: User) {\n    if (user) {\n      user.roles = [];\n      const roles = this.getDecodedToken(user.token).role;\n      Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n\n      localStorage.setItem(this.userKey, JSON.stringify(user));\n      localStorage.setItem(this.lastLoginKey, user.username);\n      if (user.preferences && user.preferences.theme) {\n        this.themeService.setTheme(user.preferences.theme.name);\n      } else {\n        this.themeService.setTheme(this.themeService.defaultTheme);\n      }\n    } else {\n      this.themeService.setTheme(this.themeService.defaultTheme);\n    }\n\n    this.currentUser = user;\n    this.currentUserSource.next(user);\n    \n    if (this.currentUser !== undefined) {\n      this.startRefreshTokenTimer();\n    } else {\n      this.stopRefreshTokenTimer();\n    }\n  }\n\n  logout() {\n    localStorage.removeItem(this.userKey);\n    this.currentUserSource.next(undefined);\n    this.currentUser = undefined;\n    this.stopRefreshTokenTimer();\n    // Upon logout, perform redirection\n    this.router.navigateByUrl('/login');\n    this.messageHub.stopHubConnection();\n  }\n\n\n  /**\n   * Registers the first admin on the account. Only used for that. All other registrations must occur through invite\n   * @param model \n   * @returns \n   */\n  register(model: {username: string, password: string, email: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        return user;\n      }),\n      takeUntil(this.onDestroy)\n    );\n  }\n\n  isEmailConfirmed() {\n    return this.httpClient.get<boolean>(this.baseUrl + 'account/email-confirmed');\n  }\n\n  migrateUser(model: {email: string, username: string, password: string, sendEmail: boolean}) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/migrate-email', model, TextResonse);\n  }\n\n  confirmMigrationEmail(model: {email: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-migration-email', model);\n  }\n\n  resendConfirmationEmail(userId: number) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/resend-confirmation-email?userId=' + userId, {}, TextResonse);\n  }\n\n  inviteUser(model: {email: string, roles: Array<string>, libraries: Array<number>, ageRestriction: AgeRestriction}) {\n    return this.httpClient.post<InviteUserResponse>(this.baseUrl + 'account/invite', model);\n  }\n\n  confirmEmail(model: {email: string, username: string, password: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-email', model);\n  }\n\n  confirmEmailUpdate(model: {email: string, token: string}) {\n    return this.httpClient.post<User>(this.baseUrl + 'account/confirm-email-update', model);\n  }\n\n  /**\n   * Given a user id, returns a full url for setting up the user account\n   * @param userId \n   * @returns \n   */\n  getInviteUrl(userId: number, withBaseUrl: boolean = true) {\n    return this.httpClient.get<string>(this.baseUrl + 'account/invite-url?userId=' + userId + '&withBaseUrl=' + withBaseUrl, TextResonse);\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n\n  requestResetPasswordEmail(email: string) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/forgot-password?email=' + encodeURIComponent(email), {}, TextResonse);\n  }\n\n  confirmResetPasswordEmail(model: {email: string, token: string, password: string}) {\n    return this.httpClient.post<string>(this.baseUrl + 'account/confirm-password-reset', model, TextResonse);\n  }\n\n  resetPassword(username: string, password: string, oldPassword: string) {\n    return this.httpClient.post(this.baseUrl + 'account/reset-password', {username, password, oldPassword}, TextResonse);\n  }\n\n  update(model: {email: string, roles: Array<string>, libraries: Array<number>, userId: number, ageRestriction: AgeRestriction}) {\n    return this.httpClient.post(this.baseUrl + 'account/update', model);\n  }\n\n  updateEmail(email: string, password: string) {\n    return this.httpClient.post<UpdateEmailResponse>(this.baseUrl + 'account/update/email', {email, password});\n  }\n\n  updateAgeRestriction(ageRating: AgeRating, includeUnknowns: boolean) {\n    return this.httpClient.post(this.baseUrl + 'account/update/age-restriction', {ageRating, includeUnknowns});\n  }\n\n  /**\n   * This will get latest preferences for a user and cache them into user store\n   * @returns \n   */\n  getPreferences() {\n    return this.httpClient.get<Preferences>(this.baseUrl + 'users/get-preferences').pipe(map(pref => {\n      if (this.currentUser !== undefined || this.currentUser != null) {\n        this.currentUser.preferences = pref;\n        this.setCurrentUser(this.currentUser);\n      }\n      return pref;\n    }), takeUntil(this.onDestroy));\n  }\n\n  updatePreferences(userPreferences: Preferences) {\n    return this.httpClient.post<Preferences>(this.baseUrl + 'users/update-preferences', userPreferences).pipe(map(settings => {\n      if (this.currentUser !== undefined || this.currentUser != null) {\n        this.currentUser.preferences = settings;\n        this.setCurrentUser(this.currentUser);\n      }\n      return settings;\n    }), takeUntil(this.onDestroy));\n  }\n\n  getUserFromLocalStorage(): User | undefined {\n\n    const userString = localStorage.getItem(this.userKey);\n    \n    if (userString) {\n      return JSON.parse(userString)\n    };\n\n    return undefined;\n  }\n\n  resetApiKey() {\n    return this.httpClient.post<string>(this.baseUrl + 'account/reset-api-key', {}, TextResonse).pipe(map(key => {\n      const user = this.getUserFromLocalStorage();\n      if (user) {\n        user.apiKey = key;\n\n        localStorage.setItem(this.userKey, JSON.stringify(user));\n    \n        this.currentUserSource.next(user);\n        this.currentUser = user;\n      }\n      return key;\n    }));\n  }\n\n  private refreshToken() {\n    if (this.currentUser === null || this.currentUser === undefined) return of();\n    \n    return this.httpClient.post<{token: string, refreshToken: string}>(this.baseUrl + 'account/refresh-token',\n     {token: this.currentUser.token, refreshToken: this.currentUser.refreshToken}).pipe(map(user => {\n      if (this.currentUser) {\n        this.currentUser.token = user.token;\n        this.currentUser.refreshToken = user.refreshToken;\n      }\n      \n      this.setCurrentUser(this.currentUser);\n      return user;\n    }));\n  }\n\n  private startRefreshTokenTimer() {\n    if (this.currentUser === null || this.currentUser === undefined) return;\n\n    if (this.refreshTokenTimeout !== undefined) {\n      this.stopRefreshTokenTimer();\n    }\n\n    const jwtToken = JSON.parse(atob(this.currentUser.token.split('.')[1]));\n    // set a timeout to refresh the token a minute before it expires\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\n    this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(() => {}), timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    if (this.refreshTokenTimeout !== undefined) {\n      clearTimeout(this.refreshTokenTimeout);\n    }\n  }\n\n\n\n}\n", "<div class=\"card mt-2\">\n    <div class=\"card-body\">\n        <div class=\"card-title\">\n            <div class=\"container-fluid row mb-2\">\n                <div class=\"col-10 col-sm-11\">\n                    <h4 id=\"email-card\">Email \n                        <ng-container *ngIf=\"!emailConfirmed\">\n                            <i class=\"fa-solid fa-circle ms-1 confirm-icon\" aria-hidden=\"true\" ngbTooltip=\"This email is not confirmed\"></i>\n                            <span class=\"visually-hidden\">This email is not confirmed</span>\n                        </ng-container>\n                    </h4>\n                </div>\n                <div class=\"col-1 text-end\">\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"toggleViewMode()\">{{isViewMode ? 'Edit' : 'Cancel'}}</button>\n                </div>\n            </div>\n        </div>\n        \n        <ng-container *ngIf=\"isViewMode\">\n            <div class=\"container-fluid row\">\n                <span class=\"col-12\">{{user?.email}}</span>  \n            </div>\n        </ng-container>\n\n        <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isViewMode\">\n            <ng-container>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errors.length > 0\">\n                    <div *ngFor=\"let error of errors\">{{error}}</div>\n                </div>\n                <form [formGroup]=\"form\">\n                    <div class=\"mb-3\">\n                        <label for=\"email\" class=\"form-label visually-hidden\">Email</label>\n                        <input class=\"form-control custom-input\" type=\"email\" id=\"email\" formControlName=\"email\"\n                         [class.is-invalid]=\"form.get('email')?.invalid && form.get('email')?.touched\">\n                        <div id=\"email-validations\" class=\"invalid-feedback\" *ngIf=\"form.dirty || form.touched\">\n                            <div *ngIf=\"form.get('email')?.errors?.required\">\n                                This field is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mb-3\">\n                        <label for=\"password\" class=\"form-label\">Current Password</label>\n                        <input class=\"form-control custom-input\" type=\"password\" id=\"password\" formControlName=\"password\"\n                         [class.is-invalid]=\"form.get('password')?.invalid && form.get('password')?.touched\">\n                        <div id=\"password-validations\" class=\"invalid-feedback\" *ngIf=\"form.dirty || form.touched\">\n                            <div *ngIf=\"form.get('password')?.errors?.required\">\n                                This field is required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end mb-3\">\n                        <button type=\"button\" class=\"flex-fill btn btn-secondary me-2\" aria-describedby=\"email-card\" (click)=\"resetForm()\">Reset</button>\n                        <button type=\"submit\" class=\"flex-fill btn btn-primary\" aria-describedby=\"email-card\" (click)=\"saveForm()\" [disabled]=\"!form.valid || !(form.dirty || form.touched)\">Save</button>\n                    </div>\n                </form>\n            </ng-container>\n\n            <ng-container *ngIf=\"emailLink !== ''\">\n                <h4>Email Updated</h4>\n                <p>You can use the following link below to confirm the email for your account. \n                    If your server is externally accessible, an email will have been sent to the email and the link can be used to confirm the email.\n                </p>\n                <a class=\"email-link\" href=\"{{emailLink}}\" target=\"_blank\" rel=\"noopener noreferrer\">Setup user's account</a>\n                <app-api-key title=\"Invite Url\" tooltipText=\"Copy this and paste in a new tab. You may need to log out.\" [showRefresh]=\"false\" [transform]=\"makeLink\"></app-api-key>\n            </ng-container>\n            \n            <ng-template #noPermission>\n                <p>You do not have permission to change your password. Reach out to the admin of the server.</p>\n            </ng-template>\n        </div>\n\n        \n    </div>\n    \n\n</div>\n\n", "import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of, Subject, takeUntil, shareReplay, map, tap, take } from 'rxjs';\nimport { UpdateEmailResponse } from 'src/app/_models/auth/update-email-response';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n  styleUrls: ['./change-email.component.scss']\n})\nexport class ChangeEmailComponent implements OnInit, OnDestroy {\n\n  form: FormGroup = new FormGroup({});\n  user: User | undefined = undefined;\n  hasChangePasswordAbility: Observable<boolean> = of(false);\n  passwordsMatch = false;\n  errors: string[] = [];\n  isViewMode: boolean = true;\n  emailLink: string = '';\n  emailConfirmed: boolean = true;\n\n  public get email() { return this.form.get('email'); }\n\n  private onDestroy = new Subject<void>();\n\n  makeLink: (val: string) => string = (val: string) => {return this.emailLink};\n\n  constructor(public accountService: AccountService, private toastr: ToastrService, private readonly cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.accountService.currentUser$.pipe(takeUntil(this.onDestroy), shareReplay(), take(1)).subscribe(user => {\n      this.user = user;\n      this.form.addControl('email', new FormControl(user?.email, [Validators.required, Validators.email]));\n      this.form.addControl('password', new FormControl('', [Validators.required]));\n      this.cdRef.markForCheck();\n      this.accountService.isEmailConfirmed().subscribe((confirmed) => {\n        this.emailConfirmed = confirmed;\n        this.cdRef.markForCheck();\n      });\n    });\n\n    \n  }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n  }\n\n  resetForm() {\n    this.form.get('email')?.setValue(this.user?.email);\n    this.errors = [];\n    this.cdRef.markForCheck();\n  }\n\n  saveForm() {\n    if (this.user === undefined) { return; }\n\n    const model = this.form.value;\n    this.errors = [];\n    this.accountService.updateEmail(model.email, model.password).subscribe((updateEmailResponse: UpdateEmailResponse) => {\n      if (updateEmailResponse.emailSent) {\n        if (updateEmailResponse.hadNoExistingEmail) {\n          this.toastr.success('An email has been sent to ' + model.email + ' for confirmation.');\n        } else {\n          this.toastr.success('An email has been sent to your old email address for confirmation');\n        }\n      } else {\n        this.toastr.success('The server is not publicly accessible. Ask the admin to fetch your confirmation link from the logs');\n      }\n      \n      this.resetForm();\n      this.isViewMode = true;\n    }, err => {\n      this.errors = err;\n    })\n  }\n\n  toggleViewMode() {\n    this.isViewMode = !this.isViewMode;\n    this.resetForm();\n  }\n\n}\n", "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Kavita\",\n    \"description\": \"Kavita provides a set of APIs that are authenticated by JWT. JWT token can be copied from local storage.\",\n    \"license\": {\n      \"name\": \"GPL-3.0\",\n      \"url\": \"https://github.com/Kareadita/Kavita/blob/develop/LICENSE\"\n    },\n    \"version\": \"0.6.1.28\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"{protocol}://{hostpath}\",\n      \"variables\": {\n        \"protocol\": {\n          \"default\": \"http\",\n          \"enum\": [\n            \"http\",\n            \"https\"\n          ]\n        },\n        \"hostpath\": {\n          \"default\": \"localhost:5000\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/api/Account/reset-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Update a user's password\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResetPasswordDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Register the first user (admin) on the server. Will not do anything if an admin is already confirmed\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Perform a login. Will send JWT Token of the logged in user back.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Refreshes the user's JWT token\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenRequestDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenRequestDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Get All Roles back. See API.Constants.PolicyConstants\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/reset-api-key\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Resets the API Key assigned with a user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/update/email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Initiates the flow to update a user's email address. The email address is not changed in this API. A confirmation link is sent/dumped which will\\r\\nvalidate the email. It must be confirmed for the email to update.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/update/age-restriction\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAgeRestrictionDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Update the user account. This can only affect Username, Email (will require confirming), Roles, and Library access.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/invite-url\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Requests the Invite Url for the UserId. Will return error if user is already validated.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"withBaseUrl\",\n            \"in\": \"query\",\n            \"description\": \"Include the \\\"https://ip:port/\\\" in the generated link\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/invite\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Invites a user to the server. Will generate a setup link for continuing setup. If the server is not accessible, no\\r\\nemail will be sent.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InviteUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Last step in authentication flow, confirms the email token for email\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-email-update\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Final step in email update change. Given a confirmation token and the email, this will finish the email change.\",\n        \"description\": \"This will force connected clients to re-authenticate\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmEmailUpdateDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-password-reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmPasswordResetDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/forgot-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"Will send user a link to update their password to their email or prompt them if not accessible\",\n        \"parameters\": [\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/email-confirmed\": {\n      \"get\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/confirm-migration-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConfirmMigrationEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/resend-confirmation-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Account/migrate-email\": {\n      \"post\": {\n        \"tags\": [\n          \"Account\"\n        ],\n        \"summary\": \"This is similar to invite. Essentially we authenticate the user's password then go through invite email flow\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateUserEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Admin/exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Admin\"\n        ],\n        \"summary\": \"Checks if an admin exists on the system. This is essentially a check to validate if the system has been setup.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"Retrieves information for the PDF and Epub reader\",\n        \"description\": \"This only applies to Epub or PDF files\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-resources\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This is an entry point to fetch resources from within an epub chapter/book.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/chapters\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This will return a list of mappings from ID -> page num. ID will be the xhtml key and page num will be the reading order\\r\\nthis is used to rewrite anchors in the book text so that we always load properly in our reader.\",\n        \"description\": \"This is essentially building the table of contents\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookChapterItem\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Book/{chapterId}/book-page\": {\n      \"get\": {\n        \"tags\": [\n          \"Book\"\n        ],\n        \"summary\": \"This returns a single page within the epub book. All html will be rewritten to be scoped within our reader,\\r\\nall css is scoped, etc.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Return a list of all collection tags on the server\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Searches against the collection tags on the DB and returns matches that meet the search criteria.\\r\\n<remarks>Search strings will be cleaned of certain fields, like %</remarks>\",\n        \"parameters\": [\n          {\n            \"name\": \"queryString\",\n            \"in\": \"query\",\n            \"description\": \"Search term\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CollectionTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Checks if a collection exists with the name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Collection/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Updates an existing tag with a new title, promotion status, and summary.\\r\\n<remarks>UI does not contain controls to update title</remarks>\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Collection/update-for-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"Adds a collection tag onto multiple Series. If tag id is 0, this will create a new tag.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CollectionTagBulkAddDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Collection/update-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Collection\"\n        ],\n        \"summary\": \"For a given tag, update the summary if summary has changed and remove a set of series from the tag.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesForTagDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device/create\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Device\": {\n      \"delete\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"summary\": \"Deletes the device from the user\",\n        \"parameters\": [\n          {\n            \"name\": \"deviceId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DeviceDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Device/send-to\": {\n      \"post\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SendToDeviceDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/volume-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a given volume, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/chapter-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a given chapter, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/series-size\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"For a series, return the size in bytes\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Download/volume\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Downloads all chapters within a volume. If the chapters are multiple zips, they will all be zipped up.\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Returns the zip for a single chapter. If the chapter contains multiple files, they will be zipped.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/series\": {\n      \"get\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Download/bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Download\"\n        ],\n        \"summary\": \"Downloads all bookmarks in a zip for\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DownloadBookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Health\": {\n      \"get\": {\n        \"tags\": [\n          \"Health\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/chapter-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/library-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Library\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/volume-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Volume\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/series-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"Id of Series\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/collection-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for Collection Tag\",\n        \"parameters\": [\n          {\n            \"name\": \"collectionTagId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/readinglist-cover\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns cover image for a Reading List\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/bookmark\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns image for a given bookmark page\",\n        \"description\": \"This request is served unauthenticated, but user must be passed via api key to validate\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pageNum\",\n            \"in\": \"query\",\n            \"description\": \"Starts at 0\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"API Key for user. Needed to authenticate request\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Image/cover-upload\": {\n      \"get\": {\n        \"tags\": [\n          \"Image\"\n        ],\n        \"summary\": \"Returns a temp coverupload image\",\n        \"parameters\": [\n          {\n            \"name\": \"filename\",\n            \"in\": \"query\",\n            \"description\": \"Filename of file. This is used with upload/upload-by-url\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/create\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Creates a new Library. Upon library creation, adds new library to all Admin accounts.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/list\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Returns a list of directories for a given path. If path is empty, returns root drives.\",\n        \"parameters\": [\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DirectoryDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LibraryDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/jump-bar\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JumpKeyDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/grant-access\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryForUserDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MemberDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"force\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/refresh-metadata\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"force\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/analyze\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/scan-folder\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Given a valid path, will invoke either a Scan Series or Scan Library. If the folder does not exist within Kavita, the request will be ignored\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScanFolderDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Checks if the library name exists or not\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Library/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"summary\": \"Updates an existing Library with new name, folders, and/or type.\",\n        \"description\": \"Any folder or type change will invoke a scan.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateLibraryDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Library/type\": {\n      \"get\": {\n        \"tags\": [\n          \"Library\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibraryType\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/genres\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches genres from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all genres\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GenreTagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/people\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches people from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all people\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PersonDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all tags from the instance\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all tags\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TagDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/age-ratings\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all age ratings from the instance\",\n        \"description\": \"This API is cached for 1 hour, varying by libraryIds\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all ratings\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/publication-status\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all publication status' from the instance\",\n        \"description\": \"This API is cached for 1 hour, varying by libraryIds\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all publication status\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AgeRatingDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/languages\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Fetches all age languages from the libraries passed (or if none passed, all in the server)\",\n        \"description\": \"This does not perform RBS for the user if they have Library access due to the non-sensitive nature of languages\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryIds\",\n            \"in\": \"query\",\n            \"description\": \"String separated libraryIds or null for all ratings\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/all-languages\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/LanguageDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Metadata/chapter-summary\": {\n      \"get\": {\n        \"tags\": [\n          \"Metadata\"\n        ],\n        \"summary\": \"Returns summary for the chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}\": {\n      \"post\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/libraries\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/collections\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/collections/{collectionId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"collectionId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/reading-list\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/reading-list/{readingListId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/libraries/{libraryId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/recently-added\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/on-deck\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/series/{seriesId}/volume/{volumeId}/chapter/{chapterId}/download/{filename}\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"summary\": \"Downloads a file\",\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"description\": \"User's API Key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"filename\",\n            \"in\": \"path\",\n            \"description\": \"Not used. Only for Chunky to allow download links\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/image\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Opds/{apiKey}/favicon\": {\n      \"get\": {\n        \"tags\": [\n          \"Opds\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Plugin/authenticate\": {\n      \"post\": {\n        \"tags\": [\n          \"Plugin\"\n        ],\n        \"summary\": \"Authenticate with the Server given an apiKey. This will log you in by returning the user object and the JWT token.\",\n        \"description\": \"This API is not fully built out and may require more information in later releases\",\n        \"parameters\": [\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"API key which will be used to authenticate and return a valid user token back\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pluginName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Plugin\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/pdf\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the PDF for the chapterId.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/image\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns an image for a given chapter. Will perform bounding checks\",\n        \"description\": \"This will cache the chapter images for reading\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"Chapter Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Page in question\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"Should Kavita extract pdf into images. Defaults to false.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark-image\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns an image for a given bookmark series. Side effect: This will cache the bookmark images for reading.\",\n        \"description\": \"We must use api key as bookmarks could be leaked to other users via the API\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"apiKey\",\n            \"in\": \"query\",\n            \"description\": \"Api key for the user the bookmarks are on\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/file-dimensions\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the file dimensions for all pages in a chapter. If the underlying chapter is PDF, use extractPDF to unpack as images.\",\n        \"description\": \"This has a side effect of caching the images.\\r\\n            This will only be populated on archive filetypes and not in bookmark mode\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileDimensionDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/chapter-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns various information about a Chapter. Side effect: This will cache the chapter images for reading.\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"extractPdf\",\n            \"in\": \"query\",\n            \"description\": \"Should Kavita extract pdf into images. Defaults to false.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"includeDimensions\",\n            \"in\": \"query\",\n            \"description\": \"Include file dimensions. Only useful for image based reading\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns various information about all bookmark files for a Series. Side effect: This will cache the bookmark images for reading.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"Series Id for all bookmarks\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BookmarkInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks a Series as read. All volumes and chapters will be marked as read during this process.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks a Series as Unread. All volumes and chapters will be marked as unread during this process.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-volume-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a volume as unread\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-volume-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a volume as Read\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumeReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of volumes as Read. All volumes must belong to the same Series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of volumes as Unread. All volumes must belong to the same Series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkVolumesReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-series-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of series as Read.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-multiple-series-unread\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks all chapters within a list of series as Unread.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MarkMultipleSeriesAsReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/get-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns Progress (page number) for a chapter for the logged in user\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/progress\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Save page against Chapter for logged in user\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProgressDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/continue-point\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Continue point is the chapter which you should start reading again from. If there is no progress on a series, then the first chapter will be returned (non-special unless only specials).\\r\\nOtherwise, loop through the chapters and volumes in order to find the next chapter which has progress.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/has-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns if the user has reading progress on the Series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/mark-chapter-until-as-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Marks every chapter that is sorted below the passed number as Read. This will not mark any specials as read.\",\n        \"description\": \"This is built for Tachiyomi and is not expected to be called by any other place\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/api/Reader/chapter-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns a list of bookmarked pages for a given Chapter\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/all-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns a list of all bookmarked pages for a User\",\n        \"requestBody\": {\n          \"description\": \"Only supports SeriesNameQuery\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/remove-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes all bookmarks for all chapters linked to a Series\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveBookmarkForSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/bulk-remove-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes all bookmarks for all chapters linked to a Series\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BulkRemoveBookmarkForSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/volume-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns all bookmarked pages for a given volume\",\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/series-bookmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns all bookmarked pages for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BookmarkDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/bookmark\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Bookmarks a page against a Chapter\",\n        \"description\": \"This has a side effect of caching the chapter files to disk\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/unbookmark\": {\n      \"post\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Removes a bookmarked page for a Chapter\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BookmarkDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Reader/next-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the next logical chapter from the series.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/prev-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"Returns the previous logical chapter from the series.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Reader/time-left\": {\n      \"get\": {\n        \"tags\": [\n          \"Reader\"\n        ],\n        \"summary\": \"For the current user, returns an estimate on how long it would take to finish reading the series.\",\n        \"description\": \"For Epubs, this does not check words inside a chapter due to overhead so may not work in all cases.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HourEstimateRangeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Fetches a single Reading List\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Deletes a reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/lists\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns reading lists (paginated) for a given user.\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"includePromoted\",\n            \"in\": \"query\",\n            \"description\": \"Include Promoted Reading Lists along with user's Reading Lists. Defaults to true\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/lists-for-series\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns all Reading Lists the user has access to that have a series within it.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/items\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Fetches all reading list items for a given list including rich metadata around series, volume, chapters, and progress\",\n        \"description\": \"This call is expensive\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadingListItemDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-position\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Updates an items position\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/delete-item\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Deletes a list item from the list. Will reorder all item positions afterwards\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListPosition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/remove-read\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Removes all entries that are fully read from the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/create\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Creates a new List with a unique title. Returns the new ReadingList back\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateReadingListDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReadingListDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Update the properties (title, summary) of a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-series\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a Series to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListBySeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-multiple\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a list of volumes and chapters to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-multiple-series\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Adds all chapters from a list of series to a reading list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByMultipleSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-volume\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByVolumeDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/update-by-chapter\": {\n      \"post\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateReadingListByChapterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/next-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns the next chapter within the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/prev-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Returns the prev chapter within the reading list\",\n        \"parameters\": [\n          {\n            \"name\": \"currentChapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"readingListId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/ReadingList/name-exists\": {\n      \"get\": {\n        \"tags\": [\n          \"ReadingList\"\n        ],\n        \"summary\": \"Checks if a reading list exists with the name\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"If empty or null, will return true as that is invalid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/quick-reads\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Quick Reads are series that should be readable in less than 10 in total and are not Ongoing in release.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/quick-catchup-reads\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Quick Catchup Reads are series that should be readable in less than 10 in total and are Ongoing in release.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/highly-rated\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Highly Rated based on other users ratings. Will pull series with ratings > 4.0, weighted by count of other users.\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/more-in\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Chooses a random genre and shows series that are in that without reading progress\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"genreId\",\n            \"in\": \"query\",\n            \"description\": \"Genre Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Recommended/rediscover\": {\n      \"get\": {\n        \"tags\": [\n          \"Recommended\"\n        ],\n        \"summary\": \"Series that are fully read by the user in no particular order\",\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Library to restrict series to\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/series-for-mangafile\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Returns the series for the MangaFile id. If the user does not have access (shouldn't happen by the UI),\\r\\nthen null is returned\",\n        \"parameters\": [\n          {\n            \"name\": \"mangaFileId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/series-for-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Returns the series for the Chapter id. If the user does not have access (shouldn't happen by the UI),\\r\\nthen null is returned\",\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Search/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"queryString\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultGroupDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Series\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/{seriesId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches a Series for a given Id\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"description\": \"Series Id to fetch details for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/delete-multiple\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/volumes\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns All volumes for a series with progress information and Chapters\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VolumeDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/volume\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"volumeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VolumeDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/chapter-metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chapterId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/update-rating\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesRatingDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/update\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/recently-added\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/recently-updated-series\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RecentlyAddedItemDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/all\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/on-deck\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches series that are on deck aka have progress on them.\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"description\": \"Default of 0 meaning all libraries\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/refresh-metadata\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Runs a Cover Image Generation task\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Scan a series and force each file to be updated. This should be invoked via the User, hence why we force.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/analyze\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Run a file analysis on the series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns metadata for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Update series metadata\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSeriesMetadataDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Series/series-by-collection\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns all Series grouped by the passed Collection Id with Pagination.\",\n        \"parameters\": [\n          {\n            \"name\": \"collectionId\",\n            \"in\": \"query\",\n            \"description\": \"Collection Id to pull series from\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/series-by-ids\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches Series for a set of Ids. This will check User for permission access and filter out any Ids that don't exist or\\r\\nthe user does not have access to.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SeriesByIdsDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/age-rating\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Get the age rating for the API.Entities.Enums.AgeRating enum value\",\n        \"description\": \"This is cached for an hour\",\n        \"parameters\": [\n          {\n            \"name\": \"ageRating\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/series-detail\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Get a special DTO for Series Detail page.\",\n        \"description\": \"Do not rely on this API externally. May change without hesitation.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SeriesDetailDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/related\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Fetches the related series for a given series\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"relation\",\n            \"in\": \"query\",\n            \"description\": \"Type of Relationship to pull back\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RelationKind\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/all-related\": {\n      \"get\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Returns all related series against the passed series Id\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedSeriesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Series/update-related\": {\n      \"post\": {\n        \"tags\": [\n          \"Series\"\n        ],\n        \"summary\": \"Update the relations attached to the Series. Does not generate associated Sequel/Prequel pairs on target series.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRelatedSeriesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/restart\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Attempts to Restart the server. Does not work, will shutdown the instance.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/clear-cache\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc cleanup of Cache\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/cleanup-want-to-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc cleanup of Want To Read, by removing want to read series for users, where the series are fully read and in Completed publication status.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/backup-db\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Performs an ad-hoc backup of the Database\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/analyze-files\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"This is a one time task that needs to be ran for v0.7 statistics to work\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/server-info\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Returns non-sensitive information about the current system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerInfoDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/convert-bookmarks\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Triggers the scheduling of the convert bookmarks job. Only one job will run at a time.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/convert-covers\": {\n      \"post\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Triggers the scheduling of the convert covers job. Only one job will run at a time.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Server/check-update\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Checks for updates, if no updates that are > current version installed, returns null\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/changelog\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UpdateNotificationDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/accessible\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"summary\": \"Is this server accessible to the outside net\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Server/jobs\": {\n      \"get\": {\n        \"tags\": [\n          \"Server\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/JobDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/base-url\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServerSettingDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/reset-email-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Resets the email service url\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerSettingDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/test-email-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestEmailDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailTestResultDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/task-frequencies\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/library-types\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/log-levels\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Settings/opds-enabled\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/user/{userId}/read\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserReadStatistics\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServerStatisticsDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/publication-status\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PublicationStatusStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/count/manga-format\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MangaFormatStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/top/years\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/top/users\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns users with the top reads in the server\",\n        \"parameters\": [\n          {\n            \"name\": \"days\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TopReadDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/server/file-breakdown\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"A breakdown of different files, their size, and format\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileExtensionBreakdownDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/reading-count-by-day\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns reading history events for a give or all users, broken up by day, and format\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If 0, defaults to all users, else just userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"days\",\n            \"in\": \"query\",\n            \"description\": \"If 0, defaults to all time, else just those days asked for\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DateTimePagesReadOnADayCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/day-breakdown\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DayOfWeekStatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/user/reading-history\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ReadHistoryEvent\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/pages-per-year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns a count of pages read per year for a given userId.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If userId is 0 and user is not an admin, API will default to userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Stats/words-per-year\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Returns a count of words read per year for a given userId.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"query\",\n            \"description\": \"If userId is 0 and user is not an admin, API will default to userId\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Int32StatCount\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Tachiyomi/latest-chapter\": {\n      \"get\": {\n        \"tags\": [\n          \"Tachiyomi\"\n        ],\n        \"summary\": \"Given the series Id, this should return the latest chapter that has been fully read.\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChapterDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Tachiyomi/mark-chapter-until-as-read\": {\n      \"post\": {\n        \"tags\": [\n          \"Tachiyomi\"\n        ],\n        \"summary\": \"Marks every chapter that is sorted below the passed number as Read. This will not mark any specials as read.\",\n        \"description\": \"This is built for Tachiyomi and is not expected to be called by any other place\",\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"chapterNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Theme\": {\n      \"get\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SiteThemeDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Theme/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Theme/update-default\": {\n      \"post\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDefaultThemeDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Theme/download-content\": {\n      \"get\": {\n        \"tags\": [\n          \"Theme\"\n        ],\n        \"summary\": \"Returns css content to the UI. UI is expected to escape the content\",\n        \"parameters\": [\n          {\n            \"name\": \"themeId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Upload/upload-by-url\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"This stores a file (image) in temp directory for use in a cover image replacement flow.\\r\\nThis is automatically cleaned up.\",\n        \"requestBody\": {\n          \"description\": \"Escaped url to download from\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadUrlDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Upload/series\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces series cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/collection\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces collection tag cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/reading-list\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces reading list cover image and locks it with a base64 encoded image\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/chapter\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/library\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces library cover image with a base64 encoded image. If empty string passed, will reset to null.\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Upload/reset-chapter-lock\": {\n      \"post\": {\n        \"tags\": [\n          \"Upload\"\n        ],\n        \"summary\": \"Replaces chapter cover image and locks it with a base64 encoded image. This will update the parent volume's cover image.\",\n        \"requestBody\": {\n          \"description\": \"Does not use Url property\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadFileDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Users/delete-user\": {\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/Users\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/pending\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/myself\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MemberDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/has-reading-progress\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/has-library-access\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"libraryId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/update-preferences\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/get-preferences\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Returns the preferences of the user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/Users/names\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Returns a list of the user names within the system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/want-to-read\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Return all Series that are in the current logged in user's Want to Read list, filtered\",\n        \"parameters\": [\n          {\n            \"name\": \"PageNumber\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"PageSize\",\n            \"in\": \"query\",\n            \"description\": \"If set to 0, will set as MaxInt\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FilterDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SeriesDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"seriesId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/want-to-read/add-series\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Given a list of Series Ids, add them to the current logged in user's Want To Read list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    },\n    \"/api/want-to-read/remove-series\": {\n      \"post\": {\n        \"tags\": [\n          \"WantToRead\"\n        ],\n        \"summary\": \"Given a list of Series Ids, remove them from the current logged in user's Want To Read list\",\n        \"requestBody\": {\n          \"description\": \"\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            },\n            \"application/*+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateWantToReadDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AgeRating\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12,\n          13,\n          14,\n          -1\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents Age Rating for content.\",\n        \"format\": \"int32\"\n      },\n      \"AgeRatingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AgeRestrictionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"includeUnknowns\": {\n            \"type\": \"boolean\",\n            \"description\": \"Are Unknowns explicitly allowed against age rating\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppRole\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"concurrencyStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"userRoles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRole\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedUserName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedEmail\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"emailConfirmed\": {\n            \"type\": \"boolean\"\n          },\n          \"passwordHash\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"securityStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"concurrencyStamp\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"phoneNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"phoneNumberConfirmed\": {\n            \"type\": \"boolean\"\n          },\n          \"twoFactorEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"lockoutEnd\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lockoutEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"accessFailedCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Library\"\n            },\n            \"nullable\": true\n          },\n          \"userRoles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRole\"\n            },\n            \"nullable\": true\n          },\n          \"progresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserProgress\"\n            },\n            \"nullable\": true\n          },\n          \"ratings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRating\"\n            },\n            \"nullable\": true\n          },\n          \"userPreferences\": {\n            \"$ref\": \"#/components/schemas/AppUserPreferences\"\n          },\n          \"bookmarks\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserBookmark\"\n            },\n            \"description\": \"Bookmarks associated with this User\",\n            \"nullable\": true\n          },\n          \"readingLists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingList\"\n            },\n            \"description\": \"Reading lists associated with this user\",\n            \"nullable\": true\n          },\n          \"wantToRead\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Series\"\n            },\n            \"description\": \"A list of Series the user want's to read\",\n            \"nullable\": true\n          },\n          \"devices\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Device\"\n            },\n            \"description\": \"A list of Devices which allows the user to send files to\",\n            \"nullable\": true\n          },\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"description\": \"An API Key to interact with external services, like OPDS\",\n            \"nullable\": true\n          },\n          \"confirmationToken\": {\n            \"type\": \"string\",\n            \"description\": \"The confirmation token for the user (invite). This will be set to null after the user confirms.\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"ageRestrictionIncludeUnknowns\": {\n            \"type\": \"boolean\",\n            \"description\": \"If an age rating restriction is applied to the account, if Unknowns should be allowed for the user. Defaults to false.\"\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserBookmark\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"Filename in the Bookmark Directory\",\n            \"nullable\": true\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a saved page in a Chapter entity for a given user.\"\n      },\n      \"AppUserPreferences\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"scalingOption\": {\n            \"$ref\": \"#/components/schemas/ScalingOption\"\n          },\n          \"pageSplitOption\": {\n            \"$ref\": \"#/components/schemas/PageSplitOption\"\n          },\n          \"readerMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"autoCloseMenu\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Allow the menu to close after 6 seconds without interaction\"\n          },\n          \"showScreenHints\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Show screen hints to the user on some actions, ie) pagination direction change\"\n          },\n          \"emulateBook\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Emulate a book by applying a shadow effect on the pages\"\n          },\n          \"layoutMode\": {\n            \"$ref\": \"#/components/schemas/LayoutMode\"\n          },\n          \"backgroundColor\": {\n            \"type\": \"string\",\n            \"description\": \"Manga Reader Option: Background color of the reader\",\n            \"nullable\": true\n          },\n          \"bookReaderMargin\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override extra Margin\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderLineSpacing\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override line-height\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override font size\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontFamily\": {\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: Maps to the default Kavita font-family (inherit) or an override\",\n            \"nullable\": true\n          },\n          \"bookReaderTapToPaginate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: Allows tapping on side of screens to paginate\"\n          },\n          \"bookReaderReadingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/SiteTheme\"\n          },\n          \"bookThemeName\": {\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: The color theme to decorate the book contents\",\n            \"nullable\": true\n          },\n          \"bookReaderLayoutMode\": {\n            \"$ref\": \"#/components/schemas/BookPageLayoutMode\"\n          },\n          \"bookReaderImmersiveMode\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: A flag that hides the menu-ing system behind a click on the screen. This should be used with tap to paginate, but the app doesn't enforce this.\"\n          },\n          \"globalPageLayoutMode\": {\n            \"$ref\": \"#/components/schemas/PageLayoutMode\"\n          },\n          \"blurUnreadSummaries\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: If unread summaries should be blurred until expanded or unless user has read it already\"\n          },\n          \"promptForDownloadSize\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita prompt user to confirm downloads that are greater than 100 MB.\"\n          },\n          \"noTransitions\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita disable CSS transitions\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserProgress\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of Entity\",\n            \"format\": \"int32\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Pages Read for given Chapter\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library belonging to Chapter\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"description\": \"Chapter\",\n            \"format\": \"int32\"\n          },\n          \"bookScrollId\": {\n            \"type\": \"string\",\n            \"description\": \"For Book Reader, represents the nearest passed anchor on the screen that can be used to resume scroll point\\r\\non next load\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"When this was first created\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last date this was updated\",\n            \"format\": \"date-time\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"description\": \"User this progress belongs to\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents the progress a single user has on a given Chapter.\"\n      },\n      \"AppUserRating\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"rating\": {\n            \"type\": \"integer\",\n            \"description\": \"A number between 0-5 that represents how good a series is.\",\n            \"format\": \"int32\"\n          },\n          \"review\": {\n            \"type\": \"string\",\n            \"description\": \"A short summary the user can write when giving their review.\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"AppUserRole\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"roleId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/AppRole\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookChapterItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Chapter\",\n            \"nullable\": true\n          },\n          \"part\": {\n            \"type\": \"string\",\n            \"description\": \"A part represents the id of the anchor so we can scroll to it. 01_values.xhtml#h_sVZPaxUSy/\",\n            \"nullable\": true\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"Page Number to load for the chapter\",\n            \"format\": \"int32\"\n          },\n          \"children\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BookChapterItem\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\"\n          },\n          \"chapterTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookPageLayoutMode\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"BookmarkDto\": {\n        \"required\": [\n          \"chapterId\",\n          \"page\",\n          \"seriesId\",\n          \"volumeId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BookmarkInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"BulkRemoveBookmarkForSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Chapter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"range\": {\n            \"type\": \"string\",\n            \"description\": \"Range of numbers. Chapter 2-4 -> \\\"2-4\\\". Chapter 2 -> \\\"2\\\".\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"Smallest number of the Range. Can be a partial like Chapter 4.5\",\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFile\"\n            },\n            \"description\": \"The files that represent this Chapter\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Relative path to the (managed) image file representing the cover image\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages in all MangaFiles\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this Chapter contains files that could only be identified as Series or has Special Identifier from filename\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Used for books/specials to display custom title. For non-specials/books, will be set to API.Entities.Chapter.Range\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"titleName\": {\n            \"type\": \"string\",\n            \"description\": \"Chapter title\",\n            \"nullable\": true\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"Date which chapter was released\",\n            \"format\": \"date-time\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"Summary for the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language for the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues or volumes in the series\",\n            \"format\": \"int32\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of the Total Count (progress the Series is complete)\",\n            \"format\": \"int32\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this chapter.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"people\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Person\"\n            },\n            \"description\": \"All people attached at a Chapter level. Usually Comics will have different people per issue.\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Genre\"\n            },\n            \"description\": \"Genres for the Chapter\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"nullable\": true\n          },\n          \"volume\": {\n            \"$ref\": \"#/components/schemas/Volume\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ChapterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"range\": {\n            \"type\": \"string\",\n            \"description\": \"Range of chapters. Chapter 2-4 -> \\\"2-4\\\". Chapter 2 -> \\\"2\\\".\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"Smallest number of the Range.\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages in all MangaFiles\",\n            \"format\": \"int32\"\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this Chapter contains files that could only be identified as Series or has Special Identifier from filename\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Used for books/specials to display custom title. For non-specials/books, will be set to API.DTOs.ChapterDto.Range\",\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFileDto\"\n            },\n            \"description\": \"The files that represent this Chapter\",\n            \"nullable\": true\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Calculated at API time. Number of pages read for this Chapter for logged in user.\",\n            \"format\": \"int32\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the Cover Image is locked for this entity\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume Id this Chapter belongs to\",\n            \"format\": \"int32\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"When chapter was created\",\n            \"format\": \"date-time\"\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"When the chapter was released.\",\n            \"format\": \"date-time\"\n          },\n          \"titleName\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the Chapter/Issue\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"Summary of the Chapter\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total words in a Chapter (books only)\",\n            \"format\": \"int64\"\n          },\n          \"volumeTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Formatted Volume title ie) Volume 2.\",\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Chapter is the lowest grouping of a reading medium. A Chapter contains a set of MangaFiles which represents the underlying\\r\\nfile (abstracted from type).\"\n      },\n      \"ChapterInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"description\": \"The Chapter Number\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"description\": \"The Volume Number\",\n            \"nullable\": true\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume entity Id\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"description\": \"Series Name\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series entity Id\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library entity Id\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"chapterTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Chapter's title if set via ComicInfo.xml (Title field)\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Number of pages in this Chapter\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File name of the chapter\",\n            \"nullable\": true\n          },\n          \"isSpecial\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this is marked as a special in Kavita\"\n          },\n          \"subtitle\": {\n            \"type\": \"string\",\n            \"description\": \"The subtitle to render on the reader\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Series Title\",\n            \"nullable\": true\n          },\n          \"pageDimensions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileDimensionDto\"\n            },\n            \"description\": \"List of all files with their inner archive structure maintained in filename and dimensions\",\n            \"nullable\": true\n          },\n          \"doublePairs\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"For Double Page reader, this will contain snap points to ensure the reader always resumes on correct page\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Information about the Chapter for the Reader to render\"\n      },\n      \"CollectionTag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Visible title of the Tag\",\n            \"nullable\": true\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations.\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the tag\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"description\": \"A normalized string used to check if the tag already exists in the DB\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"A promoted collection tag will allow all linked seriesMetadata's Series to show for all users.\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"description\": \"Not Used due to not using concurrency update\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a user entered field that is used as a tagging and grouping mechanism\"\n      },\n      \"CollectionTagBulkAddDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionTagId\": {\n            \"type\": \"integer\",\n            \"description\": \"Collection Tag Id\",\n            \"format\": \"int32\"\n          },\n          \"collectionTagTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"Series Ids to add onto Collection Tag\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CollectionTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"The cover image string. This is used on Frontend to show or hide the Cover Image\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmEmailDto\": {\n        \"required\": [\n          \"email\",\n          \"password\",\n          \"token\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmEmailUpdateDto\": {\n        \"required\": [\n          \"email\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmMigrationEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ConfirmPasswordResetDto\": {\n        \"required\": [\n          \"email\",\n          \"password\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateDeviceDto\": {\n        \"required\": [\n          \"emailAddress\",\n          \"name\",\n          \"platform\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"emailAddress\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateLibraryDto\": {\n        \"required\": [\n          \"folders\",\n          \"name\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folders\": {\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"CreateReadingListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DateTimePagesReadOnADayCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The day of the readings\",\n            \"format\": \"date-time\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of pages read\",\n            \"format\": \"int64\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DayOfWeek\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"DayOfWeekStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/DayOfWeek\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DeleteSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Device\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"ipAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Last Seen IP Address of the device\",\n            \"nullable\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A name given to this device\",\n            \"nullable\": true,\n            \"example\": \"Pixel 3a, John's Kindle\"\n          },\n          \"emailAddress\": {\n            \"type\": \"string\",\n            \"description\": \"An email address associated with the device (ie Kindle). Will be used with Send to functionality\",\n            \"nullable\": true\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          },\n          \"lastUsed\": {\n            \"type\": \"string\",\n            \"description\": \"Last time this device was used to send a file\",\n            \"format\": \"date-time\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Device is an entity that can receive data from Kavita (kindle)\"\n      },\n      \"DeviceDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"The device Id\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A name given to this device\",\n            \"nullable\": true,\n            \"example\": \"Pixel 3a, John's Kindle\"\n          },\n          \"emailAddress\": {\n            \"type\": \"string\",\n            \"description\": \"An email address associated with the device (ie Kindle). Will be used with Send to functionality\",\n            \"nullable\": true\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"lastUsed\": {\n            \"type\": \"string\",\n            \"description\": \"Last time this device was used to send a file\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A Device is an entity that can receive data from Kavita (kindle)\"\n      },\n      \"DevicePlatform\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"DirectoryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the directory\",\n            \"nullable\": true\n          },\n          \"fullPath\": {\n            \"type\": \"string\",\n            \"description\": \"Full Directory Path\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DownloadBookmarkDto\": {\n        \"required\": [\n          \"bookmarks\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bookmarks\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BookmarkDto\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailTestResultDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"successful\": {\n            \"type\": \"boolean\"\n          },\n          \"errorMessage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents if Test Email Service URL was successful or not and if any error occured\"\n      },\n      \"FileDimensionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"width\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"height\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the cached file. If this was nested in a subfolder, the foldername will be appended with _\",\n            \"nullable\": true,\n            \"example\": \"chapter01_page01.png\"\n          },\n          \"isWide\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileExtensionBreakdownDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"totalFileSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Total bytes for all files\",\n            \"format\": \"int64\"\n          },\n          \"fileBreakdown\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileExtensionDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileExtensionDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extension\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FileFormatDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extension\": {\n            \"type\": \"string\",\n            \"description\": \"The extension with the ., in lowercase\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FilterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"formats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFormat\"\n            },\n            \"description\": \"The type of Formats you want to be returned. An empty list will return all formats back\",\n            \"nullable\": true\n          },\n          \"readStatus\": {\n            \"$ref\": \"#/components/schemas/ReadStatus\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of library ids to restrict search to. Defaults to all libraries by passing empty list\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Genre ids to restrict search to. Defaults to all genres by passing an empty list\",\n            \"nullable\": true\n          },\n          \"writers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Writers to restrict search to. Defaults to all Writers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"penciller\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Penciller ids to restrict search to. Defaults to all Pencillers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"inker\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Inker ids to restrict search to. Defaults to all Inkers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"colorist\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Colorist ids to restrict search to. Defaults to all Colorists by passing an empty list\",\n            \"nullable\": true\n          },\n          \"letterer\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Letterer ids to restrict search to. Defaults to all Letterers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"coverArtist\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of CoverArtist ids to restrict search to. Defaults to all CoverArtists by passing an empty list\",\n            \"nullable\": true\n          },\n          \"editor\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Editor ids to restrict search to. Defaults to all Editors by passing an empty list\",\n            \"nullable\": true\n          },\n          \"publisher\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Publisher ids to restrict search to. Defaults to all Publishers by passing an empty list\",\n            \"nullable\": true\n          },\n          \"character\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Character ids to restrict search to. Defaults to all Characters by passing an empty list\",\n            \"nullable\": true\n          },\n          \"translators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Translator ids to restrict search to. Defaults to all Translatorss by passing an empty list\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Collection Tag ids to restrict search to. Defaults to all Collection Tags by passing an empty list\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Tag ids to restrict search to. Defaults to all Tags by passing an empty list\",\n            \"nullable\": true\n          },\n          \"rating\": {\n            \"type\": \"integer\",\n            \"description\": \"Will return back everything with the rating and above\\r\\nAPI.Entities.AppUserRating.Rating\",\n            \"format\": \"int32\"\n          },\n          \"sortOptions\": {\n            \"$ref\": \"#/components/schemas/SortOptions\"\n          },\n          \"ageRating\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AgeRating\"\n            },\n            \"description\": \"Age Ratings. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"languages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Languages (ISO 639-1 code) to filter by. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"publicationStatus\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PublicationStatus\"\n            },\n            \"description\": \"Publication statuses to filter by. Empty list will return everything back\",\n            \"nullable\": true\n          },\n          \"seriesNameQuery\": {\n            \"type\": \"string\",\n            \"description\": \"An optional name string to filter by. Empty string will ignore.\",\n            \"nullable\": true\n          },\n          \"releaseYearRange\": {\n            \"$ref\": \"#/components/schemas/Int32Range\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"FolderPath\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Used when scanning to see if we can skip if nothing has changed\",\n            \"format\": \"date-time\"\n          },\n          \"library\": {\n            \"$ref\": \"#/components/schemas/Library\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Genre\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"externalTag\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"GenreTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"HourEstimateRangeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"minHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Min hours to read the selection\",\n            \"format\": \"int32\"\n          },\n          \"maxHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Max hours to read the selection\",\n            \"format\": \"int32\"\n          },\n          \"avgHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated average hours to read the selection\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A range of time to read a selection (series, chapter, etc)\"\n      },\n      \"Int32Range\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"min\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a range between two int/float/double\"\n      },\n      \"Int32StatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InviteUserDto\": {\n        \"required\": [\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"List of Roles to assign to user. If admin not present, Pleb will be applied.\\r\\nIf admin present, all libraries will be granted access and will ignore those from DTO.\",\n            \"nullable\": true\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of libraries to grant access to\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"JobDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Job Id\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Human Readable title for the Job\",\n            \"nullable\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"When the job was created\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lastExecution\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the job was run\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"cron\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"JumpKeyDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"size\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of items in this Key\",\n            \"format\": \"int32\"\n          },\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"Code to use in URL (url encoded)\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"What is visible to user\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents an individual button in a Jump Bar\"\n      },\n      \"LanguageDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"isoCode\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LayoutMode\": {\n        \"enum\": [\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"Library\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Folder Watching is enabled for this library\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Dashboard Streams\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Recommended Streams\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include library series in Search\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time Library was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FolderPath\"\n            },\n            \"nullable\": true\n          },\n          \"appUsers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUser\"\n            },\n            \"nullable\": true\n          },\n          \"series\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Series\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"lastScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time Library was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"An optional Cover Image or null\",\n            \"nullable\": true\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Folder Watching is enabled for this library\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Dashboard Streams\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include Library series on Recommended Streams\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include library series in Search\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/LibraryDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"LibraryType\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"LoginDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MangaFile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"filePath\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the archive file\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of pages for the given file\",\n            \"format\": \"int32\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"bytes\": {\n            \"type\": \"integer\",\n            \"description\": \"How many bytes make up this file\",\n            \"format\": \"int64\"\n          },\n          \"extension\": {\n            \"type\": \"string\",\n            \"description\": \"File extension\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last time underlying file was modified\",\n            \"format\": \"date-time\"\n          },\n          \"lastFileAnalysis\": {\n            \"type\": \"string\",\n            \"description\": \"Last time file analysis ran on this file\",\n            \"format\": \"date-time\"\n          },\n          \"chapter\": {\n            \"$ref\": \"#/components/schemas/Chapter\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a wrapper to the underlying file. This provides information around file, like number of pages, format, etc.\"\n      },\n      \"MangaFileDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"filePath\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MangaFormat\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents the format of the file\",\n        \"format\": \"int32\"\n      },\n      \"MangaFormatStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkMultipleSeriesAsReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkVolumeReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MarkVolumesReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of Volumes to mark read\",\n            \"nullable\": true\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of additional Chapters to mark as read\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is used for bulk updating a set of volume and or chapters in one go\"\n      },\n      \"MemberDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a member of a Kavita server.\"\n      },\n      \"MigrateUserEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sendEmail\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PageLayoutMode\": {\n        \"enum\": [\n          0,\n          1\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"PageSplitOption\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"Person\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/PersonRole\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapterMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PersonDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"role\": {\n            \"$ref\": \"#/components/schemas/PersonRole\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PersonRole\": {\n        \"enum\": [\n          1,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ProgressDto\": {\n        \"required\": [\n          \"chapterId\",\n          \"libraryId\",\n          \"pageNum\",\n          \"seriesId\",\n          \"volumeId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageNum\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bookScrollId\": {\n            \"type\": \"string\",\n            \"description\": \"For Book reader, this can be an optional string of the id of a part marker, to help resume reading position\\r\\non pages that combine multiple \\\"chapters\\\".\",\n            \"nullable\": true\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the progress was synced from UI or external app\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"PublicationStatus\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"PublicationStatusStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadHistoryEvent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"readDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a single User's reading event\"\n      },\n      \"ReadStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"notRead\": {\n            \"type\": \"boolean\"\n          },\n          \"inProgress\": {\n            \"type\": \"boolean\"\n          },\n          \"read\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents the Reading Status. This is a flag and allows multiple statues\"\n      },\n      \"ReaderMode\": {\n        \"enum\": [\n          0,\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ReadingDirection\": {\n        \"enum\": [\n          0,\n          1\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ReadingList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"description\": \"A normalized string used to check if the reading list already exists in the DB\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"Reading lists that are promoted are only done by admins\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingListItem\"\n            },\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"appUserId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appUser\": {\n            \"$ref\": \"#/components/schemas/AppUser\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is a collection of API.Entities.ReadingListItem which represent individual chapters and an order.\"\n      },\n      \"ReadingListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\",\n            \"description\": \"Reading lists that are promoted are only done by admins\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"This is used to tell the UI if it should request a Cover Image or not. If null or empty, it has not been set.\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadingListItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"order\": {\n            \"type\": \"integer\",\n            \"description\": \"Order of the chapter within a Reading List\",\n            \"format\": \"int32\"\n          },\n          \"readingList\": {\n            \"$ref\": \"#/components/schemas/ReadingList\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"volume\": {\n            \"$ref\": \"#/components/schemas/Volume\"\n          },\n          \"chapter\": {\n            \"$ref\": \"#/components/schemas/Chapter\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ReadingListItemDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"order\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesFormat\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pagesTotal\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"chapterTitleName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeNumber\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"releaseDate\": {\n            \"type\": \"string\",\n            \"description\": \"Release Date from Chapter\",\n            \"format\": \"date-time\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"description\": \"Used internally only\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RecentlyAddedItemDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryType\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"This will automatically map to Volume X, Chapter Y, etc.\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"description\": \"Chapter Id if this is a chapter. Not guaranteed to be set.\",\n            \"format\": \"int32\"\n          },\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"description\": \"Volume Id if this is a chapter. Not guaranteed to be set.\",\n            \"format\": \"int32\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"This is used only on the UI. It is just index of being added.\",\n            \"format\": \"int32\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A mesh of data for Recently added volume/chapters\"\n      },\n      \"RefreshSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"description\": \"Library Id series belongs to\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"Series Id\",\n            \"format\": \"int32\"\n          },\n          \"forceUpdate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the task force opening/re-calculation.\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Used for running some task against a Series.\"\n      },\n      \"RegisterDto\": {\n        \"required\": [\n          \"password\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"An email to register with. Optional. Provides Forgot Password functionality\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RelatedSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sourceSeriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"The parent relationship Series\",\n            \"format\": \"int32\"\n          },\n          \"sequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"prequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"spinOffs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"adaptations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"sideStories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"contains\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"others\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeSettings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeVersions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"doujinshis\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"parent\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          },\n          \"editions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"RelationKind\": {\n        \"enum\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12,\n          13\n        ],\n        \"type\": \"integer\",\n        \"description\": \"Represents a relationship between Series\",\n        \"format\": \"int32\"\n      },\n      \"RemoveBookmarkForSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ResetPasswordDto\": {\n        \"required\": [\n          \"password\",\n          \"userName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"The Username of the User\"\n          },\n          \"password\": {\n            \"maxLength\": 32,\n            \"minLength\": 6,\n            \"type\": \"string\",\n            \"description\": \"The new password\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\",\n            \"description\": \"The old, existing password. If an admin is performing the change, this is not required. Otherwise, it is.\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ScalingOption\": {\n        \"enum\": [\n          0,\n          1,\n          2,\n          3\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"ScanFolderDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"description\": \"Api key for a user with Admin permissions\",\n            \"nullable\": true\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"Folder Path to Scan\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"DTO for requesting a folder to be scanned\"\n      },\n      \"SearchResultDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"libraryName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SearchResultGroupDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          },\n          \"series\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchResultDto\"\n            },\n            \"nullable\": true\n          },\n          \"collections\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"nullable\": true\n          },\n          \"readingLists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReadingListDto\"\n            },\n            \"nullable\": true\n          },\n          \"persons\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GenreTagDto\"\n            },\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TagDto\"\n            },\n            \"nullable\": true\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MangaFileDto\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents all Search results for a query\"\n      },\n      \"SendToDeviceDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Series\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The UI visible Name of the Series. This may or may not be the same as the OriginalName\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Used internally for name matching. M:API.Services.Tasks.Scanner.Parser.Parser.Normalize(System.String)\",\n            \"nullable\": true\n          },\n          \"normalizedLocalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Used internally for localized name matching. M:API.Services.Tasks.Scanner.Parser.Parser.Normalize(System.String)\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"description\": \"The name used to sort the Series. By default, will be the same as Name.\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Name in original language (Japanese for Manga). By default, will be same as Name.\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"description\": \"Original Name on disk. Not exposed to UI.\",\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"description\": \"Time of creation\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"description\": \"Whenever a modification occurs. Ie) New volumes, removed volumes, title update, etc\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Denotes if the CoverImage has been overridden by the user. If so, it will not be updated during normal scan operations.\"\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Sum of all Volume page counts\",\n            \"format\": \"int32\"\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"Highest path (that is under library root) that contains the series.\",\n            \"nullable\": true\n          },\n          \"lastFolderScanned\": {\n            \"type\": \"string\",\n            \"description\": \"Last time the folder was scanned\",\n            \"format\": \"date-time\"\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"lastChapterAdded\": {\n            \"type\": \"string\",\n            \"description\": \"When a Chapter was last added onto the Series\",\n            \"format\": \"date-time\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this chapter.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"metadata\": {\n            \"$ref\": \"#/components/schemas/SeriesMetadata\"\n          },\n          \"ratings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserRating\"\n            },\n            \"nullable\": true\n          },\n          \"progress\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AppUserProgress\"\n            },\n            \"nullable\": true\n          },\n          \"relations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesRelation\"\n            },\n            \"description\": \"Relations to other Series, like Sequels, Prequels, etc\",\n            \"nullable\": true\n          },\n          \"relationOf\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesRelation\"\n            },\n            \"nullable\": true\n          },\n          \"volumes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Volume\"\n            },\n            \"nullable\": true\n          },\n          \"library\": {\n            \"$ref\": \"#/components/schemas/Library\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesByIdsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesDetailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"specials\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"Specials for the Series. These will have their title and range cleaned to remove the special marker and prepare\",\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"All Chapters, excluding Specials and single chapters (0 chapter) for a volume\",\n            \"nullable\": true\n          },\n          \"volumes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VolumeDto\"\n            },\n            \"description\": \"Just the Volumes for the Series (Excludes Volume 0)\",\n            \"nullable\": true\n          },\n          \"storylineChapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"description\": \"These are chapters that are in Volume 0 and should be read AFTER the volumes\",\n            \"nullable\": true\n          },\n          \"unreadCount\": {\n            \"type\": \"integer\",\n            \"description\": \"How many chapters are unread\",\n            \"format\": \"int32\"\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"How many chapters are there\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"This is a special DTO for a UI page in Kavita. This performs sorting and grouping and returns exactly what UI requires for layout.\\r\\nThis is subject to change, do not rely on this Data model.\"\n      },\n      \"SeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"originalName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Sum of pages read from linked Volumes. Calculated at API-time.\",\n            \"format\": \"int32\"\n          },\n          \"latestReadDate\": {\n            \"type\": \"string\",\n            \"description\": \"DateTime representing last time the series was Read. Calculated at API-time.\",\n            \"format\": \"date-time\"\n          },\n          \"lastChapterAdded\": {\n            \"type\": \"string\",\n            \"description\": \"DateTime representing last time a chapter was added to the Series\",\n            \"format\": \"date-time\"\n          },\n          \"userRating\": {\n            \"type\": \"integer\",\n            \"description\": \"Rating from logged in user. Calculated at API-time.\",\n            \"format\": \"int32\"\n          },\n          \"userReview\": {\n            \"type\": \"string\",\n            \"description\": \"Review from logged in user. Calculated at API-time.\",\n            \"nullable\": true\n          },\n          \"format\": {\n            \"$ref\": \"#/components/schemas/MangaFormat\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of words for the series. Only applies to epubs.\",\n            \"format\": \"int64\"\n          },\n          \"libraryId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"libraryName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"folderPath\": {\n            \"type\": \"string\",\n            \"description\": \"The highest level folder for this Series\",\n            \"nullable\": true\n          },\n          \"lastFolderScanned\": {\n            \"type\": \"string\",\n            \"description\": \"The last time the folder for this series was scanned\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/SeriesDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTag\"\n            },\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Genre\"\n            },\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"nullable\": true\n          },\n          \"people\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Person\"\n            },\n            \"description\": \"All people attached at a Series level.\",\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"releaseYear\": {\n            \"type\": \"integer\",\n            \"description\": \"Earliest Year from all chapters\",\n            \"format\": \"int32\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language of the content (BCP-47 code)\",\n            \"nullable\": true\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues/volumes in the series\",\n            \"format\": \"int32\"\n          },\n          \"maxCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of issues/volumes in the series (Max of Volume/Issue field in ComicInfo)\",\n            \"format\": \"int32\"\n          },\n          \"publicationStatus\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"languageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"summaryLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRatingLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override AgeRating\"\n          },\n          \"publicationStatusLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override PublicationStatus\"\n          },\n          \"genresLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"tagsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"writerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"characterLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coloristLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"editorLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"inkerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"lettererLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pencillerLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"publisherLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"translatorLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverArtistLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"releaseYearLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"rowVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesMetadataDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"description\": \"Collections the Series belongs to\",\n            \"nullable\": true\n          },\n          \"genres\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GenreTagDto\"\n            },\n            \"description\": \"Genres for the Series\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TagDto\"\n            },\n            \"description\": \"Collection of all Tags from underlying chapters for a Series\",\n            \"nullable\": true\n          },\n          \"writers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"coverArtists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"publishers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"pencillers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"inkers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"colorists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"letterers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"editors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"translators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDto\"\n            },\n            \"nullable\": true\n          },\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"releaseYear\": {\n            \"type\": \"integer\",\n            \"description\": \"Earliest Year from all chapters\",\n            \"format\": \"int32\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"description\": \"Language of the content (BCP-47 code)\",\n            \"nullable\": true\n          },\n          \"maxCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of issues/volumes in the series (Max of Volume/Issue field in ComicInfo)\",\n            \"format\": \"int32\"\n          },\n          \"totalCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of issues/volumes for the series\",\n            \"format\": \"int32\"\n          },\n          \"publicationStatus\": {\n            \"$ref\": \"#/components/schemas/PublicationStatus\"\n          },\n          \"languageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"summaryLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"ageRatingLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override AgeRating\"\n          },\n          \"publicationStatusLocked\": {\n            \"type\": \"boolean\",\n            \"description\": \"Locked by user so metadata updates from scan loop will not override PublicationStatus\"\n          },\n          \"genresLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"tagsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"writersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"charactersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coloristsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"editorsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"inkersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"letterersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"pencillersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"publishersLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"translatorsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"coverArtistsLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"releaseYearLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SeriesRelation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"relationKind\": {\n            \"$ref\": \"#/components/schemas/RelationKind\"\n          },\n          \"targetSeries\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"targetSeriesId\": {\n            \"type\": \"integer\",\n            \"description\": \"A is Sequel to B. In this example, TargetSeries is A. B will hold the foreign key.\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A relation flows between one series and another.\\r\\nSeries ---kind---> target\"\n      },\n      \"ServerInfoDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"installId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique Id that represents a unique install\",\n            \"nullable\": true\n          },\n          \"os\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"isDocker\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the Kavita install is using Docker\"\n          },\n          \"dotnetVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Version of .NET instance is running\",\n            \"nullable\": true\n          },\n          \"kavitaVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Version of Kavita\",\n            \"nullable\": true\n          },\n          \"numOfCores\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of Cores on the instance\",\n            \"format\": \"int32\"\n          },\n          \"numberOfLibraries\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of libraries on the instance\",\n            \"format\": \"int32\"\n          },\n          \"hasBookmarks\": {\n            \"type\": \"boolean\",\n            \"description\": \"Does any user have bookmarks\"\n          },\n          \"activeSiteTheme\": {\n            \"type\": \"string\",\n            \"description\": \"The site theme the install is using\",\n            \"nullable\": true\n          },\n          \"mangaReaderMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"numberOfUsers\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on the install\",\n            \"format\": \"int32\"\n          },\n          \"numberOfCollections\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of collections on the install\",\n            \"format\": \"int32\"\n          },\n          \"numberOfReadingLists\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of reading lists on the install (Sum of all users)\",\n            \"format\": \"int32\"\n          },\n          \"opdsEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is OPDS enabled\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of files in the instance\",\n            \"format\": \"int32\"\n          },\n          \"totalGenres\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of Genres in the instance\",\n            \"format\": \"int32\"\n          },\n          \"totalPeople\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of People in the instance\",\n            \"format\": \"int32\"\n          },\n          \"storeBookmarksAsWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is this instance storing bookmarks as WebP\"\n          },\n          \"usersOnCardLayout\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on this instance using Card Layout\",\n            \"format\": \"int32\"\n          },\n          \"usersOnListLayout\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users on this instance using List Layout\",\n            \"format\": \"int32\"\n          },\n          \"maxSeriesInALibrary\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Series for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"maxVolumesInASeries\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Volumes for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"maxChaptersInASeries\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Chapters for any library on the instance\",\n            \"format\": \"int32\"\n          },\n          \"usingSeriesRelationships\": {\n            \"type\": \"boolean\",\n            \"description\": \"Does this instance have relationships setup between series\"\n          },\n          \"mangaReaderBackgroundColors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A list of background colors set on the instance\",\n            \"nullable\": true\n          },\n          \"mangaReaderPageSplittingModes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PageSplitOption\"\n            },\n            \"description\": \"A list of Page Split defaults being used on the instance\",\n            \"nullable\": true\n          },\n          \"mangaReaderLayoutModes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LayoutMode\"\n            },\n            \"description\": \"A list of Layout Mode defaults being used on the instance\",\n            \"nullable\": true\n          },\n          \"fileFormats\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileFormatDto\"\n            },\n            \"description\": \"A list of file formats existing in the instance\",\n            \"nullable\": true\n          },\n          \"usingRestrictedProfiles\": {\n            \"type\": \"boolean\",\n            \"description\": \"If there is at least one user that is using an age restricted profile on the instance\"\n          },\n          \"usersWithEmulateComicBook\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of users using the Emulate Comic Book setting\",\n            \"format\": \"int32\"\n          },\n          \"percentOfLibrariesWithFolderWatchingEnabled\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries with folder watching enabled\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInSearch\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Search\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInRecommended\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Recommended\",\n            \"format\": \"float\"\n          },\n          \"percentOfLibrariesIncludedInDashboard\": {\n            \"type\": \"number\",\n            \"description\": \"Percent (0.0-1.0) of libraries included in Dashboard\",\n            \"format\": \"float\"\n          },\n          \"totalReadingHours\": {\n            \"type\": \"integer\",\n            \"description\": \"Total reading hours of all users\",\n            \"format\": \"int64\"\n          },\n          \"storeCoversAsWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is the Server saving covers as WebP\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents information about a Kavita Installation\"\n      },\n      \"ServerSettingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cacheDirectory\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"taskScan\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"loggingLevel\": {\n            \"type\": \"string\",\n            \"description\": \"Logging level for server. Managed in appsettings.json.\",\n            \"nullable\": true\n          },\n          \"taskBackup\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"description\": \"Port the server listens on. Managed in appsettings.json.\",\n            \"format\": \"int32\"\n          },\n          \"allowStatCollection\": {\n            \"type\": \"boolean\",\n            \"description\": \"Allows anonymous information to be collected and sent to KavitaStats\"\n          },\n          \"enableOpds\": {\n            \"type\": \"boolean\",\n            \"description\": \"Enables OPDS connections to be made to the server.\"\n          },\n          \"baseUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Base Url for the kavita. Requires restart to take effect.\",\n            \"nullable\": true\n          },\n          \"bookmarksDirectory\": {\n            \"type\": \"string\",\n            \"description\": \"Where Bookmarks are stored.\",\n            \"nullable\": true\n          },\n          \"emailServiceUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Email service to use for the invite user flow, forgot password, etc.\",\n            \"nullable\": true\n          },\n          \"installVersion\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"installId\": {\n            \"type\": \"string\",\n            \"description\": \"Represents a unique Id to this Kavita installation. Only used in Stats to identify unique installs.\",\n            \"nullable\": true\n          },\n          \"convertBookmarkToWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the server should save bookmarks as WebP encoding\"\n          },\n          \"totalBackups\": {\n            \"type\": \"integer\",\n            \"description\": \"The amount of Backups before cleanup\",\n            \"format\": \"int32\"\n          },\n          \"enableFolderWatching\": {\n            \"type\": \"boolean\",\n            \"description\": \"If Kavita should watch the library folders and process changes\"\n          },\n          \"totalLogs\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of days worth of logs to keep at a given time.\",\n            \"format\": \"int32\"\n          },\n          \"convertCoverToWebP\": {\n            \"type\": \"boolean\",\n            \"description\": \"If the server should save covers as WebP encoding\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ServerStatisticsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"volumeCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"seriesCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalFiles\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalGenres\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalTags\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalPeople\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"totalReadingTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"mostReadSeries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"mostPopularSeries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDtoICount\"\n            },\n            \"description\": \"Total users who have started/reading/read per series\",\n            \"nullable\": true\n          },\n          \"mostActiveUsers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"mostActiveLibraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDtoICount\"\n            },\n            \"nullable\": true\n          },\n          \"recentlyRead\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesDto\"\n            },\n            \"description\": \"Last 5 Series read\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SingleStatCount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SiteTheme\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Theme\",\n            \"nullable\": true\n          },\n          \"normalizedName\": {\n            \"type\": \"string\",\n            \"description\": \"Normalized name for lookups\",\n            \"nullable\": true\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File path to the content. Stored under API.Services.DirectoryService.SiteThemeDirectory.\\r\\nMust be a .css file\",\n            \"nullable\": true\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\",\n            \"description\": \"Only one theme can have this. Will auto-set this as default for new user accounts\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/ThemeProvider\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a set of css overrides the user can upload to Kavita and will load into webui\"\n      },\n      \"SiteThemeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the Theme\",\n            \"nullable\": true\n          },\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"File path to the content. Stored under API.Services.DirectoryService.SiteThemeDirectory.\\r\\nMust be a .css file\",\n            \"nullable\": true\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\",\n            \"description\": \"Only one theme can have this. Will auto-set this as default for new user accounts\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/ThemeProvider\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"selector\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Represents a set of css overrides the user can upload to Kavita and will load into webui\"\n      },\n      \"SortField\": {\n        \"enum\": [\n          1,\n          2,\n          3,\n          4,\n          5,\n          6\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"SortOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortField\": {\n            \"$ref\": \"#/components/schemas/SortField\"\n          },\n          \"isAscending\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Sorting Options for a query\"\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"normalizedTitle\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"externalTag\": {\n            \"type\": \"boolean\"\n          },\n          \"seriesMetadatas\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SeriesMetadata\"\n            },\n            \"nullable\": true\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TestEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ThemeProvider\": {\n        \"enum\": [\n          1,\n          2\n        ],\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      },\n      \"TokenRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TopReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"comicsTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Amount of time read on Comic libraries\",\n            \"format\": \"int64\"\n          },\n          \"booksTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Amount of time read on\",\n            \"format\": \"int64\"\n          },\n          \"mangaTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateAgeRestrictionDto\": {\n        \"required\": [\n          \"ageRating\",\n          \"includeUnknowns\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ageRating\": {\n            \"$ref\": \"#/components/schemas/AgeRating\"\n          },\n          \"includeUnknowns\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateDefaultThemeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"themeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateDeviceDto\": {\n        \"required\": [\n          \"emailAddress\",\n          \"id\",\n          \"name\",\n          \"platform\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"platform\": {\n            \"$ref\": \"#/components/schemas/DevicePlatform\"\n          },\n          \"emailAddress\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateEmailDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateLibraryDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LibraryType\"\n          },\n          \"folders\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          },\n          \"folderWatching\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInDashboard\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInRecommended\": {\n            \"type\": \"boolean\"\n          },\n          \"includeInSearch\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateLibraryForUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"selectedLibraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateNotificationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"currentVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Current installed Version\",\n            \"nullable\": true\n          },\n          \"updateVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Semver of the release version\\r\\n<example>0.4.3</example>\",\n            \"nullable\": true\n          },\n          \"updateBody\": {\n            \"type\": \"string\",\n            \"description\": \"Release body in HTML\",\n            \"nullable\": true\n          },\n          \"updateTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the release\",\n            \"nullable\": true\n          },\n          \"updateUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Github Url\",\n            \"nullable\": true\n          },\n          \"isDocker\": {\n            \"type\": \"boolean\",\n            \"description\": \"If this install is within Docker\"\n          },\n          \"isPrerelease\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is this a pre-release\"\n          },\n          \"publishDate\": {\n            \"type\": \"string\",\n            \"description\": \"Date of the publish\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Update Notification denoting a new release available for user to update to\"\n      },\n      \"UpdateReadingListByChapterDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chapterId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByMultipleDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"volumeIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"chapterIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByMultipleSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListBySeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListByVolumeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"volumeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListDto\": {\n        \"required\": [\n          \"readingListId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"promoted\": {\n            \"type\": \"boolean\"\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateReadingListPosition\": {\n        \"required\": [\n          \"readingListId\",\n          \"readingListItemId\",\n          \"toPosition\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingListId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"readingListItemId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"fromPosition\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"toPosition\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"DTO for moving a reading list item to another position within the same list\"\n      },\n      \"UpdateRelatedSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"adaptations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"characters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"contains\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"others\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"prequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"sequels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"sideStories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"spinOffs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeSettings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"alternativeVersions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"doujinshis\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          },\n          \"editions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"localizedName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"sortName\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"coverImageLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"nameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"sortNameLocked\": {\n            \"type\": \"boolean\"\n          },\n          \"localizedNameLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesForTagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"$ref\": \"#/components/schemas/CollectionTagDto\"\n          },\n          \"seriesIdsToRemove\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesMetadataDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesMetadata\": {\n            \"$ref\": \"#/components/schemas/SeriesMetadataDto\"\n          },\n          \"collectionTags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionTagDto\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateSeriesRatingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userRating\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"userReview\": {\n            \"maxLength\": 1000,\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true\n          },\n          \"libraries\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"A list of libraries to grant access to\",\n            \"nullable\": true\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UpdateWantToReadDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"seriesIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"description\": \"List of Series Ids that will be Added/Removed\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"A list of Series to pass when working with Want To Read APIs\"\n      },\n      \"UploadFileDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of the Entity\",\n            \"format\": \"int32\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"Base Url encoding of the file to upload from (can be null)\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UploadUrlDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"External url\",\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"preferences\": {\n            \"$ref\": \"#/components/schemas/UserPreferencesDto\"\n          },\n          \"ageRestriction\": {\n            \"$ref\": \"#/components/schemas/AgeRestrictionDto\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserDtoICount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/UserDto\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserPreferencesDto\": {\n        \"required\": [\n          \"autoCloseMenu\",\n          \"backgroundColor\",\n          \"blurUnreadSummaries\",\n          \"bookReaderFontFamily\",\n          \"bookReaderFontSize\",\n          \"bookReaderImmersiveMode\",\n          \"bookReaderLayoutMode\",\n          \"bookReaderLineSpacing\",\n          \"bookReaderMargin\",\n          \"bookReaderReadingDirection\",\n          \"bookReaderTapToPaginate\",\n          \"bookReaderThemeName\",\n          \"emulateBook\",\n          \"globalPageLayoutMode\",\n          \"layoutMode\",\n          \"noTransitions\",\n          \"pageSplitOption\",\n          \"promptForDownloadSize\",\n          \"readerMode\",\n          \"readingDirection\",\n          \"scalingOption\",\n          \"showScreenHints\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"readingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"scalingOption\": {\n            \"$ref\": \"#/components/schemas/ScalingOption\"\n          },\n          \"pageSplitOption\": {\n            \"$ref\": \"#/components/schemas/PageSplitOption\"\n          },\n          \"readerMode\": {\n            \"$ref\": \"#/components/schemas/ReaderMode\"\n          },\n          \"layoutMode\": {\n            \"$ref\": \"#/components/schemas/LayoutMode\"\n          },\n          \"emulateBook\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Emulate a book by applying a shadow effect on the pages\"\n          },\n          \"backgroundColor\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Manga Reader Option: Background color of the reader\"\n          },\n          \"autoCloseMenu\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Allow the menu to close after 6 seconds without interaction\"\n          },\n          \"showScreenHints\": {\n            \"type\": \"boolean\",\n            \"description\": \"Manga Reader Option: Show screen hints to the user on some actions, ie) pagination direction change\"\n          },\n          \"bookReaderMargin\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override extra Margin\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderLineSpacing\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override line-height\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Book Reader Option: Override font size\",\n            \"format\": \"int32\"\n          },\n          \"bookReaderFontFamily\": {\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Book Reader Option: Maps to the default Kavita font-family (inherit) or an override\"\n          },\n          \"bookReaderTapToPaginate\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: Allows tapping on side of screens to paginate\"\n          },\n          \"bookReaderReadingDirection\": {\n            \"$ref\": \"#/components/schemas/ReadingDirection\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/SiteTheme\"\n          },\n          \"bookReaderThemeName\": {\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"bookReaderLayoutMode\": {\n            \"$ref\": \"#/components/schemas/BookPageLayoutMode\"\n          },\n          \"bookReaderImmersiveMode\": {\n            \"type\": \"boolean\",\n            \"description\": \"Book Reader Option: A flag that hides the menu-ing system behind a click on the screen. This should be used with tap to paginate, but the app doesn't enforce this.\"\n          },\n          \"globalPageLayoutMode\": {\n            \"$ref\": \"#/components/schemas/PageLayoutMode\"\n          },\n          \"blurUnreadSummaries\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: If unread summaries should be blurred until expanded or unless user has read it already\"\n          },\n          \"promptForDownloadSize\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita prompt user to confirm downloads that are greater than 100 MB.\"\n          },\n          \"noTransitions\": {\n            \"type\": \"boolean\",\n            \"description\": \"UI Site Global Setting: Should Kavita disable CSS transitions\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserReadStatistics\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"totalPagesRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of pages read\",\n            \"format\": \"int64\"\n          },\n          \"totalWordsRead\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of words read\",\n            \"format\": \"int64\"\n          },\n          \"timeSpentReading\": {\n            \"type\": \"integer\",\n            \"description\": \"Total time spent reading based on estimates\",\n            \"format\": \"int64\"\n          },\n          \"chaptersRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"lastActive\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"avgHoursPerWeekSpentReading\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"percentReadPerLibrary\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SingleStatCount\"\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Volume\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A String representation of the volume number. Allows for floats.\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"integer\",\n            \"description\": \"The minimum number in the Name field in Int form\",\n            \"format\": \"int32\"\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Chapter\"\n            },\n            \"nullable\": true\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"coverImage\": {\n            \"type\": \"string\",\n            \"description\": \"Absolute path to the (managed) image file\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"description\": \"Total pages of all chapters in this volume\",\n            \"format\": \"int32\"\n          },\n          \"wordCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total Word count of all chapters in this volume.\",\n            \"format\": \"int64\"\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"series\": {\n            \"$ref\": \"#/components/schemas/Series\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"VolumeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"number\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"pages\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pagesRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"seriesId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"chapters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChapterDto\"\n            },\n            \"nullable\": true\n          },\n          \"minHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"maxHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"avgHoursToRead\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"apiKey\",\n        \"description\": \"Please insert JWT with Bearer into field\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"Bearer\": [ ]\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Account\",\n      \"description\": \"All Account matters\"\n    },\n    {\n      \"name\": \"Collection\",\n      \"description\": \"APIs for Collections\"\n    },\n    {\n      \"name\": \"Device\",\n      \"description\": \"Responsible interacting and creating Devices\"\n    },\n    {\n      \"name\": \"Download\",\n      \"description\": \"All APIs related to downloading entities from the system. Requires Download Role or Admin Role.\"\n    },\n    {\n      \"name\": \"Image\",\n      \"description\": \"Responsible for servicing up images stored in Kavita for entities\"\n    },\n    {\n      \"name\": \"Reader\",\n      \"description\": \"For all things regarding reading, mainly focusing on non-Book related entities\"\n    },\n    {\n      \"name\": \"Search\",\n      \"description\": \"Responsible for the Search interface from the UI\"\n    },\n    {\n      \"name\": \"Tachiyomi\",\n      \"description\": \"All APIs are for Tachiyomi extension and app. They have hacks for our implementation and should not be used for any\\r\\nother purposes.\"\n    },\n    {\n      \"name\": \"Upload\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"WantToRead\",\n      \"description\": \"Responsible for all things Want To Read\"\n    }\n  ]\n}"], "filenames": ["API/Controllers/AccountController.cs", "API/DTOs/Account/UpdateEmailDto.cs", "API/Services/Tasks/StatsService.cs", "UI/Web/src/app/_services/account.service.ts", "UI/Web/src/app/user-settings/change-email/change-email.component.html", "UI/Web/src/app/user-settings/change-email/change-email.component.ts", "openapi.json"], "buggy_code_start_loc": [292, 5, 209, 207, 41, 36, 10], "buggy_code_end_loc": [293, 5, 209, 209, 41, 64, 13690], "fixing_code_start_loc": [292, 6, 210, 207, 42, 37, 10], "fixing_code_end_loc": [301, 7, 211, 209, 53, 65, 13695], "type": "CWE-306", "message": "Missing Authentication for Critical Function in GitHub repository kareadita/kavita prior to 0.7.0.", "other": {"cve": {"id": "CVE-2023-0919", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-19T15:15:10.433", "lastModified": "2023-02-28T20:26:40.133", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Missing Authentication for Critical Function in GitHub repository kareadita/kavita prior to 0.7.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-306"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kavitareader:kavita:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.7.0", "matchCriteriaId": "4AD2FD65-B504-4E7E-8544-8457C6C85EB6"}]}]}], "references": [{"url": "https://github.com/kareadita/kavita/commit/6648b79e1b2f92449d5816d0722b7a3d72f259d5", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/3c514923-473f-4c50-ae0d-d002a41fe70f", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/kareadita/kavita/commit/6648b79e1b2f92449d5816d0722b7a3d72f259d5"}}