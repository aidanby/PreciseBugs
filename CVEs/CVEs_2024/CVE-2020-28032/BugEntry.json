{"buggy_code": ["<?php\n/**\n * Iterator for arrays requiring filtered values\n *\n * @package Requests\n * @subpackage Utilities\n */\n\n/**\n * Iterator for arrays requiring filtered values\n *\n * @package Requests\n * @subpackage Utilities\n */\nclass Requests_Utility_FilteredIterator extends ArrayIterator {\n\t/**\n\t * Callback to run as a filter\n\t *\n\t * @var callable\n\t */\n\tprotected $callback;\n\n\t/**\n\t * Create a new iterator\n\t *\n\t * @param array $data\n\t * @param callable $callback Callback to be called on each value\n\t */\n\tpublic function __construct($data, $callback) {\n\t\tparent::__construct($data);\n\n\t\t$this->callback = $callback;\n\t}\n\n\t/**\n\t * Get the current item's value after filtering\n\t *\n\t * @return string\n\t */\n\tpublic function current() {\n\t\t$value = parent::current();\n\t\t$value = call_user_func($this->callback, $value);\n\t\treturn $value;\n\t}\n}\n", "<?php\n\n/**\n * @group functions.php\n */\nclass Tests_Functions extends WP_UnitTestCase {\n\tfunction test_wp_parse_args_object() {\n\t\t$x        = new MockClass;\n\t\t$x->_baba = 5;\n\t\t$x->yZ    = 'baba'; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t$x->a     = array( 5, 111, 'x' );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x )\n\t\t);\n\t\t$y = new MockClass;\n\t\t$this->assertSame( array(), wp_parse_args( $y ) );\n\t}\n\n\tfunction test_wp_parse_args_array() {\n\t\t// Arrays.\n\t\t$a = array();\n\t\t$this->assertSame( array(), wp_parse_args( $a ) );\n\t\t$b = array(\n\t\t\t'_baba' => 5,\n\t\t\t'yZ'    => 'baba',\n\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t);\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $b )\n\t\t);\n\t}\n\n\tfunction test_wp_parse_args_defaults() {\n\t\t$x        = new MockClass;\n\t\t$x->_baba = 5;\n\t\t$x->yZ    = 'baba'; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t$x->a     = array( 5, 111, 'x' );\n\t\t$d        = array( 'pu' => 'bu' );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'pu'    => 'bu',\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x, $d )\n\t\t);\n\t\t$e = array( '_baba' => 6 );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x, $e )\n\t\t);\n\t}\n\n\tfunction test_wp_parse_args_other() {\n\t\t$b = true;\n\t\twp_parse_str( $b, $s );\n\t\t$this->assertSame( $s, wp_parse_args( $b ) );\n\t\t$q = 'x=5&_baba=dudu&';\n\t\twp_parse_str( $q, $ss );\n\t\t$this->assertSame( $ss, wp_parse_args( $q ) );\n\t}\n\n\t/**\n\t * @ticket 30753\n\t */\n\tfunction test_wp_parse_args_boolean_strings() {\n\t\t$args = wp_parse_args( 'foo=false&bar=true' );\n\t\t$this->assertInternalType( 'string', $args['foo'] );\n\t\t$this->assertInternalType( 'string', $args['bar'] );\n\t}\n\n\t/**\n\t * @ticket 35972\n\t */\n\tfunction test_bool_from_yn() {\n\t\t$this->assertTrue( bool_from_yn( 'Y' ) );\n\t\t$this->assertTrue( bool_from_yn( 'y' ) );\n\t\t$this->assertFalse( bool_from_yn( 'n' ) );\n\t}\n\n\tfunction test_path_is_absolute() {\n\t\t$absolute_paths = array(\n\t\t\t'/',\n\t\t\t'/foo/',\n\t\t\t'/foo',\n\t\t\t'/FOO/bar',\n\t\t\t'/foo/bar/',\n\t\t\t'/foo/../bar/',\n\t\t\t'\\\\WINDOWS',\n\t\t\t'C:\\\\',\n\t\t\t'C:\\\\WINDOWS',\n\t\t\t'\\\\\\\\sambashare\\\\foo',\n\t\t);\n\t\tforeach ( $absolute_paths as $path ) {\n\t\t\t$this->assertTrue( path_is_absolute( $path ), \"path_is_absolute('$path') should return true\" );\n\t\t}\n\t}\n\n\tfunction test_path_is_not_absolute() {\n\t\t$relative_paths = array(\n\t\t\t'',\n\t\t\t'.',\n\t\t\t'..',\n\t\t\t'../foo',\n\t\t\t'../',\n\t\t\t'../foo.bar',\n\t\t\t'foo/bar',\n\t\t\t'foo',\n\t\t\t'FOO',\n\t\t\t'..\\\\WINDOWS',\n\t\t);\n\t\tforeach ( $relative_paths as $path ) {\n\t\t\t$this->assertFalse( path_is_absolute( $path ), \"path_is_absolute('$path') should return false\" );\n\t\t}\n\t}\n\n\t/**\n\t * @ticket 33265\n\t * @ticket 35996\n\t *\n\t * @dataProvider data_wp_normalize_path\n\t */\n\tfunction test_wp_normalize_path( $path, $expected ) {\n\t\t$this->assertSame( $expected, wp_normalize_path( $path ) );\n\t}\n\n\tfunction data_wp_normalize_path() {\n\t\treturn array(\n\t\t\t// Windows paths.\n\t\t\tarray( 'C:\\\\www\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( 'C:\\\\www\\\\\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( 'c:/www/path', 'C:/www/path' ),\n\t\t\tarray( 'c:\\\\www\\\\path\\\\', 'C:/www/path/' ), // Uppercase drive letter.\n\t\t\tarray( 'c:\\\\\\\\www\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( '\\\\\\\\Domain\\\\DFSRoots\\\\share\\\\path\\\\', '//Domain/DFSRoots/share/path/' ),\n\t\t\tarray( '\\\\\\\\Server\\\\share\\\\path', '//Server/share/path' ),\n\t\t\tarray( '\\\\\\\\Server\\\\share', '//Server/share' ),\n\n\t\t\t// Linux paths.\n\t\t\tarray( '/www/path/', '/www/path/' ),\n\t\t\tarray( '/www/path/////', '/www/path/' ),\n\t\t\tarray( '/www/path', '/www/path' ),\n\n\t\t\t// PHP stream wrappers.\n\t\t\tarray( 'php://input', 'php://input' ),\n\t\t\tarray( 'http://example.com//path.ext', 'http://example.com/path.ext' ),\n\t\t\tarray( 'file://c:\\\\www\\\\path\\\\', 'file://C:/www/path/' ),\n\t\t);\n\t}\n\n\tfunction test_wp_unique_filename() {\n\n\t\t$testdir = DIR_TESTDATA . '/images/';\n\n\t\t// Sanity check.\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcdefg.png' ), 'Sanitiy check failed' );\n\n\t\t// Check number is appended for file already exists.\n\t\t$this->assertFileExists( $testdir . 'test-image.png', 'Test image does not exist' );\n\t\t$this->assertSame( 'test-image-1.png', wp_unique_filename( $testdir, 'test-image.png' ), 'Number not appended correctly' );\n\t\t$this->assertFileNotExists( $testdir . 'test-image-1.png' );\n\n\t\t// Check special chars.\n\t\t$this->assertSame( 'testtest-image.png', wp_unique_filename( $testdir, 'testt\u00e9st-imag\u00e9.png' ), 'Filename with special chars failed' );\n\n\t\t// Check special chars with potential conflicting name.\n\t\t$this->assertSame( 'test-image-1.png', wp_unique_filename( $testdir, 't\u00e9st-imag\u00e9.png' ), 'Filename with special chars failed' );\n\n\t\t// Check with single quotes in name (somehow).\n\t\t$this->assertSame( 'abcdefgh.png', wp_unique_filename( $testdir, \"abcdefg'h.png\" ), 'File with quote failed' );\n\n\t\t// Check with double quotes in name (somehow).\n\t\t$this->assertSame( 'abcdefgh.png', wp_unique_filename( $testdir, 'abcdefg\"h.png' ), 'File with quote failed' );\n\n\t\t// Test crazy name (useful for regression tests).\n\t\t$this->assertSame( '12af34567890@..^_qwerty-fghjkl-zx.png', wp_unique_filename( $testdir, '12%af34567890#~!@#$..%^&*()|_+qwerty  fgh`jkl zx<>?:\"{}[]=\"\\'/?.png' ), 'Failed crazy file name' );\n\n\t\t// Test slashes in names.\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\fg.png' ), 'Slash not removed' );\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\\\fg.png' ), 'Double slashed not removed' );\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\\\\\fg.png' ), 'Tripple slashed not removed' );\n\t}\n\n\t/**\n\t * @ticket 42437\n\t */\n\tfunction test_unique_filename_with_dimension_like_filename() {\n\t\t$testdir = DIR_TESTDATA . '/images/';\n\n\t\tadd_filter( 'upload_dir', array( $this, 'upload_dir_patch_basedir' ) );\n\n\t\t// Test collision with \"dimension-like\" original filename.\n\t\t$this->assertSame( 'one-blue-pixel-100x100-1.png', wp_unique_filename( $testdir, 'one-blue-pixel-100x100.png' ) );\n\t\t// Test collision with existing sub-size filename.\n\t\t// Existing files: one-blue-pixel-100x100.png, one-blue-pixel-1-100x100.png.\n\t\t$this->assertSame( 'one-blue-pixel-2.png', wp_unique_filename( $testdir, 'one-blue-pixel.png' ) );\n\t\t// Same as above with upper case extension.\n\t\t$this->assertSame( 'one-blue-pixel-2.png', wp_unique_filename( $testdir, 'one-blue-pixel.PNG' ) );\n\n\t\tremove_filter( 'upload_dir', array( $this, 'upload_dir_patch_basedir' ) );\n\t}\n\n\t// Callback to patch \"basedir\" when used in `wp_unique_filename()`.\n\tfunction upload_dir_patch_basedir( $upload_dir ) {\n\t\t$upload_dir['basedir'] = DIR_TESTDATA . '/images/';\n\t\treturn $upload_dir;\n\t}\n\n\t/**\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_maybe_serialize( $value ) {\n\t\tif ( is_array( $value ) || is_object( $value ) ) {\n\t\t\t$expected = serialize( $value );\n\t\t} else {\n\t\t\t$expected = $value;\n\t\t}\n\n\t\t$this->assertSame( $expected, maybe_serialize( $value ) );\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t */\n\tfunction test_maybe_serialize_with_double_serialization( $value ) {\n\t\t$expected = serialize( $value );\n\n\t\t$this->assertSame( $expected, maybe_serialize( $value ) );\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_maybe_unserialize( $value, $is_serialized ) {\n\t\tif ( $is_serialized ) {\n\t\t\t$expected = unserialize( trim( $value ) );\n\t\t} else {\n\t\t\t$expected = $value;\n\t\t}\n\n\t\tif ( is_object( $expected ) ) {\n\t\t\t$this->assertEquals( $expected, maybe_unserialize( $value ) );\n\t\t} else {\n\t\t\t$this->assertSame( $expected, maybe_unserialize( $value ) );\n\t\t}\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_is_serialized( $value, $expected ) {\n\t\t$this->assertSame( $expected, is_serialized( $value ) );\n\t}\n\n\tfunction data_is_serialized() {\n\t\treturn array(\n\t\t\tarray( serialize( null ), true ),\n\t\t\tarray( serialize( true ), true ),\n\t\t\tarray( serialize( false ), true ),\n\t\t\tarray( serialize( -25 ), true ),\n\t\t\tarray( serialize( 25 ), true ),\n\t\t\tarray( serialize( 1.1 ), true ),\n\t\t\tarray( serialize( 'this string will be serialized' ), true ),\n\t\t\tarray( serialize( \"a\\nb\" ), true ),\n\t\t\tarray( serialize( array() ), true ),\n\t\t\tarray( serialize( array( 1, 1, 2, 3, 5, 8, 13 ) ), true ),\n\t\t\tarray(\n\t\t\t\tserialize(\n\t\t\t\t\t(object) array(\n\t\t\t\t\t\t'test' => true,\n\t\t\t\t\t\t'3',\n\t\t\t\t\t\t4,\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tarray( '   s:25:\"this string is serialized\";   ', true ),\n\t\t);\n\t}\n\n\tfunction data_is_not_serialized() {\n\t\treturn array(\n\t\t\tarray( null, false ),\n\t\t\tarray( true, false ),\n\t\t\tarray( false, false ),\n\t\t\tarray( -25, false ),\n\t\t\tarray( 25, false ),\n\t\t\tarray( 1.1, false ),\n\t\t\tarray( 'this string will be serialized', false ),\n\t\t\tarray( \"a\\nb\", false ),\n\t\t\tarray( array(), false ),\n\t\t\tarray( array( 1, 1, 2, 3, 5, 8, 13 ), false ),\n\t\t\tarray(\n\t\t\t\t(object) array(\n\t\t\t\t\t'test' => true,\n\t\t\t\t\t'3',\n\t\t\t\t\t4,\n\t\t\t\t),\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\tarray( 'a string', false ),\n\t\t\tarray( 'garbage:a:0:garbage;', false ),\n\t\t\tarray( 's:4:test;', false ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 46570\n\t * @dataProvider data_is_serialized_should_return_true_for_large_floats\n\t */\n\tfunction test_is_serialized_should_return_true_for_large_floats( $value ) {\n\t\t$this->assertTrue( is_serialized( $value ) );\n\t}\n\n\tfunction data_is_serialized_should_return_true_for_large_floats() {\n\t\treturn array(\n\t\t\tarray( serialize( 1.7976931348623157E+308 ) ),\n\t\t\tarray( serialize( array( 1.7976931348623157E+308, 1.23e50 ) ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 17375\n\t */\n\tfunction test_no_new_serializable_types() {\n\t\t$this->assertFalse( is_serialized( 'C:16:\"Serialized_Class\":6:{a:0:{}}' ) );\n\t}\n\n\t/**\n\t * @group add_query_arg\n\t */\n\tfunction test_add_query_arg() {\n\t\t$old_req_uri = $_SERVER['REQUEST_URI'];\n\n\t\t$urls = array(\n\t\t\t'/',\n\t\t\t'/2012/07/30/',\n\t\t\t'edit.php',\n\t\t\tadmin_url( 'edit.php' ),\n\t\t\tadmin_url( 'edit.php', 'https' ),\n\t\t);\n\n\t\t$frag_urls = array(\n\t\t\t'/#frag',\n\t\t\t'/2012/07/30/#frag',\n\t\t\t'edit.php#frag',\n\t\t\tadmin_url( 'edit.php#frag' ),\n\t\t\tadmin_url( 'edit.php#frag', 'https' ),\n\t\t);\n\n\t\tforeach ( $urls as $url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( 'foo', '1', $url ) );\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( array( 'foo' => '1' ), $url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $url;\n\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tforeach ( $frag_urls as $frag_url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\t\t\t$url                    = str_replace( '#frag', '', $frag_url );\n\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( 'foo', '1', $frag_url ) );\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( array( 'foo' => '1' ), $frag_url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$frag_url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$frag_url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $frag_url;\n\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$qs_urls = array(\n\t\t\t'baz=1', // #WP4903\n\t\t\t'/?baz',\n\t\t\t'/2012/07/30/?baz',\n\t\t\t'edit.php?baz',\n\t\t\tadmin_url( 'edit.php?baz' ),\n\t\t\tadmin_url( 'edit.php?baz', 'https' ),\n\t\t\tadmin_url( 'edit.php?baz&za=1' ),\n\t\t\tadmin_url( 'edit.php?baz=1&za=1' ),\n\t\t\tadmin_url( 'edit.php?baz=0&za=0' ),\n\t\t);\n\n\t\tforeach ( $qs_urls as $url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( 'foo', '1', $url ) );\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( array( 'foo' => '1' ), $url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $url;\n\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$_SERVER['REQUEST_URI'] = $old_req_uri;\n\t}\n\n\t/**\n\t * @ticket 31306\n\t */\n\tfunction test_add_query_arg_numeric_keys() {\n\t\t$url = add_query_arg( array( 'foo' => 'bar' ), '1=1' );\n\t\t$this->assertSame( '1=1&foo=bar', $url );\n\n\t\t$url = add_query_arg(\n\t\t\tarray(\n\t\t\t\t'foo' => 'bar',\n\t\t\t\t'1'   => '2',\n\t\t\t),\n\t\t\t'1=1'\n\t\t);\n\t\t$this->assertSame( '1=2&foo=bar', $url );\n\n\t\t$url = add_query_arg( array( '1' => '2' ), 'foo=bar' );\n\t\t$this->assertSame( 'foo=bar&1=2', $url );\n\t}\n\n\t/**\n\t * @ticket 21594\n\t */\n\tfunction test_get_allowed_mime_types() {\n\t\t$mimes = get_allowed_mime_types();\n\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tadd_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = get_allowed_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertEmpty( $mimes );\n\n\t\tremove_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = get_allowed_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\t}\n\n\t/**\n\t * @ticket 21594\n\t */\n\tfunction test_wp_get_mime_types() {\n\t\t$mimes = wp_get_mime_types();\n\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tadd_filter( 'mime_types', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertEmpty( $mimes );\n\n\t\tremove_filter( 'mime_types', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\t// 'upload_mimes' should not affect wp_get_mime_types().\n\t\tadd_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tremove_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes2 = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes2 );\n\t\t$this->assertNotEmpty( $mimes2 );\n\t\t$this->assertSame( $mimes2, $mimes );\n\t}\n\n\t/**\n\t * @ticket 23688\n\t */\n\tfunction test_canonical_charset() {\n\t\t$orig_blog_charset = get_option( 'blog_charset' );\n\n\t\tupdate_option( 'blog_charset', 'utf8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'utf-8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'UTF8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'UTF-8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'ISO-8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'ISO8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'iso8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'iso-8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\t// Arbitrary strings are passed through.\n\t\tupdate_option( 'blog_charset', 'foobarbaz' );\n\t\t$this->assertSame( 'foobarbaz', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', $orig_blog_charset );\n\t}\n\n\t/**\n\t * @ticket 43977\n\t * @dataProvider data_wp_parse_list\n\t */\n\tfunction test_wp_parse_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_list() {\n\t\treturn array(\n\t\t\tarray( array( '1', '2', '3', '4' ), '1,2,3,4' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple,banana,carrot,dog' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1, 2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), ',1,2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,banana,' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2 ,apple,banana' ),\n\t\t\tarray( array(), '' ),\n\t\t\tarray( array(), ',' ),\n\t\t\tarray( array(), ',,' ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_wp_parse_id_list\n\t */\n\tfunction test_wp_parse_id_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_id_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_id_list() {\n\t\treturn array(\n\t\t\tarray( array( 1, 2, 3, 4 ), '1,2,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '1, 2,,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '1,2,2,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( '1', '2', '3', '4', '3' ) ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( 1, '2', 3, '4' ) ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '-1,2,-3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( -1, 2, '-3', '4' ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_wp_parse_slug_list\n\t */\n\tfunction test_wp_parse_slug_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_slug_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_slug_list() {\n\t\treturn array(\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple,banana,carrot,dog' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple, banana,,carrot,dog' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple banana carrot dog' ),\n\t\t\tarray( array( 'apple', 'banana-carrot', 'd-o-g' ), array( 'apple ', 'banana carrot', 'd o g' ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_device_can_upload\n\t */\n\tfunction test_device_can_upload( $user_agent, $expected ) {\n\t\t$_SERVER['HTTP_USER_AGENT'] = $user_agent;\n\t\t$actual                     = _device_can_upload();\n\t\tunset( $_SERVER['HTTP_USER_AGENT'] );\n\t\t$this->assertSame( $expected, $actual );\n\t}\n\n\tfunction data_device_can_upload() {\n\t\treturn array(\n\t\t\t// iPhone iOS 5.0.1, Safari 5.1.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9A406)',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPad iOS 3.2, Safari 4.0.4.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPod iOS 4.3.3, Safari 5.0.2.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; ja-jp) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPhone iOS 6.0.0, Safari 6.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// iPad iOS 6.0.0, Safari 6.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Android 2.2, Android Webkit Browser.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// BlackBerry 9900, BlackBerry browser.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (BlackBerry; U; BlackBerry 9900; en) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.1.0.346 Mobile Safari/534.11+',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Windows Phone 8.0, Internet Explorer 10.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Ubuntu desktop, Firefox 41.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:41.0) Gecko/20100101 Firefox/41.0',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 9064\n\t */\n\tfunction test_wp_extract_urls() {\n\t\t$original_urls = array(\n\t\t\t'http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html',\n\t\t\t'http://this.com',\n\t\t\t'http://127.0.0.1',\n\t\t\t'http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&2134362574863.437',\n\t\t\t'http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html',\n\t\t\t'http://wordpress-core.com:8080/',\n\t\t\t'http://www.website.com:5000',\n\t\t\t'http://wordpress-core/?346236346326&2134362574863.437',\n\t\t\t'http://\u0627\u0641\u063a\u0627\u0646\u0633\u062a\u0627.icom.museum',\n\t\t\t'http://\u0627\u0644\u062c\u0632\u0627\u0626\u0631.icom.museum',\n\t\t\t'http://\u00f6sterreich.icom.museum',\n\t\t\t'http://\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6.icom.museum',\n\t\t\t'http://\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u044c.icom.museum',\n\t\t\t'http://belgi\u00eb.icom.museum',\n\t\t\t'http://\u0431\u044a\u043b\u0433\u0430\u0440\u0438\u044f.icom.museum',\n\t\t\t'http://\u062a\u0634\u0627\u062f\u0631.icom.museum',\n\t\t\t'http://\u4e2d\u56fd.icom.museum',\n\t\t\t// 'http://\u0627\u0644\u0642\u0645\u0631.icom.museum',         // Comoros http://\u0627\u0644\u0642\u0645\u0631.icom.museum\n\t\t\t// 'http://\u03ba\u03c5\u03c0\u03c1\u03bf\u03c2.icom.museum',        // Cyprus  http://\u03ba\u03c5\u03c0\u03c1\u03bf\u03c2.icom.museum\n\t\t\t'http://\u010desk\u00e1republika.icom.museum',\n\t\t\t// 'http://\u0645\u0635\u0631.icom.museum',           // Egypt   http://\u0645\u0635\u0631.icom.museum\n\t\t\t'http://\u03b5\u03bb\u03bb\u03ac\u03b4\u03b1.icom.museum',\n\t\t\t'http://magyarorsz\u00e1g.icom.museum',\n\t\t\t'http://\u00edsland.icom.museum',\n\t\t\t'http://\u092d\u093e\u0930\u0924.icom.museum',\n\t\t\t'http://\u0627\u064a\u0631\u0627\u0646.icom.museum',\n\t\t\t'http://\u00e9ire.icom.museum',\n\t\t\t'http://\u05d0\u05d9\u05e7\u05d5\u05f4\u05dd.\u05d9\u05e9\u05e8\u05d0\u05dc.museum',\n\t\t\t'http://\u65e5\u672c.icom.museum',\n\t\t\t'http://\u0627\u0644\u0623\u0631\u062f\u0646.icom.museum',\n\t\t\t'http://\u049b\u0430\u0437\u0430\u049b\u0441\u0442\u0430\u043d.icom.museum',\n\t\t\t'http://\ud55c\uad6d.icom.museum',\n\t\t\t'http://\u043a\u044b\u0440\u0433\u044b\u0437\u0441\u0442\u0430\u043d.icom.museum',\n\t\t\t'http://\u0ea5\u0eb2\u0ea7.icom.museum',\n\t\t\t'http://\u0644\u0628\u0646\u0627\u0646.icom.museum',\n\t\t\t'http://\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430.icom.museum',\n\t\t\t// 'http://\u0645\u0648\u0631\u064a\u062a\u0627\u0646\u064a\u0627.icom.museum',     // Mauritania http://\u0645\u0648\u0631\u064a\u062a\u0627\u0646\u064a\u0627.icom.museum\n\t\t\t'http://m\u00e9xico.icom.museum',\n\t\t\t'http://\u043c\u043e\u043d\u0433\u043e\u043b\u0443\u043b\u0441.icom.museum',\n\t\t\t// 'http://\u0627\u0644\u0645\u063a\u0631\u0628.icom.museum',        // Morocco    http://\u0627\u0644\u0645\u063a\u0631\u0628.icom.museum\n\t\t\t'http://\u0928\u0947\u092a\u093e\u0932.icom.museum',\n\t\t\t// 'http://\u0639\u0645\u0627\u0646.icom.museum',          // Oman       http://\u0639\u0645\u0627\u0646.icom.museum\n\t\t\t'http://\u0642\u0637\u0631.icom.museum',\n\t\t\t'http://rom\u00e2nia.icom.museum',\n\t\t\t'http://\u0440\u043e\u0441\u0441\u0438\u044f.\u0438\u043a\u043e\u043c.museum',\n\t\t\t'http://\u0441\u0440\u0431\u0438\u0458\u0430\u0438\u0446\u0440\u043d\u0430\u0433\u043e\u0440\u0430.\u0438\u043a\u043e\u043c.museum',\n\t\t\t'http://\u0b87\u0bb2\u0b99\u0bcd\u0b95\u0bc8.icom.museum',\n\t\t\t'http://espa\u00f1a.icom.museum',\n\t\t\t'http://\u0e44\u0e17\u0e22.icom.museum',\n\t\t\t'http://\u062a\u0648\u0646\u0633.icom.museum',\n\t\t\t'http://t\u00fcrkiye.icom.museum',\n\t\t\t'http://\u0443\u043a\u0440\u0430\u0438\u043d\u0430.icom.museum',\n\t\t\t'http://vi\u1ec7tnam.icom.museum',\n\t\t\t'ftp://127.0.0.1/',\n\t\t\t'http://www.woo.com/video?v=exvUH2qKLTU',\n\t\t\t'http://taco.com?burrito=enchilada#guac',\n\t\t);\n\n\t\t$blob = '\n\t\t\thttp://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html\n\n\t\t\thttp://this.com\n\n\t\t\thttp://127.0.0.1\n\n\t\t\thttp://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437\n\n\t\t\thttp://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html\n\n\t\t\thttp://wordpress-core.com:8080/\n\n\t\t\thttp://www.website.com:5000\n\n\t\t\thttp://wordpress-core/?346236346326&amp;2134362574863.437\n\n\t\t\thttp://\u0627\u0641\u063a\u0627\u0646\u0633\u062a\u0627.icom.museum\n\t\t\thttp://\u0627\u0644\u062c\u0632\u0627\u0626\u0631.icom.museum\n\t\t\thttp://\u00f6sterreich.icom.museum\n\t\t\thttp://\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6.icom.museum\n\t\t\thttp://\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u044c.icom.museum\n\t\t\thttp://belgi\u00eb.icom.museum\n\t\t\thttp://\u0431\u044a\u043b\u0433\u0430\u0440\u0438\u044f.icom.museum\n\t\t\thttp://\u062a\u0634\u0627\u062f\u0631.icom.museum\n\t\t\thttp://\u4e2d\u56fd.icom.museum\n\t\t\thttp://\u010desk\u00e1republika.icom.museum\n\t\t\thttp://\u03b5\u03bb\u03bb\u03ac\u03b4\u03b1.icom.museum\n\t\t\thttp://magyarorsz\u00e1g.icom.museum\n\t\t\thttp://\u00edsland.icom.museum\n\t\t\thttp://\u092d\u093e\u0930\u0924.icom.museum\n\t\t\thttp://\u0627\u064a\u0631\u0627\u0646.icom.museum\n\t\t\thttp://\u00e9ire.icom.museum\n\t\t\thttp://\u05d0\u05d9\u05e7\u05d5\u05f4\u05dd.\u05d9\u05e9\u05e8\u05d0\u05dc.museum\n\t\t\thttp://\u65e5\u672c.icom.museum\n\t\t\thttp://\u0627\u0644\u0623\u0631\u062f\u0646.icom.museum\n\t\t\thttp://\u049b\u0430\u0437\u0430\u049b\u0441\u0442\u0430\u043d.icom.museum\n\t\t\thttp://\ud55c\uad6d.icom.museum\n\t\t\thttp://\u043a\u044b\u0440\u0433\u044b\u0437\u0441\u0442\u0430\u043d.icom.museum\n\t\t\thttp://\u0ea5\u0eb2\u0ea7.icom.museum\n\t\t\thttp://\u0644\u0628\u0646\u0627\u0646.icom.museum\n\t\t\thttp://\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430.icom.museum\n\t\t\thttp://m\u00e9xico.icom.museum\n\t\t\thttp://\u043c\u043e\u043d\u0433\u043e\u043b\u0443\u043b\u0441.icom.museum\n\t\t\thttp://\u0928\u0947\u092a\u093e\u0932.icom.museum\n\t\t\thttp://\u0642\u0637\u0631.icom.museum\n\t\t\thttp://rom\u00e2nia.icom.museum\n\t\t\thttp://\u0440\u043e\u0441\u0441\u0438\u044f.\u0438\u043a\u043e\u043c.museum\n\t\t\thttp://\u0441\u0440\u0431\u0438\u0458\u0430\u0438\u0446\u0440\u043d\u0430\u0433\u043e\u0440\u0430.\u0438\u043a\u043e\u043c.museum\n\t\t\thttp://\u0b87\u0bb2\u0b99\u0bcd\u0b95\u0bc8.icom.museum\n\t\t\thttp://espa\u00f1a.icom.museum\n\t\t\thttp://\u0e44\u0e17\u0e22.icom.museum\n\t\t\thttp://\u062a\u0648\u0646\u0633.icom.museum\n\t\t\thttp://t\u00fcrkiye.icom.museum\n\t\t\thttp://\u0443\u043a\u0440\u0430\u0438\u043d\u0430.icom.museum\n\t\t\thttp://vi\u1ec7tnam.icom.museum\n\t\t\tftp://127.0.0.1/\n\t\t\thttp://www.woo.com/video?v=exvUH2qKLTU\n\n\t\t\thttp://taco.com?burrito=enchilada#guac\n\t\t';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( count( $original_urls ), $urls );\n\t\t$this->assertSame( $original_urls, $urls );\n\n\t\t$exploded = array_values( array_filter( array_map( 'trim', explode( \"\\n\", $blob ) ) ) );\n\t\t// wp_extract_urls() calls html_entity_decode().\n\t\t$decoded = array_map( 'html_entity_decode', $exploded );\n\n\t\t$this->assertSame( $decoded, $urls );\n\t\t$this->assertSame( $original_urls, $decoded );\n\n\t\t$blob = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n\t\t\tincididunt ut labore http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html et dolore magna aliqua.\n\t\t\tUt http://this.com enim ad minim veniam, quis nostrud exercitation 16.06. to 18.06.2014 ullamco http://127.0.0.1\n\t\t\tlaboris nisi ut aliquip ex http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437 ea\n\t\t\tcommodo consequat. http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html Duis aute irure dolor in reprehenderit in voluptate\n\t\t\tvelit esse http://wordpress-core.com:8080/ cillum dolore eu fugiat nulla <A href=\"http://www.website.com:5000\">http://www.website.com:5000</B> pariatur. Excepteur sint occaecat cupidatat non proident,\n\t\t\tsunt in culpa qui officia deserunt mollit http://wordpress-core/?346236346326&amp;2134362574863.437 anim id est laborum.';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( 8, $urls );\n\t\t$this->assertSame( array_slice( $original_urls, 0, 8 ), $urls );\n\n\t\t$blob = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n\t\t\tincididunt ut labore <a href=\"http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html\">343462^</a> et dolore magna aliqua.\n\t\t\tUt <a href=\"http://this.com\">&amp;3640i6p1yi499</a> enim ad minim veniam, quis nostrud exercitation 16.06. to 18.06.2014 ullamco <a href=\"http://127.0.0.1\">localhost</a>\n\t\t\tlaboris nisi ut aliquip ex <a href=\"http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437\">343462^</a> ea\n\t\t\tcommodo consequat. <a href=\"http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html\">343462^</a> Duis aute irure dolor in reprehenderit in voluptate\n\t\t\tvelit esse <a href=\"http://wordpress-core.com:8080/\">-3-4--321-64-4@#!$^$!@^@^</a> cillum dolore eu <A href=\"http://www.website.com:5000\">http://www.website.com:5000</B> fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n\t\t\tsunt in culpa qui officia deserunt mollit <a href=\"http://wordpress-core/?346236346326&amp;2134362574863.437\">)(*&^%$</a> anim id est laborum.';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( 8, $urls );\n\t\t$this->assertSame( array_slice( $original_urls, 0, 8 ), $urls );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode() {\n\t\t$this->assertSame( wp_json_encode( 'a' ), '\"a\"' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_utf8() {\n\t\t$this->assertSame( wp_json_encode( '\u8fd9' ), '\"\\u8fd9\"' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t * @requires function mb_detect_order\n\t */\n\tfunction test_wp_json_encode_non_utf8() {\n\t\t$charsets     = mb_detect_order();\n\t\t$old_charsets = $charsets;\n\t\tif ( ! in_array( 'EUC-JP', $charsets, true ) ) {\n\t\t\t$charsets[] = 'EUC-JP';\n\t\t\tmb_detect_order( $charsets );\n\t\t}\n\n\t\t$eucjp = mb_convert_encoding( 'a\u3042b', 'EUC-JP', 'UTF-8' );\n\t\t$utf8  = mb_convert_encoding( $eucjp, 'UTF-8', 'EUC-JP' );\n\n\t\t$this->assertSame( 'a\u3042b', $utf8 );\n\n\t\t$this->assertSame( '\"a\\u3042b\"', wp_json_encode( $eucjp ) );\n\n\t\tmb_detect_order( $old_charsets );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t * @requires function mb_detect_order\n\t */\n\tfunction test_wp_json_encode_non_utf8_in_array() {\n\t\t$charsets     = mb_detect_order();\n\t\t$old_charsets = $charsets;\n\t\tif ( ! in_array( 'EUC-JP', $charsets, true ) ) {\n\t\t\t$charsets[] = 'EUC-JP';\n\t\t\tmb_detect_order( $charsets );\n\t\t}\n\n\t\t$eucjp = mb_convert_encoding( 'a\u3042b', 'EUC-JP', 'UTF-8' );\n\t\t$utf8  = mb_convert_encoding( $eucjp, 'UTF-8', 'EUC-JP' );\n\n\t\t$this->assertSame( 'a\u3042b', $utf8 );\n\n\t\t$this->assertSame( '[\"c\",\"a\\u3042b\"]', wp_json_encode( array( 'c', $eucjp ) ) );\n\n\t\tmb_detect_order( $old_charsets );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_array() {\n\t\t$this->assertSame( wp_json_encode( array( 'a' ) ), '[\"a\"]' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_object() {\n\t\t$object    = new stdClass;\n\t\t$object->a = 'b';\n\t\t$this->assertSame( wp_json_encode( $object ), '{\"a\":\"b\"}' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_depth() {\n\t\t$data = array( array( array( 1, 2, 3 ) ) );\n\t\t$json = wp_json_encode( $data, 0, 1 );\n\t\t$this->assertFalse( $json );\n\n\t\t$data = array( '\u3042', array( array( 1, 2, 3 ) ) );\n\t\t$json = wp_json_encode( $data, 0, 1 );\n\t\t$this->assertFalse( $json );\n\t}\n\n\t/**\n\t * @ticket 36054\n\t * @dataProvider datetime_provider\n\t */\n\tfunction test_mysql_to_rfc3339( $expected, $actual ) {\n\t\t$date_return = mysql_to_rfc3339( $actual );\n\n\t\t$this->assertTrue( is_string( $date_return ), 'The date return must be a string' );\n\t\t$this->assertNotEmpty( $date_return, 'The date return could not be an empty string' );\n\t\t$this->assertSame( $expected, $date_return, 'The date does not match' );\n\t\t$this->assertEquals( new DateTime( $expected ), new DateTime( $date_return ), 'The date is not the same after the call method' );\n\t}\n\n\tfunction datetime_provider() {\n\t\treturn array(\n\t\t\tarray( '2016-03-15T18:54:46', '15-03-2016 18:54:46' ),\n\t\t\tarray( '2016-03-02T19:13:25', '2016-03-02 19:13:25' ),\n\t\t\tarray( '2016-03-02T19:13:00', '2016-03-02 19:13' ),\n\t\t\tarray( '2016-03-02T19:13:00', '16-03-02 19:13' ),\n\t\t\tarray( '2016-03-02T19:13:00', '16-03-02 19:13' ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 35987\n\t */\n\tpublic function test_wp_get_ext_types() {\n\t\t$extensions = wp_get_ext_types();\n\n\t\t$this->assertInternalType( 'array', $extensions );\n\t\t$this->assertNotEmpty( $extensions );\n\n\t\tadd_filter( 'ext2type', '__return_empty_array' );\n\t\t$extensions = wp_get_ext_types();\n\t\t$this->assertSame( array(), $extensions );\n\n\t\tremove_filter( 'ext2type', '__return_empty_array' );\n\t\t$extensions = wp_get_ext_types();\n\t\t$this->assertInternalType( 'array', $extensions );\n\t\t$this->assertNotEmpty( $extensions );\n\t}\n\n\t/**\n\t * @ticket 35987\n\t */\n\tpublic function test_wp_ext2type() {\n\t\t$extensions = wp_get_ext_types();\n\n\t\tforeach ( $extensions as $type => $extension_list ) {\n\t\t\tforeach ( $extension_list as $extension ) {\n\t\t\t\t$this->assertSame( $type, wp_ext2type( $extension ) );\n\t\t\t\t$this->assertSame( $type, wp_ext2type( strtoupper( $extension ) ) );\n\t\t\t}\n\t\t}\n\n\t\t$this->assertNull( wp_ext2type( 'unknown_format' ) );\n\t}\n\n\t/**\n\t * Tests raising the memory limit.\n\t *\n\t * Unfortunately as the default for 'WP_MAX_MEMORY_LIMIT' in the\n\t * test suite is -1, we can not test the memory limit negotiations.\n\t *\n\t * @ticket 32075\n\t */\n\tfunction test_wp_raise_memory_limit() {\n\t\tif ( -1 !== WP_MAX_MEMORY_LIMIT ) {\n\t\t\t$this->markTestSkipped( 'WP_MAX_MEMORY_LIMIT should be set to -1.' );\n\t\t}\n\n\t\t$ini_limit_before = ini_get( 'memory_limit' );\n\t\t$raised_limit     = wp_raise_memory_limit();\n\t\t$ini_limit_after  = ini_get( 'memory_limit' );\n\n\t\t$this->assertSame( $ini_limit_before, $ini_limit_after );\n\t\t$this->assertFalse( $raised_limit );\n\t\t$this->assertEquals( WP_MAX_MEMORY_LIMIT, $ini_limit_after );\n\t}\n\n\t/**\n\t * Tests wp_generate_uuid4().\n\t *\n\t * @covers ::wp_generate_uuid4\n\t * @ticket 38164\n\t */\n\tfunction test_wp_generate_uuid4() {\n\t\t$uuids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$uuid = wp_generate_uuid4();\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid, 4 ) );\n\t\t\t$uuids[] = $uuid;\n\t\t}\n\n\t\t$unique_uuids = array_unique( $uuids );\n\t\t$this->assertSame( $uuids, $unique_uuids );\n\t}\n\n\t/**\n\t * Tests wp_is_uuid().\n\t *\n\t * @covers ::wp_is_uuid\n\t * @ticket 39778\n\t */\n\tfunction test_wp_is_valid_uuid() {\n\t\t$uuids_v4 = array(\n\t\t\t'27fe2421-780c-44c5-b39b-fff753092b55',\n\t\t\t'b7c7713a-4ee9-45a1-87ed-944a90390fc7',\n\t\t\t'fbedbe35-7bf5-49cc-a5ac-0343bd94360a',\n\t\t\t'4c58e67e-123b-4290-a41c-5eeb6970fa3e',\n\t\t\t'f54f5b78-e414-4637-84a9-a6cdc94a1beb',\n\t\t\t'd1c533ac-abcf-44b6-9b0e-6477d2c91b09',\n\t\t\t'7fcd683f-e5fd-454a-a8b9-ed15068830da',\n\t\t\t'7962c750-e58c-470a-af0d-ec1eae453ff2',\n\t\t\t'a59878ce-9a67-4493-8ca0-a756b52804b3',\n\t\t\t'6faa519d-1e13-4415-bd6f-905ae3689d1d',\n\t\t);\n\n\t\tforeach ( $uuids_v4 as $uuid ) {\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid, 4 ) );\n\t\t}\n\n\t\t$uuids = array(\n\t\t\t'00000000-0000-0000-0000-000000000000', // Nil.\n\t\t\t'9e3a0460-d72d-11e4-a631-c8e0eb141dab', // Version 1.\n\t\t\t'2c1d43b8-e6d7-376e-af7f-d4bde997cc3f', // Version 3.\n\t\t\t'39888f87-fb62-5988-a425-b2ea63f5b81e', // Version 5.\n\t\t);\n\n\t\tforeach ( $uuids as $uuid ) {\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid ) );\n\t\t\t$this->assertFalse( wp_is_uuid( $uuid, 4 ) );\n\t\t}\n\n\t\t$invalid_uuids = array(\n\t\t\t'a19d5192-ea41-41e6-b006',\n\t\t\t'this-is-not-valid',\n\t\t\t1234,\n\t\t\ttrue,\n\t\t\tarray(),\n\t\t);\n\n\t\tforeach ( $invalid_uuids as $invalid_uuid ) {\n\t\t\t$this->assertFalse( wp_is_uuid( $invalid_uuid, 4 ) );\n\t\t\t$this->assertFalse( wp_is_uuid( $invalid_uuid ) );\n\t\t}\n\t}\n\n\t/**\n\t * Tests wp_unique_id().\n\t *\n\t * @covers ::wp_unique_id\n\t * @ticket 44883\n\t */\n\tfunction test_wp_unique_id() {\n\n\t\t// Test without prefix.\n\t\t$ids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$id = wp_unique_id();\n\t\t\t$this->assertInternalType( 'string', $id );\n\t\t\t$this->assertTrue( is_numeric( $id ) );\n\t\t\t$ids[] = $id;\n\t\t}\n\t\t$this->assertSame( $ids, array_unique( $ids ) );\n\n\t\t// Test with prefix.\n\t\t$ids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$id = wp_unique_id( 'foo-' );\n\t\t\t$this->assertRegExp( '/^foo-\\d+$/', $id );\n\t\t\t$ids[] = $id;\n\t\t}\n\t\t$this->assertSame( $ids, array_unique( $ids ) );\n\t}\n\n\t/**\n\t * @ticket 40017\n\t * @dataProvider _wp_get_image_mime\n\t */\n\tpublic function test_wp_get_image_mime( $file, $expected ) {\n\t\tif ( ! is_callable( 'exif_imagetype' ) && ! function_exists( 'getimagesize' ) ) {\n\t\t\t$this->markTestSkipped( 'The exif PHP extension is not loaded.' );\n\t\t}\n\n\t\t$this->assertSame( $expected, wp_get_image_mime( $file ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @dataProvider _wp_check_filetype_and_ext_data\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext( $file, $filename, $expected ) {\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @group ms-excluded\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext_with_filtered_svg() {\n\t\t$file     = DIR_TESTDATA . '/uploads/video-play.svg';\n\t\t$filename = 'video-play.svg';\n\n\t\t$expected = array(\n\t\t\t'ext'             => 'svg',\n\t\t\t'type'            => 'image/svg+xml',\n\t\t\t'proper_filename' => false,\n\t\t);\n\n\t\tadd_filter( 'upload_mimes', array( $this, '_filter_mime_types_svg' ) );\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\n\t\t// Cleanup.\n\t\tremove_filter( 'upload_mimes', array( $this, '_test_add_mime_types_svg' ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @group ms-excluded\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext_with_filtered_woff() {\n\t\t$file     = DIR_TESTDATA . '/uploads/dashicons.woff';\n\t\t$filename = 'dashicons.woff';\n\n\t\t$expected = array(\n\t\t\t'ext'             => 'woff',\n\t\t\t'type'            => 'application/font-woff',\n\t\t\t'proper_filename' => false,\n\t\t);\n\n\t\tadd_filter( 'upload_mimes', array( $this, '_filter_mime_types_woff' ) );\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\n\t\t// Cleanup.\n\t\tremove_filter( 'upload_mimes', array( $this, '_test_add_mime_types_woff' ) );\n\t}\n\n\tpublic function _filter_mime_types_svg( $mimes ) {\n\t\t$mimes['svg'] = 'image/svg+xml';\n\t\treturn $mimes;\n\t}\n\n\tpublic function _filter_mime_types_woff( $mimes ) {\n\t\t$mimes['woff'] = 'application/font-woff';\n\t\treturn $mimes;\n\t}\n\n\t/**\n\t * Data provider for test_wp_get_image_mime();\n\t */\n\tpublic function _wp_get_image_mime() {\n\t\t$data = array(\n\t\t\t// Standard JPEG.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.jpg',\n\t\t\t\t'image/jpeg',\n\t\t\t),\n\t\t\t// Standard GIF.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.gif',\n\t\t\t\t'image/gif',\n\t\t\t),\n\t\t\t// Standard PNG.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.png',\n\t\t\t\t'image/png',\n\t\t\t),\n\t\t\t// Image with wrong extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-mime-jpg.png',\n\t\t\t\t'image/jpeg',\n\t\t\t),\n\t\t\t// Not an image.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/uploads/dashicons.woff',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t);\n\n\t\treturn $data;\n\t}\n\n\tpublic function _wp_check_filetype_and_ext_data() {\n\t\t$data = array(\n\t\t\t// Standard image.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/canola.jpg',\n\t\t\t\t'canola.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => 'jpg',\n\t\t\t\t\t'type'            => 'image/jpeg',\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Image with wrong extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-mime-jpg.png',\n\t\t\t\t'test-image-mime-jpg.png',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => 'jpg',\n\t\t\t\t\t'type'            => 'image/jpeg',\n\t\t\t\t\t'proper_filename' => 'test-image-mime-jpg.jpg',\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Image without extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-no-extension',\n\t\t\t\t'test-image-no-extension',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Valid non-image file with an image extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/formatting/big5.txt',\n\t\t\t\t'big5.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.xml',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed even if it's named like one.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed if it's named like something else.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.doc',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed even if it's named like one.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed if it's named like something else.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.doc',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// Test a few additional file types on single sites.\n\t\tif ( ! is_multisite() ) {\n\t\t\t$data = array_merge(\n\t\t\t\t$data,\n\t\t\t\tarray(\n\t\t\t\t\t// Standard non-image file.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/formatting/big5.txt',\n\t\t\t\t\t\t'big5.txt',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'txt',\n\t\t\t\t\t\t\t'type'            => 'text/plain',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// Non-image file with wrong sub-type.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/pages-to-word.docx',\n\t\t\t\t\t\t'pages-to-word.docx',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'docx',\n\t\t\t\t\t\t\t'type'            => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// FLAC file.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/small-audio.flac',\n\t\t\t\t\t\t'small-audio.flac',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'flac',\n\t\t\t\t\t\t\t'type'            => 'audio/flac',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// Assorted text/* sample files\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.vtt',\n\t\t\t\t\t\t'test.vtt',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'vtt',\n\t\t\t\t\t\t\t'type'            => 'text/vtt',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.csv',\n\t\t\t\t\t\t'test.csv',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'csv',\n\t\t\t\t\t\t\t'type'            => 'text/csv',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// RTF files.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.rtf',\n\t\t\t\t\t\t'test.rtf',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'rtf',\n\t\t\t\t\t\t\t'type'            => 'application/rtf',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Test file path validation\n\t *\n\t * @ticket 42016\n\t * @dataProvider data_test_validate_file()\n\t *\n\t * @param string $file          File path.\n\t * @param array  $allowed_files List of allowed files.\n\t * @param int    $expected      Expected result.\n\t */\n\tpublic function test_validate_file( $file, $allowed_files, $expected ) {\n\t\t$this->assertSame( $expected, validate_file( $file, $allowed_files ) );\n\t}\n\n\t/**\n\t * Data provider for file validation.\n\t *\n\t * @return array {\n\t *     @type array $0... {\n\t *         @type string $0 File path.\n\t *         @type array  $1 List of allowed files.\n\t *         @type int    $2 Expected result.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_validate_file() {\n\t\treturn array(\n\n\t\t\t// Allowed files:\n\t\t\tarray(\n\t\t\t\tnull,\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t' ',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'.',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'..',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'./',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( 'foo.ext' ),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'dir/foo.ext',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo..ext',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'dir/dir/../',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\n\t\t\t// Directory traversal:\n\t\t\tarray(\n\t\t\t\t'../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../file.ext',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../dir/../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'/dir/dir/../../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'/dir/dir/../../',\n\t\t\t\tarray( '/dir/dir/../../' ),\n\t\t\t\t1,\n\t\t\t),\n\n\t\t\t// Windows drives:\n\t\t\tarray(\n\t\t\t\t'c:',\n\t\t\t\tarray(),\n\t\t\t\t2,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'C:/WINDOWS/system32',\n\t\t\t\tarray( 'C:/WINDOWS/system32' ),\n\t\t\t\t2,\n\t\t\t),\n\n\t\t\t// Disallowed files:\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( 'bar.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( '.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'path/foo.ext',\n\t\t\t\tarray( 'foo.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\n\t\t);\n\t}\n\n\t/**\n\t * Test stream URL validation.\n\t *\n\t * @dataProvider data_test_wp_is_stream\n\t *\n\t * @param string $path     The resource path or URL.\n\t * @param bool   $expected Expected result.\n\t */\n\tpublic function test_wp_is_stream( $path, $expected ) {\n\t\tif ( ! extension_loaded( 'openssl' ) && false !== strpos( $path, 'https://' ) ) {\n\t\t\t$this->markTestSkipped( 'The openssl PHP extension is not loaded.' );\n\t\t}\n\n\t\t$this->assertSame( $expected, wp_is_stream( $path ) );\n\t}\n\n\t/**\n\t * Data provider for stream URL validation.\n\t *\n\t * @return array {\n\t *     @type array $0... {\n\t *         @type string $0 The resource path or URL.\n\t *         @type bool   $1 Expected result.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_wp_is_stream() {\n\t\treturn array(\n\t\t\t// Legitimate stream examples.\n\t\t\tarray( 'http://example.com', true ),\n\t\t\tarray( 'https://example.com', true ),\n\t\t\tarray( 'ftp://example.com', true ),\n\t\t\tarray( 'file:///path/to/some/file', true ),\n\t\t\tarray( 'php://some/php/file.php', true ),\n\n\t\t\t// Non-stream examples.\n\t\t\tarray( 'fakestream://foo/bar/baz', false ),\n\t\t\tarray( '../../some/relative/path', false ),\n\t\t\tarray( 'some/other/relative/path', false ),\n\t\t\tarray( '/leading/relative/path', false ),\n\t\t);\n\t}\n\n\t/**\n\t * Test human_readable_duration().\n\t *\n\t * @ticket 39667\n\t * @dataProvider data_test_human_readable_duration\n\t *\n\t * @param string $input    Duration.\n\t * @param string $expected Expected human readable duration.\n\t */\n\tpublic function test_human_readable_duration( $input, $expected ) {\n\t\t$this->assertSame( $expected, human_readable_duration( $input ) );\n\t}\n\n\t/**\n\t * Dataprovider for test_duration_format().\n\t *\n\t * @return array {\n\t *     @type array {\n\t *         @type string $input  Duration.\n\t *         @type string $expect Expected human readable duration.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_human_readable_duration() {\n\t\treturn array(\n\t\t\t// Valid ii:ss cases.\n\t\t\tarray( '0:0', '0 minutes, 0 seconds' ),\n\t\t\tarray( '00:00', '0 minutes, 0 seconds' ),\n\t\t\tarray( '0:5', '0 minutes, 5 seconds' ),\n\t\t\tarray( '0:05', '0 minutes, 5 seconds' ),\n\t\t\tarray( '01:01', '1 minute, 1 second' ),\n\t\t\tarray( '30:00', '30 minutes, 0 seconds' ),\n\t\t\tarray( ' 30:00 ', '30 minutes, 0 seconds' ),\n\t\t\t// Valid HH:ii:ss cases.\n\t\t\tarray( '0:0:0', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '00:00:00', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '00:30:34', '0 hours, 30 minutes, 34 seconds' ),\n\t\t\tarray( '01:01:01', '1 hour, 1 minute, 1 second' ),\n\t\t\tarray( '1:02:00', '1 hour, 2 minutes, 0 seconds' ),\n\t\t\tarray( '10:30:34', '10 hours, 30 minutes, 34 seconds' ),\n\t\t\tarray( '1234567890:59:59', '1234567890 hours, 59 minutes, 59 seconds' ),\n\t\t\t// Valid ii:ss cases with negative sign.\n\t\t\tarray( '-00:00', '0 minutes, 0 seconds' ),\n\t\t\tarray( '-3:00', '3 minutes, 0 seconds' ),\n\t\t\tarray( '-03:00', '3 minutes, 0 seconds' ),\n\t\t\tarray( '-30:00', '30 minutes, 0 seconds' ),\n\t\t\t// Valid HH:ii:ss cases with negative sign.\n\t\t\tarray( '-00:00:00', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '-1:02:00', '1 hour, 2 minutes, 0 seconds' ),\n\t\t\t// Invalid cases.\n\t\t\tarray( null, false ),\n\t\t\tarray( '', false ),\n\t\t\tarray( ':', false ),\n\t\t\tarray( '::', false ),\n\t\t\tarray( array(), false ),\n\t\t\tarray( 'Batman Begins !', false ),\n\t\t\tarray( '', false ),\n\t\t\tarray( '-1', false ),\n\t\t\tarray( -1, false ),\n\t\t\tarray( 0, false ),\n\t\t\tarray( 1, false ),\n\t\t\tarray( '00', false ),\n\t\t\tarray( '30:-10', false ),\n\t\t\tarray( ':30:00', false ),   // Missing HH.\n\t\t\tarray( 'MM:30:00', false ), // Invalid HH.\n\t\t\tarray( '30:MM:00', false ), // Invalid ii.\n\t\t\tarray( '30:30:MM', false ), // Invalid ss.\n\t\t\tarray( '30:MM', false ),    // Invalid ss.\n\t\t\tarray( 'MM:00', false ),    // Invalid ii.\n\t\t\tarray( 'MM:MM', false ),    // Invalid ii and ss.\n\t\t\tarray( '10 :30', false ),   // Containing a space.\n\t\t\tarray( '59:61', false ),    // Out of bound.\n\t\t\tarray( '61:59', false ),    // Out of bound.\n\t\t\tarray( '3:59:61', false ),  // Out of bound.\n\t\t\tarray( '03:61:59', false ), // Out of bound.\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 49404\n\t * @dataProvider data_test_wp_is_json_media_type\n\t */\n\tpublic function test_wp_is_json_media_type( $input, $expected ) {\n\t\t$this->assertEquals( $expected, wp_is_json_media_type( $input ) );\n\t}\n\n\n\tpublic function data_test_wp_is_json_media_type() {\n\t\treturn array(\n\t\t\tarray( 'application/ld+json', true ),\n\t\t\tarray( 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"', true ),\n\t\t\tarray( 'application/activity+json', true ),\n\t\t\tarray( 'application/json+oembed', true ),\n\t\t\tarray( 'application/json', true ),\n\t\t\tarray( 'application/nojson', false ),\n\t\t\tarray( 'application/no.json', false ),\n\t\t\tarray( 'text/html, application/xhtml+xml, application/xml;q=0.9, image/webp, */*;q=0.8', false ),\n\t\t\tarray( 'application/activity+json, application/nojson', true ),\n\t\t);\n\t}\n}\n"], "fixing_code": ["<?php\n/**\n * Iterator for arrays requiring filtered values\n *\n * @package Requests\n * @subpackage Utilities\n */\n\n/**\n * Iterator for arrays requiring filtered values\n *\n * @package Requests\n * @subpackage Utilities\n */\nclass Requests_Utility_FilteredIterator extends ArrayIterator {\n\t/**\n\t * Callback to run as a filter\n\t *\n\t * @var callable\n\t */\n\tprotected $callback;\n\n\t/**\n\t * Create a new iterator\n\t *\n\t * @param array $data\n\t * @param callable $callback Callback to be called on each value\n\t */\n\tpublic function __construct($data, $callback) {\n\t\tparent::__construct($data);\n\n\t\t$this->callback = $callback;\n\t}\n\n\t/**\n\t * Get the current item's value after filtering\n\t *\n\t * @return string\n\t */\n\tpublic function current() {\n\t\t$value = parent::current();\n\t\t$value = call_user_func($this->callback, $value);\n\t\treturn $value;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic function unserialize( $serialized ) {\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tpublic function __unserialize( $serialized ) { // phpcs:ignore PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.MethodDoubleUnderscore,PHPCompatibility.FunctionNameRestrictions.NewMagicMethods.__unserializeFound\n\t}\n\n\tpublic function __wakeup() { // phpcs:ignore PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.MethodDoubleUnderscore,PHPCompatibility.FunctionNameRestrictions.NewMagicMethods.__wakeupFound\n\t\tunset( $this->callback );\n\t}\n}\n", "<?php\n\n/**\n * @group functions.php\n */\nclass Tests_Functions extends WP_UnitTestCase {\n\tfunction test_wp_parse_args_object() {\n\t\t$x        = new MockClass;\n\t\t$x->_baba = 5;\n\t\t$x->yZ    = 'baba'; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t$x->a     = array( 5, 111, 'x' );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x )\n\t\t);\n\t\t$y = new MockClass;\n\t\t$this->assertSame( array(), wp_parse_args( $y ) );\n\t}\n\n\tfunction test_wp_parse_args_array() {\n\t\t// Arrays.\n\t\t$a = array();\n\t\t$this->assertSame( array(), wp_parse_args( $a ) );\n\t\t$b = array(\n\t\t\t'_baba' => 5,\n\t\t\t'yZ'    => 'baba',\n\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t);\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $b )\n\t\t);\n\t}\n\n\tfunction test_wp_parse_args_defaults() {\n\t\t$x        = new MockClass;\n\t\t$x->_baba = 5;\n\t\t$x->yZ    = 'baba'; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t$x->a     = array( 5, 111, 'x' );\n\t\t$d        = array( 'pu' => 'bu' );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'pu'    => 'bu',\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x, $d )\n\t\t);\n\t\t$e = array( '_baba' => 6 );\n\t\t$this->assertSame(\n\t\t\tarray(\n\t\t\t\t'_baba' => 5,\n\t\t\t\t'yZ'    => 'baba',\n\t\t\t\t'a'     => array( 5, 111, 'x' ),\n\t\t\t),\n\t\t\twp_parse_args( $x, $e )\n\t\t);\n\t}\n\n\tfunction test_wp_parse_args_other() {\n\t\t$b = true;\n\t\twp_parse_str( $b, $s );\n\t\t$this->assertSame( $s, wp_parse_args( $b ) );\n\t\t$q = 'x=5&_baba=dudu&';\n\t\twp_parse_str( $q, $ss );\n\t\t$this->assertSame( $ss, wp_parse_args( $q ) );\n\t}\n\n\t/**\n\t * @ticket 30753\n\t */\n\tfunction test_wp_parse_args_boolean_strings() {\n\t\t$args = wp_parse_args( 'foo=false&bar=true' );\n\t\t$this->assertInternalType( 'string', $args['foo'] );\n\t\t$this->assertInternalType( 'string', $args['bar'] );\n\t}\n\n\t/**\n\t * @ticket 35972\n\t */\n\tfunction test_bool_from_yn() {\n\t\t$this->assertTrue( bool_from_yn( 'Y' ) );\n\t\t$this->assertTrue( bool_from_yn( 'y' ) );\n\t\t$this->assertFalse( bool_from_yn( 'n' ) );\n\t}\n\n\tfunction test_path_is_absolute() {\n\t\t$absolute_paths = array(\n\t\t\t'/',\n\t\t\t'/foo/',\n\t\t\t'/foo',\n\t\t\t'/FOO/bar',\n\t\t\t'/foo/bar/',\n\t\t\t'/foo/../bar/',\n\t\t\t'\\\\WINDOWS',\n\t\t\t'C:\\\\',\n\t\t\t'C:\\\\WINDOWS',\n\t\t\t'\\\\\\\\sambashare\\\\foo',\n\t\t);\n\t\tforeach ( $absolute_paths as $path ) {\n\t\t\t$this->assertTrue( path_is_absolute( $path ), \"path_is_absolute('$path') should return true\" );\n\t\t}\n\t}\n\n\tfunction test_path_is_not_absolute() {\n\t\t$relative_paths = array(\n\t\t\t'',\n\t\t\t'.',\n\t\t\t'..',\n\t\t\t'../foo',\n\t\t\t'../',\n\t\t\t'../foo.bar',\n\t\t\t'foo/bar',\n\t\t\t'foo',\n\t\t\t'FOO',\n\t\t\t'..\\\\WINDOWS',\n\t\t);\n\t\tforeach ( $relative_paths as $path ) {\n\t\t\t$this->assertFalse( path_is_absolute( $path ), \"path_is_absolute('$path') should return false\" );\n\t\t}\n\t}\n\n\t/**\n\t * @ticket 33265\n\t * @ticket 35996\n\t *\n\t * @dataProvider data_wp_normalize_path\n\t */\n\tfunction test_wp_normalize_path( $path, $expected ) {\n\t\t$this->assertSame( $expected, wp_normalize_path( $path ) );\n\t}\n\n\tfunction data_wp_normalize_path() {\n\t\treturn array(\n\t\t\t// Windows paths.\n\t\t\tarray( 'C:\\\\www\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( 'C:\\\\www\\\\\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( 'c:/www/path', 'C:/www/path' ),\n\t\t\tarray( 'c:\\\\www\\\\path\\\\', 'C:/www/path/' ), // Uppercase drive letter.\n\t\t\tarray( 'c:\\\\\\\\www\\\\path\\\\', 'C:/www/path/' ),\n\t\t\tarray( '\\\\\\\\Domain\\\\DFSRoots\\\\share\\\\path\\\\', '//Domain/DFSRoots/share/path/' ),\n\t\t\tarray( '\\\\\\\\Server\\\\share\\\\path', '//Server/share/path' ),\n\t\t\tarray( '\\\\\\\\Server\\\\share', '//Server/share' ),\n\n\t\t\t// Linux paths.\n\t\t\tarray( '/www/path/', '/www/path/' ),\n\t\t\tarray( '/www/path/////', '/www/path/' ),\n\t\t\tarray( '/www/path', '/www/path' ),\n\n\t\t\t// PHP stream wrappers.\n\t\t\tarray( 'php://input', 'php://input' ),\n\t\t\tarray( 'http://example.com//path.ext', 'http://example.com/path.ext' ),\n\t\t\tarray( 'file://c:\\\\www\\\\path\\\\', 'file://C:/www/path/' ),\n\t\t);\n\t}\n\n\tfunction test_wp_unique_filename() {\n\n\t\t$testdir = DIR_TESTDATA . '/images/';\n\n\t\t// Sanity check.\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcdefg.png' ), 'Sanitiy check failed' );\n\n\t\t// Check number is appended for file already exists.\n\t\t$this->assertFileExists( $testdir . 'test-image.png', 'Test image does not exist' );\n\t\t$this->assertSame( 'test-image-1.png', wp_unique_filename( $testdir, 'test-image.png' ), 'Number not appended correctly' );\n\t\t$this->assertFileNotExists( $testdir . 'test-image-1.png' );\n\n\t\t// Check special chars.\n\t\t$this->assertSame( 'testtest-image.png', wp_unique_filename( $testdir, 'testt\u00e9st-imag\u00e9.png' ), 'Filename with special chars failed' );\n\n\t\t// Check special chars with potential conflicting name.\n\t\t$this->assertSame( 'test-image-1.png', wp_unique_filename( $testdir, 't\u00e9st-imag\u00e9.png' ), 'Filename with special chars failed' );\n\n\t\t// Check with single quotes in name (somehow).\n\t\t$this->assertSame( 'abcdefgh.png', wp_unique_filename( $testdir, \"abcdefg'h.png\" ), 'File with quote failed' );\n\n\t\t// Check with double quotes in name (somehow).\n\t\t$this->assertSame( 'abcdefgh.png', wp_unique_filename( $testdir, 'abcdefg\"h.png' ), 'File with quote failed' );\n\n\t\t// Test crazy name (useful for regression tests).\n\t\t$this->assertSame( '12af34567890@..^_qwerty-fghjkl-zx.png', wp_unique_filename( $testdir, '12%af34567890#~!@#$..%^&*()|_+qwerty  fgh`jkl zx<>?:\"{}[]=\"\\'/?.png' ), 'Failed crazy file name' );\n\n\t\t// Test slashes in names.\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\fg.png' ), 'Slash not removed' );\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\\\fg.png' ), 'Double slashed not removed' );\n\t\t$this->assertSame( 'abcdefg.png', wp_unique_filename( $testdir, 'abcde\\\\\\fg.png' ), 'Tripple slashed not removed' );\n\t}\n\n\t/**\n\t * @ticket 42437\n\t */\n\tfunction test_unique_filename_with_dimension_like_filename() {\n\t\t$testdir = DIR_TESTDATA . '/images/';\n\n\t\tadd_filter( 'upload_dir', array( $this, 'upload_dir_patch_basedir' ) );\n\n\t\t// Test collision with \"dimension-like\" original filename.\n\t\t$this->assertSame( 'one-blue-pixel-100x100-1.png', wp_unique_filename( $testdir, 'one-blue-pixel-100x100.png' ) );\n\t\t// Test collision with existing sub-size filename.\n\t\t// Existing files: one-blue-pixel-100x100.png, one-blue-pixel-1-100x100.png.\n\t\t$this->assertSame( 'one-blue-pixel-2.png', wp_unique_filename( $testdir, 'one-blue-pixel.png' ) );\n\t\t// Same as above with upper case extension.\n\t\t$this->assertSame( 'one-blue-pixel-2.png', wp_unique_filename( $testdir, 'one-blue-pixel.PNG' ) );\n\n\t\tremove_filter( 'upload_dir', array( $this, 'upload_dir_patch_basedir' ) );\n\t}\n\n\t// Callback to patch \"basedir\" when used in `wp_unique_filename()`.\n\tfunction upload_dir_patch_basedir( $upload_dir ) {\n\t\t$upload_dir['basedir'] = DIR_TESTDATA . '/images/';\n\t\treturn $upload_dir;\n\t}\n\n\t/**\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_maybe_serialize( $value ) {\n\t\tif ( is_array( $value ) || is_object( $value ) ) {\n\t\t\t$expected = serialize( $value );\n\t\t} else {\n\t\t\t$expected = $value;\n\t\t}\n\n\t\t$this->assertSame( $expected, maybe_serialize( $value ) );\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t */\n\tfunction test_maybe_serialize_with_double_serialization( $value ) {\n\t\t$expected = serialize( $value );\n\n\t\t$this->assertSame( $expected, maybe_serialize( $value ) );\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_maybe_unserialize( $value, $is_serialized ) {\n\t\tif ( $is_serialized ) {\n\t\t\t$expected = unserialize( trim( $value ) );\n\t\t} else {\n\t\t\t$expected = $value;\n\t\t}\n\n\t\tif ( is_object( $expected ) ) {\n\t\t\t$this->assertEquals( $expected, maybe_unserialize( $value ) );\n\t\t} else {\n\t\t\t$this->assertSame( $expected, maybe_unserialize( $value ) );\n\t\t}\n\t}\n\n\t/**\n\t * @dataProvider data_is_serialized\n\t * @dataProvider data_is_not_serialized\n\t */\n\tfunction test_is_serialized( $value, $expected ) {\n\t\t$this->assertSame( $expected, is_serialized( $value ) );\n\t}\n\n\t/**\n\t * @dataProvider data_serialize_deserialize_objects\n\t */\n\tfunction test_deserialize_request_utility_filtered_iterator_objects( $value ) {\n\t\t$serialized = maybe_serialize( $value );\n\t\tif ( get_class( $value ) === 'Requests_Utility_FilteredIterator' ) {\n\t\t\t$new_value = unserialize( $serialized );\n\t\t\tif ( version_compare( PHP_VERSION, '5.3', '>=' ) ) {\n\t\t\t\t$property = ( new ReflectionClass( 'Requests_Utility_FilteredIterator' ) )->getProperty( 'callback' );\n\t\t\t\t$property->setAccessible( true );\n\t\t\t\t$callback_value = $property->getValue( $new_value );\n\t\t\t\t$this->assertSame( null, $callback_value );\n\t\t\t} else {\n\t\t\t\t$current_item = @$new_value->current(); // phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t\t\t$this->assertSame( null, $current_item );\n\t\t\t}\n\t\t} else {\n\t\t\t$this->assertEquals( $value->count(), unserialize( $serialized )->count() );\n\t\t}\n\t}\n\n\tfunction data_serialize_deserialize_objects() {\n\t\treturn array(\n\t\t\tarray( new Requests_Utility_FilteredIterator( array( 1 ), 'md5' ) ),\n\t\t\tarray( new Requests_Utility_FilteredIterator( array( 1, 2 ), 'sha1' ) ),\n\t\t\tarray( new ArrayIterator( array( 1, 2, 3 ) ) ),\n\t\t);\n\t}\n\n\tfunction data_is_serialized() {\n\t\treturn array(\n\t\t\tarray( serialize( null ), true ),\n\t\t\tarray( serialize( true ), true ),\n\t\t\tarray( serialize( false ), true ),\n\t\t\tarray( serialize( -25 ), true ),\n\t\t\tarray( serialize( 25 ), true ),\n\t\t\tarray( serialize( 1.1 ), true ),\n\t\t\tarray( serialize( 'this string will be serialized' ), true ),\n\t\t\tarray( serialize( \"a\\nb\" ), true ),\n\t\t\tarray( serialize( array() ), true ),\n\t\t\tarray( serialize( array( 1, 1, 2, 3, 5, 8, 13 ) ), true ),\n\t\t\tarray(\n\t\t\t\tserialize(\n\t\t\t\t\t(object) array(\n\t\t\t\t\t\t'test' => true,\n\t\t\t\t\t\t'3',\n\t\t\t\t\t\t4,\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tarray( '   s:25:\"this string is serialized\";   ', true ),\n\t\t);\n\t}\n\n\tfunction data_is_not_serialized() {\n\t\treturn array(\n\t\t\tarray( null, false ),\n\t\t\tarray( true, false ),\n\t\t\tarray( false, false ),\n\t\t\tarray( -25, false ),\n\t\t\tarray( 25, false ),\n\t\t\tarray( 1.1, false ),\n\t\t\tarray( 'this string will be serialized', false ),\n\t\t\tarray( \"a\\nb\", false ),\n\t\t\tarray( array(), false ),\n\t\t\tarray( array( 1, 1, 2, 3, 5, 8, 13 ), false ),\n\t\t\tarray(\n\t\t\t\t(object) array(\n\t\t\t\t\t'test' => true,\n\t\t\t\t\t'3',\n\t\t\t\t\t4,\n\t\t\t\t),\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\tarray( 'a string', false ),\n\t\t\tarray( 'garbage:a:0:garbage;', false ),\n\t\t\tarray( 's:4:test;', false ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 46570\n\t * @dataProvider data_is_serialized_should_return_true_for_large_floats\n\t */\n\tfunction test_is_serialized_should_return_true_for_large_floats( $value ) {\n\t\t$this->assertTrue( is_serialized( $value ) );\n\t}\n\n\tfunction data_is_serialized_should_return_true_for_large_floats() {\n\t\treturn array(\n\t\t\tarray( serialize( 1.7976931348623157E+308 ) ),\n\t\t\tarray( serialize( array( 1.7976931348623157E+308, 1.23e50 ) ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 17375\n\t */\n\tfunction test_no_new_serializable_types() {\n\t\t$this->assertFalse( is_serialized( 'C:16:\"Serialized_Class\":6:{a:0:{}}' ) );\n\t}\n\n\t/**\n\t * @group add_query_arg\n\t */\n\tfunction test_add_query_arg() {\n\t\t$old_req_uri = $_SERVER['REQUEST_URI'];\n\n\t\t$urls = array(\n\t\t\t'/',\n\t\t\t'/2012/07/30/',\n\t\t\t'edit.php',\n\t\t\tadmin_url( 'edit.php' ),\n\t\t\tadmin_url( 'edit.php', 'https' ),\n\t\t);\n\n\t\t$frag_urls = array(\n\t\t\t'/#frag',\n\t\t\t'/2012/07/30/#frag',\n\t\t\t'edit.php#frag',\n\t\t\tadmin_url( 'edit.php#frag' ),\n\t\t\tadmin_url( 'edit.php#frag', 'https' ),\n\t\t);\n\n\t\tforeach ( $urls as $url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( 'foo', '1', $url ) );\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( array( 'foo' => '1' ), $url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $url;\n\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url?foo=1\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tforeach ( $frag_urls as $frag_url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\t\t\t$url                    = str_replace( '#frag', '', $frag_url );\n\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( 'foo', '1', $frag_url ) );\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( array( 'foo' => '1' ), $frag_url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$frag_url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$frag_url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $frag_url;\n\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url?foo=1#frag\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url?foo=1&bar=2#frag\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$qs_urls = array(\n\t\t\t'baz=1', // #WP4903\n\t\t\t'/?baz',\n\t\t\t'/2012/07/30/?baz',\n\t\t\t'edit.php?baz',\n\t\t\tadmin_url( 'edit.php?baz' ),\n\t\t\tadmin_url( 'edit.php?baz', 'https' ),\n\t\t\tadmin_url( 'edit.php?baz&za=1' ),\n\t\t\tadmin_url( 'edit.php?baz=1&za=1' ),\n\t\t\tadmin_url( 'edit.php?baz=0&za=0' ),\n\t\t);\n\n\t\tforeach ( $qs_urls as $url ) {\n\t\t\t$_SERVER['REQUEST_URI'] = 'nothing';\n\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( 'foo', '1', $url ) );\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( array( 'foo' => '1' ), $url ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t),\n\t\t\t\t\t$url\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$_SERVER['REQUEST_URI'] = $url;\n\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( 'foo', '1' ) );\n\t\t\t$this->assertSame( \"$url&foo=1\", add_query_arg( array( 'foo' => '1' ) ) );\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'foo' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\t$this->assertSame(\n\t\t\t\t\"$url&foo=1&bar=2\",\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'foo' => '1',\n\t\t\t\t\t\t'bar' => '2',\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$_SERVER['REQUEST_URI'] = $old_req_uri;\n\t}\n\n\t/**\n\t * @ticket 31306\n\t */\n\tfunction test_add_query_arg_numeric_keys() {\n\t\t$url = add_query_arg( array( 'foo' => 'bar' ), '1=1' );\n\t\t$this->assertSame( '1=1&foo=bar', $url );\n\n\t\t$url = add_query_arg(\n\t\t\tarray(\n\t\t\t\t'foo' => 'bar',\n\t\t\t\t'1'   => '2',\n\t\t\t),\n\t\t\t'1=1'\n\t\t);\n\t\t$this->assertSame( '1=2&foo=bar', $url );\n\n\t\t$url = add_query_arg( array( '1' => '2' ), 'foo=bar' );\n\t\t$this->assertSame( 'foo=bar&1=2', $url );\n\t}\n\n\t/**\n\t * @ticket 21594\n\t */\n\tfunction test_get_allowed_mime_types() {\n\t\t$mimes = get_allowed_mime_types();\n\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tadd_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = get_allowed_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertEmpty( $mimes );\n\n\t\tremove_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = get_allowed_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\t}\n\n\t/**\n\t * @ticket 21594\n\t */\n\tfunction test_wp_get_mime_types() {\n\t\t$mimes = wp_get_mime_types();\n\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tadd_filter( 'mime_types', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertEmpty( $mimes );\n\n\t\tremove_filter( 'mime_types', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\t// 'upload_mimes' should not affect wp_get_mime_types().\n\t\tadd_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes );\n\t\t$this->assertNotEmpty( $mimes );\n\n\t\tremove_filter( 'upload_mimes', '__return_empty_array' );\n\t\t$mimes2 = wp_get_mime_types();\n\t\t$this->assertInternalType( 'array', $mimes2 );\n\t\t$this->assertNotEmpty( $mimes2 );\n\t\t$this->assertSame( $mimes2, $mimes );\n\t}\n\n\t/**\n\t * @ticket 23688\n\t */\n\tfunction test_canonical_charset() {\n\t\t$orig_blog_charset = get_option( 'blog_charset' );\n\n\t\tupdate_option( 'blog_charset', 'utf8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'utf-8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'UTF8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'UTF-8' );\n\t\t$this->assertSame( 'UTF-8', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'ISO-8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'ISO8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'iso8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', 'iso-8859-1' );\n\t\t$this->assertSame( 'ISO-8859-1', get_option( 'blog_charset' ) );\n\n\t\t// Arbitrary strings are passed through.\n\t\tupdate_option( 'blog_charset', 'foobarbaz' );\n\t\t$this->assertSame( 'foobarbaz', get_option( 'blog_charset' ) );\n\n\t\tupdate_option( 'blog_charset', $orig_blog_charset );\n\t}\n\n\t/**\n\t * @ticket 43977\n\t * @dataProvider data_wp_parse_list\n\t */\n\tfunction test_wp_parse_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_list() {\n\t\treturn array(\n\t\t\tarray( array( '1', '2', '3', '4' ), '1,2,3,4' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple,banana,carrot,dog' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1, 2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), ',1,2,apple,banana' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2,apple,banana,' ),\n\t\t\tarray( array( '1', '2', 'apple', 'banana' ), '1,2 ,apple,banana' ),\n\t\t\tarray( array(), '' ),\n\t\t\tarray( array(), ',' ),\n\t\t\tarray( array(), ',,' ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_wp_parse_id_list\n\t */\n\tfunction test_wp_parse_id_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_id_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_id_list() {\n\t\treturn array(\n\t\t\tarray( array( 1, 2, 3, 4 ), '1,2,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '1, 2,,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '1,2,2,3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( '1', '2', '3', '4', '3' ) ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( 1, '2', 3, '4' ) ),\n\t\t\tarray( array( 1, 2, 3, 4 ), '-1,2,-3,4' ),\n\t\t\tarray( array( 1, 2, 3, 4 ), array( -1, 2, '-3', '4' ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_wp_parse_slug_list\n\t */\n\tfunction test_wp_parse_slug_list( $expected, $actual ) {\n\t\t$this->assertSame( $expected, array_values( wp_parse_slug_list( $actual ) ) );\n\t}\n\n\tfunction data_wp_parse_slug_list() {\n\t\treturn array(\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple,banana,carrot,dog' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple, banana,,carrot,dog' ),\n\t\t\tarray( array( 'apple', 'banana', 'carrot', 'dog' ), 'apple banana carrot dog' ),\n\t\t\tarray( array( 'apple', 'banana-carrot', 'd-o-g' ), array( 'apple ', 'banana carrot', 'd o g' ) ),\n\t\t);\n\t}\n\n\t/**\n\t * @dataProvider data_device_can_upload\n\t */\n\tfunction test_device_can_upload( $user_agent, $expected ) {\n\t\t$_SERVER['HTTP_USER_AGENT'] = $user_agent;\n\t\t$actual                     = _device_can_upload();\n\t\tunset( $_SERVER['HTTP_USER_AGENT'] );\n\t\t$this->assertSame( $expected, $actual );\n\t}\n\n\tfunction data_device_can_upload() {\n\t\treturn array(\n\t\t\t// iPhone iOS 5.0.1, Safari 5.1.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9A406)',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPad iOS 3.2, Safari 4.0.4.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPod iOS 4.3.3, Safari 5.0.2.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; ja-jp) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t// iPhone iOS 6.0.0, Safari 6.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// iPad iOS 6.0.0, Safari 6.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Android 2.2, Android Webkit Browser.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (Android 2.2; Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// BlackBerry 9900, BlackBerry browser.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (BlackBerry; U; BlackBerry 9900; en) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.1.0.346 Mobile Safari/534.11+',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Windows Phone 8.0, Internet Explorer 10.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\t// Ubuntu desktop, Firefox 41.0.\n\t\t\tarray(\n\t\t\t\t'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:41.0) Gecko/20100101 Firefox/41.0',\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 9064\n\t */\n\tfunction test_wp_extract_urls() {\n\t\t$original_urls = array(\n\t\t\t'http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html',\n\t\t\t'http://this.com',\n\t\t\t'http://127.0.0.1',\n\t\t\t'http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&2134362574863.437',\n\t\t\t'http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html',\n\t\t\t'http://wordpress-core.com:8080/',\n\t\t\t'http://www.website.com:5000',\n\t\t\t'http://wordpress-core/?346236346326&2134362574863.437',\n\t\t\t'http://\u0627\u0641\u063a\u0627\u0646\u0633\u062a\u0627.icom.museum',\n\t\t\t'http://\u0627\u0644\u062c\u0632\u0627\u0626\u0631.icom.museum',\n\t\t\t'http://\u00f6sterreich.icom.museum',\n\t\t\t'http://\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6.icom.museum',\n\t\t\t'http://\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u044c.icom.museum',\n\t\t\t'http://belgi\u00eb.icom.museum',\n\t\t\t'http://\u0431\u044a\u043b\u0433\u0430\u0440\u0438\u044f.icom.museum',\n\t\t\t'http://\u062a\u0634\u0627\u062f\u0631.icom.museum',\n\t\t\t'http://\u4e2d\u56fd.icom.museum',\n\t\t\t// 'http://\u0627\u0644\u0642\u0645\u0631.icom.museum',         // Comoros http://\u0627\u0644\u0642\u0645\u0631.icom.museum\n\t\t\t// 'http://\u03ba\u03c5\u03c0\u03c1\u03bf\u03c2.icom.museum',        // Cyprus  http://\u03ba\u03c5\u03c0\u03c1\u03bf\u03c2.icom.museum\n\t\t\t'http://\u010desk\u00e1republika.icom.museum',\n\t\t\t// 'http://\u0645\u0635\u0631.icom.museum',           // Egypt   http://\u0645\u0635\u0631.icom.museum\n\t\t\t'http://\u03b5\u03bb\u03bb\u03ac\u03b4\u03b1.icom.museum',\n\t\t\t'http://magyarorsz\u00e1g.icom.museum',\n\t\t\t'http://\u00edsland.icom.museum',\n\t\t\t'http://\u092d\u093e\u0930\u0924.icom.museum',\n\t\t\t'http://\u0627\u064a\u0631\u0627\u0646.icom.museum',\n\t\t\t'http://\u00e9ire.icom.museum',\n\t\t\t'http://\u05d0\u05d9\u05e7\u05d5\u05f4\u05dd.\u05d9\u05e9\u05e8\u05d0\u05dc.museum',\n\t\t\t'http://\u65e5\u672c.icom.museum',\n\t\t\t'http://\u0627\u0644\u0623\u0631\u062f\u0646.icom.museum',\n\t\t\t'http://\u049b\u0430\u0437\u0430\u049b\u0441\u0442\u0430\u043d.icom.museum',\n\t\t\t'http://\ud55c\uad6d.icom.museum',\n\t\t\t'http://\u043a\u044b\u0440\u0433\u044b\u0437\u0441\u0442\u0430\u043d.icom.museum',\n\t\t\t'http://\u0ea5\u0eb2\u0ea7.icom.museum',\n\t\t\t'http://\u0644\u0628\u0646\u0627\u0646.icom.museum',\n\t\t\t'http://\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430.icom.museum',\n\t\t\t// 'http://\u0645\u0648\u0631\u064a\u062a\u0627\u0646\u064a\u0627.icom.museum',     // Mauritania http://\u0645\u0648\u0631\u064a\u062a\u0627\u0646\u064a\u0627.icom.museum\n\t\t\t'http://m\u00e9xico.icom.museum',\n\t\t\t'http://\u043c\u043e\u043d\u0433\u043e\u043b\u0443\u043b\u0441.icom.museum',\n\t\t\t// 'http://\u0627\u0644\u0645\u063a\u0631\u0628.icom.museum',        // Morocco    http://\u0627\u0644\u0645\u063a\u0631\u0628.icom.museum\n\t\t\t'http://\u0928\u0947\u092a\u093e\u0932.icom.museum',\n\t\t\t// 'http://\u0639\u0645\u0627\u0646.icom.museum',          // Oman       http://\u0639\u0645\u0627\u0646.icom.museum\n\t\t\t'http://\u0642\u0637\u0631.icom.museum',\n\t\t\t'http://rom\u00e2nia.icom.museum',\n\t\t\t'http://\u0440\u043e\u0441\u0441\u0438\u044f.\u0438\u043a\u043e\u043c.museum',\n\t\t\t'http://\u0441\u0440\u0431\u0438\u0458\u0430\u0438\u0446\u0440\u043d\u0430\u0433\u043e\u0440\u0430.\u0438\u043a\u043e\u043c.museum',\n\t\t\t'http://\u0b87\u0bb2\u0b99\u0bcd\u0b95\u0bc8.icom.museum',\n\t\t\t'http://espa\u00f1a.icom.museum',\n\t\t\t'http://\u0e44\u0e17\u0e22.icom.museum',\n\t\t\t'http://\u062a\u0648\u0646\u0633.icom.museum',\n\t\t\t'http://t\u00fcrkiye.icom.museum',\n\t\t\t'http://\u0443\u043a\u0440\u0430\u0438\u043d\u0430.icom.museum',\n\t\t\t'http://vi\u1ec7tnam.icom.museum',\n\t\t\t'ftp://127.0.0.1/',\n\t\t\t'http://www.woo.com/video?v=exvUH2qKLTU',\n\t\t\t'http://taco.com?burrito=enchilada#guac',\n\t\t);\n\n\t\t$blob = '\n\t\t\thttp://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html\n\n\t\t\thttp://this.com\n\n\t\t\thttp://127.0.0.1\n\n\t\t\thttp://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437\n\n\t\t\thttp://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html\n\n\t\t\thttp://wordpress-core.com:8080/\n\n\t\t\thttp://www.website.com:5000\n\n\t\t\thttp://wordpress-core/?346236346326&amp;2134362574863.437\n\n\t\t\thttp://\u0627\u0641\u063a\u0627\u0646\u0633\u062a\u0627.icom.museum\n\t\t\thttp://\u0627\u0644\u062c\u0632\u0627\u0626\u0631.icom.museum\n\t\t\thttp://\u00f6sterreich.icom.museum\n\t\t\thttp://\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6.icom.museum\n\t\t\thttp://\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u044c.icom.museum\n\t\t\thttp://belgi\u00eb.icom.museum\n\t\t\thttp://\u0431\u044a\u043b\u0433\u0430\u0440\u0438\u044f.icom.museum\n\t\t\thttp://\u062a\u0634\u0627\u062f\u0631.icom.museum\n\t\t\thttp://\u4e2d\u56fd.icom.museum\n\t\t\thttp://\u010desk\u00e1republika.icom.museum\n\t\t\thttp://\u03b5\u03bb\u03bb\u03ac\u03b4\u03b1.icom.museum\n\t\t\thttp://magyarorsz\u00e1g.icom.museum\n\t\t\thttp://\u00edsland.icom.museum\n\t\t\thttp://\u092d\u093e\u0930\u0924.icom.museum\n\t\t\thttp://\u0627\u064a\u0631\u0627\u0646.icom.museum\n\t\t\thttp://\u00e9ire.icom.museum\n\t\t\thttp://\u05d0\u05d9\u05e7\u05d5\u05f4\u05dd.\u05d9\u05e9\u05e8\u05d0\u05dc.museum\n\t\t\thttp://\u65e5\u672c.icom.museum\n\t\t\thttp://\u0627\u0644\u0623\u0631\u062f\u0646.icom.museum\n\t\t\thttp://\u049b\u0430\u0437\u0430\u049b\u0441\u0442\u0430\u043d.icom.museum\n\t\t\thttp://\ud55c\uad6d.icom.museum\n\t\t\thttp://\u043a\u044b\u0440\u0433\u044b\u0437\u0441\u0442\u0430\u043d.icom.museum\n\t\t\thttp://\u0ea5\u0eb2\u0ea7.icom.museum\n\t\t\thttp://\u0644\u0628\u0646\u0627\u0646.icom.museum\n\t\t\thttp://\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430.icom.museum\n\t\t\thttp://m\u00e9xico.icom.museum\n\t\t\thttp://\u043c\u043e\u043d\u0433\u043e\u043b\u0443\u043b\u0441.icom.museum\n\t\t\thttp://\u0928\u0947\u092a\u093e\u0932.icom.museum\n\t\t\thttp://\u0642\u0637\u0631.icom.museum\n\t\t\thttp://rom\u00e2nia.icom.museum\n\t\t\thttp://\u0440\u043e\u0441\u0441\u0438\u044f.\u0438\u043a\u043e\u043c.museum\n\t\t\thttp://\u0441\u0440\u0431\u0438\u0458\u0430\u0438\u0446\u0440\u043d\u0430\u0433\u043e\u0440\u0430.\u0438\u043a\u043e\u043c.museum\n\t\t\thttp://\u0b87\u0bb2\u0b99\u0bcd\u0b95\u0bc8.icom.museum\n\t\t\thttp://espa\u00f1a.icom.museum\n\t\t\thttp://\u0e44\u0e17\u0e22.icom.museum\n\t\t\thttp://\u062a\u0648\u0646\u0633.icom.museum\n\t\t\thttp://t\u00fcrkiye.icom.museum\n\t\t\thttp://\u0443\u043a\u0440\u0430\u0438\u043d\u0430.icom.museum\n\t\t\thttp://vi\u1ec7tnam.icom.museum\n\t\t\tftp://127.0.0.1/\n\t\t\thttp://www.woo.com/video?v=exvUH2qKLTU\n\n\t\t\thttp://taco.com?burrito=enchilada#guac\n\t\t';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( count( $original_urls ), $urls );\n\t\t$this->assertSame( $original_urls, $urls );\n\n\t\t$exploded = array_values( array_filter( array_map( 'trim', explode( \"\\n\", $blob ) ) ) );\n\t\t// wp_extract_urls() calls html_entity_decode().\n\t\t$decoded = array_map( 'html_entity_decode', $exploded );\n\n\t\t$this->assertSame( $decoded, $urls );\n\t\t$this->assertSame( $original_urls, $decoded );\n\n\t\t$blob = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n\t\t\tincididunt ut labore http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html et dolore magna aliqua.\n\t\t\tUt http://this.com enim ad minim veniam, quis nostrud exercitation 16.06. to 18.06.2014 ullamco http://127.0.0.1\n\t\t\tlaboris nisi ut aliquip ex http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437 ea\n\t\t\tcommodo consequat. http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html Duis aute irure dolor in reprehenderit in voluptate\n\t\t\tvelit esse http://wordpress-core.com:8080/ cillum dolore eu fugiat nulla <A href=\"http://www.website.com:5000\">http://www.website.com:5000</B> pariatur. Excepteur sint occaecat cupidatat non proident,\n\t\t\tsunt in culpa qui officia deserunt mollit http://wordpress-core/?346236346326&amp;2134362574863.437 anim id est laborum.';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( 8, $urls );\n\t\t$this->assertSame( array_slice( $original_urls, 0, 8 ), $urls );\n\n\t\t$blob = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n\t\t\tincididunt ut labore <a href=\"http://woo.com/1,2,3,4,5,6/-1-2-3-4-/woo.html\">343462^</a> et dolore magna aliqua.\n\t\t\tUt <a href=\"http://this.com\">&amp;3640i6p1yi499</a> enim ad minim veniam, quis nostrud exercitation 16.06. to 18.06.2014 ullamco <a href=\"http://127.0.0.1\">localhost</a>\n\t\t\tlaboris nisi ut aliquip ex <a href=\"http://www111.urwyeoweytwutreyytqytwetowteuiiu.com/?346236346326&amp;2134362574863.437\">343462^</a> ea\n\t\t\tcommodo consequat. <a href=\"http://wordpress-core/1,2,3,4,5,6/-1-2-3-4-/woo.html\">343462^</a> Duis aute irure dolor in reprehenderit in voluptate\n\t\t\tvelit esse <a href=\"http://wordpress-core.com:8080/\">-3-4--321-64-4@#!$^$!@^@^</a> cillum dolore eu <A href=\"http://www.website.com:5000\">http://www.website.com:5000</B> fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n\t\t\tsunt in culpa qui officia deserunt mollit <a href=\"http://wordpress-core/?346236346326&amp;2134362574863.437\">)(*&^%$</a> anim id est laborum.';\n\n\t\t$urls = wp_extract_urls( $blob );\n\t\t$this->assertNotEmpty( $urls );\n\t\t$this->assertInternalType( 'array', $urls );\n\t\t$this->assertCount( 8, $urls );\n\t\t$this->assertSame( array_slice( $original_urls, 0, 8 ), $urls );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode() {\n\t\t$this->assertSame( wp_json_encode( 'a' ), '\"a\"' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_utf8() {\n\t\t$this->assertSame( wp_json_encode( '\u8fd9' ), '\"\\u8fd9\"' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t * @requires function mb_detect_order\n\t */\n\tfunction test_wp_json_encode_non_utf8() {\n\t\t$charsets     = mb_detect_order();\n\t\t$old_charsets = $charsets;\n\t\tif ( ! in_array( 'EUC-JP', $charsets, true ) ) {\n\t\t\t$charsets[] = 'EUC-JP';\n\t\t\tmb_detect_order( $charsets );\n\t\t}\n\n\t\t$eucjp = mb_convert_encoding( 'a\u3042b', 'EUC-JP', 'UTF-8' );\n\t\t$utf8  = mb_convert_encoding( $eucjp, 'UTF-8', 'EUC-JP' );\n\n\t\t$this->assertSame( 'a\u3042b', $utf8 );\n\n\t\t$this->assertSame( '\"a\\u3042b\"', wp_json_encode( $eucjp ) );\n\n\t\tmb_detect_order( $old_charsets );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t * @requires function mb_detect_order\n\t */\n\tfunction test_wp_json_encode_non_utf8_in_array() {\n\t\t$charsets     = mb_detect_order();\n\t\t$old_charsets = $charsets;\n\t\tif ( ! in_array( 'EUC-JP', $charsets, true ) ) {\n\t\t\t$charsets[] = 'EUC-JP';\n\t\t\tmb_detect_order( $charsets );\n\t\t}\n\n\t\t$eucjp = mb_convert_encoding( 'a\u3042b', 'EUC-JP', 'UTF-8' );\n\t\t$utf8  = mb_convert_encoding( $eucjp, 'UTF-8', 'EUC-JP' );\n\n\t\t$this->assertSame( 'a\u3042b', $utf8 );\n\n\t\t$this->assertSame( '[\"c\",\"a\\u3042b\"]', wp_json_encode( array( 'c', $eucjp ) ) );\n\n\t\tmb_detect_order( $old_charsets );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_array() {\n\t\t$this->assertSame( wp_json_encode( array( 'a' ) ), '[\"a\"]' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_object() {\n\t\t$object    = new stdClass;\n\t\t$object->a = 'b';\n\t\t$this->assertSame( wp_json_encode( $object ), '{\"a\":\"b\"}' );\n\t}\n\n\t/**\n\t * @ticket 28786\n\t */\n\tfunction test_wp_json_encode_depth() {\n\t\t$data = array( array( array( 1, 2, 3 ) ) );\n\t\t$json = wp_json_encode( $data, 0, 1 );\n\t\t$this->assertFalse( $json );\n\n\t\t$data = array( '\u3042', array( array( 1, 2, 3 ) ) );\n\t\t$json = wp_json_encode( $data, 0, 1 );\n\t\t$this->assertFalse( $json );\n\t}\n\n\t/**\n\t * @ticket 36054\n\t * @dataProvider datetime_provider\n\t */\n\tfunction test_mysql_to_rfc3339( $expected, $actual ) {\n\t\t$date_return = mysql_to_rfc3339( $actual );\n\n\t\t$this->assertTrue( is_string( $date_return ), 'The date return must be a string' );\n\t\t$this->assertNotEmpty( $date_return, 'The date return could not be an empty string' );\n\t\t$this->assertSame( $expected, $date_return, 'The date does not match' );\n\t\t$this->assertEquals( new DateTime( $expected ), new DateTime( $date_return ), 'The date is not the same after the call method' );\n\t}\n\n\tfunction datetime_provider() {\n\t\treturn array(\n\t\t\tarray( '2016-03-15T18:54:46', '15-03-2016 18:54:46' ),\n\t\t\tarray( '2016-03-02T19:13:25', '2016-03-02 19:13:25' ),\n\t\t\tarray( '2016-03-02T19:13:00', '2016-03-02 19:13' ),\n\t\t\tarray( '2016-03-02T19:13:00', '16-03-02 19:13' ),\n\t\t\tarray( '2016-03-02T19:13:00', '16-03-02 19:13' ),\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 35987\n\t */\n\tpublic function test_wp_get_ext_types() {\n\t\t$extensions = wp_get_ext_types();\n\n\t\t$this->assertInternalType( 'array', $extensions );\n\t\t$this->assertNotEmpty( $extensions );\n\n\t\tadd_filter( 'ext2type', '__return_empty_array' );\n\t\t$extensions = wp_get_ext_types();\n\t\t$this->assertSame( array(), $extensions );\n\n\t\tremove_filter( 'ext2type', '__return_empty_array' );\n\t\t$extensions = wp_get_ext_types();\n\t\t$this->assertInternalType( 'array', $extensions );\n\t\t$this->assertNotEmpty( $extensions );\n\t}\n\n\t/**\n\t * @ticket 35987\n\t */\n\tpublic function test_wp_ext2type() {\n\t\t$extensions = wp_get_ext_types();\n\n\t\tforeach ( $extensions as $type => $extension_list ) {\n\t\t\tforeach ( $extension_list as $extension ) {\n\t\t\t\t$this->assertSame( $type, wp_ext2type( $extension ) );\n\t\t\t\t$this->assertSame( $type, wp_ext2type( strtoupper( $extension ) ) );\n\t\t\t}\n\t\t}\n\n\t\t$this->assertNull( wp_ext2type( 'unknown_format' ) );\n\t}\n\n\t/**\n\t * Tests raising the memory limit.\n\t *\n\t * Unfortunately as the default for 'WP_MAX_MEMORY_LIMIT' in the\n\t * test suite is -1, we can not test the memory limit negotiations.\n\t *\n\t * @ticket 32075\n\t */\n\tfunction test_wp_raise_memory_limit() {\n\t\tif ( -1 !== WP_MAX_MEMORY_LIMIT ) {\n\t\t\t$this->markTestSkipped( 'WP_MAX_MEMORY_LIMIT should be set to -1.' );\n\t\t}\n\n\t\t$ini_limit_before = ini_get( 'memory_limit' );\n\t\t$raised_limit     = wp_raise_memory_limit();\n\t\t$ini_limit_after  = ini_get( 'memory_limit' );\n\n\t\t$this->assertSame( $ini_limit_before, $ini_limit_after );\n\t\t$this->assertFalse( $raised_limit );\n\t\t$this->assertEquals( WP_MAX_MEMORY_LIMIT, $ini_limit_after );\n\t}\n\n\t/**\n\t * Tests wp_generate_uuid4().\n\t *\n\t * @covers ::wp_generate_uuid4\n\t * @ticket 38164\n\t */\n\tfunction test_wp_generate_uuid4() {\n\t\t$uuids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$uuid = wp_generate_uuid4();\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid, 4 ) );\n\t\t\t$uuids[] = $uuid;\n\t\t}\n\n\t\t$unique_uuids = array_unique( $uuids );\n\t\t$this->assertSame( $uuids, $unique_uuids );\n\t}\n\n\t/**\n\t * Tests wp_is_uuid().\n\t *\n\t * @covers ::wp_is_uuid\n\t * @ticket 39778\n\t */\n\tfunction test_wp_is_valid_uuid() {\n\t\t$uuids_v4 = array(\n\t\t\t'27fe2421-780c-44c5-b39b-fff753092b55',\n\t\t\t'b7c7713a-4ee9-45a1-87ed-944a90390fc7',\n\t\t\t'fbedbe35-7bf5-49cc-a5ac-0343bd94360a',\n\t\t\t'4c58e67e-123b-4290-a41c-5eeb6970fa3e',\n\t\t\t'f54f5b78-e414-4637-84a9-a6cdc94a1beb',\n\t\t\t'd1c533ac-abcf-44b6-9b0e-6477d2c91b09',\n\t\t\t'7fcd683f-e5fd-454a-a8b9-ed15068830da',\n\t\t\t'7962c750-e58c-470a-af0d-ec1eae453ff2',\n\t\t\t'a59878ce-9a67-4493-8ca0-a756b52804b3',\n\t\t\t'6faa519d-1e13-4415-bd6f-905ae3689d1d',\n\t\t);\n\n\t\tforeach ( $uuids_v4 as $uuid ) {\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid, 4 ) );\n\t\t}\n\n\t\t$uuids = array(\n\t\t\t'00000000-0000-0000-0000-000000000000', // Nil.\n\t\t\t'9e3a0460-d72d-11e4-a631-c8e0eb141dab', // Version 1.\n\t\t\t'2c1d43b8-e6d7-376e-af7f-d4bde997cc3f', // Version 3.\n\t\t\t'39888f87-fb62-5988-a425-b2ea63f5b81e', // Version 5.\n\t\t);\n\n\t\tforeach ( $uuids as $uuid ) {\n\t\t\t$this->assertTrue( wp_is_uuid( $uuid ) );\n\t\t\t$this->assertFalse( wp_is_uuid( $uuid, 4 ) );\n\t\t}\n\n\t\t$invalid_uuids = array(\n\t\t\t'a19d5192-ea41-41e6-b006',\n\t\t\t'this-is-not-valid',\n\t\t\t1234,\n\t\t\ttrue,\n\t\t\tarray(),\n\t\t);\n\n\t\tforeach ( $invalid_uuids as $invalid_uuid ) {\n\t\t\t$this->assertFalse( wp_is_uuid( $invalid_uuid, 4 ) );\n\t\t\t$this->assertFalse( wp_is_uuid( $invalid_uuid ) );\n\t\t}\n\t}\n\n\t/**\n\t * Tests wp_unique_id().\n\t *\n\t * @covers ::wp_unique_id\n\t * @ticket 44883\n\t */\n\tfunction test_wp_unique_id() {\n\n\t\t// Test without prefix.\n\t\t$ids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$id = wp_unique_id();\n\t\t\t$this->assertInternalType( 'string', $id );\n\t\t\t$this->assertTrue( is_numeric( $id ) );\n\t\t\t$ids[] = $id;\n\t\t}\n\t\t$this->assertSame( $ids, array_unique( $ids ) );\n\n\t\t// Test with prefix.\n\t\t$ids = array();\n\t\tfor ( $i = 0; $i < 20; $i += 1 ) {\n\t\t\t$id = wp_unique_id( 'foo-' );\n\t\t\t$this->assertRegExp( '/^foo-\\d+$/', $id );\n\t\t\t$ids[] = $id;\n\t\t}\n\t\t$this->assertSame( $ids, array_unique( $ids ) );\n\t}\n\n\t/**\n\t * @ticket 40017\n\t * @dataProvider _wp_get_image_mime\n\t */\n\tpublic function test_wp_get_image_mime( $file, $expected ) {\n\t\tif ( ! is_callable( 'exif_imagetype' ) && ! function_exists( 'getimagesize' ) ) {\n\t\t\t$this->markTestSkipped( 'The exif PHP extension is not loaded.' );\n\t\t}\n\n\t\t$this->assertSame( $expected, wp_get_image_mime( $file ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @dataProvider _wp_check_filetype_and_ext_data\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext( $file, $filename, $expected ) {\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @group ms-excluded\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext_with_filtered_svg() {\n\t\t$file     = DIR_TESTDATA . '/uploads/video-play.svg';\n\t\t$filename = 'video-play.svg';\n\n\t\t$expected = array(\n\t\t\t'ext'             => 'svg',\n\t\t\t'type'            => 'image/svg+xml',\n\t\t\t'proper_filename' => false,\n\t\t);\n\n\t\tadd_filter( 'upload_mimes', array( $this, '_filter_mime_types_svg' ) );\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\n\t\t// Cleanup.\n\t\tremove_filter( 'upload_mimes', array( $this, '_test_add_mime_types_svg' ) );\n\t}\n\n\t/**\n\t * @ticket 39550\n\t * @group ms-excluded\n\t * @requires extension fileinfo\n\t */\n\tfunction test_wp_check_filetype_and_ext_with_filtered_woff() {\n\t\t$file     = DIR_TESTDATA . '/uploads/dashicons.woff';\n\t\t$filename = 'dashicons.woff';\n\n\t\t$expected = array(\n\t\t\t'ext'             => 'woff',\n\t\t\t'type'            => 'application/font-woff',\n\t\t\t'proper_filename' => false,\n\t\t);\n\n\t\tadd_filter( 'upload_mimes', array( $this, '_filter_mime_types_woff' ) );\n\t\t$this->assertSame( $expected, wp_check_filetype_and_ext( $file, $filename ) );\n\n\t\t// Cleanup.\n\t\tremove_filter( 'upload_mimes', array( $this, '_test_add_mime_types_woff' ) );\n\t}\n\n\tpublic function _filter_mime_types_svg( $mimes ) {\n\t\t$mimes['svg'] = 'image/svg+xml';\n\t\treturn $mimes;\n\t}\n\n\tpublic function _filter_mime_types_woff( $mimes ) {\n\t\t$mimes['woff'] = 'application/font-woff';\n\t\treturn $mimes;\n\t}\n\n\t/**\n\t * Data provider for test_wp_get_image_mime();\n\t */\n\tpublic function _wp_get_image_mime() {\n\t\t$data = array(\n\t\t\t// Standard JPEG.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.jpg',\n\t\t\t\t'image/jpeg',\n\t\t\t),\n\t\t\t// Standard GIF.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.gif',\n\t\t\t\t'image/gif',\n\t\t\t),\n\t\t\t// Standard PNG.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image.png',\n\t\t\t\t'image/png',\n\t\t\t),\n\t\t\t// Image with wrong extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-mime-jpg.png',\n\t\t\t\t'image/jpeg',\n\t\t\t),\n\t\t\t// Not an image.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/uploads/dashicons.woff',\n\t\t\t\tfalse,\n\t\t\t),\n\t\t);\n\n\t\treturn $data;\n\t}\n\n\tpublic function _wp_check_filetype_and_ext_data() {\n\t\t$data = array(\n\t\t\t// Standard image.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/canola.jpg',\n\t\t\t\t'canola.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => 'jpg',\n\t\t\t\t\t'type'            => 'image/jpeg',\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Image with wrong extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-mime-jpg.png',\n\t\t\t\t'test-image-mime-jpg.png',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => 'jpg',\n\t\t\t\t\t'type'            => 'image/jpeg',\n\t\t\t\t\t'proper_filename' => 'test-image-mime-jpg.jpg',\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Image without extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/images/test-image-no-extension',\n\t\t\t\t'test-image-no-extension',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Valid non-image file with an image extension.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/formatting/big5.txt',\n\t\t\t\t'big5.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.xml',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed even if it's named like one.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed if it's named like something else.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.doc',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed even if it's named like one.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.jpg',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t\t// Non-image file not allowed if it's named like something else.\n\t\t\tarray(\n\t\t\t\tDIR_TESTDATA . '/export/crazy-cdata.xml',\n\t\t\t\t'crazy-cdata.doc',\n\t\t\t\tarray(\n\t\t\t\t\t'ext'             => false,\n\t\t\t\t\t'type'            => false,\n\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// Test a few additional file types on single sites.\n\t\tif ( ! is_multisite() ) {\n\t\t\t$data = array_merge(\n\t\t\t\t$data,\n\t\t\t\tarray(\n\t\t\t\t\t// Standard non-image file.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/formatting/big5.txt',\n\t\t\t\t\t\t'big5.txt',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'txt',\n\t\t\t\t\t\t\t'type'            => 'text/plain',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// Non-image file with wrong sub-type.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/pages-to-word.docx',\n\t\t\t\t\t\t'pages-to-word.docx',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'docx',\n\t\t\t\t\t\t\t'type'            => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// FLAC file.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/small-audio.flac',\n\t\t\t\t\t\t'small-audio.flac',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'flac',\n\t\t\t\t\t\t\t'type'            => 'audio/flac',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// Assorted text/* sample files\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.vtt',\n\t\t\t\t\t\t'test.vtt',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'vtt',\n\t\t\t\t\t\t\t'type'            => 'text/vtt',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.csv',\n\t\t\t\t\t\t'test.csv',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'csv',\n\t\t\t\t\t\t\t'type'            => 'text/csv',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t// RTF files.\n\t\t\t\t\tarray(\n\t\t\t\t\t\tDIR_TESTDATA . '/uploads/test.rtf',\n\t\t\t\t\t\t'test.rtf',\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'ext'             => 'rtf',\n\t\t\t\t\t\t\t'type'            => 'application/rtf',\n\t\t\t\t\t\t\t'proper_filename' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Test file path validation\n\t *\n\t * @ticket 42016\n\t * @dataProvider data_test_validate_file()\n\t *\n\t * @param string $file          File path.\n\t * @param array  $allowed_files List of allowed files.\n\t * @param int    $expected      Expected result.\n\t */\n\tpublic function test_validate_file( $file, $allowed_files, $expected ) {\n\t\t$this->assertSame( $expected, validate_file( $file, $allowed_files ) );\n\t}\n\n\t/**\n\t * Data provider for file validation.\n\t *\n\t * @return array {\n\t *     @type array $0... {\n\t *         @type string $0 File path.\n\t *         @type array  $1 List of allowed files.\n\t *         @type int    $2 Expected result.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_validate_file() {\n\t\treturn array(\n\n\t\t\t// Allowed files:\n\t\t\tarray(\n\t\t\t\tnull,\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t' ',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'.',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'..',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'./',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( 'foo.ext' ),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'dir/foo.ext',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo..ext',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'dir/dir/../',\n\t\t\t\tarray(),\n\t\t\t\t0,\n\t\t\t),\n\n\t\t\t// Directory traversal:\n\t\t\tarray(\n\t\t\t\t'../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../file.ext',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'../dir/../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'/dir/dir/../../',\n\t\t\t\tarray(),\n\t\t\t\t1,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'/dir/dir/../../',\n\t\t\t\tarray( '/dir/dir/../../' ),\n\t\t\t\t1,\n\t\t\t),\n\n\t\t\t// Windows drives:\n\t\t\tarray(\n\t\t\t\t'c:',\n\t\t\t\tarray(),\n\t\t\t\t2,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'C:/WINDOWS/system32',\n\t\t\t\tarray( 'C:/WINDOWS/system32' ),\n\t\t\t\t2,\n\t\t\t),\n\n\t\t\t// Disallowed files:\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( 'bar.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'foo.ext',\n\t\t\t\tarray( '.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'path/foo.ext',\n\t\t\t\tarray( 'foo.ext' ),\n\t\t\t\t3,\n\t\t\t),\n\n\t\t);\n\t}\n\n\t/**\n\t * Test stream URL validation.\n\t *\n\t * @dataProvider data_test_wp_is_stream\n\t *\n\t * @param string $path     The resource path or URL.\n\t * @param bool   $expected Expected result.\n\t */\n\tpublic function test_wp_is_stream( $path, $expected ) {\n\t\tif ( ! extension_loaded( 'openssl' ) && false !== strpos( $path, 'https://' ) ) {\n\t\t\t$this->markTestSkipped( 'The openssl PHP extension is not loaded.' );\n\t\t}\n\n\t\t$this->assertSame( $expected, wp_is_stream( $path ) );\n\t}\n\n\t/**\n\t * Data provider for stream URL validation.\n\t *\n\t * @return array {\n\t *     @type array $0... {\n\t *         @type string $0 The resource path or URL.\n\t *         @type bool   $1 Expected result.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_wp_is_stream() {\n\t\treturn array(\n\t\t\t// Legitimate stream examples.\n\t\t\tarray( 'http://example.com', true ),\n\t\t\tarray( 'https://example.com', true ),\n\t\t\tarray( 'ftp://example.com', true ),\n\t\t\tarray( 'file:///path/to/some/file', true ),\n\t\t\tarray( 'php://some/php/file.php', true ),\n\n\t\t\t// Non-stream examples.\n\t\t\tarray( 'fakestream://foo/bar/baz', false ),\n\t\t\tarray( '../../some/relative/path', false ),\n\t\t\tarray( 'some/other/relative/path', false ),\n\t\t\tarray( '/leading/relative/path', false ),\n\t\t);\n\t}\n\n\t/**\n\t * Test human_readable_duration().\n\t *\n\t * @ticket 39667\n\t * @dataProvider data_test_human_readable_duration\n\t *\n\t * @param string $input    Duration.\n\t * @param string $expected Expected human readable duration.\n\t */\n\tpublic function test_human_readable_duration( $input, $expected ) {\n\t\t$this->assertSame( $expected, human_readable_duration( $input ) );\n\t}\n\n\t/**\n\t * Dataprovider for test_duration_format().\n\t *\n\t * @return array {\n\t *     @type array {\n\t *         @type string $input  Duration.\n\t *         @type string $expect Expected human readable duration.\n\t *     }\n\t * }\n\t */\n\tpublic function data_test_human_readable_duration() {\n\t\treturn array(\n\t\t\t// Valid ii:ss cases.\n\t\t\tarray( '0:0', '0 minutes, 0 seconds' ),\n\t\t\tarray( '00:00', '0 minutes, 0 seconds' ),\n\t\t\tarray( '0:5', '0 minutes, 5 seconds' ),\n\t\t\tarray( '0:05', '0 minutes, 5 seconds' ),\n\t\t\tarray( '01:01', '1 minute, 1 second' ),\n\t\t\tarray( '30:00', '30 minutes, 0 seconds' ),\n\t\t\tarray( ' 30:00 ', '30 minutes, 0 seconds' ),\n\t\t\t// Valid HH:ii:ss cases.\n\t\t\tarray( '0:0:0', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '00:00:00', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '00:30:34', '0 hours, 30 minutes, 34 seconds' ),\n\t\t\tarray( '01:01:01', '1 hour, 1 minute, 1 second' ),\n\t\t\tarray( '1:02:00', '1 hour, 2 minutes, 0 seconds' ),\n\t\t\tarray( '10:30:34', '10 hours, 30 minutes, 34 seconds' ),\n\t\t\tarray( '1234567890:59:59', '1234567890 hours, 59 minutes, 59 seconds' ),\n\t\t\t// Valid ii:ss cases with negative sign.\n\t\t\tarray( '-00:00', '0 minutes, 0 seconds' ),\n\t\t\tarray( '-3:00', '3 minutes, 0 seconds' ),\n\t\t\tarray( '-03:00', '3 minutes, 0 seconds' ),\n\t\t\tarray( '-30:00', '30 minutes, 0 seconds' ),\n\t\t\t// Valid HH:ii:ss cases with negative sign.\n\t\t\tarray( '-00:00:00', '0 hours, 0 minutes, 0 seconds' ),\n\t\t\tarray( '-1:02:00', '1 hour, 2 minutes, 0 seconds' ),\n\t\t\t// Invalid cases.\n\t\t\tarray( null, false ),\n\t\t\tarray( '', false ),\n\t\t\tarray( ':', false ),\n\t\t\tarray( '::', false ),\n\t\t\tarray( array(), false ),\n\t\t\tarray( 'Batman Begins !', false ),\n\t\t\tarray( '', false ),\n\t\t\tarray( '-1', false ),\n\t\t\tarray( -1, false ),\n\t\t\tarray( 0, false ),\n\t\t\tarray( 1, false ),\n\t\t\tarray( '00', false ),\n\t\t\tarray( '30:-10', false ),\n\t\t\tarray( ':30:00', false ),   // Missing HH.\n\t\t\tarray( 'MM:30:00', false ), // Invalid HH.\n\t\t\tarray( '30:MM:00', false ), // Invalid ii.\n\t\t\tarray( '30:30:MM', false ), // Invalid ss.\n\t\t\tarray( '30:MM', false ),    // Invalid ss.\n\t\t\tarray( 'MM:00', false ),    // Invalid ii.\n\t\t\tarray( 'MM:MM', false ),    // Invalid ii and ss.\n\t\t\tarray( '10 :30', false ),   // Containing a space.\n\t\t\tarray( '59:61', false ),    // Out of bound.\n\t\t\tarray( '61:59', false ),    // Out of bound.\n\t\t\tarray( '3:59:61', false ),  // Out of bound.\n\t\t\tarray( '03:61:59', false ), // Out of bound.\n\t\t);\n\t}\n\n\t/**\n\t * @ticket 49404\n\t * @dataProvider data_test_wp_is_json_media_type\n\t */\n\tpublic function test_wp_is_json_media_type( $input, $expected ) {\n\t\t$this->assertEquals( $expected, wp_is_json_media_type( $input ) );\n\t}\n\n\n\tpublic function data_test_wp_is_json_media_type() {\n\t\treturn array(\n\t\t\tarray( 'application/ld+json', true ),\n\t\t\tarray( 'application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"', true ),\n\t\t\tarray( 'application/activity+json', true ),\n\t\t\tarray( 'application/json+oembed', true ),\n\t\t\tarray( 'application/json', true ),\n\t\t\tarray( 'application/nojson', false ),\n\t\t\tarray( 'application/no.json', false ),\n\t\t\tarray( 'text/html, application/xhtml+xml, application/xml;q=0.9, image/webp, */*;q=0.8', false ),\n\t\t\tarray( 'application/activity+json, application/nojson', true ),\n\t\t);\n\t}\n}\n"], "filenames": ["src/wp-includes/Requests/Utility/FilteredIterator.php", "tests/phpunit/tests/functions.php"], "buggy_code_start_loc": [44, 269], "buggy_code_end_loc": [44, 269], "fixing_code_start_loc": [45, 270], "fixing_code_end_loc": [61, 299], "type": "CWE-502", "message": "WordPress before 5.5.2 mishandles deserialization requests in wp-includes/Requests/Utility/FilteredIterator.php.", "other": {"cve": {"id": "CVE-2020-28032", "sourceIdentifier": "cve@mitre.org", "published": "2020-11-02T21:15:30.647", "lastModified": "2022-06-29T18:57:43.583", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "WordPress before 5.5.2 mishandles deserialization requests in wp-includes/Requests/Utility/FilteredIterator.php."}, {"lang": "es", "value": "WordPress versiones anteriores a 5.5.2, maneja inapropiadamente las peticiones de deserializaci\u00f3n en el archivo wp-includes/Requests/Utility/FilteredIterator.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-502"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.5.2", "matchCriteriaId": "1D5D80A5-C662-4540-9D2E-9C3F06D1D8FC"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:31:*:*:*:*:*:*:*", "matchCriteriaId": "80F0FA5D-8D3B-4C0E-81E2-87998286AF33"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:32:*:*:*:*:*:*:*", "matchCriteriaId": "36D96259-24BD-44E2-96D9-78CE1D41F956"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://github.com/WordPress/wordpress-develop/commit/add6bedf3a53b647d0ebda2970057912d3cd79d3", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00004.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHVNK2WYAM3ZTCXTFSEIT56IKLVJHU3/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VAVVYJKA2I6CRQUINECDPBGWMQDEG244/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VUXVUAKL2HL4QYJEPHBNVQQWRMFMII2Y/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://wordpress.org/news/2020/10/wordpress-5-5-2-security-and-maintenance-release/", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://wpscan.com/vulnerability/10446", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.debian.org/security/2020/dsa-4784", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/WordPress/wordpress-develop/commit/add6bedf3a53b647d0ebda2970057912d3cd79d3"}}