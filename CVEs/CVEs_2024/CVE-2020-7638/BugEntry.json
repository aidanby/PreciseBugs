{"buggy_code": ["/// <reference types=\"node\" />\nexport interface IConfigSection {\n    validate(): void;\n}\nexport declare function validate(configuration: any): void;\nexport declare function applyEnvVariables(configuration: any, envVariables: NodeJS.ProcessEnv, envPrefix?: string): void;\nexport declare function applyConfigFile(configuration: any, configFile: string): void;\nexport declare function applyCommandArgs(configuration: any, argv: string[]): void;\nexport declare function setDeepProperty(obj: any, propertyPath: string, value: any): void;\nexport declare function getDeepProperty(obj: any, propertyPath: string): any;\nexport declare function objectsAreEqual(obj1: any, obj2: any, leftOnly?: boolean): boolean;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst Debug = require(\"debug\");\nconst debug = Debug(\"envcfg\");\nconst yargs = require(\"yargs-parser\");\nfunction isSection(value) {\n    return value && value.validate !== undefined;\n}\nfunction validate(configuration) {\n    for (const configProperty in configuration) {\n        if (!configuration.hasOwnProperty(configProperty)) {\n            continue;\n        }\n        const value = configuration[configProperty];\n        if (isSection(value)) {\n            value.validate();\n        }\n    }\n}\nexports.validate = validate;\nfunction applyEnvVariables(configuration, envVariables, envPrefix = \"NODE_ENV\") {\n    for (const envKey in envVariables) {\n        if (!envVariables.hasOwnProperty(envKey)\n            || typeof envVariables[envKey] !== \"string\"\n            || !envKey.startsWith(envPrefix)\n            || envKey.length <= envPrefix.length) {\n            continue;\n        }\n        const configKey = envKey\n            .substr(envPrefix.length)\n            .replace(/_/g, \".\");\n        debug(`Found config value from env '${envKey}' to '${configKey}'`);\n        setDeepProperty(configuration, configKey, envVariables[envKey]);\n    }\n}\nexports.applyEnvVariables = applyEnvVariables;\nfunction applyConfigFile(configuration, configFile) {\n    debug(`Loading config form ${configFile}`);\n    const config = require(configFile);\n    debug(config);\n    for (const configProperty in configuration) {\n        if (!configuration.hasOwnProperty(configProperty)) {\n            continue;\n        }\n        Object.assign(configuration[configProperty], config[configProperty] || {});\n    }\n}\nexports.applyConfigFile = applyConfigFile;\nfunction applyCommandArgs(configuration, argv) {\n    if (!argv || !argv.length) {\n        return;\n    }\n    argv = argv.slice(2);\n    const parsedArgv = yargs(argv);\n    const argvKeys = Object.keys(parsedArgv);\n    if (!argvKeys.length) {\n        return;\n    }\n    debug(\"Appling command arguments:\", parsedArgv);\n    if (parsedArgv.config) {\n        const configFile = path.resolve(process.cwd(), parsedArgv.config);\n        applyConfigFile(configuration, configFile);\n    }\n    for (const key in parsedArgv) {\n        if (!parsedArgv.hasOwnProperty(key)) {\n            continue;\n        }\n        const configKey = key\n            .replace(/_/g, \".\");\n        debug(`Found config value from cmd args '${key}' to '${configKey}'`);\n        setDeepProperty(configuration, configKey, parsedArgv[key]);\n    }\n}\nexports.applyCommandArgs = applyCommandArgs;\nfunction setDeepProperty(obj, propertyPath, value) {\n    const a = splitPath(propertyPath);\n    const n = a.length;\n    for (let i = 0; i < n - 1; i++) {\n        const k = a[i];\n        if (!(k in obj)) {\n            obj[k] = {};\n        }\n        obj = obj[k];\n    }\n    obj[a[n - 1]] = value;\n    return;\n}\nexports.setDeepProperty = setDeepProperty;\nfunction getDeepProperty(obj, propertyPath) {\n    let ret = obj;\n    const a = splitPath(propertyPath);\n    const n = a.length;\n    for (let i = 0; i < n; ++i) {\n        const k = a[i];\n        if (k in ret) {\n            ret = ret[k];\n        }\n        else {\n            return;\n        }\n    }\n    return ret;\n}\nexports.getDeepProperty = getDeepProperty;\nfunction objectsAreEqual(obj1, obj2, leftOnly = false) {\n    if (typeof (obj1) === \"function\") {\n        throw new Error(\"Function compare not supported\");\n    }\n    // is primitive\n    if (typeof (obj1) !== \"object\" || obj1 === null || obj1 === undefined) {\n        const exactEqual = obj1 === obj2;\n        if (exactEqual) {\n            return exactEqual;\n        }\n        if (isIsoDate(obj1) || isIsoDate(obj2)) {\n            return Date.parse(obj1) === Date.parse(obj2);\n        }\n        return false;\n    }\n    // Loop through properties in object 1\n    for (const p in obj1) {\n        if (!obj1.hasOwnProperty(p)) {\n            continue;\n        }\n        // Check property exists on both objects\n        if (!obj2.hasOwnProperty(p)) {\n            return false;\n        }\n        if (!objectsAreEqual(obj1[p], obj2[p])) {\n            return false;\n        }\n    }\n    if (!leftOnly) {\n        // Check object 2 for any extra properties\n        for (const p in obj2) {\n            if (!obj2.hasOwnProperty(p)) {\n                continue;\n            }\n            // Check property exists on both objects\n            if (!obj1.hasOwnProperty(p)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.objectsAreEqual = objectsAreEqual;\nfunction splitPath(propertyPath) {\n    propertyPath = propertyPath.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n    propertyPath = propertyPath.replace(/^\\./, \"\"); // strip a leading dot\n    return propertyPath.split(\".\");\n}\nfunction isIsoDate(value) {\n    // tslint:disable-next-line:max-line-length\n    const ISO_REGEX = /^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$/;\n    return ISO_REGEX.test(value);\n}\n//# sourceMappingURL=index.js.map", "{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"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\"}", "import * as path from \"path\";\n\nimport * as Debug from \"debug\";\nconst debug = Debug(\"envcfg\");\n\n\nconst yargs = require(\"yargs-parser\");\n\nexport interface IConfigSection {\n\tvalidate(): void;\n}\n\nfunction isSection(value: any): value is IConfigSection {\n\treturn value && (value as IConfigSection).validate !== undefined;\n}\n\nexport function validate(configuration: any) {\n\tfor (const configProperty in configuration) {\n\t\tif (!configuration.hasOwnProperty(configProperty)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = configuration[configProperty];\n\t\tif (isSection(value)) {\n\t\t\tvalue.validate();\n\t\t}\n\t}\n}\n\nexport function applyEnvVariables(configuration: any, envVariables: NodeJS.ProcessEnv, envPrefix = \"NODE_ENV\") {\n\tfor (const envKey in envVariables) {\n\t\tif (!envVariables.hasOwnProperty(envKey)\n\t\t\t|| typeof envVariables[envKey] !== \"string\"\n\t\t\t|| !envKey.startsWith(envPrefix)\n\t\t\t|| envKey.length <= envPrefix.length) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst configKey = envKey\n\t\t\t.substr(envPrefix.length)\n\t\t\t.replace(/_/g, \".\");\n\n\t\tdebug(`Found config value from env '${envKey}' to '${configKey}'`);\n\n\t\tsetDeepProperty(configuration, configKey, envVariables[envKey]);\n\t}\n}\n\nexport function applyConfigFile(configuration: any, configFile: string) {\n\tdebug(`Loading config form ${configFile}`);\n\tconst config = require(configFile);\n\tdebug(config);\n\n\tfor (const configProperty in configuration) {\n\t\tif (!configuration.hasOwnProperty(configProperty)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tObject.assign(configuration[configProperty], config[configProperty] || {});\n\t}\n}\n\nexport function applyCommandArgs(configuration: any, argv: string[]) {\n\tif (!argv || !argv.length) {\n\t\treturn;\n\t}\n\n\targv = argv.slice(2);\n\n\tconst parsedArgv = yargs(argv);\n\tconst argvKeys = Object.keys(parsedArgv);\n\tif (!argvKeys.length) {\n\t\treturn;\n\t}\n\n\tdebug(\"Appling command arguments:\", parsedArgv);\n\n\tif (parsedArgv.config) {\n\t\tconst configFile = path.resolve(process.cwd(), parsedArgv.config);\n\t\tapplyConfigFile(configuration, configFile);\n\t}\n\n\tfor (const key in parsedArgv) {\n\t\tif (!parsedArgv.hasOwnProperty(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst configKey = key\n\t\t\t.replace(/_/g, \".\");\n\n\t\tdebug(`Found config value from cmd args '${key}' to '${configKey}'`);\n\n\t\tsetDeepProperty(configuration, configKey, parsedArgv[key]);\n\t}\n}\n\n\nexport function setDeepProperty(obj: any, propertyPath: string, value: any): void {\n\tconst a = splitPath(propertyPath);\n\tconst n = a.length;\n\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tconst k = a[i];\n\n\t\tif (!(k in obj)) {\n\t\t\tobj[k] = {};\n\t\t}\n\t\tobj = obj[k];\n\t}\n\n\n\tobj[a[n - 1]] = value;\n\treturn;\n}\n\nexport function getDeepProperty(obj: any, propertyPath: string): any {\n\tlet ret: any = obj;\n\n\tconst a = splitPath(propertyPath);\n\tconst n = a.length;\n\n\tfor (let i = 0; i < n; ++i) {\n\t\tconst k = a[i];\n\t\tif (k in ret) {\n\t\t\tret = ret[k];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn ret;\n}\n\nexport function objectsAreEqual(obj1: any, obj2: any, leftOnly: boolean = false) {\n\tif (typeof(obj1) === \"function\") {\n\t\tthrow new Error(\"Function compare not supported\");\n\t}\n\n\t// is primitive\n\tif (typeof(obj1) !== \"object\" || obj1 === null || obj1 === undefined) {\n\t\tconst exactEqual = obj1 === obj2;\n\t\tif (exactEqual) {\n\t\t\treturn exactEqual;\n\t\t}\n\n\t\tif (isIsoDate(obj1) || isIsoDate(obj2)) {\n\t\t\treturn Date.parse(obj1) === Date.parse(obj2);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Loop through properties in object 1\n\tfor (const p in obj1) {\n\t\tif (!obj1.hasOwnProperty(p)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check property exists on both objects\n\t\tif (!obj2.hasOwnProperty(p)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!objectsAreEqual(obj1[p], obj2[p])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!leftOnly) {\n\t\t// Check object 2 for any extra properties\n\t\tfor (const p in obj2) {\n\t\t\tif (!obj2.hasOwnProperty(p)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check property exists on both objects\n\t\t\tif (!obj1.hasOwnProperty(p)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction splitPath(propertyPath: string): string[] {\n\tpropertyPath = propertyPath.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n\tpropertyPath = propertyPath.replace(/^\\./, \"\");           // strip a leading dot\n\treturn propertyPath.split(\".\");\n}\n\nfunction isIsoDate(value: string): boolean {\n\t// tslint:disable-next-line:max-line-length\n\tconst ISO_REGEX = /^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$/;\n\treturn ISO_REGEX.test(value);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst confinit = require(\"../index\");\nconst path = require(\"path\");\nclass Section1Config {\n    constructor() {\n        this.url = \"\";\n    }\n    validate() {\n        if (!this.url) {\n            throw new Error(\"Section 1 url not set.\");\n        }\n    }\n}\nexports.Section1Config = Section1Config;\nclass WebServerConfig {\n    constructor() {\n        this.port = 3000;\n        const envPort = process.env.PORT;\n        if (envPort) {\n            this.port = parseInt(envPort, 10);\n        }\n    }\n    validate() {\n        if (!this.port) {\n            throw new Error(\"Invalid port\");\n        }\n        this.port = parseInt(this.port.toString(), 10);\n    }\n}\nexports.WebServerConfig = WebServerConfig;\nclass Configuration {\n    constructor(env) {\n        this.section1 = new Section1Config();\n        this.webServer = new WebServerConfig();\n        if (!env) {\n            env = process.env;\n        }\n        if (env.config) {\n            const configFile = path.resolve(process.cwd(), env.config);\n            confinit.applyConfigFile(this, configFile);\n        }\n        confinit.applyEnvVariables(this, process.env, \"cfg_\");\n        confinit.applyCommandArgs(this, process.argv);\n        confinit.validate(this);\n    }\n}\nexports.Configuration = Configuration;\nconsole.log(\"Sample configuration\");\nconst config = new Configuration();\nconsole.log(\"---------------\");\nconsole.log(\"section1:\");\nconsole.log(\"---------------\");\nconsole.log(config.section1);\nconsole.log(\"---------------\");\nconsole.log(\"webServer:\");\nconsole.log(\"---------------\");\nconsole.log(config.webServer);\n//# sourceMappingURL=index.js.map", "{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\";;AAAA,qCAAqC;AACrC,6BAA6B;AAE7B,MAAa,cAAc;IAA3B;QACC,QAAG,GAAW,EAAE,CAAC;IAOlB,CAAC;IALA,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC1C;IACF,CAAC;CACD;AARD,wCAQC;AAED,MAAa,eAAe;IAG3B;QAFA,SAAI,GAAG,IAAI,CAAC;QAGX,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjC,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAClC;IACF,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;CACD;AAhBD,0CAgBC;AAED,MAAa,aAAa;IAIzB,YAAY,GAAuB;QAH1B,aAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;QAChC,cAAS,GAAG,IAAI,eAAe,EAAE,CAAC;QAG1C,IAAI,CAAC,GAAG,EAAE;YACT,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;SAClB;QACD,IAAI,GAAG,CAAC,MAAM,EAAE;YACf,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3D,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC3C;QACD,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtD,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAE9C,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;CACD;AAjBD,sCAiBC;AAED,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,MAAM,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;AAEnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC7B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC\"}", "import * as confinit from \"../index\";\nimport * as path from \"path\";\n\nexport class Section1Config implements confinit.IConfigSection {\n\turl: string = \"\";\n\n\tvalidate(): void {\n\t\tif (!this.url) {\n\t\t\tthrow new Error(\"Section 1 url not set.\");\n\t\t}\n\t}\n}\n\nexport class WebServerConfig implements confinit.IConfigSection {\n\tport = 3000;\n\n\tconstructor() {\n\t\tconst envPort = process.env.PORT;\n\t\tif (envPort) {\n\t\t\tthis.port = parseInt(envPort, 10);\n\t\t}\n\t}\n\n\tvalidate(): void {\n\t\tif (!this.port) {\n\t\t\tthrow new Error(\"Invalid port\");\n\t\t}\n\t\tthis.port = parseInt(this.port.toString(), 10);\n\t}\n}\n\nexport class Configuration {\n\treadonly section1 = new Section1Config();\n\treadonly webServer = new WebServerConfig();\n\n\tconstructor(env?: NodeJS.ProcessEnv) {\n\t\tif (!env) {\n\t\t\tenv = process.env;\n\t\t}\n\t\tif (env.config) {\n\t\t\tconst configFile = path.resolve(process.cwd(), env.config);\n\t\t\tconfinit.applyConfigFile(this, configFile);\n\t\t}\n\t\tconfinit.applyEnvVariables(this, process.env, \"cfg_\");\n\t\tconfinit.applyCommandArgs(this, process.argv);\n\n\t\tconfinit.validate(this);\n\t}\n}\n\nconsole.log(\"Sample configuration\");\nconst config = new Configuration();\n\nconsole.log(\"---------------\");\nconsole.log(\"section1:\");\nconsole.log(\"---------------\");\nconsole.log(config.section1);\nconsole.log(\"---------------\");\nconsole.log(\"webServer:\");\nconsole.log(\"---------------\");\nconsole.log(config.webServer);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = require(\"assert\");\nconst __1 = require(\"..\");\ndescribe('setDeepProperty', () => {\n    it('should set a property with deep 1', () => {\n        const obj = {\n            test: \"A\"\n        };\n        __1.setDeepProperty(obj, \"test\", \"B\");\n        assert.equal(obj.test, \"B\");\n    });\n    it('should set a property with deep 2', () => {\n        const obj = {\n            parent: {\n                test: \"A\"\n            }\n        };\n        __1.setDeepProperty(obj, \"parent.test\", \"B\");\n        assert.equal(obj.parent.test, \"B\");\n    });\n});\n//# sourceMappingURL=setDeepProperty.test.js.map", "{\"version\":3,\"file\":\"setDeepProperty.test.js\",\"sourceRoot\":\"\",\"sources\":[\"setDeepProperty.test.ts\"],\"names\":[],\"mappings\":\";;AAAA,iCAAiC;AACjC,0BAAqC;AAErC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAE/B,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,GAAG;SACV,CAAA;QACD,mBAAe,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,GAAG,GAAG;YACV,MAAM,EAAE;gBACN,IAAI,EAAE,GAAG;aACV;SACF,CAAA;QACD,mBAAe,CAAC,GAAG,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC\"}", "import * as assert from 'assert';\nimport { setDeepProperty } from '..';\n\ndescribe('setDeepProperty', () => {\n\n  it('should set a property with deep 1', () => {\n    const obj = {\n      test: \"A\"\n    }\n    setDeepProperty(obj, \"test\", \"B\");\n    assert.equal(obj.test, \"B\");\n  });\n\n  it('should set a property with deep 2', () => {\n    const obj = {\n      parent: {\n        test: \"A\"\n      }\n    }\n    setDeepProperty(obj, \"parent.test\", \"B\");\n    assert.equal(obj.parent.test, \"B\");\n  });\n\n});"], "fixing_code": ["/// <reference types=\"node\" />\nexport interface IConfigSection {\n    validate(): void;\n}\nexport declare function validate(configuration: any): void;\nexport declare function applyEnvVariables(configuration: any, envVariables: NodeJS.ProcessEnv, envPrefix?: string): void;\nexport declare function applyConfigFile(configuration: any, configFile: string): void;\nexport declare function applyCommandArgs(configuration: any, argv: string[]): void;\nexport declare function setDeepProperty(obj: {\n    [key: string]: any;\n}, propertyPath: string, value: any): void;\nexport declare function getDeepProperty(obj: any, propertyPath: string): any;\nexport declare function objectsAreEqual(obj1: any, obj2: any, leftOnly?: boolean): boolean;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst Debug = require(\"debug\");\nconst debug = Debug(\"envcfg\");\nconst yargs = require(\"yargs-parser\");\nfunction isSection(value) {\n    return value && value.validate !== undefined;\n}\nfunction validate(configuration) {\n    for (const configProperty in configuration) {\n        if (!configuration.hasOwnProperty(configProperty)) {\n            continue;\n        }\n        const value = configuration[configProperty];\n        if (isSection(value)) {\n            value.validate();\n        }\n    }\n}\nexports.validate = validate;\nfunction applyEnvVariables(configuration, envVariables, envPrefix = \"NODE_ENV\") {\n    for (const envKey in envVariables) {\n        if (!envVariables.hasOwnProperty(envKey)\n            || typeof envVariables[envKey] !== \"string\"\n            || !envKey.startsWith(envPrefix)\n            || envKey.length <= envPrefix.length) {\n            continue;\n        }\n        const configKey = envKey\n            .substr(envPrefix.length)\n            .replace(/_/g, \".\");\n        debug(`Found config value from env '${envKey}' to '${configKey}'`);\n        setDeepProperty(configuration, configKey, envVariables[envKey]);\n    }\n}\nexports.applyEnvVariables = applyEnvVariables;\nfunction applyConfigFile(configuration, configFile) {\n    debug(`Loading config form ${configFile}`);\n    const config = require(configFile);\n    debug(config);\n    for (const configProperty in configuration) {\n        if (!configuration.hasOwnProperty(configProperty)) {\n            continue;\n        }\n        Object.assign(configuration[configProperty], config[configProperty] || {});\n    }\n}\nexports.applyConfigFile = applyConfigFile;\nfunction applyCommandArgs(configuration, argv) {\n    if (!argv || !argv.length) {\n        return;\n    }\n    argv = argv.slice(2);\n    const parsedArgv = yargs(argv);\n    const argvKeys = Object.keys(parsedArgv);\n    if (!argvKeys.length) {\n        return;\n    }\n    debug(\"Appling command arguments:\", parsedArgv);\n    const CONFIG_PROP = 'config';\n    if (parsedArgv[CONFIG_PROP]) {\n        const configFile = path.resolve(process.cwd(), parsedArgv[CONFIG_PROP]);\n        applyConfigFile(configuration, configFile);\n    }\n    for (const key in parsedArgv) {\n        if (!parsedArgv.hasOwnProperty(key)) {\n            continue;\n        }\n        if (key.startsWith('_')) {\n            continue;\n        }\n        if (key.endsWith('_')) {\n            continue;\n        }\n        if (key === CONFIG_PROP) {\n            continue;\n        }\n        const configKey = key\n            .replace(/_/g, \".\");\n        debug(`Found config value from cmd args '${key}' to '${configKey}'`);\n        setDeepProperty(configuration, configKey, parsedArgv[key]);\n    }\n}\nexports.applyCommandArgs = applyCommandArgs;\nfunction setDeepProperty(obj, propertyPath, value) {\n    if (!obj) {\n        throw new Error(\"Invalid object\");\n    }\n    if (!propertyPath) {\n        throw new Error(\"Invalid property path\");\n    }\n    const pathParts = splitPath(propertyPath);\n    const pathPartsLen = pathParts.length;\n    for (let i = 0; i < pathPartsLen - 1; i++) {\n        const pathPart = pathParts[i];\n        if (!(pathPart in obj)) {\n            setProp(obj, pathPart, {});\n        }\n        obj = getProp(obj, pathPart);\n    }\n    setProp(obj, pathParts[pathPartsLen - 1], value);\n    return;\n}\nexports.setDeepProperty = setDeepProperty;\nfunction setProp(obj, property, value) {\n    if (!obj.hasOwnProperty(property)) {\n        throw new Error(`Property '${property}' is not valid`);\n    }\n    obj[property] = value;\n}\nfunction getProp(obj, property) {\n    if (!obj.hasOwnProperty(property)) {\n        throw new Error(`Property '${property}' is not valid`);\n    }\n    return obj[property];\n}\nfunction getDeepProperty(obj, propertyPath) {\n    let ret = obj;\n    const a = splitPath(propertyPath);\n    const n = a.length;\n    for (let i = 0; i < n; ++i) {\n        const k = a[i];\n        if (k in ret) {\n            ret = ret[k];\n        }\n        else {\n            return;\n        }\n    }\n    return ret;\n}\nexports.getDeepProperty = getDeepProperty;\nfunction objectsAreEqual(obj1, obj2, leftOnly = false) {\n    if (typeof (obj1) === \"function\") {\n        throw new Error(\"Function compare not supported\");\n    }\n    // is primitive\n    if (typeof (obj1) !== \"object\" || obj1 === null || obj1 === undefined) {\n        const exactEqual = obj1 === obj2;\n        if (exactEqual) {\n            return exactEqual;\n        }\n        if (isIsoDate(obj1) || isIsoDate(obj2)) {\n            return Date.parse(obj1) === Date.parse(obj2);\n        }\n        return false;\n    }\n    // Loop through properties in object 1\n    for (const p in obj1) {\n        if (!obj1.hasOwnProperty(p)) {\n            continue;\n        }\n        // Check property exists on both objects\n        if (!obj2.hasOwnProperty(p)) {\n            return false;\n        }\n        if (!objectsAreEqual(obj1[p], obj2[p])) {\n            return false;\n        }\n    }\n    if (!leftOnly) {\n        // Check object 2 for any extra properties\n        for (const p in obj2) {\n            if (!obj2.hasOwnProperty(p)) {\n                continue;\n            }\n            // Check property exists on both objects\n            if (!obj1.hasOwnProperty(p)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.objectsAreEqual = objectsAreEqual;\nfunction splitPath(propertyPath) {\n    propertyPath = propertyPath.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n    propertyPath = propertyPath.replace(/^\\./, \"\"); // strip a leading dot\n    return propertyPath.split(\".\");\n}\nfunction isIsoDate(value) {\n    // tslint:disable-next-line:max-line-length\n    const ISO_REGEX = /^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$/;\n    return ISO_REGEX.test(value);\n}\n//# sourceMappingURL=index.js.map", "{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\";;AAAA,6BAA6B;AAE7B,+BAA+B;AAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AAG9B,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAMtC,SAAS,SAAS,CAAC,KAAU;IAC5B,OAAO,KAAK,IAAK,KAAwB,CAAC,QAAQ,KAAK,SAAS,CAAC;AAClE,CAAC;AAED,SAAgB,QAAQ,CAAC,aAAkB;IAC1C,KAAK,MAAM,cAAc,IAAI,aAAa,EAAE;QAC3C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAClD,SAAS;SACT;QAED,MAAM,KAAK,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACrB,KAAK,CAAC,QAAQ,EAAE,CAAC;SACjB;KACD;AACF,CAAC;AAXD,4BAWC;AAED,SAAgB,iBAAiB,CAAC,aAAkB,EAAE,YAA+B,EAAE,SAAS,GAAG,UAAU;IAC5G,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;QAClC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;eACpC,OAAO,YAAY,CAAC,MAAM,CAAC,KAAK,QAAQ;eACxC,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;eAC7B,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE;YACtC,SAAS;SACT;QAED,MAAM,SAAS,GAAG,MAAM;aACtB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;aACxB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAErB,KAAK,CAAC,gCAAgC,MAAM,SAAS,SAAS,GAAG,CAAC,CAAC;QAEnE,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;KAChE;AACF,CAAC;AAjBD,8CAiBC;AAED,SAAgB,eAAe,CAAC,aAAkB,EAAE,UAAkB;IACrE,KAAK,CAAC,uBAAuB,UAAU,EAAE,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;IACnC,KAAK,CAAC,MAAM,CAAC,CAAC;IAEd,KAAK,MAAM,cAAc,IAAI,aAAa,EAAE;QAC3C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAClD,SAAS;SACT;QAED,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;KAC3E;AACF,CAAC;AAZD,0CAYC;AAED,SAAgB,gBAAgB,CAAC,aAAkB,EAAE,IAAc;IAClE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QAC1B,OAAO;KACP;IAED,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAErB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACrB,OAAO;KACP;IAED,KAAK,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAAC;IAEhD,MAAM,WAAW,GAAG,QAAQ,CAAC;IAE7B,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;QAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QACxE,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;KAC3C;IAED,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC7B,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACpC,SAAS;SACT;QAED,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACxB,SAAS;SACT;QACD,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtB,SAAS;SACT;QACD,IAAI,GAAG,KAAK,WAAW,EAAE;YACxB,SAAS;SACT;QAED,MAAM,SAAS,GAAG,GAAG;aACnB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAErB,KAAK,CAAC,qCAAqC,GAAG,SAAS,SAAS,GAAG,CAAC,CAAC;QAErE,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;KAC3D;AACF,CAAC;AA5CD,4CA4CC;AAGD,SAAgB,eAAe,CAAC,GAAyB,EAAE,YAAoB,EAAE,KAAU;IAC1F,IAAI,CAAC,GAAG,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KAClC;IACD,IAAI,CAAC,YAAY,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KACzC;IAED,MAAM,SAAS,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;IAC1C,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1C,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAE9B,IAAI,CAAC,CAAC,QAAQ,IAAI,GAAG,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC3B;QACD,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KAC7B;IAED,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACjD,OAAO;AACR,CAAC;AAtBD,0CAsBC;AAED,SAAS,OAAO,CAAC,GAAyB,EAAE,QAAgB,EAAE,KAAU;IACvE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAClC,MAAM,IAAI,KAAK,CAAC,aAAa,QAAQ,gBAAgB,CAAC,CAAC;KACvD;IACD,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC;AAED,SAAS,OAAO,CAAC,GAAyB,EAAE,QAAgB;IAC3D,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAClC,MAAM,IAAI,KAAK,CAAC,aAAa,QAAQ,gBAAgB,CAAC,CAAC;KACvD;IACD,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,CAAC;AAED,SAAgB,eAAe,CAAC,GAAQ,EAAE,YAAoB;IAC7D,IAAI,GAAG,GAAQ,GAAG,CAAC;IAEnB,MAAM,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QAC3B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,EAAE;YACb,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACb;aAAM;YACN,OAAO;SACP;KACD;IAED,OAAO,GAAG,CAAC;AACZ,CAAC;AAhBD,0CAgBC;AAED,SAAgB,eAAe,CAAC,IAAS,EAAE,IAAS,EAAE,WAAoB,KAAK;IAC9E,IAAI,OAAM,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;QAChC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KAClD;IAED,eAAe;IACf,IAAI,OAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;QACrE,MAAM,UAAU,GAAG,IAAI,KAAK,IAAI,CAAC;QACjC,IAAI,UAAU,EAAE;YACf,OAAO,UAAU,CAAC;SAClB;QAED,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,OAAO,KAAK,CAAC;KACb;IAED,sCAAsC;IACtC,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;QACrB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YAC5B,SAAS;SACT;QAED,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACb;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACvC,OAAO,KAAK,CAAC;SACb;KACD;IAED,IAAI,CAAC,QAAQ,EAAE;QACd,0CAA0C;QAC1C,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBAC5B,SAAS;aACT;YAED,wCAAwC;YACxC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBAC5B,OAAO,KAAK,CAAC;aACb;SACD;KACD;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAlDD,0CAkDC;AAED,SAAS,SAAS,CAAC,YAAoB;IACtC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,gCAAgC;IAC1F,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAW,sBAAsB;IAChF,OAAO,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,SAAS,CAAC,KAAa;IAC/B,2CAA2C;IAC3C,MAAM,SAAS,GAAG,0QAA0Q,CAAC;IAC7R,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC\"}", "import * as path from \"path\";\n\nimport * as Debug from \"debug\";\nconst debug = Debug(\"envcfg\");\n\n\nconst yargs = require(\"yargs-parser\");\n\nexport interface IConfigSection {\n\tvalidate(): void;\n}\n\nfunction isSection(value: any): value is IConfigSection {\n\treturn value && (value as IConfigSection).validate !== undefined;\n}\n\nexport function validate(configuration: any) {\n\tfor (const configProperty in configuration) {\n\t\tif (!configuration.hasOwnProperty(configProperty)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = configuration[configProperty];\n\t\tif (isSection(value)) {\n\t\t\tvalue.validate();\n\t\t}\n\t}\n}\n\nexport function applyEnvVariables(configuration: any, envVariables: NodeJS.ProcessEnv, envPrefix = \"NODE_ENV\") {\n\tfor (const envKey in envVariables) {\n\t\tif (!envVariables.hasOwnProperty(envKey)\n\t\t\t|| typeof envVariables[envKey] !== \"string\"\n\t\t\t|| !envKey.startsWith(envPrefix)\n\t\t\t|| envKey.length <= envPrefix.length) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst configKey = envKey\n\t\t\t.substr(envPrefix.length)\n\t\t\t.replace(/_/g, \".\");\n\n\t\tdebug(`Found config value from env '${envKey}' to '${configKey}'`);\n\n\t\tsetDeepProperty(configuration, configKey, envVariables[envKey]);\n\t}\n}\n\nexport function applyConfigFile(configuration: any, configFile: string) {\n\tdebug(`Loading config form ${configFile}`);\n\tconst config = require(configFile);\n\tdebug(config);\n\n\tfor (const configProperty in configuration) {\n\t\tif (!configuration.hasOwnProperty(configProperty)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tObject.assign(configuration[configProperty], config[configProperty] || {});\n\t}\n}\n\nexport function applyCommandArgs(configuration: any, argv: string[]) {\n\tif (!argv || !argv.length) {\n\t\treturn;\n\t}\n\n\targv = argv.slice(2);\n\n\tconst parsedArgv = yargs(argv);\n\tconst argvKeys = Object.keys(parsedArgv);\n\tif (!argvKeys.length) {\n\t\treturn;\n\t}\n\n\tdebug(\"Appling command arguments:\", parsedArgv);\n\n\tconst CONFIG_PROP = 'config';\n\n\tif (parsedArgv[CONFIG_PROP]) {\n\t\tconst configFile = path.resolve(process.cwd(), parsedArgv[CONFIG_PROP]);\n\t\tapplyConfigFile(configuration, configFile);\n\t}\n\n\tfor (const key in parsedArgv) {\n\t\tif (!parsedArgv.hasOwnProperty(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key.startsWith('_')) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (key.endsWith('_')) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (key === CONFIG_PROP) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst configKey = key\n\t\t\t.replace(/_/g, \".\");\n\n\t\tdebug(`Found config value from cmd args '${key}' to '${configKey}'`);\n\n\t\tsetDeepProperty(configuration, configKey, parsedArgv[key]);\n\t}\n}\n\n\nexport function setDeepProperty(obj: {[key: string]: any}, propertyPath: string, value: any): void {\n\tif (!obj) {\n\t\tthrow new Error(\"Invalid object\");\n\t}\n\tif (!propertyPath) {\n\t\tthrow new Error(\"Invalid property path\");\n\t}\n\n\tconst pathParts = splitPath(propertyPath);\n\tconst pathPartsLen = pathParts.length;\n\n\tfor (let i = 0; i < pathPartsLen - 1; i++) {\n\t\tconst pathPart = pathParts[i];\n\n\t\tif (!(pathPart in obj)) {\n\t\t\tsetProp(obj, pathPart, {});\n\t\t}\n\t\tobj = getProp(obj, pathPart);\n\t}\n\n\tsetProp(obj, pathParts[pathPartsLen - 1], value);\n\treturn;\n}\n\nfunction setProp(obj: {[key: string]: any}, property: string, value: any): void {\n\tif (!obj.hasOwnProperty(property)) {\n\t\tthrow new Error(`Property '${property}' is not valid`);\n\t}\n\tobj[property] = value;\n}\n\nfunction getProp(obj: {[key: string]: any}, property: string): any {\n\tif (!obj.hasOwnProperty(property)) {\n\t\tthrow new Error(`Property '${property}' is not valid`);\n\t}\n\treturn obj[property];\n}\n\nexport function getDeepProperty(obj: any, propertyPath: string): any {\n\tlet ret: any = obj;\n\n\tconst a = splitPath(propertyPath);\n\tconst n = a.length;\n\n\tfor (let i = 0; i < n; ++i) {\n\t\tconst k = a[i];\n\t\tif (k in ret) {\n\t\t\tret = ret[k];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn ret;\n}\n\nexport function objectsAreEqual(obj1: any, obj2: any, leftOnly: boolean = false) {\n\tif (typeof(obj1) === \"function\") {\n\t\tthrow new Error(\"Function compare not supported\");\n\t}\n\n\t// is primitive\n\tif (typeof(obj1) !== \"object\" || obj1 === null || obj1 === undefined) {\n\t\tconst exactEqual = obj1 === obj2;\n\t\tif (exactEqual) {\n\t\t\treturn exactEqual;\n\t\t}\n\n\t\tif (isIsoDate(obj1) || isIsoDate(obj2)) {\n\t\t\treturn Date.parse(obj1) === Date.parse(obj2);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Loop through properties in object 1\n\tfor (const p in obj1) {\n\t\tif (!obj1.hasOwnProperty(p)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check property exists on both objects\n\t\tif (!obj2.hasOwnProperty(p)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!objectsAreEqual(obj1[p], obj2[p])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!leftOnly) {\n\t\t// Check object 2 for any extra properties\n\t\tfor (const p in obj2) {\n\t\t\tif (!obj2.hasOwnProperty(p)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check property exists on both objects\n\t\t\tif (!obj1.hasOwnProperty(p)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction splitPath(propertyPath: string): string[] {\n\tpropertyPath = propertyPath.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n\tpropertyPath = propertyPath.replace(/^\\./, \"\");           // strip a leading dot\n\treturn propertyPath.split(\".\");\n}\n\nfunction isIsoDate(value: string): boolean {\n\t// tslint:disable-next-line:max-line-length\n\tconst ISO_REGEX = /^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$/;\n\treturn ISO_REGEX.test(value);\n}\n", "\"use strict\";\n// See README.md for details\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst confinit = require(\"../index\");\nconst path = require(\"path\");\nclass Section1Config {\n    constructor() {\n        this.url = \"\";\n    }\n    validate() {\n        if (!this.url) {\n            throw new Error(\"Section 1 url not set.\");\n        }\n    }\n}\nexports.Section1Config = Section1Config;\nclass WebServerConfig {\n    constructor() {\n        this.port = 3000;\n        const envPort = process.env.PORT;\n        if (envPort) {\n            this.port = parseInt(envPort, 10);\n        }\n    }\n    validate() {\n        if (!this.port) {\n            throw new Error(\"Invalid port\");\n        }\n        this.port = parseInt(this.port.toString(), 10);\n    }\n}\nexports.WebServerConfig = WebServerConfig;\nclass Configuration {\n    constructor(env) {\n        this.section1 = new Section1Config();\n        this.webServer = new WebServerConfig();\n        if (!env) {\n            env = process.env;\n        }\n        // Enable config file\n        if (env.config) {\n            const configFile = path.resolve(process.cwd(), env.config);\n            confinit.applyConfigFile(this, configFile);\n        }\n        // Enable environment variables\n        confinit.applyEnvVariables(this, process.env, \"cfg_\");\n        // Enable command arguments\n        confinit.applyCommandArgs(this, process.argv);\n        confinit.validate(this);\n    }\n}\nexports.Configuration = Configuration;\nconsole.log(\"Sample configuration\");\nconst config = new Configuration();\nconsole.log(\"---------------\");\nconsole.log(\"section1:\");\nconsole.log(\"---------------\");\nconsole.log(config.section1);\nconsole.log(\"---------------\");\nconsole.log(\"webServer:\");\nconsole.log(\"---------------\");\nconsole.log(config.webServer);\n//# sourceMappingURL=index.js.map", "{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\";AAAA,4BAA4B;;AAE5B,qCAAqC;AACrC,6BAA6B;AAE7B,MAAa,cAAc;IAA3B;QACC,QAAG,GAAW,EAAE,CAAC;IAOlB,CAAC;IALA,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC1C;IACF,CAAC;CACD;AARD,wCAQC;AAED,MAAa,eAAe;IAG3B;QAFA,SAAI,GAAG,IAAI,CAAC;QAGX,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjC,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAClC;IACF,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;CACD;AAhBD,0CAgBC;AAED,MAAa,aAAa;IAIzB,YAAY,GAAuB;QAH1B,aAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;QAChC,cAAS,GAAG,IAAI,eAAe,EAAE,CAAC;QAG1C,IAAI,CAAC,GAAG,EAAE;YACT,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;SAClB;QAED,qBAAqB;QACrB,IAAI,GAAG,CAAC,MAAM,EAAE;YACf,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3D,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC3C;QACD,+BAA+B;QAC/B,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtD,2BAA2B;QAC3B,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAE9C,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;CACD;AArBD,sCAqBC;AAED,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,MAAM,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;AAEnC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC7B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC\"}", "// See README.md for details\n\nimport * as confinit from \"../index\";\nimport * as path from \"path\";\n\nexport class Section1Config implements confinit.IConfigSection {\n\turl: string = \"\";\n\n\tvalidate(): void {\n\t\tif (!this.url) {\n\t\t\tthrow new Error(\"Section 1 url not set.\");\n\t\t}\n\t}\n}\n\nexport class WebServerConfig implements confinit.IConfigSection {\n\tport = 3000;\n\n\tconstructor() {\n\t\tconst envPort = process.env.PORT;\n\t\tif (envPort) {\n\t\t\tthis.port = parseInt(envPort, 10);\n\t\t}\n\t}\n\n\tvalidate(): void {\n\t\tif (!this.port) {\n\t\t\tthrow new Error(\"Invalid port\");\n\t\t}\n\t\tthis.port = parseInt(this.port.toString(), 10);\n\t}\n}\n\nexport class Configuration {\n\treadonly section1 = new Section1Config();\n\treadonly webServer = new WebServerConfig();\n\n\tconstructor(env?: NodeJS.ProcessEnv) {\n\t\tif (!env) {\n\t\t\tenv = process.env;\n\t\t}\n\n\t\t// Enable config file\n\t\tif (env.config) {\n\t\t\tconst configFile = path.resolve(process.cwd(), env.config);\n\t\t\tconfinit.applyConfigFile(this, configFile);\n\t\t}\n\t\t// Enable environment variables\n\t\tconfinit.applyEnvVariables(this, process.env, \"cfg_\");\n\t\t// Enable command arguments\n\t\tconfinit.applyCommandArgs(this, process.argv);\n\n\t\tconfinit.validate(this);\n\t}\n}\n\nconsole.log(\"Sample configuration\");\nconst config = new Configuration();\n\nconsole.log(\"---------------\");\nconsole.log(\"section1:\");\nconsole.log(\"---------------\");\nconsole.log(config.section1);\nconsole.log(\"---------------\");\nconsole.log(\"webServer:\");\nconsole.log(\"---------------\");\nconsole.log(config.webServer);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = require(\"assert\");\nconst index_1 = require(\"../index\");\ndescribe('setDeepProperty', () => {\n    it('should set a property with deep 1', () => {\n        const obj = {\n            test: \"A\"\n        };\n        index_1.setDeepProperty(obj, \"test\", \"B\");\n        assert.equal(obj.test, \"B\");\n    });\n    it('should set a property with deep 2', () => {\n        const obj = {\n            parent: {\n                test: \"A\"\n            }\n        };\n        index_1.setDeepProperty(obj, \"parent.test\", \"B\");\n        assert.equal(obj.parent.test, \"B\");\n    });\n    it('should not allow to set a not existing property', () => {\n        const obj = {\n            test: \"A\"\n        };\n        assert.throws(() => index_1.setDeepProperty(obj, \"not_existing\", \"B\"));\n    });\n    it('should not allow to set a property on null/undefined obj', () => {\n        assert.throws(() => index_1.setDeepProperty(null, \"not_existing\", \"B\"));\n        assert.throws(() => index_1.setDeepProperty(undefined, \"not_existing\", \"B\"));\n    });\n    it('should not allow to set a null/undefined property', () => {\n        const obj = {\n            test: \"A\"\n        };\n        assert.throws(() => index_1.setDeepProperty(obj, null, \"B\"));\n        assert.throws(() => index_1.setDeepProperty(obj, undefined, \"B\"));\n        assert.throws(() => index_1.setDeepProperty(obj, \"\", \"B\"));\n    });\n    it('should not allow to set __proto__ property', () => {\n        const obj = {\n            test: \"A\"\n        };\n        assert.throws(() => index_1.setDeepProperty(obj, \"__proto__.xyz\", \"B\"));\n    });\n});\n//# sourceMappingURL=setDeepProperty.test.js.map", "{\"version\":3,\"file\":\"setDeepProperty.test.js\",\"sourceRoot\":\"\",\"sources\":[\"setDeepProperty.test.ts\"],\"names\":[],\"mappings\":\";;AAAA,iCAAiC;AACjC,oCAA2C;AAE3C,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAE/B,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,GAAG;SACV,CAAA;QACD,uBAAe,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,GAAG,GAAG;YACV,MAAM,EAAE;gBACN,IAAI,EAAE,GAAG;aACV;SACF,CAAA;QACD,uBAAe,CAAC,GAAG,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,GAAG;SACV,CAAA;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,GAAG,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;QAClE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,IAAW,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,SAAgB,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,GAAG;SACV,CAAA;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,GAAG,EAAE,IAAW,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,GAAG,EAAE,SAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,GAAG,GAAG;YACV,IAAI,EAAE,GAAG;SACV,CAAA;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAe,CAAC,GAAG,EAAE,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC\"}", "import * as assert from 'assert';\nimport { setDeepProperty } from '../index';\n\ndescribe('setDeepProperty', () => {\n\n  it('should set a property with deep 1', () => {\n    const obj = {\n      test: \"A\"\n    }\n    setDeepProperty(obj, \"test\", \"B\");\n    assert.equal(obj.test, \"B\");\n  });\n\n  it('should set a property with deep 2', () => {\n    const obj = {\n      parent: {\n        test: \"A\"\n      }\n    }\n    setDeepProperty(obj, \"parent.test\", \"B\");\n    assert.equal(obj.parent.test, \"B\");\n  });\n\n  it('should not allow to set a not existing property', () => {\n    const obj = {\n      test: \"A\"\n    }\n    assert.throws(() => setDeepProperty(obj, \"not_existing\", \"B\"));\n  });\n\n  it('should not allow to set a property on null/undefined obj', () => {\n    assert.throws(() => setDeepProperty(null as any, \"not_existing\", \"B\"));\n    assert.throws(() => setDeepProperty(undefined as any, \"not_existing\", \"B\"));\n  });\n\n  it('should not allow to set a null/undefined property', () => {\n    const obj = {\n      test: \"A\"\n    }\n    assert.throws(() => setDeepProperty(obj, null as any, \"B\"));\n    assert.throws(() => setDeepProperty(obj, undefined as any, \"B\"));\n    assert.throws(() => setDeepProperty(obj, \"\", \"B\"));\n  });\n\n  it('should not allow to set __proto__ property', () => {\n    const obj = {\n      test: \"A\"\n    }\n    assert.throws(() => setDeepProperty(obj, \"__proto__.xyz\", \"B\"));\n  });\n\n});"], "filenames": ["index.d.ts", "index.js", "index.js.map", "index.ts", "sample/index.js", "sample/index.js.map", "sample/index.ts", "test/setDeepProperty.test.js", "test/setDeepProperty.test.js.map", "test/setDeepProperty.test.ts"], "buggy_code_start_loc": [9, 61, 1, 78, 1, 1, 0, 4, 1, 2], "buggy_code_end_loc": [10, 89, 2, 113, 43, 2, 44, 20, 2, 23], "fixing_code_start_loc": [9, 61, 1, 78, 2, 1, 1, 4, 1, 2], "fixing_code_end_loc": [12, 118, 2, 146, 48, 2, 51, 45, 2, 52], "type": "CWE-1321", "message": "confinit through 0.3.0 is vulnerable to Prototype Pollution.The 'setDeepProperty' function could be tricked into adding or modifying properties of 'Object.prototype' using a '__proto__' payload.", "other": {"cve": {"id": "CVE-2020-7638", "sourceIdentifier": "report@snyk.io", "published": "2020-04-06T13:15:12.630", "lastModified": "2022-12-02T19:58:03.463", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "confinit through 0.3.0 is vulnerable to Prototype Pollution.The 'setDeepProperty' function could be tricked into adding or modifying properties of 'Object.prototype' using a '__proto__' payload."}, {"lang": "es", "value": "confinit versiones hasta 0.3.0, es vulnerable a una Contaminaci\u00f3n de Prototipos. La funci\u00f3n \"setDeepProperty\" podr\u00eda ser enga\u00f1ada para agregar o modificar propiedades de \"Object.prototype\" usando una carga \u00fatil \"__proto__\"."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:confinit_project:confinit:*:*:*:*:*:node.js:*:*", "versionEndIncluding": "0.3.0", "matchCriteriaId": "C9C70611-BB2D-440F-95BB-D625F81DF2FD"}]}]}], "references": [{"url": "https://github.com/davideicardi/confinit/commit/a34e06ca5c1c8b047ef112ef188b2fe30d2a1eab", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-CONFINIT-564433", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/davideicardi/confinit/commit/a34e06ca5c1c8b047ef112ef188b2fe30d2a1eab"}}