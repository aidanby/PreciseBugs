{"buggy_code": ["<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_USERS';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Users'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nsimple_page_mode(true);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction can_process($new) {\n\n\tif (strlen($_POST['user_id']) < 4) {\n\t\tdisplay_error( _('The user login entered must be at least 4 characters long.'));\n\t\tset_focus('user_id');\n\t\treturn false;\n\t}\n\tif (!$new && ($_POST['password'] != '')) {\n\t\tif (strlen($_POST['password']) < 4) {\n\t\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t\tif (strstr($_POST['password'], $_POST['user_id']) != false) {\n\t\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_csrf_token()) {\n\n\tif (can_process($Mode == 'ADD_ITEM')) {\n\t\tif ($selected_id != -1) {\n\t\t\tupdate_user_prefs($selected_id, get_post(array('user_id', 'real_name', 'phone', 'email', 'role_id', 'language', 'print_profile', 'rep_popup' => 0, 'pos')));\n\n\t\t\tif ($_POST['password'] != '')\n\t\t\t\tupdate_user_password($selected_id, $_POST['user_id'], password_hash($_POST['password'], PASSWORD_DEFAULT));\n\n\t\t\tdisplay_notification_centered(_('The selected user has been updated.'));\n\t\t} \n\t\telse {\n\t\t\tadd_user($_POST['user_id'], $_POST['real_name'], password_hash($_POST['password'], PASSWORD_DEFAULT), $_POST['phone'], $_POST['email'], $_POST['role_id'], $_POST['language'], $_POST['print_profile'], check_value('rep_popup'), $_POST['pos']);\n\t\t\t$id = db_insert_id();\n\t\t\t// use current user display preferences as start point for new user\n\t\t\t$prefs = $_SESSION['wa_current_user']->prefs->get_all();\n\t\t\t\n\t\t\tupdate_user_prefs($id, array_merge($prefs, get_post(array('print_profile', 'rep_popup' => 0, 'language'))));\n\n\t\t\tdisplay_notification_centered(_('A new user has been added.'));\n\t\t}\n\t\t$Mode = 'RESET';\n\t}\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'Delete' && check_csrf_token()) {\n\t$cancel_delete = 0;\n\tif (key_in_foreign_table($selected_id, 'audit_trail', 'user')) {\n\t\t$cancel_delete = 1;\n\t\tdisplay_error(_('Cannot delete this user because entries are associated with this user.'));\n\t}\n\tif ($cancel_delete == 0) {\n\t\tdelete_user($selected_id);\n\t\tdisplay_notification_centered(_('User has been deleted.'));\n\t} //end if Delete group\n\t$Mode = 'RESET';\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\t$sav = get_post('show_inactive', null);\n\tunset($_POST);\t// clean all input fields\n\t$_POST['show_inactive'] = $sav;\n}\n\n$result = get_users(check_value('show_inactive'));\nstart_form();\nstart_table(TABLESTYLE);\n\n$th = array(_('User login'), _('Full Name'), _('Phone'), _('E-mail'), _('Last Visit'), _('Access Level'), '', '');\n\ninactive_control_column($th);\ntable_header($th);\t\n\n$k = 0; //row colour counter\n\nwhile ($myrow = db_fetch($result)) {\n\n\talt_table_row_color($k);\n\n\t$time_format = (user_date_format() == 0 ? 'h:i a' : 'H:i');\n\t\n\tif(empty($myrow['last_visit_date']))\n\t\t$last_visit_date = '';\n\telse\n\t\t$last_visit_date = sql2date($myrow['last_visit_date']).' '.date($time_format, strtotime($myrow['last_visit_date']));\n\n\t/*The security_headings array is defined in config.php */\n\t$not_me = strcasecmp($myrow['user_id'], $_SESSION['wa_current_user']->username);\n\n\tlabel_cell($myrow['user_id']);\n\tlabel_cell($myrow['real_name']);\n\tlabel_cell($myrow['phone']);\n\temail_cell($myrow['email']);\n\tlabel_cell($last_visit_date, 'nowrap');\n\tlabel_cell($myrow['role']);\n\t\n\tif ($not_me)\n\t\tinactive_control_cell($myrow['id'], $myrow['inactive'], 'users', 'id');\n\telseif (check_value('show_inactive'))\n\t\tlabel_cell('');\n\n\tedit_button_cell('Edit'.$myrow['id'], _('Edit'));\n\tif ($not_me)\n\t\tdelete_button_cell('Delete'.$myrow['id'], _('Delete'));\n\telse\n\t\tlabel_cell('');\n\tend_row();\n}\n\ninactive_control_row($th);\nend_table(1);\n\n//-------------------------------------------------------------------------------------------------\n\nstart_table(TABLESTYLE2);\n\n$_POST['email'] = '';\nif ($selected_id != -1) {\n\tif ($Mode == 'Edit') {\n\t\t//editing an existing User\n\t\t$myrow = get_user($selected_id);\n\n\t\t$_POST['id'] = $myrow['id'];\n\t\t$_POST['user_id'] = $myrow['user_id'];\n\t\t$_POST['real_name'] = $myrow['real_name'];\n\t\t$_POST['phone'] = $myrow['phone'];\n\t\t$_POST['email'] = $myrow['email'];\n\t\t$_POST['role_id'] = $myrow['role_id'];\n\t\t$_POST['language'] = $myrow['language'];\n\t\t$_POST['print_profile'] = $myrow['print_profile'];\n\t\t$_POST['rep_popup'] = $myrow['rep_popup'];\n\t\t$_POST['pos'] = $myrow['pos'];\n\t}\n\thidden('selected_id', $selected_id);\n\thidden('user_id');\n\n\tstart_row();\n\tlabel_row(_('User login:'), $_POST['user_id']);\n} \nelse { //end of if $selected_id only do the else when a new record is being entered\n\ttext_row(_('User Login:'), 'user_id',  null, 22, 20);\n\t$_POST['language'] = user_language();\n\t$_POST['print_profile'] = user_print_profile();\n\t$_POST['rep_popup'] = user_rep_popup();\n\t$_POST['pos'] = user_pos();\n}\n$_POST['password'] = '';\npassword_row(_('Password:'), 'password', $_POST['password']);\n\nif ($selected_id != -1)\n\ttable_section_title(_('Enter a new password to change, leave empty to keep current.'));\n\ntext_row_ex(_('Full Name').':', 'real_name',  50);\ntext_row_ex(_('Telephone No.:'), 'phone', 30);\nemail_row_ex(_('Email Address:'), 'email', 50);\nsecurity_roles_list_row(_('Access Level:'), 'role_id', null); \nlanguages_list_row(_('Language:'), 'language', null);\npos_list_row(_(\"User's POS\"). ':', 'pos', null);\nprint_profiles_list_row(_('Printing profile').':', 'print_profile', null, _('Browser printing support'));\ncheck_row(_('Use popup window for reports:'), 'rep_popup', $_POST['rep_popup'], false, _('Set this option to on if your browser directly supports pdf files'));\n\nend_table(1);\n\nsubmit_add_or_update_center($selected_id == -1, '', 'both');\n\nend_form();\nend_page();\n"], "fixing_code": ["<?php\n/**********************************************************************\n\tCopyright (C) FrontAccounting, LLC.\n\tReleased under the terms of the GNU General Public License, GPL, \n\tas published by the Free Software Foundation, either version 3 \n\tof the License, or (at your option) any later version.\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\tSee the License here <http://www.gnu.org/licenses/gpl-3.0.html>.\n***********************************************************************/\n$page_security = 'SA_USERS';\n$path_to_root = '..';\ninclude_once($path_to_root.'/includes/session.inc');\n\npage(_($help_context = 'Users'));\n\ninclude_once($path_to_root.'/includes/date_functions.inc');\ninclude_once($path_to_root.'/includes/ui.inc');\n\ninclude_once($path_to_root.'/admin/db/users_db.inc');\n\nsimple_page_mode(true);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction can_process($new) {\n\n\tif (strlen($_POST['user_id']) < 4) {\n\t\tdisplay_error( _('The user login entered must be at least 4 characters long.'));\n\t\tset_focus('user_id');\n\t\treturn false;\n\t}\n\tif ($new || (!$new && ($_POST['password'] != ''))) {\n\t\tif (strlen($_POST['password']) < 4) {\n\t\t\tdisplay_error( _('The password entered must be at least 4 characters long.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t\tif (strstr($_POST['password'], $_POST['user_id']) != false) {\n\t\t\tdisplay_error( _('The password cannot contain the user login.'));\n\t\t\tset_focus('password');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif (($Mode=='ADD_ITEM' || $Mode=='UPDATE_ITEM') && check_csrf_token()) {\n\n\tif (can_process($Mode == 'ADD_ITEM')) {\n\t\tif ($selected_id != -1) {\n\t\t\tupdate_user_prefs($selected_id, get_post(array('user_id', 'real_name', 'phone', 'email', 'role_id', 'language', 'print_profile', 'rep_popup' => 0, 'pos')));\n\n\t\t\tif ($_POST['password'] != '')\n\t\t\t\tupdate_user_password($selected_id, $_POST['user_id'], password_hash($_POST['password'], PASSWORD_DEFAULT));\n\n\t\t\tdisplay_notification_centered(_('The selected user has been updated.'));\n\t\t} \n\t\telse {\n\t\t\tadd_user($_POST['user_id'], $_POST['real_name'], password_hash($_POST['password'], PASSWORD_DEFAULT), $_POST['phone'], $_POST['email'], $_POST['role_id'], $_POST['language'], $_POST['print_profile'], check_value('rep_popup'), $_POST['pos']);\n\t\t\t$id = db_insert_id();\n\t\t\t// use current user display preferences as start point for new user\n\t\t\t$prefs = $_SESSION['wa_current_user']->prefs->get_all();\n\t\t\t\n\t\t\tupdate_user_prefs($id, array_merge($prefs, get_post(array('print_profile', 'rep_popup' => 0, 'language'))));\n\n\t\t\tdisplay_notification_centered(_('A new user has been added.'));\n\t\t}\n\t\t$Mode = 'RESET';\n\t}\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'Delete' && check_csrf_token()) {\n\t$cancel_delete = 0;\n\tif (key_in_foreign_table($selected_id, 'audit_trail', 'user')) {\n\t\t$cancel_delete = 1;\n\t\tdisplay_error(_('Cannot delete this user because entries are associated with this user.'));\n\t}\n\tif ($cancel_delete == 0) {\n\t\tdelete_user($selected_id);\n\t\tdisplay_notification_centered(_('User has been deleted.'));\n\t} //end if Delete group\n\t$Mode = 'RESET';\n}\n\n//-------------------------------------------------------------------------------------------------\n\nif ($Mode == 'RESET') {\n\t$selected_id = -1;\n\t$sav = get_post('show_inactive', null);\n\tunset($_POST);\t// clean all input fields\n\t$_POST['show_inactive'] = $sav;\n}\n\n$result = get_users(check_value('show_inactive'));\nstart_form();\nstart_table(TABLESTYLE);\n\n$th = array(_('User login'), _('Full Name'), _('Phone'), _('E-mail'), _('Last Visit'), _('Access Level'), '', '');\n\ninactive_control_column($th);\ntable_header($th);\t\n\n$k = 0; //row colour counter\n\nwhile ($myrow = db_fetch($result)) {\n\n\talt_table_row_color($k);\n\n\t$time_format = (user_date_format() == 0 ? 'h:i a' : 'H:i');\n\t\n\tif(empty($myrow['last_visit_date']))\n\t\t$last_visit_date = '';\n\telse\n\t\t$last_visit_date = sql2date($myrow['last_visit_date']).' '.date($time_format, strtotime($myrow['last_visit_date']));\n\n\t/*The security_headings array is defined in config.php */\n\t$not_me = strcasecmp($myrow['user_id'], $_SESSION['wa_current_user']->username);\n\n\tlabel_cell($myrow['user_id']);\n\tlabel_cell($myrow['real_name']);\n\tlabel_cell($myrow['phone']);\n\temail_cell($myrow['email']);\n\tlabel_cell($last_visit_date, 'nowrap');\n\tlabel_cell($myrow['role']);\n\t\n\tif ($not_me)\n\t\tinactive_control_cell($myrow['id'], $myrow['inactive'], 'users', 'id');\n\telseif (check_value('show_inactive'))\n\t\tlabel_cell('');\n\n\tedit_button_cell('Edit'.$myrow['id'], _('Edit'));\n\tif ($not_me)\n\t\tdelete_button_cell('Delete'.$myrow['id'], _('Delete'));\n\telse\n\t\tlabel_cell('');\n\tend_row();\n}\n\ninactive_control_row($th);\nend_table(1);\n\n//-------------------------------------------------------------------------------------------------\n\nstart_table(TABLESTYLE2);\n\n$_POST['email'] = '';\nif ($selected_id != -1) {\n\tif ($Mode == 'Edit') {\n\t\t//editing an existing User\n\t\t$myrow = get_user($selected_id);\n\n\t\t$_POST['id'] = $myrow['id'];\n\t\t$_POST['user_id'] = $myrow['user_id'];\n\t\t$_POST['real_name'] = $myrow['real_name'];\n\t\t$_POST['phone'] = $myrow['phone'];\n\t\t$_POST['email'] = $myrow['email'];\n\t\t$_POST['role_id'] = $myrow['role_id'];\n\t\t$_POST['language'] = $myrow['language'];\n\t\t$_POST['print_profile'] = $myrow['print_profile'];\n\t\t$_POST['rep_popup'] = $myrow['rep_popup'];\n\t\t$_POST['pos'] = $myrow['pos'];\n\t}\n\thidden('selected_id', $selected_id);\n\thidden('user_id');\n\n\tstart_row();\n\tlabel_row(_('User login:'), $_POST['user_id']);\n} \nelse { //end of if $selected_id only do the else when a new record is being entered\n\ttext_row(_('User Login:'), 'user_id',  null, 22, 20);\n\t$_POST['language'] = user_language();\n\t$_POST['print_profile'] = user_print_profile();\n\t$_POST['rep_popup'] = user_rep_popup();\n\t$_POST['pos'] = user_pos();\n}\n$_POST['password'] = '';\npassword_row(_('Password:'), 'password', $_POST['password']);\n\nif ($selected_id != -1)\n\ttable_section_title(_('Enter a new password to change, leave empty to keep current.'));\n\ntext_row_ex(_('Full Name').':', 'real_name',  50);\ntext_row_ex(_('Telephone No.:'), 'phone', 30);\nemail_row_ex(_('Email Address:'), 'email', 50);\nsecurity_roles_list_row(_('Access Level:'), 'role_id', null); \nlanguages_list_row(_('Language:'), 'language', null);\npos_list_row(_(\"User's POS\"). ':', 'pos', null);\nprint_profiles_list_row(_('Printing profile').':', 'print_profile', null, _('Browser printing support'));\ncheck_row(_('Use popup window for reports:'), 'rep_popup', $_POST['rep_popup'], false, _('Set this option to on if your browser directly supports pdf files'));\n\nend_table(1);\n\nsubmit_add_or_update_center($selected_id == -1, '', 'both');\n\nend_form();\nend_page();\n"], "filenames": ["admin/users.php"], "buggy_code_start_loc": [34], "buggy_code_end_loc": [35], "fixing_code_start_loc": [34], "fixing_code_end_loc": [35], "type": "CWE-521", "message": "Weak Password Requirements in GitHub repository notrinos/notrinoserp prior to 0.7.", "other": {"cve": {"id": "CVE-2022-2927", "sourceIdentifier": "security@huntr.dev", "published": "2022-08-22T09:15:08.407", "lastModified": "2022-08-23T17:47:51.647", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Weak Password Requirements in GitHub repository notrinos/notrinoserp prior to 0.7."}, {"lang": "es", "value": "Unos Requisitos para Contrase\u00f1as D\u00e9biles en el repositorio de GitHub notrinos/notrinoserp versiones anteriores a 0.7."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-521"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:notrinos:notrinoserp:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.7", "matchCriteriaId": "1DA2C016-D055-4DB8-AE79-4E8247EAD917"}]}]}], "references": [{"url": "https://github.com/notrinos/notrinoserp/commit/e61e76b44c6a2b28a4a648a06ef34f65c376ec1e", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/7fa956dd-f541-4dcd-987d-ba15caa6a886", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/notrinos/notrinoserp/commit/e61e76b44c6a2b28a4a648a06ef34f65c376ec1e"}}