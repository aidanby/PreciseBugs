{"buggy_code": ["Change log\n==========\n\nThese are all the changes in Zope 4, starting with the alpha releases.\n\nThe change log for the previous version, Zope 2.13, is at\nhttps://zope.readthedocs.io/en/2.13/CHANGES.html\n\n\n4.8.10 (unreleased)\n-------------------\n\n- Tighten down the ZMI frame source logic to only allow site-local sources.\n  Problem reported by Miguel Segovia Gil.\n\n\n4.8.9 (2023-09-05)\n------------------\n\n- Update ``RestrictedPython`` to version 5.4 to fix a potential a security\n  issue. (CVE-2023-41039)\n\n- Update ``AccessControl`` to version 4.4 to fix a potential a security\n  issue. (CVE-2023-41050)\n\n\n4.8.8 (2023-06-20)\n------------------\n\n- Sanitize tainting fixing\n  `#1095 <https://github.com/zopefoundation/Zope/issues/1095>`_\n\n- Restore filename on code objects of objects returned from\n  ``App.Extensions.getObject()``. This got lost in 4.0a6.\n\n\n4.8.7 (2023-01-10)\n------------------\n\n- Only set response header Content-Type as text/html on exception views when\n  the response has content.\n  (`#1089 <https://github.com/zopefoundation/Zope/issues/1089>`_)\n\n- Update dependencies to the latest releases for each supported Python version.\n\n\n4.8.6 (2022-12-19)\n------------------\n\n- Explicitly serve ``App.Dialogs.MessageDialog`` and exception views as HTML\n  due to the changed default content type from `#1075\n  <https://github.com/zopefoundation/Zope/pull/1075>`_.\n\n\n4.8.5 (2022-12-17)\n------------------\n\n- Fix some broken ZMI pages due to the changed default content type\n  from PR https://github.com/zopefoundation/Zope/pull/1075\n  (`#1078 <https://github.com/zopefoundation/Zope/issues/1078>`_)\n\n- Update dependencies to the latest releases for each supported Python version.\n\n\n4.8.4 (2022-12-16)\n------------------\n\n- Set the published default ``Content-Type`` header to ``text/plain``\n  if none has been set explicitly to prevent a cross-site scripting attack.\n  Also remove the old behavior of constructing an HTML page for published\n  methods returning a two-item tuple.\n\n- Update dependencies to the latest releases for each supported Python version.\n\n- Make ``Products.PageTemplates`` compatible with Chameleon 3.10.\n\n\n4.8.3 (2022-10-31)\n------------------\n\n- Update dependencies to the latest releases for each supported Python version.\n\n- Fix cookie path parameter handling:\n  If the cookie path value contains ``%`` it is assumed to be\n  fully quoted and used as is;\n  if it contains only characters allowed (unquoted)\n  in an URL path (with the exception of ``;``),\n  it is used as is; otherwise, it is quoted using Python's\n  ``urllib.parse.quote``\n  (`#1052 <https://github.com/zopefoundation/Zope/issues/1052>`_).\n\n- Change functional testing utilities to support percent encoded and unicode\n  paths (`#1058 <https://github.com/zopefoundation/Zope/issues/1058>`_).\n\n- Decode basic authentication header as utf-8, not latin1 anymore\n  (`#1061 <https://github.com/zopefoundation/Zope/issues/1061>`_).\n\n- Make ``ZPublisher.utils.basic_auth_encode`` support non-ascii strings on\n  Python 2\n  (`#1062 <https://github.com/zopefoundation/Zope/issues/1062>`_).\n\n\n4.8.2 (2022-06-01)\n------------------\n\n- Update ``waitress`` to version 2.1.2.\n\n- Fix version pin specifications for Python 3.6 compatibility.\n  (`#1036 <https://github.com/zopefoundation/Zope/issues/1036>`_)\n\n- Fix version pin specifications for Python 3.5 compatibility.\n\n- Add more notices to the documentation urging users to migrate to Zope 5.\n\n- Quote all components of a redirect URL (not only the path component)\n  (`#1027 <https://github.com/zopefoundation/Zope/issues/1027>`_)\n\n- Drop the convenience script generation from the buildout configuration\n  in order to get rid of a lot of dependency version pins.\n  These were only needed for maintainers who can install them manually.\n  (`#1019 <https://github.com/zopefoundation/Zope/issues/1019>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Strip leading ``.`` in cookie domain names.\n  (`#1041 <https://github.com/zopefoundation/Zope/pull/1041>`_)\n\n\n4.8.1 (2022-04-05)\n------------------\n\n- The pip requirements files ``requirements-full.txt`` and ``constraints.txt``\n  are now maintained manually.\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Update ``waitress`` to version 2.1.1 to mitigate a vulnerability in that\n  package. As ``waitress`` no longer supports Python versions less than\n  3.7 it is not advised to run Zope 4 on Python 2.7, 3.5 or 3.6 any longer,\n  even though they are still supported by Zope 4 itself.\n\n- To run ``bin/buildout`` inside the Zope project now ``zc.buildout >= 2.13.7``\n  or ``zc.buildout >= 3.0.0b1`` is required.\n\n\n4.8 (2022-03-10)\n----------------\n\n- Improve source documentation for methods ``_read_data`` and\n  ``get_content_type`` of ``OFS.Image.File`` and\n  fix its ``PUT``\n  (`#1015 <https://github.com/zopefoundation/Zope/issues/1015>`_).\n\n- Enhance cookie support. For details, see\n  `#1010 <https://github.com/zopefoundation/Zope/issues/1010>`_\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.7 (2022-01-09)\n----------------\n\n- Audit and fix all hyperlinks in code and documentation\n\n  - Change zope.org references to zope.dev due to ongoing domain ownership\n    issues. zope.dev is owned by the Plone Foundation and thus safe from\n    interference. XML/ZCML namespace URLs remain unchanged.\n  - Remove all links that are completely dead, such as the old zope.org\n    Collectors issue trackers.\n  - Update all other miscellaneous links to make them work again or remove if\n    the information is gone.\n\n- Improve type guessing for the default WebDAV PUT factory\n  (`#997 <https://github.com/zopefoundation/Zope/issues/997>`_)\n\n- Enable WebDAV PUT factories to change a newly created object's ID\n  (`#997 <https://github.com/zopefoundation/Zope/issues/997>`_)\n\n- Fix potential race condition in ``App.version_txt.getZopeVersion``\n  (`#999 <https://github.com/zopefoundation/Zope/issues/999>`_)\n\n- Reinstate simple sessioning with ``Products.TemporaryFolder``\n  because the underlying issues with ``tempstorage`` have been fixed.\n  (`#985 <https://github.com/zopefoundation/Zope/issues/985>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.3 (2021-07-31)\n------------------\n\n- Update the ``AccessControl`` version pin to fix a remote code execution issue\n  (see `AccessControl security advisory GHSA-qcx9-j53g-ccgf\n  <https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-qcx9-j53g-ccgf>`_)\n\n- Prevent ``DeprecationWarnings`` from moved imports in ``AccessControl``\n\n- make sure \"Manager\" users can always modify proxy roles\n  (`see Products.PythonScripts#50\n  <https://github.com/zopefoundation/Products.PythonScripts/issues/50>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.2 (2021-06-27)\n------------------\n\n- Backport stricter traversal checks from Zope 5\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.1 (2021-06-08)\n------------------\n\n- Prevent unauthorized traversal through authorized Python modules in\n  TAL expressions\n\n- Facelift the Zope logo.\n  (`#973 <https://github.com/zopefoundation/Zope/issues/973>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6 (2021-05-21)\n----------------\n\n- Prevent traversal to names starting with ``_`` in TAL expressions\n  and fix path expressions for the ``chameleon.tales`` expression engine.\n\n- Provide friendlier ZMI error message for the Transaction Undo form\n  (`#964 <https://github.com/zopefoundation/Zope/issues/964>`_)\n\n- Updated/fixed the poll application tutorial in the Zope Developers Guide\n  (`#958 <https://github.com/zopefoundation/Zope/issues/958>`_)\n\n- Depend on ``zope.datetime`` for the functions ``iso8601_date``,\n  ``rfc850_date``, and ``rfc1123_date`` which used to be in ``App.Common``\n  keeping backwards-compatibility imports in place.\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5.5 (2021-03-02)\n------------------\n\n- Enforce Zope permissions during recursive XML-RPC data dumps\n  (`#954 <https://github.com/zopefoundation/Zope/issues/954>`_)\n\n- The ``compute_size`` method properly returns None if the content does not\n  have a ``get_size`` method but the parent has.\n  (`#948 <https://github.com/zopefoundation/Zope/issues/948>`_)\n\n- Fix control panel tab links on all control panel pages\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5.4 (2021-02-10)\n------------------\n\n- Replace (in ``OFS``) the deprecated direct ``id`` access by\n  ``getId`` calls.\n  (`#903 <https://github.com/zopefoundation/Zope/issues/903>`_)\n\n- Update ZMI dependencies for Font Awesome, jQuery and bootstrap.\n\n- Revise debug info GUI\n  (`#937 <https://github.com/zopefoundation/Zope/pull/937>`_)\n\n- Fix rendering of not found resources.\n  (`#933 <https://github.com/zopefoundation/Zope/pull/933>`_)\n\n\n4.5.3 (2020-11-16)\n------------------\n\n- Update dependencies to the latest releases that still support Python 2.\n\nFixes\n+++++\n\n- Convert ``bytes`` (Python 3) and ``unicode`` (Python 2) values for\n  HTTP response headers into native strings using the HTTP/1.1\n  stipulated ``ISO-8859-1`` encoding. This makes ``waitress`` happy\n  which insists on native strings for those values.\n  (Fix for `#905 <https://github.com/zopefoundation/Zope/pull/905>`_)\n\n\n4.5.2 (2020-11-12)\n------------------\n\nBackward incompatible changes\n+++++++++++++++++++++++++++++\n\n- Exclude characters special for ``chameleon``'s interpolation syntax\n  (i.e. ``${}``) from use in TALES path expressions to reduce the failure risk\n  for the ``chameleon`` interpolation heuristics\n  (`#925 <https://github.com/zopefoundation/Zope/issues/925>`_)\n\nFixes\n+++++\n\n- Fix ``length`` for page template repeat variables\n  (`#913 <https://github.com/zopefoundation/Zope/issues/913>`_)\n\n- Restore the ZMI `Debug Information` control panel page\n  (`#898 <https://github.com/zopefoundation/Zope/issues/898>`_)\n\n- HTTP header encoding support\n  (`#905 <https://github.com/zopefoundation/Zope/pull/905>`_)\n\n- Provide a more senseful ``OFS.SimpleItem.Item_w__name__.id``\n  to avoid bugs by use of deprecated direct ``id`` access\n  (as e.g. `#903 <https://github.com/zopefoundation/Zope/issues/903>`_).\n\n- Fix ZMI visibility of pre elements in error log\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Update to ``zope.interface > 5.1.0`` to fix a memory leak.\n\n- Fix that ``ZTUtils.LazyFilter`` could not be imported inside a restricted\n  Python script.\n  (`#901 <https://github.com/zopefoundation/Zope/pull/901>`_)\n\n\n4.5.1 (2020-08-13)\n------------------\n\n- Avoid unsolicited translations\n  (`#876 <https://github.com/zopefoundation/Zope/issues/876>`_)\n\n- Make \"chameleon-zope context wrapping\" more faithful.\n  (`#873 <https://github.com/zopefoundation/Zope/pull/873/files>`_)\n\n- Let \"unicode conflict resolution\" work for all templates (not just\n  ``ZopePageTemplate``).\n  (`#872 <https://github.com/zopefoundation/Zope/pull/872/files>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5 (2020-07-09)\n----------------\n\n- Make \"Unicode Conflict Resolution\" available for templates\n  rendered with ``chameleon``\n  (`Products.CMFPlone#3145\n  <https://github.com/plone/Products.CMFPlone/issues/3145>`_).\n\n- New interface ``Products.PageTemplates.interfaces.IZopeAwareEngine``.\n  It can be used as the \"provides\" of an adapter registration\n  to adapt a non ``Zope`` tales engine to an engine to be used\n  by ``Zope`` page templates\n  (`#864 <https://github.com/zopefoundation/Zope/issues/864>`_).\n  Currently, the adaptation is used only when the\n  template is rendered with ``chameleon``;\n  with ``zope.pagetemplate``, the engine is used\n  as is - this may change in the future.\n\n- Allow (some) builtins as first element of a (TALES) path expression:\n  in an untrusted context, the builtins from\n  ``AccessControl.safe_builtins`` are allowed;\n  in a trusted context, all Python builtins are allowed in addition\n  (and take precedence)\n  (`zope.tales#23 <https://github.com/zopefoundation/zope.tales/issues/23>`_).\n\n- Add ``tal:switch`` test\n\n- Support the ``attrs`` predefined template variable again (as\n  far as ``chameleon`` allows it)\n  (`#860 <https://github.com/zopefoundation/Zope/issues/860>`_).\n\n- Improve documentation of ``CONTEXTS`` in the \"Zope Book\".\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.4.4 (2020-06-26)\n------------------\n\n- Decrease cookie size for copy/paste clipboard cookie\n  (`#854 <https://github.com/zopefoundation/Zope/issues/854>`_)\n\n- Fix ``default`` keyword handling in page templates\n  (`#846 <https://github.com/zopefoundation/Zope/issues/846>`_)\n\n- Update dependencies to newest bugfix releases.\n\n\n4.4.3 (2020-06-16)\n------------------\n\n- Fix parsing of package version and show correct major version in the ZMI.\n\n- Improve solidity of the ``debugError`` method.\n  (`#829 <https://github.com/zopefoundation/Zope/issues/829>`_)\n\n- Use ``Chameleon`` (>= 3.7.2) configuration to get better\n  information for errors detected during template execution.\n  (`#837 <https://github.com/zopefoundation/Zope/issues/837>`_)\n\n- Update dependencies to newest releases.\n\n\n4.4.2 (2020-04-30)\n------------------\n\n- Fix faulty 4.4.1 release.\n\n\n4.4.1 (2020-04-30)\n------------------\n\n- Fix ``HEAD`` requests on registered views.\n  (`#816 <https://github.com/zopefoundation/Zope/issues/816>`_)\n\n- Pin ``AccessControl`` to 4.2, it gained a missing WebDAV permission name.\n\n\n4.4 (2020-03-31)\n----------------\n\n- Fix incompatiblities with ``Archetypes``\n\n- Require ``zope.tales>=5.0.2``\n\n- Fix issue 717 by fully honoring the engine returned by\n  ``PageTemplate.pt_getEngine``\n  (`#717 <https://github.com/zopefoundation/Zope/issues/717>`_).\n  The engine also decides about the use of ``zope.tales``\n  (engine is an instance of ``zope.pagetemplate.engine.ZopeBaseEngine``)\n  or ``chameleon.tales`` (otherwise) TALES expressions.\n\n- Fixed encoding issue of `displayname` WebDAV property\n  (`#797 <https://github.com/zopefoundation/Zope/issues/797>`_)\n\n- Fixed fallback implementation of ``manage_DAVget``\n  (`#799 <https://github.com/zopefoundation/Zope/issues/799>`_)\n\n\n4.3 (2020-02-25)\n----------------\n\n- Enable WebDAV support independent of ``ZServer``\n  (`#787 <https://github.com/zopefoundation/Zope/pull/787>`_)\n\n- Only use ``wsgi.file_wrapper`` for response bodies with a ``read`` method\n  (`#763 <https://github.com/zopefoundation/Zope/issues/763>`_)\n\n- Improve detection of HTTPS requests\n  (`#680 <https://github.com/zopefoundation/Zope/issues/680>`_)\n\n- Fix several ZMI links so they respect virtual hosting\n  (`#788 <https://github.com/zopefoundation/Zope/issues/788>`_)\n\n- Deprecate unused ``postProcessInputs`` request method for removal in Zope 5\n  (`#782 <https://github.com/zopefoundation/Zope/issues/782>`_)\n\n- Clean up and sanitize permissions used for WebDAV-related methods\n\n\n4.2.1 (2020-02-09)\n------------------\n\n- Repair Python 2.7 compatibility due to a Python 3-only import\n\n- Add shim modules with deprecation warnings for some ``webdav`` consumers\n\n- Prevent a UnicodeDecode error under Python 2 with non-ASCII properties\n\n\n4.2 (2020-02-09)\n----------------\n\n- Restore WebDAV support in Zope\n  (`#744 <https://github.com/zopefoundation/Zope/issues/744>`_)\n\n- Fix sort link URLs on ``manage_main``\n  (`#748 <https://github.com/zopefoundation/Zope/issues/748>`_)\n\n- Fix longstanding test bug by forcing the page template engine.\n  Many tests in ``Products.PageTemplates`` used the old Zope page template\n  engine because the correct one was not registered during setup.\n\n- Add deprecation warnings to the ``ZPublisher.maybe_lock`` module\n  (`#758 <https://github.com/zopefoundation/Zope/issues/758>`_)\n\n- Add deprecation warnings to Help System-related methods\n  (`#756 <https://github.com/zopefoundation/Zope/issues/756>`_)\n\n- Update to current releases of the dependencies\n\n\n4.1.3 (2019-12-01)\n------------------\n\n- Close opened db during shutdown (as ZServer is already doing).\n  (`#740 <https://github.com/zopefoundation/Zope/issues/740>`_)\n\n- Add ``Paste`` as ``extras_require`` dependency to pull in ``Paste`` when\n  installing with `pip` and `constraints.txt` to prevent startup errors.\n  This requires adding the ``[wsgi]`` extra in the egg specification.\n  (`#734 <https://github.com/zopefoundation/Zope/issues/734>`_)\n\n- Fix broken deprecated import when ZServer is not installed\n  (`#714 <https://github.com/zopefoundation/Zope/issues/714>`_)\n\n- Improve ZMI Security Tab usability for high numbers of roles\n  (`#730 <https://github.com/zopefoundation/Zope/issues/730>`_)\n\n- Some small ZMI rendering fixes\n  (`#729 <https://github.com/zopefoundation/Zope/issues/729>`_)\n\n- Fix error when using database minimize in the ZMI\n  (`#726 <https://github.com/zopefoundation/Zope/issues/726>`_)\n\n- Fix ``__getattr__`` signature in ``UnauthorizedBinding``\n  (`#703 <https://github.com/zopefoundation/Zope/issues/703>`_)\n\n- Set ``REMOTE_USER`` in wsgi environ using Zope user authentication\n  (`#713 <https://github.com/zopefoundation/Zope/pull/713>`_)\n\n- Add ``wsgi.file_wrapper`` implementation\n  https://www.python.org/dev/peps/pep-0333/#optional-platform-specific-file-handling\n  (`#719 <https://github.com/zopefoundation/Zope/pull/719>`_)\n\n- Fix VirtualHostMonster not being able to set mappings under Python 3.\n  (`#708 <https://github.com/zopefoundation/Zope/issues/708>`_)\n\n- Reduce the danger of acquiring built-in names on the ZMI Find tab\n  (`#712 <https://github.com/zopefoundation/Zope/issues/712>`_)\n\n- Restore the mistakenly removed Properties ZMI tab on Image objects\n  (`#706 <https://github.com/zopefoundation/Zope/issues/706>`_)\n\n- Fix ``OFS.Image.File.__str__`` for ``Pdata`` contents\n  (`#711 <https://github.com/zopefoundation/Zope/issues/711>`_)\n\n- Update to current releases of the dependencies.\n\n\n4.1.2 (2019-09-04)\n------------------\n\n- Resurrect ZMI History tab and functionality.\n\n- Remove commented out configuration for ``tempstorage`` (and server side\n  sessions) as that was known not working for ages. This was removed so we do\n  not lead unsuspecting developers to think that this is the right way to do\n  session data. See\n  (`#679 <https://github.com/zopefoundation/Zope/issues/679>`_)\n  (`tempstorage#8 <https://github.com/zopefoundation/tempstorage/issues/8>`_)\n  (`tempstorage#12 <https://github.com/zopefoundation/tempstorage/issues/12>`_)\n\n- Reuse ``zope.publisher.http.splitport`` instead of defining our own\n  (`#683 <https://github.com/zopefoundation/Zope/issues/683>`_)\n\n- Update to current releases of the dependencies.\n\n\n4.1.1 (2019-07-02)\n------------------\n\n- Document the Zope configuration options from the configuration schema itself\n  (`#571 <https://github.com/zopefoundation/Zope/issues/571>`_)\n\n- Update to current releases of the dependencies.\n\n- Fix broken ZMI when using non-root deployments.\n  (`#647 <https://github.com/zopefoundation/Zope/issues/647>`_)\n\n\n4.1 (2019-06-19)\n----------------\n\nFeatures\n++++++++\n\n- Resurrect ZODB packing from the ZMI.\n  (`#623 <https://github.com/zopefoundation/Zope/issues/623>`_)\n\n- Optionally control the use of Zope's built-in XML-RPC support for\n  POST requests with Content-Type ``text/xml`` via the\n  registration of a ``ZPublisher.interfaces.IXmlrpcChecker`` utility.\n  (`#620 <https://github.com/zopefoundation/Zope/issues/620>`_)\n\n- Document request parameter handling.\n  (`#636 <https://github.com/zopefoundation/Zope/issues/636>`_)\n\n\nFixes\n+++++\n\n- `allowed_attributes` and `allowed_interface` work again for BrowserViews.\n  (`#397 <https://github.com/zopefoundation/Zope/issues/397>`_)\n\n- Prevent encoding issues in existing DTML Method and DTML Document objects.\n\n- Fixed logic error in exceptions handling during publishing. This error would\n  prevent correct `Unauthorized` handling when exceptions debug mode was set.\n\n- Do not cache (implicit) request access to form data and cookies in ``other``.\n  (`#630 <https://github.com/zopefoundation/Zope/issues/630>`_)\n\n- Bring request lookup order related documentation in line with the\n  actual implementation.\n  (`#629 <https://github.com/zopefoundation/Zope/issues/629>`_)\n  Minor clean-up of ``HTTPRequest.get``.\n\n- Fix missing ``Paste`` distribution on installation using ``pip``.\n  (`#452 <https://github.com/zopefoundation/Zope/issues/452>`_)\n\nOther changes\n+++++++++++++\n\n- Fixed usability on ZMI Security tab forms for sites with many roles.\n\n- Update to current releases of most dependencies.\n\n\n4.0 (2019-05-10)\n----------------\n\nFixes\n+++++\n\n- Make sure new object IDs don't clash with the views lookup mechanism.\n  (`#591 <https://github.com/zopefoundation/Zope/issues/591>`_)\n\n- Be more careful when guessing at encoding for document template types.\n\n- Ensure a redirect path does not get URL-encoded twice.\n\n- Prevent inability to log into the ZMI due to failing exception views.\n\n- Harden ``RESPONSE.redirect`` to deal with any unencoded or encoded input.\n  (`#435 <https://github.com/zopefoundation/Zope/issues/435>`_)\n\n- Fix broken ``title_and_id`` behaviour.\n  (`#574 <https://github.com/zopefoundation/Zope/issues/574>`_)\n\n- Fix broken ZMI DTML rendering for mixed unicode/bytes content.\n  (`#271 <https://github.com/zopefoundation/Zope/issues/271>`_)\n\n- Fix wrong `Content-Length` set by ``App.ImageFile`` on 304 responses.\n  (`#513 <https://github.com/zopefoundation/Zope/issues/513>`_)\n\n- Make the ZMI `Find` tab work for searching HTML tags\n  by adding support for `Tainted` strings in ``ZopeFind``.\n\n- Prevent ``mkwsgiinstance`` from blowing up parsing ``buildout.cfg``.\n\n- Fix ``ZPublisher.HTTPResponse.HTTPBaseResponse.isHTML`` for binary data on\n  Python 3.\n  (`#577 <https://github.com/zopefoundation/Zope/pull/577>`_)\n\n- Prevent ``FindSupport.ZopeFind`` from throwing ``UnicodeDecodeErrors``.\n  (`#594 <https://github.com/zopefoundation/Zope/issues/594>`_)\n\nFeatures\n++++++++\n\n- Add a configuration flag to show bookmarkable URLs in the ZMI.\n  (`#580 <https://github.com/zopefoundation/Zope/issues/580>`_)\n\n- Add a flag for suppressing object events during file import.\n  (`#42 <https://github.com/zopefoundation/Zope/issues/42>`_)\n\n- Add a Configuration details tab to the Control_Panel.\n\n- Resurrect the Interfaces ZMI tab.\n  (`#450 <https://github.com/zopefoundation/Zope/issues/450>`_)\n\n- Better default logging configuration for simple waitress WSGI setups.\n  (`#526 <https://github.com/zopefoundation/Zope/issues/526>`_)\n\n- Replace usage of ``urllib.parse.splitport`` and ``urllib.parse.splittype``\n  which are deprecated in Python 3.8.\n  (`#476 <https://github.com/zopefoundation/Zope/pull/476>`_)\n\nOther changes\n+++++++++++++\n\n- Update ZODB migration documentation.\n\n- Expand the Zope 4 migration documentation.\n\n- Change the WSGI configuration template so those annoying waitress queue\n  messages only go into the event log, but not onto the console.\n\n- Change naming for the generated WSGI configurations to ``zope.conf`` and\n  ``zope.ini`` to match existing documentation for Zope configurations.\n  (`#571 <https://github.com/zopefoundation/Zope/issues/571>`_)\n\n- Make Zope write a PID file again under WSGI.\n  This makes interaction with sysadmin tools easier.\n  The PID file path can be set in the Zope configuration with ``pid-filename``,\n  just like in ``ZServer``-based configurations.\n\n- Exceptions during publishing are now re-raised in a new exceptions debug\n  mode to allow WSGI middleware to handle/debug it. See the `debug\n  documentation <https://zope.readthedocs.io/en/4.x/wsgi.html#werkzeug>`_\n  for examples.\n  (`#562 <https://github.com/zopefoundation/Zope/issues/562>`_)\n\n- Remove hardcoded list of factories that don't want an add dialog.\n  (`#540 <https://github.com/zopefoundation/Zope/issues/540>`_)\n\n- Increase link visibility in old ZMI forms.\n  (`#530 <https://github.com/zopefoundation/Zope/issues/530>`_)\n\n- Always keep action buttons visible on the content list for large folders.\n  (`#537 <https://github.com/zopefoundation/Zope/issues/537>`_)\n\n- Make showing the ZMI modal add dialog configurable per product.\n  (`#535 <https://github.com/zopefoundation/Zope/issues/535>`_)\n\n- Added a few Zope 4 ZMI screenshots to the documentation.\n  (`#378 <https://github.com/zopefoundation/Zope/issues/378>`_)\n\n- Refresh Sphinx configuration and switched to the ReadTheDocs theme.\n\n- Rename/move the `Zope 2 Book` to `Zope Book`.\n  (`#443 <https://github.com/zopefoundation/Zope/issues/443>`_)\n\n- Show item icons on ZMI `Find` tab results.\n  (`#534 <https://github.com/zopefoundation/Zope/issues/534>`_)\n\n- Full PEP-8 compliance.\n\n- Fix ZMI font rendering on macOS.\n  (`#531 <https://github.com/zopefoundation/Zope/issues/531>`_)\n\n- Provide a method to get breadcrumb length to prevent ZMI errors.\n  (`#533 <https://github.com/zopefoundation/Zope/issues/533>`_)\n\n- Add ``zodbupdate_rename_dict`` to move ``webdav.LockItem`` to\n  ``OFS.LockItem``.\n  (`Products.CMFPlone#2800 <https://github.com/plone/Products.CMFPlone/issues/2800>`_)\n\n\n4.0b10 (2019-03-08)\n-------------------\n\nFixes\n+++++\n\n- Fix import file drop down on import export page.\n  (`#524 <https://github.com/zopefoundation/Zope/issues/524>`_)\n\n- Resurrect copyright and license page.\n  (`#482 <https://github.com/zopefoundation/Zope/issues/482>`_)\n\n- Fix FindSupport binary value handling.\n  (`#406 <https://github.com/zopefoundation/Zope/issues/406>`_)\n\n- Fix remove double quoting in ``ZPublisher.HTTPRequest.search_type``\n  (`#511 <https://github.com/zopefoundation/Zope/issues/511>`_)\n\n- Fix subscript access on Page Template ``macros`` attribute.\n  (`#210 <https://github.com/zopefoundation/Zope/issues/210>`_)\n\n- Fix ``OFS.interfaces`` attribute declarations to match reality.\n  (`#498 <https://github.com/zopefoundation/Zope/issues/498>`_)\n\n- Fix handling of DTML in Ace editor.\n  (`#489 <https://github.com/zopefoundation/Zope/issues/489>`_)\n\n- Fix error when not selecting a file for upload in Files and Images.\n  (`#492 <https://github.com/zopefoundation/Zope/issues/492>`_)\n\n- Fix ZMI add handling of ``len(filtered_meta_types()) == 1``.\n  (`#505 <https://github.com/zopefoundation/Zope/issues/505>`_)\n\n- Fix ZMI add handling of ``addItemSelect`` form.\n  (`#506 <https://github.com/zopefoundation/Zope/issues/506>`_)\n\n- Don't always flag ``PubBeforeAbort`` and ``PubBeforeAbort`` as retry.\n  (`#502 <https://github.com/zopefoundation/Zope/pull/502>`_)\n\nFeatures\n++++++++\n\n- Specify supported Python versions using ``python_requires`` in `setup.py`.\n  (`#481 <https://github.com/zopefoundation/Zope/issues/481>`_)\n\n- Provide additional links on PyPI with ``project_urls`` in ``setup.py``\n  (`#434 <https://github.com/zopefoundation/Zope/issues/434>`_)\n\n- Resurrect automatic support for ``standard_error_message`` DTML Method.\n  (`#238 <https://github.com/zopefoundation/Zope/issues/238>`_)\n\nOther changes\n+++++++++++++\n\n- Make sure the WSGI Response object respects lock semantics.\n  (`#216 <https://github.com/zopefoundation/Zope/issues/216>`_)\n\n- Remove references to separate ``Products.ZCTextIndex``.\n  (`516 <https://github.com/zopefoundation/Zope/issues/516>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b9 (2019-02-09)\n------------------\n\nBreaking changes\n++++++++++++++++\n\n- Remove support for Bobo Call Interface\n  (`#462 <https://github.com/zopefoundation/Zope/pull/462>`_)\n\n- Remove support for ``management_page_charset``\n  (`#313 <https://github.com/zopefoundation/Zope/issues/313>`_)\n\nFeatures\n++++++++\n\n- Add preliminary support for Python 3.8. as of 3.8.0a1 is released.\n\n- Recreate ``App.version_txt.getZopeVersion``\n  (`#411 <https://github.com/zopefoundation/Zope/issues/411>`_)\n\nFixes\n+++++\n\n- Fix display of ZMI breadcrumbs with non-ASCII path elements\n  (`#401 <https://github.com/zopefoundation/Zope/issues/401>`_)\n\n- Make sure conflicts are always retried and not masked by exception views\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n- Fix faulty ZMI links due to missing URL-quoting\n  (`#391 <https://github.com/zopefoundation/Zope/issues/391>`_)\n\n- Fix configuring the maximum number of conflict retries\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n- Show the content add widget again on ZCatalogs\n  (`ZCatalog#45 <https://github.com/zopefoundation/Products.ZCatalog/issues/45>`_)\n\n- Improve showing/hiding of the left-hand tree pane\n  (`#457 <https://github.com/zopefoundation/Zope/issues/457>`_)\n\n- Restore the `View` ZMI tab on folders and their subclasses\n  (`#449 <https://github.com/zopefoundation/Zope/issues/449>`_)\n\n- Don't error out when showing permissions for a non-existent user\n  (`#437 <https://github.com/zopefoundation/Zope/issues/437>`_)\n\n- Fix ZMI listing view for narrow displays.\n  (`#471 <https://github.com/zopefoundation/Zope/pull/471>`_)\n\nOther changes\n+++++++++++++\n\n- Document filesystem caching for Chameleon page templates\n  and activate it by default for new WSGI instances\n  (`#291 <https://github.com/zopefoundation/Zope/issues/291>`_)\n\n- Remove obsolete environment variable \"Z_DEBUG_MODE\"\n  (`#445 <https://github.com/zopefoundation/Zope/issues/445>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b8 (2018-12-14)\n------------------\n\nNew features\n++++++++++++\n\n- Add wildcard rewrite to sub host name in VirtualHostMonster.\n  (`#317 <https://github.com/zopefoundation/Zope/issues/317>`_)\n\n- Add support for IPv6 hosts in VirtualHostMonster.\n  (`#314 <https://github.com/zopefoundation/Zope/pull/314>`_)\n\n- Add TestBrowser ``login`` method to set basic auth header.\n  (`#341 <https://github.com/zopefoundation/Zope/issues/341>`_)\n\nOther changes\n+++++++++++++\n\n- Add security declarations to ``SimpleItem.manage_FTPlist()`` and\n  ``Simplified.manage_FTPstat()`` instead of requiring classes extending\n  ``SimpleItem`` to do so.\n  (`#398 <https://github.com/zopefoundation/Zope/pull/398>`_)\n\n- Clarify prerequisites for building Zope in documentation.\n  (`#366 <https://github.com/zopefoundation/Zope/issues/366>`_)\n\n- Update dependencies to newest versions.\n\nFixes\n+++++\n\n- Restore missing Properties tab for DTML Documents\n  (`#409 <https://github.com/zopefoundation/Zope/issues/409>`_)\n\n- Add some CSS fixes for ZMI.\n\n- Sanitize file handling for uploading and adding DTML methods and documents.\n\n- Add a note about the ``app`` toplevel object in the debugger.\n\n- Show a message instead of an exception for empty file upload on PageTemplate.\n  (`#357 <https://github.com/zopefoundation/Zope/issues/357>`_)\n\n- Update cookie expiration method in a way Firefox 63+ understands.\n  (`#405 <https://github.com/zopefoundation/Zope/pull/405>`_)\n\n- Fix closing newly created request before processing it after a retryable\n  error has occurred.\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n\n4.0b7 (2018-10-30)\n------------------\n\nSecurity related fixes\n++++++++++++++++++++++\n\n- ``HTTPRequest.text()`` now obscures values of fields those name\n  contain the string ``passw`` in the same way ``HTTPRequest.__str__`` already\n  did.\n  (`#375 <https://github.com/zopefoundation/Zope/issues/375>`_)\n\nBugfixes\n++++++++\n\n- Fix `bin/mkwsgiinstance` on Python 3 when Zope was installed via ``pip``.\n\n- Fix a bug with scopes in scripts with zconsole, which made it impossible to\n  reach global imports in the script within a function.\n\n- Fix handling of non-ASCII characters in URLs on Python 2 introduced on 4.0b5.\n  (`#380 <https://github.com/zopefoundation/Zope/pull/380>`_)\n\n- Fix zodbupdate conversion of ``OFS.Image.Pdata`` objects.\n\n- Install the `ipaddress` package only on Python 2.7 as it is part of the\n  stdlib in Python 3.\n  (`#368 <https://github.com/zopefoundation/Zope/issues/368>`_)\n\n- Fix KeyError on releasing resources of a Connection when closing the DB.\n  This requires at least version 2.4 of the `transaction` package.\n  (See `ZODB#208 <https://github.com/zopefoundation/ZODB/issues/208>`_.)\n\n- Fix rendering of ordered folder icon in ZMI.\n\nOther changes\n+++++++++++++\n\n- Restore old ``__repr__`` via ``OFS.SimpleItem.PathReprProvider``. Use this\n  as first base class for your custom classes, to restore the old behaviour.\n  (`#379 <https://github.com/zopefoundation/Zope/issues/379>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b6 (2018-10-11)\n------------------\n\nBreaking changes\n++++++++++++++++\n\n- Remove the ``OFS.History`` module which contained only BBB code since 4.0a2.\n\n- Remove `bootstrap.py`. To install Zope via `zc.buildout` install the\n  `zc.buildout` package in a virtual environment at first.\n\nNew features\n++++++++++++\n\n- Style the ZMI using Bootstrap.\n  (`#249 <https://github.com/zopefoundation/Zope/pull/249>`_ and\n  `#307 <https://github.com/zopefoundation/Zope/pull/307>`_)\n\n- Add zconsole module for running scripts and interactive mode.\n  See the `document Running Zope\n  <https://zope.readthedocs.io/en/4.x/operation.html#debugging-zope>`_.\n\n- Add support for Python 3.7.\n\n- Restore support for XML-RPC when using the WSGI publisher - dropped in 4.0a2.\n\n- Add a minimum ``buildout.cfg`` suggestion in the docs for creating ``wsgi``\n  instances.\n\n- Render an error message when trying to save DTML code containing a\n  SyntaxError in ZMI of a DTMLMethod or DTMLDocument.\n\n- Render an error message when trying to upload a file without choosing one\n  in ZMI of a DTMLMethod or DTMLDocument.\n\n- Update dependencies to newest versions.\n\nBugfixes\n++++++++\n\n- Restore controls for reordering items in an Ordered Folder and list them\n  according to the internal order by default in ZMI.\n  (`#344 <https://github.com/zopefoundation/Zope/pull/344>`_)\n\n- Call exception view before triggering _unauthorized.\n  (`#304 <https://github.com/zopefoundation/Zope/pull/304>`_)\n\n- Fix XML Page template files in Python 3\n  (`#319 <https://github.com/zopefoundation/Zope/issues/319>`_)\n\n- Fix ZMI upload of `DTMLMethod` and `DTMLDocument` to store the DTML as a\n  native ``str`` on both Python versions.\n  (`#265 <https://github.com/zopefoundation/Zope/pull/265>`_)\n\n- Fix upload and rendering of text files.\n  (`#240 <https://github.com/zopefoundation/Zope/pull/240>`_)\n\n- Work around Python bug (https://bugs.python.org/issue27777)\n  when reading request bodies not encoded as application/x-www-form-urlencoded\n  or multipart/form-data.\n\n- Show navigation in ``manage_menu`` in case the databases cannot be retrieved.\n  (`#309 <https://github.com/zopefoundation/Zope/issues/309>`_)\n\n- Prevent breaking page rendering when setting `default-zpublisher-encoding`\n  in `zope.conf` on Python 2.\n  (`#308 <https://github.com/zopefoundation/Zope/issue/308>`_)\n\n- Fix `HTTPResponse.setBody` when the published object returns a tuple.\n  (`#340 <https://github.com/zopefoundation/Zope/pull/340>`_)\n\n- Fix ``Products.Five.browser.ObjectManagerSiteView.makeSite``\n  to interact well with plone.testing's patching of the global site manager.\n  (`#361 <https://github.com/zopefoundation/Zope/pull/361>`_)\n\n- Add a backwards compatible shim for ``AccessRule`` which was removed in 4.0a1\n  but can exist in legacy databases.\n  (`#321 <https://github.com/zopefoundation/Zope/issue/321>`_)\n\n\n4.0b5 (2018-05-18)\n------------------\n\nNew features\n++++++++++++\n\n- The `ProductContext` handed to a product's `initialize()` method\n  now has a `getApplication()` method which a product can use to,\n  e.g., add an object to the Application during startup (as used\n  by `Products.Sessions`).\n  (`#277 <https://github.com/zopefoundation/Zope/pull/277>`_)\n\n- Update dependencies to newest versions.\n\nBugfixes\n++++++++\n\n- Fix comparison against non-ints in ZCacheable_getModTime.\n\n- Allow unicode in ids.\n  (`#181 <https://github.com/zopefoundation/Zope/pull/181>`_)\n\n- Use log.warning to avoid deprecation warning for log.warn\n\n- Keep existing loggers\n  (`#276 <https://github.com/zopefoundation/Zope/pull/276>`_)\n\n- Accept bytes and text as cookie value.\n  (`#263 <https://github.com/zopefoundation/Zope/pull/263>`_)\n\n- Always raise InternalError when using WSGI and let the WSGI server decide\n  how to handle the request.\n  (`#280 <https://github.com/zopefoundation/Zope/pull/280>`)\n\n- Make ZODB mount points in Python 2 compatible with `ZConfig >= 3.2`.\n  (`#281 <https://github.com/zopefoundation/Zope/pull/281>`_)\n\n- ``__str__`` of an Image object now returns the image HTML tag in\n  Python 3 as it already did on Python 2.\n  (`#282 <https://github.com/zopefoundation/Zope/pull/282>`_)\n\n\n4.0b4 (2018-04-23)\n------------------\n\nSupported versions\n++++++++++++++++++\n\n- Drop support for Python 3.4 because it was dropped by `AccessControl` on\n  which `Zope` depends.\n\n- Update dependencies to newest versions.\n\nBreaking changes\n++++++++++++++++\n\n- The 'lines' property type now always stores bytes on all Python versions.\n  (`#206 <https://github.com/zopefoundation/Zope/issues/206>`_)\n\nBugfixes\n++++++++\n\n- Fix an edge case where the data which was set using ``response.write()`` was\n  not returned by ``publish_module``.\n  (`#256 <https://github.com/zopefoundation/Zope/issues/256>`_)\n\n- Fix renaming of images and files via ZMI.\n  (`#247 <https://github.com/zopefoundation/Zope/issues/247>`_)\n\n- Sort HTTP headers in doctests as in Zope 2.\n  (`#259 <https://github.com/zopefoundation/Zope/pull/259>`_)\n\nChanges\n+++++++\n\n- Add ``OFS.CopySupport.CopyContainer._pasteObjects()`` to be able to paste\n  objects no matter how many objects where cut or copied.\n  (`#217 <https://github.com/zopefoundation/Zope/issues/217>`_)\n\n\n4.0b3 (2018-01-27)\n------------------\n\nBugfixes\n++++++++\n\n- Test that ``str.format`` checks security for accessed keys and items.\n  The real fix is in the AccessControl package, version 4.0b1.\n  Part of PloneHotfix20171128.\n\n- Made Redirect unavailable as url.  Part of PloneHotfix20171128.\n\n- Fix ZMI navtree error by using DocumentTemplate version 3.0b2.\n  (`#179 <https://github.com/zopefoundation/Zope/issues/179>`_)\n\n- Re-add a link to refresh the ZMI menu tree on the left.\n\n- Install a default page for the root view in new installations again.\n\n- Re-raise app exceptions if x-wsgiorg.throw_errors is True in the request environ.\n\n- Fix path expressions trying to call views that do not implement `__call__`.\n\n- Move _html to HTTPBaseResponse since it is shared by HTTPResponse and WSGIResponse.\n\n- Fix unpickling of instances created before 4.0b2 those classes changed from\n  old-style classes to new-style classes.\n\n- Prevent UnicodeDecodeError when publishing image (bytes) responses without content-type\n\nChanges\n+++++++\n\n- Move `Products.SiteAccess` back here from ZServer distribution.\n\n- Update dependencies to current versions.\n\n\n4.0b2 (2017-10-13)\n------------------\n\nNew features\n++++++++++++\n\n- Add support for IPv6 addresses for the trusted-proxy zope.conf setting.\n\nBugfixes\n++++++++\n\n- Fix special double under methods on `HTTPRequest.record` class.\n\n- Add missing version pin for `Zope2` in `versions-prod.cfg`.\n\n- Fix ``HTTPExceptionHandler`` to be usable as part of the WSGI pipeline in\n  testbrowser tests.\n\nOther changes\n+++++++++++++\n\n- Explicitly make all classes new-style classes.\n\n\n4.0b1 (2017-09-15)\n------------------\n\nWith this release the egg of the project is named `Zope` instead of `Zope2`.\nThere is a meta package named `Zope2` which depends on `Zope`.\n\nSee https://zope.readthedocs.io/en/latest/WHATSNEW.html for a higher level\ndescription of the changes.\n\nSupported versions\n++++++++++++++++++\n\n- Add support for Python 3.4, 3.5 and 3.6.\n\n- Drop support for Python 2.6.\n\nBreaking changes\n++++++++++++++++\n\n- Removed the old help system, in favor of the current Sphinx documentation\n  hosted at https://zope.readthedocs.io/. For backwards compatibility the\n  `registerHelp` and `registerHelpTitle` methods are still available on the\n  ProductContext used during the `initialize` function.\n\n- Remove ZMI re-ordering features.\n\n- Retired icons from the `Zope Management Interface` and various smaller\n  cleanups of ZMI screens.\n\n- Remove xml-export.\n\n- Remove `Globals` package, opened database are now found in\n  `Zope2.opened` next to `Zope2.DB`.\n\n- Remove proxy role support from DTML documents and methods.\n\n- Removed `AccessRule` and `SiteRoot` from `Products.SiteAccess`.\n\n- Remove `Products.ZReST` and the `reStructuredText` wrapper, you can use\n  `docutils` directly to gain `reST` support.\n\n- Stop setting ``CLIENT_HOME`` as a builtin, get it via\n  ``App.config.getConfiguration().clienthome`` instead.\n\n- Drop ``OFS.History`` functionality.\n\n- Removed ``OFS.DefaultObservable`` - an early predecessor of `zope.event`.\n\n- Removed ``OFS.ZDOM``. `OFS.SimpleItem.Item` now implements `getParentNode()`.\n\n- Removed special code to create user folders and page templates while creating\n  new ``OFS.Folder`` instances.\n\n- Removed the `App.version_txt.getZopeVersion` API, you can use\n  ``pkg_resources.get_distribution('Zope').version`` instead.\n\n- On the application object, removed `PrincipiaTime` in favor of `ZopeTime` and\n  `PrincipiaRedirect` in favor of `Redirect` or `ZopeRedirect`.\n\n- Removed `bobobase_modification_time` from `Persistence.Persistent`, you can\n  use `DateTime(object._p_mtime)` instead.\n\n- Removed the special handling of `Set-Cookie` headers in\n  `HTTPResponse.setHeader`. Use the `setCookie`/`appendCookie`/`expireCookie`\n  methods instead, or if low-level control is needed, use `addHeader` instead\n  to get the exact same effect.\n\n- Raise ``BadRequest`` instead of returning MessageDialog.\n\n- Update available HTTP response code, 302 is now called ``Found``.\n\n- Refactor ``browser:view`` and ``browser:page`` directives.\n  This makes their implementation more similar to that in ``zope.browserpage``\n  and adds allowed_interface support for the ``browser:view`` directive.\n  By default the `aq_*` attributes are no longer available on those\n  views/pages.\n\n- Removed the last remaining code to support `SOFTWARE_HOME` and `ZOPE_HOME`.\n\n- Simplified instance skeleton, removing old `Extensions`, `import`,\n  `lib/python` and `Products` from the default. You can continue to manually\n  add these back. (`Products` requires `ZServer` to be usable.)\n\n- Remove the `zopectl` script.\n\nWSGI\n++++\n\n- Document running Zope as a WSGI application.\n\n- Remove `Connection` and `Transfer-Encoding` headers from WSGI responses.\n  According to PEP 333 WSGI applications must not emit hop-by-hop headers.\n\n- Ensure that the ``WSGIPublisher`` begins and ends an *interaction*\n  at the request/response barrier. This is required for instance for\n  the ``checkPermission`` call to function without an explicit\n  ``interaction`` parameter.\n\n- Make the WSGIPublisher normalize HTTP exception classes based on name\n  (for example, any exception named NotFound will be converted\n  into `zExceptions.NotFound`). This restores compatibility with\n  similar behavior of the old publisher.\n\n- Change the WSGIResponse exception methods to raise exceptions instead\n  of returning responses. This includes ``notFoundError``, ``forbiddenError``,\n  ``debugError``, ``badRequestError`` and ``unauthorized``.\n\n- Add support for exception views to WSGIPublisher.\n\n- Add support for ``ConflictError`` and ``TransientError`` retry logic directly\n  into WSGIPublisher, thus `repoze.tm2` and `repoze.retry` are no longer\n  needed and no longer supported.\n\n- Change Testing to use the WSGI publisher for functional and testbrowser\n  based tests incl. functional doctests. Alternatives are available\n  in ``ZServer.Testing``.\n\n- Split a WSGI part out of `Zope2.Startup.ZopeStarter`.\n\n- Include ``waitress`` as a default WSGI app server.\n\n- Add `egg:Zope#httpexceptions` WSGI middleware.\n\n- Add a new `runwsgi` script to serve PasteDeploy files.\n\n\nZODB\n++++\n\n- Support ZODB 5.\n\n- Removed persistent default content like `standard_error_message`,\n  `error_log`, `temp_folder` and `index_html`.\n\n\nControl panel\n+++++++++++++\n\n- Removed ZMI controls for restarting the process, these no longer apply when\n  managed as a WSGI application.\n\n- Remove `DebugInfo` and `DavLocks` from control panel.\n\n- Move the undo management to Control Panel -> Databases -> Database -> Undo.\n\n- Simplify ZMI control panel and globally available management screens.\n\n- Remove `control panel` object from the ZODB, it is no longer persistent.\n\n\nZServer\n+++++++\n\n- Split out ``Lifetime``, ``webdav`` and ``ZServer`` packages into a `ZServer`\n  project.\n\n- Move ``EtagSupport``, ``Lockable`` and ``LockItem`` from ``webdav`` into\n  `OFS`.\n\n- Move ``ZPublisher.Publish`` module into `ZServer` distribution.\n\n- Move ``Products.SiteAccess`` into `ZServer` distribution.\n\n- Move ZServer related testing support into ``ZServer.Testing``.\n\nzope.conf\n+++++++++\n\n- Always configure a `blob-dir` in the default skeleton.\n\n- Removed `mime-types` option from `zope.conf`. You can use the `add_files`\n  API from `zope.contenttype` instead.\n\n- Removed various persistent product related code and options.\n\n- Split a WSGI part out of `zopeschema.xml`. This reduces the supported\n  `zope.conf` directives when run under WSGI. If a directive is now unkown\n  it might have been moved to the `ZServer` package.\n  See https://github.com/zopefoundation/ZServer/blob/master/src/ZServer/Zope2/Startup/zopeschema.xml\n  for the directives which are supported via `ZServer`.\n\n- Remove profiling support via `publisher-profile-file` directive.\n\n- Changed the value for ``default-zpublisher-encoding`` to ``utf-8``.\n  If you set a different value for ``management_page_charset`` consider\n  changing ``default-zpublisher-encoding`` now.\n\n- Removed the ``enable-ms-author-via`` directive which was only required for\n  very old web folder implementations from before 2007.\n\n- Changed `zope.conf` default settings for ``python-check-interval`` to ``1000``.\n\nDependencies\n++++++++++++\n\n- Integrate code from and drop dependency on `five.globalrequest`.\n\n- Integrate `five.pt` code directly into `Products.PageTemplates`.\n\n- Drop `ZopeUndo` dependency.\n\n- Remove `Products.StandardCacheManagers` dependency.\n\n- Remove dependency on `initgroups`. Use the standard libraries\n  ``os.initgroups`` instead.\n\n- Merge `Products.OFSP` project back in.\n\n- `Products.SiteErrorLog` is now a separated package and Zope no longer depends\n  on it.\n\n- Split `Products.TemporaryFolder` and `Products.ZODBMountPoint` into\n  one new project called `Products.TemporaryFolder`.\n\n- Create new `Products.Sessions` distribution including ``Products.Sessions``\n  and ``Products.Transience`` code.\n\n- Dropped the direct dependencies on packages that have been factored out of\n  the main Zope 2 tree. Make sure you declare a dependency in your own\n  distribution if you still use one of these:\n\n    - `Products.BTreeFolder2`\n    - `Products.ExternalMethod`\n    - `Products.MailHost`\n    - `Products.MIMETools`\n    - `Products.PythonScripts`\n    - `Products.SiteErrorLog`\n    - `Products.StandardCacheManagers`\n    - `Products.ZCatalog`\n    - `Record`\n\nDeprecations\n++++++++++++\n\n- Five.browser: Marked `processInputs` and `setPageEncoding` as deprecated.\n  `processInputs` was replaced by the `postProcessInputs` request method and\n  the charset negotiation done by `setPageEncoding` was never fully supported.\n\nNew features\n++++++++++++\n\n- Add support to SameSite cookie in ``ZPublisher.HTTPBaseResponse``:\n  https://tools.ietf.org/html/draft-west-first-party-cookies-07\n\n- Optimized the `OFS.ObjectManager.__contains__` method to do the\n  least amount of work necessary.\n\n- Optimized the `OFS.Traversable.getPhysicalPath` method to avoid excessive\n  amounts of method calls.\n\n- During startup open a connection to every configured database, to ensure all\n  of them can indeed be accessed. This avoids surprises during runtime when\n  traversal to some database mountpoint could fail as the underlying storage\n  cannot be opened at all.\n\n- Explicitly close all databases on shutdown, which ensures `Data.fs.index`\n  gets written to the file system.\n\n- ZPublisher: If `IBrowserPage` is provided by a view, form input is decoded.\n  This makes it easier to use ``zope.formlib`` and ``z3c.form`` in Zope 2.\n\nSecurity fixes\n++++++++++++++\n\n- Fix reflective XSS in findResult.\n\n- Patch zope.interface to remove docstrings and avoid publishing.\n\n- Don't copy items the user is not allowed to view.\n\n- Quote variable in manage_tabs to avoid XSS.\n\n- Removed docstrings from some methods to avoid publishing them.\n\n- Ensure that Request objects cannot be published / traversed\n  directly via a URL.\n  (`LP #789863 <https://bugs.launchpad.net/zope2/+bug/789863>`_)\n\n\n- Port tests for ``str.format`` security fix from Zope 2.13.\n\nBugfixes\n++++++++\n\n- PropertyManagers and PropertySheets now correctly accept all forms of\n  strings as property values.\n\n- Allow handling of multipart requests in functional doctests using ``http``.\n\n- Fix Content-Length header for non-ascii responses incl. a base tag.\n\n- bobo_traverse of ProductDispatcher did not correctly invalidate cache\n  when a product was not initializes after first access of the cache. Types\n  that were added in test-profiles were not useable.\n\n- Prevent leaked connections when broken ``EndRequestEvent``\n  subscribers raise exceptions.\n  (`#16 <https://github.com/zopefoundation/Zope/issues/16>`_)\n\n- Made sure ``getConfiguration().default_zpublisher_encoding`` is set correctly.\n\n- Fix publishing of ``IStreamIterator``. This interface does\n  not have seek or tell.  Introduce ``IUnboundStreamIterator`` to support\n  publishing iterators of unknown length.\n  (`#28 <https://github.com/zopefoundation/Zope/pull/28>`_)\n\n- Removed the (very obsolete) thread lock around the cookie parsing code\n  in HTTPRequest.py; the python `re` module is thread-safe, unlike the\n  ancient `regex` module that was once used here.\n\n\n4.0a6 (2017-06-01)\n------------------\n\nFeatures Added\n++++++++++++++\n\n- Updated distributions:\n\n    - Products.BTreeFolder2 = 4.0.0\n    - Products.ZCatalog = 4.0.0\n\n\nRestructuring\n+++++++++++++\n\n- Claim support for Python 3 and update the documentation.\n\n\n4.0a5 (2017-05-22)\n------------------\n\nFeatures Added\n++++++++++++++\n\n- Many changes to support Python 3.\n\n- Updated distributions:\n\n    - AccessControl = 4.0a7\n    - DocumentTemplate = 3.0a3\n    - Missing = 4.0\n    - MultiMapping = 4.0\n    - Record = 3.4\n    - zExceptions = 3.6.1\n\n\n4.0a4 (2017-05-12)\n------------------\n\nBugs Fixed\n++++++++++\n\n- #116: Restore exception views for unauthorized.\n\n- Restore a `_unauthorized` hook on the response object.\n\n- Restore `HTTPResponse.redirect` behaviour of not raising an exception.\n\nFeatures Added\n++++++++++++++\n\n- Updated distributions:\n\n    - AccessControl = 4.0a6\n    - Acquisition = 4.4.2\n    - Record = 3.3\n    - zope.dottedname = 4.2.0\n    - zope.i18nmessageid = 4.1.0\n\n\n4.0a3 (2017-05-03)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Fixed reflective XSS in findResult.\n  This applies PloneHotfix20170117.  [maurits]\n\n- Patch zope.interface to remove docstrings and avoid publishing.\n  From Products.PloneHotfix20161129.   [maurits]\n\n- Don't copy items the user is not allowed to view.\n  From Products.PloneHotfix20161129.  [maurits]\n\n- Make the WSGIPublisher normalize HTTP exception classes based on name\n  (for example, any exception named NotFound will be converted\n  into `zExceptions.NotFound`). This restores compatibility with\n  similar behavior of the old publisher.\n  [davisagli]\n\n- Use unicode transaction-notes to support ZODB 5.\n  [pbauer]\n\nFeatures Added\n++++++++++++++\n\n- Add support to SameSite cookie in ``ZPublisher.HTTPBaseResponse``:\n  https://tools.ietf.org/html/draft-west-first-party-cookies-07\n\n- Updated distributions:\n\n    - AccessControl = 4.0a4\n    - Acquisition = 4.3.0\n    - BTrees = 4.4.1\n    - DateTime = 4.2\n    - DocumentTemplate = 3.0a1\n    - ExtensionClass = 4.3.0\n    - Missing = 3.2\n    - MultiMapping = 3.1\n    - Persistence = 3.0a3\n    - persistent = 4.2.2\n    - Products.ZCatalog = 4.0a3\n    - pytz = 2016.10\n    - Record = 3.2\n    - transaction = 2.1.1\n    - waitress = 1.0.2\n    - WebOb = 1.7.1\n    - WebTest = 2.0.26\n    - WSGIProxy2 = 0.4.3\n    - zdaemon = 4.2.0\n    - ZEO = 5.0.4\n    - zExceptions = 3.6\n    - ZODB = 5.2.0\n    - zope.configuration = 4.1.0\n    - zope.deprecation = 4.2.0\n    - zope.interface = 4.3.3\n    - zope.testbrowser = 5.2\n    - zope.testing = 4.6.1\n    - zope.testrunner = 4.6.0\n    - zope.globalrequest = 1.3\n    - zope.testing = 4.6.0\n    - ZServer = 4.0a2\n\nRestructuring\n+++++++++++++\n\n- Integrate code from and drop dependency on `five.globalrequest`.\n\n- Remove special handling of redirect and unauthorized exceptions from\n  the WSGI publisher. These are now always raised as exceptions, to\n  match the behavior of all other HTTPExceptions.\n\n- Removed xml-export.\n  [maurits, pbauer]\n\n- Add back ZCacheable support.\n\n- Update to zope.testbrowser 5.0 and its WebTest based implementation.\n\n- Use `@implementer` and `@adapter` class decorators.\n\n\n4.0a2 (2016-09-09)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Quote variable in manage_tabs to avoid XSS.\n  From Products.PloneHotfix20160830.  [maurits]\n\n- Remove more HelpSys references.\n\nFeatures Added\n++++++++++++++\n\n- Add support for exception views to WSGIPublisher.\n\n- Add support for ConflictError and TransientError retry logic directly\n  into WSGIPublisher.\n\n- Add support for raising HTTPOK and HTTPRedirection exceptions and\n  have them result in successful transactions.\n\n- Add better blob support to HTTPRequest.ZopeFieldStorage.\n\n- Updated distributions:\n\n  - AccessControl = 4.0a3\n  - AuthEncoding = 4.0.0\n  - Products.ZCatalog = 4.0a2\n  - zExceptions = 3.3\n  - ZServer = 4.0a1\n\nRestructuring\n+++++++++++++\n\n- Change the WSGIResponse exception methods to raise exceptions instead\n  of returning responses. This includes notFoundError, forbiddenError,\n  debugError, badRequestError, unauthorized and redirect.\n\n- Split a common HTTPBaseResponse base class out of HTTPResponse and\n  WSGIResponse. Move ZServer specific logic onto HTTPResponse.\n\n- Simplified `ZPublisher.WSGIPublisher.get_module_info` contract.\n\n- Add new `ZPublisher.utils.recordMetaData` function and use default\n  `transaction.manager` as the transaction manager.\n\n- Remove support for repoze.tm2.\n\n- Change Testing to use the WSGI publisher for functional and testbrowser\n  based tests incl. functional doctests. Alternatives are available\n  in `ZServer.Testing`.\n\n- Move `ZPublisher.Publish` module into ZServer distribution.\n\n- Remove `Globals` package, opened database are now found in\n  `Zope2.opened` next to `Zope2.DB`.\n\n- Remove proxy role support from DTML documents and methods.\n\n- Remove ZCacheable logic and StandardCacheManagers dependency.\n\n- Stop mixing in `Five.bbb.AcquisitionBBB` into browser components.\n\n- Integrate `five.pt` code directly into `Products.PageTemplates`.\n\n- Move `Products.SiteAccess` into ZServer distribution.\n\n- Simplify Page Template and Scripts ZMI screens.\n\n- Change VHM id to `virtual_hosting` to match AppInitializer.\n\n- Raise BadRequest instead of returning MessageDialog.\n\n- Remove property management ZMI screens.\n\n- Remove ZMI copy/cut/paste/rename and re-ordering features.\n\n- Drop `OFS.History` functionality.\n\n- Drop ZopeUndo dependency and move undo management to the control panel.\n\n- Simplify ZMI control panel and globally available management screens.\n\n- Move ZServer related testing support into ZServer.Testing.\n\n- Split out Lifetime, webdav and ZServer packages into a ZServer project.\n\n- Move webdav's EtagSupport, Lockable and LockItem into OFS.\n\n- Split `Products.TemporaryFolder` and `Products.ZODBMountPoint` into\n  one new project called `Products.TemporaryFolder`.\n\n- Split a WSGI part out of `zopeschema.xml`. This reduces the supported\n  `zope.conf` directives when run under WSGI.\n\n- Remove temp_folder mount point from default configuration.\n\n- Split a WSGI part out of `Zope2.Startup.ZopeStarter`.\n\n- Add new `ZServer.Zope2.Startup.config` module to hold configuration.\n\n- Remove `Control_Panel` `/DebugInfo` and `/DavLocks`.\n\n- Remove profiling support via `publisher-profile-file` directive.\n\n- Create new `Products.Sessions` distribution including Products.Sessions\n  and Products.Transience code.\n\n- Merge `Products.OFSP` project back in.\n\n- No longer test compatibility with dependencies:\n\n    ``Products.ExternalMethod``\n    ``Products.PythonScripts``\n    ``Products.Sessions``\n    ``Products.SiteErrorLog``\n    ``Products.TemporaryFolder``\n    ``tempstorage``\n    ``zLOG``\n    ``ZopeUndo``\n\n- Dropped dependency declarations for indirect dependencies:\n\n    ``docutils``\n    ``Missing``\n    ``pytz``\n    ``zLOG``\n    ``zope.sendmail``\n    ``zope.structuredtext``\n\n\n4.0a1 (2016-07-22)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Remove `Connection` and `Transfer-Encoding` headers from WSGI responses.\n  According to PEP 333 WSGI applications must not emit hop-by-hop headers.\n\n- Removed docstrings from some methods to avoid publishing them.  From\n  Products.PloneHotfix20160419.  [maurits]\n\n- bobo_traverse of ProductDispatcher did not correctly invalidate cache\n  when a product was not initializes after first access of the cache. Types\n  that were added in test-profiles were not useable.\n  [pbauer, jensens]\n\n- Fix pt_editForm after the help-system was removed.\n  [pbauer]\n\n- Skipped ipv6 test on Travis, because Travis no longer supports this.\n\n- LP #789863:  Ensure that Request objects cannot be published / traversed\n  directly via a URL.\n\n- Document running Zope as a WSGI application.\n\n- Queue additional warning filters at the beginning of the queue in order to\n  allow overrides.\n\n- Issue #16: prevent leaked connections when broken ``EndRequestEvent``\n  subscribers raise exceptions.\n\n- Ensure that the ``WSGIPublisher`` begins and ends an *interaction*\n  at the request/response barrier. This is required for instance for\n  the ``checkPermission`` call to function without an explicit\n  ``interaction`` parameter.\n\n- Made sure getConfiguration().default_zpublisher_encoding is set correctly.\n\n- Issue #28: Fix publishing of IStreamIterator. This interface does\n  not have seek or tell.\n  Introduce IUnboundStreamIterator to support publishing iterators\n  of unknown length.\n\n\nFeatures Added\n++++++++++++++\n\n- Include waitress as a default WSGI app server.\n\n- Add `egg:Zope2#httpexceptions` WSGI middleware.\n\n- Update available HTTP response code, 302 is now called Found.\n\n- Add a new `runwsgi` script to serve PasteDeploy files.\n\n- Depend on and automatically set up `five.globalrequest`.\n\n- Optimized the `OFS.ObjectManager.__contains__` method to do the\n  least amount of work necessary.\n\n- Optimized the `OFS.Traversable.getPhysicalPath` method to avoid excessive\n  amounts of method calls.\n\n- During startup open a connection to every configured database, to ensure all\n  of them can indeed be accessed. This avoids surprises during runtime when\n  traversal to some database mountpoint could fail as the underlying storage\n  cannot be opened at all.\n\n- Explicitly close all databases on shutdown, which ensures `Data.fs.index`\n  gets written to the file system.\n\n- Always configure a `blob-dir` in the default skeleton.\n\n- ZPublisher: If `IBrowserPage` is provided by a view, form input is decoded.\n  This makes it easier to use ``zope.formlib`` and ``z3c.form`` in Zope 2.\n\n- Remove `control panel` object from the ZODB.\n\n- Updated to latest versions of Zope Toolkit libraries.\n\n- Updated distributions:\n\n  - AccessControl = 4.0a1\n  - Acquisition = 4.2.2\n  - BTrees = 4.0.8\n  - DateTime = 4.1.1\n  - ExtensionClass = 4.1.2\n  - docutils = 0.9.1\n  - five.globalrequest = 1.0\n  - manuel = 1.6.0\n  - Missing = 3.1\n  - MultiMapping = 3.0\n  - Persistence = 3.0a1\n  - Products.BTreeFolder2 = 3.0\n  - Products.ExternalMethod = 3.0\n  - Products.MailHost = 3.0\n  - Products.OFSP = 3.0\n  - Products.PythonScripts = 3.0\n  - Products.SiteErrorLog = 4.0\n  - Products.StandardCacheManagers = 3.0\n  - Products.ZCatalog = 4.0a1\n  - Products.ZCTextIndex = 3.0\n  - Record = 3.1\n  - tempstorage = 3.0\n  - zExceptions = 3.0\n  - zLOG = 3.0\n  - zope.globalrequest = 1.2\n  - ZopeUndo = 4.1\n\nRestructuring\n+++++++++++++\n\n- Remove dependency on initgroups. Use the standard libraries os.initgroups\n  instead.\n\n- Removed nt_svcutils support from zopectl.\n\n- Python 2.6 is no longer supported. Use Python 2.7.\n\n- Products.SiteErrorLog: Is now a separated package.\n\n- OFS: Removed duplicate code in ZopeFind and ZopeFindAndApply\n\n- Five: Removed obsolete metaclass.\n\n- Five: Refactored ``browser:view`` and ``browser:page`` directives.\n  This makes their implementation more similar to that in ``zope.browserpage``\n  and adds allowed_interface support for the ``browser:view`` directive.\n  By default the `aq_*` attributes are no longer available on those\n  views/pages. If you still use them, you have to mix in Five's BrowserView.\n\n- Removed the (very obsolete) thread lock around the cookie parsing code\n  in HTTPRequest.py; the python `re` module is thread-safe, unlike the\n  ancient `regex` module that was once used here.\n\n- Removed the special handling of `Set-Cookie` headers in\n  `HTTPResponse.setHeader`. Use the `setCookie`/`appendCookie`/`expireCookie`\n  methods instead, or if low-level control is needed, use `addHeader` instead\n  to get the exact same effect.\n\n- Removed the `App.version_txt.getZopeVersion` API, you can use\n  ``pkg_resources.get_distribution('Zope2').version`` instead.\n\n- On the application object, removed `PrincipiaTime` in favor of `ZopeTime` and\n  `PrincipiaRedirect` in favor of `Redirect` or `ZopeRedirect`.\n\n- Removed `OFS.DefaultObservable` - an early predecessor of `zope.event`.\n\n- Removed `mime-types` option from `zope.conf`. You can use the `add_files`\n  API from `zope.contenttype` instead.\n\n- Removed `OFS.ZDOM`. `OFS.SimpleItem.Item` now implements `getParentNode()`.\n\n- Removed the last remaining code to support `SOFTWARE_HOME` and `ZOPE_HOME`.\n\n- Removed ZMI controls for restarting the process, these no longer apply when\n  managed as a WSGI application.\n\n- Removed `bobobase_modification_time` from `Persistence.Persistent`, you can\n  use `DateTime(object._p_mtime)` instead.\n\n- Removed `AccessRule` and `SiteRoot` from `Products.SiteAccess`.\n\n- Removed `Products.ZReST` and the `reStructuredText` wrapper, you can use\n  `docutils` directly to gain `reST` support.\n\n- Removed special code to create user folders and page templates while creating\n  new `OFS.Folder` instances.\n\n- Removed persistent default code like the `error_log` and `temp_folder`.\n\n- Removed persistent default content, including the `standard_error_message`\n  template.\n\n- Retired icons from the `Zope Management Interface` and various smaller\n  cleanups of ZMI screens.\n\n- Removed the old help system, in favor of the current Sphinx documentation\n  hosted at https://zope.readthedocs.io/. For backwards compatibility the\n  `registerHelp` and `registerHelpTitle` methods are still available on the\n  ProductContext used during the `initialize` function.\n\n- Removed various persistent product related code and options. The\n  `enable-product-installation` `zope.conf` setting is now a no-op.\n\n- Changed the value for `default-zpublisher-encoding` and\n  `management_page_charset` to `utf-8`.\n\n- Removed the `enable-ms-author-via` directive which was only required for\n  very old web folder implementations from before 2007.\n\n- Changed zope.conf default settings for `zserver-threads` to `2` and\n  `python-check-interval` to `1000`.\n\n- Simplified instance skeleton, removing old `Extensions`, `import`,\n  `lib/python` and `Products` from the default. You can continue to manually\n  add these back.\n\n- Five.browser: Marked `processInputs` and `setPageEncoding` as deprecated.\n  `processInputs` was replaced by the `postProcessInputs` request method and\n  the charset negotiation done by `setPageEncoding` was never fully supported.\n\n- Dropped the direct dependencies on packages that have been factored out of\n  the main Zope 2 tree. Make sure you declare a dependency in your own\n  distribution if you still use one of these:\n\n    ``Products.BTreeFolder2``\n    ``Products.ExternalMethod``\n    ``Products.MailHost``\n    ``Products.MIMETools``\n    ``Products.PythonScripts``\n    ``Products.SiteErrorLog``\n    ``Products.StandardCacheManagers``\n    ``Products.ZCatalog``\n    ``Record``\n", "##############################################################################\n#\n# Copyright (c) 2002 Zope Foundation and Contributors.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE\n#\n##############################################################################\n\"\"\"Image object\n\"\"\"\n\nimport struct\nfrom email.generator import _make_boundary\nfrom io import BytesIO\nfrom io import TextIOBase\nfrom tempfile import TemporaryFile\nfrom warnings import warn\n\nfrom six import PY2\nfrom six import binary_type\nfrom six import text_type\n\nimport ZPublisher.HTTPRequest\nfrom AccessControl.class_init import InitializeClass\nfrom AccessControl.Permissions import change_images_and_files  # NOQA\nfrom AccessControl.Permissions import ftp_access\nfrom AccessControl.Permissions import view as View\nfrom AccessControl.Permissions import view_management_screens\nfrom AccessControl.Permissions import webdav_access\nfrom AccessControl.SecurityInfo import ClassSecurityInfo\nfrom Acquisition import Implicit\nfrom App.special_dtml import DTMLFile\nfrom DateTime.DateTime import DateTime\nfrom OFS import bbb\nfrom OFS.Cache import Cacheable\nfrom OFS.interfaces import IWriteLock\nfrom OFS.PropertyManager import PropertyManager\nfrom OFS.role import RoleManager\nfrom OFS.SimpleItem import Item_w__name__\nfrom OFS.SimpleItem import PathReprProvider\nfrom Persistence import Persistent\nfrom zExceptions import Redirect\nfrom zExceptions import ResourceLockedError\nfrom zope.contenttype import guess_content_type\nfrom zope.datetime import rfc1123_date\nfrom zope.event import notify\nfrom zope.interface import implementer\nfrom zope.lifecycleevent import ObjectCreatedEvent\nfrom zope.lifecycleevent import ObjectModifiedEvent\nfrom ZPublisher import HTTPRangeSupport\nfrom ZPublisher.HTTPRequest import FileUpload\n\n\ntry:\n    from html import escape\nexcept ImportError:  # PY2\n    from cgi import escape\n\n\nmanage_addFileForm = DTMLFile(\n    'dtml/imageAdd',\n    globals(),\n    Kind='File',\n    kind='file',\n)\n\n\ndef manage_addFile(\n    self,\n    id,\n    file=b'',\n    title='',\n    precondition='',\n    content_type='',\n    REQUEST=None\n):\n    \"\"\"Add a new File object.\n\n    Creates a new File object 'id' with the contents of 'file'\"\"\"\n\n    id = str(id)\n    title = str(title)\n    content_type = str(content_type)\n    precondition = str(precondition)\n\n    id, title = cookId(id, title, file)\n\n    self = self.this()\n\n    # First, we create the file without data:\n    self._setObject(id, File(id, title, b'', content_type, precondition))\n\n    newFile = self._getOb(id)\n\n    # Now we \"upload\" the data.  By doing this in two steps, we\n    # can use a database trick to make the upload more efficient.\n    if file:\n        newFile.manage_upload(file)\n    if content_type:\n        newFile.content_type = content_type\n\n    notify(ObjectCreatedEvent(newFile))\n\n    if REQUEST is not None:\n        REQUEST.RESPONSE.redirect(self.absolute_url() + '/manage_main')\n\n\n@implementer(IWriteLock, HTTPRangeSupport.HTTPRangeInterface)\nclass File(\n    PathReprProvider,\n    Persistent,\n    Implicit,\n    PropertyManager,\n    RoleManager,\n    Item_w__name__,\n    Cacheable\n):\n    \"\"\"A File object is a content object for arbitrary files.\"\"\"\n\n    meta_type = 'File'\n    zmi_icon = 'far fa-file-archive'\n\n    security = ClassSecurityInfo()\n    security.declareObjectProtected(View)\n\n    precondition = ''\n    size = None\n\n    manage_editForm = DTMLFile('dtml/fileEdit', globals(),\n                               Kind='File', kind='file')\n    manage_editForm._setName('manage_editForm')\n\n    security.declareProtected(view_management_screens, 'manage')  # NOQA: D001\n    security.declareProtected(view_management_screens, 'manage_main')  # NOQA: D001,E501\n    manage = manage_main = manage_editForm\n    manage_uploadForm = manage_editForm\n\n    manage_options = (({'label': 'Edit', 'action': 'manage_main'},\n                       {'label': 'View', 'action': ''})\n                      + PropertyManager.manage_options\n                      + RoleManager.manage_options\n                      + Item_w__name__.manage_options\n                      + Cacheable.manage_options)\n\n    _properties = (\n        {'id': 'title', 'type': 'string'},\n        {'id': 'content_type', 'type': 'string'},\n    )\n\n    def __init__(self, id, title, file, content_type='', precondition=''):\n        self.__name__ = id\n        self.title = title\n        self.precondition = precondition\n\n        data, size = self._read_data(file)\n        content_type = self._get_content_type(file, data, id, content_type)\n        self.update_data(data, content_type, size)\n\n    def _if_modified_since_request_handler(self, REQUEST, RESPONSE):\n        # HTTP If-Modified-Since header handling: return True if\n        # we can handle this request by returning a 304 response\n        header = REQUEST.get_header('If-Modified-Since', None)\n        if header is not None:\n            header = header.split(';')[0]\n            # Some proxies seem to send invalid date strings for this\n            # header. If the date string is not valid, we ignore it\n            # rather than raise an error to be generally consistent\n            # with common servers such as Apache (which can usually\n            # understand the screwy date string as a lucky side effect\n            # of the way they parse it).\n            # This happens to be what RFC2616 tells us to do in the face of an\n            # invalid date.\n            try:\n                mod_since = int(DateTime(header).timeTime())\n            except Exception:\n                mod_since = None\n            if mod_since is not None:\n                if self._p_mtime:\n                    last_mod = int(self._p_mtime)\n                else:\n                    last_mod = 0\n                if last_mod > 0 and last_mod <= mod_since:\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setStatus(304)\n                    return True\n\n    def _range_request_handler(self, REQUEST, RESPONSE):\n        # HTTP Range header handling: return True if we've served a range\n        # chunk out of our data.\n        range = REQUEST.get_header('Range', None)\n        request_range = REQUEST.get_header('Request-Range', None)\n        if request_range is not None:\n            # Netscape 2 through 4 and MSIE 3 implement a draft version\n            # Later on, we need to serve a different mime-type as well.\n            range = request_range\n        if_range = REQUEST.get_header('If-Range', None)\n        if range is not None:\n            ranges = HTTPRangeSupport.parseRange(range)\n\n            if if_range is not None:\n                # Only send ranges if the data isn't modified, otherwise send\n                # the whole object. Support both ETags and Last-Modified dates!\n                if len(if_range) > 1 and if_range[:2] == 'ts':\n                    # ETag:\n                    if if_range != self.http__etag():\n                        # Modified, so send a normal response. We delete\n                        # the ranges, which causes us to skip to the 200\n                        # response.\n                        ranges = None\n                else:\n                    # Date\n                    date = if_range.split(';')[0]\n                    try:\n                        mod_since = int(DateTime(date).timeTime())\n                    except Exception:\n                        mod_since = None\n                    if mod_since is not None:\n                        if self._p_mtime:\n                            last_mod = int(self._p_mtime)\n                        else:\n                            last_mod = 0\n                        if last_mod > mod_since:\n                            # Modified, so send a normal response. We delete\n                            # the ranges, which causes us to skip to the 200\n                            # response.\n                            ranges = None\n\n            if ranges:\n                # Search for satisfiable ranges.\n                satisfiable = 0\n                for start, end in ranges:\n                    if start < self.size:\n                        satisfiable = 1\n                        break\n\n                if not satisfiable:\n                    RESPONSE.setHeader(\n                        'Content-Range', 'bytes */%d' % self.size\n                    )\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Content-Length', self.size)\n                    RESPONSE.setStatus(416)\n                    return True\n\n                ranges = HTTPRangeSupport.expandRanges(ranges, self.size)\n\n                if len(ranges) == 1:\n                    # Easy case, set extra header and return partial set.\n                    start, end = ranges[0]\n                    size = end - start\n\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Content-Length', size)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Content-Range',\n                        'bytes %d-%d/%d' % (start, end - 1, self.size)\n                    )\n                    RESPONSE.setStatus(206)  # Partial content\n\n                    data = self.data\n                    if isinstance(data, binary_type):\n                        RESPONSE.write(data[start:end])\n                        return True\n\n                    # Linked Pdata objects. Urgh.\n                    pos = 0\n                    while data is not None:\n                        length = len(data.data)\n                        pos = pos + length\n                        if pos > start:\n                            # We are within the range\n                            lstart = length - (pos - start)\n\n                            if lstart < 0:\n                                lstart = 0\n\n                            # find the endpoint\n                            if end <= pos:\n                                lend = length - (pos - end)\n\n                                # Send and end transmission\n                                RESPONSE.write(data[lstart:lend])\n                                break\n\n                            # Not yet at the end, transmit what we have.\n                            RESPONSE.write(data[lstart:])\n\n                        data = data.next\n\n                    return True\n\n                else:\n                    boundary = _make_boundary()\n\n                    # Calculate the content length\n                    size = (8 + len(boundary)  # End marker length\n                            + len(ranges) * (  # Constant lenght per set\n                                49 + len(boundary)\n                                + len(self.content_type)\n                                + len('%d' % self.size)))\n                    for start, end in ranges:\n                        # Variable length per set\n                        size = (size + len('%d%d' % (start, end - 1))\n                                + end - start)\n\n                    # Some clients implement an earlier draft of the spec, they\n                    # will only accept x-byteranges.\n                    draftprefix = (request_range is not None) and 'x-' or ''\n\n                    RESPONSE.setHeader('Content-Length', size)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader(\n                        'Content-Type',\n                        'multipart/%sbyteranges; boundary=%s' % (\n                            draftprefix,\n                            boundary,\n                        )\n                    )\n                    RESPONSE.setStatus(206)  # Partial content\n\n                    data = self.data\n                    # The Pdata map allows us to jump into the Pdata chain\n                    # arbitrarily during out-of-order range searching.\n                    pdata_map = {}\n                    pdata_map[0] = data\n\n                    for start, end in ranges:\n                        RESPONSE.write(\n                            b'\\r\\n--'\n                            + boundary.encode('ascii')\n                            + b'\\r\\n'\n                        )\n                        RESPONSE.write(\n                            b'Content-Type: '\n                            + self.content_type.encode('ascii')\n                            + b'\\r\\n'\n                        )\n                        RESPONSE.write(\n                            b'Content-Range: bytes '\n                            + str(start).encode('ascii')\n                            + b'-'\n                            + str(end - 1).encode('ascii')\n                            + b'/'\n                            + str(self.size).encode('ascii')\n                            + b'\\r\\n\\r\\n'\n                        )\n\n                        if isinstance(data, binary_type):\n                            RESPONSE.write(data[start:end])\n\n                        else:\n                            # Yippee. Linked Pdata objects. The following\n                            # calculations allow us to fast-forward through the\n                            # Pdata chain without a lot of dereferencing if we\n                            # did the work already.\n                            first_size = len(pdata_map[0].data)\n                            if start < first_size:\n                                closest_pos = 0\n                            else:\n                                closest_pos = (\n                                    ((start - first_size) >> 16 << 16)\n                                    + first_size\n                                )\n                            pos = min(closest_pos, max(pdata_map.keys()))\n                            data = pdata_map[pos]\n\n                            while data is not None:\n                                length = len(data.data)\n                                pos = pos + length\n                                if pos > start:\n                                    # We are within the range\n                                    lstart = length - (pos - start)\n\n                                    if lstart < 0:\n                                        lstart = 0\n\n                                    # find the endpoint\n                                    if end <= pos:\n                                        lend = length - (pos - end)\n\n                                        # Send and loop to next range\n                                        RESPONSE.write(data[lstart:lend])\n                                        break\n\n                                    # Not yet at the end,\n                                    # transmit what we have.\n                                    RESPONSE.write(data[lstart:])\n\n                                data = data.next\n                                # Store a reference to a Pdata chain link\n                                # so we don't have to deref during\n                                # this request again.\n                                pdata_map[pos] = data\n\n                    # Do not keep the link references around.\n                    del pdata_map\n\n                    RESPONSE.write(\n                        b'\\r\\n--' + boundary.encode('ascii') + b'--\\r\\n')\n                    return True\n\n    @security.protected(View)\n    def index_html(self, REQUEST, RESPONSE):\n        \"\"\"\n        The default view of the contents of a File or Image.\n\n        Returns the contents of the file or image.  Also, sets the\n        Content-Type HTTP header to the objects content type.\n        \"\"\"\n\n        if self._if_modified_since_request_handler(REQUEST, RESPONSE):\n            # we were able to handle this by returning a 304\n            # unfortunately, because the HTTP cache manager uses the cache\n            # API, and because 304 responses are required to carry the Expires\n            # header for HTTP/1.1, we need to call ZCacheable_set here.\n            # This is nonsensical for caches other than the HTTP cache manager\n            # unfortunately.\n            self.ZCacheable_set(None)\n            return b''\n\n        if self.precondition and hasattr(self, str(self.precondition)):\n            # Grab whatever precondition was defined and then\n            # execute it.  The precondition will raise an exception\n            # if something violates its terms.\n            c = getattr(self, str(self.precondition))\n            if hasattr(c, 'isDocTemp') and c.isDocTemp:\n                c(REQUEST['PARENTS'][1], REQUEST)\n            else:\n                c()\n\n        if self._range_request_handler(REQUEST, RESPONSE):\n            # we served a chunk of content in response to a range request.\n            return b''\n\n        RESPONSE.setHeader('Last-Modified', rfc1123_date(self._p_mtime))\n        RESPONSE.setHeader('Content-Type', self.content_type)\n        RESPONSE.setHeader('Content-Length', self.size)\n        RESPONSE.setHeader('Accept-Ranges', 'bytes')\n\n        if self.ZCacheable_isCachingEnabled():\n            result = self.ZCacheable_get(default=None)\n            if result is not None:\n                # We will always get None from RAMCacheManager and HTTP\n                # Accelerated Cache Manager but we will get\n                # something implementing the IStreamIterator interface\n                # from a \"FileCacheManager\"\n                return result\n\n        self.ZCacheable_set(None)\n\n        data = self.data\n        if isinstance(data, binary_type):\n            RESPONSE.setBase(None)\n            return data\n\n        while data is not None:\n            RESPONSE.write(data.data)\n            data = data.next\n\n        return b''\n\n    @security.protected(View)\n    def view_image_or_file(self, URL1):\n        \"\"\"The default view of the contents of the File or Image.\"\"\"\n        raise Redirect(URL1)\n\n    @security.protected(View)\n    def PrincipiaSearchSource(self):\n        \"\"\"Allow file objects to be searched.\"\"\"\n        if self.content_type.startswith('text/'):\n            return bytes(self.data)\n        return b''\n\n    @security.private\n    def update_data(self, data, content_type=None, size=None):\n        if isinstance(data, text_type):\n            raise TypeError('Data can only be bytes or file-like. '\n                            'Unicode objects are expressly forbidden.')\n\n        if content_type is not None:\n            self.content_type = content_type\n        if size is None:\n            size = len(data)\n        self.size = size\n        self.data = data\n        self.ZCacheable_invalidate()\n        self.ZCacheable_set(None)\n        self.http__refreshEtag()\n\n    def _get_encoding(self):\n        \"\"\"Get the canonical encoding for ZMI.\"\"\"\n        return ZPublisher.HTTPRequest.default_encoding\n\n    @security.protected(change_images_and_files)\n    def manage_edit(\n        self,\n        title,\n        content_type,\n        precondition='',\n        filedata=None,\n        REQUEST=None\n    ):\n        \"\"\"\n        Changes the title and content type attributes of the File or Image.\n        \"\"\"\n        if self.wl_isLocked():\n            raise ResourceLockedError(\"File is locked.\")\n\n        self.title = str(title)\n        self.content_type = str(content_type)\n        if precondition:\n            self.precondition = str(precondition)\n        elif self.precondition:\n            del self.precondition\n        if filedata is not None:\n            if isinstance(filedata, text_type):\n                filedata = filedata.encode(self._get_encoding())\n            self.update_data(filedata, content_type, len(filedata))\n        else:\n            self.ZCacheable_invalidate()\n\n        notify(ObjectModifiedEvent(self))\n\n        if REQUEST:\n            message = \"Saved changes.\"\n            return self.manage_main(\n                self, REQUEST, manage_tabs_message=message)\n\n    @security.protected(change_images_and_files)\n    def manage_upload(self, file='', REQUEST=None):\n        \"\"\"\n        Replaces the current contents of the File or Image object with file.\n\n        The file or images contents are replaced with the contents of 'file'.\n        \"\"\"\n        if self.wl_isLocked():\n            raise ResourceLockedError(\"File is locked.\")\n\n        if file:\n            data, size = self._read_data(file)\n            content_type = self._get_content_type(file, data, self.__name__,\n                                                  'application/octet-stream')\n            self.update_data(data, content_type, size)\n            notify(ObjectModifiedEvent(self))\n            msg = 'Saved changes.'\n        else:\n            msg = 'Please select a file to upload.'\n\n        if REQUEST:\n            return self.manage_main(\n                self, REQUEST, manage_tabs_message=msg)\n\n    def _get_content_type(self, file, body, id, content_type=None):\n        \"\"\"return content type or ``None``.\n\n        *file* usually is a ``FileUpload`` (like) instance; if this\n        specifies a content type, it is used. If *file*\n        is not ``FileUpload`` like, it is ignored and the\n        content type is guessed from the other parameters.\n\n        *body* is either a ``bytes`` or a ``Pdata`` instance\n        and assumed to be the *file* data.\n        \"\"\"\n        headers = getattr(file, 'headers', None)\n        if headers and 'content-type' in headers:\n            content_type = headers['content-type']\n        else:\n            if not isinstance(body, bytes):\n                body = body.data\n            content_type, enc = guess_content_type(\n                getattr(file, 'filename', id), body, content_type)\n        return content_type\n\n    def _read_data(self, file):\n        \"\"\"return the data and size of *file* as tuple *data*, *size*.\n\n        *file* can be a ``bytes``, ``Pdata``, ``FileUpload`` or\n        (binary) file like instance.\n\n        For large files, *data* is a ``Pdata``, otherwise a ``bytes`` instance.\n        \"\"\"\n        import transaction\n\n        n = 1 << 16\n\n        if isinstance(file, text_type):\n            raise ValueError(\"Must be bytes\")\n\n        if isinstance(file, bytes):\n            size = len(file)\n            if size < n:\n                return (file, size)\n            # Big string: cut it into smaller chunks\n            file = BytesIO(file)\n\n        if isinstance(file, FileUpload) and not file:\n            raise ValueError('File not specified')\n\n        if hasattr(file, '__class__') and file.__class__ is Pdata:\n            size = len(file)\n            return (file, size)\n\n        seek = file.seek\n        read = file.read\n\n        seek(0, 2)\n        size = end = file.tell()\n\n        if size <= 2 * n:\n            seek(0)\n            if size < n:\n                return read(size), size\n            return Pdata(read(size)), size\n\n        # Make sure we have an _p_jar, even if we are a new object, by\n        # doing a sub-transaction commit.\n        transaction.savepoint(optimistic=True)\n\n        if self._p_jar is None:\n            # Ugh\n            seek(0)\n            return Pdata(read(size)), size\n\n        # Now we're going to build a linked list from back\n        # to front to minimize the number of database updates\n        # and to allow us to get things out of memory as soon as\n        # possible.\n        _next = None\n        while end > 0:\n            pos = end - n\n            if pos < n:\n                pos = 0  # we always want at least n bytes\n            seek(pos)\n\n            # Create the object and assign it a next pointer\n            # in the same transaction, so that there is only\n            # a single database update for it.\n            data = Pdata(read(end - pos))\n            self._p_jar.add(data)\n            data.next = _next\n\n            # Save the object so that we can release its memory.\n            transaction.savepoint(optimistic=True)\n            data._p_deactivate()\n            # The object should be assigned an oid and be a ghost.\n            assert data._p_oid is not None\n            assert data._p_state == -1\n\n            _next = data\n            end = pos\n\n        return (_next, size)\n\n    @security.protected(change_images_and_files)\n    def PUT(self, REQUEST, RESPONSE):\n        \"\"\"Handle HTTP PUT requests\"\"\"\n        self.dav__init(REQUEST, RESPONSE)\n        self.dav__simpleifhandler(REQUEST, RESPONSE, refresh=1)\n\n        type = REQUEST.get_header('content-type', None)\n        file = REQUEST['BODYFILE']\n\n        # Work around ``cgi`` bug\n        # ``cgi`` can turn the request body into a text file using\n        # the default encoding. ``File``, however, insists to work\n        # with bytes and binary files and forbids text.\n        # Convert back.\n        tfile = None\n        if isinstance(file, TextIOBase):  # ``cgi`` bug\n            if hasattr(file, \"buffer\"):\n                file = file.buffer  # underlying binary buffer\n            else:\n                from ZPublisher.HTTPRequest import default_encoding\n                tfile = TemporaryFile(\"wb+\")\n                bufsize = 1 << 16\n                while True:\n                    data = file.read(bufsize)\n                    if not data:\n                        break\n                    tfile.write(data.encode(default_encoding))\n                file.seek(0, 0)\n                tfile.seek(0, 0)\n                file = tfile\n\n        data, size = self._read_data(file)\n        if tfile is not None:\n            tfile.close()\n        content_type = self._get_content_type(file, data, self.__name__,\n                                              type or self.content_type)\n        self.update_data(data, content_type, size)\n\n        RESPONSE.setStatus(204)\n        return RESPONSE\n\n    @security.protected(View)\n    def get_size(self):\n        # Get the size of a file or image.\n        # Returns the size of the file or image.\n        size = self.size\n        if size is None:\n            size = len(self.data)\n        return size\n\n    # deprecated; use get_size!\n    getSize = get_size\n\n    @security.protected(View)\n    def getContentType(self):\n        # Get the content type of a file or image.\n        # Returns the content type (MIME type) of a file or image.\n        return self.content_type\n\n    def __bytes__(self):\n        return bytes(self.data)\n\n    def __str__(self):\n        if PY2:\n            return str(self.data)\n        else:\n            if isinstance(self.data, Pdata):\n                return bytes(self.data).decode(self._get_encoding())\n            else:\n                return self.data.decode(self._get_encoding())\n\n    def __bool__(self):\n        return True\n\n    __nonzero__ = __bool__\n\n    def __len__(self):\n        data = bytes(self.data)\n        return len(data)\n\n    @security.protected(webdav_access)\n    def manage_DAVget(self):\n        \"\"\"Return body for WebDAV.\"\"\"\n        RESPONSE = self.REQUEST.RESPONSE\n\n        if self.ZCacheable_isCachingEnabled():\n            result = self.ZCacheable_get(default=None)\n            if result is not None:\n                # We will always get None from RAMCacheManager but we will\n                # get something implementing the IStreamIterator interface\n                # from FileCacheManager.\n                # the content-length is required here by HTTPResponse.\n                RESPONSE.setHeader('Content-Length', self.size)\n                return result\n\n        data = self.data\n        if isinstance(data, binary_type):\n            RESPONSE.setBase(None)\n            return data\n\n        while data is not None:\n            RESPONSE.write(data.data)\n            data = data.next\n\n        return b''\n\n    if bbb.HAS_ZSERVER:\n\n        @security.protected(ftp_access)\n        def manage_FTPget(self):\n            \"\"\"Return body for ftp.\"\"\"\n            warn(u'manage_FTPget is deprecated and will be removed in Zope 5.',\n                 DeprecationWarning, stacklevel=2)\n            return self.manage_DAVget()\n\n\nInitializeClass(File)\n\n\nmanage_addImageForm = DTMLFile(\n    'dtml/imageAdd',\n    globals(),\n    Kind='Image',\n    kind='image',\n)\n\n\ndef manage_addImage(\n    self,\n    id,\n    file,\n    title='',\n    precondition='',\n    content_type='',\n    REQUEST=None\n):\n    \"\"\"\n    Add a new Image object.\n\n    Creates a new Image object 'id' with the contents of 'file'.\n    \"\"\"\n    id = str(id)\n    title = str(title)\n    content_type = str(content_type)\n    precondition = str(precondition)\n\n    id, title = cookId(id, title, file)\n\n    self = self.this()\n\n    # First, we create the image without data:\n    self._setObject(id, Image(id, title, b'', content_type, precondition))\n\n    newFile = self._getOb(id)\n\n    # Now we \"upload\" the data.  By doing this in two steps, we\n    # can use a database trick to make the upload more efficient.\n    if file:\n        newFile.manage_upload(file)\n    if content_type:\n        newFile.content_type = content_type\n\n    notify(ObjectCreatedEvent(newFile))\n\n    if REQUEST is not None:\n        try:\n            url = self.DestinationURL()\n        except Exception:\n            url = REQUEST['URL1']\n        REQUEST.RESPONSE.redirect('%s/manage_main' % url)\n    return id\n\n\ndef getImageInfo(data):\n    data = bytes(data)\n    size = len(data)\n    height = -1\n    width = -1\n    content_type = ''\n\n    # handle GIFs\n    if (size >= 10) and data[:6] in (b'GIF87a', b'GIF89a'):\n        # Check to see if content_type is correct\n        content_type = 'image/gif'\n        w, h = struct.unpack(\"<HH\", data[6:10])\n        width = int(w)\n        height = int(h)\n\n    # See PNG v1.2 spec (http://www.cdrom.com/pub/png/spec/)\n    # Bytes 0-7 are below, 4-byte chunk length, then 'IHDR'\n    # and finally the 4-byte width, height\n    elif (size >= 24\n          and data[:8] == b'\\211PNG\\r\\n\\032\\n'\n          and data[12:16] == b'IHDR'):\n        content_type = 'image/png'\n        w, h = struct.unpack(\">LL\", data[16:24])\n        width = int(w)\n        height = int(h)\n\n    # Maybe this is for an older PNG version.\n    elif (size >= 16) and (data[:8] == b'\\211PNG\\r\\n\\032\\n'):\n        # Check to see if we have the right content type\n        content_type = 'image/png'\n        w, h = struct.unpack(\">LL\", data[8:16])\n        width = int(w)\n        height = int(h)\n\n    # handle JPEGs\n    elif (size >= 2) and (data[:2] == b'\\377\\330'):\n        content_type = 'image/jpeg'\n        jpeg = BytesIO(data)\n        jpeg.read(2)\n        b = jpeg.read(1)\n        try:\n            while (b and ord(b) != 0xDA):\n                while (ord(b) != 0xFF):\n                    b = jpeg.read(1)\n                while (ord(b) == 0xFF):\n                    b = jpeg.read(1)\n                if (ord(b) >= 0xC0 and ord(b) <= 0xC3):\n                    jpeg.read(3)\n                    h, w = struct.unpack(\">HH\", jpeg.read(4))\n                    break\n                else:\n                    jpeg.read(int(struct.unpack(\">H\", jpeg.read(2))[0]) - 2)\n                b = jpeg.read(1)\n            width = int(w)\n            height = int(h)\n        except Exception:\n            pass\n\n    return content_type, width, height\n\n\nclass Image(File):\n    \"\"\"Image objects can be GIF, PNG or JPEG and have the same methods\n    as File objects.  Images also have a string representation that\n    renders an HTML 'IMG' tag.\n    \"\"\"\n\n    meta_type = 'Image'\n    zmi_icon = 'far fa-file-image'\n\n    security = ClassSecurityInfo()\n    security.declareObjectProtected(View)\n\n    alt = ''\n    height = ''\n    width = ''\n\n    # FIXME: Redundant, already in base class\n    security.declareProtected(change_images_and_files, 'manage_edit')  # NOQA: D001,E501\n    security.declareProtected(change_images_and_files, 'manage_upload')  # NOQA: D001,E501\n    security.declareProtected(View, 'index_html')  # NOQA: D001\n    security.declareProtected(View, 'get_size')  # NOQA: D001\n    security.declareProtected(View, 'getContentType')  # NOQA: D001\n\n    _properties = (\n        {'id': 'title', 'type': 'string'},\n        {'id': 'alt', 'type': 'string'},\n        {'id': 'content_type', 'type': 'string', 'mode': 'w'},\n        {'id': 'height', 'type': 'string'},\n        {'id': 'width', 'type': 'string'},\n    )\n\n    manage_options = (\n        ({'label': 'Edit', 'action': 'manage_main'},\n         {'label': 'View', 'action': 'view_image_or_file'})\n        + PropertyManager.manage_options\n        + RoleManager.manage_options\n        + Item_w__name__.manage_options\n        + Cacheable.manage_options\n    )\n\n    manage_editForm = DTMLFile(\n        'dtml/imageEdit',\n        globals(),\n        Kind='Image',\n        kind='image',\n    )\n    manage_editForm._setName('manage_editForm')\n\n    security.declareProtected(View, 'view_image_or_file')  # NOQA: D001\n    view_image_or_file = DTMLFile('dtml/imageView', globals())\n\n    security.declareProtected(view_management_screens, 'manage')  # NOQA: D001\n    security.declareProtected(view_management_screens, 'manage_main')  # NOQA: D001,E501\n    manage = manage_main = manage_editForm\n    manage_uploadForm = manage_editForm\n\n    @security.private\n    def update_data(self, data, content_type=None, size=None):\n        if isinstance(data, text_type):\n            raise TypeError('Data can only be bytes or file-like.  '\n                            'Unicode objects are expressly forbidden.')\n\n        if size is None:\n            size = len(data)\n\n        self.size = size\n        self.data = data\n\n        ct, width, height = getImageInfo(data)\n        if ct:\n            content_type = ct\n        if width >= 0 and height >= 0:\n            self.width = width\n            self.height = height\n\n        # Now we should have the correct content type, or still None\n        if content_type is not None:\n            self.content_type = content_type\n\n        self.ZCacheable_invalidate()\n        self.ZCacheable_set(None)\n        self.http__refreshEtag()\n\n    def __bytes__(self):\n        return self.tag().encode('utf-8')\n\n    def __str__(self):\n        return self.tag()\n\n    @security.protected(View)\n    def tag(\n        self,\n        height=None,\n        width=None,\n        alt=None,\n        scale=0,\n        xscale=0,\n        yscale=0,\n        css_class=None,\n        title=None,\n        **args\n    ):\n        \"\"\"Generate an HTML IMG tag for this image, with customization.\n\n        Arguments to self.tag() can be any valid attributes of an IMG tag.\n        'src' will always be an absolute pathname, to prevent redundant\n        downloading of images. Defaults are applied intelligently for\n        'height', 'width', and 'alt'. If specified, the 'scale', 'xscale',\n        and 'yscale' keyword arguments will be used to automatically adjust\n        the output height and width values of the image tag.\n        #\n        Since 'class' is a Python reserved word, it cannot be passed in\n        directly in keyword arguments which is a problem if you are\n        trying to use 'tag()' to include a CSS class. The tag() method\n        will accept a 'css_class' argument that will be converted to\n        'class' in the output tag to work around this.\n        \"\"\"\n        if height is None:\n            height = self.height\n        if width is None:\n            width = self.width\n\n        # Auto-scaling support\n        xdelta = xscale or scale\n        ydelta = yscale or scale\n\n        if xdelta and width:\n            width = str(int(round(int(width) * xdelta)))\n        if ydelta and height:\n            height = str(int(round(int(height) * ydelta)))\n\n        result = '<img src=\"%s\"' % (self.absolute_url())\n\n        if alt is None:\n            alt = getattr(self, 'alt', '')\n        result = '%s alt=\"%s\"' % (result, escape(alt, True))\n\n        if title is None:\n            title = getattr(self, 'title', '')\n        result = '%s title=\"%s\"' % (result, escape(title, True))\n\n        if height:\n            result = '%s height=\"%s\"' % (result, height)\n\n        if width:\n            result = '%s width=\"%s\"' % (result, width)\n\n        if css_class is not None:\n            result = '%s class=\"%s\"' % (result, css_class)\n\n        for key in list(args.keys()):\n            value = args.get(key)\n            if value:\n                result = '%s %s=\"%s\"' % (result, key, value)\n\n        return '%s />' % result\n\n\nInitializeClass(Image)\n\n\ndef cookId(id, title, file):\n    if not id and hasattr(file, 'filename'):\n        filename = file.filename\n        title = title or filename\n        id = filename[max(filename.rfind('/'),\n                          filename.rfind('\\\\'),\n                          filename.rfind(':'),\n                          ) + 1:]\n    return id, title\n\n\nclass Pdata(Persistent, Implicit):\n    # Wrapper for possibly large data\n\n    next = None\n\n    def __init__(self, data):\n        self.data = data\n\n    if PY2:\n        def __getslice__(self, i, j):\n            return self.data[i:j]\n\n    def __getitem__(self, key):\n        return self.data[key]\n\n    def __len__(self):\n        data = bytes(self)\n        return len(data)\n\n    def __bytes__(self):\n        _next = self.next\n        if _next is None:\n            return self.data\n\n        r = [self.data]\n        while _next is not None:\n            self = _next\n            r.append(self.data)\n            _next = self.next\n\n        return b''.join(r)\n\n    if PY2:\n        __str__ = __bytes__\n", "# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport time\nimport unittest\nfrom io import BytesIO\n\nimport six\nfrom six import PY3\n\nimport OFS.Image\nimport Testing.testbrowser\nimport Testing.ZopeTestCase\nimport transaction\nimport Zope2\nfrom Acquisition import aq_base\nfrom OFS.Application import Application\nfrom OFS.Cache import ZCM_MANAGERS\nfrom OFS.Image import Pdata\nfrom OFS.SimpleItem import SimpleItem\nfrom Testing.makerequest import makerequest\nfrom zExceptions import Redirect\nfrom zope.component import adapter\nfrom zope.datetime import rfc1123_date\nfrom zope.lifecycleevent.interfaces import IObjectCreatedEvent\nfrom zope.lifecycleevent.interfaces import IObjectModifiedEvent\nfrom ZPublisher.HTTPRequest import HTTPRequest\nfrom ZPublisher.HTTPResponse import HTTPResponse\n\n\nhere = os.path.dirname(os.path.abspath(__file__))\nfiledata = os.path.join(here, 'test.gif')\n\nZope2.startup_wsgi()\n\n\ndef makeConnection():\n    import ZODB\n    from ZODB.DemoStorage import DemoStorage\n\n    s = DemoStorage()\n    return ZODB.DB(s).open()\n\n\ndef aputrequest(file, content_type):\n    resp = HTTPResponse(stdout=sys.stdout)\n    environ = {}\n    environ['SERVER_NAME'] = 'foo'\n    environ['SERVER_PORT'] = '80'\n    environ['REQUEST_METHOD'] = 'PUT'\n    environ['CONTENT_TYPE'] = content_type\n    req = HTTPRequest(stdin=file, environ=environ, response=resp)\n    return req\n\n\nclass DummyCache(object):\n\n    def __init__(self):\n        self.clear()\n\n    def ZCache_set(self, ob, data, view_name='', keywords=None,\n                   mtime_func=None):\n        self.set = (ob, data)\n\n    def ZCache_get(self, ob, data, view_name='', keywords=None,\n                   mtime_func=None):\n        self.get = ob\n        if self.si:\n            return self.si\n\n    def ZCache_invalidate(self, ob):\n        self.invalidated = ob\n\n    def clear(self):\n        self.set = None\n        self.get = None\n        self.invalidated = None\n        self.si = None\n\n    def setStreamIterator(self, si):\n        self.si = si\n\n\nADummyCache = DummyCache()\n\n\nclass DummyCacheManager(SimpleItem):\n    def ZCacheManager_getCache(self):\n        return ADummyCache\n\n\nclass EventCatcher(object):\n\n    def __init__(self):\n        self.created = []\n        self.modified = []\n        self.setUp()\n\n    def setUp(self):\n        from zope.component import provideHandler\n        provideHandler(self.handleCreated)\n        provideHandler(self.handleModified)\n\n    def tearDown(self):\n        from zope.component import getSiteManager\n        getSiteManager().unregisterHandler(self.handleCreated)\n        getSiteManager().unregisterHandler(self.handleModified)\n\n    def reset(self):\n        self.created = []\n        self.modified = []\n\n    @adapter(IObjectCreatedEvent)\n    def handleCreated(self, event):\n        if isinstance(event.object, OFS.Image.File):\n            self.created.append(event)\n\n    @adapter(IObjectModifiedEvent)\n    def handleModified(self, event):\n        if isinstance(event.object, OFS.Image.File):\n            self.modified.append(event)\n\n\nclass FileTests(unittest.TestCase):\n    content_type = 'application/octet-stream'\n    factory = 'manage_addFile'\n\n    def setUp(self):\n        with open(filedata, 'rb') as fd:\n            self.data = fd.read()\n        self.connection = makeConnection()\n        self.eventCatcher = EventCatcher()\n        try:\n            r = self.connection.root()\n            a = Application()\n            r['Application'] = a\n            self.root = a\n            responseOut = self.responseOut = BytesIO()\n            self.app = makerequest(self.root, stdout=responseOut)\n            self.app.dcm = DummyCacheManager()\n            factory = getattr(self.app, self.factory)\n            factory('file',\n                    file=self.data, content_type=self.content_type)\n            self.app.file.ZCacheable_setManagerId('dcm')\n            self.app.file.ZCacheable_setEnabled(enabled=1)\n            setattr(self.app, ZCM_MANAGERS, ('dcm',))\n            # Hack, we need a _p_mtime for the file, so we make sure that it\n            # has one.\n            transaction.commit()\n        except Exception:\n            transaction.abort()\n            self.connection.close()\n            raise\n        transaction.begin()\n        self.file = getattr(self.app, 'file')\n\n        # Since we do the create here, let's test the events here too\n        self.assertEqual(1, len(self.eventCatcher.created))\n        self.assertTrue(\n            aq_base(self.eventCatcher.created[0].object) is aq_base(self.file))\n\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(\n            aq_base(self.eventCatcher.created[0].object) is aq_base(self.file))\n\n        self.eventCatcher.reset()\n\n    def tearDown(self):\n        del self.file\n        transaction.abort()\n        self.connection.close()\n        del self.app\n        del self.responseOut\n        del self.root\n        del self.connection\n        ADummyCache.clear()\n        self.eventCatcher.tearDown()\n\n    def testViewImageOrFile(self):\n        self.assertRaises(Redirect, self.file.view_image_or_file, 'foo')\n\n    def testUpdateData(self):\n        self.file.update_data(b'foo')\n        self.assertEqual(self.file.size, 3)\n        self.assertEqual(self.file.data, b'foo')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n\n    def testReadData(self):\n        s = b'a' * (2 << 16)\n        data, size = self.file._read_data(BytesIO(s))\n        self.assertIsInstance(data, Pdata)\n        self.assertEqual(bytes(data), s)\n        self.assertEqual(len(s), len(bytes(data)))\n        self.assertEqual(len(s), size)\n\n    def testBigPdata(self):\n        # Test that a big enough string is split into several Pdata\n        # From a file\n        s = b'a' * (1 << 16) * 3\n        data, size = self.file._read_data(BytesIO(s))\n        self.assertNotEqual(data.next, None)\n        # From a string\n        data, size = self.file._read_data(s)\n        self.assertNotEqual(data.next, None)\n\n    def testManageEditWithFileData(self):\n        self.file.manage_edit('foobar', 'text/plain', filedata=b'ASD')\n        self.assertEqual(self.file.title, 'foobar')\n        self.assertEqual(self.file.content_type, 'text/plain')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageEditWithoutFileData(self):\n        self.file.manage_edit('foobar', 'text/plain')\n        self.assertEqual(self.file.title, 'foobar')\n        self.assertEqual(self.file.content_type, 'text/plain')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageUpload(self):\n        f = BytesIO(b'jammyjohnson')\n        self.file.manage_upload(f)\n        self.assertEqual(self.file.data, b'jammyjohnson')\n        self.assertEqual(self.file.content_type, 'application/octet-stream')\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageUploadWithoutFileData(self):\n        self.file.manage_upload()\n        self.assertEqual(0, len(self.eventCatcher.modified))\n\n    def testIfModSince(self):\n        now = time.time()\n        e = {'SERVER_NAME': 'foo',\n             'SERVER_PORT': '80',\n             'REQUEST_METHOD': 'GET'}\n\n        # not modified since\n        t_notmod = rfc1123_date(now)\n        e['HTTP_IF_MODIFIED_SINCE'] = t_notmod\n        out = BytesIO()\n        resp = HTTPResponse(stdout=out)\n        req = HTTPRequest(sys.stdin, e, resp)\n        data = self.file.index_html(req, resp)\n        self.assertEqual(resp.getStatus(), 304)\n        self.assertEqual(data, b'')\n\n        # modified since\n        t_mod = rfc1123_date(now - 100)\n        e['HTTP_IF_MODIFIED_SINCE'] = t_mod\n        out = BytesIO()\n        resp = HTTPResponse(stdout=out)\n        req = HTTPRequest(sys.stdin, e, resp)\n        data = self.file.index_html(req, resp)\n        self.assertEqual(resp.getStatus(), 200)\n        self.assertEqual(data, bytes(self.file.data))\n\n    def testPUT(self):\n        s = b'# some python\\n'\n\n        # with content type\n        data = BytesIO(s)\n        req = aputrequest(data, 'text/x-python')\n        req.processInputs()\n        self.file.PUT(req, req.RESPONSE)\n\n        self.assertEqual(self.file.content_type, 'text/x-python')\n        self.assertEqual(self.file.data, s)\n\n        # without content type\n        data.seek(0)\n        req = aputrequest(data, '')\n        req.processInputs()\n        self.file.PUT(req, req.RESPONSE)\n\n        self.assertEqual(self.file.content_type, 'text/x-python')\n        self.assertEqual(self.file.data, s)\n\n    def testIndexHtmlWithPdata(self):\n        self.file.manage_upload(b'a' * (2 << 16))  # 128K\n        self.file.index_html(self.app.REQUEST, self.app.REQUEST.RESPONSE)\n        self.assertTrue(self.app.REQUEST.RESPONSE._wrote)\n\n    def testIndexHtmlWithString(self):\n        self.file.manage_upload(b'a' * 100)  # 100 bytes\n        self.file.index_html(self.app.REQUEST, self.app.REQUEST.RESPONSE)\n        self.assertTrue(not self.app.REQUEST.RESPONSE._wrote)\n\n    def testPrincipiaSearchSource_not_text(self):\n        data = ''.join([chr(x) for x in range(256)])\n        if PY3:\n            data = data.encode('utf-8')\n        self.file.manage_edit('foobar', 'application/octet-stream',\n                              filedata=data)\n        self.assertEqual(self.file.PrincipiaSearchSource(), b'')\n\n    def testPrincipiaSearchSource_text(self):\n        self.file.manage_edit('foobar', 'text/plain',\n                              filedata=b'Now is the time for all good men to '\n                                       b'come to the aid of the Party.')\n        self.assertTrue(b'Party' in self.file.PrincipiaSearchSource())\n\n    def test_manage_DAVget_binary(self):\n        self.assertEqual(self.file.manage_DAVget(), self.data)\n\n    def test_manage_DAVget_text(self):\n        text = (b'Now is the time for all good men to '\n                b'come to the aid of the Party.')\n        self.file.manage_edit('foobar', 'text/plain', filedata=text)\n        self.assertEqual(self.file.manage_DAVget(), text)\n\n    def test_interfaces(self):\n        from OFS.Image import File\n        from OFS.interfaces import IWriteLock\n        from zope.interface.verify import verifyClass\n        from ZPublisher.HTTPRangeSupport import HTTPRangeInterface\n\n        verifyClass(HTTPRangeInterface, File)\n        verifyClass(IWriteLock, File)\n\n    def testUnicode(self):\n        val = u'some unicode string here'\n\n        self.assertRaises(TypeError, self.file.update_data,\n                          data=val, content_type='text/plain')\n\n    def testStr(self):\n        small_data = b'small data'\n        self.file.manage_upload(file=small_data)\n        self.assertEqual(str(self.file), small_data.decode())\n\n        # Make sure Pdata contents are handled correctly\n        big_data = b'a' * (2 << 16)\n        self.file.manage_upload(file=big_data)\n        self.assertEqual(str(self.file), big_data.decode())\n\n\nclass ImageTests(FileTests):\n    content_type = 'image/gif'\n    factory = 'manage_addImage'\n\n    def testUpdateData(self):\n        self.file.update_data(self.data)\n        self.assertEqual(self.file.size, len(self.data))\n        self.assertEqual(self.file.data, self.data)\n        self.assertEqual(self.file.width, 16)\n        self.assertEqual(self.file.height, 16)\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n\n    def testTag(self):\n        tag_fmt = ('<img src=\"http://nohost/file\" '\n                   'alt=\"%s\" title=\"%s\" height=\"16\" width=\"16\" />')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('', '')))\n        self.file.manage_changeProperties(title='foo')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('', 'foo')))\n        self.file.manage_changeProperties(alt='bar')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('bar', 'foo')))\n\n    testStr = testTag\n\n    def testViewImageOrFile(self):\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        result = self.file.index_html(request, response)\n        self.assertEqual(result, self.data)\n\n    def test_interfaces(self):\n        from OFS.Image import Image\n        from OFS.interfaces import IWriteLock\n        from zope.interface.verify import verifyClass\n\n        verifyClass(IWriteLock, Image)\n\n    def test_text_representation_is_tag(self):\n        self.assertEqual(six.text_type(self.file),\n                         '<img src=\"http://nohost/file\"'\n                         ' alt=\"\" title=\"\" height=\"16\" width=\"16\" />')\n\n\nclass FileEditTests(Testing.ZopeTestCase.FunctionalTestCase):\n    \"\"\"Browser testing ..Image.File\"\"\"\n\n    def setUp(self):\n        super(FileEditTests, self).setUp()\n        uf = self.app.acl_users\n        uf.userFolderAddUser('manager', 'manager_pass', ['Manager'], [])\n        self.app.manage_addFile('file')\n\n        transaction.commit()\n        self.browser = Testing.testbrowser.Browser()\n        self.browser.login('manager', 'manager_pass')\n\n    def test_Image__manage_main__1(self):\n        \"\"\"It shows the content of text files as text.\"\"\"\n        self.app.file.update_data(u'h\u00e4llo'.encode('utf-8'))\n        self.browser.open('http://localhost/file/manage_main')\n        text = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text, 'h\u00e4llo')\n\n    @unittest.skipIf(six.PY2, \"feature not supported on Python 2\")\n    def test_Image__manage_main__3(self):\n        \"\"\"It shows an error message if the file content cannot be decoded.\"\"\"\n        self.app.file.update_data(u'h\u00e4llo'.encode('latin-1'))\n        self.browser.open('http://localhost/file/manage_main')\n        self.assertIn(\n            \"The file could not be decoded with 'utf-8'.\",\n            self.browser.contents)\n\n    def test_Image__manage_upload__1(self):\n        \"\"\"It uploads a file, replaces the content and sets content type.\"\"\"\n        self.browser.open('http://localhost/file/manage_main')\n        self.browser.getControl(name='file').add_file(\n            b'test text file', 'text/plain', 'TestFile.txt')\n        self.browser.getControl('Upload File').click()\n        self.assertIn('Saved changes', self.browser.contents)\n        self.assertEqual(\n            self.browser.getControl('Content Type').value, 'text/plain')\n        text = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text, 'test text file')\n\n    def test_Image__manage_edit__1(self):\n        \"\"\"It it possible to change the file's content via browser.\"\"\"\n        self.browser.open('http://localhost/file/manage_main')\n        text_1 = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text_1, '')\n        self.browser.getControl(name='filedata:text').value = u'h\u00e4llo'\n        self.browser.getControl('Save Changes').click()\n        self.assertIn('Saved changes', self.browser.contents)\n        text_2 = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text_2, 'h\u00e4llo')\n"], "fixing_code": ["Change log\n==========\n\nThese are all the changes in Zope 4, starting with the alpha releases.\n\nThe change log for the previous version, Zope 2.13, is at\nhttps://zope.readthedocs.io/en/2.13/CHANGES.html\n\n\n4.8.10 (unreleased)\n-------------------\n\n- Allow only some image types to be displayed inline. Force download for\n  others, especially SVG images.  By default we use a list of allowed types.\n  You can switch a to a list of denied types by setting OS environment variable\n  ``OFS_IMAGE_USE_DENYLIST=1``.  You can override the allowed list with\n  environment variable ``ALLOWED_INLINE_MIMETYPES`` and the disallowed list\n  with ``DISALLOWED_INLINE_MIMETYPES``.  Separate multiple entries by either\n  comma or space.  This change only affects direct URL access.\n  ``<img src=\"image.svg\" />`` works the same as before. (CVE-2023-42458)\n  See `security advisory <https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v>`_.\n\n- Tighten down the ZMI frame source logic to only allow site-local sources.\n  Problem reported by Miguel Segovia Gil.\n\n\n4.8.9 (2023-09-05)\n------------------\n\n- Update ``RestrictedPython`` to version 5.4 to fix a potential a security\n  issue. (CVE-2023-41039)\n\n- Update ``AccessControl`` to version 4.4 to fix a potential a security\n  issue. (CVE-2023-41050)\n\n\n4.8.8 (2023-06-20)\n------------------\n\n- Sanitize tainting fixing\n  `#1095 <https://github.com/zopefoundation/Zope/issues/1095>`_\n\n- Restore filename on code objects of objects returned from\n  ``App.Extensions.getObject()``. This got lost in 4.0a6.\n\n\n4.8.7 (2023-01-10)\n------------------\n\n- Only set response header Content-Type as text/html on exception views when\n  the response has content.\n  (`#1089 <https://github.com/zopefoundation/Zope/issues/1089>`_)\n\n- Update dependencies to the latest releases for each supported Python version.\n\n\n4.8.6 (2022-12-19)\n------------------\n\n- Explicitly serve ``App.Dialogs.MessageDialog`` and exception views as HTML\n  due to the changed default content type from `#1075\n  <https://github.com/zopefoundation/Zope/pull/1075>`_.\n\n\n4.8.5 (2022-12-17)\n------------------\n\n- Fix some broken ZMI pages due to the changed default content type\n  from PR https://github.com/zopefoundation/Zope/pull/1075\n  (`#1078 <https://github.com/zopefoundation/Zope/issues/1078>`_)\n\n- Update dependencies to the latest releases for each supported Python version.\n\n\n4.8.4 (2022-12-16)\n------------------\n\n- Set the published default ``Content-Type`` header to ``text/plain``\n  if none has been set explicitly to prevent a cross-site scripting attack.\n  Also remove the old behavior of constructing an HTML page for published\n  methods returning a two-item tuple.\n\n- Update dependencies to the latest releases for each supported Python version.\n\n- Make ``Products.PageTemplates`` compatible with Chameleon 3.10.\n\n\n4.8.3 (2022-10-31)\n------------------\n\n- Update dependencies to the latest releases for each supported Python version.\n\n- Fix cookie path parameter handling:\n  If the cookie path value contains ``%`` it is assumed to be\n  fully quoted and used as is;\n  if it contains only characters allowed (unquoted)\n  in an URL path (with the exception of ``;``),\n  it is used as is; otherwise, it is quoted using Python's\n  ``urllib.parse.quote``\n  (`#1052 <https://github.com/zopefoundation/Zope/issues/1052>`_).\n\n- Change functional testing utilities to support percent encoded and unicode\n  paths (`#1058 <https://github.com/zopefoundation/Zope/issues/1058>`_).\n\n- Decode basic authentication header as utf-8, not latin1 anymore\n  (`#1061 <https://github.com/zopefoundation/Zope/issues/1061>`_).\n\n- Make ``ZPublisher.utils.basic_auth_encode`` support non-ascii strings on\n  Python 2\n  (`#1062 <https://github.com/zopefoundation/Zope/issues/1062>`_).\n\n\n4.8.2 (2022-06-01)\n------------------\n\n- Update ``waitress`` to version 2.1.2.\n\n- Fix version pin specifications for Python 3.6 compatibility.\n  (`#1036 <https://github.com/zopefoundation/Zope/issues/1036>`_)\n\n- Fix version pin specifications for Python 3.5 compatibility.\n\n- Add more notices to the documentation urging users to migrate to Zope 5.\n\n- Quote all components of a redirect URL (not only the path component)\n  (`#1027 <https://github.com/zopefoundation/Zope/issues/1027>`_)\n\n- Drop the convenience script generation from the buildout configuration\n  in order to get rid of a lot of dependency version pins.\n  These were only needed for maintainers who can install them manually.\n  (`#1019 <https://github.com/zopefoundation/Zope/issues/1019>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Strip leading ``.`` in cookie domain names.\n  (`#1041 <https://github.com/zopefoundation/Zope/pull/1041>`_)\n\n\n4.8.1 (2022-04-05)\n------------------\n\n- The pip requirements files ``requirements-full.txt`` and ``constraints.txt``\n  are now maintained manually.\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Update ``waitress`` to version 2.1.1 to mitigate a vulnerability in that\n  package. As ``waitress`` no longer supports Python versions less than\n  3.7 it is not advised to run Zope 4 on Python 2.7, 3.5 or 3.6 any longer,\n  even though they are still supported by Zope 4 itself.\n\n- To run ``bin/buildout`` inside the Zope project now ``zc.buildout >= 2.13.7``\n  or ``zc.buildout >= 3.0.0b1`` is required.\n\n\n4.8 (2022-03-10)\n----------------\n\n- Improve source documentation for methods ``_read_data`` and\n  ``get_content_type`` of ``OFS.Image.File`` and\n  fix its ``PUT``\n  (`#1015 <https://github.com/zopefoundation/Zope/issues/1015>`_).\n\n- Enhance cookie support. For details, see\n  `#1010 <https://github.com/zopefoundation/Zope/issues/1010>`_\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.7 (2022-01-09)\n----------------\n\n- Audit and fix all hyperlinks in code and documentation\n\n  - Change zope.org references to zope.dev due to ongoing domain ownership\n    issues. zope.dev is owned by the Plone Foundation and thus safe from\n    interference. XML/ZCML namespace URLs remain unchanged.\n  - Remove all links that are completely dead, such as the old zope.org\n    Collectors issue trackers.\n  - Update all other miscellaneous links to make them work again or remove if\n    the information is gone.\n\n- Improve type guessing for the default WebDAV PUT factory\n  (`#997 <https://github.com/zopefoundation/Zope/issues/997>`_)\n\n- Enable WebDAV PUT factories to change a newly created object's ID\n  (`#997 <https://github.com/zopefoundation/Zope/issues/997>`_)\n\n- Fix potential race condition in ``App.version_txt.getZopeVersion``\n  (`#999 <https://github.com/zopefoundation/Zope/issues/999>`_)\n\n- Reinstate simple sessioning with ``Products.TemporaryFolder``\n  because the underlying issues with ``tempstorage`` have been fixed.\n  (`#985 <https://github.com/zopefoundation/Zope/issues/985>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.3 (2021-07-31)\n------------------\n\n- Update the ``AccessControl`` version pin to fix a remote code execution issue\n  (see `AccessControl security advisory GHSA-qcx9-j53g-ccgf\n  <https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-qcx9-j53g-ccgf>`_)\n\n- Prevent ``DeprecationWarnings`` from moved imports in ``AccessControl``\n\n- make sure \"Manager\" users can always modify proxy roles\n  (`see Products.PythonScripts#50\n  <https://github.com/zopefoundation/Products.PythonScripts/issues/50>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.2 (2021-06-27)\n------------------\n\n- Backport stricter traversal checks from Zope 5\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6.1 (2021-06-08)\n------------------\n\n- Prevent unauthorized traversal through authorized Python modules in\n  TAL expressions\n\n- Facelift the Zope logo.\n  (`#973 <https://github.com/zopefoundation/Zope/issues/973>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.6 (2021-05-21)\n----------------\n\n- Prevent traversal to names starting with ``_`` in TAL expressions\n  and fix path expressions for the ``chameleon.tales`` expression engine.\n\n- Provide friendlier ZMI error message for the Transaction Undo form\n  (`#964 <https://github.com/zopefoundation/Zope/issues/964>`_)\n\n- Updated/fixed the poll application tutorial in the Zope Developers Guide\n  (`#958 <https://github.com/zopefoundation/Zope/issues/958>`_)\n\n- Depend on ``zope.datetime`` for the functions ``iso8601_date``,\n  ``rfc850_date``, and ``rfc1123_date`` which used to be in ``App.Common``\n  keeping backwards-compatibility imports in place.\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5.5 (2021-03-02)\n------------------\n\n- Enforce Zope permissions during recursive XML-RPC data dumps\n  (`#954 <https://github.com/zopefoundation/Zope/issues/954>`_)\n\n- The ``compute_size`` method properly returns None if the content does not\n  have a ``get_size`` method but the parent has.\n  (`#948 <https://github.com/zopefoundation/Zope/issues/948>`_)\n\n- Fix control panel tab links on all control panel pages\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5.4 (2021-02-10)\n------------------\n\n- Replace (in ``OFS``) the deprecated direct ``id`` access by\n  ``getId`` calls.\n  (`#903 <https://github.com/zopefoundation/Zope/issues/903>`_)\n\n- Update ZMI dependencies for Font Awesome, jQuery and bootstrap.\n\n- Revise debug info GUI\n  (`#937 <https://github.com/zopefoundation/Zope/pull/937>`_)\n\n- Fix rendering of not found resources.\n  (`#933 <https://github.com/zopefoundation/Zope/pull/933>`_)\n\n\n4.5.3 (2020-11-16)\n------------------\n\n- Update dependencies to the latest releases that still support Python 2.\n\nFixes\n+++++\n\n- Convert ``bytes`` (Python 3) and ``unicode`` (Python 2) values for\n  HTTP response headers into native strings using the HTTP/1.1\n  stipulated ``ISO-8859-1`` encoding. This makes ``waitress`` happy\n  which insists on native strings for those values.\n  (Fix for `#905 <https://github.com/zopefoundation/Zope/pull/905>`_)\n\n\n4.5.2 (2020-11-12)\n------------------\n\nBackward incompatible changes\n+++++++++++++++++++++++++++++\n\n- Exclude characters special for ``chameleon``'s interpolation syntax\n  (i.e. ``${}``) from use in TALES path expressions to reduce the failure risk\n  for the ``chameleon`` interpolation heuristics\n  (`#925 <https://github.com/zopefoundation/Zope/issues/925>`_)\n\nFixes\n+++++\n\n- Fix ``length`` for page template repeat variables\n  (`#913 <https://github.com/zopefoundation/Zope/issues/913>`_)\n\n- Restore the ZMI `Debug Information` control panel page\n  (`#898 <https://github.com/zopefoundation/Zope/issues/898>`_)\n\n- HTTP header encoding support\n  (`#905 <https://github.com/zopefoundation/Zope/pull/905>`_)\n\n- Provide a more senseful ``OFS.SimpleItem.Item_w__name__.id``\n  to avoid bugs by use of deprecated direct ``id`` access\n  (as e.g. `#903 <https://github.com/zopefoundation/Zope/issues/903>`_).\n\n- Fix ZMI visibility of pre elements in error log\n\n- Update dependencies to the latest releases that still support Python 2.\n\n- Update to ``zope.interface > 5.1.0`` to fix a memory leak.\n\n- Fix that ``ZTUtils.LazyFilter`` could not be imported inside a restricted\n  Python script.\n  (`#901 <https://github.com/zopefoundation/Zope/pull/901>`_)\n\n\n4.5.1 (2020-08-13)\n------------------\n\n- Avoid unsolicited translations\n  (`#876 <https://github.com/zopefoundation/Zope/issues/876>`_)\n\n- Make \"chameleon-zope context wrapping\" more faithful.\n  (`#873 <https://github.com/zopefoundation/Zope/pull/873/files>`_)\n\n- Let \"unicode conflict resolution\" work for all templates (not just\n  ``ZopePageTemplate``).\n  (`#872 <https://github.com/zopefoundation/Zope/pull/872/files>`_)\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.5 (2020-07-09)\n----------------\n\n- Make \"Unicode Conflict Resolution\" available for templates\n  rendered with ``chameleon``\n  (`Products.CMFPlone#3145\n  <https://github.com/plone/Products.CMFPlone/issues/3145>`_).\n\n- New interface ``Products.PageTemplates.interfaces.IZopeAwareEngine``.\n  It can be used as the \"provides\" of an adapter registration\n  to adapt a non ``Zope`` tales engine to an engine to be used\n  by ``Zope`` page templates\n  (`#864 <https://github.com/zopefoundation/Zope/issues/864>`_).\n  Currently, the adaptation is used only when the\n  template is rendered with ``chameleon``;\n  with ``zope.pagetemplate``, the engine is used\n  as is - this may change in the future.\n\n- Allow (some) builtins as first element of a (TALES) path expression:\n  in an untrusted context, the builtins from\n  ``AccessControl.safe_builtins`` are allowed;\n  in a trusted context, all Python builtins are allowed in addition\n  (and take precedence)\n  (`zope.tales#23 <https://github.com/zopefoundation/zope.tales/issues/23>`_).\n\n- Add ``tal:switch`` test\n\n- Support the ``attrs`` predefined template variable again (as\n  far as ``chameleon`` allows it)\n  (`#860 <https://github.com/zopefoundation/Zope/issues/860>`_).\n\n- Improve documentation of ``CONTEXTS`` in the \"Zope Book\".\n\n- Update dependencies to the latest releases that still support Python 2.\n\n\n4.4.4 (2020-06-26)\n------------------\n\n- Decrease cookie size for copy/paste clipboard cookie\n  (`#854 <https://github.com/zopefoundation/Zope/issues/854>`_)\n\n- Fix ``default`` keyword handling in page templates\n  (`#846 <https://github.com/zopefoundation/Zope/issues/846>`_)\n\n- Update dependencies to newest bugfix releases.\n\n\n4.4.3 (2020-06-16)\n------------------\n\n- Fix parsing of package version and show correct major version in the ZMI.\n\n- Improve solidity of the ``debugError`` method.\n  (`#829 <https://github.com/zopefoundation/Zope/issues/829>`_)\n\n- Use ``Chameleon`` (>= 3.7.2) configuration to get better\n  information for errors detected during template execution.\n  (`#837 <https://github.com/zopefoundation/Zope/issues/837>`_)\n\n- Update dependencies to newest releases.\n\n\n4.4.2 (2020-04-30)\n------------------\n\n- Fix faulty 4.4.1 release.\n\n\n4.4.1 (2020-04-30)\n------------------\n\n- Fix ``HEAD`` requests on registered views.\n  (`#816 <https://github.com/zopefoundation/Zope/issues/816>`_)\n\n- Pin ``AccessControl`` to 4.2, it gained a missing WebDAV permission name.\n\n\n4.4 (2020-03-31)\n----------------\n\n- Fix incompatiblities with ``Archetypes``\n\n- Require ``zope.tales>=5.0.2``\n\n- Fix issue 717 by fully honoring the engine returned by\n  ``PageTemplate.pt_getEngine``\n  (`#717 <https://github.com/zopefoundation/Zope/issues/717>`_).\n  The engine also decides about the use of ``zope.tales``\n  (engine is an instance of ``zope.pagetemplate.engine.ZopeBaseEngine``)\n  or ``chameleon.tales`` (otherwise) TALES expressions.\n\n- Fixed encoding issue of `displayname` WebDAV property\n  (`#797 <https://github.com/zopefoundation/Zope/issues/797>`_)\n\n- Fixed fallback implementation of ``manage_DAVget``\n  (`#799 <https://github.com/zopefoundation/Zope/issues/799>`_)\n\n\n4.3 (2020-02-25)\n----------------\n\n- Enable WebDAV support independent of ``ZServer``\n  (`#787 <https://github.com/zopefoundation/Zope/pull/787>`_)\n\n- Only use ``wsgi.file_wrapper`` for response bodies with a ``read`` method\n  (`#763 <https://github.com/zopefoundation/Zope/issues/763>`_)\n\n- Improve detection of HTTPS requests\n  (`#680 <https://github.com/zopefoundation/Zope/issues/680>`_)\n\n- Fix several ZMI links so they respect virtual hosting\n  (`#788 <https://github.com/zopefoundation/Zope/issues/788>`_)\n\n- Deprecate unused ``postProcessInputs`` request method for removal in Zope 5\n  (`#782 <https://github.com/zopefoundation/Zope/issues/782>`_)\n\n- Clean up and sanitize permissions used for WebDAV-related methods\n\n\n4.2.1 (2020-02-09)\n------------------\n\n- Repair Python 2.7 compatibility due to a Python 3-only import\n\n- Add shim modules with deprecation warnings for some ``webdav`` consumers\n\n- Prevent a UnicodeDecode error under Python 2 with non-ASCII properties\n\n\n4.2 (2020-02-09)\n----------------\n\n- Restore WebDAV support in Zope\n  (`#744 <https://github.com/zopefoundation/Zope/issues/744>`_)\n\n- Fix sort link URLs on ``manage_main``\n  (`#748 <https://github.com/zopefoundation/Zope/issues/748>`_)\n\n- Fix longstanding test bug by forcing the page template engine.\n  Many tests in ``Products.PageTemplates`` used the old Zope page template\n  engine because the correct one was not registered during setup.\n\n- Add deprecation warnings to the ``ZPublisher.maybe_lock`` module\n  (`#758 <https://github.com/zopefoundation/Zope/issues/758>`_)\n\n- Add deprecation warnings to Help System-related methods\n  (`#756 <https://github.com/zopefoundation/Zope/issues/756>`_)\n\n- Update to current releases of the dependencies\n\n\n4.1.3 (2019-12-01)\n------------------\n\n- Close opened db during shutdown (as ZServer is already doing).\n  (`#740 <https://github.com/zopefoundation/Zope/issues/740>`_)\n\n- Add ``Paste`` as ``extras_require`` dependency to pull in ``Paste`` when\n  installing with `pip` and `constraints.txt` to prevent startup errors.\n  This requires adding the ``[wsgi]`` extra in the egg specification.\n  (`#734 <https://github.com/zopefoundation/Zope/issues/734>`_)\n\n- Fix broken deprecated import when ZServer is not installed\n  (`#714 <https://github.com/zopefoundation/Zope/issues/714>`_)\n\n- Improve ZMI Security Tab usability for high numbers of roles\n  (`#730 <https://github.com/zopefoundation/Zope/issues/730>`_)\n\n- Some small ZMI rendering fixes\n  (`#729 <https://github.com/zopefoundation/Zope/issues/729>`_)\n\n- Fix error when using database minimize in the ZMI\n  (`#726 <https://github.com/zopefoundation/Zope/issues/726>`_)\n\n- Fix ``__getattr__`` signature in ``UnauthorizedBinding``\n  (`#703 <https://github.com/zopefoundation/Zope/issues/703>`_)\n\n- Set ``REMOTE_USER`` in wsgi environ using Zope user authentication\n  (`#713 <https://github.com/zopefoundation/Zope/pull/713>`_)\n\n- Add ``wsgi.file_wrapper`` implementation\n  https://www.python.org/dev/peps/pep-0333/#optional-platform-specific-file-handling\n  (`#719 <https://github.com/zopefoundation/Zope/pull/719>`_)\n\n- Fix VirtualHostMonster not being able to set mappings under Python 3.\n  (`#708 <https://github.com/zopefoundation/Zope/issues/708>`_)\n\n- Reduce the danger of acquiring built-in names on the ZMI Find tab\n  (`#712 <https://github.com/zopefoundation/Zope/issues/712>`_)\n\n- Restore the mistakenly removed Properties ZMI tab on Image objects\n  (`#706 <https://github.com/zopefoundation/Zope/issues/706>`_)\n\n- Fix ``OFS.Image.File.__str__`` for ``Pdata`` contents\n  (`#711 <https://github.com/zopefoundation/Zope/issues/711>`_)\n\n- Update to current releases of the dependencies.\n\n\n4.1.2 (2019-09-04)\n------------------\n\n- Resurrect ZMI History tab and functionality.\n\n- Remove commented out configuration for ``tempstorage`` (and server side\n  sessions) as that was known not working for ages. This was removed so we do\n  not lead unsuspecting developers to think that this is the right way to do\n  session data. See\n  (`#679 <https://github.com/zopefoundation/Zope/issues/679>`_)\n  (`tempstorage#8 <https://github.com/zopefoundation/tempstorage/issues/8>`_)\n  (`tempstorage#12 <https://github.com/zopefoundation/tempstorage/issues/12>`_)\n\n- Reuse ``zope.publisher.http.splitport`` instead of defining our own\n  (`#683 <https://github.com/zopefoundation/Zope/issues/683>`_)\n\n- Update to current releases of the dependencies.\n\n\n4.1.1 (2019-07-02)\n------------------\n\n- Document the Zope configuration options from the configuration schema itself\n  (`#571 <https://github.com/zopefoundation/Zope/issues/571>`_)\n\n- Update to current releases of the dependencies.\n\n- Fix broken ZMI when using non-root deployments.\n  (`#647 <https://github.com/zopefoundation/Zope/issues/647>`_)\n\n\n4.1 (2019-06-19)\n----------------\n\nFeatures\n++++++++\n\n- Resurrect ZODB packing from the ZMI.\n  (`#623 <https://github.com/zopefoundation/Zope/issues/623>`_)\n\n- Optionally control the use of Zope's built-in XML-RPC support for\n  POST requests with Content-Type ``text/xml`` via the\n  registration of a ``ZPublisher.interfaces.IXmlrpcChecker`` utility.\n  (`#620 <https://github.com/zopefoundation/Zope/issues/620>`_)\n\n- Document request parameter handling.\n  (`#636 <https://github.com/zopefoundation/Zope/issues/636>`_)\n\n\nFixes\n+++++\n\n- `allowed_attributes` and `allowed_interface` work again for BrowserViews.\n  (`#397 <https://github.com/zopefoundation/Zope/issues/397>`_)\n\n- Prevent encoding issues in existing DTML Method and DTML Document objects.\n\n- Fixed logic error in exceptions handling during publishing. This error would\n  prevent correct `Unauthorized` handling when exceptions debug mode was set.\n\n- Do not cache (implicit) request access to form data and cookies in ``other``.\n  (`#630 <https://github.com/zopefoundation/Zope/issues/630>`_)\n\n- Bring request lookup order related documentation in line with the\n  actual implementation.\n  (`#629 <https://github.com/zopefoundation/Zope/issues/629>`_)\n  Minor clean-up of ``HTTPRequest.get``.\n\n- Fix missing ``Paste`` distribution on installation using ``pip``.\n  (`#452 <https://github.com/zopefoundation/Zope/issues/452>`_)\n\nOther changes\n+++++++++++++\n\n- Fixed usability on ZMI Security tab forms for sites with many roles.\n\n- Update to current releases of most dependencies.\n\n\n4.0 (2019-05-10)\n----------------\n\nFixes\n+++++\n\n- Make sure new object IDs don't clash with the views lookup mechanism.\n  (`#591 <https://github.com/zopefoundation/Zope/issues/591>`_)\n\n- Be more careful when guessing at encoding for document template types.\n\n- Ensure a redirect path does not get URL-encoded twice.\n\n- Prevent inability to log into the ZMI due to failing exception views.\n\n- Harden ``RESPONSE.redirect`` to deal with any unencoded or encoded input.\n  (`#435 <https://github.com/zopefoundation/Zope/issues/435>`_)\n\n- Fix broken ``title_and_id`` behaviour.\n  (`#574 <https://github.com/zopefoundation/Zope/issues/574>`_)\n\n- Fix broken ZMI DTML rendering for mixed unicode/bytes content.\n  (`#271 <https://github.com/zopefoundation/Zope/issues/271>`_)\n\n- Fix wrong `Content-Length` set by ``App.ImageFile`` on 304 responses.\n  (`#513 <https://github.com/zopefoundation/Zope/issues/513>`_)\n\n- Make the ZMI `Find` tab work for searching HTML tags\n  by adding support for `Tainted` strings in ``ZopeFind``.\n\n- Prevent ``mkwsgiinstance`` from blowing up parsing ``buildout.cfg``.\n\n- Fix ``ZPublisher.HTTPResponse.HTTPBaseResponse.isHTML`` for binary data on\n  Python 3.\n  (`#577 <https://github.com/zopefoundation/Zope/pull/577>`_)\n\n- Prevent ``FindSupport.ZopeFind`` from throwing ``UnicodeDecodeErrors``.\n  (`#594 <https://github.com/zopefoundation/Zope/issues/594>`_)\n\nFeatures\n++++++++\n\n- Add a configuration flag to show bookmarkable URLs in the ZMI.\n  (`#580 <https://github.com/zopefoundation/Zope/issues/580>`_)\n\n- Add a flag for suppressing object events during file import.\n  (`#42 <https://github.com/zopefoundation/Zope/issues/42>`_)\n\n- Add a Configuration details tab to the Control_Panel.\n\n- Resurrect the Interfaces ZMI tab.\n  (`#450 <https://github.com/zopefoundation/Zope/issues/450>`_)\n\n- Better default logging configuration for simple waitress WSGI setups.\n  (`#526 <https://github.com/zopefoundation/Zope/issues/526>`_)\n\n- Replace usage of ``urllib.parse.splitport`` and ``urllib.parse.splittype``\n  which are deprecated in Python 3.8.\n  (`#476 <https://github.com/zopefoundation/Zope/pull/476>`_)\n\nOther changes\n+++++++++++++\n\n- Update ZODB migration documentation.\n\n- Expand the Zope 4 migration documentation.\n\n- Change the WSGI configuration template so those annoying waitress queue\n  messages only go into the event log, but not onto the console.\n\n- Change naming for the generated WSGI configurations to ``zope.conf`` and\n  ``zope.ini`` to match existing documentation for Zope configurations.\n  (`#571 <https://github.com/zopefoundation/Zope/issues/571>`_)\n\n- Make Zope write a PID file again under WSGI.\n  This makes interaction with sysadmin tools easier.\n  The PID file path can be set in the Zope configuration with ``pid-filename``,\n  just like in ``ZServer``-based configurations.\n\n- Exceptions during publishing are now re-raised in a new exceptions debug\n  mode to allow WSGI middleware to handle/debug it. See the `debug\n  documentation <https://zope.readthedocs.io/en/4.x/wsgi.html#werkzeug>`_\n  for examples.\n  (`#562 <https://github.com/zopefoundation/Zope/issues/562>`_)\n\n- Remove hardcoded list of factories that don't want an add dialog.\n  (`#540 <https://github.com/zopefoundation/Zope/issues/540>`_)\n\n- Increase link visibility in old ZMI forms.\n  (`#530 <https://github.com/zopefoundation/Zope/issues/530>`_)\n\n- Always keep action buttons visible on the content list for large folders.\n  (`#537 <https://github.com/zopefoundation/Zope/issues/537>`_)\n\n- Make showing the ZMI modal add dialog configurable per product.\n  (`#535 <https://github.com/zopefoundation/Zope/issues/535>`_)\n\n- Added a few Zope 4 ZMI screenshots to the documentation.\n  (`#378 <https://github.com/zopefoundation/Zope/issues/378>`_)\n\n- Refresh Sphinx configuration and switched to the ReadTheDocs theme.\n\n- Rename/move the `Zope 2 Book` to `Zope Book`.\n  (`#443 <https://github.com/zopefoundation/Zope/issues/443>`_)\n\n- Show item icons on ZMI `Find` tab results.\n  (`#534 <https://github.com/zopefoundation/Zope/issues/534>`_)\n\n- Full PEP-8 compliance.\n\n- Fix ZMI font rendering on macOS.\n  (`#531 <https://github.com/zopefoundation/Zope/issues/531>`_)\n\n- Provide a method to get breadcrumb length to prevent ZMI errors.\n  (`#533 <https://github.com/zopefoundation/Zope/issues/533>`_)\n\n- Add ``zodbupdate_rename_dict`` to move ``webdav.LockItem`` to\n  ``OFS.LockItem``.\n  (`Products.CMFPlone#2800 <https://github.com/plone/Products.CMFPlone/issues/2800>`_)\n\n\n4.0b10 (2019-03-08)\n-------------------\n\nFixes\n+++++\n\n- Fix import file drop down on import export page.\n  (`#524 <https://github.com/zopefoundation/Zope/issues/524>`_)\n\n- Resurrect copyright and license page.\n  (`#482 <https://github.com/zopefoundation/Zope/issues/482>`_)\n\n- Fix FindSupport binary value handling.\n  (`#406 <https://github.com/zopefoundation/Zope/issues/406>`_)\n\n- Fix remove double quoting in ``ZPublisher.HTTPRequest.search_type``\n  (`#511 <https://github.com/zopefoundation/Zope/issues/511>`_)\n\n- Fix subscript access on Page Template ``macros`` attribute.\n  (`#210 <https://github.com/zopefoundation/Zope/issues/210>`_)\n\n- Fix ``OFS.interfaces`` attribute declarations to match reality.\n  (`#498 <https://github.com/zopefoundation/Zope/issues/498>`_)\n\n- Fix handling of DTML in Ace editor.\n  (`#489 <https://github.com/zopefoundation/Zope/issues/489>`_)\n\n- Fix error when not selecting a file for upload in Files and Images.\n  (`#492 <https://github.com/zopefoundation/Zope/issues/492>`_)\n\n- Fix ZMI add handling of ``len(filtered_meta_types()) == 1``.\n  (`#505 <https://github.com/zopefoundation/Zope/issues/505>`_)\n\n- Fix ZMI add handling of ``addItemSelect`` form.\n  (`#506 <https://github.com/zopefoundation/Zope/issues/506>`_)\n\n- Don't always flag ``PubBeforeAbort`` and ``PubBeforeAbort`` as retry.\n  (`#502 <https://github.com/zopefoundation/Zope/pull/502>`_)\n\nFeatures\n++++++++\n\n- Specify supported Python versions using ``python_requires`` in `setup.py`.\n  (`#481 <https://github.com/zopefoundation/Zope/issues/481>`_)\n\n- Provide additional links on PyPI with ``project_urls`` in ``setup.py``\n  (`#434 <https://github.com/zopefoundation/Zope/issues/434>`_)\n\n- Resurrect automatic support for ``standard_error_message`` DTML Method.\n  (`#238 <https://github.com/zopefoundation/Zope/issues/238>`_)\n\nOther changes\n+++++++++++++\n\n- Make sure the WSGI Response object respects lock semantics.\n  (`#216 <https://github.com/zopefoundation/Zope/issues/216>`_)\n\n- Remove references to separate ``Products.ZCTextIndex``.\n  (`516 <https://github.com/zopefoundation/Zope/issues/516>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b9 (2019-02-09)\n------------------\n\nBreaking changes\n++++++++++++++++\n\n- Remove support for Bobo Call Interface\n  (`#462 <https://github.com/zopefoundation/Zope/pull/462>`_)\n\n- Remove support for ``management_page_charset``\n  (`#313 <https://github.com/zopefoundation/Zope/issues/313>`_)\n\nFeatures\n++++++++\n\n- Add preliminary support for Python 3.8. as of 3.8.0a1 is released.\n\n- Recreate ``App.version_txt.getZopeVersion``\n  (`#411 <https://github.com/zopefoundation/Zope/issues/411>`_)\n\nFixes\n+++++\n\n- Fix display of ZMI breadcrumbs with non-ASCII path elements\n  (`#401 <https://github.com/zopefoundation/Zope/issues/401>`_)\n\n- Make sure conflicts are always retried and not masked by exception views\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n- Fix faulty ZMI links due to missing URL-quoting\n  (`#391 <https://github.com/zopefoundation/Zope/issues/391>`_)\n\n- Fix configuring the maximum number of conflict retries\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n- Show the content add widget again on ZCatalogs\n  (`ZCatalog#45 <https://github.com/zopefoundation/Products.ZCatalog/issues/45>`_)\n\n- Improve showing/hiding of the left-hand tree pane\n  (`#457 <https://github.com/zopefoundation/Zope/issues/457>`_)\n\n- Restore the `View` ZMI tab on folders and their subclasses\n  (`#449 <https://github.com/zopefoundation/Zope/issues/449>`_)\n\n- Don't error out when showing permissions for a non-existent user\n  (`#437 <https://github.com/zopefoundation/Zope/issues/437>`_)\n\n- Fix ZMI listing view for narrow displays.\n  (`#471 <https://github.com/zopefoundation/Zope/pull/471>`_)\n\nOther changes\n+++++++++++++\n\n- Document filesystem caching for Chameleon page templates\n  and activate it by default for new WSGI instances\n  (`#291 <https://github.com/zopefoundation/Zope/issues/291>`_)\n\n- Remove obsolete environment variable \"Z_DEBUG_MODE\"\n  (`#445 <https://github.com/zopefoundation/Zope/issues/445>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b8 (2018-12-14)\n------------------\n\nNew features\n++++++++++++\n\n- Add wildcard rewrite to sub host name in VirtualHostMonster.\n  (`#317 <https://github.com/zopefoundation/Zope/issues/317>`_)\n\n- Add support for IPv6 hosts in VirtualHostMonster.\n  (`#314 <https://github.com/zopefoundation/Zope/pull/314>`_)\n\n- Add TestBrowser ``login`` method to set basic auth header.\n  (`#341 <https://github.com/zopefoundation/Zope/issues/341>`_)\n\nOther changes\n+++++++++++++\n\n- Add security declarations to ``SimpleItem.manage_FTPlist()`` and\n  ``Simplified.manage_FTPstat()`` instead of requiring classes extending\n  ``SimpleItem`` to do so.\n  (`#398 <https://github.com/zopefoundation/Zope/pull/398>`_)\n\n- Clarify prerequisites for building Zope in documentation.\n  (`#366 <https://github.com/zopefoundation/Zope/issues/366>`_)\n\n- Update dependencies to newest versions.\n\nFixes\n+++++\n\n- Restore missing Properties tab for DTML Documents\n  (`#409 <https://github.com/zopefoundation/Zope/issues/409>`_)\n\n- Add some CSS fixes for ZMI.\n\n- Sanitize file handling for uploading and adding DTML methods and documents.\n\n- Add a note about the ``app`` toplevel object in the debugger.\n\n- Show a message instead of an exception for empty file upload on PageTemplate.\n  (`#357 <https://github.com/zopefoundation/Zope/issues/357>`_)\n\n- Update cookie expiration method in a way Firefox 63+ understands.\n  (`#405 <https://github.com/zopefoundation/Zope/pull/405>`_)\n\n- Fix closing newly created request before processing it after a retryable\n  error has occurred.\n  (`#413 <https://github.com/zopefoundation/Zope/issues/413>`_)\n\n\n4.0b7 (2018-10-30)\n------------------\n\nSecurity related fixes\n++++++++++++++++++++++\n\n- ``HTTPRequest.text()`` now obscures values of fields those name\n  contain the string ``passw`` in the same way ``HTTPRequest.__str__`` already\n  did.\n  (`#375 <https://github.com/zopefoundation/Zope/issues/375>`_)\n\nBugfixes\n++++++++\n\n- Fix `bin/mkwsgiinstance` on Python 3 when Zope was installed via ``pip``.\n\n- Fix a bug with scopes in scripts with zconsole, which made it impossible to\n  reach global imports in the script within a function.\n\n- Fix handling of non-ASCII characters in URLs on Python 2 introduced on 4.0b5.\n  (`#380 <https://github.com/zopefoundation/Zope/pull/380>`_)\n\n- Fix zodbupdate conversion of ``OFS.Image.Pdata`` objects.\n\n- Install the `ipaddress` package only on Python 2.7 as it is part of the\n  stdlib in Python 3.\n  (`#368 <https://github.com/zopefoundation/Zope/issues/368>`_)\n\n- Fix KeyError on releasing resources of a Connection when closing the DB.\n  This requires at least version 2.4 of the `transaction` package.\n  (See `ZODB#208 <https://github.com/zopefoundation/ZODB/issues/208>`_.)\n\n- Fix rendering of ordered folder icon in ZMI.\n\nOther changes\n+++++++++++++\n\n- Restore old ``__repr__`` via ``OFS.SimpleItem.PathReprProvider``. Use this\n  as first base class for your custom classes, to restore the old behaviour.\n  (`#379 <https://github.com/zopefoundation/Zope/issues/379>`_)\n\n- Update dependencies to newest versions.\n\n\n4.0b6 (2018-10-11)\n------------------\n\nBreaking changes\n++++++++++++++++\n\n- Remove the ``OFS.History`` module which contained only BBB code since 4.0a2.\n\n- Remove `bootstrap.py`. To install Zope via `zc.buildout` install the\n  `zc.buildout` package in a virtual environment at first.\n\nNew features\n++++++++++++\n\n- Style the ZMI using Bootstrap.\n  (`#249 <https://github.com/zopefoundation/Zope/pull/249>`_ and\n  `#307 <https://github.com/zopefoundation/Zope/pull/307>`_)\n\n- Add zconsole module for running scripts and interactive mode.\n  See the `document Running Zope\n  <https://zope.readthedocs.io/en/4.x/operation.html#debugging-zope>`_.\n\n- Add support for Python 3.7.\n\n- Restore support for XML-RPC when using the WSGI publisher - dropped in 4.0a2.\n\n- Add a minimum ``buildout.cfg`` suggestion in the docs for creating ``wsgi``\n  instances.\n\n- Render an error message when trying to save DTML code containing a\n  SyntaxError in ZMI of a DTMLMethod or DTMLDocument.\n\n- Render an error message when trying to upload a file without choosing one\n  in ZMI of a DTMLMethod or DTMLDocument.\n\n- Update dependencies to newest versions.\n\nBugfixes\n++++++++\n\n- Restore controls for reordering items in an Ordered Folder and list them\n  according to the internal order by default in ZMI.\n  (`#344 <https://github.com/zopefoundation/Zope/pull/344>`_)\n\n- Call exception view before triggering _unauthorized.\n  (`#304 <https://github.com/zopefoundation/Zope/pull/304>`_)\n\n- Fix XML Page template files in Python 3\n  (`#319 <https://github.com/zopefoundation/Zope/issues/319>`_)\n\n- Fix ZMI upload of `DTMLMethod` and `DTMLDocument` to store the DTML as a\n  native ``str`` on both Python versions.\n  (`#265 <https://github.com/zopefoundation/Zope/pull/265>`_)\n\n- Fix upload and rendering of text files.\n  (`#240 <https://github.com/zopefoundation/Zope/pull/240>`_)\n\n- Work around Python bug (https://bugs.python.org/issue27777)\n  when reading request bodies not encoded as application/x-www-form-urlencoded\n  or multipart/form-data.\n\n- Show navigation in ``manage_menu`` in case the databases cannot be retrieved.\n  (`#309 <https://github.com/zopefoundation/Zope/issues/309>`_)\n\n- Prevent breaking page rendering when setting `default-zpublisher-encoding`\n  in `zope.conf` on Python 2.\n  (`#308 <https://github.com/zopefoundation/Zope/issue/308>`_)\n\n- Fix `HTTPResponse.setBody` when the published object returns a tuple.\n  (`#340 <https://github.com/zopefoundation/Zope/pull/340>`_)\n\n- Fix ``Products.Five.browser.ObjectManagerSiteView.makeSite``\n  to interact well with plone.testing's patching of the global site manager.\n  (`#361 <https://github.com/zopefoundation/Zope/pull/361>`_)\n\n- Add a backwards compatible shim for ``AccessRule`` which was removed in 4.0a1\n  but can exist in legacy databases.\n  (`#321 <https://github.com/zopefoundation/Zope/issue/321>`_)\n\n\n4.0b5 (2018-05-18)\n------------------\n\nNew features\n++++++++++++\n\n- The `ProductContext` handed to a product's `initialize()` method\n  now has a `getApplication()` method which a product can use to,\n  e.g., add an object to the Application during startup (as used\n  by `Products.Sessions`).\n  (`#277 <https://github.com/zopefoundation/Zope/pull/277>`_)\n\n- Update dependencies to newest versions.\n\nBugfixes\n++++++++\n\n- Fix comparison against non-ints in ZCacheable_getModTime.\n\n- Allow unicode in ids.\n  (`#181 <https://github.com/zopefoundation/Zope/pull/181>`_)\n\n- Use log.warning to avoid deprecation warning for log.warn\n\n- Keep existing loggers\n  (`#276 <https://github.com/zopefoundation/Zope/pull/276>`_)\n\n- Accept bytes and text as cookie value.\n  (`#263 <https://github.com/zopefoundation/Zope/pull/263>`_)\n\n- Always raise InternalError when using WSGI and let the WSGI server decide\n  how to handle the request.\n  (`#280 <https://github.com/zopefoundation/Zope/pull/280>`)\n\n- Make ZODB mount points in Python 2 compatible with `ZConfig >= 3.2`.\n  (`#281 <https://github.com/zopefoundation/Zope/pull/281>`_)\n\n- ``__str__`` of an Image object now returns the image HTML tag in\n  Python 3 as it already did on Python 2.\n  (`#282 <https://github.com/zopefoundation/Zope/pull/282>`_)\n\n\n4.0b4 (2018-04-23)\n------------------\n\nSupported versions\n++++++++++++++++++\n\n- Drop support for Python 3.4 because it was dropped by `AccessControl` on\n  which `Zope` depends.\n\n- Update dependencies to newest versions.\n\nBreaking changes\n++++++++++++++++\n\n- The 'lines' property type now always stores bytes on all Python versions.\n  (`#206 <https://github.com/zopefoundation/Zope/issues/206>`_)\n\nBugfixes\n++++++++\n\n- Fix an edge case where the data which was set using ``response.write()`` was\n  not returned by ``publish_module``.\n  (`#256 <https://github.com/zopefoundation/Zope/issues/256>`_)\n\n- Fix renaming of images and files via ZMI.\n  (`#247 <https://github.com/zopefoundation/Zope/issues/247>`_)\n\n- Sort HTTP headers in doctests as in Zope 2.\n  (`#259 <https://github.com/zopefoundation/Zope/pull/259>`_)\n\nChanges\n+++++++\n\n- Add ``OFS.CopySupport.CopyContainer._pasteObjects()`` to be able to paste\n  objects no matter how many objects where cut or copied.\n  (`#217 <https://github.com/zopefoundation/Zope/issues/217>`_)\n\n\n4.0b3 (2018-01-27)\n------------------\n\nBugfixes\n++++++++\n\n- Test that ``str.format`` checks security for accessed keys and items.\n  The real fix is in the AccessControl package, version 4.0b1.\n  Part of PloneHotfix20171128.\n\n- Made Redirect unavailable as url.  Part of PloneHotfix20171128.\n\n- Fix ZMI navtree error by using DocumentTemplate version 3.0b2.\n  (`#179 <https://github.com/zopefoundation/Zope/issues/179>`_)\n\n- Re-add a link to refresh the ZMI menu tree on the left.\n\n- Install a default page for the root view in new installations again.\n\n- Re-raise app exceptions if x-wsgiorg.throw_errors is True in the request environ.\n\n- Fix path expressions trying to call views that do not implement `__call__`.\n\n- Move _html to HTTPBaseResponse since it is shared by HTTPResponse and WSGIResponse.\n\n- Fix unpickling of instances created before 4.0b2 those classes changed from\n  old-style classes to new-style classes.\n\n- Prevent UnicodeDecodeError when publishing image (bytes) responses without content-type\n\nChanges\n+++++++\n\n- Move `Products.SiteAccess` back here from ZServer distribution.\n\n- Update dependencies to current versions.\n\n\n4.0b2 (2017-10-13)\n------------------\n\nNew features\n++++++++++++\n\n- Add support for IPv6 addresses for the trusted-proxy zope.conf setting.\n\nBugfixes\n++++++++\n\n- Fix special double under methods on `HTTPRequest.record` class.\n\n- Add missing version pin for `Zope2` in `versions-prod.cfg`.\n\n- Fix ``HTTPExceptionHandler`` to be usable as part of the WSGI pipeline in\n  testbrowser tests.\n\nOther changes\n+++++++++++++\n\n- Explicitly make all classes new-style classes.\n\n\n4.0b1 (2017-09-15)\n------------------\n\nWith this release the egg of the project is named `Zope` instead of `Zope2`.\nThere is a meta package named `Zope2` which depends on `Zope`.\n\nSee https://zope.readthedocs.io/en/latest/WHATSNEW.html for a higher level\ndescription of the changes.\n\nSupported versions\n++++++++++++++++++\n\n- Add support for Python 3.4, 3.5 and 3.6.\n\n- Drop support for Python 2.6.\n\nBreaking changes\n++++++++++++++++\n\n- Removed the old help system, in favor of the current Sphinx documentation\n  hosted at https://zope.readthedocs.io/. For backwards compatibility the\n  `registerHelp` and `registerHelpTitle` methods are still available on the\n  ProductContext used during the `initialize` function.\n\n- Remove ZMI re-ordering features.\n\n- Retired icons from the `Zope Management Interface` and various smaller\n  cleanups of ZMI screens.\n\n- Remove xml-export.\n\n- Remove `Globals` package, opened database are now found in\n  `Zope2.opened` next to `Zope2.DB`.\n\n- Remove proxy role support from DTML documents and methods.\n\n- Removed `AccessRule` and `SiteRoot` from `Products.SiteAccess`.\n\n- Remove `Products.ZReST` and the `reStructuredText` wrapper, you can use\n  `docutils` directly to gain `reST` support.\n\n- Stop setting ``CLIENT_HOME`` as a builtin, get it via\n  ``App.config.getConfiguration().clienthome`` instead.\n\n- Drop ``OFS.History`` functionality.\n\n- Removed ``OFS.DefaultObservable`` - an early predecessor of `zope.event`.\n\n- Removed ``OFS.ZDOM``. `OFS.SimpleItem.Item` now implements `getParentNode()`.\n\n- Removed special code to create user folders and page templates while creating\n  new ``OFS.Folder`` instances.\n\n- Removed the `App.version_txt.getZopeVersion` API, you can use\n  ``pkg_resources.get_distribution('Zope').version`` instead.\n\n- On the application object, removed `PrincipiaTime` in favor of `ZopeTime` and\n  `PrincipiaRedirect` in favor of `Redirect` or `ZopeRedirect`.\n\n- Removed `bobobase_modification_time` from `Persistence.Persistent`, you can\n  use `DateTime(object._p_mtime)` instead.\n\n- Removed the special handling of `Set-Cookie` headers in\n  `HTTPResponse.setHeader`. Use the `setCookie`/`appendCookie`/`expireCookie`\n  methods instead, or if low-level control is needed, use `addHeader` instead\n  to get the exact same effect.\n\n- Raise ``BadRequest`` instead of returning MessageDialog.\n\n- Update available HTTP response code, 302 is now called ``Found``.\n\n- Refactor ``browser:view`` and ``browser:page`` directives.\n  This makes their implementation more similar to that in ``zope.browserpage``\n  and adds allowed_interface support for the ``browser:view`` directive.\n  By default the `aq_*` attributes are no longer available on those\n  views/pages.\n\n- Removed the last remaining code to support `SOFTWARE_HOME` and `ZOPE_HOME`.\n\n- Simplified instance skeleton, removing old `Extensions`, `import`,\n  `lib/python` and `Products` from the default. You can continue to manually\n  add these back. (`Products` requires `ZServer` to be usable.)\n\n- Remove the `zopectl` script.\n\nWSGI\n++++\n\n- Document running Zope as a WSGI application.\n\n- Remove `Connection` and `Transfer-Encoding` headers from WSGI responses.\n  According to PEP 333 WSGI applications must not emit hop-by-hop headers.\n\n- Ensure that the ``WSGIPublisher`` begins and ends an *interaction*\n  at the request/response barrier. This is required for instance for\n  the ``checkPermission`` call to function without an explicit\n  ``interaction`` parameter.\n\n- Make the WSGIPublisher normalize HTTP exception classes based on name\n  (for example, any exception named NotFound will be converted\n  into `zExceptions.NotFound`). This restores compatibility with\n  similar behavior of the old publisher.\n\n- Change the WSGIResponse exception methods to raise exceptions instead\n  of returning responses. This includes ``notFoundError``, ``forbiddenError``,\n  ``debugError``, ``badRequestError`` and ``unauthorized``.\n\n- Add support for exception views to WSGIPublisher.\n\n- Add support for ``ConflictError`` and ``TransientError`` retry logic directly\n  into WSGIPublisher, thus `repoze.tm2` and `repoze.retry` are no longer\n  needed and no longer supported.\n\n- Change Testing to use the WSGI publisher for functional and testbrowser\n  based tests incl. functional doctests. Alternatives are available\n  in ``ZServer.Testing``.\n\n- Split a WSGI part out of `Zope2.Startup.ZopeStarter`.\n\n- Include ``waitress`` as a default WSGI app server.\n\n- Add `egg:Zope#httpexceptions` WSGI middleware.\n\n- Add a new `runwsgi` script to serve PasteDeploy files.\n\n\nZODB\n++++\n\n- Support ZODB 5.\n\n- Removed persistent default content like `standard_error_message`,\n  `error_log`, `temp_folder` and `index_html`.\n\n\nControl panel\n+++++++++++++\n\n- Removed ZMI controls for restarting the process, these no longer apply when\n  managed as a WSGI application.\n\n- Remove `DebugInfo` and `DavLocks` from control panel.\n\n- Move the undo management to Control Panel -> Databases -> Database -> Undo.\n\n- Simplify ZMI control panel and globally available management screens.\n\n- Remove `control panel` object from the ZODB, it is no longer persistent.\n\n\nZServer\n+++++++\n\n- Split out ``Lifetime``, ``webdav`` and ``ZServer`` packages into a `ZServer`\n  project.\n\n- Move ``EtagSupport``, ``Lockable`` and ``LockItem`` from ``webdav`` into\n  `OFS`.\n\n- Move ``ZPublisher.Publish`` module into `ZServer` distribution.\n\n- Move ``Products.SiteAccess`` into `ZServer` distribution.\n\n- Move ZServer related testing support into ``ZServer.Testing``.\n\nzope.conf\n+++++++++\n\n- Always configure a `blob-dir` in the default skeleton.\n\n- Removed `mime-types` option from `zope.conf`. You can use the `add_files`\n  API from `zope.contenttype` instead.\n\n- Removed various persistent product related code and options.\n\n- Split a WSGI part out of `zopeschema.xml`. This reduces the supported\n  `zope.conf` directives when run under WSGI. If a directive is now unkown\n  it might have been moved to the `ZServer` package.\n  See https://github.com/zopefoundation/ZServer/blob/master/src/ZServer/Zope2/Startup/zopeschema.xml\n  for the directives which are supported via `ZServer`.\n\n- Remove profiling support via `publisher-profile-file` directive.\n\n- Changed the value for ``default-zpublisher-encoding`` to ``utf-8``.\n  If you set a different value for ``management_page_charset`` consider\n  changing ``default-zpublisher-encoding`` now.\n\n- Removed the ``enable-ms-author-via`` directive which was only required for\n  very old web folder implementations from before 2007.\n\n- Changed `zope.conf` default settings for ``python-check-interval`` to ``1000``.\n\nDependencies\n++++++++++++\n\n- Integrate code from and drop dependency on `five.globalrequest`.\n\n- Integrate `five.pt` code directly into `Products.PageTemplates`.\n\n- Drop `ZopeUndo` dependency.\n\n- Remove `Products.StandardCacheManagers` dependency.\n\n- Remove dependency on `initgroups`. Use the standard libraries\n  ``os.initgroups`` instead.\n\n- Merge `Products.OFSP` project back in.\n\n- `Products.SiteErrorLog` is now a separated package and Zope no longer depends\n  on it.\n\n- Split `Products.TemporaryFolder` and `Products.ZODBMountPoint` into\n  one new project called `Products.TemporaryFolder`.\n\n- Create new `Products.Sessions` distribution including ``Products.Sessions``\n  and ``Products.Transience`` code.\n\n- Dropped the direct dependencies on packages that have been factored out of\n  the main Zope 2 tree. Make sure you declare a dependency in your own\n  distribution if you still use one of these:\n\n    - `Products.BTreeFolder2`\n    - `Products.ExternalMethod`\n    - `Products.MailHost`\n    - `Products.MIMETools`\n    - `Products.PythonScripts`\n    - `Products.SiteErrorLog`\n    - `Products.StandardCacheManagers`\n    - `Products.ZCatalog`\n    - `Record`\n\nDeprecations\n++++++++++++\n\n- Five.browser: Marked `processInputs` and `setPageEncoding` as deprecated.\n  `processInputs` was replaced by the `postProcessInputs` request method and\n  the charset negotiation done by `setPageEncoding` was never fully supported.\n\nNew features\n++++++++++++\n\n- Add support to SameSite cookie in ``ZPublisher.HTTPBaseResponse``:\n  https://tools.ietf.org/html/draft-west-first-party-cookies-07\n\n- Optimized the `OFS.ObjectManager.__contains__` method to do the\n  least amount of work necessary.\n\n- Optimized the `OFS.Traversable.getPhysicalPath` method to avoid excessive\n  amounts of method calls.\n\n- During startup open a connection to every configured database, to ensure all\n  of them can indeed be accessed. This avoids surprises during runtime when\n  traversal to some database mountpoint could fail as the underlying storage\n  cannot be opened at all.\n\n- Explicitly close all databases on shutdown, which ensures `Data.fs.index`\n  gets written to the file system.\n\n- ZPublisher: If `IBrowserPage` is provided by a view, form input is decoded.\n  This makes it easier to use ``zope.formlib`` and ``z3c.form`` in Zope 2.\n\nSecurity fixes\n++++++++++++++\n\n- Fix reflective XSS in findResult.\n\n- Patch zope.interface to remove docstrings and avoid publishing.\n\n- Don't copy items the user is not allowed to view.\n\n- Quote variable in manage_tabs to avoid XSS.\n\n- Removed docstrings from some methods to avoid publishing them.\n\n- Ensure that Request objects cannot be published / traversed\n  directly via a URL.\n  (`LP #789863 <https://bugs.launchpad.net/zope2/+bug/789863>`_)\n\n\n- Port tests for ``str.format`` security fix from Zope 2.13.\n\nBugfixes\n++++++++\n\n- PropertyManagers and PropertySheets now correctly accept all forms of\n  strings as property values.\n\n- Allow handling of multipart requests in functional doctests using ``http``.\n\n- Fix Content-Length header for non-ascii responses incl. a base tag.\n\n- bobo_traverse of ProductDispatcher did not correctly invalidate cache\n  when a product was not initializes after first access of the cache. Types\n  that were added in test-profiles were not useable.\n\n- Prevent leaked connections when broken ``EndRequestEvent``\n  subscribers raise exceptions.\n  (`#16 <https://github.com/zopefoundation/Zope/issues/16>`_)\n\n- Made sure ``getConfiguration().default_zpublisher_encoding`` is set correctly.\n\n- Fix publishing of ``IStreamIterator``. This interface does\n  not have seek or tell.  Introduce ``IUnboundStreamIterator`` to support\n  publishing iterators of unknown length.\n  (`#28 <https://github.com/zopefoundation/Zope/pull/28>`_)\n\n- Removed the (very obsolete) thread lock around the cookie parsing code\n  in HTTPRequest.py; the python `re` module is thread-safe, unlike the\n  ancient `regex` module that was once used here.\n\n\n4.0a6 (2017-06-01)\n------------------\n\nFeatures Added\n++++++++++++++\n\n- Updated distributions:\n\n    - Products.BTreeFolder2 = 4.0.0\n    - Products.ZCatalog = 4.0.0\n\n\nRestructuring\n+++++++++++++\n\n- Claim support for Python 3 and update the documentation.\n\n\n4.0a5 (2017-05-22)\n------------------\n\nFeatures Added\n++++++++++++++\n\n- Many changes to support Python 3.\n\n- Updated distributions:\n\n    - AccessControl = 4.0a7\n    - DocumentTemplate = 3.0a3\n    - Missing = 4.0\n    - MultiMapping = 4.0\n    - Record = 3.4\n    - zExceptions = 3.6.1\n\n\n4.0a4 (2017-05-12)\n------------------\n\nBugs Fixed\n++++++++++\n\n- #116: Restore exception views for unauthorized.\n\n- Restore a `_unauthorized` hook on the response object.\n\n- Restore `HTTPResponse.redirect` behaviour of not raising an exception.\n\nFeatures Added\n++++++++++++++\n\n- Updated distributions:\n\n    - AccessControl = 4.0a6\n    - Acquisition = 4.4.2\n    - Record = 3.3\n    - zope.dottedname = 4.2.0\n    - zope.i18nmessageid = 4.1.0\n\n\n4.0a3 (2017-05-03)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Fixed reflective XSS in findResult.\n  This applies PloneHotfix20170117.  [maurits]\n\n- Patch zope.interface to remove docstrings and avoid publishing.\n  From Products.PloneHotfix20161129.   [maurits]\n\n- Don't copy items the user is not allowed to view.\n  From Products.PloneHotfix20161129.  [maurits]\n\n- Make the WSGIPublisher normalize HTTP exception classes based on name\n  (for example, any exception named NotFound will be converted\n  into `zExceptions.NotFound`). This restores compatibility with\n  similar behavior of the old publisher.\n  [davisagli]\n\n- Use unicode transaction-notes to support ZODB 5.\n  [pbauer]\n\nFeatures Added\n++++++++++++++\n\n- Add support to SameSite cookie in ``ZPublisher.HTTPBaseResponse``:\n  https://tools.ietf.org/html/draft-west-first-party-cookies-07\n\n- Updated distributions:\n\n    - AccessControl = 4.0a4\n    - Acquisition = 4.3.0\n    - BTrees = 4.4.1\n    - DateTime = 4.2\n    - DocumentTemplate = 3.0a1\n    - ExtensionClass = 4.3.0\n    - Missing = 3.2\n    - MultiMapping = 3.1\n    - Persistence = 3.0a3\n    - persistent = 4.2.2\n    - Products.ZCatalog = 4.0a3\n    - pytz = 2016.10\n    - Record = 3.2\n    - transaction = 2.1.1\n    - waitress = 1.0.2\n    - WebOb = 1.7.1\n    - WebTest = 2.0.26\n    - WSGIProxy2 = 0.4.3\n    - zdaemon = 4.2.0\n    - ZEO = 5.0.4\n    - zExceptions = 3.6\n    - ZODB = 5.2.0\n    - zope.configuration = 4.1.0\n    - zope.deprecation = 4.2.0\n    - zope.interface = 4.3.3\n    - zope.testbrowser = 5.2\n    - zope.testing = 4.6.1\n    - zope.testrunner = 4.6.0\n    - zope.globalrequest = 1.3\n    - zope.testing = 4.6.0\n    - ZServer = 4.0a2\n\nRestructuring\n+++++++++++++\n\n- Integrate code from and drop dependency on `five.globalrequest`.\n\n- Remove special handling of redirect and unauthorized exceptions from\n  the WSGI publisher. These are now always raised as exceptions, to\n  match the behavior of all other HTTPExceptions.\n\n- Removed xml-export.\n  [maurits, pbauer]\n\n- Add back ZCacheable support.\n\n- Update to zope.testbrowser 5.0 and its WebTest based implementation.\n\n- Use `@implementer` and `@adapter` class decorators.\n\n\n4.0a2 (2016-09-09)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Quote variable in manage_tabs to avoid XSS.\n  From Products.PloneHotfix20160830.  [maurits]\n\n- Remove more HelpSys references.\n\nFeatures Added\n++++++++++++++\n\n- Add support for exception views to WSGIPublisher.\n\n- Add support for ConflictError and TransientError retry logic directly\n  into WSGIPublisher.\n\n- Add support for raising HTTPOK and HTTPRedirection exceptions and\n  have them result in successful transactions.\n\n- Add better blob support to HTTPRequest.ZopeFieldStorage.\n\n- Updated distributions:\n\n  - AccessControl = 4.0a3\n  - AuthEncoding = 4.0.0\n  - Products.ZCatalog = 4.0a2\n  - zExceptions = 3.3\n  - ZServer = 4.0a1\n\nRestructuring\n+++++++++++++\n\n- Change the WSGIResponse exception methods to raise exceptions instead\n  of returning responses. This includes notFoundError, forbiddenError,\n  debugError, badRequestError, unauthorized and redirect.\n\n- Split a common HTTPBaseResponse base class out of HTTPResponse and\n  WSGIResponse. Move ZServer specific logic onto HTTPResponse.\n\n- Simplified `ZPublisher.WSGIPublisher.get_module_info` contract.\n\n- Add new `ZPublisher.utils.recordMetaData` function and use default\n  `transaction.manager` as the transaction manager.\n\n- Remove support for repoze.tm2.\n\n- Change Testing to use the WSGI publisher for functional and testbrowser\n  based tests incl. functional doctests. Alternatives are available\n  in `ZServer.Testing`.\n\n- Move `ZPublisher.Publish` module into ZServer distribution.\n\n- Remove `Globals` package, opened database are now found in\n  `Zope2.opened` next to `Zope2.DB`.\n\n- Remove proxy role support from DTML documents and methods.\n\n- Remove ZCacheable logic and StandardCacheManagers dependency.\n\n- Stop mixing in `Five.bbb.AcquisitionBBB` into browser components.\n\n- Integrate `five.pt` code directly into `Products.PageTemplates`.\n\n- Move `Products.SiteAccess` into ZServer distribution.\n\n- Simplify Page Template and Scripts ZMI screens.\n\n- Change VHM id to `virtual_hosting` to match AppInitializer.\n\n- Raise BadRequest instead of returning MessageDialog.\n\n- Remove property management ZMI screens.\n\n- Remove ZMI copy/cut/paste/rename and re-ordering features.\n\n- Drop `OFS.History` functionality.\n\n- Drop ZopeUndo dependency and move undo management to the control panel.\n\n- Simplify ZMI control panel and globally available management screens.\n\n- Move ZServer related testing support into ZServer.Testing.\n\n- Split out Lifetime, webdav and ZServer packages into a ZServer project.\n\n- Move webdav's EtagSupport, Lockable and LockItem into OFS.\n\n- Split `Products.TemporaryFolder` and `Products.ZODBMountPoint` into\n  one new project called `Products.TemporaryFolder`.\n\n- Split a WSGI part out of `zopeschema.xml`. This reduces the supported\n  `zope.conf` directives when run under WSGI.\n\n- Remove temp_folder mount point from default configuration.\n\n- Split a WSGI part out of `Zope2.Startup.ZopeStarter`.\n\n- Add new `ZServer.Zope2.Startup.config` module to hold configuration.\n\n- Remove `Control_Panel` `/DebugInfo` and `/DavLocks`.\n\n- Remove profiling support via `publisher-profile-file` directive.\n\n- Create new `Products.Sessions` distribution including Products.Sessions\n  and Products.Transience code.\n\n- Merge `Products.OFSP` project back in.\n\n- No longer test compatibility with dependencies:\n\n    ``Products.ExternalMethod``\n    ``Products.PythonScripts``\n    ``Products.Sessions``\n    ``Products.SiteErrorLog``\n    ``Products.TemporaryFolder``\n    ``tempstorage``\n    ``zLOG``\n    ``ZopeUndo``\n\n- Dropped dependency declarations for indirect dependencies:\n\n    ``docutils``\n    ``Missing``\n    ``pytz``\n    ``zLOG``\n    ``zope.sendmail``\n    ``zope.structuredtext``\n\n\n4.0a1 (2016-07-22)\n------------------\n\nBugs Fixed\n++++++++++\n\n- Remove `Connection` and `Transfer-Encoding` headers from WSGI responses.\n  According to PEP 333 WSGI applications must not emit hop-by-hop headers.\n\n- Removed docstrings from some methods to avoid publishing them.  From\n  Products.PloneHotfix20160419.  [maurits]\n\n- bobo_traverse of ProductDispatcher did not correctly invalidate cache\n  when a product was not initializes after first access of the cache. Types\n  that were added in test-profiles were not useable.\n  [pbauer, jensens]\n\n- Fix pt_editForm after the help-system was removed.\n  [pbauer]\n\n- Skipped ipv6 test on Travis, because Travis no longer supports this.\n\n- LP #789863:  Ensure that Request objects cannot be published / traversed\n  directly via a URL.\n\n- Document running Zope as a WSGI application.\n\n- Queue additional warning filters at the beginning of the queue in order to\n  allow overrides.\n\n- Issue #16: prevent leaked connections when broken ``EndRequestEvent``\n  subscribers raise exceptions.\n\n- Ensure that the ``WSGIPublisher`` begins and ends an *interaction*\n  at the request/response barrier. This is required for instance for\n  the ``checkPermission`` call to function without an explicit\n  ``interaction`` parameter.\n\n- Made sure getConfiguration().default_zpublisher_encoding is set correctly.\n\n- Issue #28: Fix publishing of IStreamIterator. This interface does\n  not have seek or tell.\n  Introduce IUnboundStreamIterator to support publishing iterators\n  of unknown length.\n\n\nFeatures Added\n++++++++++++++\n\n- Include waitress as a default WSGI app server.\n\n- Add `egg:Zope2#httpexceptions` WSGI middleware.\n\n- Update available HTTP response code, 302 is now called Found.\n\n- Add a new `runwsgi` script to serve PasteDeploy files.\n\n- Depend on and automatically set up `five.globalrequest`.\n\n- Optimized the `OFS.ObjectManager.__contains__` method to do the\n  least amount of work necessary.\n\n- Optimized the `OFS.Traversable.getPhysicalPath` method to avoid excessive\n  amounts of method calls.\n\n- During startup open a connection to every configured database, to ensure all\n  of them can indeed be accessed. This avoids surprises during runtime when\n  traversal to some database mountpoint could fail as the underlying storage\n  cannot be opened at all.\n\n- Explicitly close all databases on shutdown, which ensures `Data.fs.index`\n  gets written to the file system.\n\n- Always configure a `blob-dir` in the default skeleton.\n\n- ZPublisher: If `IBrowserPage` is provided by a view, form input is decoded.\n  This makes it easier to use ``zope.formlib`` and ``z3c.form`` in Zope 2.\n\n- Remove `control panel` object from the ZODB.\n\n- Updated to latest versions of Zope Toolkit libraries.\n\n- Updated distributions:\n\n  - AccessControl = 4.0a1\n  - Acquisition = 4.2.2\n  - BTrees = 4.0.8\n  - DateTime = 4.1.1\n  - ExtensionClass = 4.1.2\n  - docutils = 0.9.1\n  - five.globalrequest = 1.0\n  - manuel = 1.6.0\n  - Missing = 3.1\n  - MultiMapping = 3.0\n  - Persistence = 3.0a1\n  - Products.BTreeFolder2 = 3.0\n  - Products.ExternalMethod = 3.0\n  - Products.MailHost = 3.0\n  - Products.OFSP = 3.0\n  - Products.PythonScripts = 3.0\n  - Products.SiteErrorLog = 4.0\n  - Products.StandardCacheManagers = 3.0\n  - Products.ZCatalog = 4.0a1\n  - Products.ZCTextIndex = 3.0\n  - Record = 3.1\n  - tempstorage = 3.0\n  - zExceptions = 3.0\n  - zLOG = 3.0\n  - zope.globalrequest = 1.2\n  - ZopeUndo = 4.1\n\nRestructuring\n+++++++++++++\n\n- Remove dependency on initgroups. Use the standard libraries os.initgroups\n  instead.\n\n- Removed nt_svcutils support from zopectl.\n\n- Python 2.6 is no longer supported. Use Python 2.7.\n\n- Products.SiteErrorLog: Is now a separated package.\n\n- OFS: Removed duplicate code in ZopeFind and ZopeFindAndApply\n\n- Five: Removed obsolete metaclass.\n\n- Five: Refactored ``browser:view`` and ``browser:page`` directives.\n  This makes their implementation more similar to that in ``zope.browserpage``\n  and adds allowed_interface support for the ``browser:view`` directive.\n  By default the `aq_*` attributes are no longer available on those\n  views/pages. If you still use them, you have to mix in Five's BrowserView.\n\n- Removed the (very obsolete) thread lock around the cookie parsing code\n  in HTTPRequest.py; the python `re` module is thread-safe, unlike the\n  ancient `regex` module that was once used here.\n\n- Removed the special handling of `Set-Cookie` headers in\n  `HTTPResponse.setHeader`. Use the `setCookie`/`appendCookie`/`expireCookie`\n  methods instead, or if low-level control is needed, use `addHeader` instead\n  to get the exact same effect.\n\n- Removed the `App.version_txt.getZopeVersion` API, you can use\n  ``pkg_resources.get_distribution('Zope2').version`` instead.\n\n- On the application object, removed `PrincipiaTime` in favor of `ZopeTime` and\n  `PrincipiaRedirect` in favor of `Redirect` or `ZopeRedirect`.\n\n- Removed `OFS.DefaultObservable` - an early predecessor of `zope.event`.\n\n- Removed `mime-types` option from `zope.conf`. You can use the `add_files`\n  API from `zope.contenttype` instead.\n\n- Removed `OFS.ZDOM`. `OFS.SimpleItem.Item` now implements `getParentNode()`.\n\n- Removed the last remaining code to support `SOFTWARE_HOME` and `ZOPE_HOME`.\n\n- Removed ZMI controls for restarting the process, these no longer apply when\n  managed as a WSGI application.\n\n- Removed `bobobase_modification_time` from `Persistence.Persistent`, you can\n  use `DateTime(object._p_mtime)` instead.\n\n- Removed `AccessRule` and `SiteRoot` from `Products.SiteAccess`.\n\n- Removed `Products.ZReST` and the `reStructuredText` wrapper, you can use\n  `docutils` directly to gain `reST` support.\n\n- Removed special code to create user folders and page templates while creating\n  new `OFS.Folder` instances.\n\n- Removed persistent default code like the `error_log` and `temp_folder`.\n\n- Removed persistent default content, including the `standard_error_message`\n  template.\n\n- Retired icons from the `Zope Management Interface` and various smaller\n  cleanups of ZMI screens.\n\n- Removed the old help system, in favor of the current Sphinx documentation\n  hosted at https://zope.readthedocs.io/. For backwards compatibility the\n  `registerHelp` and `registerHelpTitle` methods are still available on the\n  ProductContext used during the `initialize` function.\n\n- Removed various persistent product related code and options. The\n  `enable-product-installation` `zope.conf` setting is now a no-op.\n\n- Changed the value for `default-zpublisher-encoding` and\n  `management_page_charset` to `utf-8`.\n\n- Removed the `enable-ms-author-via` directive which was only required for\n  very old web folder implementations from before 2007.\n\n- Changed zope.conf default settings for `zserver-threads` to `2` and\n  `python-check-interval` to `1000`.\n\n- Simplified instance skeleton, removing old `Extensions`, `import`,\n  `lib/python` and `Products` from the default. You can continue to manually\n  add these back.\n\n- Five.browser: Marked `processInputs` and `setPageEncoding` as deprecated.\n  `processInputs` was replaced by the `postProcessInputs` request method and\n  the charset negotiation done by `setPageEncoding` was never fully supported.\n\n- Dropped the direct dependencies on packages that have been factored out of\n  the main Zope 2 tree. Make sure you declare a dependency in your own\n  distribution if you still use one of these:\n\n    ``Products.BTreeFolder2``\n    ``Products.ExternalMethod``\n    ``Products.MailHost``\n    ``Products.MIMETools``\n    ``Products.PythonScripts``\n    ``Products.SiteErrorLog``\n    ``Products.StandardCacheManagers``\n    ``Products.ZCatalog``\n    ``Record``\n", "##############################################################################\n#\n# Copyright (c) 2002 Zope Foundation and Contributors.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE\n#\n##############################################################################\n\"\"\"Image object\n\"\"\"\n\nimport os\nimport struct\nfrom email.generator import _make_boundary\nfrom io import BytesIO\nfrom io import TextIOBase\nfrom mimetypes import guess_extension\nfrom tempfile import TemporaryFile\nfrom warnings import warn\n\nfrom six import PY2\nfrom six import binary_type\nfrom six import text_type\nfrom six.moves.urllib.parse import quote\n\nimport ZPublisher.HTTPRequest\nfrom AccessControl.class_init import InitializeClass\nfrom AccessControl.Permissions import change_images_and_files  # NOQA\nfrom AccessControl.Permissions import ftp_access\nfrom AccessControl.Permissions import view as View\nfrom AccessControl.Permissions import view_management_screens\nfrom AccessControl.Permissions import webdav_access\nfrom AccessControl.SecurityInfo import ClassSecurityInfo\nfrom Acquisition import Implicit\nfrom App.special_dtml import DTMLFile\nfrom DateTime.DateTime import DateTime\nfrom OFS import bbb\nfrom OFS.Cache import Cacheable\nfrom OFS.interfaces import IWriteLock\nfrom OFS.PropertyManager import PropertyManager\nfrom OFS.role import RoleManager\nfrom OFS.SimpleItem import Item_w__name__\nfrom OFS.SimpleItem import PathReprProvider\nfrom Persistence import Persistent\nfrom zExceptions import Redirect\nfrom zExceptions import ResourceLockedError\nfrom zope.contenttype import guess_content_type\nfrom zope.datetime import rfc1123_date\nfrom zope.event import notify\nfrom zope.interface import implementer\nfrom zope.lifecycleevent import ObjectCreatedEvent\nfrom zope.lifecycleevent import ObjectModifiedEvent\nfrom ZPublisher import HTTPRangeSupport\nfrom ZPublisher.HTTPRequest import FileUpload\n\n\ntry:\n    from html import escape\nexcept ImportError:  # PY2\n    from cgi import escape\n\n\ndef _get_list_from_env(name, default=None):\n    \"\"\"Get list from environment variable.\n\n    Supports splitting on comma or white space.\n    Use the default as fallback only when the variable is not set.\n    So if the env variable is set to an empty string, this will ignore the\n    default and return an empty list.\n    \"\"\"\n    value = os.environ.get(name)\n    if value is None:\n        return default or []\n    value = value.strip()\n    if \",\" in value:\n        return value.split(\",\")\n    return value.split()\n\n\n# We have one list for allowed, and one for disallowed inline mimetypes.\n# This is for security purposes.\n# By default we use the allowlist.  We give integrators the option to choose\n# the denylist via an environment variable.\nALLOWED_INLINE_MIMETYPES = _get_list_from_env(\n    \"ALLOWED_INLINE_MIMETYPES\",\n    default=[\n        \"image/gif\",\n        # The mimetypes registry lists several for jpeg 2000:\n        \"image/jp2\",\n        \"image/jpeg\",\n        \"image/jpeg2000-image\",\n        \"image/jpeg2000\",\n        \"image/jpx\",\n        \"image/png\",\n        \"image/webp\",\n        \"image/x-icon\",\n        \"image/x-jpeg2000-image\",\n        \"text/plain\",\n        # By popular request we allow PDF:\n        \"application/pdf\",\n    ]\n)\nDISALLOWED_INLINE_MIMETYPES = _get_list_from_env(\n    \"DISALLOWED_INLINE_MIMETYPES\",\n    default=[\n        \"application/javascript\",\n        \"application/x-javascript\",\n        \"text/javascript\",\n        \"text/html\",\n        \"image/svg+xml\",\n        \"image/svg+xml-compressed\",\n    ]\n)\ntry:\n    USE_DENYLIST = os.environ.get(\"OFS_IMAGE_USE_DENYLIST\")\n    USE_DENYLIST = bool(int(USE_DENYLIST))\nexcept (ValueError, TypeError, AttributeError):\n    USE_DENYLIST = False\n\n\nmanage_addFileForm = DTMLFile(\n    'dtml/imageAdd',\n    globals(),\n    Kind='File',\n    kind='file',\n)\n\n\ndef manage_addFile(\n    self,\n    id,\n    file=b'',\n    title='',\n    precondition='',\n    content_type='',\n    REQUEST=None\n):\n    \"\"\"Add a new File object.\n\n    Creates a new File object 'id' with the contents of 'file'\"\"\"\n\n    id = str(id)\n    title = str(title)\n    content_type = str(content_type)\n    precondition = str(precondition)\n\n    id, title = cookId(id, title, file)\n\n    self = self.this()\n\n    # First, we create the file without data:\n    self._setObject(id, File(id, title, b'', content_type, precondition))\n\n    newFile = self._getOb(id)\n\n    # Now we \"upload\" the data.  By doing this in two steps, we\n    # can use a database trick to make the upload more efficient.\n    if file:\n        newFile.manage_upload(file)\n    if content_type:\n        newFile.content_type = content_type\n\n    notify(ObjectCreatedEvent(newFile))\n\n    if REQUEST is not None:\n        REQUEST.RESPONSE.redirect(self.absolute_url() + '/manage_main')\n\n\n@implementer(IWriteLock, HTTPRangeSupport.HTTPRangeInterface)\nclass File(\n    PathReprProvider,\n    Persistent,\n    Implicit,\n    PropertyManager,\n    RoleManager,\n    Item_w__name__,\n    Cacheable\n):\n    \"\"\"A File object is a content object for arbitrary files.\"\"\"\n    # You can control which mimetypes may be shown inline\n    # and which must always be downloaded, for security reasons.\n    # Make the configuration available on the class.\n    # Then subclasses can override this.\n    allowed_inline_mimetypes = ALLOWED_INLINE_MIMETYPES\n    disallowed_inline_mimetypes = DISALLOWED_INLINE_MIMETYPES\n    use_denylist = USE_DENYLIST\n\n    meta_type = 'File'\n    zmi_icon = 'far fa-file-archive'\n\n    security = ClassSecurityInfo()\n    security.declareObjectProtected(View)\n\n    precondition = ''\n    size = None\n\n    manage_editForm = DTMLFile('dtml/fileEdit', globals(),\n                               Kind='File', kind='file')\n    manage_editForm._setName('manage_editForm')\n\n    security.declareProtected(view_management_screens, 'manage')  # NOQA: D001\n    security.declareProtected(view_management_screens, 'manage_main')  # NOQA: D001,E501\n    manage = manage_main = manage_editForm\n    manage_uploadForm = manage_editForm\n\n    manage_options = (({'label': 'Edit', 'action': 'manage_main'},\n                       {'label': 'View', 'action': ''})\n                      + PropertyManager.manage_options\n                      + RoleManager.manage_options\n                      + Item_w__name__.manage_options\n                      + Cacheable.manage_options)\n\n    _properties = (\n        {'id': 'title', 'type': 'string'},\n        {'id': 'content_type', 'type': 'string'},\n    )\n\n    def __init__(self, id, title, file, content_type='', precondition=''):\n        self.__name__ = id\n        self.title = title\n        self.precondition = precondition\n\n        data, size = self._read_data(file)\n        content_type = self._get_content_type(file, data, id, content_type)\n        self.update_data(data, content_type, size)\n\n    def _if_modified_since_request_handler(self, REQUEST, RESPONSE):\n        # HTTP If-Modified-Since header handling: return True if\n        # we can handle this request by returning a 304 response\n        header = REQUEST.get_header('If-Modified-Since', None)\n        if header is not None:\n            header = header.split(';')[0]\n            # Some proxies seem to send invalid date strings for this\n            # header. If the date string is not valid, we ignore it\n            # rather than raise an error to be generally consistent\n            # with common servers such as Apache (which can usually\n            # understand the screwy date string as a lucky side effect\n            # of the way they parse it).\n            # This happens to be what RFC2616 tells us to do in the face of an\n            # invalid date.\n            try:\n                mod_since = int(DateTime(header).timeTime())\n            except Exception:\n                mod_since = None\n            if mod_since is not None:\n                if self._p_mtime:\n                    last_mod = int(self._p_mtime)\n                else:\n                    last_mod = 0\n                if last_mod > 0 and last_mod <= mod_since:\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setStatus(304)\n                    return True\n\n    def _range_request_handler(self, REQUEST, RESPONSE):\n        # HTTP Range header handling: return True if we've served a range\n        # chunk out of our data.\n        range = REQUEST.get_header('Range', None)\n        request_range = REQUEST.get_header('Request-Range', None)\n        if request_range is not None:\n            # Netscape 2 through 4 and MSIE 3 implement a draft version\n            # Later on, we need to serve a different mime-type as well.\n            range = request_range\n        if_range = REQUEST.get_header('If-Range', None)\n        if range is not None:\n            ranges = HTTPRangeSupport.parseRange(range)\n\n            if if_range is not None:\n                # Only send ranges if the data isn't modified, otherwise send\n                # the whole object. Support both ETags and Last-Modified dates!\n                if len(if_range) > 1 and if_range[:2] == 'ts':\n                    # ETag:\n                    if if_range != self.http__etag():\n                        # Modified, so send a normal response. We delete\n                        # the ranges, which causes us to skip to the 200\n                        # response.\n                        ranges = None\n                else:\n                    # Date\n                    date = if_range.split(';')[0]\n                    try:\n                        mod_since = int(DateTime(date).timeTime())\n                    except Exception:\n                        mod_since = None\n                    if mod_since is not None:\n                        if self._p_mtime:\n                            last_mod = int(self._p_mtime)\n                        else:\n                            last_mod = 0\n                        if last_mod > mod_since:\n                            # Modified, so send a normal response. We delete\n                            # the ranges, which causes us to skip to the 200\n                            # response.\n                            ranges = None\n\n            if ranges:\n                # Search for satisfiable ranges.\n                satisfiable = 0\n                for start, end in ranges:\n                    if start < self.size:\n                        satisfiable = 1\n                        break\n\n                if not satisfiable:\n                    RESPONSE.setHeader(\n                        'Content-Range', 'bytes */%d' % self.size\n                    )\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Content-Length', self.size)\n                    RESPONSE.setStatus(416)\n                    return True\n\n                ranges = HTTPRangeSupport.expandRanges(ranges, self.size)\n\n                if len(ranges) == 1:\n                    # Easy case, set extra header and return partial set.\n                    start, end = ranges[0]\n                    size = end - start\n\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader('Content-Type', self.content_type)\n                    RESPONSE.setHeader('Content-Length', size)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Content-Range',\n                        'bytes %d-%d/%d' % (start, end - 1, self.size)\n                    )\n                    RESPONSE.setStatus(206)  # Partial content\n\n                    data = self.data\n                    if isinstance(data, binary_type):\n                        RESPONSE.write(data[start:end])\n                        return True\n\n                    # Linked Pdata objects. Urgh.\n                    pos = 0\n                    while data is not None:\n                        length = len(data.data)\n                        pos = pos + length\n                        if pos > start:\n                            # We are within the range\n                            lstart = length - (pos - start)\n\n                            if lstart < 0:\n                                lstart = 0\n\n                            # find the endpoint\n                            if end <= pos:\n                                lend = length - (pos - end)\n\n                                # Send and end transmission\n                                RESPONSE.write(data[lstart:lend])\n                                break\n\n                            # Not yet at the end, transmit what we have.\n                            RESPONSE.write(data[lstart:])\n\n                        data = data.next\n\n                    return True\n\n                else:\n                    boundary = _make_boundary()\n\n                    # Calculate the content length\n                    size = (8 + len(boundary)  # End marker length\n                            + len(ranges) * (  # Constant lenght per set\n                                49 + len(boundary)\n                                + len(self.content_type)\n                                + len('%d' % self.size)))\n                    for start, end in ranges:\n                        # Variable length per set\n                        size = (size + len('%d%d' % (start, end - 1))\n                                + end - start)\n\n                    # Some clients implement an earlier draft of the spec, they\n                    # will only accept x-byteranges.\n                    draftprefix = (request_range is not None) and 'x-' or ''\n\n                    RESPONSE.setHeader('Content-Length', size)\n                    RESPONSE.setHeader('Accept-Ranges', 'bytes')\n                    RESPONSE.setHeader(\n                        'Last-Modified', rfc1123_date(self._p_mtime)\n                    )\n                    RESPONSE.setHeader(\n                        'Content-Type',\n                        'multipart/%sbyteranges; boundary=%s' % (\n                            draftprefix,\n                            boundary,\n                        )\n                    )\n                    RESPONSE.setStatus(206)  # Partial content\n\n                    data = self.data\n                    # The Pdata map allows us to jump into the Pdata chain\n                    # arbitrarily during out-of-order range searching.\n                    pdata_map = {}\n                    pdata_map[0] = data\n\n                    for start, end in ranges:\n                        RESPONSE.write(\n                            b'\\r\\n--'\n                            + boundary.encode('ascii')\n                            + b'\\r\\n'\n                        )\n                        RESPONSE.write(\n                            b'Content-Type: '\n                            + self.content_type.encode('ascii')\n                            + b'\\r\\n'\n                        )\n                        RESPONSE.write(\n                            b'Content-Range: bytes '\n                            + str(start).encode('ascii')\n                            + b'-'\n                            + str(end - 1).encode('ascii')\n                            + b'/'\n                            + str(self.size).encode('ascii')\n                            + b'\\r\\n\\r\\n'\n                        )\n\n                        if isinstance(data, binary_type):\n                            RESPONSE.write(data[start:end])\n\n                        else:\n                            # Yippee. Linked Pdata objects. The following\n                            # calculations allow us to fast-forward through the\n                            # Pdata chain without a lot of dereferencing if we\n                            # did the work already.\n                            first_size = len(pdata_map[0].data)\n                            if start < first_size:\n                                closest_pos = 0\n                            else:\n                                closest_pos = (\n                                    ((start - first_size) >> 16 << 16)\n                                    + first_size\n                                )\n                            pos = min(closest_pos, max(pdata_map.keys()))\n                            data = pdata_map[pos]\n\n                            while data is not None:\n                                length = len(data.data)\n                                pos = pos + length\n                                if pos > start:\n                                    # We are within the range\n                                    lstart = length - (pos - start)\n\n                                    if lstart < 0:\n                                        lstart = 0\n\n                                    # find the endpoint\n                                    if end <= pos:\n                                        lend = length - (pos - end)\n\n                                        # Send and loop to next range\n                                        RESPONSE.write(data[lstart:lend])\n                                        break\n\n                                    # Not yet at the end,\n                                    # transmit what we have.\n                                    RESPONSE.write(data[lstart:])\n\n                                data = data.next\n                                # Store a reference to a Pdata chain link\n                                # so we don't have to deref during\n                                # this request again.\n                                pdata_map[pos] = data\n\n                    # Do not keep the link references around.\n                    del pdata_map\n\n                    RESPONSE.write(\n                        b'\\r\\n--' + boundary.encode('ascii') + b'--\\r\\n')\n                    return True\n\n    def _should_force_download(self):\n        # If this returns True, the caller should set a\n        # Content-Disposition header with filename.\n        mimetype = self.content_type\n        if not mimetype:\n            return False\n        if self.use_denylist:\n            # We explicitly deny a few mimetypes, and allow the rest.\n            return mimetype in self.disallowed_inline_mimetypes\n        # Use the allowlist.\n        # We only explicitly allow a few mimetypes, and deny the rest.\n        return mimetype not in self.allowed_inline_mimetypes\n\n    @security.protected(View)\n    def index_html(self, REQUEST, RESPONSE):\n        \"\"\"\n        The default view of the contents of a File or Image.\n\n        Returns the contents of the file or image.  Also, sets the\n        Content-Type HTTP header to the objects content type.\n        \"\"\"\n\n        if self._if_modified_since_request_handler(REQUEST, RESPONSE):\n            # we were able to handle this by returning a 304\n            # unfortunately, because the HTTP cache manager uses the cache\n            # API, and because 304 responses are required to carry the Expires\n            # header for HTTP/1.1, we need to call ZCacheable_set here.\n            # This is nonsensical for caches other than the HTTP cache manager\n            # unfortunately.\n            self.ZCacheable_set(None)\n            return b''\n\n        if self.precondition and hasattr(self, str(self.precondition)):\n            # Grab whatever precondition was defined and then\n            # execute it.  The precondition will raise an exception\n            # if something violates its terms.\n            c = getattr(self, str(self.precondition))\n            if hasattr(c, 'isDocTemp') and c.isDocTemp:\n                c(REQUEST['PARENTS'][1], REQUEST)\n            else:\n                c()\n\n        if self._range_request_handler(REQUEST, RESPONSE):\n            # we served a chunk of content in response to a range request.\n            return b''\n\n        RESPONSE.setHeader('Last-Modified', rfc1123_date(self._p_mtime))\n        RESPONSE.setHeader('Content-Type', self.content_type)\n        RESPONSE.setHeader('Content-Length', self.size)\n        RESPONSE.setHeader('Accept-Ranges', 'bytes')\n\n        if self._should_force_download():\n            # We need a filename, even a dummy one if needed.\n            filename = self.getId()\n            if \".\" not in filename:\n                # This either returns None or \".some_extension\"\n                ext = guess_extension(self.content_type, strict=False)\n                if not ext:\n                    # image/svg+xml -> svg\n                    ext = \".\" + self.content_type.split(\"/\")[-1].split(\"+\")[0]\n                filename += ext\n            if not isinstance(filename, bytes):\n                filename = filename.encode(\"utf8\")\n            filename = quote(filename)\n            RESPONSE.setHeader(\n                \"Content-Disposition\",\n                \"attachment; filename*=UTF-8''{}\".format(filename),\n            )\n\n        if self.ZCacheable_isCachingEnabled():\n            result = self.ZCacheable_get(default=None)\n            if result is not None:\n                # We will always get None from RAMCacheManager and HTTP\n                # Accelerated Cache Manager but we will get\n                # something implementing the IStreamIterator interface\n                # from a \"FileCacheManager\"\n                return result\n\n        self.ZCacheable_set(None)\n\n        data = self.data\n        if isinstance(data, binary_type):\n            RESPONSE.setBase(None)\n            return data\n\n        while data is not None:\n            RESPONSE.write(data.data)\n            data = data.next\n\n        return b''\n\n    @security.protected(View)\n    def view_image_or_file(self, URL1):\n        \"\"\"The default view of the contents of the File or Image.\"\"\"\n        raise Redirect(URL1)\n\n    @security.protected(View)\n    def PrincipiaSearchSource(self):\n        \"\"\"Allow file objects to be searched.\"\"\"\n        if self.content_type.startswith('text/'):\n            return bytes(self.data)\n        return b''\n\n    @security.private\n    def update_data(self, data, content_type=None, size=None):\n        if isinstance(data, text_type):\n            raise TypeError('Data can only be bytes or file-like. '\n                            'Unicode objects are expressly forbidden.')\n\n        if content_type is not None:\n            self.content_type = content_type\n        if size is None:\n            size = len(data)\n        self.size = size\n        self.data = data\n        self.ZCacheable_invalidate()\n        self.ZCacheable_set(None)\n        self.http__refreshEtag()\n\n    def _get_encoding(self):\n        \"\"\"Get the canonical encoding for ZMI.\"\"\"\n        return ZPublisher.HTTPRequest.default_encoding\n\n    @security.protected(change_images_and_files)\n    def manage_edit(\n        self,\n        title,\n        content_type,\n        precondition='',\n        filedata=None,\n        REQUEST=None\n    ):\n        \"\"\"\n        Changes the title and content type attributes of the File or Image.\n        \"\"\"\n        if self.wl_isLocked():\n            raise ResourceLockedError(\"File is locked.\")\n\n        self.title = str(title)\n        self.content_type = str(content_type)\n        if precondition:\n            self.precondition = str(precondition)\n        elif self.precondition:\n            del self.precondition\n        if filedata is not None:\n            if isinstance(filedata, text_type):\n                filedata = filedata.encode(self._get_encoding())\n            self.update_data(filedata, content_type, len(filedata))\n        else:\n            self.ZCacheable_invalidate()\n\n        notify(ObjectModifiedEvent(self))\n\n        if REQUEST:\n            message = \"Saved changes.\"\n            return self.manage_main(\n                self, REQUEST, manage_tabs_message=message)\n\n    @security.protected(change_images_and_files)\n    def manage_upload(self, file='', REQUEST=None):\n        \"\"\"\n        Replaces the current contents of the File or Image object with file.\n\n        The file or images contents are replaced with the contents of 'file'.\n        \"\"\"\n        if self.wl_isLocked():\n            raise ResourceLockedError(\"File is locked.\")\n\n        if file:\n            data, size = self._read_data(file)\n            content_type = self._get_content_type(file, data, self.__name__,\n                                                  'application/octet-stream')\n            self.update_data(data, content_type, size)\n            notify(ObjectModifiedEvent(self))\n            msg = 'Saved changes.'\n        else:\n            msg = 'Please select a file to upload.'\n\n        if REQUEST:\n            return self.manage_main(\n                self, REQUEST, manage_tabs_message=msg)\n\n    def _get_content_type(self, file, body, id, content_type=None):\n        \"\"\"return content type or ``None``.\n\n        *file* usually is a ``FileUpload`` (like) instance; if this\n        specifies a content type, it is used. If *file*\n        is not ``FileUpload`` like, it is ignored and the\n        content type is guessed from the other parameters.\n\n        *body* is either a ``bytes`` or a ``Pdata`` instance\n        and assumed to be the *file* data.\n        \"\"\"\n        headers = getattr(file, 'headers', None)\n        if headers and 'content-type' in headers:\n            content_type = headers['content-type']\n        else:\n            if not isinstance(body, bytes):\n                body = body.data\n            content_type, enc = guess_content_type(\n                getattr(file, 'filename', id), body, content_type)\n        return content_type\n\n    def _read_data(self, file):\n        \"\"\"return the data and size of *file* as tuple *data*, *size*.\n\n        *file* can be a ``bytes``, ``Pdata``, ``FileUpload`` or\n        (binary) file like instance.\n\n        For large files, *data* is a ``Pdata``, otherwise a ``bytes`` instance.\n        \"\"\"\n        import transaction\n\n        n = 1 << 16\n\n        if isinstance(file, text_type):\n            raise ValueError(\"Must be bytes\")\n\n        if isinstance(file, bytes):\n            size = len(file)\n            if size < n:\n                return (file, size)\n            # Big string: cut it into smaller chunks\n            file = BytesIO(file)\n\n        if isinstance(file, FileUpload) and not file:\n            raise ValueError('File not specified')\n\n        if hasattr(file, '__class__') and file.__class__ is Pdata:\n            size = len(file)\n            return (file, size)\n\n        seek = file.seek\n        read = file.read\n\n        seek(0, 2)\n        size = end = file.tell()\n\n        if size <= 2 * n:\n            seek(0)\n            if size < n:\n                return read(size), size\n            return Pdata(read(size)), size\n\n        # Make sure we have an _p_jar, even if we are a new object, by\n        # doing a sub-transaction commit.\n        transaction.savepoint(optimistic=True)\n\n        if self._p_jar is None:\n            # Ugh\n            seek(0)\n            return Pdata(read(size)), size\n\n        # Now we're going to build a linked list from back\n        # to front to minimize the number of database updates\n        # and to allow us to get things out of memory as soon as\n        # possible.\n        _next = None\n        while end > 0:\n            pos = end - n\n            if pos < n:\n                pos = 0  # we always want at least n bytes\n            seek(pos)\n\n            # Create the object and assign it a next pointer\n            # in the same transaction, so that there is only\n            # a single database update for it.\n            data = Pdata(read(end - pos))\n            self._p_jar.add(data)\n            data.next = _next\n\n            # Save the object so that we can release its memory.\n            transaction.savepoint(optimistic=True)\n            data._p_deactivate()\n            # The object should be assigned an oid and be a ghost.\n            assert data._p_oid is not None\n            assert data._p_state == -1\n\n            _next = data\n            end = pos\n\n        return (_next, size)\n\n    @security.protected(change_images_and_files)\n    def PUT(self, REQUEST, RESPONSE):\n        \"\"\"Handle HTTP PUT requests\"\"\"\n        self.dav__init(REQUEST, RESPONSE)\n        self.dav__simpleifhandler(REQUEST, RESPONSE, refresh=1)\n\n        type = REQUEST.get_header('content-type', None)\n        file = REQUEST['BODYFILE']\n\n        # Work around ``cgi`` bug\n        # ``cgi`` can turn the request body into a text file using\n        # the default encoding. ``File``, however, insists to work\n        # with bytes and binary files and forbids text.\n        # Convert back.\n        tfile = None\n        if isinstance(file, TextIOBase):  # ``cgi`` bug\n            if hasattr(file, \"buffer\"):\n                file = file.buffer  # underlying binary buffer\n            else:\n                from ZPublisher.HTTPRequest import default_encoding\n                tfile = TemporaryFile(\"wb+\")\n                bufsize = 1 << 16\n                while True:\n                    data = file.read(bufsize)\n                    if not data:\n                        break\n                    tfile.write(data.encode(default_encoding))\n                file.seek(0, 0)\n                tfile.seek(0, 0)\n                file = tfile\n\n        data, size = self._read_data(file)\n        if tfile is not None:\n            tfile.close()\n        content_type = self._get_content_type(file, data, self.__name__,\n                                              type or self.content_type)\n        self.update_data(data, content_type, size)\n\n        RESPONSE.setStatus(204)\n        return RESPONSE\n\n    @security.protected(View)\n    def get_size(self):\n        # Get the size of a file or image.\n        # Returns the size of the file or image.\n        size = self.size\n        if size is None:\n            size = len(self.data)\n        return size\n\n    # deprecated; use get_size!\n    getSize = get_size\n\n    @security.protected(View)\n    def getContentType(self):\n        # Get the content type of a file or image.\n        # Returns the content type (MIME type) of a file or image.\n        return self.content_type\n\n    def __bytes__(self):\n        return bytes(self.data)\n\n    def __str__(self):\n        if PY2:\n            return str(self.data)\n        else:\n            if isinstance(self.data, Pdata):\n                return bytes(self.data).decode(self._get_encoding())\n            else:\n                return self.data.decode(self._get_encoding())\n\n    def __bool__(self):\n        return True\n\n    __nonzero__ = __bool__\n\n    def __len__(self):\n        data = bytes(self.data)\n        return len(data)\n\n    @security.protected(webdav_access)\n    def manage_DAVget(self):\n        \"\"\"Return body for WebDAV.\"\"\"\n        RESPONSE = self.REQUEST.RESPONSE\n\n        if self.ZCacheable_isCachingEnabled():\n            result = self.ZCacheable_get(default=None)\n            if result is not None:\n                # We will always get None from RAMCacheManager but we will\n                # get something implementing the IStreamIterator interface\n                # from FileCacheManager.\n                # the content-length is required here by HTTPResponse.\n                RESPONSE.setHeader('Content-Length', self.size)\n                return result\n\n        data = self.data\n        if isinstance(data, binary_type):\n            RESPONSE.setBase(None)\n            return data\n\n        while data is not None:\n            RESPONSE.write(data.data)\n            data = data.next\n\n        return b''\n\n    if bbb.HAS_ZSERVER:\n\n        @security.protected(ftp_access)\n        def manage_FTPget(self):\n            \"\"\"Return body for ftp.\"\"\"\n            warn(u'manage_FTPget is deprecated and will be removed in Zope 5.',\n                 DeprecationWarning, stacklevel=2)\n            return self.manage_DAVget()\n\n\nInitializeClass(File)\n\n\nmanage_addImageForm = DTMLFile(\n    'dtml/imageAdd',\n    globals(),\n    Kind='Image',\n    kind='image',\n)\n\n\ndef manage_addImage(\n    self,\n    id,\n    file,\n    title='',\n    precondition='',\n    content_type='',\n    REQUEST=None\n):\n    \"\"\"\n    Add a new Image object.\n\n    Creates a new Image object 'id' with the contents of 'file'.\n    \"\"\"\n    id = str(id)\n    title = str(title)\n    content_type = str(content_type)\n    precondition = str(precondition)\n\n    id, title = cookId(id, title, file)\n\n    self = self.this()\n\n    # First, we create the image without data:\n    self._setObject(id, Image(id, title, b'', content_type, precondition))\n\n    newFile = self._getOb(id)\n\n    # Now we \"upload\" the data.  By doing this in two steps, we\n    # can use a database trick to make the upload more efficient.\n    if file:\n        newFile.manage_upload(file)\n    if content_type:\n        newFile.content_type = content_type\n\n    notify(ObjectCreatedEvent(newFile))\n\n    if REQUEST is not None:\n        try:\n            url = self.DestinationURL()\n        except Exception:\n            url = REQUEST['URL1']\n        REQUEST.RESPONSE.redirect('%s/manage_main' % url)\n    return id\n\n\ndef getImageInfo(data):\n    data = bytes(data)\n    size = len(data)\n    height = -1\n    width = -1\n    content_type = ''\n\n    # handle GIFs\n    if (size >= 10) and data[:6] in (b'GIF87a', b'GIF89a'):\n        # Check to see if content_type is correct\n        content_type = 'image/gif'\n        w, h = struct.unpack(\"<HH\", data[6:10])\n        width = int(w)\n        height = int(h)\n\n    # See PNG v1.2 spec (http://www.cdrom.com/pub/png/spec/)\n    # Bytes 0-7 are below, 4-byte chunk length, then 'IHDR'\n    # and finally the 4-byte width, height\n    elif (size >= 24\n          and data[:8] == b'\\211PNG\\r\\n\\032\\n'\n          and data[12:16] == b'IHDR'):\n        content_type = 'image/png'\n        w, h = struct.unpack(\">LL\", data[16:24])\n        width = int(w)\n        height = int(h)\n\n    # Maybe this is for an older PNG version.\n    elif (size >= 16) and (data[:8] == b'\\211PNG\\r\\n\\032\\n'):\n        # Check to see if we have the right content type\n        content_type = 'image/png'\n        w, h = struct.unpack(\">LL\", data[8:16])\n        width = int(w)\n        height = int(h)\n\n    # handle JPEGs\n    elif (size >= 2) and (data[:2] == b'\\377\\330'):\n        content_type = 'image/jpeg'\n        jpeg = BytesIO(data)\n        jpeg.read(2)\n        b = jpeg.read(1)\n        try:\n            while (b and ord(b) != 0xDA):\n                while (ord(b) != 0xFF):\n                    b = jpeg.read(1)\n                while (ord(b) == 0xFF):\n                    b = jpeg.read(1)\n                if (ord(b) >= 0xC0 and ord(b) <= 0xC3):\n                    jpeg.read(3)\n                    h, w = struct.unpack(\">HH\", jpeg.read(4))\n                    break\n                else:\n                    jpeg.read(int(struct.unpack(\">H\", jpeg.read(2))[0]) - 2)\n                b = jpeg.read(1)\n            width = int(w)\n            height = int(h)\n        except Exception:\n            pass\n\n    return content_type, width, height\n\n\nclass Image(File):\n    \"\"\"Image objects can be GIF, PNG or JPEG and have the same methods\n    as File objects.  Images also have a string representation that\n    renders an HTML 'IMG' tag.\n    \"\"\"\n\n    meta_type = 'Image'\n    zmi_icon = 'far fa-file-image'\n\n    security = ClassSecurityInfo()\n    security.declareObjectProtected(View)\n\n    alt = ''\n    height = ''\n    width = ''\n\n    # FIXME: Redundant, already in base class\n    security.declareProtected(change_images_and_files, 'manage_edit')  # NOQA: D001,E501\n    security.declareProtected(change_images_and_files, 'manage_upload')  # NOQA: D001,E501\n    security.declareProtected(View, 'index_html')  # NOQA: D001\n    security.declareProtected(View, 'get_size')  # NOQA: D001\n    security.declareProtected(View, 'getContentType')  # NOQA: D001\n\n    _properties = (\n        {'id': 'title', 'type': 'string'},\n        {'id': 'alt', 'type': 'string'},\n        {'id': 'content_type', 'type': 'string', 'mode': 'w'},\n        {'id': 'height', 'type': 'string'},\n        {'id': 'width', 'type': 'string'},\n    )\n\n    manage_options = (\n        ({'label': 'Edit', 'action': 'manage_main'},\n         {'label': 'View', 'action': 'view_image_or_file'})\n        + PropertyManager.manage_options\n        + RoleManager.manage_options\n        + Item_w__name__.manage_options\n        + Cacheable.manage_options\n    )\n\n    manage_editForm = DTMLFile(\n        'dtml/imageEdit',\n        globals(),\n        Kind='Image',\n        kind='image',\n    )\n    manage_editForm._setName('manage_editForm')\n\n    security.declareProtected(View, 'view_image_or_file')  # NOQA: D001\n    view_image_or_file = DTMLFile('dtml/imageView', globals())\n\n    security.declareProtected(view_management_screens, 'manage')  # NOQA: D001\n    security.declareProtected(view_management_screens, 'manage_main')  # NOQA: D001,E501\n    manage = manage_main = manage_editForm\n    manage_uploadForm = manage_editForm\n\n    @security.private\n    def update_data(self, data, content_type=None, size=None):\n        if isinstance(data, text_type):\n            raise TypeError('Data can only be bytes or file-like.  '\n                            'Unicode objects are expressly forbidden.')\n\n        if size is None:\n            size = len(data)\n\n        self.size = size\n        self.data = data\n\n        ct, width, height = getImageInfo(data)\n        if ct:\n            content_type = ct\n        if width >= 0 and height >= 0:\n            self.width = width\n            self.height = height\n\n        # Now we should have the correct content type, or still None\n        if content_type is not None:\n            self.content_type = content_type\n\n        self.ZCacheable_invalidate()\n        self.ZCacheable_set(None)\n        self.http__refreshEtag()\n\n    def __bytes__(self):\n        return self.tag().encode('utf-8')\n\n    def __str__(self):\n        return self.tag()\n\n    @security.protected(View)\n    def tag(\n        self,\n        height=None,\n        width=None,\n        alt=None,\n        scale=0,\n        xscale=0,\n        yscale=0,\n        css_class=None,\n        title=None,\n        **args\n    ):\n        \"\"\"Generate an HTML IMG tag for this image, with customization.\n\n        Arguments to self.tag() can be any valid attributes of an IMG tag.\n        'src' will always be an absolute pathname, to prevent redundant\n        downloading of images. Defaults are applied intelligently for\n        'height', 'width', and 'alt'. If specified, the 'scale', 'xscale',\n        and 'yscale' keyword arguments will be used to automatically adjust\n        the output height and width values of the image tag.\n        #\n        Since 'class' is a Python reserved word, it cannot be passed in\n        directly in keyword arguments which is a problem if you are\n        trying to use 'tag()' to include a CSS class. The tag() method\n        will accept a 'css_class' argument that will be converted to\n        'class' in the output tag to work around this.\n        \"\"\"\n        if height is None:\n            height = self.height\n        if width is None:\n            width = self.width\n\n        # Auto-scaling support\n        xdelta = xscale or scale\n        ydelta = yscale or scale\n\n        if xdelta and width:\n            width = str(int(round(int(width) * xdelta)))\n        if ydelta and height:\n            height = str(int(round(int(height) * ydelta)))\n\n        result = '<img src=\"%s\"' % (self.absolute_url())\n\n        if alt is None:\n            alt = getattr(self, 'alt', '')\n        result = '%s alt=\"%s\"' % (result, escape(alt, True))\n\n        if title is None:\n            title = getattr(self, 'title', '')\n        result = '%s title=\"%s\"' % (result, escape(title, True))\n\n        if height:\n            result = '%s height=\"%s\"' % (result, height)\n\n        if width:\n            result = '%s width=\"%s\"' % (result, width)\n\n        if css_class is not None:\n            result = '%s class=\"%s\"' % (result, css_class)\n\n        for key in list(args.keys()):\n            value = args.get(key)\n            if value:\n                result = '%s %s=\"%s\"' % (result, key, value)\n\n        return '%s />' % result\n\n\nInitializeClass(Image)\n\n\ndef cookId(id, title, file):\n    if not id and hasattr(file, 'filename'):\n        filename = file.filename\n        title = title or filename\n        id = filename[max(filename.rfind('/'),\n                          filename.rfind('\\\\'),\n                          filename.rfind(':'),\n                          ) + 1:]\n    return id, title\n\n\nclass Pdata(Persistent, Implicit):\n    # Wrapper for possibly large data\n\n    next = None\n\n    def __init__(self, data):\n        self.data = data\n\n    if PY2:\n        def __getslice__(self, i, j):\n            return self.data[i:j]\n\n    def __getitem__(self, key):\n        return self.data[key]\n\n    def __len__(self):\n        data = bytes(self)\n        return len(data)\n\n    def __bytes__(self):\n        _next = self.next\n        if _next is None:\n            return self.data\n\n        r = [self.data]\n        while _next is not None:\n            self = _next\n            r.append(self.data)\n            _next = self.next\n\n        return b''.join(r)\n\n    if PY2:\n        __str__ = __bytes__\n", "# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport time\nimport unittest\nfrom io import BytesIO\n\nimport six\nfrom six import PY3\n\nimport OFS.Image\nimport Testing.testbrowser\nimport Testing.ZopeTestCase\nimport transaction\nimport Zope2\nfrom Acquisition import aq_base\nfrom OFS.Application import Application\nfrom OFS.Cache import ZCM_MANAGERS\nfrom OFS.Image import Pdata\nfrom OFS.SimpleItem import SimpleItem\nfrom Testing.makerequest import makerequest\nfrom zExceptions import Redirect\nfrom zope.component import adapter\nfrom zope.datetime import rfc1123_date\nfrom zope.lifecycleevent.interfaces import IObjectCreatedEvent\nfrom zope.lifecycleevent.interfaces import IObjectModifiedEvent\nfrom ZPublisher.HTTPRequest import HTTPRequest\nfrom ZPublisher.HTTPResponse import HTTPResponse\n\n\nhere = os.path.dirname(os.path.abspath(__file__))\nfiledata = os.path.join(here, 'test.gif')\n\nZope2.startup_wsgi()\n\n\ndef makeConnection():\n    import ZODB\n    from ZODB.DemoStorage import DemoStorage\n\n    s = DemoStorage()\n    return ZODB.DB(s).open()\n\n\ndef aputrequest(file, content_type):\n    resp = HTTPResponse(stdout=sys.stdout)\n    environ = {}\n    environ['SERVER_NAME'] = 'foo'\n    environ['SERVER_PORT'] = '80'\n    environ['REQUEST_METHOD'] = 'PUT'\n    environ['CONTENT_TYPE'] = content_type\n    req = HTTPRequest(stdin=file, environ=environ, response=resp)\n    return req\n\n\nclass DummyCache(object):\n\n    def __init__(self):\n        self.clear()\n\n    def ZCache_set(self, ob, data, view_name='', keywords=None,\n                   mtime_func=None):\n        self.set = (ob, data)\n\n    def ZCache_get(self, ob, data, view_name='', keywords=None,\n                   mtime_func=None):\n        self.get = ob\n        if self.si:\n            return self.si\n\n    def ZCache_invalidate(self, ob):\n        self.invalidated = ob\n\n    def clear(self):\n        self.set = None\n        self.get = None\n        self.invalidated = None\n        self.si = None\n\n    def setStreamIterator(self, si):\n        self.si = si\n\n\nADummyCache = DummyCache()\n\n\nclass DummyCacheManager(SimpleItem):\n    def ZCacheManager_getCache(self):\n        return ADummyCache\n\n\nclass EventCatcher(object):\n\n    def __init__(self):\n        self.created = []\n        self.modified = []\n        self.setUp()\n\n    def setUp(self):\n        from zope.component import provideHandler\n        provideHandler(self.handleCreated)\n        provideHandler(self.handleModified)\n\n    def tearDown(self):\n        from zope.component import getSiteManager\n        getSiteManager().unregisterHandler(self.handleCreated)\n        getSiteManager().unregisterHandler(self.handleModified)\n\n    def reset(self):\n        self.created = []\n        self.modified = []\n\n    @adapter(IObjectCreatedEvent)\n    def handleCreated(self, event):\n        if isinstance(event.object, OFS.Image.File):\n            self.created.append(event)\n\n    @adapter(IObjectModifiedEvent)\n    def handleModified(self, event):\n        if isinstance(event.object, OFS.Image.File):\n            self.modified.append(event)\n\n\nclass FileTests(unittest.TestCase):\n    content_type = 'application/octet-stream'\n    factory = 'manage_addFile'\n\n    def setUp(self):\n        with open(filedata, 'rb') as fd:\n            self.data = fd.read()\n        self.connection = makeConnection()\n        self.eventCatcher = EventCatcher()\n        try:\n            r = self.connection.root()\n            a = Application()\n            r['Application'] = a\n            self.root = a\n            responseOut = self.responseOut = BytesIO()\n            self.app = makerequest(self.root, stdout=responseOut)\n            self.app.dcm = DummyCacheManager()\n            factory = getattr(self.app, self.factory)\n            factory('file',\n                    file=self.data, content_type=self.content_type)\n            self.app.file.ZCacheable_setManagerId('dcm')\n            self.app.file.ZCacheable_setEnabled(enabled=1)\n            setattr(self.app, ZCM_MANAGERS, ('dcm',))\n            # Hack, we need a _p_mtime for the file, so we make sure that it\n            # has one.\n            transaction.commit()\n        except Exception:\n            transaction.abort()\n            self.connection.close()\n            raise\n        transaction.begin()\n        self.file = getattr(self.app, 'file')\n\n        # Since we do the create here, let's test the events here too\n        self.assertEqual(1, len(self.eventCatcher.created))\n        self.assertTrue(\n            aq_base(self.eventCatcher.created[0].object) is aq_base(self.file))\n\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(\n            aq_base(self.eventCatcher.created[0].object) is aq_base(self.file))\n\n        self.eventCatcher.reset()\n\n    def tearDown(self):\n        del self.file\n        transaction.abort()\n        self.connection.close()\n        del self.app\n        del self.responseOut\n        del self.root\n        del self.connection\n        ADummyCache.clear()\n        self.eventCatcher.tearDown()\n\n    def testViewImageOrFile(self):\n        self.assertRaises(Redirect, self.file.view_image_or_file, 'foo')\n\n    def testUpdateData(self):\n        self.file.update_data(b'foo')\n        self.assertEqual(self.file.size, 3)\n        self.assertEqual(self.file.data, b'foo')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n\n    def testReadData(self):\n        s = b'a' * (2 << 16)\n        data, size = self.file._read_data(BytesIO(s))\n        self.assertIsInstance(data, Pdata)\n        self.assertEqual(bytes(data), s)\n        self.assertEqual(len(s), len(bytes(data)))\n        self.assertEqual(len(s), size)\n\n    def testBigPdata(self):\n        # Test that a big enough string is split into several Pdata\n        # From a file\n        s = b'a' * (1 << 16) * 3\n        data, size = self.file._read_data(BytesIO(s))\n        self.assertNotEqual(data.next, None)\n        # From a string\n        data, size = self.file._read_data(s)\n        self.assertNotEqual(data.next, None)\n\n    def testManageEditWithFileData(self):\n        self.file.manage_edit('foobar', 'text/plain', filedata=b'ASD')\n        self.assertEqual(self.file.title, 'foobar')\n        self.assertEqual(self.file.content_type, 'text/plain')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageEditWithoutFileData(self):\n        self.file.manage_edit('foobar', 'text/plain')\n        self.assertEqual(self.file.title, 'foobar')\n        self.assertEqual(self.file.content_type, 'text/plain')\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageUpload(self):\n        f = BytesIO(b'jammyjohnson')\n        self.file.manage_upload(f)\n        self.assertEqual(self.file.data, b'jammyjohnson')\n        self.assertEqual(self.file.content_type, 'application/octet-stream')\n        self.assertEqual(1, len(self.eventCatcher.modified))\n        self.assertTrue(self.eventCatcher.modified[0].object is self.file)\n\n    def testManageUploadWithoutFileData(self):\n        self.file.manage_upload()\n        self.assertEqual(0, len(self.eventCatcher.modified))\n\n    def testIfModSince(self):\n        now = time.time()\n        e = {'SERVER_NAME': 'foo',\n             'SERVER_PORT': '80',\n             'REQUEST_METHOD': 'GET'}\n\n        # not modified since\n        t_notmod = rfc1123_date(now)\n        e['HTTP_IF_MODIFIED_SINCE'] = t_notmod\n        out = BytesIO()\n        resp = HTTPResponse(stdout=out)\n        req = HTTPRequest(sys.stdin, e, resp)\n        data = self.file.index_html(req, resp)\n        self.assertEqual(resp.getStatus(), 304)\n        self.assertEqual(data, b'')\n\n        # modified since\n        t_mod = rfc1123_date(now - 100)\n        e['HTTP_IF_MODIFIED_SINCE'] = t_mod\n        out = BytesIO()\n        resp = HTTPResponse(stdout=out)\n        req = HTTPRequest(sys.stdin, e, resp)\n        data = self.file.index_html(req, resp)\n        self.assertEqual(resp.getStatus(), 200)\n        self.assertEqual(data, bytes(self.file.data))\n\n    def testPUT(self):\n        s = b'# some python\\n'\n\n        # with content type\n        data = BytesIO(s)\n        req = aputrequest(data, 'text/x-python')\n        req.processInputs()\n        self.file.PUT(req, req.RESPONSE)\n\n        self.assertEqual(self.file.content_type, 'text/x-python')\n        self.assertEqual(self.file.data, s)\n\n        # without content type\n        data.seek(0)\n        req = aputrequest(data, '')\n        req.processInputs()\n        self.file.PUT(req, req.RESPONSE)\n\n        self.assertEqual(self.file.content_type, 'text/x-python')\n        self.assertEqual(self.file.data, s)\n\n    def testIndexHtmlWithPdata(self):\n        self.file.manage_upload(b'a' * (2 << 16))  # 128K\n        self.file.index_html(self.app.REQUEST, self.app.REQUEST.RESPONSE)\n        self.assertTrue(self.app.REQUEST.RESPONSE._wrote)\n\n    def testIndexHtmlWithString(self):\n        self.file.manage_upload(b'a' * 100)  # 100 bytes\n        self.file.index_html(self.app.REQUEST, self.app.REQUEST.RESPONSE)\n        self.assertTrue(not self.app.REQUEST.RESPONSE._wrote)\n\n    def testPrincipiaSearchSource_not_text(self):\n        data = ''.join([chr(x) for x in range(256)])\n        if PY3:\n            data = data.encode('utf-8')\n        self.file.manage_edit('foobar', 'application/octet-stream',\n                              filedata=data)\n        self.assertEqual(self.file.PrincipiaSearchSource(), b'')\n\n    def testPrincipiaSearchSource_text(self):\n        self.file.manage_edit('foobar', 'text/plain',\n                              filedata=b'Now is the time for all good men to '\n                                       b'come to the aid of the Party.')\n        self.assertTrue(b'Party' in self.file.PrincipiaSearchSource())\n\n    def test_manage_DAVget_binary(self):\n        self.assertEqual(self.file.manage_DAVget(), self.data)\n\n    def test_manage_DAVget_text(self):\n        text = (b'Now is the time for all good men to '\n                b'come to the aid of the Party.')\n        self.file.manage_edit('foobar', 'text/plain', filedata=text)\n        self.assertEqual(self.file.manage_DAVget(), text)\n\n    def test_interfaces(self):\n        from OFS.Image import File\n        from OFS.interfaces import IWriteLock\n        from zope.interface.verify import verifyClass\n        from ZPublisher.HTTPRangeSupport import HTTPRangeInterface\n\n        verifyClass(HTTPRangeInterface, File)\n        verifyClass(IWriteLock, File)\n\n    def testUnicode(self):\n        val = u'some unicode string here'\n\n        self.assertRaises(TypeError, self.file.update_data,\n                          data=val, content_type='text/plain')\n\n    def testStr(self):\n        small_data = b'small data'\n        self.file.manage_upload(file=small_data)\n        self.assertEqual(str(self.file), small_data.decode())\n\n        # Make sure Pdata contents are handled correctly\n        big_data = b'a' * (2 << 16)\n        self.file.manage_upload(file=big_data)\n        self.assertEqual(str(self.file), big_data.decode())\n\n\nclass ImageTests(FileTests):\n    content_type = 'image/gif'\n    factory = 'manage_addImage'\n\n    def testUpdateData(self):\n        self.file.update_data(self.data)\n        self.assertEqual(self.file.size, len(self.data))\n        self.assertEqual(self.file.data, self.data)\n        self.assertEqual(self.file.width, 16)\n        self.assertEqual(self.file.height, 16)\n        self.assertTrue(ADummyCache.invalidated)\n        self.assertTrue(ADummyCache.set)\n\n    def testTag(self):\n        tag_fmt = ('<img src=\"http://nohost/file\" '\n                   'alt=\"%s\" title=\"%s\" height=\"16\" width=\"16\" />')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('', '')))\n        self.file.manage_changeProperties(title='foo')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('', 'foo')))\n        self.file.manage_changeProperties(alt='bar')\n        self.assertEqual(self.file.tag(), (tag_fmt % ('bar', 'foo')))\n\n    testStr = testTag\n\n    def testViewImageOrFile(self):\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        result = self.file.index_html(request, response)\n        self.assertEqual(result, self.data)\n        self.assertIsNone(response.getHeader(\"Content-Disposition\"))\n\n    def test_interfaces(self):\n        from OFS.Image import Image\n        from OFS.interfaces import IWriteLock\n        from zope.interface.verify import verifyClass\n\n        verifyClass(IWriteLock, Image)\n\n    def test_text_representation_is_tag(self):\n        self.assertEqual(six.text_type(self.file),\n                         '<img src=\"http://nohost/file\"'\n                         ' alt=\"\" title=\"\" height=\"16\" width=\"16\" />')\n\n\nclass SVGTests(ImageTests):\n    content_type = 'image/svg+xml'\n\n    def testViewImageOrFile(self):\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        result = self.file.index_html(request, response)\n        self.assertEqual(result, self.data)\n        self.assertEqual(\n            response.getHeader(\"Content-Disposition\"),\n            \"attachment; filename*=UTF-8''file.svg\",\n        )\n\n    def testViewImageOrFileNonAscii(self):\n        try:\n            factory = getattr(self.app, self.factory)\n            factory('h\u00e4llo',\n                    file=self.data, content_type=self.content_type)\n            transaction.commit()\n        except Exception:\n            transaction.abort()\n            self.connection.close()\n            raise\n        transaction.begin()\n        image = getattr(self.app, 'h\u00e4llo')\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        result = image.index_html(request, response)\n        self.assertEqual(result, self.data)\n        self.assertEqual(\n            response.getHeader(\"Content-Disposition\"),\n            \"attachment; filename*=UTF-8''h%C3%A4llo.svg\",\n        )\n\n    def testViewImageOrFile_with_denylist(self):\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        self.file.use_denylist = True\n        result = self.file.index_html(request, response)\n        self.assertEqual(result, self.data)\n        self.assertEqual(\n            response.getHeader(\"Content-Disposition\"),\n            \"attachment; filename*=UTF-8''file.svg\",\n        )\n\n    def testViewImageOrFile_with_empty_denylist(self):\n        request = self.app.REQUEST\n        response = request.RESPONSE\n        self.file.use_denylist = True\n        self.file.disallowed_inline_mimetypes = []\n        result = self.file.index_html(request, response)\n        self.assertEqual(result, self.data)\n        self.assertIsNone(response.getHeader(\"Content-Disposition\"))\n\n\nclass FileEditTests(Testing.ZopeTestCase.FunctionalTestCase):\n    \"\"\"Browser testing ..Image.File\"\"\"\n\n    def setUp(self):\n        super(FileEditTests, self).setUp()\n        uf = self.app.acl_users\n        uf.userFolderAddUser('manager', 'manager_pass', ['Manager'], [])\n        self.app.manage_addFile('file')\n\n        transaction.commit()\n        self.browser = Testing.testbrowser.Browser()\n        self.browser.login('manager', 'manager_pass')\n\n    def test_Image__manage_main__1(self):\n        \"\"\"It shows the content of text files as text.\"\"\"\n        self.app.file.update_data(u'h\u00e4llo'.encode('utf-8'))\n        self.browser.open('http://localhost/file/manage_main')\n        text = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text, 'h\u00e4llo')\n\n    @unittest.skipIf(six.PY2, \"feature not supported on Python 2\")\n    def test_Image__manage_main__3(self):\n        \"\"\"It shows an error message if the file content cannot be decoded.\"\"\"\n        self.app.file.update_data(u'h\u00e4llo'.encode('latin-1'))\n        self.browser.open('http://localhost/file/manage_main')\n        self.assertIn(\n            \"The file could not be decoded with 'utf-8'.\",\n            self.browser.contents)\n\n    def test_Image__manage_upload__1(self):\n        \"\"\"It uploads a file, replaces the content and sets content type.\"\"\"\n        self.browser.open('http://localhost/file/manage_main')\n        self.browser.getControl(name='file').add_file(\n            b'test text file', 'text/plain', 'TestFile.txt')\n        self.browser.getControl('Upload File').click()\n        self.assertIn('Saved changes', self.browser.contents)\n        self.assertEqual(\n            self.browser.getControl('Content Type').value, 'text/plain')\n        text = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text, 'test text file')\n\n    def test_Image__manage_edit__1(self):\n        \"\"\"It it possible to change the file's content via browser.\"\"\"\n        self.browser.open('http://localhost/file/manage_main')\n        text_1 = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text_1, '')\n        self.browser.getControl(name='filedata:text').value = u'h\u00e4llo'\n        self.browser.getControl('Save Changes').click()\n        self.assertIn('Saved changes', self.browser.contents)\n        text_2 = self.browser.getControl(name='filedata:text').value\n        self.assertEqual(text_2, 'h\u00e4llo')\n"], "filenames": ["CHANGES.rst", "src/OFS/Image.py", "src/OFS/tests/testFileAndImage.py"], "buggy_code_start_loc": [11, 15, 370], "buggy_code_end_loc": [11, 457, 382], "fixing_code_start_loc": [12, 16, 371], "fixing_code_end_loc": [22, 557, 439], "type": "CWE-79", "message": "Zope is an open-source web application server. Prior to versions 4.8.10 and 5.8.5, there is a stored cross site scripting vulnerability for SVG images. Note that an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link. Patches are available in Zope 4.8.10 and 5.8.5. As a workaround, make sure the \"Add Documents, Images, and Files\" permission is only assigned to trusted roles. By default, only the Manager has this permission.", "other": {"cve": {"id": "CVE-2023-42458", "sourceIdentifier": "security-advisories@github.com", "published": "2023-09-21T17:15:22.483", "lastModified": "2023-09-25T16:05:03.250", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Zope is an open-source web application server. Prior to versions 4.8.10 and 5.8.5, there is a stored cross site scripting vulnerability for SVG images. Note that an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link. Patches are available in Zope 4.8.10 and 5.8.5. As a workaround, make sure the \"Add Documents, Images, and Files\" permission is only assigned to trusted roles. By default, only the Manager has this permission."}, {"lang": "es", "value": "Zope es un servidor de aplicaciones web de c\u00f3digo abierto. Antes de las versiones 4.8.10 y 5.8.5, existe una vulnerabilidad de Cross Site Scripting almacenado para im\u00e1genes SVG. Tenga en cuenta que una etiqueta de imagen con una imagen SVG como fuente nunca es vulnerable, incluso cuando la imagen SVG contiene c\u00f3digo malicioso. Para explotar la vulnerabilidad, un atacante primero tendr\u00eda que cargar una imagen y luego enga\u00f1ar al usuario para que siga un enlace especialmente manipulado. Los parches est\u00e1n disponibles en Zope 4.8.10 y 5.8.5. Como workaround, aseg\u00farese de que el permiso \"Add Documents, Images, and Files\" solo est\u00e9 asignado a roles confiables. De forma predeterminada, s\u00f3lo el Administrador tiene este permiso."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.7, "baseSeverity": "LOW"}, "exploitabilityScore": 1.2, "impactScore": 2.5}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}, {"lang": "en", "value": "CWE-80"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:zope:zope:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.8.10", "matchCriteriaId": "9E52EB57-D398-4D1B-8AB1-7D2B97991DC3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:zope:zope:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.0.0", "versionEndExcluding": "5.8.5", "matchCriteriaId": "D9C57E3B-BC61-4FAF-A431-4E9C9402F251"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2023/09/22/2", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/zopefoundation/Zope/commit/603b0a12881c90a072a7a65e32d47ed898ce37cb", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/zopefoundation/Zope/security/advisories/GHSA-wm8q-9975-xh5v", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/zopefoundation/Zope/commit/26a55dbc301db417f47cafda6fe0f983b5690088"}}