{"buggy_code": ["// +build go1.7\n\n// Copyright 2014 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\n// Gogs is a painless self-hosted Git Service.\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/urfave/cli\"\n\n\t\"github.com/gogs/gogs/cmd\"\n\t\"github.com/gogs/gogs/pkg/setting\"\n)\n\nconst APP_VER = \"0.11.81.1217\"\n\nfunc init() {\n\tsetting.AppVer = APP_VER\n}\n\nfunc main() {\n\tapp := cli.NewApp()\n\tapp.Name = \"Gogs\"\n\tapp.Usage = \"A painless self-hosted Git service\"\n\tapp.Version = APP_VER\n\tapp.Commands = []cli.Command{\n\t\tcmd.Web,\n\t\tcmd.Serv,\n\t\tcmd.Hook,\n\t\tcmd.Cert,\n\t\tcmd.Admin,\n\t\tcmd.Import,\n\t\tcmd.Backup,\n\t\tcmd.Restore,\n\t}\n\tapp.Run(os.Args)\n}\n", "// Copyright 2018 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage tool\n\nimport (\n\t\"strings\"\n)\n\n// IsSameSiteURLPath returns true if the URL path belongs to the same site, false otherwise.\n// False: //url, http://url, /\\url\n// True: /url\nfunc IsSameSiteURLPath(url string) bool {\n\treturn len(url) >= 2 && url[0] == '/' && url[1] != '/' && url[1] != '\\\\'\n}\n\n// SanitizePath sanitizes user-defined file paths to prevent remote code execution.\nfunc SanitizePath(path string) string {\n\treturn strings.TrimLeft(path, \"./\")\n}\n", "// Copyright 2018 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage tool\n\nimport (\n\t\"testing\"\n\n\t. \"github.com/smartystreets/goconvey/convey\"\n)\n\nfunc Test_IsSameSiteURLPath(t *testing.T) {\n\tConvey(\"Check if a path belongs to the same site\", t, func() {\n\t\ttestCases := []struct {\n\t\t\turl    string\n\t\t\texpect bool\n\t\t}{\n\t\t\t{\"//github.com\", false},\n\t\t\t{\"http://github.com\", false},\n\t\t\t{\"https://github.com\", false},\n\t\t\t{\"/\\\\github.com\", false},\n\n\t\t\t{\"/admin\", true},\n\t\t\t{\"/user/repo\", true},\n\t\t}\n\n\t\tfor _, tc := range testCases {\n\t\t\tSo(IsSameSiteURLPath(tc.url), ShouldEqual, tc.expect)\n\t\t}\n\t})\n}\n\nfunc Test_SanitizePath(t *testing.T) {\n\tConvey(\"Sanitize malicious user-defined path\", t, func() {\n\t\ttestCases := []struct {\n\t\t\tpath   string\n\t\t\texpect string\n\t\t}{\n\t\t\t{\"../../../../../../../../../data/gogs/data/sessions/a/9/a9f0ab6c3ef63dd8\", \"data/gogs/data/sessions/a/9/a9f0ab6c3ef63dd8\"},\n\n\t\t\t{\"data/sessions/a/9/a9f0ab6c3ef63dd8\", \"data/sessions/a/9/a9f0ab6c3ef63dd8\"},\n\t\t}\n\t\tfor _, tc := range testCases {\n\t\t\tSo(SanitizePath(tc.path), ShouldEqual, tc.expect)\n\t\t}\n\t})\n}\n", "0.11.81.1217\n"], "fixing_code": ["// +build go1.7\n\n// Copyright 2014 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\n// Gogs is a painless self-hosted Git Service.\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/urfave/cli\"\n\n\t\"github.com/gogs/gogs/cmd\"\n\t\"github.com/gogs/gogs/pkg/setting\"\n)\n\nconst APP_VER = \"0.11.82.1218\"\n\nfunc init() {\n\tsetting.AppVer = APP_VER\n}\n\nfunc main() {\n\tapp := cli.NewApp()\n\tapp.Name = \"Gogs\"\n\tapp.Usage = \"A painless self-hosted Git service\"\n\tapp.Version = APP_VER\n\tapp.Commands = []cli.Command{\n\t\tcmd.Web,\n\t\tcmd.Serv,\n\t\tcmd.Hook,\n\t\tcmd.Cert,\n\t\tcmd.Admin,\n\t\tcmd.Import,\n\t\tcmd.Backup,\n\t\tcmd.Restore,\n\t}\n\tapp.Run(os.Args)\n}\n", "// Copyright 2018 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage tool\n\nimport (\n\t\"strings\"\n)\n\n// IsSameSiteURLPath returns true if the URL path belongs to the same site, false otherwise.\n// False: //url, http://url, /\\url\n// True: /url\nfunc IsSameSiteURLPath(url string) bool {\n\treturn len(url) >= 2 && url[0] == '/' && url[1] != '/' && url[1] != '\\\\'\n}\n\n// SanitizePath sanitizes user-defined file paths to prevent remote code execution.\nfunc SanitizePath(path string) string {\n\tpath = strings.TrimLeft(path, \"/\")\n\tpath = strings.Replace(path, \"../\", \"\", -1)\n\treturn path\n}\n", "// Copyright 2018 The Gogs Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n\npackage tool\n\nimport (\n\t\"testing\"\n\n\t. \"github.com/smartystreets/goconvey/convey\"\n)\n\nfunc Test_IsSameSiteURLPath(t *testing.T) {\n\tConvey(\"Check if a path belongs to the same site\", t, func() {\n\t\ttestCases := []struct {\n\t\t\turl    string\n\t\t\texpect bool\n\t\t}{\n\t\t\t{\"//github.com\", false},\n\t\t\t{\"http://github.com\", false},\n\t\t\t{\"https://github.com\", false},\n\t\t\t{\"/\\\\github.com\", false},\n\n\t\t\t{\"/admin\", true},\n\t\t\t{\"/user/repo\", true},\n\t\t}\n\n\t\tfor _, tc := range testCases {\n\t\t\tSo(IsSameSiteURLPath(tc.url), ShouldEqual, tc.expect)\n\t\t}\n\t})\n}\n\nfunc Test_SanitizePath(t *testing.T) {\n\tConvey(\"Sanitize malicious user-defined path\", t, func() {\n\t\ttestCases := []struct {\n\t\t\tpath   string\n\t\t\texpect string\n\t\t}{\n\t\t\t{\"../../../../../../../../../data/gogs/data/sessions/a/9/a9f0ab6c3ef63dd8\", \"data/gogs/data/sessions/a/9/a9f0ab6c3ef63dd8\"},\n\t\t\t{\"data/gogs/../../../../../../../../../data/sessions/a/9/a9f0ab6c3ef63dd8\", \"data/gogs/data/sessions/a/9/a9f0ab6c3ef63dd8\"},\n\n\t\t\t{\"data/sessions/a/9/a9f0ab6c3ef63dd8\", \"data/sessions/a/9/a9f0ab6c3ef63dd8\"},\n\t\t}\n\t\tfor _, tc := range testCases {\n\t\t\tSo(SanitizePath(tc.path), ShouldEqual, tc.expect)\n\t\t}\n\t})\n}\n", "0.11.82.1218\n"], "filenames": ["gogs.go", "pkg/tool/path.go", "pkg/tool/path_test.go", "templates/.VERSION"], "buggy_code_start_loc": [19, 20, 40, 1], "buggy_code_end_loc": [20, 21, 40, 2], "fixing_code_start_loc": [19, 20, 41, 1], "fixing_code_end_loc": [20, 23, 42, 2], "type": "CWE-22", "message": "In pkg/tool/path.go in Gogs before 0.11.82.1218, a directory traversal in the file-upload functionality can allow an attacker to create a file under data/sessions on the server, a similar issue to CVE-2018-18925.", "other": {"cve": {"id": "CVE-2018-20303", "sourceIdentifier": "cve@mitre.org", "published": "2018-12-20T00:29:00.350", "lastModified": "2019-01-31T19:02:30.910", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In pkg/tool/path.go in Gogs before 0.11.82.1218, a directory traversal in the file-upload functionality can allow an attacker to create a file under data/sessions on the server, a similar issue to CVE-2018-18925."}, {"lang": "es", "value": "En pkg/tool/path.go en Gogs en versiones anteriores a la 0.11.82.1218, un salto de directorio en la funcionalidad de subida de archivos puede permitir que un atacante cree un archivo en data/sessions en el servidor. Este problema es similar a CVE-2018-18925."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gogs:gogs:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.11.82.1218", "matchCriteriaId": "76D9F97B-6525-4671-B70A-025DAE48F051"}]}]}], "references": [{"url": "https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/gogs/gogs/issues/5558", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://pentesterlab.com/exercises/cve-2018-18925/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce"}}