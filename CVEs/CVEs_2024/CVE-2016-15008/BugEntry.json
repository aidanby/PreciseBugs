{"buggy_code": ["/* jQuery Knob by aterrien, https://github.com/aterrien/jQuery-Knob, MIT License */\n(function(e){if(typeof define===\"function\"&&define.amd){define([\"jquery\"],e)}else{e(jQuery)}})(function(e){\"use strict\";var t={},n=Math.max,r=Math.min;t.c={};t.c.d=e(document);t.c.t=function(e){return e.originalEvent.touches.length-1};t.o=function(){var n=this;this.o=null;this.$=null;this.i=null;this.g=null;this.v=null;this.cv=null;this.x=0;this.y=0;this.w=0;this.h=0;this.$c=null;this.c=null;this.t=0;this.isInit=false;this.fgColor=null;this.pColor=null;this.dH=null;this.cH=null;this.eH=null;this.rH=null;this.scale=1;this.relative=false;this.relativeWidth=false;this.relativeHeight=false;this.$div=null;this.run=function(){var t=function(e,t){var r;for(r in t){n.o[r]=t[r]}n._carve().init();n._configure()._draw()};if(this.$.data(\"kontroled\"))return;this.$.data(\"kontroled\",true);this.extend();this.o=e.extend({min:this.$.data(\"min\")!==undefined?this.$.data(\"min\"):0,max:this.$.data(\"max\")!==undefined?this.$.data(\"max\"):100,stopper:true,readOnly:this.$.data(\"readonly\")||this.$.attr(\"readonly\")===\"readonly\",cursor:this.$.data(\"cursor\")===true&&30||this.$.data(\"cursor\")||0,thickness:this.$.data(\"thickness\")&&Math.max(Math.min(this.$.data(\"thickness\"),1),.01)||.35,lineCap:this.$.data(\"linecap\")||\"butt\",width:this.$.data(\"width\")||200,height:this.$.data(\"height\")||200,displayInput:this.$.data(\"displayinput\")==null||this.$.data(\"displayinput\"),displayPrevious:this.$.data(\"displayprevious\"),fgColor:this.$.data(\"fgcolor\")||\"#87CEEB\",inputColor:this.$.data(\"inputcolor\"),font:this.$.data(\"font\")||\"Arial\",fontWeight:this.$.data(\"font-weight\")||\"bold\",inline:false,step:this.$.data(\"step\")||1,rotation:this.$.data(\"rotation\"),draw:null,change:null,cancel:null,release:null,format:function(e){return e},parse:function(e){return parseFloat(e)}},this.o);this.o.flip=this.o.rotation===\"anticlockwise\"||this.o.rotation===\"acw\";if(!this.o.inputColor){this.o.inputColor=this.o.fgColor}if(this.$.is(\"fieldset\")){this.v={};this.i=this.$.find(\"input\");this.i.each(function(t){var r=e(this);n.i[t]=r;n.v[t]=n.o.parse(r.val());r.bind(\"change blur\",function(){var e={};e[t]=r.val();n.val(n._validate(e))})});this.$.find(\"legend\").remove()}else{this.i=this.$;this.v=this.o.parse(this.$.val());this.v===\"\"&&(this.v=this.o.min);this.$.bind(\"change blur\",function(){n.val(n._validate(n.o.parse(n.$.val())))})}!this.o.displayInput&&this.$.hide();this.$c=e(document.createElement(\"canvas\")).attr({width:this.o.width,height:this.o.height});this.$div=e('<div style=\"'+(this.o.inline?\"display:inline;\":\"\")+\"width:\"+this.o.width+\"px;height:\"+this.o.height+\"px;\"+'\"></div>');this.$.wrap(this.$div).before(this.$c);this.$div=this.$.parent();if(typeof G_vmlCanvasManager!==\"undefined\"){G_vmlCanvasManager.initElement(this.$c[0])}this.c=this.$c[0].getContext?this.$c[0].getContext(\"2d\"):null;if(!this.c){throw{name:\"CanvasNotSupportedException\",message:\"Canvas not supported. Please use excanvas on IE8.0.\",toString:function(){return this.name+\": \"+this.message}}}this.scale=(window.devicePixelRatio||1)/(this.c.webkitBackingStorePixelRatio||this.c.mozBackingStorePixelRatio||this.c.msBackingStorePixelRatio||this.c.oBackingStorePixelRatio||this.c.backingStorePixelRatio||1);this.relativeWidth=this.o.width%1!==0&&this.o.width.indexOf(\"%\");this.relativeHeight=this.o.height%1!==0&&this.o.height.indexOf(\"%\");this.relative=this.relativeWidth||this.relativeHeight;this._carve();if(this.v instanceof Object){this.cv={};this.copy(this.v,this.cv)}else{this.cv=this.v}this.$.bind(\"configure\",t).parent().bind(\"configure\",t);this._listen()._configure()._xy().init();this.isInit=true;this.$.val(this.o.format(this.v));this._draw();return this};this._carve=function(){if(this.relative){var e=this.relativeWidth?this.$div.parent().width()*parseInt(this.o.width)/100:this.$div.parent().width(),t=this.relativeHeight?this.$div.parent().height()*parseInt(this.o.height)/100:this.$div.parent().height();this.w=this.h=Math.min(e,t)}else{this.w=this.o.width;this.h=this.o.height}this.$div.css({width:this.w+\"px\",height:this.h+\"px\"});this.$c.attr({width:this.w,height:this.h});if(this.scale!==1){this.$c[0].width=this.$c[0].width*this.scale;this.$c[0].height=this.$c[0].height*this.scale;this.$c.width(this.w);this.$c.height(this.h)}return this};this._draw=function(){var e=true;n.g=n.c;n.clear();n.dH&&(e=n.dH());e!==false&&n.draw()};this._touch=function(e){var r=function(e){var t=n.xy2val(e.originalEvent.touches[n.t].pageX,e.originalEvent.touches[n.t].pageY);if(t==n.cv)return;if(n.cH&&n.cH(t)===false)return;n.change(n._validate(t));n._draw()};this.t=t.c.t(e);r(e);t.c.d.bind(\"touchmove.k\",r).bind(\"touchend.k\",function(){t.c.d.unbind(\"touchmove.k touchend.k\");n.val(n.cv)});return this};this._mouse=function(e){var r=function(e){var t=n.xy2val(e.pageX,e.pageY);if(t==n.cv)return;if(n.cH&&n.cH(t)===false)return;n.change(n._validate(t));n._draw()};r(e);t.c.d.bind(\"mousemove.k\",r).bind(\"keyup.k\",function(e){if(e.keyCode===27){t.c.d.unbind(\"mouseup.k mousemove.k keyup.k\");if(n.eH&&n.eH()===false)return;n.cancel()}}).bind(\"mouseup.k\",function(e){t.c.d.unbind(\"mousemove.k mouseup.k keyup.k\");n.val(n.cv)});return this};this._xy=function(){var e=this.$c.offset();this.x=e.left;this.y=e.top;return this};this._listen=function(){if(!this.o.readOnly){this.$c.bind(\"mousedown\",function(e){e.preventDefault();n._xy()._mouse(e)}).bind(\"touchstart\",function(e){e.preventDefault();n._xy()._touch(e)});this.listen()}else{this.$.attr(\"readonly\",\"readonly\")}if(this.relative){e(window).resize(function(){n._carve().init();n._draw()})}return this};this._configure=function(){if(this.o.draw)this.dH=this.o.draw;if(this.o.change)this.cH=this.o.change;if(this.o.cancel)this.eH=this.o.cancel;if(this.o.release)this.rH=this.o.release;if(this.o.displayPrevious){this.pColor=this.h2rgba(this.o.fgColor,\"0.4\");this.fgColor=this.h2rgba(this.o.fgColor,\"0.6\")}else{this.fgColor=this.o.fgColor}return this};this._clear=function(){this.$c[0].width=this.$c[0].width};this._validate=function(e){var t=~~((e<0?-.5:.5)+e/this.o.step)*this.o.step;return Math.round(t*100)/100};this.listen=function(){};this.extend=function(){};this.init=function(){};this.change=function(e){};this.val=function(e){};this.xy2val=function(e,t){};this.draw=function(){};this.clear=function(){this._clear()};this.h2rgba=function(e,t){var n;e=e.substring(1,7);n=[parseInt(e.substring(0,2),16),parseInt(e.substring(2,4),16),parseInt(e.substring(4,6),16)];return\"rgba(\"+n[0]+\",\"+n[1]+\",\"+n[2]+\",\"+t+\")\"};this.copy=function(e,t){for(var n in e){t[n]=e[n]}}};t.Dial=function(){t.o.call(this);this.startAngle=null;this.xy=null;this.radius=null;this.lineWidth=null;this.cursorExt=null;this.w2=null;this.PI2=2*Math.PI;this.extend=function(){this.o=e.extend({bgColor:this.$.data(\"bgcolor\")||\"#EEEEEE\",angleOffset:this.$.data(\"angleoffset\")||0,angleArc:this.$.data(\"anglearc\")||360,inline:true},this.o)};this.val=function(e,t){if(null!=e){e=this.o.parse(e);if(t!==false&&e!=this.v&&this.rH&&this.rH(e)===false){return}this.cv=this.o.stopper?n(r(e,this.o.max),this.o.min):e;this.v=this.cv;this.$.val(this.o.format(this.v));this._draw()}else{return this.v}};this.xy2val=function(e,t){var i,s;i=Math.atan2(e-(this.x+this.w2),-(t-this.y-this.w2))-this.angleOffset;if(this.o.flip){i=this.angleArc-i-this.PI2}if(this.angleArc!=this.PI2&&i<0&&i>-.5){i=0}else if(i<0){i+=this.PI2}s=i*(this.o.max-this.o.min)/this.angleArc+this.o.min;this.o.stopper&&(s=n(r(s,this.o.max),this.o.min));return s};this.listen=function(){var t=this,i,s,o=function(e){e.preventDefault();var o=e.originalEvent,u=o.detail||o.wheelDeltaX,a=o.detail||o.wheelDeltaY,f=t._validate(t.o.parse(t.$.val()))+(u>0||a>0?t.o.step:u<0||a<0?-t.o.step:0);f=n(r(f,t.o.max),t.o.min);t.val(f,false);if(t.rH){clearTimeout(i);i=setTimeout(function(){t.rH(f);i=null},100);if(!s){s=setTimeout(function(){if(i)t.rH(f);s=null},200)}}},u,a,f=1,l={37:-t.o.step,38:t.o.step,39:t.o.step,40:-t.o.step};this.$.bind(\"keydown\",function(i){var s=i.keyCode;if(s>=96&&s<=105){s=i.keyCode=s-48}u=parseInt(String.fromCharCode(s));if(isNaN(u)){s!==13&&s!==8&&s!==9&&s!==189&&(s!==190||t.$.val().match(/\\./))&&i.preventDefault();if(e.inArray(s,[37,38,39,40])>-1){i.preventDefault();var o=t.o.parse(t.$.val())+l[s]*f;t.o.stopper&&(o=n(r(o,t.o.max),t.o.min));t.change(t._validate(o));t._draw();a=window.setTimeout(function(){f*=2},30)}}}).bind(\"keyup\",function(e){if(isNaN(u)){if(a){window.clearTimeout(a);a=null;f=1;t.val(t.$.val())}}else{t.$.val()>t.o.max&&t.$.val(t.o.max)||t.$.val()<t.o.min&&t.$.val(t.o.min)}});this.$c.bind(\"mousewheel DOMMouseScroll\",o);this.$.bind(\"mousewheel DOMMouseScroll\",o)};this.init=function(){if(this.v<this.o.min||this.v>this.o.max){this.v=this.o.min}this.$.val(this.v);this.w2=this.w/2;this.cursorExt=this.o.cursor/100;this.xy=this.w2*this.scale;this.lineWidth=this.xy*this.o.thickness;this.lineCap=this.o.lineCap;this.radius=this.xy-this.lineWidth/2;this.o.angleOffset&&(this.o.angleOffset=isNaN(this.o.angleOffset)?0:this.o.angleOffset);this.o.angleArc&&(this.o.angleArc=isNaN(this.o.angleArc)?this.PI2:this.o.angleArc);this.angleOffset=this.o.angleOffset*Math.PI/180;this.angleArc=this.o.angleArc*Math.PI/180;this.startAngle=1.5*Math.PI+this.angleOffset;this.endAngle=1.5*Math.PI+this.angleOffset+this.angleArc;var e=n(String(Math.abs(this.o.max)).length,String(Math.abs(this.o.min)).length,2)+2;this.o.displayInput&&this.i.css({width:(this.w/2+4>>0)+\"px\",height:(this.w/3>>0)+\"px\",position:\"absolute\",\"vertical-align\":\"middle\",\"margin-top\":(this.w/3>>0)+\"px\",\"margin-left\":\"-\"+(this.w*3/4+2>>0)+\"px\",border:0,background:\"none\",font:this.o.fontWeight+\" \"+(this.w/e>>0)+\"px \"+this.o.font,\"text-align\":\"center\",color:this.o.inputColor||this.o.fgColor,padding:\"0px\",\"-webkit-appearance\":\"none\"})||this.i.css({width:\"0px\",visibility:\"hidden\"})};this.change=function(e){this.cv=e;this.$.val(this.o.format(e))};this.angle=function(e){return(e-this.o.min)*this.angleArc/(this.o.max-this.o.min)};this.arc=function(e){var t,n;e=this.angle(e);if(this.o.flip){t=this.endAngle+1e-5;n=t-e-1e-5}else{t=this.startAngle-1e-5;n=t+e+1e-5}this.o.cursor&&(t=n-this.cursorExt)&&(n=n+this.cursorExt);return{s:t,e:n,d:this.o.flip&&!this.o.cursor}};this.draw=function(){var e=this.g,t=this.arc(this.cv),n,r=1;e.lineWidth=this.lineWidth;e.lineCap=this.lineCap;if(this.o.bgColor!==\"none\"){e.beginPath();e.strokeStyle=this.o.bgColor;e.arc(this.xy,this.xy,this.radius,this.endAngle-1e-5,this.startAngle+1e-5,true);e.stroke()}if(this.o.displayPrevious){n=this.arc(this.v);e.beginPath();e.strokeStyle=this.pColor;e.arc(this.xy,this.xy,this.radius,n.s,n.e,n.d);e.stroke();r=this.cv==this.v}e.beginPath();e.strokeStyle=r?this.o.fgColor:this.fgColor;e.arc(this.xy,this.xy,this.radius,t.s,t.e,t.d);e.stroke()};this.cancel=function(){this.val(this.v)}};e.fn.dial=e.fn.knob=function(n){return this.each(function(){var r=new t.Dial;r.o=n;r.$=e(this);r.run()}).parent()}})\n\n\n//downloadCoebotData();\n//var channelCoebotData = getCoebotDataChannel(channel);\nvar isHighlightsLoaded = false;\nvar isBoirLoaded = false;\n\nvar hlstreamTable = false;\n\nvar hlstreamPlayMe = false;\nvar highlightsWentBeepBeep = false;\n\nvar hashPostfix = \"\";\n\nfunction enableSidebar() {\n\n\t$('#navSidebar a.js-sidebar-link').click(function (e) {\n\t\te.preventDefault();\n\t\t$(this).tab('show');\n        //var hashExtension = HASH_DELIMITER + window.location.hash.substr(1).split(HASH_DELIMITER).splice(0,1).join(HASH_DELIMITER);\n        window.location.hash = \"#\" + $(this).attr(\"href\").substr(5) + hashPostfix;// + hashExtension;\n        hashPostfix = \"\";\n\n        $('#channelSidebarCollapse').collapse('hide');\n\t});\n\n\t$('#navSidebar a.js-sidebar-link').on('shown.bs.tab', function (e) {\n\t\tvar tab = e.target;\n\n        //TODO functionify tab updates!\n        var tabIconHtml = $(tab).children('.sidebar-icon').html();\n        var tabTitleHtml = $(tab).children('.sidebar-title').attr(\"data-bigtitle\");\n\n        $(\".js-channel-tab-icon\").html(tabIconHtml);\n        $(\".js-channel-tab-title\").html(tabTitleHtml);\n\t});\n\n    $('#navSidebar a.js-sidebar-link[href=\"#tab_highlights\"]').on('show.bs.tab', function (e) {\n        if (!isHighlightsLoaded) {\n            loadChannelHighlights();\n        }\n    });\n\n    $('#navSidebar a.js-sidebar-link[href=\"#tab_boir\"]').on('show.bs.tab', function (e) {\n        if (!isBoirLoaded) {\n            loadChannelBoir();\n            loadBoirItemData();\n        }\n    });\n\n    if (channelCoebotData.shouldShowBoir) {\n        $(\"#sidebarItemGames\").removeClass(\"hidden\");\n    }\n}\n\nfunction tabContentLoaded() {\n    if (window.location.hash != \"\") {\n        var explodedHash = window.location.hash.substr(1).split(HASH_DELIMITER);\n        var jumpToTab = explodedHash.splice(0,1);\n        if (explodedHash.length >= 1) {\n            hashPostfix = HASH_DELIMITER + explodedHash.join(HASH_DELIMITER);\n        }\n\n        $('#navSidebar a[href=\"#tab_' + jumpToTab + '\"]').click();\n    }\n\n    $('#hlStreamModal').on('hidden.bs.modal', function (e) {\n        window.location.hash = window.location.hash.split(HASH_DELIMITER)[0];\n    });\n\n    linkifyEverything();\n}\n\n// channel config data\nvar channelData = false;\nvar channelBoirData = false;\nvar channelTwitchData = false;\nvar twitchEmotes = false;\nvar channelStreamData = false;\nvar highlightsStats = false;\nvar currentHlstream = false;\nvar boirItemData = false;\n\nfunction downloadChannelData() {\n\t$.ajax({\n\t\tasync: false, // it's my json and i want it NOW!\n\t\tdataType: \"json\",\n\t\turl: \"/configs/\" + channel + \".json\",\n\t\tsuccess: function(json) {\n            console.log(\"Loaded channel data\");\n\t\t\tchannelData = json;\n\t\t},\n\t\terror: function(jqXHR, textStatus, errorThrown) {\n\t\t\talert(\"Failed to load channel data!\");\n\t\t\twindow.location = \"/\";\n\t\t}\n\t});\n}\n\ndownloadChannelData();\n\nfunction displayChannelTitle() {\n\tvar titleHtml = channelCoebotData.displayName; // ((channelCoebotData.displayName&&channelCoebotData.displayName==\"\") ? channel : channelCoebotData.displayName);\n    var tabIconHtml = $('#navSidebar a:first-child .sidebar-icon').html();\n    var tabTitleHtml = $('#navSidebar a:first-child .sidebar-title').html();\n    $(\".js-channel-title\").html(titleHtml);\n    $(\".js-channel-tab-icon\").html(tabIconHtml);\n    $(\".js-channel-tab-title\").html(tabTitleHtml);\n}\n\nfunction displayChannelOverview() {\n    var html = \"\";\n\n    html += '<p>Bot name: ' + channelCoebotData.botChannel + '</p>';\n\n\n    var wpMoment = (channelData.sinceWp !== null) ? moment(channelData.sinceWp) : null;\n    html += '<p class=\"whale-penis\">Whale penis was last mentioned ' + wpMoment.fromNow() + '. It has been mentioned ' + Humanize.intComma(channelData.wpCount) + ' times.';\n\n\n    html += '<p class=\"\">';\n    html += '<a class=\"btn btn-primary overview-socialbtn\" href=\"http://www.twitch.tv/';\n    html += channel + '\" target=\"_blank\"><i class=\"icon-twitch\"></i> Twitch</a>';\n\n    if (channelCoebotData.youtube && channelCoebotData.youtube != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.youtube.com/user/';\n        html += channelCoebotData.youtube + '\" target=\"_blank\"><i class=\"icon-youtube-play\"></i> YouTube</a>';\n    }\n\n    if (channelCoebotData.twitter && channelCoebotData.twitter != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://twitter.com/';\n        html += channelCoebotData.twitter + '\" target=\"_blank\"><i class=\"icon-twitter\"></i> Twitter</a>';\n    }\n\n    if (channelData.steamID && channelData.steamID != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://steamcommunity.com/profiles/';\n        html += channelData.steamID + '\" target=\"_blank\"><i class=\"icon-steam\"></i> Steam</a>';\n    }\n\n    if (channelData.lastfm && channelData.lastfm != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.last.fm/user/';\n        html += channelData.lastfm + '\" target=\"_blank\"><i class=\"icon-lastfm\"></i> last.fm</a>';\n    }\n\n    if (channelData.extraLifeID) {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.extra-life.org/index.cfm?fuseaction=donorDrive.participant&participantID=';\n        html += channelData.extraLifeID + '\" target=\"_blank\">Extra Life</a>';\n    }\n\n    html += '</p>';\n    var ref = $(\".js-channel-overview\");\n    ref.html(html);\n}\n\nfunction displayChannelCommands() {\n\tvar tbody = $('.js-commands-tbody');\n\tvar rows = \"\";\n    var shouldSortTable = true;\n\tfor (var i = 0; i < channelData.commands.length; i++) {\n\t\tvar cmd = channelData.commands[i];\n\t\tvar row = '<tr class=\"row-command row-command-access-' + cmd.restriction +'\">';\n        row += '<td class=\"js-commands-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#commandAddModal\" data-command=\"' + cmd.key + '\" data-accesslevel=\"' + cmd.restriction + '\" data-response=\"' + cleanHtmlAttr(cmd.value) + '\" data-modaltitle=\"Edit command\"><i class=\"icon-pencil\"></i><span class=\"sr-only\">Edit</span></span></td>';\n\t\trow += '<td><kbd class=\"command\">' + cmd.key + '</kbd></td>';\n        row += '<td class=\"row-command-col-access\" data-order=\"' + cmd.restriction + '\">' + prettifyAccessLevel(cmd.restriction) + '</td>';\n        row += '<td class=\"should-be-linkified should-be-emotified\">' + prettifyStringVariables(cmd.value) + '</td>';\n\t\trow += '<td>' + Humanize.intComma(cmd.count) + '</td>';\n\t\trow += '</tr>';\n\t\trows += row;\n\t}\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"5\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\ttbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-commands-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-commands-addbtn').css('display', 'block');\n        $('.js-commands-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#commandAddModal').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var command = button.data('command');\n        var accessLevel = button.data('accesslevel');\n        var response = button.data('response');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#commandAddModalName').val(command);\n        $('#commandAddModalOldName').val(command);\n        var accessLevelLabel = $('.js-commands-addmodal-accesslevel label.level' + accessLevel);\n        accessLevelLabel.addClass('active');\n        accessLevelLabel.find('input').attr(\"checked\", true);\n        $('#commandAddModalResponse').val(response);\n        $('#commandAddModalLabel').text(modalTitle);\n    });\n\n    $('#commandAddModalSave').click(function(e) {\n\n        var $btn = $(this).button('loading');\n\n        $.ajax({\n            data: {\n                a: \"setCommand\",\n                channel: channel,\n                name: $('#commandAddModalName').val(),\n                oldName: $('#commandAddModalOldName').val(),\n                response: $('#commandAddModalResponse').val(),\n                restriction: $('input:checked', '#commandAddModalAccessLevel').val()\n            },\n            dataType: \"text\",\n            url: \"/botaction.php\",\n            success: function(txt) {\n                if (txt == \"success\") {\n                    $btn.button('reset');\n                    Messenger().post({\n                      message: 'Command successfully modified!',\n                      type: 'success'\n                    });\n                } else {\n                    Messenger().post({\n                      message: \"Error: \" + txt,\n                      type: 'error'\n                    });\n                }\n            },\n            error: function(jqXHR, textStatus, errorThrown) {\n                Messenger().post({\n                  message: \"A connection error occurred.\",\n                  type: 'error'\n                });\n            },\n            complete: function(jqXHR, textStatus) {\n                $btn.button('reset');\n            }\n        });\n\n    });\n}\n\nfunction displayChannelQuotes() {\n\tvar tbody = $('.js-quotes-tbody');\n\tvar rows = \"\";\n    var shouldSortTable = true;\n\tfor (var i = 0; i < channelData.quotes.length; i++) {\n\t\tvar quote = channelData.quotes[i];\n\t\tvar row = '<tr>';\n        row += '<td class=\"js-quotes-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#quoteAddModal\" data-quote=\"' + cleanHtmlAttr(quote.quote) + '\" data-quoteid=\"' + (i+1) + '\" data-modaltitle=\"Edit quote\"><i class=\"icon-pencil\"></i></span></td>';\n\n\t\trow += '<td>' + (i+1) + '</td>';\n        row += '<td>' + quote.quote + '</td>';\n\n        var tsMoment = (quote.timestamp !== null) ? moment(quote.timestamp) : null;\n        var tsStr = (quote.timestamp !== null) ? tsMoment.calendar() : \"Unknown\";\n        var cleanTs = (quote.timestamp !== null) ? cleanHtmlAttr(tsMoment.format('LLLL')) : \"This quote was added before CoeBot kept track of when quotes were added.\";\n        var sortNum = (quote.timestamp !== null) ? quote.timestamp : 0;\n        row += '<td title=\"' + cleanTs + '\" data-order=\"' + sortNum + '\">' + tsStr + '</td>';\n\n\t\trow += '</tr>';\n\t\trows += row;\n\t}\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n\ttbody.html(rows);\n\n\n    if (shouldSortTable) {\n        $('.js-quotes-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-quotes-addbtn').css('display', 'block');\n        $('.js-quotes-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#quoteAddModal').on('show.bs.modal', function (event) {\n\n        var button = $(event.relatedTarget);\n        var quoteStr = button.data('quote');\n        var quoteId = button.data('quoteid');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#quoteAddModalQuote').val(quoteStr);\n        $('#quoteAddModalId').val(quoteId);\n        $('#quoteAddModalLabel').text(modalTitle);\n    });\n}\n\nfunction displayChannelAutoreplies() {\n    var tbody = $('.js-autoreplies-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.autoReplies.length; i++) {\n        var reply = channelData.autoReplies[i];\n        var row = '<tr>';\n        row += '<td class=\"js-autoreplies-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#autoreplyAddModal\" data-trigger=\"' + cleanHtmlAttr(reply.trigger) + '\" data-response=\"' + cleanHtmlAttr(reply.response) + '\" data-arid=\"' + (i+1) + '\" data-modaltitle=\"Edit auto-reply\"><i class=\"icon-pencil\"></i></span></td>';\n        row += '<td>' + (i+1) + '</td>';\n        row += '<td title=\"RegEx: ' + cleanHtmlAttr(reply.trigger) + '\">' + prettifyRegex(reply.trigger) + '</td>';\n        row += '<td>' + prettifyStringVariables(reply.response) + '</td>';\n        row += '</tr>';\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-autoreplies-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-autoreplies-addbtn').css('display', 'block');\n        $('.js-autoreplies-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#autoreplyAddModal').on('show.bs.modal', function (event) {\n\n        var button = $(event.relatedTarget);\n        var arid = button.data('arid');\n        var trigger = button.data('trigger');\n        var response = button.data('response');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#autoreplyAddModalArid').val(arid);\n        $('#autoreplyAddModalTrigger').val(trigger);\n        $('#autoreplyAddModalResponse').val(response);\n        $('#autoreplyAddModalLabel').text(modalTitle);\n    });\n}\n\nfunction displayChannelScheduled() {\n    var tbody = $('.js-scheduled-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.scheduledCommands.length; i++) {\n        var cmd = channelData.scheduledCommands[i];\n        if (cmd.active) {\n            var row = '<tr>';\n            row += '<td><kbd class=\"command\">' + cmd.name + '</kbd></td>';\n            row += '<td><span title=\"Cron command: ' + cmd.pattern + '\">'\n            row += prettyCron.toString(cmd.pattern) + '</td>';\n            row += '</tr>';\n            rows += row;\n        }\n    }\n    for (var i = 0; i < channelData.repeatedCommands.length; i++) {\n        var cmd = channelData.repeatedCommands[i];\n        if (cmd.active) {\n            var row = '<tr>';\n            row += '<td><kbd class=\"command\">' + cmd.name + '</kbd></td>';\n            row += '<td><span title=\"Every ' + cmd.delay + ' seconds\">Every '\n            row += moment().subtract(cmd.delay, 'seconds').fromNow(true) + '</span></td>';\n            row += '</tr>';\n            rows += row;\n        }\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"2\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-scheduled-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false\n        });\n    }\n}\n\nfunction displayChannelRegulars() {\n    var tbody = $('.js-regulars-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.regulars.length; i++) {\n        var reg = channelData.regulars[i];\n        var row = '<tr>';\n        row += '<td class=\"text-capitalize\">' + reg + '</td>';\n        row += '</tr>';\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"1\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-regulars-table').dataTable();\n    }\n\n\n    var subsinfoText = 'On this channel, ';\n    if (channelData.subscriberRegulars) {\n        subsinfoText += 'subscribers are automatically given all the same privileges as regulars.';\n    } else if (channelData.subsRegsMinusLinks) {\n        subsinfoText += 'subscribers are automatically given the same privileges as regulars, except they cannot post links or use the <kbd class=\"command\">urban</kbd> command.';\n    } else {\n        subsinfoText += 'subscribers do not automatically receive the same privileges as regulars.';\n    }\n\n    $('.js-regulars-subsinfo').html(subsinfoText);\n}\n\nfunction displayChannelChatrules() {\n    // var html = \"\"\n    // html += '<h3>Banned phrases</h3>'\n\n    if (channelCoebotData.shouldShowOffensiveWords && channelData.filterOffensive) {\n\n        var tbody = $('.js-chatrules_offensive-tbody');\n        var rows = \"\";\n        var shouldSortTable = true;\n        for (var i = 0; i < channelData.offensiveWords.length; i++) {\n            var word = channelData.offensiveWords[i];\n            var row = '<tr>';\n            row += '<td title=\"RegEx: ' + cleanHtmlAttr(word) + '\">' + prettifyRegex(word) + '</td>';\n            row += '</tr>';\n            rows += row;\n        }\n        if (rows == \"\") {\n            rows = '<tr><td colspan=\"1\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n            shouldSortTable = false;\n        }\n\n        tbody.html(rows);\n\n        if (shouldSortTable) {\n            $('.js-chatrules_offensive-table').dataTable({\n                \"paging\": false,\n                \"info\": false,\n                \"searching\": false\n            });\n        }\n    } else {\n        $('.js-chatrules_offensive').addClass(\"hidden\");\n    }\n\n    // console.log(channelData.useFilters);\n\n    if (channelData.useFilters) {\n\n        var miscHtml = '';\n        miscHtml += '<h3>Filter rules</h3>';\n\n        if (channelData.filterCaps) {\n            miscHtml += '<p>Messages with excessive capital letters will be censored if the message contains at least ' + channelData.filterCapsMinCapitals + ' capital letters and consists more than ' + channelData.filterCapsPercent + '% of capital letters.</p>';\n        }\n        if (channelData.filterLinks) {\n            miscHtml += '<p>All URLs linked to by non-regulars ';\n            if (channelData.subscriberRegulars) {\n                miscHtml += '(excluding subscribers) ';\n            } else {\n                miscHtml += '(including subscribers) ';\n            }\n            miscHtml += ' will be censored.';\n            if (channelData.permittedDomains && channelData.permittedDomains.length != 0) {\n                miscHtml += ' However, the following domains are exempt from censoring: ';\n                miscHtml += Humanize.oxford(channelData.permittedDomains);\n            }\n            miscHtml += '</p>';\n        }\n        // if (channelData.filterSymbols) {\n        //     miscHtml += '<p>All caps will be filtered if a message contains more than ' + channelData.filterCapsPercent + '% uppercase letters.</p>'\n        // }\n\n        $(\".js-chatrules_misc\").html(miscHtml);\n    }\n\n\n    // $(\".js-chatrules-div\").html(html);\n}\n\n\nfunction loadChannelHighlights() {\n\n    var explodedHash = window.location.hash.substr(0).split(HASH_DELIMITER);\n\n    if (explodedHash.length >= 2) {\n        hlstreamPlayMe = explodedHash[1];\n        if (highlightsWentBeepBeep) {\n            loadHlstream(hlstreamPlayMe);\n            hlstreamPlayMe = false;\n        }\n    }\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: false,\n        jsonpCallback: \"loadChannelHighlightsCallback\",\n        url: \"/oldhl/api/stats/\" + channel + \"&callback=loadChannelHighlightsCallback\",\n        success: function(json) {\n            console.log(\"Loaded highlights stats\");\n            highlightsStats = json;\n            isHighlightsLoaded = true;\n            showChannelHighlights();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load highlights!\");\n        }\n    });\n}\n\nfunction showChannelHighlights() {\n\n    var tbody = $('.js-highlights-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < highlightsStats.streams.length; i++) {\n        var strm = highlightsStats.streams[i];\n        var row = '<tr>';\n\n        row += '<td><span class=\"fake-link js-highlight-btn\" data-hlid=\"' + strm.id + '\">' + strm.title + '</span></td>';\n\n        var startMoment = moment.unix(strm.start);\n        var cleanStart = cleanHtmlAttr(startMoment.format('LLLL'));\n        row += '<td title=\"' + cleanStart + '\" data-order=\"' + strm.start + '\">' + startMoment.calendar() + '</td>';\n\n        var durationMoment = moment.duration(strm.duration, 'seconds');\n        var cleanDuration = cleanHtmlAttr(stringifyDuration(durationMoment));\n        row += '<td title=\"' + cleanDuration + '\" data-order=\"' + strm.duration + '\">' + durationMoment.humanize() + '</td>';\n        row += '<td data-order=\"' + strm.hlcount + '\">' + Humanize.intComma(strm.hlcount) + '</td>';\n        row += '</tr>';\n\n\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-highlights-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"desc\" ]]\n        });\n    }\n\n    $('.js-highlights-loading').addClass('hidden');\n    $('.js-highlights-table').removeClass('hidden');\n\n    $('.js-highlight-btn').click(function() {\n        var hlid = $(this).attr('data-hlid');\n        loadHlstream(hlid);\n    });\n\n}\n\n\nfunction loadHlstream(id) {\n\n    $('.js-hlstream-loaded, .js-hlstream-loaded-inline').css('display', 'none');\n    $('.js-hlstream-loading').css('display', 'block');\n    $('.js-hlstream-loading-inline').css('display', 'inline');\n\n    $('#hlStreamModal').modal('show');\n\n    window.location.hash += HASH_DELIMITER + id;\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: false,\n        jsonpCallback: \"loadHlstreamCallback\",\n        url: \"/oldhl/api/hl/\" + channel + \"/\" + id + \"/&callback=loadHlstreamCallback\",\n        success: function(json) {\n            console.log(\"Loaded hlstream #\" + id);\n            currentHlstream = json;\n            showHlstream();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load highlight!\");\n        }\n    });\n}\n\nfunction showHlstream() {\n\n    $('.js-hlstream-title').html(currentHlstream.title);\n\n    $('.js-hlstream-twitchlink').attr(\"href\", getUrlForTwitchVod(channel, currentHlstream.id));\n\n\n    var playerVars = \"title=\" + currentHlstream.title + \"&amp;channel=\" + channel\n    playerVars += \"&amp;auto_play=false&amp;start_volume=100&amp;videoId=\" + currentHlstream.id;\n\n    var playerHtml = \"\";\n    playerHtml += \"<object bgcolor='#313131' data='https://www.twitch.tv/widgets/archive_embed_player.swf' height='472' id='player' type='application/x-shockwave-flash' width='775'>\";\n    playerHtml += \"<param name='movie' value='https://www.twitch.tv/widgets/archive_embed_player.swf' />\";\n    playerHtml += \"<param name='allowScriptAccess' value='always' />\";\n    playerHtml += \"<param name='allowNetworking' value='all' />\";\n    playerHtml += \"<param name='allowFullScreen' value='true' />\";\n    playerHtml += \"<param name='flashvars' value='\" + playerVars + \"' />\";\n    playerHtml += \"</object>\";\n\n    var playerParent = $(\".js-hlstream-player-parent\");\n    playerParent.empty();\n    playerParent.html(playerHtml);\n\n\n    var tableTemplate = '';\n    tableTemplate += '<table class=\"table table-striped js-hlstream-table\">';\n    tableTemplate += '<thead>';\n    tableTemplate += '<tr>';\n    tableTemplate += '<th><i class=\"sorttable-icon\"></i>Time</th>';\n    tableTemplate += '<th><i class=\"sorttable-icon\"></i>Hits</th>';\n    tableTemplate += '</tr>';\n    tableTemplate += '</thead>';\n    tableTemplate += '<tbody class=\"js-hlstream-tbody\"></tbody>';\n    tableTemplate += '</table>';\n\n    var tableParent = $('.js-hlstream-table-parent');\n    tableParent.empty();\n    tableParent.html(tableTemplate);\n\n    var tbody = $('.js-hlstream-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < currentHlstream.highlights.length; i++) {\n        var hl = currentHlstream.highlights[i];\n        var row = '<tr>';\n\n        var durationMoment = moment.duration(hl.position, 'seconds');\n        var cleanDuration = cleanHtmlAttr(stringifyDurationShort(durationMoment, true));\n        row += '<td data-order=\"' + hl.position + '\"><span onclick=\"jumpHlstreamTimestamp('\n        row += hl.position + ')\" class=\"fake-link\">' + cleanDuration + '</span></td>';\n\n        row += '<td data-order=\"' + hl.hits + '\">' + Humanize.intComma(hl.hits) + '</td>';\n        row += '</tr>';\n\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"2\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        hlstreamTable = $('.js-hlstream-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false\n        });\n    }\n\n    $('.js-hlstream-loading, .js-hlstream-loading-inline').css('display', 'none');\n    $('.js-hlstream-loaded').css('display', 'block');\n    $('.js-hlstream-loaded-inline').css('display', 'inline');\n\n}\n\nfunction beepBeepHeresYourHighlights() {\n    if (hlstreamPlayMe !== false) {\n        loadHlstream(hlstreamPlayMe);\n        hlstreamPlayMe = false;\n    }\n    highlightsWentBeepBeep = true;\n}\n\nfunction jumpHlstreamTimestamp(timestamp) {\n    player.videoSeek(timestamp);\n}\n\n\nfunction loadChannelBoir() {\n\n    var explodedHash = window.location.hash.substr(0).split(HASH_DELIMITER);\n\n    if (explodedHash.length >= 2) {\n        loadHlstream(parseInt(explodedHash[1]));\n    }\n\n    $.ajax({\n        dataType: \"json\",\n        url: \"/configs/boir/\" + channel + \".json\",\n        success: function(json) {\n            console.log(\"Loaded channel BOIR data\");\n            channelBoirData = json;\n            isBoirLoaded = true;\n            showChannelBoir();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load BOIR data!\");\n        }\n    });\n}\n\nfunction showChannelBoir() {\n\n    var boirContainer = $('.js-boir-container');\n    var html = \"\";\n\n    html += '<div class=\"boir-character\"><strong>Character:</strong> ' + channelBoirData.character + \"</div>\";\n    html += '<div class=\"boir-floor\"><strong>Floor:</strong> ' + channelBoirData.floor + \"</div>\";\n    html += '<div class=\"boir-seed\"><strong>Seed:</strong> ' + channelBoirData.seed + \"</div>\";\n    html += '<h3>Items</h3>';\n\n    html += '<div class=\"well boir-items items-container\">';//<div class=\"row\">';\n    for (var i = 0; i < channelBoirData.items.length; i++) {\n        var item = channelBoirData.items[i];\n        item = item.replace(/</gi, \"&lt;\");\n        html += '<div class=\"boir-item\">';//html += '<div class=\"col-xs-6 col-sm-3 col-md-2 boir-item\">';\n        html += '<div class=\"rebirth-item\" data-item=\"' + cleanBoirNameForComparison(item) + '\">' + item + '&nbsp;&nbsp;&nbsp;</div>';\n        //html += '<span class=\"boir-item-subtitle\">' + item + '</span>';\n        html += '</div>';\n    }\n    html += '</div>';//</div>';\n    html += '<p class=\"small\">Item data from <a href=\"http://platinumgod.co.uk/rebirth\" target=\"_blank\">platinumgod.co.uk</a></em></p>'\n\n    if (typeof channelBoirData.flyItems !== 'undefined' && typeof channelBoirData.flyProgress !== 'undefined') {\n        html += '<div class=\"col-md-6 text-center\">';\n        html += '<h3>Lord of the Flies</h3>';\n        html += '<input type=\"text\" class=\"dial js-boir-dial js-boir-dial-fly\" value=\"' + channelBoirData.flyProgress + '\">';\n\n        // html += '<h4>Items</h4>';\n        html += '<div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\"><ul class=\"list-group\">'\n        for (var i = 0; i < channelBoirData.flyItems.length; i++) {\n            var item = channelBoirData.flyItems[i];\n            html += '<li class=\"list-group-item\">' + item + '</li>';\n        }\n        html += '</ul></div></div>';\n        html += '</div>';\n    }\n\n    if (typeof channelBoirData.guppyItems !== 'undefined' && typeof channelBoirData.guppyProgress !== 'undefined') {\n        html += '<div class=\"col-md-6 text-center\">';\n        html += '<h3>Guppy</h3>';\n        html += '<input type=\"text\" class=\"dial js-boir-dial js-boir-dial-guppy\" value=\"' + channelBoirData.guppyProgress + '\">';\n\n        // html += '<h4>Items</h4>';\n        html += '<div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\"><ul class=\"list-group\">'\n        for (var i = 0; i < channelBoirData.guppyItems.length; i++) {\n            var item = channelBoirData.guppyItems[i];\n            html += '<li class=\"list-group-item\">' + item + '</li>';\n        }\n        html += '</ul></div></div>';\n    }\n        html += '</div>';\n\n    boirContainer.html(html);\n\n    boiItemDataDomReady = true;\n    showBoirItemData();\n\n    $(\".js-boir-dial\").knob({\n        'min': 0,\n        'max': 3,\n        'readOnly': true,\n        'angleOffset':-125,\n        'angleArc': 250,\n        'fgColor': '#2A9FD6',\n        'bgColor': '#151515',\n        'format': function(v) { return v + \"/3\"; }\n    });\n    //$('.js-boir-dial-fly').val(channelBoirData.flyProgress).trigger('change');\n\n    $('.js-boir-loading').addClass('hidden');\n    $('.js-boir-loaded').removeClass('hidden');\n\n}\n\nfunction loadBoirItemData() {\n\n    $.ajax({\n        cache: true,\n        dataType: \"json\",\n        url: \"/boiitemsarray.json\",\n        success: function(json) {\n            console.log(\"Loaded BOIR item data\");\n            boirItemData = json;\n\n            for (var i = 0; i < boirItemData.length; i++) {\n                boirItemData[i].safename = cleanBoirNameForComparison(boirItemData[i].title);\n            }\n\n            boiItemDataAjaxReady = true;\n            showBoirItemData();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load BOIR items data!\");\n        }\n    });\n}\n\nvar boiItemDataDomReady = false;\nvar boiItemDataAjaxReady = false;\n\nfunction showBoirItemData() {\n    if (!boiItemDataDomReady || !boiItemDataAjaxReady) {\n        return;\n    }\n\n    var itemSelector = $(\".items-container .rebirth-item\");\n\n    itemSelector.each(function() {\n        var div = $(this);\n        div.html(\"\"); // remove the placeholder title\n        var item = div.attr(\"data-item\");\n        var data = findItemInBoirData(item);\n\n        if (data != null) {\n            div.addClass(data.class);\n            div.attr(\"title\", data.title);\n\n            var content = '';\n            content += '<div class=\"text-center text-primary\"><em>&ldquo;' + data.pickup + '&rdquo;</em></div>';\n\n            if (data.info.length > 0) {\n                content += '<ul class=\"boir-item-infolist\">';\n                for (var i = 0; i < data.info.length; i++) {\n                    content += '<li>' + data.info[i] + '</li>';\n                }\n                content += '</ul>';\n            }\n\n            if (data.unlock != \"\") {\n                content += '<div><strong>Unlock:</strong> ' + data.unlock + '</div>';\n            }\n\n            if (data.type != \"\") {\n                content += '<div><strong>Type:</strong> ' + data.type + '</div>';\n            }\n\n            if (data.recharge != \"\") {\n                content += '<div><strong>Recharge Time:</strong> ' + data.recharge + '</div>';\n            }\n\n            if (data.itempool != \"\") {\n                content += '<div><strong>Item Pool:</strong> ' + data.itempool + '</div>';\n            }\n\n            div.attr(\"data-content\",content);\n        }\n    });\n\n    itemSelector.popover({\n        html: true,\n        placement: 'auto top',\n        trigger: 'hover'\n    });\n}\n\nfunction findItemInBoirData(name) {\n    for (var i = 0; i < boirItemData.length; i++) {\n         if (boirItemData[i].safename == name) {\n            return boirItemData[i];\n         }\n    }\n    return null;\n}\n\nfunction cleanBoirNameForComparison(name) {\n    return name.replace(/['\\s]/g, \"\").toLowerCase();\n}\n\nfunction displayChannelSettings() {\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('#sidebarItemSettings').removeClass('hidden');\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_OWNER) {\n        $('#settingsPartModalBtn').removeClass('hidden');\n    }\n\n    $('#settingsPartConfirmBtn').click(function(e) {\n\n        var $btn = $(this).button('loading');\n\n        $.ajax({\n            data: {\n                a: \"part\",\n                channel: channel\n            },\n            dataType: \"json\",\n            url: \"/botaction.php\",\n            success: function(data) {\n                if (data.status == \"success\") {\n                    $btn.button('reset');\n                    Messenger().post({\n                      message: 'Sent leave request! Page will refresh in 3 seconds...',\n                      type: 'success'\n                    });\n                    setTimeout(function() { location.reload();}, 3000);\n                } else {\n                    var errMsg = (typeof data.status !== 'undefined') ? data.status : data;\n                    Messenger().post({\n                      message: \"Error: \" + data.status,\n                      type: 'error'\n                    });\n                }\n            },\n            error: function(jqXHR, textStatus, errorThrown) {\n                Messenger().post({\n                  message: \"A connection error occurred.\",\n                  type: 'error'\n                });\n            },\n            complete: function(jqXHR, textStatus) {\n                $btn.button('reset');\n            }\n        });\n\n    });\n}\n\n\nfunction displayChannelReqsongs() {\n\n    // if they aren't owner, they don't need to run this code\n    if (userAccessLevel < USER_ACCESS_LEVEL_OWNER) {\n        return;\n    }\n\n    $('#sidebarItemReqsongs').removeClass('hidden');\n\n    setInterval(updateReqsongs, 5000);\n\n\n\n}\n\nfunction updateReqsongs() {\n    $.ajax({\n        data: {\n            a: \"listReqsong\",\n            channel: channel\n        },\n        dataType: \"json\",\n        url: \"/botaction.php\",\n        success: function(data) {\n            if (data.status == \"success\") {\n                var reqsongs = data.reqsongs;\n\n                var tbody = $('.js-reqsongs-tbody');\n                var rows = \"\";\n\n                for (var i = 0; i < reqsongs.length; i++) {\n                    var rs = reqsongs[i];\n                    var row = '<tr class=\"row-reqsong\">';\n                    row += '<td><a href=\"' + rs.url + '\">' +  rs.url + '</a></td>';\n                    row += '<td>00:00</td>';\n                    row += '<td>' + rs.requestedBy + '</td>';\n                    row += '<td class=\"js-reqsongs-deletecol\"><span class=\"js-reqsongs-deletebtn\" data-reqsong-id=\"' + rs.id  + '\"><i class=\"icon-trash\"></i><span class=\"sr-only\">Delete</span></span></td>';\n                    row += '</tr>';\n                    rows += row;\n                }\n                if (rows == \"\") {\n                    rows = '<tr><td colspan=\"5\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n                    shouldSortTable = false;\n                }\n                tbody.html(rows);\n\n\n            } else {\n                var errMsg = (typeof data.status !== 'undefined') ? data.status : data;\n                Messenger().post({\n                  message: \"Error: \" + data.status,\n                  type: 'error'\n                });\n            }\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            Messenger().post({\n              message: \"Failed to connect to server...\",\n              type: 'error'\n            });\n        },\n        complete: function(jqXHR, textStatus) {\n            //$btn.button('reset');\n        }\n    });\n}\n\n\n\n\n\n\n// turns a Moment.js duration object into a totes professional string\nfunction stringifyDuration(duration) {\n    var str = \"\";\n\n    if (duration.asDays() >= 1) {\n        var days = Math.floor(duration.asDays());\n        str += days + \" day\" + (days == 1 ?\"\":\"s\") + \", \";\n        str += duration.hours() + \" hour\" + (duration.hours() == 1 ?\"\":\"s\") + \", \";\n\n    } else if (duration.asHours() >= 1) {\n        var hrs = Math.floor(duration.asHours());\n        str += hrs + \" hour\" + (hrs == 1 ?\"\":\"s\") + \", \";\n    }\n    str += duration.minutes() + \" minute\" + (duration.minutes() == 1 ?\"\":\"s\") + \", \";\n    str += duration.seconds() + \" second\" + (duration.seconds() == 1 ?\"\":\"s\");\n\n    return str;\n}\n\n\n// turns a Moment.js duration object into a totes professional string, except shorter\nfunction stringifyDurationShort(duration, shouldAddSpaces) {\n    var str = \"\";\n\n    var maybeASpace = shouldAddSpaces ? \" \" : \"\";\n\n    if (duration.asHours() >= 1) {\n        var hrs = Math.floor(duration.asHours());\n        str += hrs + \"h\" + maybeASpace;\n    }\n    str += duration.minutes() + \"m\" + maybeASpace;\n    str += duration.seconds() + \"s\";\n\n    return str;\n}\n\n\nfunction prettifyAccessLevel(access) {\n    if (access == 0) {\n        return \"All\";\n    }\n    if (access == 1) {\n        if (channelData.subsRegsMinusLinks||channelData.subscriberRegulars) {\n            return \"Subs\";\n        } else {\n            return \"Regs\";\n        }\n    }\n    if (access == 2) {\n        return \"Mods\";\n    }\n    if (access == 3) {\n        return \"Owners\";\n    }\n}\n\nfunction colorifyAccessLevel(access) {\n    if (access == 0) {\n        return \"#616b72\"; //return \"#bdc3c7\";\n    }\n    if (access == 1) {\n        return \"#8e44ad\";\n    }\n    if (access == 2) {\n        return \"#27ae60\";\n    }\n    if (access == 3) {\n        return \"#c0392b\";\n    }\n}\n\nfunction injectEmoticons(html) {\n    return html; //TEMP FIX BECAUSE EVERYTHING BROKE\n    html = htmlDecode(html);\n    for (var i = 0; i < twitchEmotes.length; i++) {\n        var emote = twitchEmotes[i];\n        if (emote.state == \"active\") {\n            var pattern = null;\n            if (emote.regex.search(/\\W/g) == -1) {\n                var pattern = new RegExp('\\\\b(' + emote.regex + ')\\\\b', 'gm');\n            } else {\n                var pattern = new RegExp('(' + emote.regex + ')', 'gm');\n            }\n            html = html.replace(pattern, htmlifyEmote(emote));\n        }\n    }\n    return html;\n}\n\nfunction linkifyEverything() {\n    console.log('linkified');\n    var linkifyThese = $('.should-be-linkified');\n    linkifyThese.each(function() {\n        $(this).linkify();\n        $(this).removeClass('should-be-linkified');\n    });\n    // linkifyThese.linkify();\n    // linkifyThese.removeClass('.should-be-linkified');\n}\n\nfunction htmlDecode(input) {\n    return String(input)\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>');\n}\n\n// generates HTML for an emote\nfunction htmlifyEmote(emote) {\n    var html = '';\n    html += '<img src=\"' + emote.url;\n    html += '\" height=\"' + emote.height;\n    html += '\" width=\"' + emote.width;\n    html += '\" title=\"$1\" class=\"twitch-emote\">';\n    return html;\n}\n\n// because twitch is too cool for consistency\nfunction getUrlForTwitchVod(channel, id) {\n    var prefix = id.substr(0,1);\n    if (prefix == \"a\") {\n        return \"http://twitch.tv/\" + channel + \"/b/\" + id.substr(1);\n    }\n    if (prefix == \"v\") {\n        return \"http://twitch.tv/\" + channel + \"/v/\" + id.substr(1);\n    }\n    console.log(\"ERROR: Failed to parse id: \" + id);\n    return \"http://twitch.tv/\" + channel + \"/\" + id.substr(1);\n}\n\n// displays info about the Twitch channel on the overview page\nfunction injectTwitchData() {\n    var oldHtml = $('.js-channel-overview').html();\n    var html = '';\n    html += '<p>Views: ' + Humanize.intComma(channelTwitchData.views) + '</p>';\n    html += '<p>Followers: ' + Humanize.intComma(channelTwitchData.followers) + '</p>';\n    html += '<p>Joined Twitch on ' + moment(channelTwitchData.created_at).format('LL') + '</p>';\n    html += oldHtml;\n\n    $('.js-channel-overview').html(html);\n}\n\n$(document).ready(function() {\n\n    // moment.locale('en-custom', {\n    //     calendar : {\n    //         lastDay : '[Yesterday at] LT',\n    //         sameDay : '[Today at] LT',\n    //         nextDay : '[Tomorrow at] LT',\n    //         lastWeek : '[Last] dddd [at] LT',\n    //         nextWeek : 'dddd [at] LT',\n    //         sameElse : 'll [at] LT'\n    //     }\n    // });\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/channels/\" + channel,\n        success: function(json) {\n            console.log(\"Loaded Twitch channel data\");\n            channelTwitchData = json;\n            injectTwitchData();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Twitch channel data!\");\n        }\n    });\n\n    $.ajax({\n        cache: true,\n        dataType: \"jsonp\",\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/chat/\" + channel + \"/emoticons\",\n        success: function(json) {\n            console.log(\"Loaded Twitch emotes\");\n            twitchEmotes = json.emoticons;\n            //var commandsTbody = $('.js-commands-tbody');\n            $('.should-be-emotified').each(function () {\n                var diss = $(this);\n                diss.html(injectEmoticons(diss.html()));\n            });\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Twitch emotes!\");\n        }\n    });\n\n    checkIfLiveChannel();\n    setInterval(checkIfLiveChannel, 30000);\n\n    $(\".command\").prepend('<span class=\"command-prefix\">' + channelData.commandPrefix + '</span>');\n\n\n    var commandPrefixForUrl = channelData.commandPrefix;\n\n    if (commandPrefixForUrl == \"+\") {\n        commandPrefixForUrl = \"plus\";\n    }\n    if (commandPrefixForUrl == \"#\") {\n        commandPrefixForUrl = \"hash\";\n    }\n    if (commandPrefixForUrl == \"&\") {\n        commandPrefixForUrl = \"amp\";\n    }\n    if (commandPrefixForUrl == \"?\") {\n        commandPrefixForUrl = \"qmark\";\n    }\n\n    $(\".js-link-commands\").each(function() {\n        var href = $(this).attr(\"href\");\n        $(this).attr(\"href\", href + \"/\" + encodeURIComponent(commandPrefixForUrl));\n    });\n})\n\n\nfunction checkIfLiveChannel() {\n    checkIfLive(channel, handleChannelIsLive);\n}\n\nfunction handleChannelIsLive(json) {\n    if (!json) {\n        alert(\"Failed to load Twitch stream data!\");\n        channelStreamData = false;\n    } else {\n        channelStreamData = json.streams;\n    }\n    updateIsLive(json.streams);\n}\n", "var EMPTY_TABLE_PLACEHOLDER = 'There\\'s nothing here... <i class=\"icon-frown\"></i>';\nvar HASH_DELIMITER = \"/\";\n\n// N.B. should always match up with the same list in common.php!!!\nvar USER_ACCESS_LEVEL_NA = -1;\nvar USER_ACCESS_LEVEL_NONE = 0;\nvar USER_ACCESS_LEVEL_MOD = 2;\nvar USER_ACCESS_LEVEL_EDITOR = 3;\nvar USER_ACCESS_LEVEL_OWNER = 4;\nvar USER_ACCESS_LEVEL_ADMIN = 99;\n\nfunction prettifyStringVariables(str) {\n    var pattern = /\\(_([\\w\\-:]+)_\\)/g;\n    var replacement = '<span class=\"label label-default command-variable\">$1</span>';\n    str = str.replace(pattern, replacement);\n    return str;\n}\n\nfunction prettifyRegex(pattern) {\n    pattern = pattern.replace(/\\.\\*/g, '<span class=\"text-info\">*</span>');\n    pattern = pattern.replace(/\\\\w\\*/g, '<span class=\"text-info\">&hellip;</span>');\n    pattern = pattern.replace(/(\\\\Q|\\\\E|\\\\b)/g, \"\");\n    pattern = pattern.replace(/\\\\s/g, \" \");\n    return pattern;\n}\n\nfunction cleanHtmlAttr(val) {\n    return val.replace(/\"/g, \"&quot;\");\n}\n\n// channels.json json file\nvar coebotData = false;\n\nfunction downloadCoebotData() {\n    $.ajax({\n        async: false, // it's my json and i want it NOW!\n        dataType: \"json\",\n        url: \"/api/v1/channel/list\",\n        success: function(json) {\n            console.log(\"Loaded Coebot data\");\n            coebotData = json;\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Coebot data!\");\n        }\n    });\n}\n\nfunction getCoebotDataChannel(chan) {\n    for (var i = 0; i < coebotData.channels.length; i++) {\n        if (coebotData.channels[i].channel == chan) {\n            return coebotData.channels[i];\n        }\n    }\n    return null;\n}\n\nfunction getUrlToChannel(chan) {\n    return \"/c/\" + chan + \"/\";\n}\n\n\n/**\n * states of liveness\n * 0 = error\n * 1 = offline\n * 2 = live\n * 3 = loading\n */\n\nvar isLiveErr = 0;\nvar isLiveOff = 1;\nvar isLiveOn = 2;\nvar isLiveLoad = 3;\n\nvar isLiveClasses = [\n    \"icon-attention text-warning\",\n    \"icon-circle-empty text-muted\",\n    \"icon-circle text-primary\",\n    \"icon-arrows-cw icon-spin text-muted\"\n];\nvar isLiveClassesAll = isLiveClasses.join(\" \");\n\nvar isLiveTitles = [\n    \"Couldn't access Twitch\",\n    \"Offline\",\n    \"Live\",\n    \"Loading...\"\n];\n\n// checks if the stream is live\nfunction checkIfLive(channels, callback) {\n    var heading = $('.js-islive');\n    var icon = heading.children(\".js-islive-icon\");\n    icon.removeClass(isLiveClassesAll);\n    icon.addClass(isLiveClasses[isLiveLoad]);\n    queryTwitchStreams(channels, callback);\n\n}\n\nfunction queryTwitchStreams(channels, callback) {\n    $.ajax({\n        dataType: \"jsonp\",\n        data: {\n            channel: channels\n        },\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/streams\",\n        success: function(json) {\n            console.log(\"Loaded Twitch streams: \" + channels);\n            callback(json, channels);\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            console.log(\"Failed to load Twitch streams: \" + channels);\n            callback(false, channels);\n        }\n    });\n\n}\n\nfunction getLiveStatus(stream) {\n    var liveStatus = isLiveErr;\n    if (typeof stream !== 'boolean') {\n        liveStatus = (stream != null) ? isLiveOn : isLiveOff;\n    }\n    return liveStatus;\n}\n\nfunction stringifyChannels() {\n    var str = [];\n    var CHANCT = 200;\n    for (var i = 0; i < coebotData.channels.length; i++) {\n        if (i % CHANCT == 0) {\n            str[i/CHANCT] = \"\";\n        }\n        str[(i-(i%CHANCT))/CHANCT] += coebotData.channels[i].channel + ',';\n    }\n    return str;\n}\n\n// updates the indicator that shows if the channel is currently streaming\nfunction updateIsLive(streams, channels) {\n\n    $('.js-islive').each(function(index){\n        var current = $(this);\n\n        var currChannel = current.attr(\"data-channel\");\n        if (typeof currChannel === 'undefined' && typeof channel !== 'undefined') {\n            currChannel = channel;\n        }\n\n        if (typeof channels === 'string' && !channels.includes(currChannel + \",\")) return;\n\n        var stream = findChannelInStreams(streams, currChannel);\n        var liveStatus = getLiveStatus(stream);\n\n        var icon = current.find(\".js-islive-icon\");\n\n        // style the indicator with the right colors and icon\n        icon.removeClass(isLiveClassesAll);\n        icon.addClass(isLiveClasses[liveStatus]);\n\n        // get the hover text. if we're live, it's fancier\n        var popover = isLiveTitles[liveStatus];\n        if (liveStatus == isLiveOn) {\n            popover = '<div class=\"islive-popover\">';\n            \n            popover += '<img src=\"'+stream.preview.medium+'\" class=\"img-responsive\" height=\"180\" width=\"320\">';\n            \n            popover += '<i class=\"icon-gamepad\"></i> ' + ((stream.channel.game) ? stream.channel.game : \"Unknown\") + '<br>';\n            popover += '<i class=\"icon-user\"></i> ' + Humanize.intComma(stream.viewers) + '';\n            popover += '</div>';\n\n            current.attr(\"data-title\", (stream.channel.status) ? stream.channel.status : \"Untitled Broadcast\");\n            current.addClass(\"islive-live\");\n        } else {\n            current.removeAttr(\"data-title\");\n            current.removeAttr(\"title\");\n            current.removeAttr(\"data-original-title\");\n            current.removeClass(\"islive-live\");\n        }\n\n        current.attr(\"data-content\", popover);\n\n        current.popover({\n            html: true,\n            container: 'body',\n            trigger: 'hover'\n        });\n    });\n}\n\nfunction findChannelInStreams(streams, channel) {\n    for (var i = 0; i < streams.length; i++) {\n         if (streams[i].channel.name == channel) {\n            return streams[i];\n         }\n    }\n    return null;\n}\n\n// sorts a UL/OL\nfunction sortUnorderedList(selector) {\n    var mylist = $(selector);\n    var listitems = mylist.children('li').get();\n    listitems.sort(function(a, b) {\n       var compA = $(a).text().toUpperCase();\n       var compB = $(b).text().toUpperCase();\n       return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;\n    })\n    $.each(listitems, function(idx, itm) { mylist.append(itm); })\n}"], "fixing_code": ["/* jQuery Knob by aterrien, https://github.com/aterrien/jQuery-Knob, MIT License */\n(function(e){if(typeof define===\"function\"&&define.amd){define([\"jquery\"],e)}else{e(jQuery)}})(function(e){\"use strict\";var t={},n=Math.max,r=Math.min;t.c={};t.c.d=e(document);t.c.t=function(e){return e.originalEvent.touches.length-1};t.o=function(){var n=this;this.o=null;this.$=null;this.i=null;this.g=null;this.v=null;this.cv=null;this.x=0;this.y=0;this.w=0;this.h=0;this.$c=null;this.c=null;this.t=0;this.isInit=false;this.fgColor=null;this.pColor=null;this.dH=null;this.cH=null;this.eH=null;this.rH=null;this.scale=1;this.relative=false;this.relativeWidth=false;this.relativeHeight=false;this.$div=null;this.run=function(){var t=function(e,t){var r;for(r in t){n.o[r]=t[r]}n._carve().init();n._configure()._draw()};if(this.$.data(\"kontroled\"))return;this.$.data(\"kontroled\",true);this.extend();this.o=e.extend({min:this.$.data(\"min\")!==undefined?this.$.data(\"min\"):0,max:this.$.data(\"max\")!==undefined?this.$.data(\"max\"):100,stopper:true,readOnly:this.$.data(\"readonly\")||this.$.attr(\"readonly\")===\"readonly\",cursor:this.$.data(\"cursor\")===true&&30||this.$.data(\"cursor\")||0,thickness:this.$.data(\"thickness\")&&Math.max(Math.min(this.$.data(\"thickness\"),1),.01)||.35,lineCap:this.$.data(\"linecap\")||\"butt\",width:this.$.data(\"width\")||200,height:this.$.data(\"height\")||200,displayInput:this.$.data(\"displayinput\")==null||this.$.data(\"displayinput\"),displayPrevious:this.$.data(\"displayprevious\"),fgColor:this.$.data(\"fgcolor\")||\"#87CEEB\",inputColor:this.$.data(\"inputcolor\"),font:this.$.data(\"font\")||\"Arial\",fontWeight:this.$.data(\"font-weight\")||\"bold\",inline:false,step:this.$.data(\"step\")||1,rotation:this.$.data(\"rotation\"),draw:null,change:null,cancel:null,release:null,format:function(e){return e},parse:function(e){return parseFloat(e)}},this.o);this.o.flip=this.o.rotation===\"anticlockwise\"||this.o.rotation===\"acw\";if(!this.o.inputColor){this.o.inputColor=this.o.fgColor}if(this.$.is(\"fieldset\")){this.v={};this.i=this.$.find(\"input\");this.i.each(function(t){var r=e(this);n.i[t]=r;n.v[t]=n.o.parse(r.val());r.bind(\"change blur\",function(){var e={};e[t]=r.val();n.val(n._validate(e))})});this.$.find(\"legend\").remove()}else{this.i=this.$;this.v=this.o.parse(this.$.val());this.v===\"\"&&(this.v=this.o.min);this.$.bind(\"change blur\",function(){n.val(n._validate(n.o.parse(n.$.val())))})}!this.o.displayInput&&this.$.hide();this.$c=e(document.createElement(\"canvas\")).attr({width:this.o.width,height:this.o.height});this.$div=e('<div style=\"'+(this.o.inline?\"display:inline;\":\"\")+\"width:\"+this.o.width+\"px;height:\"+this.o.height+\"px;\"+'\"></div>');this.$.wrap(this.$div).before(this.$c);this.$div=this.$.parent();if(typeof G_vmlCanvasManager!==\"undefined\"){G_vmlCanvasManager.initElement(this.$c[0])}this.c=this.$c[0].getContext?this.$c[0].getContext(\"2d\"):null;if(!this.c){throw{name:\"CanvasNotSupportedException\",message:\"Canvas not supported. Please use excanvas on IE8.0.\",toString:function(){return this.name+\": \"+this.message}}}this.scale=(window.devicePixelRatio||1)/(this.c.webkitBackingStorePixelRatio||this.c.mozBackingStorePixelRatio||this.c.msBackingStorePixelRatio||this.c.oBackingStorePixelRatio||this.c.backingStorePixelRatio||1);this.relativeWidth=this.o.width%1!==0&&this.o.width.indexOf(\"%\");this.relativeHeight=this.o.height%1!==0&&this.o.height.indexOf(\"%\");this.relative=this.relativeWidth||this.relativeHeight;this._carve();if(this.v instanceof Object){this.cv={};this.copy(this.v,this.cv)}else{this.cv=this.v}this.$.bind(\"configure\",t).parent().bind(\"configure\",t);this._listen()._configure()._xy().init();this.isInit=true;this.$.val(this.o.format(this.v));this._draw();return this};this._carve=function(){if(this.relative){var e=this.relativeWidth?this.$div.parent().width()*parseInt(this.o.width)/100:this.$div.parent().width(),t=this.relativeHeight?this.$div.parent().height()*parseInt(this.o.height)/100:this.$div.parent().height();this.w=this.h=Math.min(e,t)}else{this.w=this.o.width;this.h=this.o.height}this.$div.css({width:this.w+\"px\",height:this.h+\"px\"});this.$c.attr({width:this.w,height:this.h});if(this.scale!==1){this.$c[0].width=this.$c[0].width*this.scale;this.$c[0].height=this.$c[0].height*this.scale;this.$c.width(this.w);this.$c.height(this.h)}return this};this._draw=function(){var e=true;n.g=n.c;n.clear();n.dH&&(e=n.dH());e!==false&&n.draw()};this._touch=function(e){var r=function(e){var t=n.xy2val(e.originalEvent.touches[n.t].pageX,e.originalEvent.touches[n.t].pageY);if(t==n.cv)return;if(n.cH&&n.cH(t)===false)return;n.change(n._validate(t));n._draw()};this.t=t.c.t(e);r(e);t.c.d.bind(\"touchmove.k\",r).bind(\"touchend.k\",function(){t.c.d.unbind(\"touchmove.k touchend.k\");n.val(n.cv)});return this};this._mouse=function(e){var r=function(e){var t=n.xy2val(e.pageX,e.pageY);if(t==n.cv)return;if(n.cH&&n.cH(t)===false)return;n.change(n._validate(t));n._draw()};r(e);t.c.d.bind(\"mousemove.k\",r).bind(\"keyup.k\",function(e){if(e.keyCode===27){t.c.d.unbind(\"mouseup.k mousemove.k keyup.k\");if(n.eH&&n.eH()===false)return;n.cancel()}}).bind(\"mouseup.k\",function(e){t.c.d.unbind(\"mousemove.k mouseup.k keyup.k\");n.val(n.cv)});return this};this._xy=function(){var e=this.$c.offset();this.x=e.left;this.y=e.top;return this};this._listen=function(){if(!this.o.readOnly){this.$c.bind(\"mousedown\",function(e){e.preventDefault();n._xy()._mouse(e)}).bind(\"touchstart\",function(e){e.preventDefault();n._xy()._touch(e)});this.listen()}else{this.$.attr(\"readonly\",\"readonly\")}if(this.relative){e(window).resize(function(){n._carve().init();n._draw()})}return this};this._configure=function(){if(this.o.draw)this.dH=this.o.draw;if(this.o.change)this.cH=this.o.change;if(this.o.cancel)this.eH=this.o.cancel;if(this.o.release)this.rH=this.o.release;if(this.o.displayPrevious){this.pColor=this.h2rgba(this.o.fgColor,\"0.4\");this.fgColor=this.h2rgba(this.o.fgColor,\"0.6\")}else{this.fgColor=this.o.fgColor}return this};this._clear=function(){this.$c[0].width=this.$c[0].width};this._validate=function(e){var t=~~((e<0?-.5:.5)+e/this.o.step)*this.o.step;return Math.round(t*100)/100};this.listen=function(){};this.extend=function(){};this.init=function(){};this.change=function(e){};this.val=function(e){};this.xy2val=function(e,t){};this.draw=function(){};this.clear=function(){this._clear()};this.h2rgba=function(e,t){var n;e=e.substring(1,7);n=[parseInt(e.substring(0,2),16),parseInt(e.substring(2,4),16),parseInt(e.substring(4,6),16)];return\"rgba(\"+n[0]+\",\"+n[1]+\",\"+n[2]+\",\"+t+\")\"};this.copy=function(e,t){for(var n in e){t[n]=e[n]}}};t.Dial=function(){t.o.call(this);this.startAngle=null;this.xy=null;this.radius=null;this.lineWidth=null;this.cursorExt=null;this.w2=null;this.PI2=2*Math.PI;this.extend=function(){this.o=e.extend({bgColor:this.$.data(\"bgcolor\")||\"#EEEEEE\",angleOffset:this.$.data(\"angleoffset\")||0,angleArc:this.$.data(\"anglearc\")||360,inline:true},this.o)};this.val=function(e,t){if(null!=e){e=this.o.parse(e);if(t!==false&&e!=this.v&&this.rH&&this.rH(e)===false){return}this.cv=this.o.stopper?n(r(e,this.o.max),this.o.min):e;this.v=this.cv;this.$.val(this.o.format(this.v));this._draw()}else{return this.v}};this.xy2val=function(e,t){var i,s;i=Math.atan2(e-(this.x+this.w2),-(t-this.y-this.w2))-this.angleOffset;if(this.o.flip){i=this.angleArc-i-this.PI2}if(this.angleArc!=this.PI2&&i<0&&i>-.5){i=0}else if(i<0){i+=this.PI2}s=i*(this.o.max-this.o.min)/this.angleArc+this.o.min;this.o.stopper&&(s=n(r(s,this.o.max),this.o.min));return s};this.listen=function(){var t=this,i,s,o=function(e){e.preventDefault();var o=e.originalEvent,u=o.detail||o.wheelDeltaX,a=o.detail||o.wheelDeltaY,f=t._validate(t.o.parse(t.$.val()))+(u>0||a>0?t.o.step:u<0||a<0?-t.o.step:0);f=n(r(f,t.o.max),t.o.min);t.val(f,false);if(t.rH){clearTimeout(i);i=setTimeout(function(){t.rH(f);i=null},100);if(!s){s=setTimeout(function(){if(i)t.rH(f);s=null},200)}}},u,a,f=1,l={37:-t.o.step,38:t.o.step,39:t.o.step,40:-t.o.step};this.$.bind(\"keydown\",function(i){var s=i.keyCode;if(s>=96&&s<=105){s=i.keyCode=s-48}u=parseInt(String.fromCharCode(s));if(isNaN(u)){s!==13&&s!==8&&s!==9&&s!==189&&(s!==190||t.$.val().match(/\\./))&&i.preventDefault();if(e.inArray(s,[37,38,39,40])>-1){i.preventDefault();var o=t.o.parse(t.$.val())+l[s]*f;t.o.stopper&&(o=n(r(o,t.o.max),t.o.min));t.change(t._validate(o));t._draw();a=window.setTimeout(function(){f*=2},30)}}}).bind(\"keyup\",function(e){if(isNaN(u)){if(a){window.clearTimeout(a);a=null;f=1;t.val(t.$.val())}}else{t.$.val()>t.o.max&&t.$.val(t.o.max)||t.$.val()<t.o.min&&t.$.val(t.o.min)}});this.$c.bind(\"mousewheel DOMMouseScroll\",o);this.$.bind(\"mousewheel DOMMouseScroll\",o)};this.init=function(){if(this.v<this.o.min||this.v>this.o.max){this.v=this.o.min}this.$.val(this.v);this.w2=this.w/2;this.cursorExt=this.o.cursor/100;this.xy=this.w2*this.scale;this.lineWidth=this.xy*this.o.thickness;this.lineCap=this.o.lineCap;this.radius=this.xy-this.lineWidth/2;this.o.angleOffset&&(this.o.angleOffset=isNaN(this.o.angleOffset)?0:this.o.angleOffset);this.o.angleArc&&(this.o.angleArc=isNaN(this.o.angleArc)?this.PI2:this.o.angleArc);this.angleOffset=this.o.angleOffset*Math.PI/180;this.angleArc=this.o.angleArc*Math.PI/180;this.startAngle=1.5*Math.PI+this.angleOffset;this.endAngle=1.5*Math.PI+this.angleOffset+this.angleArc;var e=n(String(Math.abs(this.o.max)).length,String(Math.abs(this.o.min)).length,2)+2;this.o.displayInput&&this.i.css({width:(this.w/2+4>>0)+\"px\",height:(this.w/3>>0)+\"px\",position:\"absolute\",\"vertical-align\":\"middle\",\"margin-top\":(this.w/3>>0)+\"px\",\"margin-left\":\"-\"+(this.w*3/4+2>>0)+\"px\",border:0,background:\"none\",font:this.o.fontWeight+\" \"+(this.w/e>>0)+\"px \"+this.o.font,\"text-align\":\"center\",color:this.o.inputColor||this.o.fgColor,padding:\"0px\",\"-webkit-appearance\":\"none\"})||this.i.css({width:\"0px\",visibility:\"hidden\"})};this.change=function(e){this.cv=e;this.$.val(this.o.format(e))};this.angle=function(e){return(e-this.o.min)*this.angleArc/(this.o.max-this.o.min)};this.arc=function(e){var t,n;e=this.angle(e);if(this.o.flip){t=this.endAngle+1e-5;n=t-e-1e-5}else{t=this.startAngle-1e-5;n=t+e+1e-5}this.o.cursor&&(t=n-this.cursorExt)&&(n=n+this.cursorExt);return{s:t,e:n,d:this.o.flip&&!this.o.cursor}};this.draw=function(){var e=this.g,t=this.arc(this.cv),n,r=1;e.lineWidth=this.lineWidth;e.lineCap=this.lineCap;if(this.o.bgColor!==\"none\"){e.beginPath();e.strokeStyle=this.o.bgColor;e.arc(this.xy,this.xy,this.radius,this.endAngle-1e-5,this.startAngle+1e-5,true);e.stroke()}if(this.o.displayPrevious){n=this.arc(this.v);e.beginPath();e.strokeStyle=this.pColor;e.arc(this.xy,this.xy,this.radius,n.s,n.e,n.d);e.stroke();r=this.cv==this.v}e.beginPath();e.strokeStyle=r?this.o.fgColor:this.fgColor;e.arc(this.xy,this.xy,this.radius,t.s,t.e,t.d);e.stroke()};this.cancel=function(){this.val(this.v)}};e.fn.dial=e.fn.knob=function(n){return this.each(function(){var r=new t.Dial;r.o=n;r.$=e(this);r.run()}).parent()}})\n\n\n//downloadCoebotData();\n//var channelCoebotData = getCoebotDataChannel(channel);\nvar isHighlightsLoaded = false;\nvar isBoirLoaded = false;\n\nvar hlstreamTable = false;\n\nvar hlstreamPlayMe = false;\nvar highlightsWentBeepBeep = false;\n\nvar hashPostfix = \"\";\n\nfunction enableSidebar() {\n\n\t$('#navSidebar a.js-sidebar-link').click(function (e) {\n\t\te.preventDefault();\n\t\t$(this).tab('show');\n        //var hashExtension = HASH_DELIMITER + window.location.hash.substr(1).split(HASH_DELIMITER).splice(0,1).join(HASH_DELIMITER);\n        window.location.hash = \"#\" + $(this).attr(\"href\").substr(5) + hashPostfix;// + hashExtension;\n        hashPostfix = \"\";\n\n        $('#channelSidebarCollapse').collapse('hide');\n\t});\n\n\t$('#navSidebar a.js-sidebar-link').on('shown.bs.tab', function (e) {\n\t\tvar tab = e.target;\n\n        //TODO functionify tab updates!\n        var tabIconHtml = $(tab).children('.sidebar-icon').html();\n        var tabTitleHtml = $(tab).children('.sidebar-title').attr(\"data-bigtitle\");\n\n        $(\".js-channel-tab-icon\").html(tabIconHtml);\n        $(\".js-channel-tab-title\").html(tabTitleHtml);\n\t});\n\n    $('#navSidebar a.js-sidebar-link[href=\"#tab_highlights\"]').on('show.bs.tab', function (e) {\n        if (!isHighlightsLoaded) {\n            loadChannelHighlights();\n        }\n    });\n\n    $('#navSidebar a.js-sidebar-link[href=\"#tab_boir\"]').on('show.bs.tab', function (e) {\n        if (!isBoirLoaded) {\n            loadChannelBoir();\n            loadBoirItemData();\n        }\n    });\n\n    if (channelCoebotData.shouldShowBoir) {\n        $(\"#sidebarItemGames\").removeClass(\"hidden\");\n    }\n}\n\nfunction tabContentLoaded() {\n    if (window.location.hash != \"\") {\n        var explodedHash = window.location.hash.substr(1).split(HASH_DELIMITER);\n        var jumpToTab = explodedHash.splice(0,1);\n        if (explodedHash.length >= 1) {\n            hashPostfix = HASH_DELIMITER + explodedHash.join(HASH_DELIMITER);\n        }\n\n        $('#navSidebar a[href=\"#tab_' + jumpToTab + '\"]').click();\n    }\n\n    $('#hlStreamModal').on('hidden.bs.modal', function (e) {\n        window.location.hash = window.location.hash.split(HASH_DELIMITER)[0];\n    });\n\n    linkifyEverything();\n}\n\n// channel config data\nvar channelData = false;\nvar channelBoirData = false;\nvar channelTwitchData = false;\nvar twitchEmotes = false;\nvar channelStreamData = false;\nvar highlightsStats = false;\nvar currentHlstream = false;\nvar boirItemData = false;\n\nfunction downloadChannelData() {\n\t$.ajax({\n\t\tasync: false, // it's my json and i want it NOW!\n\t\tdataType: \"json\",\n\t\turl: \"/configs/\" + channel + \".json\",\n\t\tsuccess: function(json) {\n            console.log(\"Loaded channel data\");\n\t\t\tchannelData = json;\n\t\t},\n\t\terror: function(jqXHR, textStatus, errorThrown) {\n\t\t\talert(\"Failed to load channel data!\");\n\t\t\twindow.location = \"/\";\n\t\t}\n\t});\n}\n\ndownloadChannelData();\n\nfunction displayChannelTitle() {\n\tvar titleHtml = channelCoebotData.displayName; // ((channelCoebotData.displayName&&channelCoebotData.displayName==\"\") ? channel : channelCoebotData.displayName);\n    var tabIconHtml = $('#navSidebar a:first-child .sidebar-icon').html();\n    var tabTitleHtml = $('#navSidebar a:first-child .sidebar-title').html();\n    $(\".js-channel-title\").html(titleHtml);\n    $(\".js-channel-tab-icon\").html(tabIconHtml);\n    $(\".js-channel-tab-title\").html(tabTitleHtml);\n}\n\nfunction displayChannelOverview() {\n    var html = \"\";\n\n    html += '<p>Bot name: ' + channelCoebotData.botChannel + '</p>';\n\n\n    var wpMoment = (channelData.sinceWp !== null) ? moment(channelData.sinceWp) : null;\n    html += '<p class=\"whale-penis\">Whale penis was last mentioned ' + wpMoment.fromNow() + '. It has been mentioned ' + Humanize.intComma(channelData.wpCount) + ' times.';\n\n\n    html += '<p class=\"\">';\n    html += '<a class=\"btn btn-primary overview-socialbtn\" href=\"http://www.twitch.tv/';\n    html += channel + '\" target=\"_blank\"><i class=\"icon-twitch\"></i> Twitch</a>';\n\n    if (channelCoebotData.youtube && channelCoebotData.youtube != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.youtube.com/user/';\n        html += channelCoebotData.youtube + '\" target=\"_blank\"><i class=\"icon-youtube-play\"></i> YouTube</a>';\n    }\n\n    if (channelCoebotData.twitter && channelCoebotData.twitter != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://twitter.com/';\n        html += channelCoebotData.twitter + '\" target=\"_blank\"><i class=\"icon-twitter\"></i> Twitter</a>';\n    }\n\n    if (channelData.steamID && channelData.steamID != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://steamcommunity.com/profiles/';\n        html += channelData.steamID + '\" target=\"_blank\"><i class=\"icon-steam\"></i> Steam</a>';\n    }\n\n    if (channelData.lastfm && channelData.lastfm != \"\") {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.last.fm/user/';\n        html += channelData.lastfm + '\" target=\"_blank\"><i class=\"icon-lastfm\"></i> last.fm</a>';\n    }\n\n    if (channelData.extraLifeID) {\n        html += ' <a class=\"btn btn-default overview-socialbtn\" href=\"http://www.extra-life.org/index.cfm?fuseaction=donorDrive.participant&participantID=';\n        html += channelData.extraLifeID + '\" target=\"_blank\">Extra Life</a>';\n    }\n\n    html += '</p>';\n    var ref = $(\".js-channel-overview\");\n    ref.html(html);\n}\n\nfunction displayChannelCommands() {\n\tvar tbody = $('.js-commands-tbody');\n\tvar rows = \"\";\n    var shouldSortTable = true;\n\tfor (var i = 0; i < channelData.commands.length; i++) {\n\t\tvar cmd = channelData.commands[i];\n\t\tvar row = '<tr class=\"row-command row-command-access-' + cmd.restriction +'\">';\n        row += '<td class=\"js-commands-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#commandAddModal\" data-command=\"' + cmd.key + '\" data-accesslevel=\"' + cmd.restriction + '\" data-response=\"' + cleanHtmlAttr(cmd.value) + '\" data-modaltitle=\"Edit command\"><i class=\"icon-pencil\"></i><span class=\"sr-only\">Edit</span></span></td>';\n\t\trow += '<td><kbd class=\"command\">' + cmd.key + '</kbd></td>';\n        row += '<td class=\"row-command-col-access\" data-order=\"' + cmd.restriction + '\">' + prettifyAccessLevel(cmd.restriction) + '</td>';\n        row += '<td class=\"should-be-linkified should-be-emotified\">' + prettifyStringVariables(cleanHtmlText(cmd.value)) + '</td>';\n\t\trow += '<td>' + Humanize.intComma(cmd.count) + '</td>';\n\t\trow += '</tr>';\n\t\trows += row;\n\t}\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"5\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\ttbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-commands-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-commands-addbtn').css('display', 'block');\n        $('.js-commands-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#commandAddModal').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var command = button.data('command');\n        var accessLevel = button.data('accesslevel');\n        var response = button.data('response');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#commandAddModalName').val(command);\n        $('#commandAddModalOldName').val(command);\n        var accessLevelLabel = $('.js-commands-addmodal-accesslevel label.level' + accessLevel);\n        accessLevelLabel.addClass('active');\n        accessLevelLabel.find('input').attr(\"checked\", true);\n        $('#commandAddModalResponse').val(response);\n        $('#commandAddModalLabel').text(modalTitle);\n    });\n\n    $('#commandAddModalSave').click(function(e) {\n\n        var $btn = $(this).button('loading');\n\n        $.ajax({\n            data: {\n                a: \"setCommand\",\n                channel: channel,\n                name: $('#commandAddModalName').val(),\n                oldName: $('#commandAddModalOldName').val(),\n                response: $('#commandAddModalResponse').val(),\n                restriction: $('input:checked', '#commandAddModalAccessLevel').val()\n            },\n            dataType: \"text\",\n            url: \"/botaction.php\",\n            success: function(txt) {\n                if (txt == \"success\") {\n                    $btn.button('reset');\n                    Messenger().post({\n                      message: 'Command successfully modified!',\n                      type: 'success'\n                    });\n                } else {\n                    Messenger().post({\n                      message: \"Error: \" + txt,\n                      type: 'error'\n                    });\n                }\n            },\n            error: function(jqXHR, textStatus, errorThrown) {\n                Messenger().post({\n                  message: \"A connection error occurred.\",\n                  type: 'error'\n                });\n            },\n            complete: function(jqXHR, textStatus) {\n                $btn.button('reset');\n            }\n        });\n\n    });\n}\n\nfunction displayChannelQuotes() {\n\tvar tbody = $('.js-quotes-tbody');\n\tvar rows = \"\";\n    var shouldSortTable = true;\n\tfor (var i = 0; i < channelData.quotes.length; i++) {\n\t\tvar quote = channelData.quotes[i];\n\t\tvar row = '<tr>';\n        row += '<td class=\"js-quotes-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#quoteAddModal\" data-quote=\"' + cleanHtmlAttr(quote.quote) + '\" data-quoteid=\"' + (i+1) + '\" data-modaltitle=\"Edit quote\"><i class=\"icon-pencil\"></i></span></td>';\n\n\t\trow += '<td>' + (i+1) + '</td>';\n        row += '<td>' + cleanHtmlText(quote.quote) + '</td>';\n\n        var tsMoment = (quote.timestamp !== null) ? moment(quote.timestamp) : null;\n        var tsStr = (quote.timestamp !== null) ? tsMoment.calendar() : \"Unknown\";\n        var cleanTs = (quote.timestamp !== null) ? cleanHtmlAttr(tsMoment.format('LLLL')) : \"This quote was added before CoeBot kept track of when quotes were added.\";\n        var sortNum = (quote.timestamp !== null) ? quote.timestamp : 0;\n        row += '<td title=\"' + cleanTs + '\" data-order=\"' + sortNum + '\">' + tsStr + '</td>';\n\n\t\trow += '</tr>';\n\t\trows += row;\n\t}\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n\ttbody.html(rows);\n\n\n    if (shouldSortTable) {\n        $('.js-quotes-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-quotes-addbtn').css('display', 'block');\n        $('.js-quotes-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#quoteAddModal').on('show.bs.modal', function (event) {\n\n        var button = $(event.relatedTarget);\n        var quoteStr = button.data('quote');\n        var quoteId = button.data('quoteid');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#quoteAddModalQuote').val(quoteStr);\n        $('#quoteAddModalId').val(quoteId);\n        $('#quoteAddModalLabel').text(modalTitle);\n    });\n}\n\nfunction displayChannelAutoreplies() {\n    var tbody = $('.js-autoreplies-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.autoReplies.length; i++) {\n        var reply = channelData.autoReplies[i];\n        var row = '<tr>';\n        row += '<td class=\"js-autoreplies-editcolumn\"><span class=\"table-edit-btn\" data-toggle=\"modal\" data-target=\"#autoreplyAddModal\" data-trigger=\"' + cleanHtmlAttr(reply.trigger) + '\" data-response=\"' + cleanHtmlAttr(reply.response) + '\" data-arid=\"' + (i+1) + '\" data-modaltitle=\"Edit auto-reply\"><i class=\"icon-pencil\"></i></span></td>';\n        row += '<td>' + (i+1) + '</td>';\n        row += '<td title=\"RegEx: ' + cleanHtmlAttr(reply.trigger) + '\">' + prettifyRegex(reply.trigger) + '</td>';\n        row += '<td>' + prettifyStringVariables(cleanHtmlText(reply.response)) + '</td>';\n        row += '</tr>';\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-autoreplies-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false,\n            \"order\": [[ 1, \"asc\" ]],\n            \"columnDefs\": [\n                { \"orderable\": false, \"targets\": 0 }\n              ]\n        });\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('.js-autoreplies-addbtn').css('display', 'block');\n        $('.js-autoreplies-editcolumn').css('display', 'table-cell');\n    }\n\n    $('#autoreplyAddModal').on('show.bs.modal', function (event) {\n\n        var button = $(event.relatedTarget);\n        var arid = button.data('arid');\n        var trigger = button.data('trigger');\n        var response = button.data('response');\n        var modalTitle = button.data('modaltitle');\n\n        var modal = $(this);\n        $('#autoreplyAddModalArid').val(arid);\n        $('#autoreplyAddModalTrigger').val(trigger);\n        $('#autoreplyAddModalResponse').val(response);\n        $('#autoreplyAddModalLabel').text(modalTitle);\n    });\n}\n\nfunction displayChannelScheduled() {\n    var tbody = $('.js-scheduled-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.scheduledCommands.length; i++) {\n        var cmd = channelData.scheduledCommands[i];\n        if (cmd.active) {\n            var row = '<tr>';\n            row += '<td><kbd class=\"command\">' + cmd.name + '</kbd></td>';\n            row += '<td><span title=\"Cron command: ' + cmd.pattern + '\">'\n            row += prettyCron.toString(cmd.pattern) + '</td>';\n            row += '</tr>';\n            rows += row;\n        }\n    }\n    for (var i = 0; i < channelData.repeatedCommands.length; i++) {\n        var cmd = channelData.repeatedCommands[i];\n        if (cmd.active) {\n            var row = '<tr>';\n            row += '<td><kbd class=\"command\">' + cmd.name + '</kbd></td>';\n            row += '<td><span title=\"Every ' + cmd.delay + ' seconds\">Every '\n            row += moment().subtract(cmd.delay, 'seconds').fromNow(true) + '</span></td>';\n            row += '</tr>';\n            rows += row;\n        }\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"2\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-scheduled-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false\n        });\n    }\n}\n\nfunction displayChannelRegulars() {\n    var tbody = $('.js-regulars-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < channelData.regulars.length; i++) {\n        var reg = channelData.regulars[i];\n        var row = '<tr>';\n        row += '<td class=\"text-capitalize\">' + reg + '</td>';\n        row += '</tr>';\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"1\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-regulars-table').dataTable();\n    }\n\n\n    var subsinfoText = 'On this channel, ';\n    if (channelData.subscriberRegulars) {\n        subsinfoText += 'subscribers are automatically given all the same privileges as regulars.';\n    } else if (channelData.subsRegsMinusLinks) {\n        subsinfoText += 'subscribers are automatically given the same privileges as regulars, except they cannot post links or use the <kbd class=\"command\">urban</kbd> command.';\n    } else {\n        subsinfoText += 'subscribers do not automatically receive the same privileges as regulars.';\n    }\n\n    $('.js-regulars-subsinfo').html(subsinfoText);\n}\n\nfunction displayChannelChatrules() {\n    // var html = \"\"\n    // html += '<h3>Banned phrases</h3>'\n\n    if (channelCoebotData.shouldShowOffensiveWords && channelData.filterOffensive) {\n\n        var tbody = $('.js-chatrules_offensive-tbody');\n        var rows = \"\";\n        var shouldSortTable = true;\n        for (var i = 0; i < channelData.offensiveWords.length; i++) {\n            var word = channelData.offensiveWords[i];\n            var row = '<tr>';\n            row += '<td title=\"RegEx: ' + cleanHtmlAttr(word) + '\">' + prettifyRegex(word) + '</td>';\n            row += '</tr>';\n            rows += row;\n        }\n        if (rows == \"\") {\n            rows = '<tr><td colspan=\"1\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n            shouldSortTable = false;\n        }\n\n        tbody.html(rows);\n\n        if (shouldSortTable) {\n            $('.js-chatrules_offensive-table').dataTable({\n                \"paging\": false,\n                \"info\": false,\n                \"searching\": false\n            });\n        }\n    } else {\n        $('.js-chatrules_offensive').addClass(\"hidden\");\n    }\n\n    // console.log(channelData.useFilters);\n\n    if (channelData.useFilters) {\n\n        var miscHtml = '';\n        miscHtml += '<h3>Filter rules</h3>';\n\n        if (channelData.filterCaps) {\n            miscHtml += '<p>Messages with excessive capital letters will be censored if the message contains at least ' + channelData.filterCapsMinCapitals + ' capital letters and consists more than ' + channelData.filterCapsPercent + '% of capital letters.</p>';\n        }\n        if (channelData.filterLinks) {\n            miscHtml += '<p>All URLs linked to by non-regulars ';\n            if (channelData.subscriberRegulars) {\n                miscHtml += '(excluding subscribers) ';\n            } else {\n                miscHtml += '(including subscribers) ';\n            }\n            miscHtml += ' will be censored.';\n            if (channelData.permittedDomains && channelData.permittedDomains.length != 0) {\n                miscHtml += ' However, the following domains are exempt from censoring: ';\n                miscHtml += Humanize.oxford(channelData.permittedDomains);\n            }\n            miscHtml += '</p>';\n        }\n        // if (channelData.filterSymbols) {\n        //     miscHtml += '<p>All caps will be filtered if a message contains more than ' + channelData.filterCapsPercent + '% uppercase letters.</p>'\n        // }\n\n        $(\".js-chatrules_misc\").html(miscHtml);\n    }\n\n\n    // $(\".js-chatrules-div\").html(html);\n}\n\n\nfunction loadChannelHighlights() {\n\n    var explodedHash = window.location.hash.substr(0).split(HASH_DELIMITER);\n\n    if (explodedHash.length >= 2) {\n        hlstreamPlayMe = explodedHash[1];\n        if (highlightsWentBeepBeep) {\n            loadHlstream(hlstreamPlayMe);\n            hlstreamPlayMe = false;\n        }\n    }\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: false,\n        jsonpCallback: \"loadChannelHighlightsCallback\",\n        url: \"/oldhl/api/stats/\" + channel + \"&callback=loadChannelHighlightsCallback\",\n        success: function(json) {\n            console.log(\"Loaded highlights stats\");\n            highlightsStats = json;\n            isHighlightsLoaded = true;\n            showChannelHighlights();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load highlights!\");\n        }\n    });\n}\n\nfunction showChannelHighlights() {\n\n    var tbody = $('.js-highlights-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < highlightsStats.streams.length; i++) {\n        var strm = highlightsStats.streams[i];\n        var row = '<tr>';\n\n        row += '<td><span class=\"fake-link js-highlight-btn\" data-hlid=\"' + strm.id + '\">' + cleanHtmlText(strm.title) + '</span></td>';\n\n        var startMoment = moment.unix(strm.start);\n        var cleanStart = cleanHtmlAttr(startMoment.format('LLLL'));\n        row += '<td title=\"' + cleanStart + '\" data-order=\"' + strm.start + '\">' + startMoment.calendar() + '</td>';\n\n        var durationMoment = moment.duration(strm.duration, 'seconds');\n        var cleanDuration = cleanHtmlAttr(stringifyDuration(durationMoment));\n        row += '<td title=\"' + cleanDuration + '\" data-order=\"' + strm.duration + '\">' + durationMoment.humanize() + '</td>';\n        row += '<td data-order=\"' + strm.hlcount + '\">' + Humanize.intComma(strm.hlcount) + '</td>';\n        row += '</tr>';\n\n\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"4\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        $('.js-highlights-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"order\": [[ 1, \"desc\" ]]\n        });\n    }\n\n    $('.js-highlights-loading').addClass('hidden');\n    $('.js-highlights-table').removeClass('hidden');\n\n    $('.js-highlight-btn').click(function() {\n        var hlid = $(this).attr('data-hlid');\n        loadHlstream(hlid);\n    });\n\n}\n\n\nfunction loadHlstream(id) {\n\n    $('.js-hlstream-loaded, .js-hlstream-loaded-inline').css('display', 'none');\n    $('.js-hlstream-loading').css('display', 'block');\n    $('.js-hlstream-loading-inline').css('display', 'inline');\n\n    $('#hlStreamModal').modal('show');\n\n    window.location.hash += HASH_DELIMITER + id;\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: false,\n        jsonpCallback: \"loadHlstreamCallback\",\n        url: \"/oldhl/api/hl/\" + channel + \"/\" + id + \"/&callback=loadHlstreamCallback\",\n        success: function(json) {\n            console.log(\"Loaded hlstream #\" + id);\n            currentHlstream = json;\n            showHlstream();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load highlight!\");\n        }\n    });\n}\n\nfunction showHlstream() {\n\n    $('.js-hlstream-title').html(currentHlstream.title);\n\n    $('.js-hlstream-twitchlink').attr(\"href\", getUrlForTwitchVod(channel, currentHlstream.id));\n\n\n    var playerVars = \"title=\" + currentHlstream.title + \"&amp;channel=\" + channel\n    playerVars += \"&amp;auto_play=false&amp;start_volume=100&amp;videoId=\" + currentHlstream.id;\n\n    var playerHtml = \"\";\n    playerHtml += \"<object bgcolor='#313131' data='https://www.twitch.tv/widgets/archive_embed_player.swf' height='472' id='player' type='application/x-shockwave-flash' width='775'>\";\n    playerHtml += \"<param name='movie' value='https://www.twitch.tv/widgets/archive_embed_player.swf' />\";\n    playerHtml += \"<param name='allowScriptAccess' value='always' />\";\n    playerHtml += \"<param name='allowNetworking' value='all' />\";\n    playerHtml += \"<param name='allowFullScreen' value='true' />\";\n    playerHtml += \"<param name='flashvars' value='\" + playerVars + \"' />\";\n    playerHtml += \"</object>\";\n\n    var playerParent = $(\".js-hlstream-player-parent\");\n    playerParent.empty();\n    playerParent.html(playerHtml);\n\n\n    var tableTemplate = '';\n    tableTemplate += '<table class=\"table table-striped js-hlstream-table\">';\n    tableTemplate += '<thead>';\n    tableTemplate += '<tr>';\n    tableTemplate += '<th><i class=\"sorttable-icon\"></i>Time</th>';\n    tableTemplate += '<th><i class=\"sorttable-icon\"></i>Hits</th>';\n    tableTemplate += '</tr>';\n    tableTemplate += '</thead>';\n    tableTemplate += '<tbody class=\"js-hlstream-tbody\"></tbody>';\n    tableTemplate += '</table>';\n\n    var tableParent = $('.js-hlstream-table-parent');\n    tableParent.empty();\n    tableParent.html(tableTemplate);\n\n    var tbody = $('.js-hlstream-tbody');\n    var rows = \"\";\n    var shouldSortTable = true;\n    for (var i = 0; i < currentHlstream.highlights.length; i++) {\n        var hl = currentHlstream.highlights[i];\n        var row = '<tr>';\n\n        var durationMoment = moment.duration(hl.position, 'seconds');\n        var cleanDuration = cleanHtmlAttr(stringifyDurationShort(durationMoment, true));\n        row += '<td data-order=\"' + hl.position + '\"><span onclick=\"jumpHlstreamTimestamp('\n        row += hl.position + ')\" class=\"fake-link\">' + cleanDuration + '</span></td>';\n\n        row += '<td data-order=\"' + hl.hits + '\">' + Humanize.intComma(hl.hits) + '</td>';\n        row += '</tr>';\n\n        rows += row;\n    }\n    if (rows == \"\") {\n        rows = '<tr><td colspan=\"2\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n        shouldSortTable = false;\n    }\n\n    tbody.html(rows);\n\n    if (shouldSortTable) {\n        hlstreamTable = $('.js-hlstream-table').dataTable({\n            \"paging\": false,\n            \"info\": false,\n            \"searching\": false\n        });\n    }\n\n    $('.js-hlstream-loading, .js-hlstream-loading-inline').css('display', 'none');\n    $('.js-hlstream-loaded').css('display', 'block');\n    $('.js-hlstream-loaded-inline').css('display', 'inline');\n\n}\n\nfunction beepBeepHeresYourHighlights() {\n    if (hlstreamPlayMe !== false) {\n        loadHlstream(hlstreamPlayMe);\n        hlstreamPlayMe = false;\n    }\n    highlightsWentBeepBeep = true;\n}\n\nfunction jumpHlstreamTimestamp(timestamp) {\n    player.videoSeek(timestamp);\n}\n\n\nfunction loadChannelBoir() {\n\n    var explodedHash = window.location.hash.substr(0).split(HASH_DELIMITER);\n\n    if (explodedHash.length >= 2) {\n        loadHlstream(parseInt(explodedHash[1]));\n    }\n\n    $.ajax({\n        dataType: \"json\",\n        url: \"/configs/boir/\" + channel + \".json\",\n        success: function(json) {\n            console.log(\"Loaded channel BOIR data\");\n            channelBoirData = json;\n            isBoirLoaded = true;\n            showChannelBoir();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load BOIR data!\");\n        }\n    });\n}\n\nfunction showChannelBoir() {\n\n    var boirContainer = $('.js-boir-container');\n    var html = \"\";\n\n    html += '<div class=\"boir-character\"><strong>Character:</strong> ' + cleanHtmlText(channelBoirData.character) + \"</div>\";\n    html += '<div class=\"boir-floor\"><strong>Floor:</strong> ' + cleanHtmlText(channelBoirData.floor) + \"</div>\";\n    html += '<div class=\"boir-seed\"><strong>Seed:</strong> ' + cleanHtmlText(channelBoirData.seed) + \"</div>\";\n    html += '<h3>Items</h3>';\n\n    html += '<div class=\"well boir-items items-container\">';//<div class=\"row\">';\n    for (var i = 0; i < channelBoirData.items.length; i++) {\n        var item = channelBoirData.items[i];\n        item = item.replace(/</gi, \"&lt;\");\n        html += '<div class=\"boir-item\">';//html += '<div class=\"col-xs-6 col-sm-3 col-md-2 boir-item\">';\n        html += '<div class=\"rebirth-item\" data-item=\"' + cleanBoirNameForComparison(item) + '\">' + item + '&nbsp;&nbsp;&nbsp;</div>';\n        //html += '<span class=\"boir-item-subtitle\">' + item + '</span>';\n        html += '</div>';\n    }\n    html += '</div>';//</div>';\n    html += '<p class=\"small\">Item data from <a href=\"http://platinumgod.co.uk/rebirth\" target=\"_blank\">platinumgod.co.uk</a></em></p>'\n\n    if (typeof channelBoirData.flyItems !== 'undefined' && typeof channelBoirData.flyProgress !== 'undefined') {\n        html += '<div class=\"col-md-6 text-center\">';\n        html += '<h3>Lord of the Flies</h3>';\n        html += '<input type=\"text\" class=\"dial js-boir-dial js-boir-dial-fly\" value=\"' + cleanHtmlAttr(channelBoirData.flyProgress) + '\">';\n\n        // html += '<h4>Items</h4>';\n        html += '<div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\"><ul class=\"list-group\">'\n        for (var i = 0; i < channelBoirData.flyItems.length; i++) {\n            var item = channelBoirData.flyItems[i];\n            html += '<li class=\"list-group-item\">' + cleanHtmlText(item) + '</li>';\n        }\n        html += '</ul></div></div>';\n        html += '</div>';\n    }\n\n    if (typeof channelBoirData.guppyItems !== 'undefined' && typeof channelBoirData.guppyProgress !== 'undefined') {\n        html += '<div class=\"col-md-6 text-center\">';\n        html += '<h3>Guppy</h3>';\n        html += '<input type=\"text\" class=\"dial js-boir-dial js-boir-dial-guppy\" value=\"' + cleanHtmlAttr(channelBoirData.guppyProgress) + '\">';\n\n        // html += '<h4>Items</h4>';\n        html += '<div class=\"row\"><div class=\"col-sm-8 col-sm-offset-2\"><ul class=\"list-group\">'\n        for (var i = 0; i < channelBoirData.guppyItems.length; i++) {\n            var item = channelBoirData.guppyItems[i];\n            html += '<li class=\"list-group-item\">' + cleanHtmlText(item) + '</li>';\n        }\n        html += '</ul></div></div>';\n    }\n        html += '</div>';\n\n    boirContainer.html(html);\n\n    boiItemDataDomReady = true;\n    showBoirItemData();\n\n    $(\".js-boir-dial\").knob({\n        'min': 0,\n        'max': 3,\n        'readOnly': true,\n        'angleOffset':-125,\n        'angleArc': 250,\n        'fgColor': '#2A9FD6',\n        'bgColor': '#151515',\n        'format': function(v) { return v + \"/3\"; }\n    });\n    //$('.js-boir-dial-fly').val(channelBoirData.flyProgress).trigger('change');\n\n    $('.js-boir-loading').addClass('hidden');\n    $('.js-boir-loaded').removeClass('hidden');\n\n}\n\nfunction loadBoirItemData() {\n\n    $.ajax({\n        cache: true,\n        dataType: \"json\",\n        url: \"/boiitemsarray.json\",\n        success: function(json) {\n            console.log(\"Loaded BOIR item data\");\n            boirItemData = json;\n\n            for (var i = 0; i < boirItemData.length; i++) {\n                boirItemData[i].safename = cleanBoirNameForComparison(boirItemData[i].title);\n            }\n\n            boiItemDataAjaxReady = true;\n            showBoirItemData();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load BOIR items data!\");\n        }\n    });\n}\n\nvar boiItemDataDomReady = false;\nvar boiItemDataAjaxReady = false;\n\nfunction showBoirItemData() {\n    if (!boiItemDataDomReady || !boiItemDataAjaxReady) {\n        return;\n    }\n\n    var itemSelector = $(\".items-container .rebirth-item\");\n\n    itemSelector.each(function() {\n        var div = $(this);\n        div.html(\"\"); // remove the placeholder title\n        var item = div.attr(\"data-item\");\n        var data = findItemInBoirData(item);\n\n        if (data != null) {\n            div.addClass(data.class);\n            div.attr(\"title\", data.title);\n\n            var content = '';\n            content += '<div class=\"text-center text-primary\"><em>&ldquo;' + data.pickup + '&rdquo;</em></div>';\n\n            if (data.info.length > 0) {\n                content += '<ul class=\"boir-item-infolist\">';\n                for (var i = 0; i < data.info.length; i++) {\n                    content += '<li>' + data.info[i] + '</li>';\n                }\n                content += '</ul>';\n            }\n\n            if (data.unlock != \"\") {\n                content += '<div><strong>Unlock:</strong> ' + data.unlock + '</div>';\n            }\n\n            if (data.type != \"\") {\n                content += '<div><strong>Type:</strong> ' + data.type + '</div>';\n            }\n\n            if (data.recharge != \"\") {\n                content += '<div><strong>Recharge Time:</strong> ' + data.recharge + '</div>';\n            }\n\n            if (data.itempool != \"\") {\n                content += '<div><strong>Item Pool:</strong> ' + data.itempool + '</div>';\n            }\n\n            div.attr(\"data-content\",content);\n        }\n    });\n\n    itemSelector.popover({\n        html: true,\n        placement: 'auto top',\n        trigger: 'hover'\n    });\n}\n\nfunction findItemInBoirData(name) {\n    for (var i = 0; i < boirItemData.length; i++) {\n         if (boirItemData[i].safename == name) {\n            return boirItemData[i];\n         }\n    }\n    return null;\n}\n\nfunction cleanBoirNameForComparison(name) {\n    return name.replace(/['\\s]/g, \"\").toLowerCase();\n}\n\nfunction displayChannelSettings() {\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_MOD) {\n        $('#sidebarItemSettings').removeClass('hidden');\n    }\n\n    if (userAccessLevel >= USER_ACCESS_LEVEL_OWNER) {\n        $('#settingsPartModalBtn').removeClass('hidden');\n    }\n\n    $('#settingsPartConfirmBtn').click(function(e) {\n\n        var $btn = $(this).button('loading');\n\n        $.ajax({\n            data: {\n                a: \"part\",\n                channel: channel\n            },\n            dataType: \"json\",\n            url: \"/botaction.php\",\n            success: function(data) {\n                if (data.status == \"success\") {\n                    $btn.button('reset');\n                    Messenger().post({\n                      message: 'Sent leave request! Page will refresh in 3 seconds...',\n                      type: 'success'\n                    });\n                    setTimeout(function() { location.reload();}, 3000);\n                } else {\n                    var errMsg = (typeof data.status !== 'undefined') ? data.status : data;\n                    Messenger().post({\n                      message: \"Error: \" + data.status,\n                      type: 'error'\n                    });\n                }\n            },\n            error: function(jqXHR, textStatus, errorThrown) {\n                Messenger().post({\n                  message: \"A connection error occurred.\",\n                  type: 'error'\n                });\n            },\n            complete: function(jqXHR, textStatus) {\n                $btn.button('reset');\n            }\n        });\n\n    });\n}\n\n\nfunction displayChannelReqsongs() {\n\n    // if they aren't owner, they don't need to run this code\n    if (userAccessLevel < USER_ACCESS_LEVEL_OWNER) {\n        return;\n    }\n\n    $('#sidebarItemReqsongs').removeClass('hidden');\n\n    setInterval(updateReqsongs, 5000);\n\n\n\n}\n\nfunction updateReqsongs() {\n\treturn true; //temporary disable\n    $.ajax({\n        data: {\n            a: \"listReqsong\",\n            channel: channel\n        },\n        dataType: \"json\",\n        url: \"/botaction.php\",\n        success: function(data) {\n            if (data.status == \"success\") {\n                var reqsongs = data.reqsongs;\n\n                var tbody = $('.js-reqsongs-tbody');\n                var rows = \"\";\n\n                for (var i = 0; i < reqsongs.length; i++) {\n                    var rs = reqsongs[i];\n                    var row = '<tr class=\"row-reqsong\">';\n                    row += '<td><a href=\"' + rs.url + '\">' +  rs.url + '</a></td>';\n                    row += '<td>00:00</td>';\n                    row += '<td>' + rs.requestedBy + '</td>';\n                    row += '<td class=\"js-reqsongs-deletecol\"><span class=\"js-reqsongs-deletebtn\" data-reqsong-id=\"' + rs.id  + '\"><i class=\"icon-trash\"></i><span class=\"sr-only\">Delete</span></span></td>';\n                    row += '</tr>';\n                    rows += row;\n                }\n                if (rows == \"\") {\n                    rows = '<tr><td colspan=\"5\" class=\"text-center\">' + EMPTY_TABLE_PLACEHOLDER + '</td></tr>';\n                    shouldSortTable = false;\n                }\n                tbody.html(rows);\n\n\n            } else {\n                var errMsg = (typeof data.status !== 'undefined') ? data.status : data;\n                Messenger().post({\n                  message: \"Error: \" + data.status,\n                  type: 'error'\n                });\n            }\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            Messenger().post({\n              message: \"Failed to connect to server...\",\n              type: 'error'\n            });\n        },\n        complete: function(jqXHR, textStatus) {\n            //$btn.button('reset');\n        }\n    });\n}\n\n\n\n\n\n\n// turns a Moment.js duration object into a totes professional string\nfunction stringifyDuration(duration) {\n    var str = \"\";\n\n    if (duration.asDays() >= 1) {\n        var days = Math.floor(duration.asDays());\n        str += days + \" day\" + (days == 1 ?\"\":\"s\") + \", \";\n        str += duration.hours() + \" hour\" + (duration.hours() == 1 ?\"\":\"s\") + \", \";\n\n    } else if (duration.asHours() >= 1) {\n        var hrs = Math.floor(duration.asHours());\n        str += hrs + \" hour\" + (hrs == 1 ?\"\":\"s\") + \", \";\n    }\n    str += duration.minutes() + \" minute\" + (duration.minutes() == 1 ?\"\":\"s\") + \", \";\n    str += duration.seconds() + \" second\" + (duration.seconds() == 1 ?\"\":\"s\");\n\n    return str;\n}\n\n\n// turns a Moment.js duration object into a totes professional string, except shorter\nfunction stringifyDurationShort(duration, shouldAddSpaces) {\n    var str = \"\";\n\n    var maybeASpace = shouldAddSpaces ? \" \" : \"\";\n\n    if (duration.asHours() >= 1) {\n        var hrs = Math.floor(duration.asHours());\n        str += hrs + \"h\" + maybeASpace;\n    }\n    str += duration.minutes() + \"m\" + maybeASpace;\n    str += duration.seconds() + \"s\";\n\n    return str;\n}\n\n\nfunction prettifyAccessLevel(access) {\n    if (access == 0) {\n        return \"All\";\n    }\n    if (access == 1) {\n        if (channelData.subsRegsMinusLinks||channelData.subscriberRegulars) {\n            return \"Subs\";\n        } else {\n            return \"Regs\";\n        }\n    }\n    if (access == 2) {\n        return \"Mods\";\n    }\n    if (access == 3) {\n        return \"Owners\";\n    }\n}\n\nfunction colorifyAccessLevel(access) {\n    if (access == 0) {\n        return \"#616b72\"; //return \"#bdc3c7\";\n    }\n    if (access == 1) {\n        return \"#8e44ad\";\n    }\n    if (access == 2) {\n        return \"#27ae60\";\n    }\n    if (access == 3) {\n        return \"#c0392b\";\n    }\n}\n\nfunction injectEmoticons(html) {\n    return html; //TEMP FIX BECAUSE EVERYTHING BROKE\n    html = htmlDecode(html);\n    for (var i = 0; i < twitchEmotes.length; i++) {\n        var emote = twitchEmotes[i];\n        if (emote.state == \"active\") {\n            var pattern = null;\n            if (emote.regex.search(/\\W/g) == -1) {\n                var pattern = new RegExp('\\\\b(' + emote.regex + ')\\\\b', 'gm');\n            } else {\n                var pattern = new RegExp('(' + emote.regex + ')', 'gm');\n            }\n            html = html.replace(pattern, htmlifyEmote(emote));\n        }\n    }\n    return html;\n}\n\nfunction linkifyEverything() {\n    console.log('linkified');\n    var linkifyThese = $('.should-be-linkified');\n    linkifyThese.each(function() {\n        $(this).linkify();\n        $(this).removeClass('should-be-linkified');\n    });\n    // linkifyThese.linkify();\n    // linkifyThese.removeClass('.should-be-linkified');\n}\n\nfunction htmlDecode(input) {\n    return String(input)\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>');\n}\n\n// generates HTML for an emote\nfunction htmlifyEmote(emote) {\n    var html = '';\n    html += '<img src=\"' + emote.url;\n    html += '\" height=\"' + emote.height;\n    html += '\" width=\"' + emote.width;\n    html += '\" title=\"$1\" class=\"twitch-emote\">';\n    return html;\n}\n\n// because twitch is too cool for consistency\nfunction getUrlForTwitchVod(channel, id) {\n    var prefix = id.substr(0,1);\n    if (prefix == \"a\") {\n        return \"http://twitch.tv/\" + channel + \"/b/\" + id.substr(1);\n    }\n    if (prefix == \"v\") {\n        return \"http://twitch.tv/\" + channel + \"/v/\" + id.substr(1);\n    }\n    console.log(\"ERROR: Failed to parse id: \" + id);\n    return \"http://twitch.tv/\" + channel + \"/\" + id.substr(1);\n}\n\n// displays info about the Twitch channel on the overview page\nfunction injectTwitchData() {\n    var oldHtml = $('.js-channel-overview').html();\n    var html = '';\n    html += '<p>Views: ' + Humanize.intComma(channelTwitchData.views) + '</p>';\n    html += '<p>Followers: ' + Humanize.intComma(channelTwitchData.followers) + '</p>';\n    html += '<p>Joined Twitch on ' + moment(channelTwitchData.created_at).format('LL') + '</p>';\n    html += oldHtml;\n\n    $('.js-channel-overview').html(html);\n}\n\n$(document).ready(function() {\n\n    // moment.locale('en-custom', {\n    //     calendar : {\n    //         lastDay : '[Yesterday at] LT',\n    //         sameDay : '[Today at] LT',\n    //         nextDay : '[Tomorrow at] LT',\n    //         lastWeek : '[Last] dddd [at] LT',\n    //         nextWeek : 'dddd [at] LT',\n    //         sameElse : 'll [at] LT'\n    //     }\n    // });\n\n    $.ajax({\n        dataType: \"jsonp\",\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/channels/\" + channel,\n        success: function(json) {\n            console.log(\"Loaded Twitch channel data\");\n            channelTwitchData = json;\n            injectTwitchData();\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Twitch channel data!\");\n        }\n    });\n\n    $.ajax({\n        cache: true,\n        dataType: \"jsonp\",\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/chat/\" + channel + \"/emoticons\",\n        success: function(json) {\n            console.log(\"Loaded Twitch emotes\");\n            twitchEmotes = json.emoticons;\n            //var commandsTbody = $('.js-commands-tbody');\n            $('.should-be-emotified').each(function () {\n                var diss = $(this);\n                diss.html(injectEmoticons(diss.html()));\n            });\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Twitch emotes!\");\n        }\n    });\n\n    checkIfLiveChannel();\n    setInterval(checkIfLiveChannel, 30000);\n\n    $(\".command\").prepend('<span class=\"command-prefix\">' + cleanHtmlText(channelData.commandPrefix) + '</span>');\n\n\n    var commandPrefixForUrl = channelData.commandPrefix;\n\n    if (commandPrefixForUrl == \"+\") {\n        commandPrefixForUrl = \"plus\";\n    }\n    if (commandPrefixForUrl == \"#\") {\n        commandPrefixForUrl = \"hash\";\n    }\n    if (commandPrefixForUrl == \"&\") {\n        commandPrefixForUrl = \"amp\";\n    }\n    if (commandPrefixForUrl == \"?\") {\n        commandPrefixForUrl = \"qmark\";\n    }\n\n    $(\".js-link-commands\").each(function() {\n        var href = $(this).attr(\"href\");\n        $(this).attr(\"href\", href + \"/\" + encodeURIComponent(commandPrefixForUrl));\n    });\n})\n\n\nfunction checkIfLiveChannel() {\n    checkIfLive(channel, handleChannelIsLive);\n}\n\nfunction handleChannelIsLive(json) {\n    if (!json) {\n        alert(\"Failed to load Twitch stream data!\");\n        channelStreamData = false;\n    } else {\n        channelStreamData = json.streams;\n    }\n    updateIsLive(json.streams);\n}\n", "var EMPTY_TABLE_PLACEHOLDER = 'There\\'s nothing here... <i class=\"icon-frown\"></i>';\nvar HASH_DELIMITER = \"/\";\n\n// N.B. should always match up with the same list in common.php!!!\nvar USER_ACCESS_LEVEL_NA = -1;\nvar USER_ACCESS_LEVEL_NONE = 0;\nvar USER_ACCESS_LEVEL_MOD = 2;\nvar USER_ACCESS_LEVEL_EDITOR = 3;\nvar USER_ACCESS_LEVEL_OWNER = 4;\nvar USER_ACCESS_LEVEL_ADMIN = 99;\n\nfunction prettifyStringVariables(str) {\n    var pattern = /\\(_([\\w\\-:]+)_\\)/g;\n    var replacement = '<span class=\"label label-default command-variable\">$1</span>';\n    str = str.replace(pattern, replacement);\n    return str;\n}\n\nfunction prettifyRegex(pattern) {\n    pattern = pattern.replace(/\\.\\*/g, '<span class=\"text-info\">*</span>');\n    pattern = pattern.replace(/\\\\w\\*/g, '<span class=\"text-info\">&hellip;</span>');\n    pattern = pattern.replace(/(\\\\Q|\\\\E|\\\\b)/g, \"\");\n    pattern = pattern.replace(/\\\\s/g, \" \");\n    return pattern;\n}\n\nvar cleanHtmlTextMap = {\n   \"&\": \"&amp;\",\n   \"<\": \"&lt;\",\n   \">\": \"&gt;\",\n   '\"': '&quot;',\n   \"'\": '&#39;',\n   \"/\": '&#x2F;'\n };\n\n function cleanHtmlText(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n        return cleanHtmlTextMap[s];\n    });\n }\nfunction cleanHtmlAttr(val) {\n    return val.replace(/\"/g, \"&quot;\");\n}\n\n// channels.json json file\nvar coebotData = false;\n\nfunction downloadCoebotData() {\n    $.ajax({\n        async: false, // it's my json and i want it NOW!\n        dataType: \"json\",\n        url: \"/api/v1/channel/list\",\n        success: function(json) {\n            console.log(\"Loaded Coebot data\");\n            coebotData = json;\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            alert(\"Failed to load Coebot data!\");\n        }\n    });\n}\n\nfunction getCoebotDataChannel(chan) {\n    for (var i = 0; i < coebotData.channels.length; i++) {\n        if (coebotData.channels[i].channel == chan) {\n            return coebotData.channels[i];\n        }\n    }\n    return null;\n}\n\nfunction getUrlToChannel(chan) {\n    return \"/c/\" + chan + \"/\";\n}\n\n\n/**\n * states of liveness\n * 0 = error\n * 1 = offline\n * 2 = live\n * 3 = loading\n */\n\nvar isLiveErr = 0;\nvar isLiveOff = 1;\nvar isLiveOn = 2;\nvar isLiveLoad = 3;\n\nvar isLiveClasses = [\n    \"icon-attention text-warning\",\n    \"icon-circle-empty text-muted\",\n    \"icon-circle text-primary\",\n    \"icon-arrows-cw icon-spin text-muted\"\n];\nvar isLiveClassesAll = isLiveClasses.join(\" \");\n\nvar isLiveTitles = [\n    \"Couldn't access Twitch\",\n    \"Offline\",\n    \"Live\",\n    \"Loading...\"\n];\n\n// checks if the stream is live\nfunction checkIfLive(channels, callback) {\n    var heading = $('.js-islive');\n    var icon = heading.children(\".js-islive-icon\");\n    icon.removeClass(isLiveClassesAll);\n    icon.addClass(isLiveClasses[isLiveLoad]);\n    queryTwitchStreams(channels, callback);\n\n}\n\nfunction queryTwitchStreams(channels, callback) {\n    $.ajax({\n        dataType: \"jsonp\",\n        data: {\n            channel: channels\n        },\n        jsonp: \"callback\",\n        url: \"https://api.twitch.tv/kraken/streams\",\n        success: function(json) {\n            console.log(\"Loaded Twitch streams: \" + channels);\n            callback(json, channels);\n        },\n        error: function(jqXHR, textStatus, errorThrown) {\n            console.log(\"Failed to load Twitch streams: \" + channels);\n            callback(false, channels);\n        }\n    });\n\n}\n\nfunction getLiveStatus(stream) {\n    var liveStatus = isLiveErr;\n    if (typeof stream !== 'boolean') {\n        liveStatus = (stream != null) ? isLiveOn : isLiveOff;\n    }\n    return liveStatus;\n}\n\nfunction stringifyChannels() {\n    var str = [];\n    var CHANCT = 200;\n    for (var i = 0; i < coebotData.channels.length; i++) {\n        if (i % CHANCT == 0) {\n            str[i/CHANCT] = \"\";\n        }\n        str[(i-(i%CHANCT))/CHANCT] += coebotData.channels[i].channel + ',';\n    }\n    return str;\n}\n\n// updates the indicator that shows if the channel is currently streaming\nfunction updateIsLive(streams, channels) {\n\n    $('.js-islive').each(function(index){\n        var current = $(this);\n\n        var currChannel = current.attr(\"data-channel\");\n        if (typeof currChannel === 'undefined' && typeof channel !== 'undefined') {\n            currChannel = channel;\n        }\n\n        if (typeof channels === 'string' && !channels.includes(currChannel + \",\")) return;\n\n        var stream = findChannelInStreams(streams, currChannel);\n        var liveStatus = getLiveStatus(stream);\n\n        var icon = current.find(\".js-islive-icon\");\n\n        // style the indicator with the right colors and icon\n        icon.removeClass(isLiveClassesAll);\n        icon.addClass(isLiveClasses[liveStatus]);\n\n        // get the hover text. if we're live, it's fancier\n        var popover = isLiveTitles[liveStatus];\n        if (liveStatus == isLiveOn) {\n            popover = '<div class=\"islive-popover\">';\n\n            popover += '<img src=\"'+stream.preview.medium+'\" class=\"img-responsive\" height=\"180\" width=\"320\">';\n\n            popover += '<i class=\"icon-gamepad\"></i> ' + ((stream.channel.game) ? stream.channel.game : \"Unknown\") + '<br>';\n            popover += '<i class=\"icon-user\"></i> ' + Humanize.intComma(stream.viewers) + '';\n            popover += '</div>';\n\n            current.attr(\"data-title\", (stream.channel.status) ? stream.channel.status : \"Untitled Broadcast\");\n            current.addClass(\"islive-live\");\n        } else {\n            current.removeAttr(\"data-title\");\n            current.removeAttr(\"title\");\n            current.removeAttr(\"data-original-title\");\n            current.removeClass(\"islive-live\");\n        }\n\n        current.attr(\"data-content\", popover);\n\n        current.popover({\n            html: true,\n            container: 'body',\n            trigger: 'hover'\n        });\n    });\n}\n\nfunction findChannelInStreams(streams, channel) {\n    for (var i = 0; i < streams.length; i++) {\n         if (streams[i].channel.name == channel) {\n            return streams[i];\n         }\n    }\n    return null;\n}\n\n// sorts a UL/OL\nfunction sortUnorderedList(selector) {\n    var mylist = $(selector);\n    var listitems = mylist.children('li').get();\n    listitems.sort(function(a, b) {\n       var compA = $(a).text().toUpperCase();\n       var compB = $(b).text().toUpperCase();\n       return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;\n    })\n    $.each(listitems, function(idx, itm) { mylist.append(itm); })\n}\n"], "filenames": ["js/channel.js", "js/common.js"], "buggy_code_start_loc": [167, 26], "buggy_code_end_loc": [1217, 213], "fixing_code_start_loc": [167, 27], "fixing_code_end_loc": [1218, 227], "type": "CWE-79", "message": "A vulnerability was found in oxguy3 coebot-www and classified as problematic. This issue affects the function displayChannelCommands/displayChannelQuotes/displayChannelAutoreplies/showChannelHighlights/showChannelBoir of the file js/channel.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is c1a6c44092585da4236237e0e7da94ee2996a0ca. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217355.", "other": {"cve": {"id": "CVE-2016-15008", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-04T10:15:10.197", "lastModified": "2023-01-10T17:33:51.957", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in oxguy3 coebot-www and classified as problematic. This issue affects the function displayChannelCommands/displayChannelQuotes/displayChannelAutoreplies/showChannelHighlights/showChannelBoir of the file js/channel.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is c1a6c44092585da4236237e0e7da94ee2996a0ca. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217355."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:coebot-www_project:coebot-www:*:*:*:*:*:coebot:*:*", "versionEndExcluding": "2016-07-13", "matchCriteriaId": "02FF801A-F957-4093-89D6-207D2A90635E"}]}]}], "references": [{"url": "https://github.com/oxguy3/coebot-www/commit/c1a6c44092585da4236237e0e7da94ee2996a0ca", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217355", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217355", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/oxguy3/coebot-www/commit/c1a6c44092585da4236237e0e7da94ee2996a0ca"}}