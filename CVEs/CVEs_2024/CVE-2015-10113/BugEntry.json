{"buggy_code": ["=== WooFramework Tweaks ===\nContributors: woothemes,mattyza,jeffikus\nDonate link: http://woothemes.com/\nTags: wooframework,settings\nRequires at least: 3.9.1\nTested up to: 3.9.1\nStable tag: 1.0.1\nLicense: GPLv3 or later\nLicense URI: http://www.gnu.org/licenses/gpl-3.0.html\n\nTweak a few of the WooFramework's filters and features, via a neat interface.\n\n== Description ==\n\nUsing WooFramework Tweaks, it's possible to tweak a few of the filters in WooFramework version 6 or higher, via a neat interface which slots right in with the WooFramework.\n\nLooking for a helping hand? [View plugin documentation](http://docs.woothemes.com/document/wooframework-tweaks/).\n\n== Usage ==\n\nOnce activated, a \"Tweaks\" menu item will display underneath the WooThemes administration menu. If you're not using a WooThemes theme, this menu will display under the \"Appearance\" menu item.\n\nVisiting this screen will display a table of settings, for customising the WooFramework's placeholder image, and for activating and deactivating a few of the WooFramework's features.\n\nOnce done, click the \"Save Changes\" button, to save and apply your settings.\n\n== Installation ==\n\nInstalling \"WooFramework Tweaks\" can be done either by searching for \"WooFramework Tweaks\" via the \"Plugins > Add New\" screen in your WordPress dashboard, or by using the following steps:\n\n1. Download the plugin via WordPress.org.\n1. Upload the ZIP file through the \"Plugins > Add New > Upload\" screen in your WordPress dashboard.\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Visit the \"WooThemes > Tweaks\" (or \"Appearance > Tweaks\") section and configure the settings, as desired.\n\n== Frequently Asked Questions ==\n\n= How do I contribute? =\n\nWe encourage everyone to contribute their ideas, thoughts and code snippets. This can be done by forking the [repository over at GitHub](http://github.com/woothemes/wooframework-tweaks/).\n\n== Screenshots ==\n\n1. The \"Tweaks\" administration screen.\n\n\n== Upgrade Notice ==\n\n= 1.0.1 =\n* 2014-08-18\n* Adds WF export capabilities\n* Adds better descriptions for tweaks options\n* Fixes generator removal logic\n\n= 1.0.0 =\n* 2014-07-03\n* Initial release. Woo!\n\n== Changelog ==\n\n= 1.0.1 =\n* 2014-08-18\n* Adds WF export capabilities\n* Adds better descriptions for tweaks options\n* Fixes generator removal logic\n\n= 1.0.0 =\n* 2014-07-03\n* Initial release. Woo!", "<?php\n/**\n * Plugin Name: WooFramework Tweaks\n * Plugin URI: http://github.com/woothemes/wooframework-tweaks/\n * Description: Hidey ho, neighborino! Lets add a few options back to the WooFramework, for a bit of extra fine tuning, shall we?\n * Version: 1.0.1\n * Author: WooThemes\n * Author URI: http://woothemes.com/\n * Requires at least: 3.9.1\n * Tested up to: 3.9.1\n *\n * Text Domain: wooframework-tweaks\n * Domain Path: /languages/\n *\n * @package WooFramework_Tweaks\n * @category Core\n * @author Matty\n */\n\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly\n\n/**\n * Returns the main instance of WooFramework_Tweaks to prevent the need to use globals.\n *\n * @since  1.0.0\n * @return object WooFramework_Tweaks\n */\nfunction WooFramework_Tweaks() {\n\treturn WooFramework_Tweaks::instance();\n} // End WooFramework_Tweaks()\n\nWooFramework_Tweaks();\n\n/**\n * Main WooFramework_Tweaks Class\n *\n * @class WooFramework_Tweaks\n * @version\t1.0.0\n * @since 1.0.0\n * @package\tWooFramework_Tweaks\n * @author Matty\n */\nfinal class WooFramework_Tweaks {\n\t/**\n\t * WooFramework_Tweaks The single instance of WooFramework_Tweaks.\n\t * @var \tobject\n\t * @access  private\n\t * @since \t1.0.0\n\t */\n\tprivate static $_instance = null;\n\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * The version number.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $version;\n\n\t/**\n\t * The admin page slug.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin_page;\n\n\t/**\n\t * The admin parent page.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin_parent_page;\n\n\t/**\n\t * The instance of WF_Fields.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tprivate $_field_obj;\n\n\t/**\n\t * Constructor function.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function __construct () {\n\t\t$this->token \t\t\t= 'wooframework-tweaks';\n\t\t$this->plugin_url \t\t= plugin_dir_url( __FILE__ );\n\t\t$this->plugin_path \t\t= plugin_dir_path( __FILE__ );\n\t\t$this->version \t\t\t= '1.0.1';\n\t\t$this->_field_obj \t\t= null;\n\n\t\tregister_activation_hook( __FILE__, array( $this, 'install' ) );\n\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\n\n\t\t// We need to run this only once the theme is setup and ready.\n\t\tadd_action( 'after_setup_theme', array( $this, 'init_admin' ) );\n\t\tadd_action( 'plugins_loaded', array( $this, 'init_frontend' ) );\n\t\tadd_action( 'after_setup_theme', array( $this, 'init' ) );\n\t} // End __construct()\n\n\t/**\n\t * Initialise the plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function init () {\n\t\t// Placeholders are in both the frontend and admin, so apply this globally.\n\t\tadd_filter( 'wf_placeholder_image_url', array( $this, 'maybe_override_placeholder_image_url' ) );\n\t\tadd_filter( 'wf_placeholder_image_path', array( $this, 'maybe_override_placeholder_image_path' ) );\n\t} // End init()\n\n\t/**\n\t * Initialise the plugin admin.\n\t * @access public\n\t * @since  1.0.1\n\t * @return void\n\t */\n\tpublic function init_admin () {\n\t\tif ( is_admin() ) {\n\t\t\t// Register the admin screen.\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_admin_screen' ) );\n\n\t\t\t// Register the admin screen to be able to load the WooFramework's CSS and other assets.\n\t\t\tadd_filter( 'wf_load_admin_css', array( $this, 'register_screen_id' ) );\n\n\t\t\t// Make sure we clean out the super user, when deleting the user from the database.\n\t\t\t// This has to be done on `delete_user` rather than `deleted_user`, as we still require the username and are only passed the user ID.\n\t\t\tadd_action( 'delete_user', array( $this, 'maybe_clean_superuser_entry' ) );\n\n\t\t\t// If applicable, instantiate WF_Fields from the WooFramework.\n\t\t\tif ( defined( 'THEME_FRAMEWORK' ) && 'woothemes' == constant( 'THEME_FRAMEWORK' ) && class_exists( 'WF_Fields' ) ) {\n\t\t\t\t$this->_field_obj = new WF_Fields();\n\t\t\t\t$this->_field_obj->init( $this->get_settings_template() );\n\t\t\t\t$this->_field_obj->__set( 'token', 'framework_woo' );\n\t\t\t}\n\n\t\t\t// If a super user is specified, apply the filter.\n\t\t\tadd_filter( 'wf_super_user', array( $this, 'maybe_apply_super_user' ) );\n\t\t} // End If Statement\n\t} // End init_admin()\n\n\t/**\n\t * Initialise the plugin frontend.\n\t * @access public\n\t * @since  1.0.1\n\t * @return void\n\t */\n\tpublic function init_frontend () {\n\t\tif ( !is_admin() ) {\n\t\t\t// Maybe disable the generator tag.\n\t\t\tif ( 'true' == get_option( 'framework_woo_disable_generator', 'false' ) ) { \n\t\t\t\tadd_filter( 'wf_disable_generator_tags', '__return_true' );\n\t\t\t}\n\t\t} // End If Statement\n\t} // End init_frontend()\n\n\t/**\n\t * Register the screen ID with the WooFramework's asset loader.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function register_screen_id ( $screens ) {\n\t\tif ( ! in_array( 'wf-tweaks', $screens ) ) {\n\t\t\t$screens[] = 'wf-tweaks';\n\t\t}\n\t\treturn $screens;\n\t} // End register_screen_id()\n\n\t/**\n\t * Register the admin screen within WordPress.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function register_admin_screen () {\n\t\t// Make sure only super users and the last editor are allowed in.\n\t\tif ( ! $this->can_user_view_tweaks() ) return;\n\n\t\t$this->admin_parent_page = 'themes.php';\n\t\tif ( defined( 'THEME_FRAMEWORK' ) && 'woothemes' == constant( 'THEME_FRAMEWORK' ) ) {\n\t\t\t$this->admin_parent_page = 'woothemes';\n\t\t}\n\n\t\t$this->admin_page = add_submenu_page( $this->admin_parent_page, __( 'Tweaks', 'wooframework-tweaks' ), __( 'Tweaks', 'wooframework-tweaks' ), 'manage_options', 'wf-tweaks', array( $this, 'admin_screen' ) );\n\n\t\t// Admin screen logic.\n\t\tadd_action( 'load-' . $this->admin_page, array( $this, 'admin_screen_logic' ) );\n\n\t\t// Add contextual help tabs.\n\t\tadd_action( 'load-' . $this->admin_page, array( $this, 'admin_screen_help' ) );\n\n\t\t// Make sure our data is added to the WooFramework settings exporter.\n\t\tadd_filter( 'wooframework_export_query_inner', array( $this, 'add_exporter_data' ) );\n\n\t\t// Add admin notices.\n\t\tadd_action( 'admin_notices', array( $this, 'admin_notices' ) );\n\t} // End register_admin_screen()\n\n\t/**\n\t * Load the admin screen markup.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_screen () {\n?>\n\t<div class=\"wrap wooframework-tweaks-wrap\">\n<?php\n\t\t// If a WooThemes theme isn't activated, display a notice.\n\t\tif ( ! defined( 'THEME_FRAMEWORK' ) || 'woothemes' != constant( 'THEME_FRAMEWORK' ) ) {\n\t\t\techo '<div class=\"error fade\"><p>' . __( 'It appears your theme does not contain the WooFramework. In order to use the WooFramework Tweaks, please use a theme which makes use of the WooFramework.', 'wooframework-tweaks' ) . '</p></div>' . \"\\n\";\n\t\t} else {\n\t\t\t// If this is an old version of the WooFramework, display a notice.\n\t\t\tif ( ! class_exists( 'WF_Fields' ) ) {\n\t\t\t\techo '<div class=\"error fade\"><p>' . __( 'It appears you\\'re using an older version of the WooFramework. WooFramework Tweaks requires WooFramework 6.0 or higher.', 'wooframework-tweaks' ) . '</p></div>' . \"\\n\";\n\t\t\t} else {\n\t\t\t\t// Otherwise, we're good to go!\n\t\t\t\t$hidden_fields = array( 'page' => 'wf-tweaks' );\n\t\t\t\tdo_action( 'wf_screen_get_header', 'wf-tweaks', 'themes' );\n\t\t\t\t$this->_field_obj->__set( 'has_tabs', false );\n\t\t\t\t$this->_field_obj->__set( 'extra_hidden_fields', $hidden_fields );\n\t\t\t\t$this->_field_obj->render();\n\t\t\t\tdo_action( 'wf_screen_get_footer', 'wf-tweaks', 'themes' );\n\t\t\t}\n\t\t}\n?>\n\t</div><!--/.wrap-->\n<?php\n\t\t// This must be present if using fields that require Javascript or styling.\n\t\tadd_action( 'admin_footer', array( $this->_field_obj, 'maybe_enqueue_field_assets' ) );\n\t} // End admin_screen()\n\n\t/**\n\t * Display admin notices for this settings screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_notices () {\n\t\t$notices = array();\n\n\t\tif ( isset( $_GET['page'] ) && 'wf-tweaks' == $_GET['page'] && isset( $_GET['updated'] ) && 'true' == $_GET['updated'] ) {\n\t\t\t$notices['settings-updated'] = array( 'type' => 'updated', 'message' => __( 'Settings saved.', 'wooframework-tweaks' ) );\n\t\t}\n\n\t\tif ( 0 < count( $notices ) ) {\n\t\t\t$html = '';\n\t\t\tforeach ( $notices as $k => $v ) {\n\t\t\t\t$html .= '<div id=\"' . esc_attr( $k ) . '\" class=\"fade ' . esc_attr( $v['type'] ) . '\">' . wpautop( '<strong>' . esc_html( $v['message'] ) . '</strong>' ) . '</div>' . \"\\n\";\n\t\t\t}\n\t\t\techo $html;\n\t\t}\n\t} // End admin_notices()\n\n\t/**\n\t * Load contextual help for the admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  string Modified contextual help string.\n\t */\n\tpublic function admin_screen_help () {\n\t\t$screen = get_current_screen();\n\t\tif ( $screen->id != $this->admin_page ) return;\n\n\t\t$overview =\n\t\t\t  '<p>' . __( 'Configure the tweaks and hit the \"Save Changes\" button. It\\'s as easy as that!', 'wooframework-tweaks' ) . '</p>' .\n\t\t\t  '<p><strong>' . __( 'For more information:', 'wooframework-tweaks' ) . '</strong></p>' .\n\t\t\t  '<p>' . sprintf( __( '<a href=\"%s\" target=\"_blank\">WooThemes Help Desk</a>', 'wooframework-tweaks' ), 'http://support.woothemes.com/' ) . '</p>';\n\n\t\t$screen->add_help_tab( array( 'id' => 'wooframework_tweaks_overview', 'title' => __( 'Overview', 'wooframework-tweaks' ), 'content' => $overview ) );\n\t} // End admin_screen_help()\n\n\t/**\n\t * Logic to run on the admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_screen_logic () {\n\t\tif ( ! empty( $_POST ) && check_admin_referer( $this->_field_obj->__get( 'token' ) . '_nonce', $this->_field_obj->__get( 'token' ) . '_nonce' ) ) {\n\t\t\t$data = $_POST;\n\n\t\t\t$page = 'wf-tweaks';\n\t\t\tif ( isset( $data['page'] ) ) {\n\t\t\t\t$page = $data['page'];\n\t\t\t\tunset( $data['page'] );\n\t\t\t}\n\n\t\t\t$data = $this->_field_obj->validate_fields( $data );\n\n\t\t\tif ( 0 < count( $data ) ) {\n\t\t\t\tforeach ( $data as $k => $v ) {\n\t\t\t\t\tupdate_option( $k, $v );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Keep track of the last username to edit the tweaks screen, so as least one user is never locked out. :)\n\t\t\t$user_id = get_current_user_id();\n\t\t\tupdate_option( 'framework_woo_last_tweaks_editor', intval( $user_id ) );\n\n\t\t\t// Redirect on settings save, and exit.\n\t\t\t$url = add_query_arg( 'page', $page );\n\t\t\t$url = add_query_arg( 'updated', 'true', $url );\n\n\t\t\twp_safe_redirect( $url );\n\t\t\texit;\n\t\t}\n\t} // End admin_screen_logic()\n\n\t/**\n\t * If our super user is removed from the database, clear out the super user entry.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_clean_superuser_entry ( $user_id ) {\n\t\t$user = get_userdata( (int) $user_id );\n\t\tif ( is_a( $user, 'WP_User' ) && isset( $user->user_login ) ) {\n\t\t\tif ( $user->user_login == get_option( 'framework_woo_super_user', '' ) ) {\n\t\t\t\tupdate_option( 'framework_woo_super_user', '' );\n\t\t\t}\n\t\t}\n\t} // End maybe_clean_superuser_entry()\n\n\t/**\n\t * Maybe apply the super user to the filter.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_apply_super_user ( $username ) {\n\t\t$super_username = get_option( 'framework_woo_super_user', '' );\n\t\tif ( '' == $super_username ) return $username;\n\n\t\t$user = get_userdatabylogin( $super_username );\n\t\tif ( is_a( $user, 'WP_User' ) && isset( $user->user_login ) ) {\n\t\t\t$username = $user->user_login;\n\t\t}\n\t\treturn $username;\n\t} // End maybe_apply_super_user()\n\n\t/**\n\t * Maybe override the placeholder image URL.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_override_placeholder_image_url ( $url ) {\n\t\t$placeholder_image_url = get_option( 'framework_woo_default_image', '' );\n\t\tif ( '' != $placeholder_image_url ) {\n\t\t\t$url = esc_url( $placeholder_image_url );\n\t\t}\n\t\treturn $url;\n\t} // End maybe_override_placeholder_image_url()\n\n\t/**\n\t * Maybe override the placeholder image path.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_override_placeholder_image_path ( $path ) {\n\t\t$placeholder_image_id = get_option( 'framework_woo_default_image-id', 0 );\n\t\tif ( 0 < intval( $placeholder_image_id ) ) {\n\t\t\t$file_path = get_attached_file( $placeholder_image_id );\n\t\t\tif ( '' != $file_path ) {\n\t\t\t\t$path = $file_path;\n\t\t\t}\n\t\t}\n\t\treturn $path;\n\t} // End maybe_override_placeholder_image_path()\n\n\t/**\n\t * Determine if the current user can view the tweaks admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function can_user_view_tweaks () {\n\t\t$response = false;\n\t\t$user_id = get_current_user_id();\n\t\t$super_username = get_option( 'framework_woo_super_user', '' );\n\t\tif ( '' == $super_username ) {\n\t\t\t$response = true;\n\t\t} else {\n\t\t\tif ( $user_id == (int) get_option( 'framework_woo_last_tweaks_editor', 0 ) ) {\n\t\t\t\t$response = true;\n\t\t\t}\n\t\t\t$super_user = get_userdatabylogin( $super_username );\n\t\t\t$current_user = get_userdata( $user_id );\n\t\t\tif ( is_a( $super_user, 'WP_User' ) && isset( $super_user->ID ) && is_a( $current_user, 'WP_User' ) && isset( $current_user->ID ) ) {\n\t\t\t\tif ( $super_user->ID == $current_user->ID ) {\n\t\t\t\t\t$response = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $response;\n\t} // End can_user_view_tweaks()\n\n\t/**\n\t * Return an array of the settings scafolding. The field types, names, etc.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function get_settings_template () {\n\t\treturn array(\n\t\t\t\t// We must have a heading, so the fields can be assigned a section, and display correctly. :)\n\t\t\t\t'woo_tweaks_heading' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Tweaks', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'woo_tweaks_heading',\n\t\t\t\t\t\t\t\t\t\t'type' => 'heading'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_default_image' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Placeholder Image', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Specify a placeholder image to use within the woo_image() function.', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_default_image',\n\t\t\t\t\t\t\t\t\t\t'type' => 'upload'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_super_user' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Super User', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Enter your username to hide the \"Framework\" screen and features from other administrators.', 'wooframework-tweaks' ) . '<br />' . sprintf( __( 'This can be reset from the %s under %s.', 'wooframework-tweaks' ), '<a href=\"' . admin_url( 'options.php' ) . '\">' . __( 'WordPress Options Screen', 'wooframework-tweaks' ) . '</a>', '<code>framework_woo_super_user</code>' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_super_user',\n\t\t\t\t\t\t\t\t\t\t'type' => 'text'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_disable_generator' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Disable the \"Generator\" META tags', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Removes the meta tags which show the current theme and WooFramework version in your site's source code.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_disable_generator',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_disable_shortcodes' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Disable the shortcodes stylesheet', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Removes the CSS styles for all WooThemes theme shortcodes.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_disable_shortcodes',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_move_tracking_code' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Output the Tracking Code setting in the Header', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Moves the output of your theme's 'Tracking Code' setting from the footer to the header.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_move_tracking_code',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t);\n\t} // End get_settings_template()\n\n\t/**\n\t * Main WooFramework_Tweaks Instance\n\t *\n\t * Ensures only one instance of WooFramework_Tweaks is loaded or can be loaded.\n\t *\n\t * @since 1.0.0\n\t * @static\n\t * @see WooFramework_Tweaks()\n\t * @return Main WooFramework_Tweaks instance\n\t */\n\tpublic static function instance () {\n\t\tif ( is_null( self::$_instance ) )\n\t\t\tself::$_instance = new self();\n\t\treturn self::$_instance;\n\t} // End instance()\n\n\t/**\n\t * Load the localisation file.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function load_plugin_textdomain() {\n\t\tload_plugin_textdomain( 'wooframework-tweaks', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );\n\t} // End load_plugin_textdomain()\n\n\t/**\n\t * Cloning is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __clone () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __clone()\n\n\t/**\n\t * Unserializing instances of this class is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __wakeup () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __wakeup()\n\n\t/**\n\t * Installation. Runs on activation.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function install () {\n\t\t$this->_log_version_number();\n\t} // End install()\n\n\t/**\n\t * Log the plugin version number.\n\t * @access  private\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tprivate function _log_version_number () {\n\t\t// Log the version number.\n\t\tupdate_option( $this->token . '-version', $this->version );\n\t} // End _log_version_number()\n\n\t/**\n \t * Add our saved data to the WooFramework data exporter.\n \t * @access  public\n\t * @since   1.0.1\n \t * @param   string $data SQL query.\n \t * @return  string SQL query.\n \t */\n\tpublic function add_exporter_data ( $data ) {\n\t\t$option_keys = array(\n\t\t\t\t\t\t\t\t'framework_woo_disable_generator',\n\t\t\t\t\t\t\t\t'framework_woo_default_image',\n\t\t\t\t\t\t\t\t'framework_woo_default_image-id',\n\t\t\t\t\t\t\t\t'framework_woo_super_user',\n\t\t\t\t\t\t\t\t'framework_woo_last_tweaks_editor',\n\t\t\t\t\t\t\t\t);\n\t\tforeach ( $option_keys as $key ) {\n\t\t\t$data .= \" OR option_name = '\" . $key . \"'\";\n\t\t} // End For Loop\n\t\treturn $data;\n\t} // End add_exporter_data()\n} // End Class\n?>"], "fixing_code": ["=== WooFramework Tweaks ===\nContributors: woothemes,mattyza,jeffikus\nDonate link: http://woothemes.com/\nTags: wooframework,settings\nRequires at least: 3.9.1\nTested up to: 4.1.1\nStable tag: 1.0.2\nLicense: GPLv3 or later\nLicense URI: http://www.gnu.org/licenses/gpl-3.0.html\n\nTweak a few of the WooFramework's filters and features, via a neat interface.\n\n== Description ==\n\nUsing WooFramework Tweaks, it's possible to tweak a few of the filters in WooFramework version 6 or higher, via a neat interface which slots right in with the WooFramework.\n\nLooking for a helping hand? [View plugin documentation](http://docs.woothemes.com/document/wooframework-tweaks/).\n\n== Usage ==\n\nOnce activated, a \"Tweaks\" menu item will display underneath the WooThemes administration menu. If you're not using a WooThemes theme, this menu will display under the \"Appearance\" menu item.\n\nVisiting this screen will display a table of settings, for customising the WooFramework's placeholder image, and for activating and deactivating a few of the WooFramework's features.\n\nOnce done, click the \"Save Changes\" button, to save and apply your settings.\n\n== Installation ==\n\nInstalling \"WooFramework Tweaks\" can be done either by searching for \"WooFramework Tweaks\" via the \"Plugins > Add New\" screen in your WordPress dashboard, or by using the following steps:\n\n1. Download the plugin via WordPress.org.\n1. Upload the ZIP file through the \"Plugins > Add New > Upload\" screen in your WordPress dashboard.\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Visit the \"WooThemes > Tweaks\" (or \"Appearance > Tweaks\") section and configure the settings, as desired.\n\n== Frequently Asked Questions ==\n\n= How do I contribute? =\n\nWe encourage everyone to contribute their ideas, thoughts and code snippets. This can be done by forking the [repository over at GitHub](http://github.com/woothemes/wooframework-tweaks/).\n\n== Screenshots ==\n\n1. The \"Tweaks\" administration screen.\n\n\n== Upgrade Notice ==\n\n= 1.0.2 =\n* 2015-04-22\n* Security Fix for add_query_arg vulnerability\n\n= 1.0.1 =\n* 2014-08-18\n* Adds WF export capabilities\n* Adds better descriptions for tweaks options\n* Fixes generator removal logic\n\n= 1.0.0 =\n* 2014-07-03\n* Initial release. Woo!\n\n== Changelog ==\n\n= 1.0.2 =\n* 2015-04-22\n* Security Fix for add_query_arg vulnerability\n\n= 1.0.1 =\n* 2014-08-18\n* Adds WF export capabilities\n* Adds better descriptions for tweaks options\n* Fixes generator removal logic\n\n= 1.0.0 =\n* 2014-07-03\n* Initial release. Woo!", "<?php\n/**\n * Plugin Name: WooFramework Tweaks\n * Plugin URI: http://github.com/woothemes/wooframework-tweaks/\n * Description: Hidey ho, neighborino! Lets add a few options back to the WooFramework, for a bit of extra fine tuning, shall we?\n * Version: 1.0.2\n * Author: WooThemes\n * Author URI: http://woothemes.com/\n * Requires at least: 3.9.1\n * Tested up to: 4.1.1\n *\n * Text Domain: wooframework-tweaks\n * Domain Path: /languages/\n *\n * @package WooFramework_Tweaks\n * @category Core\n * @author Matty\n */\n\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly\n\n/**\n * Returns the main instance of WooFramework_Tweaks to prevent the need to use globals.\n *\n * @since  1.0.0\n * @return object WooFramework_Tweaks\n */\nfunction WooFramework_Tweaks() {\n\treturn WooFramework_Tweaks::instance();\n} // End WooFramework_Tweaks()\n\nWooFramework_Tweaks();\n\n/**\n * Main WooFramework_Tweaks Class\n *\n * @class WooFramework_Tweaks\n * @version\t1.0.0\n * @since 1.0.0\n * @package\tWooFramework_Tweaks\n * @author Matty\n */\nfinal class WooFramework_Tweaks {\n\t/**\n\t * WooFramework_Tweaks The single instance of WooFramework_Tweaks.\n\t * @var \tobject\n\t * @access  private\n\t * @since \t1.0.0\n\t */\n\tprivate static $_instance = null;\n\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * The version number.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $version;\n\n\t/**\n\t * The admin page slug.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin_page;\n\n\t/**\n\t * The admin parent page.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin_parent_page;\n\n\t/**\n\t * The instance of WF_Fields.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tprivate $_field_obj;\n\n\t/**\n\t * Constructor function.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function __construct () {\n\t\t$this->token \t\t\t= 'wooframework-tweaks';\n\t\t$this->plugin_url \t\t= plugin_dir_url( __FILE__ );\n\t\t$this->plugin_path \t\t= plugin_dir_path( __FILE__ );\n\t\t$this->version \t\t\t= '1.0.1';\n\t\t$this->_field_obj \t\t= null;\n\n\t\tregister_activation_hook( __FILE__, array( $this, 'install' ) );\n\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\n\n\t\t// We need to run this only once the theme is setup and ready.\n\t\tadd_action( 'after_setup_theme', array( $this, 'init_admin' ) );\n\t\tadd_action( 'plugins_loaded', array( $this, 'init_frontend' ) );\n\t\tadd_action( 'after_setup_theme', array( $this, 'init' ) );\n\t} // End __construct()\n\n\t/**\n\t * Initialise the plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function init () {\n\t\t// Placeholders are in both the frontend and admin, so apply this globally.\n\t\tadd_filter( 'wf_placeholder_image_url', array( $this, 'maybe_override_placeholder_image_url' ) );\n\t\tadd_filter( 'wf_placeholder_image_path', array( $this, 'maybe_override_placeholder_image_path' ) );\n\t} // End init()\n\n\t/**\n\t * Initialise the plugin admin.\n\t * @access public\n\t * @since  1.0.1\n\t * @return void\n\t */\n\tpublic function init_admin () {\n\t\tif ( is_admin() ) {\n\t\t\t// Register the admin screen.\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_admin_screen' ) );\n\n\t\t\t// Register the admin screen to be able to load the WooFramework's CSS and other assets.\n\t\t\tadd_filter( 'wf_load_admin_css', array( $this, 'register_screen_id' ) );\n\n\t\t\t// Make sure we clean out the super user, when deleting the user from the database.\n\t\t\t// This has to be done on `delete_user` rather than `deleted_user`, as we still require the username and are only passed the user ID.\n\t\t\tadd_action( 'delete_user', array( $this, 'maybe_clean_superuser_entry' ) );\n\n\t\t\t// If applicable, instantiate WF_Fields from the WooFramework.\n\t\t\tif ( defined( 'THEME_FRAMEWORK' ) && 'woothemes' == constant( 'THEME_FRAMEWORK' ) && class_exists( 'WF_Fields' ) ) {\n\t\t\t\t$this->_field_obj = new WF_Fields();\n\t\t\t\t$this->_field_obj->init( $this->get_settings_template() );\n\t\t\t\t$this->_field_obj->__set( 'token', 'framework_woo' );\n\t\t\t}\n\n\t\t\t// If a super user is specified, apply the filter.\n\t\t\tadd_filter( 'wf_super_user', array( $this, 'maybe_apply_super_user' ) );\n\t\t} // End If Statement\n\t} // End init_admin()\n\n\t/**\n\t * Initialise the plugin frontend.\n\t * @access public\n\t * @since  1.0.1\n\t * @return void\n\t */\n\tpublic function init_frontend () {\n\t\tif ( !is_admin() ) {\n\t\t\t// Maybe disable the generator tag.\n\t\t\tif ( 'true' == get_option( 'framework_woo_disable_generator', 'false' ) ) { \n\t\t\t\tadd_filter( 'wf_disable_generator_tags', '__return_true' );\n\t\t\t}\n\t\t} // End If Statement\n\t} // End init_frontend()\n\n\t/**\n\t * Register the screen ID with the WooFramework's asset loader.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function register_screen_id ( $screens ) {\n\t\tif ( ! in_array( 'wf-tweaks', $screens ) ) {\n\t\t\t$screens[] = 'wf-tweaks';\n\t\t}\n\t\treturn $screens;\n\t} // End register_screen_id()\n\n\t/**\n\t * Register the admin screen within WordPress.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function register_admin_screen () {\n\t\t// Make sure only super users and the last editor are allowed in.\n\t\tif ( ! $this->can_user_view_tweaks() ) return;\n\n\t\t$this->admin_parent_page = 'themes.php';\n\t\tif ( defined( 'THEME_FRAMEWORK' ) && 'woothemes' == constant( 'THEME_FRAMEWORK' ) ) {\n\t\t\t$this->admin_parent_page = 'woothemes';\n\t\t}\n\n\t\t$this->admin_page = add_submenu_page( $this->admin_parent_page, __( 'Tweaks', 'wooframework-tweaks' ), __( 'Tweaks', 'wooframework-tweaks' ), 'manage_options', 'wf-tweaks', array( $this, 'admin_screen' ) );\n\n\t\t// Admin screen logic.\n\t\tadd_action( 'load-' . $this->admin_page, array( $this, 'admin_screen_logic' ) );\n\n\t\t// Add contextual help tabs.\n\t\tadd_action( 'load-' . $this->admin_page, array( $this, 'admin_screen_help' ) );\n\n\t\t// Make sure our data is added to the WooFramework settings exporter.\n\t\tadd_filter( 'wooframework_export_query_inner', array( $this, 'add_exporter_data' ) );\n\n\t\t// Add admin notices.\n\t\tadd_action( 'admin_notices', array( $this, 'admin_notices' ) );\n\t} // End register_admin_screen()\n\n\t/**\n\t * Load the admin screen markup.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_screen () {\n?>\n\t<div class=\"wrap wooframework-tweaks-wrap\">\n<?php\n\t\t// If a WooThemes theme isn't activated, display a notice.\n\t\tif ( ! defined( 'THEME_FRAMEWORK' ) || 'woothemes' != constant( 'THEME_FRAMEWORK' ) ) {\n\t\t\techo '<div class=\"error fade\"><p>' . __( 'It appears your theme does not contain the WooFramework. In order to use the WooFramework Tweaks, please use a theme which makes use of the WooFramework.', 'wooframework-tweaks' ) . '</p></div>' . \"\\n\";\n\t\t} else {\n\t\t\t// If this is an old version of the WooFramework, display a notice.\n\t\t\tif ( ! class_exists( 'WF_Fields' ) ) {\n\t\t\t\techo '<div class=\"error fade\"><p>' . __( 'It appears you\\'re using an older version of the WooFramework. WooFramework Tweaks requires WooFramework 6.0 or higher.', 'wooframework-tweaks' ) . '</p></div>' . \"\\n\";\n\t\t\t} else {\n\t\t\t\t// Otherwise, we're good to go!\n\t\t\t\t$hidden_fields = array( 'page' => 'wf-tweaks' );\n\t\t\t\tdo_action( 'wf_screen_get_header', 'wf-tweaks', 'themes' );\n\t\t\t\t$this->_field_obj->__set( 'has_tabs', false );\n\t\t\t\t$this->_field_obj->__set( 'extra_hidden_fields', $hidden_fields );\n\t\t\t\t$this->_field_obj->render();\n\t\t\t\tdo_action( 'wf_screen_get_footer', 'wf-tweaks', 'themes' );\n\t\t\t}\n\t\t}\n?>\n\t</div><!--/.wrap-->\n<?php\n\t\t// This must be present if using fields that require Javascript or styling.\n\t\tadd_action( 'admin_footer', array( $this->_field_obj, 'maybe_enqueue_field_assets' ) );\n\t} // End admin_screen()\n\n\t/**\n\t * Display admin notices for this settings screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_notices () {\n\t\t$notices = array();\n\n\t\tif ( isset( $_GET['page'] ) && 'wf-tweaks' == $_GET['page'] && isset( $_GET['updated'] ) && 'true' == $_GET['updated'] ) {\n\t\t\t$notices['settings-updated'] = array( 'type' => 'updated', 'message' => __( 'Settings saved.', 'wooframework-tweaks' ) );\n\t\t}\n\n\t\tif ( 0 < count( $notices ) ) {\n\t\t\t$html = '';\n\t\t\tforeach ( $notices as $k => $v ) {\n\t\t\t\t$html .= '<div id=\"' . esc_attr( $k ) . '\" class=\"fade ' . esc_attr( $v['type'] ) . '\">' . wpautop( '<strong>' . esc_html( $v['message'] ) . '</strong>' ) . '</div>' . \"\\n\";\n\t\t\t}\n\t\t\techo $html;\n\t\t}\n\t} // End admin_notices()\n\n\t/**\n\t * Load contextual help for the admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  string Modified contextual help string.\n\t */\n\tpublic function admin_screen_help () {\n\t\t$screen = get_current_screen();\n\t\tif ( $screen->id != $this->admin_page ) return;\n\n\t\t$overview =\n\t\t\t  '<p>' . __( 'Configure the tweaks and hit the \"Save Changes\" button. It\\'s as easy as that!', 'wooframework-tweaks' ) . '</p>' .\n\t\t\t  '<p><strong>' . __( 'For more information:', 'wooframework-tweaks' ) . '</strong></p>' .\n\t\t\t  '<p>' . sprintf( __( '<a href=\"%s\" target=\"_blank\">WooThemes Help Desk</a>', 'wooframework-tweaks' ), 'http://support.woothemes.com/' ) . '</p>';\n\n\t\t$screen->add_help_tab( array( 'id' => 'wooframework_tweaks_overview', 'title' => __( 'Overview', 'wooframework-tweaks' ), 'content' => $overview ) );\n\t} // End admin_screen_help()\n\n\t/**\n\t * Logic to run on the admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function admin_screen_logic () {\n\t\tif ( ! empty( $_POST ) && check_admin_referer( $this->_field_obj->__get( 'token' ) . '_nonce', $this->_field_obj->__get( 'token' ) . '_nonce' ) ) {\n\t\t\t$data = $_POST;\n\n\t\t\t$page = 'wf-tweaks';\n\t\t\tif ( isset( $data['page'] ) ) {\n\t\t\t\t$page = $data['page'];\n\t\t\t\tunset( $data['page'] );\n\t\t\t}\n\n\t\t\t$data = $this->_field_obj->validate_fields( $data );\n\n\t\t\tif ( 0 < count( $data ) ) {\n\t\t\t\tforeach ( $data as $k => $v ) {\n\t\t\t\t\tupdate_option( $k, $v );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Keep track of the last username to edit the tweaks screen, so as least one user is never locked out. :)\n\t\t\t$user_id = get_current_user_id();\n\t\t\tupdate_option( 'framework_woo_last_tweaks_editor', intval( $user_id ) );\n\n\t\t\t// Redirect on settings save, and exit.\n\t\t\t$url = add_query_arg( 'page', $page );\n\t\t\t$url = add_query_arg( 'updated', 'true', $url );\n\n\t\t\twp_safe_redirect( esc_url( $url ) );\n\t\t\texit;\n\t\t}\n\t} // End admin_screen_logic()\n\n\t/**\n\t * If our super user is removed from the database, clear out the super user entry.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_clean_superuser_entry ( $user_id ) {\n\t\t$user = get_userdata( (int) $user_id );\n\t\tif ( is_a( $user, 'WP_User' ) && isset( $user->user_login ) ) {\n\t\t\tif ( $user->user_login == get_option( 'framework_woo_super_user', '' ) ) {\n\t\t\t\tupdate_option( 'framework_woo_super_user', '' );\n\t\t\t}\n\t\t}\n\t} // End maybe_clean_superuser_entry()\n\n\t/**\n\t * Maybe apply the super user to the filter.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_apply_super_user ( $username ) {\n\t\t$super_username = get_option( 'framework_woo_super_user', '' );\n\t\tif ( '' == $super_username ) return $username;\n\n\t\t$user = get_userdatabylogin( $super_username );\n\t\tif ( is_a( $user, 'WP_User' ) && isset( $user->user_login ) ) {\n\t\t\t$username = $user->user_login;\n\t\t}\n\t\treturn $username;\n\t} // End maybe_apply_super_user()\n\n\t/**\n\t * Maybe override the placeholder image URL.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_override_placeholder_image_url ( $url ) {\n\t\t$placeholder_image_url = get_option( 'framework_woo_default_image', '' );\n\t\tif ( '' != $placeholder_image_url ) {\n\t\t\t$url = esc_url( $placeholder_image_url );\n\t\t}\n\t\treturn $url;\n\t} // End maybe_override_placeholder_image_url()\n\n\t/**\n\t * Maybe override the placeholder image path.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function maybe_override_placeholder_image_path ( $path ) {\n\t\t$placeholder_image_id = get_option( 'framework_woo_default_image-id', 0 );\n\t\tif ( 0 < intval( $placeholder_image_id ) ) {\n\t\t\t$file_path = get_attached_file( $placeholder_image_id );\n\t\t\tif ( '' != $file_path ) {\n\t\t\t\t$path = $file_path;\n\t\t\t}\n\t\t}\n\t\treturn $path;\n\t} // End maybe_override_placeholder_image_path()\n\n\t/**\n\t * Determine if the current user can view the tweaks admin screen.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function can_user_view_tweaks () {\n\t\t$response = false;\n\t\t$user_id = get_current_user_id();\n\t\t$super_username = get_option( 'framework_woo_super_user', '' );\n\t\tif ( '' == $super_username ) {\n\t\t\t$response = true;\n\t\t} else {\n\t\t\tif ( $user_id == (int) get_option( 'framework_woo_last_tweaks_editor', 0 ) ) {\n\t\t\t\t$response = true;\n\t\t\t}\n\t\t\t$super_user = get_userdatabylogin( $super_username );\n\t\t\t$current_user = get_userdata( $user_id );\n\t\t\tif ( is_a( $super_user, 'WP_User' ) && isset( $super_user->ID ) && is_a( $current_user, 'WP_User' ) && isset( $current_user->ID ) ) {\n\t\t\t\tif ( $super_user->ID == $current_user->ID ) {\n\t\t\t\t\t$response = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $response;\n\t} // End can_user_view_tweaks()\n\n\t/**\n\t * Return an array of the settings scafolding. The field types, names, etc.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  array\n\t */\n\tpublic function get_settings_template () {\n\t\treturn array(\n\t\t\t\t// We must have a heading, so the fields can be assigned a section, and display correctly. :)\n\t\t\t\t'woo_tweaks_heading' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Tweaks', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'woo_tweaks_heading',\n\t\t\t\t\t\t\t\t\t\t'type' => 'heading'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_default_image' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Placeholder Image', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Specify a placeholder image to use within the woo_image() function.', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_default_image',\n\t\t\t\t\t\t\t\t\t\t'type' => 'upload'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_super_user' => array(\n\t\t\t\t\t\t\t\t\t\t'name' => __( 'Super User', 'wooframework-tweaks' ),\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Enter your username to hide the \"Framework\" screen and features from other administrators.', 'wooframework-tweaks' ) . '<br />' . sprintf( __( 'This can be reset from the %s under %s.', 'wooframework-tweaks' ), '<a href=\"' . admin_url( 'options.php' ) . '\">' . __( 'WordPress Options Screen', 'wooframework-tweaks' ) . '</a>', '<code>framework_woo_super_user</code>' ),\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_super_user',\n\t\t\t\t\t\t\t\t\t\t'type' => 'text'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_disable_generator' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Disable the \"Generator\" META tags', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Removes the meta tags which show the current theme and WooFramework version in your site's source code.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_disable_generator',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_disable_shortcodes' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Disable the shortcodes stylesheet', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Removes the CSS styles for all WooThemes theme shortcodes.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_disable_shortcodes',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t'framework_woo_move_tracking_code' => array(\n\t\t\t\t\t\t\t\t\t\t'desc' => __( 'Output the Tracking Code setting in the Header', 'wooframework-tweaks' ) . '<p class=\"description\">' . __( \"Moves the output of your theme's 'Tracking Code' setting from the footer to the header.\", 'wooframework-tweaks' ) . '</p>',\n\t\t\t\t\t\t\t\t\t\t'std' => '',\n\t\t\t\t\t\t\t\t\t\t'id' => 'framework_woo_move_tracking_code',\n\t\t\t\t\t\t\t\t\t\t'type' => 'checkbox'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t);\n\t} // End get_settings_template()\n\n\t/**\n\t * Main WooFramework_Tweaks Instance\n\t *\n\t * Ensures only one instance of WooFramework_Tweaks is loaded or can be loaded.\n\t *\n\t * @since 1.0.0\n\t * @static\n\t * @see WooFramework_Tweaks()\n\t * @return Main WooFramework_Tweaks instance\n\t */\n\tpublic static function instance () {\n\t\tif ( is_null( self::$_instance ) )\n\t\t\tself::$_instance = new self();\n\t\treturn self::$_instance;\n\t} // End instance()\n\n\t/**\n\t * Load the localisation file.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function load_plugin_textdomain() {\n\t\tload_plugin_textdomain( 'wooframework-tweaks', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );\n\t} // End load_plugin_textdomain()\n\n\t/**\n\t * Cloning is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __clone () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __clone()\n\n\t/**\n\t * Unserializing instances of this class is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __wakeup () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __wakeup()\n\n\t/**\n\t * Installation. Runs on activation.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function install () {\n\t\t$this->_log_version_number();\n\t} // End install()\n\n\t/**\n\t * Log the plugin version number.\n\t * @access  private\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tprivate function _log_version_number () {\n\t\t// Log the version number.\n\t\tupdate_option( $this->token . '-version', $this->version );\n\t} // End _log_version_number()\n\n\t/**\n \t * Add our saved data to the WooFramework data exporter.\n \t * @access  public\n\t * @since   1.0.1\n \t * @param   string $data SQL query.\n \t * @return  string SQL query.\n \t */\n\tpublic function add_exporter_data ( $data ) {\n\t\t$option_keys = array(\n\t\t\t\t\t\t\t\t'framework_woo_disable_generator',\n\t\t\t\t\t\t\t\t'framework_woo_default_image',\n\t\t\t\t\t\t\t\t'framework_woo_default_image-id',\n\t\t\t\t\t\t\t\t'framework_woo_super_user',\n\t\t\t\t\t\t\t\t'framework_woo_last_tweaks_editor',\n\t\t\t\t\t\t\t\t);\n\t\tforeach ( $option_keys as $key ) {\n\t\t\t$data .= \" OR option_name = '\" . $key . \"'\";\n\t\t} // End For Loop\n\t\treturn $data;\n\t} // End add_exporter_data()\n} // End Class\n?>"], "filenames": ["readme.txt", "wooframework-tweaks.php"], "buggy_code_start_loc": [6, 6], "buggy_code_end_loc": [60, 322], "fixing_code_start_loc": [6, 6], "fixing_code_end_loc": [69, 322], "type": "CWE-601", "message": "A vulnerability classified as problematic was found in WooFramework Tweaks Plugin up to 1.0.1 on WordPress. Affected by this vulnerability is the function admin_screen_logic of the file wooframework-tweaks.php. The manipulation of the argument url leads to open redirect. The attack can be launched remotely. Upgrading to version 1.0.2 is able to address this issue. The identifier of the patch is 3b57d405149c1a59d1119da6e0bb8212732c9c88. It is recommended to upgrade the affected component. The identifier VDB-230653 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10113", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-05T16:15:09.207", "lastModified": "2023-06-09T19:40:24.273", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in WooFramework Tweaks Plugin up to 1.0.1 on WordPress. Affected by this vulnerability is the function admin_screen_logic of the file wooframework-tweaks.php. The manipulation of the argument url leads to open redirect. The attack can be launched remotely. Upgrading to version 1.0.2 is able to address this issue. The identifier of the patch is 3b57d405149c1a59d1119da6e0bb8212732c9c88. It is recommended to upgrade the affected component. The identifier VDB-230653 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:woocommerce:wooframework_tweaks:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "1.0.2", "matchCriteriaId": "24014011-2086-41ED-B7A6-F8E442E0BE11"}]}]}], "references": [{"url": "https://github.com/wp-plugins/wooframework-tweaks/commit/3b57d405149c1a59d1119da6e0bb8212732c9c88", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.230653", "source": "cna@vuldb.com", "tags": ["Permissions Required"]}, {"url": "https://vuldb.com/?id.230653", "source": "cna@vuldb.com", "tags": ["Permissions Required"]}]}, "github_commit_url": "https://github.com/wp-plugins/wooframework-tweaks/commit/3b57d405149c1a59d1119da6e0bb8212732c9c88"}}