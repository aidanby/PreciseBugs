{"buggy_code": ["# -*- ruby encoding: utf-8 -*-\nrequire 'digest/sha1'\nrequire 'digest/md5'\nrequire 'base64'\nrequire 'securerandom'\n\nclass Net::LDAP::Password\n  class << self\n    # Generate a password-hash suitable for inclusion in an LDAP attribute.\n    # Pass a hash type as a symbol (:md5, :sha, :ssha) and a plaintext\n    # password. This function will return a hashed representation.\n    #\n    #--\n    # STUB: This is here to fulfill the requirements of an RFC, which\n    # one?\n    #\n    # TODO:\n    # * maybe salted-md5\n    # * Should we provide sha1 as a synonym for sha1? I vote no because then\n    #   should you also provide ssha1 for symmetry?\n    #\n    attribute_value = \"\"\n    def generate(type, str)\n      case type\n      when :md5\n         attribute_value = '{MD5}' + Base64.encode64(Digest::MD5.digest(str)).chomp! \n      when :sha\n         attribute_value = '{SHA}' + Base64.encode64(Digest::SHA1.digest(str)).chomp! \n      when :ssha\n         srand; salt = (rand * 1000).to_i.to_s \n         attribute_value = '{SSHA}' + Base64.encode64(Digest::SHA1.digest(str + salt) + salt).chomp!\n      else\n         raise Net::LDAP::HashTypeUnsupportedError, \"Unsupported password-hash type (#{type})\"\n      end\n      return attribute_value\n    end\n  end\nend\n"], "fixing_code": ["# -*- ruby encoding: utf-8 -*-\nrequire 'digest/sha1'\nrequire 'digest/md5'\nrequire 'base64'\nrequire 'securerandom'\n\nclass Net::LDAP::Password\n  class << self\n    # Generate a password-hash suitable for inclusion in an LDAP attribute.\n    # Pass a hash type as a symbol (:md5, :sha, :ssha) and a plaintext\n    # password. This function will return a hashed representation.\n    #\n    #--\n    # STUB: This is here to fulfill the requirements of an RFC, which\n    # one?\n    #\n    # TODO:\n    # * maybe salted-md5\n    # * Should we provide sha1 as a synonym for sha1? I vote no because then\n    #   should you also provide ssha1 for symmetry?\n    #\n    attribute_value = \"\"\n    def generate(type, str)\n      case type\n      when :md5\n         attribute_value = '{MD5}' + Base64.encode64(Digest::MD5.digest(str)).chomp! \n      when :sha\n         attribute_value = '{SHA}' + Base64.encode64(Digest::SHA1.digest(str)).chomp! \n      when :ssha\n         srand; salt = SecureRandom.random_bytes(16)\n         attribute_value = '{SSHA}' + Base64.encode64(Digest::SHA1.digest(str + salt) + salt).chomp!\n      else\n         raise Net::LDAP::HashTypeUnsupportedError, \"Unsupported password-hash type (#{type})\"\n      end\n      return attribute_value\n    end\n  end\nend\n"], "filenames": ["lib/net/ldap/password.rb"], "buggy_code_start_loc": [30], "buggy_code_end_loc": [31], "fixing_code_start_loc": [30], "fixing_code_end_loc": [31], "type": "CWE-916", "message": "The Ruby net-ldap gem before 0.11 uses a weak salt when generating SSHA passwords.", "other": {"cve": {"id": "CVE-2014-0083", "sourceIdentifier": "secalert@redhat.com", "published": "2019-11-21T14:15:13.193", "lastModified": "2020-08-18T15:05:58.063", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "The Ruby net-ldap gem before 0.11 uses a weak salt when generating SSHA passwords."}, {"lang": "es", "value": "La gema net-ldap de Ruby versiones anteriores a 0.11 usa una sal d\u00e9bil cuando genera contrase\u00f1as SSHA."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-916"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:net-ldap_project:net-ldap:*:*:*:*:*:ruby:*:*", "versionEndExcluding": "0.16.2", "matchCriteriaId": "D321001C-2AA2-48DC-88A0-E4E07137C7A9"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-0083", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2014-0083", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/ruby-ldap/ruby-net-ldap/commit/b412ca05f6b430eaa1ce97ac95885b4cf187b04a", "source": "secalert@redhat.com", "tags": ["Patch"]}, {"url": "https://security-tracker.debian.org/tracker/CVE-2014-0083", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ruby-ldap/ruby-net-ldap/commit/b412ca05f6b430eaa1ce97ac95885b4cf187b04a"}}