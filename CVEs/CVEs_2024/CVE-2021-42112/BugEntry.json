{"buggy_code": ["$(function() {\n    openUploadModalDialog();\n});\n\nfunction openUploadModalDialog(){\n    $('.upload').click(function(e) {\n\n        e.preventDefault();\n\n        var $this = $(this);\n        var show_title   = getQueryVariable('show_title', this.href);\n        var show_comment = getQueryVariable('show_comment', this.href);\n        var pos          = getQueryVariable('pos', this.href);\n        var fieldname    = getQueryVariable('fieldname', this.href);\n        var buttonsOpts = {};\n        buttonsOpts[uploadLang.returnTxt] = function() {\n            $(this).dialog(\"close\");\n        };\n\n        $('#file-upload-modal-' + fieldname).appendTo('body').modal();\n        $(document).on('shown.bs.modal','#file-upload-modal-' + fieldname, function()\n        {\n            updateMaxHeightModalbody($(this));\n        });\n        $('#file-upload-modal-' + fieldname).on('hide.bs.modal', function() {\n            var pass;\n            var uploaderId = 'uploader' + fieldname;\n            if(document.getElementById(uploaderId).contentDocument) {\n                if(document.getElementById(uploaderId).contentDocument.defaultView)\n                    {       /*Firefox*/\n                    pass=document.getElementById(uploaderId).contentDocument.defaultView.saveAndExit(fieldname,show_title,show_comment,pos);\n                }else{       /*IE8*/\n                    pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n                }\n            }else{    /*IE6*/\n                pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n            }\n            return pass;\n        });\n    });\n}\n\n/* Function to update upload frame\n *\n * @param frameName name of the frame (here it's id too :) )\n * @param integer heigth\n */\nfunction updateUploadFrame(frameName,heigth)\n{\n    $(\"#\"+frameName).innerHeight(heigth);\n}\n/* Function to update modal body max height\n *\n * @param modal jquery object : the modal\n */\nfunction updateMaxHeightModalbody(modal)\n{\n    var modalHeader=$(modal).find(\".modal-header\").outerHeight();\n    var modalFooter=$(modal).find(\".modal-footer\").outerHeight();\n    console.ls.log([$(window).height(),modalHeader,modalFooter,(modalHeader+modalFooter)]);\n    var finalMaxHeight=Math.max(150,$(window).height()-(modalHeader+modalFooter+16));// Not less than 150px\n    $(modal).find(\".modal-body\").css(\"max-height\",finalMaxHeight);\n}\n\nfunction getQueryVariable(variable, url) {\n    var vars = url.split(\"/\");\n    for (var i=0;i<vars.length;i++) {\n        //var pair = vars[i].split(\"=\");\n        if (vars[i] == variable) {\n        return vars[i+1];\n        }\n    }\n    // If not found try with ?\n    // TODO : replace by a regexp\n   var vars = url.replace(/\\&amp;/g,'&').split(\"&\");\n   for (var i=0;i<vars.length;i++) {\n           var pair = vars[i].split(\"=\");\n           if(pair[0] == variable){return pair[1];}\n   }\n   return null;\n}\n\nfunction isValueInArray(arr, val) {\n    inArray = false;\n    for (i = 0; i < arr.length; i++) {\n        if (val.toLowerCase() == arr[i].toLowerCase()) {\n            inArray = true;\n        }\n    }\n\n    return inArray;\n}\n\nfunction displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment) {\n    var jsonobj;\n    var i;\n    var display = '';\n\n    if (jsonstring == '[]') {\n        $('#'+fieldname+'_uploadedfiles').html(display);\n        return;\n    }\n\n    if (jsonstring !== '')\n    {\n        jsonobj = eval('(' + jsonstring + ')');\n        display = '<table width=\"100%\" class=\"question uploadedfiles\"><thead><tr><td width=\"20%\">&nbsp;</td>';\n        if (show_title != 0)\n            display += '<th>'+uploadLang.headTitle+'</th>';\n        if (show_comment != 0)\n            display += '<th>'+uploadLang.headComment+'</th>';\n        display += '<th>'+uploadLang.headFileName+'</th><th class=\"edit\"></th></tr></thead><tbody>';\n        var image_extensions = new Array('gif', 'jpeg', 'jpg', 'png', 'swf', 'psd', 'bmp', 'tiff', 'jp2', 'iff', 'bmp', 'xbm', 'ico');\n\n        for (i = 0; i < filecount; i++)\n        {\n            if (isValueInArray(image_extensions, jsonobj[i].ext))\n                display += '<tr><td class=\"upload image\"><img src=\"' + uploadurl + '/filegetcontents/'+decodeURIComponent(jsonobj[i].filename)+'\" class=\"uploaded\" /></td>';\n            else\n                display += '<tr><td class=\"upload placeholder\"><div class=\"upload-placeholder\" /></td>';\n\n            if (show_title != 0)\n                display += '<td class=\"upload title\">'+htmlentities(jsonobj[i].title,null,null,false)+'</td>';\n            if (show_comment != 0)\n                display += '<td class=\"upload comment\">'+htmlentities(jsonobj[i].comment,null,null,false)+'</td>';\n            display +='<td class=\"upload edit\">'+htmlentities(decodeURIComponent(jsonobj[i].name),null,null,false)+'</td><td>'+'<a class=\"btn btn-primary\" onclick=\"javascript:upload_'+fieldname+'();$(\\'#upload_'+fieldname+'\\').click();\"><span class=\"fa fa-pencil\"></span>&nbsp;'+uploadLang.editFile+'</a></td></tr>';\n        }\n        display += '</tbody></table>';\n\n        $('#'+fieldname+'_uploadedfiles').html(display);\n    }\n}\n\nfunction copyJSON(jsonstring, filecount, fieldname, show_title, show_comment, pos) {\n    $('#'+fieldname).val(jsonstring);\n    $('#'+fieldname+'_filecount').val(filecount);\n    displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment, pos);\n}\n\n\nfunction showBasic() {\n    $('#basic').show();\n}\n\nfunction hideBasic() {\n    $('#basic').hide();\n}\n", "$(document).on('ready pjax:scriptcomplete', function () {\n    doFileUpload();\n    fixParentHeigth();\n});\n\nfunction fixParentHeigth(fieldname, elementHeight)\n{\n    fieldname = fieldname || '';\n    elementHeight = elementHeight || 0;\n\n    if (window != top)\n    {\n        //~ frameheight=Math.max($(document).height(),$('html').outerHeight()+30,150);\n        if (fieldname != '')\n        {\n            frameheight = Math.max($(document).height() + elementHeight, $('#field' + fieldname + '_listfiles').parent().height());\n        } else\n        {\n            frameheight = Math.max($(document).height() + elementHeight, 150);\n        }\n\n        if (jQuery.isFunction(parent.updateUploadFrame))\n        {\n            parent.updateUploadFrame(window.name, frameheight);\n        }\n    }\n}\n\nfunction doFileUpload()\n{\n    var fieldname = $('#ia').val();\n    /* Load the previously uploaded files */\n    var filecount = window.parent.window.$('#' + fieldname + '_filecount').val();\n    $('#' + fieldname + '_filecount').val(filecount);\n\n    var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n    if (filecount > 0)\n    {\n        var jsontext = window.parent.window.$('#' + fieldname).val();\n        var json = eval('(' + jsontext + ')');\n        if ($('#field' + fieldname + '_listfiles').length == 0)\n        {\n            $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n        }\n        var i;\n        $('#' + fieldname + '_licount').val(filecount);\n\n        for (i = 1; i <= filecount; i++)\n        {\n            var previewblock = \"<li id='\" + fieldname + \"_li_\" + i + \"' class='previewblock file-element'>\";\n            previewblock += \"<div class='file-preview'>\";\n            if (isValueInArray(image_extensions, json[i - 1].ext.toLowerCase()))\n                previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + json[i - 1].filename + \"' class='uploaded' onload='fixParentHeigth(fieldname)' />\";\n            else\n                previewblock += \"<div class='upload-placeholder' />\";\n\n            previewblock += \"<span class='file-name'>\" + htmlentities(decodeURIComponent(json[i - 1].name),null,null,false) + \"</span>\";\n            previewblock += \"</div>\";\n\n            previewblock += \"<div class='file-info'><fieldset>\";\n            if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n            {\n                if ($('#' + fieldname + '_show_title').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + i + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].title,null,null,false) + \"' id='\" + fieldname + \"_title_\" + i + \"' /></div></div>\";\n                }\n                if ($('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + i + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].comment,null,null,false) + \"' id='\" + fieldname + \"_comment_\" + i + \"' /></div></div>\";\n                }\n\n            }\n            previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + i + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n            previewblock += \"</fieldset></div>\";\n\n            previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + i + \"' value=\" + json[i - 1].size + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_name_\" + i + \"' value=\" + htmlentities(json[i - 1].name,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + i + \"' value=\" + i + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_filename_\" + i + \"' value=\" + htmlentities(json[i - 1].filename,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_ext_\" + i + \"' value=\" + htmlentities(json[i - 1].ext) + \"  />\";\n\n            previewblock += \"</li>\";\n\n            // add file to the list\n            $('#field' + fieldname + '_listfiles').append(previewblock);\n            fixParentHeigth(fieldname);\n        }\n    }\n\n    // The upload button\n    var button = $('#button1'), interval;\n    new AjaxUpload(button, {\n        action: uploadurl + '/sid/' + surveyid + '/preview/' + questgrppreview + '/fieldname/' + fieldname + '/',\n        name: 'uploadfile',\n        data: $.extend({\n                valid_extensions: $('#' + fieldname + '_allowed_filetypes').val(),\n                max_filesize: $('#' + fieldname + '_maxfilesize').val(),\n                preview: $('#preview').val(),\n                surveyid: surveyid,\n                fieldname: fieldname,\n            }, csrfData\n        ),\n        onSubmit: function (file, ext) {\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n            var filecount = parseInt($('#' + fieldname + '_filecount').val());\n            var allowed_filetypes = $('#' + fieldname + '_allowed_filetypes').val().split(\",\");\n\n            /* If maximum number of allowed filetypes have already been uploaded,\n             * do not upload the file and display an error message ! */\n            if (filecount >= maxfiles)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorNoMoreFiles + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            /* If the file being uploaded is not allowed,\n             * do not upload the file and display an error message ! */\n            var allowSubmit = false;\n            for (var i = 0; i < allowed_filetypes.length; i++)\n            {\n                //check to see if it's the proper extension\n                if (jQuery.trim(allowed_filetypes[i].toLowerCase()) == jQuery.trim(ext.toLowerCase()))\n                {\n                    //it's the proper extension\n                    allowSubmit = true;\n                    break;\n                }\n            }\n            if (allowSubmit == false)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorOnlyAllowed.replace('%s', $('#' + fieldname + '_allowed_filetypes').val()) + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            // change button text, when user selects file\n            button.text(uploadLang.uploading);\n\n            // If you want to allow uploading only 1 file at time,\n            // you can disable upload button\n            this.disable();\n\n            // Uploding -> Uploading. -> Uploading...\n            interval = window.setInterval(function () {\n                var text = button.text();\n                if (text.length < 13)\n                {\n                    button.text(text + '.');\n                } else\n                {\n                    button.text(uploadLang.uploading);\n                }\n            }, 400);\n        },\n        onComplete: function (file, response) {\n            button.text(uploadLang.selectfile);\n            window.clearInterval(interval);\n            // enable upload button\n            this.enable();\n\n            // Once the file has been uploaded via AJAX,\n            // the preview is appended to the list of files\n            try{\n                var metadata = jQuery.parseJSON(response);\n            } catch(e) {\n                /* Suppose we get an HTML error ? Replace whole HTML (without head) */\n                $('body').html(response);\n                return;\n            }\n            var count = parseInt($('#' + fieldname + '_licount').val());\n            count++;\n            $('#' + fieldname + '_licount').val(count);\n\n            var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n            if (metadata.success)\n            {\n                $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-success\"></span>&nbsp;' + metadata.msg + '</p>');\n                if ($('#field' + fieldname + '_listfiles').length == 0)\n                {\n                    $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n                }\n                var previewblock = \"<li id='\" + fieldname + \"_li_\" + count + \"' class='previewblock file-element'>\";\n\n                previewblock += \"<div class='file-preview'>\";\n                if (isValueInArray(image_extensions, metadata.ext.toLowerCase()))\n                    previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + decodeURIComponent(metadata.filename) + \"' class='uploaded'  onload='fixParentHeigth(fieldname)' />\";\n                else\n                    previewblock += \"<div class='upload-placeholder' />\";\n                previewblock += \"<span class='file-name'>\" + escapeHtml(decodeURIComponent(metadata.name)) + \"<span>\";\n                previewblock += \"</div>\";\n\n                previewblock += \"<div class='file-info'><fieldset>\";\n                if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    if ($('#' + fieldname + '_show_title').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + count + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_title_\" + count + \"' /></div></div>\";\n                    }\n                    if ($('#' + fieldname + '_show_comment').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + count + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_comment_\" + count + \"' /></div></div>\";\n                    }\n                }\n                previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + count + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n                previewblock += \"</fieldset></div>\";\n\n                previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + count + \"' value=\" + metadata.size + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + count + \"' value=\" + metadata.file_index + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_name_\" + count + \"' value=\" + metadata.name + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_filename_\" + count + \"' value=\" + metadata.filename + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_ext_\" + count + \"' value=\" + metadata.ext + \"  />\";\n\n                previewblock += \"</li>\";\n\n                // add file to the list\n                $('#field' + fieldname + '_listfiles').prepend(previewblock);\n                var filecount = parseInt($('#' + fieldname + '_filecount').val());\n                var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n                filecount++;\n                var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n                $('#' + fieldname + '_filecount').val(filecount);\n\n                if (filecount < minfiles) {\n                    $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount))).removeClass('hidden');\n                } else if (filecount < maxfiles) {\n                    $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount))).removeClass('hidden');\n                } else {\n                    $('#uploadstatus').html(uploadLang.errorMaxReached).removeClass('hidden');\n                }\n                fixParentHeigth(fieldname);\n                if (filecount >= maxfiles) {\n                    //$('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + uploadLang.errorTooMuch + '</p>');\n                }\n                fixParentHeigth(fieldname);\n            } else {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + metadata.msg + '</p>');\n                fixParentHeigth(fieldname);\n            }\n\n        }\n    });\n\n    // if it has been jst opened, the upload button should be automatically clicked !\n    // TODO: auto open using click() not working at all ! :(\n}\n\nfunction isValueInArray(arr, val)\n{\n    inArray = false;\n    for (i = 0; i < arr.length; i++)\n        if (val.toLowerCase() == arr[i].toLowerCase())\n            inArray = true;\n\n    return inArray;\n}\n\n// pass the JSON data from the iframe to the main survey page\nfunction passJSON(fieldname, show_title, show_comment, pos)\n{\n    var json = \"[\";\n    var filecount = 0;\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n    var i = 1;\n    while (i <= licount)\n    {\n\n        if ($(\"#\" + fieldname + \"_li_\" + i).is(':visible'))\n        {\n            if (filecount > 0)\n                json += \",\";\n            json += '{ ';\n\n            if ($(\"#\" + fieldname + \"_show_title\").val() == 1)\n                json += '\"title\":\"' + htmlentities($(\"#\" + fieldname + \"_title_\" + i).val(),null,null,false) + '\",';\n            if ($(\"#\" + fieldname + \"_show_comment\").val() == 1)\n                json += '\"comment\":\"' + htmlentities($(\"#\" + fieldname + \"_comment_\" + i).val(),null,null,false) + '\",';\n            json += '\"size\":\"' + $(\"#\" + fieldname + \"_size_\" + i).val() + '\",' +\n                '\"name\":\"' + htmlentities($(\"#\" + fieldname + \"_name_\" + i).val(),null,null,false) + '\",' +\n                '\"filename\":\"' + htmlentities($(\"#\" + fieldname + \"_filename_\" + i).val(),null,null,false) + '\",' +\n                '\"ext\":\"' + htmlentities($(\"#\" + fieldname + \"_ext_\" + i).val(),null,null,false) + '\"}';\n\n            filecount += 1;\n        }\n        i += 1;\n    }\n    json += \"]\";\n    window.parent.window.copyJSON(json, filecount, fieldname, show_title, show_comment, pos);\n}\n\nfunction saveAndExit(fieldname, show_title, show_comment, pos)\n{\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n\n    if (minfiles != 0 && filecount < minfiles && showpopups)\n    {\n        var confirmans = confirm(uploadLang.errorNeedMoreConfirm.replace('%s', (minfiles - filecount)));\n        if (confirmans)\n        {\n            passJSON(fieldname, show_title, show_comment, pos);\n            return true;\n        } else\n            return false;\n    } else\n    {\n        passJSON(fieldname, show_title, show_comment, pos);\n        return true;\n    }\n}\n\nfunction deletefile(fieldname, count)\n{\n\n    var file_index;\n    var filename = $(\"#\" + fieldname + \"_filename_\" + count).val();\n    var name = $(\"#\" + fieldname + \"_name_\" + count).val();\n\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n\n    fileheight = $(\"#\" + fieldname + \"_li_\" + count).height();\n    $(\"#\" + fieldname + \"_li_\" + count).remove();\n\n    $.ajax(\n        {\n            method: \"POST\",\n            url: uploadurl,\n            data: $.extend({\n                'delete': 1,\n                'fieldname': fieldname,\n                'filename': filename,\n                'name': name,\n            }, csrfData)\n        })\n        .done(function (msg) {\n            $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + msg + '</p>');\n            setTimeout(function () {\n                $(\".success\").remove();\n            }, 5000);\n            $(\"#\" + fieldname + \"_li_\" + count).hide();\n            filecount--;\n            $('#' + fieldname + '_filecount').val(filecount);\n            file_index = $(\"#\" + fieldname + \"_file_index_\" + count).val();\n            for (j = count; j <= licount; j++)\n            {\n                if ($('#' + fieldname + '_li_' + j).is(\":visible\"))\n                {\n                    $('#' + fieldname + '_file_index_' + j).val(file_index);\n                    file_index++;\n                }\n            }\n            var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n\n            if (filecount < minfiles)\n            {\n                $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            } else\n            {\n                $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            }\n        });\n}\n\n\nfunction escapeHtml(unsafe)\n{\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\nfunction htmlentities (string, quote_style, charset, double_encode) {\n    // Convert all applicable characters to HTML entities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/htmlentities\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: nobbler\n    // +    tweaked by: Jack\n    // +   bugfixed by: Onno Marsman\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Ratheous\n    // +   improved by: Rafa\u0142 Kukawski (http://blog.kukawski.pl)\n    // -    depends on: get_html_translation_table\n    // *     example 1: htmlentities('Kevin & van Zonneveld');\n    // *     returns 1: 'Kevin &amp; van Zonneveld'\n    // *     example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\");\n    // *     returns 2: 'foo&#039;bar'\n    var hash_map = {},\n        symbol = '',\n        entity = '',\n        self = this;\n    string += '';\n    double_encode = !!double_encode || double_encode == null;\n\n    if (false === (hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style))) {\n        return false;\n    }\n    hash_map[\"'\"] = '&#039;';\n\n    if (double_encode) {\n        for (symbol in hash_map) {\n            entity = hash_map[symbol];\n            string = string.split(symbol).join(entity);\n        }\n    } else {\n        string = string.replace(/([\\s\\S]*?)(&(?:#\\d+|#x[\\da-f]+|[a-z][\\da-z]*);|$)/g, function (ignore, text, entity) {\n            return self.htmlentities(text, quote_style, charset) + entity;\n        });\n    }\n\n    return string;\n}\n\nfunction get_html_translation_table (table, quote_style) {\n    // Returns the internal translation table used by htmlspecialchars and htmlentities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/get_html_translation_table\n    // +   original by: Philip Peterson\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: noname\n    // +   bugfixed by: Alex\n    // +   bugfixed by: Marco\n    // +   bugfixed by: madipta\n    // +   improved by: KELAN\n    // +   improved by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Frank Forte\n    // +   bugfixed by: T.Wild\n    // +      input by: Ratheous\n    // %          note: It has been decided that we're not going to add global\n    // %          note: dependencies to php.js, meaning the constants are not\n    // %          note: real constants, but strings instead. Integers are also supported if someone\n    // %          note: chooses to create the constants themselves.\n    // *     example 1: get_html_translation_table('HTML_SPECIALCHARS');\n    // *     returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n    var entities = {},\n        hash_map = {},\n        decimal = 0,\n        symbol = '';\n    var constMappingTable = {},\n        constMappingQuoteStyle = {};\n    var useTable = {},\n        useQuoteStyle = {};\n\n    // Translate arguments\n    constMappingTable[0] = 'HTML_SPECIALCHARS';\n    constMappingTable[1] = 'HTML_ENTITIES';\n    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n    constMappingQuoteStyle[2] = 'ENT_COMPAT';\n    constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n    useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() : 'ENT_COMPAT';\n\n    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n        throw new Error(\"Table: \" + useTable + ' not supported');\n        // return false;\n    }\n\n    entities['38'] = '&amp;';\n    if (useTable === 'HTML_ENTITIES') {\n        entities['160'] = '&nbsp;';\n        entities['161'] = '&iexcl;';\n        entities['162'] = '&cent;';\n        entities['163'] = '&pound;';\n        entities['164'] = '&curren;';\n        entities['165'] = '&yen;';\n        entities['166'] = '&brvbar;';\n        entities['167'] = '&sect;';\n        entities['168'] = '&uml;';\n        entities['169'] = '&copy;';\n        entities['170'] = '&ordf;';\n        entities['171'] = '&laquo;';\n        entities['172'] = '&not;';\n        entities['173'] = '&shy;';\n        entities['174'] = '&reg;';\n        entities['175'] = '&macr;';\n        entities['176'] = '&deg;';\n        entities['177'] = '&plusmn;';\n        entities['178'] = '&sup2;';\n        entities['179'] = '&sup3;';\n        entities['180'] = '&acute;';\n        entities['181'] = '&micro;';\n        entities['182'] = '&para;';\n        entities['183'] = '&middot;';\n        entities['184'] = '&cedil;';\n        entities['185'] = '&sup1;';\n        entities['186'] = '&ordm;';\n        entities['187'] = '&raquo;';\n        entities['188'] = '&frac14;';\n        entities['189'] = '&frac12;';\n        entities['190'] = '&frac34;';\n        entities['191'] = '&iquest;';\n        entities['192'] = '&Agrave;';\n        entities['193'] = '&Aacute;';\n        entities['194'] = '&Acirc;';\n        entities['195'] = '&Atilde;';\n        entities['196'] = '&Auml;';\n        entities['197'] = '&Aring;';\n        entities['198'] = '&AElig;';\n        entities['199'] = '&Ccedil;';\n        entities['200'] = '&Egrave;';\n        entities['201'] = '&Eacute;';\n        entities['202'] = '&Ecirc;';\n        entities['203'] = '&Euml;';\n        entities['204'] = '&Igrave;';\n        entities['205'] = '&Iacute;';\n        entities['206'] = '&Icirc;';\n        entities['207'] = '&Iuml;';\n        entities['208'] = '&ETH;';\n        entities['209'] = '&Ntilde;';\n        entities['210'] = '&Ograve;';\n        entities['211'] = '&Oacute;';\n        entities['212'] = '&Ocirc;';\n        entities['213'] = '&Otilde;';\n        entities['214'] = '&Ouml;';\n        entities['215'] = '&times;';\n        entities['216'] = '&Oslash;';\n        entities['217'] = '&Ugrave;';\n        entities['218'] = '&Uacute;';\n        entities['219'] = '&Ucirc;';\n        entities['220'] = '&Uuml;';\n        entities['221'] = '&Yacute;';\n        entities['222'] = '&THORN;';\n        entities['223'] = '&szlig;';\n        entities['224'] = '&agrave;';\n        entities['225'] = '&aacute;';\n        entities['226'] = '&acirc;';\n        entities['227'] = '&atilde;';\n        entities['228'] = '&auml;';\n        entities['229'] = '&aring;';\n        entities['230'] = '&aelig;';\n        entities['231'] = '&ccedil;';\n        entities['232'] = '&egrave;';\n        entities['233'] = '&eacute;';\n        entities['234'] = '&ecirc;';\n        entities['235'] = '&euml;';\n        entities['236'] = '&igrave;';\n        entities['237'] = '&iacute;';\n        entities['238'] = '&icirc;';\n        entities['239'] = '&iuml;';\n        entities['240'] = '&eth;';\n        entities['241'] = '&ntilde;';\n        entities['242'] = '&ograve;';\n        entities['243'] = '&oacute;';\n        entities['244'] = '&ocirc;';\n        entities['245'] = '&otilde;';\n        entities['246'] = '&ouml;';\n        entities['247'] = '&divide;';\n        entities['248'] = '&oslash;';\n        entities['249'] = '&ugrave;';\n        entities['250'] = '&uacute;';\n        entities['251'] = '&ucirc;';\n        entities['252'] = '&uuml;';\n        entities['253'] = '&yacute;';\n        entities['254'] = '&thorn;';\n        entities['255'] = '&yuml;';\n    }\n\n    if (useQuoteStyle !== 'ENT_NOQUOTES') {\n        entities['34'] = '&quot;';\n    }\n    if (useQuoteStyle === 'ENT_QUOTES') {\n        entities['39'] = '&#39;';\n    }\n    entities['60'] = '&lt;';\n    entities['62'] = '&gt;';\n\n\n    // ascii decimals to real symbols\n    for (decimal in entities) {\n        symbol = String.fromCharCode(decimal);\n        hash_map[symbol] = entities[decimal];\n    }\n\n    return hash_map;\n}"], "fixing_code": ["$(function() {\n    openUploadModalDialog();\n});\n\nfunction openUploadModalDialog(){\n    $('.upload').click(function(e) {\n\n        e.preventDefault();\n\n        var $this = $(this);\n        var show_title   = getQueryVariable('show_title', this.href);\n        var show_comment = getQueryVariable('show_comment', this.href);\n        var pos          = getQueryVariable('pos', this.href);\n        var fieldname    = getQueryVariable('fieldname', this.href);\n        var buttonsOpts = {};\n        buttonsOpts[uploadLang.returnTxt] = function() {\n            $(this).dialog(\"close\");\n        };\n\n        $('#file-upload-modal-' + fieldname).appendTo('body').modal();\n        $(document).on('shown.bs.modal','#file-upload-modal-' + fieldname, function()\n        {\n            updateMaxHeightModalbody($(this));\n        });\n        $('#file-upload-modal-' + fieldname).on('hide.bs.modal', function() {\n            var pass;\n            var uploaderId = 'uploader' + fieldname;\n            if(document.getElementById(uploaderId).contentDocument) {\n                if(document.getElementById(uploaderId).contentDocument.defaultView)\n                    {       /*Firefox*/\n                    pass=document.getElementById(uploaderId).contentDocument.defaultView.saveAndExit(fieldname,show_title,show_comment,pos);\n                }else{       /*IE8*/\n                    pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n                }\n            }else{    /*IE6*/\n                pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n            }\n            return pass;\n        });\n    });\n}\n\n/* Function to update upload frame\n *\n * @param frameName name of the frame (here it's id too :) )\n * @param integer heigth\n */\nfunction updateUploadFrame(frameName,heigth)\n{\n    $(\"#\"+frameName).innerHeight(heigth);\n}\n/* Function to update modal body max height\n *\n * @param modal jquery object : the modal\n */\nfunction updateMaxHeightModalbody(modal)\n{\n    var modalHeader=$(modal).find(\".modal-header\").outerHeight();\n    var modalFooter=$(modal).find(\".modal-footer\").outerHeight();\n    console.ls.log([$(window).height(),modalHeader,modalFooter,(modalHeader+modalFooter)]);\n    var finalMaxHeight=Math.max(150,$(window).height()-(modalHeader+modalFooter+16));// Not less than 150px\n    $(modal).find(\".modal-body\").css(\"max-height\",finalMaxHeight);\n}\n\nfunction getQueryVariable(variable, url) {\n    var vars = url.split(\"/\");\n    for (var i=0;i<vars.length;i++) {\n        //var pair = vars[i].split(\"=\");\n        if (vars[i] == variable) {\n        return vars[i+1];\n        }\n    }\n    // If not found try with ?\n    // TODO : replace by a regexp\n   var vars = url.replace(/\\&amp;/g,'&').split(\"&\");\n   for (var i=0;i<vars.length;i++) {\n           var pair = vars[i].split(\"=\");\n           if(pair[0] == variable){return pair[1];}\n   }\n   return null;\n}\n\nfunction isValueInArray(arr, val) {\n    inArray = false;\n    for (i = 0; i < arr.length; i++) {\n        if (val.toLowerCase() == arr[i].toLowerCase()) {\n            inArray = true;\n        }\n    }\n\n    return inArray;\n}\n\nfunction displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment) {\n    var jsonobj;\n    var i;\n    var display = '';\n\n    if (jsonstring == '[]') {\n        $('#'+fieldname+'_uploadedfiles').html(display);\n        return;\n    }\n\n    if (jsonstring !== '')\n    {\n        var jsonobj = '';\n        try{\n            jsonobj = JSON.parse(jsonstring);\n        } catch(e) {}\n        display = '<table width=\"100%\" class=\"question uploadedfiles\"><thead><tr><td width=\"20%\">&nbsp;</td>';\n        if (show_title != 0)\n            display += '<th>'+uploadLang.headTitle+'</th>';\n        if (show_comment != 0)\n            display += '<th>'+uploadLang.headComment+'</th>';\n        display += '<th>'+uploadLang.headFileName+'</th><th class=\"edit\"></th></tr></thead><tbody>';\n        var image_extensions = new Array('gif', 'jpeg', 'jpg', 'png', 'swf', 'psd', 'bmp', 'tiff', 'jp2', 'iff', 'bmp', 'xbm', 'ico');\n\n        for (i = 0; i < filecount; i++)\n        {\n            if (isValueInArray(image_extensions, jsonobj[i].ext))\n                display += '<tr><td class=\"upload image\"><img src=\"' + uploadurl + '/filegetcontents/'+decodeURIComponent(jsonobj[i].filename)+'\" class=\"uploaded\" /></td>';\n            else\n                display += '<tr><td class=\"upload placeholder\"><div class=\"upload-placeholder\" /></td>';\n\n            if (show_title != 0)\n                display += '<td class=\"upload title\">'+htmlentities(jsonobj[i].title,null,null,false)+'</td>';\n            if (show_comment != 0)\n                display += '<td class=\"upload comment\">'+htmlentities(jsonobj[i].comment,null,null,false)+'</td>';\n            display +='<td class=\"upload edit\">'+htmlentities(decodeURIComponent(jsonobj[i].name),null,null,false)+'</td><td>'+'<a class=\"btn btn-primary\" onclick=\"javascript:upload_'+fieldname+'();$(\\'#upload_'+fieldname+'\\').click();\"><span class=\"fa fa-pencil\"></span>&nbsp;'+uploadLang.editFile+'</a></td></tr>';\n        }\n        display += '</tbody></table>';\n\n        $('#'+fieldname+'_uploadedfiles').html(display);\n    }\n}\n\nfunction copyJSON(jsonstring, filecount, fieldname, show_title, show_comment, pos) {\n    $('#'+fieldname).val(jsonstring);\n    $('#'+fieldname+'_filecount').val(filecount);\n    displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment, pos);\n}\n\n\nfunction showBasic() {\n    $('#basic').show();\n}\n\nfunction hideBasic() {\n    $('#basic').hide();\n}\n", "$(document).on('ready pjax:scriptcomplete', function () {\n    doFileUpload();\n    fixParentHeigth();\n});\n\nfunction fixParentHeigth(fieldname, elementHeight)\n{\n    fieldname = fieldname || '';\n    elementHeight = elementHeight || 0;\n\n    if (window != top)\n    {\n        //~ frameheight=Math.max($(document).height(),$('html').outerHeight()+30,150);\n        if (fieldname != '')\n        {\n            frameheight = Math.max($(document).height() + elementHeight, $('#field' + fieldname + '_listfiles').parent().height());\n        } else\n        {\n            frameheight = Math.max($(document).height() + elementHeight, 150);\n        }\n\n        if (jQuery.isFunction(parent.updateUploadFrame))\n        {\n            parent.updateUploadFrame(window.name, frameheight);\n        }\n    }\n}\n\nfunction doFileUpload()\n{\n    var fieldname = $('#ia').val();\n    /* Load the previously uploaded files */\n    var filecount = window.parent.window.$('#' + fieldname + '_filecount').val();\n    $('#' + fieldname + '_filecount').val(filecount);\n\n    var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n    if (filecount > 0)\n    {\n        var jsontext = window.parent.window.$('#' + fieldname).val();\n        var json = '';\n        try{\n            json = JSON.parse(jsontext);\n        } catch(e) {}\n        if ($('#field' + fieldname + '_listfiles').length == 0)\n        {\n            $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n        }\n        var i;\n        $('#' + fieldname + '_licount').val(filecount);\n\n        for (i = 1; i <= filecount; i++)\n        {\n            var previewblock = \"<li id='\" + fieldname + \"_li_\" + i + \"' class='previewblock file-element'>\";\n            previewblock += \"<div class='file-preview'>\";\n            if (isValueInArray(image_extensions, json[i - 1].ext.toLowerCase()))\n                previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + json[i - 1].filename + \"' class='uploaded' onload='fixParentHeigth(fieldname)' />\";\n            else\n                previewblock += \"<div class='upload-placeholder' />\";\n\n            previewblock += \"<span class='file-name'>\" + htmlentities(decodeURIComponent(json[i - 1].name),null,null,false) + \"</span>\";\n            previewblock += \"</div>\";\n\n            previewblock += \"<div class='file-info'><fieldset>\";\n            if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n            {\n                if ($('#' + fieldname + '_show_title').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + i + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].title,null,null,false) + \"' id='\" + fieldname + \"_title_\" + i + \"' /></div></div>\";\n                }\n                if ($('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + i + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].comment,null,null,false) + \"' id='\" + fieldname + \"_comment_\" + i + \"' /></div></div>\";\n                }\n\n            }\n            previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + i + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n            previewblock += \"</fieldset></div>\";\n\n            previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + i + \"' value=\" + json[i - 1].size + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_name_\" + i + \"' value=\" + htmlentities(json[i - 1].name,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + i + \"' value=\" + i + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_filename_\" + i + \"' value=\" + htmlentities(json[i - 1].filename,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_ext_\" + i + \"' value=\" + htmlentities(json[i - 1].ext) + \"  />\";\n\n            previewblock += \"</li>\";\n\n            // add file to the list\n            $('#field' + fieldname + '_listfiles').append(previewblock);\n            fixParentHeigth(fieldname);\n        }\n    }\n\n    // The upload button\n    var button = $('#button1'), interval;\n    new AjaxUpload(button, {\n        action: uploadurl + '/sid/' + surveyid + '/preview/' + questgrppreview + '/fieldname/' + fieldname + '/',\n        name: 'uploadfile',\n        data: $.extend({\n                valid_extensions: $('#' + fieldname + '_allowed_filetypes').val(),\n                max_filesize: $('#' + fieldname + '_maxfilesize').val(),\n                preview: $('#preview').val(),\n                surveyid: surveyid,\n                fieldname: fieldname,\n            }, csrfData\n        ),\n        onSubmit: function (file, ext) {\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n            var filecount = parseInt($('#' + fieldname + '_filecount').val());\n            var allowed_filetypes = $('#' + fieldname + '_allowed_filetypes').val().split(\",\");\n\n            /* If maximum number of allowed filetypes have already been uploaded,\n             * do not upload the file and display an error message ! */\n            if (filecount >= maxfiles)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorNoMoreFiles + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            /* If the file being uploaded is not allowed,\n             * do not upload the file and display an error message ! */\n            var allowSubmit = false;\n            for (var i = 0; i < allowed_filetypes.length; i++)\n            {\n                //check to see if it's the proper extension\n                if (jQuery.trim(allowed_filetypes[i].toLowerCase()) == jQuery.trim(ext.toLowerCase()))\n                {\n                    //it's the proper extension\n                    allowSubmit = true;\n                    break;\n                }\n            }\n            if (allowSubmit == false)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorOnlyAllowed.replace('%s', $('#' + fieldname + '_allowed_filetypes').val()) + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            // change button text, when user selects file\n            button.text(uploadLang.uploading);\n\n            // If you want to allow uploading only 1 file at time,\n            // you can disable upload button\n            this.disable();\n\n            // Uploding -> Uploading. -> Uploading...\n            interval = window.setInterval(function () {\n                var text = button.text();\n                if (text.length < 13)\n                {\n                    button.text(text + '.');\n                } else\n                {\n                    button.text(uploadLang.uploading);\n                }\n            }, 400);\n        },\n        onComplete: function (file, response) {\n            button.text(uploadLang.selectfile);\n            window.clearInterval(interval);\n            // enable upload button\n            this.enable();\n\n            // Once the file has been uploaded via AJAX,\n            // the preview is appended to the list of files\n            try{\n                var metadata = jQuery.parseJSON(response);\n            } catch(e) {\n                /* Suppose we get an HTML error ? Replace whole HTML (without head) */\n                $('body').html(response);\n                return;\n            }\n            var count = parseInt($('#' + fieldname + '_licount').val());\n            count++;\n            $('#' + fieldname + '_licount').val(count);\n\n            var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n            if (metadata.success)\n            {\n                $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-success\"></span>&nbsp;' + metadata.msg + '</p>');\n                if ($('#field' + fieldname + '_listfiles').length == 0)\n                {\n                    $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n                }\n                var previewblock = \"<li id='\" + fieldname + \"_li_\" + count + \"' class='previewblock file-element'>\";\n\n                previewblock += \"<div class='file-preview'>\";\n                if (isValueInArray(image_extensions, metadata.ext.toLowerCase()))\n                    previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + decodeURIComponent(metadata.filename) + \"' class='uploaded'  onload='fixParentHeigth(fieldname)' />\";\n                else\n                    previewblock += \"<div class='upload-placeholder' />\";\n                previewblock += \"<span class='file-name'>\" + escapeHtml(decodeURIComponent(metadata.name)) + \"<span>\";\n                previewblock += \"</div>\";\n\n                previewblock += \"<div class='file-info'><fieldset>\";\n                if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    if ($('#' + fieldname + '_show_title').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + count + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_title_\" + count + \"' /></div></div>\";\n                    }\n                    if ($('#' + fieldname + '_show_comment').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + count + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_comment_\" + count + \"' /></div></div>\";\n                    }\n                }\n                previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + count + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n                previewblock += \"</fieldset></div>\";\n\n                previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + count + \"' value=\" + metadata.size + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + count + \"' value=\" + metadata.file_index + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_name_\" + count + \"' value=\" + metadata.name + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_filename_\" + count + \"' value=\" + metadata.filename + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_ext_\" + count + \"' value=\" + metadata.ext + \"  />\";\n\n                previewblock += \"</li>\";\n\n                // add file to the list\n                $('#field' + fieldname + '_listfiles').prepend(previewblock);\n                var filecount = parseInt($('#' + fieldname + '_filecount').val());\n                var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n                filecount++;\n                var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n                $('#' + fieldname + '_filecount').val(filecount);\n\n                if (filecount < minfiles) {\n                    $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount))).removeClass('hidden');\n                } else if (filecount < maxfiles) {\n                    $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount))).removeClass('hidden');\n                } else {\n                    $('#uploadstatus').html(uploadLang.errorMaxReached).removeClass('hidden');\n                }\n                fixParentHeigth(fieldname);\n                if (filecount >= maxfiles) {\n                    //$('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + uploadLang.errorTooMuch + '</p>');\n                }\n                fixParentHeigth(fieldname);\n            } else {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + metadata.msg + '</p>');\n                fixParentHeigth(fieldname);\n            }\n\n        }\n    });\n\n    // if it has been jst opened, the upload button should be automatically clicked !\n    // TODO: auto open using click() not working at all ! :(\n}\n\nfunction isValueInArray(arr, val)\n{\n    inArray = false;\n    for (i = 0; i < arr.length; i++)\n        if (val.toLowerCase() == arr[i].toLowerCase())\n            inArray = true;\n\n    return inArray;\n}\n\n// pass the JSON data from the iframe to the main survey page\nfunction passJSON(fieldname, show_title, show_comment, pos)\n{\n    var json = \"[\";\n    var filecount = 0;\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n    var i = 1;\n    while (i <= licount)\n    {\n\n        if ($(\"#\" + fieldname + \"_li_\" + i).is(':visible'))\n        {\n            if (filecount > 0)\n                json += \",\";\n            json += '{ ';\n\n            if ($(\"#\" + fieldname + \"_show_title\").val() == 1)\n                json += '\"title\":\"' + htmlentities($(\"#\" + fieldname + \"_title_\" + i).val(),null,null,false) + '\",';\n            if ($(\"#\" + fieldname + \"_show_comment\").val() == 1)\n                json += '\"comment\":\"' + htmlentities($(\"#\" + fieldname + \"_comment_\" + i).val(),null,null,false) + '\",';\n            json += '\"size\":\"' + $(\"#\" + fieldname + \"_size_\" + i).val() + '\",' +\n                '\"name\":\"' + htmlentities($(\"#\" + fieldname + \"_name_\" + i).val(),null,null,false) + '\",' +\n                '\"filename\":\"' + htmlentities($(\"#\" + fieldname + \"_filename_\" + i).val(),null,null,false) + '\",' +\n                '\"ext\":\"' + htmlentities($(\"#\" + fieldname + \"_ext_\" + i).val(),null,null,false) + '\"}';\n\n            filecount += 1;\n        }\n        i += 1;\n    }\n    json += \"]\";\n    window.parent.window.copyJSON(json, filecount, fieldname, show_title, show_comment, pos);\n}\n\nfunction saveAndExit(fieldname, show_title, show_comment, pos)\n{\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n\n    if (minfiles != 0 && filecount < minfiles && showpopups)\n    {\n        var confirmans = confirm(uploadLang.errorNeedMoreConfirm.replace('%s', (minfiles - filecount)));\n        if (confirmans)\n        {\n            passJSON(fieldname, show_title, show_comment, pos);\n            return true;\n        } else\n            return false;\n    } else\n    {\n        passJSON(fieldname, show_title, show_comment, pos);\n        return true;\n    }\n}\n\nfunction deletefile(fieldname, count)\n{\n\n    var file_index;\n    var filename = $(\"#\" + fieldname + \"_filename_\" + count).val();\n    var name = $(\"#\" + fieldname + \"_name_\" + count).val();\n\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n\n    fileheight = $(\"#\" + fieldname + \"_li_\" + count).height();\n    $(\"#\" + fieldname + \"_li_\" + count).remove();\n\n    $.ajax(\n        {\n            method: \"POST\",\n            url: uploadurl,\n            data: $.extend({\n                'delete': 1,\n                'fieldname': fieldname,\n                'filename': filename,\n                'name': name,\n            }, csrfData)\n        })\n        .done(function (msg) {\n            $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + msg + '</p>');\n            setTimeout(function () {\n                $(\".success\").remove();\n            }, 5000);\n            $(\"#\" + fieldname + \"_li_\" + count).hide();\n            filecount--;\n            $('#' + fieldname + '_filecount').val(filecount);\n            file_index = $(\"#\" + fieldname + \"_file_index_\" + count).val();\n            for (j = count; j <= licount; j++)\n            {\n                if ($('#' + fieldname + '_li_' + j).is(\":visible\"))\n                {\n                    $('#' + fieldname + '_file_index_' + j).val(file_index);\n                    file_index++;\n                }\n            }\n            var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n\n            if (filecount < minfiles)\n            {\n                $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            } else\n            {\n                $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            }\n        });\n}\n\n\nfunction escapeHtml(unsafe)\n{\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\nfunction htmlentities (string, quote_style, charset, double_encode) {\n    // Convert all applicable characters to HTML entities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/htmlentities\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: nobbler\n    // +    tweaked by: Jack\n    // +   bugfixed by: Onno Marsman\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Ratheous\n    // +   improved by: Rafa\u0142 Kukawski (http://blog.kukawski.pl)\n    // -    depends on: get_html_translation_table\n    // *     example 1: htmlentities('Kevin & van Zonneveld');\n    // *     returns 1: 'Kevin &amp; van Zonneveld'\n    // *     example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\");\n    // *     returns 2: 'foo&#039;bar'\n    var hash_map = {},\n        symbol = '',\n        entity = '',\n        self = this;\n    string += '';\n    double_encode = !!double_encode || double_encode == null;\n\n    if (false === (hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style))) {\n        return false;\n    }\n    hash_map[\"'\"] = '&#039;';\n\n    if (double_encode) {\n        for (symbol in hash_map) {\n            entity = hash_map[symbol];\n            string = string.split(symbol).join(entity);\n        }\n    } else {\n        string = string.replace(/([\\s\\S]*?)(&(?:#\\d+|#x[\\da-f]+|[a-z][\\da-z]*);|$)/g, function (ignore, text, entity) {\n            return self.htmlentities(text, quote_style, charset) + entity;\n        });\n    }\n\n    return string;\n}\n\nfunction get_html_translation_table (table, quote_style) {\n    // Returns the internal translation table used by htmlspecialchars and htmlentities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/get_html_translation_table\n    // +   original by: Philip Peterson\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: noname\n    // +   bugfixed by: Alex\n    // +   bugfixed by: Marco\n    // +   bugfixed by: madipta\n    // +   improved by: KELAN\n    // +   improved by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Frank Forte\n    // +   bugfixed by: T.Wild\n    // +      input by: Ratheous\n    // %          note: It has been decided that we're not going to add global\n    // %          note: dependencies to php.js, meaning the constants are not\n    // %          note: real constants, but strings instead. Integers are also supported if someone\n    // %          note: chooses to create the constants themselves.\n    // *     example 1: get_html_translation_table('HTML_SPECIALCHARS');\n    // *     returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n    var entities = {},\n        hash_map = {},\n        decimal = 0,\n        symbol = '';\n    var constMappingTable = {},\n        constMappingQuoteStyle = {};\n    var useTable = {},\n        useQuoteStyle = {};\n\n    // Translate arguments\n    constMappingTable[0] = 'HTML_SPECIALCHARS';\n    constMappingTable[1] = 'HTML_ENTITIES';\n    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n    constMappingQuoteStyle[2] = 'ENT_COMPAT';\n    constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n    useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() : 'ENT_COMPAT';\n\n    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n        throw new Error(\"Table: \" + useTable + ' not supported');\n        // return false;\n    }\n\n    entities['38'] = '&amp;';\n    if (useTable === 'HTML_ENTITIES') {\n        entities['160'] = '&nbsp;';\n        entities['161'] = '&iexcl;';\n        entities['162'] = '&cent;';\n        entities['163'] = '&pound;';\n        entities['164'] = '&curren;';\n        entities['165'] = '&yen;';\n        entities['166'] = '&brvbar;';\n        entities['167'] = '&sect;';\n        entities['168'] = '&uml;';\n        entities['169'] = '&copy;';\n        entities['170'] = '&ordf;';\n        entities['171'] = '&laquo;';\n        entities['172'] = '&not;';\n        entities['173'] = '&shy;';\n        entities['174'] = '&reg;';\n        entities['175'] = '&macr;';\n        entities['176'] = '&deg;';\n        entities['177'] = '&plusmn;';\n        entities['178'] = '&sup2;';\n        entities['179'] = '&sup3;';\n        entities['180'] = '&acute;';\n        entities['181'] = '&micro;';\n        entities['182'] = '&para;';\n        entities['183'] = '&middot;';\n        entities['184'] = '&cedil;';\n        entities['185'] = '&sup1;';\n        entities['186'] = '&ordm;';\n        entities['187'] = '&raquo;';\n        entities['188'] = '&frac14;';\n        entities['189'] = '&frac12;';\n        entities['190'] = '&frac34;';\n        entities['191'] = '&iquest;';\n        entities['192'] = '&Agrave;';\n        entities['193'] = '&Aacute;';\n        entities['194'] = '&Acirc;';\n        entities['195'] = '&Atilde;';\n        entities['196'] = '&Auml;';\n        entities['197'] = '&Aring;';\n        entities['198'] = '&AElig;';\n        entities['199'] = '&Ccedil;';\n        entities['200'] = '&Egrave;';\n        entities['201'] = '&Eacute;';\n        entities['202'] = '&Ecirc;';\n        entities['203'] = '&Euml;';\n        entities['204'] = '&Igrave;';\n        entities['205'] = '&Iacute;';\n        entities['206'] = '&Icirc;';\n        entities['207'] = '&Iuml;';\n        entities['208'] = '&ETH;';\n        entities['209'] = '&Ntilde;';\n        entities['210'] = '&Ograve;';\n        entities['211'] = '&Oacute;';\n        entities['212'] = '&Ocirc;';\n        entities['213'] = '&Otilde;';\n        entities['214'] = '&Ouml;';\n        entities['215'] = '&times;';\n        entities['216'] = '&Oslash;';\n        entities['217'] = '&Ugrave;';\n        entities['218'] = '&Uacute;';\n        entities['219'] = '&Ucirc;';\n        entities['220'] = '&Uuml;';\n        entities['221'] = '&Yacute;';\n        entities['222'] = '&THORN;';\n        entities['223'] = '&szlig;';\n        entities['224'] = '&agrave;';\n        entities['225'] = '&aacute;';\n        entities['226'] = '&acirc;';\n        entities['227'] = '&atilde;';\n        entities['228'] = '&auml;';\n        entities['229'] = '&aring;';\n        entities['230'] = '&aelig;';\n        entities['231'] = '&ccedil;';\n        entities['232'] = '&egrave;';\n        entities['233'] = '&eacute;';\n        entities['234'] = '&ecirc;';\n        entities['235'] = '&euml;';\n        entities['236'] = '&igrave;';\n        entities['237'] = '&iacute;';\n        entities['238'] = '&icirc;';\n        entities['239'] = '&iuml;';\n        entities['240'] = '&eth;';\n        entities['241'] = '&ntilde;';\n        entities['242'] = '&ograve;';\n        entities['243'] = '&oacute;';\n        entities['244'] = '&ocirc;';\n        entities['245'] = '&otilde;';\n        entities['246'] = '&ouml;';\n        entities['247'] = '&divide;';\n        entities['248'] = '&oslash;';\n        entities['249'] = '&ugrave;';\n        entities['250'] = '&uacute;';\n        entities['251'] = '&ucirc;';\n        entities['252'] = '&uuml;';\n        entities['253'] = '&yacute;';\n        entities['254'] = '&thorn;';\n        entities['255'] = '&yuml;';\n    }\n\n    if (useQuoteStyle !== 'ENT_NOQUOTES') {\n        entities['34'] = '&quot;';\n    }\n    if (useQuoteStyle === 'ENT_QUOTES') {\n        entities['39'] = '&#39;';\n    }\n    entities['60'] = '&lt;';\n    entities['62'] = '&gt;';\n\n\n    // ascii decimals to real symbols\n    for (decimal in entities) {\n        symbol = String.fromCharCode(decimal);\n        hash_map[symbol] = entities[decimal];\n    }\n\n    return hash_map;\n}"], "filenames": ["assets/scripts/modaldialog.js", "assets/scripts/uploader.js"], "buggy_code_start_loc": [106, 41], "buggy_code_end_loc": [107, 42], "fixing_code_start_loc": [106, 41], "fixing_code_end_loc": [110, 45], "type": "CWE-79", "message": "The \"File upload question\" functionality in LimeSurvey 3.x-LTS through 3.27.18 allows XSS in assets/scripts/modaldialog.js and assets/scripts/uploader.js.", "other": {"cve": {"id": "CVE-2021-42112", "sourceIdentifier": "cve@mitre.org", "published": "2021-10-08T21:15:07.883", "lastModified": "2021-12-03T03:01:47.010", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The \"File upload question\" functionality in LimeSurvey 3.x-LTS through 3.27.18 allows XSS in assets/scripts/modaldialog.js and assets/scripts/uploader.js."}, {"lang": "es", "value": "La funcionalidad \"File upload question\" en LimeSurvey versiones 3.x-LTS hasta 3.27.18, permite un ataque de tipo XSS en assets/scripts/modaldialog.js y assets/scripts/uploader.js"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:limesurvey:limesurvey:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.0.0", "versionEndIncluding": "3.27.18", "matchCriteriaId": "03492CFB-9F65-4770-905B-091C03668930"}]}]}], "references": [{"url": "https://bugs.limesurvey.org/view.php?id=17562", "source": "cve@mitre.org", "tags": ["Permissions Required"]}, {"url": "https://github.com/LimeSurvey/LimeSurvey/commit/d56619a50cfd191bbffd0adb660638a5e438070d", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.on-x.com/sites/default/files/on-x_-_security_advisory_-_limesurvey_-_cve-2021-42112.pdf", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/LimeSurvey/LimeSurvey/commit/d56619a50cfd191bbffd0adb660638a5e438070d"}}