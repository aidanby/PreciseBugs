{"buggy_code": ["#!/usr/bin/env ruby\n# Oui le code est d\u00e9gueux... Et alors ?!\nrequire 'irc-socket'\nrequire 'myanimelist'\nrequire 'htmlentities'\nrequire 'io/console'\nrequire 'link_thumbnailer'\n\n$:.unshift File.dirname(__FILE__)\nrequire 'lib/yuko'\nrequire 'lib/myanimelist-x'\nrequire 'lib/message'\n\ndef init(_)\n  load 'config.rb'\n\n  Yuko.conf.prompt_mal_config unless Yuko.conf.mal_configured?\n\n  begin\n    Yuko.conf.check\n  rescue Yuko::ConfError => e\n    e.messages.each {|err| STDERR.puts \"Errors: config.rb: #{err}\"}\n    exit\n  end\n\n\n  MyAnimeList.configure do |config|\n    config.username = Yuko.conf.mal.username\n    config.password = Yuko.conf.mal.password\n  end\n\n  begin\n    MyAnimeList.verify_credentials\n  rescue RestClient::Unauthorized => e\n    puts 'Error: Incorrect login or password (mal)'\n    exit\n  end\n\n  LinkThumbnailer.configure do |config|\n    config.attributes = [:title]\n  end\nend\n\ndef run!\n  irc = IRCSocket.new(Yuko.conf.irc.server, Yuko.conf.irc.port, Yuko.conf.irc.ssl)\n  irc.connect\n\n  if irc.connected?\n    irc.nick Yuko.conf.irc.nickname\n    irc.user 'Yuko', 0, '*', 'I am a bot.'\n\n    while line = irc.read\n      message = Message.new(line)\n      puts \"Received: #{message.raw}\"\n      process(irc, message)\n    end\n  end\nend\n\ndef process(irc, message)\n  handle_end_of_motd(irc)      if message.is_end_of_motd?\n  handle_ping(irc, message)    if message.is_ping?\n  handle_privmsg(irc, message) if message.is_privmsg?\nend\n\ndef handle_end_of_motd(irc)\n  irc.join Yuko.conf.irc.channel\n  irc.privmsg Yuko.conf.irc.channel, Yuko.conf.irc.greeting unless Yuko.conf.irc.greeting.nil?\nend\n\ndef handle_ping(irc, message)\n  irc.pong message.params[0]\nend\n\ndef handle_privmsg(irc, message)\n  request = message.trailing.match /^!(?<name>\\S+)(\\s+(?<params>.*))?$/\n  urls    = message.trailing.scan /https?:\\/\\/\\S+/\n\n  handle_privmsg_request(irc, message, request) if request\n  handle_privmsg_urls(irc, message, urls)       if urls.any?\nend\n\ndef handle_privmsg_request(irc, message, request)\n  request = Hash[request.names.map(&:to_sym).zip(request.captures)]\n  request[:name].downcase!\n\n  if (request[:name] == 'anime' || request[:name] == 'manga') && !request[:params].nil?\n    search_type = request[:name]\n    results     = MyAnimeList.send \"search_#{search_type}\".to_sym, request[:params]\n\n    if results.any?\n      irc.privmsg message.channel, \"R\u00e9sultats pour \\\"#{request[:params]}\\\"\"\n\n      results.sort! {|entry1, entry2| entry2['score'].to_f <=> entry1['score'].to_f }\n      results.take(5).each do |entry|\n        title = HTMLEntities.new.decode entry['title']\n        url   = \"http://myanimelist.net/#{search_type}/#{entry['id']}\"\n        irc.privmsg message.channel, \"#{title} \u2192\\x032 #{url}\"\n      end\n    else\n      search = HTMLEntities.new.decode request[:params]\n      irc.privmsg message.channel, \"Aww~ la recherche pour \\\"#{search}\\\" n'a rien donn\u00e9 \u00e9_\u00e8\"\n    end\n  end\n\n  if request[:name] == 'titof' || request[:name] == '(21)'\n    irc.privmsg message.channel, \"http://nyu.moe/loliwaytolive.html\"\n  end\n\n  if request[:name] == 'holo' || request[:name] == \"shingekinoslg\"\n    irc.privmsg message.channel, \"https://www.listenonrepeat.com/?v=8PN7kNWV06w\"\n  end\n\n  if request[:name] == 'paraze' || request[:name] == \"moe\"\n    irc.privmsg message.channel, \"http://listenonrepeat.com/?v=wvvScxzxyLw\"\n  end\n\n  if request[:name] == 'dudurenchon'\n    irc.privmsg message.channel, \"http://image.noelshack.com/fichiers/2014/44/1414522583-dudurenchon.png\"\n  end\n\n  if request[:name] == 'praisememore'\n    irc.privmsg message.channel, \"https://i.imgur.com/f3WLqUw.jpg\"\n  end\n\n  if request[:name] == 'internet'\n    irc.privmsg message.channel, \"http://www.internetshouldbeillegal.com/\" \t\n  end\nend\n\ndef handle_privmsg_urls(irc, message, urls)\n  urls.take(3).each do |url|\n    begin\n      object = LinkThumbnailer.generate url\n      irc.privmsg message.channel, object.title if object.title && object.title.size > 0\n    rescue StandardError\n    end\n  end\nend\n\ninit Yuko and run! # yeah ruuuuuuuun!\n", "Yuko.configure do |config|\n\n  # IRC Informations:\n  config.irc.server   = 'irc.smoothirc.net'\n  config.irc.port     = 6667\n  config.irc.ssl      = false\n  config.irc.channel  = '#mangas'\n  config.irc.nickname = 'Yuko'\n  config.irc.greeting = 'Yuko kuruyo~ https://youtu.be/cIkoZbvTfwc \\o/'\n\n  # MyAnimeList Account:\n  config.mal.username = 'Oli-'\n  config.mal.password = nil\nend\n"], "fixing_code": ["#!/usr/bin/env ruby\n# Oui le code est d\u00e9gueux... Et alors ?!\nrequire 'irc-socket'\nrequire 'myanimelist'\nrequire 'htmlentities'\nrequire 'io/console'\nrequire 'link_thumbnailer'\n\n$:.unshift File.dirname(__FILE__)\nrequire 'lib/yuko'\nrequire 'lib/myanimelist-x'\nrequire 'lib/message'\n\ndef init(_)\n  load 'config.rb'\n\n  Yuko.conf.prompt_mal_config unless Yuko.conf.mal_configured?\n\n  begin\n    Yuko.conf.check\n  rescue Yuko::ConfError => e\n    e.messages.each {|err| STDERR.puts \"Errors: config.rb: #{err}\"}\n    exit\n  end\n\n\n  MyAnimeList.configure do |config|\n    config.username = Yuko.conf.mal.username\n    config.password = Yuko.conf.mal.password\n  end\n\n  begin\n    MyAnimeList.verify_credentials\n  rescue RestClient::Unauthorized => e\n    puts 'Error: Incorrect login or password (mal)'\n    exit\n  end\n\n  LinkThumbnailer.configure do |config|\n    config.attributes = [:title]\n  end\nend\n\ndef run!\n  irc = IRCSocket.new(Yuko.conf.irc.server, Yuko.conf.irc.port, Yuko.conf.irc.ssl)\n  irc.connect\n\n  if irc.connected?\n    irc.nick Yuko.conf.irc.nickname\n    irc.user 'Yuko', 0, '*', 'I am a bot.'\n\n    while line = irc.read\n      message = Message.new(line)\n      puts \"Received: #{message.raw}\"\n      process(irc, message)\n    end\n  end\nend\n\ndef process(irc, message)\n  handle_end_of_motd(irc)      if message.is_end_of_motd?\n  handle_ping(irc, message)    if message.is_ping?\n  handle_privmsg(irc, message) if message.is_privmsg?\nend\n\ndef handle_end_of_motd(irc)\n  irc.join Yuko.conf.irc.channel\n  irc.privmsg Yuko.conf.irc.channel, Yuko.conf.irc.greeting unless Yuko.conf.irc.greeting.nil?\nend\n\ndef handle_ping(irc, message)\n  irc.pong message.params[0]\nend\n\ndef handle_privmsg(irc, message)\n  request = message.trailing.match /^!(?<name>\\S+)(\\s+(?<params>.*))?$/\n  urls    = message.trailing.scan /https?:\\/\\/\\S+/\n\n  handle_privmsg_request(irc, message, request) if request\n  handle_privmsg_urls(irc, message, urls)       if urls.any?\nend\n\ndef handle_privmsg_request(irc, message, request)\n  request = Hash[request.names.map(&:to_sym).zip(request.captures)]\n  request[:name].downcase!\n\n  if (request[:name] == 'anime' || request[:name] == 'manga') && !request[:params].nil?\n    search_type = request[:name]\n    results     = MyAnimeList.send \"search_#{search_type}\".to_sym, request[:params]\n\n    if results.any?\n      irc.privmsg message.channel, \"R\u00e9sultats pour \\\"#{request[:params]}\\\"\"\n\n      results.sort! {|entry1, entry2| entry2['score'].to_f <=> entry1['score'].to_f }\n      results.take(5).each do |entry|\n        title = HTMLEntities.new.decode entry['title']\n        url   = \"http://myanimelist.net/#{search_type}/#{entry['id']}\"\n        irc.privmsg message.channel, \"#{title} \u2192\\x032 #{url}\"\n      end\n    else\n      search = HTMLEntities.new.decode request[:params]\n      irc.privmsg message.channel, \"Aww~ la recherche pour \\\"#{search}\\\" n'a rien donn\u00e9 \u00e9_\u00e8\"\n    end\n  end\n\n  if request[:name] == 'titof' || request[:name] == '(21)'\n    irc.privmsg message.channel, \"http://nyu.moe/loliwaytolive.html\"\n  end\n\n  if request[:name] == 'holo' || request[:name] == \"shingekinoslg\"\n    irc.privmsg message.channel, \"https://www.listenonrepeat.com/?v=8PN7kNWV06w\"\n  end\n\n  if request[:name] == 'paraze' || request[:name] == \"moe\"\n    irc.privmsg message.channel, \"http://listenonrepeat.com/?v=wvvScxzxyLw\"\n  end\n\n  if request[:name] == 'dudurenchon'\n    irc.privmsg message.channel, \"http://image.noelshack.com/fichiers/2014/44/1414522583-dudurenchon.png\"\n  end\n\n  if request[:name] == 'praisememore'\n    irc.privmsg message.channel, \"https://i.imgur.com/f3WLqUw.jpg\"\n  end\n\n  if request[:name] == 'internet'\n    irc.privmsg message.channel, \"http://www.internetshouldbeillegal.com/\"\n  end\nend\n\ndef handle_privmsg_urls(irc, message, urls)\n  urls.take(3).each do |url|\n    begin\n      object = LinkThumbnailer.generate url\n      irc.privmsg message.channel, object.title[0...512] if object.title && object.title.size > 0\n    rescue StandardError\n    end\n  end\nend\n\ninit Yuko and run! # yeah ruuuuuuuun!\n", "Yuko.configure do |config|\n\n  # IRC Informations:\n  config.irc.server   = 'irc.smoothirc.net'\n  config.irc.port     = 6667\n  config.irc.ssl      = false\n  config.irc.channel  = '#mangas'\n  config.irc.nickname = 'Yuko3'\n  config.irc.greeting = 'Yuko kuruyo~ https://youtu.be/cIkoZbvTfwc \\o/'\n\n  # MyAnimeList Account:\n  config.mal.username = 'Oli-'\n  config.mal.password = nil\nend\n"], "filenames": ["Yuko", "config.rb"], "buggy_code_start_loc": [127, 8], "buggy_code_end_loc": [136, 9], "fixing_code_start_loc": [127, 8], "fixing_code_end_loc": [136, 9], "type": "CWE-404", "message": "A vulnerability was found in emmflo yuko-bot. It has been declared as problematic. This vulnerability affects unknown code. The manipulation of the argument title leads to denial of service. The attack can be initiated remotely. The name of the patch is e580584b877934a4298d4dd0c497c79e579380d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217636.", "other": {"cve": {"id": "CVE-2014-125066", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-08T09:15:10.273", "lastModified": "2023-01-12T17:26:37.633", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in emmflo yuko-bot. It has been declared as problematic. This vulnerability affects unknown code. The manipulation of the argument title leads to denial of service. The attack can be initiated remotely. The name of the patch is e580584b877934a4298d4dd0c497c79e579380d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217636."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-404"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:yuko-bot_project:yuko-bot:*:*:*:*:*:*:*:*", "versionEndExcluding": "11-13-2014", "matchCriteriaId": "EF83D705-C236-49B9-B87A-83F12CD843EF"}]}]}], "references": [{"url": "https://github.com/emmflo/yuko-bot/commit/e580584b877934a4298d4dd0c497c79e579380d0", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217636", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217636", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/emmflo/yuko-bot/commit/e580584b877934a4298d4dd0c497c79e579380d0"}}