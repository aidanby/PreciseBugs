{"buggy_code": ["(function(window) {\n  \"use strict\";\n\n  window.ls.container.get(\"view\").add({\n    selector: \"data-forms-code\",\n    controller: function(element, alerts) {\n      let lang = element.dataset[\"formsCode\"] || \"json\";\n      let div = document.createElement(\"div\");\n      let pre = document.createElement(\"pre\");\n      let code = document.createElement(\"code\");\n      let copy = document.createElement(\"i\");\n\n      div.appendChild(pre);\n      div.appendChild(copy);\n      pre.appendChild(code);\n\n      element.parentNode.appendChild(div);\n      element.style.display = 'none';\n\n      div.className = \"ide\";\n      div.dataset['langLabel'] = element.dataset[\"langLabel\"] || 'JSON';\n      div.dataset['lang'] = element.dataset[\"lang\"] || 'json';\n      pre.className = \"line-numbers\";\n      code.className = \"prism language-\" + lang;\n      copy.className = \"icon-docs copy\";\n      copy.textContent = \"Click Here to Copy\";\n      copy.title = \"Copy to Clipboard\";\n\n      copy.addEventListener(\"click\", function() {\n        window.getSelection().removeAllRanges();\n\n        let range = document.createRange();\n\n        range.selectNode(code);\n\n        window.getSelection().addRange(range);\n\n        try {\n          document.execCommand(\"copy\");\n          alerts.add({ text: \"Copied to clipboard\", class: \"\" }, 3000);\n        } catch (err) {\n          alerts.add({ text: \"Failed to copy text \", class: \"error\" }, 3000);\n        }\n\n        window.getSelection().removeAllRanges();\n      });\n\n      let check = function() {\n        if (!element.value) {\n          return;\n        }\n\n        let value = null;\n\n        try {\n          value = JSON.stringify(JSON.parse(element.value), null, 4);\n        } catch (error) {\n          value = element.value;\n        }\n\n        code.innerHTML = value;\n\n        Prism.highlightElement(code);\n\n        div.scrollTop = 0;\n      };\n\n      element.addEventListener(\"change\", check);\n\n      check();\n    }\n  });\n})(window);\n"], "fixing_code": ["(function(window) {\n  \"use strict\";\n\n  window.ls.container.get(\"view\").add({\n    selector: \"data-forms-code\",\n    controller: function(element, alerts) {\n      let lang = element.dataset[\"formsCode\"] || \"json\";\n      let div = document.createElement(\"div\");\n      let pre = document.createElement(\"pre\");\n      let code = document.createElement(\"code\");\n      let copy = document.createElement(\"i\");\n\n      div.appendChild(pre);\n      div.appendChild(copy);\n      pre.appendChild(code);\n\n      element.parentNode.appendChild(div);\n      element.style.display = 'none';\n\n      div.className = \"ide\";\n      div.dataset['langLabel'] = element.dataset[\"langLabel\"] || 'JSON';\n      div.dataset['lang'] = element.dataset[\"lang\"] || 'json';\n      pre.className = \"line-numbers\";\n      code.className = \"prism language-\" + lang;\n      copy.className = \"icon-docs copy\";\n      copy.textContent = \"Click Here to Copy\";\n      copy.title = \"Copy to Clipboard\";\n\n      copy.addEventListener(\"click\", function() {\n        window.getSelection().removeAllRanges();\n\n        let range = document.createRange();\n\n        range.selectNode(code);\n\n        window.getSelection().addRange(range);\n\n        try {\n          document.execCommand(\"copy\");\n          alerts.add({ text: \"Copied to clipboard\", class: \"\" }, 3000);\n        } catch (err) {\n          alerts.add({ text: \"Failed to copy text \", class: \"error\" }, 3000);\n        }\n\n        window.getSelection().removeAllRanges();\n      });\n\n      let check = function() {\n        if (!element.value) {\n          return;\n        }\n\n        let value = null;\n\n        try {\n          value = JSON.stringify(JSON.parse(element.value), null, 4);\n        } catch (error) {\n          value = element.value;\n        }\n\n        code.textContent = value;\n\n        Prism.highlightElement(code);\n\n        div.scrollTop = 0;\n      };\n\n      element.addEventListener(\"change\", check);\n\n      check();\n    }\n  });\n})(window);\n"], "filenames": ["public/scripts/views/forms/code.js"], "buggy_code_start_loc": [61], "buggy_code_end_loc": [62], "fixing_code_start_loc": [61], "fixing_code_end_loc": [62], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository appwrite/appwrite prior to 1.0.0-RC1.", "other": {"cve": {"id": "CVE-2022-2925", "sourceIdentifier": "security@huntr.dev", "published": "2022-09-09T06:15:07.857", "lastModified": "2022-09-13T20:47:45.807", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository appwrite/appwrite prior to 1.0.0-RC1."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en el repositorio GitHub appwrite/appwrite versiones anteriores a 1.0.0-RC1"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:appwrite:appwrite:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.15.3", "matchCriteriaId": "50F7E90C-A314-4201-A3E1-14C971BC178F"}]}]}], "references": [{"url": "https://github.com/appwrite/appwrite/commit/b5b4d92623c13fa8e5c71736db461e81fb7a7ade", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/a3b4148f-165f-4583-abed-5568696d99dc", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/appwrite/appwrite/commit/b5b4d92623c13fa8e5c71736db461e81fb7a7ade"}}