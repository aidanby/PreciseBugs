{"buggy_code": ["<?php\n/*\n * Copyright 2005-2015 Centreon\n * Centreon is developped by : Julien Mathis and Romain Le Merlus under\n * GPL Licence 2.0.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software\n * Foundation ; either version 2 of the License.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n * PARTICULAR PURPOSE. See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with\n * this program; if not, see <http://www.gnu.org/licenses>.\n *\n * Linking this program statically or dynamically with other modules is making a\n * combined work based on this program. Thus, the terms and conditions of the GNU\n * General Public License cover the whole combination.\n *\n * As a special exception, the copyright holders of this program give Centreon\n * permission to link this program with independent modules to produce an executable,\n * regardless of the license terms of these independent modules, and to copy and\n * distribute the resulting executable under terms of Centreon choice, provided that\n * Centreon also meet, for each linked independent module, the terms  and conditions\n * of the license of that module. An independent module is a module which is not\n * derived from this program. If you modify this program, you may extend this\n * exception to your version of the program, but you are not obliged to do so. If you\n * do not wish to do so, delete this exception statement from your version.\n *\n * For more information : contact@centreon.com\n *\n */\n\nif (!isset($centreon)) {\n    exit();\n}\n\nif (!$centreon->user->admin && $cg_id) {\n    $aclOptions = array(\n        'fields' => array('cg_id', 'cg_name'),\n        'keys' => array('cg_id'),\n        'get_row' => 'cg_name',\n        'conditions' => array('cg_id' => $cg_id)\n    );\n    $cgs = $acl->getContactGroupAclConf($aclOptions);\n    if (!count($cgs)) {\n        $msg = new CentreonMsg();\n        $msg->setImage(\"./img/icons/warning.png\");\n        $msg->setTextStyle(\"bold\");\n        $msg->setText(_('You are not allowed to access this contact group'));\n        return null;\n    }\n}\n\n$initialValues = array();\n\n/*\n * Database retrieve information for Contact\n */\n$cg = array();\nif (($o == \"c\" || $o == \"w\") && $cg_id) {\n    /*\n     * Get host Group information\n     */\n    $DBRESULT = $pearDB->query(\"SELECT * FROM `contactgroup` WHERE `cg_id` = '\" . $cg_id . \"' LIMIT 1\");\n\n    /*\n     * Set base value\n     */\n    $cg = array_map(\"myDecode\", $DBRESULT->fetchRow());\n}\n\n$attrsText = array(\"size\" => \"30\");\n$attrsAdvSelect = array(\"style\" => \"width: 300px; height: 100px;\");\n$attrsTextarea = array(\"rows\" => \"5\", \"cols\" => \"60\");\n$eTemplate = '<table><tr><td><div class=\"ams\">{label_2}</div>{unselected}</td><td align=\"center\">{add}<br /><br />'\n    . '<br />{remove}</td><td><div class=\"ams\">{label_3}</div>{selected}</td></tr></table>';\n$contactRoute = './include/common/webServices/rest/internal.php?object=centreon_configuration_contact&action=list';\n$attrContacts = array(\n    'datasourceOrigin' => 'ajax',\n    'availableDatasetRoute' => $contactRoute,\n    'multiple' => true,\n    'linkedObject' => 'centreonContact'\n);\n$aclgRoute = './include/common/webServices/rest/internal.php?object=centreon_administration_aclgroup&action=list';\n$attrAclgroups = array(\n    'datasourceOrigin' => 'ajax',\n    'availableDatasetRoute' => $aclgRoute,\n    'multiple' => true,\n    'linkedObject' => 'centreonAclGroup'\n);\n\n/*\n * form begin\n */\n$form = new HTML_QuickFormCustom('Form', 'post', \"?p=\" . $p);\nif ($o == \"a\") {\n    $form->addElement('header', 'title', _(\"Add a Contact Group\"));\n} elseif ($o == \"c\") {\n    $form->addElement('header', 'title', _(\"Modify a Contact Group\"));\n} elseif ($o == \"w\") {\n    $form->addElement('header', 'title', _(\"View a Contact Group\"));\n}\n\n/*\n * Contact basic information\n */\n$form->addElement('header', 'information', _(\"General Information\"));\n$form->addElement('text', 'cg_name', _(\"Contact Group Name\"), $attrsText);\n$form->addElement('text', 'cg_alias', _(\"Alias\"), $attrsText);\n\n/*\n * Contacts Selection\n */\n$form->addElement('header', 'notification', _(\"Relations\"));\n$contactRoute = './include/common/webServices/rest/internal.php?object=centreon_configuration_contact'\n    . '&action=defaultValues&target=contactgroup&field=cg_contacts&id=' . $cg_id;\n$attrContact1 = array_merge(\n    $attrContacts,\n    array('defaultDatasetRoute' => $contactRoute)\n);\n$form->addElement('select2', 'cg_contacts', _(\"Linked Contacts\"), array(), $attrContact1);\n\n\n/*\n * Acl group selection\n */\n$aclRoute = './include/common/webServices/rest/internal.php?object=centreon_administration_aclgroup'\n    . '&action=defaultValues&target=contactgroup&field=cg_acl_groups&id=' . $cg_id;\n$attrAclgroup1 = array_merge(\n    $attrAclgroups,\n    array('defaultDatasetRoute' => $aclRoute)\n);\n$form->addElement('select2', 'cg_acl_groups', _(\"Linked ACL groups\"), array(), $attrAclgroup1);\n\n\n/*\n * Further informations\n */\n$form->addElement('header', 'furtherInfos', _(\"Additional Information\"));\n$cgActivation[] = $form->createElement('radio', 'cg_activate', null, _(\"Enabled\"), '1');\n$cgActivation[] = $form->createElement('radio', 'cg_activate', null, _(\"Disabled\"), '0');\n$form->addGroup($cgActivation, 'cg_activate', _(\"Status\"), '&nbsp;');\n$form->setDefaults(array('cg_activate' => '1'));\n$form->addElement('textarea', 'cg_comment', _(\"Comments\"), $attrsTextarea);\n\n$form->addElement('hidden', 'cg_id');\n$redirect = $form->addElement('hidden', 'o');\n$redirect->setValue($o);\n$init = $form->addElement('hidden', 'initialValues');\n$init->setValue(serialize($initialValues));\n\n/*\n * Set rules\n */\n$form->applyFilter('__ALL__', 'myTrim');\n$form->addRule('cg_name', _(\"Compulsory Name\"), 'required');\n$form->addRule('cg_alias', _(\"Compulsory Alias\"), 'required');\n\nif (!$centreon->user->admin) {\n    $form->addRule('cg_acl_groups', _('Compulsory field'), 'required');\n}\n\n$form->registerRule('exist', 'callback', 'testContactGroupExistence');\n$form->addRule('cg_name', _(\"Name is already in use\"), 'exist');\n$form->setRequiredNote(\"<font style='color: red;'>*</font>&nbsp;\" . _(\"Required fields\"));\n\n/*\n * Smarty template Init\n */\n$tpl = new Smarty();\n$tpl = initSmartyTpl($path, $tpl);\n\n$tpl->assign(\n    \"helpattr\",\n    'TITLE, \"' . _(\"Help\") . '\", CLOSEBTN, true, FIX, [this, 0, 5], BGCOLOR, \"#ffff99\", BORDERCOLOR, '\n    . '\"orange\", TITLEFONTCOLOR, \"black\", TITLEBGCOLOR, \"orange\", CLOSEBTNCOLORS, [\"\",\"black\", \"white\", \"red\"],'\n    . ' WIDTH, -300, SHADOW, true, TEXTALIGN, \"justify\"'\n);\n# prepare help texts\n$helptext = \"\";\ninclude_once(\"help.php\");\nforeach ($help as $key => $text) {\n    $helptext .= '<span style=\"display:none\" id=\"help:' . $key . '\">' . $text . '</span>' . \"\\n\";\n}\n$tpl->assign(\"helptext\", $helptext);\n\nif ($o == \"w\") {\n    /*\n     * Just watch a Contact Group information\n     */\n    if ($centreon->user->access->page($p) != 2) {\n        $form->addElement(\n            \"button\",\n            \"change\",\n            _(\"Modify\"),\n            array(\"onClick\" => \"javascript:window.location.href='?p=\" . $p . \"&o=c&cg_id=\" . $cg_id . \"'\")\n        );\n    }\n    $form->setDefaults($cg);\n    $form->freeze();\n} elseif ($o == \"c\") {\n    /*\n     * Modify a Contact Group information\n     */\n    $subC = $form->addElement('submit', 'submitC', _(\"Save\"), array(\"class\" => \"btc bt_success\"));\n    $res = $form->addElement('reset', 'reset', _(\"Reset\"), array(\"class\" => \"btc bt_default\"));\n    $form->setDefaults($cg);\n} elseif ($o == \"a\") {\n    /*\n     * Add a Contact Group information\n     */\n    $subA = $form->addElement('submit', 'submitA', _(\"Save\"), array(\"class\" => \"btc bt_success\"));\n    $res = $form->addElement('reset', 'reset', _(\"Reset\"), array(\"class\" => \"btc bt_default\"));\n}\n\n$valid = false;\nif ($form->validate()) {\n    $cgObj = $form->getElement('cg_id');\n\n    if ($form->getSubmitValue(\"submitA\")) {\n        $cgObj->setValue(insertContactGroupInDB());\n    } elseif ($form->getSubmitValue(\"submitC\")) {\n        updateContactGroupInDB($cgObj->getValue());\n    }\n\n    $o = null;\n    $valid = true;\n}\nif ($valid) {\n    require_once($path . \"listContactGroup.php\");\n} else {\n    $renderer = new HTML_QuickForm_Renderer_ArraySmarty($tpl, true);\n    $renderer->setRequiredTemplate('{$label}&nbsp;<font color=\"red\" size=\"1\">*</font>');\n    $renderer->setErrorTemplate('<font color=\"red\">{$error}</font><br />{$html}');\n    $form->accept($renderer);\n    $tpl->assign('form', $renderer->toArray());\n    $tpl->assign('o', $o);\n    $tpl->display(\"formContactGroup.ihtml\");\n}\n"], "fixing_code": ["<?php\n/*\n * Copyright 2005-2015 Centreon\n * Centreon is developped by : Julien Mathis and Romain Le Merlus under\n * GPL Licence 2.0.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by the Free Software\n * Foundation ; either version 2 of the License.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n * PARTICULAR PURPOSE. See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with\n * this program; if not, see <http://www.gnu.org/licenses>.\n *\n * Linking this program statically or dynamically with other modules is making a\n * combined work based on this program. Thus, the terms and conditions of the GNU\n * General Public License cover the whole combination.\n *\n * As a special exception, the copyright holders of this program give Centreon\n * permission to link this program with independent modules to produce an executable,\n * regardless of the license terms of these independent modules, and to copy and\n * distribute the resulting executable under terms of Centreon choice, provided that\n * Centreon also meet, for each linked independent module, the terms  and conditions\n * of the license of that module. An independent module is a module which is not\n * derived from this program. If you modify this program, you may extend this\n * exception to your version of the program, but you are not obliged to do so. If you\n * do not wish to do so, delete this exception statement from your version.\n *\n * For more information : contact@centreon.com\n *\n */\n\nif (!isset($centreon)) {\n    exit();\n}\n\nif (!$centreon->user->admin && $cg_id) {\n    $aclOptions = array(\n        'fields' => array('cg_id', 'cg_name'),\n        'keys' => array('cg_id'),\n        'get_row' => 'cg_name',\n        'conditions' => array('cg_id' => $cg_id)\n    );\n    $cgs = $acl->getContactGroupAclConf($aclOptions);\n    if (!count($cgs)) {\n        $msg = new CentreonMsg();\n        $msg->setImage(\"./img/icons/warning.png\");\n        $msg->setTextStyle(\"bold\");\n        $msg->setText(_('You are not allowed to access this contact group'));\n        return null;\n    }\n}\n\n$initialValues = array();\n\n/*\n * Database retrieve information for Contact\n */\n$cg = array();\nif (($o == \"c\" || $o == \"w\") && $cg_id) {\n    /*\n     * Get host Group information\n     */\n    $statement = $pearDB->prepare(\"SELECT * FROM `contactgroup` WHERE `cg_id` = :cg_id LIMIT 1\");\n    $statement->bindValue(':cg_id', (int) $cg_id, \\PDO::PARAM_INT);\n    $statement->execute();\n\n    /*\n     * Set base value\n     */\n    $cg = array_map(\"myDecode\", $statement->fetch(\\PDO::FETCH_ASSOC));\n}\n\n$attrsText = array(\"size\" => \"30\");\n$attrsAdvSelect = array(\"style\" => \"width: 300px; height: 100px;\");\n$attrsTextarea = array(\"rows\" => \"5\", \"cols\" => \"60\");\n$eTemplate = '<table><tr><td><div class=\"ams\">{label_2}</div>{unselected}</td><td align=\"center\">{add}<br /><br />'\n    . '<br />{remove}</td><td><div class=\"ams\">{label_3}</div>{selected}</td></tr></table>';\n$contactRoute = './include/common/webServices/rest/internal.php?object=centreon_configuration_contact&action=list';\n$attrContacts = array(\n    'datasourceOrigin' => 'ajax',\n    'availableDatasetRoute' => $contactRoute,\n    'multiple' => true,\n    'linkedObject' => 'centreonContact'\n);\n$aclgRoute = './include/common/webServices/rest/internal.php?object=centreon_administration_aclgroup&action=list';\n$attrAclgroups = array(\n    'datasourceOrigin' => 'ajax',\n    'availableDatasetRoute' => $aclgRoute,\n    'multiple' => true,\n    'linkedObject' => 'centreonAclGroup'\n);\n\n/*\n * form begin\n */\n$form = new HTML_QuickFormCustom('Form', 'post', \"?p=\" . $p);\nif ($o == \"a\") {\n    $form->addElement('header', 'title', _(\"Add a Contact Group\"));\n} elseif ($o == \"c\") {\n    $form->addElement('header', 'title', _(\"Modify a Contact Group\"));\n} elseif ($o == \"w\") {\n    $form->addElement('header', 'title', _(\"View a Contact Group\"));\n}\n\n/*\n * Contact basic information\n */\n$form->addElement('header', 'information', _(\"General Information\"));\n$form->addElement('text', 'cg_name', _(\"Contact Group Name\"), $attrsText);\n$form->addElement('text', 'cg_alias', _(\"Alias\"), $attrsText);\n\n/*\n * Contacts Selection\n */\n$form->addElement('header', 'notification', _(\"Relations\"));\n$contactRoute = './include/common/webServices/rest/internal.php?object=centreon_configuration_contact'\n    . '&action=defaultValues&target=contactgroup&field=cg_contacts&id=' . $cg_id;\n$attrContact1 = array_merge(\n    $attrContacts,\n    array('defaultDatasetRoute' => $contactRoute)\n);\n$form->addElement('select2', 'cg_contacts', _(\"Linked Contacts\"), array(), $attrContact1);\n\n\n/*\n * Acl group selection\n */\n$aclRoute = './include/common/webServices/rest/internal.php?object=centreon_administration_aclgroup'\n    . '&action=defaultValues&target=contactgroup&field=cg_acl_groups&id=' . $cg_id;\n$attrAclgroup1 = array_merge(\n    $attrAclgroups,\n    array('defaultDatasetRoute' => $aclRoute)\n);\n$form->addElement('select2', 'cg_acl_groups', _(\"Linked ACL groups\"), array(), $attrAclgroup1);\n\n\n/*\n * Further informations\n */\n$form->addElement('header', 'furtherInfos', _(\"Additional Information\"));\n$cgActivation[] = $form->createElement('radio', 'cg_activate', null, _(\"Enabled\"), '1');\n$cgActivation[] = $form->createElement('radio', 'cg_activate', null, _(\"Disabled\"), '0');\n$form->addGroup($cgActivation, 'cg_activate', _(\"Status\"), '&nbsp;');\n$form->setDefaults(array('cg_activate' => '1'));\n$form->addElement('textarea', 'cg_comment', _(\"Comments\"), $attrsTextarea);\n\n$form->addElement('hidden', 'cg_id');\n$redirect = $form->addElement('hidden', 'o');\n$redirect->setValue($o);\n$init = $form->addElement('hidden', 'initialValues');\n$init->setValue(serialize($initialValues));\n\n/*\n * Set rules\n */\n$form->applyFilter('__ALL__', 'myTrim');\n$form->addRule('cg_name', _(\"Compulsory Name\"), 'required');\n$form->addRule('cg_alias', _(\"Compulsory Alias\"), 'required');\n\nif (!$centreon->user->admin) {\n    $form->addRule('cg_acl_groups', _('Compulsory field'), 'required');\n}\n\n$form->registerRule('exist', 'callback', 'testContactGroupExistence');\n$form->addRule('cg_name', _(\"Name is already in use\"), 'exist');\n$form->setRequiredNote(\"<font style='color: red;'>*</font>&nbsp;\" . _(\"Required fields\"));\n\n/*\n * Smarty template Init\n */\n$tpl = new Smarty();\n$tpl = initSmartyTpl($path, $tpl);\n\n$tpl->assign(\n    \"helpattr\",\n    'TITLE, \"' . _(\"Help\") . '\", CLOSEBTN, true, FIX, [this, 0, 5], BGCOLOR, \"#ffff99\", BORDERCOLOR, '\n    . '\"orange\", TITLEFONTCOLOR, \"black\", TITLEBGCOLOR, \"orange\", CLOSEBTNCOLORS, [\"\",\"black\", \"white\", \"red\"],'\n    . ' WIDTH, -300, SHADOW, true, TEXTALIGN, \"justify\"'\n);\n# prepare help texts\n$helptext = \"\";\ninclude_once(\"help.php\");\nforeach ($help as $key => $text) {\n    $helptext .= '<span style=\"display:none\" id=\"help:' . $key . '\">' . $text . '</span>' . \"\\n\";\n}\n$tpl->assign(\"helptext\", $helptext);\n\nif ($o == \"w\") {\n    /*\n     * Just watch a Contact Group information\n     */\n    if ($centreon->user->access->page($p) != 2) {\n        $form->addElement(\n            \"button\",\n            \"change\",\n            _(\"Modify\"),\n            array(\"onClick\" => \"javascript:window.location.href='?p=\" . $p . \"&o=c&cg_id=\" . $cg_id . \"'\")\n        );\n    }\n    $form->setDefaults($cg);\n    $form->freeze();\n} elseif ($o == \"c\") {\n    /*\n     * Modify a Contact Group information\n     */\n    $subC = $form->addElement('submit', 'submitC', _(\"Save\"), array(\"class\" => \"btc bt_success\"));\n    $res = $form->addElement('reset', 'reset', _(\"Reset\"), array(\"class\" => \"btc bt_default\"));\n    $form->setDefaults($cg);\n} elseif ($o == \"a\") {\n    /*\n     * Add a Contact Group information\n     */\n    $subA = $form->addElement('submit', 'submitA', _(\"Save\"), array(\"class\" => \"btc bt_success\"));\n    $res = $form->addElement('reset', 'reset', _(\"Reset\"), array(\"class\" => \"btc bt_default\"));\n}\n\n$valid = false;\nif ($form->validate()) {\n    $cgObj = $form->getElement('cg_id');\n\n    if ($form->getSubmitValue(\"submitA\")) {\n        $cgObj->setValue(insertContactGroupInDB());\n    } elseif ($form->getSubmitValue(\"submitC\")) {\n        updateContactGroupInDB($cgObj->getValue());\n    }\n\n    $o = null;\n    $valid = true;\n}\nif ($valid) {\n    require_once($path . \"listContactGroup.php\");\n} else {\n    $renderer = new HTML_QuickForm_Renderer_ArraySmarty($tpl, true);\n    $renderer->setRequiredTemplate('{$label}&nbsp;<font color=\"red\" size=\"1\">*</font>');\n    $renderer->setErrorTemplate('<font color=\"red\">{$error}</font><br />{$html}');\n    $form->accept($renderer);\n    $tpl->assign('form', $renderer->toArray());\n    $tpl->assign('o', $o);\n    $tpl->display(\"formContactGroup.ihtml\");\n}\n"], "filenames": ["www/include/configuration/configObject/contactgroup/formContactGroup.php"], "buggy_code_start_loc": [67], "buggy_code_end_loc": [73], "fixing_code_start_loc": [67], "fixing_code_end_loc": [75], "type": "CWE-707", "message": "A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2022-3827", "sourceIdentifier": "cna@vuldb.com", "published": "2022-11-02T13:15:18.937", "lastModified": "2022-11-04T03:51:33.630", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:centreon:centreon:*:*:*:*:*:*:*:*", "versionEndExcluding": "22.10.0", "matchCriteriaId": "186AE182-7D28-4B6B-A962-CD62DA4AE89E"}]}]}], "references": [{"url": "https://github.com/centreon/centreon/commit/293b10628f7d9f83c6c82c78cf637cbe9b907369", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/centreon/centreon/pull/11869", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.212794", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/centreon/centreon/commit/293b10628f7d9f83c6c82c78cf637cbe9b907369"}}