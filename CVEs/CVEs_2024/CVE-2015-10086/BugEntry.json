{"buggy_code": ["<?php\nheader('Content-Type: text/html; charset=utf-8');\ndate_default_timezone_set('Europe/Berlin');\n// Load config (for MySQL db)\ninclude('config.php');\n// Connect to MySQL database\n$err_level = error_reporting(0);\n$my = new mysqli($my_host, $my_user, $my_pass);\nerror_reporting($err_level);\nif($my->connect_error)\n\tdie(\"Datenbankverbindung (MySQL) nicht m\u00f6glich.\");\n$my->set_charset('utf8');\n$my->select_db($my_name);\n// Start session\nsession_start();\n// Process input\nif(isset($_GET[\"login\"]) && isset($_GET[\"user\"]) && !empty($_GET[\"user\"]) && (isset($_POST[\"password\"]) || isset($_GET[\"password\"])) && (!empty($_POST[\"password\"]) || !empty($_GET[\"password\"])) ) {\n\tif(isset($_POST[\"password\"])) {\n\t\t$pw = $my->real_escape_string($_POST[\"password\"]);\n\t} else {\n\t\t$pw = $my->real_escape_string($_GET[\"password\"]);\n\t}\n\t$success = false;\n\t$query = \"SELECT `password` FROM `admin_users` WHERE `name` = '\".$_GET[\"user\"].\"';\";\n\t$result = $my->query($query);\n\tif($result->num_rows >= 1){\n\t\t// possible multiple users with same name but different password -> multiple rows in MySQL db\n\t\twhile($row = $result->fetch_assoc()){\n\t\t\tif(password_verify($pw, $row[\"password\"])) {\n\t\t\t\t$success = true;\n\t\t\t}\n\t\t}\n\t}\n\tif($success) {\n\t\t$_SESSION[\"auth_user\"] = \"ok\";\n\t\t$out = json_encode(array(\"success\" => \"User successfully authenticated\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"User or password incorrect\"));\n\t}\n} else if( // authenticated admin users can add new admin users\n\t\tisset($_SESSION[\"auth_user\"]) && ($_SESSION[\"auth_user\"]==\"ok\") \n\t\t&& isset($_GET[\"new\"]) && isset($_GET[\"user\"]) && !empty($_GET[\"user\"]) \n\t\t&& isset($_GET[\"password\"]) && !empty($_GET[\"password\"])) \n{\n\t$pw = password_hash($my->real_escape_string($_GET[\"password\"]), PASSWORD_DEFAULT);\n\t$query = \"INSERT INTO `ibis_server-php`.`admin_users` (`id`, `name`, `password`, `created`) \n\tVALUES (NULL, '\".$my->real_escape_string($_GET[\"user\"]).\"', '\".$pw.\"', CURRENT_TIMESTAMP);\";\n\t$result = $my->query($query);\n\tif($result) {\n\t\t$out = json_encode(array(\"success\" => \"User successfully created\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"User not created - Database problem :(\"));\n\t}\n} else if(isset($_GET[\"status\"])) { // is user logged in?\n\tif(isset($_SESSION[\"auth_user\"]) && $_SESSION[\"auth_user\"]==\"ok\") {\n\t\t$out = json_encode(array(\"status\" => \"ok\"));\n\t} else {\n\t\t$out = json_encode(array(\"status\" => \"bad\"));\n\t}\n} else if(isset($_GET[\"signout\"])) {\n\tif(isset($_SESSION[\"auth_user\"]) && $_SESSION[\"auth_user\"]==\"ok\" && session_destroy()) {\n\t\t$out = json_encode(array(\"success\" => \"User signed out\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"Sign out failed\"));\n\t}\n} else {\n\t$out = json_encode(array(\"error\" => \"Keine oder falsche Eingabe.\"));\n}\necho($out);\n$my->close();\n?>\n"], "fixing_code": ["<?php\nheader('Content-Type: text/html; charset=utf-8');\ndate_default_timezone_set('Europe/Berlin');\n// Load config (for MySQL db)\ninclude('config.php');\n// Connect to MySQL database\n$err_level = error_reporting(0);\n$my = new mysqli($my_host, $my_user, $my_pass);\nerror_reporting($err_level);\nif($my->connect_error)\n\tdie(\"Datenbankverbindung (MySQL) nicht m\u00f6glich.\");\n$my->set_charset('utf8');\n$my->select_db($my_name);\n// Start session\nsession_start();\n// Process input\nif(isset($_GET[\"login\"]) && isset($_GET[\"user\"]) && !empty($_GET[\"user\"]) && (isset($_POST[\"password\"]) || isset($_GET[\"password\"])) && (!empty($_POST[\"password\"]) || !empty($_GET[\"password\"])) ) {\n\tif(isset($_POST[\"password\"])) {\n\t\t$pw = $my->real_escape_string($_POST[\"password\"]);\n\t} else {\n\t\t$pw = $my->real_escape_string($_GET[\"password\"]);\n\t}\n\t$success = false;\n\t$query = \"SELECT `password` FROM `admin_users` WHERE `name` = '\".$my->real_escape_string($_GET[\"user\"]).\"';\";\n\t$result = $my->query($query);\n\tif($result->num_rows >= 1){\n\t\t// possible multiple users with same name but different password -> multiple rows in MySQL db\n\t\twhile($row = $result->fetch_assoc()){\n\t\t\tif(password_verify($pw, $row[\"password\"])) {\n\t\t\t\t$success = true;\n\t\t\t}\n\t\t}\n\t}\n\tif($success) {\n\t\t$_SESSION[\"auth_user\"] = \"ok\";\n\t\t$out = json_encode(array(\"success\" => \"User successfully authenticated\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"User or password incorrect\"));\n\t}\n} else if( // authenticated admin users can add new admin users\n\t\tisset($_SESSION[\"auth_user\"]) && ($_SESSION[\"auth_user\"]==\"ok\") \n\t\t&& isset($_GET[\"new\"]) && isset($_GET[\"user\"]) && !empty($_GET[\"user\"]) \n\t\t&& isset($_GET[\"password\"]) && !empty($_GET[\"password\"])) \n{\n\t$pw = password_hash($my->real_escape_string($_GET[\"password\"]), PASSWORD_DEFAULT);\n\t$query = \"INSERT INTO `ibis_server-php`.`admin_users` (`id`, `name`, `password`, `created`) \n\tVALUES (NULL, '\".$my->real_escape_string($_GET[\"user\"]).\"', '\".$pw.\"', CURRENT_TIMESTAMP);\";\n\t$result = $my->query($query);\n\tif($result) {\n\t\t$out = json_encode(array(\"success\" => \"User successfully created\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"User not created - Database problem :(\"));\n\t}\n} else if(isset($_GET[\"status\"])) { // is user logged in?\n\tif(isset($_SESSION[\"auth_user\"]) && $_SESSION[\"auth_user\"]==\"ok\") {\n\t\t$out = json_encode(array(\"status\" => \"ok\"));\n\t} else {\n\t\t$out = json_encode(array(\"status\" => \"bad\"));\n\t}\n} else if(isset($_GET[\"signout\"])) {\n\tif(isset($_SESSION[\"auth_user\"]) && $_SESSION[\"auth_user\"]==\"ok\" && session_destroy()) {\n\t\t$out = json_encode(array(\"success\" => \"User signed out\"));\n\t} else {\n\t\t$out = json_encode(array(\"error\" => \"Sign out failed\"));\n\t}\n} else {\n\t$out = json_encode(array(\"error\" => \"Keine oder falsche Eingabe.\"));\n}\necho($out);\n$my->close();\n?>\n"], "filenames": ["api1/login.php"], "buggy_code_start_loc": [24], "buggy_code_end_loc": [25], "fixing_code_start_loc": [24], "fixing_code_end_loc": [25], "type": "CWE-89", "message": "A vulnerability, which was classified as critical, was found in OpenCycleCompass server-php. Affected is an unknown function of the file api1/login.php. The manipulation of the argument user leads to sql injection. It is possible to launch the attack remotely. This product is using a rolling release to provide continious delivery. Therefore, no version details for affected nor updated releases are available. The name of the patch is fa0d9bcf81c711a88172ad0d37a842f029ac3782. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-221808.", "other": {"cve": {"id": "CVE-2015-10086", "sourceIdentifier": "cna@vuldb.com", "published": "2023-02-28T00:15:09.840", "lastModified": "2023-03-08T17:26:17.743", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as critical, was found in OpenCycleCompass server-php. Affected is an unknown function of the file api1/login.php. The manipulation of the argument user leads to sql injection. It is possible to launch the attack remotely. This product is using a rolling release to provide continious delivery. Therefore, no version details for affected nor updated releases are available. The name of the patch is fa0d9bcf81c711a88172ad0d37a842f029ac3782. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-221808."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:server-php_project:server-php:*:*:*:*:*:*:*:*", "versionEndExcluding": "2015-02-03", "matchCriteriaId": "33357ACA-484A-4532-9CC1-A01CB82E2413"}]}]}], "references": [{"url": "https://github.com/OpenCycleCompass/server-php/commit/fa0d9bcf81c711a88172ad0d37a842f029ac3782", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.221808", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.221808", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/OpenCycleCompass/server-php/commit/fa0d9bcf81c711a88172ad0d37a842f029ac3782"}}