{"buggy_code": ["/*\n * AArch64-specific system calls implementation\n *\n * Copyright (C) 2012 ARM Ltd.\n * Author: Catalin Marinas <catalin.marinas@arm.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include <linux/compiler.h>\n#include <linux/errno.h>\n#include <linux/fs.h>\n#include <linux/mm.h>\n#include <linux/export.h>\n#include <linux/sched.h>\n#include <linux/slab.h>\n#include <linux/syscalls.h>\n\nasmlinkage long sys_mmap(unsigned long addr, unsigned long len,\n\t\t\t unsigned long prot, unsigned long flags,\n\t\t\t unsigned long fd, off_t off)\n{\n\tif (offset_in_page(off) != 0)\n\t\treturn -EINVAL;\n\n\treturn sys_mmap_pgoff(addr, len, prot, flags, fd, off >> PAGE_SHIFT);\n}\n\n/*\n * Wrappers to pass the pt_regs argument.\n */\nasmlinkage long sys_rt_sigreturn_wrapper(void);\n#define sys_rt_sigreturn\tsys_rt_sigreturn_wrapper\n\n#undef __SYSCALL\n#define __SYSCALL(nr, sym)\t[nr] = sym,\n\n/*\n * The sys_call_table array must be 4K aligned to be accessible from\n * kernel/entry.S.\n */\nvoid *sys_call_table[__NR_syscalls] __aligned(4096) = {\n\t[0 ... __NR_syscalls - 1] = sys_ni_syscall,\n#include <asm/unistd.h>\n};\n"], "fixing_code": ["/*\n * AArch64-specific system calls implementation\n *\n * Copyright (C) 2012 ARM Ltd.\n * Author: Catalin Marinas <catalin.marinas@arm.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#include <linux/compiler.h>\n#include <linux/errno.h>\n#include <linux/fs.h>\n#include <linux/mm.h>\n#include <linux/export.h>\n#include <linux/sched.h>\n#include <linux/slab.h>\n#include <linux/syscalls.h>\n\nasmlinkage long sys_mmap(unsigned long addr, unsigned long len,\n\t\t\t unsigned long prot, unsigned long flags,\n\t\t\t unsigned long fd, off_t off)\n{\n\tif (offset_in_page(off) != 0)\n\t\treturn -EINVAL;\n\n\treturn sys_mmap_pgoff(addr, len, prot, flags, fd, off >> PAGE_SHIFT);\n}\n\n/*\n * Wrappers to pass the pt_regs argument.\n */\nasmlinkage long sys_rt_sigreturn_wrapper(void);\n#define sys_rt_sigreturn\tsys_rt_sigreturn_wrapper\n\n#undef __SYSCALL\n#define __SYSCALL(nr, sym)\t[nr] = sym,\n\n/*\n * The sys_call_table array must be 4K aligned to be accessible from\n * kernel/entry.S.\n */\nvoid * const sys_call_table[__NR_syscalls] __aligned(4096) = {\n\t[0 ... __NR_syscalls - 1] = sys_ni_syscall,\n#include <asm/unistd.h>\n};\n"], "filenames": ["arch/arm64/kernel/sys.c"], "buggy_code_start_loc": [52], "buggy_code_end_loc": [53], "fixing_code_start_loc": [52], "fixing_code_end_loc": [53], "type": "CWE-264", "message": "arch/arm64/kernel/sys.c in the Linux kernel before 4.0 allows local users to bypass the \"strict page permissions\" protection mechanism and modify the system-call table, and consequently gain privileges, by leveraging write access.", "other": {"cve": {"id": "CVE-2015-8967", "sourceIdentifier": "security@android.com", "published": "2016-12-08T21:59:01.257", "lastModified": "2023-01-19T16:07:48.723", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "arch/arm64/kernel/sys.c in the Linux kernel before 4.0 allows local users to bypass the \"strict page permissions\" protection mechanism and modify the system-call table, and consequently gain privileges, by leveraging write access."}, {"lang": "es", "value": "arch/arm64/kernel/sys.c en el kernel de Linux en versiones anteriores a 4.0 permiten a usuarios locales eludir el mecanismo de protecci\u00f3n de \"permisos de p\u00e1gina estricta\" y modificar la tabla de llamadas del sistema, y consecuentemente obtener privilegios, aprovechando el acceso de escritura."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-264"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:google:android:*:*:*:*:*:*:*:*", "versionEndIncluding": "7.0", "matchCriteriaId": "595E33EF-6B21-425B-929C-6B883FA50081"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.18.54", "matchCriteriaId": "1B11CA0B-DBC1-4894-8B51-99F89DF86974"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.19", "versionEndIncluding": "3.19.8", "matchCriteriaId": "D02683E7-DF4D-4965-817A-1416862D7959"}]}]}], "references": [{"url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=c623b33b4e9599c6ac5076f7db7369eb9869aa04", "source": "security@android.com", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "http://source.android.com/security/bulletin/2016-12-01.html", "source": "security@android.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/94680", "source": "security@android.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/torvalds/linux/commit/c623b33b4e9599c6ac5076f7db7369eb9869aa04", "source": "security@android.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/torvalds/linux/commit/c623b33b4e9599c6ac5076f7db7369eb9869aa04"}}