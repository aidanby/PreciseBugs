{"buggy_code": ["<?php\r\n\r\nnamespace Backend\\View\\Helper\\User;\r\n\r\nuse User\\Entity\\User;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass UserFormat extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(User $user, $search = null)\r\n    {\r\n        $view = $this->getView();\r\n        $html = '';\r\n\r\n        switch ($user->need('status')) {\r\n            case 'placeholder':\r\n                $attr = ' class=\"gray\"';\r\n                break;\r\n            default:\r\n                $attr = null;\r\n                break;\r\n        }\r\n\r\n        $html .= sprintf('<tr %s>', $attr);\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $user->need('uid'));\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $user->need('alias'));\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $view->t($user->getStatus()));\r\n\r\n        /* Email col */\r\n\r\n        $email = $user->get('email');\r\n\r\n        if ($email) {\r\n            $email = '<a href=\"mailto:' . $email . '\" class=\"unlined\" style=\"color: #333; opacity: 1.0;\">' . $email . '</a>';\r\n        } else {\r\n            $email = '-';\r\n        }\r\n\r\n        $html .= sprintf('<td class=\"email-col\">%s</td>',\r\n            $email);\r\n\r\n        /* Notes col */\r\n\r\n        $notes = $user->getMeta('notes');\r\n\r\n        if ($notes) {\r\n            if (strlen($notes) > 48) {\r\n                $notes = substr($notes, 0, 48) . '&hellip;';\r\n            }\r\n\r\n            $notes = '<span class=\"small-text\">' . $notes . '</span>';\r\n        } else {\r\n            $notes = '-';\r\n        }\r\n\r\n        $html .= sprintf('<td class=\"notes-col\">%s</td>',\r\n            $notes);\r\n\r\n        /* Actions col */\r\n\r\n        $html .= sprintf('<td class=\"actions-col no-print\"><a href=\"%s\" class=\"unlined gray symbolic symbolic-edit\">%s</a> &nbsp; <a href=\"%s\" class=\"unlined gray symbolic symbolic-booking\">%s</a></td>',\r\n            $view->url('backend/user/edit', ['uid' => $user->need('uid')], ['query' => ['search' => $search]]),\r\n            $view->t('Edit'),\r\n            $view->url('backend/booking', [], ['query' => ['search' => '(uid = ' . $user->need('uid') . ')']]),\r\n            $view->t('Bookings'));\r\n\r\n        $html .= '</tr>';\r\n\r\n        return $html;\r\n    }\r\n\r\n}", "<?php\r\n\r\n$this->setup(array(\r\n    'title' => 'Booking-Administration',\r\n    'panel' => 'centered-panel',\r\n    'back' => true,\r\n));\r\n\r\n?>\r\n\r\n<div class=\"padded centered-text\">\r\n    <p><?= sprintf($this->t('This %s has multiple reservations here:'), $this->option('subject.square.type')) ?></p>\r\n\r\n    <div class=\"sandbox\">\r\n        <?php foreach ($this->reservations as $rid => $reservation): ?>\r\n\r\n            <p>\r\n                <a href=\"<?= $this->url('backend/booking/edit', [], ['query' => array_merge($this->query, ['r' => $rid])]) ?>\" class=\"default-button squarebox-internal-link\">\r\n                    <span class=\"symbolic symbolic-booking\">\r\n                        <b><?= $this->timeRange($reservation->get('time_start'), $reservation->get('time_end'), '%s to %s') ?></b>\r\n\r\n                        <?= $this->t('from') ?> <?= $reservation->getExtra('booking')->getExtra('user')->get('alias') ?>\r\n                    </span>\r\n                </a>\r\n            </p>\r\n\r\n        <?php endforeach; ?>\r\n    </div>\r\n</div>", "<?php\r\n\r\n$this->setup(array(\r\n    'title' => 'Player\\'s names',\r\n    'panel' => 'centered-panel',\r\n    'back' => true,\r\n));\r\n\r\n?>\r\n\r\n<div>\r\n    <h1><?= $this->t('Player\\'s names') ?></h1>\r\n\r\n    <div class=\"separator-small\"></div>\r\n\r\n    <?php\r\n\r\n    printf('<p>%s <a href=\"%s\">%s</a></p>',\r\n        $this->translate('Booked by'),\r\n        $this->url('backend/user/edit', ['uid' => $this->user->need('uid')]),\r\n        $this->user->need('alias'));\r\n\r\n    echo '<div class=\"separator separator-line\"></div>';\r\n\r\n    echo '<table class=\"default-table middle-table\" style=\"margin-left: 0;\">';\r\n\r\n    $i = 1;\r\n\r\n    foreach ($this->players as $player) {\r\n        echo '<tr>';\r\n\r\n        printf('<td>%s.</td>',\r\n            $i++);\r\n\r\n        if (isset($player['name'])) {\r\n            printf('<td>%s</td>',\r\n                $player['name']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['email'])) {\r\n            printf('<td><span class=\"gray\">%s:</span> <a href=\"mailto:%s\">%s</a></td>',\r\n                $this->translate('Email'),\r\n                $player['email'], $player['email']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['phone'])) {\r\n            printf('<td><span class=\"gray\">%s:</span> %s</td>',\r\n                $this->translate('Phone'),\r\n                $player['phone']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['user']) && isset($player['userMatch'])) {\r\n            $user = $player['user'];\r\n            $userMatch = $player['userMatch'];\r\n\r\n            printf('<td><span class=\"gray\">%s %s:</span> <a href=\"%s\">%s</a></td>',\r\n                $this->translate('User matched by'),\r\n                $this->translate(ucfirst($userMatch)),\r\n                $this->url('backend/user/edit', ['uid' => $user->need('uid')]),\r\n                $user->need('alias'));\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        echo '</tr>';\r\n    }\r\n\r\n    echo '</table>';\r\n\r\n    ?>\r\n</div>\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Square\\Entity\\Square;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass FreeForPrivileged extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams, Square $square)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount == 0) {\r\n\t        $labelFree = $square->getMeta('label.free', $this->view->t('Free'));\r\n\r\n            return $view->calendarCellLink($labelFree, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free');\r\n        } else if ($reservationsCount == 1) {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n\r\n            $cellLabel = $booking->needExtra('user')->need('alias');\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            return $view->calendarCellLink($cellLabel, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free cc-free-partially' . $cellGroup);\r\n        } else {\r\n\t        $labelFree = $square->getMeta('label.free', 'Still free');\r\n\r\n            return $view->calendarCellLink($labelFree, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free cc-free-partially');\r\n        }\r\n    }\r\n\r\n}\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Booking\\Service\\BookingStatusService;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass OccupiedForPrivileged extends AbstractHelper\r\n{\r\n\r\n    protected $bookingStatusService;\r\n\r\n    public function __construct(BookingStatusService $bookingStatusService)\r\n    {\r\n        $this->bookingStatusService = $bookingStatusService;\r\n    }\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount > 1) {\r\n            return $view->calendarCellLink($this->view->t('Occupied'), $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-single');\r\n        } else {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n            $bookingStatusColor = $this->bookingStatusService->getStatusColor($booking->getBillingStatus());\r\n\r\n            if ($bookingStatusColor) {\r\n                $cellStyle = 'outline: solid 3px ' . $bookingStatusColor;\r\n            } else {\r\n                $cellStyle = null;\r\n            }\r\n\r\n            $cellLabel = $booking->needExtra('user')->need('alias');\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            switch ($booking->need('status')) {\r\n                case 'single':\r\n                    return $view->calendarCellLink($cellLabel, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-single' . $cellGroup, null, $cellStyle);\r\n                case 'subscription':\r\n                    return $view->calendarCellLink($cellLabel, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-multiple' . $cellGroup, null, $cellStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Square\\Entity\\Square;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass OccupiedForVisitors extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams, Square $square, $user = null)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount > 1) {\r\n            return $view->calendarCellLink($this->view->t('Occupied'), $view->url('square', [], $cellLinkParams), 'cc-single');\r\n        } else {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n\r\n            if ($square->getMeta('public_names', 'false') == 'true') {\r\n                $cellLabel = $booking->needExtra('user')->need('alias');\r\n            } else if ($square->getMeta('private_names', 'false') == 'true' && $user) {\r\n                $cellLabel = $booking->needExtra('user')->need('alias');\r\n            } else {\r\n                $cellLabel = null;\r\n            }\r\n\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            switch ($booking->need('status')) {\r\n                case 'single':\r\n                    if (! $cellLabel) {\r\n                        $cellLabel = $this->view->t('Occupied');\r\n                    }\r\n\r\n                    return $view->calendarCellLink($cellLabel, $view->url('square', [], $cellLinkParams), 'cc-single' . $cellGroup);\r\n                case 'subscription':\r\n                    if (! $cellLabel) {\r\n                        $cellLabel = $this->view->t('Subscription');\r\n                    }\r\n\r\n                    return $view->calendarCellLink($cellLabel, $view->url('square', [], $cellLinkParams), 'cc-multiple' . $cellGroup);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n", "<table style=\"height: 100%;\">\r\n    <tr>\r\n        <td class=\"responsive-pass-4\" style=\"padding-right: 12px; border-right: solid 1px #CCC;\">\r\n            <div id=\"userpanel-status\" class=\"no-wrap\">\r\n                <?= sprintf($this->t('Online as %s'), $this->user->need('alias')) ?>\r\n            </div>\r\n        </td>\r\n\r\n        <td class=\"responsive-pass-4\" style=\"padding-right: 12px;\"></td>\r\n\r\n        <?php if ($this->user->can('admin.see-menu')): ?>\r\n\r\n            <?php $this->headScript()->appendFile($this->basePath('js/controller/frontend/index.admin.min.js')) ?>\r\n\r\n            <td class=\"responsive-pass-4\" style=\"padding-right: 12px; border-right: solid 1px #CCC;\">\r\n                <a href=\"<?= $this->url('backend') ?>\" id=\"admin-menu-link\" class=\"default-button\"><span class=\"symbolic symbolic-config\"><?= $this->t('Administration') ?></span></a>\r\n            </td>\r\n\r\n            <td class=\"responsive-pass-4\" style=\"padding-right: 12px;\"></td>\r\n\r\n        <?php endif; ?>\r\n\r\n        <td>\r\n            <a href=\"<?= $this->url('user/bookings') ?>\" class=\"default-button\" data-tooltip=\"<?= $this->userLastBookings($this->user) ?>\"><span class=\"symbolic symbolic-booking\"><?= $this->t('My bookings') ?></span></a>\r\n        </td>\r\n\r\n        <td>\r\n            <a href=\"<?= $this->url('user/settings') ?>\" class=\"default-button\"><span class=\"symbolic symbolic-user\"><?= $this->t('My account') ?></span></a>\r\n        </td>\r\n\r\n        <td style=\"padding-right: 12px;\">\r\n            <a href=\"<?= $this->url('user/logout') ?>\" class=\"default-button\"><span class=\"symbolic symbolic-off\"><?= $this->t('Logout') ?></span></a>\r\n        </td>\r\n\r\n        <td style=\"padding-left: 12px; border-left: solid 1px #CCC;\">\r\n            <a href=\"<?= $this->url('service/help') ?>\" class=\"default-button\" data-tooltip=\"<?= sprintf($this->t('Get additional %shelp and information%s'), '<b>', '</b>') ?>\"><b>?</b></a>\r\n        </td>\r\n    </tr>\r\n</table>"], "fixing_code": ["<?php\r\n\r\nnamespace Backend\\View\\Helper\\User;\r\n\r\nuse User\\Entity\\User;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass UserFormat extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(User $user, $search = null)\r\n    {\r\n        $view = $this->getView();\r\n        $html = '';\r\n\r\n        switch ($user->need('status')) {\r\n            case 'placeholder':\r\n                $attr = ' class=\"gray\"';\r\n                break;\r\n            default:\r\n                $attr = null;\r\n                break;\r\n        }\r\n\r\n        $html .= sprintf('<tr %s>', $attr);\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $user->need('uid'));\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $view->escapeHtml($user->need('alias')));\r\n\r\n        $html .= sprintf('<td>%s</td>',\r\n            $view->t($user->getStatus()));\r\n\r\n        /* Email col */\r\n\r\n        $email = $user->get('email');\r\n\r\n        if ($email) {\r\n            $email = '<a href=\"mailto:' . $email . '\" class=\"unlined\" style=\"color: #333; opacity: 1.0;\">' . $email . '</a>';\r\n        } else {\r\n            $email = '-';\r\n        }\r\n\r\n        $html .= sprintf('<td class=\"email-col\">%s</td>',\r\n            $email);\r\n\r\n        /* Notes col */\r\n\r\n        $notes = $user->getMeta('notes');\r\n\r\n        if ($notes) {\r\n            if (strlen($notes) > 48) {\r\n                $notes = substr($notes, 0, 48) . '&hellip;';\r\n            }\r\n\r\n            $notes = '<span class=\"small-text\">' . $notes . '</span>';\r\n        } else {\r\n            $notes = '-';\r\n        }\r\n\r\n        $html .= sprintf('<td class=\"notes-col\">%s</td>',\r\n            $notes);\r\n\r\n        /* Actions col */\r\n\r\n        $html .= sprintf('<td class=\"actions-col no-print\"><a href=\"%s\" class=\"unlined gray symbolic symbolic-edit\">%s</a> &nbsp; <a href=\"%s\" class=\"unlined gray symbolic symbolic-booking\">%s</a></td>',\r\n            $view->url('backend/user/edit', ['uid' => $user->need('uid')], ['query' => ['search' => $search]]),\r\n            $view->t('Edit'),\r\n            $view->url('backend/booking', [], ['query' => ['search' => '(uid = ' . $user->need('uid') . ')']]),\r\n            $view->t('Bookings'));\r\n\r\n        $html .= '</tr>';\r\n\r\n        return $html;\r\n    }\r\n\r\n}\r\n", "<?php\r\n\r\n$this->setup(array(\r\n    'title' => 'Booking-Administration',\r\n    'panel' => 'centered-panel',\r\n    'back' => true,\r\n));\r\n\r\n?>\r\n\r\n<div class=\"padded centered-text\">\r\n    <p><?= sprintf($this->t('This %s has multiple reservations here:'), $this->option('subject.square.type')) ?></p>\r\n\r\n    <div class=\"sandbox\">\r\n        <?php foreach ($this->reservations as $rid => $reservation): ?>\r\n\r\n            <p>\r\n                <a href=\"<?= $this->url('backend/booking/edit', [], ['query' => array_merge($this->query, ['r' => $rid])]) ?>\" class=\"default-button squarebox-internal-link\">\r\n                    <span class=\"symbolic symbolic-booking\">\r\n                        <b><?= $this->timeRange($reservation->get('time_start'), $reservation->get('time_end'), '%s to %s') ?></b>\r\n\r\n                        <?= $this->t('from') ?> <?= $this->escapeHtml($reservation->getExtra('booking')->getExtra('user')->get('alias')) ?>\r\n                    </span>\r\n                </a>\r\n            </p>\r\n\r\n        <?php endforeach; ?>\r\n    </div>\r\n</div>\r\n", "<?php\r\n\r\n$this->setup(array(\r\n    'title' => 'Player\\'s names',\r\n    'panel' => 'centered-panel',\r\n    'back' => true,\r\n));\r\n\r\n?>\r\n\r\n<div>\r\n    <h1><?= $this->t('Player\\'s names') ?></h1>\r\n\r\n    <div class=\"separator-small\"></div>\r\n\r\n    <?php\r\n\r\n    printf('<p>%s <a href=\"%s\">%s</a></p>',\r\n        $this->translate('Booked by'),\r\n        $this->url('backend/user/edit', ['uid' => $this->user->need('uid')]),\r\n        $this->escapeHtml($this->user->need('alias')));\r\n\r\n    echo '<div class=\"separator separator-line\"></div>';\r\n\r\n    echo '<table class=\"default-table middle-table\" style=\"margin-left: 0;\">';\r\n\r\n    $i = 1;\r\n\r\n    foreach ($this->players as $player) {\r\n        echo '<tr>';\r\n\r\n        printf('<td>%s.</td>',\r\n            $i++);\r\n\r\n        if (isset($player['name'])) {\r\n            printf('<td>%s</td>',\r\n                $player['name']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['email'])) {\r\n            printf('<td><span class=\"gray\">%s:</span> <a href=\"mailto:%s\">%s</a></td>',\r\n                $this->translate('Email'),\r\n                $player['email'], $player['email']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['phone'])) {\r\n            printf('<td><span class=\"gray\">%s:</span> %s</td>',\r\n                $this->translate('Phone'),\r\n                $player['phone']);\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        if (isset($player['user']) && isset($player['userMatch'])) {\r\n            $user = $player['user'];\r\n            $userMatch = $player['userMatch'];\r\n\r\n            printf('<td><span class=\"gray\">%s %s:</span> <a href=\"%s\">%s</a></td>',\r\n                $this->translate('User matched by'),\r\n                $this->translate(ucfirst($userMatch)),\r\n                $this->url('backend/user/edit', ['uid' => $user->need('uid')]),\r\n                $this->escapeHtml($user->need('alias')));\r\n        } else {\r\n            echo '<td></td>';\r\n        }\r\n\r\n        echo '</tr>';\r\n    }\r\n\r\n    echo '</table>';\r\n\r\n    ?>\r\n</div>\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Square\\Entity\\Square;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass FreeForPrivileged extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams, Square $square)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount == 0) {\r\n\t        $labelFree = $square->getMeta('label.free', $this->view->t('Free'));\r\n\r\n            return $view->calendarCellLink($labelFree, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free');\r\n        } else if ($reservationsCount == 1) {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n\r\n            $cellLabel = $booking->needExtra('user')->need('alias');\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            return $view->calendarCellLink($view->escapeHtml($cellLabel), $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free cc-free-partially' . $cellGroup);\r\n        } else {\r\n\t        $labelFree = $square->getMeta('label.free', 'Still free');\r\n\r\n            return $view->calendarCellLink($labelFree, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-free cc-free-partially');\r\n        }\r\n    }\r\n\r\n}\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Booking\\Service\\BookingStatusService;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass OccupiedForPrivileged extends AbstractHelper\r\n{\r\n\r\n    protected $bookingStatusService;\r\n\r\n    public function __construct(BookingStatusService $bookingStatusService)\r\n    {\r\n        $this->bookingStatusService = $bookingStatusService;\r\n    }\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount > 1) {\r\n            return $view->calendarCellLink($this->view->t('Occupied'), $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-single');\r\n        } else {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n            $bookingStatusColor = $this->bookingStatusService->getStatusColor($booking->getBillingStatus());\r\n\r\n            if ($bookingStatusColor) {\r\n                $cellStyle = 'outline: solid 3px ' . $bookingStatusColor;\r\n            } else {\r\n                $cellStyle = null;\r\n            }\r\n\r\n            $cellLabel = $booking->needExtra('user')->need('alias');\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            switch ($booking->need('status')) {\r\n                case 'single':\r\n                    return $view->calendarCellLink($view->escapeHtml($cellLabel), $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-single' . $cellGroup, null, $cellStyle);\r\n                case 'subscription':\r\n                    return $view->calendarCellLink($cellLabel, $view->url('backend/booking/edit', [], $cellLinkParams), 'cc-multiple' . $cellGroup, null, $cellStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n", "<?php\r\n\r\nnamespace Calendar\\View\\Helper\\Cell\\Render;\r\n\r\nuse Square\\Entity\\Square;\r\nuse Zend\\View\\Helper\\AbstractHelper;\r\n\r\nclass OccupiedForVisitors extends AbstractHelper\r\n{\r\n\r\n    public function __invoke(array $reservations, array $cellLinkParams, Square $square, $user = null)\r\n    {\r\n        $view = $this->getView();\r\n\r\n        $reservationsCount = count($reservations);\r\n\r\n        if ($reservationsCount > 1) {\r\n            return $view->calendarCellLink($this->view->t('Occupied'), $view->url('square', [], $cellLinkParams), 'cc-single');\r\n        } else {\r\n            $reservation = current($reservations);\r\n            $booking = $reservation->needExtra('booking');\r\n\r\n            if ($square->getMeta('public_names', 'false') == 'true') {\r\n                $cellLabel = $booking->needExtra('user')->need('alias');\r\n            } else if ($square->getMeta('private_names', 'false') == 'true' && $user) {\r\n                $cellLabel = $booking->needExtra('user')->need('alias');\r\n            } else {\r\n                $cellLabel = null;\r\n            }\r\n\r\n            $cellGroup = ' cc-group-' . $booking->need('bid');\r\n\r\n            switch ($booking->need('status')) {\r\n                case 'single':\r\n                    if (! $cellLabel) {\r\n                        $cellLabel = $this->view->t('Occupied');\r\n                    }\r\n\r\n                    return $view->calendarCellLink($view->escapeHtml($cellLabel), $view->url('square', [], $cellLinkParams), 'cc-single' . $cellGroup);\r\n                case 'subscription':\r\n                    if (! $cellLabel) {\r\n                        $cellLabel = $this->view->t('Subscription');\r\n                    }\r\n\r\n                    return $view->calendarCellLink($view->escapeHtml($cellLabel), $view->url('square', [], $cellLinkParams), 'cc-multiple' . $cellGroup);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n", "<table style=\"height: 100%;\">\r\n    <tr>\r\n        <td class=\"responsive-pass-4\" style=\"padding-right: 12px; border-right: solid 1px #CCC;\">\r\n            <div id=\"userpanel-status\" class=\"no-wrap\">\r\n                <?= sprintf($this->t('Online as %s'), $this->escapeHtml($this->user->need('alias'))) ?>\r\n            </div>\r\n        </td>\r\n\r\n        <td class=\"responsive-pass-4\" style=\"padding-right: 12px;\"></td>\r\n\r\n        <?php if ($this->user->can('admin.see-menu')): ?>\r\n\r\n            <?php $this->headScript()->appendFile($this->basePath('js/controller/frontend/index.admin.min.js')) ?>\r\n\r\n            <td class=\"responsive-pass-4\" style=\"padding-right: 12px; border-right: solid 1px #CCC;\">\r\n                <a href=\"<?= $this->url('backend') ?>\" id=\"admin-menu-link\" class=\"default-button\"><span class=\"symbolic symbolic-config\"><?= $this->t('Administration') ?></span></a>\r\n            </td>\r\n\r\n            <td class=\"responsive-pass-4\" style=\"padding-right: 12px;\"></td>\r\n\r\n        <?php endif; ?>\r\n\r\n        <td>\r\n            <a href=\"<?= $this->url('user/bookings') ?>\" class=\"default-button\" data-tooltip=\"<?= $this->userLastBookings($this->user) ?>\"><span class=\"symbolic symbolic-booking\"><?= $this->t('My bookings') ?></span></a>\r\n        </td>\r\n\r\n        <td>\r\n            <a href=\"<?= $this->url('user/settings') ?>\" class=\"default-button\"><span class=\"symbolic symbolic-user\"><?= $this->t('My account') ?></span></a>\r\n        </td>\r\n\r\n        <td style=\"padding-right: 12px;\">\r\n            <a href=\"<?= $this->url('user/logout') ?>\" class=\"default-button\"><span class=\"symbolic symbolic-off\"><?= $this->t('Logout') ?></span></a>\r\n        </td>\r\n\r\n        <td style=\"padding-left: 12px; border-left: solid 1px #CCC;\">\r\n            <a href=\"<?= $this->url('service/help') ?>\" class=\"default-button\" data-tooltip=\"<?= sprintf($this->t('Get additional %shelp and information%s'), '<b>', '</b>') ?>\"><b>?</b></a>\r\n        </td>\r\n    </tr>\r\n</table>\r\n"], "filenames": ["module/Backend/src/Backend/View/Helper/User/UserFormat.php", "module/Backend/view/backend/booking/edit-choice.phtml", "module/Backend/view/backend/booking/players.phtml", "module/Calendar/src/Calendar/View/Helper/Cell/Render/FreeForPrivileged.php", "module/Calendar/src/Calendar/View/Helper/Cell/Render/OccupiedForPrivileged.php", "module/Calendar/src/Calendar/View/Helper/Cell/Render/OccupiedForVisitors.php", "module/Frontend/view/frontend/index/userpanel.online.phtml"], "buggy_code_start_loc": [31, 22, 21, 28, 42, 39, 5], "buggy_code_end_loc": [80, 30, 67, 29, 43, 46, 40], "fixing_code_start_loc": [31, 22, 21, 28, 42, 39, 5], "fixing_code_end_loc": [80, 30, 67, 29, 43, 46, 40], "type": "CWE-79", "message": "A vulnerability classified as problematic has been found in ep3-bs up to 1.7.x. This affects an unknown part. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.8.0 is able to address this issue. The name of the patch is ef49e709c8adecc3a83cdc6164a67162991d2213. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216495.", "other": {"cve": {"id": "CVE-2022-4637", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-21T22:15:08.480", "lastModified": "2022-12-28T21:41:21.920", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in ep3-bs up to 1.7.x. This affects an unknown part. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.8.0 is able to address this issue. The name of the patch is ef49e709c8adecc3a83cdc6164a67162991d2213. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216495."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ep-3bookingsystem:ep-3_bookingsystem:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.8.0", "matchCriteriaId": "B1CDEC05-C965-4BCD-920E-DCEBBD9D376D"}]}]}], "references": [{"url": "https://github.com/tkrebs/ep3-bs/commit/ef49e709c8adecc3a83cdc6164a67162991d2213", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tkrebs/ep3-bs/issues/564", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/tkrebs/ep3-bs/releases/tag/1.8.0", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216495", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/tkrebs/ep3-bs/commit/ef49e709c8adecc3a83cdc6164a67162991d2213"}}