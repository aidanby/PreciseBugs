{"buggy_code": ["<?php\n/* Copyright (C) 2001-2004 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003 Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2018 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2012      Marcos Garc\u00eda        <marcosgdf@gmail.com>\n * Copyright (C) 2012-2018 Philippe Grand       <philippe.grand@atoo-net.com>\n * Copyright (C) 2015-2016 Alexandre Spangaro   <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/adherents/card.php\n *       \\ingroup    member\n *       \\brief      Page of member\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/subscription.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\n\n// Load translation files required by the page\n$langs->loadLangs(array(\"companies\",\"bills\",\"members\",\"users\",\"other\"));\n\n$action=GETPOST('action','alpha');\n$cancel=GETPOST('cancel','alpha');\n$backtopage=GETPOST('backtopage','alpha');\n$confirm=GETPOST('confirm','alpha');\n$rowid=GETPOST('rowid','int');\n$id=GETPOST('id')?GETPOST('id','int'):$rowid;\n$typeid=GETPOST('typeid','int');\n$userid=GETPOST('userid','int');\n$socid=GETPOST('socid','int');\n\nif (! empty($conf->mailmanspip->enabled))\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/mailmanspip/class/mailmanspip.class.php';\n\n\t$langs->load('mailmanspip');\n\n\t$mailmanspip = new MailmanSpip($db);\n}\n\n$object = new Adherent($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label($object->table_element);\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$object->getCanvas($id);\n$canvas = $object->canvas?$object->canvas:GETPOST(\"canvas\");\n$objcanvas=null;\nif (! empty($canvas))\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n\t$objcanvas = new Canvas($db, $action);\n\t$objcanvas->getCanvas('adherent', 'membercard', $canvas);\n}\n\n// Security check\n$result=restrictedArea($user, 'adherent', $id, '', '', 'fk_soc', 'rowid', $objcanvas);\n\nif ($id > 0)\n{\n\t// Load member\n\t$result = $object->fetch($id);\n\n\t// Define variables to know what current user can do on users\n\t$canadduser=($user->admin || $user->rights->user->user->creer);\n\t// Define variables to know what current user can do on properties of user linked to edited member\n\tif ($object->user_id)\n\t{\n\t\t// $ User is the user who edits, $ object->user_id is the id of the related user in the edited member\n\t\t$caneditfielduser=((($user->id == $object->user_id) && $user->rights->user->self->creer)\n\t\t\t\t|| (($user->id != $object->user_id) && $user->rights->user->user->creer));\n\t\t$caneditpassworduser=((($user->id == $object->user_id) && $user->rights->user->self->password)\n\t\t\t\t|| (($user->id != $object->user_id) && $user->rights->user->user->password));\n\t}\n}\n\n// Define variables to determine what the current user can do on the members\n$canaddmember=$user->rights->adherent->creer;\n// Define variables to determine what the current user can do on the properties of a member\nif ($id)\n{\n\t$caneditfieldmember=$user->rights->adherent->creer;\n}\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('membercard','globalcard'));\n\n\n\n/*\n * \tActions\n */\n\n$parameters=array('id'=>$id, 'rowid'=>$id, 'objcanvas'=>$objcanvas, 'confirm'=>$confirm);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n\tif ($cancel)\n\t{\n\t\tif (! empty($backtopage))\n\t\t{\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t\t$action='';\n\t}\n\n\tif ($action == 'setuserid' && ($user->rights->user->self->creer || $user->rights->user->user->creer))\n\t{\n\t\t$error=0;\n\t\tif (empty($user->rights->user->user->creer))\t// If can edit only itself user, we can link to itself only\n\t\t{\n\t\t\tif ($userid != $user->id && $userid != $object->user_id)\n\t\t\t{\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorUserPermissionAllowsToLinksToItselfOnly\"), null, 'errors');\n\t\t\t}\n\t\t}\n\n\t\tif (! $error)\n\t\t{\n\t\t\tif ($userid != $object->user_id)\t// If link differs from currently in database\n\t\t\t{\n\t\t\t\t$result=$object->setUserId($userid);\n\t\t\t\tif ($result < 0) dol_print_error($object->db,$object->error);\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'setsocid')\n\t{\n\t\t$error=0;\n\t\tif (! $error)\n\t\t{\n\t\t\tif ($socid != $object->fk_soc)\t// If link differs from currently in database\n\t\t\t{\n\t\t\t\t$sql =\"SELECT rowid FROM \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t\t$sql.=\" WHERE fk_soc = '\".$socid.\"'\";\n\t\t\t\t$sql.=\" AND entity = \".$conf->entity;\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql)\n\t\t\t\t{\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\tif ($obj && $obj->rowid > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$othermember=new Adherent($db);\n\t\t\t\t\t\t$othermember->fetch($obj->rowid);\n\t\t\t\t\t\t$thirdparty=new Societe($db);\n\t\t\t\t\t\t$thirdparty->fetch($socid);\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorMemberIsAlreadyLinkedToThisThirdParty\",$othermember->getFullName($langs),$othermember->login,$thirdparty->name), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (! $error)\n\t\t\t\t{\n\t\t\t\t\t$result=$object->setThirdPartyId($socid);\n\t\t\t\t\tif ($result < 0) dol_print_error($object->db,$object->error);\n\t\t\t\t\t$action='';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Create user from a member\n\tif ($action == 'confirm_create_user' && $confirm == 'yes' && $user->rights->user->user->creer)\n\t{\n\t\tif ($result > 0)\n\t\t{\n\t\t\t// Creation user\n\t\t\t$nuser = new User($db);\n\t\t\t$result=$nuser->create_from_member($object,GETPOST('login'));\n\n\t\t\tif ($result < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans($nuser->error), null, 'errors');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\t// Create third party from a member\n\tif ($action == 'confirm_create_thirdparty' && $confirm == 'yes' && $user->rights->societe->creer)\n\t{\n\t\tif ($result > 0)\n\t\t{\n\t\t\t// User creation\n\t\t\t$company = new Societe($db);\n\t\t\t$result=$company->create_from_member($object, GETPOST('companyname', 'alpha'), GETPOST('companyalias', 'alpha'));\n\n\t\t\tif ($result < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans($company->error), null, 'errors');\n\t\t\t\tsetEventMessages($company->error, $company->errors, 'errors');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\tif ($action == 'update' && ! $cancel && $user->rights->adherent->creer)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\t$birthdate='';\n\t\tif (isset($_POST[\"birthday\"]) && $_POST[\"birthday\"]\n\t\t\t\t&& isset($_POST[\"birthmonth\"]) && $_POST[\"birthmonth\"]\n\t\t\t\t&& isset($_POST[\"birthyear\"]) && $_POST[\"birthyear\"])\n\t\t{\n\t\t\t$birthdate=dol_mktime(12, 0, 0, $_POST[\"birthmonth\"], $_POST[\"birthday\"], $_POST[\"birthyear\"]);\n\t\t}\n\t\t$lastname=$_POST[\"lastname\"];\n\t\t$firstname=$_POST[\"firstname\"];\n\t\t$societe=$_POST[\"societe\"];\n\t\t$morphy=$_POST[\"morphy\"];\n\t\t$login=$_POST[\"login\"];\n\t\tif ($morphy != 'mor' && empty($lastname)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Lastname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && (!isset($firstname) || $firstname=='')) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Firstname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy == 'mor' && empty($societe)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Company\")), null, 'errors');\n\t\t}\n\t\t// Test si le login existe deja\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tif (empty($login)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Login\")), null, 'errors');\n\t\t\t}\n\t\t}\n\t\t// Create new object\n\t\tif ($result > 0 && ! $error)\n\t\t{\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t// Change values\n\t\t\t$object->civility_id = trim(GETPOST(\"civility_id\",'alpha'));\n\t\t\t$object->firstname   = trim(GETPOST(\"firstname\",'alpha'));\n\t\t\t$object->lastname    = trim(GETPOST(\"lastname\",'alpha'));\n\t\t\t$object->login       = trim(GETPOST(\"login\",'alpha'));\n\t\t\t$object->pass        = trim(GETPOST(\"pass\",'alpha'));\n\n\t\t\t$object->societe     = trim(GETPOST(\"societe\",'alpha'));\n\t\t\t$object->company     = trim(GETPOST(\"societe\",'alpha'));\n\n\t\t\t$object->address     = trim(GETPOST(\"address\",'alpha'));\n\t\t\t$object->zip         = trim(GETPOST(\"zipcode\",'alpha'));\n\t\t\t$object->town        = trim(GETPOST(\"town\",'alpha'));\n\t\t\t$object->state_id    = GETPOST(\"state_id\",'int');\n\t\t\t$object->country_id  = GETPOST(\"country_id\",'int');\n\n\t\t\t$object->phone       = trim(GETPOST(\"phone\",'alpha'));\n\t\t\t$object->phone_perso = trim(GETPOST(\"phone_perso\",'alpha'));\n\t\t\t$object->phone_mobile= trim(GETPOST(\"phone_mobile\",'alpha'));\n\t\t\t$object->email       = preg_replace('/\\s+/', '', GETPOST(\"member_email\",'alpha'));\n\t\t\t$object->skype       = trim(GETPOST(\"skype\",'alpha'));\n\t\t\t$object->birth       = $birthdate;\n\n\t\t\t$object->typeid      = GETPOST(\"typeid\",'int');\n\t\t\t//$object->note        = trim(GETPOST(\"comment\",\"alpha\"));\n\t\t\t$object->morphy      = GETPOST(\"morphy\",'alpha');\n\n\t\t\tif (GETPOST('deletephoto','alpha')) $object->photo='';\n\t\t\telseif (! empty($_FILES['photo']['name'])) $object->photo  = dol_sanitizeFileName($_FILES['photo']['name']);\n\n\t\t\t// Get status and public property\n\t\t\t$object->statut      = GETPOST(\"statut\",'alpha');\n\t\t\t$object->public      = GETPOST(\"public\",'alpha');\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\tif ($ret < 0) $error++;\n\n\t\t\t// Check if we need to also synchronize user information\n\t\t\t$nosyncuser=0;\n\t\t\tif ($object->user_id)\t// If linked to a user\n\t\t\t{\n\t\t\t\tif ($user->id != $object->user_id && empty($user->rights->user->user->creer)) $nosyncuser=1;\t\t// Disable synchronizing\n\t\t\t}\n\n\t\t\t// Check if we need to also synchronize password information\n\t\t\t$nosyncuserpass=0;\n\t\t\tif ($object->user_id)\t// If linked to a user\n\t\t\t{\n\t\t\t\tif ($user->id != $object->user_id && empty($user->rights->user->user->password)) $nosyncuserpass=1;\t// Disable synchronizing\n\t\t\t}\n\n\t\t\t$result=$object->update($user,0,$nosyncuser,$nosyncuserpass);\n\n\t\t\tif ($result >= 0 && ! count($object->errors))\n\t\t\t{\n\t\t\t\t$categories = GETPOST('memcats', 'array');\n\t\t\t\t$object->setCategories($categories);\n\n\t\t\t\t// Logo/Photo save\n\t\t\t\t$dir= $conf->adherent->dir_output . '/' . get_exdir(0,0,0,1,$object,'member').'/photos';\n\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\tif ($file_OK)\n\t\t\t\t{\n\t\t\t\t\tif (GETPOST('deletephoto'))\n\t\t\t\t\t{\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT . '/core/lib/files.lib.php';\n\t\t\t\t\t\t$fileimg=$conf->adherent->dir_output.'/'.get_exdir(0,0,0,1,$object,'member').'/photos/'.$object->photo;\n\t\t\t\t\t\t$dirthumbs=$conf->adherent->dir_output.'/'.get_exdir(0,0,0,1,$object,'member').'/photos/thumbs';\n\t\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (image_format_supported($_FILES['photo']['name']) > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$newfile=$dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\tif (! dol_move_uploaded_file($_FILES['photo']['tmp_name'],$newfile,1,0,$_FILES['photo']['error']) > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t    // Create thumbs\n\t\t\t\t\t\t\t    $object->addThumbs($newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tsetEventMessages(\"ErrorBadImageFormat\", null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tswitch($_FILES['photo']['error'])\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t            $rowid=$object->id;\n\t            $id=$object->id;\n\t\t\t\t$action='';\n\n\t\t\t\tif (! empty($backtopage))\n\t\t\t\t{\n\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$action='edit';\n\t\t}\n\t}\n\n\tif ($action == 'add' && $user->rights->adherent->creer)\n\t{\n\t\tif ($canvas) $object->canvas=$canvas;\n\t\t$birthdate='';\n\t\tif (isset($_POST[\"birthday\"]) && $_POST[\"birthday\"]\n\t\t\t\t&& isset($_POST[\"birthmonth\"]) && $_POST[\"birthmonth\"]\n\t\t\t\t&& isset($_POST[\"birthyear\"]) && $_POST[\"birthyear\"])\n\t\t{\n\t\t\t$birthdate=dol_mktime(12, 0, 0, $_POST[\"birthmonth\"], $_POST[\"birthday\"], $_POST[\"birthyear\"]);\n\t\t}\n\t\t$datesubscription='';\n\t\tif (isset($_POST[\"reday\"]) && isset($_POST[\"remonth\"]) && isset($_POST[\"reyear\"]))\n\t\t{\n\t\t\t$datesubscription=dol_mktime(12, 0, 0, $_POST[\"remonth\"], $_POST[\"reday\"], $_POST[\"reyear\"]);\n\t\t}\n\n\t\t$typeid=GETPOST(\"typeid\",'int');\n\t\t$civility_id=GETPOST(\"civility_id\",'int');\n\t\t$lastname=GETPOST(\"lastname\",'alpha');\n\t\t$firstname=GETPOST(\"firstname\",'alpha');\n\t\t$societe=GETPOST(\"societe\",'alpha');\n\t\t$address=GETPOST(\"address\",'alpha');\n\t\t$zip=GETPOST(\"zipcode\",'alpha');\n\t\t$town=GETPOST(\"town\",'alpha');\n\t\t$state_id=GETPOST(\"state_id\",'int');\n\t\t$country_id=GETPOST(\"country_id\",'int');\n\n\t\t$phone=GETPOST(\"phone\",'alpha');\n\t\t$phone_perso=GETPOST(\"phone_perso\",'alpha');\n\t\t$phone_mobile=GETPOST(\"phone_mobile\",'alpha');\n\t\t$skype=GETPOST(\"member_skype\",'alpha');\n\t\t$email=preg_replace('/\\s+/', '', GETPOST(\"member_email\",'alpha'));\n\t\t$login=GETPOST(\"member_login\",'alpha');\n\t\t$pass=GETPOST(\"password\",'alpha');\n\t\t$photo=GETPOST(\"photo\",'alpha');\n\t\t//$comment=GETPOST(\"comment\",'none');\n\t\t$morphy=GETPOST(\"morphy\",'alpha');\n\t\t$subscription=GETPOST(\"subscription\",'alpha');\n\t\t$public=GETPOST(\"public\",'alpha');\n\n\t\t$userid=GETPOST(\"userid\",'int');\n\t\t$socid=GETPOST(\"socid\",'int');\n\n\t\t$object->civility_id = $civility_id;\n\t\t$object->firstname   = $firstname;\n\t\t$object->lastname    = $lastname;\n\t\t$object->societe     = $societe;\n\t\t$object->address     = $address;\n\t\t$object->zip         = $zip;\n\t\t$object->town        = $town;\n\t\t$object->state_id    = $state_id;\n\t\t$object->country_id  = $country_id;\n\t\t$object->phone       = $phone;\n\t\t$object->phone_perso = $phone_perso;\n\t\t$object->phone_mobile= $phone_mobile;\n\t\t$object->skype       = $skype;\n\t\t$object->email       = $email;\n\t\t$object->login       = $login;\n\t\t$object->pass        = $pass;\n\t\t$object->birth       = $birthdate;\n\t\t$object->photo       = $photo;\n\t\t$object->typeid      = $typeid;\n\t\t//$object->note        = $comment;\n\t\t$object->morphy      = $morphy;\n\t\t$object->user_id     = $userid;\n\t\t$object->fk_soc      = $socid;\n\t\t$object->public      = $public;\n\n\t\t// Fill array 'array_options' with data from add form\n\t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\tif ($ret < 0) $error++;\n\n\t\t// Check parameters\n\t\tif (empty($morphy) || $morphy == \"-1\") {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Nature\")), null, 'errors');\n\t\t}\n\t\t// Tests if the login already exists\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tif (empty($login)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Login\")), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$sql = \"SELECT login FROM \".MAIN_DB_PREFIX.\"adherent WHERE login='\".$db->escape($login).\"'\";\n\t\t\t\t$result = $db->query($sql);\n\t\t\t\tif ($result) {\n\t\t\t\t\t$num = $db->num_rows($result);\n\t\t\t\t}\n\t\t\t\tif ($num) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\",$login), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (empty($pass)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Password\")), null, 'errors');\n\t\t\t}\n\t\t}\n\t\tif ($morphy == 'mor' && empty($societe)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Company\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && empty($lastname)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Lastname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && (!isset($firstname) || $firstname=='')) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Firstname\")), null, 'errors');\n\t\t}\n\t\tif (! ($typeid > 0)) {\t// Keep () before !\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Type\")), null, 'errors');\n\t\t}\n\t\tif ($conf->global->ADHERENT_MAIL_REQUIRED && ! isValidEMail($email)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorBadEMail\",$email), null, 'errors');\n\t\t}\n\t\t$public=0;\n\t\tif (isset($public)) $public=1;\n\n\t\tif (! $error)\n\t\t{\n\t\t\t$db->begin();\n\n\t\t\t// Email about right and login does not exist\n\t\t\t$result=$object->create($user);\n\t\t\tif ($result > 0)\n\t\t\t{\n\t\t\t\t// Foundation categories\n\t\t\t\t$memcats = GETPOST('memcats', 'array');\n\t\t\t\t$object->setCategories($memcats);\n\n\t\t\t\t$db->commit();\n\t\t\t\t$rowid=$object->id;\n\t\t\t\t$id=$object->id;\n\t\t\t\t$action='';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$db->rollback();\n\n\t\t\t\tif ($object->error) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t$action = 'create';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$action = 'create';\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_delete' && $confirm == 'yes')\n\t{\n\t\t$result=$object->delete($id, $user);\n\t\tif ($result > 0)\n\t\t{\n\t\t\tif (! empty($backtopage))\n\t\t\t{\n\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\texit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\theader(\"Location: list.php\");\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$errmesg=$object->error;\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->creer && $action == 'confirm_valid' && $confirm == 'yes')\n\t{\n\t\t$error=0;\n\n\t\t$db->begin();\n\n\t\t$adht = new AdherentType($db);\n\t\t$adht->fetch($object->typeid);\n\n\t\t$result=$object->validate($user);\n\n\t\tif ($result >= 0 && ! count($object->errors))\n\t\t{\n\t\t\t// Send confirmation email (according to parameters of member type. Otherwise generic)\n\t\t\tif ($object->email && GETPOST(\"send_mail\"))\n\t\t\t{\n\t\t\t\t$subject = '';\n\t\t\t\t$msg= '';\n\n\t\t\t\t// Send subscription email\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t$formmail=new FormMail($db);\n\t\t\t\t// Set output language\n\t\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t\t// Get email content fro mtemplae\n\t\t\t\t$arraydefaultmessage=null;\n\t\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_MEMBER_VALIDATION;\n\n\t\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t\t{\n\t\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t\t}\n\n                if (empty($labeltouse) || (int) $labeltouse === -1) {\n                    //fallback on the old configuration.\n                    setEventMessages('WarningMandatorySetupNotComplete', [], 'errors');\n                    $error++;\n                }else{\n                    $substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n                    complete_substitutions_array($substitutionarray, $outputlangs, $object);\n                    $subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n                    $texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnValid()), $substitutionarray, $outputlangs);\n\n                    $moreinheader='X-Dolibarr-Info: send_an_email by adherents/card.php'.\"\\r\\n\";\n\n                    $result=$object->send_an_email($texttosend, $subjecttosend, array(), array(), array(), \"\", \"\", 0, -1, '', $moreinheader);\n                    if ($result < 0)\n                    {\n                        $error++;\n                        setEventMessages($object->error, $object->errors, 'errors');\n                    }\n                }\n\n\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$error++;\n\t\t\tif ($object->error) {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t} else {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t}\n\t\t}\n\n\t\tif (! $error)\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->rollback();\n\t\t}\n\t\t$action='';\n\t}\n\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_resign')\n\t{\n\t\t$error = 0;\n\n\t\tif ($confirm == 'yes')\n\t\t{\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$result=$object->resiliate($user);\n\n\t\t\tif ($result >= 0 && ! count($object->errors))\n\t\t\t{\n\t\t\t\tif ($object->email && GETPOST(\"send_mail\"))\n\t\t\t\t{\n\t\t\t\t\t$subject = '';\n\t\t\t\t\t$msg= '';\n\n\t\t\t\t\t// Send subscription email\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t\t$formmail=new FormMail($db);\n\t\t\t\t\t// Set output language\n\t\t\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t\t\t// Get email content fro mtemplae\n\t\t\t\t\t$arraydefaultmessage=null;\n\t\t\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_CANCELATION;\n\n\t\t\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t\t\t}\n\n                    if (empty($labeltouse) || (int) $labeltouse === -1) {\n                        //fallback on the old configuration.\n                        setEventMessages('WarningMandatorySetupNotComplete', [], 'errors');\n                        $error++;\n                    }else{\n                        $substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n                        complete_substitutions_array($substitutionarray, $outputlangs, $object);\n                        $subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n                        $texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnResiliate()), $substitutionarray, $outputlangs);\n\n                        $moreinheader='X-Dolibarr-Info: send_an_email by adherents/card.php'.\"\\r\\n\";\n\n                        $result=$object->send_an_email($texttosend, $subjecttosend, array(), array(), array(), \"\", \"\", 0, -1, '', $moreinheader);\n                        if ($result < 0)\n                        {\n                            $error++;\n                            setEventMessages($object->error, $object->errors, 'errors');\n                        }\n                    }\n                }\n\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$error++;\n\n\t\t\t\tif ($object->error) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t\tif (! empty($backtopage) && ! $error)\n\t\t{\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t}\n\n\t// SPIP Management\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_del_spip' && $confirm == 'yes')\n\t{\n\t\tif (! count($object->errors))\n\t\t{\n\t\t\tif (!$mailmanspip->del_to_spip($object))\n\t\t\t{\n\t\t\t\tsetEventMessages($langs->trans('DeleteIntoSpipError').': '.$mailmanspip->error, null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->creer && $action == 'confirm_add_spip' && $confirm == 'yes')\n\t{\n\t\tif (! count($object->errors))\n\t\t{\n\t\t\tif (!$mailmanspip->add_to_spip($object))\n\t\t\t{\n\t\t\t\tsetEventMessages($langs->trans('AddIntoSpipError').': '.$mailmanspip->error, null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Actions when printing a doc from card\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_printing.inc.php';\n\n\t// Actions to build doc\n\t$upload_dir = $conf->adherent->dir_output;\n\t$permissioncreate=$user->rights->adherent->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n\n\t// Actions to send emails\n\t$trigger_name='MEMBER_SENTBYMAIL';\n\t$paramname='id';\n\t$mode='emailfrommember';\n\t$trackid='mem'.$object->id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formcompany = new FormCompany($db);\n\n$title=$langs->trans(\"Member\") . \" - \" . $langs->trans(\"Card\");\n$help_url='EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros';\nllxHeader('',$title,$help_url);\n\n$countrynotdefined=$langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')';\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action))\n{\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\tif (empty($object->error) && $id)\n\t{\n\t\t$object = new Adherent($db);\n\t\t$result=$object->fetch($id);\n\t\tif ($result <= 0) dol_print_error('',$object->error);\n\t}\n   \t$objcanvas->assign_values($action, $object->id, $object->ref);\t// Set value for templates\n    $objcanvas->display_canvas($action);\t\t\t\t\t\t\t// Show template\n}\nelse\n{\n\t// -----------------------------------------\n\t// When used in standard mode\n\t// -----------------------------------------\n\n\tif ($action == 'create')\n\t{\n\t\t/* ************************************************************************** */\n\t\t/*                                                                            */\n\t\t/* Creation mode                                                              */\n\t\t/*                                                                            */\n\t\t/* ************************************************************************** */\n\t\t$object->canvas=$canvas;\n\t\t$object->state_id = GETPOST('state_id', 'int');\n\n\t\t// We set country_id, country_code and country for the selected country\n\t\t$object->country_id=GETPOST('country_id','int')?GETPOST('country_id','int'):$mysoc->country_id;\n\t\tif ($object->country_id)\n\t\t{\n\t\t\t$tmparray=getCountry($object->country_id,'all');\n\t\t\t$object->country_code=$tmparray['code'];\n\t\t\t$object->country=$tmparray['label'];\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\n\t\tprint load_fiche_titre($langs->trans(\"NewMember\"));\n\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\t\t\tprint 'jQuery(document).ready(function () {\n\t\t\t\t\t\tjQuery(\"#selectcountry_id\").change(function() {\n\t\t\t\t\t\t\tdocument.formsoc.action.value=\"create\";\n\t\t\t\t\t\t\tdocument.formsoc.submit();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction initfieldrequired()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tjQuery(\"#tdcompany\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tjQuery(\"#tdlastname\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tjQuery(\"#tdfirstname\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'mor\\')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tjQuery(\"#tdcompany\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'phy\\')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tjQuery(\"#tdlastname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t\tjQuery(\"#tdfirstname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjQuery(\"#morphy\").change(function() {\n\t\t\t\t\t\t\tinitfieldrequired();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinitfieldrequired();\n\t\t\t\t\t})';\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\n\t\tprint '<form name=\"formsoc\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" enctype=\"multipart/form-data\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\t\tif ($backtopage) print '<input type=\"hidden\" name=\"backtopage\" value=\"'.($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]).'\">';\n\n        dol_fiche_head('');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\t\tprint '<tbody>';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</span></td><td><input type=\"text\" name=\"member_login\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"member_login\"])?GETPOST(\"member_login\", 'alpha', 2):$object->login).'\"></td></tr>';\n\t\t}\n\n\t\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\t\t\t$generated_password=getRandomPassword(false);\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Password\").'</span></td><td>';\n\t\t\tprint '<input type=\"text\" class=\"minwidth300\" maxlength=\"50\" name=\"password\" value=\"'.$generated_password.'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Type\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"MemberType\").'</td><td>';\n\t\t$listetype=$adht->liste_array();\n\t\tif (count($listetype))\n\t\t{\n\t\t\tprint $form->selectarray(\"typeid\", $listetype, GETPOST('typeid','int')?GETPOST('typeid','int'):$typeid, count($listetype)>1?1:0);\n\t\t} else {\n\t\t\tprint '<font class=\"error\">'.$langs->trans(\"NoTypeDefinedGoToSetup\").'</font>';\n\t\t}\n\t\tprint \"</td>\\n\";\n\n\t\t// Morphy\n\t\t$morphys[\"phy\"] = $langs->trans(\"Physical\");\n\t\t$morphys[\"mor\"] = $langs->trans(\"Moral\");\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Nature\").\"</td><td>\\n\";\n\t\tprint $form->selectarray(\"morphy\", $morphys, GETPOST('morphy','alpha')?GETPOST('morphy','alpha'):$object->morphy, 1);\n\t\tprint \"</td>\\n\";\n\n\t\t// Company\n\t\tprint '<tr><td id=\"tdcompany\">'.$langs->trans(\"Company\").'</td><td><input type=\"text\" name=\"societe\" class=\"minwidth300\" maxlength=\"128\" value=\"'.(GETPOST('societe','alpha')?GETPOST('societe','alpha'):$object->societe).'\"></td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td>';\n\t\tprint $formcompany->select_civility(GETPOST('civility_id','int')?GETPOST('civility_id','int'):$object->civility_id,'civility_id').'</td>';\n\t\tprint '</tr>';\n\n\t\t// Lastname\n\t\tprint '<tr><td id=\"tdlastname\">'.$langs->trans(\"Lastname\").'</td><td><input type=\"text\" name=\"lastname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(GETPOST('lastname','alpha')?GETPOST('lastname','alpha'):$object->lastname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Firstname\n\t\tprint '<tr><td id=\"tdfirstname\">'.$langs->trans(\"Firstname\").'</td><td><input type=\"text\" name=\"firstname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(GETPOST('firstname','alpha')?GETPOST('firstname','alpha'):$object->firstname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// EMail\n\t\tprint '<tr><td>'.($conf->global->ADHERENT_MAIL_REQUIRED?'<span class=\"fieldrequired\">':'').$langs->trans(\"EMail\").($conf->global->ADHERENT_MAIL_REQUIRED?'</span>':'').'</td><td><input type=\"text\" name=\"member_email\" class=\"minwidth300\" maxlength=\"255\" value=\"'.(GETPOST('member_email','alpha')?GETPOST('member_email','alpha'):$object->email).'\"></td></tr>';\n\n\t\t// Address\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Address\").'</td><td>';\n\t\tprint '<textarea name=\"address\" wrap=\"soft\" class=\"quatrevingtpercent\" rows=\"2\">'.(GETPOST('address','alpha')?GETPOST('address','alpha'):$object->address).'</textarea>';\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$langs->trans(\"Zip\").' / '.$langs->trans(\"Town\").'</td><td>';\n\t\tprint $formcompany->select_ziptown((GETPOST('zipcode','alpha')?GETPOST('zipcode','alpha'):$object->zip),'zipcode',array('town','selectcountry_id','state_id'),6);\n\t\tprint ' ';\n\t\tprint $formcompany->select_ziptown((GETPOST('town','alpha')?GETPOST('town','alpha'):$object->town),'town',array('zipcode','selectcountry_id','state_id'));\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\t$object->country_id=$object->country_id?$object->country_id:$mysoc->country_id;\n\t\tprint '<tr><td width=\"25%\">'.$langs->trans('Country').'</td><td>';\n\t\tprint $form->select_country(GETPOST('country_id','alpha')?GETPOST('country_id','alpha'):$object->country_id,'country_id');\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->MEMBER_DISABLE_STATE))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans('State').'</td><td>';\n\t\t\tif ($object->country_id)\n\t\t\t{\n\t\t\t\tprint $formcompany->select_state(GETPOST('state_id','int')?GETPOST('state_id','int'):$object->state_id,$object->country_code);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $countrynotdefined;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Pro phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td><td><input type=\"text\" name=\"phone\" size=\"20\" value=\"'.(GETPOST('phone','alpha')?GETPOST('phone','alpha'):$object->phone).'\"></td></tr>';\n\n\t\t// Personal phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePerso\").'</td><td><input type=\"text\" name=\"phone_perso\" size=\"20\" value=\"'.(GETPOST('phone_perso','alpha')?GETPOST('phone_perso','alpha'):$object->phone_perso).'\"></td></tr>';\n\n\t\t// Mobile phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td><td><input type=\"text\" name=\"phone_mobile\" size=\"20\" value=\"'.(GETPOST('phone_mobile','alpha')?GETPOST('phone_mobile','alpha'):$object->phone_mobile).'\"></td></tr>';\n\n\t    // Skype\n\t    if (! empty($conf->skype->enabled))\n\t    {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Skype\").'</td><td><input type=\"text\" name=\"member_skype\" size=\"40\" value=\"'.(GETPOST('member_skype','alpha')?GETPOST('member_skype','alpha'):$object->skype).'\"></td></tr>';\n\t    }\n\n\t\t// Birthday\n\t\tprint \"<tr><td>\".$langs->trans(\"Birthday\").\"</td><td>\\n\";\n\t\t$form->select_date(($object->birth ? $object->birth : -1),'birth','','',1,'formsoc');\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Public profil\n\t\tprint \"<tr><td>\".$langs->trans(\"Public\").\"</td><td>\\n\";\n\t\tprint $form->selectyesno(\"public\",$object->public,1);\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Categories\n\t\tif (! empty($conf->categorie->enabled)  && ! empty($user->rights->categorie->lire))\n\t\t{\n\t\t\tprint '<tr><td>' . fieldLabel('Categories', 'memcars') . '</td><td>';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_MEMBER, null, 'parent', null, null, 1);\n\t\t\tprint $form->multiselectarray('memcats', $cate_arbo, GETPOST('memcats', 'array'), null, null, null, null, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n        print '<tbody>';\n\t\tprint \"</table>\\n\";\n\n        dol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" name=\"button\" class=\"button\" value=\"'.$langs->trans(\"AddMember\").'\">';\n\t\tprint '&nbsp;&nbsp;';\n\t\tif (! empty($backtopage))\n\t\t{\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans('Cancel').'\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<input type=\"button\" class=\"button\" value=\"' . $langs->trans(\"Cancel\") . '\" onClick=\"javascript:history.go(-1)\">';\n\t\t}\n\t\tprint '</div>';\n\n\t\tprint \"</form>\\n\";\n\t}\n\n\tif ($action == 'edit')\n\t{\n\t\t/********************************************\n\t\t*\n\t\t* Edition mode\n\t\t*\n\t\t********************************************/\n\n\t\t$res=$object->fetch($id);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db,$object->error); exit;\n\t\t}\n\t\t$res=$object->fetch_optionals();\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\t\t$adht->fetch($object->typeid);\n\n\t\t// We set country_id, and country_code, country of the chosen country\n\t\t$country=GETPOST('country','int');\n\t\tif (!empty($country) || $object->country_id)\n\t\t{\n\t\t\t$sql = \"SELECT rowid, code, label from \".MAIN_DB_PREFIX.\"c_country where rowid = \".(!empty($country)?$country:$object->country_id);\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t\t$object->country_id=$obj->rowid;\n\t\t\t$object->country_code=$obj->code;\n\t\t\t$object->country=$langs->trans(\"Country\".$obj->code)?$langs->trans(\"Country\".$obj->code):$obj->label;\n\t\t}\n\n\t\t$head = member_prepare_head($object);\n\n\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\t\t\tprint 'jQuery(document).ready(function () {\n\t\t\t\tjQuery(\"#selectcountry_id\").change(function() {\n\t\t\t\t\tdocument.formsoc.action.value=\"edit\";\n\t\t\t\t\tdocument.formsoc.submit();\n\t\t\t\t});\n\t\t\t\tfunction initfieldrequired()\n\t\t\t\t{\n\t\t\t\t\tjQuery(\"#tdcompany\").removeClass(\"fieldrequired\");\n\t\t\t\t\tjQuery(\"#tdlastname\").removeClass(\"fieldrequired\");\n\t\t\t\t\tjQuery(\"#tdfirstname\").removeClass(\"fieldrequired\");\n\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'mor\\')\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\"#tdcompany\").addClass(\"fieldrequired\");\n\t\t\t\t\t}\n\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'phy\\')\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\"#tdlastname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\tjQuery(\"#tdfirstname\").addClass(\"fieldrequired\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjQuery(\"#morphy\").change(function() {\n\t\t\t\t\tinitfieldrequired();\n\t\t\t\t});\n\t\t\t\tinitfieldrequired();\n\t\t\t})';\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\n\t\tprint '<form name=\"formsoc\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" enctype=\"multipart/form-data\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\" />';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\" />';\n\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$id.'\" />';\n\t\tprint '<input type=\"hidden\" name=\"statut\" value=\"'.$object->statut.'\" />';\n\t\tif ($backtopage) print '<input type=\"hidden\" name=\"backtopage\" value=\"'.($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]).'\">';\n\n\t\tdol_fiche_head($head, 'general', $langs->trans(\"Member\"), 0, 'user');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\t// Ref\n\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Ref\").'</td><td class=\"valeur\">'.$object->id.'</td></tr>';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</span></td><td><input type=\"text\" name=\"login\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"login\"])?GETPOST(\"login\",'alpha',2):$object->login).'\"></td></tr>';\n\t\t}\n\n\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Password\").'</td><td><input type=\"password\" name=\"pass\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"pass\"])?GETPOST(\"pass\",'',2):$object->pass).'\"></td></tr>';\n\t\t}\n\t\t// Morphy\n\t\t$morphys[\"phy\"] = $langs->trans(\"Physical\");\n\t\t$morphys[\"mor\"] = $langs->trans(\"Morale\");\n\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Nature\").'</span></td><td>';\n\t\tprint $form->selectarray(\"morphy\", $morphys, (GETPOSTISSET(\"morphy\")?GETPOST(\"morphy\",'alpha'):$object->morphy));\n\t\tprint \"</td></tr>\";\n\n\t\t// Type\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Type\").'</td><td>';\n\t\tif ($user->rights->adherent->creer)\n\t\t{\n\t\t\tprint $form->selectarray(\"typeid\", $adht->liste_array(), (GETPOSTISSET(\"typeid\")?GETPOST(\"typeid\",'int'):$object->typeid));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $adht->getNomUrl(1);\n\t\t\tprint '<input type=\"hidden\" name=\"typeid\" value=\"'.$object->typeid.'\">';\n\t\t}\n\t\tprint \"</td></tr>\";\n\n\t\t// Company\n\t\tprint '<tr><td id=\"tdcompany\">'.$langs->trans(\"Company\").'</td><td><input type=\"text\" name=\"societe\" class=\"minwidth300\" maxlength=\"128\" value=\"'.(isset($_POST[\"societe\"])?GETPOST(\"societe\",'',2):$object->societe).'\"></td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td>';\n\t\tprint $formcompany->select_civility(isset($_POST[\"civility_id\"])?$_POST[\"civility_id\"]:$object->civility_id).\"\\n\";\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Lastname\n\t\tprint '<tr><td id=\"tdlastname\">'.$langs->trans(\"Lastname\").'</td><td><input type=\"text\" name=\"lastname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"lastname\"])?GETPOST(\"lastname\",'',2):$object->lastname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Firstname\n\t\tprint '<tr><td id=\"tdfirstname\">'.$langs->trans(\"Firstname\").'</td><td><input type=\"text\" name=\"firstname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"firstname\"])?GETPOST(\"firstname\",'',3):$object->firstname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Photo\n\t\tprint '<tr><td>'.$langs->trans(\"Photo\").'</td>';\n\t\tprint '<td class=\"hideonsmartphone\" valign=\"middle\">';\n\t\tprint $form->showphoto('memberphoto',$object).\"\\n\";\n\t\tif ($caneditfieldmember)\n\t\t{\n\t\t\tif ($object->photo) print \"<br>\\n\";\n\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\tif ($object->photo) print '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\tprint '<tr><td>'.$langs->trans(\"PhotoFile\").'</td></tr>';\n\t\t\tprint '<tr><td><input type=\"file\" class=\"flat\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\tprint '</table>';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// EMail\n\t\tprint '<tr><td>'.($conf->global->ADHERENT_MAIL_REQUIRED?'<span class=\"fieldrequired\">':'').$langs->trans(\"EMail\").($conf->global->ADHERENT_MAIL_REQUIRED?'</span>':'').'</td><td><input type=\"text\" name=\"member_email\" class=\"minwidth300\" maxlength=\"255\" value=\"'.(isset($_POST[\"member_email\"])?GETPOST(\"member_email\",'',2):$object->email).'\"></td></tr>';\n\n\t\t// Address\n\t\tprint '<tr><td>'.$langs->trans(\"Address\").'</td><td>';\n\t\tprint '<textarea name=\"address\" wrap=\"soft\" class=\"quatrevingtpercent\" rows=\"'.ROWS_2.'\">'.(isset($_POST[\"address\"])?GETPOST(\"address\",'',2):$object->address).'</textarea>';\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$langs->trans(\"Zip\").' / '.$langs->trans(\"Town\").'</td><td>';\n\t\tprint $formcompany->select_ziptown((isset($_POST[\"zipcode\"])?GETPOST(\"zipcode\",'',2):$object->zip),'zipcode',array('town','selectcountry_id','state_id'),6);\n\t\tprint ' ';\n\t\tprint $formcompany->select_ziptown((isset($_POST[\"town\"])?GETPOST(\"town\",'',2):$object->town),'town',array('zipcode','selectcountry_id','state_id'));\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\t//$object->country_id=$object->country_id?$object->country_id:$mysoc->country_id;    // In edit mode we don't force to company country if not defined\n\t\tprint '<tr><td>'.$langs->trans('Country').'</td><td>';\n\t\tprint $form->select_country(isset($_POST[\"country_id\"])?$_POST[\"country_id\"]:$object->country_id,'country_id');\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->MEMBER_DISABLE_STATE))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans('State').'</td><td>';\n\t\t\tprint $formcompany->select_state($object->state_id,isset($_POST[\"country_id\"])?GETPOST(\"country_id\"):$object->country_id);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Pro phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td><td><input type=\"text\" name=\"phone\" size=\"20\" value=\"'.(isset($_POST[\"phone\"])?GETPOST(\"phone\"):$object->phone).'\"></td></tr>';\n\n\t\t// Personal phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePerso\").'</td><td><input type=\"text\" name=\"phone_perso\" size=\"20\" value=\"'.(isset($_POST[\"phone_perso\"])?GETPOST(\"phone_perso\"):$object->phone_perso).'\"></td></tr>';\n\n\t\t// Mobile phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td><td><input type=\"text\" name=\"phone_mobile\" size=\"20\" value=\"'.(isset($_POST[\"phone_mobile\"])?GETPOST(\"phone_mobile\"):$object->phone_mobile).'\"></td></tr>';\n\n\t    // Skype\n\t    if (! empty($conf->skype->enabled))\n\t    {\n\t\t\t    print '<tr><td>'.$langs->trans(\"Skype\").'</td><td><input type=\"text\" name=\"skype\" class=\"minwidth100\" value=\"'.(isset($_POST[\"skype\"])?GETPOST(\"skype\"):$object->skype).'\"></td></tr>';\n\t    }\n\n\t\t// Birthday\n\t\tprint \"<tr><td>\".$langs->trans(\"Birthday\").\"</td><td>\\n\";\n\t\t$form->select_date(($object->birth ? $object->birth : -1),'birth','','',1,'formsoc');\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Public profil\n\t\tprint \"<tr><td>\".$langs->trans(\"Public\").\"</td><td>\\n\";\n\t\tprint $form->selectyesno(\"public\",(isset($_POST[\"public\"])?GETPOST(\"public\",'',2):$object->public),1);\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Categories\n\t\tif (! empty( $conf->categorie->enabled ) && !empty( $user->rights->categorie->lire ))\n\t\t{\n\t\t\tprint '<tr><td>' . fieldLabel('Categories', 'memcats') . '</td>';\n\t\t\tprint '<td>';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_MEMBER, null, null, null, null, 1);\n\t\t\t$c = new Categorie($db);\n\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_MEMBER);\n\t\t\tforeach ($cats as $cat) {\n\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t}\n\t\t\tprint $form->multiselectarray('memcats', $cate_arbo, $arrayselected, '', 0, '', 0, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n\t\t// Third party Dolibarr\n\t\tif (! empty($conf->societe->enabled))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrThirdParty\").'</td><td colspan=\"2\" class=\"valeur\">';\n\t\t\tif ($object->fk_soc)\n\t\t\t{\n\t\t\t\t$company=new Societe($db);\n\t\t\t\t$result=$company->fetch($object->fk_soc);\n\t\t\t\tprint $company->getNomUrl(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"NoThirdPartyAssociatedToMember\");\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Login Dolibarr\n\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrUser\").'</td><td colspan=\"2\" class=\"valeur\">';\n\t\tif ($object->user_id)\n\t\t{\n\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'none');\n\t\t}\n\t\telse print $langs->trans(\"NoDolibarrAccess\");\n\t\tprint '</td></tr>';\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t\tprint '</table>';\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\n\t}\n\n\tif ($id > 0 && $action != 'edit')\n\t{\n\t\t/* ************************************************************************** */\n\t\t/*                                                                            */\n\t\t/* View mode                                                                  */\n\t\t/*                                                                            */\n\t\t/* ************************************************************************** */\n\n\t\t$res=$object->fetch($id);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db,$object->error); exit;\n\t\t}\n\t\t$res=$object->fetch_optionals();\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\t\t$res=$adht->fetch($object->typeid);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\n\t\t/*\n\t\t * Show tabs\n\t\t */\n\t\t$head = member_prepare_head($object);\n\n\t\tdol_fiche_head($head, 'general', $langs->trans(\"Member\"), -1, 'user');\n\n\t\t// Confirm create user\n\t\tif ($action == 'create_user')\n\t\t{\n\t\t\t$login=$object->login;\n\t\t\tif (empty($login))\n\t\t\t{\n\t\t\t\t// Full firstname and name separated with a dot : firstname.name\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\t$login=dol_buildlogin($object->lastname,$object->firstname);\n\t\t\t}\n\t\t\tif (empty($login)) $login=strtolower(substr($object->firstname, 0, 4)) . strtolower(substr($object->lastname, 0, 4));\n\n\t\t\t// Create a form array\n\t\t\t$formquestion=array(\n\t\t\t\t\tarray('label' => $langs->trans(\"LoginToCreate\"), 'type' => 'text', 'name' => 'login', 'value' => $login)\n\t\t\t);\n\t\t\t$text=$langs->trans(\"ConfirmCreateLogin\").'<br>';\n\t\t\tif (! empty($conf->societe->enabled))\n\t\t\t{\n\t\t\t\tif ($object->fk_soc > 0) $text.=$langs->trans(\"UserWillBeExternalUser\");\n\t\t\t\telse $text.=$langs->trans(\"UserWillBeInternalUser\");\n\t\t\t}\n\t\t\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id,$langs->trans(\"CreateDolibarrLogin\"),$text,\"confirm_create_user\",$formquestion,'yes');\n\t\t}\n\n\t\t// Confirm create third party\n\t\tif ($action == 'create_thirdparty')\n\t\t{\n\t\t\t$companyalias='';\n\t\t\t$fullname = $object->getFullName($langs);\n\n\t\t\tif ($object->morphy == 'mor')\n\t\t\t{\n\t\t\t\t$companyname=$object->societe;\n\t\t\t\tif (! empty($fullname)) $companyalias=$fullname;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$companyname=$fullname;\n\t\t\t\tif (! empty($object->societe)) $companyalias=$object->societe;\n\t\t\t}\n\n\t\t\t// Create a form array\n\t\t\t$formquestion=array(\n\t\t\t\tarray('label' => $langs->trans(\"NameToCreate\"), 'type' => 'text', 'name' => 'companyname', 'value' => $companyname, 'morecss' => 'minwidth300', 'moreattr' => 'maxlength=\"128\"'),\n\t\t\t\tarray('label' => $langs->trans(\"AliasNames\"), 'type' => 'text', 'name' => 'companyalias', 'value' => $companyalias, 'morecss' => 'minwidth300', 'moreattr' => 'maxlength=\"128\"')\n\t\t\t);\n\n\t\t\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id, $langs->trans(\"CreateDolibarrThirdParty\"), $langs->trans(\"ConfirmCreateThirdParty\"), \"confirm_create_thirdparty\", $formquestion, 'yes');\n\t\t}\n\n\t\t// Confirm validate member\n\t\tif ($action == 'valid')\n\t\t{\n\t\t\t$langs->load(\"mails\");\n\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$subject = '';\n\t\t\t$msg= '';\n\n\t\t\t// Send subscription email\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t$formmail=new FormMail($db);\n\t\t\t// Set output language\n\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t// Get email content from template\n\t\t\t$arraydefaultmessage=null;\n\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_MEMBER_VALIDATION;\n\n\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t{\n\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t}\n\n\t\t\t$substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n\t\t\tcomplete_substitutions_array($substitutionarray, $outputlangs, $object);\n\t\t\t$subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n\t\t\t$texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnValid()), $substitutionarray, $outputlangs);\n\n\t\t\t$tmp=$langs->trans(\"SendingAnEMailToMember\");\n\t\t\t$tmp.='<br>'.$langs->trans(\"MailFrom\").': <b>'.$conf->global->ADHERENT_MAIL_FROM.'</b>, ';\n\t\t\t$tmp.='<br>'.$langs->trans(\"MailRecipient\").': <b>'.$object->email.'</b>';\n\t\t\t$helpcontent='';\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailFrom\").'</b>: '.$conf->global->ADHERENT_MAIL_FROM.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailRecipient\").'</b>: '.$object->email.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Subject\").'</b>:<br>'.\"\\n\";\n\t\t\t$helpcontent.=$subjecttosend.\"\\n\";\n\t\t\t$helpcontent.=\"<br>\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Content\").'</b>:<br>';\n\t\t\t$helpcontent.=dol_htmlentitiesbr($texttosend).\"\\n\";\n\t\t\t$label=$form->textwithpicto($tmp,$helpcontent,1,'help');\n\n\t\t\t// Create form popup\n\t\t\t$formquestion=array();\n\t\t\tif ($object->email) $formquestion[]=array('type' => 'checkbox', 'name' => 'send_mail', 'label' => $label,  'value' => ($conf->global->ADHERENT_DEFAULT_SENDINFOBYMAIL?true:false));\n\t\t\tif (! empty($conf->mailman->enabled) && ! empty($conf->global->ADHERENT_USE_MAILMAN)) {\n\t\t\t\t$formquestion[]=array('type'=>'other','label'=>$langs->transnoentitiesnoconv(\"SynchroMailManEnabled\"),'value'=>'');\n\t\t\t}\n\t\t\tif (! empty($conf->mailman->enabled) && ! empty($conf->global->ADHERENT_USE_SPIP))    {\n\t\t\t\t$formquestion[]=array('type'=>'other','label'=>$langs->transnoentitiesnoconv(\"SynchroSpipEnabled\"),'value'=>'');\n\t\t\t}\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"ValidateMember\"), $langs->trans(\"ConfirmValidateMember\"), \"confirm_valid\", $formquestion, 'yes', 1, 220);\n\t\t}\n\n\t\t// Confirm terminate\n\t\tif ($action == 'resign')\n\t\t{\n\t\t\t$langs->load(\"mails\");\n\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$subject = '';\n\t\t\t$msg= '';\n\n\t\t\t// Send subscription email\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t$formmail=new FormMail($db);\n\t\t\t// Set output language\n\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t// Get email content fro mtemplae\n\t\t\t$arraydefaultmessage=null;\n\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_CANCELATION;\n\n\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t{\n\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t}\n\n\t\t\t$substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n\t\t\tcomplete_substitutions_array($substitutionarray, $outputlangs, $object);\n\t\t\t$subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n\t\t\t$texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnResiliate()), $substitutionarray, $outputlangs);\n\n\t\t\t$tmp=$langs->trans(\"SendingAnEMailToMember\");\n\t\t\t$tmp.='<br>('.$langs->trans(\"MailFrom\").': <b>'.$conf->global->ADHERENT_MAIL_FROM.'</b>, ';\n\t\t\t$tmp.=$langs->trans(\"MailRecipient\").': <b>'.$object->email.'</b>)';\n\t\t\t$helpcontent='';\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailFrom\").'</b>: '.$conf->global->ADHERENT_MAIL_FROM.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailRecipient\").'</b>: '.$object->email.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Subject\").'</b>:<br>'.\"\\n\";\n\t\t\t$helpcontent.=$subjecttosend.\"\\n\";\n\t\t\t$helpcontent.=\"<br>\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Content\").'</b>:<br>';\n\t\t\t$helpcontent.=dol_htmlentitiesbr($texttosend).\"\\n\";\n\t\t\t$label=$form->textwithpicto($tmp,$helpcontent,1,'help');\n\n\t\t\t// Create an array\n\t\t\t$formquestion=array();\n\t\t\tif ($object->email) $formquestion[]=array('type' => 'checkbox', 'name' => 'send_mail', 'label' => $label, 'value' => (! empty($conf->global->ADHERENT_DEFAULT_SENDINFOBYMAIL)?'true':'false'));\n\t\t\tif ($backtopage)    $formquestion[]=array('type' => 'hidden', 'name' => 'backtopage', 'value' => ($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]));\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"ResiliateMember\"), $langs->trans(\"ConfirmResiliateMember\"), \"confirm_resign\", $formquestion, 'no', 1, 220);\n\t\t}\n\n\t\t// Confirm remove member\n\t\tif ($action == 'delete')\n\t\t{\n\t\t\t$formquestion=array();\n\t\t\tif ($backtopage) $formquestion[]=array('type' => 'hidden', 'name' => 'backtopage', 'value' => ($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]));\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"DeleteMember\"), $langs->trans(\"ConfirmDeleteMember\"), \"confirm_delete\", $formquestion, 'no', 1);\n\t\t}\n\n\t\t// Confirm add in spip\n\t\tif ($action == 'add_spip')\n\t\t{\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans('AddIntoSpip'), $langs->trans('AddIntoSpipConfirmation'), 'confirm_add_spip');\n\t\t}\n\t\t// Confirm removed from spip\n\t\tif ($action == 'del_spip')\n\t\t{\n\t\t\tprint $form->formconfirm(\"card.php?rowid=$id\", $langs->trans('DeleteIntoSpip'), $langs->trans('DeleteIntoSpipConfirmation'), 'confirm_del_spip');\n\t\t}\n\n\t\t$rowspan=17;\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED)) $rowspan++;\n\t\tif (! empty($conf->societe->enabled)) $rowspan++;\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'rowid', $linkback);\n\n        print '<div class=\"fichecenter\">';\n        print '<div class=\"fichehalfleft\">';\n\n        print '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border centpercent\">';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</td><td class=\"valeur\">'.$object->login.'&nbsp;</td></tr>';\n\t\t}\n\n\t\t// Type\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Type\").'</td><td class=\"valeur\">'.$adht->getNomUrl(1).\"</td></tr>\\n\";\n\n\t\t// Morphy\n\t\tprint '<tr><td>'.$langs->trans(\"Nature\").'</td><td class=\"valeur\" >'.$object->getmorphylib().'</td>';\n\t\tprint '</tr>';\n\n\t\t// Company\n\t\tprint '<tr><td>'.$langs->trans(\"Company\").'</td><td class=\"valeur\">'.$object->societe.'</td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td class=\"valeur\">'.$object->getCivilityLabel().'&nbsp;</td>';\n\t\tprint '</tr>';\n\n\t\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"Password\").'</td><td>'.preg_replace('/./i','*',$object->pass);\n\t\t\tif ($object->pass) print preg_replace('/./i','*',$object->pass);\n\t\t\telse\n\t\t\t{\n\t\t\t    if ($user->admin) print $langs->trans(\"Crypted\").': '.$object->pass_indatabase_crypted;\n\t\t\t    else print $langs->trans(\"Hidden\");\n\t\t\t}\n\t\t\tif ((! empty($object->pass) || ! empty($object->pass_crypted)) && empty($object->user_id))\n\t\t\t{\n\t\t\t    $langs->load(\"errors\");\n\t\t\t    $htmltext=$langs->trans(\"WarningPasswordSetWithNoAccount\");\n\t\t\t    print ' '.$form->textwithpicto('', $htmltext,1,'warning');\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Date end subscription\n\t\tprint '<tr><td>'.$langs->trans(\"SubscriptionEndDate\").'</td><td class=\"valeur\">';\n\t\tif ($object->datefin)\n\t\t{\n\t\t\tprint dol_print_date($object->datefin,'day');\n\t\t\tif ($object->hasDelay()) {\n\t\t\t\tprint \" \".img_warning($langs->trans(\"Late\"));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! $adht->subscription)\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotRecorded\");\n\t\t\t\tif ($object->statut > 0) print \" \".img_warning($langs->trans(\"Late\")); // displays delay Pictogram only if not a draft and not terminated\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotReceived\");\n\t\t\t\tif ($object->statut > 0) print \" \".img_warning($langs->trans(\"Late\")); // displays delay Pictogram only if not a draft and not terminated\n\t\t\t}\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Third party Dolibarr\n\t\tif (! empty($conf->societe->enabled))\n\t\t{\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>';\n\t\t\tprint $langs->trans(\"LinkedToDolibarrThirdParty\");\n\t\t\tprint '</td>';\n\t\t\tif ($action != 'editthirdparty' && $user->rights->adherent->creer) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editthirdparty&amp;rowid='.$object->id.'\">'.img_edit($langs->trans('SetLinkToThirdParty'),1).'</a></td>';\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td colspan=\"2\" class=\"valeur\">';\n\t\t\tif ($action == 'editthirdparty')\n\t\t\t{\n\t\t\t\t$htmlname='socid';\n\t\t\t\tprint '<form method=\"POST\" action=\"'.$_SERVER['PHP_SELF'].'\" name=\"form'.$htmlname.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\tprint '<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t\tprint '<tr><td>';\n\t\t\t\tprint $form->select_company($object->fk_soc,'socid','',1);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\tprint '</tr></table></form>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($object->fk_soc)\n\t\t\t\t{\n\t\t\t\t\t$company=new Societe($db);\n\t\t\t\t\t$result=$company->fetch($object->fk_soc);\n\t\t\t\t\tprint $company->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint $langs->trans(\"NoThirdPartyAssociatedToMember\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Login Dolibarr\n\t\tprint '<tr><td>';\n\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>';\n\t\tprint $langs->trans(\"LinkedToDolibarrUser\");\n\t\tprint '</td>';\n\t\tif ($action != 'editlogin' && $user->rights->adherent->creer)\n\t\t{\n\t\t\tprint '<td align=\"right\">';\n\t\t\tif ($user->rights->user->user->creer)\n\t\t\t{\n\t\t\t\tprint '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editlogin&amp;rowid='.$object->id.'\">'.img_edit($langs->trans('SetLinkToUser'),1).'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\tprint '</tr></table>';\n\t\tprint '</td><td colspan=\"2\" class=\"valeur\">';\n\t\tif ($action == 'editlogin')\n\t\t{\n\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'userid','');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($object->user_id)\n\t\t\t{\n\t\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'none');\n\t\t\t}\n\t\t\telse print $langs->trans(\"NoDolibarrAccess\");\n\t\t}\n\t\tprint '</td></tr>';\n\n        print '</table>';\n\n        print '</div>';\n        print '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n        print '<div class=\"underbanner clearboth\"></div>';\n        print '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Birthday\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Birthday\").'</td><td class=\"valeur\">'.dol_print_date($object->birth,'day').'</td></tr>';\n\n\t\t// Public\n\t\tprint '<tr><td>'.$langs->trans(\"Public\").'</td><td class=\"valeur\">'.yn($object->public).'</td></tr>';\n\n\t\t// Categories\n\t\tif (! empty($conf->categorie->enabled)  && ! empty($user->rights->categorie->lire))\n\t\t{\n\t\t\tprint '<tr><td>' . $langs->trans(\"Categories\") . '</td>';\n\t\t\tprint '<td colspan=\"2\">';\n\t\t\tprint $form->showCategories($object->id, 'member', 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\tprint \"</table>\\n\";\n\n\t\tprint \"</div></div></div>\\n\";\n        print '<div style=\"clear:both\"></div>';\n\n        dol_fiche_end();\n\n\n\t\t/*\n\t\t * Hotbar\n\t\t */\n\n\t\tprint '<div class=\"tabsAction\">';\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been\n\t\tif (empty($reshook)) {\n\t\t\tif ($action != 'editlogin' && $action != 'editthirdparty')\n\t\t\t{\n\t\t\t\t// Send\n\t\t\t\tif ($object->statut == 1) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"' . $_SERVER[\"PHP_SELF\"] . '?id=' . $object->id . '&action=presend&mode=init#formmailbeforetitle\">' . $langs->trans('SendMail') . '</a></div>';\n\t\t\t\t}\n\n\t\t\t\t// Send card by email\n\t\t\t\t// TODO Remove this to replace with a template\n\t\t\t\t/*\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tif ($object->statut >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->email) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=sendinfo\">'.$langs->trans(\"SendCardByMail\").\"</a></div>\\n\";\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans(\"SendCardByMail\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"SendCardByMail\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"SendCardByMail\").\"</font></div>\";\n\t\t\t\t}*/\n\n\t\t\t\t// Modify\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=edit\">'.$langs->trans(\"Modify\").\"</a></div>\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Modify\").'</font></div>';\n\t\t\t\t}\n\n\t\t\t\t// Validate\n\t\t\t\tif ($object->statut == -1)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=valid\">'.$langs->trans(\"Validate\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Validate\").'</font></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Reactivate\n\t\t\t\tif ($object->statut == 0)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=valid\">'.$langs->trans(\"Reenable\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Reenable\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Terminate\n\t\t\t\tif ($object->statut >= 1)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=resign\">'.$langs->trans(\"Resiliate\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Resiliate\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create third party\n\t\t\t\tif (! empty($conf->societe->enabled) && ! $object->fk_soc)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->societe->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->statut != -1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'&amp;action=create_thirdparty\">'.$langs->trans(\"CreateDolibarrThirdParty\").'</a></div>';\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"CreateDolibarrThirdParty\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"CreateDolibarrThirdParty\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create user\n\t\t\t\tif (! $user->societe_id && ! $object->user_id)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->user->user->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->statut != -1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'&amp;action=create_user\">'.$langs->trans(\"CreateDolibarrLogin\").'</a></div>';\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"CreateDolibarrLogin\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"CreateDolibarrLogin\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delete\n\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"card.php?rowid='.$object->id.'&action=delete\">'.$langs->trans(\"Delete\").\"</a></div>\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Delete\").\"</font></div>\";\n\t\t\t\t}\n\n\t\t\t\t// Action SPIP\n\t\t\t\tif (! empty($conf->mailmanspip->enabled) && ! empty($conf->global->ADHERENT_USE_SPIP))\n\t\t\t\t{\n\t\t\t\t\t$isinspip = $mailmanspip->is_in_spip($object);\n\n\t\t\t\t\tif ($isinspip == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=del_spip\">'.$langs->trans(\"DeleteIntoSpip\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\tif ($isinspip == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=add_spip\">'.$langs->trans(\"AddIntoSpip\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tprint '</div>';\n\n\t\tif ($isinspip == -1)\n\t\t{\n\t\t\tprint '<br><br><font class=\"error\">'.$langs->trans('SPIPConnectionFailed').': '.$mailmanspip->error.'</font>';\n\t\t}\n\n\n\t\t// Select mail models is same action as presend\n\t\tif (GETPOST('modelselected')) {\n\t\t\t$action = 'presend';\n\t\t}\n\n\t\tif ($action != 'presend')\n\t\t{\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\t\t\tprint '<a name=\"builddoc\"></a>'; // ancre\n\n\t\t\t// Documents generes\n\t\t\t$filename = dol_sanitizeFileName($object->ref);\n\t\t\t//$filename =  'tmp_cards.php';\n\t\t\t//$filedir = $conf->adherent->dir_output . '/' . get_exdir($object->id, 2, 0, 0, $object, 'member') . dol_sanitizeFileName($object->ref);\n\t\t\t$filedir = $conf->adherent->dir_output . '/' . get_exdir(0, 0, 0, 0, $object, 'member');\n\t\t\t$urlsource = $_SERVER['PHP_SELF'] . '?id=' . $object->id;\n\t\t\t$genallowed = $user->rights->adherent->lire;\n\t\t\t$delallowed = $user->rights->adherent->creer;\n\n\t\t\tprint $formfile->showdocuments('member', $filename, $filedir, $urlsource, $genallowed, $delallowed, $object->modelpdf, 1, 0, 0, 28, 0, '', '', '', $object->default_lang, '', $object);\n\t\t\t$somethingshown = $formfile->numoffiles;\n\n\t\t\t// Show links to link elements\n\t\t\t//$linktoelem = $form->showLinkToObjectBlock($object, null, array('subscription'));\n\t\t\t//$somethingshown = $form->showLinkedObjectBlock($object, '');\n\n\t\t\t// Show links to link elements\n\t\t\t/*$linktoelem = $form->showLinkToObjectBlock($object,array('order'));\n\t\t\t if ($linktoelem) print ($somethingshown?'':'<br>').$linktoelem;\n\t\t\t */\n\n\t\t\t// Shon online payment link\n\t\t\t$useonlinepayment = (! empty($conf->paypal->enabled) || ! empty($conf->stripe->enabled) || ! empty($conf->paybox->enabled));\n\n\t\t\tif ($useonlinepayment)\n\t\t\t{\n\t\t\t\tprint '<br>';\n\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/payments.lib.php';\n\t\t\t\tprint showOnlinePaymentUrl('membersubscription', $object->ref);\n\t\t\t}\n\n\t\t\tprint '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\t\t$MAX = 10;\n\n\t\t\t$morehtmlright = '<a href=\"'.DOL_URL_ROOT.'/adherents/agenda.php?id='.$object->id.'\">';\n\t\t\t$morehtmlright.= $langs->trans(\"SeeAll\");\n\t\t\t$morehtmlright.= '</a>';\n\n\t\t\t// List of actions on element\n\t        include_once DOL_DOCUMENT_ROOT . '/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, 'member', $socid, 1, 'listactions', $MAX, '', $morehtmlright);\n\n\t\t\tprint '</div></div></div>';\n\t\t}\n\n\t\t// Presend form\n\t\t$modelmail='member';\n\t\t$defaulttopic='CardContent';\n\t\t$diroutput = $conf->adherent->dir_output;\n\t\t$trackid = 'mem'.$object->id;\n\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\t}\n}\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2001-2002\tRodolphe Quiedeville\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2011\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2013\t\tFlorian Henry\t\t\t<florian.henry@open-concept.pro>\n * Copyright (C) 2015\t\tAlexandre Spangaro\t\t<aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/type.php\n *      \\ingroup    member\n *      \\brief      Member's type setup\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\n\n$langs->load(\"members\");\n\n$rowid  = GETPOST('rowid','int');\n$action = GETPOST('action','alpha');\n$cancel = GETPOST('cancel','alpha');\n$backtopage = GETPOST('backtopage','alpha');\n\n$search_lastname\t= GETPOST('search_lastname','alpha');\n$search_login\t\t= GETPOST('search_login','alpha');\n$search_email\t\t= GETPOST('search_email','alpha');\n$type\t\t\t\t= GETPOST('type','alpha');\n$status\t\t\t\t= GETPOST('status','alpha');\n\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (! $sortorder) {  $sortorder=\"DESC\"; }\nif (! $sortfield) {  $sortfield=\"d.lastname\"; }\n\n$label=GETPOST(\"label\",\"alpha\");\n$subscription=GETPOST(\"subscription\",\"int\");\n$vote=GETPOST(\"vote\",\"int\");\n$comment=GETPOST(\"comment\");\n$mail_valid=GETPOST(\"mail_valid\");\n\n// Security check\n$result=restrictedArea($user,'adherent',$rowid,'adherent_type');\n\n$object = new AdherentType($db);\n\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label('adherent_type');\n\nif (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n{\n    $search_lastname=\"\";\n    $search_login=\"\";\n    $search_email=\"\";\n    $type=\"\";\n    $sall=\"\";\n}\n\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('membertypecard','globalcard'));\n\n\n/*\n *\tActions\n */\n\nif ($cancel) {\n\n\t$action='';\n\n\tif (! empty($backtopage))\n\t{\n\t\theader(\"Location: \".$backtopage);\n\t\texit;\n\t}\n}\n\nif ($action == 'add' && $user->rights->adherent->configurer)\n{\n\t$object->label\t\t\t= trim($label);\n\t$object->subscription\t= (int) trim($subscription);\n\t$object->note\t\t\t= trim($comment);\n\t$object->mail_valid\t\t= trim($mail_valid);\n\t$object->vote\t\t\t= (boolean) trim($vote);\n\n\t// Fill array 'array_options' with data from add form\n\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\tif ($ret < 0) $error++;\n\n\tif (empty($object->label)) {\n\t\t$error++;\n\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\",$langs->transnoentities(\"Label\")), null, 'errors');\n\t}\n\telse {\n\t\t$sql = \"SELECT libelle FROM \".MAIN_DB_PREFIX.\"adherent_type WHERE libelle='\".$db->escape($object->label).\"'\";\n\t\t$result = $db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $db->num_rows($result);\n\t\t}\n\t\tif ($num) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorLabelAlreadyExists\",$login), null, 'errors');\n\t\t}\n\t}\n\n\tif (! $error)\n\t{\n\t\t$id=$object->create($user);\n\t\tif ($id > 0)\n\t\t{\n\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t$action = 'create';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$action = 'create';\n\t}\n}\n\nif ($action == 'update' && $user->rights->adherent->configurer)\n{\n\t$object->fetch($rowid);\n\n\t$object->oldcopy = clone $object;\n\n\t$object->label\t\t\t= trim($label);\n\t$object->subscription\t= (int) trim($subscription);\n\t$object->note\t\t\t= trim($comment);\n\t$object->mail_valid\t\t= trim($mail_valid);\n\t$object->vote\t\t\t= (boolean) trim($vote);\n\n\t// Fill array 'array_options' with data from add form\n\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\tif ($ret < 0) $error++;\n\n\t$ret=$object->update($user);\n\n\tif ($ret >= 0 && ! count($object->errors))\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeModified\"), null, 'mesgs');\n\t}\n\telse\n\t{\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n\n\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id);\n\texit;\n}\n\nif ($action == 'confirm_delete' && $user->rights->adherent->configurer)\n{\n\t$object->fetch($rowid);\n\t$res=$object->delete();\n\n\tif ($res > 0)\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeDeleted\"), null, 'mesgs');\n\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeCanNotBeDeleted\"), null, 'errors');\n\t\t$action='';\n\t}\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n\nllxHeader('',$langs->trans(\"MembersTypeSetup\"),'EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros');\n\n\n// List of members type\nif (! $rowid && $action != 'create' && $action != 'edit')\n{\n\t//dol_fiche_head('');\n\n\t$sql = \"SELECT d.rowid, d.libelle as label, d.subscription, d.vote\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent_type as d\";\n\t$sql.= \" WHERE d.entity IN (\".getEntity('member_type').\")\";\n\n\t$result = $db->query($sql);\n\tif ($result)\n\t{\n\t\t$num = $db->num_rows($result);\n\t\t$nbtotalofrecords = $num;\n\n\t\t$i = 0;\n\n\t\t$param = '';\n\n\t\t$newcardbutton='';\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\t$newcardbutton='<a class=\"butActionNew\" href=\"'.DOL_URL_ROOT.'/adherents/type.php?action=create\"><span class=\"valignmiddle\">'.$langs->trans('NewMemberType').'</span>';\n\t\t\t$newcardbutton.= '<span class=\"fa fa-plus-circle valignmiddle\"></span>';\n\t\t\t$newcardbutton.= '</a>';\n\t\t}\n\n\t\tprint '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\tif ($optioncss != '') print '<input type=\"hidden\" name=\"optioncss\" value=\"'.$optioncss.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"formfilteraction\" id=\"formfilteraction\" value=\"list\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"list\">';\n\t\tprint '<input type=\"hidden\" name=\"sortfield\" value=\"'.$sortfield.'\">';\n        print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\tprint '<input type=\"hidden\" name=\"sortorder\" value=\"'.$sortorder.'\">';\n\n\t\tprint_barre_liste($langs->trans(\"MembersTypes\"), $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, '', $num, $nbtotalofrecords, 'title_generic.png', 0, $newcardbutton, '', $limit);\n\n\t\t$moreforfilter = '';\n\n\t\tprint '<div class=\"div-table-responsive\">';\n\t\tprint '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<th>'.$langs->trans(\"Ref\").'</th>';\n\t\tprint '<th>'.$langs->trans(\"Label\").'</th>';\n\t\tprint '<th align=\"center\">'.$langs->trans(\"SubscriptionRequired\").'</th>';\n\t\tprint '<th align=\"center\">'.$langs->trans(\"VoteAllowed\").'</th>';\n\t\tprint '<th>&nbsp;</th>';\n\t\tprint \"</tr>\\n\";\n\n\t\t$membertype = new AdherentType($db);\n\n\t\twhile ($i < $num)\n\t\t{\n\t\t\t$objp = $db->fetch_object($result);\n\n\t\t\t$membertype->id = $objp->rowid;\n\t\t\t$membertype->ref = $objp->rowid;\n\t\t\t$membertype->label = $objp->rowid;\n\n\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\tprint '<td>';\n\t\t\tprint $membertype->getNomUrl(1);\n\t\t\t//<a href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowType\"),'group').' '.$objp->rowid.'</a>\n\t\t\tprint '</td>';\n\t\t\tprint '<td>'.dol_escape_htmltag($objp->label).'</td>';\n\t\t\tprint '<td align=\"center\">'.yn($objp->subscription).'</td>';\n\t\t\tprint '<td align=\"center\">'.yn($objp->vote).'</td>';\n\t\t\tif ($user->rights->adherent->configurer)\n\t\t\t\tprint '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit&rowid='.$objp->rowid.'\">'.img_edit().'</a></td>';\n\t\t\telse\n\t\t\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\t\tprint \"</tr>\";\n\t\t\t$i++;\n\t\t}\n\t\tprint \"</table>\";\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/* ************************************************************************** */\n/*                                                                            */\n/* Creation mode                                                              */\n/*                                                                            */\n/* ************************************************************************** */\nif ($action == 'create')\n{\n\t$object = new AdherentType($db);\n\n\tprint load_fiche_titre($langs->trans(\"NewMemberType\"));\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\n    dol_fiche_head('');\n\n\tprint '<table class=\"border\" width=\"100%\">';\n\tprint '<tbody>';\n\n\tprint '<tr><td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Label\").'</td><td><input type=\"text\" name=\"label\" size=\"40\"></td></tr>';\n\n\tprint '<tr><td>'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\tprint $form->selectyesno(\"subscription\",1,1);\n\tprint '</td></tr>';\n\n\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\tprint $form->selectyesno(\"vote\",0,1);\n\tprint '</td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\tprint '<textarea name=\"comment\" wrap=\"soft\" class=\"centpercent\" rows=\"3\"></textarea></td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor=new DolEditor('mail_valid',$object->mail_valid,'',280,'dolibarr_notes','',false,true,$conf->fckeditor->enabled,15,'90%');\n\t$doleditor->Create();\n\tprint '</td></tr>';\n\n\t// Other attributes\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$act,$action);    // Note that $action and $object may have been modified by hook\n    print $hookmanager->resPrint;\n\tif (empty($reshook))\n\t{\n\t\tprint $object->showOptionals($extrafields,'edit');\n\t}\n\tprint '<tbody>';\n\tprint \"</table>\\n\";\n\n\tdol_fiche_end();\n\n\tprint '<div class=\"center\">';\n\tprint '<input type=\"submit\" name=\"button\" class=\"button\" value=\"'.$langs->trans(\"Add\").'\">';\n\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\tprint '<input type=\"submit\" name=\"cancel\" class=\"button\" value=\"'.$langs->trans(\"Cancel\").'\" onclick=\"history.go(-1)\" />';\n\tprint '</div>';\n\n\tprint \"</form>\\n\";\n}\n\n/* ************************************************************************** */\n/*                                                                            */\n/* View mode                                                                  */\n/*                                                                            */\n/* ************************************************************************** */\nif ($rowid > 0)\n{\n\tif ($action != 'edit')\n\t{\n\t\t$object = new AdherentType($db);\n\t\t$object->fetch($rowid);\n\t\t$object->fetch_optionals();\n\n\t\t/*\n\t\t * Confirmation suppression\n\t\t */\n\t\tif ($action == 'delete')\n\t\t{\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?rowid=\".$object->id,$langs->trans(\"DeleteAMemberType\"),$langs->trans(\"ConfirmDeleteMemberType\",$object->label),\"confirm_delete\", '',0,1);\n\t\t}\n\n\t\t$head = member_type_prepare_head($object);\n\n\t\tdol_fiche_head($head, 'card', $langs->trans(\"MemberType\"), -1, 'group');\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/type.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'rowid', $linkback);\n\n\t\tprint '<div class=\"fichecenter\">';\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\t\tprint yn($object->subscription);\n\t\tprint '</tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\t\tprint yn($object->vote);\n\t\tprint '</tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\t\tprint nl2br($object->note).\"</td></tr>\";\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\t\tprint nl2br($object->mail_valid).\"</td></tr>\";\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tdol_fiche_end();\n\n\t\t/*\n\t\t * Buttons\n\t\t */\n\n\t\tprint '<div class=\"tabsAction\">';\n\n\t\t// Edit\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?action=edit&amp;rowid='.$object->id.'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t}\n\n\t\t// Add\n\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?action=create&typeid='.$object->id.'&backtopage='.urlencode($_SERVER[\"PHP_SELF\"].'?rowid='.$object->id).'\">'.$langs->trans(\"AddMember\").'</a></div>';\n\n\t\t// Delete\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=delete&rowid='.$object->id.'\">'.$langs->trans(\"DeleteType\").'</a></div>';\n\t\t}\n\n\t\tprint \"</div>\";\n\n\n\t\t// Show list of members (nearly same code than in page list.php)\n\n\t\t$membertypestatic=new AdherentType($db);\n\n\t\t$now=dol_now();\n\n\t\t$sql = \"SELECT d.rowid, d.login, d.firstname, d.lastname, d.societe, \";\n\t\t$sql.= \" d.datefin,\";\n\t\t$sql.= \" d.email, d.fk_adherent_type as type_id, d.morphy, d.statut,\";\n\t\t$sql.= \" t.libelle as type, t.subscription\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent as d, \".MAIN_DB_PREFIX.\"adherent_type as t\";\n\t\t$sql.= \" WHERE d.fk_adherent_type = t.rowid \";\n\t\t$sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\n\t\t$sql.= \" AND t.rowid = \".$object->id;\n\t\tif ($sall)\n\t\t{\n\t\t\t$sql.=natural_search(array(\"f.firstname\",\"d.lastname\",\"d.societe\",\"d.email\",\"d.login\",\"d.address\",\"d.town\",\"d.note_public\",\"d.note_private\"), $sall);\n\t\t}\n\t\tif ($status != '')\n\t\t{\n\t\t    $sql.= natural_search('d.statut', $status, 2);\n\t\t}\n\t\tif ($action == 'search')\n\t\t{\n\t\t\tif (GETPOST('search','alpha'))\n\t\t\t{\n\t\t  \t\t$sql.= natural_search(array(\"d.firstname\",\"d.lastname\"), GETPOST('search','alpha'));\n\t\t  \t}\n\t\t}\n\t\tif (! empty($search_lastname))\n\t\t{\n\t\t\t$sql.= natural_search(array(\"d.firstname\",\"d.lastname\"), $search_lastname);\n\t\t}\n\t\tif (! empty($search_login))\n\t\t{\n\t\t\t$sql.= natural_search(\"d.login\", $search_login);\n\t\t}\n\t\tif (! empty($search_email))\n\t\t{\n\t\t\t$sql.= natural_search(\"d.email\", $search_email);\n\t\t}\n\t\tif ($filter == 'uptodate')\n\t\t{\n\t\t    $sql.=\" AND datefin >= '\".$db->idate($now).\"'\";\n\t\t}\n\t\tif ($filter == 'outofdate')\n\t\t{\n\t\t    $sql.=\" AND datefin < '\".$db->idate($now).\"'\";\n\t\t}\n\n\t\t$sql.= \" \".$db->order($sortfield,$sortorder);\n\n\t\t// Count total nb of records\n\t\t$nbtotalofrecords = '';\n\t\tif (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST))\n\t\t{\n\t\t\t$resql = $db->query($sql);\n\t\t    if ($resql) $nbtotalofrecords = $db->num_rows($result);\n\t\t    else dol_print_error($db);\n\t\t    if (($page * $limit) > $nbtotalofrecords)\t// if total resultset is smaller then paging size (filtering), goto and load page 0\n\t\t    {\n\t\t    \t$page = 0;\n\t\t    \t$offset = 0;\n\t\t    }\n\t\t}\n\n\t\t$sql.= \" \".$db->plimit($conf->liste_limit+1, $offset);\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t    $num = $db->num_rows($resql);\n\t\t    $i = 0;\n\n\t\t    $titre=$langs->trans(\"MembersList\");\n\t\t    if ($status != '')\n\t\t    {\n\t\t        if ($status == '-1,1')\t\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListQualified\"); }\n\t\t        else if ($status == '-1')\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListToValid\"); }\n\t\t        else if ($status == '1' && ! $filter)\t\t\t\t{ $titre=$langs->trans(\"MembersListValid\"); }\n\t\t        else if ($status == '1' && $filter=='uptodate')\t\t{ $titre=$langs->trans(\"MembersListUpToDate\"); }\n\t\t        else if ($status == '1' && $filter=='outofdate')\t{ $titre=$langs->trans(\"MembersListNotUpToDate\"); }\n\t\t        else if ($status == '0')\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListResiliated\"); }\n\t\t    }\n\t\t    elseif ($action == 'search')\n\t\t    {\n\t\t        $titre=$langs->trans(\"MembersListQualified\");\n\t\t    }\n\n\t\t    if ($type > 0)\n\t\t    {\n\t\t\t\t$membertype=new AdherentType($db);\n\t\t        $result=$membertype->fetch($type);\n\t\t\t\t$titre.=\" (\".$membertype->label.\")\";\n\t\t    }\n\n\t\t    $param=\"&rowid=\".$object->id;\n\t\t    if (! empty($status))\t\t\t$param.=\"&status=\".$status;\n\t\t    if (! empty($search_lastname))\t$param.=\"&search_lastname=\".$search_lastname;\n\t\t    if (! empty($search_firstname))\t$param.=\"&search_firstname=\".$search_firstname;\n\t\t    if (! empty($search_login))\t\t$param.=\"&search_login=\".$search_login;\n\t\t    if (! empty($search_email))\t\t$param.=\"&search_email=\".$search_email;\n\t\t    if (! empty($filter))\t\t\t$param.=\"&filter=\".$filter;\n\n\t\t    if ($sall)\n\t\t    {\n\t\t        print $langs->trans(\"Filter\").\" (\".$langs->trans(\"Lastname\").\", \".$langs->trans(\"Firstname\").\", \".$langs->trans(\"EMail\").\", \".$langs->trans(\"Address\").\" \".$langs->trans(\"or\").\" \".$langs->trans(\"Town\").\"): \".$sall;\n\t\t    }\n\n\t\t\tprint '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\t\tprint '<input class=\"flat\" type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\" size=\"12\"></td>';\n\n\t\t\tprint '<br>';\n            print_barre_liste('',$page,$_SERVER[\"PHP_SELF\"],$param,$sortfield,$sortorder,'',$num,$nbtotalofrecords);\n\n            $moreforfilter = '';\n\n            print '<div class=\"div-table-responsive\">';\n            print '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\t\t\t// Lignes des champs de filtre\n\t\t\tprint '<tr class=\"liste_titre_filter\">';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_lastname\" value=\"'.dol_escape_htmltag($search_lastname).'\" size=\"12\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_login\" value=\"'.dol_escape_htmltag($search_login).'\" size=\"7\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_email\" value=\"'.dol_escape_htmltag($search_email).'\" size=\"12\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n\n\t\t\tprint '<td align=\"right\" colspan=\"2\" class=\"liste_titre\">';\n\t\t\tprint '<input type=\"image\" class=\"liste_titre\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/search.png\" name=\"button_search\" value=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\">';\n\t\t    print '&nbsp; ';\n\t\t    print '<input type=\"image\" class=\"liste_titre\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/searchclear.png\" name=\"button_removefilter\" value=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\">';\n\t\t\tprint '</td>';\n\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t    print_liste_field_titre( $langs->trans(\"Name\").\" / \".$langs->trans(\"Company\"),$_SERVER[\"PHP_SELF\"],\"d.lastname\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Login\",$_SERVER[\"PHP_SELF\"],\"d.login\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Nature\",$_SERVER[\"PHP_SELF\"],\"d.morphy\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"EMail\",$_SERVER[\"PHP_SELF\"],\"d.email\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Status\",$_SERVER[\"PHP_SELF\"],\"d.statut,d.datefin\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"EndSubscription\",$_SERVER[\"PHP_SELF\"],\"d.datefin\",$param,\"\",'align=\"center\"',$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Action\",$_SERVER[\"PHP_SELF\"],\"\",$param,\"\",'width=\"60\" align=\"center\"',$sortfield,$sortorder);\n\t\t    print \"</tr>\\n\";\n\n\t\t    while ($i < $num && $i < $conf->liste_limit)\n\t\t    {\n\t\t        $objp = $db->fetch_object($resql);\n\n\t\t        $datefin=$db->jdate($objp->datefin);\n\n\t\t        $adh=new Adherent($db);\n\t\t        $adh->lastname=$objp->lastname;\n\t\t        $adh->firstname=$objp->firstname;\n\n\t\t        // Lastname\n\t\t        print '<tr class=\"oddeven\">';\n\t\t        if ($objp->societe != '')\n\t\t        {\n\t\t            print '<td><a href=\"card.php?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowMember\"),\"user\").' '.$adh->getFullName($langs,0,-1,20).' / '.dol_trunc($objp->societe,12).'</a></td>'.\"\\n\";\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            print '<td><a href=\"card.php?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowMember\"),\"user\").' '.$adh->getFullName($langs,0,-1,32).'</a></td>'.\"\\n\";\n\t\t        }\n\n\t\t        // Login\n\t\t        print \"<td>\".$objp->login.\"</td>\\n\";\n\n\t\t        // Type\n\t\t        /*print '<td class=\"nowrap\">';\n\t\t        $membertypestatic->id=$objp->type_id;\n\t\t        $membertypestatic->label=$objp->type;\n\t\t        print $membertypestatic->getNomUrl(1,12);\n\t\t        print '</td>';\n\t\t\t\t*/\n\n\t\t        // Moral/Physique\n\t\t        print \"<td>\".$adh->getmorphylib($objp->morphy).\"</td>\\n\";\n\n\t\t        // EMail\n\t\t        print \"<td>\".dol_print_email($objp->email,0,0,1).\"</td>\\n\";\n\n\t\t        // Statut\n\t\t        print '<td class=\"nowrap\">';\n\t\t        print $adh->LibStatut($objp->statut,$objp->subscription,$datefin,2);\n\t\t        print \"</td>\";\n\n\t\t        // Date end subscription\n\t\t        if ($datefin)\n\t\t        {\n\t\t\t        print '<td align=\"center\" class=\"nowrap\">';\n\t\t            if ($datefin < dol_now() && $objp->statut > 0)\n\t\t            {\n\t\t                print dol_print_date($datefin,'day').\" \".img_warning($langs->trans(\"SubscriptionLate\"));\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                print dol_print_date($datefin,'day');\n\t\t            }\n\t\t            print '</td>';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t\t        print '<td align=\"left\" class=\"nowrap\">';\n\t\t\t        if ($objp->subscription == 'yes')\n\t\t\t        {\n\t\t                print $langs->trans(\"SubscriptionNotReceived\");\n\t\t                if ($objp->statut > 0) print \" \".img_warning();\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            print '&nbsp;';\n\t\t\t        }\n\t\t            print '</td>';\n\t\t        }\n\n\t\t        // Actions\n\t\t        print '<td align=\"center\">';\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tprint '<a href=\"card.php?rowid='.$objp->rowid.'&action=edit&backtopage='.urlencode($_SERVER[\"PHP_SELF\"].'?rowid='.$object->id).'\">'.img_edit().'</a>';\n\t\t\t\t}\n\t\t\t\tprint '&nbsp;';\n\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t{\n\t\t\t\t\tprint '<a href=\"card.php?rowid='.$objp->rowid.'&action=resign\">'.img_picto($langs->trans(\"Resiliate\"),'disable.png').'</a>';\n\t\t        }\n\t\t\t\tprint \"</td>\";\n\n\t\t        print \"</tr>\\n\";\n\t\t        $i++;\n\t\t    }\n\n\t\t    print \"</table>\\n\";\n            print '</div>';\n            print '</form>';\n\n\t\t\tif ($num > $conf->liste_limit)\n\t\t\t{\n\t\t\t    print_barre_liste('',$page,$_SERVER[\"PHP_SELF\"],$param,$sortfield,$sortorder,'',$num,$nbtotalofrecords,'');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    dol_print_error($db);\n\t\t}\n\n\t}\n\n\t/* ************************************************************************** */\n\t/*                                                                            */\n\t/* Edition mode                                                               */\n\t/*                                                                            */\n\t/* ************************************************************************** */\n\n\tif ($action == 'edit')\n\t{\n\t\t$object = new AdherentType($db);\n\t\t$object->fetch($rowid);\n\t\t$object->fetch_optionals();\n\n\t\t$head = member_type_prepare_head($object);\n\n\t\tprint '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\n\t\tdol_fiche_head($head, 'card', $langs->trans(\"MemberType\"), 0, 'group');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Ref\").'</td><td>'.$object->id.'</td></tr>';\n\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td><input type=\"text\" name=\"label\" size=\"40\" value=\"'.dol_escape_htmltag($object->label).'\"></td></tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\t\tprint $form->selectyesno(\"subscription\",$object->subscription,1);\n\t\tprint '</td></tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\t\tprint $form->selectyesno(\"vote\",$object->vote,1);\n\t\tprint '</td></tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\t\tprint '<textarea name=\"comment\" wrap=\"soft\" class=\"centpercent\" rows=\"3\">'.$object->note.'</textarea></td></tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t$doleditor=new DolEditor('mail_valid',$object->mail_valid,'',280,'dolibarr_notes','',false,true,$conf->fckeditor->enabled,15,'90%');\n\t\t$doleditor->Create();\n\t\tprint \"</td></tr>\";\n\n\t\t// Other attributes\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$act,$action);    // Note that $action and $object may have been modified by hook\n        print $hookmanager->resPrint;\n\t\tif (empty($reshook))\n\t\t{\n\t\t    print $object->showOptionals($extrafields,'edit');\n\t\t}\n\n\t\tprint '</table>';\n\n\t\t// Extra field\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tprint '<br><br><table class=\"border\" width=\"100%\">';\n\t\t\tforeach($extrafields->attribute_label as $key=>$label)\n\t\t\t{\n\t\t\t\tif (isset($_POST[\"options_\" . $key])) {\n\t\t\t\t\tif (is_array($_POST[\"options_\" . $key])) {\n\t\t\t\t\t\t// $_POST[\"options\"] is an array but following code expects a comma separated string\n\t\t\t\t\t\t$value = implode(\",\", $_POST[\"options_\" . $key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = $_POST[\"options_\" . $key];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$value = $adht->array_options[\"options_\" . $key];\n\t\t\t\t}\n\t\t\t\tprint '<tr><td width=\"30%\">'.$label.'</td><td>';\n\t\t\t\tprint $extrafields->showInputField($key,$value);\n\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t}\n\t\t\tprint '</table><br><br>';\n\t\t}\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\tprint '<input type=\"submit\" name=\"cancel\" class=\"button\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\tprint '</div>';\n\n\t\tprint \"</form>\";\n\t}\n}\n\n\nllxFooter();\n\n$db->close();\n"], "fixing_code": ["<?php\n/* Copyright (C) 2001-2004 Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003 Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2018 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2012      Marcos Garc\u00eda        <marcosgdf@gmail.com>\n * Copyright (C) 2012-2018 Philippe Grand       <philippe.grand@atoo-net.com>\n * Copyright (C) 2015-2016 Alexandre Spangaro   <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/adherents/card.php\n *       \\ingroup    member\n *       \\brief      Page of member\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/images.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/subscription.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/compta/bank/class/account.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\n\n// Load translation files required by the page\n$langs->loadLangs(array(\"companies\",\"bills\",\"members\",\"users\",\"other\"));\n\n$action=GETPOST('action','alpha');\n$cancel=GETPOST('cancel','alpha');\n$backtopage=GETPOST('backtopage','alpha');\n$confirm=GETPOST('confirm','alpha');\n$rowid=GETPOST('rowid','int');\n$id=GETPOST('id')?GETPOST('id','int'):$rowid;\n$typeid=GETPOST('typeid','int');\n$userid=GETPOST('userid','int');\n$socid=GETPOST('socid','int');\n\nif (! empty($conf->mailmanspip->enabled))\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/mailmanspip/class/mailmanspip.class.php';\n\n\t$langs->load('mailmanspip');\n\n\t$mailmanspip = new MailmanSpip($db);\n}\n\n$object = new Adherent($db);\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label($object->table_element);\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$object->getCanvas($id);\n$canvas = $object->canvas?$object->canvas:GETPOST(\"canvas\");\n$objcanvas=null;\nif (! empty($canvas))\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n\t$objcanvas = new Canvas($db, $action);\n\t$objcanvas->getCanvas('adherent', 'membercard', $canvas);\n}\n\n// Security check\n$result=restrictedArea($user, 'adherent', $id, '', '', 'fk_soc', 'rowid', $objcanvas);\n\nif ($id > 0)\n{\n\t// Load member\n\t$result = $object->fetch($id);\n\n\t// Define variables to know what current user can do on users\n\t$canadduser=($user->admin || $user->rights->user->user->creer);\n\t// Define variables to know what current user can do on properties of user linked to edited member\n\tif ($object->user_id)\n\t{\n\t\t// $ User is the user who edits, $ object->user_id is the id of the related user in the edited member\n\t\t$caneditfielduser=((($user->id == $object->user_id) && $user->rights->user->self->creer)\n\t\t\t\t|| (($user->id != $object->user_id) && $user->rights->user->user->creer));\n\t\t$caneditpassworduser=((($user->id == $object->user_id) && $user->rights->user->self->password)\n\t\t\t\t|| (($user->id != $object->user_id) && $user->rights->user->user->password));\n\t}\n}\n\n// Define variables to determine what the current user can do on the members\n$canaddmember=$user->rights->adherent->creer;\n// Define variables to determine what the current user can do on the properties of a member\nif ($id)\n{\n\t$caneditfieldmember=$user->rights->adherent->creer;\n}\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('membercard','globalcard'));\n\n\n\n/*\n * \tActions\n */\n\n$parameters=array('id'=>$id, 'rowid'=>$id, 'objcanvas'=>$objcanvas, 'confirm'=>$confirm);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n\tif ($cancel)\n\t{\n\t\tif (! empty($backtopage))\n\t\t{\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t\t$action='';\n\t}\n\n\tif ($action == 'setuserid' && ($user->rights->user->self->creer || $user->rights->user->user->creer))\n\t{\n\t\t$error=0;\n\t\tif (empty($user->rights->user->user->creer))\t// If can edit only itself user, we can link to itself only\n\t\t{\n\t\t\tif ($userid != $user->id && $userid != $object->user_id)\n\t\t\t{\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorUserPermissionAllowsToLinksToItselfOnly\"), null, 'errors');\n\t\t\t}\n\t\t}\n\n\t\tif (! $error)\n\t\t{\n\t\t\tif ($userid != $object->user_id)\t// If link differs from currently in database\n\t\t\t{\n\t\t\t\t$result=$object->setUserId($userid);\n\t\t\t\tif ($result < 0) dol_print_error($object->db,$object->error);\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($action == 'setsocid')\n\t{\n\t\t$error=0;\n\t\tif (! $error)\n\t\t{\n\t\t\tif ($socid != $object->fk_soc)\t// If link differs from currently in database\n\t\t\t{\n\t\t\t\t$sql =\"SELECT rowid FROM \".MAIN_DB_PREFIX.\"adherent\";\n\t\t\t\t$sql.=\" WHERE fk_soc = '\".$socid.\"'\";\n\t\t\t\t$sql.=\" AND entity = \".$conf->entity;\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql)\n\t\t\t\t{\n\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\tif ($obj && $obj->rowid > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$othermember=new Adherent($db);\n\t\t\t\t\t\t$othermember->fetch($obj->rowid);\n\t\t\t\t\t\t$thirdparty=new Societe($db);\n\t\t\t\t\t\t$thirdparty->fetch($socid);\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorMemberIsAlreadyLinkedToThisThirdParty\",$othermember->getFullName($langs),$othermember->login,$thirdparty->name), null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (! $error)\n\t\t\t\t{\n\t\t\t\t\t$result=$object->setThirdPartyId($socid);\n\t\t\t\t\tif ($result < 0) dol_print_error($object->db,$object->error);\n\t\t\t\t\t$action='';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Create user from a member\n\tif ($action == 'confirm_create_user' && $confirm == 'yes' && $user->rights->user->user->creer)\n\t{\n\t\tif ($result > 0)\n\t\t{\n\t\t\t// Creation user\n\t\t\t$nuser = new User($db);\n\t\t\t$result=$nuser->create_from_member($object,GETPOST('login'));\n\n\t\t\tif ($result < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans($nuser->error), null, 'errors');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\t// Create third party from a member\n\tif ($action == 'confirm_create_thirdparty' && $confirm == 'yes' && $user->rights->societe->creer)\n\t{\n\t\tif ($result > 0)\n\t\t{\n\t\t\t// User creation\n\t\t\t$company = new Societe($db);\n\t\t\t$result=$company->create_from_member($object, GETPOST('companyname', 'alpha'), GETPOST('companyalias', 'alpha'));\n\n\t\t\tif ($result < 0)\n\t\t\t{\n\t\t\t\t$langs->load(\"errors\");\n\t\t\t\tsetEventMessages($langs->trans($company->error), null, 'errors');\n\t\t\t\tsetEventMessages($company->error, $company->errors, 'errors');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\tif ($action == 'update' && ! $cancel && $user->rights->adherent->creer)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\t$birthdate='';\n\t\tif (isset($_POST[\"birthday\"]) && $_POST[\"birthday\"]\n\t\t\t\t&& isset($_POST[\"birthmonth\"]) && $_POST[\"birthmonth\"]\n\t\t\t\t&& isset($_POST[\"birthyear\"]) && $_POST[\"birthyear\"])\n\t\t{\n\t\t\t$birthdate=dol_mktime(12, 0, 0, $_POST[\"birthmonth\"], $_POST[\"birthday\"], $_POST[\"birthyear\"]);\n\t\t}\n\t\t$lastname=$_POST[\"lastname\"];\n\t\t$firstname=$_POST[\"firstname\"];\n\t\t$societe=$_POST[\"societe\"];\n\t\t$morphy=$_POST[\"morphy\"];\n\t\t$login=$_POST[\"login\"];\n\t\tif ($morphy != 'mor' && empty($lastname)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Lastname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && (!isset($firstname) || $firstname=='')) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Firstname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy == 'mor' && empty($societe)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Company\")), null, 'errors');\n\t\t}\n\t\t// Test si le login existe deja\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tif (empty($login)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Login\")), null, 'errors');\n\t\t\t}\n\t\t}\n\t\t// Create new object\n\t\tif ($result > 0 && ! $error)\n\t\t{\n\t\t\t$object->oldcopy = clone $object;\n\n\t\t\t// Change values\n\t\t\t$object->civility_id = trim(GETPOST(\"civility_id\",'alpha'));\n\t\t\t$object->firstname   = trim(GETPOST(\"firstname\",'alpha'));\n\t\t\t$object->lastname    = trim(GETPOST(\"lastname\",'alpha'));\n\t\t\t$object->login       = trim(GETPOST(\"login\",'alpha'));\n\t\t\t$object->pass        = trim(GETPOST(\"pass\",'alpha'));\n\n\t\t\t$object->societe     = trim(GETPOST(\"societe\",'alpha'));\n\t\t\t$object->company     = trim(GETPOST(\"societe\",'alpha'));\n\n\t\t\t$object->address     = trim(GETPOST(\"address\",'alpha'));\n\t\t\t$object->zip         = trim(GETPOST(\"zipcode\",'alpha'));\n\t\t\t$object->town        = trim(GETPOST(\"town\",'alpha'));\n\t\t\t$object->state_id    = GETPOST(\"state_id\",'int');\n\t\t\t$object->country_id  = GETPOST(\"country_id\",'int');\n\n\t\t\t$object->phone       = trim(GETPOST(\"phone\",'alpha'));\n\t\t\t$object->phone_perso = trim(GETPOST(\"phone_perso\",'alpha'));\n\t\t\t$object->phone_mobile= trim(GETPOST(\"phone_mobile\",'alpha'));\n\t\t\t$object->email       = preg_replace('/\\s+/', '', GETPOST(\"member_email\",'alpha'));\n\t\t\t$object->skype       = trim(GETPOST(\"skype\",'alpha'));\n\t\t\t$object->birth       = $birthdate;\n\n\t\t\t$object->typeid      = GETPOST(\"typeid\",'int');\n\t\t\t//$object->note        = trim(GETPOST(\"comment\",\"alpha\"));\n\t\t\t$object->morphy      = GETPOST(\"morphy\",'alpha');\n\n\t\t\tif (GETPOST('deletephoto','alpha')) $object->photo='';\n\t\t\telseif (! empty($_FILES['photo']['name'])) $object->photo  = dol_sanitizeFileName($_FILES['photo']['name']);\n\n\t\t\t// Get status and public property\n\t\t\t$object->statut      = GETPOST(\"statut\",'alpha');\n\t\t\t$object->public      = GETPOST(\"public\",'alpha');\n\n\t\t\t// Fill array 'array_options' with data from add form\n\t\t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\tif ($ret < 0) $error++;\n\n\t\t\t// Check if we need to also synchronize user information\n\t\t\t$nosyncuser=0;\n\t\t\tif ($object->user_id)\t// If linked to a user\n\t\t\t{\n\t\t\t\tif ($user->id != $object->user_id && empty($user->rights->user->user->creer)) $nosyncuser=1;\t\t// Disable synchronizing\n\t\t\t}\n\n\t\t\t// Check if we need to also synchronize password information\n\t\t\t$nosyncuserpass=0;\n\t\t\tif ($object->user_id)\t// If linked to a user\n\t\t\t{\n\t\t\t\tif ($user->id != $object->user_id && empty($user->rights->user->user->password)) $nosyncuserpass=1;\t// Disable synchronizing\n\t\t\t}\n\n\t\t\t$result=$object->update($user,0,$nosyncuser,$nosyncuserpass);\n\n\t\t\tif ($result >= 0 && ! count($object->errors))\n\t\t\t{\n\t\t\t\t$categories = GETPOST('memcats', 'array');\n\t\t\t\t$object->setCategories($categories);\n\n\t\t\t\t// Logo/Photo save\n\t\t\t\t$dir= $conf->adherent->dir_output . '/' . get_exdir(0,0,0,1,$object,'member').'/photos';\n\t\t\t\t$file_OK = is_uploaded_file($_FILES['photo']['tmp_name']);\n\t\t\t\tif ($file_OK)\n\t\t\t\t{\n\t\t\t\t\tif (GETPOST('deletephoto'))\n\t\t\t\t\t{\n\t\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT . '/core/lib/files.lib.php';\n\t\t\t\t\t\t$fileimg=$conf->adherent->dir_output.'/'.get_exdir(0,0,0,1,$object,'member').'/photos/'.$object->photo;\n\t\t\t\t\t\t$dirthumbs=$conf->adherent->dir_output.'/'.get_exdir(0,0,0,1,$object,'member').'/photos/thumbs';\n\t\t\t\t\t\tdol_delete_file($fileimg);\n\t\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (image_format_supported($_FILES['photo']['name']) > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdol_mkdir($dir);\n\n\t\t\t\t\t\tif (@is_dir($dir))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$newfile=$dir.'/'.dol_sanitizeFileName($_FILES['photo']['name']);\n\t\t\t\t\t\t\tif (! dol_move_uploaded_file($_FILES['photo']['tmp_name'],$newfile,1,0,$_FILES['photo']['error']) > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorFailedToSaveFile\"), null, 'errors');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t    // Create thumbs\n\t\t\t\t\t\t\t    $object->addThumbs($newfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tsetEventMessages(\"ErrorBadImageFormat\", null, 'errors');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tswitch($_FILES['photo']['error'])\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 1: //uploaded file exceeds the upload_max_filesize directive in php.ini\n\t\t\t\t\t\tcase 2: //uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form\n\t\t\t\t\t\t\t$errors[] = \"ErrorFileSizeTooLarge\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: //uploaded file was only partially uploaded\n\t\t\t\t\t\t\t$errors[] = \"ErrorFilePartiallyUploaded\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t            $rowid=$object->id;\n\t            $id=$object->id;\n\t\t\t\t$action='';\n\n\t\t\t\tif (! empty($backtopage))\n\t\t\t\t{\n\t\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$action='edit';\n\t\t}\n\t}\n\n\tif ($action == 'add' && $user->rights->adherent->creer)\n\t{\n\t\tif ($canvas) $object->canvas=$canvas;\n\t\t$birthdate='';\n\t\tif (isset($_POST[\"birthday\"]) && $_POST[\"birthday\"]\n\t\t\t\t&& isset($_POST[\"birthmonth\"]) && $_POST[\"birthmonth\"]\n\t\t\t\t&& isset($_POST[\"birthyear\"]) && $_POST[\"birthyear\"])\n\t\t{\n\t\t\t$birthdate=dol_mktime(12, 0, 0, $_POST[\"birthmonth\"], $_POST[\"birthday\"], $_POST[\"birthyear\"]);\n\t\t}\n\t\t$datesubscription='';\n\t\tif (isset($_POST[\"reday\"]) && isset($_POST[\"remonth\"]) && isset($_POST[\"reyear\"]))\n\t\t{\n\t\t\t$datesubscription=dol_mktime(12, 0, 0, $_POST[\"remonth\"], $_POST[\"reday\"], $_POST[\"reyear\"]);\n\t\t}\n\n\t\t$typeid=GETPOST(\"typeid\",'int');\n\t\t$civility_id=GETPOST(\"civility_id\",'int');\n\t\t$lastname=GETPOST(\"lastname\",'alpha');\n\t\t$firstname=GETPOST(\"firstname\",'alpha');\n\t\t$societe=GETPOST(\"societe\",'alpha');\n\t\t$address=GETPOST(\"address\",'alpha');\n\t\t$zip=GETPOST(\"zipcode\",'alpha');\n\t\t$town=GETPOST(\"town\",'alpha');\n\t\t$state_id=GETPOST(\"state_id\",'int');\n\t\t$country_id=GETPOST(\"country_id\",'int');\n\n\t\t$phone=GETPOST(\"phone\",'alpha');\n\t\t$phone_perso=GETPOST(\"phone_perso\",'alpha');\n\t\t$phone_mobile=GETPOST(\"phone_mobile\",'alpha');\n\t\t$skype=GETPOST(\"member_skype\",'alpha');\n\t\t$email=preg_replace('/\\s+/', '', GETPOST(\"member_email\",'alpha'));\n\t\t$login=GETPOST(\"member_login\",'alpha');\n\t\t$pass=GETPOST(\"password\",'alpha');\n\t\t$photo=GETPOST(\"photo\",'alpha');\n\t\t//$comment=GETPOST(\"comment\",'none');\n\t\t$morphy=GETPOST(\"morphy\",'alpha');\n\t\t$subscription=GETPOST(\"subscription\",'alpha');\n\t\t$public=GETPOST(\"public\",'alpha');\n\n\t\t$userid=GETPOST(\"userid\",'int');\n\t\t$socid=GETPOST(\"socid\",'int');\n\n\t\t$object->civility_id = $civility_id;\n\t\t$object->firstname   = $firstname;\n\t\t$object->lastname    = $lastname;\n\t\t$object->societe     = $societe;\n\t\t$object->address     = $address;\n\t\t$object->zip         = $zip;\n\t\t$object->town        = $town;\n\t\t$object->state_id    = $state_id;\n\t\t$object->country_id  = $country_id;\n\t\t$object->phone       = $phone;\n\t\t$object->phone_perso = $phone_perso;\n\t\t$object->phone_mobile= $phone_mobile;\n\t\t$object->skype       = $skype;\n\t\t$object->email       = $email;\n\t\t$object->login       = $login;\n\t\t$object->pass        = $pass;\n\t\t$object->birth       = $birthdate;\n\t\t$object->photo       = $photo;\n\t\t$object->typeid      = $typeid;\n\t\t//$object->note        = $comment;\n\t\t$object->morphy      = $morphy;\n\t\t$object->user_id     = $userid;\n\t\t$object->fk_soc      = $socid;\n\t\t$object->public      = $public;\n\n\t\t// Fill array 'array_options' with data from add form\n\t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\tif ($ret < 0) $error++;\n\n\t\t// Check parameters\n\t\tif (empty($morphy) || $morphy == \"-1\") {\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Nature\")), null, 'errors');\n\t\t}\n\t\t// Tests if the login already exists\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tif (empty($login)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->trans(\"Login\")), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$sql = \"SELECT login FROM \".MAIN_DB_PREFIX.\"adherent WHERE login='\".$db->escape($login).\"'\";\n\t\t\t\t$result = $db->query($sql);\n\t\t\t\tif ($result) {\n\t\t\t\t\t$num = $db->num_rows($result);\n\t\t\t\t}\n\t\t\t\tif ($num) {\n\t\t\t\t\t$error++;\n\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\",$login), null, 'errors');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (empty($pass)) {\n\t\t\t\t$error++;\n\t\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Password\")), null, 'errors');\n\t\t\t}\n\t\t}\n\t\tif ($morphy == 'mor' && empty($societe)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Company\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && empty($lastname)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Lastname\")), null, 'errors');\n\t\t}\n\t\tif ($morphy != 'mor' && (!isset($firstname) || $firstname=='')) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentities(\"Firstname\")), null, 'errors');\n\t\t}\n\t\tif (! ($typeid > 0)) {\t// Keep () before !\n\t\t\t$error++;\n\t\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Type\")), null, 'errors');\n\t\t}\n\t\tif ($conf->global->ADHERENT_MAIL_REQUIRED && ! isValidEMail($email)) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorBadEMail\",$email), null, 'errors');\n\t\t}\n\t\t$public=0;\n\t\tif (isset($public)) $public=1;\n\n\t\tif (! $error)\n\t\t{\n\t\t\t$db->begin();\n\n\t\t\t// Email about right and login does not exist\n\t\t\t$result=$object->create($user);\n\t\t\tif ($result > 0)\n\t\t\t{\n\t\t\t\t// Foundation categories\n\t\t\t\t$memcats = GETPOST('memcats', 'array');\n\t\t\t\t$object->setCategories($memcats);\n\n\t\t\t\t$db->commit();\n\t\t\t\t$rowid=$object->id;\n\t\t\t\t$id=$object->id;\n\t\t\t\t$action='';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$db->rollback();\n\n\t\t\t\tif ($object->error) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\n\t\t\t\t$action = 'create';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$action = 'create';\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_delete' && $confirm == 'yes')\n\t{\n\t\t$result=$object->delete($id, $user);\n\t\tif ($result > 0)\n\t\t{\n\t\t\tif (! empty($backtopage))\n\t\t\t{\n\t\t\t\theader(\"Location: \".$backtopage);\n\t\t\t\texit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\theader(\"Location: list.php\");\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$errmesg=$object->error;\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->creer && $action == 'confirm_valid' && $confirm == 'yes')\n\t{\n\t\t$error=0;\n\n\t\t$db->begin();\n\n\t\t$adht = new AdherentType($db);\n\t\t$adht->fetch($object->typeid);\n\n\t\t$result=$object->validate($user);\n\n\t\tif ($result >= 0 && ! count($object->errors))\n\t\t{\n\t\t\t// Send confirmation email (according to parameters of member type. Otherwise generic)\n\t\t\tif ($object->email && GETPOST(\"send_mail\"))\n\t\t\t{\n\t\t\t\t$subject = '';\n\t\t\t\t$msg= '';\n\n\t\t\t\t// Send subscription email\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t$formmail=new FormMail($db);\n\t\t\t\t// Set output language\n\t\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t\t// Get email content fro mtemplae\n\t\t\t\t$arraydefaultmessage=null;\n\t\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_MEMBER_VALIDATION;\n\n\t\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t\t{\n\t\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t\t}\n\n                if (empty($labeltouse) || (int) $labeltouse === -1) {\n                    //fallback on the old configuration.\n                    setEventMessages('WarningMandatorySetupNotComplete', [], 'errors');\n                    $error++;\n                }else{\n                    $substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n                    complete_substitutions_array($substitutionarray, $outputlangs, $object);\n                    $subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n                    $texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnValid()), $substitutionarray, $outputlangs);\n\n                    $moreinheader='X-Dolibarr-Info: send_an_email by adherents/card.php'.\"\\r\\n\";\n\n                    $result=$object->send_an_email($texttosend, $subjecttosend, array(), array(), array(), \"\", \"\", 0, -1, '', $moreinheader);\n                    if ($result < 0)\n                    {\n                        $error++;\n                        setEventMessages($object->error, $object->errors, 'errors');\n                    }\n                }\n\n\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$error++;\n\t\t\tif ($object->error) {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t} else {\n\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t}\n\t\t}\n\n\t\tif (! $error)\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->rollback();\n\t\t}\n\t\t$action='';\n\t}\n\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_resign')\n\t{\n\t\t$error = 0;\n\n\t\tif ($confirm == 'yes')\n\t\t{\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$result=$object->resiliate($user);\n\n\t\t\tif ($result >= 0 && ! count($object->errors))\n\t\t\t{\n\t\t\t\tif ($object->email && GETPOST(\"send_mail\"))\n\t\t\t\t{\n\t\t\t\t\t$subject = '';\n\t\t\t\t\t$msg= '';\n\n\t\t\t\t\t// Send subscription email\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t\t\t$formmail=new FormMail($db);\n\t\t\t\t\t// Set output language\n\t\t\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t\t\t// Get email content fro mtemplae\n\t\t\t\t\t$arraydefaultmessage=null;\n\t\t\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_CANCELATION;\n\n\t\t\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t\t\t}\n\n                    if (empty($labeltouse) || (int) $labeltouse === -1) {\n                        //fallback on the old configuration.\n                        setEventMessages('WarningMandatorySetupNotComplete', [], 'errors');\n                        $error++;\n                    }else{\n                        $substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n                        complete_substitutions_array($substitutionarray, $outputlangs, $object);\n                        $subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n                        $texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnResiliate()), $substitutionarray, $outputlangs);\n\n                        $moreinheader='X-Dolibarr-Info: send_an_email by adherents/card.php'.\"\\r\\n\";\n\n                        $result=$object->send_an_email($texttosend, $subjecttosend, array(), array(), array(), \"\", \"\", 0, -1, '', $moreinheader);\n                        if ($result < 0)\n                        {\n                            $error++;\n                            setEventMessages($object->error, $object->errors, 'errors');\n                        }\n                    }\n                }\n\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$error++;\n\n\t\t\t\tif ($object->error) {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t} else {\n\t\t\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\t}\n\t\t\t\t$action='';\n\t\t\t}\n\t\t}\n\t\tif (! empty($backtopage) && ! $error)\n\t\t{\n\t\t\theader(\"Location: \".$backtopage);\n\t\t\texit;\n\t\t}\n\t}\n\n\t// SPIP Management\n\tif ($user->rights->adherent->supprimer && $action == 'confirm_del_spip' && $confirm == 'yes')\n\t{\n\t\tif (! count($object->errors))\n\t\t{\n\t\t\tif (!$mailmanspip->del_to_spip($object))\n\t\t\t{\n\t\t\t\tsetEventMessages($langs->trans('DeleteIntoSpipError').': '.$mailmanspip->error, null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($user->rights->adherent->creer && $action == 'confirm_add_spip' && $confirm == 'yes')\n\t{\n\t\tif (! count($object->errors))\n\t\t{\n\t\t\tif (!$mailmanspip->add_to_spip($object))\n\t\t\t{\n\t\t\t\tsetEventMessages($langs->trans('AddIntoSpipError').': '.$mailmanspip->error, null, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Actions when printing a doc from card\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_printing.inc.php';\n\n\t// Actions to build doc\n\t$upload_dir = $conf->adherent->dir_output;\n\t$permissioncreate=$user->rights->adherent->creer;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n\n\t// Actions to send emails\n\t$trigger_name='MEMBER_SENTBYMAIL';\n\t$paramname='id';\n\t$mode='emailfrommember';\n\t$trackid='mem'.$object->id;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_sendmails.inc.php';\n\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formcompany = new FormCompany($db);\n\n$title=$langs->trans(\"Member\") . \" - \" . $langs->trans(\"Card\");\n$help_url='EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros';\nllxHeader('',$title,$help_url);\n\n$countrynotdefined=$langs->trans(\"ErrorSetACountryFirst\").' ('.$langs->trans(\"SeeAbove\").')';\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action))\n{\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\tif (empty($object->error) && $id)\n\t{\n\t\t$object = new Adherent($db);\n\t\t$result=$object->fetch($id);\n\t\tif ($result <= 0) dol_print_error('',$object->error);\n\t}\n   \t$objcanvas->assign_values($action, $object->id, $object->ref);\t// Set value for templates\n    $objcanvas->display_canvas($action);\t\t\t\t\t\t\t// Show template\n}\nelse\n{\n\t// -----------------------------------------\n\t// When used in standard mode\n\t// -----------------------------------------\n\n\tif ($action == 'create')\n\t{\n\t\t/* ************************************************************************** */\n\t\t/*                                                                            */\n\t\t/* Creation mode                                                              */\n\t\t/*                                                                            */\n\t\t/* ************************************************************************** */\n\t\t$object->canvas=$canvas;\n\t\t$object->state_id = GETPOST('state_id', 'int');\n\n\t\t// We set country_id, country_code and country for the selected country\n\t\t$object->country_id=GETPOST('country_id','int')?GETPOST('country_id','int'):$mysoc->country_id;\n\t\tif ($object->country_id)\n\t\t{\n\t\t\t$tmparray=getCountry($object->country_id,'all');\n\t\t\t$object->country_code=$tmparray['code'];\n\t\t\t$object->country=$tmparray['label'];\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\n\t\tprint load_fiche_titre($langs->trans(\"NewMember\"));\n\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\t\t\tprint 'jQuery(document).ready(function () {\n\t\t\t\t\t\tjQuery(\"#selectcountry_id\").change(function() {\n\t\t\t\t\t\t\tdocument.formsoc.action.value=\"create\";\n\t\t\t\t\t\t\tdocument.formsoc.submit();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfunction initfieldrequired()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tjQuery(\"#tdcompany\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tjQuery(\"#tdlastname\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tjQuery(\"#tdfirstname\").removeClass(\"fieldrequired\");\n\t\t\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'mor\\')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tjQuery(\"#tdcompany\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'phy\\')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tjQuery(\"#tdlastname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t\tjQuery(\"#tdfirstname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjQuery(\"#morphy\").change(function() {\n\t\t\t\t\t\t\tinitfieldrequired();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinitfieldrequired();\n\t\t\t\t\t})';\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\n\t\tprint '<form name=\"formsoc\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" enctype=\"multipart/form-data\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\t\tif ($backtopage) print '<input type=\"hidden\" name=\"backtopage\" value=\"'.($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]).'\">';\n\n        dol_fiche_head('');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\t\tprint '<tbody>';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</span></td><td><input type=\"text\" name=\"member_login\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"member_login\"])?GETPOST(\"member_login\", 'alpha', 2):$object->login).'\"></td></tr>';\n\t\t}\n\n\t\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\t\t\t$generated_password=getRandomPassword(false);\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Password\").'</span></td><td>';\n\t\t\tprint '<input type=\"text\" class=\"minwidth300\" maxlength=\"50\" name=\"password\" value=\"'.$generated_password.'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Type\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"MemberType\").'</td><td>';\n\t\t$listetype=$adht->liste_array();\n\t\tif (count($listetype))\n\t\t{\n\t\t\tprint $form->selectarray(\"typeid\", $listetype, GETPOST('typeid','int')?GETPOST('typeid','int'):$typeid, count($listetype)>1?1:0);\n\t\t} else {\n\t\t\tprint '<font class=\"error\">'.$langs->trans(\"NoTypeDefinedGoToSetup\").'</font>';\n\t\t}\n\t\tprint \"</td>\\n\";\n\n\t\t// Morphy\n\t\t$morphys[\"phy\"] = $langs->trans(\"Physical\");\n\t\t$morphys[\"mor\"] = $langs->trans(\"Moral\");\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Nature\").\"</td><td>\\n\";\n\t\tprint $form->selectarray(\"morphy\", $morphys, GETPOST('morphy','alpha')?GETPOST('morphy','alpha'):$object->morphy, 1);\n\t\tprint \"</td>\\n\";\n\n\t\t// Company\n\t\tprint '<tr><td id=\"tdcompany\">'.$langs->trans(\"Company\").'</td><td><input type=\"text\" name=\"societe\" class=\"minwidth300\" maxlength=\"128\" value=\"'.(GETPOST('societe','alpha')?GETPOST('societe','alpha'):$object->societe).'\"></td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td>';\n\t\tprint $formcompany->select_civility(GETPOST('civility_id','int')?GETPOST('civility_id','int'):$object->civility_id,'civility_id').'</td>';\n\t\tprint '</tr>';\n\n\t\t// Lastname\n\t\tprint '<tr><td id=\"tdlastname\">'.$langs->trans(\"Lastname\").'</td><td><input type=\"text\" name=\"lastname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(GETPOST('lastname','alpha')?GETPOST('lastname','alpha'):$object->lastname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Firstname\n\t\tprint '<tr><td id=\"tdfirstname\">'.$langs->trans(\"Firstname\").'</td><td><input type=\"text\" name=\"firstname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(GETPOST('firstname','alpha')?GETPOST('firstname','alpha'):$object->firstname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// EMail\n\t\tprint '<tr><td>'.($conf->global->ADHERENT_MAIL_REQUIRED?'<span class=\"fieldrequired\">':'').$langs->trans(\"EMail\").($conf->global->ADHERENT_MAIL_REQUIRED?'</span>':'').'</td><td><input type=\"text\" name=\"member_email\" class=\"minwidth300\" maxlength=\"255\" value=\"'.(GETPOST('member_email','alpha')?GETPOST('member_email','alpha'):$object->email).'\"></td></tr>';\n\n\t\t// Address\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Address\").'</td><td>';\n\t\tprint '<textarea name=\"address\" wrap=\"soft\" class=\"quatrevingtpercent\" rows=\"2\">'.(GETPOST('address','alphanohtml')?GETPOST('address','alphanohtml'):$object->address).'</textarea>';\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$langs->trans(\"Zip\").' / '.$langs->trans(\"Town\").'</td><td>';\n\t\tprint $formcompany->select_ziptown((GETPOST('zipcode','alphanohtml')?GETPOST('zipcode','alphanohtml'):$object->zip),'zipcode',array('town','selectcountry_id','state_id'),6);\n\t\tprint ' ';\n\t\tprint $formcompany->select_ziptown((GETPOST('town','alphanohtml')?GETPOST('town','alphanohtml'):$object->town),'town',array('zipcode','selectcountry_id','state_id'));\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\t$object->country_id=$object->country_id?$object->country_id:$mysoc->country_id;\n\t\tprint '<tr><td width=\"25%\">'.$langs->trans('Country').'</td><td>';\n\t\tprint $form->select_country(GETPOST('country_id','alpha')?GETPOST('country_id','alpha'):$object->country_id,'country_id');\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->MEMBER_DISABLE_STATE))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans('State').'</td><td>';\n\t\t\tif ($object->country_id)\n\t\t\t{\n\t\t\t\tprint $formcompany->select_state(GETPOST('state_id','int')?GETPOST('state_id','int'):$object->state_id,$object->country_code);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $countrynotdefined;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Pro phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td><td><input type=\"text\" name=\"phone\" size=\"20\" value=\"'.(GETPOST('phone','alpha')?GETPOST('phone','alpha'):$object->phone).'\"></td></tr>';\n\n\t\t// Personal phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePerso\").'</td><td><input type=\"text\" name=\"phone_perso\" size=\"20\" value=\"'.(GETPOST('phone_perso','alpha')?GETPOST('phone_perso','alpha'):$object->phone_perso).'\"></td></tr>';\n\n\t\t// Mobile phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td><td><input type=\"text\" name=\"phone_mobile\" size=\"20\" value=\"'.(GETPOST('phone_mobile','alpha')?GETPOST('phone_mobile','alpha'):$object->phone_mobile).'\"></td></tr>';\n\n\t    // Skype\n\t    if (! empty($conf->skype->enabled))\n\t    {\n\t\t\tprint '<tr><td>'.$langs->trans(\"Skype\").'</td><td><input type=\"text\" name=\"member_skype\" size=\"40\" value=\"'.(GETPOST('member_skype','alpha')?GETPOST('member_skype','alpha'):$object->skype).'\"></td></tr>';\n\t    }\n\n\t\t// Birthday\n\t\tprint \"<tr><td>\".$langs->trans(\"Birthday\").\"</td><td>\\n\";\n\t\t$form->select_date(($object->birth ? $object->birth : -1),'birth','','',1,'formsoc');\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Public profil\n\t\tprint \"<tr><td>\".$langs->trans(\"Public\").\"</td><td>\\n\";\n\t\tprint $form->selectyesno(\"public\",$object->public,1);\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Categories\n\t\tif (! empty($conf->categorie->enabled)  && ! empty($user->rights->categorie->lire))\n\t\t{\n\t\t\tprint '<tr><td>' . fieldLabel('Categories', 'memcars') . '</td><td>';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_MEMBER, null, 'parent', null, null, 1);\n\t\t\tprint $form->multiselectarray('memcats', $cate_arbo, GETPOST('memcats', 'array'), null, null, null, null, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n        print '<tbody>';\n\t\tprint \"</table>\\n\";\n\n        dol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" name=\"button\" class=\"button\" value=\"'.$langs->trans(\"AddMember\").'\">';\n\t\tprint '&nbsp;&nbsp;';\n\t\tif (! empty($backtopage))\n\t\t{\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans('Cancel').'\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<input type=\"button\" class=\"button\" value=\"' . $langs->trans(\"Cancel\") . '\" onClick=\"javascript:history.go(-1)\">';\n\t\t}\n\t\tprint '</div>';\n\n\t\tprint \"</form>\\n\";\n\t}\n\n\tif ($action == 'edit')\n\t{\n\t\t/********************************************\n\t\t*\n\t\t* Edition mode\n\t\t*\n\t\t********************************************/\n\n\t\t$res=$object->fetch($id);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db,$object->error); exit;\n\t\t}\n\t\t$res=$object->fetch_optionals();\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\t\t$adht->fetch($object->typeid);\n\n\t\t// We set country_id, and country_code, country of the chosen country\n\t\t$country=GETPOST('country','int');\n\t\tif (!empty($country) || $object->country_id)\n\t\t{\n\t\t\t$sql = \"SELECT rowid, code, label from \".MAIN_DB_PREFIX.\"c_country where rowid = \".(!empty($country)?$country:$object->country_id);\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t\t$object->country_id=$obj->rowid;\n\t\t\t$object->country_code=$obj->code;\n\t\t\t$object->country=$langs->trans(\"Country\".$obj->code)?$langs->trans(\"Country\".$obj->code):$obj->label;\n\t\t}\n\n\t\t$head = member_prepare_head($object);\n\n\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint \"\\n\".'<script type=\"text/javascript\" language=\"javascript\">';\n\t\t\tprint 'jQuery(document).ready(function () {\n\t\t\t\tjQuery(\"#selectcountry_id\").change(function() {\n\t\t\t\t\tdocument.formsoc.action.value=\"edit\";\n\t\t\t\t\tdocument.formsoc.submit();\n\t\t\t\t});\n\t\t\t\tfunction initfieldrequired()\n\t\t\t\t{\n\t\t\t\t\tjQuery(\"#tdcompany\").removeClass(\"fieldrequired\");\n\t\t\t\t\tjQuery(\"#tdlastname\").removeClass(\"fieldrequired\");\n\t\t\t\t\tjQuery(\"#tdfirstname\").removeClass(\"fieldrequired\");\n\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'mor\\')\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\"#tdcompany\").addClass(\"fieldrequired\");\n\t\t\t\t\t}\n\t\t\t\t\tif (jQuery(\"#morphy\").val() == \\'phy\\')\n\t\t\t\t\t{\n\t\t\t\t\t\tjQuery(\"#tdlastname\").addClass(\"fieldrequired\");\n\t\t\t\t\t\tjQuery(\"#tdfirstname\").addClass(\"fieldrequired\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjQuery(\"#morphy\").change(function() {\n\t\t\t\t\tinitfieldrequired();\n\t\t\t\t});\n\t\t\t\tinitfieldrequired();\n\t\t\t})';\n\t\t\tprint '</script>'.\"\\n\";\n\t\t}\n\n\t\tprint '<form name=\"formsoc\" action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"post\" enctype=\"multipart/form-data\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\" />';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\" />';\n\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$id.'\" />';\n\t\tprint '<input type=\"hidden\" name=\"statut\" value=\"'.$object->statut.'\" />';\n\t\tif ($backtopage) print '<input type=\"hidden\" name=\"backtopage\" value=\"'.($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]).'\">';\n\n\t\tdol_fiche_head($head, 'general', $langs->trans(\"Member\"), 0, 'user');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\t// Ref\n\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"Ref\").'</td><td class=\"valeur\">'.$object->id.'</td></tr>';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</span></td><td><input type=\"text\" name=\"login\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"login\"])?GETPOST(\"login\",'alpha',2):$object->login).'\"></td></tr>';\n\t\t}\n\n\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Password\").'</td><td><input type=\"password\" name=\"pass\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"pass\"])?GETPOST(\"pass\",'',2):$object->pass).'\"></td></tr>';\n\t\t}\n\t\t// Morphy\n\t\t$morphys[\"phy\"] = $langs->trans(\"Physical\");\n\t\t$morphys[\"mor\"] = $langs->trans(\"Morale\");\n\t\tprint '<tr><td><span class=\"fieldrequired\">'.$langs->trans(\"Nature\").'</span></td><td>';\n\t\tprint $form->selectarray(\"morphy\", $morphys, (GETPOSTISSET(\"morphy\")?GETPOST(\"morphy\",'alpha'):$object->morphy));\n\t\tprint \"</td></tr>\";\n\n\t\t// Type\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Type\").'</td><td>';\n\t\tif ($user->rights->adherent->creer)\n\t\t{\n\t\t\tprint $form->selectarray(\"typeid\", $adht->liste_array(), (GETPOSTISSET(\"typeid\")?GETPOST(\"typeid\",'int'):$object->typeid));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $adht->getNomUrl(1);\n\t\t\tprint '<input type=\"hidden\" name=\"typeid\" value=\"'.$object->typeid.'\">';\n\t\t}\n\t\tprint \"</td></tr>\";\n\n\t\t// Company\n\t\tprint '<tr><td id=\"tdcompany\">'.$langs->trans(\"Company\").'</td><td><input type=\"text\" name=\"societe\" class=\"minwidth300\" maxlength=\"128\" value=\"'.(isset($_POST[\"societe\"])?GETPOST(\"societe\",'',2):$object->societe).'\"></td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td>';\n\t\tprint $formcompany->select_civility(isset($_POST[\"civility_id\"])?$_POST[\"civility_id\"]:$object->civility_id).\"\\n\";\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Lastname\n\t\tprint '<tr><td id=\"tdlastname\">'.$langs->trans(\"Lastname\").'</td><td><input type=\"text\" name=\"lastname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"lastname\"])?GETPOST(\"lastname\",'',2):$object->lastname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Firstname\n\t\tprint '<tr><td id=\"tdfirstname\">'.$langs->trans(\"Firstname\").'</td><td><input type=\"text\" name=\"firstname\" class=\"minwidth300\" maxlength=\"50\" value=\"'.(isset($_POST[\"firstname\"])?GETPOST(\"firstname\",'',3):$object->firstname).'\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Photo\n\t\tprint '<tr><td>'.$langs->trans(\"Photo\").'</td>';\n\t\tprint '<td class=\"hideonsmartphone\" valign=\"middle\">';\n\t\tprint $form->showphoto('memberphoto',$object).\"\\n\";\n\t\tif ($caneditfieldmember)\n\t\t{\n\t\t\tif ($object->photo) print \"<br>\\n\";\n\t\t\tprint '<table class=\"nobordernopadding\">';\n\t\t\tif ($object->photo) print '<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\tprint '<tr><td>'.$langs->trans(\"PhotoFile\").'</td></tr>';\n\t\t\tprint '<tr><td><input type=\"file\" class=\"flat\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\tprint '</table>';\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// EMail\n\t\tprint '<tr><td>'.($conf->global->ADHERENT_MAIL_REQUIRED?'<span class=\"fieldrequired\">':'').$langs->trans(\"EMail\").($conf->global->ADHERENT_MAIL_REQUIRED?'</span>':'').'</td><td><input type=\"text\" name=\"member_email\" class=\"minwidth300\" maxlength=\"255\" value=\"'.(isset($_POST[\"member_email\"])?GETPOST(\"member_email\",'',2):$object->email).'\"></td></tr>';\n\n\t\t// Address\n\t\tprint '<tr><td>'.$langs->trans(\"Address\").'</td><td>';\n\t\tprint '<textarea name=\"address\" wrap=\"soft\" class=\"quatrevingtpercent\" rows=\"'.ROWS_2.'\">'.(isset($_POST[\"address\"])?GETPOST(\"address\",'',2):$object->address).'</textarea>';\n\t\tprint '</td></tr>';\n\n\t\t// Zip / Town\n\t\tprint '<tr><td>'.$langs->trans(\"Zip\").' / '.$langs->trans(\"Town\").'</td><td>';\n\t\tprint $formcompany->select_ziptown((isset($_POST[\"zipcode\"])?GETPOST(\"zipcode\",'',2):$object->zip),'zipcode',array('town','selectcountry_id','state_id'),6);\n\t\tprint ' ';\n\t\tprint $formcompany->select_ziptown((isset($_POST[\"town\"])?GETPOST(\"town\",'',2):$object->town),'town',array('zipcode','selectcountry_id','state_id'));\n\t\tprint '</td></tr>';\n\n\t\t// Country\n\t\t//$object->country_id=$object->country_id?$object->country_id:$mysoc->country_id;    // In edit mode we don't force to company country if not defined\n\t\tprint '<tr><td>'.$langs->trans('Country').'</td><td>';\n\t\tprint $form->select_country(isset($_POST[\"country_id\"])?$_POST[\"country_id\"]:$object->country_id,'country_id');\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\tprint '</td></tr>';\n\n\t\t// State\n\t\tif (empty($conf->global->MEMBER_DISABLE_STATE))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans('State').'</td><td>';\n\t\t\tprint $formcompany->select_state($object->state_id,isset($_POST[\"country_id\"])?GETPOST(\"country_id\"):$object->country_id);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Pro phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePro\").'</td><td><input type=\"text\" name=\"phone\" size=\"20\" value=\"'.(isset($_POST[\"phone\"])?GETPOST(\"phone\"):$object->phone).'\"></td></tr>';\n\n\t\t// Personal phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhonePerso\").'</td><td><input type=\"text\" name=\"phone_perso\" size=\"20\" value=\"'.(isset($_POST[\"phone_perso\"])?GETPOST(\"phone_perso\"):$object->phone_perso).'\"></td></tr>';\n\n\t\t// Mobile phone\n\t\tprint '<tr><td>'.$langs->trans(\"PhoneMobile\").'</td><td><input type=\"text\" name=\"phone_mobile\" size=\"20\" value=\"'.(isset($_POST[\"phone_mobile\"])?GETPOST(\"phone_mobile\"):$object->phone_mobile).'\"></td></tr>';\n\n\t    // Skype\n\t    if (! empty($conf->skype->enabled))\n\t    {\n\t\t\t    print '<tr><td>'.$langs->trans(\"Skype\").'</td><td><input type=\"text\" name=\"skype\" class=\"minwidth100\" value=\"'.(isset($_POST[\"skype\"])?GETPOST(\"skype\"):$object->skype).'\"></td></tr>';\n\t    }\n\n\t\t// Birthday\n\t\tprint \"<tr><td>\".$langs->trans(\"Birthday\").\"</td><td>\\n\";\n\t\t$form->select_date(($object->birth ? $object->birth : -1),'birth','','',1,'formsoc');\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Public profil\n\t\tprint \"<tr><td>\".$langs->trans(\"Public\").\"</td><td>\\n\";\n\t\tprint $form->selectyesno(\"public\",(isset($_POST[\"public\"])?GETPOST(\"public\",'',2):$object->public),1);\n\t\tprint \"</td></tr>\\n\";\n\n\t\t// Categories\n\t\tif (! empty( $conf->categorie->enabled ) && !empty( $user->rights->categorie->lire ))\n\t\t{\n\t\t\tprint '<tr><td>' . fieldLabel('Categories', 'memcats') . '</td>';\n\t\t\tprint '<td>';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_MEMBER, null, null, null, null, 1);\n\t\t\t$c = new Categorie($db);\n\t\t\t$cats = $c->containing($object->id, Categorie::TYPE_MEMBER);\n\t\t\tforeach ($cats as $cat) {\n\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t}\n\t\t\tprint $form->multiselectarray('memcats', $cate_arbo, $arrayselected, '', 0, '', 0, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n\t\t// Third party Dolibarr\n\t\tif (! empty($conf->societe->enabled))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrThirdParty\").'</td><td colspan=\"2\" class=\"valeur\">';\n\t\t\tif ($object->fk_soc)\n\t\t\t{\n\t\t\t\t$company=new Societe($db);\n\t\t\t\t$result=$company->fetch($object->fk_soc);\n\t\t\t\tprint $company->getNomUrl(1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"NoThirdPartyAssociatedToMember\");\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Login Dolibarr\n\t\tprint '<tr><td>'.$langs->trans(\"LinkedToDolibarrUser\").'</td><td colspan=\"2\" class=\"valeur\">';\n\t\tif ($object->user_id)\n\t\t{\n\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'none');\n\t\t}\n\t\telse print $langs->trans(\"NoDolibarrAccess\");\n\t\tprint '</td></tr>';\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_add.tpl.php';\n\n\t\tprint '</table>';\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"save\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\n\t}\n\n\tif ($id > 0 && $action != 'edit')\n\t{\n\t\t/* ************************************************************************** */\n\t\t/*                                                                            */\n\t\t/* View mode                                                                  */\n\t\t/*                                                                            */\n\t\t/* ************************************************************************** */\n\n\t\t$res=$object->fetch($id);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db,$object->error); exit;\n\t\t}\n\t\t$res=$object->fetch_optionals();\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\t\t$adht = new AdherentType($db);\n\t\t$res=$adht->fetch($object->typeid);\n\t\tif ($res < 0) {\n\t\t\tdol_print_error($db); exit;\n\t\t}\n\n\n\t\t/*\n\t\t * Show tabs\n\t\t */\n\t\t$head = member_prepare_head($object);\n\n\t\tdol_fiche_head($head, 'general', $langs->trans(\"Member\"), -1, 'user');\n\n\t\t// Confirm create user\n\t\tif ($action == 'create_user')\n\t\t{\n\t\t\t$login=$object->login;\n\t\t\tif (empty($login))\n\t\t\t{\n\t\t\t\t// Full firstname and name separated with a dot : firstname.name\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\t$login=dol_buildlogin($object->lastname,$object->firstname);\n\t\t\t}\n\t\t\tif (empty($login)) $login=strtolower(substr($object->firstname, 0, 4)) . strtolower(substr($object->lastname, 0, 4));\n\n\t\t\t// Create a form array\n\t\t\t$formquestion=array(\n\t\t\t\t\tarray('label' => $langs->trans(\"LoginToCreate\"), 'type' => 'text', 'name' => 'login', 'value' => $login)\n\t\t\t);\n\t\t\t$text=$langs->trans(\"ConfirmCreateLogin\").'<br>';\n\t\t\tif (! empty($conf->societe->enabled))\n\t\t\t{\n\t\t\t\tif ($object->fk_soc > 0) $text.=$langs->trans(\"UserWillBeExternalUser\");\n\t\t\t\telse $text.=$langs->trans(\"UserWillBeInternalUser\");\n\t\t\t}\n\t\t\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id,$langs->trans(\"CreateDolibarrLogin\"),$text,\"confirm_create_user\",$formquestion,'yes');\n\t\t}\n\n\t\t// Confirm create third party\n\t\tif ($action == 'create_thirdparty')\n\t\t{\n\t\t\t$companyalias='';\n\t\t\t$fullname = $object->getFullName($langs);\n\n\t\t\tif ($object->morphy == 'mor')\n\t\t\t{\n\t\t\t\t$companyname=$object->societe;\n\t\t\t\tif (! empty($fullname)) $companyalias=$fullname;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$companyname=$fullname;\n\t\t\t\tif (! empty($object->societe)) $companyalias=$object->societe;\n\t\t\t}\n\n\t\t\t// Create a form array\n\t\t\t$formquestion=array(\n\t\t\t\tarray('label' => $langs->trans(\"NameToCreate\"), 'type' => 'text', 'name' => 'companyname', 'value' => $companyname, 'morecss' => 'minwidth300', 'moreattr' => 'maxlength=\"128\"'),\n\t\t\t\tarray('label' => $langs->trans(\"AliasNames\"), 'type' => 'text', 'name' => 'companyalias', 'value' => $companyalias, 'morecss' => 'minwidth300', 'moreattr' => 'maxlength=\"128\"')\n\t\t\t);\n\n\t\t\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id, $langs->trans(\"CreateDolibarrThirdParty\"), $langs->trans(\"ConfirmCreateThirdParty\"), \"confirm_create_thirdparty\", $formquestion, 'yes');\n\t\t}\n\n\t\t// Confirm validate member\n\t\tif ($action == 'valid')\n\t\t{\n\t\t\t$langs->load(\"mails\");\n\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$subject = '';\n\t\t\t$msg= '';\n\n\t\t\t// Send subscription email\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t$formmail=new FormMail($db);\n\t\t\t// Set output language\n\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t// Get email content from template\n\t\t\t$arraydefaultmessage=null;\n\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_MEMBER_VALIDATION;\n\n\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t{\n\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t}\n\n\t\t\t$substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n\t\t\tcomplete_substitutions_array($substitutionarray, $outputlangs, $object);\n\t\t\t$subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n\t\t\t$texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnValid()), $substitutionarray, $outputlangs);\n\n\t\t\t$tmp=$langs->trans(\"SendingAnEMailToMember\");\n\t\t\t$tmp.='<br>'.$langs->trans(\"MailFrom\").': <b>'.$conf->global->ADHERENT_MAIL_FROM.'</b>, ';\n\t\t\t$tmp.='<br>'.$langs->trans(\"MailRecipient\").': <b>'.$object->email.'</b>';\n\t\t\t$helpcontent='';\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailFrom\").'</b>: '.$conf->global->ADHERENT_MAIL_FROM.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailRecipient\").'</b>: '.$object->email.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Subject\").'</b>:<br>'.\"\\n\";\n\t\t\t$helpcontent.=$subjecttosend.\"\\n\";\n\t\t\t$helpcontent.=\"<br>\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Content\").'</b>:<br>';\n\t\t\t$helpcontent.=dol_htmlentitiesbr($texttosend).\"\\n\";\n\t\t\t$label=$form->textwithpicto($tmp,$helpcontent,1,'help');\n\n\t\t\t// Create form popup\n\t\t\t$formquestion=array();\n\t\t\tif ($object->email) $formquestion[]=array('type' => 'checkbox', 'name' => 'send_mail', 'label' => $label,  'value' => ($conf->global->ADHERENT_DEFAULT_SENDINFOBYMAIL?true:false));\n\t\t\tif (! empty($conf->mailman->enabled) && ! empty($conf->global->ADHERENT_USE_MAILMAN)) {\n\t\t\t\t$formquestion[]=array('type'=>'other','label'=>$langs->transnoentitiesnoconv(\"SynchroMailManEnabled\"),'value'=>'');\n\t\t\t}\n\t\t\tif (! empty($conf->mailman->enabled) && ! empty($conf->global->ADHERENT_USE_SPIP))    {\n\t\t\t\t$formquestion[]=array('type'=>'other','label'=>$langs->transnoentitiesnoconv(\"SynchroSpipEnabled\"),'value'=>'');\n\t\t\t}\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"ValidateMember\"), $langs->trans(\"ConfirmValidateMember\"), \"confirm_valid\", $formquestion, 'yes', 1, 220);\n\t\t}\n\n\t\t// Confirm terminate\n\t\tif ($action == 'resign')\n\t\t{\n\t\t\t$langs->load(\"mails\");\n\n\t\t\t$adht = new AdherentType($db);\n\t\t\t$adht->fetch($object->typeid);\n\n\t\t\t$subject = '';\n\t\t\t$msg= '';\n\n\t\t\t// Send subscription email\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n\t\t\t$formmail=new FormMail($db);\n\t\t\t// Set output language\n\t\t\t$outputlangs = new Translate('', $conf);\n\t\t\t$outputlangs->setDefaultLang(empty($object->thirdparty->default_lang) ? $mysoc->default_lang : $object->thirdparty->default_lang);\n\t\t\t$outputlangs->loadLangs(array(\"main\", \"members\"));\n\t\t\t// Get email content fro mtemplae\n\t\t\t$arraydefaultmessage=null;\n\t\t\t$labeltouse = $conf->global->ADHERENT_EMAIL_TEMPLATE_CANCELATION;\n\n\t\t\tif (! empty($labeltouse)) $arraydefaultmessage=$formmail->getEMailTemplate($db, 'member', $user, $outputlangs, 0, 1, $labeltouse);\n\n\t\t\tif (! empty($labeltouse) && is_object($arraydefaultmessage) && $arraydefaultmessage->id > 0)\n\t\t\t{\n\t\t\t\t$subject = $arraydefaultmessage->topic;\n\t\t\t\t$msg     = $arraydefaultmessage->content;\n\t\t\t}\n\n\t\t\t$substitutionarray=getCommonSubstitutionArray($outputlangs, 0, null, $object);\n\t\t\tcomplete_substitutions_array($substitutionarray, $outputlangs, $object);\n\t\t\t$subjecttosend = make_substitutions($subject, $substitutionarray, $outputlangs);\n\t\t\t$texttosend = make_substitutions(dol_concatdesc($msg, $adht->getMailOnResiliate()), $substitutionarray, $outputlangs);\n\n\t\t\t$tmp=$langs->trans(\"SendingAnEMailToMember\");\n\t\t\t$tmp.='<br>('.$langs->trans(\"MailFrom\").': <b>'.$conf->global->ADHERENT_MAIL_FROM.'</b>, ';\n\t\t\t$tmp.=$langs->trans(\"MailRecipient\").': <b>'.$object->email.'</b>)';\n\t\t\t$helpcontent='';\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailFrom\").'</b>: '.$conf->global->ADHERENT_MAIL_FROM.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"MailRecipient\").'</b>: '.$object->email.'<br>'.\"\\n\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Subject\").'</b>:<br>'.\"\\n\";\n\t\t\t$helpcontent.=$subjecttosend.\"\\n\";\n\t\t\t$helpcontent.=\"<br>\";\n\t\t\t$helpcontent.='<b>'.$langs->trans(\"Content\").'</b>:<br>';\n\t\t\t$helpcontent.=dol_htmlentitiesbr($texttosend).\"\\n\";\n\t\t\t$label=$form->textwithpicto($tmp,$helpcontent,1,'help');\n\n\t\t\t// Create an array\n\t\t\t$formquestion=array();\n\t\t\tif ($object->email) $formquestion[]=array('type' => 'checkbox', 'name' => 'send_mail', 'label' => $label, 'value' => (! empty($conf->global->ADHERENT_DEFAULT_SENDINFOBYMAIL)?'true':'false'));\n\t\t\tif ($backtopage)    $formquestion[]=array('type' => 'hidden', 'name' => 'backtopage', 'value' => ($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]));\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"ResiliateMember\"), $langs->trans(\"ConfirmResiliateMember\"), \"confirm_resign\", $formquestion, 'no', 1, 220);\n\t\t}\n\n\t\t// Confirm remove member\n\t\tif ($action == 'delete')\n\t\t{\n\t\t\t$formquestion=array();\n\t\t\tif ($backtopage) $formquestion[]=array('type' => 'hidden', 'name' => 'backtopage', 'value' => ($backtopage != '1' ? $backtopage : $_SERVER[\"HTTP_REFERER\"]));\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans(\"DeleteMember\"), $langs->trans(\"ConfirmDeleteMember\"), \"confirm_delete\", $formquestion, 'no', 1);\n\t\t}\n\n\t\t// Confirm add in spip\n\t\tif ($action == 'add_spip')\n\t\t{\n\t\t\tprint $form->formconfirm(\"card.php?rowid=\".$id, $langs->trans('AddIntoSpip'), $langs->trans('AddIntoSpipConfirmation'), 'confirm_add_spip');\n\t\t}\n\t\t// Confirm removed from spip\n\t\tif ($action == 'del_spip')\n\t\t{\n\t\t\tprint $form->formconfirm(\"card.php?rowid=$id\", $langs->trans('DeleteIntoSpip'), $langs->trans('DeleteIntoSpipConfirmation'), 'confirm_del_spip');\n\t\t}\n\n\t\t$rowspan=17;\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED)) $rowspan++;\n\t\tif (! empty($conf->societe->enabled)) $rowspan++;\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'rowid', $linkback);\n\n        print '<div class=\"fichecenter\">';\n        print '<div class=\"fichehalfleft\">';\n\n        print '<div class=\"underbanner clearboth\"></div>';\n\t\tprint '<table class=\"border centpercent\">';\n\n\t\t// Login\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Login\").' / '.$langs->trans(\"Id\").'</td><td class=\"valeur\">'.$object->login.'&nbsp;</td></tr>';\n\t\t}\n\n\t\t// Type\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Type\").'</td><td class=\"valeur\">'.$adht->getNomUrl(1).\"</td></tr>\\n\";\n\n\t\t// Morphy\n\t\tprint '<tr><td>'.$langs->trans(\"Nature\").'</td><td class=\"valeur\" >'.$object->getmorphylib().'</td>';\n\t\tprint '</tr>';\n\n\t\t// Company\n\t\tprint '<tr><td>'.$langs->trans(\"Company\").'</td><td class=\"valeur\">'.$object->societe.'</td></tr>';\n\n\t\t// Civility\n\t\tprint '<tr><td>'.$langs->trans(\"UserTitle\").'</td><td class=\"valeur\">'.$object->getCivilityLabel().'&nbsp;</td>';\n\t\tprint '</tr>';\n\n\t\t// Password\n\t\tif (empty($conf->global->ADHERENT_LOGIN_NOT_REQUIRED))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"Password\").'</td><td>'.preg_replace('/./i','*',$object->pass);\n\t\t\tif ($object->pass) print preg_replace('/./i','*',$object->pass);\n\t\t\telse\n\t\t\t{\n\t\t\t    if ($user->admin) print $langs->trans(\"Crypted\").': '.$object->pass_indatabase_crypted;\n\t\t\t    else print $langs->trans(\"Hidden\");\n\t\t\t}\n\t\t\tif ((! empty($object->pass) || ! empty($object->pass_crypted)) && empty($object->user_id))\n\t\t\t{\n\t\t\t    $langs->load(\"errors\");\n\t\t\t    $htmltext=$langs->trans(\"WarningPasswordSetWithNoAccount\");\n\t\t\t    print ' '.$form->textwithpicto('', $htmltext,1,'warning');\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Date end subscription\n\t\tprint '<tr><td>'.$langs->trans(\"SubscriptionEndDate\").'</td><td class=\"valeur\">';\n\t\tif ($object->datefin)\n\t\t{\n\t\t\tprint dol_print_date($object->datefin,'day');\n\t\t\tif ($object->hasDelay()) {\n\t\t\t\tprint \" \".img_warning($langs->trans(\"Late\"));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! $adht->subscription)\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotRecorded\");\n\t\t\t\tif ($object->statut > 0) print \" \".img_warning($langs->trans(\"Late\")); // displays delay Pictogram only if not a draft and not terminated\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotReceived\");\n\t\t\t\tif ($object->statut > 0) print \" \".img_warning($langs->trans(\"Late\")); // displays delay Pictogram only if not a draft and not terminated\n\t\t\t}\n\t\t}\n\t\tprint '</td></tr>';\n\n\t\t// Third party Dolibarr\n\t\tif (! empty($conf->societe->enabled))\n\t\t{\n\t\t\tprint '<tr><td>';\n\t\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>';\n\t\t\tprint $langs->trans(\"LinkedToDolibarrThirdParty\");\n\t\t\tprint '</td>';\n\t\t\tif ($action != 'editthirdparty' && $user->rights->adherent->creer) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editthirdparty&amp;rowid='.$object->id.'\">'.img_edit($langs->trans('SetLinkToThirdParty'),1).'</a></td>';\n\t\t\tprint '</tr></table>';\n\t\t\tprint '</td><td colspan=\"2\" class=\"valeur\">';\n\t\t\tif ($action == 'editthirdparty')\n\t\t\t{\n\t\t\t\t$htmlname='socid';\n\t\t\t\tprint '<form method=\"POST\" action=\"'.$_SERVER['PHP_SELF'].'\" name=\"form'.$htmlname.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\tprint '<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t\tprint '<tr><td>';\n\t\t\t\tprint $form->select_company($object->fk_soc,'socid','',1);\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t\tprint '</tr></table></form>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($object->fk_soc)\n\t\t\t\t{\n\t\t\t\t\t$company=new Societe($db);\n\t\t\t\t\t$result=$company->fetch($object->fk_soc);\n\t\t\t\t\tprint $company->getNomUrl(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint $langs->trans(\"NoThirdPartyAssociatedToMember\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Login Dolibarr\n\t\tprint '<tr><td>';\n\t\tprint '<table class=\"nobordernopadding\" width=\"100%\"><tr><td>';\n\t\tprint $langs->trans(\"LinkedToDolibarrUser\");\n\t\tprint '</td>';\n\t\tif ($action != 'editlogin' && $user->rights->adherent->creer)\n\t\t{\n\t\t\tprint '<td align=\"right\">';\n\t\t\tif ($user->rights->user->user->creer)\n\t\t\t{\n\t\t\t\tprint '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editlogin&amp;rowid='.$object->id.'\">'.img_edit($langs->trans('SetLinkToUser'),1).'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\tprint '</tr></table>';\n\t\tprint '</td><td colspan=\"2\" class=\"valeur\">';\n\t\tif ($action == 'editlogin')\n\t\t{\n\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'userid','');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($object->user_id)\n\t\t\t{\n\t\t\t\t$form->form_users($_SERVER['PHP_SELF'].'?rowid='.$object->id,$object->user_id,'none');\n\t\t\t}\n\t\t\telse print $langs->trans(\"NoDolibarrAccess\");\n\t\t}\n\t\tprint '</td></tr>';\n\n        print '</table>';\n\n        print '</div>';\n        print '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n        print '<div class=\"underbanner clearboth\"></div>';\n        print '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t// Birthday\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Birthday\").'</td><td class=\"valeur\">'.dol_print_date($object->birth,'day').'</td></tr>';\n\n\t\t// Public\n\t\tprint '<tr><td>'.$langs->trans(\"Public\").'</td><td class=\"valeur\">'.yn($object->public).'</td></tr>';\n\n\t\t// Categories\n\t\tif (! empty($conf->categorie->enabled)  && ! empty($user->rights->categorie->lire))\n\t\t{\n\t\t\tprint '<tr><td>' . $langs->trans(\"Categories\") . '</td>';\n\t\t\tprint '<td colspan=\"2\">';\n\t\t\tprint $form->showCategories($object->id, 'member', 1);\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\tprint \"</table>\\n\";\n\n\t\tprint \"</div></div></div>\\n\";\n        print '<div style=\"clear:both\"></div>';\n\n        dol_fiche_end();\n\n\n\t\t/*\n\t\t * Hotbar\n\t\t */\n\n\t\tprint '<div class=\"tabsAction\">';\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('addMoreActionsButtons', $parameters, $object, $action); // Note that $action and $object may have been\n\t\tif (empty($reshook)) {\n\t\t\tif ($action != 'editlogin' && $action != 'editthirdparty')\n\t\t\t{\n\t\t\t\t// Send\n\t\t\t\tif ($object->statut == 1) {\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"' . $_SERVER[\"PHP_SELF\"] . '?id=' . $object->id . '&action=presend&mode=init#formmailbeforetitle\">' . $langs->trans('SendMail') . '</a></div>';\n\t\t\t\t}\n\n\t\t\t\t// Send card by email\n\t\t\t\t// TODO Remove this to replace with a template\n\t\t\t\t/*\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tif ($object->statut >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->email) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=sendinfo\">'.$langs->trans(\"SendCardByMail\").\"</a></div>\\n\";\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NoEMail\")).'\">'.$langs->trans(\"SendCardByMail\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"SendCardByMail\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"SendCardByMail\").\"</font></div>\";\n\t\t\t\t}*/\n\n\t\t\t\t// Modify\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=edit\">'.$langs->trans(\"Modify\").\"</a></div>\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Modify\").'</font></div>';\n\t\t\t\t}\n\n\t\t\t\t// Validate\n\t\t\t\tif ($object->statut == -1)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=valid\">'.$langs->trans(\"Validate\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Validate\").'</font></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Reactivate\n\t\t\t\tif ($object->statut == 0)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=valid\">'.$langs->trans(\"Reenable\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Reenable\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Terminate\n\t\t\t\tif ($object->statut >= 1)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$id.'&action=resign\">'.$langs->trans(\"Resiliate\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Resiliate\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create third party\n\t\t\t\tif (! empty($conf->societe->enabled) && ! $object->fk_soc)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->societe->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->statut != -1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'&amp;action=create_thirdparty\">'.$langs->trans(\"CreateDolibarrThirdParty\").'</a></div>';\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"CreateDolibarrThirdParty\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"CreateDolibarrThirdParty\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create user\n\t\t\t\tif (! $user->societe_id && ! $object->user_id)\n\t\t\t\t{\n\t\t\t\t\tif ($user->rights->user->user->creer)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($object->statut != -1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'&amp;action=create_user\">'.$langs->trans(\"CreateDolibarrLogin\").'</a></div>';\n\t\t\t\t\t\telse print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"ValidateBefore\")).'\">'.$langs->trans(\"CreateDolibarrLogin\").'</a></div>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"CreateDolibarrLogin\").\"</font></div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delete\n\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"card.php?rowid='.$object->id.'&action=delete\">'.$langs->trans(\"Delete\").\"</a></div>\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><font class=\"butActionRefused\" href=\"#\" title=\"'.dol_escape_htmltag($langs->trans(\"NotEnoughPermissions\")).'\">'.$langs->trans(\"Delete\").\"</font></div>\";\n\t\t\t\t}\n\n\t\t\t\t// Action SPIP\n\t\t\t\tif (! empty($conf->mailmanspip->enabled) && ! empty($conf->global->ADHERENT_USE_SPIP))\n\t\t\t\t{\n\t\t\t\t\t$isinspip = $mailmanspip->is_in_spip($object);\n\n\t\t\t\t\tif ($isinspip == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=del_spip\">'.$langs->trans(\"DeleteIntoSpip\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t\tif ($isinspip == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?rowid='.$object->id.'&action=add_spip\">'.$langs->trans(\"AddIntoSpip\").\"</a></div>\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tprint '</div>';\n\n\t\tif ($isinspip == -1)\n\t\t{\n\t\t\tprint '<br><br><font class=\"error\">'.$langs->trans('SPIPConnectionFailed').': '.$mailmanspip->error.'</font>';\n\t\t}\n\n\n\t\t// Select mail models is same action as presend\n\t\tif (GETPOST('modelselected')) {\n\t\t\t$action = 'presend';\n\t\t}\n\n\t\tif ($action != 'presend')\n\t\t{\n\t\t\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\t\t\tprint '<a name=\"builddoc\"></a>'; // ancre\n\n\t\t\t// Documents generes\n\t\t\t$filename = dol_sanitizeFileName($object->ref);\n\t\t\t//$filename =  'tmp_cards.php';\n\t\t\t//$filedir = $conf->adherent->dir_output . '/' . get_exdir($object->id, 2, 0, 0, $object, 'member') . dol_sanitizeFileName($object->ref);\n\t\t\t$filedir = $conf->adherent->dir_output . '/' . get_exdir(0, 0, 0, 0, $object, 'member');\n\t\t\t$urlsource = $_SERVER['PHP_SELF'] . '?id=' . $object->id;\n\t\t\t$genallowed = $user->rights->adherent->lire;\n\t\t\t$delallowed = $user->rights->adherent->creer;\n\n\t\t\tprint $formfile->showdocuments('member', $filename, $filedir, $urlsource, $genallowed, $delallowed, $object->modelpdf, 1, 0, 0, 28, 0, '', '', '', $object->default_lang, '', $object);\n\t\t\t$somethingshown = $formfile->numoffiles;\n\n\t\t\t// Show links to link elements\n\t\t\t//$linktoelem = $form->showLinkToObjectBlock($object, null, array('subscription'));\n\t\t\t//$somethingshown = $form->showLinkedObjectBlock($object, '');\n\n\t\t\t// Show links to link elements\n\t\t\t/*$linktoelem = $form->showLinkToObjectBlock($object,array('order'));\n\t\t\t if ($linktoelem) print ($somethingshown?'':'<br>').$linktoelem;\n\t\t\t */\n\n\t\t\t// Shon online payment link\n\t\t\t$useonlinepayment = (! empty($conf->paypal->enabled) || ! empty($conf->stripe->enabled) || ! empty($conf->paybox->enabled));\n\n\t\t\tif ($useonlinepayment)\n\t\t\t{\n\t\t\t\tprint '<br>';\n\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/payments.lib.php';\n\t\t\t\tprint showOnlinePaymentUrl('membersubscription', $object->ref);\n\t\t\t}\n\n\t\t\tprint '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n\t\t\t$MAX = 10;\n\n\t\t\t$morehtmlright = '<a href=\"'.DOL_URL_ROOT.'/adherents/agenda.php?id='.$object->id.'\">';\n\t\t\t$morehtmlright.= $langs->trans(\"SeeAll\");\n\t\t\t$morehtmlright.= '</a>';\n\n\t\t\t// List of actions on element\n\t        include_once DOL_DOCUMENT_ROOT . '/core/class/html.formactions.class.php';\n\t\t\t$formactions = new FormActions($db);\n\t\t\t$somethingshown = $formactions->showactions($object, 'member', $socid, 1, 'listactions', $MAX, '', $morehtmlright);\n\n\t\t\tprint '</div></div></div>';\n\t\t}\n\n\t\t// Presend form\n\t\t$modelmail='member';\n\t\t$defaulttopic='CardContent';\n\t\t$diroutput = $conf->adherent->dir_output;\n\t\t$trackid = 'mem'.$object->id;\n\n\t\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/card_presend.tpl.php';\n\t}\n}\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2001-2002\tRodolphe Quiedeville\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2011\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2013\t\tFlorian Henry\t\t\t<florian.henry@open-concept.pro>\n * Copyright (C) 2015\t\tAlexandre Spangaro\t\t<aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/type.php\n *      \\ingroup    member\n *      \\brief      Member's type setup\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/member.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\n\n$langs->load(\"members\");\n\n$rowid  = GETPOST('rowid','int');\n$action = GETPOST('action','alpha');\n$cancel = GETPOST('cancel','alpha');\n$backtopage = GETPOST('backtopage','alpha');\n\n$search_lastname\t= GETPOST('search_lastname','alpha');\n$search_login\t\t= GETPOST('search_login','alpha');\n$search_email\t\t= GETPOST('search_email','alpha');\n$type\t\t\t\t= GETPOST('type','intcomma');\n$status\t\t\t\t= GETPOST('status','alpha');\n\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (! $sortorder) {  $sortorder=\"DESC\"; }\nif (! $sortfield) {  $sortfield=\"d.lastname\"; }\n\n$label=GETPOST(\"label\",\"alpha\");\n$subscription=GETPOST(\"subscription\",\"int\");\n$vote=GETPOST(\"vote\",\"int\");\n$comment=GETPOST(\"comment\",'alphanohtml');\n$mail_valid=GETPOST(\"mail_valid\",'none');\n\n// Security check\n$result=restrictedArea($user,'adherent',$rowid,'adherent_type');\n\n$object = new AdherentType($db);\n\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label('adherent_type');\n\nif (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n{\n    $search_lastname=\"\";\n    $search_login=\"\";\n    $search_email=\"\";\n    $type=\"\";\n    $sall=\"\";\n}\n\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('membertypecard','globalcard'));\n\n\n/*\n *\tActions\n */\n\nif ($cancel) {\n\n\t$action='';\n\n\tif (! empty($backtopage))\n\t{\n\t\theader(\"Location: \".$backtopage);\n\t\texit;\n\t}\n}\n\nif ($action == 'add' && $user->rights->adherent->configurer)\n{\n\t$object->label\t\t\t= trim($label);\n\t$object->subscription\t= (int) trim($subscription);\n\t$object->note\t\t\t= trim($comment);\n\t$object->mail_valid\t\t= trim($mail_valid);\n\t$object->vote\t\t\t= (boolean) trim($vote);\n\n\t// Fill array 'array_options' with data from add form\n\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\tif ($ret < 0) $error++;\n\n\tif (empty($object->label)) {\n\t\t$error++;\n\t\tsetEventMessages($langs->trans(\"ErrorFieldRequired\",$langs->transnoentities(\"Label\")), null, 'errors');\n\t}\n\telse {\n\t\t$sql = \"SELECT libelle FROM \".MAIN_DB_PREFIX.\"adherent_type WHERE libelle='\".$db->escape($object->label).\"'\";\n\t\t$result = $db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $db->num_rows($result);\n\t\t}\n\t\tif ($num) {\n\t\t\t$error++;\n\t\t\t$langs->load(\"errors\");\n\t\t\tsetEventMessages($langs->trans(\"ErrorLabelAlreadyExists\",$login), null, 'errors');\n\t\t}\n\t}\n\n\tif (! $error)\n\t{\n\t\t$id=$object->create($user);\n\t\tif ($id > 0)\n\t\t{\n\t\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t\t$action = 'create';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$action = 'create';\n\t}\n}\n\nif ($action == 'update' && $user->rights->adherent->configurer)\n{\n\t$object->fetch($rowid);\n\n\t$object->oldcopy = clone $object;\n\n\t$object->label\t\t\t= trim($label);\n\t$object->subscription\t= (int) trim($subscription);\n\t$object->note\t\t\t= trim($comment);\n\t$object->mail_valid\t\t= trim($mail_valid);\n\t$object->vote\t\t\t= (boolean) trim($vote);\n\n\t// Fill array 'array_options' with data from add form\n\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\tif ($ret < 0) $error++;\n\n\t$ret=$object->update($user);\n\n\tif ($ret >= 0 && ! count($object->errors))\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeModified\"), null, 'mesgs');\n\t}\n\telse\n\t{\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n\n\theader(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?rowid=\".$object->id);\n\texit;\n}\n\nif ($action == 'confirm_delete' && $user->rights->adherent->configurer)\n{\n\t$object->fetch($rowid);\n\t$res=$object->delete();\n\n\tif ($res > 0)\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeDeleted\"), null, 'mesgs');\n\t\theader(\"Location: \".$_SERVER[\"PHP_SELF\"]);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tsetEventMessages($langs->trans(\"MemberTypeCanNotBeDeleted\"), null, 'errors');\n\t\t$action='';\n\t}\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n\nllxHeader('',$langs->trans(\"MembersTypeSetup\"),'EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros');\n\n\n// List of members type\nif (! $rowid && $action != 'create' && $action != 'edit')\n{\n\t//dol_fiche_head('');\n\n\t$sql = \"SELECT d.rowid, d.libelle as label, d.subscription, d.vote\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent_type as d\";\n\t$sql.= \" WHERE d.entity IN (\".getEntity('member_type').\")\";\n\n\t$result = $db->query($sql);\n\tif ($result)\n\t{\n\t\t$num = $db->num_rows($result);\n\t\t$nbtotalofrecords = $num;\n\n\t\t$i = 0;\n\n\t\t$param = '';\n\n\t\t$newcardbutton='';\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\t$newcardbutton='<a class=\"butActionNew\" href=\"'.DOL_URL_ROOT.'/adherents/type.php?action=create\"><span class=\"valignmiddle\">'.$langs->trans('NewMemberType').'</span>';\n\t\t\t$newcardbutton.= '<span class=\"fa fa-plus-circle valignmiddle\"></span>';\n\t\t\t$newcardbutton.= '</a>';\n\t\t}\n\n\t\tprint '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\tif ($optioncss != '') print '<input type=\"hidden\" name=\"optioncss\" value=\"'.$optioncss.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"formfilteraction\" id=\"formfilteraction\" value=\"list\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"list\">';\n\t\tprint '<input type=\"hidden\" name=\"sortfield\" value=\"'.$sortfield.'\">';\n        print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\tprint '<input type=\"hidden\" name=\"sortorder\" value=\"'.$sortorder.'\">';\n\n\t\tprint_barre_liste($langs->trans(\"MembersTypes\"), $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, '', $num, $nbtotalofrecords, 'title_generic.png', 0, $newcardbutton, '', $limit);\n\n\t\t$moreforfilter = '';\n\n\t\tprint '<div class=\"div-table-responsive\">';\n\t\tprint '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tprint '<th>'.$langs->trans(\"Ref\").'</th>';\n\t\tprint '<th>'.$langs->trans(\"Label\").'</th>';\n\t\tprint '<th align=\"center\">'.$langs->trans(\"SubscriptionRequired\").'</th>';\n\t\tprint '<th align=\"center\">'.$langs->trans(\"VoteAllowed\").'</th>';\n\t\tprint '<th>&nbsp;</th>';\n\t\tprint \"</tr>\\n\";\n\n\t\t$membertype = new AdherentType($db);\n\n\t\twhile ($i < $num)\n\t\t{\n\t\t\t$objp = $db->fetch_object($result);\n\n\t\t\t$membertype->id = $objp->rowid;\n\t\t\t$membertype->ref = $objp->rowid;\n\t\t\t$membertype->label = $objp->rowid;\n\n\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\tprint '<td>';\n\t\t\tprint $membertype->getNomUrl(1);\n\t\t\t//<a href=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowType\"),'group').' '.$objp->rowid.'</a>\n\t\t\tprint '</td>';\n\t\t\tprint '<td>'.dol_escape_htmltag($objp->label).'</td>';\n\t\t\tprint '<td align=\"center\">'.yn($objp->subscription).'</td>';\n\t\t\tprint '<td align=\"center\">'.yn($objp->vote).'</td>';\n\t\t\tif ($user->rights->adherent->configurer)\n\t\t\t\tprint '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit&rowid='.$objp->rowid.'\">'.img_edit().'</a></td>';\n\t\t\telse\n\t\t\t\tprint '<td align=\"right\">&nbsp;</td>';\n\t\t\tprint \"</tr>\";\n\t\t\t$i++;\n\t\t}\n\t\tprint \"</table>\";\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\t}\n\telse\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/* ************************************************************************** */\n/*                                                                            */\n/* Creation mode                                                              */\n/*                                                                            */\n/* ************************************************************************** */\nif ($action == 'create')\n{\n\t$object = new AdherentType($db);\n\n\tprint load_fiche_titre($langs->trans(\"NewMemberType\"));\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\n    dol_fiche_head('');\n\n\tprint '<table class=\"border\" width=\"100%\">';\n\tprint '<tbody>';\n\n\tprint '<tr><td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Label\").'</td><td><input type=\"text\" name=\"label\" size=\"40\"></td></tr>';\n\n\tprint '<tr><td>'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\tprint $form->selectyesno(\"subscription\",1,1);\n\tprint '</td></tr>';\n\n\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\tprint $form->selectyesno(\"vote\",0,1);\n\tprint '</td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\tprint '<textarea name=\"comment\" wrap=\"soft\" class=\"centpercent\" rows=\"3\"></textarea></td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t$doleditor=new DolEditor('mail_valid',$object->mail_valid,'',280,'dolibarr_notes','',false,true,$conf->fckeditor->enabled,15,'90%');\n\t$doleditor->Create();\n\tprint '</td></tr>';\n\n\t// Other attributes\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$act,$action);    // Note that $action and $object may have been modified by hook\n    print $hookmanager->resPrint;\n\tif (empty($reshook))\n\t{\n\t\tprint $object->showOptionals($extrafields,'edit');\n\t}\n\tprint '<tbody>';\n\tprint \"</table>\\n\";\n\n\tdol_fiche_end();\n\n\tprint '<div class=\"center\">';\n\tprint '<input type=\"submit\" name=\"button\" class=\"button\" value=\"'.$langs->trans(\"Add\").'\">';\n\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\tprint '<input type=\"submit\" name=\"cancel\" class=\"button\" value=\"'.$langs->trans(\"Cancel\").'\" onclick=\"history.go(-1)\" />';\n\tprint '</div>';\n\n\tprint \"</form>\\n\";\n}\n\n/* ************************************************************************** */\n/*                                                                            */\n/* View mode                                                                  */\n/*                                                                            */\n/* ************************************************************************** */\nif ($rowid > 0)\n{\n\tif ($action != 'edit')\n\t{\n\t\t$object = new AdherentType($db);\n\t\t$object->fetch($rowid);\n\t\t$object->fetch_optionals();\n\n\t\t/*\n\t\t * Confirmation suppression\n\t\t */\n\t\tif ($action == 'delete')\n\t\t{\n\t\t\tprint $form->formconfirm($_SERVER['PHP_SELF'].\"?rowid=\".$object->id,$langs->trans(\"DeleteAMemberType\"),$langs->trans(\"ConfirmDeleteMemberType\",$object->label),\"confirm_delete\", '',0,1);\n\t\t}\n\n\t\t$head = member_type_prepare_head($object);\n\n\t\tdol_fiche_head($head, 'card', $langs->trans(\"MemberType\"), -1, 'group');\n\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/adherents/type.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\t\tdol_banner_tab($object, 'rowid', $linkback);\n\n\t\tprint '<div class=\"fichecenter\">';\n\t\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\t\tprint yn($object->subscription);\n\t\tprint '</tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\t\tprint yn($object->vote);\n\t\tprint '</tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\t\tprint nl2br($object->note).\"</td></tr>\";\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\t\tprint nl2br($object->mail_valid).\"</td></tr>\";\n\n\t\t// Other attributes\n\t\tinclude DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\tprint '</table>';\n\t\tprint '</div>';\n\n\t\tdol_fiche_end();\n\n\t\t/*\n\t\t * Buttons\n\t\t */\n\n\t\tprint '<div class=\"tabsAction\">';\n\n\t\t// Edit\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER['PHP_SELF'].'?action=edit&amp;rowid='.$object->id.'\">'.$langs->trans(\"Modify\").'</a></div>';\n\t\t}\n\n\t\t// Add\n\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"card.php?action=create&typeid='.$object->id.'&backtopage='.urlencode($_SERVER[\"PHP_SELF\"].'?rowid='.$object->id).'\">'.$langs->trans(\"AddMember\").'</a></div>';\n\n\t\t// Delete\n\t\tif ($user->rights->adherent->configurer)\n\t\t{\n\t\t\tprint '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER['PHP_SELF'].'?action=delete&rowid='.$object->id.'\">'.$langs->trans(\"DeleteType\").'</a></div>';\n\t\t}\n\n\t\tprint \"</div>\";\n\n\n\t\t// Show list of members (nearly same code than in page list.php)\n\n\t\t$membertypestatic=new AdherentType($db);\n\n\t\t$now=dol_now();\n\n\t\t$sql = \"SELECT d.rowid, d.login, d.firstname, d.lastname, d.societe, \";\n\t\t$sql.= \" d.datefin,\";\n\t\t$sql.= \" d.email, d.fk_adherent_type as type_id, d.morphy, d.statut,\";\n\t\t$sql.= \" t.libelle as type, t.subscription\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent as d, \".MAIN_DB_PREFIX.\"adherent_type as t\";\n\t\t$sql.= \" WHERE d.fk_adherent_type = t.rowid \";\n\t\t$sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\n\t\t$sql.= \" AND t.rowid = \".$object->id;\n\t\tif ($sall)\n\t\t{\n\t\t\t$sql.=natural_search(array(\"f.firstname\",\"d.lastname\",\"d.societe\",\"d.email\",\"d.login\",\"d.address\",\"d.town\",\"d.note_public\",\"d.note_private\"), $sall);\n\t\t}\n\t\tif ($status != '')\n\t\t{\n\t\t    $sql.= natural_search('d.statut', $status, 2);\n\t\t}\n\t\tif ($action == 'search')\n\t\t{\n\t\t\tif (GETPOST('search','alpha'))\n\t\t\t{\n\t\t  \t\t$sql.= natural_search(array(\"d.firstname\",\"d.lastname\"), GETPOST('search','alpha'));\n\t\t  \t}\n\t\t}\n\t\tif (! empty($search_lastname))\n\t\t{\n\t\t\t$sql.= natural_search(array(\"d.firstname\",\"d.lastname\"), $search_lastname);\n\t\t}\n\t\tif (! empty($search_login))\n\t\t{\n\t\t\t$sql.= natural_search(\"d.login\", $search_login);\n\t\t}\n\t\tif (! empty($search_email))\n\t\t{\n\t\t\t$sql.= natural_search(\"d.email\", $search_email);\n\t\t}\n\t\tif ($filter == 'uptodate')\n\t\t{\n\t\t    $sql.=\" AND datefin >= '\".$db->idate($now).\"'\";\n\t\t}\n\t\tif ($filter == 'outofdate')\n\t\t{\n\t\t    $sql.=\" AND datefin < '\".$db->idate($now).\"'\";\n\t\t}\n\n\t\t$sql.= \" \".$db->order($sortfield,$sortorder);\n\n\t\t// Count total nb of records\n\t\t$nbtotalofrecords = '';\n\t\tif (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST))\n\t\t{\n\t\t\t$resql = $db->query($sql);\n\t\t    if ($resql) $nbtotalofrecords = $db->num_rows($result);\n\t\t    else dol_print_error($db);\n\t\t    if (($page * $limit) > $nbtotalofrecords)\t// if total resultset is smaller then paging size (filtering), goto and load page 0\n\t\t    {\n\t\t    \t$page = 0;\n\t\t    \t$offset = 0;\n\t\t    }\n\t\t}\n\n\t\t$sql.= \" \".$db->plimit($conf->liste_limit+1, $offset);\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t    $num = $db->num_rows($resql);\n\t\t    $i = 0;\n\n\t\t    $titre=$langs->trans(\"MembersList\");\n\t\t    if ($status != '')\n\t\t    {\n\t\t        if ($status == '-1,1')\t\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListQualified\"); }\n\t\t        else if ($status == '-1')\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListToValid\"); }\n\t\t        else if ($status == '1' && ! $filter)\t\t\t\t{ $titre=$langs->trans(\"MembersListValid\"); }\n\t\t        else if ($status == '1' && $filter=='uptodate')\t\t{ $titre=$langs->trans(\"MembersListUpToDate\"); }\n\t\t        else if ($status == '1' && $filter=='outofdate')\t{ $titre=$langs->trans(\"MembersListNotUpToDate\"); }\n\t\t        else if ($status == '0')\t\t\t\t\t\t\t{ $titre=$langs->trans(\"MembersListResiliated\"); }\n\t\t    }\n\t\t    elseif ($action == 'search')\n\t\t    {\n\t\t        $titre=$langs->trans(\"MembersListQualified\");\n\t\t    }\n\n\t\t    if ($type > 0)\n\t\t    {\n\t\t\t\t$membertype=new AdherentType($db);\n\t\t        $result=$membertype->fetch($type);\n\t\t\t\t$titre.=\" (\".$membertype->label.\")\";\n\t\t    }\n\n\t\t    $param=\"&rowid=\".$object->id;\n\t\t    if (! empty($status))\t\t\t$param.=\"&status=\".$status;\n\t\t    if (! empty($search_lastname))\t$param.=\"&search_lastname=\".$search_lastname;\n\t\t    if (! empty($search_firstname))\t$param.=\"&search_firstname=\".$search_firstname;\n\t\t    if (! empty($search_login))\t\t$param.=\"&search_login=\".$search_login;\n\t\t    if (! empty($search_email))\t\t$param.=\"&search_email=\".$search_email;\n\t\t    if (! empty($filter))\t\t\t$param.=\"&filter=\".$filter;\n\n\t\t    if ($sall)\n\t\t    {\n\t\t        print $langs->trans(\"Filter\").\" (\".$langs->trans(\"Lastname\").\", \".$langs->trans(\"Firstname\").\", \".$langs->trans(\"EMail\").\", \".$langs->trans(\"Address\").\" \".$langs->trans(\"or\").\" \".$langs->trans(\"Town\").\"): \".$sall;\n\t\t    }\n\n\t\t\tprint '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\t\tprint '<input class=\"flat\" type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\" size=\"12\"></td>';\n\n\t\t\tprint '<br>';\n            print_barre_liste('',$page,$_SERVER[\"PHP_SELF\"],$param,$sortfield,$sortorder,'',$num,$nbtotalofrecords);\n\n            $moreforfilter = '';\n\n            print '<div class=\"div-table-responsive\">';\n            print '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\t\t\t// Lignes des champs de filtre\n\t\t\tprint '<tr class=\"liste_titre_filter\">';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_lastname\" value=\"'.dol_escape_htmltag($search_lastname).'\" size=\"12\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_login\" value=\"'.dol_escape_htmltag($search_login).'\" size=\"7\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n\n\t\t\tprint '<td class=\"liste_titre\" align=\"left\">';\n\t\t\tprint '<input class=\"flat\" type=\"text\" name=\"search_email\" value=\"'.dol_escape_htmltag($search_email).'\" size=\"12\"></td>';\n\n\t\t\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n\n\t\t\tprint '<td align=\"right\" colspan=\"2\" class=\"liste_titre\">';\n\t\t\tprint '<input type=\"image\" class=\"liste_titre\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/search.png\" name=\"button_search\" value=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\">';\n\t\t    print '&nbsp; ';\n\t\t    print '<input type=\"image\" class=\"liste_titre\" src=\"'.DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/searchclear.png\" name=\"button_removefilter\" value=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\">';\n\t\t\tprint '</td>';\n\n\t\t\tprint \"</tr>\\n\";\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t    print_liste_field_titre( $langs->trans(\"Name\").\" / \".$langs->trans(\"Company\"),$_SERVER[\"PHP_SELF\"],\"d.lastname\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Login\",$_SERVER[\"PHP_SELF\"],\"d.login\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Nature\",$_SERVER[\"PHP_SELF\"],\"d.morphy\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"EMail\",$_SERVER[\"PHP_SELF\"],\"d.email\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Status\",$_SERVER[\"PHP_SELF\"],\"d.statut,d.datefin\",$param,\"\",\"\",$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"EndSubscription\",$_SERVER[\"PHP_SELF\"],\"d.datefin\",$param,\"\",'align=\"center\"',$sortfield,$sortorder);\n\t\t    print_liste_field_titre(\"Action\",$_SERVER[\"PHP_SELF\"],\"\",$param,\"\",'width=\"60\" align=\"center\"',$sortfield,$sortorder);\n\t\t    print \"</tr>\\n\";\n\n\t\t    while ($i < $num && $i < $conf->liste_limit)\n\t\t    {\n\t\t        $objp = $db->fetch_object($resql);\n\n\t\t        $datefin=$db->jdate($objp->datefin);\n\n\t\t        $adh=new Adherent($db);\n\t\t        $adh->lastname=$objp->lastname;\n\t\t        $adh->firstname=$objp->firstname;\n\n\t\t        // Lastname\n\t\t        print '<tr class=\"oddeven\">';\n\t\t        if ($objp->societe != '')\n\t\t        {\n\t\t            print '<td><a href=\"card.php?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowMember\"),\"user\").' '.$adh->getFullName($langs,0,-1,20).' / '.dol_trunc($objp->societe,12).'</a></td>'.\"\\n\";\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            print '<td><a href=\"card.php?rowid='.$objp->rowid.'\">'.img_object($langs->trans(\"ShowMember\"),\"user\").' '.$adh->getFullName($langs,0,-1,32).'</a></td>'.\"\\n\";\n\t\t        }\n\n\t\t        // Login\n\t\t        print \"<td>\".$objp->login.\"</td>\\n\";\n\n\t\t        // Type\n\t\t        /*print '<td class=\"nowrap\">';\n\t\t        $membertypestatic->id=$objp->type_id;\n\t\t        $membertypestatic->label=$objp->type;\n\t\t        print $membertypestatic->getNomUrl(1,12);\n\t\t        print '</td>';\n\t\t\t\t*/\n\n\t\t        // Moral/Physique\n\t\t        print \"<td>\".$adh->getmorphylib($objp->morphy).\"</td>\\n\";\n\n\t\t        // EMail\n\t\t        print \"<td>\".dol_print_email($objp->email,0,0,1).\"</td>\\n\";\n\n\t\t        // Statut\n\t\t        print '<td class=\"nowrap\">';\n\t\t        print $adh->LibStatut($objp->statut,$objp->subscription,$datefin,2);\n\t\t        print \"</td>\";\n\n\t\t        // Date end subscription\n\t\t        if ($datefin)\n\t\t        {\n\t\t\t        print '<td align=\"center\" class=\"nowrap\">';\n\t\t            if ($datefin < dol_now() && $objp->statut > 0)\n\t\t            {\n\t\t                print dol_print_date($datefin,'day').\" \".img_warning($langs->trans(\"SubscriptionLate\"));\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                print dol_print_date($datefin,'day');\n\t\t            }\n\t\t            print '</td>';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t\t        print '<td align=\"left\" class=\"nowrap\">';\n\t\t\t        if ($objp->subscription == 'yes')\n\t\t\t        {\n\t\t                print $langs->trans(\"SubscriptionNotReceived\");\n\t\t                if ($objp->statut > 0) print \" \".img_warning();\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            print '&nbsp;';\n\t\t\t        }\n\t\t            print '</td>';\n\t\t        }\n\n\t\t        // Actions\n\t\t        print '<td align=\"center\">';\n\t\t\t\tif ($user->rights->adherent->creer)\n\t\t\t\t{\n\t\t\t\t\tprint '<a href=\"card.php?rowid='.$objp->rowid.'&action=edit&backtopage='.urlencode($_SERVER[\"PHP_SELF\"].'?rowid='.$object->id).'\">'.img_edit().'</a>';\n\t\t\t\t}\n\t\t\t\tprint '&nbsp;';\n\t\t\t\tif ($user->rights->adherent->supprimer)\n\t\t\t\t{\n\t\t\t\t\tprint '<a href=\"card.php?rowid='.$objp->rowid.'&action=resign\">'.img_picto($langs->trans(\"Resiliate\"),'disable.png').'</a>';\n\t\t        }\n\t\t\t\tprint \"</td>\";\n\n\t\t        print \"</tr>\\n\";\n\t\t        $i++;\n\t\t    }\n\n\t\t    print \"</table>\\n\";\n            print '</div>';\n            print '</form>';\n\n\t\t\tif ($num > $conf->liste_limit)\n\t\t\t{\n\t\t\t    print_barre_liste('',$page,$_SERVER[\"PHP_SELF\"],$param,$sortfield,$sortorder,'',$num,$nbtotalofrecords,'');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    dol_print_error($db);\n\t\t}\n\n\t}\n\n\t/* ************************************************************************** */\n\t/*                                                                            */\n\t/* Edition mode                                                               */\n\t/*                                                                            */\n\t/* ************************************************************************** */\n\n\tif ($action == 'edit')\n\t{\n\t\t$object = new AdherentType($db);\n\t\t$object->fetch($rowid);\n\t\t$object->fetch_optionals();\n\n\t\t$head = member_type_prepare_head($object);\n\n\t\tprint '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].'?rowid='.$object->id.'\">';\n\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$object->id.'\">';\n\t\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\n\t\tdol_fiche_head($head, 'card', $langs->trans(\"MemberType\"), 0, 'group');\n\n\t\tprint '<table class=\"border\" width=\"100%\">';\n\n\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"Ref\").'</td><td>'.$object->id.'</td></tr>';\n\n\t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td><input type=\"text\" name=\"label\" size=\"40\" value=\"'.dol_escape_htmltag($object->label).'\"></td></tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"SubscriptionRequired\").'</td><td>';\n\t\tprint $form->selectyesno(\"subscription\",$object->subscription,1);\n\t\tprint '</td></tr>';\n\n\t\tprint '<tr><td>'.$langs->trans(\"VoteAllowed\").'</td><td>';\n\t\tprint $form->selectyesno(\"vote\",$object->vote,1);\n\t\tprint '</td></tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td>';\n\t\tprint '<textarea name=\"comment\" wrap=\"soft\" class=\"centpercent\" rows=\"3\">'.$object->note.'</textarea></td></tr>';\n\n\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"WelcomeEMail\").'</td><td>';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t$doleditor=new DolEditor('mail_valid',$object->mail_valid,'',280,'dolibarr_notes','',false,true,$conf->fckeditor->enabled,15,'90%');\n\t\t$doleditor->Create();\n\t\tprint \"</td></tr>\";\n\n\t\t// Other attributes\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$act,$action);    // Note that $action and $object may have been modified by hook\n        print $hookmanager->resPrint;\n\t\tif (empty($reshook))\n\t\t{\n\t\t    print $object->showOptionals($extrafields,'edit');\n\t\t}\n\n\t\tprint '</table>';\n\n\t\t// Extra field\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tprint '<br><br><table class=\"border\" width=\"100%\">';\n\t\t\tforeach($extrafields->attribute_label as $key=>$label)\n\t\t\t{\n\t\t\t\tif (isset($_POST[\"options_\" . $key])) {\n\t\t\t\t\tif (is_array($_POST[\"options_\" . $key])) {\n\t\t\t\t\t\t// $_POST[\"options\"] is an array but following code expects a comma separated string\n\t\t\t\t\t\t$value = implode(\",\", $_POST[\"options_\" . $key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = $_POST[\"options_\" . $key];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$value = $adht->array_options[\"options_\" . $key];\n\t\t\t\t}\n\t\t\t\tprint '<tr><td width=\"30%\">'.$label.'</td><td>';\n\t\t\t\tprint $extrafields->showInputField($key,$value);\n\t\t\t\tprint \"</td></tr>\\n\";\n\t\t\t}\n\t\t\tprint '</table><br><br>';\n\t\t}\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\tprint '<input type=\"submit\" name=\"cancel\" class=\"button\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\tprint '</div>';\n\n\t\tprint \"</form>\";\n\t}\n}\n\n\nllxFooter();\n\n$db->close();\n"], "filenames": ["htdocs/adherents/card.php", "htdocs/adherents/type.php"], "buggy_code_start_loc": [954, 45], "buggy_code_end_loc": [962, 64], "fixing_code_start_loc": [954, 45], "fixing_code_end_loc": [962, 64], "type": "CWE-79", "message": "A stored cross-site scripting (XSS) vulnerability in Dolibarr 8.0.2 allows remote authenticated users to inject arbitrary web script or HTML via the \"address\" (POST) or \"town\" (POST) parameter to adherents/type.php.", "other": {"cve": {"id": "CVE-2018-19992", "sourceIdentifier": "cve@mitre.org", "published": "2019-01-03T19:29:00.977", "lastModified": "2022-11-17T17:21:59.260", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A stored cross-site scripting (XSS) vulnerability in Dolibarr 8.0.2 allows remote authenticated users to inject arbitrary web script or HTML via the \"address\" (POST) or \"town\" (POST) parameter to adherents/type.php."}, {"lang": "es", "value": "Una vulnerabilidad de Cross-Site Scripting (XSS) persistente en Dolibarr, en versiones anteriores a la 8.0.2, permite que los atacantes remotos autenticados inyecten scripts web o HTML arbitrarios mediante el par\u00e1metro \"address\" (POST) o \"town\" (POST) en adherents/type.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:8.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "30608213-F99C-4D9E-B848-794532E85267"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/0f06e39d23636bd1e4039ac61a743c79725c798b", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/0f06e39d23636bd1e4039ac61a743c79725c798b"}}