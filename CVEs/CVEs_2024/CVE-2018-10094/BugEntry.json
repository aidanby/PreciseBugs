{"buggy_code": ["<?php\n/* Copyright (C) 2001-2003  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003  Jean-Louis Bergamo      <jlb@j1b.org>\n * Copyright (C) 2004-2016  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2013-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014-2016  Juanjo Menent           <jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/list.php\n *      \\ingroup    member\n *\t\t\\brief      Page to list all members of foundation\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n$langs->loadLangs(array(\"members\",\"companies\"));\n\n$action=GETPOST('action','aZ09');\n$massaction=GETPOST('massaction','alpha');\n$show_files=GETPOST('show_files','int');\n$confirm=GETPOST('confirm','alpha');\n$toselect = GETPOST('toselect', 'array');\n\n// Security check\n$result=restrictedArea($user,'adherent');\n\n$filter=GETPOST(\"filter\",'alpha');\n$statut=GETPOST(\"statut\",'alpha');\n$search=GETPOST(\"search\",'alpha');\n$search_ref=GETPOST(\"search_ref\",'alpha');\n$search_lastname=GETPOST(\"search_lastname\",'alpha');\n$search_firstname=GETPOST(\"search_firstname\",'alpha');\n$search_login=GETPOST(\"search_login\",'alpha');\n$search_address=GETPOST(\"search_address\",'alpha');\n$search_zip=GETPOST(\"search_zip\",'alpha');\n$search_town=GETPOST(\"search_town\",'alpha');\n$search_state=GETPOST(\"search_state\",'alpha');\n$search_country=GETPOST(\"search_country\",'alpha');\n$search_phone=GETPOST(\"search_phone\",'alpha');\n$search_phone_perso=GETPOST(\"search_phone_perso\",'alpha');\n$search_phone_mobile=GETPOST(\"search_phone_mobile\",'alpha');\n$search_type=GETPOST(\"search_type\",'alpha');\n$search_email=GETPOST(\"search_email\",'alpha');\n$search_categ = GETPOST(\"search_categ\",'int');\n$catid        = GETPOST(\"catid\",'int');\n$optioncss = GETPOST('optioncss','alpha');\n\n$sall=trim((GETPOST('search_all', 'alphanohtml')!='')?GETPOST('search_all', 'alphanohtml'):GETPOST('sall', 'alphanohtml'));\n\nif ($statut < -1) $statut = '';\n\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (! $sortorder) { $sortorder=($filter=='outofdate'?\"DESC\":\"ASC\"); }\nif (! $sortfield) { $sortfield=($filter=='outofdate'?\"d.datefin\":\"d.lastname\"); }\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('memberlist'));\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels = $extrafields->fetch_name_optionals_label('adherent');\n$search_array_options=$extrafields->getOptionalsFromPost($extralabels,'','search_');\n\n// List of fields to search into when doing a \"search in all\"\n$fieldstosearchall = array(\n\t'd.rowid'=>'Ref',\n\t'd.login'=>'Login',\n\t'd.lastname'=>'Lastname',\n\t'd.firstname'=>'Firstname',\n\t'd.login'=>'Login',\n\t'd.societe'=>\"Company\",\n\t'd.email'=>'EMail',\n\t'd.address'=>'Address',\n\t'd.zip'=>'Zip',\n\t'd.town'=>'Town',\n\t'd.note_public'=>'NotePublic',\n\t'd.note_private'=>'NotePrivate',\n);\nif($db->type == 'pgsql') unset($fieldstosearchall['d.rowid']);\n$arrayfields=array(\n\t'd.ref'=>array('label'=>$langs->trans(\"Ref\"), 'checked'=>1),\n\t'd.lastname'=>array('label'=>$langs->trans(\"Lastname\"), 'checked'=>1),\n\t'd.firstname'=>array('label'=>$langs->trans(\"Firstname\"), 'checked'=>1),\n\t'd.company'=>array('label'=>$langs->trans(\"Company\"), 'checked'=>1),\n\t'd.login'=>array('label'=>$langs->trans(\"Login\"), 'checked'=>1),\n\t'd.morphy'=>array('label'=>$langs->trans(\"MorPhy\"), 'checked'=>1),\n\t't.libelle'=>array('label'=>$langs->trans(\"Type\"), 'checked'=>1),\n\t'd.email'=>array('label'=>$langs->trans(\"Email\"), 'checked'=>1),\n\t'd.address'=>array('label'=>$langs->trans(\"Address\"), 'checked'=>0),\n\t'd.zip'=>array('label'=>$langs->trans(\"Zip\"), 'checked'=>0),\n\t'd.town'=>array('label'=>$langs->trans(\"Town\"), 'checked'=>0),\n\t'd.phone'=>array('label'=>$langs->trans(\"Phone\"), 'checked'=>0),\n\t'd.phone_perso'=>array('label'=>$langs->trans(\"PhonePerso\"), 'checked'=>0),\n\t'd.phone_mobile'=>array('label'=>$langs->trans(\"PhoneMobile\"), 'checked'=>0),\n\t'state.nom'=>array('label'=>$langs->trans(\"State\"), 'checked'=>0),\n\t'country.code_iso'=>array('label'=>$langs->trans(\"Country\"), 'checked'=>0),\n\t/*'d.note_public'=>array('label'=>$langs->trans(\"NotePublic\"), 'checked'=>0),\n    'd.note_private'=>array('label'=>$langs->trans(\"NotePrivate\"), 'checked'=>0),*/\n\t'd.datefin'=>array('label'=>$langs->trans(\"EndSubscription\"), 'checked'=>1, 'position'=>500),\n\t'd.datec'=>array('label'=>$langs->trans(\"DateCreation\"), 'checked'=>0, 'position'=>500),\n\t'd.tms'=>array('label'=>$langs->trans(\"DateModificationShort\"), 'checked'=>0, 'position'=>500),\n\t'd.statut'=>array('label'=>$langs->trans(\"Status\"), 'checked'=>1, 'position'=>1000)\n);\n// Extra fields\nif (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))\n{\n\tforeach($extrafields->attribute_label as $key => $val)\n\t{\n\t\tif (! empty($extrafields->attribute_list[$key])) $arrayfields[\"ef.\".$key]=array('label'=>$extrafields->attribute_label[$key], 'checked'=>(($extrafields->attribute_list[$key]<0)?0:1), 'position'=>$extrafields->attribute_pos[$key], 'enabled'=>(abs($extrafields->attribute_list[$key])!=3 && $extrafields->attribute_perms[$key]));\n\t}\n}\n\n\n/*\n * Actions\n */\n\nif (GETPOST('cancel','alpha')) { $action='list'; $massaction=''; }\nif (! GETPOST('confirmmassaction','alpha') && $massaction != 'presend' && $massaction != 'confirm_presend' && $massaction != 'confirm_createbills') { $massaction=''; }\n\n$parameters=array('socid'=>$socid);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n\t// Selection of new fields\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';\n\n\t// Purge search criteria\n\tif (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter.x','alpha') || GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n\t{\n\t\t$search=\"\";\n\t\t$search_ref=\"\";\n\t\t$search_lastname=\"\";\n\t\t$search_firstname=\"\";\n\t\t$search_login=\"\";\n\t\t$search_company=\"\";\n\t\t$search_type=\"\";\n\t\t$search_email=\"\";\n\t\t$search_address=\"\";\n\t\t$search_zip=\"\";\n\t\t$search_town=\"\";\n\t\t$search_state=\"\";\n\t\t$search_country='';\n\t\t$search_phone='';\n\t\t$search_phone_perso='';\n\t\t$search_phone_mobile='';\n\t\t$search_morphy=\"\";\n\t\t$search_categ=\"\";\n\t\t$catid=\"\";\n\t\t$sall=\"\";\n\t\t$statut='';\n\t\t$toselect='';\n\t\t$search_array_options=array();\n\t}\n\n\t// Mass actions\n\t$objectclass='Adherent';\n\t$objectlabel='Members';\n\t$permtoread = $user->rights->adherent->lire;\n\t$permtodelete = $user->rights->adherent->supprimer;\n\t$uploaddir = $conf->adherent->dir_output;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_massactions.inc.php';\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n$formother=new FormOther($db);\n$membertypestatic=new AdherentType($db);\n$memberstatic=new Adherent($db);\n\n$now=dol_now();\n\n$sql = \"SELECT d.rowid, d.login, d.lastname, d.firstname, d.societe as company, d.fk_soc,\";\n$sql.= \" d.datefin, d.address, d.zip, d.town, d.state_id, d.country,\";\n$sql.= \" d.email, d.phone, d.phone_perso, d.phone_mobile, d.skype, d.birth, d.public, d.photo,\";\n$sql.= \" d.fk_adherent_type as type_id, d.morphy, d.statut, d.datec as date_creation, d.tms as date_update,\";\n$sql.= \" t.libelle as type, t.subscription,\";\n$sql.= \" state.code_departement as state_code, state.nom as state_name\";\n// Add fields from extrafields\nforeach ($extrafields->attribute_label as $key => $val) $sql.=($extrafields->attribute_type[$key] != 'separate' ? \",ef.\".$key.' as options_'.$key : '');\n// Add fields from hooks\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldListSelect',$parameters);    // Note that $action and $object may have been modified by hook\n$sql.=$hookmanager->resPrint;\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent as d\";\nif (is_array($extrafields->attribute_label) && count($extrafields->attribute_label)) $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"adherent_extrafields as ef on (d.rowid = ef.fk_object)\";\nif (! empty($search_categ) || ! empty($catid)) $sql.= ' LEFT JOIN '.MAIN_DB_PREFIX.\"categorie_member as cm ON d.rowid = cm.fk_member\"; // We need this table joined to the select in order to filter by categ\n$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as country on (country.rowid = d.country)\";\n$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_departements as state on (state.rowid = d.state_id)\";\n$sql.= \", \".MAIN_DB_PREFIX.\"adherent_type as t\";\n$sql.= \" WHERE d.fk_adherent_type = t.rowid \";\nif ($catid > 0)    $sql.= \" AND cm.fk_categorie = \".$db->escape($catid);\nif ($catid == -2)  $sql.= \" AND cm.fk_categorie IS NULL\";\nif ($search_categ > 0)   $sql.= \" AND cm.fk_categorie = \".$db->escape($search_categ);\nif ($search_categ == -2) $sql.= \" AND cm.fk_categorie IS NULL\";\n$sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\nif ($sall) $sql.=natural_search(array_keys($fieldstosearchall), $sall);\nif ($search_type > 0) $sql.=\" AND t.rowid=\".$db->escape($search_type);\nif ($statut != '') $sql.=\" AND d.statut in (\".$db->escape($statut).\")\";     // Peut valoir un nombre ou liste de nombre separes par virgules\nif ($search_ref)\n{\n\tif (is_numeric($search_ref)) $sql.= \" AND (d.rowid = \".$db->escape($search_ref).\")\";\n\telse $sql.=\" AND 1 = 2\";    // Always wrong\n}\nif ($search_firstname) $sql.= natural_search(\"d.firstname\", $search_firstname);\nif ($search_lastname) $sql.= natural_search(array(\"d.firstname\", \"d.lastname\", \"d.societe\"), $search_lastname);\nif ($search_login) $sql.= natural_search(\"d.login\", $search_login);\nif ($search_email) $sql.= natural_search(\"d.email\", $search_email);\nif ($search_town)     $sql.= natural_search(\"d.town\",$search_town);\nif ($search_zip)      $sql.= natural_search(\"d.zip\",$search_zip);\nif ($search_state)    $sql.= natural_search(\"state.nom\",$search_state);\nif ($search_country) $sql .= \" AND d.country IN (\".$search_country.')';\nif ($filter == 'uptodate') $sql.=\" AND datefin >= '\".$db->idate($now).\"'\";\nif ($filter == 'outofdate') $sql.=\" AND (datefin IS NULL OR datefin < '\".$db->idate($now).\"')\";\n\n// Add where from extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_sql.tpl.php';\n\n// Add where from hooks\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldListWhere',$parameters);    // Note that $action and $object may have been modified by hook\n$sql.=$hookmanager->resPrint;\n\n$sql.= $db->order($sortfield,$sortorder);\n\n// Count total nb of records with no order and no limits\n$nbtotalofrecords = '';\nif (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST))\n{\n\t$resql = $db->query($sql);\n\tif ($resql) $nbtotalofrecords = $db->num_rows($resql);\n\telse dol_print_error($db);\n}\n// Add limit\n$sql.= $db->plimit($limit+1, $offset);\n\ndol_syslog(\"get list\", LOG_DEBUG);\n$resql = $db->query($sql);\nif (! $resql)\n{\n\tdol_print_error($db);\n\texit;\n}\n\n$num = $db->num_rows($resql);\n\n$arrayofselected=is_array($toselect)?$toselect:array();\n\nif ($num == 1 && ! empty($conf->global->MAIN_SEARCH_DIRECT_OPEN_IF_ONLY_ONE) && $sall)\n{\n\t$obj = $db->fetch_object($resql);\n\t$id = $obj->rowid;\n\theader(\"Location: \".DOL_URL_ROOT.'/adherents/card.php?id='.$id);\n\texit;\n}\n\nllxHeader('',$langs->trans(\"Member\"),'EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros');\n\n$titre=$langs->trans(\"MembersList\");\nif (GETPOSTISSET(\"statut\"))\n{\n\tif ($statut == '-1,1') { $titre=$langs->trans(\"MembersListQualified\"); }\n\tif ($statut == '-1')   { $titre=$langs->trans(\"MembersListToValid\"); }\n\tif ($statut == '1' && ! $filter)    \t\t{ $titre=$langs->trans(\"MembersListValid\"); }\n\tif ($statut == '1' && $filter=='uptodate')  { $titre=$langs->trans(\"MembersListUpToDate\"); }\n\tif ($statut == '1' && $filter=='outofdate')\t{ $titre=$langs->trans(\"MembersListNotUpToDate\"); }\n\tif ($statut == '0')    { $titre=$langs->trans(\"MembersListResiliated\"); }\n}\nelseif ($action == 'search')\n{\n\t$titre=$langs->trans(\"MembersListQualified\");\n}\n\nif ($search_type > 0)\n{\n\t$membertype=new AdherentType($db);\n\t$result=$membertype->fetch(GETPOST(\"type\",'int'));\n\t$titre.=\" (\".$membertype->label.\")\";\n}\n\n$param='';\nif (! empty($contextpage) && $contextpage != $_SERVER[\"PHP_SELF\"]) $param.='&contextpage='.$contextpage;\nif ($limit > 0 && $limit != $conf->liste_limit) $param.='&limit='.$limit;\nif ($sall != \"\") $param.=\"&sall=\".urlencode($sall);\nif ($statut != \"\") $param.=\"&statut=\".urlencode($statut);\nif ($search_ref)   $param.=\"&search_ref=\".urlencode($search_ref);\nif ($search_nom)   $param.=\"&search_nom=\".urlencode($search_nom);\nif ($search_firstname) $param.=\"&search_firstname=\".urlencode($search_firstname);\nif ($search_lastname)  $param.=\"&search_lastname=\".urlencode($search_lastname);\nif ($search_login)   $param.=\"&search_login=\".urlencode($search_login);\nif ($search_email)   $param.=\"&search_email=\".urlencode($search_email);\nif ($search_company) $param.=\"&search_company=\".urlencode($search_company);\nif ($search_address != '') $param.= \"&search_address=\".urlencode($search_address);\nif ($search_town != '') $param.= \"&search_town=\".urlencode($search_town);\nif ($search_zip != '') $param.= \"&search_zip=\".urlencode($search_zip);\nif ($search_state != '') $param.= \"&search_state=\".urlencode($search_state);\nif ($search_country != '') $param.= \"&search_country=\".urlencode($search_country);\nif ($search_phone != '') $param.= \"&search_phone=\".urlencode($search_phone);\nif ($search_phone_perso != '') $param.= \"&search_phone_perso=\".urlencode($search_phone_perso);\nif ($search_phone_mobile != '') $param.= \"&search_phone_mobile=\".urlencode($search_phone_mobile);\nif ($filter)         $param.=\"&filter=\".urlencode($filter);\nif ($search_type > 0)       $param.=\"&search_type=\".urlencode($search_type);\nif ($optioncss != '')       $param.='&optioncss='.urlencode($optioncss);\n// Add $param from extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_param.tpl.php';\n\n// List of mass actions available\n$arrayofmassactions =  array(\n//    'presend'=>$langs->trans(\"SendByMail\"),\n//    'builddoc'=>$langs->trans(\"PDFMerge\"),\n);\nif ($user->rights->adherent->supprimer) $arrayofmassactions['predelete']=$langs->trans(\"Delete\");\nif (in_array($massaction, array('presend','predelete'))) $arrayofmassactions=array();\n$massactionbutton=$form->selectMassAction('', $arrayofmassactions);\n\nprint '<form method=\"POST\" id=\"searchFormList\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\nif ($optioncss != '') print '<input type=\"hidden\" name=\"optioncss\" value=\"'.$optioncss.'\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"formfilteraction\" id=\"formfilteraction\" value=\"list\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"list\">';\nprint '<input type=\"hidden\" name=\"sortfield\" value=\"'.$sortfield.'\">';\nprint '<input type=\"hidden\" name=\"sortorder\" value=\"'.$sortorder.'\">';\nprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\nprint '<input type=\"hidden\" name=\"contextpage\" value=\"'.$contextpage.'\">';\n\nprint_barre_liste($titre, $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, 'title_generic.png', 0, '', '', $limit);\n\n$topicmail=\"Information\";\n$modelmail=\"member\";\n$objecttmp=new Adherent($db);\n$trackid='mem'.$object->id;\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/massactions_pre.tpl.php';\n\nif ($sall)\n{\n\tforeach($fieldstosearchall as $key => $val) $fieldstosearchall[$key]=$langs->trans($val);\n\tprint $langs->trans(\"FilterOnInto\", $sall) . implode(', ',$fieldstosearchall);\n}\n\n// Filter on categories\n$moreforfilter='';\nif (! empty($conf->categorie->enabled))\n{\n\trequire_once DOL_DOCUMENT_ROOT . '/categories/class/categorie.class.php';\n\t$moreforfilter.='<div class=\"divsearchfield\">';\n\t$moreforfilter.=$langs->trans('Categories'). ': ';\n\t$moreforfilter.=$formother->select_categories(Categorie::TYPE_MEMBER,$search_categ,'search_categ',1);\n\t$moreforfilter.='</div>';\n}\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldPreListTitle',$parameters);    // Note that $action and $object may have been modified by hook\nif (empty($reshook)) $moreforfilter .= $hookmanager->resPrint;\nelse $moreforfilter = $hookmanager->resPrint;\nif (! empty($moreforfilter))\n{\n\tprint '<div class=\"liste_titre liste_titre_bydiv centpercent\">';\n\tprint $moreforfilter;\n\tprint '</div>';\n}\n\n$varpage=empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage;\n$selectedfields=$form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage);\t// This also change content of $arrayfields\nif ($massactionbutton) $selectedfields.=$form->showCheckAddButtons('checkforselect', 1);\n\nprint '<div class=\"div-table-responsive\">';\nprint '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\n// Line for filters fields\nprint '<tr class=\"liste_titre_filter\">';\n\n// Line numbering\nif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))\n{\n\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n}\n\n// Ref\nif (! empty($arrayfields['d.ref']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_ref\" value=\"'.dol_escape_htmltag($search_ref).'\">';\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['d.firstname']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_firstname\" value=\"'.dol_escape_htmltag($search_firstname).'\"></td>';\n}\n\nif (! empty($arrayfields['d.lastname']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_lastname\" value=\"'.dol_escape_htmltag($search_lastname).'\"></td>';\n}\n\nif (! empty($arrayfields['d.company']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_company\" value=\"'.dol_escape_htmltag($search_company).'\"></td>';\n}\n\nif (! empty($arrayfields['d.login']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_login\" value=\"'.dol_escape_htmltag($search_login).'\"></td>';\n}\n\nif (! empty($arrayfields['d.morphy']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['t.libelle']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\t$listetype=$membertypestatic->liste_array();\n\tprint $form->selectarray(\"search_type\", $listetype, $type, 1, 0, 0, '', 0, 32);\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['d.address']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_address\" value=\"'.$search_address.'\"></td>';\n}\n\nif (! empty($arrayfields['d.zip']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_zip\" value=\"'.$search_zip.'\"></td>';\n}\nif (! empty($arrayfields['d.town']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_town\" value=\"'.$search_town.'\"></td>';\n}\n// State\nif (! empty($arrayfields['state.nom']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '<input class=\"flat searchstring maxwidth50\" type=\"text\" name=\"search_state\" value=\"'.dol_escape_htmltag($search_state).'\">';\n\tprint '</td>';\n}\n// Country\nif (! empty($arrayfields['country.code_iso']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"center\">';\n\tprint $form->select_country($search_country,'search_country','',0,'maxwidth100');\n\tprint '</td>';\n}\n// Phone pro\nif (! empty($arrayfields['d.phone']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone\" value=\"'.$search_phone.'\"></td>';\n}\n// Phone perso\nif (! empty($arrayfields['d.phone_perso']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone_perso\" value=\"'.$search_phone_perso.'\"></td>';\n}\n// Phone mobile\nif (! empty($arrayfields['d.phone_mobile']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone_mobile\" value=\"'.$search_phone_mobile.'\"></td>';\n}\n// Email\nif (! empty($arrayfields['d.email']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_email\" value=\"'.$search_email.'\"></td>';\n}\n\nif (! empty($arrayfields['d.datefin']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '</td>';\n}\n// Extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_input.tpl.php';\n\n// Fields from hook\n$parameters=array('arrayfields'=>$arrayfields);\n$reshook=$hookmanager->executeHooks('printFieldListOption',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\n// Date creation\nif (! empty($arrayfields['d.datec']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '</td>';\n}\n// Date modification\nif (! empty($arrayfields['d.tms']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '</td>';\n}\n// Status\nif (! empty($arrayfields['d.statut']['checked']))\n{\n\tprint '<td class=\"liste_titre maxwidthonsmartphone\" align=\"right\">';\n\t$liststatus=array(\n\t\t'-1'=>$langs->trans(\"Draft\"),\n\t\t'1'=>$langs->trans(\"Validated\"),\n\t\t'0'=>$langs->trans(\"Resiliated\")\n\t);\n\tprint $form->selectarray('statut', $liststatus, $statut, -2);\n\tprint '</td>';\n}\n// Action column\nprint '<td class=\"liste_titre\" align=\"middle\">';\n$searchpicto=$form->showFilterButtons();\nprint $searchpicto;\nprint '</td>';\n\nprint \"</tr>\\n\";\n\nprint '<tr class=\"liste_titre\">';\nif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))       print_liste_field_titre(\"ID\",$_SERVER[\"PHP_SELF\"],'','',$param,'align=\"center\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.ref']['checked']))            print_liste_field_titre($arrayfields['d.ref']['label'],$_SERVER[\"PHP_SELF\"],'d.rowid','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.firstname']['checked']))      print_liste_field_titre($arrayfields['d.firstname']['label'],$_SERVER[\"PHP_SELF\"],'d.firstname','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.lastname']['checked']))       print_liste_field_titre($arrayfields['d.lastname']['label'],$_SERVER[\"PHP_SELF\"],'d.lastname','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.company']['checked']))        print_liste_field_titre($arrayfields['d.company']['label'],$_SERVER[\"PHP_SELF\"],'d.societe','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.login']['checked']))          print_liste_field_titre($arrayfields['d.login']['label'],$_SERVER[\"PHP_SELF\"],'d.login','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.morphy']['checked']))         print_liste_field_titre($arrayfields['d.morphy']['label'],$_SERVER[\"PHP_SELF\"],'d.morphy','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['t.libelle']['checked']))        print_liste_field_titre($arrayfields['t.libelle']['label'],$_SERVER[\"PHP_SELF\"],'t.libelle','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.address']['checked']))        print_liste_field_titre($arrayfields['d.address']['label'],$_SERVER[\"PHP_SELF\"],'d.address','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.zip']['checked']))            print_liste_field_titre($arrayfields['d.zip']['label'],$_SERVER[\"PHP_SELF\"],'d.zip','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.town']['checked']))           print_liste_field_titre($arrayfields['d.town']['label'],$_SERVER[\"PHP_SELF\"],'d.town','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['state.nom']['checked']))        print_liste_field_titre($arrayfields['state.town']['label'],$_SERVER[\"PHP_SELF\"],\"state.nom\",\"\",$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['country.code_iso']['checked'])) print_liste_field_titre($arrayfields['country.code_iso']['label'],$_SERVER[\"PHP_SELF\"],\"country.code_iso\",\"\",$param,'align=\"center\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone']['checked']))          print_liste_field_titre($arrayfields['d.phone']['label'],$_SERVER[\"PHP_SELF\"],'d.phone','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone_perso']['checked']))    print_liste_field_titre($arrayfields['d.phone_perso']['label'],$_SERVER[\"PHP_SELF\"],'d.phone_perso','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone_mobile']['checked']))   print_liste_field_titre($arrayfields['d.phone_mobile']['label'],$_SERVER[\"PHP_SELF\"],'d.phone_mobile','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.email']['checked']))          print_liste_field_titre($arrayfields['d.email']['label'],$_SERVER[\"PHP_SELF\"],'d.email','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.datefin']['checked']))        print_liste_field_titre($arrayfields['d.datefin']['label'],$_SERVER[\"PHP_SELF\"],'d.datefin','',$param,'align=\"center\"',$sortfield,$sortorder);\n// Extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_title.tpl.php';\n\n// Hook fields\n$parameters=array('arrayfields'=>$arrayfields,'param'=>$param,'sortfield'=>$sortfield,'sortorder'=>$sortorder);\n$reshook=$hookmanager->executeHooks('printFieldListTitle',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\nif (! empty($arrayfields['d.datec']['checked']))     print_liste_field_titre($arrayfields['d.datec']['label'],$_SERVER[\"PHP_SELF\"],\"d.datec\",\"\",$param,'align=\"center\" class=\"nowrap\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.tms']['checked']))       print_liste_field_titre($arrayfields['d.tms']['label'],$_SERVER[\"PHP_SELF\"],\"d.tms\",\"\",$param,'align=\"center\" class=\"nowrap\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.statut']['checked']))    print_liste_field_titre($arrayfields['d.statut']['label'],$_SERVER[\"PHP_SELF\"],\"d.statut\",\"\",$param,'align=\"right\"',$sortfield,$sortorder);\nprint_liste_field_titre($selectedfields, $_SERVER[\"PHP_SELF\"],\"\",'','','align=\"center\"',$sortfield,$sortorder,'maxwidthsearch ');\nprint \"</tr>\\n\";\n\n$i = 0;\nwhile ($i < min($num, $limit))\n{\n\t$obj = $db->fetch_object($resql);\n\n\t$datefin=$db->jdate($obj->datefin);\n\t$memberstatic->id=$obj->rowid;\n\t$memberstatic->ref=$obj->rowid;\n\t$memberstatic->lastname=$obj->lastname;\n\t$memberstatic->firstname=$obj->firstname;\n\t$memberstatic->societe=$obj->company;\n\t$memberstatic->statut=$obj->statut;\n\t$memberstatic->datefin= $datefin;\n\t$memberstatic->socid = $obj->fk_soc;\n\t$memberstatic->photo = $obj->photo;\n\n\tif (! empty($obj->fk_soc)) {\n\t\t$memberstatic->fetch_thirdparty();\n\t\t$companyname=$memberstatic->thirdparty->name;\n\t} else {\n\t\t$companyname=$obj->company;\n\t}\n\n\tprint '<tr class=\"oddeven\">';\n\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))\n\t{\n\t\tprint '<td align=\"center\">'.$obj->rowid.'</td>';\n\t}\n\n\t// Ref\n\tif (! empty($arrayfields['d.ref']['checked']))\n\t{\n   \t\tprint \"<td>\";\n\t\tprint $memberstatic->getNomUrl(-1, 0, 'card', 'ref');\n\t\tprint \"</td>\\n\";\n\t}\n\t// Firstname\n\tif (! empty($arrayfields['d.firstname']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $obj->firstname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Lastname\n\tif (! empty($arrayfields['d.lastname']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $obj->lastname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Company\n\tif (! empty($arrayfields['d.company']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $companyname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Login\n\tif (! empty($arrayfields['d.login']['checked']))\n\t{\n\t   print \"<td>\".$obj->login.\"</td>\\n\";\n\t}\n\t// Moral/Physique\n\tif (! empty($arrayfields['d.morphy']['checked']))\n\t{\n\t   print \"<td>\".$memberstatic->getmorphylib($obj->morphy).\"</td>\\n\";\n\t}\n\t// Type label\n\tif (! empty($arrayfields['t.libelle']['checked']))\n\t{\n\t\t$membertypestatic->id=$obj->type_id;\n\t\t$membertypestatic->label=$obj->type;\n\t\tprint '<td class=\"nowrap\">';\n\t\tprint $membertypestatic->getNomUrl(1,32);\n\t\tprint '</td>';\n\t}\n\t// Address\n\tif (! empty($arrayfields['d.address']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->address;\n\t\tprint '</td>';\n\t}\n\t// Zip\n\tif (! empty($arrayfields['d.zip']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->zip;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Town\n\tif (! empty($arrayfields['d.town']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->town;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// State\n\tif (! empty($arrayfields['state.nom']['checked']))\n\t{\n\t\tprint \"<td>\".$obj->state_name.\"</td>\\n\";\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Country\n\tif (! empty($arrayfields['country.code_iso']['checked']))\n\t{\n\t\tprint '<td align=\"center\">';\n\t\t$tmparray=getCountry($obj->country,'all');\n\t\tprint $tmparray['label'];\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone pro\n\tif (! empty($arrayfields['d.phone']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone perso\n\tif (! empty($arrayfields['d.phone_perso']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone_perso;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone mobile\n\tif (! empty($arrayfields['d.phone_mobile']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone_mobile;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// EMail\n\tif (! empty($arrayfields['d.email']['checked']))\n\t{\n\t\tprint \"<td>\".dol_print_email($obj->email,0,0,1).\"</td>\\n\";\n\t}\n\t// End of subscription date\n\t$datefin=$db->jdate($obj->datefin);\n\tif (! empty($arrayfields['d.datefin']['checked']))\n\t{\n\t\tif ($datefin)\n\t\t{\n\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\tprint dol_print_date($datefin,'day');\n\t\t\tif ($memberstatic->hasDelay()) {\n\t\t\t\t$textlate .= ' ('.$langs->trans(\"DateReference\").' > '.$langs->trans(\"DateToday\").' '.(ceil($conf->adherent->subscription->warning_delay/60/60/24) >= 0 ? '+' : '').ceil($conf->adherent->subscription->warning_delay/60/60/24).' '.$langs->trans(\"days\").')';\n\t\t\t\tprint \" \".img_warning($langs->trans(\"SubscriptionLate\").$textlate);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td align=\"left\" class=\"nowrap\">';\n\t\t\tif ($obj->subscription == 'yes')\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotReceived\");\n\t\t\t\tif ($obj->statut > 0) print \" \".img_warning();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '&nbsp;';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n\t// Extra fields\n\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_print_fields.tpl.php';\n\t// Fields from hook\n\t$parameters=array('arrayfields'=>$arrayfields, 'obj'=>$obj);\n\t$reshook=$hookmanager->executeHooks('printFieldListValue',$parameters);    // Note that $action and $object may have been modified by hook\n\tprint $hookmanager->resPrint;\n\t// Date creation\n\tif (! empty($arrayfields['d.datec']['checked']))\n\t{\n\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\tprint dol_print_date($db->jdate($obj->date_creation), 'dayhour', 'tzuser');\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Date modification\n\tif (! empty($arrayfields['d.tms']['checked']))\n\t{\n\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\tprint dol_print_date($db->jdate($obj->date_update), 'dayhour', 'tzuser');\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Status\n\tif (! empty($arrayfields['d.statut']['checked']))\n\t{\n\t\tprint '<td align=\"right\" class=\"nowrap\">';\n\t\tprint $memberstatic->LibStatut($obj->statut,$obj->subscription,$datefin,5);\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Action column\n\tprint '<td align=\"center\">';\n\tif ($massactionbutton || $massaction)   // If we are in select mode (massactionbutton defined) or if we have already selected and sent an action ($massaction) defined\n\t{\n\t\t$selected=0;\n\t\tif (in_array($obj->rowid, $arrayofselected)) $selected=1;\n\t\tprint '<input id=\"cb'.$obj->rowid.'\" class=\"flat checkforselect\" type=\"checkbox\" name=\"toselect[]\" value=\"'.$obj->rowid.'\"'.($selected?' checked=\"checked\"':'').'>';\n\t}\n\tprint '</td>';\n\tif (! $i) $totalarray['nbfield']++;\n\n\tprint \"</tr>\\n\";\n\t$i++;\n}\n\n$db->free($resql);\n\n$parameters=array('sql' => $sql);\n$reshook=$hookmanager->executeHooks('printFieldListFooter',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\n\nprint \"</table>\\n\";\nprint \"</div>\";\nprint '</form>';\n\nif ($num > $limit || $page) print_barre_liste('', $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, '', $num, $nbtotalofrecords, 'title_generic.png', 0, '', '', $limit, 1);\n\n\nllxFooter();\n$db->close();\n"], "fixing_code": ["<?php\n/* Copyright (C) 2001-2003  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2002-2003  Jean-Louis Bergamo      <jlb@j1b.org>\n * Copyright (C) 2004-2016  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2013-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014-2016  Juanjo Menent           <jmenent@2byte.es>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *      \\file       htdocs/adherents/list.php\n *      \\ingroup    member\n *\t\t\\brief      Page to list all members of foundation\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/adherents/class/adherent_type.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n$langs->loadLangs(array(\"members\",\"companies\"));\n\n$action=GETPOST('action','aZ09');\n$massaction=GETPOST('massaction','alpha');\n$show_files=GETPOST('show_files','int');\n$confirm=GETPOST('confirm','alpha');\n$toselect = GETPOST('toselect', 'array');\n\n// Security check\n$result=restrictedArea($user,'adherent');\n\n$filter=GETPOST(\"filter\",'alpha');\n$statut=GETPOST(\"statut\",'intcomma');\n$search=GETPOST(\"search\",'alpha');\n$search_ref=GETPOST(\"search_ref\",'alpha');\n$search_lastname=GETPOST(\"search_lastname\",'alpha');\n$search_firstname=GETPOST(\"search_firstname\",'alpha');\n$search_login=GETPOST(\"search_login\",'alpha');\n$search_address=GETPOST(\"search_address\",'alpha');\n$search_zip=GETPOST(\"search_zip\",'alpha');\n$search_town=GETPOST(\"search_town\",'alpha');\n$search_state=GETPOST(\"search_state\",'alpha');\n$search_country=GETPOST(\"search_country\",'alpha');\n$search_phone=GETPOST(\"search_phone\",'alpha');\n$search_phone_perso=GETPOST(\"search_phone_perso\",'alpha');\n$search_phone_mobile=GETPOST(\"search_phone_mobile\",'alpha');\n$search_type=GETPOST(\"search_type\",'alpha');\n$search_email=GETPOST(\"search_email\",'alpha');\n$search_categ = GETPOST(\"search_categ\",'int');\n$catid        = GETPOST(\"catid\",'int');\n$optioncss = GETPOST('optioncss','alpha');\n\n$sall=trim((GETPOST('search_all', 'alphanohtml')!='')?GETPOST('search_all', 'alphanohtml'):GETPOST('sall', 'alphanohtml'));\n\nif ($statut < -1) $statut = '';\n\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (! $sortorder) { $sortorder=($filter=='outofdate'?\"DESC\":\"ASC\"); }\nif (! $sortfield) { $sortfield=($filter=='outofdate'?\"d.datefin\":\"d.lastname\"); }\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('memberlist'));\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels = $extrafields->fetch_name_optionals_label('adherent');\n$search_array_options=$extrafields->getOptionalsFromPost($extralabels,'','search_');\n\n// List of fields to search into when doing a \"search in all\"\n$fieldstosearchall = array(\n\t'd.rowid'=>'Ref',\n\t'd.login'=>'Login',\n\t'd.lastname'=>'Lastname',\n\t'd.firstname'=>'Firstname',\n\t'd.login'=>'Login',\n\t'd.societe'=>\"Company\",\n\t'd.email'=>'EMail',\n\t'd.address'=>'Address',\n\t'd.zip'=>'Zip',\n\t'd.town'=>'Town',\n\t'd.note_public'=>'NotePublic',\n\t'd.note_private'=>'NotePrivate',\n);\nif($db->type == 'pgsql') unset($fieldstosearchall['d.rowid']);\n$arrayfields=array(\n\t'd.ref'=>array('label'=>$langs->trans(\"Ref\"), 'checked'=>1),\n\t'd.lastname'=>array('label'=>$langs->trans(\"Lastname\"), 'checked'=>1),\n\t'd.firstname'=>array('label'=>$langs->trans(\"Firstname\"), 'checked'=>1),\n\t'd.company'=>array('label'=>$langs->trans(\"Company\"), 'checked'=>1),\n\t'd.login'=>array('label'=>$langs->trans(\"Login\"), 'checked'=>1),\n\t'd.morphy'=>array('label'=>$langs->trans(\"MorPhy\"), 'checked'=>1),\n\t't.libelle'=>array('label'=>$langs->trans(\"Type\"), 'checked'=>1),\n\t'd.email'=>array('label'=>$langs->trans(\"Email\"), 'checked'=>1),\n\t'd.address'=>array('label'=>$langs->trans(\"Address\"), 'checked'=>0),\n\t'd.zip'=>array('label'=>$langs->trans(\"Zip\"), 'checked'=>0),\n\t'd.town'=>array('label'=>$langs->trans(\"Town\"), 'checked'=>0),\n\t'd.phone'=>array('label'=>$langs->trans(\"Phone\"), 'checked'=>0),\n\t'd.phone_perso'=>array('label'=>$langs->trans(\"PhonePerso\"), 'checked'=>0),\n\t'd.phone_mobile'=>array('label'=>$langs->trans(\"PhoneMobile\"), 'checked'=>0),\n\t'state.nom'=>array('label'=>$langs->trans(\"State\"), 'checked'=>0),\n\t'country.code_iso'=>array('label'=>$langs->trans(\"Country\"), 'checked'=>0),\n\t/*'d.note_public'=>array('label'=>$langs->trans(\"NotePublic\"), 'checked'=>0),\n    'd.note_private'=>array('label'=>$langs->trans(\"NotePrivate\"), 'checked'=>0),*/\n\t'd.datefin'=>array('label'=>$langs->trans(\"EndSubscription\"), 'checked'=>1, 'position'=>500),\n\t'd.datec'=>array('label'=>$langs->trans(\"DateCreation\"), 'checked'=>0, 'position'=>500),\n\t'd.tms'=>array('label'=>$langs->trans(\"DateModificationShort\"), 'checked'=>0, 'position'=>500),\n\t'd.statut'=>array('label'=>$langs->trans(\"Status\"), 'checked'=>1, 'position'=>1000)\n);\n// Extra fields\nif (is_array($extrafields->attribute_label) && count($extrafields->attribute_label))\n{\n\tforeach($extrafields->attribute_label as $key => $val)\n\t{\n\t\tif (! empty($extrafields->attribute_list[$key])) $arrayfields[\"ef.\".$key]=array('label'=>$extrafields->attribute_label[$key], 'checked'=>(($extrafields->attribute_list[$key]<0)?0:1), 'position'=>$extrafields->attribute_pos[$key], 'enabled'=>(abs($extrafields->attribute_list[$key])!=3 && $extrafields->attribute_perms[$key]));\n\t}\n}\n\n\n/*\n * Actions\n */\n\nif (GETPOST('cancel','alpha')) { $action='list'; $massaction=''; }\nif (! GETPOST('confirmmassaction','alpha') && $massaction != 'presend' && $massaction != 'confirm_presend' && $massaction != 'confirm_createbills') { $massaction=''; }\n\n$parameters=array('socid'=>$socid);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n\t// Selection of new fields\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';\n\n\t// Purge search criteria\n\tif (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter.x','alpha') || GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n\t{\n\t\t$search=\"\";\n\t\t$search_ref=\"\";\n\t\t$search_lastname=\"\";\n\t\t$search_firstname=\"\";\n\t\t$search_login=\"\";\n\t\t$search_company=\"\";\n\t\t$search_type=\"\";\n\t\t$search_email=\"\";\n\t\t$search_address=\"\";\n\t\t$search_zip=\"\";\n\t\t$search_town=\"\";\n\t\t$search_state=\"\";\n\t\t$search_country='';\n\t\t$search_phone='';\n\t\t$search_phone_perso='';\n\t\t$search_phone_mobile='';\n\t\t$search_morphy=\"\";\n\t\t$search_categ=\"\";\n\t\t$catid=\"\";\n\t\t$sall=\"\";\n\t\t$statut='';\n\t\t$toselect='';\n\t\t$search_array_options=array();\n\t}\n\n\t// Mass actions\n\t$objectclass='Adherent';\n\t$objectlabel='Members';\n\t$permtoread = $user->rights->adherent->lire;\n\t$permtodelete = $user->rights->adherent->supprimer;\n\t$uploaddir = $conf->adherent->dir_output;\n\tinclude DOL_DOCUMENT_ROOT.'/core/actions_massactions.inc.php';\n}\n\n\n/*\n * View\n */\n\n$form=new Form($db);\n$formother=new FormOther($db);\n$membertypestatic=new AdherentType($db);\n$memberstatic=new Adherent($db);\n\n$now=dol_now();\n\n$sql = \"SELECT d.rowid, d.login, d.lastname, d.firstname, d.societe as company, d.fk_soc,\";\n$sql.= \" d.datefin, d.address, d.zip, d.town, d.state_id, d.country,\";\n$sql.= \" d.email, d.phone, d.phone_perso, d.phone_mobile, d.skype, d.birth, d.public, d.photo,\";\n$sql.= \" d.fk_adherent_type as type_id, d.morphy, d.statut, d.datec as date_creation, d.tms as date_update,\";\n$sql.= \" t.libelle as type, t.subscription,\";\n$sql.= \" state.code_departement as state_code, state.nom as state_name\";\n// Add fields from extrafields\nforeach ($extrafields->attribute_label as $key => $val) $sql.=($extrafields->attribute_type[$key] != 'separate' ? \",ef.\".$key.' as options_'.$key : '');\n// Add fields from hooks\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldListSelect',$parameters);    // Note that $action and $object may have been modified by hook\n$sql.=$hookmanager->resPrint;\n$sql.= \" FROM \".MAIN_DB_PREFIX.\"adherent as d\";\nif (is_array($extrafields->attribute_label) && count($extrafields->attribute_label)) $sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"adherent_extrafields as ef on (d.rowid = ef.fk_object)\";\nif (! empty($search_categ) || ! empty($catid)) $sql.= ' LEFT JOIN '.MAIN_DB_PREFIX.\"categorie_member as cm ON d.rowid = cm.fk_member\"; // We need this table joined to the select in order to filter by categ\n$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as country on (country.rowid = d.country)\";\n$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_departements as state on (state.rowid = d.state_id)\";\n$sql.= \", \".MAIN_DB_PREFIX.\"adherent_type as t\";\n$sql.= \" WHERE d.fk_adherent_type = t.rowid \";\nif ($catid > 0)    $sql.= \" AND cm.fk_categorie = \".$db->escape($catid);\nif ($catid == -2)  $sql.= \" AND cm.fk_categorie IS NULL\";\nif ($search_categ > 0)   $sql.= \" AND cm.fk_categorie = \".$db->escape($search_categ);\nif ($search_categ == -2) $sql.= \" AND cm.fk_categorie IS NULL\";\n$sql.= \" AND d.entity IN (\".getEntity('adherent').\")\";\nif ($sall) $sql.=natural_search(array_keys($fieldstosearchall), $sall);\nif ($search_type > 0) $sql.=\" AND t.rowid=\".$db->escape($search_type);\nif ($statut != '') $sql.=\" AND d.statut in (\".$db->escape($statut).\")\";     // Peut valoir un nombre ou liste de nombre separes par virgules\nif ($search_ref)\n{\n\tif (is_numeric($search_ref)) $sql.= \" AND (d.rowid = \".$db->escape($search_ref).\")\";\n\telse $sql.=\" AND 1 = 2\";    // Always wrong\n}\nif ($search_firstname) $sql.= natural_search(\"d.firstname\", $search_firstname);\nif ($search_lastname) $sql.= natural_search(array(\"d.firstname\", \"d.lastname\", \"d.societe\"), $search_lastname);\nif ($search_login) $sql.= natural_search(\"d.login\", $search_login);\nif ($search_email) $sql.= natural_search(\"d.email\", $search_email);\nif ($search_town)     $sql.= natural_search(\"d.town\",$search_town);\nif ($search_zip)      $sql.= natural_search(\"d.zip\",$search_zip);\nif ($search_state)    $sql.= natural_search(\"state.nom\",$search_state);\nif ($search_country) $sql .= \" AND d.country IN (\".$search_country.')';\nif ($filter == 'uptodate') $sql.=\" AND datefin >= '\".$db->idate($now).\"'\";\nif ($filter == 'outofdate') $sql.=\" AND (datefin IS NULL OR datefin < '\".$db->idate($now).\"')\";\n\n// Add where from extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_sql.tpl.php';\n\n// Add where from hooks\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldListWhere',$parameters);    // Note that $action and $object may have been modified by hook\n$sql.=$hookmanager->resPrint;\n\n$sql.= $db->order($sortfield,$sortorder);\n\n// Count total nb of records with no order and no limits\n$nbtotalofrecords = '';\nif (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST))\n{\n\t$resql = $db->query($sql);\n\tif ($resql) $nbtotalofrecords = $db->num_rows($resql);\n\telse dol_print_error($db);\n}\n// Add limit\n$sql.= $db->plimit($limit+1, $offset);\n\ndol_syslog(\"get list\", LOG_DEBUG);\n$resql = $db->query($sql);\nif (! $resql)\n{\n\tdol_print_error($db);\n\texit;\n}\n\n$num = $db->num_rows($resql);\n\n$arrayofselected=is_array($toselect)?$toselect:array();\n\nif ($num == 1 && ! empty($conf->global->MAIN_SEARCH_DIRECT_OPEN_IF_ONLY_ONE) && $sall)\n{\n\t$obj = $db->fetch_object($resql);\n\t$id = $obj->rowid;\n\theader(\"Location: \".DOL_URL_ROOT.'/adherents/card.php?id='.$id);\n\texit;\n}\n\nllxHeader('',$langs->trans(\"Member\"),'EN:Module_Foundations|FR:Module_Adh&eacute;rents|ES:M&oacute;dulo_Miembros');\n\n$titre=$langs->trans(\"MembersList\");\nif (GETPOSTISSET(\"statut\"))\n{\n\tif ($statut == '-1,1') { $titre=$langs->trans(\"MembersListQualified\"); }\n\tif ($statut == '-1')   { $titre=$langs->trans(\"MembersListToValid\"); }\n\tif ($statut == '1' && ! $filter)    \t\t{ $titre=$langs->trans(\"MembersListValid\"); }\n\tif ($statut == '1' && $filter=='uptodate')  { $titre=$langs->trans(\"MembersListUpToDate\"); }\n\tif ($statut == '1' && $filter=='outofdate')\t{ $titre=$langs->trans(\"MembersListNotUpToDate\"); }\n\tif ($statut == '0')    { $titre=$langs->trans(\"MembersListResiliated\"); }\n}\nelseif ($action == 'search')\n{\n\t$titre=$langs->trans(\"MembersListQualified\");\n}\n\nif ($search_type > 0)\n{\n\t$membertype=new AdherentType($db);\n\t$result=$membertype->fetch(GETPOST(\"type\",'int'));\n\t$titre.=\" (\".$membertype->label.\")\";\n}\n\n$param='';\nif (! empty($contextpage) && $contextpage != $_SERVER[\"PHP_SELF\"]) $param.='&contextpage='.$contextpage;\nif ($limit > 0 && $limit != $conf->liste_limit) $param.='&limit='.$limit;\nif ($sall != \"\") $param.=\"&sall=\".urlencode($sall);\nif ($statut != \"\") $param.=\"&statut=\".urlencode($statut);\nif ($search_ref)   $param.=\"&search_ref=\".urlencode($search_ref);\nif ($search_nom)   $param.=\"&search_nom=\".urlencode($search_nom);\nif ($search_firstname) $param.=\"&search_firstname=\".urlencode($search_firstname);\nif ($search_lastname)  $param.=\"&search_lastname=\".urlencode($search_lastname);\nif ($search_login)   $param.=\"&search_login=\".urlencode($search_login);\nif ($search_email)   $param.=\"&search_email=\".urlencode($search_email);\nif ($search_company) $param.=\"&search_company=\".urlencode($search_company);\nif ($search_address != '') $param.= \"&search_address=\".urlencode($search_address);\nif ($search_town != '') $param.= \"&search_town=\".urlencode($search_town);\nif ($search_zip != '') $param.= \"&search_zip=\".urlencode($search_zip);\nif ($search_state != '') $param.= \"&search_state=\".urlencode($search_state);\nif ($search_country != '') $param.= \"&search_country=\".urlencode($search_country);\nif ($search_phone != '') $param.= \"&search_phone=\".urlencode($search_phone);\nif ($search_phone_perso != '') $param.= \"&search_phone_perso=\".urlencode($search_phone_perso);\nif ($search_phone_mobile != '') $param.= \"&search_phone_mobile=\".urlencode($search_phone_mobile);\nif ($filter)         $param.=\"&filter=\".urlencode($filter);\nif ($search_type > 0)       $param.=\"&search_type=\".urlencode($search_type);\nif ($optioncss != '')       $param.='&optioncss='.urlencode($optioncss);\n// Add $param from extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_param.tpl.php';\n\n// List of mass actions available\n$arrayofmassactions =  array(\n//    'presend'=>$langs->trans(\"SendByMail\"),\n//    'builddoc'=>$langs->trans(\"PDFMerge\"),\n);\nif ($user->rights->adherent->supprimer) $arrayofmassactions['predelete']=$langs->trans(\"Delete\");\nif (in_array($massaction, array('presend','predelete'))) $arrayofmassactions=array();\n$massactionbutton=$form->selectMassAction('', $arrayofmassactions);\n\nprint '<form method=\"POST\" id=\"searchFormList\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\nif ($optioncss != '') print '<input type=\"hidden\" name=\"optioncss\" value=\"'.$optioncss.'\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"formfilteraction\" id=\"formfilteraction\" value=\"list\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"list\">';\nprint '<input type=\"hidden\" name=\"sortfield\" value=\"'.$sortfield.'\">';\nprint '<input type=\"hidden\" name=\"sortorder\" value=\"'.$sortorder.'\">';\nprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\nprint '<input type=\"hidden\" name=\"contextpage\" value=\"'.$contextpage.'\">';\n\nprint_barre_liste($titre, $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, 'title_generic.png', 0, '', '', $limit);\n\n$topicmail=\"Information\";\n$modelmail=\"member\";\n$objecttmp=new Adherent($db);\n$trackid='mem'.$object->id;\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/massactions_pre.tpl.php';\n\nif ($sall)\n{\n\tforeach($fieldstosearchall as $key => $val) $fieldstosearchall[$key]=$langs->trans($val);\n\tprint $langs->trans(\"FilterOnInto\", $sall) . implode(', ',$fieldstosearchall);\n}\n\n// Filter on categories\n$moreforfilter='';\nif (! empty($conf->categorie->enabled))\n{\n\trequire_once DOL_DOCUMENT_ROOT . '/categories/class/categorie.class.php';\n\t$moreforfilter.='<div class=\"divsearchfield\">';\n\t$moreforfilter.=$langs->trans('Categories'). ': ';\n\t$moreforfilter.=$formother->select_categories(Categorie::TYPE_MEMBER,$search_categ,'search_categ',1);\n\t$moreforfilter.='</div>';\n}\n$parameters=array();\n$reshook=$hookmanager->executeHooks('printFieldPreListTitle',$parameters);    // Note that $action and $object may have been modified by hook\nif (empty($reshook)) $moreforfilter .= $hookmanager->resPrint;\nelse $moreforfilter = $hookmanager->resPrint;\nif (! empty($moreforfilter))\n{\n\tprint '<div class=\"liste_titre liste_titre_bydiv centpercent\">';\n\tprint $moreforfilter;\n\tprint '</div>';\n}\n\n$varpage=empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage;\n$selectedfields=$form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage);\t// This also change content of $arrayfields\nif ($massactionbutton) $selectedfields.=$form->showCheckAddButtons('checkforselect', 1);\n\nprint '<div class=\"div-table-responsive\">';\nprint '<table class=\"tagtable liste'.($moreforfilter?\" listwithfilterbefore\":\"\").'\">'.\"\\n\";\n\n\n// Line for filters fields\nprint '<tr class=\"liste_titre_filter\">';\n\n// Line numbering\nif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))\n{\n\tprint '<td class=\"liste_titre\">&nbsp;</td>';\n}\n\n// Ref\nif (! empty($arrayfields['d.ref']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_ref\" value=\"'.dol_escape_htmltag($search_ref).'\">';\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['d.firstname']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_firstname\" value=\"'.dol_escape_htmltag($search_firstname).'\"></td>';\n}\n\nif (! empty($arrayfields['d.lastname']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_lastname\" value=\"'.dol_escape_htmltag($search_lastname).'\"></td>';\n}\n\nif (! empty($arrayfields['d.company']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_company\" value=\"'.dol_escape_htmltag($search_company).'\"></td>';\n}\n\nif (! empty($arrayfields['d.login']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_login\" value=\"'.dol_escape_htmltag($search_login).'\"></td>';\n}\n\nif (! empty($arrayfields['d.morphy']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['t.libelle']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\t$listetype=$membertypestatic->liste_array();\n\tprint $form->selectarray(\"search_type\", $listetype, $type, 1, 0, 0, '', 0, 32);\n\tprint '</td>';\n}\n\nif (! empty($arrayfields['d.address']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_address\" value=\"'.$search_address.'\"></td>';\n}\n\nif (! empty($arrayfields['d.zip']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_zip\" value=\"'.$search_zip.'\"></td>';\n}\nif (! empty($arrayfields['d.town']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_town\" value=\"'.$search_town.'\"></td>';\n}\n// State\nif (! empty($arrayfields['state.nom']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '<input class=\"flat searchstring maxwidth50\" type=\"text\" name=\"search_state\" value=\"'.dol_escape_htmltag($search_state).'\">';\n\tprint '</td>';\n}\n// Country\nif (! empty($arrayfields['country.code_iso']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"center\">';\n\tprint $form->select_country($search_country,'search_country','',0,'maxwidth100');\n\tprint '</td>';\n}\n// Phone pro\nif (! empty($arrayfields['d.phone']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone\" value=\"'.$search_phone.'\"></td>';\n}\n// Phone perso\nif (! empty($arrayfields['d.phone_perso']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone_perso\" value=\"'.$search_phone_perso.'\"></td>';\n}\n// Phone mobile\nif (! empty($arrayfields['d.phone_mobile']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_phone_mobile\" value=\"'.$search_phone_mobile.'\"></td>';\n}\n// Email\nif (! empty($arrayfields['d.email']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '<input class=\"flat maxwidth50\" type=\"text\" name=\"search_email\" value=\"'.$search_email.'\"></td>';\n}\n\nif (! empty($arrayfields['d.datefin']['checked']))\n{\n\tprint '<td class=\"liste_titre\" align=\"left\">';\n\tprint '</td>';\n}\n// Extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_input.tpl.php';\n\n// Fields from hook\n$parameters=array('arrayfields'=>$arrayfields);\n$reshook=$hookmanager->executeHooks('printFieldListOption',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\n// Date creation\nif (! empty($arrayfields['d.datec']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '</td>';\n}\n// Date modification\nif (! empty($arrayfields['d.tms']['checked']))\n{\n\tprint '<td class=\"liste_titre\">';\n\tprint '</td>';\n}\n// Status\nif (! empty($arrayfields['d.statut']['checked']))\n{\n\tprint '<td class=\"liste_titre maxwidthonsmartphone\" align=\"right\">';\n\t$liststatus=array(\n\t\t'-1'=>$langs->trans(\"Draft\"),\n\t\t'1'=>$langs->trans(\"Validated\"),\n\t\t'0'=>$langs->trans(\"Resiliated\")\n\t);\n\tprint $form->selectarray('statut', $liststatus, $statut, -2);\n\tprint '</td>';\n}\n// Action column\nprint '<td class=\"liste_titre\" align=\"middle\">';\n$searchpicto=$form->showFilterButtons();\nprint $searchpicto;\nprint '</td>';\n\nprint \"</tr>\\n\";\n\nprint '<tr class=\"liste_titre\">';\nif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))       print_liste_field_titre(\"ID\",$_SERVER[\"PHP_SELF\"],'','',$param,'align=\"center\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.ref']['checked']))            print_liste_field_titre($arrayfields['d.ref']['label'],$_SERVER[\"PHP_SELF\"],'d.rowid','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.firstname']['checked']))      print_liste_field_titre($arrayfields['d.firstname']['label'],$_SERVER[\"PHP_SELF\"],'d.firstname','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.lastname']['checked']))       print_liste_field_titre($arrayfields['d.lastname']['label'],$_SERVER[\"PHP_SELF\"],'d.lastname','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.company']['checked']))        print_liste_field_titre($arrayfields['d.company']['label'],$_SERVER[\"PHP_SELF\"],'d.societe','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.login']['checked']))          print_liste_field_titre($arrayfields['d.login']['label'],$_SERVER[\"PHP_SELF\"],'d.login','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.morphy']['checked']))         print_liste_field_titre($arrayfields['d.morphy']['label'],$_SERVER[\"PHP_SELF\"],'d.morphy','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['t.libelle']['checked']))        print_liste_field_titre($arrayfields['t.libelle']['label'],$_SERVER[\"PHP_SELF\"],'t.libelle','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.address']['checked']))        print_liste_field_titre($arrayfields['d.address']['label'],$_SERVER[\"PHP_SELF\"],'d.address','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.zip']['checked']))            print_liste_field_titre($arrayfields['d.zip']['label'],$_SERVER[\"PHP_SELF\"],'d.zip','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.town']['checked']))           print_liste_field_titre($arrayfields['d.town']['label'],$_SERVER[\"PHP_SELF\"],'d.town','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['state.nom']['checked']))        print_liste_field_titre($arrayfields['state.town']['label'],$_SERVER[\"PHP_SELF\"],\"state.nom\",\"\",$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['country.code_iso']['checked'])) print_liste_field_titre($arrayfields['country.code_iso']['label'],$_SERVER[\"PHP_SELF\"],\"country.code_iso\",\"\",$param,'align=\"center\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone']['checked']))          print_liste_field_titre($arrayfields['d.phone']['label'],$_SERVER[\"PHP_SELF\"],'d.phone','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone_perso']['checked']))    print_liste_field_titre($arrayfields['d.phone_perso']['label'],$_SERVER[\"PHP_SELF\"],'d.phone_perso','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.phone_mobile']['checked']))   print_liste_field_titre($arrayfields['d.phone_mobile']['label'],$_SERVER[\"PHP_SELF\"],'d.phone_mobile','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.email']['checked']))          print_liste_field_titre($arrayfields['d.email']['label'],$_SERVER[\"PHP_SELF\"],'d.email','',$param,'',$sortfield,$sortorder);\nif (! empty($arrayfields['d.datefin']['checked']))        print_liste_field_titre($arrayfields['d.datefin']['label'],$_SERVER[\"PHP_SELF\"],'d.datefin','',$param,'align=\"center\"',$sortfield,$sortorder);\n// Extra fields\ninclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_search_title.tpl.php';\n\n// Hook fields\n$parameters=array('arrayfields'=>$arrayfields,'param'=>$param,'sortfield'=>$sortfield,'sortorder'=>$sortorder);\n$reshook=$hookmanager->executeHooks('printFieldListTitle',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\nif (! empty($arrayfields['d.datec']['checked']))     print_liste_field_titre($arrayfields['d.datec']['label'],$_SERVER[\"PHP_SELF\"],\"d.datec\",\"\",$param,'align=\"center\" class=\"nowrap\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.tms']['checked']))       print_liste_field_titre($arrayfields['d.tms']['label'],$_SERVER[\"PHP_SELF\"],\"d.tms\",\"\",$param,'align=\"center\" class=\"nowrap\"',$sortfield,$sortorder);\nif (! empty($arrayfields['d.statut']['checked']))    print_liste_field_titre($arrayfields['d.statut']['label'],$_SERVER[\"PHP_SELF\"],\"d.statut\",\"\",$param,'align=\"right\"',$sortfield,$sortorder);\nprint_liste_field_titre($selectedfields, $_SERVER[\"PHP_SELF\"],\"\",'','','align=\"center\"',$sortfield,$sortorder,'maxwidthsearch ');\nprint \"</tr>\\n\";\n\n$i = 0;\nwhile ($i < min($num, $limit))\n{\n\t$obj = $db->fetch_object($resql);\n\n\t$datefin=$db->jdate($obj->datefin);\n\t$memberstatic->id=$obj->rowid;\n\t$memberstatic->ref=$obj->rowid;\n\t$memberstatic->lastname=$obj->lastname;\n\t$memberstatic->firstname=$obj->firstname;\n\t$memberstatic->societe=$obj->company;\n\t$memberstatic->statut=$obj->statut;\n\t$memberstatic->datefin= $datefin;\n\t$memberstatic->socid = $obj->fk_soc;\n\t$memberstatic->photo = $obj->photo;\n\n\tif (! empty($obj->fk_soc)) {\n\t\t$memberstatic->fetch_thirdparty();\n\t\t$companyname=$memberstatic->thirdparty->name;\n\t} else {\n\t\t$companyname=$obj->company;\n\t}\n\n\tprint '<tr class=\"oddeven\">';\n\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID))\n\t{\n\t\tprint '<td align=\"center\">'.$obj->rowid.'</td>';\n\t}\n\n\t// Ref\n\tif (! empty($arrayfields['d.ref']['checked']))\n\t{\n   \t\tprint \"<td>\";\n\t\tprint $memberstatic->getNomUrl(-1, 0, 'card', 'ref');\n\t\tprint \"</td>\\n\";\n\t}\n\t// Firstname\n\tif (! empty($arrayfields['d.firstname']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $obj->firstname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Lastname\n\tif (! empty($arrayfields['d.lastname']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $obj->lastname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Company\n\tif (! empty($arrayfields['d.company']['checked']))\n\t{\n\t\tprint \"<td>\";\n\t\tprint $companyname;\n\t\tprint \"</td>\\n\";\n\t}\n\t// Login\n\tif (! empty($arrayfields['d.login']['checked']))\n\t{\n\t   print \"<td>\".$obj->login.\"</td>\\n\";\n\t}\n\t// Moral/Physique\n\tif (! empty($arrayfields['d.morphy']['checked']))\n\t{\n\t   print \"<td>\".$memberstatic->getmorphylib($obj->morphy).\"</td>\\n\";\n\t}\n\t// Type label\n\tif (! empty($arrayfields['t.libelle']['checked']))\n\t{\n\t\t$membertypestatic->id=$obj->type_id;\n\t\t$membertypestatic->label=$obj->type;\n\t\tprint '<td class=\"nowrap\">';\n\t\tprint $membertypestatic->getNomUrl(1,32);\n\t\tprint '</td>';\n\t}\n\t// Address\n\tif (! empty($arrayfields['d.address']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->address;\n\t\tprint '</td>';\n\t}\n\t// Zip\n\tif (! empty($arrayfields['d.zip']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->zip;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Town\n\tif (! empty($arrayfields['d.town']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->town;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// State\n\tif (! empty($arrayfields['state.nom']['checked']))\n\t{\n\t\tprint \"<td>\".$obj->state_name.\"</td>\\n\";\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Country\n\tif (! empty($arrayfields['country.code_iso']['checked']))\n\t{\n\t\tprint '<td align=\"center\">';\n\t\t$tmparray=getCountry($obj->country,'all');\n\t\tprint $tmparray['label'];\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone pro\n\tif (! empty($arrayfields['d.phone']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone perso\n\tif (! empty($arrayfields['d.phone_perso']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone_perso;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Phone mobile\n\tif (! empty($arrayfields['d.phone_mobile']['checked']))\n\t{\n\t\tprint '<td class=\"nocellnopadd\">';\n\t\tprint $obj->phone_mobile;\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// EMail\n\tif (! empty($arrayfields['d.email']['checked']))\n\t{\n\t\tprint \"<td>\".dol_print_email($obj->email,0,0,1).\"</td>\\n\";\n\t}\n\t// End of subscription date\n\t$datefin=$db->jdate($obj->datefin);\n\tif (! empty($arrayfields['d.datefin']['checked']))\n\t{\n\t\tif ($datefin)\n\t\t{\n\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\tprint dol_print_date($datefin,'day');\n\t\t\tif ($memberstatic->hasDelay()) {\n\t\t\t\t$textlate .= ' ('.$langs->trans(\"DateReference\").' > '.$langs->trans(\"DateToday\").' '.(ceil($conf->adherent->subscription->warning_delay/60/60/24) >= 0 ? '+' : '').ceil($conf->adherent->subscription->warning_delay/60/60/24).' '.$langs->trans(\"days\").')';\n\t\t\t\tprint \" \".img_warning($langs->trans(\"SubscriptionLate\").$textlate);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td align=\"left\" class=\"nowrap\">';\n\t\t\tif ($obj->subscription == 'yes')\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"SubscriptionNotReceived\");\n\t\t\t\tif ($obj->statut > 0) print \" \".img_warning();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '&nbsp;';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n\t// Extra fields\n\tinclude DOL_DOCUMENT_ROOT.'/core/tpl/extrafields_list_print_fields.tpl.php';\n\t// Fields from hook\n\t$parameters=array('arrayfields'=>$arrayfields, 'obj'=>$obj);\n\t$reshook=$hookmanager->executeHooks('printFieldListValue',$parameters);    // Note that $action and $object may have been modified by hook\n\tprint $hookmanager->resPrint;\n\t// Date creation\n\tif (! empty($arrayfields['d.datec']['checked']))\n\t{\n\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\tprint dol_print_date($db->jdate($obj->date_creation), 'dayhour', 'tzuser');\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Date modification\n\tif (! empty($arrayfields['d.tms']['checked']))\n\t{\n\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\tprint dol_print_date($db->jdate($obj->date_update), 'dayhour', 'tzuser');\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Status\n\tif (! empty($arrayfields['d.statut']['checked']))\n\t{\n\t\tprint '<td align=\"right\" class=\"nowrap\">';\n\t\tprint $memberstatic->LibStatut($obj->statut,$obj->subscription,$datefin,5);\n\t\tprint '</td>';\n\t\tif (! $i) $totalarray['nbfield']++;\n\t}\n\t// Action column\n\tprint '<td align=\"center\">';\n\tif ($massactionbutton || $massaction)   // If we are in select mode (massactionbutton defined) or if we have already selected and sent an action ($massaction) defined\n\t{\n\t\t$selected=0;\n\t\tif (in_array($obj->rowid, $arrayofselected)) $selected=1;\n\t\tprint '<input id=\"cb'.$obj->rowid.'\" class=\"flat checkforselect\" type=\"checkbox\" name=\"toselect[]\" value=\"'.$obj->rowid.'\"'.($selected?' checked=\"checked\"':'').'>';\n\t}\n\tprint '</td>';\n\tif (! $i) $totalarray['nbfield']++;\n\n\tprint \"</tr>\\n\";\n\t$i++;\n}\n\n$db->free($resql);\n\n$parameters=array('sql' => $sql);\n$reshook=$hookmanager->executeHooks('printFieldListFooter',$parameters);    // Note that $action and $object may have been modified by hook\nprint $hookmanager->resPrint;\n\nprint \"</table>\\n\";\nprint \"</div>\";\nprint '</form>';\n\nif ($num > $limit || $page) print_barre_liste('', $page, $_SERVER[\"PHP_SELF\"], $param, $sortfield, $sortorder, '', $num, $nbtotalofrecords, 'title_generic.png', 0, '', '', $limit, 1);\n\n\nllxFooter();\n$db->close();\n"], "filenames": ["htdocs/adherents/list.php"], "buggy_code_start_loc": [46], "buggy_code_end_loc": [47], "fixing_code_start_loc": [46], "fixing_code_end_loc": [47], "type": "CWE-89", "message": "SQL injection vulnerability in Dolibarr before 7.0.2 allows remote attackers to execute arbitrary SQL commands via vectors involving integer parameters without quotes.", "other": {"cve": {"id": "CVE-2018-10094", "sourceIdentifier": "cve@mitre.org", "published": "2018-05-22T20:29:01.180", "lastModified": "2018-07-02T14:14:09.790", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in Dolibarr before 7.0.2 allows remote attackers to execute arbitrary SQL commands via vectors involving integer parameters without quotes."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en Dolibarr en versiones anteriores a la 7.0.2 permite que los atacantes remotos ejecuten comandos SQL arbitrarios mediante vectores relacionados con los par\u00e1metros de enteros sin comillas."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.2", "matchCriteriaId": "846C6EFB-F67D-4C61-9E8B-7CEE5B97AF08"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2018/05/21/1", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List"]}, {"url": "https://github.com/Dolibarr/dolibarr/blob/7.0.2/ChangeLog", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://github.com/Dolibarr/dolibarr/commit/7ade4e37f24d6859987bb9f6232f604325633fdd", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://sysdream.com/news/lab/2018-05-21-cve-2018-10094-dolibarr-sql-injection-vulnerability/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/44805/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/7ade4e37f24d6859987bb9f6232f604325633fdd"}}