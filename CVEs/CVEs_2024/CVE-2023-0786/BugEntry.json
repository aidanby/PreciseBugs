{"buggy_code": ["<?php\n\n/**\n * View a generated report.\n *\n *\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Gustavo Solt <gustavo.solt@mayflower.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2011-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2011-01-12\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Report;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n        <header class=\"row\">\n            <div class=\"col-lg-12\">\n                <h2 class=\"page-header\"><i aria-hidden=\"true\" class=\"fa fa-tasks\"></i>  <?= $PMF_LANG['ad_menu_reports']; ?></h2>\n            </div>\n        </header>\n\n\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n<?php\nif ($user->perm->hasPermission($user->getUserId(), 'reports')) {\n    $useCategory = Filter::filterInput(INPUT_POST, 'report_category', FILTER_VALIDATE_INT);\n    $useSubcategory = Filter::filterInput(INPUT_POST, 'report_sub_category', FILTER_VALIDATE_INT);\n    $useTranslation = Filter::filterInput(INPUT_POST, 'report_translations', FILTER_VALIDATE_INT);\n    $useLanguage = Filter::filterInput(INPUT_POST, 'report_language', FILTER_VALIDATE_INT);\n    $useId = Filter::filterInput(INPUT_POST, 'report_id', FILTER_VALIDATE_INT);\n    $useSticky = Filter::filterInput(INPUT_POST, 'report_sticky', FILTER_VALIDATE_INT);\n    $useTitle = Filter::filterInput(INPUT_POST, 'report_title', FILTER_VALIDATE_INT);\n    $useCreationDate = Filter::filterInput(INPUT_POST, 'report_creation_date', FILTER_VALIDATE_INT);\n    $useOwner = Filter::filterInput(INPUT_POST, 'report_owner', FILTER_VALIDATE_INT);\n    $useLastModified = Filter::filterInput(INPUT_POST, 'report_last_modified_person', FILTER_VALIDATE_INT);\n    $useUrl = Filter::filterInput(INPUT_POST, 'report_url', FILTER_VALIDATE_INT);\n    $useVisits = Filter::filterInput(INPUT_POST, 'report_visits', FILTER_VALIDATE_INT);\n    ?>\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n    <?php\n    ($useCategory) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_category']) : '';\n    ($useSubcategory) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_sub_category']) : '';\n    ($useTranslation) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_translations']) : '';\n    ($useLanguage) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_language']) : '';\n    ($useId) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_id']) : '';\n    ($useSticky) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_sticky']) : '';\n    ($useTitle) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_title']) : '';\n    ($useCreationDate) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_creation_date']) : '';\n    ($useOwner) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_owner']) : '';\n    ($useLastModified) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_last_modified_person']) : '';\n    ($useUrl) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_url']) : '';\n    ($useVisits) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_visits']) : '';\n    ?>\n                        </tr>\n                    </thead>\n                    <tbody>\n    <?php\n\n    $report = new Report($faqConfig);\n\n    foreach ($report->getReportingData() as $data) {\n        echo '<tr>';\n        if ($useCategory) {\n            if (0 != $data['category_parent']) {\n                printf('<td>%s</td>', $data['category_parent']);\n            } else {\n                printf('<td>%s</td>', $data['category_name']);\n            }\n        }\n        if ($useSubcategory) {\n            if (0 != $data['category_parent']) {\n                printf('<td>%s</td>', $data['category_name']);\n            } else {\n                echo '<td>n/a</td>';\n            }\n        }\n        if ($useTranslation) {\n            printf('<td>%d</td>', $data['faq_translations']);\n        }\n        if ($useLanguage && isset($languageCodes[strtoupper($data['faq_language'])])) {\n            printf('<td>%s</td>', $languageCodes[strtoupper($data['faq_language'])]);\n        }\n        if ($useId) {\n            printf('<td>%d</td>', $data['faq_id']);\n        }\n        if ($useSticky) {\n            printf('<td>%s</td>', $data['faq_sticky']);\n        }\n        if ($useTitle) {\n            printf('<td>%s</td>', $data['faq_question']);\n        }\n        if ($useCreationDate) {\n            printf('<td>%s</td>', $data['faq_updated']);\n        }\n        if ($useOwner) {\n            printf('<td>%s</td>', $data['faq_org_author']);\n        }\n        if ($useLastModified) {\n            printf('<td>%s</td>', $data['faq_last_author']);\n        }\n        if ($useUrl) {\n            $url = sprintf(\n                '<a href=\"../index.php?action=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s\">Link</a>',\n                $data['category_id'],\n                $data['faq_id'],\n                $data['faq_language']\n            );\n            printf('<td>%s</td>', $url);\n        }\n        if ($useVisits) {\n            printf('<td>%d</td>', $data['faq_visits']);\n        }\n        echo '</tr>';\n    }\n    ?>\n                    </tbody>\n                </table>\n                <form action=\"?action=reportexport\" method=\"post\" accept-charset=\"utf-8\">\n                    <input type=\"hidden\" name=\"report_category\" id=\"report_category\" value=\"<?= $useCategory ?>\"></td>\n                    <input type=\"hidden\" name=\"report_sub_category\" id=\"report_sub_category\" value=\"<?= $useSubcategory ?>\"></td>\n                    <input type=\"hidden\" name=\"report_translations\" id=\"report_translations\" value=\"<?= $useTranslation ?>\"></td>\n                    <input type=\"hidden\" name=\"report_language\" id=\"report_language\" value=\"<?= $useLanguage ?>\"></td>\n                    <input type=\"hidden\" name=\"report_id\" id=\"report_id\" value=\"<?= $useId ?>\"></td>\n                    <input type=\"hidden\" name=\"report_sticky\" id=\"report_sticky\" value=\"<?= $useSticky ?>\"></td>\n                    <input type=\"hidden\" name=\"report_title\" id=\"report_title\" value=\"<?= $useTitle ?>\"></td>\n                    <input type=\"hidden\" name=\"report_creation_date\" id=\"report_creation_date\" value=\"<?= $useCreationDate ?>\"></td>\n                    <input type=\"hidden\" name=\"report_owner\" id=\"report_owner\" value=\"<?= $useOwner ?>\"></td>\n                    <input type=\"hidden\" name=\"report_last_modified_person\" id=\"report_last_modified_person\" class=\"radio\" value=\"<?= $useLastModified ?>\">\n                    <input type=\"hidden\" name=\"report_url\" id=\"report_url\" value=\"<?= $useUrl ?>\"></td>\n                    <input type=\"hidden\" name=\"report_visits\" id=\"report_visits\" value=\"<?= $useVisits ?>\"></td>\n                    <div class=\"form-group row\">\n                        <button class=\"btn btn-primary\" type=\"submit\">\n                            <?= $PMF_LANG['ad_stat_report_make_csv'] ?>\n                        </button>\n                    </div>\n                </form>\n    <?php\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n?>\n            </div>\n        </div>\n", "<?php\n\n/**\n * The reporting class for simple report generation.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Gustavo Solt <gustavo.solt@mayflower.de>\n * @copyright 2011-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2011-02-04\n */\n\nnamespace phpMyFAQ;\n\n/**\n * Class Report\n *\n * @package phpMyFAQ\n */\nclass Report\n{\n    /**\n     * @var Configuration\n     */\n    private $config;\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Generates a huge array for the report.\n     *\n     * @return array<int, array<mixed>>\n     */\n    public function getReportingData(): array\n    {\n        $report = [];\n\n        $query = sprintf(\n            '\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                c.name as category_name,\n                c.parent_id as parent_id,\n                fd.sticky AS sticky,\n                fd.thema AS question,\n                fd.author AS original_author,\n                fd.updated AS updated,\n                fv.visits AS visits,\n                u.display_name AS last_author\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                (fd.id = fcr.record_id AND fd.lang = fcr.record_lang)\n            LEFT JOIN\n                %sfaqvisits fv\n            ON\n                (fd.id = fv.id AND fd.lang = fv.lang)\n            LEFT JOIN\n                %sfaqchanges as fc\n            ON\n                (fd.id = fc.id AND fd.lang = fc.lang)\n            LEFT JOIN\n                %sfaquserdata as u\n            ON\n                (u.user_id = fc.usr)\n            LEFT JOIN\n                %sfaqcategories as c\n            ON\n                (c.id = fcr.category_id AND c.lang = fcr.record_lang)\n            ORDER BY\n                fd.id\n            ASC',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $lastId = 0;\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            if ($row->id == $lastId) {\n                $report[$row->id]['faq_translations'] += 1;\n            } else {\n                $report[$row->id] = [\n                    'faq_id' => $row->id,\n                    'faq_language' => $row->lang,\n                    'category_id' => $row->category_id,\n                    'category_parent' => $row->parent_id,\n                    'category_name' => $row->category_name,\n                    'faq_translations' => 0,\n                    'faq_sticky' => $row->sticky,\n                    'faq_question' => $row->question,\n                    'faq_org_author' => $row->original_author,\n                    'faq_updated' => Date::createIsoDate($row->updated),\n                    'faq_visits' => $row->visits,\n                    'faq_last_author' => $row->last_author,\n                ];\n            }\n            $lastId = $row->id;\n        }\n\n        return $report;\n    }\n\n    /**\n     * Convert string to the correct encoding and removes possible\n     * bad strings to avoid formula injection attacks.\n     *\n     * @param  string $outputString String to encode.\n     * @return string Encoded string.\n     */\n    public function convertEncoding(string $outputString = ''): string\n    {\n        $outputString = html_entity_decode($outputString, ENT_QUOTES, 'utf-8');\n        $outputString = str_replace(',', ' ', $outputString);\n\n        if (extension_loaded('mbstring')) {\n            $detected = mb_detect_encoding($outputString);\n\n            if ($detected !== 'ASCII') {\n                $outputString = mb_convert_encoding($outputString, 'UTF-16', $detected);\n            }\n        }\n\n        $toBeRemoved = ['=', '+', '-', 'HYPERLINK'];\n        $outputString = str_replace($toBeRemoved, '', $outputString);\n\n        return $outputString;\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * View a generated report.\n *\n *\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Gustavo Solt <gustavo.solt@mayflower.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2011-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2011-01-12\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Report;\nuse phpMyFAQ\\Strings;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n        <header class=\"row\">\n            <div class=\"col-lg-12\">\n                <h2 class=\"page-header\"><i aria-hidden=\"true\" class=\"fa fa-tasks\"></i>  <?= $PMF_LANG['ad_menu_reports']; ?></h2>\n            </div>\n        </header>\n\n\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n<?php\nif ($user->perm->hasPermission($user->getUserId(), 'reports')) {\n    $useCategory = Filter::filterInput(INPUT_POST, 'report_category', FILTER_VALIDATE_INT);\n    $useSubcategory = Filter::filterInput(INPUT_POST, 'report_sub_category', FILTER_VALIDATE_INT);\n    $useTranslation = Filter::filterInput(INPUT_POST, 'report_translations', FILTER_VALIDATE_INT);\n    $useLanguage = Filter::filterInput(INPUT_POST, 'report_language', FILTER_VALIDATE_INT);\n    $useId = Filter::filterInput(INPUT_POST, 'report_id', FILTER_VALIDATE_INT);\n    $useSticky = Filter::filterInput(INPUT_POST, 'report_sticky', FILTER_VALIDATE_INT);\n    $useTitle = Filter::filterInput(INPUT_POST, 'report_title', FILTER_VALIDATE_INT);\n    $useCreationDate = Filter::filterInput(INPUT_POST, 'report_creation_date', FILTER_VALIDATE_INT);\n    $useOwner = Filter::filterInput(INPUT_POST, 'report_owner', FILTER_VALIDATE_INT);\n    $useLastModified = Filter::filterInput(INPUT_POST, 'report_last_modified_person', FILTER_VALIDATE_INT);\n    $useUrl = Filter::filterInput(INPUT_POST, 'report_url', FILTER_VALIDATE_INT);\n    $useVisits = Filter::filterInput(INPUT_POST, 'report_visits', FILTER_VALIDATE_INT);\n    ?>\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n    <?php\n    ($useCategory) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_category']) : '';\n    ($useSubcategory) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_sub_category']) : '';\n    ($useTranslation) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_translations']) : '';\n    ($useLanguage) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_language']) : '';\n    ($useId) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_id']) : '';\n    ($useSticky) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_sticky']) : '';\n    ($useTitle) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_title']) : '';\n    ($useCreationDate) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_creation_date']) : '';\n    ($useOwner) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_owner']) : '';\n    ($useLastModified) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_last_modified_person']) : '';\n    ($useUrl) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_url']) : '';\n    ($useVisits) ? printf('<th>%s</th>', $PMF_LANG['ad_stat_report_visits']) : '';\n    ?>\n                        </tr>\n                    </thead>\n                    <tbody>\n    <?php\n\n    $report = new Report($faqConfig);\n\n    foreach ($report->getReportingData() as $data) {\n        echo '<tr>';\n        if ($useCategory) {\n            if (0 != $data['category_parent']) {\n                printf('<td>%s</td>', $data['category_parent']);\n            } else {\n                printf('<td>%s</td>', Strings::htmlentities($data['category_name'] ?? ''));\n            }\n        }\n        if ($useSubcategory) {\n            if (0 != $data['category_parent']) {\n                printf('<td>%s</td>', Strings::htmlentities($data['category_name']));\n            } else {\n                echo '<td>n/a</td>';\n            }\n        }\n        if ($useTranslation) {\n            printf('<td>%d</td>', $data['faq_translations']);\n        }\n        if ($useLanguage && isset($languageCodes[strtoupper($data['faq_language'])])) {\n            printf('<td>%s</td>', $languageCodes[strtoupper($data['faq_language'])]);\n        }\n        if ($useId) {\n            printf('<td>%d</td>', $data['faq_id']);\n        }\n        if ($useSticky) {\n            printf('<td>%s</td>', $data['faq_sticky']);\n        }\n        if ($useTitle) {\n            printf('<td>%s</td>', Strings::htmlentities($data['faq_question']));\n        }\n        if ($useCreationDate) {\n            printf('<td>%s</td>', $data['faq_updated']);\n        }\n        if ($useOwner) {\n            printf('<td>%s</td>', Strings::htmlentities($data['faq_org_author']));\n        }\n        if ($useLastModified) {\n            printf('<td>%s</td>', Strings::htmlentities($data['faq_last_author'] ?? ''));\n        }\n        if ($useUrl) {\n            $url = sprintf(\n                '<a href=\"../index.php?action=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s\">Link</a>',\n                $data['category_id'],\n                $data['faq_id'],\n                $data['faq_language']\n            );\n            printf('<td>%s</td>', $url);\n        }\n        if ($useVisits) {\n            printf('<td>%d</td>', $data['faq_visits']);\n        }\n        echo '</tr>';\n    }\n    ?>\n                    </tbody>\n                </table>\n                <form action=\"?action=reportexport\" method=\"post\" accept-charset=\"utf-8\">\n                    <input type=\"hidden\" name=\"report_category\" id=\"report_category\" value=\"<?= $useCategory ?>\"></td>\n                    <input type=\"hidden\" name=\"report_sub_category\" id=\"report_sub_category\" value=\"<?= $useSubcategory ?>\"></td>\n                    <input type=\"hidden\" name=\"report_translations\" id=\"report_translations\" value=\"<?= $useTranslation ?>\"></td>\n                    <input type=\"hidden\" name=\"report_language\" id=\"report_language\" value=\"<?= $useLanguage ?>\"></td>\n                    <input type=\"hidden\" name=\"report_id\" id=\"report_id\" value=\"<?= $useId ?>\"></td>\n                    <input type=\"hidden\" name=\"report_sticky\" id=\"report_sticky\" value=\"<?= $useSticky ?>\"></td>\n                    <input type=\"hidden\" name=\"report_title\" id=\"report_title\" value=\"<?= $useTitle ?>\"></td>\n                    <input type=\"hidden\" name=\"report_creation_date\" id=\"report_creation_date\" value=\"<?= $useCreationDate ?>\"></td>\n                    <input type=\"hidden\" name=\"report_owner\" id=\"report_owner\" value=\"<?= $useOwner ?>\"></td>\n                    <input type=\"hidden\" name=\"report_last_modified_person\" id=\"report_last_modified_person\" class=\"radio\" value=\"<?= $useLastModified ?>\">\n                    <input type=\"hidden\" name=\"report_url\" id=\"report_url\" value=\"<?= $useUrl ?>\"></td>\n                    <input type=\"hidden\" name=\"report_visits\" id=\"report_visits\" value=\"<?= $useVisits ?>\"></td>\n                    <div class=\"form-group row\">\n                        <button class=\"btn btn-primary\" type=\"submit\">\n                            <?= $PMF_LANG['ad_stat_report_make_csv'] ?>\n                        </button>\n                    </div>\n                </form>\n    <?php\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n?>\n            </div>\n        </div>\n", "<?php\n\n/**\n * The reporting class for simple report generation.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Gustavo Solt <gustavo.solt@mayflower.de>\n * @copyright 2011-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2011-02-04\n */\n\nnamespace phpMyFAQ;\n\n/**\n * Class Report\n *\n * @package phpMyFAQ\n */\nclass Report\n{\n    /**\n     * @var Configuration\n     */\n    private $config;\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Generates a huge array for the report.\n     *\n     * @return array<int, array<mixed>>\n     */\n    public function getReportingData(): array\n    {\n        $report = [];\n\n        $query = sprintf(\n            '\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                c.name as category_name,\n                c.parent_id as parent_id,\n                fd.sticky AS sticky,\n                fd.thema AS question,\n                fd.author AS original_author,\n                fd.updated AS updated,\n                fv.visits AS visits,\n                u.display_name AS last_author\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                (fd.id = fcr.record_id AND fd.lang = fcr.record_lang)\n            LEFT JOIN\n                %sfaqvisits fv\n            ON\n                (fd.id = fv.id AND fd.lang = fv.lang)\n            LEFT JOIN\n                %sfaqchanges as fc\n            ON\n                (fd.id = fc.id AND fd.lang = fc.lang)\n            LEFT JOIN\n                %sfaquserdata as u\n            ON\n                (u.user_id = fc.usr)\n            LEFT JOIN\n                %sfaqcategories as c\n            ON\n                (c.id = fcr.category_id AND c.lang = fcr.record_lang)\n            ORDER BY\n                fd.id\n            ASC',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $lastId = 0;\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            if ($row->id == $lastId) {\n                $report[$row->id]['faq_translations'] += 1;\n            } else {\n                $report[$row->id] = [\n                    'faq_id' => $row->id,\n                    'faq_language' => $row->lang,\n                    'category_id' => $row->category_id,\n                    'category_parent' => $row->parent_id,\n                    'category_name' => $row->category_name,\n                    'faq_translations' => 0,\n                    'faq_sticky' => $row->sticky,\n                    'faq_question' => $row->question,\n                    'faq_org_author' => $row->original_author,\n                    'faq_updated' => Date::createIsoDate($row->updated),\n                    'faq_visits' => $row->visits,\n                    'faq_last_author' => $row->last_author,\n                ];\n            }\n            $lastId = $row->id;\n        }\n\n        return $report;\n    }\n\n    /**\n     * Convert string to the correct encoding and removes possible\n     * bad strings to avoid formula injection attacks.\n     *\n     * @param  string $outputString String to encode.\n     * @return string Encoded string.\n     */\n    public function convertEncoding(string $outputString = ''): string\n    {\n        $outputString = html_entity_decode($outputString, ENT_QUOTES, 'utf-8');\n        $outputString = str_replace(',', ' ', $outputString);\n\n        if (extension_loaded('mbstring')) {\n            $detected = mb_detect_encoding($outputString);\n\n            if ($detected !== 'ASCII') {\n                $outputString = mb_convert_encoding($outputString, 'UTF-16', $detected);\n            }\n        }\n\n        $toBeRemoved = ['=', '+', '-', 'HYPERLINK'];\n        return str_replace($toBeRemoved, '', $outputString);\n    }\n}\n"], "filenames": ["phpmyfaq/admin/report.view.php", "phpmyfaq/src/phpMyFAQ/Report.php"], "buggy_code_start_loc": [22, 148], "buggy_code_end_loc": [116, 151], "fixing_code_start_loc": [23, 148], "fixing_code_end_loc": [117, 149], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Generic in GitHub repository thorsten/phpmyfaq prior to 3.1.11.", "other": {"cve": {"id": "CVE-2023-0786", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-12T14:15:11.197", "lastModified": "2023-02-23T05:11:50.453", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Generic in GitHub repository thorsten/phpmyfaq prior to 3.1.11."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.7, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.11", "matchCriteriaId": "0CADCF40-01A2-41DD-B454-4F5946570CA9"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/ce676eb9e9d8cb7864f36ee124e838b1ad15415f", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/8c74ccab-0d1d-4c6b-a0fa-803aa65de04f", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/ce676eb9e9d8cb7864f36ee124e838b1ad15415f"}}