{"buggy_code": ["/*\n *       .                             .o8                     oooo\n *    .o8                             \"888                     `888\n *  .o888oo oooo d8b oooo  oooo   .oooo888   .ooooo.   .oooo.o  888  oooo\n *    888   `888\"\"8P `888  `888  d88' `888  d88' `88b d88(  \"8  888 .8P'\n *    888    888      888   888  888   888  888ooo888 `\"Y88b.   888888.\n *    888 .  888      888   888  888   888  888    .o o.  )88b  888 `88b.\n *    \"888\" d888b     `V88V\"V8P' `Y8bod88P\" `Y8bod8P' 8\"\"888P' o888o o888o\n *  ========================================================================\n *  Author:     Chris Brame\n *  Updated:    2/14/19 12:07 AM\n *  Copyright (c) 2014-2019. All rights reserved.\n */\n\nmodule.exports = function (middleware, router, controllers) {\n  // Shorten Vars\n  const apiv2Auth = middleware.apiv2\n  const apiv2 = controllers.api.v2\n  const isAdmin = middleware.isAdmin\n  const isAgent = middleware.isAgent\n  const isAgentOrAdmin = middleware.isAgentOrAdmin\n  const canUser = middleware.canUser\n\n  // Common\n  router.post('/api/v2/login', controllers.api.v2.common.login)\n  router.post('/api/v2/token', controllers.api.v2.common.token)\n\n  // Accounts\n  router.get('/api/v2/accounts', apiv2Auth, apiv2.accounts.get)\n  router.post('/api/v2/accounts', apiv2Auth, apiv2.accounts.create)\n  router.put('/api/v2/accounts/:username', apiv2Auth, apiv2.accounts.update)\n\n  // Tickets\n  router.get('/api/v2/tickets', apiv2Auth, apiv2.tickets.get)\n  router.post('/api/v2/tickets', apiv2Auth, apiv2.tickets.create)\n  router.post('/api/v2/tickets/transfer/:uid', apiv2Auth, isAdmin, apiv2.tickets.transferToThirdParty)\n  router.get('/api/v2/tickets/:uid', apiv2Auth, apiv2.tickets.single)\n  router.put('/api/v2/tickets/batch', apiv2Auth, apiv2.tickets.batchUpdate)\n  router.put('/api/v2/tickets/:uid', apiv2Auth, apiv2.tickets.update)\n  router.delete('/api/v2/tickets/:uid', apiv2Auth, apiv2.tickets.delete)\n  router.delete('/api/v2/tickets/deleted/:id', apiv2Auth, isAdmin, apiv2.tickets.permDelete)\n\n  // Groups\n  router.get('/api/v2/groups', apiv2Auth, apiv2.groups.get)\n  router.post('/api/v2/groups', apiv2Auth, apiv2.groups.create)\n  router.put('/api/v2/groups/:id', apiv2Auth, apiv2.groups.update)\n  router.delete('/api/v2/groups/:id', apiv2Auth, apiv2.groups.delete)\n\n  // Teams\n  router.get('/api/v2/teams', apiv2Auth, apiv2.teams.get)\n  router.post('/api/v2/teams', apiv2Auth, apiv2.teams.create)\n  router.put('/api/v2/teams/:id', apiv2Auth, apiv2.teams.update)\n  router.delete('/api/v2/teams/:id', apiv2Auth, apiv2.teams.delete)\n\n  // Departments\n  router.get('/api/v2/departments', apiv2Auth, apiv2.departments.get)\n  router.post('/api/v2/departments', apiv2Auth, apiv2.departments.create)\n  router.put('/api/v2/departments/:id', apiv2Auth, apiv2.departments.update)\n  router.delete('/api/v2/departments/:id', apiv2Auth, apiv2.departments.delete)\n\n  // Notices\n  router.get('/api/v2/notices', apiv2Auth, apiv2.notices.get)\n  router.put('/api/v2/notices/:id', apiv2Auth, canUser('notices:update'), apiv2.notices.update)\n  router.put('/api/v2/notices/:id/activate', apiv2Auth, canUser('notices:activate'), apiv2.notices.activate)\n  router.get('/api/v2/notices/clear', apiv2Auth, canUser('notices:deactivate'), apiv2.notices.clear)\n  router.delete('/api/v2/notices/:id', apiv2Auth, canUser('notices:delete'), apiv2.notices.delete)\n\n  // ElasticSearch\n  router.get('/api/v2/es/search', middleware.api, apiv2.elasticsearch.search)\n  router.get('/api/v2/es/rebuild', apiv2Auth, isAdmin, apiv2.elasticsearch.rebuild)\n  router.get('/api/v2/es/status', apiv2Auth, isAdmin, apiv2.elasticsearch.status)\n\n  router.get('/api/v2/mailer/check', apiv2Auth, isAdmin, apiv2.mailer.check)\n}\n"], "fixing_code": ["/*\n *       .                             .o8                     oooo\n *    .o8                             \"888                     `888\n *  .o888oo oooo d8b oooo  oooo   .oooo888   .ooooo.   .oooo.o  888  oooo\n *    888   `888\"\"8P `888  `888  d88' `888  d88' `88b d88(  \"8  888 .8P'\n *    888    888      888   888  888   888  888ooo888 `\"Y88b.   888888.\n *    888 .  888      888   888  888   888  888    .o o.  )88b  888 `88b.\n *    \"888\" d888b     `V88V\"V8P' `Y8bod88P\" `Y8bod8P' 8\"\"888P' o888o o888o\n *  ========================================================================\n *  Author:     Chris Brame\n *  Updated:    5/17/22 2:15 PM\n *  Copyright (c) 2014-2019. All rights reserved.\n */\n\nmodule.exports = function (middleware, router, controllers) {\n  // Shorten Vars\n  const apiv2Auth = middleware.apiv2\n  const apiv2 = controllers.api.v2\n  const isAdmin = middleware.isAdmin\n  const isAgent = middleware.isAgent\n  const isAgentOrAdmin = middleware.isAgentOrAdmin\n  const canUser = middleware.canUser\n\n  // Common\n  router.post('/api/v2/login', controllers.api.v2.common.login)\n  router.post('/api/v2/token', controllers.api.v2.common.token)\n\n  // Accounts\n  router.get('/api/v2/accounts', apiv2Auth, canUser('accounts:view'), apiv2.accounts.get)\n  router.post('/api/v2/accounts', apiv2Auth, canUser('accounts:create'), apiv2.accounts.create)\n  router.put('/api/v2/accounts/:username', canUser('accounts:update'), apiv2Auth, apiv2.accounts.update)\n\n  // Tickets\n  router.get('/api/v2/tickets', apiv2Auth, canUser('tickets:view'), apiv2.tickets.get)\n  router.post('/api/v2/tickets', apiv2Auth, canUser('tickets:create'), apiv2.tickets.create)\n  router.post('/api/v2/tickets/transfer/:uid', apiv2Auth, isAdmin, apiv2.tickets.transferToThirdParty)\n  router.get('/api/v2/tickets/:uid', apiv2Auth, canUser('tickets:view'), apiv2.tickets.single)\n  router.put('/api/v2/tickets/batch', apiv2Auth, canUser('tickets:update'), apiv2.tickets.batchUpdate)\n  router.put('/api/v2/tickets/:uid', apiv2Auth, canUser('tickets:update'), apiv2.tickets.update)\n  router.delete('/api/v2/tickets/:uid', apiv2Auth, canUser('tickets:delete'), apiv2.tickets.delete)\n  router.delete('/api/v2/tickets/deleted/:id', apiv2Auth, isAdmin, apiv2.tickets.permDelete)\n\n  // Groups\n  router.get('/api/v2/groups', apiv2Auth, apiv2.groups.get)\n  router.post('/api/v2/groups', apiv2Auth, canUser('groups:create'), apiv2.groups.create)\n  router.put('/api/v2/groups/:id', apiv2Auth, canUser('groups:update'), apiv2.groups.update)\n  router.delete('/api/v2/groups/:id', apiv2Auth, canUser('groups:delete'), apiv2.groups.delete)\n\n  // Teams\n  router.get('/api/v2/teams', apiv2Auth, canUser('teams:view'), apiv2.teams.get)\n  router.post('/api/v2/teams', apiv2Auth, canUser('teams:create'), apiv2.teams.create)\n  router.put('/api/v2/teams/:id', apiv2Auth, canUser('teams:update'), apiv2.teams.update)\n  router.delete('/api/v2/teams/:id', apiv2Auth, canUser('teams:delete'), apiv2.teams.delete)\n\n  // Departments\n  router.get('/api/v2/departments', apiv2Auth, canUser('departments:view'), apiv2.departments.get)\n  router.post('/api/v2/departments', apiv2Auth, canUser('departments:create'), apiv2.departments.create)\n  router.put('/api/v2/departments/:id', apiv2Auth, canUser('departments:update'), apiv2.departments.update)\n  router.delete('/api/v2/departments/:id', apiv2Auth, canUser('departments:delete'), apiv2.departments.delete)\n\n  // Notices\n  router.get('/api/v2/notices', apiv2Auth, apiv2.notices.get)\n  router.put('/api/v2/notices/:id', apiv2Auth, canUser('notices:update'), apiv2.notices.update)\n  router.put('/api/v2/notices/:id/activate', apiv2Auth, canUser('notices:activate'), apiv2.notices.activate)\n  router.get('/api/v2/notices/clear', apiv2Auth, canUser('notices:deactivate'), apiv2.notices.clear)\n  router.delete('/api/v2/notices/:id', apiv2Auth, canUser('notices:delete'), apiv2.notices.delete)\n\n  // ElasticSearch\n  router.get('/api/v2/es/search', middleware.api, apiv2.elasticsearch.search)\n  router.get('/api/v2/es/rebuild', apiv2Auth, isAdmin, apiv2.elasticsearch.rebuild)\n  router.get('/api/v2/es/status', apiv2Auth, isAdmin, apiv2.elasticsearch.status)\n\n  router.get('/api/v2/mailer/check', apiv2Auth, isAdmin, apiv2.mailer.check)\n}\n"], "filenames": ["src/controllers/api/v2/routes.js"], "buggy_code_start_loc": [11], "buggy_code_end_loc": [60], "fixing_code_start_loc": [11], "fixing_code_end_loc": [60], "type": "CWE-269", "message": "Improper Privilege Management in GitHub repository polonel/trudesk prior to 1.2.2.", "other": {"cve": {"id": "CVE-2022-1770", "sourceIdentifier": "security@huntr.dev", "published": "2022-05-20T18:15:07.947", "lastModified": "2022-05-26T16:01:25.157", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Privilege Management in GitHub repository polonel/trudesk prior to 1.2.2."}, {"lang": "es", "value": "Una Administraci\u00f3n Inadecuada de Privilegios en el repositorio de GitHub polonel/trudesk versiones anteriores a 1.2.2"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.9, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-269"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-269"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:trudesk_project:trudesk:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.2", "matchCriteriaId": "129D9FED-E43F-47B1-8FB3-012D00E93181"}]}]}], "references": [{"url": "https://github.com/polonel/trudesk/commit/889876f66c9a5b28f019258e329310c31d72cbd2", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/74a252a2-8bf6-4f88-a180-b90338a239fa", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/polonel/trudesk/commit/889876f66c9a5b28f019258e329310c31d72cbd2"}}