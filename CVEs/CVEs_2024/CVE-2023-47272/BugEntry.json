{"buggy_code": ["# Changelog Roundcube Webmail\n\n## Unreleased\n\n- Fix cross-site scripting (XSS) vulnerability in handling of SVG in HTML messages (#9168)\n\n## Release 1.5.4\n\n- Fix cross-site scripting (XSS) vulnerability in handling of linkrefs in plain text messages\n- Fix so output of log_date_format with microseconds contains time in server time zone, not UTC\n- Fix so N property always exists in a vCard export (#8771)\n- Fix so rcmail::format_date() works with DateTimeImmutable input (#8867)\n- Fix bug where a non-ASCII character in app.js could cause error in javascript engine (#8894)\n\n## Release 1.5.3\n\n- Enigma: Fix initial synchronization of private keys\n- Enigma: Fix double quoted-printable encoding of pgp-signed messages with no attachments (#8413)\n- Fix various PHP8 warnings (#8392)\n- Fix mail headers injection via the subject field on mail compose (#8404)\n- Fix bug where small message/rfc822 parts could not be decoded (#8408)\n- Fix setting HTML mode on reply/forward of a signed message (#8405)\n- Fix handling of RFC2231-encoded attachment names inside of a message/rfc822 part (#8418)\n- Fix bug where some mail parts (images) could have not be listed as attachments (#8425)\n- Fix bug where attachment icons were stuck at the top of the messages list in Safari (#8433)\n- Fix handling of message/rfc822 parts that are small and are multipart structures with a single part (#8458)\n- Fix bug where session could time out if DB and PHP timezone were different (#8303)\n- Fix bug where DSN flag state wasn't stored with a draft (#8371)\n- Fix broken encoding of HTML content encapsulated in a RTF attachment (#8444)\n- Fix problem with aria-hidden=true on toolbar menus in the Elastic skin (#8517)\n- Fix bug where title tag content was displayed in the body if it contained HTML tags (#8540)\n- Fix support for DSN specification without host e.g. pgsql:///dbname (#8558)\n\n## Release 1.5.2\n\n- OAuth: pass 'id_token' to 'oauth_login' plugin hook (#8214)\n- OAuth: fix expiration of short-lived oauth tokens (#8147)\n- OAuth: fix relative path to assets if /index.php/foo/bar url is used (#8144)\n- OAuth: no auto-redirect on imap login failures (#8370)\n- OAuth: refresh access token in 'refresh' plugin hook (#8224)\n- Fix so folder search parameters are honored by subscriptions_option plugin (#8312)\n- Fix password change with Directadmin driver (#8322, #8329)\n- Fix so css files in plugins/jqueryui/themes will be minified too (#8337)\n- Fix handling of unicode/special characters in custom From input (#8357)\n- Fix some PHP8 compatibility issues (#8363)\n- Fix chpass-wrapper.py helper compatibility with Python 3 (#8324)\n- Fix scrolling and missing Close button in the Select image dialog in Elastic/mobile (#8367)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious CSS content\n\n## Release 1.5.1\n\n- Fix importing contacts with no email address (#8227)\n- Fix so session's search scope is not used if search is not active (#8199)\n- Fix some PHP8 warnings (#8239)\n- Fix so dark mode state is retained after closing the browser (#8237)\n- Fix bug where new messages were not added to the list on refresh if skip_deleted=true (#8234)\n- Fix colors on \"Show source\" page in dark mode (#8246)\n- Fix handling of dark_mode_support:false setting in skins meta.json - also when devel_mode=false (#8249)\n- Fix database initialization if db_prefix is a schema prefix (#8221)\n- Fix undefined constant error in Installer on Windows (#8258)\n- Fix installation/upgrade on MySQL 5.5 - Index column size too large (#8231)\n- Fix regression in setting of contact listing name (#8260)\n- Fix bug in Larry skin where headers toggle state was reset on full page preview (#8203)\n- Fix bug where \\u200b characters were added into the recipient input preventing mail delivery (#8269)\n- Fix charset conversion errors on PHP < 8 for charsets not supported by mbstring (#8252)\n- Fix bug where adding a contact to trusted senders via \"Always allow from...\" button didn't work (#8264, #8268)\n- Fix bug with show_images setting where option 1 and 3 were swapped (#8268)\n- Fix PHP fatal error on an undefined constant in contacts import action (#8277)\n- Fix fetching headers of multiple message parts at once in rcube_imap_generic::fetchMIMEHeaders() (#8282)\n- Fix bug where attachment download could sometimes fail with a CSRF check error (#8283)\n- Fix an infinite loop when parsing environment variables with float/integer values (#8293)\n- Fix so 'small-dark' logo has more priority than the 'small' logo (#8298)\n\n## Release 1.5.0\n\n- Support displaying RTF content (including encapsulated HTML) from a TNEF attachment\n- Disable the default spellchecker option using spell.roundcube.net (#8182)\n- Newmail_notifier: Improved the notification sound (#8155)\n- Fix size of Mailvelope iframe for PGP-inlined mail, again (#8126)\n- Fix handling of group names with @ character in autocomplete and contacts widget (#8098)\n- Fix Firefox infinate loading display on mail screen (#8128)\n- Fix converting >1MB of HTML content into plain text (#8137)\n- Fix bug where expanding a group in the recipient input could corrupt the input content (#7569)\n- Fix fatal error/warning on invalid input to user parameter (#8152)\n- Fix changing password with dovecot_passwdfile driver (#8145)\n- Fix handling of headers that occur multiple times by show_additional_headers plugin (#8157)\n- Fix bug where vertical scrollbar in new HTML message bounced back on scroll (#8046)\n- Fix displaying inline images with incorrectly declared content-type (#8158)\n- Fix so addr-spec with missing closing angle bracket can be parsed (#8164)\n- Fix handling of spellcheck connection errors (#8172)\n- Fix a couple of PHP8 warnings (#8175, #8176)\n- Fix bug where \"from my contacts\" and \"from trusted senders\" values were mixed up (#8177)\n- Fix password/token length check on OAuth login (#8178)\n- Fix XSS issue in handling attachment filename extension in mimetype mismatch warning (#8193)\n- Fix SQL injection via some session variables\n- Fix handling of dark_mode_support:false setting in skins meta.json (#8186)\n- Fix security issues regarding server name and trusted_host_patterns setting\n\n## Release 1.5-rc\n\n- Upgrade to TinyMCE 5.8.2\n- SMTP XCLIENT support (#7893, #6411)\n- Add IDN homograph attack (spoofing) detection [CVE-2019-15237] (#6891)\n- Add configuration options for subject prefixes (#7929, #4981)\n- Support IMAP LITERAL- extension [RFC 7888] (#6878)\n- Warn the user about a potential data leak on mail bounce or forward (#7993)\n- Make the Empty action available for every non-empty folder, not only Trash (#7948)\n- Remove (incorrect) use of Return-Receipt-To header (#8069)\n- Submit various simple dialog forms with the Enter key (#7133)\n- Add RFC2231 support to rcube_mime_decode (#7390)\n- Plugin API: Allow modification of 'error' argument in 'message_send_error' hook (#7914)\n- OAuth: add plugin hooks `oauth_login` and `oauth_refresh_token` for oauth events (#8028, #8040)\n- Debug_logger: Fix the main plugin functionality and documentation (#8041)\n- Enigma: Fix bug where signature verification could fail for non-ascii bodies (#7919)\n- Enigma: Fix invalid expiration dates of PGP keys on a 32bit system (#7531)\n- Enigma: Display an information that public and private keys are stored on the server (#7941)\n- Enigma: Optional support for passwordless keys (#7265)\n- Managesieve: Fix removing nested rules in scripts (#8011)\n- Managesieve: Support XOAUTH2, requires Net_Sieve 1.4.5 (#7925)\n- Managesieve: Added ability to remove 'redirect' option from UI (#7922)\n- New_user_dialog: Use the 'identity_update' hook (#8023)\n- Password: Fix broken 'hmail' driver (#7966)\n- Password: Set password_minimum_length to 8 by default (#8003)\n- Vcard_attachments: Improve handling of multiple contacts (#7027)\n- Fix inserting a group from non-default source using the Insert contact(s) dialog (#8095)\n- Fix invalid search fields after search scope change (#6919)\n- Fix so \"Always allow from...\" button appears also when allow_images=3 (#7961)\n- Fix Elastic's pretty select scroll position in Chrome (#7964)\n- Fix bug where invalid non-unicode characters in JSON output could make the UI unresponsive (#7955)\n- Fix PHP 8 fatal error when allowing images in an email (#7968)\n- Fix so session expiration is more precise and do not depend on the garbage collector (#7576)\n- Fix bug where imap_conn_options settings were ignored (#7912)\n- Fix bug causing some HTML message content to be not centered in Elastic skin (#7911)\n- Fix bug when sending an email and recipient's email address contains a trailing dot (#7899)\n- Fix bug where the list page wasn't reset when changing a folder on mail view page (#7932)\n- Fix so selecting the same folder to reset search resets also the page number (#7125)\n- Fix login page rendering after oauth failure (#7812,#7923)\n- Fix bug where assigning users to groups via menu (not drag'n'drop) could fail in Elastic theme (#7973)\n- Fix HTML5 parser issue with a messy HTML code from Outlook (#7356)\n- Fix handling of multiple link references with the same index in plain text message (#8021)\n- Fix various actions on folders with angle brackets in name (#8037)\n- Fix inconsistent fowarding actions statuses on drafts (#8039)\n- Fix bug where `start` and `reversed` attributes of `ol` tag were ignored (#8059)\n- Fix bug where consecutive LDAP searches could return wrong results (#8064)\n- Fix bug where plus characters in attachment filename could have been ignored (#8074)\n- Fix displaying HTML body with inline images encapsulated using TNEF format (winmail.dat)\n- Fix handling of custom sender addresses with names (#8106)\n- Fix shift + drag'n'drop menu not working in Elastic skin with Chrome browser (#8107)\n\n## Release 1.5-beta\n\n- Require PHP >= 5.5\n- Support PHP 8.0 (#7625)\n- Require php-intl\n- Remove use of Net_IDNA2 package\n- Require GuzzleHttp\\Client\n- Upgrade to TinyMCE 5.5.1\n- Upgrade to jQuery 3.5.1 (#7464)\n- Update build tools (#7800, #7804, #7497):\n    - jsshrink.sh: Replace google-closure-compiler with UglifyJS\n    - cssshrink.sh: Replace yuicompressor with csso\n    - require lessc >= 2.5.2 (and add support for v4) with less-plugin-clean-css for Less files compilation\n- Automatically collected recipients and trusted senders (#6904)\n    - Added configurable Collected Recipients addressbook source (#4971)\n    - Added configurable Trusted Senders addressbook source (#5046)\n    - Added 'contact_exists' hook\n    - Added separate \"trusted senders\" options for show_images and mdn_request preferences (#7614)\n- Contact form mode: private/business (#7630)\n- OAuth/XOauth support (#7425, #6933)\n- Cache refactoring (#6312)\n- Added special value 'email' to login_username_filter, it changes also logon input type (#7179)\n- Allow array in smtp_host config (#7296)\n- Support proxy for server-side HTTP requests (#7658)\n- By default do not set the User-Agent header (#7731)\n- Add possibility to (re-)define field mapping on contacts import from a CSV file (#7045, #6668)\n- Move \"On request for return receipt\" from \"Mailbox View\" to \"Displaying Messages\" (#7614)\n- Support RFC8438: IMAP STATUS=SIZE - for faster folder size calculation (#7269)\n- MySQL: Use utf8mb4 charset and utf8mb4_unicode_ci collation (#6535, #7113)\n- Allow NULL in users.preferences column in postgres and sqlite db, the same as for other engines (#7767)\n- Support for language codes up to 16 chars long (e.g. es-419) in database schema (#6851)\n- Relaxed domain name validation for extended TLDs support (#5588)\n- Allow opening application/octet-stream attachments according to filename extension (#6821)\n- Added support for INSERT OR REPLACE queries (#6771)\n- Allow skins to define which layout options they support (#7235)\n- Extract RFC2231 attachment name from message headers (#6729, #6783)\n- Add support for SameSite cookie attribute via session_samesite option (req PHP >= 7.3.0) (#6772)\n- Change folders sorting so shared/other users namespaces are listed last (#5012)\n- Display a warning and do not try to open empty attachments (#7332)\n- Return 204 rather than 404 on missing contact photo (#7777)\n- Add 'reconnect' plugin to retry IMAP connection (#7844)\n- Plugin API: Added 'message' argument to 'message_compose_body' hook\n- Plugin API: Added 'preferences' parameter to 'user_create' hook (#7692)\n- Elastic: Dark mode (#6709)\n- Elastic: Display email size on the list of messages (#7162)\n- Elastic: Replace properties sidebar with a dialog on the attachment preview page (#7635)\n- Elastic: Minimize forms/colors blink on page load\n- Elastic: Improve mail header \"detailed mode\" (#7224)\n- Elastic: Moving single recipients between recipient inputs with drag-n-drop (#5069)\n- Elastic: Display a special icon for other users and shared namespace roots (#5012)\n- Elastic: Support space-separated email addresses in recipient input (#6529, #6457)\n- Elastic: Remember list checkbox selection state (#7148)\n- Elastic: Add \"Open in new window\" in mail compose (#7260)\n- Elastic: Make custom less files optional (#7497)\n- Elastic: Prevent from opening mail preview in a new window on touch devices using double tap (#7732)\n- Templates: Add support for expressions in object attributes (#7237)\n- Templates: Add support for nested if conditions (#6818)\n- Templates: Make [space][slash] ending of condition objects optional (#6954)\n- Mailvelope: Fix size of iframe for PGP-inlined mail (#7348)\n- Mailvelope: Add config option to use Main Keyring (#7348, #7157)\n- Mailvelope: Add config option to set the size for new keys (#7348)\n- Mailvelope: Always ask before discarding email currently being composed (#7348)\n- Mailvelope: Fix unnecessary warning to re-add attachments when restoring a draft (#7348)\n- Archive: Added options to split archive by year or year+month and folder (#7216)\n- Enigma: Support ECC key generation - when using GnuPG >= 2.1.7 (#6853)\n- Managesieve: Add support for 'spamtest' extension - RFC3685 (#6950)\n- Managesieve: Allow display name with email address in vacation :from field (#6760)\n- Managesieve: Improve UX on custom header input (#7207)\n- Managesieve: Fix bug where activation of forward/vacation rule could activate a wrong script (#7423)\n- Managesieve: Fix bug where forward/vacation rule could end up being duplicated (#7349)\n- new_user_identity: Fix missing password for user-specific LDAP operations (#7667)\n- Password: Added 'pwned' password strength driver (#7274)\n- Password: Added Mail-in-a-Box (miab) driver (#7824)\n- Password: Added TinyCP driver (#7510)\n- Password: Added httpapi driver to connect to generic HTTP/HTTPS APIs (#7439)\n- Password: Added dovecot_passwdfile driver (#5786)\n- Password: Removed old 'cpanel' driver, 'cpanel_webmail' driver renamed to 'cpanel' (#7780)\n- Fix handling of address groups in email headers by ignoring their names (#7663)\n- Fix so message flags are updated on refresh also for multifolder search results (#7774)\n- Fix so IMAP ID command is send only after authentication (#7517)\n- Fix bug where it wasn't possible to save Spanish (Latin America) locale preference (#7784)\n- Fix mail search error on invalid search_mods definition (#7789)\n- Fix error when dealing with message/rfc822 attachments using Gmail IMAP (#6854)\n- Fix ISO-2022-JP-MS encoding issues (#7091)\n- Fix so messages in threads with no root aren't displayed separately (#4999)\n- Fix so anchor tags without href attribute are not modified (#7413)\n- Fix invalid IMAP SEARCH command in some rare case on messages cache synchronization (#7895)\n- Fix so allowing remote resources does not add an entry to browser history (#6620)\n\n## Release 1.4.11\n\n- Display a nice error informing about no PHP8 support\n- Elastic: Fix compatibility with Less v3 and v4 (#7813)\n- Fix bug with managesieve_domains in Settings > Forwarding form (#7849)\n- Fix errors in MSSQL database update scripts (#7853)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious CSS content\n\n## Release 1.4.10\n\n- Fix extra angle brackets in In-Reply-To header derived from mailto: params (#7655)\n- Fix folder list issue whan special folder is a subfolder (#7647)\n- Fix Elastic's folder subscription toggle in search result (#7653)\n- Fix state of subscription toggle on folders list after changing folder state from the search result (#7653)\n- Security: Fix cross-site scripting (XSS) via HTML or Plain text messages with malicious content [CVE-2020-35730]\n\n## Release 1.4.9\n\n- Fix HTML editor in latest Chrome 85.0.4183.102, update to TinyMCE 4.9.11 (#7615)\n- Add missing localization for some label/legend elements in userinfo plugin (#7478)\n- Fix importing birthday dates from Gmail vCards (BDAY:YYYYMMDD)\n- Fix restoring Cc/Bcc fields from local storage (#7554)\n- Fix jstz.min.js installation, bump version to 1.0.7\n- Fix link to closure compiler in bin/jsshrink.sh script (#7567)\n- Fix incorrect PDO::lastInsertId() use in sqlsrv driver (#7564)\n- Fix bug where some parts of a message could have been missing in a reply/forward body (#7568)\n- Fix empty space on mail printouts in Chrome (#7604)\n- Fix empty output from HTML5 parser when content contains XML tag (#7624)\n- Fix scroll jump on key press in plain text mode of the HTML editor (#7622)\n- Fix so autocompletion list does not hide on scroll inside it (#7592)\n\n## Release 1.4.8\n\n- Fix support for an error as a string in message_before_send hook (#7475)\n- Elastic: Fix redundant scrollbar in plain text editor on mail reply (#7500)\n- Elastic: Fix deleted and replied+forwarded icons on messages list (#7503)\n- Managesieve: Fix too-small input field in Elastic when using custom headers (#7498)\n- Managesieve: Allow angle brackets in out-of-office message body (#7518)\n- Fix bug in conversion of email addresses to mailto links in plain text messages (#7526)\n- Fix format=flowed formatting on plain text part derived from the HTML content (#7504)\n- Fix incorrect rewriting of internal links in HTML content (#7512)\n- Fix handling links without defined protocol (#7454)\n- Fix paging of search results on IMAP servers with no SORT capability (#7462)\n- Fix detecting special folders on servers with both SPECIAL-USE and LIST-STATUS (#7525)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious svg content [CVE-2020-16145]\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious math content\n- Security: Fix potential XSS issue in HTML editor of the identity signature input (#7507)\n\n## Release 1.4.7\n\n- Fix bug where subfolders of special folders could have been duplicated on folder list\n- Increase maximum size of contact jobtitle and department fields to 128 characters\n- Fix missing newline after the logged line when writing to stdout (#7418)\n- Elastic: Fix context menu (paste) on the recipient input (#7431)\n- Fix problem with forwarding inline images attached to messages with no HTML part (#7414)\n- Fix problem with handling attached images with same name when using database_attachments/redundant_attachments (#7455)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious svg/namespace [CVE-2020-15562]\n\n## Release 1.4.6\n\n- Installer: Fix regression in SMTP test section (#7417)\n\n## Release 1.4.5\n\n- Fix bug in extracting required plugins from composer.json that led to spurious error in log (#7364)\n- Fix so the database setup description is compatible with MySQL 8 (#7340)\n- Markasjunk: Fix regression in jsevent driver (#7361)\n- Fix missing flag indication on collapsed thread in Larry and Elastic (#7366)\n- Fix default keyservers (use keys.openpgp.org), add note about CORS (#7373, #7367)\n- Password: Fix issue with Modoboa driver (#7372)\n- Mailvelope: Use sender's address to find pubkeys to check signatures (#7348)\n- Mailvelope: Fix Encrypt button hidden in Elastic (#7353)\n- Fix PHP warning: count(): Parameter must be an array or an object... in ID command handler (#7392)\n- Fix error when user-configured skin does not exist anymore (#7271)\n- Elastic: Fix aspect ratio of a contact photo in mail preview (#7339)\n- Fix bug where PDF attachments marked as inline could have not been attached on mail forward (#7382)\n- Security: Fix a couple of XSS issues in Installer (#7406)\n- Security: Fix XSS issue in template object 'username' (#7406)\n- Security: Better fix for CVE-2020-12641\n- Security: Fix cross-site scripting (XSS) via malicious XML attachment\n\n## Release 1.4.4\n\n- Fix bug where attachments with Content-Id were attached to the message on reply (#7122)\n- Fix identity selection on reply when both sender and recipient addresses are included in identities (#7211)\n- Elastic: Fix text selection with Shift+PageUp and Shift+PageDown in plain text editor when using Chrome (#7230)\n- Elastic: Fix recipient input bug when using click to select a contact from autocomplete list (#7231)\n- Elastic: Fix color of a folder with recent messages (#7281)\n- Elastic: Restrict logo size in print view (#7275)\n- Fix invalid Content-Type for messages with only html part and inline images - Mail_Mime-1.10.7 (#7261)\n- Fix missing contact display name in QR Code data (#7257)\n- Fix so button label in Select image/media dialogs is \"Close\" not \"Cancel\" (#7246)\n- Fix regression in testing database schema on MSSQL (#7227)\n- Fix cursor position after inserting a group to a recipient input using autocompletion (#7267)\n- Fix string literals handling in IMAP STATUS (and various other) responses (#7290)\n- Fix bug where multiple images in a message were replaced by the first one on forward/reply/edit (#7293)\n- Fix handling keyservers configured with protocol prefix (#7295)\n- Markasjunk: Fix marking as spam/ham on moving messages with Move menu (#7189)\n- Markasjunk: Fix bug where moving to Junk was failing on messages selected with Select > All (#7206)\n- Fix so imap error message is displayed to the user on folder create/update (#7245)\n- Fix bug where a special folder couldn't be created if a special-use flag is not supported (#7147)\n- Mailvelope: Fix bug where recipients with name were not handled properly in mail compose (#7312)\n- Fix characters encoding in group rename input after group creation/rename (#7330)\n- Fix bug where some message/rfc822 parts could not be attached on forward (#7323)\n- Make install-jsdeps.sh script working without the 'file' program installed (#7325)\n- Fix performance issue of parsing big HTML messages by disabling HTML5 parser for these (#7331)\n- Fix so Print button for PDF attachments works on Firefox >= 75 (#5125)\n- Security: Fix XSS issue in handling of CDATA in HTML messages [CVE-2020-12625]\n- Security: Fix remote code execution via crafted 'im_convert_path' or 'im_identify_path' settings [CVE-2020-12641]\n- Security: Fix local file inclusion (and code execution) via crafted 'plugins' option [CVE-2020-12640]\n- Security: Fix CSRF bypass that could be used to log out an authenticated user [CVE-2020-12626] (#7302)\n\n## Release 1.4.3\n\n- Enigma: Fix so key list selection is reset when opening key creation form (#7154)\n- Enigma: Fix so using list checkbox selection does not load the key preview frame\n- Enigma: Fix generation of key pairs for identities with IDN domains (#7181)\n- Enigma: Display IDN domains of key users and identities in UTF8\n- Enigma: Fix bug where \"Send unencrypted\" button didn't work in Elastic skin (#7205)\n- Managesieve: Fix bug where it wasn't possible to save flag actions (#7188)\n- Markasjunk: Fix bug where marking as spam/ham didn't work on moving messages with drag-and-drop (#7137)\n- Password: Make chpass-wrapper.py Python 3 compatible (#7135)\n- Elastic: Fix disappearing sidebar in mail compose after clicking Mail button\n- Elastic: Fix incorrect aria-disabled attribute on Mail taskmenu button in mail compose\n- Elastic: Fix bug where it was possible to switch editor mode when 'htmleditor' was in 'dont_override' (#7143)\n- Elastic: Fix text selection in recipient inputs (#7129)\n- Elastic: Fix missing Close button in \"more recipients\" dialog\n- Elastic: Fix non-working folder subscription checkbox for newly added folders (#7174)\n- Fix regression where \"Open in new window\" action didn't work (#7155)\n- Fix PHP Warning: array_filter() expects parameter 1 to be array, null given in subscriptions_option plugin (#7165)\n- Fix unexpected error message when mail refresh involves folder auto-unsubscribe (#6923)\n- Fix recipient duplicates in print-view when the recipient list has been expanded (#7169)\n- Fix bug where files in skins/ directory were listed on skins list (#7180)\n- Fix bug where message parts with no Content-Disposition header and no name were not listed on attachments list (#7117)\n- Fix display issues with mail subject that contains line-breaks (#7191)\n- Fix invalid Content-Transfer-Encoding on multipart messages - Mail_Mime fix (#7170)\n- Fix regression where using an absolute path to SQLite database file on Windows didn't work (#7196)\n- Fix using unix:///path/to/socket.file in memcached driver (#7210)\n\n## Release 1.4.2\n\n- Add support for PHPUnit 6 and 7 (#6870)\n- Plugin API: Make actionbefore, before<action>, actionafter and after<action> events working with plugin actions (#7106)\n- Managesieve: Replace \"Filter disabled\" with \"Filter enabled\" (#7028)\n- Managesieve: Fix so modifier type select wasn't hidden after hiding modifier select on header change\n- Managesieve: Fix filter selection after removing a first filter (#7079)\n- Markasjunk: Fix marking more than one message as spam/ham with email_learn driver (#7121)\n- Password: Fix kpasswd and smb drivers' double-escaping bug (#7092)\n- Enigma: Add script to import keys from filesystem to the db storage (for multihost)\n- Installer: Fix DB Write test on SQLite database (\"database is locked\" error) (#7064)\n- Installer: Fix so SQLite DSN with a relative path to the database file works in Installer\n- Elastic: Fix contrast of warning toasts (#7058)\n- Elastic: Simple search in pretty selects (#7072)\n- Elastic: Fix hidden list widget on mobile/tablet when selecting folder while search menu is open (#7120)\n- Fix so type attribute on script tags is not used on HTML5 pages (#6975)\n- Fix unread count after purge on a folder that is not currently selected (#7051)\n- Fix bug where Enter key didn't work on messages list in \"List\" layout (#7052)\n- Fix bug where deleting a saved search in addressbook caused display issue on sources/groups list (#7061)\n- Fix bug where a new saved search added after removing all searches wasn't added to the list (#7061)\n- Fix bug where a new contact group added after removing all groups from addressbook wasn't added to the list\n- Fix bug where Ctype extension wasn't required in Installer and INSTALL file (#7049)\n- Fix so install-jsdeps.sh removes Bootstrap's sourceMappingURL (#7035)\n- Fix so use of Ctrl+A does not scroll the list (#7020)\n- Fix/remove useless keyup event handler on username input in logon form (#6970)\n- Fix bug where cancelling switching from HTML to plain text didn't set the flag properly (#7077)\n- Fix bug where HTML reply could add an empty line with extra indentation above the original message (#7088)\n- Fix matching multiple X-Forwarded-For addresses with 'proxy_whitelist' (#7107)\n- Fix so displayed maximum attachment size depends also on 'max_message_size' (#7105)\n- Fix bug where 'skins_allowed' option didn't enforce user skin preference (#7080)\n- Fix so contact's organization field accepts up to 128 characters (it was 50)\n- Fix bug where listing tables in PostgreSQL database with db_prefix didn't work (#7093)\n- Fix bug where 'text' attribute on body tag was ignored when displaying HTML message (#7109)\n- Fix bug where next message wasn't displayed after delete in List mode (#7096)\n- Fix so number of contacts in a group is not limited to 200 when redirecting to mail composer from Contacts (#6972)\n- Fix malformed characters in HTML message with charset meta tag not in head (#7116)\n\n## Release 1.4.1\n\n- Elastic: Change HTML editor widget to improve form flow (#6992)\n- Elastic: Fix position of mobile floating action button (#7038)\n- Managesieve: Fix locked UI after opening filter frame (#7007)\n- Fix PHP warning: \"array_merge(): Expected parameter 2 to be an array, null given in sendmail.inc (#7003)\n- Fix bug where cache keys could exceed length limit specified in db schema (#7004)\n- Fix invalid Signature button state after escaping Mailvelope mode (#7015)\n- Fix so 401 error is returned only on failed logon requests (#7010)\n- Fix db_prefix handling in queries with `TRUNCATE TABLE <name>` and `UNIQUE <name>` (#7013)\n- Fix so update.sh script warns about changed defaults (#7011)\n- Fix tables listing routine when DSN contained a database with unsupported suffix (#7034)\n- Fix so Elastic is also a default in jqueryui plugin (#7039)\n- Fix bug where the Installer would not warn about required schema upgrade (#7042)\n\n## Release 1.4.0\n\n- Elastic: Resizable columns (#6929)\n- Elastic: Fix position and style of auto-complete dropdown on small screens (#6951)\n- Elastic: Fix initial focus on recipients input in mail compose screen\n- Elastic: Fix inserting responses at cursor position (#6971)\n- Elastic: Fix unread filter icon and search state on folder change (#6978)\n- Elastic: Fix regression where Encrypt button wasn't displayed in mail compose toolbar (#6982)\n- Elastic: Fix regression where recipient input didn't update internal input state (#6988)\n- Enigma: Fix bug where signing option was set to disabled after saving a draft in Elastic skin (#6515)\n- Redis: Improve error handling and phpredis 5.X support (#6888)\n- Archive: Fix bug where next email was not displayed after Archive button use (#6965)\n- Archive: Fix missing Archive icon in folder selector popup in Elastic\n- Fix bug where cache keys were not case-sensitive on MySQL/MSSQL (#6942)\n- Fix so an error is logged when encryption fails (#6948)\n- Fix bug where inline images could have been ignored if Content-Id header contained redundant spaces (#6980)\n- Fix and document skin_logo setup (#6981)\n\n## Release 1.4-rc2\n\n- Update to jQuery 3.4.1\n- Clarified 'address_book_type' option behavior (#6680)\n- Added cookie mismatch detection, display an error message informing the user to clear cookies\n- Renamed 'log_session' option to 'session_debug'\n- Removed 'delete_always' option (#6782)\n- Don't log full session identifiers in userlogins log (#6625)\n- Support $HasAttachment/$HasNoAttachment keywords (#6201)\n- Support PECL memcached extension as a session and cache storage driver (experimental)\n- Switch to IDNA2008 variant (#6806)\n- installto.sh: Add possibility to run the update even on the up-to-date installation (#6533)\n- Plugin API: Add 'render_folder_selector' hook\n- Added 'keyservers' option to define list of HKP servers for Enigma/Mailvelope (#6326)\n- Added flag to disable server certificate validation via Mysql DSN argument (#6848)\n- Select all records on the current list page with CTRL + A (#6813)\n- Use Left/Right Arrow keys to faster move over threaded messages list (#6399)\n- Changes in `display_next` setting (#6795):\n    - Move it to Preferences > User Interface > Main Options\n    - Make it apply to Contacts interface too\n    - Make it apply only if deleting/moving a previewed message/contact\n- Redis: Support connection to unix socket\n- Put charset meta specification before a title tag, add page title automatically (#6811)\n- Elastic: Various internal refactorings\n- Elastic: Add Prev/Next buttons on message page toolbar (#6648)\n- Elastic: Close search options on Enter key press in quick-search input (#6660)\n- Elastic: Changed some icons (#6852)\n- Elastic: Changed read/unread icons (#6636)\n- Elastic: Changed \"Move to...\" icon (#6637)\n- Elastic: Add hide/show for advanced preferences (#6632)\n- Elastic: Add default icon on Settings/Preferences lists for external plugins (#6814)\n- Elastic: Add indicator for popover menu items that open a submenu (#6868)\n- Elastic: Move compose attachments/options to the right side (#6839)\n- Elastic: Add border/background to attachments list widget (#6842)\n- Elastic: Add \"Show unread messages\" button to the search bar (#6587)\n- Elastic: Fix bug where toolbar disappears on attachment menu use in Chrome (#6677)\n- Elastic: Fix folders list scrolling on touch devices (#6706)\n- Elastic: Fix non-working pretty selects in Chrome browser (#6705)\n- Elastic: Fix issue with absolute positioned mail content (#6739)\n- Elastic: Fix bug where some menu actions could cause a browser popup warning\n- Elastic: Fix handling mailto: URL parameters in contact menu (#6751)\n- Elastic: Fix keyboard navigation in some menus, e.g. the contact menu\n- Elastic: Fix visual issue with long buttons in .boxwarning (#6797)\n- Elastic: Fix handling new-line in text pasted to a recipient input\n- Elastic: Fix so search is not reset when returning from the message preview page (#6847)\n- Larry: Fix regression where menu actions didn't work with keyboard (#6740)\n- ACL: Display user/group names (from ldap) instead of acl identifier\n- Password: Added ldap_exop driver (#4992)\n- Password: Added support for SSHA512 password algorithm (#6805)\n- Managesieve: Fix bug where global includes were requested for vacation (#6716)\n- Managesieve: Use RFC-compliant line endings, CRLF instead of LF (#6686)\n- Managesieve: Fix so \"Create filter\" option does not show up when Filters menu is disabled (#6723)\n- Enigma: For verified signatures, display the user id associated with the sender address (#5958)\n- Enigma: Fix bug where revoked users/keys were not greyed out in key info\n- Enigma: Fix error message when trying to encrypt with a revoked key (#6607)\n- Enigma: Fix \"decryption oracle\" bug [CVE-2019-10740] (#6638)\n- Enigma: Fix bug where signature verification could have been skipped for some message structures (#6838)\n- Fix language selection for spellchecker in html mode (#6915)\n- Fix css styles leak from replied/forwarded message to the rest of the composed text (#6831)\n- Fix invalid path to \"add contact\" icon when using assets_path setting\n- Fix invalid path to blocked.gif when using assets_path setting (#6752)\n- Fix so advanced search dialog is not automatically displayed on searchonly addressbooks (#6679)\n- Fix so an error is logged when more than one attachment plugin has been enabled, initialize the first one (#6735)\n- Fix bug where flag change could have been passed to a preview frame when not expected\n- Fix bug in HTML parser that could cause missing text fragments when there was no head/body tag (#6713)\n- Fix bug where HTML messages with a xml:namespace tag were not rendered (#6697)\n- Fix TinyMCE download location (#6694)\n- Fix so \"Open in new window\" consistently displays \"external window\" interface (#6659)\n- Fix bug where next row wasn't selected after deleting a collapsed thread (#6655)\n- Fix bug where external content (e.g. mail body) was passed to templates parsing code (#6640)\n- Fix bug where attachment preview didn't work with x_frame_options=deny (#6688)\n- Fix so bin/install-jsdeps.sh returns error code on error (#6704)\n- Fix bug where bmp images couldn't be displayed on some systems (#6728)\n- Fix bug in parsing vCard data using PHP 7.3 due to an invalid regexp (#6744)\n- Fix bug where bold/strong text was converted to upper-case on html-to-text conversion (6758)\n- Fix bug in rcube_utils::parse_hosts() where %t, %d, %z could return only tld (#6746)\n- Fix bug where Next/Prev button in mail view didn't work with multi-folder search result (#6793)\n- Fix bug where selection of columns on messages list wasn't working\n- Fix bug in converting multi-page Tiff images to Jpeg (#6824)\n- Fix bug where handling multiple messages from multi-folder search result could not work (#6845)\n- Fix bug where unread count wasn't updated after moving multi-folder result (#6846)\n- Fix wrong messages order after returning to a multi-folder search result (#6836)\n- Fix some PHP 7.4 compat. issues (#6884, #6866)\n- Fix bug where it was possible to bypass the position:fixed CSS check in received messages (#6898)\n- Fix bug where some strict remote URIs in url() style were unintentionally blocked (#6899)\n- Fix bug where it was possible to bypass the CSS jail in HTML messages using :root pseudo-class (#6897)\n- Fix bug where it was possible to bypass href URI check with data:application/xhtml+xml URIs (#6896)\n\n## Release 1.4-rc1\n\n- Changed 'password_charset' default to 'UTF-8' (#6522)\n- Add skins_allowed option (#6483)\n- SMTP GSSAPI support via krb_authentication plugin (#6417)\n- Avoid Referer leaking by using Referrer-Policy:same-origin header (#6385)\n- Removed 'referer_check' option (#6440)\n- Use constant prefix for temp file names, don't remove temp files from other apps (#6511)\n- Ignore 'Sender' header on Reply-All action (#6506)\n- deluser.sh: Add option to delete users who have not logged in for more than X days (#6340)\n- HTML5 Upload Progress - as a replacement for the old server-side solution (#6177)\n- Update to TinyMCE 4.8.2\n- Update to jQuery-MiniColors 2.3.4\n- Prevent from using deprecated timezone names from jsTimezoneDetect\n- Force session.gc_probability=1 when using custom session handlers (#6560)\n- Support simple field labels (e.g. LetterHub examples) in csv imports (#6541)\n- Add cache busters also to images used by templates (#6610)\n- Plugin API: Added 'raise_error' hook (#6199)\n- Plugin API: Added 'common_headers' hook (#6385)\n- Plugin API: Added 'ldap_connected' hook\n- Enigma: Update to OpenPGPjs 4.2.1 - fixes user name encoding issues in key generation (#6524)\n- Enigma: Fixed multi-host synchronization of private and deleted keys and pubring.kbx file\n- Managesieve: Added support for 'editheader' extension - RFC5293 (#5954)\n- Managesieve: Fix bug where custom header or variable could be lost on form submission (#6594)\n- Markasjunk: Integrate markasjunk2 features into markasjunk - marking as non-junk + learning engine (#6504)\n- Password: Added 'modoboa' driver (#6361)\n- Password: Fix bug where password_dovecotpw_with_method setting could be ignored (#6436)\n- Password: Fix bug where new users could skip forced password change (#6434)\n- Password: Allow drivers to override default password comparisons (eg new is not same as current) (#6473)\n- Password: Allow drivers to override default strength checks (eg allow for 'not the same as last x passwords') (#246)\n- Password: Allow drivers to define password strength rules displayed to the user\n- Password: Allow separate password saving and strength drivers for use of strength checking services (#5040)\n- Password: Add zxcvbn driver for checking password strength (#6479)\n- Password: Disallow control characters in passwords\n- Password: Add support for Plesk >= 17.8 (#6526)\n- Elastic: Improved datepicker displayed always in parent window\n- Elastic: On touch devices display attachment icons on messages list (#6296)\n- Elastic: Make menu button inactive if all subactions are inactive (#6444)\n- Elastic: On mobile/tablet jump to the list on folder selection (#6415)\n- Elastic: Various improvements on mail compose screen (#6413)\n- Elastic: Support new-line char as a separator for pasted recipients (#6460)\n- Elastic: Improved UX of search dialogs (#6416)\n- Elastic: Fix unwanted thread expanding when selecting a collapsed thread in non-mobile mode (#6445)\n- Elastic: Fix too small height of mailvelope mail preview frame (#6600)\n- Elastic: Add \"status bar\" for mobile in mail composer\n- Elastic: Add selection options on contacts list (#6595)\n- Elastic: Fix unintentional layout preference overwrite (#6613)\n- Elastic: Fix bug where Enigma options in mail compose could sometimes be ignored (#6515)\n- Log errors caused by low pcre.backtrack_limit when sending a mail message (#6433)\n- Fix regression where drafts were not deleted after sending the message (#6756)\n- Fix so max_message_size limit is checked also when forwarding messages as attachments (#6580)\n- Fix so performance stats are logged to the main console log also when per_user_logging=true\n- Fix malformed message saved into Sent folder when using big attachments and low memory limit (#6498)\n- Fix incorrect IMAP SASL GSSAPI negotiation (#6308)\n- Fix so unicode in local part of the email address is also supported in recipient inputs (#6490)\n- Fix bug where autocomplete list could be displayed out of screen (#6469)\n- Fix style/navigation on error page depending on authentication state (#6362)\n- Fix so invalid smtp_helo_host is never used, fallback to localhost (#6408)\n- Fix custom logo size in Elastic (#6424)\n- Fix listing the same attachment multiple times on forwarded messages\n- Fix bug where a message/rfc822 part without a filename wasn't listed on the attachments list (#6494)\n- Fix inconsistent offset for various time zones - always display Standard Time offset (#6531)\n- Fix dummy Message-Id when resuming a draft without Message-Id header (#6548)\n- Fix handling of empty entries in vCard import (#6564)\n- Fix bug in parsing some IMAP command responses that include unsolicited replies (#6577)\n- Fix PHP 7.2 compatibility in debug_logger plugin (#6586)\n- Fix so ANY record is not used for email domain validation, use A, MX, CNAME, AAAA instead (#6581)\n- Fix so mime_content_type check in Installer uses files that should always be available (i.e. from program/resources) (#6599)\n- Fix missing CSRF token on a link to download too-big message part (#6621)\n- Fix bug when aborting dragging with ESC key didn't stop the move action (#6623)\n\n## Release 1.4-beta\n\n- Added new skin with mobile support - the Elastic\n- Support Redis cache\n- Email Resent (Bounce) feature (#4985)\n- Improved Mailvelope integration\n  - Added private key listing and generating to identity settings\n  - Enable encrypt & sign option if Mailvelope supports it\n- Allow contacts without an email address (#5079)\n- Support SMTPUTF8 and relax email address validation to support unicode in local part (#5120)\n- Support for IMAP folders that cannot contain both folders and messages (#5057)\n- Update to jQuery-3.3.1\n- Update to jQuery-minicolors 2.2.6\n- Update to TinyMCE 4.7.13\n- Remove sample PHP configuration from .htaccess and .user.ini files (#5850)\n- Extend skin_logo setting to allow per skin logos (#6272)\n- Use Masterminds/HTML5 parser for better HTML5 support (#5761)\n- Add More actions button in Contacts toolbar with Copy/Move actions (#6081)\n- Display an error when clicking disabled link to register protocol handler (#6079)\n- Add option trusted_host_patterns (#6009, #5752)\n- Support additional connect parameters in PostgreSQL database wrapper\n- Use UI dialogs instead of confirm() and alert() where possible\n- Display value of the SMTP message size limit in the error message (#6032)\n- Show message flagged status in message view (#5080)\n- Skip redundant INSERT query on successful logon when using PHP7\n- Replace display_version with display_product_version (#5904)\n- Extend disabled_actions config so it accepts also button names (#5903)\n- Handle remote stylesheets the same as remote images, ask the user to allow them (#5994)\n- Add Message-ID to the sendmail log (#5871)\n- Add option to hide folders in share/other-user namespace or outside of the personal namespace root (#5073)\n- Archive: Fix archiving by sender address on cyrus-imap\n- Archive: Style Archive folder also on folder selector and folder manager lists\n- Archive: Add Thunderbird compatible Month option (#5623)\n- Archive: Create archive folder automatically if it's configured, but does not exist (#6076)\n- Enigma: Add button to send mail unencrypted if no key was found (#5913)\n- Enigma: Add options to set PGP cipher/digest algorithms (#5645)\n- Enigma: Multi-host support\n- Managesieve: Add ability to disable filter sets and other actions (#5496, #5898)\n- Managesieve: Add option managesieve_forward to enable settings dialog for simple forwarding (#6021)\n- Managesieve: Support filter action with custom IMAP flags (#6011)\n- Managesieve: Support 'mime' extension tests - RFC5703 (#5832)\n- Managesieve: Support GSSAPI authentication with krb_authentication plugin (#5779)\n- Managesieve: Support enabling the plugin for specified hosts only (#6292)\n- Password: Support host variables in password_db_dsn option (#5955)\n- Password: Automatic virtualmin domain setting, removed password_virtualmin_format option (#5759)\n- Password: Added password_username_format option (#5766)\n- subscriptions_option: show \\\\Noselect folders greyed out (#5621)\n- zipdownload: Added option to define size limit for multiple messages download (#5696)\n- vcard_attachments: Add possibility to send contact vCard from Contacts toolbar (#6080)\n- Changed defaults for smtp_user (%u), smtp_pass (%p) and smtp_port (587)\n- Composer: Fix certificate validation errors by using packagist only (#5148)\n- Add --get and --extract arguments and CACHEDIR env-variable support to install-jsdeps.sh (#5882)\n- Support _filter and _scope as GET arguments for opening mail UI (#5825)\n- Various improvements for templating engine and skin behaviours\n  - Support conditional include\n  - Support for 'link' objects\n  - Support including files with path relative to templates directory\n  - Use <button> instead of <input> for submit button on logon screen\n- Support skin localization (#5853)\n- Reset onerror on images if placeholder does not exist to prevent from requests storm\n- Unified and simplified code for loading content frame for responses and identities\n- Display contact import and advanced search in popup dialogs\n- Display a dialog for mail import with supported format description and upload size hint\n- Make possible to set (some) config options from a skin\n- Added optional checkbox selection for the list widget\n- Make 'compose' command always enabled\n- Add .log suffix to all log file names, add option log_file_ext to control this (#313)\n- Return \"401 Unauthorized\" status when login fails (#5663)\n- Support both comma and semicolon as recipient separator, drop recipients_separator option (#5092)\n- Plugin API: Added 'show_bytes' hook (#5001)\n- Add option to not indent quoted text on top-posting reply (#5105)\n- Removed global $CONFIG variable\n- Removed debug_level setting\n- Support AUTHENTICATE LOGIN for IMAP connections (#5563)\n- Support LDAP GSSAPI authentication (#5703)\n- Localized timezone selector (#4983)\n- Use 7bit encoding for ISO-2022-* charsets in sent mail (#5640)\n- Handle inline images also inside multipart/mixed messages (#5905)\n- Allow style tags in HTML editor on composed/reply messages (#5751)\n- Use Github API as a fallback to fetch js dependencies to workaround throttling issues (#6248)\n- Show confirm dialog when moving folders using drag and drop (#6119)\n- Fix bug where new_user_dialog email check could have been circumvented by deleting / abandoning session (#5929)\n- Fix skin extending for assets (#5115)\n- Fix handling of forwarded messages inside of a TNEF message (#5632)\n- Fix bug where attachment size wasn't visible when the filename was too long (#6033)\n- Fix checking table columns when there's more schemas/databases in postgres/mysql (#6047)\n- Fix css conflicts in user interface and e-mail content (#5891)\n- Fix duplicated signature when using Back button in Chrome (#5809)\n- Fix touch event issue on messages list in IE/Edge (#5781)\n- Fix so links over images are not removed in plain text signatures converted from HTML (#4473)\n- Fix various issues when downloading files with names containing non-ascii chars, use RFC 2231 (#5772)\n\n## Release 1.3.8\n\n- Fix PHP warnings on dummy QUOTA responses in Courier-IMAP 4.17.1 (#6374)\n- Fix so fallback from BINARY to BODY FETCH is used also on [PARSE] errors in dovecot 2.3 (#6383)\n- Enigma: Fix deleting keys with authentication subkeys (#6381)\n- Fix invalid regular expressions that throw warnings on PHP 7.3 (#6398)\n- Fix so Classic skin splitter does not escape out of window (#6397)\n- Fix XSS issue in handling invalid style tag content [CVE-2018-19206] (#6410)\n- Fix compatibility with MySQL 8 - error on 'system' table use\n- Managesieve: Fix bug where show_real_foldernames setting wasn't respected (#6422)\n- New_user_identity: Fix %fu/%u vars substitution in user specific LDAP params (#6419)\n- Fix support for \"allow-from <uri>\" in \"x_frame_options\" config option (#6449)\n- Fix bug where valid content between HTML comments could have been skipped in some cases (#6464)\n- Fix multiple VCard field search (#6466)\n- Fix session issue on long running requests (#6470)\n\n## Release 1.3.7\n\n- Fix PHP Warning: Use of undefined constant IDNA_DEFAULT on systems without php-intl (#6244)\n- Fix bug where some parts of quota information could have been ignored (#6280)\n- Fix bug where some escape sequences in html styles could bypass security checks\n- Fix bug where some forbidden characters on Cyrus-IMAP were not prevented from use in folder names\n- Fix bug where only attachments with the same name would be ignored on zip download (#6301)\n- Fix bug where unicode contact names could have been broken/emptied or caused DB errors (#6299)\n- Fix bug where after \"mark all folders as read\" action message counters were not reset (#6307)\n- Enigma: [EFAIL] Don't decrypt PGP messages with no MDC protection (#6289)\n- Fix bug where some HTML comments could have been malformed by HTML parser (#6333)\n\n## Release 1.3.6\n\n- Fix parsing date strings (e.g. from a Date: mail header) with comments (#6216)\n- Fix PHP 7.2: count(): Parameter must be an array in enchant-based spellchecker (#6234)\n- Fix possible IMAP command injection and type juggling vulnerabilities (#6229)\n- Enigma: Fix key selection for signing\n- Enigma: Enable keypair generation on Internet Explorer 11\n- Fix check_request() bypass in places using get_uids() [CVE-2018-9846] (#6238)\n- Fix bug where usernames without domain part could be malformed or converted to lower-case on logon (#6224)\n\n## Release 1.3.5\n\n- Managesieve: Fix bug where text: syntax was forced for strings longer than 1024 characters (#6143)\n- Managesieve: Fix missing Save button in Edit Filter Set page of Classic skin (#6154)\n- Fix duplicated labels in Test SMTP Config section (#6166)\n- Fix PHP Warning: exif_read_data(...): Illegal IFD size (#6169)\n- Enigma: Fix key generation in Safari by upgrade to OpenPGP 2.6.2 (#6149)\n- Fix security issue in remote content blocking on HTML image and style tags (#6178)\n- Added 9pt and 11pt to the list of font sizes in HTML editor\n- Fix handling encoding of HTML tags in \"inline\" JSON output (#6207)\n- Fix bug where some unix timestamps were not handled correctly by rcube_utils::anytodatetime() (#6212)\n\n## Release 1.3.4\n\n- Fix bug where contacts search could skip some records (#6130)\n- Fix possible information leak - add more strict sql error check on user creation (#6125)\n- Fix a couple of warnings on PHP 7.2 (#6098)\n- Fix broken long filenames when using imap4d server - workaround server bug (#6048)\n- Fix so temp_dir misconfiguration prints an error to the log (#6045)\n- Fix untagged COPYUID responses handling - again (#5982)\n- Fix PHP warning \"idn_to_utf8(): INTL_IDNA_VARIANT_2003 is deprecated\" with PHP 7.2 (#6075)\n- Fix bug where Archive folder wasn't auto-created on login with create_default_folders=true\n- Fix performance issue when parsing malformed and long Date header (#6087)\n- Fix syntax error in mssql.initial.sql (#6097)\n- Fix bug where contacts export by selection returned no more than 10 entries (#6103)\n- Fix searching contacts by address in LDAP source (#6084)\n- Fix X-Frame-Options:ALLOW-FROM support, remove custom click-jacking protection (#6057)\n\n## Release 1.3.3\n\n- Fix decoding of mailto: links with + character in HTML messages (#6020)\n- Fix false reporting of failed upgrade in installto.sh (#6019)\n- Fix file disclosure vulnerability caused by insufficient input validation [CVE-2017-16651] (#6026)\n- Fix mangled non-ASCII characters in links in HTML messages (#6028)\n\n## Release 1.3.2\n\n- Fix bug where pink image was used instead of a thumbnail when image resize fails (#5933)\n- Fix so files size/count limit is verified (client-side) also on drag-n-drop uploads (#5940)\n- Fix invalid template loading on a message error in preview frame (#5941)\n- Fix bug where HTML messages could have been rendered empty on some systems (#5957)\n- Fix wording of \"Mark previewed messages as read\" to \"Mark messages as read\" (#5952)\n- Enigma: Fix decryption of messages encoded with non-ascii charset (#5962)\n- Fix missing cursor in HTML editor on mail reply (#5969)\n- Fix (again) bug where image data URIs in css style were treated as evil/remote in mail preview (#5580)\n- Fix bug where mail search could return empty result on servers without SORT capability (#5973)\n- Fix bug where assets_path wasn't added to some watermark frames\n- Fix so untagged COPYUID responses are also supported according to RFC6851 (#5982)\n- Fix issue caused by non-default session.cookie_lifetime setting (#5961)\n- Fix Edge encoding bug when pasting text into the HTML editor, update to TinyMCE 4.5.8 (#5885)\n- Fix handling of unknown Content-Disposition type (#6002)\n- Fix truncated folder name on messages list in multi-folder mode, for folders with non-ascii characters (#6004)\n- Fix bug where removing the last subfolder did not hide toggle button on its parent record (#6007)\n- Fix bug where ghost messages could be added to the list after fast delete (#5941)\n\n## Release 1.3.1\n\n- Add Preferences > Mailbox View > Main Options > Layout (#5829)\n- Password: Fix compatibility with PHP 7+ in cpanel_webmail driver (#5820)\n- Managesieve: Fix parsing dot-staffed lines in multiline text (#5838)\n- Managesieve: Fix AM/PM suffix in vacation time selectors\n- Managesieve: Fix bug where 'exists' operator was reset to 'contains' (#5899)\n- Remove non-printable characters from filenames on download/display (#5880)\n- Fix decoding non-ascii attachment names from TNEF attachments (#5646, #5799)\n- Fix uninitialized string offset in rcube_utils::bin2ascii() and make sure rcube_utils::random_bytes() result has always requested length (#5788)\n- Fix bug where HTML messages with @media styles could modify style of page body (#5811)\n- Fix style issue on selected and unfocused message that is part of a thread (#5798)\n- Fix bug where a.button style from managesieve plugin could impact other elements (#5800)\n- Fix position of selected icon for (Mailvelope) Encrypt button\n- Fix fatal error when using DMY- or MDY-based date format in PostgreSQL (#5808)\n- Fix bug where errors were not printed when using bin/update.sh (#5834)\n- Fix PHP 7.2 warnings on count() use (#5845)\n- Fix bug where Chrome could not upload the same file that was selected before (#5854)\n- Fix duplicate messages on the list after deleting messages on the next to the last page (#5862)\n- Fix bug where messages count was not updated after delete when imap_cache is set (#5872)\n- Fix potential XSS vulnerability with malformed HTML message markup\n- Fix sending message with \"Too many public recipients\" dialog buttons (#5924)\n- Bring back double-click behavior on the message list which was removed in 1.3.0 (#5823)\n- Enigma: Fix decrypting an encrypted+signed message when signature verification fails (#5914)\n\n## Release 1.3.0\n\n- Update to TinyMCE 4.5.7\n- Fix bug where invalid recipients could be silently discarded (#5739)\n- Fix conflict with _gid cookie of Google Analytics (#5748)\n- Print error from CLI scripts when system/exec function is disabled (#5744)\n- Fix bug where comment notation within style tag would cause the whole style to be ignored (#5747)\n- Fix bug where it wasn't possible to scroll folders list in Edge (#5750)\n- Fix folders list sorting on Windows - if php-intl is available (#5732)\n- Fix addressbook searching by gender (#5757)\n- Fix prevention from using % and * characters in folder name (#5762)\n- Fix POST parameter reflection in default_charset selector (#5768)\n- Enigma: Fix compatibility with assets_dir\n- Managesieve: Skip redundant LISTSCRIPTS command\n- Fix SQL syntax error on MariaDB 10.2 (#5774)\n- Fix bug where zipdownload ignored files with the same name (#5777)\n- Fix bug where it wasn't possible to set timezone to auto-detected value (#5782)\n\n## Release 1.3-rc\n\n- \"Flattened\" the larry theme: fresher look by removing shadows and gradients\n- Support logging to php://stdout (#5721)\n- Add support for DelSp=Yes in format=flowed messages (#5702)\n- Update to jQuery 3.2.1\n- Update to TinyMCE 4.5.6\n- Plugin API: Call message_part_structure hook for sub-parts of multipart/alternative message (#5678)\n- Enigma: Always use detached signatures (#5624)\n- Enigma: Fix handling of messages with nested PGP encrypted parts (#5634)\n- Minimize unwanted message loading in preview frame on drag (#5616)\n- Fix failing database schema check in all engines except mysql (#5730)\n- Fix autocomplete popup closing with click outside the input, don't handle Tab key as Enter (#5606)\n- Fix jsdeps.json synchronization on update, warn about missing requirements of install-jsdeps.sh (#5598)\n- Fix missing thread expand icon on search result in widescreen mode (#5613)\n- Fix bug where image data URIs in css style were treated as evil/remote in mail preview (#5580)\n- Fix bug where external content in src attribute of input/video tags was not secured (#5583)\n- Fix PHP error on update of a contact with multiple email addresses when using PHP 7.1 (#5587)\n- Fix bug where mail content frame couldn't be reset in some corner cases (#5608)\n- Fix bug where some classic skin images were not displayed in IE/Edge (#5614)\n- Fix bug where signature couldn't be added above the quote in Firefox 51 (#5628)\n- Fix regression where groups with email address were resolved to its members' addresses\n- Fix update of group name in the contacts list header on group rename (#5648)\n- Add rewrite rule to disable access to /vendor/bin folder in .htaccess (#5630)\n- Fix bug where it was too easy accidentally move a folder when using the subscription checkbox (#5655)\n- Managesieve: Fix parser issue with empty lines between comments (#5657)\n- Managesieve: Fix possible defect in handling \\r\\n in scripts (#5685)\n- Fix/rephrase \"unsaved changes\" warning when cancelling a draft (#5610)\n- Fix XSS issue in handling of a style tag inside of an svg element [CVE-2017-6820]\n- Fix bug where settings/upload.inc could not be used by plugins (#5694)\n- Fix regression in LDAP fuzzy search where it always used prefix search instead (#5713)\n- Fix bug where namespace prefix could not be truncated on folders list if show_real_foldernames=true (#5695)\n- Fix undesired effects when postgres database uses different timezone than PHP host (#5708)\n- Installer: Fix DB schema initialization on MS SQL Server\n- Fix bug where base_dn setting was ignored inside group_filters (#5720)\n- Password: Fix security issue in virtualmin and sasl drivers [CVE-2017-8114]\n\n## Release 1.3-beta\n\n- Nicely handle contact deletion on contact edit (#5522)\n- vcard_attachments: Add possibility to attach contact vCard to composed message (#4997)\n- Preserve message internal/received date on import in mbox format (#5559)\n- Zipdownload: Fix date format in mbox \"From line\"\n- Possibility to display QR code for contacts data (#5030)\n- Added identicon plugin\n- Widescreen layout aka three column view (#5093)\n- Unify automatic marking as \\Seen in preview pane, full-page and extwin views (#5071)\n- Disable double-click on the list when preview pane is on (#5199)\n- Support hostname and hostname:port in force_https option (#5511)\n- Support ALLOW-FROM in x_frame_options (#5122)\n- Allow to omit a subject when sending an email (#5068)\n- Warn about too many disclosed recipients in composed email [max_disclosed_recipients] (#5132)\n- identity_select: Support Received header (#5085)\n- Plugin API: Added get_compose_responses hook (#5457)\n- Display error when trying to upload more files than specified in max_file_uploads (#5483)\n- Add missing sql upgrade file for 'ip' column resize in session table (#5465)\n- Do not show inline images of unsupported mimetype (#5463)\n- Password: Added replacement variables support in password_pop_host (#5539)\n- Password: Don't store passwords in temp files when using dovecotpw (#5531)\n- Password: Added LDAP PPolicy driver (#5364)\n- Password: Added cpanel_webmail driver (#5549)\n- Password: Added possibility to nicely redirect from other plugins on password expiration (#5468)\n- Implement separate action to mark all messages in a folder as \\Seen (#5006)\n- Implement marking as \\Seen in all folders or in a folder and its subfolders (#5076)\n- Archive: Don't reload messages list when it's not needed (#5225)\n- Archive: Add option to automatically mark archived messages as \\Seen (#5142)\n- Improve randomness of password salts and random hashes (#5266)\n- Password/cPanel: Add support for hash authentication and reseller accounts (#5252)\n- Support host-specific imap_conn_options/smtp_conn_options/managesieve_conn_options (#5136)\n- Center and scale images in attachment preview frame (#5421)\n- Added max_message_size option enforced when attaching files to a composed message (#4993)\n- Added Search button in quick search menus (#5312)\n- Implement \"one click\" attachment/messages/photo upload (#5024)\n- Squirrelmail_usercopy: Add option to define character set of data files\n- Removed useless 'created' column from 'session' table (#5389)\n- Dropped legacy browsers support (#5167)\n    - Removed legacy_browser plugin\n    - Removed hacks for IE < 10\n    - Update to jQuery 3.1.1 and jQuery-UI 1.12.0\n    - compile .min.js files with ECMASCRIPT5 option\n- Require PHP >= 5.4\n- Add possibility to preview and download attachments in mail compose (#5053)\n- Add possibility to rename attachments in mail compose (#4996)\n- Remove backward compatibility \"layer\" of bc.php (#4902)\n- Support WEBP images in mail messages (#5362)\n- Support MathML in HTML message preview (#5182)\n- Rename Addressbook to Contacts (#5233)\n- Remove PHP mail() support, smtp_server is required now (#5340)\n- Display full message subject in onmouseover on truncated subject in mail view (#5346)\n- Enigma: Support GnuPG 2.1 (#5313)\n- Enigma: Support key generation for multiple identities (#5383)\n- Enigma: Import keys from key-server(s) (#5286)\n- Enigma: Search missing public keys on a key-server in mail compose (#5286)\n- Enigma: Delete user keys when using deluser.sh script\n- Enigma: Fix redundant list-secret-keys/list-public-keys calls on signing/encryption\n- Enigma: Implement PGP encryption and signing in one go (#5302)\n- Enigma: Display signature verification status for encrypted+signed messages (#5302)\n- Display different attachment icon on encrypted messages\n- Display different confirmation text when moving messages to Trash (#5220)\n- Indicate that a collapsed thread has flagged children (#5013)\n- Implemented message/rfc822 attachment preview\n- Update to jsTimezoneDetect 1.0.6\n- Managesieve: Add (optional) RAW script editor (#5414)\n- Managesieve: Add option to automatically set vacation :from address (#5428)\n- Managesieve: Support 'string' test from variables extension [RFC 5229] (#5248)\n- Managesieve: Support 'duplicate' extension [RFC 7352]\n- Managesieve: Unhide advanced rule controls if there are inputs with errors\n- Managesieve: Display warning message when filter form contains errors\n- Control search engine crawlers via X-Robots-Tag header instead of <meta> and robots.txt (#5098)\n- Fixed redundancy in sql caching system and compatibility with Galera Cluster (#5439)\n    - Removed redundant 'created' column from cache and cache_shared tables\n    - Removed use of redundant data records\n    - Added missing primary keys (dictionary, cache, cache_shared tables)\n- Fix so templating system does not mess with external (e.g. email) content (#5499)\n- Fix redundant keep-alive/refresh after session error on compose page (#5500)\n- Managesieve: Fix handling of scripts with nested rules (#5540)\n- Fix variable substitution in ldap host for some use-cases, e.g. new_user_identity (#5544)\n- Enigma: Fix PHP fatal error when decrypting a message with invalid signature (#5555)\n- Fix adding images to new identity signatures\n- Fix rsync error handling in installto.sh script (#5562)\n- Fix some advanced search issues with multiple addressbooks (#5572)\n- Fix so group/addressbook selection is retained on page refresh\n\n## Release 1.2.3\n\n- Searching in both contacts and groups when LDAP addressbook with group_filters option is used\n- Fix vulnerability in handling of mail()'s 5th argument\n- Fix To: header encoding in mail sent with mail() method (#5475)\n- Fix flickering of header topline in min-mode (#5426)\n- Fix bug where folders list would scroll to top when clicking on subscription checkbox (#5447)\n- Fix decoding of GB2312/GBK text when iconv is not installed (#5448)\n- Fix regression where creation of default folders wasn't functioning without prefix (#5460)\n- Enigma: Fix bug where last records on keys list were hidden (#5461)\n- Enigma: Fix key search with keyword containing non-ascii characters (#5459)\n- Fix bug where deleting folders with subfolders could fail in some cases (#5466)\n- Fix bug where IMAP password could be exposed via error message (#5472)\n- Fix bug where it wasn't possible to store more that 2MB objects in memcache/apc,\n  Added memcache_max_allowed_packet and apc_max_allowed_packet settings (#5452)\n- Fix \"Illegal string offset\" warning in rcube::log_bug() on PHP 7.1 (#5508)\n- Fix storing \"empty\" values in rcube_cache/rcube_cache_shared (#5519)\n- Fix missing content check when image resize fails on attachment thumbnail generation (#5485)\n- Fix displaying attached images with wrong Content-Type specified (#5527)\n\n## Release 1.2.2\n\n- Enigma: Add possibility to configure gpg-agent binary location (enigma_pgp_agent)\n- Enigma: Fix signature verification with some IMAP servers, e.g. Gmail, DBMail (#5371)\n- Enigma: Make recipient key searches case-insensitive (#5434)\n- Fix regression in resizing JPEG images with Imagick (#5376)\n- Managesieve: Fix parsing of vacation date-time with non-default date_format (#5372)\n- Use SymLinksIfOwnerMatch in .htaccess instead of FollowSymLinks disabled on some hosts for security reasons (#5370)\n- Wash position:fixed style in HTML mail for better security (#5264)\n- Fix bug where memcache_debug didn't work for session operations\n- Fix bug where Message-ID domain part was tied to username instead of current identity (#5385)\n- Fix bug where blocked.gif couldn't be attached to reply/forward with insecure content\n- Fix E_DEPRECATED warning when using Auth_SASL::factory() (#5401)\n- Fix bug where names of downloaded files could be malformed when derived from the message subject (#5404)\n- Fix so \"All\" messages selection is reset on search reset (#5413)\n- Fix bug where folder creation could fail if personal namespace contained more than one entry (#5403)\n- Fix error causing empty INBOX listing in Firefox when using an URL with user:password specified (#5400)\n- Fix PHP warning when handling shared namespace with empty prefix (#5420)\n- Fix so folders list is scrolled to the selected folder on page load (#5424)\n- Fix so when moving to Trash we make sure the folder exists (#5192)\n- Fix displaying size of attachments with zero size\n- Fix so \"Action disabled\" error uses more appropriate 404 code (#5440)\n\n## Release 1.2.1\n\n- Update TinyMCE to version 4.3.13 (#5309)\n- Fix bug where errors could have been not logged when per_user_logging=true\n- Fix bug where message list columns could be in wrong order after column drag-n-drop and list sorting\n- Fix so minified publickey.js (with cache-buster) is used when available (#5254)\n- Fix (replace) application/x-tar file extension test as it might not exist in nginx config (#5253)\n- Fix PHP warning when password_hosts is set, but is not an array (#5260)\n- Fix redundant keep-alive requests when session_lifetime is greater than ~20000 (#5273)\n- Fix so subfolders of INBOX can be set as Archive (#5274)\n- Fix bug where multi-folder search could choose a wrong folder in \"this and subfolders\" scope (#5282)\n- Fix bug where multi-folder search didn't work for unsubscribed INBOX (#5259)\n- Fix bug where \"no body\" alert could be displayed when sending mailvelope email\n- Enigma: Fix keys import from inside of an encrypted message (#5285)\n- Enigma: Fix malformed signed messages with force_7bit=true (#5292)\n- Enigma: Add possibility to configure gpg binary location (enigma_pgp_binary)\n- Enigma: Add possibility to export private keys (#5321)\n- Fix searching by email address in contacts with multiple addresses (#5291)\n- Fix handling of --delete argument in moduserprefs.sh script (#5296)\n- Workaround PHP issue by calling closelog() on script shutdown when using log_driver=syslog (#5289)\n- Fix so upgrade script makes sure program/lib directory does not contain old libraries (#5287)\n- Fix subscription checkbox state on error in folder subscribe/unsubscribe action (#5243)\n- Fix bug where microsecond format in logged date didn't work in some cases\n- Fix conflict in new_user_dialog and password_force_new_user settings (#5275)\n- Don't create multipart/alternative messages with empty text/plain part (#5283)\n- Use contact_search_name format in popup on results in compose contacts search\n- Fix handling of 'mailto' and 'error' arguments in message_before_send hook (#5347)\n- Fix missing localization of HTML editor when assets_dir != INSTALL_PATH\n- Fix handling of blockquote tags with mixed case on html2text conversion (#5363)\n- Fix javascript errors in IE on page with iframe that points to another domain\n\n## Release 1.2.0\n\n- Enigma: Added enigma_debug option\n- Fix message list multi-select/deselect issue (#5219)\n- Fix bug where getting HTML editor content could steal focus from other form controls (#5223)\n- Fix bug where contact search menu fields where always unchecked in Larry skin\n- Fix autoloading of 'html' class\n- Fix bug where Encrypt button appears when switching editor to HTML (#5235)\n- Fix XSS issue in href attribute on area tag (#5240)\n\n## Release 1.2-rc\n\n- Managesieve: Refactored script parser to be 100x faster\n- Enigma: added option to force users to use signing/encryption\n- Enigma: Added option to attach public keys to sent mail (#5152)\n- Enigma: Handle messages with text before an encrypted block (#5149)\n- Enigma: Handle encrypted/signed content inside message/rfc822 attachments\n- Enigma: Fix missing html/plain switch on multipart/signed messages (#4963)\n- Enigma: Disable format=flowed for signed plain text messages (#4960)\n- Enigma: Fix handling of encrypted + signed messages (#4950)\n- Enigma: Fix invalid boundary use in signed messages structure\n- Enable use of TLSv1.1 and TLSv1.2 for IMAP (#4955)\n- Save copy of original .htaccess file when using installto.sh script (#4947)\n- Fix regression where some message attachments could be missing on edit/forward (#4939)\n- Fix regression in displaying contents of message/rfc822 parts (#4937)\n- Fix handling of message/rfc822 attachments on replies and forwards (#4938)\n- Fix PDF support detection in Firefox > 19 (#4941)\n- Fix path traversal vulnerability in setting a skin [CVE-2015-8770] (#4945)\n- Fix so drag-n-drop of text (e.g. recipient addresses) on compose page actually works (#4944)\n- Fix .htaccess rewrite rules to not block .well-known URIs (#4943)\n- Fix mail view scaling on iOS (#4915)\n- Fix PHP7 warning \"session_start(): Session callback expects true/false return value\" (#4948)\n- Fix XSS issue in SVG images handling [CVE-2015-8864, CVE-2016-4068] (#4949)\n- Fix missing language name in \"Add to Dictionary\" request in HTML mode (#4951)\n- Fix (again) security issue in DBMail driver of password plugin [CVE-2015-2181] (#4958)\n- Fix bug where Archive/Junk buttons were not active after page jump with select=all mode (#4961)\n- Fix bug in long recipients list parsing for cases where recipient name contained @-char (#4964)\n- Plugin API: Added addressbook_export hook\n- Fix additional_message_headers plugin compatibility with Mail_Mime >= 1.9 (#4966)\n- Hide DSN option in Preferences when smtp_server is not used (#4967)\n- Fix handling of body parameter in mail compose request\n- Protect download urls against CSRF using unique request tokens [CVE-2016-4069] (#4957)\n- newmail_notifier: Refactor desktop notifications\n- Fix so contactlist_fields option can be set via config file\n- Fix so SPECIAL-USE assignments are forced only until user sets special folders (#4782)\n- Fix performance in reverting order of THREAD result\n- Fix converting mail addresses with @www. into mailto links (#5197)\n\n## Release 1.2-beta\n\n- Update TinyMCE to version 4.2\n- Added support for Redis session handler\n- Removed some deprecated methods: https://github.com/roundcube/roundcubemail/commit/454b0b1c\n- Remove backward compatibility \"layer\" of bc.php (#4902)\n- Add possibility to define date format in write operations for ldap attributes (#3956)\n- Display attachment size in compose (#1329)\n- Added possibility to drag-n-drop attachments from mail preview to compose window\n- Implemented mail messages searching with predefined date interval\n- PGP encryption support via Mailvelope integration\n- PGP encryption support via Enigma plugin\n- PHP7 compatibility fixes (#4836)\n- Security: Added brute-force attack prevention via login rate limit (#4922)\n- Security: Added options to validate username/password on logon (#4884)\n- Security: Improve randomness of security tokens (#4899)\n- Security: Use random security tokens instead of hashes based on encryption key (#4829)\n- Security: Improved encrypt/decrypt methods with option to choose the cipher_method (#4492)\n- Make optional adding of standard signature separator - sig_separator (#3276)\n- Optimize folder_size() on Cyrus IMAP by using special folder annotation (#4894)\n- Make optional hiding of folders with name starting with a dot - imap_skip_hidden_folders (#4870)\n- Add option to enable HTML editor always, except when replying to plain text messages (#4352)\n- Emoticons: Added option to switch on/off emoticons in compose editor (#2076)\n- Emoticons: Added option to switch on/off emoticons in plain text messages\n- Emoticons: All emoticons-related functionality is handled by the plugin now\n- Installer: Add button to save generated config file in system temp directory (#3553)\n- Remove common subject prefixes Re:, Re[x]:, Re-x: on reply (#4882)\n- Added GSSAPI/Kerberos authentication plugin - krb_authentication\n- Password: Allow temporarily disabling the plugin functionality with a notice\n- Require Mbstring and OpenSSL extensions (#5166)\n- Add --config and --type options to moduserprefs.sh script (#4651)\n- Implemented memcache_debug and apc_debug options\n- Installer: Remove system() function use (#4695)\n- Password plugin: Added 'kpasswd' driver by Peter Allgeyer\n- Add initdb.sh to create database from initial.sql script with prefix support (#4722)\n- Plugin API: Added disabled_plugins an disabled_buttons options in html_editor hook\n- Plugin API: Added html2text hook\n- Plugin API: Added message_part_body hook\n- Plugin API: Added message_ready hook\n- Plugin API: Add special onload() method to execute plugin actions before startup (session and GUI initialization)\n- Implemented UI element to jump to specified page of the messages list (#1677)\n- Fix searching of contacts to allow remote images for known senders (#4886)\n- Fix bug where clicking date column with 'arrival' sorting would switch to sorting by 'date' (#4690)\n- Fix bug where message content could overlap attachments list in Larry skin (#4876)\n- Fix so microseconds macro (u) in log_date_format works (#4855)\n- Fix so unrecognized TNEF attachments are displayed on the list of attachments (#5138)\n- Fix so database_attachments::cleanup() does not remove attachments from other sessions (#4907)\n- Fix responses list update issue after response name change (#4917)\n- Fix bug where message preview was unintentionally reset on check-recent action (#4921)\n- Fix bug where HTML messages with invalid/excessive css styles couldn't be displayed (#4905)\n- Fix redundant blank lines when using HTML and top posting (#4927)\n- Fix redundant blank lines on start of text after html to text conversion (#4928)\n- Fix HTML sanitizer to skip `<!-- node type X -->` in output (#4932)\n- Fix invalid LDAP query in ACL user autocompletion (#4934)\n\n## Release 1.1.3\n\n- Fix closing of nested menus (#4854)\n- Fix so E_DEPRECATED errors from PEAR libs are ignored by error_reporting change (#4770)\n- Fix compatibility with PHP 5.3 in rcube_ldap class (#4842)\n- Get rid of Mail_mimeDecode package dependency (#4836)\n- Fix \"Importing...\" message does not hide on error (#4840)\n- Fix Compose action in addressbook for results from multiple addressbooks (#4834)\n- Fix bug where some messages in multi-folder search couldn't be viewed/printed/downloaded (#4843)\n- Fix unintentional messages list page change on page switch in compose addressbook (#4844)\n- Fix race-condition in saving user preferences and loading plugin config (#4845)\n- Fix so plain text signature field uses monospace font (#4848)\n- Fix so links with href == content aren't added to links list on html to text conversion (#4847)\n- Fix handling of non-break spaces in html to text conversion (#4849)\n- Fix self-reply detection issues (#4852)\n- Fix multi-folder search result sorting by arrival date (#4858)\n- Fix so *-request@ addresses in Sender: header are also ignored on reply-all (#4860)\n- Update to TinyMCE 4.1.10 (#5164)\n- Fix draft removal after a message is sent and storing sent message is disabled (#4869)\n- Fix so imap folder attribute comparisons are case-insensitive (#4868)\n- Fix bug where new messages weren't added to the list in search mode\n- Fix wrong positioning of message list header on page scroll in Webkit browsers (#4646)\n- Fix some javascript errors in rare situations (#4853)\n- Fix error when using back button after sending an email (#4628)\n- Fix removing signature when switching to identity with an empty sig in HTML mode (#4872)\n- Disable links list generation on html-to-text conversion of identities or composed message (#4850)\n- Fix \"washing\" of style elements wrapped into many lines\n- Fix so input field (e.g. search box) does not loose focus on list load (#4862)\n- Fix so css of one html part does not apply to other text parts on message display (#4887)\n- Fix XSS issue in drag-n-drop file uploads [CVE-2015-8105] (#4900)\n- Fix handling of plus character in mailto: links (#4891)\n- Fix so adding CC/BCC recipients from the sidebar unhides compose form fields in Classic skin (#4874)\n- Fix so gc.sh script removes also expired sessions from sql database (#4893)\n- Fix support for Mozilla-based browsers, e.g. Pale Moon (#4895)\n- Fix various issues with Turkish (and similar) locales (#4896)\n- Fix so In-Reply-To header is set also for MDN receipts (#4897)\n- Fix missing HTTP_X_FORWARDED_FOR address in generated Received header\n- Fix issue where Content-Length of some attachments could be set to wrong value causing browser errors (#4877)\n\n## Release 1.1.2\n\n- Add new plugin hook 'identity_create_after' providing the ID of the inserted identity (#4807)\n- Add option to place signature at bottom of the quoted text even in top-posting mode [sig_below]\n- Fix handling of %-encoded entities in mailto: URLs (#4799)\n- Fix zipped messages downloads after selecting all messages in a folder (#4797)\n- Fix vpopmaild driver of password plugin\n- Fix PHP warning: Non-static method PEAR::setErrorHandling() should not be called statically (#4798)\n- Fix tables listing routine on mysql and postgres so it skips system or other database tables and views (#4796)\n- Fix message list header in classic skin on window resize in Internet Explorer (#4732)\n- Fix so text/calendar parts are listed as attachments even if not marked as such (#4795)\n- Fix lack of signature separator for plain text signatures in html mode (#4802)\n- Fix font artifact in Google Chrome on Windows (#4803)\n- Fix bug where forced extwin page reload could exit from the extwin mode (#4801)\n- Fix bug where some unrelated attachments in multipart/related message were not listed (#4805)\n- Fix mouseup event handling when dragging a list record (#4808)\n- Fix bug where preview_pane setting wasn't always saved into user preferences (#4809)\n- Fix bug where messages count was not updated after message move/delete with skip_deleted=false (#4814)\n- Fix security issue in contact photo handling (#4817)\n- Fix possible memcache/apc cache data consistency issues (#4820)\n- Fix bug where imap_conn_options were ignored in IMAP connection test (#4822)\n- Fix bug where some files could have \"executable\" extension when stored in temp folder (#4815)\n- Fix attached file path unsetting in database_attachments plugin (#4823)\n- Fix issues when using moduserprefs.sh without --user argument (#4825)\n- Fix potential info disclosure issue by protecting directory access (#4816)\n- Fix blank image in html_signature when saving identity changes (#4833)\n- Installer: Use openssl_random_pseudo_bytes() (if available) to generate des_key (#4827)\n- Fix XSS vulnerability in _mbox argument handling (#4837)\n\n## Release 1.1.1\n\n- ACL: Allow other plugins to adjust the list of permissions and groups to edit\n- Add possibility to print contact information (of a single contact)\n- Add possibility to configure max_allowed_packet value for all database engines (#4772)\n- Improved handling of storage errors after message is sent\n- Update to TinyMCE 4.1.9\n- Unified request* event arguments handling, added support for _unlock and _action parameters\n- Security: Generate random hash for the per-user local storage prefix (#4768)\n- Fix refreshing of drafts list when sending a message which was saved in meantime (#4745)\n- Fix saving/sending emoticon images when assets_dir is set\n- Fix PHP fatal error when visiting Vacation interface and there's no sieve script yet (#4778)\n- Fix setting max packet size for DB caches and check packet size also in shared cache\n- Fix needless security warning on BMP attachments display (#4771)\n- Fix handling of some improper constructs in format=flowed text as per the RFC3676[4.5] (#4773)\n- Fix performance of rcube_db_mysql::get_variable()\n- Fix missing or not up-to-date CATEGORIES entry in vCard export (#4766)\n- Fix fatal errors on systems without mbstring extension or mb_regex_encoding() function (#4769)\n- Fix cursor position on reply below the quote in HTML mode (#4759)\n- Fix so \"over quota\" errors are displayed also in message compose page\n- Fix duplicate entries suppression in autocomplete result (#4776)\n- Fix \"Non-static method PEAR::isError() should not be called statically\" errors (#4770)\n- Fix parsing invalid HTML messages with BOM after `<!DOCTYPE>` (#4777)\n- Fix duplicate entry on timezones list in rcube_config::timezone_name_from_abbr() (#4779)\n- Fix so localized folder name is displayed in multi-folder search result (#4750)\n- Fix javascript error after creating a folder which is a subfolder of another one (#4781)\n- Fix bug where subject of sent/saved message was removed if mbstring wasn't installed (#4780)\n- Fix missing vcard_attachment icon on messages list (#4783)\n- Fix storing signatures with big images in MySQL database (#4785)\n- Fix Opera browser detection in javascript (#4786)\n- Fix so search filter, scope and fields are reset on folder change\n- Fix rows count when messages search fails (#4760)\n- Fix bug where spellchecking in HTML editor do not work after switching editor type more than once (#4789)\n- Fix bug where TinyMCE area height was too small on slow network connection (#4788)\n- Fix backtick character handling in sql queries (#4790)\n- Fix redirect URL for attachments loaded in an iframe when behind a proxy (#4724)\n- Fix menu container references to point to the actual `<ul>` element (#4791)\n- Fix javascripts errors in IE8 - lack of Event.which, focusing a hidden element (#4793)\n\n## Release 1.1.0\n\n- Make SMTP error log more verbose - include server response and error code\n- Fix download options menu (added by zipdownload plugin) in classic skin (#4740)\n- Fix blocked.gif image usage with assets_dir set\n- Fix bug where max_group_members was ignored when adding a new contact (#4733)\n- Hide MDN and DSN options in compose if disabled by admin (#4735)\n- Fix checks based on window.ActiveXObject in IE > 10\n- Fix XSS issue in style attribute handling [CVE-2015-1433] (#4739)\n- Fix bug where Drafts list wasn't updated on draft-save action in new window (#4737)\n- Fix so \"set as default\" option is hidden if identities_level > 1 (#4738)\n- Fix bug where search was reset after returning from compose visited for reply\n- Fix javascript error in \"IE 8.0/Tablet PC\" browser (#4730)\n- Fix bug where Reply-To address was ignored on reply to messages sent by self (#4742)\n- Fix bug where empty fieldmap config entries caused empty results of ldap search (#4741)\n- Fix bug where drafts list wasn't refreshed after draft message was sent from another window (#4745)\n- Fix keyboard navigation and css in datepicker widget across many Firefox versions\n- Fix false warning when opening attached text/plain files (#4748)\n- Fix bug where signature could have been inserted twice after plain-to-html switch (#4746)\n- Fix security issue in DBMail driver of password plugin (#4757)\n- Enable FollowSymLinks option in .htaccess file which is required by rewrite rules (#4754)\n- Fix so JSON.parse() errors on localStorage items are ignored (#4752)\n\n## Release 1.1-rc\n\n- Update jQuery to version 2.1.3\n- Allow to override any config option through env variables\n- Improve system security by using optional special URL with security token - use_secure_urls\n- Allow to define separate server/path for image/js/css files - assets_url/assets_dir\n- Sync vendor folder if exists in source package (#4700)\n- Avoid useless reloading list when resetting search with active filter (#4654)\n- Fix invalid folder selection if clicked while busy (#4709)\n- Fix import of multiple contact email addresses from Outlook-csv format (#4714)\n- Fix drag-n-drop to folders expanded while dragging (#4708)\n- Fix import of multiple contact groups from Google-csv format (#4710)\n- Fix import of contacts with multiple email addresses from Google-csv format (#4719)\n- Fix bugs where CSRF attacks were still possible on some requests [CVE-2014-9587]\n- Fix some rcube_utils::anytodatetime() corner cases with timezone mismatches (#4712)\n- Improve move-to and contact-export button in classic skin (#4713)\n- Fix wrong icon for download button in classic skin\n- Fix bug where sent message was saved in Sent folder even if disabled by user (#4729)\n\n## Release 1.1-beta\n\n- Fix skin path handling in plugin context (#4111)\n- Prevent memory exhaustion on image resizing with GD on Windows (#4580)\n- Add plugin hook for database table name lookups as requested in #4538\n- Added Oracle database support\n- Support contacts import in GMail CSV format\n- Added namespace filter in Folder Manager\n- Added folder searching in Folder Manager\n- Fix restoring draft messages from localStorage if editor mode differs (#4631)\n- Added config option/user preference to disable saving messages in localStorage (#4606)\n- Added config option 'imap_log_session' to enable Roundcube <-> IMAP session ID logging\n- Added config option 'log_session_id' to control the length of the session identifier in logs\n- Implemented 'storage_connected' API hook after successful IMAP login (#4638)\n- Integrate Net_LDAP3 and rcube_ldap_generic classes\n- Add option (disabled_actions) to disable UI elements/actions (#4478)\n- Support password encryption using openssl extension (#4614)\n- Create/rename groups in UI dialogs (#4592)\n- Added 'contact_search_name' option to define autocompletion entry format\n- Display quota information for current folder not INBOX only (#3442)\n- Support images in HTML signatures (#3917)\n- Display full quota information in popup (#2103, #2746)\n- Mail compose: Selecting contact inserts recipient to previously focused input - to/cc/bcc accordingly (#4487)\n- Close \"no subject\" prompt with Enter key (#4463)\n- Password: Add option to force new users to change their password (#2963)\n- Improve support for screen readers and assistive technology using WCAG 2.0 and WAI ARIA standards\n- Enable basic keyboard navigation throughout the UI (#3333)\n- Select/scroll to previously selected message when returning from message page (#4146)\n- Display a warning if popup window was blocked (#4472)\n- Remove (was: ...) from message subject on reply (#4359)\n- Update to TinyMCE 4.1 (#4168)\n- Enable autolink plugin in TinyMCE (#4029)\n- Support image operations with Imagick extension (#4498)\n- Support upload progress with session.upload_progress and PECL uploadprogress module (#3934)\n- Make identity name field optional (#4435)\n- Utility script to remove user records from the local database\n- Plugin API: Added message_saved hook (#4503)\n- Plugin API: Added imap_search_before hook\n- Support messages import from zip archives\n- Zipdownload: Added mbox format support (#2354)\n- Drop support for IE6, move IE7/IE8 support to legacy_browser plugin\n- Update to jQuery-2.1.1\n- Search across multiple folders (#1676)\n- Improve UI integration of ACL settings\n- Drop support for PHP < 5.3.7\n- Set In-Reply-To and References for forwarded messages (#4465)\n- Removed redundant default_folders config option (#4500)\n- Implemented IMAP SPECIAL-USE extension support [RFC6154] (#3326)\n- Optimize some framed pages content for better performance (#4517)\n- Improve text messages display and conversion to HTML (#4091)\n- Don't remove links when html signature is converted to text (#4473)\n- Fix page title when using search filter (#4636)\n- Fix mbox files import\n- Fix some character sets detection (#4694)\n- Fix so attachment charset is set in headers of forward/draft message (#4676)\n- Fix bug where wrong charset could be used for text attachment preview page (#4674)\n\n## Release 1.0.5\n\n- Fix wrong icon for download button in classic skin\n- Fix checks based on window.ActiveXObject in IE > 10\n- Fix XSS issue in style attribute handling (#4739)\n- Fix bug where Drafts list wasn't updated on draft-save action in new window (#4737)\n- Fix so \"set as default\" option is hidden if identities_level > 1 (#4738)\n- Fix javascript error in \"IE 8.0/Tablet PC\" browser (#4730)\n- Fix bug where empty fieldmap config entries caused empty results of ldap search (#4741)\n- Fix bug where sent message was saved in Sent folder even if disabled by user (#4729)\n\n## Release 1.0.4\n\n- Disable TinyMCE contextmenu plugin as there are more cons than pros in using it (#4684)\n- Fix bug where show_real_foldernames setting wasn't honored on compose page (#4705)\n- Fix issue where Archive folder wasn't protected in Folder Manager (#4706)\n- Fix compatibility with PHP 5.2. in rcube_imap_generic (#4682)\n- Fix setting flags on servers with no PERMANENTFLAGS response (#4667)\n- Fix regression in SHA password generation in ldap driver of password plugin (#4670)\n- Fix displaying of HTML messages with absolutely positioned elements in Larry skin (#4672)\n- Fix font style display issue in HTML messages with styled <span> elements (#4671)\n- Fix download of attachments that are part of TNEF message (#4668)\n- Fix handling of uuencoded messages if messages_cache is enabled (#4675)\n- Fix handling of base64-encoded attachments with extra spaces (#4678)\n- Fix handling of UNKNOWN-CTE response, try do decode content client-side (#4650)\n- Fix bug where creating subfolders in shared folders wasn't possible without ACL extension (#4680)\n- Fix reply scrolling issue with text mode and start message below the quote (#4681)\n- Fix possible issues in skin/skin_path config handling (#4689)\n- Fix lack of delimiter for recipient addresses in smtp_log (#4703)\n- Fix generation of Blowfish-based password hashes (#4721)\n- Fix bugs where CSRF attacks were still possible on some requests [CVE-2014-9587]\n\n## Release 1.0.3\n\n- Initialize HTML editor before restoring a message from localStorage (#4631)\n- Add 'sig_max_lines' config option to default config file (#5162)\n- Add config option to specify IMAP connection socket parameters - imap_conn_options (#4589)\n- Add option to set default message list mode - default_list_mode (#3157)\n- Enable contextmenu plugin for TinyMCE editor (#3062)\n- Fix insert-signature command in external compose window if opened from inline compose screen (#4663)\n- Fix some mime-type to extension mapping checks in Installer (#4610)\n- Fix errors when using localStorage in Safari's private browsing mode (#4619)\n- Fix bug where $Forwarded flag was being set even if server didn't support it (#4621)\n- Fix various iCloud vCard issues, added fallback for external photos (#4617)\n- Fix invalid Content-Type header when send_format_flowed=false (#4616)\n- Fix errors when adding/updating contacts in active search (#4630)\n- Fix incorrect thumbnail rotation with GD and exif orientation data (#4641)\n- Fix contacts list update after adding/deleting/moving a contact (#4640, #4644)\n- Fix handling of email addresses with quoted domain part (#4647)\n- Fix comm_path update on task switch (#4648)\n- Fix error in MSSQL update script 2013061000.sql (#4658)\n- Fix validation of email addresses with IDNA domains (#4661)\n\n## Release 1.0.2\n\n- Fix storing unsaved drafts in localStorage (#4529)\n- Add configurable LDAP_OPT_DEREF option (#4546)\n- Fix so when switching editor mode original version of signature is used (#4032)\n- Fix unintentional draft autosave request if autosave is disabled (#4550)\n- Fix malformed References: header in send/saved mail (#4552)\n- Fix handling unicode characters in links (#4555)\n- Fix incorrect handling of HTML comments in messages sanitization code (#4558)\n- Fix so current page is reset on list-mode change (#4561)\n- Fix so responses menu hides on click in classic skin (#4566)\n- Fix unintentional line-height style modification in HTML messages (#4567)\n- Fix broken normalize_string(), add support for ISO-8859-2 (#4568)\n- Support csv contacts import in German localization (#4570)\n- Fix so message list and counters are updated when a message is opened in new window (#4569)\n- Fix malformed recipient name when composing a message by clicking on mailto link (#4583)\n- Fix list reload after sending message in another window (#4576)\n- Fix so address format errors are ignored when saving a draft (#4594)\n- Fix incorrect label translation in return receipt (#4598)\n- Fix security issue in delete-response action - allow only ajax request\n- Fix Delete button state after deleting identity/response (#4603)\n- Fix bug where contacts with no email address were listed on compose addressbook (#4602)\n- Fix images import from various vCard formats (#4604)\n- Fix sorting messages by size on servers without SORT capability (#4608)\n\n## Release 1.0.1\n\n- Support 'error' and 'body_file' return attribs in 'message_before_send' hook (#4467)\n- Apply user-specific replacements to group's base_dn property (#4512)\n- Fix missing email address when importing contacts from outlook csv (#4535)\n- Fix bug where \"With attachment\" option in search filter wasn't selected after return from mail view (#4508)\n- Fix \"washing\" of unicode style attributes (#4510)\n- Fix unintentional redirect from compose page in Webkit browsers (#4516)\n- Fix messages index cache update under some conditions (e.g. proxy) (#4505)\n- Fix lack of translation of special folders in some configurations (#4520)\n- Fix XSS issue in plain text spellchecker (#4524)\n- Fix invalid page title for some folders (1489804)\n- Fix redundant alert message on over-size uploads (#4528)\n- Fix next message display after removing a message (#4521)\n- Fix missing Mail-Followup-To header in sent mail (#4534)\n- Fix error when spell-checking an empty text (#4536)\n- Avoid popupmenus being closed when scrollbar is clicked (#4537)\n- Add proxy_whitelist configuration option (#4496)\n- Fix identities_level=4 handling in new_user_dialog plugin (#4540)\n- Fix various db_prefix issues (#4539)\n- Fix too small length of users.preferences column data type on MySQL\n- Fix redundant warning when switching from html to text in empty editor (#4530)\n- Fix invalid host validation on login (#4541)\n- Fix IMAP connection test in installer so it is aware of imap_auth_type (#4502)\n\n## Release 1.0.0\n\n- Added toolbar button to move message in message view\n- Fix style of disabled protocol handler link on IE (#4460)\n- Fix message import dialog when no file is selected (#4488)\n- Fix opening compose screen in new window after saving as draft (#4479)\n- Fix directories check in Installer on Windows (#4462)\n- Fix issue when default_addressbook option is set to integer value (#4379)\n- Fix Opera > 15 detection (#4455)\n- Fix security issue in DomainFactory driver of Password plugin\n- Fix invalid X-Draft-Info on forwarded message draft (#4464)\n- Fix regression in handling of 'attachments' result in message_compose hook (#4474)\n- Fix issue where msgexport.sh printed the message to STDOUT instead of a file (#4476)\n- Fix fatal error in database_attachments plugin under some conditions (#4495)\n\n## Release 1.0-rc\n\n- Small CSS fix with message notice boxes in Larry skin (#4429)\n- Include groups in contacts search on mail compose (#4186)\n- Add mime-type mapping for .7z files (#4436)\n- Invoke update scripts with php to circumvent execution restrictions (#4330)\n- Fix drag & drop message/contact moving on touch device (#4395)\n- Fix canned responses in HTML mode (#4446)\n- Check/create default folders on every login not only the first (#4391)\n- Update to jQuery-1.11.0 and jQuery-UI-1.9.2\n- Support SMTP socket context options via new config option 'smtp_conn_options'\n- Fix compatibility with PHP 5.2 in html.php file (#4438)\n- Remove expand/collapse with plus/minus keys (on numeric keypad) (#4437)\n- Fix issue where filesystem path was added to all-attachments (zip) file (#4433)\n- Fix case-sensitivity of email addresses handling on compose (#1899)\n- Don't alter Message-ID of a draft when sending (#4381)\n- Fix issue where deprecated syntax for HTML lists was not handled properly (#3975)\n- Display different icons when Trash folder is empty or full (#2108)\n- Remember last position of more headers switch (#3660)\n- Fix so message flags modified by another client are applied on the list on refresh (#1639)\n- Fix broken text/* attachments when forwarding/editing a message (#4393)\n- Improved minified files handling, added css minification (#3041)\n- Fix handling of X-Forwarded-For header with multiple addresses (#4424)\n- Fix border issue on folders list in classic skin (#4419)\n- Implemented menu actions to copy/move messages, added folder-selector widget (#863)\n- Fix security rules in .htaccess preventing access to base URL without the ending slash (#4422)\n- Fix regression where only first new folder was placed in correct place on the list (#4418)\n- Fix issue where children of selected and collapsed thread were skipped on various actions (#4410)\n- Fix issue where groups were not deleted when \"Replace entire addressbook\" option on contacts import was used (#4388)\n- Fix unreliable mimetype tests in Installer (#4408)\n- Fix performance of listing writeable folders (#4406)\n\n## Release 1.0-beta\n\n- Fix handling of invalid closing tags in HTML messages (#4403)\n- Set real content-type for file downloads (#4400)\n- Update TinyMCE to version 3.5.10 (#4401)\n- Fix keyboard navigation in list widgets (#4367)\n- Allow plugins to grab the reference of opened windows (#4383)\n- Larry skin: Improved status message display for better visibility (#4115)\n- Fix Internet Explorer 11 detection (#4397)\n- Fix date column width to fit the widest possible date format (#4354)\n- Move certain user preference options to a collapsed \"advanced\" block (#4015)\n- Add file type icons for PowerPoint and Open Office presentations (#4269)\n- Fix operations on folders with trailing spaces in name (#4387)\n- Improve identity selection based on From: header (#4360)\n- Fix issue where mails with inline images of the same name contained only the first image multiple times (#4378)\n- Use left/right arrow keys to collapse/expand thread and spacebar to select a row, change Ctrl key behavior (#4367)\n- Fix an issue where using arrow keys to go up a list can result in selected message being under headers (#4375)\n- Fix an issue where Home/End keys don't focus list row properly, don't scrollTo properly (#4370)\n- Add an option to disable smart Reply-List behaviour - reply_all_mode (#3953)\n- Fix an issue where pressing minus key on contacts list was hiding list records (#4368)\n- Fix an issue where shift + arrow-up key wasn't selecting all messages in collapsed thread (#4371)\n- Added icon for priority column in messages list header (#4275)\n- New feature \"Canned Responses\" to save and recall boilerplate text snippets\n- Fix HTML part detection when encapsulated inside multipart/signed (#4357)\n- Add spellchecker backend for the After the Deadline service\n- Replace markdown-style [1] link indexes in plain text email bodies\n- Improved mailto: link arguments handling (#4351)\n- Use DOMDocument LIBXML_PARSEHUGE and LIBXML_COMPACT options if possible (#4316)\n- Support HTTP_HOST, SERVER_NAME and SERVER_ADDR values in include_host_config feature\n- Make default font size for HTML messages configurable (request #118)\n- Fix XSS issue in addressbook group name field [CVE-2013-5646] (#4337)\n- After message is sent refresh messages list of replied message folder (#4282)\n- Add option force specified domain in user login - username_domain_forced (#4290)\n- Add option to import Vcards with group assignments\n- Save groups membership in Vcard export (#3801)\n- Workaround broken PHP function timezone_name_from_abbr (#4289)\n- Make cached message size limit configurable - messages_cache_threshold (#4326)\n- Log also failed logins to userlogins log\n- Add temp_dir_ttl configuration option (#4318)\n- Allow setting INBOX as Sent folder (#4264)\n- Fix replacement variables in user-specific base_dn in some LDAP requests (#4299)\n- Fix image scaling issues when image has only one dimension smaller than the limit (#4296)\n- Fix issue where uploaded photo was lost when contact form did not validate (#4296)\n- Move identity selection based on non-standard headers into (new) identity_select plugin (#3835)\n- Fix downloading binary files with (wrong) text/* content-type (#4292)\n- Respect HTTP_X_FORWARDED_FOR and HTTP_X_REAL_IP variables for session IP check\n- Simplified configuration by merging it into one file + defaults (#3156)\n- Make message list header stay on top when scrolling (#353)\n- Add support for 'enchant' spellcheck engine\n- Check filetype detection in installer and update script (#4252)\n- Fix folder names truncation in Classic skin (#4265)\n- Make possible to disable some (broken) IMAP extensions with imap_disable_caps option (#4245)\n- Contacts drag-n-drop default action is to move contacts (#3962)\n- Added possibility to choose to move or copy contacts from drag-n-drop menu (#3962)\n- Fix Close link and remove About link on error pages (#4201)\n- Improved/unified attachment preview screen, added print button\n- Fix lack of space between searchfilter and quicksearchbar in Larry skin (#4233)\n- Cache LDAP's user_specific search and use vlv for better performance (#4247)\n- LDAP: auto-detect and use VLV indices for all search operations\n- LDAP: additional group configuration options for  address books\n- LDAP: separated address book implementation from a generic LDAP wrapper class\n- Allow address books to browse a multi-level group hierarchy in the contacts list\n- Fix session issues when local and database time differs (#2401)\n- Fix thread cache synchronization/validation (#4150)\n- Added feature to import messages to the currently selected folder\n- Add option show_real_foldernames to disable localization of special folders\n- Fix database cache expunge issues (#4229)\n- Fix date format issues on MS SQL Server (#4078)\n- Add imap_cache_ttl option to configure TTL of imap_cache\n- Make LDAP cache engine configurable via ldap_cache and ldap_cache_ttl options\n- Fix \"duplicate entry\" errors on inserts to imap cache tables (#4228)\n- Improved handling of Reply-To/Bcc addresses of identity in compose form (#4142)\n- Added user preference to open all popups as standard windows\n- Implemented shared cache (rcube_cache_shared)\n- Change Reply-All button label/title when mailing list is detected (#4092)\n- Fix SMTP connection using IPv6 address in smtp_server option (#4147)\n- Added attachment_reminder plugin\n- Make PHP code eval() free, use create_function()\n- Add option to display email address together with a name in mail preview (#3952)\n- Support CSV import from Atmail (#4161)\n- Add db_prefix configuration option in place of db_table_*/db_sequence_* options\n- Make possible to use db_prefix for schema initialization in Installer (#4175)\n- Fix updatedb.sh script so it recognizes also table prefix for external DDL files\n- Fix parsing invalid date string (#4155)\n- Add \"with attachment\" option to messages list filter (#1795)\n- Call resize handler in intervals to prevent lags and double onresize calls in Chrome (#4137)\n- Add rel=\"noreferrer\" for links in displayed messages (#4976)\n- Add ability to toggle between HTML and text while viewing a message (#3005)\n- Remove \"HTML message\" from attachments list while viewing a message in text mode (#3005)\n- Support IMAP MOVE extension [RFC 6851]\n- Add attachment menu with Open and Download options (#4116)\n- Display user-friendly message on IMAP \"over quota\" errors (#914)\n- Extended archive plugin with user-configurable options to store messages into subfolders\n- Fix export of selected contacts from search result (#4070)\n- Feature to export only selected contacts from addressbook (by Phil Weir)\n\n## Release 0.9.5\n\n- Fix failing vCard import when email address field contains spaces (#4363)\n- Fix default spell-check configuration after Google suspended their spell service\n- Fix vulnerability in handling _session argument of utils/save-prefs [CVE-2013-6172] (#4362)\n- Fix iframe onload for upload errors handling (#4361)\n- Fix address matching in Return-Path header on identity selection (#4358)\n- Fix text wrapping issue with long unwrappable lines (#4356)\n- Fixed issues where HTML comments inside style tag would hang Internet Explorer\n- Hide Delivery Status Notification option when smtp_server is unset (#4339)\n- Display full attachment name using title attribute when name is too long to display (#4328)\n- Fix attachment icon issue when rare font/language is used (#4334)\n- Fix expanded thread root message styling after refreshing messages list (#4335)\n- Fix issue where From address was removed from Cc and Bcc fields when editing a draft (#4327)\n- Fix error_reporting directive check (#4331)\n- Fix de_DE localization of \"About\" label in Help plugin (#4333)\n\n## Release 0.9.4\n\n- Make identities matching case insensitive (#1881)\n- Fix issue where too big message data was stored in cache causing sql errors (#4325)\n- Fix iframe scrollbars on webkit desktop browsers (#4319)\n- Fix issue where legacy config was overridden by default config (#4305)\n- Fix newmail_notifier issue where favicon wasn't changed back to default (#4324)\n- Fix setting of Junk and NonJunk flags by markasjunk plugin (#4303)\n- Fix lack of Reply-To address in header of forwarded message body (#4314)\n- Fix bugs when invoking contact creation form when read-only addressbook is selected (#4313)\n- Fix identity selection on reply (#4308)\n- Fix so additional headers are added to all messages sent (#4302)\n- Fix display issue after moving folder in Folder Manager (#4310)\n- Fix handling of non-default date formats (#4311)\n- Fix unquoted path in PREG expression on Windows (#4307)\n- Fix wrong close tag in /template/mail.html (#4312)\n\n## Release 0.9.3\n\n- Fix setting refresh_interval to \"Never\" in Preferences (#4304)\n- Fixed iframe scrolling on touch devices\n- Optimized message list for touch devices\n- Fix purge action in folder manager (#4300)\n- Fix base URL resolving on attribute values with no quotes (#4297)\n- Fix wrong handling of links with '|' character (#4298)\n- Fix colorspace issue on image conversion using ImageMagick (#4294)\n- Fix XSS vulnerability when editing a message \"as new\" or draft [CVE-2013-5645] (#4283)\n- Fix XSS vulnerability when saving HTML signatures [CVE-2013-5645] (#4283)\n- Fix rewrite rule in .htaccess (#4278)\n- Fix detecting Turkish language in ISO-8859-9 encoding (#4284)\n- Fix identity-selection using Return-Path headers (#4279)\n- Fix parsing of links with ... in URL (#4251)\n- Fix compose priority selector when opening in new window (#4286)\n- Fix bug where signature wasn't changed on identity selection when editing a draft (#4272)\n- Fix IMAP SETMETADATA parameters quoting (#4274)\n- Fix \"could not load message\" error on valid empty message body (#4271)\n- Fix handling of message/rfc822 attachments on message forward and edit (#4262)\n- Fix parsing of square bracket characters in IMAP response strings (#4267)\n- Don't clear References and in-Reply-To when a message is \"edited as new\" (#4263)\n- Fix messages list sorting with THREAD=REFS\n- Remove deprecated (in PHP 5.5) PREG /e modifier usage (#4239)\n- Fix empty messages list when register_globals is enabled (#4232)\n- Fix so valid and set date.timezone is not required by installer checks (#4242)\n- Canonize boolean ini_get() results (#4249)\n- Fix so install do not fail when one of DB driver checks fails but other drivers exist (#4240)\n- Fix so exported vCard specifies encoding in v3-compatible format (#4244)\n\n## Release 0.9.2\n\n- Fix image thumbnails display in print mode (#4220)\n- Fix height of message headers block (#4200)\n- Fix timeout issue on drag&drop uploads (#4238)\n- Fix default sorting of threaded list when THREAD=REFS isn't supported\n- Fix list mode switch to 'List' after saving list settings in Larry skin (#4236)\n- Fix error when there's no writeable addressbook source (#4235)\n- Fix zipdownload plugin issue with filenames charset (#4231)\n- Fix so non-inline images aren't skipped on forward (#4230)\n- Fix \"null\" instead of empty string on messages list in IE10 (#4227)\n- Fix legacy options handling\n- Fix so bounces addresses in Sender headers are skipped on Reply-All (#4140)\n- Fix bug where serialized strings were truncated in PDO::quote() (#4226)\n- Fix displaying messages with invalid self-closing HTML tags (#4223)\n- Fix PHP warning when responding to a message with many Return-Path headers (#4222)\n- Fix unintentional compose window resize (#4206)\n- Fix performance regression in text wrapping function (#4219)\n- Fix connection to postgres db using unix socket (#4218)\n- Fix handling of comma when adding contact from contacts widget (#4199)\n- Fix bug where a message was opened in both preview pane and new window on double-click (#4212)\n- Fix fatal error when xdebug.max_nesting_level was exceeded in rcube_washtml (#4202)\n- Fix PHP warning in html_table::set_row_attribs() in PHP 5.4 (#4194)\n- Fix invalid option selected in default_font selector when font is unset (#4204)\n- Fix displaying contact with ID divisible by 100 in sql addressbook (#4211)\n- Fix browser warnings on PDF plugin detection (#4209)\n- Fix fatal error when parsing UUencoded messages (#4210)\n\n## Release 0.9.1\n\n- Better German labels for from/to to avoid conflicts with 'sender' (#4188)\n- Fix problem where security warning was displayed for valid images with image/jpg type (#4196)\n- Fix handling of invalid email addresses in headers (#4193)\n- Fix IMAP connection issue with default_socket_timeout < 0 and imap_timeout < 0 (#4191)\n- Fix various PHP code bugs found using static analysis (#4190)\n- Fix backslash character handling on vCard import (#4189)\n- Fix csv import from Thunderbird with French localization (#4170)\n- Fix messages list focus issue in Opera and Webkit (#4169)\n- Fix Reply-To header handling in Reply-All action (#4157)\n- Fix so Sender: address is added to Cc: field on reply to all (#4140)\n- Fix so addressbook_search_mode works also for group search (#4183)\n- Fix removal of a contact from a group in LDAP addressbook (#4185)\n- Include SQL query in the log on SQL error (#4172)\n- Fix handling untagged responses in IMAP FETCH - \"could not load message\" error (#4180)\n- Fix very small window size in Chrome (#4087)\n- Fix list page reset when viewing a message in Larry skin (#4182)\n- Fix min_refresh_interval handling on preferences save (#4179)\n- Fix PDF support detection for Firefox PDF.js (#4113)\n- Fix possible collision in generated thumbnail cache key (#4177)\n- Fix exit code on bootstrap errors in CLI mode (#4160)\n- Fix error handling in CLI mode, use STDERR and non-empty exit code (#5161)\n- Fix error when using check_referer=true\n- Fix incorrect handling of some specific links (#4171)\n- Fix incorrect handling of leading spaces in text wrapping\n- Fix unintentional messages list jumps on click in Internet Explorer (#4167)\n- Fix list of required configuration options (#4166)\n- Fix DB error when creating a new contact and a group is selected (#4164)\n- Fix handling of deprecated boolean value of reply_mode option (#4165)\n\n## Release 0.9.0\n\n- Fix display of HTML entities in protected folder name (#4159)\n- Set minimal permissions to temp files (#4131)\n- Improve content check for embedded images without filename (#4151)\n- Fix handling of invalid characters in message headers and output (#4153)\n- Fix selecting collapsed rows on select-all (#4156)\n- Avoid race-conditions with concurrent attachment uploads (#3739)\n- Fix possible header duplicates when using additional headers (#4154)\n- Fix session issues with use_https=true (#4125)\n- Fix blockquote width in sent mail (#4152)\n- Fix keyboard events on list widgets in Internet Explorer (#4148)\n\n## Release 0.9-rc2\n\n- Fix security issue in save-pref command\n- Remove sig_above configuration option, use reply_mode only (#4135)\n- Refresh current folder in opener window after draft save or message sent (#4132)\n- Fix saving draft just after entering compose window (#4141)\n- Fix javascript error in IE9 when loading form with placeholders into an iframe (#4138)\n- Fix handling of some conditional comment tags in HTML message (#4136)\n- Fix so forward as attachment works if additional attachment is added by message_compose hook (#4134)\n- Better handling of session errors in ajax requests (#4105)\n- Fix HTML part detection for some specific message structures (#4130)\n- Don't show fake address - phishing prevention (#4120)\n- Fix forward as attachment bug with editormode != 1 (#4129)\n- Fix LIMIT/OFFSET queries handling on MS SQL Server (#4123)\n- Fix so task name can really contain all from a-z0-9_- characters (#4095)\n- Fix javascript errors when working in a page opened with target=\"_blank\"\n- Mention SQLite database format change in UPGRADING file (#4122)\n- Increase maxlength to 254 chars for email input fields in addressbook (#4126)\n- Fix thumbnail size when GD extension is used for image resize (#4124)\n- Display notice that message is encrypted also for application/pkcs7-mime messages (#3815)\n\n## Release 0.9-rc\n\n- Fix plain text spellchecker incorrect highlighting in non-ASCII text (#4114)\n- Add workaround for invalid message charset detection by IMAP servers (#4112)\n- Fix NUL characters in content-type of ms-tnef attachment (#4108)\n- Fix regression in handling LDAP contact identifiers (#4104)\n- Updated translations from Transifex\n- Fix buggy error template in a frame (#4092)\n- Add addressbook widget on compose page in classic skin\n- Add search box to compose address book widget (#3710)\n- Fix login in case when default_host is an array with one element (#4085)\n- Use LDAP fallback hosts on connect + bind instead of ldap_connect() only.\n- Add config option for LDAP bind timeout (sets LDAP_OPT_NETWORK_TIMEOUT option)\n- Submit Addressbook advanced search form with Enter key (#3843)\n- Also block remote images in HTML part view (#4013)\n- Improved database schema upgrade procedure, added updatedb.sh script\n- Force autocommit mode in mysql database driver (#4068)\n\n## Release 0.9-beta\n\n- Fix searching by date in address book (#4058)\n- Improve charset detection by prioritizing charset according to user language (#2032)\n- Fix handling of escaped separator in vCard file (#4064)\n- Add option to use envelope From address for MDN responses (#4052)\n- Add possibility to search in message body only (#3977)\n- Support \"multipart/relative\" as an alias for \"multipart/related\" type (#4057)\n- Display PGP/MIME signature attachments as \"Digital Signature\" (#3845)\n- Workaround UW-IMAP bug where hierarchy separator is added to the shared folder name (#4051)\n- Fix version comparisons with -stable suffix (#4050)\n- Add unsupported alternative parts to attachments list (#4046)\n- Add Compose button on message view page (#3959)\n- Display 'Sender' header in message preview\n- Plugin API: Added message_before_send hook\n- Fix contact copy/add-to-group operations on search result (#4042)\n- Use matching identity in MDN response (#4043)\n- Fix handling of signatures on draft edit (#3996)\n- Fix so compacting of non-empty folder is possible also when messages list is empty (#4039)\n- Allow forwarding of multiple emails (#2941)\n- Fix big memory consumption of DB layer (#4037)\n- Fix broken message/part bodies when FETCH response contains more untagged lines (#4020)\n- Fix empty email on identities list after identity update (#4018)\n- Add new identities_level: (4) one identity with possibility to edit only signature\n- Use Delivered-To and Envelope-To headers for identity selection (#4024, #3835)\n- Fix XSS vulnerability using Flash files (#4014)\n- Always save drafts with format=flowed in order to keep original line wraps (#3997)\n- Select default_addressbook on the list in Address Book (#3624)\n- Fix so mobile phone has TYPE=CELL in exported vCard (#4004)\n- Support contacts import from CSV file (#2605)\n- Improved keep-alive action. Now the interval is based on session_lifetime (#3799)\n- Added cross-task 'refresh' request for system state updates (#3799)\n- Renamed config options: keep_alive to refresh_interval, min_keep_alive to min_refresh_interval\n- Fix handling of text/enriched content on message reply/forward/edit\n- Option to display attached images as thumbnails below message body\n- Upgraded to jQuery 1.8.3 and jQuery UI 1.9.1\n- Add config option to automatically generate LDAP attributes for new entries\n- Add user settings to open message view and compose form in new windows (#1886)\n- Better client-side timezone detection using the jsTimezoneDetect library (#3947)\n- Add option to disable saving sent mail in Sent folder - no_save_sent_messages (#3923)\n- Fix handling dont_override with message_sort_col and message_sort_order settings (#3970)\n- Fix handling of URLs with asterisk characters (#3969)\n- Remove automatic to-lowercase conversion of usernames (#3941)\n- Plugin API: Add 'email_list' argument for identities data in user_create hook\n- Integrated zipdownload plugin to download all attachments (#617)\n- Fix HTML special characters handling in message list/header display (#3812)\n- List related text/html part as attachment in plain text mode (#3918)\n- Use IMAP BINARY (RFC3516) extension to fetch message/part bodies\n- Fix folder creation under public namespace root (#3910)\n- Fix so \"Edit as new\" on draft creates a new message (#3924)\n- Fix invalid error message on deleting mail from read only folder (#3929)\n- Replace data URIs of images (pasted in HTML editor) with inline attachments (#3795)\n- Remove (too big) min-width on mail screen\n- Added template object 'frame'\n- Add option to enable HTML editor on forwarding (#3807)\n- Add option to not include original message on reply, rename option top_posting to reply_mode (#1615)\n- Added session_path config option and unified cookies settings in javascript\n- Added \"Undeleted\" option to messages list filter\n- Rewritten test scripts for PHPUnit\n- Add new DB abstraction layer based on PHP PDO, supporting SQLite3 (#3668)\n- Removed PEAR::MDB2 package\n- Removed users.alias column, added option ('user_aliases')\n  to use email address from identities as username (#3851)\n- Removed redundant cache.cache_id column (#3817)\n- Fix order of attachments in sent mail (#3740)\n- Fix Shift + delete button does not permanently delete messages (#3598)\n- Add Content-Length for attachments where possible (#1880)\n- Fix attachment sizes in message print page and attachment preview page (#3805)\n- Add mail attachments using drag & drop on HTML5 enabled browsers\n- Add workaround for invalid BODYSTRUCTURE response - parse message with Mail_mimeDecode package (#1966)\n- Display Tiff as Jpeg in browsers without Tiff support (#3757)\n- Don't display Pdf/Tiff/Flash attachments inline without browser support (#3757, #3394)\n- Add is_escaped attribute for html_select and html_textarea (#3782)\n- Fix issue where draft auto-save wasn't executed after some inactivity time\n- Add vCard import from multiple files at once (#3458)\n- Roundcube Framework:\n    Add possibility to replace IMAP driver with custom class\n    Add IMAP auto-connection feature, improving performance with caching enabled\n    Replace imap_init hook with storage_init (with additional 'driver' argument)\n    Improved performance by caching IMAP server's capabilities in session\n    Unified global functions naming (rcube_ prefix)\n    Better classes separation\n    Framework files moved to lib/Roundcube\n\n## Release 0.8.5\n\n- Fix #countcontrols issue in IE<=8 when text is very long (#4060)\n- Fix unwanted horizontal scrollbar in message preview header (#4044)\n- Add workaround for IE<=8 bug where Content-Disposition:inline was ignored (#4028)\n- Fix XSS vulnerability in vbscript: and data:text links handling [CVE-2012-6121] (#4033)\n- Fix absolute positioning in HTML messages (#4007)\n- Fix cache (in)validation after setting \\Deleted flag\n- Fix keyboard events on messages list in opera browser (#4011)\n- Fix selection of collapsed thread rows (#3978)\n- Fix wrapping of quoted text with format=flowed (#3561)\n\n## Release 0.8.4\n\n- Fix regression where unintentional page reload was done after request abort (#3999)\n- Fix XSS vulnerability in handling of text/enriched messages (#4000)\n- Fix handling of 'media' attribute on linked css (#3989)\n- Fix excessive LFs at the end of composed message with top_posting=true (#3995)\n- Fix bug where leading blanks were stripped from quoted lines (#3994)\n\n## Release 0.8.3\n\n- Fix AREA links handling (#3992)\n- Fix possible HTTP DoS on error in keep-alive requests (#3983)\n- Fix compatibility with MDB2 2.5.0b4 (#3982)\n- Fix a bug where saving a message in INBOX wasn't possible\n- Fix HTML part detection in messages with attachments (#3976)\n- Fix bug where wrong words were highlighted on spell-before-send check\n- Fix scrolling quirk in email preview frame using Opera 12 (#3973)\n- Fix displaying of multipart/alternative messages with empty parts (#3961)\n- Fix threaded list sorting on PHP < 5.2.9 (#3960)\n- Fix Warning: htmlspecialchars(): charset `RCMAIL_CHARSET` not supported warning in Installer (#3958)\n\n## Release 0.8.2\n\n- Fix XSS vulnerability from HTTP User-Agent header (#3954)\n- Force fonts in compose fields to be all the same (#3926)\n- Fix handling vCard entries with TEL;TYPE=CELL (#3949)\n- Fix error where session wasn't updated after folder rename/delete (#3928)\n- Fix PLAIN authentication for some IMAP servers (#3916)\n- Fix encoding vCard file when contains PHOTO;ENCODING=b (#3922)\n- Fix focus issue in IE when selecting message row (#3881)\n- Add full headers view in message preview window (#3823)\n- Fix message display page issues - unified with message preview (#3856, #3895)\n- Fix displaying all headers when they contain malformed characters (#3911)\n- Fix decoding of HTML messages with UTF-16 charset specified (#3902)\n- Fix quota capability detection so it can be overwritten by a plugin (#3903)\n- Fix identity selection on reply (#3516)\n- Fix Larry's messages list filter in IE (#3890)\n- Fix more IE issues by disabling Compat. mode with X-UA-Compatible meta tag (#3886)\n- Fix setting locales under Solaris - use additional .UTF-8 suffix (#3887)\n- Fix email address validation for addresses with IP address in domain part\n- Fix Larry skin issues in IE7 compat. mode (#3879)\n- Fix so subscribed non-existing/non-accessible shared folder can be unsubscribed\n\n## Release 0.8.1\n\n- Fix bug where domain name was converted to lower-case even with login_lc=false (#3859)\n- Fix lower-casing email address on replies (#3863)\n- Fix line separator in exported messages (#3866)\n- Fix XSS issue where plain signatures wasn't secured in HTML mode [CVE-2012-4668] (#3875)\n- Fix XSS issue where href=\"javascript:\" wasn't secured [CVE-2012-3508] (#3875)\n- Fix impossible to create message with empty plain text part (#3873)\n- Fix stripped apostrophes when replying in plain text to HTML message (#3869)\n- Fix inactive Save search option after advanced search (#3870)\n- Fix Remove from group option is active for contact search result (#3871)\n- Disable autocapitalization in login form on iPad/iPhone (#3872)\n- Fix focus on the list when list row is clicked (#3865)\n- Added separate From and To columns apart from smart From/To column (#2970)\n- Fix fallback to Larry skin when configured skin isn't available (#3857)\n- Fix (workaround) delete operations with some versions of memcache (#3858)\n- Fix (disable) request validation for spell and spell_html actions\n\n## Release 0.8.0\n\n- Don't show product version on login screen (can be enabled by config)\n- Renamed old default skin to 'classic'. Larry is the new default skin.\n- Support connections to memcached socket file (#3848)\n- Enable TinyMCE inlinepopups plugin\n- Update to TinyMCE 3.5.6\n- Correctly escape localized labels in javascript variable (#3842)\n- Update Net_SMTP/Auth_SASL packages to fix Digest-MD5/Cram-MD5 authentication (#3846)\n- Don't add attachments content into reply/forward/draft message body (#3837)\n- Fix 'no connection' errors on page unloads (#3832)\n- Plugin API: Add 'unauthenticated' hook (#3545)\n- Show explicit error message when provided hostname is invalid (#3834)\n- Fix wrong compose screen elements focus in IE9 (#3826)\n- Fix fatal error when date.timezone isn't set (#3831)\n- Update to TinyMCE 3.5.4.1\n- Better icons with distinct shapes for priority columns (#3706)\n- Show dedicated icon for multipart/report messages (#3813)\n- Properly hide text of icon links/buttons (#3820)\n- Fix handling of unitless CSS size values in HTML message (#3821)\n- Fix removing contact photo using LDAP addressbook (#3737)\n- Fix storing X-ANNIVERSARY date in vCard format (#3816)\n- Update to Mail_Mime-1.8.5 (#3810)\n- Fix XSS vulnerability in message subject handling using Larry skin [CVE-2012-3507] (#3809)\n- Fix handling of links with various URI schemes e.g. \"skype:\" (#3521)\n- Fix handling of links inside PRE elements on html to text conversion\n- Fix indexing of links on html to text conversion\n- Decode header value in rcube_mime::get() by default (#3803)\n- Fix errors with enabled PHP magic_quotes_sybase option (#3798)\n- Fix SQL query for contacts listing on MS SQL Server (#3797)\n- Fix window.resize handler on IE8 and Opera (#3758)\n- Don't let error message popups cover the login form (#3794)\n- Update to TinyMCE 3.5.2\n- Don't show errors when moving contacts into groups they are already in (#3788)\n- Make folders with unread messages in subfolders bold again (#2892)\n- Abbreviate long attachment file names with ellipsis (#3793)\n- Fix html2text conversion of strong|b|a|th|h tags when used in upper case\n- Add listcontrols template container in Larry skin (#3792)\n- Fix host autoselection when default_host is an array (#3790)\n- Move messages forwarding mode setting into Preferences\n- Fix HTML entities handling in HTML editor (#3780)\n- Fix listing shared folders on Courier IMAP (#3767)\n\n## Release 0.8-rc\n\n- Added new translations in Belarusian, Interlingua and Malayalam\n- Flipped compose options arrow (#3772)\n- Fix handling of large uuencode attachments (#3771)\n- Fix handling of \"usemap\" attribute (#3770)\n- Fix handling of some HTML tags e.g. IMG (#3769)\n- Use similar language as a fallback for plugin localization (#3726)\n- Fix issue where signature wasn't re-added on draft compose (#3659)\n- Update to TinyMCE 3.5 (#3762)\n- Fixed multi-threaded autocompletion when number of threads > number of sources\n- Allow to configure the number of values allowed for each LDAP attribute\n- Support for serialized LDAP address values (usually delimited with a $)\n- Less restrictive session auth checks, repeat keep-alive requests on failure (#3755)\n- Fix redirect to mail/compose on re-login (#3585)\n- Add IE8 hack for messages list issue (#3317)\n- Fix handling errors on draft auto-save\n- Fix importing vCard photo with ENCODING param specified (#3746)\n- Support multiple name/email pairs for Bcc and Reply-To identity settings (#3752)\n- Set flexible width to login form fields (#3735)\n- Fix re-draw bug on list columns change in IE8 (#3318)\n- Allow mass-removal of addresses from a group (#3259)\n- Fix removing all contacts on import to LDAP addressbook\n- Fix so \"Back\" from compose/show doesn't reset search request (#3594)\n- Add option to delete messages instead of moving to Trash when in Junk folder (#2805)\n- Fix invisible cursor when replying to a html message (#3100)\n- Reset IP stored in session when destroying session data (#3485)\n- Fix bug where memory_limit = -1 wasn't handled properly\n- Support LDAP RFC2256's country object class read/write (#3535)\n- Upgraded to jQuery 1.7.2\n- Image resize with GD extension (#3712)\n- Fix lack of warning when switching task in compose window (#3725)\n- Fix bug where it wasn't possible to enter ( or & characters in autocomplete fields\n- Request all needed fields from address book backends (#3721)\n- Unified (single) spellchecker button\n- Scroll long lists on drag&drop (#2249)\n- Copy all skins in installto script (#3705)\n\n## Release 0.8-beta\n\n- Upgraded to jQuery 1.7.1 (#3673) and jQuery UI 1.8.18\n- Add Russian to the spellchecker languages list (#3542)\n- Remember custom skin selection after logout (#3688)\n- Make sure About tab is always the last tab (#3609)\n- Fix issue with folder creation under INBOX. namespace (#3683)\n- Added mailto: protocol handler registration link in User Preferences (#2729)\n- Handle identity details box with an iframe (#3066)\n- Fix issue where some text from original message was missing on reply (#3675)\n- Fix autoselect_host() for login (#3639)\n- Changed license to GNU GPLv3+ with exceptions for skins & plugins\n- Added address book widget on compose screen\n- Use proper timezones from PHP's internal timezonedb (#1973)\n- Add separate pagesize setting for mail messages and contacts (#3617)\n- Deprecate $DB, $USER, $IMAP global variables, Use $RCMAIL instead\n- Add option to set default font for HTML message (#894)\n- Fix issues with big memory allocation of IMAP results\n- Prevent from memory_limit exceeding when trying to parse big messages bodies (#3164)\n- Add possibility to add SASL mechanisms for SMTP in smtp_connect hook (#3399)\n- Mark (with different color) folders with recent messages (#2479)\n- Added About tab in Settings\n- TinyMCE updated to 3.4.6\n\n## Release 0.7.2\n\n- Fix encoding of attachment with comma in name (#3717)\n- Fix handling of % character in IMAP protocol (#3711)\n- Fix duplicate names handling in addressbook searches (#3704)\n- Fix displaying of HTML messages from Disqus (#3702)\n- Disable E_STRICT warnings on PHP 5.4\n- Prevent from folder selection on virtual folder collapsing (#3681)\n- Fix automatic unsubscribe of non-existent folders\n- Fix double-quotes handling in recipient names\n- User configurable setting how to display contact names in list\n- Make contacts list sorting configurable for the admin/user\n- Fix parse errors in DDL files for MS SQL Server\n- Revert SORT=DISPLAY support, removed by mistake (#3664)\n- Add lost translation label in de_DE (#3654)\n- Fix drafts update issues when edited from preview pane (#3653)\n- Fix wrong variable name in rcube_ldap.php (#3643)\n- Make mime type detection based on filename extension to be case-insensitive\n- Fix failure on MySQL database upgrade from 0.7 - text column can't have default value (#3642)\n\n\n## Release 0.7.1\n\n- Fix bug in handling of base href and inline content (#3634)\n- Fix SQL Error when saving a contact with many email addresses (#3630)\n- Fix strict email address searching if contact has more than one address\n- Remove duplicated 'organization' label (#3631)\n- Fix so editor selector is hidden when 'htmleditor' is listed in 'dont_override'\n- Fix wrong (long) label usage (#3627)\n- Fix handling of INBOX's subfolders in special folders config (#3623)\n- Add ifModule statement for setting Options -Indexes in .htaccess file (#3620)\n- Fix crashes with eAccelerator (#3608)\n- Fix searching on IMAP servers without CHARSET specifier support (#3619)\n- Fix expanding folders during drag&drop (#3611)\n- Fix wrong postgres sequence name in upgrade from 0.6\n- Fix broken CREATE INDEX queries in SQLite DDL files (#3607)\n\n## Release 0.7\n\n- Make Roundcube render the Email Standards Project Acid Test correctly\n- Replace prompt() with jQuery UI dialog (#1603)\n- Fix navigation in messages search results\n- Improved handling of some malformed values encoded with quoted-printable (#3590)\n- Add possibility to do LDAP bind before searching for bind DN\n- Fix handling of empty <U> tags in HTML messages (#3584)\n- Add content filter for embedded attachments to protect from XSS on IE [CVE-2012-1253] (#3372)\n- Use strpos() instead of strstr() when possible (#3581)\n- Fix handling HTML entities when converting HTML to text (#3582)\n- Fix fit_string_to_size() renders browser and ui unresponsive (#3577)\n- Fix handling of invalid characters in request (#3536)\n- Fix merging some configuration options in update.sh script (#2181)\n- Fix so TEXT key will remove all HEADER keys in IMAP SEARCH (#3578)\n- Fix handling contact photo url with https:// prefix (#3575)\n- Fix possible infinite redirect on attachment preview (#3572)\n- Improved clickjacking protection for browsers which don't support X-Frame-Options headers\n- Fixed bug where similar folder names were highlighted wrong (#3345)\n- Fixed bug in handling link with '!' character in it (#3569)\n- Fixed bug where session ID's length was limited to 40 characters (#3570)\n- TinyMCE security issue: removed moxieplayer (embedding flv and mp4 is not supported anymore)\n\n## Release 0.7-beta\n\n- Fix handling of HTML form elements in messages (#1604)\n- Fix regression in setting recipient to self when replying to a Sent message (#3101)\n- Fix listing of folders in hidden namespaces (#2895)\n- Don't consider \\Noselect flag when building folders tree (#3448)\n- Fix sorting autocomplete results (#3504)\n- Add option to set session name (#2630)\n- Add option to skip alternative email addresses in autocompletion\n- Fix inconsistent behaviour of Compose button in Drafts folder, add Edit button for drafts\n- Fix problem with parsing HTML message body with non-unicode characters (#3312)\n- Add option to define matching method for addressbook search (#2720, #3378)\n- Make email recipients separator configurable\n- Fix so folders with \\Noinferiors attribute aren't listed in parent selector\n- Fix handling of curly brackets in URLs (#3555)\n- Fix handling of dates (birthday/anniversary) in contact data (#3552)\n- Fix error on opening searched LDAP contact (#3550)\n- Fix redundant line break in flowed format (#3551)\n- Fix IDN address validation issue (#3544)\n- Fix JS error when dst_active checkbox doesn't exist (#3540)\n- Autocomplete LDAP records when adding contacts from mail (#3498)\n- Plugin API: added 'ready' hook (#3492)\n- Ignore DSN request when it isn't supported by SMTP server (#3300)\n- Make sure LDAP name fields aren't arrays (#3523)\n- Fixed imap test to non-default port when using ssl (#3532)\n- Force all files to be overwritten when updating (#3531)\n- Fix issue where it wasn't possible to change list view mode in folder manager for INBOX (#3522)\n- Fix namespace handling in special folders settings (#3527)\n- Disable time limit for CLI scripts (#3524)\n- Fix misleading display when changing editor type (#3519)\n- Add loading indicator on contact delete\n- Fix bug where after delete message rows can be added to the list of another folder (#3263)\n- Add notice on autocompletion that not all records were displayed\n- Add option 'searchonly' for LDAP address books\n- Add Priority filter to the messages list\n- Cache synchronization using QRESYNC/CONDSTORE\n- Trigger 'new_messages' hook for all checked folders (#3503)\n- Make date/time format user configurable; drop 'date_today' config option\n- Fix setting title for truncated subject in IE (#3141)\n- Fix displaying multipart/alternative messages with only one part (#3400)\n- Rewritten messages caching:\n  Indexes are stored in a separate table, so there's no need to store all messages in a folder\n  Added threads data caching\n  Flags are stored separately, so flag change doesn't cause DELETE+INSERT, just UPDATE\n- Improved FETCH response handling\n- Improvements in response tokenization method\n- Use 'From' and 'To' labels instead of 'Sender' and 'Recipient'\n- Fix username case-insensitivity issue in MySQL (#3462)\n- Addressbook Saved Searches\n- Added spellchecker exceptions dictionary (shared or per-user)\n- Added possibility to ignore words containing caps, numbers, symbols (spellcheck_ignore_* options)\n- Added 'priority' column on messages list (#2884)\n- Localize forwarded message header (#3487)\n\n## Release 0.6\n\n- Fix bug where the last identity is used on reply (#3516)\n- Fix locked folder rename option on servers supporting RFC2086 only (#3508)\n- Fix session race conditions when composing new messages\n- Fix encoding of LDAP contacts identifiers (#3501)\n- jQuery 1.6.4\n- Fix handling of binary attachments encoded with quoted-printable (#3494)\n- Fix text-overflow:ellipsis issues on messages list in FF7 and Webkit (#3490)\n- Fix handling of links with IP address\n- Fix compacting folder resets message list filter (#3499)\n\n## Release 0.6-rc\n\n- Send X-Frame-Options headers to protect from clickjacking (#3079)\n- Fallback to mail_domain in LDAP variable replacements; added 'host' to 'user_create' hook arguments (#3464)\n- Fixed wrong vCard type parameter mobile (#3496)\n- Fixed vCard WORKFAX issue (#3476)\n- Add vCard's Profile URL support (#3491)\n- jQuery 1.6.3\n- Fix imap_cache setting to values other than 'db' (#3489)\n- Fix handling of attachments inside message/rfc822 parts (#3466)\n- Make list of mimetypes that open in preview window configurable (#3175)\n- Added plugin hook 'message_part_get' for attachment downloads\n- Added unique connection identifier to IMAP debug messages\n- Fix image type check for contact photo uploads\n\n## Release 0.6-beta\n\n- Fixed selecting identity on reply/forward (#3434)\n- Add option to hide selected LDAP addressbook on the list\n- Add client-side checking of uploaded files size\n- Add newlines between organization, department, jobtitle (#3468)\n- Recalculate date when replying to a message and localize the cite header (#3212)\n- Fix handling of email addresses with quoted local part (#3401)\n- Fix EOL character in vCard exports (#3357)\n- Added optional \"multithreading\" autocomplete feature\n- Plugin API: Added 'config_get' hook\n- Fixed new_user_identity plugin to work with updated rcube_ldap class (#3443)\n- Plugin API: added folder_delete and folder_rename hooks\n- Added possibility to undo last contact delete operation\n- Fix sorting of contact groups after group create (#3258)\n- Add optional textual upload progress indicator (#2330)\n- Fix parsing URLs containing commas (#3425)\n- Added vertical splitter for books/groups list in addressbook (#3389)\n- Improved namespace roots handling in folder manager\n- Added searching in all addressbook sources\n- Added addressbook source selection in contacts import\n- Implement LDAPv3 Virtual List View (VLV) for paged results listing\n- Use 'address_template' config option when adding a new address block (#3406)\n- Added addressbook advanced search\n- Add popup with basic fields selection for addressbook search\n- Case-insensitive matching in autocompletion (#3398)\n- Added option to force spellchecking before sending a message (#1862)\n- Fix handling of \"<\" character in contact data, search fields and folder names (#3349)\n- Fix saving \"<\" character in identity name and organization fields (#3349)\n- Added option to specify to which address book add new contacts\n- Added plugin hook for keep-alive requests\n- Store user preferences in session when write-master is not available and session is stored in memcache, write them later\n- Improve performance of folder manager operations\n- Fix default_port option handling in Installer when config.inc.php file exists (#3390)\n- Removed option focus_on_new_message, added newmail_notifier plugin\n- Added general rcube_cache class with Memcache and APC support\n- Improved caching performance by skipping writes of unchanged data\n- Option enable_caching replaced by imap_cache and messages_cache options\n- Fix WORKFAX saving in address book (#3380)\n- Add forward-as-attachment feature\n- jQuery-1.6.2 (#5158, #3154)\n- Improve display name composition when saving contacts (#3153)\n- Fix problems with subfolders of INBOX folder on some IMAP servers (#3247)\n- Fix handling of folders that doesn't belong to any namespace (#3184)\n- Enable multiselection for attachments uploading in capable browsers (#2266)\n- Add possibility to change HTML editor configuration by skin\n- Fix a bug where selecting too many contacts would produce too large URI request (#3369)\n- Improve performance by including files with absolute path (#3337)\n- Move folder name truncation to client/skin (#1822)\n- Added plugin hook for request token creation\n- Replace LDAP vars in group queries (#3329)\n- Fix vcard folding with unicode characters (#3353)\n- Keep all submitted data if contact form validation fails (#3350)\n- Handle unicode strings in rcube_addressbook::normalize_string() (#3351)\n- Fix handling of debug_level=4 in ajax requests (#3327)\n- Enable TinyMCE's contextmenu (#3062)\n- Allow multiple concurrent compose sessions\n- New config option for custom logo\n- Allow skins to define/override texts with <roundcube:label />\n- Add simple ACL rights/namespace handling in folder manager\n- Force IE to send referers (#3306)\n- Better display of vcard import results (#1861)\n- Improved vcard import\n- Interactive update script with improved DB schema check\n- Fix problem with contactgroupmembers table creation on MySQL 4.x, add index on contact_id column\n- Add LDAP SASL bind and proxy authentication (#2810)\n- Replying to a sent message puts the old recipient as the new recipient (#3101)\n- Fulltext search over (almost) all data for contacts\n- Extend address book with rich contact information\n\n## Release 0.5.4\n\n- Fix XSS vulnerability in UI messages [CVE-2011-2937] (#3469)\n\n## Release 0.5.3\n\n- Fix identities \"reply-to\" and \"bcc\" fields have a bogus value when left empty (#3405)\n- Fix issue which cases IMAP disconnection when encrypt() method was used (#3374)\n- Fix some CSS issues in Settings for Internet Explorer\n- Fixed handling of folder with name \"0\" in folder selector\n- Fix bug where messages were deleted instead moved to trash folder after Shift key was used (#3376)\n- Fix relative URLs handling according to a <base> in HTML (#3368)\n- Fix handling of top-level domains with more than 5 chars or unicode chars (#3366)\n- Fix usage of non-standard HTTP error codes (#3297)\n- Fix PHP warning on mistaken in_array() usage (#3375)\n\n## Release 0.5.2\n\n- TinyMCE 3.4.2 now compatible with IE9\n- PEAR::Net_SMTP 1.5.2, fixed timeout issue (#3332)\n- Fix bug where template name without plugin prefix was used in render_page hook\n- Support 'abort' and 'result' response in 'preferences_save' hook, add error handling\n- Fix bug where some content would cause hang on html2text conversion (#3348)\n- Improve space-stuffing handling in format=flowed messages (#3346)\n- Fix bug where some dates would produce SQL error in MySQL (#3342)\n- Added workaround for some IMAP server with broken STATUS response (#3344)\n- Fix bug where default_charset was not used for text messages (#3328)\n- Stateless request tokens. No keep-alive necessary on login page (#3325)\n- Force names of unique constraints in PostgreSQL DDL\n- Add code for prevention from IMAP connection hangs when server closes socket unexpectedly\n- Remove redundant DELETE query (for old session deletion) on login\n- Get around unreliable rand() and mt_rand() in session ID generation (#2516)\n- Fix some emails are not shown using Cyrus IMAP (#3316)\n- Fix handling of mime-encoded words with non-integral number of octets in a word (#3301)\n- Fix parsing links with non-printable characters inside (#3305)\n- Fixed de_CH Localization bugs (#3279)\n- Add variable for 'Today' label in date_today option (#2394)\n- Fix dont_override setting does not override existing user preferences (#3205)\n- Use only one from IMAP authentication methods to prevent login delays (1487784)\n- Support strftime format in date_today option\n- Fix SQL query in rcube_user::query() so it uses index on MySQL again\n- Removed redundant </form> tags from contact add/edit pages\n- Fix CSS error in contact details screen on IE7 (#3281)\n\n## Release 0.5.1\n\n- Fix handling of attachments with invalid content type (#3275)\n- Add workaround for DBMail's bug http://www.dbmail.org/mantis/view.php?id=881 (#3274)\n- Use IMAP's ID extension (RFC2971) to print more info into debug log\n- Security: add optional referer check to prevent CSRF in GET requests\n- Fix email_dns_check setting not used for identities/contacts (#3251)\n- Fix ICANN example addresses doesn't validate (#3253)\n- Security: protect login form submission from CSRF [CVE-2011-1491]\n- Security: prevent from relaying malicious requests through modcss.inc [CVE-2011-1492]\n- Fix handling of non-image attachments in multipart/related messages (#3261)\n- Fix IDNA support when IDN/INTL modules are in use (#3253)\n- Fix handling of invalid HTML comments in messages (#3269)\n- Fix parsing FETCH response for very long headers (#3264)\n- Fix add/remove columns in message list when message_sort_order isn't set (#3262)\n- Check mime headers before attempt to parse them (#3256)\n- Quote header values in show_additional_headers plugin (#3255)\n- Fix settings UI on IE 6 (#3246)\n- Remove double borders in folder listing (#3236)\n- Separate full message headers UI element from headers table (#3238)\n- Add part MIME ID to message_part_* hooks (#3241)\n- Improve parsing of MS Outlook vCards (#3239)\n- Updated PEAR::Net_Socket to 1.0.10\n- Updated PEAR::Net_IDNA2 to 0.1.1\n- Fix handling of comments inside an email address spec. (#3210)\n- Show full mail subject as title when hovering a cut subject link (#3141)\n- Fix randomly disappearing folders list in IE (#3231)\n- Fix list column add/removal in IE (#3230)\n- Fix login redirect issues (#3221)\n- Require PHP 5.2.1 or greater\n- Fix %h/%z variables in username_domain option (#3228)\n- Workaround for setting charset in case of malformed bodystructure response (#3227)\n- Fix impossible to subscribe to protected folders (#3199)\n- Fix setting timezone in Preferences (#3232)\n\n## Release 0.5\n\n- Fix double-login/session issue (#3124)\n- Wrap HTML parts with <html><body> and add Doctype declaration (#3119)\n- Make rcube_autoload silently skip unknown classes (#3128)\n- Fix charset detection in vcards with encoded values (#1934)\n- Better CSS cursors for splitters (#2954)\n- Show the same message only once (#3186)\n- Fix namespaces handling (#3192)\n- Add handling of multifolder METADATA/ANNOTATION responses\n- Fix handling of INBOX when personal namespace prefix is non-empty (#3200)\n- Fix handling square brackets in links (#3209)\n- Add description of 'use_https' option in main.inc.php.dist file\n\n## Release 0.5-RC\n\n- Plugin API: Add 'pass' argument in 'authenticate' hook (#3147)\n- Fix attachments of type message/rfc822 are not listed on attachments list\n- Add 'login_lc' config option for case-insensitive authentication (#3131)\n- Fix window is blur'ed in IE when selecting a message (#3161)\n- Fix cursor position on compose form in Webkit browsers (#2796)\n- Fix setting charset of attachment filenames (#3136)\n- Allow setting autocomplete attribute for all inputs separately (#3158)\n- New Folder Manager UI\n- Fix invalid Request when creating a folder (#3165)\n- Add folder size and quota indicator in folder manager (#2112)\n- Add possibility to move a subfolder into root folder (#2890)\n- Fix copying all messages in a folder copies only messages from current page\n- Improve performance of moving or copying of all messages in a folder\n- Fix plaintext versions of HTML messages don't contain placeholders for emotions (#1657)\n- Improve performance of folder rename and delete actions\n- Better support for READ-ONLY and NOPERM responses handling (#3108)\n- Add confirmation message on purge/expunge command response\n- Fix handling of untagged responses for AUTHENTICATE command (#3171)\n- Add username and IP address to log message on unsuccessful login (#3176)\n- Improved Mail-Followup-To and Mail-Reply-To headers handling\n- Fix charset conversion for text attachments without charset specification (#3181)\n\n## Release 0.5-BETA\n\n- Make session data storage more robust against garbage session data (#3148)\n- Config option for autocomplete on login screen\n- Allow plugin templates to include local files (#3146)\n- List groups in address detail view and allow to subscribe/unsubscribe from there (#2862)\n- Messages caching: performance improvements, fixed syncing, fixes related with #2857\n- Add link to identities in compose window (#2843)\n- Add Internationalized Domain Name (IDNA) support (#729)\n- Add option to automatically send read notifications for known senders (#2199)\n- Add option to \"Return receipt\" will be always checked (#2571)\n- Fix HTML to plain text conversion doesn't handle citation blocks (#2992)\n- Use custom sorting when SORT is disabled by IMAP admin (#3020)\n- Allow setting some washtml options from plugin (#2727)\n- Add option do bind for an individual LDAP address book (#3048)\n- Change reply prefix to display email address only if sender name doesn't exist (#2709)\n- Plugin API: improved 'abort' flag handling, added 'result' item in some hooks (#2988)\n- Fix mailto optional params in plain text messages aren't handled (#3071)\n- Add Reply-to-List feature (#977)\n- Add Mail-Followup-To/Mail-Reply-To support (#1937)\n- Fix confirmation message isn't displayed after sending mail on Chrome (#2437)\n- Fix keyboard doesn't work with autocomplete list with Chrome (#3073)\n- Improve tabs to fixed width and add tabs in identities info (#3030)\n- Add unique index on users.username+users.mail_host\n- Make htmleditor option more consistent and add option to use HTML on reply to HTML message (#2164)\n- Use empty envelope sender address for message disposition notifications (RFC 2298.3)\n- Support SMTP Delivery Status Notifications - RFC 3461 (#2409)\n- Use css sprite image for messages list\n- Add (different) attachment icon for messages of type multipart/report (#2426)\n- Prevent from inserting empty link when composing HTML message (#3007)\n- Add caching support in id2uid and uid2id functions (#3065)\n- Add SASL proxy authentication for SMTP (#2811)\n- Improve displaying of UI messages (#3033)\n- Fix double e-mail filed in identity form (#3088)\n- Display IMAP errors for LIST/THREAD/SEARCH commands (#2981)\n- Add LITERAL+ (IMAP4 non-synchronizing literals) support (RFC 2088)\n- Add separate column for message status icon (#2788)\n- Add ACL extension support into IMAP classes (RFC 4314)\n- Add ANNOTATEMORE extension support into IMAP classes (draft-daboo-imap-annotatemore)\n- Add METADATA extension support into IMAP classes (RFC 5464)\n- Fix decoding of e-mail address strings in message headers (#3097)\n- Fix handling of attachments when Content-Disposition is not inline nor attachment (#3086)\n- Improve performance of unseen messages counting (#3090)\n- Improve performance of messages counting using ESEARCH extension (RFC4731)\n- Add LIST-STATUS support in rcube_imap_generic class (RFC 5819)\n- Add SASL-IR support in IMAP (RFC 4959)\n- Add LOGINDISABLED support (RFC 2595)\n- Add support for AUTH=PLAIN in IMAP authentication\n- Re-implemented SMTP proxy authentication support\n- Add support for IMAP proxy authentication (#2808)\n- Add support for AUTH=DIGEST-MD5 in IMAP (RFC 2831)\n- Fix parent folder with unread subfolder not bold when message is open (#3104)\n- Add basic IMAP LIST's \\Noselect option support\n- Add support for selection options from LIST-EXTENDED extension (RFC 5258)\n- Don't list subscribed but non-existent folders (#2474)\n- Fix handling of URLs with tilde (~) or semicolon (;) character (#3110, #3111)\n- Plugin API: added 'contact_form' hook\n- Add SORT=DISPLAY support (RFC 5957)\n- Plugin API: add possibility to disable plugin in AJAX mode, 'noajax' property\n- Plugin API: add possibility to disable plugin in framed mode, 'noframe' property\n- Improve performance of setting IMAP flags using .SILENT suffix\n- Improve performance of message cache status checking with skip_disabled=true\n- Support contact's email addresses up to 255 characters long (#3116)\n- Add option to place replies in the folder of the message being replied to (#2248)\n- Add missing confirmation/error messages on contact/group/message actions (#2935)\n- Add 'loading' message on message move/copy/delete/mark actions\n- Improve responsiveness of messages displaying (#3039)\n- Add option for minimum length of autocomplete's string (#2625)\n- Fix operations on messages in unsubscribed folder (#3126)\n- Add support for shared folders (#525)\n- Fix handling of folders with name \"0\" (#3133)\n- Fix handling of folders with \"<>\" characters in name\n- jQuery 1.4.4\n- Fix handling of HTML entity strings in plain text messages\n- Fix focused elements aren't unfocused when clicking on the list (#3137)\n- Fix error in MSSQL DDL scripts (#3130)\n- Lock submit button in onsubmit event on login page (#3078)\n- Don't set attachment's charset in Content-type header (#3136)\n- Fix handling of message bodies (quoted-printable encoded) with NULL characters (#2448)\n- Add workaround for MSOE's multipart/related messages with non-related attachments\n\n## Release 0.4.2\n\n- Fix handling of backslash as IMAP delimiter\n- Fix charset replacement in HTML message bodies (#3067)\n- Fix: contact group input is empty when using rename action more than once on the same group record\n- Fix \"Server Error! (Not Found)\" when using utils/save-pref action (#3069)\n- Fix handling of Thunderbird's vCards (#3070)\n\n## Release 0.4.1\n\n- Fix space-stuffing in format=flowed messages (#3064)\n- Fix msgexport.sh now using the new imap wrapper\n- Avoid displaying password on shell (#3010)\n- Only lower-case user name if first login attempt failed (#2600)\n- Make alias setting in squirrelmail_usercopy plugin configurable (patch by pommi, #3056)\n- Prevent from saving a non-existing skin path in user prefs (#3004)\n- Improve handling of single-part messages with bogus BODYSTRUCTURE (#2976)\n- Fix path to SQL files when using pgsql/mysqli/sqlsrv drivers (#2979)\n- Fix upgrade script for SQLite (#2980)\n- Fixes in SQL init script + added update script for MSSQL database\n- Remove redundant date in syslog messages (#3008)\n- Fix contacts list page controls when a group is selected (#3009)\n- Fix SMTP test in Installer (#3014)\n- Fix \"Select all\" causes message to be opened in folder with exactly one message (#2987)\n- Fix Tab key doesn't work in HTML editor in Google Chrome (#2995)\n- Fix TinyMCE uses zh_CN when zh_TW locale is set (#2998)\n- Fix TinyMCE buttons are hidden in Opera (#2993)\n- Fix JS error on IE when trying to send HTML message with enabled spellchecker (#3006)\n- Display inline images with known extensions and non-image content-type (#3002)\n- Fix \"Threaded\" checkbox after subfolder creation (#2997)\n- Fix timezone string in sent mail (#3021)\n- Show disabled checkboxes for protected folders instead of dots (#1898)\n- Added fieldsets in Identity form, added 'identity_form' hook\n- Re-added 'Close' button in upload form (#2999, #2917)\n- Fix handling of charsets with LATIN-* label\n- Fix messages background image handling in some cases (#3043)\n- Fix format=flowed handling (#3042)\n- Fix when IMAP connection fails in 'get' action session shouldn't be destroyed (#3046)\n- Fix list_cols is not updated after column dragging (#3050)\n- Support %z variable in host configuration options (#3054)\n\n## Release 0.4\n\n- Fix disappearing upload form disappears when user selects a file on Safari (#2917)\n- Don't replace error messages with loading info (#2534)\n- Fix JS errors on compose mode switch (#2952)\n- Fix message structure parsing when it lacks optional fields (#2960)\n- Include all recipients in sendmail log\n- Support HTTP_X_FORWARDED_PROTO header for HTTPS detecting (#2950)\n- Fix default IMAP port configuration (#2948)\n- Create Sent folder when starting to compose a new message (#2900)\n- Fix handling of messages with Content-Type: application/* and no filename (#840)\n- Improved compose screen: resizable body and attachments list, vertical splitter, options menu\n- Fix RC forgets search results (#722)\n- TinyMCE 3.3.7\n- Improve parsing of styled empty tags in HTML messages (#2908)\n- Add %dc variable support in base_dn/bind_dn config (#2881)\n- Add button to hide/unhide the preview pane (#955)\n- Fix no-cache headers on https to prevent content caching by proxies (#2897)\n- Fix attachment filenames broken with TNEF decoder using long filenames (#2894)\n- Use user's timezone in Date header, not server's timezone (#2393)\n- Add option to set separate footer for HTML messages (#2784)\n- Add real SMTP error description to displayed error messages (#2233)\n- Fix some IMAP errors handling when opening the message (#1848)\n- Fix related parts aren't displayed when got mimetype other than image/* (#2629)\n- Multiple identity and database support for squirrelmail_usercopy plugin (#2686)\n- Support dynamic hostname (%d/%n) variables in configuration options (#1843)\n- Add 'messages_list' hook (#2504)\n- Add request* event triggers in http_post/http_request (#2340)\n- Fix use RFC-compliant line-delimiter when saving messages on IMAP (#2828)\n- Add 'imap_timeout' option (#2869)\n- Fix forwarding of messages with winmail attachments\n- Fix handling of uuencoded attachments in message body (#2163)\n- Added list_mailboxes hook in rcube_imap::list_unsubscribed() (#2791)\n- Fix wrong message on file upload error (#2839)\n- Add support for data URI scheme [RFC2397] (#2851)\n- Added 'actionbefore', 'actionafter', 'responsebefore', 'responseafter' events\n- Fix double-addition of e-mail domain to content ID in HTML images\n- Read and send messages with format=flowed (#1052), fixes word wrapping issues (#2703)\n- Fix duplicated attachments when forwarding a message (#2670)\n- Fix message/rfc822 attachments containing only attachments are not parsed properly (#2854)\n- Fix %00 character in winmail.dat attachments names (#2850)\n- Fix handling errors of folder deletion (#2821)\n- Parse untagged CAPABILITY response for LOGIN command (#2853)\n- Renamed all php-cli scripts to use .sh extension\n- Some files from /bin + spellchecking actions moved to the new 'utils' task\n- Added thread tree icons\n- Extend contact groups support (#2802)\n- Fix check-recent action issues and performance (#2690)\n- Fix messages order after checking for recent (#1249)\n- Fix autocomplete shows entries without email (#2640)\n- Fix listupdate event doesn't trigger on search response (#2824)\n- Fix select_all_mode value after selecting a message (#2834)\n- Set focus to editor on reply in HTML mode (#2768)\n- Fix composing in HTML jumps cursor to body instead of recipients (#2796)\n- Allow columns order change per user - drag&drop (#2124)\n- Add References header in read receipt (#2801)\n- Fix database constraint violation when opening a message (#2814)\n- Add 'loading' message while login is in progress (#2790)\n- Fix quota_zero_as_unlimited (#2786)\n- Fix folder subscription checking (#2804)\n- Fix INBOX appears (sometimes) twice in mailbox list (#2794)\n- Fix listing of attachments of some types e.g. \"x-epoc/x-sisx-app\" (#2779)\n- Fix DB Schema checking when some db_table_* options are not set (#2780)\n\n## Release 0.4-beta\n\n- Add sizelimit and timelimit variables in LDAP config (#2704)\n- Hide IMAP host dropdown when single host is defined (#2553)\n- Add images pre-loading on login page (#623)\n- Add HTTP_X_REAL_IP and HTTP_X_FORWARDED_FOR to successful logins log (#2634)\n- Fix setting spellcheck languages with extended codes (#2747)\n- Fix messages list scrolling in FF3.6 (#2657)\n- Fix quicksearch input focus (#2770)\n- Always set changed date when flagging a DB record as deleted + provide a cleanup script\n- Fix address book/group selection (#2760)\n- Assign newly created contacts to the active group (#2764)\n- Added option not to mark messages as read when viewed in preview pane (#1513)\n- Allow plugins modify the Sent folder when composing (#2708)\n- Added optional (max_recipients) support to restrict total number of recipients per message (#1167)\n- Re-organize editor buttons, add blockquote and search buttons\n- Make possible to write inside or after a quoted html message (#1878)\n- Fix bugs on unexpected IMAP connection close (#2449, #2507)\n- Iloha's imap.inc rewritten into rcube_imap_generic class\n- Added contact groups in address book (not finished yet)\n- Added PageUp/PageDown/Home/End keys support on lists (#2627)\n- Added possibility to select all messages in a folder (#1312)\n- Added 'imap_force_caps' option for after-login CAPABILITY checking (#2087)\n- Password: Support dovecotpw encryption\n- TinyMCE 3.3.1\n- Implemented messages copying using drag&drop + SHIFT (#863)\n- Improved performance of folders operations (#2689)\n- Fix blocked.gif attachment is not attached to the message (#2685)\n- Managesieve: import from Horde-INGO\n- Managesieve: support for more than one match (#2362)\n- Managesieve: support for selectively disabling rules within a single sieve script (#2198)\n- Threaded message listing now available\n- Added sorting by ARRIVAL and CC\n- Message list columns configurable by the user\n- Removed 'index_sort' option, now we're using empty 'message_sort_col' for this\n- virtuser_query: support other identity data (#2413)\n- Options virtuser_* replaced with virtuser_* plugins\n- Plugin API: Implemented 'email2user' and 'user2email' hooks\n- Fix forwarding message omits CC header (#2538)\n- Add 'default_charset' option to user preferences (#1855)\n- Add 'delete_always' option to user preferences\n- Support/Require tls:// prefix in 'smtp_server' option for TLS connections\n- Fix inconsistent behaviour of 'delete_always' option (#2533)\n- Fix deleting all messages from last list page (#2528)\n- Flag original messages when sending a draft (#2458)\n- Changed signature separator when top-posting (#2555)\n- Let the admin define defaults for search modifiers (#2211)\n- Fix long e-mail addresses validation (#2641)\n- Remember search modifiers in user prefs (#2411)\n- Added force_7bit option to force MIME encoding of plain/text messages (#2679)\n- Use case sensitive check when checking for default folders (#2567)\n- Fix checking for new mail: now checks unseen count of inbox (#2123)\n- Improve performance by avoiding unnecessary updates to the session table (#2552)\n- Fix invalid <font> tags which cause HTML message rendering problems (#2687)\n- Fix CVE-2010-0464: Disable DNS prefetching (#2639)\n- Fix Received headers to behave better with SpamAssassin (#2682)\n- Password: Make passwords encoding consistent with core, add 'password_charset' global option (#2658)\n- Fix adding contacts SQL error on mysql (#2645)\n- Squirrelmail_usercopy: support reply-to field (#2678)\n- Fix IE spellcheck suggestion popup issue (#2656)\n- Fix email address auto-completion shows regexp pattern (#2498)\n- Fix merging of configuration parameters: user prefs always survive (#2584)\n- Fix quota indicator value after folder purge/expunge (#2671)\n- Fix external mailto links support for use as protocol handler (#2328)\n- Fix attachment excessive memory use, support messages of any size (#1245)\n- Fix setting task name according to auth state\n- Password: fix vpopmaild driver (#2662)\n- Add workaround for MySQL bug [http://bugs.mysql.com/bug.php?id=46293] (#2659)\n- Fix quoted text wrapping when replying to an HTML email in plain text (#897)\n- Fix handling of extended mailto links (with params) (#2573)\n- Fix sorting by date of messages without date header on servers without SORT (#2521)\n- Fix inconsistency when not using default table names (#2652)\n- Fix folder rename/delete buttons do not appear on creation of first folder (#2653)\n- Fix character set conversion fails on systems where iconv doesn't accept //IGNORE (#2590)\n- Log in performance: Create default folders on first login only\n- Import contacts into the selected address book (by Phil Weir)\n- Add support for MDB2's 'sqlsrv' driver (#2602)\n- Use jQuery-1.4\n- Removed problematic browser-caching of messages\n- Fix incompatibility with suhosin.executor.disable_emodifier (#2549)\n- Use PLAIN auth when CRAM fails and imap_auth_type='check' (#2587)\n- Fix removal of <title> tag from HTML messages (#2629)\n- Fix 'force_https' to specified port when URL contains a port number (#2612)\n- Fix to-text converting of HTML entities inside b/strong/th/hX tags (#2621)\n- Bug in spellchecker suggestions when server charset != UTF8 (#2607)\n- Managesieve: Fix requires generation for multiple actions (#2603)\n- Fix LDAP problem with special characters in RDN (#2548)\n- Improved handling of message parts of type message/rfc822\n- Plugin API: added 'quota' hook\n- Fix parsing conditional comments in HTML messages (#2569)\n- Use built-in json_encode() for proper JSON format in AJAX replies\n- Allow setting only selected params in 'message_compose' hook (#2543)\n- Plugin API: added 'message_compose_body' hook (#2520)\n- Fix counters of all folders are checked in 'getunread' action  with check_all_folders disabled (#2399)\n- Fix displaying alternative parts in messages of type message/rfc822 (#2488)\n- Fix possible messages exposure when using Roundcube behind a proxy (#2516)\n- Fix unicode para and line separators in javascript response (#2542)\n- Additional_message_headers: allow unsetting headers, support plugin's config file (#2505)\n- Fix displaying of hidden directories in skins list (#2535)\n- Fix open_basedir restriction error when reading skins list (#2537)\n- Fix pasting from Office apps into html editor (#2508)\n- Fix empty <a> tags parsing (#2509)\n- Don't cut off attachment names when using non-RFC2231 encoding (#1912)\n- Allow inserting signatures above replied message body (#991)\n- Managesieve 2.0: multi-script support\n- Fix imap_auth_type regression (#2502)\n\n## Release 0.3.1\n\n- Specify toolbar container in compose template (#2489)\n- Fix $_SERVER['HTTPS'] check for SSL forcing on IIS (#2486)\n- Avoid unnecessary page loads for selected tab (#2324)\n- Fix quota indicator issues by content generation on client-size (#2454, #2470)\n- Don't display disabled sections in Settings (#2380)\n- Added server-side e-mail address validation with 'email_dns_check' option (#2175)\n- Fix login page loading into an iframe when session expires (#2253)\n- Allow setting port number in 'force_https' option (#2373)\n- Option 'force_https' replaced by 'force_https' plugin\n- Fix IE issue with non-UTF-8 characters in AJAX response (#2422)\n- Partially fixed \"empty body\" issue by showing raw body of malformed message (#2427)\n- Fix importing/sending to email address with whitespace (#2467)\n- Added XIMSS (CommuniGate) driver for Password plugin\n- Fix newly attached files are not saved in drafts w/o editing any text (#2457)\n- Added attachment upload indicator with parallel upload (#2344)\n- Use default_charset for bodies of messages without charset definition (#2446)\n- Password: added cPanel driver\n- Fix return to first page from e-mail screen (#2385)\n- Fix handling HTML comments in HTML messages (#2448)\n- Fix folder/messagelist controls alignment - icons used (#2356)\n- Fix LDAP addressbook shows 'Contact not found' error sometimes (#2438)\n- Fix cache status checking + improve cache operations performance (#2384)\n- Prevent from setting INBOX as any of special folders (#2390)\n- Fix regular expression for e-mail address (#2417)\n- Fix Received header format\n- Implemented sorting by message index - added 'index_sort' option (#2240)\n- Fix dl() use in installer (#2415)\n- Added 'ldap_debug' option\n- Fix \"Empty startup greeting\" bug (#2369)\n- Fix setting user name in 'new_user_identity' plugin (#2405)\n- Fix incorrect count of new messages in folder list when using multiple IMAP clients (#2289)\n- Fix all folders checking for new messages with disabled caching (#2399)\n- Support skins in 'archive' and 'markasjunk' plugins\n- Added 'html_editor' hook (#2353)\n- Fix DB constraint violation when populating messages cache (#2338)\n- Password: added password strength options (#2348)\n- Fix LDAP partial result warning (#1928)\n- Fix delete in message view deletes permanently with flag_for_deletion=true (#2382)\n- Use faster/secure mt_rand() (#2376)\n- Fix roundcube hangs on empty inbox with bincimapd (#2375)\n- Fix wrong headers for IE on servers without $_SERVER['HTTPS'] (#2232)\n- Force IE style headers for attachments in non-HTTPS session, 'use_https' option (#2023)\n- Check 'post_max_size' for upload max filesize (#2372)\n- Password Plugin: Fix %d inserts username instead of domain (#2371)\n- Fix rcube_mdb2::affected_rows() (#2366)\n\n## Release 0.3-stable\n\n- Fix gn and givenName should be synonymous in LDAP addressbook (#2208)\n- Add mail_domain to LDAP email entries without @ sign (#1652)\n- Fix saving empty values in LDAP contact data (#2113)\n- Fix LDAP contact update when RDN field is changed (#2119)\n- Fix LDAP attributes case sensitivity problems (#2155)\n- Fix LDAP addressbook browsing when only one directory is used (#2314)\n- Fix endless loop on error response for APPEND command (#2346)\n- Don't require date.timezone setting in installer (#2284)\n- Fix date sorting problem with Courier IMAP server (#2351)\n- Unselect pressed buttons on mouse up (#2283)\n- Don't set php_value error_log in .htaccess but mention in INSTALL (#2230)\n- Fix too small status/flag/attachment columns in Safari 4 (#2349)\n- Fix selection disabling while dragging splitter in webkit browsers (#2342)\n- Added 'new_messages' plugin hook (#2298)\n- Added 'logout_after' plugin hook (#2333)\n- Added 'message_compose' hook\n- Added 'imap_connect' hook (#2256)\n- Fix vcard_attachments plugin (#2326)\n- Updated PEAR::Auth_SASL to 1.0.3 version\n- Use sequence names only with PostgreSQL (#2310)\n- Re-designed User Preferences interface\n- Fix MS SQL DDL (#2312)\n- Fix rcube_mdb2.php: call to setCharset not implemented in mssql driver (#2311)\n- Added 'display_next' option\n- Fix rcube_mdb2::unixtimestamp for MS SQL (#2308)\n- Fix HTML washing to respect character encoding\n- Fix endless loop in iil_C_Login() with Courier IMAP (#2303)\n- Fix #messagemenu display on IE (#2299)\n- Speedup UI by using sprites for (toolbar) buttons\n- Fix charset names with X- prefix handling\n- Fix displaying of HTML messages with unknown/malformed tags (#2296)\n\n## Release 0.3-RC1\n\n- Fix import of vCard entries with params (#1857)\n- Fix HTML messages output with empty block elements (#2271)\n- Use request tokens to protect POST requests from CSRF [CVE-2009-4076, CVE-2009-4077]\n- Added hook when killing a session\n- Added hook to write_log function (#2268)\n- Performance improvements by use UID commands (#2046)\n- Fix HTML editor tabIndex setting (#2269)\n- Added 'imap_debug' and 'smtp_debug' options\n- Support strftime's format modifiers in date_* options (#1354)\n- Support %h variable in 'smtp_server' option (#2101)\n- Show SMTP errors in browser (#2233)\n- Allow WBR tag in HTML message (#2259)\n- Use spl_autoload_register() instead of __autoload (#2250)\n- Add hook for identities listing (#2257)\n- Trigger hook 'smtp_connect' when opening an SMTP connection (#2255)\n- Added config option to enforce HTTPS connections\n- Fix non-unicode characters caching in unicode database (#1209)\n- Performance improvements of messages caching\n- Fix empty Date header issue (#2229)\n- Open collapsed folders during drag & drop (#2221)\n- Fixed link text replacements (#2120)\n- Also trigger 'insertrow' events on page load (#2151)\n- No link on subject in IE browsers (#1438)\n- Fixed filename encoding according to RFC2231 (#2192)\n- Added message Edit feature (#727, #1101)\n- Fix message Etag generation for counter issues (#1996)\n- Fix messages searching on MailEnable IMAP (#2097)\n- Fixed many 'skip_deleted' issues (#2006)\n- Fixed messages list sorting on servers without SORT capability\n- Colorized signatures in plain text messages\n- Reviewed/fixed skip_deleted/read_when_deleted/flag_for_deletion options handling in UI\n- Fix displaying of big maximum upload filesize (#2205)\n- Added possibility to invert messages selection\n- After move/delete from 'show' action display next message instead of messages list (#2203)\n- Fixed problem with double quote at the end of folder name (#2200)\n- Speedup UI by using CSS sprites and etags/expires/deflate in Apache config (#1397,#2128)\n- Support UID EXPUNGE: remove only moved/deleted messages\n- Add drag cancelling with ESC key (#1036)\n- Support initial identity name from virtuser_query (#807)\n- Added message menu, removed Print and Source buttons\n- Added possibility to save message as .eml file (#2178)\n- Added 1 minute interval in autosave options (#2173)\n- Support UTF-7 encoding in messages (#2156)\n- Better support for malformed character names (#2093)\n\n## Release 0.3-BETA\n\n- Plugin API + jQuery engine\n- Added possibility to encrypt received header, option 'http_received_header_encrypt',\n  added some more logic in encrypt/decrypt functions for security\n- Fix Answered/Forwarded flag setting for messages in subfolders\n- Fix autocomplete problem with capital letters (#2122)\n- Support UUencode content encoding (#2163)\n- Minimize chance of race condition in session handling (#1260)\n- Fix session handling on non-session SQL query error (#2078)\n- Fix html editor mode setting when reopening draft message (#2158)\n- Added quick search box menu (#1010)\n- Fix wrong column sort order icons (#2149)\n- Updated TinyMCE to 3.2.3 version\n- Fix attachment names encoding when charset isn't specified in attachment part (#1483)\n- Fix message normal priority problem (#2146)\n- Fix autocomplete spinning wheel does not disappear (#2132)\n- Added log_date_format option (#2060)\n- Fix text wrapping in HTML editor after switching from plain text to HTML (#1917)\n- Fix auto-complete function hangs with plus sign (#2141)\n- Fix AJAX requests errors handler (#1503)\n- Speed up message list displaying on IE\n- Fix read/write database recognition (#2137)\n\n## Release 0.2.2\n\n- Fix quicksearchbox look in Chrome and Konqueror (#1380)\n- Fix UTF-8 byte-order mark removing (#1911)\n- Fix folders subscriptions on Konqueror (#1380)\n- Fix debug console on Konqueror and Safari\n- Fix messagelist focus issue when modifying status of selected messages (#2134)\n- Support STARTTLS in IMAP connection (#1714)\n- Fix DEL key problem in search boxes (#1923)\n- Support several e-mail addresses per user from virtuser_file (#2036)\n- Fix drag&drop with scrolling on IE (#2117)\n- Fix adding signature separator in html mode (#1768)\n- Fix opening attachment marks message as read (#2131)\n- Fix 'temp_dir' does not support relative path under Windows (#1157)\n- Fix \"Initialize Database\" button missing from installer (#2130)\n- Fix compose window doesn't fit 1024x768 window (#1807)\n- Fix service not available error when pressing back from compose dialog (#1942)\n- Fix using mail() on Windows (#2111)\n- Fix word wrapping in message-part's <PRE>s for printing (#2118)\n- Fix incorrect word wrapping in outgoing plaintext multibyte messages (#2062)\n- Fix double footer in HTML message with embedded images\n- Fix TNEF implementation bug (#2107)\n- Fix incorrect row id parsing for LDAP contacts list (#2116)\n- Fix 'mode' parameter in sqlite DSN (#2106)\n\n## Release 0.2.1\n\n- Use US-ASCII as failover when Unicode searching fails (#2097)\n- Fix errors handling in IMAP command continuations (#2097)\n- Fix FETCH result parsing for servers returning flags at the end of result (#2098)\n- Fix datetime columns defaults in mysql's DDL (#2012)\n- Fix attaching more than nine inline images (#2094)\n- Support 'UNICODE-1-1-UTF-7' alias for UTF-7 encoding (#2093)\n- Fix mime-type detection using a hard-coded map (#1735)\n- Don't return empty string if charset conversion failed (#2092)\n- Disable concurrent autocomplete query results display (#2082)\n- Fix new lines stripped from message footer (#2088)\n- Fix IE problem with mouse click autocomplete (#2080)\n- Fix html body washing on reply/forward + fix attachments handling (#2034)\n- Fix multiple recipients input parsing (#2077)\n- Fix replying to message with html attachment (#2034)\n- Use default_charset for messages without specified charset (#2027, #1484961)\n- Support non-standard \"GMT-XXXX\" literal in date header (#2074)\n- Added TNEF support to decode MS Outlook attachments (winmail.dat)\n- Fix \"value continuation\" MIME headers by adding required semicolon (#2073)\n- Fix pressing select all/unread multiple times (#2069)\n- Fix selecting all unread does not honor new messages (#2070)\n- Fix some base64 encoded attachments handling (#2071)\n- Support NGINX as IMAP backend: better BAD response handling (#2066)\n- Performance fix: don't fetch attachment parts headers twice to parse filename\n- Fix checking for recent messages on various IMAP servers (#2055)\n- Performance fix: Don't fetch quota and recent messages in \"message view\" mode\n- Fix displaying of alternative-inside-alternative messages (#2061)\n- Fix MDNSent flag checking, use arbitrary keywords (asterisk) flag (#2059)\n- Fix creation of folders with '&' sign in name\n- Fix parsing of email addresses without angle brackets (#2048)\n- Save spellcheck corrections when switching from plain to html editor (and spellchecking is on)\n- Fix large search results on server without SORT capability (#2031)\n- Get rid of preg_replace() with eval modifier and create_function usage (#2042)\n- Bring back <base> and <link> tags in HTML messages\n- Fix XSS vulnerability through background attributes [CVE-2009-0413]\n- Fix problems with backslash as IMAP hierarchy delimiter (#1116)\n- Secure vcard export by getting rid of preg's 'e' modifier use (#2045)\n- Fix authentication when submitting form with existing session (#2037)\n- Allow absolute URLs to images in HTML messages/sigs (#2029)\n- Fix message body which contains both inline attachments and emotions\n- Fix SQL query execution errors handling in rcube_mdb2 class (#1907)\n- Fix address names with '@' sign handling (#2022)\n- Improve messages display performance\n- Fix messages searching with 'to:' modifier\n\n## Release 0.2-STABLE\n\n- Fix mark popup in IE 7 (#1785)\n- Fix line-break issue when copy & paste in Firefox (#1832)\n- Fix autocomplete \"unknown server error\" (#2008)\n- Fix STARTTLS before AUTH in SMTP connection (#1415)\n- Support multiple quota values in QUOTAROOT response (#1999)\n- Only abbreviate file name for IE < 7 browsers (#1548)\n- Performance: allow setting imap root dir and delimiter before connect (#1628)\n- Fix sorting of folders with more than 2 levels (#1953)\n- Fix search results page jumps in LDAP addressbook (#1689)\n- Fix empty line before the signature in IE (#1769)\n- Fix horizontal scrollbar in preview pane on IE (#1228)\n- Add Robots meta tag in login page and installer (#1385)\n- Added 'show_images' option, removed 'addrbook_show_images' (#1977)\n- Option to check for new mails in all folders (#1053)\n- Don't set client busy when checking for new messages (#1706)\n- Allow UTF-8 folder names in config (#1960)\n- Add junk_mbox option configuration in installer (#1960)\n- Do serverside addressbook queries for autocompletion (#1925)\n- Allow setting attachment col position in 'list_cols' option\n- Allow override 'list_cols' via skin (#1958)\n- Fix 'cache' table cleanup on session destroy (#1913)\n- Increase speed of session destroy and garbage clean up\n- Fix session timeout when DB server got clock skew (#1890)\n- Fix handling of some malformed messages (#1099)\n- Speed up raw message body handling\n- Better HTML entities conversion in html2text (#1916)\n- Fix big memory consumption and speed up searching on servers without SORT capability\n- Fix setting locale to tr_TR, ku and az_AZ (#1872)\n- Use SORT for searching on servers with SORT capability\n- Added message status filter\n- Fix empty file sending (#1801)\n- Improved searching with many criteria (calling one SEARCH command)\n- Fix HTML editor initialization on IE (#1731)\n- Add warning when switching editor mode from html to plain (#1888)\n- Make identities list scrollable (#1930)\n- Fix problem with numeric folder names (#1922)\n- Added BYE response simple support to prevent from endless loops in imap.inc (#777)\n- Fix unread message unintentionally marked as read if read_when_deleted=true (#1819)\n- Remove port number from SERVER_NAME in smtp_helo_host (#1915)\n- Don't send disposition notification receipts for messages marked as 'read' (#1918)\n- Added 'keep_alive' and 'min_keep_alive' options (#1777)\n- Added option 'identities_level', removed 'multiple_identities'\n- Allow deleting identities when multiple_identities=false (#1840)\n- Added option focus_on_new_message (#1789)\n- Fix html2text class autoloading on Windows (#1904)\n- Fix html signature formatting when identity save error occurred (#1833)\n- Add feedback and set busy when moving folder (#1897)\n- Fix 'Empty' link visibility for some languages e.g. Slovak (#1889)\n- Fix messages count bar overlapping (#1703)\n- Fix adding signature in drafts compose mode (#1884)\n- Fix iil_C_Sort() to support very long and/or divided responses (#1713)\n- Fix matching case sensitivity when setting identity on reply (#1881)\n- Prefer default identity on reply\n- Fix imap searching on ISMail server (#1870)\n- Add css class for flagged messages (#1868)\n- Write username instead of id in sendmail log (#1879)\n- Fix htmlspecialchars() use for PHP version < 5.2.3 (#1877)\n- Fix js keywords escaping in json_serialize() for IE/Opera (#1874)\n- Added bin/killcache.php script (#1839)\n- Add support for SJIS, GB2312, BIG5 in rc_detect_encoding()\n- Fix vCard file encoding detection for non-UTF-8 strings (#1820)\n- Add 'skip_deleted' option in User Preferences (#1850)\n- Minimize \"inline\" javascript scripts use (#1838)\n- Fix css class setting for folders with names matching defined classes names (#1772)\n- Fix race conditions when changing mailbox\n- Fix spellchecking when switching to html editor (#1779)\n- Fix compose window width/height (#1807)\n- Allow calling msgimport.sh/msgexport.sh from any directory (#1837)\n- Localized filesize units (#1760)\n- Better handling of \"no identity\" and \"no email in identity\" situations (#1592)\n- Added 'mime_param_folding' option with possibility to choose long/non-ascii attachment names encoding e.g. to be readable in MS Outlook/OE (#1743)\n- Added \"advanced options\" feature in User Preferences\n- Fix unread counter when displaying cached massage in preview panel (#1720)\n- Fix htmleditor spellchecking on MS Windows (#1808)\n- Fix problem with non-ascii attachment names in Mail_mime (#1700, #1576)\n- Fix language autodetection (#1812)\n- Fix button label in folders management (#1816)\n- Fix collapsed folder not indicating unread msgs count of all subfolders (#1814)\n- Fix handling of apostrophes in filenames decoded according to rfc2231\n\n## Release 0.2-BETA\n\n- Made config files location configurable (#1664)\n- Reduced memory footprint when forwarding attachments (#1764)\n- Allow and use spellcheck attribute for input/textarea fields (#1545)\n- Added icons for forwarded/forwarded+replied messages (#1691)\n- Added Reply-To to forwarded emails (#1739)\n- Display progress message for folders create/delete/rename (#1774)\n- Smart Tags and NOBR tag support in html messages (#1780, #1748)\n- Redesign of the identities settings (#836)\n- Add config option to disable creation/deletion of identities (#1139)\n- Added 'sendmail_delay' option to restrict messages sending interval (#1135)\n- Added vertical splitter for folders list resizing\n- Added possibility to view all headers in message view\n- Fixed splitter drag/resize on Opera (#1626)\n- Fixed quota img height/width setting from template (#1396)\n- Refactor drag & drop functionality. Don't rely on browser events anymore (#1108)\n- Insert \"virtual\" folders in subscription list (#1333)\n- Added link to open message in new window\n- Enable export of address book contacts as vCard\n- Add feature to import contacts from vcard files (#395)\n- Respect Content-Location headers in multipart/related messages according to RFC2110 (#1464)\n- Allowed max. attachment size now indicated in compose screen (#1523)\n- Also capture backspace key in list mode (#1186)\n- Allow application/pgp parts to be displayed (#1309)\n- Correctly handle options in mailto-links (#1671)\n- Immediately save sort_col/sort_order in user prefs (#1698)\n- Truncate very long (above 50 characters) attachment filenames when displaying\n- Allow to auto-detect client language if none set (#1095)\n- Auto-detect the client timezone (user configurable)\n- Add RFC2231 header value continuations support for attachment filenames + hack for servers that not support that feature\n- Fix Reply-To header displaying (#1738)\n- Mark form buttons that provide the most obvious operation (mainaction)\n- Added option 'quota_zero_as_unlimited' (#1206)\n- Added PRE handling in html2text class (#1301)\n- Added folder hierarchy collapsing\n- Added options to use syslog instead of log file (#1389)\n- Added Logging & Debugging section in Installer\n- Fix In-Reply-To and References headers when composing saved draft message (#1718)\n- Fix html message charset conversion for charsets with underline (#1717)\n- Fix buttons status after contacts deletion (#1675)\n- Fix escaping of To: and From: fields when building message body for reply or forward in the HTML editor (#1432)\n- Use current mailbox name in template (#1690)\n- Better fix for skipping untagged responses (#1694)\n- Added pspell support patch by Kris Steinhoff (#781)\n- Enable spellchecker for HTML editor (#1589)\n- Respect spellcheck_uri in tinyMCE spellchecker (#941)\n- Case insensitive contacts searching using PostgreSQL (#1692)\n- Make default imap folders configurable for each user (#1558)\n- Save outgoing mail to selectable folder (#1324581)\n- Fix hiding of mark menu when clicking th button again (#1463)\n- Use long date format in print mode (#1643)\n- Updated TinyMCE to version 3.1.0.1\n- Re-enable autocomplete attribute for login form (#1661)\n- Check PERMANENTFLAGS before saving $MDNSent flag (#1478, #1485163)\n- Added flag column on messages list (#1220)\n- Patched Mail/MimePart.php (http://pear.php.net/bugs/bug.php?id=14232)\n- Allow trash/junk subfolders to be purged (#1568)\n- Store compose parameters in session and redirect to a unique URL\n- Fixed CRAM-MD5 authentication (#1364)\n- Fixed forwarding messages with one HTML attachment (#1103)\n- Fixed encoding of message/rfc822 attachments and image/pjpeg handling (#1439)\n- Added option to select skin in user preferences\n- Added option to configure displaying of attached images below the message body\n- Added option to display images in messages from known senders (#1204)\n- User preferences grouped in more fieldsets\n- Fix corrupted MIME headers of messages in Sent folder (#1587)\n- Fixed bug in MDB2 package: http://pear.php.net/bugs/bug.php?id=14124\n- Use keypress instead of keydown to select list's row (#1362)\n- Don't call expunge and don't remove message row after message move if flag_for_deletion is set to true (#1505)\n\n## Release 0.2-ALPHA\n\n- Added option to disable autocompletion from selected LDAP address books (#1445)\n- TLS support in LDAP connections: 'use_tls' property (#1581)\n- Fixed removing messages from search set after deleting them (#1583)\n- imap.inc: Fixed iil_C_FetchStructureString() to handle many\n  literal strings in response (#1483)\n- Support for subfolders in default/protected folders (#1250)\n- Disallowed delimiter in folder name (#1351)\n- Support \" and \\ in folder names\n- Escape \\ in login (#1214)\n- Better HTML sanitization with the DOM-based washtml script (#1276)\n- Fixed sorting of folders with non-ascii characters\n- Fixed Mysql DDL for default identities creation (#1554)\n- In Preferences added possibility to configure 'read_when_deleted',\n  'mdn_requests', 'flag_for_deletion' options\n- Made IMAP auth type configurable (#683)\n- Fixed empty values with FROM_UNIXTIME() in rcube_mdb2 (#1540)\n- Fixed attachment list on IE 6/7 (#1355)\n- Fixed JavaScript in compose.html that shows cc/bcc fields if populated\n- Make password input fields of type password in installer (#1417)\n- Don't attempt to delete cache entries if enable_caching is FALSE (#1537)\n- Optimized messages sorting on servers without sort capability (#1535)\n- Corrected message headers decoding when charset isn't specified and improved\n  support for native languages (#1536, #1534)\n- Expanded LDAP configuration options to support LDAP server writes.\n- Installer: encode special characters in DB username/password (#1529)\n- Fixed management of folders with national characters in names (#1526, #1504)\n- Fixed identities saving when using MDB2 pgsql driver (#1525)\n- Fixed BCC header reset (#1501)\n- Improved messages list performance - patch from Justin Heesemann\n- Append skin_path to images location only when it starts with '/' sign (#1398)\n- Fix IMAP response in message body when message has no body (#1479)\n- Fixed non-RFC dates formatting (#1429)\n- Fixed typo in set_charset() (#1498)\n- Decode entities when inserting HTML signature to plain text message (#1497)\n- HTML editing is now working with PHP5 updates and TinyMCE v3.0.6\n- Fixed signature loading on Windows (#1169)\n- Added language support to HTML editing (#1401)\n- Fixed remove signature when replying (#446)\n- Fixed problem with line with a space at the end (#1440)\n- Fixed `<!DOCTYPE>` tag filtering (#1066)\n- Fixed <?xml> tag filtering (#1075)\n- Added sections (fieldset+label) in Settings interface\n- Mark as read in one action with message preview (#1486)\n- Deleted redundant quota reads (#1486)\n- Added options for empty trash and expunge inbox on logout (#707)\n- Removed lines wrapping when displaying message\n- Fixed month localization\n- Changed codebase to PHP5 with autoloader\n\n## Release 0.1.1\n\n- Clear selection when selecting single item (#1461)\n- Remove hard-coded image size in skin templates (#1423)\n- Database schema improvements (dropped unnecessary indexes)\n- Fixed creating a new folder with a comma in its name (#1263)\n- Fixed sorting of messages when default mailbox is empty (#1020)\n- Improve message previewpane - less loading (#1019)\n- Fixed login form autocompletion (#1378)\n- Fixed virtuser_query option for mdb2 backend (#1409)\n- Fixed attachment restoring from Drafts when message body was empty (#1144)\n- Fixed usage of ob_gzhandler (#1390)\n- Fixed message part window in IE6 (#1211)\n- Fixed decoding of mime-encoded strings (#938)\n- Fixed some iconv/mb_string problems (#1202)\n- Correctly quote mailbox name when using in URL (#1016)\n- Fixed \"headers already sent\" errors (#1399)\n\n## Release 0.1-STABLE\n\n- Added interactive installer script\n- Fix folder adding/renaming inspired by #1349\n- Localize folder name in page title (#1338)\n- Fix code using wrong variable name (#818)\n- Allow to send mail with BCC recipients only\n- condense TinyMCE toolbar down to one line, removing table buttons (#1306)\n- Add function to mark the selected messages as read/unread (#641)\n- Also do charset decoding as suggested in RFC 2231 (fix #1022)\n- Show message count in folder list and hint when creating a subfolder\n- Distinguish ssl and tls for imap connections (#1252)\n- Added some charset aliases to fix typical mis-labelling (#1185)\n- Remember decision to display images for a certain message during session (#1310)\n- Truncate attachment filenames to 55 characters due to an IE bug (#1313)\n- Make sending of read receipts configurable\n- Respect config when localize folder names (#1280)\n- Also respect receipt and priority settings when re-opening a draft message\n- Remember search results (closes #722), patch by the_glu\n- Add Received header on outgoing mail\n- Upgrade to TinyMCE 2.1.3\n- Allow inserting image attachments into HTML messages while composing (#1179)\n- Implement Message-Disposition-Notification (Receipts)\n- Fix overriding of session vars when register_globals is on (#1255)\n- Fix bug with case-sensitive folder names (#973)\n- Don't create default folders by default\n- Fixed some potential security risks (audited by Andris)\n- Only show new messages if they match the current search (#925)\n- Switch to/from when searching in Sent folder (#1177)\n- Correctly read the References header (#1236)\n- Unset old cookie before sending a new value (#1232)\n- Correctly decode attachments when downloading them (#1235 and #1484642)\n- Suppress IE errors when clearing attachments form (#1043)\n- Log error when login fails due to auto_create_user turned off\n- Filter linked/imported CSS files (closes #844)\n- Improve message compose screen (closes #1060)\n- Select next row after removing one from list (#1063)\n\n## Release 0.1-RC2\n\n- Enable drag-&-dropping of folders to a new parent and allow to create subfolders (#637)\n- Suppress IE errors when clearing attachments form (#1043)\n- Set preferences field in user table to NULL (#1062)\n- Log error when login fails due to auto_create_user turned off\n- Filter linked/imported CSS files (closes #844)\n- Improve message compose screen (closes #1060)\n- Select next row after removing one from list (#1063)\n- Make smtp HELO/EHLO hostname configurable (#851)\n- IPv6 Compatibility (#1023), Patch #1484373\n- Unlock interface when message sending fails (#1188)\n- Eval PHP code in template includes (if configured)\n- Show message when folder is empty. Mo more static text in table (#1068)\n- Only display unread count in page title when new messages arrived\n- Fixed wrong delete button tooltip (#785)\n- Fixed charset encoding bug (#1091)\n- Applied patch for LDAP version (#1175)\n- Improved XHTML validation\n- Fix message list selection (#1174)\n- Better fix lowercased usernames (#1120)\n- Update pngbehavior Script as suggested in #1134\n- Fixed moving/deleting messages when more than 1 is selected\n- Applied patch for LDAP contacts listing by Glen Ogilvie\n- Applied patch for more address fields in LDAP contacts (#1074)\n- Add alternative for getallheaders() (fix #1146)\n- Identify mailboxes case-sensitive\n- Sort mailbox list case-insensitive (closes #1032)\n- Fix display of multipart messages from Apple Mail (closes #823)\n- Protect AJAX request from being fetched by a foreign site (XSS)\n- Make autocomplete for loginform configurable by the skin template\n- Fix compose function from address book (closes #1089)\n- Added //IGNORE to iconv call (patch #1086, closes #821)\n- Check if mbstring supports charset (#1003 and #1004)\n- Prefer iconv over mbstring (as suggested in #1004)\n- Check filesize of template includes (#1079)\n- Fixed bug with buttons not dimming/enabling properly after switching folders\n- Fixed compose window becoming unresponsive after saving a draft (#1132)\n- Re-enabled \"Back\" button in compose window now that bug #1132 is fixed\n- Fixed unresponsive interface issue when downloading attachments (#1138)\n- Lowered status message time from 5 to 3 seconds to improve responsiveness\n- Raised .htaccess upload_max_filesize from 2M to 5M to differ from default php.ini\n- Increased \"mailboxcontrols\" mail.css width from 160 to 170px to fix non-english languages (#1140)\n- Fix status message bug #1114 with regard to #1041\n- Fix address adding bug reported by David Koblas\n- Applied socket error patch by Thomas Mangin\n- Pass-by-reference workaround for PHP5 in sendmail.inc\n- Fixed buggy imap_root settings (closes #1056)\n- Prevent default events on subject links (#1071)\n- Use HTTP-POST requests for actions that change state\n\n## Release 0.1-RC1\n\n- Use global filters and bind username/ for Ldap searches (#909)\n- Hide quota display if imap server does not support it\n- Hide address groups if no LDAP servers configured\n- Add link to message subjects (closes #982)\n- Better SQL query for contact listing/search (closes #1051)\n- Fixed marking as read in preview pane (closes #1048)\n- CSS hack to display attachments correctly in IE6\n- Wrap message body text (closes #901)\n- LDAP access is back in address book (closes #864)\n- Added search function for contacts\n- New Template parsing and output encoding\n- Fixed bugs #884 and #793\n- Fixed message moving procedure (closes #1013)\n- Fixed display of multiple attachments (closes #647)\n- Fixed check for new messages (closes #1015)\n- List attachments without filename\n- New session authentication: Change sessid cookie when login, authentication with sessauth cookie is now configurable.\n  Should close bugs #774 and #1484299\n- Correctly translate mailbox names (closes #993)\n- Quote e-mail address links (closes #1007)\n- Updated PEAR::Mail_mime package\n- Accept single quotes for HTML attributes when modifying message body (thanks Jason)\n- Sanitize input for new users/identities (thanks Colin Alston)\n- Don't download HTML message parts\n- Convert HTML parts to plaintext if 'prefer_html' is off\n- Correctly parse message/rfc822 parts (closes #838)\n- Also use user_id for unique key in messages table (closes #857)\n- Hide contacts drop down on blur (closes #946)\n- Make entries in contacts drop down clickable\n- Turn off browser autocompletion on login page\n- Quote <? in text/html message parts\n- Hide border around radio buttons\n- Applied patch for attachment download by crichardson (closes #943)\n- Fixed bug in Postgres DB handling (closes #852)\n- Fixed bug of invalid calls to fetchRow() in rcube_db.inc (closes #996)\n- Fixed array_merge bug (closes #997)\n- Fixed flag for deletion in list view (closes #987)\n- Finally support semicolons as recipient separator (closes ##976)\n- Fixed message headers (subject) encoding\n- check if safe mode is on or not (closes #990)\n- Show \"no subject\" in message list if subject is missing (closes #971)\n- Solved page caching of message preview (closes #905)\n- Only use gzip compression if configured (closes #967)\n- Fixed priority selector issue (#903)\n- Fixed some CSS issues in default skin (closes #951 and #911)\n- Prevent from double quoting of numeric HTML character references (closes #978)\n- Fixed display of HTML message attachments (closes #927)\n- Applied patch for preview caching (closes #933)\n- Added error handling for attachment uploads\n- Use multibyte safe string functions where necessary (closes #798)\n- Applied security patch to validate the submitted host value (by Kees Cook)\n- Applied security patch to validate input values when deleting contacts (by Kees Cook)\n- Applied security patch that sanitizes emoticon paths when attaching them (by Kees Cook)\n- Applied a patch to more aggressively sanitize a HTML message\n- Visualize blocked images in HTML messages\n- Fixed wrong message listing when showing search results (closes #890)\n- Show remote images when opening HTML message part as attachment\n- Improve memory usage when sending mail (closes #871)\n- Mark messages as read once the preview is loaded (closes #1484132)\n- Include smtp final response in log (closes #862)\n- Corrected date string in sent message header (closes #887)\n- Correctly choose \"To\" column in sent and draft mailboxes (closes #769)\n- Changed tooltips for message browse buttons (closes #757)\n- Fixed signature delimiter character to be standard (Bug #830)\n- Fixed XSS vulnerability (Bug #877)\n- Remove newlines from mail headers (Bug #827)\n- Selection issues when moving/deleting (Bug #837)\n- Applied patch of Clement Moulin for imap host auto-selection\n- ISO-encode IMAP password for plaintext login (Bugs #792 & #723)\n- Fixed folder name encoding in subscription list (Bug #879)\n- Fixed JS errors in identity list (Bug #885)\n- Translate foldernames in folder form (closes #879)\n- Added first and last buttons to message list, address book\n  and message detail\n- Pressing Shift-Del bypasses Trash folder\n- Enable purge command for Junk folder\n- Fetch all aliases if virtuser_query is used instead\n- Re-enabled multi select of contacts (Bug #817)\n- Enable contact editing right after creation (Bug #644)\n- Correct UTF-7 to UTF-8 conversion if mbstring is not available\n- Fixed IMAP fetch of message body (Bug #819)\n- Fixed safe_mode problems (Bug #539)\n- Fixed wrong header encoding (Bug #1483976)\n- Made automatic draft saving configurable\n- Fixed JS bug when renaming folders (Bug #799)\n- Added quota display as image (by Brett Patterson)\n- Corrected creation of a message-id\n- New indentation for quoted message text\n- Improved HTML validity\n- Fixed URL character set (Ticket #616)\n- Fixed saving of contact into MySQL from LDAP query results (Ticket #681)\n- Fixed folder renaming: unsubscribe before rename (Bug #750)\n- Finalized new message parsing (+ caching)\n- Fixed wrong usage of mbstring (Bug #645)\n- Set default spelling language (Ticket #764)\n- Added support for Nox Spell Server\n- Re-built message parsing (Bug #422)\n  Now based on the message structure delivered by the IMAP server.\n- Fixed some XSS and SQL injection issues\n- Fixed charset problems with folder renaming\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   Display a mail message similar as a usual mail application does     |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n +-----------------------------------------------------------------------+\n*/\n\nclass rcmail_action_mail_viewsource extends rcmail_action\n{\n    /**\n     * Request handler.\n     *\n     * @param array $args Arguments from the previous step(s)\n     */\n    public function run($args = [])\n    {\n        $rcmail = rcmail::get_instance();\n\n        if (!empty($_GET['_save'])) {\n            $rcmail->request_security_check(rcube_utils::INPUT_GET);\n        }\n\n        ob_end_clean();\n\n        // similar code as in program/steps/mail/get.inc\n        if ($uid = rcube_utils::get_input_value('_uid', rcube_utils::INPUT_GET)) {\n            if ($pos = strpos($uid, '.')) {\n                $message = new rcube_message($uid);\n                $headers = $message->headers;\n                $part_id = substr($uid, $pos + 1);\n            }\n            else {\n                $headers = $rcmail->storage->get_message_headers($uid);\n            }\n\n            $charset = $headers->charset ?: $rcmail->config->get('default_charset');\n\n            if (!empty($_GET['_save'])) {\n                $subject  = rcube_mime::decode_header($headers->subject, $headers->charset);\n                $filename = self::filename_from_subject(mb_substr($subject, 0, 128));\n                $filename = ($filename ?: $uid)  . '.eml';\n\n                $rcmail->output->download_headers($filename, [\n                        'length'       => $headers->size,\n                        'type'         => 'text/plain',\n                        'type_charset' => $charset,\n                ]);\n            }\n            else {\n                header(\"Content-Type: text/plain; charset={$charset}\");\n            }\n\n            if (isset($part_id) && isset($message)) {\n                $message->get_part_body($part_id, empty($_GET['_save']), 0, -1);\n            }\n            else {\n                $rcmail->storage->print_raw_body($uid, empty($_GET['_save']));\n            }\n        }\n        else {\n            rcube::raise_error([\n                    'code'    => 500,\n                    'file'    => __FILE__,\n                    'line'    => __LINE__,\n                    'message' => \"Message UID $uid not found\"\n                ],\n                true, true\n            );\n        }\n\n        exit;\n    }\n\n    /**\n     * Helper function to convert message subject into filename\n     */\n    public static function filename_from_subject($str)\n    {\n        $str = preg_replace('/[:\\t\\n\\r\\0\\x0B\\/]+\\s*/', ' ', $str);\n\n        return trim($str, \" \\t\\n\\r\\0\\x0B./_\");\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n | Copyright (C) Kolab Systems AG                                        |\n | Copyright (C) 2000 Edmund Grimley Evans <edmundo@rano.org>            |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   Provide charset conversion functionality                            |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n | Author: Edmund Grimley Evans <edmundo@rano.org>                       |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Character sets conversion functionality\n *\n * @package    Framework\n * @subpackage Core\n */\nclass rcube_charset\n{\n    /**\n     * Character set aliases (some of them from HTML5 spec.)\n     *\n     * @var array\n     */\n    static public $aliases = [\n        'USASCII'       => 'WINDOWS-1252',\n        'ANSIX31101983' => 'WINDOWS-1252',\n        'ANSIX341968'   => 'WINDOWS-1252',\n        'UNKNOWN8BIT'   => 'ISO-8859-15',\n        'UNKNOWN'       => 'ISO-8859-15',\n        'USERDEFINED'   => 'ISO-8859-15',\n        'KSC56011987'   => 'EUC-KR',\n        'GB2312'        => 'GBK',\n        'GB231280'      => 'GBK',\n        'UNICODE'       => 'UTF-8',\n        'UTF7IMAP'      => 'UTF7-IMAP',\n        'TIS620'        => 'WINDOWS-874',\n        'ISO88599'      => 'WINDOWS-1254',\n        'ISO885911'     => 'WINDOWS-874',\n        'MACROMAN'      => 'MACINTOSH',\n        '77'            => 'MAC',\n        '128'           => 'SHIFT-JIS',\n        '129'           => 'CP949',\n        '130'           => 'CP1361',\n        '134'           => 'GBK',\n        '136'           => 'BIG5',\n        '161'           => 'WINDOWS-1253',\n        '162'           => 'WINDOWS-1254',\n        '163'           => 'WINDOWS-1258',\n        '177'           => 'WINDOWS-1255',\n        '178'           => 'WINDOWS-1256',\n        '186'           => 'WINDOWS-1257',\n        '204'           => 'WINDOWS-1251',\n        '222'           => 'WINDOWS-874',\n        '238'           => 'WINDOWS-1250',\n        'MS950'         => 'CP950',\n        'WINDOWS949'    => 'UHC',\n        'WINDOWS1257'   => 'ISO-8859-13',\n        'ISO2022JP'     => 'ISO-2022-JP-MS',\n    ];\n\n    /**\n     * Windows codepages\n     *\n     * @var array\n     */\n    static public $windows_codepages = [\n         37 => 'IBM037',    // IBM EBCDIC US-Canada\n        437 => 'IBM437',    // OEM United States\n        500 => 'IBM500',    // IBM EBCDIC International\n        708 => 'ASMO-708',  // Arabic (ASMO 708)\n        720 => 'DOS-720',   // Arabic (Transparent ASMO); Arabic (DOS)\n        737 => 'IBM737',    // OEM Greek (formerly 437G); Greek (DOS)\n        775 => 'IBM775',    // OEM Baltic; Baltic (DOS)\n        850 => 'IBM850',    // OEM Multilingual Latin 1; Western European (DOS)\n        852 => 'IBM852',    // OEM Latin 2; Central European (DOS)\n        855 => 'IBM855',    // OEM Cyrillic (primarily Russian)\n        857 => 'IBM857',    // OEM Turkish; Turkish (DOS)\n        858 => 'IBM00858',  // OEM Multilingual Latin 1 + Euro symbol\n        860 => 'IBM860',    // OEM Portuguese; Portuguese (DOS)\n        861 => 'IBM861',    // OEM Icelandic; Icelandic (DOS)\n        862 => 'DOS-862',   // OEM Hebrew; Hebrew (DOS)\n        863 => 'IBM863',    // OEM French Canadian; French Canadian (DOS)\n        864 => 'IBM864',    // OEM Arabic; Arabic (864)\n        865 => 'IBM865',    // OEM Nordic; Nordic (DOS)\n        866 => 'cp866',     // OEM Russian; Cyrillic (DOS)\n        869 => 'IBM869',    // OEM Modern Greek; Greek, Modern (DOS)\n        870 => 'IBM870',    // IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2\n        874 => 'windows-874',  // ANSI/OEM Thai (ISO 8859-11); Thai (Windows)\n        875 => 'cp875',     // IBM EBCDIC Greek Modern\n        932 => 'shift_jis', // ANSI/OEM Japanese; Japanese (Shift-JIS)\n        936 => 'gb2312',    // ANSI/OEM Simplified Chinese (PRC, Singapore); Chinese Simplified (GB2312)\n        950 => 'big5',      // ANSI/OEM Traditional Chinese (Taiwan; Hong Kong SAR, PRC); Chinese Traditional (Big5)\n        1026 => 'IBM1026',      // IBM EBCDIC Turkish (Latin 5)\n        1047 => 'IBM01047',     // IBM EBCDIC Latin 1/Open System\n        1140 => 'IBM01140',     // IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)\n        1141 => 'IBM01141',     // IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)\n        1142 => 'IBM01142',     // IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)\n        1143 => 'IBM01143',     // IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)\n        1144 => 'IBM01144',     // IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)\n        1145 => 'IBM01145',     // IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)\n        1146 => 'IBM01146',     // IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)\n        1147 => 'IBM01147',     // IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)\n        1148 => 'IBM01148',     // IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)\n        1149 => 'IBM01149',     // IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)\n        1200 => 'UTF-16',       // Unicode UTF-16, little endian byte order (BMP of ISO 10646); available only to managed applications\n        1201 => 'UTF-16BE',     // Unicode UTF-16, big endian byte order; available only to managed applications\n        1250 => 'windows-1250', // ANSI Central European; Central European (Windows)\n        1251 => 'windows-1251', // ANSI Cyrillic; Cyrillic (Windows)\n        1252 => 'windows-1252', // ANSI Latin 1; Western European (Windows)\n        1253 => 'windows-1253', // ANSI Greek; Greek (Windows)\n        1254 => 'windows-1254', // ANSI Turkish; Turkish (Windows)\n        1255 => 'windows-1255', // ANSI Hebrew; Hebrew (Windows)\n        1256 => 'windows-1256', // ANSI Arabic; Arabic (Windows)\n        1257 => 'windows-1257', // ANSI Baltic; Baltic (Windows)\n        1258 => 'windows-1258', // ANSI/OEM Vietnamese; Vietnamese (Windows)\n        10000 => 'macintosh',   // MAC Roman; Western European (Mac)\n        12000 => 'UTF-32',      // Unicode UTF-32, little endian byte order; available only to managed applications\n        12001 => 'UTF-32BE',    // Unicode UTF-32, big endian byte order; available only to managed applications\n        20127 => 'US-ASCII',    // US-ASCII (7-bit)\n        20273 => 'IBM273',      // IBM EBCDIC Germany\n        20277 => 'IBM277',      // IBM EBCDIC Denmark-Norway\n        20278 => 'IBM278',      // IBM EBCDIC Finland-Sweden\n        20280 => 'IBM280',      // IBM EBCDIC Italy\n        20284 => 'IBM284',      // IBM EBCDIC Latin America-Spain\n        20285 => 'IBM285',      // IBM EBCDIC United Kingdom\n        20290 => 'IBM290',      // IBM EBCDIC Japanese Katakana Extended\n        20297 => 'IBM297',      // IBM EBCDIC France\n        20420 => 'IBM420',      // IBM EBCDIC Arabic\n        20423 => 'IBM423',      // IBM EBCDIC Greek\n        20424 => 'IBM424',      // IBM EBCDIC Hebrew\n        20838 => 'IBM-Thai',    // IBM EBCDIC Thai\n        20866 => 'koi8-r',      // Russian (KOI8-R); Cyrillic (KOI8-R)\n        20871 => 'IBM871',      // IBM EBCDIC Icelandic\n        20880 => 'IBM880',      // IBM EBCDIC Cyrillic Russian\n        20905 => 'IBM905',      // IBM EBCDIC Turkish\n        20924 => 'IBM00924',    // IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)\n        20932 => 'EUC-JP',      // Japanese (JIS 0208-1990 and 0212-1990)\n        20936 => 'cp20936',     // Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)\n        20949 => 'cp20949',     // Korean Wansung\n        21025 => 'cp1025',      // IBM EBCDIC Cyrillic Serbian-Bulgarian\n        21866 => 'koi8-u',      // Ukrainian (KOI8-U); Cyrillic (KOI8-U)\n        28591 => 'iso-8859-1',  // ISO 8859-1 Latin 1; Western European (ISO)\n        28592 => 'iso-8859-2',  // ISO 8859-2 Central European; Central European (ISO)\n        28593 => 'iso-8859-3',  // ISO 8859-3 Latin 3\n        28594 => 'iso-8859-4',  // ISO 8859-4 Baltic\n        28595 => 'iso-8859-5',  // ISO 8859-5 Cyrillic\n        28596 => 'iso-8859-6',  // ISO 8859-6 Arabic\n        28597 => 'iso-8859-7',  // ISO 8859-7 Greek\n        28598 => 'iso-8859-8',  // ISO 8859-8 Hebrew; Hebrew (ISO-Visual)\n        28599 => 'iso-8859-9',  // ISO 8859-9 Turkish\n        28603 => 'iso-8859-13', // ISO 8859-13 Estonian\n        28605 => 'iso-8859-15', // ISO 8859-15 Latin 9\n        38598 => 'iso-8859-8-i', // ISO 8859-8 Hebrew; Hebrew (ISO-Logical)\n        50220 => 'iso-2022-jp', // ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)\n        50221 => 'csISO2022JP', // ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)\n        50222 => 'iso-2022-jp', // ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)\n        50225 => 'iso-2022-kr', // ISO 2022 Korean\n        51932 => 'EUC-JP',      // EUC Japanese\n        51936 => 'EUC-CN',      // EUC Simplified Chinese; Chinese Simplified (EUC)\n        51949 => 'EUC-KR',      // EUC Korean\n        52936 => 'hz-gb-2312',  // HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)\n        54936 => 'GB18030',     // Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)\n        65000 => 'UTF-7',\n        65001 => 'UTF-8',\n    ];\n\n    /**\n     * Parse and validate charset name string.\n     * Sometimes charset string is malformed, there are also charset aliases,\n     * but we need strict names for charset conversion (specially utf8 class)\n     *\n     * @param string $input Input charset name\n     *\n     * @return string The validated charset name\n     */\n    public static function parse_charset($input)\n    {\n        static $charsets = [];\n\n        $charset = strtoupper($input);\n\n        if (isset($charsets[$input])) {\n            return $charsets[$input];\n        }\n\n        $charset = preg_replace([\n            '/^[^0-9A-Z]+/',    // e.g. _ISO-8859-JP$SIO\n            '/\\$.*$/',          // e.g. _ISO-8859-JP$SIO\n            '/UNICODE-1-1-*/',  // RFC1641/1642\n            '/^X-/',            // X- prefix (e.g. X-ROMAN8 => ROMAN8)\n            '/\\*.*$/'           // lang code according to RFC 2231.5\n        ], '', $charset);\n\n        if ($charset == 'BINARY') {\n            return $charsets[$input] = null;\n        }\n\n        // allow A-Z and 0-9 only\n        $str = preg_replace('/[^A-Z0-9]/', '', $charset);\n\n        $result = $charset;\n\n        if (isset(self::$aliases[$str])) {\n            $result = self::$aliases[$str];\n        }\n        // UTF\n        else if (preg_match('/U[A-Z][A-Z](7|8|16|32)(BE|LE)*/', $str, $m)) {\n            $result = 'UTF-' . $m[1] . (!empty($m[2]) ? $m[2] : '');\n        }\n        // ISO-8859\n        else if (preg_match('/ISO8859([0-9]{0,2})/', $str, $m)) {\n            $iso = 'ISO-8859-' . ($m[1] ?: 1);\n            // some clients sends windows-1252 text as latin1,\n            // it is safe to use windows-1252 for all latin1\n            $result = $iso == 'ISO-8859-1' ? 'WINDOWS-1252' : $iso;\n        }\n        // handle broken charset names e.g. WINDOWS-1250HTTP-EQUIVCONTENT-TYPE\n        else if (preg_match('/(WIN|WINDOWS)([0-9]+)/', $str, $m)) {\n            $result = 'WINDOWS-' . $m[2];\n        }\n        // LATIN\n        else if (preg_match('/LATIN(.*)/', $str, $m)) {\n            $aliases = ['2' => 2, '3' => 3, '4' => 4, '5' => 9, '6' => 10,\n                '7' => 13, '8' => 14, '9' => 15, '10' => 16,\n                'ARABIC' => 6, 'CYRILLIC' => 5, 'GREEK' => 7, 'GREEK1' => 7, 'HEBREW' => 8\n            ];\n\n            // some clients sends windows-1252 text as latin1,\n            // it is safe to use windows-1252 for all latin1\n            if ($m[1] == 1) {\n                $result = 'WINDOWS-1252';\n            }\n            // we need ISO labels\n            else if (!empty($aliases[$m[1]])) {\n                $result = 'ISO-8859-'.$aliases[$m[1]];\n            }\n        }\n\n        $charsets[$input] = $result;\n\n        return $result;\n    }\n\n    /**\n     * Convert a string from one charset to another.\n     *\n     * @param string $str  Input string\n     * @param string $from Suspected charset of the input string\n     * @param string $to   Target charset to convert to; defaults to RCUBE_CHARSET\n     *\n     * @return string Converted string\n     */\n    public static function convert($str, $from, $to = null)\n    {\n        static $iconv_options;\n\n        $to   = empty($to) ? RCUBE_CHARSET : self::parse_charset($to);\n        $from = self::parse_charset($from);\n\n        // It is a common case when UTF-16 charset is used with US-ASCII content (#1488654)\n        // In that case we can just skip the conversion (use UTF-8)\n        if ($from == 'UTF-16' && !preg_match('/[^\\x00-\\x7F]/', $str)) {\n            $from = 'UTF-8';\n        }\n\n        if ($from == $to || empty($str) || empty($from)) {\n            return $str;\n        }\n\n        $out = false;\n        $error_handler = function() { throw new \\Exception(); };\n\n        // Ignore invalid characters\n        $mbstring_sc = mb_substitute_character();\n        mb_substitute_character('none');\n\n        // If mbstring reports an illegal character in input via E_WARNING.\n        // FIXME: Is this really true with substitute character 'none'?\n        // A warning is thrown in PHP<8 also on unsupported encoding, in PHP>=8 ValueError\n        // is thrown instead (therefore we catch Throwable below)\n        set_error_handler($error_handler, E_WARNING);\n\n        try {\n            $out = mb_convert_encoding($str, $to, $from);\n        }\n        catch (Throwable $e) {\n            $out = false;\n        }\n        catch (Exception $e) {\n            $out = false;\n        }\n\n        restore_error_handler();\n        mb_substitute_character($mbstring_sc);\n\n        if ($out !== false) {\n            return $out;\n        }\n\n        if ($iconv_options === null) {\n            if (function_exists('iconv')) {\n                // ignore characters not available in output charset\n                $iconv_options = '//IGNORE';\n                if (iconv('', $iconv_options, '') === false) {\n                    // iconv implementation does not support options\n                    $iconv_options = '';\n                }\n            }\n            else {\n                $iconv_options = false;\n            }\n        }\n\n        // Fallback to iconv module, it is slower, but supports much more charsets than mbstring\n        if ($iconv_options !== false && $from != 'UTF7-IMAP' && $to != 'UTF7-IMAP'\n            && $from !== 'ISO-2022-JP'\n        ) {\n            // If iconv reports an illegal character in input it means that input string\n            // has been truncated. It's reported as E_NOTICE.\n            // PHP8 will also throw E_WARNING on unsupported encoding.\n            set_error_handler($error_handler, E_NOTICE | E_WARNING);\n\n            try {\n                $out = iconv($from, $to . $iconv_options, $str);\n            }\n            catch (Throwable $e) {\n                $out = false;\n            }\n            catch (Exception $e) {\n                $out = false;\n            }\n\n            restore_error_handler();\n\n            if ($out !== false) {\n                return $out;\n            }\n        }\n\n        // return the original string\n        return $str;\n    }\n\n    /**\n     * Converts string from standard UTF-7 (RFC 2152) to UTF-8.\n     *\n     * @param string $str Input string (UTF-7)\n     *\n     * @return string Converted string (UTF-8)\n     * @deprecated use self::convert()\n     */\n    public static function utf7_to_utf8($str)\n    {\n        return self::convert($str, 'UTF-7', 'UTF-8');\n    }\n\n    /**\n     * Converts string from UTF-16 to UTF-8 (helper for utf-7 to utf-8 conversion)\n     *\n     * @param string $str Input string\n     *\n     * @return string The converted string\n     * @deprecated use self::convert()\n     */\n    public static function utf16_to_utf8($str)\n    {\n        return self::convert($str, 'UTF-16BE', 'UTF-8');\n    }\n\n    /**\n     * Convert the data ($str) from RFC 2060's UTF-7 to UTF-8.\n     * If input data is invalid, return the original input string.\n     * RFC 2060 obviously intends the encoding to be unique (see\n     * point 5 in section 5.1.3), so we reject any non-canonical\n     * form, such as &ACY- (instead of &-) or &AMA-&AMA- (instead\n     * of &AMAAwA-).\n     *\n     * @param string $str Input string (UTF7-IMAP)\n     *\n     * @return string Output string (UTF-8)\n     * @deprecated use self::convert()\n     */\n    public static function utf7imap_to_utf8($str)\n    {\n        return self::convert($str, 'UTF7-IMAP', 'UTF-8');\n    }\n\n    /**\n     * Convert the data ($str) from UTF-8 to RFC 2060's UTF-7.\n     * Unicode characters above U+FFFF are replaced by U+FFFE.\n     * If input data is invalid, return an empty string.\n     *\n     * @param string $str Input string (UTF-8)\n     *\n     * @return string Output string (UTF7-IMAP)\n     * @deprecated use self::convert()\n     */\n    public static function utf8_to_utf7imap($str)\n    {\n        return self::convert($str, 'UTF-8', 'UTF7-IMAP');\n    }\n\n    /**\n     * A method to guess character set of a string.\n     *\n     * @param string $string   String\n     * @param string $failover Default result for failover\n     * @param string $language User language\n     *\n     * @return string Charset name\n     */\n    public static function detect($string, $failover = null, $language = null)\n    {\n        if (substr($string, 0, 4) == \"\\0\\0\\xFE\\xFF\") return 'UTF-32BE';  // Big Endian\n        if (substr($string, 0, 4) == \"\\xFF\\xFE\\0\\0\") return 'UTF-32LE';  // Little Endian\n        if (substr($string, 0, 2) == \"\\xFE\\xFF\")     return 'UTF-16BE';  // Big Endian\n        if (substr($string, 0, 2) == \"\\xFF\\xFE\")     return 'UTF-16LE';  // Little Endian\n        if (substr($string, 0, 3) == \"\\xEF\\xBB\\xBF\") return 'UTF-8';\n\n        // heuristics\n        if (strlen($string) >= 4) {\n            if ($string[0] == \"\\0\" && $string[1] == \"\\0\" && $string[2] == \"\\0\" && $string[3] != \"\\0\") return 'UTF-32BE';\n            if ($string[0] != \"\\0\" && $string[1] == \"\\0\" && $string[2] == \"\\0\" && $string[3] == \"\\0\") return 'UTF-32LE';\n            if ($string[0] == \"\\0\" && $string[1] != \"\\0\" && $string[2] == \"\\0\" && $string[3] != \"\\0\") return 'UTF-16BE';\n            if ($string[0] != \"\\0\" && $string[1] == \"\\0\" && $string[2] != \"\\0\" && $string[3] == \"\\0\") return 'UTF-16LE';\n        }\n\n        if (empty($language)) {\n            $rcube    = rcube::get_instance();\n            $language = $rcube->get_user_language();\n        }\n\n        // Prioritize charsets according to current language (#1485669)\n        $prio = null;\n        switch ($language) {\n        case 'ja_JP':\n            $prio = ['ISO-2022-JP', 'JIS', 'UTF-8', 'EUC-JP', 'eucJP-win', 'SJIS', 'SJIS-win'];\n            break;\n\n        case 'zh_CN':\n        case 'zh_TW':\n            $prio = ['UTF-8', 'BIG-5', 'GB2312', 'EUC-TW'];\n            break;\n\n        case 'ko_KR':\n            $prio = ['UTF-8', 'EUC-KR', 'ISO-2022-KR'];\n            break;\n\n        case 'ru_RU':\n            $prio = ['UTF-8', 'WINDOWS-1251', 'KOI8-R'];\n            break;\n\n        case 'tr_TR':\n            $prio = ['UTF-8', 'ISO-8859-9', 'WINDOWS-1254'];\n            break;\n        }\n\n        // mb_detect_encoding() is not reliable for some charsets (#1490135)\n        // use mb_check_encoding() to make charset priority lists really working\n        if (!empty($prio) && function_exists('mb_check_encoding')) {\n            foreach ($prio as $encoding) {\n                if (mb_check_encoding($string, $encoding)) {\n                    return $encoding;\n                }\n            }\n        }\n\n        if (function_exists('mb_detect_encoding')) {\n            if (empty($prio)) {\n                $prio = ['UTF-8', 'SJIS', 'GB2312',\n                    'ISO-8859-1', 'ISO-8859-2', 'ISO-8859-3', 'ISO-8859-4',\n                    'ISO-8859-5', 'ISO-8859-6', 'ISO-8859-7', 'ISO-8859-8', 'ISO-8859-9',\n                    'ISO-8859-10', 'ISO-8859-13', 'ISO-8859-14', 'ISO-8859-15', 'ISO-8859-16',\n                    'WINDOWS-1252', 'WINDOWS-1251', 'EUC-JP', 'EUC-TW', 'KOI8-R', 'BIG-5',\n                    'ISO-2022-KR', 'ISO-2022-JP',\n                ];\n            }\n\n            $encodings = array_unique(array_merge($prio, mb_list_encodings()));\n\n            if ($encoding = mb_detect_encoding($string, $encodings)) {\n                return $encoding;\n            }\n        }\n\n        // No match, check for UTF-8\n        // from http://w3.org/International/questions/qa-forms-utf-8.html\n        if (preg_match('/\\A(\n            [\\x09\\x0A\\x0D\\x20-\\x7E]\n            | [\\xC2-\\xDF][\\x80-\\xBF]\n            | \\xE0[\\xA0-\\xBF][\\x80-\\xBF]\n            | [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}\n            | \\xED[\\x80-\\x9F][\\x80-\\xBF]\n            | \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}\n            | [\\xF1-\\xF3][\\x80-\\xBF]{3}\n            | \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}\n            )*\\z/xs', substr($string, 0, 2048))\n        ) {\n            return 'UTF-8';\n        }\n\n        return $failover;\n    }\n\n    /**\n     * Removes non-unicode characters from input.\n     * If the input is an array, both values and keys will be cleaned up.\n     *\n     * @param mixed $input String or array.\n     *\n     * @return mixed String or array\n     */\n    public static function clean($input)\n    {\n        // handle input of type array\n        if (is_array($input)) {\n            foreach (array_keys($input) as $key) {\n                $k = is_string($key) ? self::clean($key) : $key;\n                $v = self::clean($input[$key]);\n\n                if ($k !== $key) {\n                    unset($input[$key]);\n                    if (!array_key_exists($k, $input)) {\n                        $input[$k] = $v;\n                    }\n                }\n                else {\n                    $input[$k] = $v;\n                }\n            }\n            return $input;\n        }\n\n        if (!is_string($input) || $input == '') {\n            return $input;\n        }\n\n        $msch = mb_substitute_character();\n        mb_substitute_character('none');\n        $res = mb_convert_encoding($input, 'UTF-8', 'UTF-8');\n        mb_substitute_character($msch);\n\n        return $res;\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n | Copyright (C) Kolab Systems AG                                        |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   IMAP Storage Engine                                                 |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Interface class for accessing an IMAP server\n *\n * @package    Framework\n * @subpackage Storage\n */\nclass rcube_imap extends rcube_storage\n{\n    /**\n     * Instance of rcube_imap_generic\n     *\n     * @var rcube_imap_generic\n     */\n    public $conn;\n\n    /**\n     * Instance of rcube_imap_cache\n     *\n     * @var rcube_imap_cache\n     */\n    protected $mcache;\n\n    /**\n     * Instance of rcube_cache\n     *\n     * @var rcube_cache\n     */\n    protected $cache;\n\n    protected $plugins;\n    protected $delimiter;\n    protected $namespace;\n    protected $struct_charset;\n    protected $search_set;\n    protected $search_string     = '';\n    protected $search_charset    = '';\n    protected $search_sort_field = '';\n    protected $search_threads    = false;\n    protected $search_sorted     = false;\n    protected $sort_field        = '';\n    protected $sort_order        = 'DESC';\n    protected $options           = ['auth_type' => 'check', 'skip_deleted' => false];\n    protected $caching           = false;\n    protected $messages_caching  = false;\n    protected $threading         = false;\n    protected $connect_done      = false;\n    protected $list_excludes     = [];\n    protected $list_root;\n    protected $msg_uid;\n    protected $sort_folder_collator;\n\n\n    /**\n     * Object constructor.\n     */\n    public function __construct()\n    {\n        $this->conn    = new rcube_imap_generic();\n        $this->plugins = rcube::get_instance()->plugins;\n\n        // Set namespace and delimiter from session,\n        // so some methods would work before connection\n        if (isset($_SESSION['imap_namespace'])) {\n            $this->namespace = $_SESSION['imap_namespace'];\n        }\n        if (isset($_SESSION['imap_delimiter'])) {\n            $this->delimiter = $_SESSION['imap_delimiter'];\n        }\n        if (!empty($_SESSION['imap_list_conf'])) {\n            list($this->list_root, $this->list_excludes) = $_SESSION['imap_list_conf'];\n        }\n    }\n\n    /**\n     * Magic getter for backward compat.\n     *\n     * @deprecated\n     */\n    public function __get($name)\n    {\n        if (isset($this->{$name})) {\n            return $this->{$name};\n        }\n    }\n\n    /**\n     * Connect to an IMAP server\n     *\n     * @param string  $host    Host to connect\n     * @param string  $user    Username for IMAP account\n     * @param string  $pass    Password for IMAP account\n     * @param integer $port    Port to connect to\n     * @param string  $use_ssl SSL schema (either ssl or tls) or null if plain connection\n     *\n     * @return bool True on success, False on failure\n     */\n    public function connect($host, $user, $pass, $port = 143, $use_ssl = null)\n    {\n        // check for OpenSSL support in PHP build\n        if ($use_ssl && extension_loaded('openssl')) {\n            $this->options['ssl_mode'] = $use_ssl == 'imaps' ? 'ssl' : $use_ssl;\n        }\n        else if ($use_ssl) {\n            rcube::raise_error([\n                    'code' => 403, 'type' => 'imap',\n                    'file' => __FILE__, 'line' => __LINE__,\n                    'message' => \"OpenSSL not available\"\n                ], true, false);\n\n            $port = 143;\n        }\n\n        $this->options['port'] = $port;\n\n        if (!empty($this->options['debug'])) {\n            $this->set_debug(true);\n\n            $this->options['ident'] = [\n                'name'    => 'Roundcube',\n                'version' => RCUBE_VERSION,\n                'php'     => PHP_VERSION,\n                'os'      => PHP_OS,\n                'command' => $_SERVER['REQUEST_URI'],\n            ];\n        }\n\n        $attempt = 0;\n        do {\n            $data = [\n                'host'    => $host,\n                'user'    => $user,\n                'attempt' => ++$attempt,\n                'retry'   => false\n            ];\n\n            $data = $this->plugins->exec_hook('storage_connect', array_merge($this->options, $data));\n\n            if ($attempt > 1 && !$data['retry']) {\n                $break;\n            }\n\n            if (!empty($data['pass'])) {\n                $pass = $data['pass'];\n            }\n\n            // Handle per-host socket options\n            if (isset($data['socket_options'])) {\n                rcube_utils::parse_socket_options($data['socket_options'], $data['host']);\n            }\n\n            $this->conn->connect($data['host'], $data['user'], $pass, $data);\n        } while(!$this->conn->connected() && $data['retry']);\n\n        $config = [\n            'host'     => $data['host'],\n            'user'     => $data['user'],\n            'password' => $pass,\n            'port'     => $port,\n            'ssl'      => $use_ssl,\n        ];\n\n        $this->options      = array_merge($this->options, $config);\n        $this->connect_done = true;\n\n        if ($this->conn->connected()) {\n            // check for session identifier\n            $session = null;\n            if (preg_match('/\\s+SESSIONID=([^=\\s]+)/', $this->conn->result, $m)) {\n                $session = $m[1];\n            }\n\n            // get namespace and delimiter\n            $this->set_env();\n\n            // trigger post-connect hook\n            $this->plugins->exec_hook('storage_connected', [\n                    'host' => $host, 'user' => $user, 'session' => $session\n            ]);\n\n            return true;\n        }\n        // write error log\n        else if ($this->conn->error) {\n            if ($pass && $user) {\n                $message = sprintf(\"Login failed for %s against %s from %s. %s\",\n                    $user, $host, rcube_utils::remote_ip(), $this->conn->error);\n\n                rcube::raise_error([\n                        'code' => 403, 'type' => 'imap',\n                        'file' => __FILE__, 'line' => __LINE__,\n                        'message' => $message\n                    ], true, false);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Close IMAP connection.\n     * Usually done on script shutdown\n     */\n    public function close()\n    {\n        $this->connect_done = false;\n        $this->conn->closeConnection();\n\n        if ($this->mcache) {\n            $this->mcache->close();\n        }\n    }\n\n    /**\n     * Check connection state, connect if not connected.\n     *\n     * @return bool Connection state.\n     */\n    public function check_connection()\n    {\n        // Establish connection if it wasn't done yet\n        if (!$this->connect_done && !empty($this->options['user'])) {\n            return $this->connect(\n                $this->options['host'],\n                $this->options['user'],\n                $this->options['password'],\n                $this->options['port'],\n                $this->options['ssl']\n            );\n        }\n\n        return $this->is_connected();\n    }\n\n    /**\n     * Checks IMAP connection.\n     *\n     * @return bool True on success, False on failure\n     */\n    public function is_connected()\n    {\n        return $this->conn->connected();\n    }\n\n    /**\n     * Returns code of last error\n     *\n     * @return int Error code\n     */\n    public function get_error_code()\n    {\n        return $this->conn->errornum;\n    }\n\n    /**\n     * Returns text of last error\n     *\n     * @return string Error string\n     */\n    public function get_error_str()\n    {\n        return $this->conn->error;\n    }\n\n    /**\n     * Returns code of last command response\n     *\n     * @return int Response code\n     */\n    public function get_response_code()\n    {\n        switch ($this->conn->resultcode) {\n            case 'NOPERM':\n                return self::NOPERM;\n            case 'READ-ONLY':\n                return self::READONLY;\n            case 'TRYCREATE':\n                return self::TRYCREATE;\n            case 'INUSE':\n                return self::INUSE;\n            case 'OVERQUOTA':\n                return self::OVERQUOTA;\n            case 'ALREADYEXISTS':\n                return self::ALREADYEXISTS;\n            case 'NONEXISTENT':\n                return self::NONEXISTENT;\n            case 'CONTACTADMIN':\n                return self::CONTACTADMIN;\n            default:\n                return self::UNKNOWN;\n        }\n    }\n\n    /**\n     * Activate/deactivate debug mode\n     *\n     * @param bool $dbg True if IMAP conversation should be logged\n     */\n    public function set_debug($dbg = true)\n    {\n        $this->options['debug'] = $dbg;\n        $this->conn->setDebug($dbg, [$this, 'debug_handler']);\n    }\n\n    /**\n     * Set internal folder reference.\n     * All operations will be performed on this folder.\n     *\n     * @param string $folder Folder name\n     */\n    public function set_folder($folder)\n    {\n        $this->folder = $folder;\n    }\n\n    /**\n     * Save a search result for future message listing methods\n     *\n     * @param array $set Search set, result from rcube_imap::get_search_set():\n     *                   0 - searching criteria, string\n     *                   1 - search result, rcube_result_index|rcube_result_thread\n     *                   2 - searching character set, string\n     *                   3 - sorting field, string\n     *                   4 - true if sorted, bool\n     */\n    public function set_search_set($set)\n    {\n        $set = (array) $set;\n\n        $this->search_string     = isset($set[0]) ? $set[0] : null;\n        $this->search_set        = isset($set[1]) ? $set[1] : null;\n        $this->search_charset    = isset($set[2]) ? $set[2] : null;\n        $this->search_sort_field = isset($set[3]) ? $set[3] : null;\n        $this->search_sorted     = isset($set[4]) ? $set[4] : null;\n        $this->search_threads    = is_a($this->search_set, 'rcube_result_thread');\n\n        if (is_a($this->search_set, 'rcube_result_multifolder')) {\n            $this->set_threading(false);\n        }\n    }\n\n    /**\n     * Return the saved search set as hash array\n     *\n     * @return array|null Search set\n     */\n    public function get_search_set()\n    {\n        if (empty($this->search_set)) {\n            return null;\n        }\n\n        return [\n            $this->search_string,\n            $this->search_set,\n            $this->search_charset,\n            $this->search_sort_field,\n            $this->search_sorted,\n        ];\n    }\n\n    /**\n     * Returns the IMAP server's capability.\n     *\n     * @param string $cap Capability name\n     *\n     * @return mixed Capability value or TRUE if supported, FALSE if not\n     */\n    public function get_capability($cap)\n    {\n        $cap      = strtoupper($cap);\n        $sess_key = \"STORAGE_$cap\";\n\n        if (!isset($_SESSION[$sess_key])) {\n            if (!$this->check_connection()) {\n                return false;\n            }\n\n            if ($cap == rcube_storage::DUAL_USE_FOLDERS) {\n                $_SESSION[$sess_key] = $this->detect_dual_use_folders();\n            }\n            else {\n                $_SESSION[$sess_key] = $this->conn->getCapability($cap);\n            }\n        }\n\n        return $_SESSION[$sess_key];\n    }\n\n    /**\n     * Checks the PERMANENTFLAGS capability of the current folder\n     * and returns true if the given flag is supported by the IMAP server\n     *\n     * @param string $flag Permanentflag name\n     *\n     * @return bool True if this flag is supported\n     */\n    public function check_permflag($flag)\n    {\n        $flag       = strtoupper($flag);\n        $perm_flags = $this->get_permflags($this->folder);\n        $imap_flag  = $this->conn->flags[$flag];\n\n        return $imap_flag && !empty($perm_flags) && in_array_nocase($imap_flag, $perm_flags);\n    }\n\n    /**\n     * Returns PERMANENTFLAGS of the specified folder\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Flags\n     */\n    public function get_permflags($folder)\n    {\n        if (!strlen($folder)) {\n            return [];\n        }\n\n        if (!$this->check_connection()) {\n            return [];\n        }\n\n        if ($this->conn->select($folder)) {\n            $permflags = $this->conn->data['PERMANENTFLAGS'];\n        }\n        else {\n            return [];\n        }\n\n        if (!isset($permflags) || !is_array($permflags)) {\n            $permflags = [];\n        }\n\n        return $permflags;\n    }\n\n    /**\n     * Returns the delimiter that is used by the IMAP server for folder separation\n     *\n     * @return string Delimiter string\n     */\n    public function get_hierarchy_delimiter()\n    {\n        return $this->delimiter;\n    }\n\n    /**\n     * Get namespace\n     *\n     * @param string $name Namespace array index: personal, other, shared, prefix\n     *\n     * @return array Namespace data\n     */\n    public function get_namespace($name = null)\n    {\n        $ns = $this->namespace;\n\n        if ($name) {\n            // an alias for BC\n            if ($name == 'prefix') {\n                $name = 'prefix_in';\n            }\n\n            return isset($ns[$name]) ? $ns[$name] : null;\n        }\n\n        unset($ns['prefix_in'], $ns['prefix_out']);\n\n        return $ns;\n    }\n\n    /**\n     * Sets delimiter and namespaces\n     */\n    protected function set_env()\n    {\n        if ($this->delimiter !== null && $this->namespace !== null) {\n            return;\n        }\n\n        $config         = rcube::get_instance()->config;\n        $imap_personal  = $config->get('imap_ns_personal');\n        $imap_other     = $config->get('imap_ns_other');\n        $imap_shared    = $config->get('imap_ns_shared');\n        $imap_delimiter = $config->get('imap_delimiter');\n\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        $ns = $this->conn->getNamespace();\n\n        // Set namespaces (NAMESPACE supported)\n        if (is_array($ns)) {\n            $this->namespace = $ns;\n        }\n        else {\n            $this->namespace = [\n                'personal' => null,\n                'other'    => null,\n                'shared'   => null,\n            ];\n        }\n\n        if ($imap_delimiter) {\n            $this->delimiter = $imap_delimiter;\n        }\n        if (empty($this->delimiter) && !empty($this->namespace['personal'][0][1])) {\n            $this->delimiter = $this->namespace['personal'][0][1];\n        }\n        if (empty($this->delimiter)) {\n            $this->delimiter = $this->conn->getHierarchyDelimiter();\n        }\n        if (empty($this->delimiter)) {\n            $this->delimiter = '/';\n        }\n\n        $this->list_root     = null;\n        $this->list_excludes = [];\n\n        // Overwrite namespaces\n        if ($imap_personal !== null) {\n            $this->namespace['personal'] = null;\n            foreach ((array) $imap_personal as $dir) {\n                $this->namespace['personal'][] = [$dir, $this->delimiter];\n            }\n        }\n\n        if ($imap_other === false) {\n            foreach ((array) $this->namespace['other'] as $dir) {\n                if (is_array($dir) && !empty($dir[0])) {\n                    $this->list_excludes[] = $dir[0];\n                }\n            }\n\n            $this->namespace['other'] = null;\n        }\n        else if ($imap_other !== null) {\n            $this->namespace['other'] = null;\n            foreach ((array) $imap_other as $dir) {\n                if ($dir) {\n                    $this->namespace['other'][] = [$dir, $this->delimiter];\n                }\n            }\n        }\n\n        if ($imap_shared === false) {\n            foreach ((array) $this->namespace['shared'] as $dir) {\n                if (is_array($dir) && !empty($dir[0])) {\n                    $this->list_excludes[] = $dir[0];\n                }\n            }\n\n            $this->namespace['shared'] = null;\n        }\n        else if ($imap_shared !== null) {\n            $this->namespace['shared'] = null;\n            foreach ((array) $imap_shared as $dir) {\n                if ($dir) {\n                    $this->namespace['shared'][] = [$dir, $this->delimiter];\n                }\n            }\n        }\n\n        // Performance optimization for case where we have no shared/other namespace\n        // and personal namespace has one prefix (#5073)\n        // In such a case we can tell the server to return only content of the\n        // specified folder in LIST/LSUB, no post-filtering\n        if (empty($this->namespace['other']) && empty($this->namespace['shared'])\n            && !empty($this->namespace['personal']) && count($this->namespace['personal']) === 1\n            && strlen($this->namespace['personal'][0][0]) > 1\n        ) {\n            $this->list_root     = $this->namespace['personal'][0][0];\n            $this->list_excludes = [];\n        }\n\n        // Find personal namespace prefix(es) for self::mod_folder()\n        if (!empty($this->namespace['personal']) && is_array($this->namespace['personal'])) {\n            // There can be more than one namespace root,\n            // - for prefix_out get the first one but only\n            //   if there is only one root\n            // - for prefix_in get the first one but only\n            //   if there is no non-prefixed namespace root (#5403)\n            $roots = [];\n            foreach ($this->namespace['personal'] as $ns) {\n                $roots[] = $ns[0];\n            }\n\n            if (!in_array('', $roots)) {\n                $this->namespace['prefix_in'] = $roots[0];\n            }\n            if (count($roots) == 1) {\n                $this->namespace['prefix_out'] = $roots[0];\n            }\n        }\n\n        $_SESSION['imap_namespace'] = $this->namespace;\n        $_SESSION['imap_delimiter'] = $this->delimiter;\n        $_SESSION['imap_list_conf'] = [$this->list_root, $this->list_excludes];\n    }\n\n    /**\n     * Returns IMAP server vendor name\n     *\n     * @return string Vendor name\n     * @since 1.2\n     */\n    public function get_vendor()\n    {\n        if (isset($_SESSION['imap_vendor'])) {\n            return $_SESSION['imap_vendor'];\n        }\n\n        $config      = rcube::get_instance()->config;\n        $imap_vendor = $config->get('imap_vendor');\n\n        if ($imap_vendor) {\n            return $imap_vendor;\n        }\n\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        if (isset($this->conn->data['ID'])) {\n            $ident = $this->conn->data['ID'];\n        }\n        else if ($this->get_capability('ID')) {\n            $ident = $this->conn->id([\n                    'name'    => 'Roundcube',\n                    'version' => RCUBE_VERSION,\n                    'php'     => PHP_VERSION,\n                    'os'      => PHP_OS,\n            ]);\n        }\n        else {\n            $ident = null;\n        }\n\n        $vendor  = (string) (!empty($ident) ? $ident['name'] : '');\n        $ident   = strtolower($vendor . ' ' . $this->conn->data['GREETING']);\n        $vendors = ['cyrus', 'dovecot', 'uw-imap', 'gimap', 'hmail', 'greenmail'];\n\n        foreach ($vendors as $v) {\n            if (strpos($ident, $v) !== false) {\n                $vendor = $v;\n                break;\n            }\n        }\n\n        return $_SESSION['imap_vendor'] = $vendor;\n    }\n\n    /**\n     * Get message count for a specific folder\n     *\n     * @param string $folder  Folder name\n     * @param string $mode    Mode for count [ALL|THREADS|UNSEEN|RECENT|EXISTS]\n     * @param bool   $force   Force reading from server and update cache\n     * @param bool   $status  Enables storing folder status info (max UID/count),\n     *                        required for folder_status()\n     *\n     * @return int Number of messages\n     */\n    public function count($folder = '', $mode = 'ALL', $force = false, $status = true)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        return $this->countmessages($folder, $mode, $force, $status);\n    }\n\n    /**\n     * Protected method for getting number of messages\n     *\n     * @param string $folder    Folder name\n     * @param string $mode      Mode for count [ALL|THREADS|UNSEEN|RECENT|EXISTS]\n     * @param bool   $force     Force reading from server and update cache\n     * @param bool   $status    Enables storing folder status info (max UID/count),\n     *                          required for folder_status()\n     * @param bool   $no_search Ignore current search result\n     *\n     * @return int Number of messages\n     * @see rcube_imap::count()\n     */\n    protected function countmessages($folder, $mode = 'ALL', $force = false, $status = true, $no_search = false)\n    {\n        $mode = strtoupper($mode);\n\n        // Count search set, assume search set is always up-to-date (don't check $force flag)\n        // @TODO: this could be handled in more reliable way, e.g. a separate method\n        //        maybe in rcube_imap_search\n        if (!$no_search && $this->search_string && $folder == $this->folder) {\n            if ($mode == 'ALL') {\n                return $this->search_set->count_messages();\n            }\n            if ($mode == 'THREADS') {\n                return $this->search_set->count();\n            }\n        }\n\n        // EXISTS is a special alias for ALL, it allows to get the number\n        // of all messages in a folder also when search is active and with\n        // any skip_deleted setting\n\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        // return cached value\n        if (!$force && isset($a_folder_cache[$folder][$mode])) {\n            return $a_folder_cache[$folder][$mode];\n        }\n\n        if (!isset($a_folder_cache[$folder]) || !is_array($a_folder_cache[$folder])) {\n            $a_folder_cache[$folder] = [];\n        }\n\n        if ($mode == 'THREADS') {\n            $res   = $this->threads($folder);\n            $count = $res->count();\n\n            if ($status) {\n                $msg_count = $res->count_messages();\n                $this->set_folder_stats($folder, 'cnt', $msg_count);\n                $this->set_folder_stats($folder, 'maxuid', $msg_count ? $this->id2uid($msg_count, $folder) : 0);\n            }\n        }\n        // Need connection here\n        else if (!$this->check_connection()) {\n            return 0;\n        }\n        // RECENT count is fetched a bit different\n        else if ($mode == 'RECENT') {\n            $count = $this->conn->countRecent($folder);\n        }\n        // use SEARCH for message counting\n        else if ($mode != 'EXISTS' && !empty($this->options['skip_deleted'])) {\n            $search_str = \"ALL UNDELETED\";\n            $keys       = ['COUNT'];\n\n            if ($mode == 'UNSEEN') {\n                $search_str .= \" UNSEEN\";\n            }\n            else {\n                if ($this->messages_caching) {\n                    $keys[] = 'ALL';\n                }\n                if ($status) {\n                    $keys[] = 'MAX';\n                }\n            }\n\n            // @TODO: if $mode == 'ALL' we could try to use cache index here\n\n            // get message count using (E)SEARCH\n            // not very performant but more precise (using UNDELETED)\n            $index = $this->conn->search($folder, $search_str, true, $keys);\n            $count = $index->count();\n\n            if ($mode == 'ALL') {\n                // Cache index data, will be used in index_direct()\n                $this->icache['undeleted_idx'] = $index;\n\n                if ($status) {\n                    $this->set_folder_stats($folder, 'cnt', $count);\n                    $this->set_folder_stats($folder, 'maxuid', $index->max());\n                }\n            }\n        }\n        else {\n            if ($mode == 'UNSEEN') {\n                $count = $this->conn->countUnseen($folder);\n            }\n            else {\n                $count = $this->conn->countMessages($folder);\n                if ($status && $mode == 'ALL') {\n                    $this->set_folder_stats($folder, 'cnt', $count);\n                    $this->set_folder_stats($folder, 'maxuid', $count ? $this->id2uid($count, $folder) : 0);\n                }\n            }\n        }\n\n        $count = (int) $count;\n\n        if (!isset($a_folder_cache[$folder][$mode]) || $a_folder_cache[$folder][$mode] !== $count) {\n            $a_folder_cache[$folder][$mode] = $count;\n\n            // write back to cache\n            $this->update_cache('messagecount', $a_folder_cache);\n        }\n\n        return $count;\n    }\n\n    /**\n     * Public method for listing message flags\n     *\n     * @param string $folder  Folder name\n     * @param array  $uids    Message UIDs\n     * @param int    $mod_seq Optional MODSEQ value (of last flag update)\n     *\n     * @return array Indexed array with message flags\n     */\n    public function list_flags($folder, $uids, $mod_seq = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return [];\n        }\n\n        // @TODO: when cache was synchronized in this request\n        // we might already have asked for flag updates, use it.\n\n        $flags  = $this->conn->fetch($folder, $uids, true, ['FLAGS'], $mod_seq);\n        $result = [];\n\n        if (!empty($flags)) {\n            foreach ($flags as $message) {\n                $result[$message->uid] = $message->flags;\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Public method for listing headers\n     *\n     * @param string $folder     Folder name\n     * @param int    $page       Current page to list\n     * @param string $sort_field Header field to sort by\n     * @param string $sort_order Sort order [ASC|DESC]\n     * @param int    $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     */\n    public function list_messages($folder = '', $page = null, $sort_field = null, $sort_order = null, $slice = 0)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        return $this->_list_messages($folder, $page, $sort_field, $sort_order, $slice);\n    }\n\n    /**\n     * protected method for listing message headers\n     *\n     * @param   string   $folder     Folder name\n     * @param   int      $page       Current page to list\n     * @param   string   $sort_field Header field to sort by\n     * @param   string   $sort_order Sort order [ASC|DESC]\n     * @param   int      $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_messages\n     */\n    protected function _list_messages($folder = '', $page = null, $sort_field = null, $sort_order = null, $slice = 0)\n    {\n        if (!strlen($folder)) {\n            return [];\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n        $page = $page ?: $this->list_page;\n\n        // use saved message set\n        if ($this->search_string) {\n            return $this->list_search_messages($folder, $page, $slice);\n        }\n\n        if ($this->threading) {\n            return $this->list_thread_messages($folder, $page, $slice);\n        }\n\n        // get UIDs of all messages in the folder, sorted\n        $index = $this->index($folder, $this->sort_field, $this->sort_order);\n\n        if ($index->is_empty()) {\n            return [];\n        }\n\n        $from = ($page-1) * $this->page_size;\n        $to   = $from + $this->page_size;\n\n        $index->slice($from, $to - $from);\n\n        if ($slice) {\n            $index->slice(-$slice, $slice);\n        }\n\n        // fetch requested messages headers\n        $a_index = $index->get();\n        $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n        return array_values($a_msg_headers);\n    }\n\n    /**\n     * protected method for listing message headers using threads\n     *\n     * @param string $folder Folder name\n     * @param int    $page   Current page to list\n     * @param int    $slice  Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_messages\n     */\n    protected function list_thread_messages($folder, $page, $slice = 0)\n    {\n        // get all threads (not sorted)\n        if ($mcache = $this->get_mcache_engine()) {\n            $threads = $mcache->get_thread($folder);\n        }\n        else {\n            $threads = $this->threads($folder);\n        }\n\n        return $this->fetch_thread_headers($folder, $threads, $page, $slice);\n    }\n\n    /**\n     * Method for fetching threads data\n     *\n     * @param string $folder Folder name\n     *\n     * @return rcube_result_thread Thread data object\n     */\n    function threads($folder)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            // don't store in self's internal cache, cache has it's own internal cache\n            return $mcache->get_thread($folder);\n        }\n\n        if (!empty($this->icache['threads'])) {\n            if ($this->icache['threads']->get_parameters('MAILBOX') == $folder) {\n                return $this->icache['threads'];\n            }\n        }\n\n        // get all threads\n        $result = $this->threads_direct($folder);\n\n        // add to internal (fast) cache\n        return $this->icache['threads'] = $result;\n    }\n\n    /**\n     * Method for direct fetching of threads data\n     *\n     * @param string $folder Folder name\n     *\n     * @return rcube_result_thread Thread data object\n     */\n    function threads_direct($folder)\n    {\n        if (!$this->check_connection()) {\n            return new rcube_result_thread();\n        }\n\n        // get all threads\n        return $this->conn->thread($folder, $this->threading,\n            $this->options['skip_deleted'] ? 'UNDELETED' : '', true);\n    }\n\n    /**\n     * protected method for fetching threaded messages headers\n     *\n     * @param string              $folder     Folder name\n     * @param rcube_result_thread $threads    Threads data object\n     * @param int                 $page       List page number\n     * @param int                 $slice      Number of threads to slice\n     *\n     * @return array Messages headers\n     */\n    protected function fetch_thread_headers($folder, $threads, $page, $slice = 0)\n    {\n        // Sort thread structure\n        $this->sort_threads($threads);\n\n        $from = ($page-1) * $this->page_size;\n        $to   = $from + $this->page_size;\n\n        $threads->slice($from, $to - $from);\n\n        if ($slice) {\n            $threads->slice(-$slice, $slice);\n        }\n\n        // Get UIDs of all messages in all threads\n        $a_index = $threads->get();\n\n        // fetch requested headers from server\n        $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n        unset($a_index);\n\n        // Set depth, has_children and unread_children fields in headers\n        $this->set_thread_flags($a_msg_headers, $threads);\n\n        return array_values($a_msg_headers);\n    }\n\n    /**\n     * protected method for setting threaded messages flags:\n     * depth, has_children, unread_children, flagged_children\n     *\n     * @param array               $headers  Reference to headers array indexed by message UID\n     * @param rcube_result_thread $threads  Threads data object\n     *\n     * @return array Message headers array indexed by message UID\n     */\n    protected function set_thread_flags(&$headers, $threads)\n    {\n        $parents = [];\n\n        list($msg_depth, $msg_children) = $threads->get_thread_data();\n\n        foreach ($headers as $uid => $header) {\n            $depth = $msg_depth[$uid];\n            $parents = array_slice($parents, 0, $depth);\n\n            if (!empty($parents)) {\n                $headers[$uid]->parent_uid = end($parents);\n                if (empty($header->flags['SEEN'])) {\n                    $headers[$parents[0]]->unread_children++;\n                }\n                if (!empty($header->flags['FLAGGED'])) {\n                    $headers[$parents[0]]->flagged_children++;\n                }\n            }\n\n            array_push($parents, $uid);\n\n            $headers[$uid]->depth            = $depth;\n            $headers[$uid]->has_children     = $msg_children[$uid];\n            $headers[$uid]->unread_children  = 0;\n            $headers[$uid]->flagged_children = 0;\n        }\n    }\n\n    /**\n     * A protected method for listing a set of message headers (search results)\n     *\n     * @param string $folder Folder name\n     * @param int    $page   Current page to list\n     * @param int    $slice  Number of slice items to extract from the result array\n     *\n     * @return array Indexed array with message header objects\n     */\n    protected function list_search_messages($folder, $page, $slice = 0)\n    {\n        if (!strlen($folder) || empty($this->search_set) || $this->search_set->is_empty()) {\n            return [];\n        }\n\n        $from = ($page-1) * $this->page_size;\n\n        // gather messages from a multi-folder search\n        if (!empty($this->search_set->multi)) {\n            $page_size  = $this->page_size;\n            $sort_field = $this->sort_field;\n            $search_set = $this->search_set;\n\n            // fetch resultset headers, sort and slice them\n            if (!empty($sort_field) && $search_set->get_parameters('SORT') != $sort_field) {\n                $this->sort_field = null;\n                $this->page_size  = 1000;  // fetch up to 1000 matching messages per folder\n                $this->threading  = false;\n\n                $a_msg_headers = [];\n                foreach ($search_set->sets as $resultset) {\n                    if (!$resultset->is_empty()) {\n                        $this->search_set     = $resultset;\n                        $this->search_threads = $resultset instanceof rcube_result_thread;\n\n                        $a_headers     =  $this->list_search_messages($resultset->get_parameters('MAILBOX'), 1);\n                        $a_msg_headers = array_merge($a_msg_headers, $a_headers);\n                        unset($a_headers);\n                    }\n                }\n\n                // sort headers\n                if (!empty($a_msg_headers)) {\n                    $a_msg_headers = rcube_imap_generic::sortHeaders($a_msg_headers, $sort_field, $this->sort_order);\n                }\n\n                // store (sorted) message index\n                $search_set->set_message_index($a_msg_headers, $sort_field, $this->sort_order);\n\n                // only return the requested part of the set\n                $a_msg_headers = array_slice(array_values($a_msg_headers), $from, $page_size);\n            }\n            else {\n                if ($this->sort_order != $search_set->get_parameters('ORDER')) {\n                    $search_set->revert();\n                }\n\n                // slice resultset first...\n                $index = array_slice($search_set->get(), $from, $page_size);\n                $fetch = [];\n\n                foreach ($index as $msg_id) {\n                    list($uid, $folder) = explode('-', $msg_id, 2);\n                    $fetch[$folder][] = $uid;\n                }\n\n                // ... and fetch the requested set of headers\n                $a_msg_headers = [];\n                foreach ($fetch as $folder => $a_index) {\n                    $a_msg_headers = array_merge($a_msg_headers, array_values($this->fetch_headers($folder, $a_index)));\n                }\n\n                // Re-sort the result according to the original search set order\n                usort($a_msg_headers, function($a, $b) use ($index) {\n                    return array_search($a->uid . '-' . $a->folder, $index) - array_search($b->uid . '-' . $b->folder, $index);\n                });\n            }\n\n            if ($slice) {\n                $a_msg_headers = array_slice($a_msg_headers, -$slice, $slice);\n            }\n\n            // restore members\n            $this->sort_field = $sort_field;\n            $this->page_size  = $page_size;\n            $this->search_set = $search_set;\n\n            return $a_msg_headers;\n        }\n\n        // use saved messages from searching\n        if ($this->threading) {\n            return $this->list_search_thread_messages($folder, $page, $slice);\n        }\n\n        // search set is threaded, we need a new one\n        if ($this->search_threads) {\n            $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n        }\n\n        $index = clone $this->search_set;\n\n        // return empty array if no messages found\n        if ($index->is_empty()) {\n            return [];\n        }\n\n        // quickest method (default sorting)\n        if (!$this->search_sort_field && !$this->sort_field) {\n            $got_index = true;\n        }\n        // sorted messages, so we can first slice array and then fetch only wanted headers\n        else if ($this->search_sorted) { // SORT searching result\n            $got_index = true;\n            // reset search set if sorting field has been changed\n            if ($this->sort_field && $this->search_sort_field != $this->sort_field) {\n                $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n\n                $index = clone $this->search_set;\n\n                // return empty array if no messages found\n                if ($index->is_empty()) {\n                    return [];\n                }\n            }\n        }\n\n        if (!empty($got_index)) {\n            if ($this->sort_order != $index->get_parameters('ORDER')) {\n                $index->revert();\n            }\n\n            // get messages uids for one page\n            $index->slice($from, $this->page_size);\n\n            if ($slice) {\n                $index->slice(-$slice, $slice);\n            }\n\n            // fetch headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n            return array_values($a_msg_headers);\n        }\n\n        // SEARCH result, need sorting\n        $cnt = $index->count();\n\n        // 300: experimental value for best result\n        if (($cnt > 300 && $cnt > $this->page_size) || !$this->sort_field) {\n            // use memory less expensive (and quick) method for big result set\n            $index = clone $this->index('', $this->sort_field, $this->sort_order);\n            // get messages uids for one page...\n            $index->slice($from, $this->page_size);\n\n            if ($slice) {\n                $index->slice(-$slice, $slice);\n            }\n\n            // ...and fetch headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n            return array_values($a_msg_headers);\n        }\n        else {\n            // for small result set we can fetch all messages headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index, false);\n\n            // return empty array if no messages found\n            if (!is_array($a_msg_headers) || empty($a_msg_headers)) {\n                return [];\n            }\n\n            // if not already sorted\n            $a_msg_headers = rcube_imap_generic::sortHeaders(\n                $a_msg_headers, $this->sort_field, $this->sort_order);\n\n            $a_msg_headers = array_slice(array_values($a_msg_headers), $from, $this->page_size);\n\n            if ($slice) {\n                $a_msg_headers = array_slice($a_msg_headers, -$slice, $slice);\n            }\n\n            return $a_msg_headers;\n        }\n    }\n\n    /**\n     * protected method for listing a set of threaded message headers (search results)\n     *\n     * @param   string   $folder     Folder name\n     * @param   int      $page       Current page to list\n     * @param   int      $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_search_messages()\n     */\n    protected function list_search_thread_messages($folder, $page, $slice = 0)\n    {\n        // update search_set if previous data was fetched with disabled threading\n        if (!$this->search_threads) {\n            if ($this->search_set->is_empty()) {\n                return [];\n            }\n            $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n        }\n\n        return $this->fetch_thread_headers($folder, clone $this->search_set, $page, $slice);\n    }\n\n    /**\n     * Fetches messages headers (by UID)\n     *\n     * @param  string  $folder   Folder name\n     * @param  array   $msgs     Message UIDs\n     * @param  bool    $sort     Enables result sorting by $msgs\n     * @param  bool    $force    Disables cache use\n     *\n     * @return array Messages headers indexed by UID\n     */\n    function fetch_headers($folder, $msgs, $sort = true, $force = false)\n    {\n        if (empty($msgs)) {\n            return [];\n        }\n\n        if (!$force && ($mcache = $this->get_mcache_engine())) {\n            $headers = $mcache->get_messages($folder, $msgs);\n        }\n        else if (!$this->check_connection()) {\n            return [];\n        }\n        else {\n            // fetch requested headers from server\n            $headers = $this->conn->fetchHeaders(\n                $folder, $msgs, true, false, $this->get_fetch_headers());\n        }\n\n        if (empty($headers)) {\n            return [];\n        }\n\n        $msg_headers = [];\n        foreach ($headers as $h) {\n            $h->folder = $folder;\n            $msg_headers[$h->uid] = $h;\n        }\n\n        if ($sort) {\n            // use this class for message sorting\n            $sorter = new rcube_message_header_sorter();\n            $sorter->set_index($msgs);\n            $sorter->sort_headers($msg_headers);\n        }\n\n        return $msg_headers;\n    }\n\n    /**\n     * Returns current status of a folder (compared to the last time use)\n     *\n     * We compare the maximum UID to determine the number of\n     * new messages because the RECENT flag is not reliable.\n     *\n     * @param string $folder Folder name\n     * @param array  $diff   Difference data\n     *\n     * @return int Folder status\n     */\n    public function folder_status($folder = null, &$diff = [])\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        $old = $this->get_folder_stats($folder);\n\n        // refresh message count -> will update\n        $this->countmessages($folder, 'ALL', true, true, true);\n\n        $result = 0;\n\n        if (empty($old)) {\n            return $result;\n        }\n\n        $new = $this->get_folder_stats($folder);\n\n        // got new messages\n        if ($new['maxuid'] > $old['maxuid']) {\n            $result += 1;\n            // get new message UIDs range, that can be used for example\n            // to get the data of these messages\n            $diff['new'] = ($old['maxuid'] + 1 < $new['maxuid'] ? ($old['maxuid']+1).':' : '') . $new['maxuid'];\n        }\n\n        // some messages has been deleted\n        if ($new['cnt'] < $old['cnt']) {\n            $result += 2;\n        }\n\n        // @TODO: optional checking for messages flags changes (?)\n        // @TODO: UIDVALIDITY checking\n\n        return $result;\n    }\n\n    /**\n     * Stores folder statistic data in session\n     * @TODO: move to separate DB table (cache?)\n     *\n     * @param string $folder  Folder name\n     * @param string $name    Data name\n     * @param mixed  $data    Data value\n     */\n    protected function set_folder_stats($folder, $name, $data)\n    {\n        $_SESSION['folders'][$folder][$name] = $data;\n    }\n\n    /**\n     * Gets folder statistic data\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Stats data\n     */\n    protected function get_folder_stats($folder)\n    {\n        if (isset($_SESSION['folders'][$folder])) {\n            return (array) $_SESSION['folders'][$folder];\n        }\n\n        return [];\n    }\n\n    /**\n     * Return sorted list of message UIDs\n     *\n     * @param string $folder     Folder to get index from\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order [ASC, DESC]\n     * @param bool   $no_threads Get not threaded index\n     * @param bool   $no_search  Get index not limited to search result (optionally)\n     *\n     * @return rcube_result_index|rcube_result_thread List of messages (UIDs)\n     */\n    public function index($folder = '', $sort_field = null, $sort_order = null,\n        $no_threads = false, $no_search = false\n    ) {\n        if (!$no_threads && $this->threading) {\n            return $this->thread_index($folder, $sort_field, $sort_order);\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // we have a saved search result, get index from there\n        if ($this->search_string) {\n            if ($this->search_set->is_empty()) {\n                return new rcube_result_index($folder, '* SORT');\n            }\n\n            if ($this->search_set instanceof rcube_result_multifolder) {\n                $index = $this->search_set;\n                $index->folder = $folder;\n                // TODO: handle changed sorting\n            }\n            // search result is an index with the same sorting?\n            else if (($this->search_set instanceof rcube_result_index)\n                && ((!$this->sort_field && !$this->search_sorted) ||\n                    ($this->search_sorted && $this->search_sort_field == $this->sort_field))\n            ) {\n                $index = $this->search_set;\n            }\n            // $no_search is enabled when we are not interested in\n            // fetching index for search result, e.g. to sort\n            // threaded search result we can use full mailbox index.\n            // This makes possible to use index from cache\n            else if (!$no_search) {\n                if (!$this->sort_field) {\n                    // No sorting needed, just build index from the search result\n                    // @TODO: do we need to sort by UID here?\n                    $search = $this->search_set->get_compressed();\n                    $index  = new rcube_result_index($folder, '* ESEARCH ALL ' . $search);\n                }\n                else {\n                    $index = $this->index_direct($folder, $this->sort_field, $this->sort_order, $this->search_set);\n                }\n            }\n\n            if (isset($index)) {\n                if ($this->sort_order != $index->get_parameters('ORDER')) {\n                    $index->revert();\n                }\n\n                return $index;\n            }\n        }\n\n        // check local cache\n        if ($mcache = $this->get_mcache_engine()) {\n            return $mcache->get_index($folder, $this->sort_field, $this->sort_order);\n        }\n\n        // fetch from IMAP server\n        return $this->index_direct($folder, $this->sort_field, $this->sort_order);\n    }\n\n    /**\n     * Return sorted list of message UIDs ignoring current search settings.\n     * Doesn't uses cache by default.\n     *\n     * @param string         $folder     Folder to get index from\n     * @param string         $sort_field Sort column\n     * @param string         $sort_order Sort order [ASC, DESC]\n     * @param rcube_result_* $search     Optional messages set to limit the result\n     *\n     * @return rcube_result_index Sorted list of message UIDs\n     */\n    public function index_direct($folder, $sort_field = null, $sort_order = null, $search = null)\n    {\n        if (!empty($search)) {\n            $search = $search->get_compressed();\n        }\n\n        // use message index sort as default sorting\n        if (!$sort_field) {\n            // use search result from count() if possible\n            if (empty($search) && $this->options['skip_deleted']\n                && !empty($this->icache['undeleted_idx'])\n                && $this->icache['undeleted_idx']->get_parameters('ALL') !== null\n                && $this->icache['undeleted_idx']->get_parameters('MAILBOX') == $folder\n            ) {\n                $index = $this->icache['undeleted_idx'];\n            }\n            else if (!$this->check_connection()) {\n                return new rcube_result_index();\n            }\n            else {\n                $query = $this->options['skip_deleted'] ? 'UNDELETED' : '';\n                if ($search) {\n                    $query = trim($query . ' UID ' . $search);\n                }\n\n                $index = $this->conn->search($folder, $query, true);\n            }\n        }\n        else if (!$this->check_connection()) {\n            return new rcube_result_index();\n        }\n        // fetch complete message index\n        else {\n            if ($this->get_capability('SORT')) {\n                $query = $this->options['skip_deleted'] ? 'UNDELETED' : '';\n                if ($search) {\n                    $query = trim($query . ' UID ' . $search);\n                }\n\n                $index = $this->conn->sort($folder, $sort_field, $query, true);\n            }\n\n            if (empty($index) || $index->is_error()) {\n                $index = $this->conn->index($folder, $search ? $search : \"1:*\",\n                    $sort_field, $this->options['skip_deleted'],\n                    $search ? true : false, true);\n            }\n        }\n\n        if ($sort_order != $index->get_parameters('ORDER')) {\n            $index->revert();\n        }\n\n        return $index;\n    }\n\n    /**\n     * Return index of threaded message UIDs\n     *\n     * @param string $folder     Folder to get index from\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order [ASC, DESC]\n     *\n     * @return rcube_result_thread Message UIDs\n     */\n    public function thread_index($folder = '', $sort_field = null, $sort_order = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // we have a saved search result, get index from there\n        if ($this->search_string && $this->search_threads && $folder == $this->folder) {\n            $threads = $this->search_set;\n        }\n        else {\n            // get all threads (default sort order)\n            $threads = $this->threads($folder);\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n        $this->sort_threads($threads);\n\n        return $threads;\n    }\n\n    /**\n     * Sort threaded result, using THREAD=REFS method if available.\n     * If not, use any method and re-sort the result in THREAD=REFS way.\n     *\n     * @param rcube_result_thread $threads Threads result set\n     */\n    protected function sort_threads($threads)\n    {\n        if ($threads->is_empty()) {\n            return;\n        }\n\n        // THREAD=ORDEREDSUBJECT: sorting by sent date of root message\n        // THREAD=REFERENCES:     sorting by sent date of root message\n        // THREAD=REFS:           sorting by the most recent date in each thread\n\n        if ($this->threading != 'REFS' || ($this->sort_field && $this->sort_field != 'date')) {\n            $sortby = $this->sort_field ?: 'date';\n            $index  = $this->index($this->folder, $sortby, $this->sort_order, true, true);\n\n            if (!$index->is_empty()) {\n                $threads->sort($index);\n            }\n        }\n        else if ($this->sort_order != $threads->get_parameters('ORDER')) {\n            $threads->revert();\n        }\n    }\n\n    /**\n     * Invoke search request to IMAP server\n     *\n     * @param  string  $folder     Folder name to search in\n     * @param  string  $search     Search criteria\n     * @param  string  $charset    Search charset\n     * @param  string  $sort_field Header field to sort by\n     *\n     * @return rcube_result_index  Search result object\n     * @todo: Search criteria should be provided in non-IMAP format, e.g. array\n     */\n    public function search($folder = '', $search = 'ALL', $charset = null, $sort_field = null)\n    {\n        if (!$search) {\n            $search = 'ALL';\n        }\n\n        if ((is_array($folder) && empty($folder)) || (!is_array($folder) && !strlen($folder))) {\n            $folder = $this->folder;\n        }\n\n        $plugin = $this->plugins->exec_hook('imap_search_before', [\n                'folder'     => $folder,\n                'search'     => $search,\n                'charset'    => $charset,\n                'sort_field' => $sort_field,\n                'threading'  => $this->threading,\n                'result'     => null,\n        ]);\n\n        $folder     = $plugin['folder'];\n        $search     = $plugin['search'];\n        $charset    = $plugin['charset'];\n        $sort_field = $plugin['sort_field'];\n        $results    = $plugin['result'];\n\n        // multi-folder search\n        if (!$results && is_array($folder) && count($folder) > 1 && $search != 'ALL') {\n            // connect IMAP to have all the required classes and settings loaded\n            $this->check_connection();\n\n            // disable threading\n            $this->threading = false;\n\n            $searcher = new rcube_imap_search($this->options, $this->conn);\n\n            // set limit to not exceed the client's request timeout\n            $searcher->set_timelimit(60);\n\n            // continue existing incomplete search\n            if (!empty($this->search_set) && $this->search_set->incomplete && $search == $this->search_string) {\n                $searcher->set_results($this->search_set);\n            }\n\n            // execute the search\n            $results = $searcher->exec(\n                $folder,\n                $search,\n                $charset ? $charset : $this->default_charset,\n                $sort_field && $this->get_capability('SORT') ? $sort_field : null,\n                $this->threading\n            );\n        }\n        else if (!$results) {\n            $folder  = is_array($folder) ? $folder[0] : $folder;\n            $search  = is_array($search) ? $search[$folder] : $search;\n            $results = $this->search_index($folder, $search, $charset, $sort_field);\n        }\n\n        $sorted = $this->threading || $this->search_sorted || !empty($plugin['search_sorted']);\n\n        $this->set_search_set([$search, $results, $charset, $sort_field, $sorted]);\n\n        return $results;\n    }\n\n    /**\n     * Direct (real and simple) SEARCH request (without result sorting and caching).\n     *\n     * @param  string  $mailbox Mailbox name to search in\n     * @param  string  $str     Search string\n     *\n     * @return rcube_result_index  Search result (UIDs)\n     */\n    public function search_once($folder = null, $str = 'ALL')\n    {\n        if (!$this->check_connection()) {\n            return new rcube_result_index();\n        }\n\n        if (!$str) {\n            $str = 'ALL';\n        }\n\n        // multi-folder search\n        if (is_array($folder) && count($folder) > 1) {\n            $searcher = new rcube_imap_search($this->options, $this->conn);\n            $index = $searcher->exec($folder, $str, $this->default_charset);\n        }\n        else {\n            $folder = is_array($folder) ? $folder[0] : $folder;\n            if (!strlen($folder)) {\n                $folder = $this->folder;\n            }\n            $index = $this->conn->search($folder, $str, true);\n        }\n\n        return $index;\n    }\n\n    /**\n     * protected search method\n     *\n     * @param string $folder     Folder name\n     * @param string $criteria   Search criteria\n     * @param string $charset    Charset\n     * @param string $sort_field Sorting field\n     *\n     * @return rcube_result_index|rcube_result_thread  Search results (UIDs)\n     * @see rcube_imap::search()\n     */\n    protected function search_index($folder, $criteria = 'ALL', $charset = null, $sort_field = null)\n    {\n        if (!$this->check_connection()) {\n            if ($this->threading) {\n                return new rcube_result_thread();\n            }\n            else {\n                return new rcube_result_index();\n            }\n        }\n\n        if ($this->options['skip_deleted'] && !preg_match('/UNDELETED/', $criteria)) {\n            $criteria = 'UNDELETED '.$criteria;\n        }\n\n        // unset CHARSET if criteria string is ASCII, this way\n        // SEARCH won't be re-sent after \"unsupported charset\" response\n        if ($charset && $charset != 'US-ASCII' && is_ascii($criteria)) {\n            $charset = 'US-ASCII';\n        }\n\n        if ($this->threading) {\n            $threads = $this->conn->thread($folder, $this->threading, $criteria, true, $charset);\n\n            // Error, try with US-ASCII (RFC5256: SORT/THREAD must support US-ASCII and UTF-8,\n            // but I've seen that Courier doesn't support UTF-8)\n            if ($threads->is_error() && $charset && $charset != 'US-ASCII') {\n                $threads = $this->conn->thread($folder, $this->threading,\n                    self::convert_criteria($criteria, $charset), true, 'US-ASCII');\n            }\n\n            return $threads;\n        }\n\n        if ($sort_field && $this->get_capability('SORT')) {\n            $charset  = $charset ?: $this->default_charset;\n            $messages = $this->conn->sort($folder, $sort_field, $criteria, true, $charset);\n\n            // Error, try with US-ASCII (RFC5256: SORT/THREAD must support US-ASCII and UTF-8,\n            // but I've seen Courier with disabled UTF-8 support)\n            if ($messages->is_error() && $charset && $charset != 'US-ASCII') {\n                $messages = $this->conn->sort($folder, $sort_field,\n                    self::convert_criteria($criteria, $charset), true, 'US-ASCII');\n            }\n\n            if (!$messages->is_error()) {\n                $this->search_sorted = true;\n                return $messages;\n            }\n        }\n\n        $messages = $this->conn->search($folder,\n            ($charset && $charset != 'US-ASCII' ? \"CHARSET $charset \" : '') . $criteria, true);\n\n        // Error, try with US-ASCII (some servers may support only US-ASCII)\n        if ($messages->is_error() && $charset && $charset != 'US-ASCII') {\n            $messages = $this->conn->search($folder, self::convert_criteria($criteria, $charset), true);\n        }\n\n        $this->search_sorted = false;\n\n        return $messages;\n    }\n\n    /**\n     * Converts charset of search criteria string\n     *\n     * @param  string  $str          Search string\n     * @param  string  $charset      Original charset\n     * @param  string  $dest_charset Destination charset (default US-ASCII)\n     *\n     * @return string  Search string\n     */\n    public static function convert_criteria($str, $charset, $dest_charset = 'US-ASCII')\n    {\n        // convert strings to US_ASCII\n        if (preg_match_all('/\\{([0-9]+)\\}\\r\\n/', $str, $matches, PREG_OFFSET_CAPTURE)) {\n            $last = 0;\n            $res  = '';\n\n            foreach ($matches[1] as $m) {\n                $string_offset = $m[1] + strlen($m[0]) + 4; // {}\\r\\n\n                $string = substr($str, $string_offset - 1, $m[0]);\n                $string = rcube_charset::convert($string, $charset, $dest_charset);\n\n                if ($string === false || !strlen($string)) {\n                    continue;\n                }\n\n                $res .= substr($str, $last, $m[1] - $last - 1) . rcube_imap_generic::escape($string);\n                $last = $m[0] + $string_offset - 1;\n            }\n\n            if ($last < strlen($str)) {\n                $res .= substr($str, $last, strlen($str)-$last);\n            }\n        }\n        // strings for conversion not found\n        else {\n            $res = $str;\n        }\n\n        return $res;\n    }\n\n    /**\n     * Refresh saved search set\n     *\n     * @return array Current search set\n     */\n    public function refresh_search()\n    {\n        if (!empty($this->search_string)) {\n            $this->search(\n                is_object($this->search_set) ? $this->search_set->get_parameters('MAILBOX') : '',\n                $this->search_string,\n                $this->search_charset,\n                $this->search_sort_field\n            );\n        }\n\n        return $this->get_search_set();\n    }\n\n    /**\n     * Flag certain result subsets as 'incomplete'.\n     * For subsequent refresh_search() calls to only refresh the updated parts.\n     */\n    protected function set_search_dirty($folder)\n    {\n        if ($this->search_set && is_a($this->search_set, 'rcube_result_multifolder')) {\n            if ($subset = $this->search_set->get_set($folder)) {\n                $subset->incomplete = $this->search_set->incomplete = true;\n            }\n        }\n    }\n\n    /**\n     * Return message headers object of a specific message\n     *\n     * @param int     $id       Message UID\n     * @param string  $folder   Folder to read from\n     * @param bool    $force    True to skip cache\n     *\n     * @return rcube_message_header Message headers\n     */\n    public function get_message_headers($uid, $folder = null, $force = false)\n    {\n        // decode combined UID-folder identifier\n        if (preg_match('/^\\d+-.+/', $uid)) {\n            list($uid, $folder) = explode('-', $uid, 2);\n        }\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // get cached headers\n        if (!$force && $uid && ($mcache = $this->get_mcache_engine())) {\n            $headers = $mcache->get_message($folder, $uid);\n        }\n        else if (!$this->check_connection()) {\n            $headers = false;\n        }\n        else {\n            $headers = $this->conn->fetchHeader(\n                $folder, $uid, true, true, $this->get_fetch_headers());\n\n            if (is_object($headers)) {\n                $headers->folder = $folder;\n            }\n        }\n\n        return $headers;\n    }\n\n    /**\n     * Fetch message headers and body structure from the IMAP server and build\n     * an object structure.\n     *\n     * @param int    $uid    Message UID to fetch\n     * @param string $folder Folder to read from\n     *\n     * @return object rcube_message_header Message data\n     */\n    public function get_message($uid, $folder = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // decode combined UID-folder identifier\n        if (preg_match('/^\\d+-.+/', $uid)) {\n            list($uid, $folder) = explode('-', $uid, 2);\n        }\n\n        // Check internal cache\n        if (!empty($this->icache['message']) && ($headers = $this->icache['message'])) {\n            // Make sure the folder and UID is what we expect.\n            // In case when the same process works with folders that are personal\n            // and shared two folders can contain the same UIDs.\n            if ($headers->uid == $uid && $headers->folder == $folder) {\n                return $headers;\n            }\n        }\n\n        $headers = $this->get_message_headers($uid, $folder);\n\n        // message doesn't exist?\n        if (empty($headers)) {\n            return null;\n        }\n\n        // structure might be cached\n        if (!empty($headers->structure)) {\n            return $headers;\n        }\n\n        $this->msg_uid = $uid;\n\n        if (!$this->check_connection()) {\n            return $headers;\n        }\n\n        if (empty($headers->bodystructure)) {\n            $headers->bodystructure = $this->conn->getStructure($folder, $uid, true);\n        }\n\n        $structure = $headers->bodystructure;\n\n        if (empty($structure)) {\n            return $headers;\n        }\n\n        // set message charset from message headers\n        if ($headers->charset) {\n            $this->struct_charset = $headers->charset;\n        }\n        else {\n            $this->struct_charset = $this->structure_charset($structure);\n        }\n\n        $headers->ctype = @strtolower($headers->ctype);\n\n        // Here we can recognize malformed BODYSTRUCTURE and\n        // 1. [@TODO] parse the message in other way to create our own message structure\n        // 2. or just show the raw message body.\n        // Example of structure for malformed MIME message:\n        // (\"text\" \"plain\" NIL NIL NIL \"7bit\" 2154 70 NIL NIL NIL)\n        if ($headers->ctype && !is_array($structure[0]) && $headers->ctype != 'text/plain'\n            && strtolower($structure[0].'/'.$structure[1]) == 'text/plain'\n        ) {\n            // A special known case \"Content-type: text\" (#1488968)\n            if ($headers->ctype == 'text') {\n                $structure[1]   = 'plain';\n                $headers->ctype = 'text/plain';\n            }\n            // we can handle single-part messages, by simple fix in structure (#1486898)\n            else if (preg_match('/^(text|application)\\/(.*)/', $headers->ctype, $m)) {\n                $structure[0] = $m[1];\n                $structure[1] = $m[2];\n            }\n            else {\n                // Try to parse the message using rcube_mime_decode.\n                // We need a better solution, it parses message\n                // in memory, which wouldn't work for very big messages,\n                // (it uses up to 10x more memory than the message size)\n                // it's also buggy and not actively developed\n                if ($headers->size && rcube_utils::mem_check($headers->size * 10)) {\n                    $raw_msg = $this->get_raw_body($uid);\n                    $struct = rcube_mime::parse_message($raw_msg);\n                }\n                else {\n                    return $headers;\n                }\n            }\n        }\n\n        if (empty($struct)) {\n            $struct = $this->structure_part($structure, 0, '', $headers);\n        }\n\n        // some workarounds on simple messages...\n        if (empty($struct->parts)) {\n            // ...don't trust given content-type\n            if (!empty($headers->ctype)) {\n                $struct->mime_id  = '1';\n                $struct->mimetype = strtolower($headers->ctype);\n                list($struct->ctype_primary, $struct->ctype_secondary) = explode('/', $struct->mimetype);\n            }\n\n            // ...and charset (there's a case described in #1488968 where invalid content-type\n            // results in invalid charset in BODYSTRUCTURE)\n            if (!empty($headers->charset) && $headers->charset != $struct->ctype_parameters['charset']) {\n                $struct->charset                     = $headers->charset;\n                $struct->ctype_parameters['charset'] = $headers->charset;\n            }\n        }\n\n        $headers->structure = $struct;\n\n        return $this->icache['message'] = $headers;\n    }\n\n    /**\n     * Build message part object\n     *\n     * @param array  $part\n     * @param int    $count\n     * @param string $parent\n     */\n    protected function structure_part($part, $count = 0, $parent = '', $mime_headers = null)\n    {\n        $struct = new rcube_message_part;\n        $struct->mime_id = empty($parent) ? (string)$count : \"$parent.$count\";\n\n        // multipart\n        if (is_array($part[0])) {\n            $struct->ctype_primary = 'multipart';\n\n        /* RFC3501: BODYSTRUCTURE fields of multipart part\n            part1 array\n            part2 array\n            part3 array\n            ....\n            1. subtype\n            2. parameters (optional)\n            3. description (optional)\n            4. language (optional)\n            5. location (optional)\n        */\n\n            // find first non-array entry\n            for ($i=1; $i<count($part); $i++) {\n                if (!is_array($part[$i])) {\n                    $struct->ctype_secondary = strtolower($part[$i]);\n\n                    // read content type parameters\n                    if (is_array($part[$i+1])) {\n                        $struct->ctype_parameters = [];\n                        for ($j=0; $j<count($part[$i+1]); $j+=2) {\n                            $param = strtolower($part[$i+1][$j]);\n                            $struct->ctype_parameters[$param] = $part[$i+1][$j+1];\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            $struct->mimetype = 'multipart/'.$struct->ctype_secondary;\n\n            // build parts list for headers pre-fetching\n            for ($i=0; $i<count($part); $i++) {\n                // fetch message headers if message/rfc822 or named part\n                if (is_array($part[$i]) && !is_array($part[$i][0])) {\n                    $tmp_part_id = $struct->mime_id ? $struct->mime_id.'.'.($i+1) : $i+1;\n                    if (strtolower($part[$i][0]) == 'message' && strtolower($part[$i][1]) == 'rfc822') {\n                        $mime_part_headers[] = $tmp_part_id;\n                    }\n                    else if ($this->is_attachment_part($part[$i])) {\n                        $mime_part_headers[] = $tmp_part_id;\n                    }\n                }\n            }\n\n            // pre-fetch headers of all parts (in one command for better performance)\n            // @TODO: we could do this before _structure_part() call, to fetch\n            // headers for parts on all levels\n            if (!empty($mime_part_headers)) {\n                $mime_part_headers = $this->conn->fetchMIMEHeaders($this->folder,\n                    $this->msg_uid, $mime_part_headers);\n            }\n\n            $struct->parts = [];\n            for ($i=0, $count=0; $i<count($part); $i++) {\n                if (!is_array($part[$i])) {\n                    break;\n                }\n                $tmp_part_id = $struct->mime_id ? $struct->mime_id.'.'.($i+1) : $i+1;\n                $struct->parts[] = $this->structure_part($part[$i], ++$count, $struct->mime_id,\n                    !empty($mime_part_headers[$tmp_part_id]) ? $mime_part_headers[$tmp_part_id] : null);\n            }\n\n            return $struct;\n        }\n\n        /* RFC3501: BODYSTRUCTURE fields of non-multipart part\n            0. type\n            1. subtype\n            2. parameters\n            3. id\n            4. description\n            5. encoding\n            6. size\n          -- text\n            7. lines\n          -- message/rfc822\n            7. envelope structure\n            8. body structure\n            9. lines\n          --\n            x. md5 (optional)\n            x. disposition (optional)\n            x. language (optional)\n            x. location (optional)\n        */\n\n        // regular part\n        $struct->ctype_primary   = strtolower($part[0]);\n        $struct->ctype_secondary = strtolower($part[1]);\n        $struct->mimetype        = $struct->ctype_primary.'/'.$struct->ctype_secondary;\n\n        // read content type parameters\n        if (is_array($part[2])) {\n            $struct->ctype_parameters = [];\n            for ($i=0; $i<count($part[2]); $i+=2) {\n                $struct->ctype_parameters[strtolower($part[2][$i])] = $part[2][$i+1];\n            }\n\n            if (isset($struct->ctype_parameters['charset'])) {\n                $struct->charset = $struct->ctype_parameters['charset'];\n            }\n        }\n\n        // #1487700: workaround for lack of charset in malformed structure\n        if (empty($struct->charset) && !empty($mime_headers) && !empty($mime_headers->charset)) {\n            $struct->charset = $mime_headers->charset;\n        }\n\n        // read content encoding\n        if (!empty($part[5])) {\n            $struct->encoding = strtolower($part[5]);\n            $struct->headers['content-transfer-encoding'] = $struct->encoding;\n        }\n\n        // get part size\n        if (!empty($part[6])) {\n            $struct->size = intval($part[6]);\n        }\n\n        // read part disposition\n        $di = 8;\n        if ($struct->ctype_primary == 'text') {\n            $di += 1;\n        }\n        else if ($struct->mimetype == 'message/rfc822') {\n            $di += 3;\n        }\n\n        if (isset($part[$di]) && is_array($part[$di]) && count($part[$di]) == 2) {\n            $struct->disposition = strtolower($part[$di][0]);\n            if ($struct->disposition && $struct->disposition !== 'inline' && $struct->disposition !== 'attachment') {\n                // RFC2183, Section 2.8 - unrecognized type should be treated as \"attachment\"\n                $struct->disposition = 'attachment';\n            }\n            if (is_array($part[$di][1])) {\n                for ($n=0; $n<count($part[$di][1]); $n+=2) {\n                    $struct->d_parameters[strtolower($part[$di][1][$n])] = $part[$di][1][$n+1];\n                }\n            }\n        }\n\n        // get message/rfc822's child-parts\n        if (isset($part[8]) && is_array($part[8]) && $di != 8) {\n            $struct->parts = [];\n\n            for ($i=0; $i<count($part[8]); $i++) {\n                if (!is_array($part[8][$i])) {\n                    break;\n                }\n\n                $subpart_id = $struct->mime_id ? $struct->mime_id . '.' . ($i+1) : $i+1;\n\n                if ($this->is_attachment_part($part[8][$i])) {\n                    $mime_part_headers[] = $subpart_id;\n                }\n\n                $struct->parts[$subpart_id] = $part[8][$i];\n            }\n\n            // Fetch attachment parts' headers in one go\n            if (!empty($mime_part_headers)) {\n                $mime_part_headers = $this->conn->fetchMIMEHeaders($this->folder, $this->msg_uid, $mime_part_headers);\n            }\n\n            $count = 0;\n            foreach ($struct->parts as $idx => $subpart) {\n                $struct->parts[$idx] = $this->structure_part($subpart, ++$count, $struct->mime_id,\n                    !empty($mime_part_headers[$idx]) ? $mime_part_headers[$idx] : null);\n            }\n\n            $struct->parts = array_values($struct->parts);\n        }\n\n        // get part ID\n        if (!empty($part[3])) {\n            $struct->content_id = $struct->headers['content-id'] = trim($part[3]);\n\n            if (empty($struct->disposition)) {\n                $struct->disposition = 'inline';\n            }\n        }\n\n        // fetch message headers if message/rfc822 or named part (could contain Content-Location header)\n        if (\n            $struct->ctype_primary == 'message'\n            || (!empty($struct->ctype_parameters['name']) && !empty($struct->content_id))\n        ) {\n            if (empty($mime_headers)) {\n                $mime_headers = $this->conn->fetchPartHeader($this->folder, $this->msg_uid, true, $struct->mime_id);\n            }\n\n            if (is_string($mime_headers)) {\n                $struct->headers = rcube_mime::parse_headers($mime_headers) + $struct->headers;\n            }\n            else if (is_object($mime_headers)) {\n                $struct->headers = get_object_vars($mime_headers) + $struct->headers;\n            }\n\n            // get real content-type of message/rfc822\n            if ($struct->mimetype == 'message/rfc822') {\n                // single-part\n                if (!is_array($part[8][0])) {\n                    $struct->real_mimetype = strtolower($part[8][0] . '/' . $part[8][1]);\n                }\n                // multi-part\n                else {\n                    for ($n=0; $n<count($part[8]); $n++) {\n                        if (!is_array($part[8][$n])) {\n                            break;\n                        }\n                    }\n                    $struct->real_mimetype = 'multipart/' . strtolower($part[8][$n]);\n                }\n            }\n\n            if ($struct->ctype_primary == 'message' && empty($struct->parts)) {\n                if (is_array($part[8]) && $di != 8) {\n                    $struct->parts[] = $this->structure_part($part[8], ++$count, $struct->mime_id);\n                }\n            }\n        }\n\n        // normalize filename property\n        $this->set_part_filename($struct, $mime_headers);\n\n        return $struct;\n    }\n\n    /**\n     * Check if the mail structure part is an attachment part and requires\n     * fetching the MIME headers for further processing.\n     */\n    protected function is_attachment_part($part)\n    {\n        if (!empty($part[2]) && is_array($part[2]) && empty($part[3])) {\n            $params = array_map('strtolower', (array) $part[2]);\n            $find   = ['name', 'filename', 'name*', 'filename*', 'name*0', 'filename*0', 'name*0*', 'filename*0*'];\n\n            // In case of malformed header check disposition. E.g. some servers for\n            // \"Content-Type: PDF; name=test.pdf\" may return text/plain and ignore name argument\n            return count(array_intersect($params, $find)) > 0\n                || (isset($part[9]) && is_array($part[9]) && stripos($part[9][0], 'attachment') === 0);\n        }\n\n        return false;\n    }\n\n    /**\n     * Set attachment filename from message part structure\n     *\n     * @param rcube_message_part $part    Part object\n     * @param string             $headers Part's raw headers\n     */\n    protected function set_part_filename(&$part, $headers = null)\n    {\n        // Some IMAP servers do not support RFC2231, if we have\n        // part headers we'll get attachment name from them, not the BODYSTRUCTURE\n        $rfc2231_params = [];\n        if (!empty($headers) || !empty($part->headers)) {\n            if (is_object($headers)) {\n                $headers = get_object_vars($headers);\n            }\n            else {\n                $headers = !empty($headers) ? rcube_mime::parse_headers($headers) : $part->headers;\n            }\n\n            $ctype       = isset($headers['content-type']) ? $headers['content-type'] : '';\n            $disposition = isset($headers['content-disposition']) ? $headers['content-disposition'] : '';\n            $tokens      = preg_split('/;[\\s\\r\\n\\t]*/',  $ctype. ';' . $disposition);\n\n            foreach ($tokens as $token) {\n                // TODO: Use order defined by the parameter name not order of occurrence in the header\n                if (preg_match('/^(name|filename)\\*([0-9]*)\\*?=\"*([^\"]+)\"*/i', $token, $matches)) {\n                    $key = strtolower($matches[1]);\n                    $rfc2231_params[$key] = (isset($rfc2231_params[$key]) ? $rfc2231_params[$key] : '') . $matches[3];\n                }\n            }\n        }\n\n        if (isset($rfc2231_params['name'])) {\n            $filename_encoded = $rfc2231_params['name'];\n        }\n        else if (isset($rfc2231_params['filename'])) {\n            $filename_encoded = $rfc2231_params['filename'];\n        }\n        else if (isset($part->d_parameters['filename*'])) {\n            $filename_encoded = $part->d_parameters['filename*'];\n        }\n        else if (isset($part->ctype_parameters['name*'])) {\n            $filename_encoded = $part->ctype_parameters['name*'];\n        }\n        else if (!empty($part->d_parameters['filename'])) {\n            $filename_mime = $part->d_parameters['filename'];\n        }\n        // read 'name' after rfc2231 parameters as it may contain truncated filename (from Thunderbird)\n        else if (!empty($part->ctype_parameters['name'])) {\n            $filename_mime = $part->ctype_parameters['name'];\n        }\n        else if (!empty($part->headers['content-description'])) {\n            $filename_mime = $part->headers['content-description'];\n        }\n        else {\n            return;\n        }\n\n        // decode filename\n        if (isset($filename_mime)) {\n            if (!empty($part->charset)) {\n                $charset = $part->charset;\n            }\n            else if (!empty($this->struct_charset)) {\n                $charset = $this->struct_charset;\n            }\n            else {\n                $charset = rcube_charset::detect($filename_mime, $this->default_charset);\n            }\n\n            $part->filename = rcube_mime::decode_mime_string($filename_mime, $charset);\n        }\n        else if (isset($filename_encoded)) {\n            // decode filename according to RFC 2231, Section 4\n            if (preg_match(\"/^([^']*)'[^']*'(.*)$/\", $filename_encoded, $fmatches)) {\n                $filename_charset = $fmatches[1];\n                $filename_encoded = $fmatches[2];\n            }\n\n            $part->filename = rawurldecode($filename_encoded);\n\n            if (!empty($filename_charset)) {\n                $part->filename = rcube_charset::convert($part->filename, $filename_charset);\n            }\n        }\n\n        // Workaround for invalid Content-Type (#6816)\n        // Some servers for \"Content-Type: PDF; name=test.pdf\" may return text/plain and ignore name argument\n        if ($part->mimetype == 'text/plain' && !empty($headers['content-type'])) {\n            $tokens = preg_split('/;[\\s\\r\\n\\t]*/', $headers['content-type']);\n            $type   = rcube_mime::fix_mimetype($tokens[0]);\n\n            if ($type != $part->mimetype) {\n                $part->mimetype = $type;\n                list($part->ctype_primary, $part->ctype_secondary) = explode('/', $part->mimetype);\n            }\n        }\n    }\n\n    /**\n     * Get charset name from message structure (first part)\n     *\n     * @param array $structure Message structure\n     *\n     * @return string Charset name\n     */\n    protected function structure_charset($structure)\n    {\n        while (is_array($structure)) {\n            if (is_array($structure[2]) && $structure[2][0] == 'charset') {\n                return $structure[2][1];\n            }\n            $structure = $structure[0];\n        }\n    }\n\n\n    /**\n     * Fetch message body of a specific message from the server\n     *\n     * @param int                $uid       Message UID\n     * @param string             $part      Part number\n     * @param rcube_message_part $o_part    Part object created by get_structure()\n     * @param mixed              $print     True to print part, resource to write part contents in\n     * @param resource           $fp        File pointer to save the message part\n     * @param bool               $skip_charset_conv Disables charset conversion\n     * @param int                $max_bytes Only read this number of bytes\n     * @param bool               $formatted Enables formatting of text/* parts bodies\n     *\n     * @return string Message/part body if not printed\n     */\n    public function get_message_part($uid, $part = 1, $o_part = null, $print = null, $fp = null,\n        $skip_charset_conv = false, $max_bytes = 0, $formatted = true)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        // get part data if not provided\n        if (!is_object($o_part)) {\n            $structure = $this->conn->getStructure($this->folder, $uid, true);\n            $part_data = rcube_imap_generic::getStructurePartData($structure, $part);\n\n            $o_part = new rcube_message_part;\n            $o_part->ctype_primary   = $part_data['type'];\n            $o_part->ctype_secondary = $part_data['subtype'];\n            $o_part->encoding        = isset($part_data['encoding']) ? $part_data['encoding'] : null;\n            $o_part->charset         = isset($part_data['charset']) ? $part_data['charset'] : null;\n            $o_part->size            = isset($part_data['size']) ? $part_data['size'] : null;\n        }\n\n        $body = '';\n\n        // Note: multipart/* parts will have size=0, we don't want to ignore them\n        if ($o_part && ($o_part->size || $o_part->ctype_primary == 'multipart')) {\n            $formatted = $formatted && $o_part->ctype_primary == 'text';\n            $body = $this->conn->handlePartBody($this->folder, $uid, true,\n                $part ? $part : 'TEXT', $o_part->encoding, $print, $fp, $formatted, $max_bytes);\n        }\n\n        if ($fp || $print) {\n            return true;\n        }\n\n        // convert charset (if text or message part)\n        if ($body && preg_match('/^(text|message)$/', $o_part->ctype_primary)) {\n            // Remove NULL characters if any (#1486189)\n            if ($formatted && strpos($body, \"\\x00\") !== false) {\n                $body = str_replace(\"\\x00\", '', $body);\n            }\n\n            if (!$skip_charset_conv) {\n                if (!$o_part->charset || strtoupper($o_part->charset) == 'US-ASCII') {\n                    // try to extract charset information from HTML meta tag (#1488125)\n                    if ($o_part->ctype_secondary == 'html' && preg_match('/<meta[^>]+charset=([a-z0-9-_]+)/i', $body, $m)) {\n                        $o_part->charset = strtoupper($m[1]);\n                    }\n                    else {\n                        $o_part->charset = $this->default_charset;\n                    }\n                }\n                $body = rcube_charset::convert($body, $o_part->charset);\n            }\n        }\n\n        return $body;\n    }\n\n    /**\n     * Returns the whole message source as string (or saves to a file)\n     *\n     * @param int      $uid  Message UID\n     * @param resource $fp   File pointer to save the message\n     * @param string   $part Optional message part ID\n     *\n     * @return string Message source string\n     */\n    public function get_raw_body($uid, $fp = null, $part = null)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->handlePartBody($this->folder, $uid,\n            true, $part, null, false, $fp);\n    }\n\n    /**\n     * Returns the message headers as string\n     *\n     * @param int    $uid  Message UID\n     * @param string $part Optional message part ID\n     *\n     * @return string Message headers string\n     */\n    public function get_raw_headers($uid, $part = null)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->fetchPartHeader($this->folder, $uid, true, $part);\n    }\n\n    /**\n     * Sends the whole message source to stdout\n     *\n     * @param int  $uid       Message UID\n     * @param bool $formatted Enables line-ending formatting\n     */\n    public function print_raw_body($uid, $formatted = true)\n    {\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        $this->conn->handlePartBody($this->folder, $uid, true, null, null, true, null, $formatted);\n    }\n\n    /**\n     * Set message flag to one or several messages\n     *\n     * @param mixed  $uids       Message UIDs as array or comma-separated string, or '*'\n     * @param string $flag       Flag to set: SEEN, UNDELETED, DELETED, RECENT, ANSWERED, DRAFT, MDNSENT\n     * @param string $folder     Folder name\n     * @param bool   $skip_cache True to skip message cache clean up\n     *\n     * @return bool Operation status\n     */\n    public function set_flag($uids, $flag, $folder = null, $skip_cache = false)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $flag = strtoupper($flag);\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        if (strpos($flag, 'UN') === 0) {\n            $result = $this->conn->unflag($folder, $uids, substr($flag, 2));\n        }\n        else {\n            $result = $this->conn->flag($folder, $uids, $flag);\n        }\n\n        if ($result && !$skip_cache) {\n            // reload message headers if cached\n            // update flags instead removing from cache\n            if ($mcache = $this->get_mcache_engine()) {\n                $status = strpos($flag, 'UN') !== 0;\n                $mflag  = preg_replace('/^UN/', '', $flag);\n                $mcache->change_flag($folder, $all_mode ? null : explode(',', $uids),\n                    $mflag, $status);\n            }\n\n            // clear cached counters\n            if ($flag == 'SEEN' || $flag == 'UNSEEN') {\n                $this->clear_messagecount($folder, ['SEEN', 'UNSEEN']);\n            }\n            else if ($flag == 'DELETED' || $flag == 'UNDELETED') {\n                $this->clear_messagecount($folder, ['ALL', 'THREADS']);\n                if ($this->options['skip_deleted']) {\n                    // remove cached messages\n                    $this->clear_message_cache($folder, $all_mode ? null : explode(',', $uids));\n                }\n            }\n\n            $this->set_search_dirty($folder);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Append a mail message (source) to a specific folder\n     *\n     * @param string       $folder  Target folder\n     * @param string|array $message The message source string or filename\n     *                              or array (of strings and file pointers)\n     * @param string       $headers Headers string if $message contains only the body\n     * @param bool         $is_file True if $message is a filename\n     * @param array        $flags   Message flags\n     * @param mixed        $date    Message internal date\n     * @param bool         $binary  Enables BINARY append\n     *\n     * @return int|bool Appended message UID or True on success, False on error\n     */\n    public function save_message($folder, &$message, $headers = '', $is_file = false, $flags = [], $date = null, $binary = false)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // make sure folder exists\n        if (!$this->folder_exists($folder)) {\n            return false;\n        }\n\n        $date = $this->date_format($date);\n\n        if ($is_file) {\n            $saved = $this->conn->appendFromFile($folder, $message, $headers, $flags, $date, $binary);\n        }\n        else {\n            $saved = $this->conn->append($folder, $message, $flags, $date, $binary);\n        }\n\n        if ($saved) {\n            // increase messagecount of the target folder\n            $this->set_messagecount($folder, 'ALL', 1);\n\n            $this->plugins->exec_hook('message_saved', [\n                    'folder'  => $folder,\n                    'message' => $message,\n                    'headers' => $headers,\n                    'is_file' => $is_file,\n                    'flags'   => $flags,\n                    'date'    => $date,\n                    'binary'  => $binary,\n                    'result'  => $saved,\n            ]);\n        }\n\n        return $saved;\n    }\n\n    /**\n     * Move a message from one folder to another\n     *\n     * @param mixed  $uids      Message UIDs as array or comma-separated string, or '*'\n     * @param string $to_mbox   Target folder\n     * @param string $from_mbox Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function move_message($uids, $to_mbox, $from_mbox = '')\n    {\n        if (!strlen($from_mbox)) {\n            $from_mbox = $this->folder;\n        }\n\n        if ($to_mbox === $from_mbox) {\n            return false;\n        }\n\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $config   = rcube::get_instance()->config;\n        $to_trash = $to_mbox == $config->get('trash_mbox');\n\n        // flag messages as read before moving them\n        if ($to_trash && $config->get('read_when_deleted')) {\n            // don't flush cache (4th argument)\n            $this->set_flag($uids, 'SEEN', $from_mbox, true);\n        }\n\n        // move messages\n        $moved = $this->conn->move($uids, $from_mbox, $to_mbox);\n\n        // when moving to Trash we make sure the folder exists\n        // as it's uncommon scenario we do this when MOVE fails, not before\n        if (!$moved && $to_trash && $this->get_response_code() == rcube_storage::TRYCREATE) {\n            if ($this->create_folder($to_mbox, true, 'trash')) {\n                $moved = $this->conn->move($uids, $from_mbox, $to_mbox);\n            }\n        }\n\n        if ($moved) {\n            $this->clear_messagecount($from_mbox);\n            $this->clear_messagecount($to_mbox);\n            $this->set_search_dirty($from_mbox);\n            $this->set_search_dirty($to_mbox);\n\n            // unset threads internal cache\n            unset($this->icache['threads']);\n\n            // remove message ids from search set\n            if ($this->search_set && $from_mbox == $this->folder) {\n                // threads are too complicated to just remove messages from set\n                if ($this->search_threads || $all_mode) {\n                    $this->refresh_search();\n                }\n                else if (!$this->search_set->incomplete) {\n                    $this->search_set->filter(explode(',', $uids), $this->folder);\n                }\n            }\n\n            // remove cached messages\n            // @TODO: do cache update instead of clearing it\n            $this->clear_message_cache($from_mbox, $all_mode ? null : explode(',', $uids));\n        }\n\n        return $moved;\n    }\n\n    /**\n     * Copy a message from one folder to another\n     *\n     * @param mixed  $uids      Message UIDs as array or comma-separated string, or '*'\n     * @param string $to_mbox   Target folder\n     * @param string $from_mbox Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function copy_message($uids, $to_mbox, $from_mbox = '')\n    {\n        if (!strlen($from_mbox)) {\n            $from_mbox = $this->folder;\n        }\n\n        list($uids, ) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // copy messages\n        $copied = $this->conn->copy($uids, $from_mbox, $to_mbox);\n\n        if ($copied) {\n            $this->clear_messagecount($to_mbox);\n        }\n\n        return $copied;\n    }\n\n    /**\n     * Mark messages as deleted and expunge them\n     *\n     * @param mixed  $uids   Message UIDs as array or comma-separated string, or '*'\n     * @param string $folder Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function delete_message($uids, $folder = '')\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $deleted = $this->conn->flag($folder, $uids, 'DELETED');\n\n        if ($deleted) {\n            // send expunge command in order to have the deleted message\n            // really deleted from the folder\n            $this->expunge_message($uids, $folder, false);\n            $this->clear_messagecount($folder);\n\n            // unset threads internal cache\n            unset($this->icache['threads']);\n\n            $this->set_search_dirty($folder);\n\n            // remove message ids from search set\n            if ($this->search_set && $folder == $this->folder) {\n                // threads are too complicated to just remove messages from set\n                if ($this->search_threads || $all_mode) {\n                    $this->refresh_search();\n                }\n                else if (!$this->search_set->incomplete) {\n                    $this->search_set->filter(explode(',', $uids));\n                }\n            }\n\n            // remove cached messages\n            $this->clear_message_cache($folder, $all_mode ? null : explode(',', $uids));\n        }\n\n        return $deleted;\n    }\n\n    /**\n     * Send IMAP expunge command and clear cache\n     *\n     * @param mixed  $uids        Message UIDs as array or comma-separated string, or '*'\n     * @param string $folder      Folder name\n     * @param bool   $clear_cache False if cache should not be cleared\n     *\n     * @return bool True on success, False on failure\n     */\n    public function expunge_message($uids, $folder = null, $clear_cache = true)\n    {\n        if ($uids && $this->get_capability('UIDPLUS')) {\n            list($uids, $all_mode) = $this->parse_uids($uids);\n        }\n        else {\n            $uids = null;\n        }\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // force folder selection and check if folder is writeable\n        // to prevent a situation when CLOSE is executed on closed\n        // or EXPUNGE on read-only folder\n        $result = $this->conn->select($folder);\n        if (!$result) {\n            return false;\n        }\n\n        if (!$this->conn->data['READ-WRITE']) {\n            $this->conn->setError(rcube_imap_generic::ERROR_READONLY, \"Folder is read-only\");\n            return false;\n        }\n\n        // CLOSE(+SELECT) should be faster than EXPUNGE\n        if (empty($uids) || !empty($all_mode)) {\n            $result = $this->conn->close();\n        }\n        else {\n            $result = $this->conn->expunge($folder, $uids);\n        }\n\n        if ($result && $clear_cache) {\n            $this->clear_message_cache($folder, !empty($all_mode) ? null : explode(',', $uids));\n            $this->clear_messagecount($folder);\n        }\n\n        return $result;\n    }\n\n\n    /* --------------------------------\n     *        folder management\n     * --------------------------------*/\n\n    /**\n     * Public method for listing subscribed folders.\n     *\n     * @param   string  $root      Optional root folder\n     * @param   string  $name      Optional name pattern\n     * @param   string  $filter    Optional filter\n     * @param   string  $rights    Optional ACL requirements\n     * @param   bool    $skip_sort Enable to return unsorted list (for better performance)\n     *\n     * @return  array   List of folders\n     */\n    public function list_folders_subscribed($root = '', $name = '*', $filter = null, $rights = null, $skip_sort = false)\n    {\n        $cache_key = rcube_cache::key_name('mailboxes', [$root, $name, $filter, $rights]);\n\n        // get cached folder list\n        $a_mboxes = $this->get_cache($cache_key);\n        if (is_array($a_mboxes)) {\n            return $a_mboxes;\n        }\n\n        // Give plugins a chance to provide a list of folders\n        $data = $this->plugins->exec_hook('storage_folders',\n            ['root' => $root, 'name' => $name, 'filter' => $filter, 'mode' => 'LSUB']);\n\n        if (isset($data['folders'])) {\n            $a_mboxes = $data['folders'];\n        }\n        else {\n            $a_mboxes = $this->list_folders_subscribed_direct($root, $name);\n        }\n\n        if (!is_array($a_mboxes)) {\n            return [];\n        }\n\n        // filter folders list according to rights requirements\n        if ($rights && $this->get_capability('ACL')) {\n            $a_mboxes = $this->filter_rights($a_mboxes, $rights);\n        }\n\n        // INBOX should always be available\n        if (in_array_nocase($root . $name, ['*', '%', 'INBOX', 'INBOX*'])\n            && (!$filter || $filter == 'mail') && !in_array('INBOX', $a_mboxes)\n        ) {\n            array_unshift($a_mboxes, 'INBOX');\n        }\n\n        // sort folders (always sort for cache)\n        if (!$skip_sort || $this->cache) {\n            $a_mboxes = $this->sort_folder_list($a_mboxes);\n        }\n\n        // write folders list to cache\n        $this->update_cache($cache_key, $a_mboxes);\n\n        return $a_mboxes;\n    }\n\n    /**\n     * Method for direct folders listing (LSUB)\n     *\n     * @param string $root Optional root folder\n     * @param string $name Optional name pattern\n     *\n     * @return array List of subscribed folders\n     * @see rcube_imap::list_folders_subscribed()\n     */\n    public function list_folders_subscribed_direct($root = '', $name = '*')\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        $config    = rcube::get_instance()->config;\n        $list_root = $root === '' && $this->list_root ? $this->list_root : $root;\n\n        // Server supports LIST-EXTENDED, we can use selection options\n        // #1486225: Some dovecot versions return wrong result using LIST-EXTENDED\n        $list_extended = !$config->get('imap_force_lsub') && $this->get_capability('LIST-EXTENDED');\n\n        if ($list_extended) {\n            // This will also set folder options, LSUB doesn't do that\n            $result = $this->conn->listMailboxes($list_root, $name, null, ['SUBSCRIBED']);\n        }\n        else {\n            // retrieve list of folders from IMAP server using LSUB\n            $result = $this->conn->listSubscribed($list_root, $name);\n        }\n\n        if (!is_array($result)) {\n            return [];\n        }\n\n        // Add/Remove folders according to some configuration options\n        $this->list_folders_filter($result, $root . $name, ($list_extended ? 'ext-' : '') . 'subscribed');\n\n        // Save the last command state, so we can ignore errors on any following UNSUBSCRIBE calls\n        $state = $this->save_conn_state();\n\n        if ($list_extended) {\n            // unsubscribe non-existent folders, remove from the list\n            if ($name == '*' && !empty($this->conn->data['LIST'])) {\n                foreach ($result as $idx => $folder) {\n                    if (($opts = $this->conn->data['LIST'][$folder])\n                        && in_array_nocase('\\\\NonExistent', $opts)\n                    ) {\n                        $this->conn->unsubscribe($folder);\n                        unset($result[$idx]);\n                    }\n                }\n            }\n        }\n        else {\n            // unsubscribe non-existent folders, remove them from the list\n            if (!empty($result) && $name == '*') {\n                $existing = $this->list_folders($root, $name);\n\n                // Try to make sure the list of existing folders is not malformed,\n                // we don't want to unsubscribe existing folders on error\n                if (is_array($existing) && (!empty($root) || count($existing) > 1)) {\n                    $nonexisting = array_diff($result, $existing);\n                    $result      = array_diff($result, $nonexisting);\n\n                    foreach ($nonexisting as $folder) {\n                        $this->conn->unsubscribe($folder);\n                    }\n                }\n            }\n        }\n\n        $this->restore_conn_state($state);\n\n        return $result;\n    }\n\n    /**\n     * Get a list of all folders available on the server\n     *\n     * @param string  $root      IMAP root dir\n     * @param string  $name      Optional name pattern\n     * @param mixed   $filter    Optional filter\n     * @param string  $rights    Optional ACL requirements\n     * @param bool    $skip_sort Enable to return unsorted list (for better performance)\n     *\n     * @return array Indexed array with folder names\n     */\n    public function list_folders($root = '', $name = '*', $filter = null, $rights = null, $skip_sort = false)\n    {\n        $cache_key = rcube_cache::key_name('mailboxes.list', [$root, $name, $filter, $rights]);\n\n        // get cached folder list\n        $a_mboxes = $this->get_cache($cache_key);\n        if (is_array($a_mboxes)) {\n            return $a_mboxes;\n        }\n\n        // Give plugins a chance to provide a list of folders\n        $data = $this->plugins->exec_hook('storage_folders',\n            ['root' => $root, 'name' => $name, 'filter' => $filter, 'mode' => 'LIST']);\n\n        if (isset($data['folders'])) {\n            $a_mboxes = $data['folders'];\n        }\n        else {\n            // retrieve list of folders from IMAP server\n            $a_mboxes = $this->list_folders_direct($root, $name);\n        }\n\n        if (!is_array($a_mboxes)) {\n            $a_mboxes = [];\n        }\n\n        // INBOX should always be available\n        if (in_array_nocase($root . $name, ['*', '%', 'INBOX', 'INBOX*'])\n            && (!$filter || $filter == 'mail') && !in_array('INBOX', $a_mboxes)\n        ) {\n            array_unshift($a_mboxes, 'INBOX');\n        }\n\n        // cache folder attributes\n        if ($root == '' && $name == '*' && empty($filter) && !empty($this->conn->data)) {\n            $this->update_cache('mailboxes.attributes', $this->conn->data['LIST']);\n        }\n\n        // filter folders list according to rights requirements\n        if ($rights && $this->get_capability('ACL')) {\n            $a_mboxes = $this->filter_rights($a_mboxes, $rights);\n        }\n\n        // filter folders and sort them\n        if (!$skip_sort) {\n            $a_mboxes = $this->sort_folder_list($a_mboxes);\n        }\n\n        // write folders list to cache\n        $this->update_cache($cache_key, $a_mboxes);\n\n        return $a_mboxes;\n    }\n\n    /**\n     * Method for direct folders listing (LIST)\n     *\n     * @param string $root Optional root folder\n     * @param string $name Optional name pattern\n     *\n     * @return array List of folders\n     * @see rcube_imap::list_folders()\n     */\n    public function list_folders_direct($root = '', $name = '*')\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        $list_root = $root === '' && $this->list_root ? $this->list_root : $root;\n\n        $result = $this->conn->listMailboxes($list_root, $name);\n\n        if (!is_array($result)) {\n            return [];\n        }\n\n        // Add/Remove folders according to some configuration options\n        $this->list_folders_filter($result, $root . $name);\n\n        return $result;\n    }\n\n    /**\n     * Apply configured filters on folders list\n     */\n    protected function list_folders_filter(&$result, $root, $update_type = null)\n    {\n        $config = rcube::get_instance()->config;\n\n        // #1486796: some server configurations doesn't return folders in all namespaces\n        if ($root === '*' && $config->get('imap_force_ns')) {\n            $this->list_folders_update($result, $update_type);\n        }\n\n        // Remove hidden folders\n        if ($config->get('imap_skip_hidden_folders')) {\n            $result = array_filter($result, function($v) { return $v[0] != '.'; });\n        }\n\n        // Remove folders in shared namespaces (if configured, see self::set_env())\n        if ($root === '*' && !empty($this->list_excludes)) {\n            $result = array_filter($result, function($v) {\n                foreach ($this->list_excludes as $prefix) {\n                    if (strpos($v, $prefix) === 0) {\n                        return false;\n                    }\n                }\n\n                return true;\n            });\n        }\n    }\n\n    /**\n     * Fix folders list by adding folders from other namespaces.\n     * Needed on some servers e.g. Courier IMAP\n     *\n     * @param array  $result Reference to folders list\n     * @param string $type   Listing type (ext-subscribed, subscribed or all)\n     */\n    protected function list_folders_update(&$result, $type = null)\n    {\n        $namespace = $this->get_namespace();\n        $search    = [];\n\n        // build list of namespace prefixes\n        foreach ((array)$namespace as $ns) {\n            if (is_array($ns)) {\n                foreach ($ns as $ns_data) {\n                    if (strlen($ns_data[0])) {\n                        $search[] = $ns_data[0];\n                    }\n                }\n            }\n        }\n\n        if (!empty($search)) {\n            // go through all folders detecting namespace usage\n            foreach ($result as $folder) {\n                foreach ($search as $idx => $prefix) {\n                    if (strpos($folder, $prefix) === 0) {\n                        unset($search[$idx]);\n                    }\n                }\n                if (empty($search)) {\n                    break;\n                }\n            }\n\n            // get folders in hidden namespaces and add to the result\n            foreach ($search as $prefix) {\n                if ($type == 'ext-subscribed') {\n                    $list = $this->conn->listMailboxes('', $prefix . '*', null, ['SUBSCRIBED']);\n                }\n                else if ($type == 'subscribed') {\n                    $list = $this->conn->listSubscribed('', $prefix . '*');\n                }\n                else {\n                    $list = $this->conn->listMailboxes('', $prefix . '*');\n                }\n\n                if (!empty($list)) {\n                    $result = array_merge($result, $list);\n                }\n            }\n        }\n    }\n\n    /**\n     * Filter the given list of folders according to access rights\n     *\n     * For performance reasons we assume user has full rights\n     * on all personal folders.\n     */\n    protected function filter_rights($a_folders, $rights)\n    {\n        $regex = '/('.$rights.')/';\n\n        foreach ($a_folders as $idx => $folder) {\n            if ($this->folder_namespace($folder) == 'personal') {\n                continue;\n            }\n\n            $myrights = implode('', (array)$this->my_rights($folder));\n\n            if ($myrights !== null && !preg_match($regex, $myrights)) {\n                unset($a_folders[$idx]);\n            }\n        }\n\n        return $a_folders;\n    }\n\n    /**\n     * Get mailbox quota information\n     *\n     * @param string $folder Folder name\n     *\n     * @return mixed Quota info or False if not supported\n     */\n    public function get_quota($folder = null)\n    {\n        if ($this->get_capability('QUOTA') && $this->check_connection()) {\n            return $this->conn->getQuota($folder);\n        }\n\n        return false;\n    }\n\n    /**\n     * Get folder size (size of all messages in a folder)\n     *\n     * @param string $folder Folder name\n     *\n     * @return int Folder size in bytes, False on error\n     */\n    public function folder_size($folder)\n    {\n        if (!strlen($folder)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return 0;\n        }\n\n        if ($this->get_capability('STATUS=SIZE')) {\n            $status = $this->conn->status($folder, ['SIZE']);\n            if (is_array($status) && array_key_exists('SIZE', $status)) {\n                return (int) $status['SIZE'];\n            }\n        }\n\n        // On Cyrus we can use special folder annotation, which should be much faster\n        if ($this->get_vendor() == 'cyrus') {\n            $idx    = '/shared/vendor/cmu/cyrus-imapd/size';\n            $result = $this->get_metadata($folder, $idx, [], true);\n\n            if (!empty($result) && isset($result[$folder][$idx]) && is_numeric($result[$folder][$idx])) {\n                return $result[$folder][$idx];\n            }\n        }\n\n        // @TODO: could we try to use QUOTA here?\n        $result = $this->conn->fetchHeaderIndex($folder, '1:*', 'SIZE', false);\n\n        if (is_array($result)) {\n            $result = array_sum($result);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Subscribe to a specific folder(s)\n     *\n     * @param array $folders Folder name(s)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function subscribe($folders)\n    {\n        // let this common function do the main work\n        return $this->change_subscription($folders, 'subscribe');\n    }\n\n    /**\n     * Unsubscribe folder(s)\n     *\n     * @param array $a_mboxes Folder name(s)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function unsubscribe($folders)\n    {\n        // let this common function do the main work\n        return $this->change_subscription($folders, 'unsubscribe');\n    }\n\n    /**\n     * Create a new folder on the server and register it in local cache\n     *\n     * @param string $folder    New folder name\n     * @param bool   $subscribe True if the new folder should be subscribed\n     * @param string $type      Optional folder type (junk, trash, drafts, sent, archive)\n     * @param bool   $noselect  Make the folder a \\NoSelect folder by adding hierarchy\n     *                          separator at the end (useful for server that do not support\n     *                          both folders and messages as folder children)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function create_folder($folder, $subscribe = false, $type = null, $noselect = false)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        if ($noselect) {\n            $folder .= $this->delimiter;\n        }\n\n        $result = $this->conn->createFolder($folder, $type ? [\"\\\\\" . ucfirst($type)] : null);\n\n        // Folder creation may fail when specific special-use flag is not supported.\n        // Try to create it anyway with no flag specified (#7147)\n        if (!$result && $type) {\n            $result = $this->conn->createFolder($folder);\n        }\n\n        // try to subscribe it\n        if ($result) {\n            // clear cache\n            $this->clear_cache('mailboxes', true);\n\n            if ($subscribe && !$noselect) {\n                $this->subscribe($folder);\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Set a new name to an existing folder\n     *\n     * @param string $folder   Folder to rename\n     * @param string $new_name New folder name\n     *\n     * @return bool True on success, False on failure\n     */\n    public function rename_folder($folder, $new_name)\n    {\n        if (!strlen($new_name)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $delm = $this->get_hierarchy_delimiter();\n\n        // get list of subscribed folders\n        if ((strpos($folder, '%') === false) && (strpos($folder, '*') === false)) {\n            $a_subscribed = $this->list_folders_subscribed('', $folder . $delm . '*');\n            $subscribed   = $this->folder_exists($folder, true);\n        }\n        else {\n            $a_subscribed = $this->list_folders_subscribed();\n            $subscribed   = in_array($folder, $a_subscribed);\n        }\n\n        $result = $this->conn->renameFolder($folder, $new_name);\n\n        if ($result) {\n            // unsubscribe the old folder, subscribe the new one\n            if ($subscribed) {\n                $this->conn->unsubscribe($folder);\n                $this->conn->subscribe($new_name);\n            }\n\n            // check if folder children are subscribed\n            foreach ($a_subscribed as $c_subscribed) {\n                if (strpos($c_subscribed, $folder.$delm) === 0) {\n                    $this->conn->unsubscribe($c_subscribed);\n                    $this->conn->subscribe(preg_replace('/^'.preg_quote($folder, '/').'/',\n                        $new_name, $c_subscribed));\n\n                    // clear cache\n                    $this->clear_message_cache($c_subscribed);\n                }\n            }\n\n            // clear cache\n            $this->clear_message_cache($folder);\n            $this->clear_cache('mailboxes', true);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Remove folder (with subfolders) from the server\n     *\n     * @param string $folder Folder name\n     *\n     * @return bool True on success, False on failure\n     */\n    public function delete_folder($folder)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $delm = $this->get_hierarchy_delimiter();\n\n        // get list of sub-folders or all folders\n        // if folder name contains special characters\n        $path       = strspn($folder, '%*') > 0 ? ($folder . $delm) : '';\n        $sub_mboxes = $this->list_folders('', $path . '*');\n\n        // According to RFC3501 deleting a \\Noselect folder\n        // with subfolders may fail. To workaround this we delete\n        // subfolders first (in reverse order) (#5466)\n        if (!empty($sub_mboxes)) {\n            foreach (array_reverse($sub_mboxes) as $mbox) {\n                if (strpos($mbox, $folder . $delm) === 0) {\n                    if ($this->conn->deleteFolder($mbox)) {\n                        $this->conn->unsubscribe($mbox);\n                        $this->clear_message_cache($mbox);\n                    }\n                }\n            }\n        }\n\n        // delete the folder\n        if ($result = $this->conn->deleteFolder($folder)) {\n            // and unsubscribe it\n            $this->conn->unsubscribe($folder);\n            $this->clear_message_cache($folder);\n        }\n\n        $this->clear_cache('mailboxes', true);\n\n        return $result;\n    }\n\n    /**\n     * Detect special folder associations stored in storage backend\n     */\n    public function get_special_folders($forced = false)\n    {\n        $result = parent::get_special_folders();\n        $rcube  = rcube::get_instance();\n\n        // Lock SPECIAL-USE after user preferences change (#4782)\n        if ($rcube->config->get('lock_special_folders')) {\n            return $result;\n        }\n\n        if (isset($this->icache['special-use'])) {\n            return array_merge($result, $this->icache['special-use']);\n        }\n\n        if (!$forced || !$this->get_capability('SPECIAL-USE')) {\n            return $result;\n        }\n\n        if (!$this->check_connection()) {\n            return $result;\n        }\n\n        $types   = array_map(function($value) { return \"\\\\\" . ucfirst($value); }, rcube_storage::$folder_types);\n        $special = [];\n\n        // request \\Subscribed flag in LIST response as performance improvement for folder_exists()\n        $folders = $this->conn->listMailboxes('', '*', ['SUBSCRIBED'], ['SPECIAL-USE']);\n\n        if (!empty($folders)) {\n            foreach ($folders as $idx => $folder) {\n                if (is_array($folder)) {\n                    $folder = $idx;\n                }\n                if (!empty($this->conn->data['LIST'][$folder])) {\n                    $flags = $this->conn->data['LIST'][$folder];\n                    foreach ($types as $type) {\n                        if (in_array($type, $flags)) {\n                            $type           = strtolower(substr($type, 1));\n                            $special[$type] = $folder;\n                        }\n                    }\n                }\n            }\n        }\n\n        $this->icache['special-use'] = $special;\n        unset($this->icache['special-folders']);\n\n        return array_merge($result, $special);\n    }\n\n    /**\n     * Set special folder associations stored in storage backend\n     */\n    public function set_special_folders($specials)\n    {\n        if (!$this->get_capability('SPECIAL-USE') || !$this->get_capability('METADATA')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $folders = $this->get_special_folders(true);\n        $old     = isset($this->icache['special-use']) ? (array) $this->icache['special-use'] : [];\n\n        foreach ($specials as $type => $folder) {\n            if (in_array($type, rcube_storage::$folder_types)) {\n                $old_folder = isset($old[$type]) ? $old[$type] : null;\n                if ($old_folder !== $folder) {\n                    // unset old-folder metadata\n                    if ($old_folder !== null) {\n                        $this->delete_metadata($old_folder, ['/private/specialuse']);\n                    }\n                    // set new folder metadata\n                    if ($folder) {\n                        $this->set_metadata($folder, ['/private/specialuse' => \"\\\\\" . ucfirst($type)]);\n                    }\n                }\n            }\n        }\n\n        $this->icache['special-use'] = $specials;\n        unset($this->icache['special-folders']);\n\n        return true;\n    }\n\n    /**\n     * Checks if folder exists and is subscribed\n     *\n     * @param string  $folder       Folder name\n     * @param bool    $subscription Enable subscription checking\n     *\n     * @return bool True or False\n     */\n    public function folder_exists($folder, $subscription = false)\n    {\n        if ($folder == 'INBOX') {\n            return true;\n        }\n\n        $key = $subscription ? 'subscribed' : 'existing';\n\n        if (!empty($this->icache[$key]) && in_array($folder, (array) $this->icache[$key])) {\n            return true;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        if ($subscription) {\n            // It's possible we already called LIST command, check LIST data\n            if (!empty($this->conn->data['LIST']) && !empty($this->conn->data['LIST'][$folder])\n                && in_array_nocase('\\\\Subscribed', $this->conn->data['LIST'][$folder])\n            ) {\n                $a_folders = [$folder];\n            }\n            else {\n                $a_folders = $this->conn->listSubscribed('', $folder);\n            }\n        }\n        else {\n            // It's possible we already called LIST command, check LIST data\n            if (!empty($this->conn->data['LIST']) && isset($this->conn->data['LIST'][$folder])) {\n                $a_folders = [$folder];\n            }\n            else {\n                $a_folders = $this->conn->listMailboxes('', $folder);\n            }\n        }\n\n        if (is_array($a_folders) && in_array($folder, $a_folders)) {\n            $this->icache[$key][] = $folder;\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the namespace where the folder is in\n     *\n     * @param string $folder Folder name\n     *\n     * @return string One of 'personal', 'other' or 'shared'\n     */\n    public function folder_namespace($folder)\n    {\n        if ($folder == 'INBOX') {\n            return 'personal';\n        }\n\n        foreach ($this->namespace as $type => $namespace) {\n            if (is_array($namespace)) {\n                foreach ($namespace as $ns) {\n                    if ($len = strlen($ns[0])) {\n                        if (($len > 1 && $folder == substr($ns[0], 0, -1))\n                            || strpos($folder, $ns[0]) === 0\n                        ) {\n                            return $type;\n                        }\n                    }\n                }\n            }\n        }\n\n        return 'personal';\n    }\n\n    /**\n     * Modify folder name according to personal namespace prefix.\n     * For output it removes prefix of the personal namespace if it's possible.\n     * For input it adds the prefix. Use it before creating a folder in root\n     * of the folders tree.\n     *\n     * @param string $folder Folder name\n     * @param string $mode   Mode name (out/in)\n     *\n     * @return string Folder name\n     */\n    public function mod_folder($folder, $mode = 'out')\n    {\n        $prefix = isset($this->namespace['prefix_' . $mode]) ? $this->namespace['prefix_' . $mode] : null;\n\n        if ($prefix === null || $prefix === ''\n            || !($prefix_len = strlen($prefix)) || !strlen($folder)\n        ) {\n            return $folder;\n        }\n\n        // remove prefix for output\n        if ($mode == 'out') {\n            if (substr($folder, 0, $prefix_len) === $prefix) {\n                return substr($folder, $prefix_len);\n            }\n\n            return $folder;\n        }\n\n        // add prefix for input (e.g. folder creation)\n        return $prefix . $folder;\n    }\n\n    /**\n     * Gets folder attributes from LIST response, e.g. \\Noselect, \\Noinferiors\n     *\n     * @param string $folder Folder name\n     * @param bool   $force  Set to True if attributes should be refreshed\n     *\n     * @return array Options list\n     */\n    public function folder_attributes($folder, $force = false)\n    {\n        // get attributes directly from LIST command\n        if (!empty($this->conn->data['LIST'])\n            && isset($this->conn->data['LIST'][$folder])\n            && is_array($this->conn->data['LIST'][$folder])\n        ) {\n            $opts = $this->conn->data['LIST'][$folder];\n        }\n        // get cached folder attributes\n        else if (!$force) {\n            $opts = $this->get_cache('mailboxes.attributes');\n            if ($opts && isset($opts[$folder])) {\n                $opts = $opts[$folder];\n            }\n        }\n\n        if (!isset($opts) || !is_array($opts)) {\n            if (!$this->check_connection()) {\n                return [];\n            }\n\n            $this->conn->listMailboxes('', $folder);\n\n            if (isset($this->conn->data['LIST'][$folder])) {\n                $opts = $this->conn->data['LIST'][$folder];\n            }\n        }\n\n        return isset($opts) && is_array($opts) ? $opts : [];\n    }\n\n    /**\n     * Gets connection (and current folder) data: UIDVALIDITY, EXISTS, RECENT,\n     * PERMANENTFLAGS, UIDNEXT, UNSEEN\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Data\n     */\n    public function folder_data($folder)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder !== null ? $this->folder : 'INBOX';\n        }\n\n        if ($this->conn->selected != $folder) {\n            if (!$this->check_connection()) {\n                return [];\n            }\n\n            if ($this->conn->select($folder)) {\n                $this->folder = $folder;\n            }\n            else {\n                return null;\n            }\n        }\n\n        $data = $this->conn->data;\n\n        // add (E)SEARCH result for ALL UNDELETED query\n        if (!empty($this->icache['undeleted_idx'])\n            && $this->icache['undeleted_idx']->get_parameters('MAILBOX') == $folder\n        ) {\n            $data['UNDELETED'] = $this->icache['undeleted_idx'];\n        }\n\n        // dovecot does not return HIGHESTMODSEQ until requested, we use it though in our caching system\n        // calling STATUS is needed only once, after first use mod-seq db will be maintained\n        if (!isset($data['HIGHESTMODSEQ']) && empty($data['NOMODSEQ'])\n            && ($this->get_capability('QRESYNC') || $this->get_capability('CONDSTORE'))\n        ) {\n            if ($add_data = $this->conn->status($folder, ['HIGHESTMODSEQ'])) {\n                $data = array_merge($data, $add_data);\n            }\n        }\n\n        return $data;\n    }\n\n    /**\n     * Returns extended information about the folder\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Data\n     */\n    public function folder_info($folder)\n    {\n        if (!empty($this->icache['options']) && $this->icache['options']['name'] == $folder) {\n            return $this->icache['options'];\n        }\n\n        // get cached metadata\n        $cache_key = rcube_cache::key_name('mailboxes.folder-info', [$folder]);\n        $cached    = $this->get_cache($cache_key);\n\n        if (is_array($cached)) {\n            return $cached;\n        }\n\n        $acl       = $this->get_capability('ACL');\n        $namespace = $this->get_namespace();\n        $options   = ['is_root' => false];\n\n        // check if the folder is a namespace prefix\n        if (!empty($namespace)) {\n            $mbox = $folder . $this->delimiter;\n            foreach ($namespace as $ns) {\n                if (!empty($ns)) {\n                    foreach ($ns as $item) {\n                        if ($item[0] === $mbox) {\n                            $options['is_root'] = true;\n                            break 2;\n                        }\n                    }\n                }\n            }\n        }\n        // check if the folder is other user virtual-root\n        if ($options['is_root'] && !empty($namespace) && !empty($namespace['other'])) {\n            $parts = explode($this->delimiter, $folder);\n            if (count($parts) == 2) {\n                $mbox = $parts[0] . $this->delimiter;\n                foreach ($namespace['other'] as $item) {\n                    if ($item[0] === $mbox) {\n                        $options['is_root'] = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        $options['name']       = $folder;\n        $options['attributes'] = $this->folder_attributes($folder, true);\n        $options['namespace']  = $this->folder_namespace($folder);\n        $options['special']    = $this->is_special_folder($folder);\n        $options['noselect']   = false;\n\n        // Set 'noselect' flag\n        if (is_array($options['attributes'])) {\n            foreach ($options['attributes'] as $attrib) {\n                $attrib = strtolower($attrib);\n                if ($attrib == '\\noselect' || $attrib == '\\nonexistent') {\n                    $options['noselect'] = true;\n                }\n            }\n        }\n        else {\n            $options['noselect'] = true;\n        }\n\n        // Get folder rights (MYRIGHTS)\n        if ($acl && ($rights = $this->my_rights($folder))) {\n            $options['rights'] = $rights;\n        }\n\n        // Set 'norename' flag\n        if (!empty($options['rights'])) {\n            $rfc_4314 = is_array($this->get_capability('RIGHTS'));\n            $options['norename'] = ($rfc_4314 && !in_array('x', $options['rights']))\n                                || (!$rfc_4314 && !in_array('d', $options['rights']));\n\n            if (!$options['noselect']) {\n                $options['noselect'] = !in_array('r', $options['rights']);\n            }\n        }\n        else {\n            $options['norename'] = $options['is_root'] || $options['namespace'] != 'personal';\n        }\n\n        // update caches\n        $this->icache['options'] = $options;\n        $this->update_cache($cache_key, $options);\n\n        return $options;\n    }\n\n    /**\n     * Synchronizes messages cache.\n     *\n     * @param string $folder Folder name\n     */\n    public function folder_sync($folder)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            $mcache->synchronize($folder);\n        }\n    }\n\n    /**\n     * Check if the folder name is valid\n     *\n     * @param string $folder Folder name (UTF-8)\n     * @param string &$char  First forbidden character found\n     *\n     * @return bool True if the name is valid, False otherwise\n     */\n    public function folder_validate($folder, &$char = null)\n    {\n        if (parent::folder_validate($folder, $char)) {\n            $vendor = $this->get_vendor();\n            $regexp = '\\\\x00-\\\\x1F\\\\x7F%*';\n\n            if ($vendor == 'cyrus') {\n                // List based on testing Kolab's Cyrus-IMAP 2.5\n                $regexp .= '!`@(){}|\\\\?<;\"';\n            }\n\n            if (!preg_match(\"/[$regexp]/\", $folder, $m)) {\n                return true;\n            }\n\n            $char = $m[0];\n        }\n\n        return false;\n    }\n\n    /**\n     * Get message header names for rcube_imap_generic::fetchHeader(s)\n     *\n     * @return string Space-separated list of header names\n     */\n    protected function get_fetch_headers()\n    {\n        if (!empty($this->options['fetch_headers'])) {\n            $headers = explode(' ', $this->options['fetch_headers']);\n        }\n        else {\n            $headers = [];\n        }\n\n        if ($this->messages_caching || !empty($this->options['all_headers'])) {\n            $headers = array_merge($headers, $this->all_headers);\n        }\n\n        return $headers;\n    }\n\n\n    /* -----------------------------------------\n     *   ACL and METADATA/ANNOTATEMORE methods\n     * ----------------------------------------*/\n\n    /**\n     * Changes the ACL on the specified folder (SETACL)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     * @param string $acl     ACL string\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function set_acl($folder, $user, $acl)\n    {\n        if (!$this->get_capability('ACL')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache(rcube_cache::key_name('mailboxes.folder-info', [$folder]));\n\n        return $this->conn->setACL($folder, $user, $acl);\n    }\n\n    /**\n     * Removes any <identifier,rights> pair for the\n     * specified user from the ACL for the specified\n     * folder (DELETEACL)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function delete_acl($folder, $user)\n    {\n        if (!$this->get_capability('ACL')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        return $this->conn->deleteACL($folder, $user);\n    }\n\n    /**\n     * Returns the access control list for folder (GETACL)\n     *\n     * @param string $folder Folder name\n     *\n     * @return array User-rights array on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function get_acl($folder)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->getACL($folder);\n    }\n\n    /**\n     * Returns information about what rights can be granted to the\n     * user (identifier) in the ACL for the folder (LISTRIGHTS)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     *\n     * @return array List of user rights\n     * @since 0.5-beta\n     */\n    public function list_rights($folder, $user)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->listRights($folder, $user);\n    }\n\n    /**\n     * Returns the set of rights that the current user has to\n     * folder (MYRIGHTS)\n     *\n     * @param string $folder Folder name\n     *\n     * @return array MYRIGHTS response on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function my_rights($folder)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->myRights($folder);\n    }\n\n    /**\n     * Sets IMAP metadata/annotations (SETMETADATA/SETANNOTATION)\n     *\n     * @param string $folder  Folder name (empty for server metadata)\n     * @param array  $entries Entry-value array (use NULL value as NIL)\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function set_metadata($folder, $entries)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache('mailboxes.metadata.', true);\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            return $this->conn->setMetadata($folder, $entries);\n        }\n\n        if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            foreach ((array)$entries as $entry => $value) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $entries[$entry] = [$ent, $attr, $value];\n            }\n\n            return $this->conn->setAnnotation($folder, $entries);\n        }\n\n        return false;\n    }\n\n    /**\n     * Unsets IMAP metadata/annotations (SETMETADATA/SETANNOTATION)\n     *\n     * @param string $folder  Folder name (empty for server metadata)\n     * @param array  $entries Entry names array\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function delete_metadata($folder, $entries)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache('mailboxes.metadata.', true);\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            return $this->conn->deleteMetadata($folder, $entries);\n        }\n\n        if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            foreach ((array)$entries as $idx => $entry) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $entries[$idx] = [$ent, $attr, null];\n            }\n\n            return $this->conn->setAnnotation($folder, $entries);\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns IMAP metadata/annotations (GETMETADATA/GETANNOTATION)\n     *\n     * @param string  $folder   Folder name (empty for server metadata)\n     * @param array   $entries  Entries\n     * @param array   $options  Command options (with MAXSIZE and DEPTH keys)\n     * @param bool    $force    Disables cache use\n     *\n     * @return array Metadata entry-value hash array on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function get_metadata($folder, $entries, $options = [], $force = false)\n    {\n        $entries = (array) $entries;\n\n        if (!$force) {\n            $cache_key = rcube_cache::key_name('mailboxes.metadata', [$folder, $options, $entries]);\n\n            // get cached data\n            $cached_data = $this->get_cache($cache_key);\n\n            if (is_array($cached_data)) {\n                return $cached_data;\n            }\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            $res = $this->conn->getMetadata($folder, $entries, $options);\n        }\n        else if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            $queries = [];\n            $res     = [];\n\n            // Convert entry names\n            foreach ($entries as $entry) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $queries[$attr][] = $ent;\n            }\n\n            // @TODO: Honor MAXSIZE and DEPTH options\n            foreach ($queries as $attrib => $entry) {\n                $result = $this->conn->getAnnotation($folder, $entry, $attrib);\n\n                // an error, invalidate any previous getAnnotation() results\n                if (!is_array($result)) {\n                    return null;\n                }\n\n                foreach ($result as $fldr => $data) {\n                    $res[$fldr] = array_merge((array) $res[$fldr], $data);\n                }\n            }\n        }\n\n        if (isset($res)) {\n            if (!$force && !empty($cache_key)) {\n                $this->update_cache($cache_key, $res);\n            }\n\n            return $res;\n        }\n    }\n\n    /**\n     * Converts the METADATA extension entry name into the correct\n     * entry-attrib names for older ANNOTATEMORE version.\n     *\n     * @param string $entry Entry name\n     *\n     * @return array Entry-attribute list, NULL if not supported (?)\n     */\n    protected function md2annotate($entry)\n    {\n        if (substr($entry, 0, 7) == '/shared') {\n            return [substr($entry, 7), 'value.shared'];\n        }\n        else if (substr($entry, 0, 8) == '/private') {\n            return [substr($entry, 8), 'value.priv'];\n        }\n\n        // @TODO: log error\n    }\n\n\n    /* --------------------------------\n     *   internal caching methods\n     * --------------------------------*/\n\n    /**\n     * Enable or disable indexes caching\n     *\n     * @param string $type Cache type (@see rcube::get_cache)\n     */\n    public function set_caching($type)\n    {\n        if ($type) {\n            $this->caching = $type;\n        }\n        else {\n            if ($this->cache) {\n                $this->cache->close();\n            }\n            $this->cache   = null;\n            $this->caching = false;\n        }\n    }\n\n    /**\n     * Getter for IMAP cache object\n     */\n    protected function get_cache_engine()\n    {\n        if ($this->caching && !$this->cache) {\n            $rcube = rcube::get_instance();\n            $ttl   = $rcube->config->get('imap_cache_ttl', '10d');\n            $this->cache = $rcube->get_cache('IMAP', $this->caching, $ttl);\n        }\n\n        return $this->cache;\n    }\n\n    /**\n     * Returns cached value\n     *\n     * @param string $key Cache key\n     *\n     * @return mixed\n     */\n    public function get_cache($key)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            return $cache->get($key);\n        }\n    }\n\n    /**\n     * Update cache\n     *\n     * @param string $key  Cache key\n     * @param mixed  $data Data\n     */\n    public function update_cache($key, $data)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            $cache->set($key, $data);\n        }\n    }\n\n    /**\n     * Clears the cache.\n     *\n     * @param string  $key         Cache key name or pattern\n     * @param bool    $prefix_mode Enable it to clear all keys starting\n     *                             with prefix specified in $key\n     */\n    public function clear_cache($key = null, $prefix_mode = false)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            $cache->remove($key, $prefix_mode);\n        }\n    }\n\n\n    /* --------------------------------\n     *   message caching methods\n     * --------------------------------*/\n\n    /**\n     * Enable or disable messages caching\n     *\n     * @param bool $set  Flag\n     * @param int  $mode Cache mode\n     */\n    public function set_messages_caching($set, $mode = null)\n    {\n        if ($set) {\n            $this->messages_caching = true;\n\n            if ($mode && ($cache = $this->get_mcache_engine())) {\n                $cache->set_mode($mode);\n            }\n        }\n        else {\n            if ($this->mcache) {\n                $this->mcache->close();\n            }\n            $this->mcache = null;\n            $this->messages_caching = false;\n        }\n    }\n\n    /**\n     * Getter for messages cache object\n     */\n    protected function get_mcache_engine()\n    {\n        if ($this->messages_caching && !$this->mcache) {\n            $rcube = rcube::get_instance();\n            if (($dbh = $rcube->get_dbh()) && ($userid = $rcube->get_user_id())) {\n                $ttl       = $rcube->config->get('messages_cache_ttl', '10d');\n                $threshold = $rcube->config->get('messages_cache_threshold', 50);\n                $this->mcache = new rcube_imap_cache(\n                    $dbh, $this, $userid, $this->options['skip_deleted'], $ttl, $threshold);\n            }\n        }\n\n        return $this->mcache;\n    }\n\n    /**\n     * Clears the messages cache.\n     *\n     * @param string $folder Folder name\n     * @param array  $uids   Optional message UIDs to remove from cache\n     */\n    protected function clear_message_cache($folder = null, $uids = null)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            $mcache->clear($folder, $uids);\n        }\n    }\n\n    /**\n     * Delete outdated cache entries\n     */\n    function cache_gc()\n    {\n        rcube_imap_cache::gc();\n    }\n\n\n    /* --------------------------------\n     *         protected methods\n     * --------------------------------*/\n\n    /**\n     * Determines if server supports dual use folders (those can\n     * contain both sub-folders and messages).\n     *\n     * @return bool\n     */\n    protected function detect_dual_use_folders()\n    {\n        $val = rcube::get_instance()->config->get('imap_dual_use_folders');\n        if ($val !== null) {\n            return (bool) $val;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $folder    = str_replace('.', '', 'foldertest' . microtime(true));\n        $folder    = $this->mod_folder($folder, 'in');\n        $subfolder = $folder . $this->delimiter . 'foldertest';\n\n        if ($this->conn->createFolder($folder)) {\n            if ($created = $this->conn->createFolder($subfolder)) {\n                $this->conn->deleteFolder($subfolder);\n            }\n\n            $this->conn->deleteFolder($folder);\n\n            return $created;\n        }\n\n        return false;\n    }\n\n    /**\n     * Validate the given input and save to local properties\n     *\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order\n     */\n    protected function set_sort_order($sort_field, $sort_order)\n    {\n        if ($sort_field != null) {\n            $this->sort_field = asciiwords($sort_field);\n        }\n        if ($sort_order != null) {\n            $this->sort_order = strtoupper($sort_order) == 'DESC' ? 'DESC' : 'ASC';\n        }\n    }\n\n    /**\n     * Sort folders in alphabetical order. Optionally put special folders\n     * first and other-users/shared namespaces last.\n     *\n     * @param array $a_folders    Folders list\n     * @param bool  $skip_special Skip special folders handling\n     *\n     * @return array Sorted list\n     */\n    public function sort_folder_list($a_folders, $skip_special = false)\n    {\n        $folders = [];\n\n        // convert names to UTF-8\n        foreach ($a_folders as $folder) {\n            // for better performance skip encoding conversion\n            // if the string does not look like UTF7-IMAP\n            $folders[$folder] = strpos($folder, '&') === false ? $folder : rcube_charset::convert($folder, 'UTF7-IMAP');\n        }\n\n        // sort folders\n        // asort($folders, SORT_LOCALE_STRING) is not properly sorting case sensitive names\n        uasort($folders, [$this, 'sort_folder_comparator']);\n\n        $folders = array_keys($folders);\n\n        if ($skip_special || empty($folders)) {\n            return $folders;\n        }\n\n        // Collect special folders and non-personal namespace roots\n        $specials = array_merge(['INBOX'], array_values($this->get_special_folders()));\n        $ns_roots = [];\n\n        foreach (['other', 'shared'] as $ns_name) {\n            if ($ns = $this->get_namespace($ns_name)) {\n                foreach ($ns as $root) {\n                    if (isset($root[0]) && strlen($root[0])) {\n                        $ns_roots[rtrim($root[0], $root[1])] = $root[0];\n                    }\n                }\n            }\n        }\n\n        // Force the type of folder name variable (#1485527)\n        $folders = array_map('strval', $folders);\n        $out     = [];\n\n        // Put special folders on top...\n        $specials = array_unique(array_intersect($specials, $folders));\n        $folders  = array_merge($specials, array_diff($folders, $specials));\n\n        // ... and rebuild the list to move their subfolders where they belong\n        $this->sort_folder_specials(null, $folders, $specials, $out);\n\n        // Put other-user/shared namespaces at the end\n        if (!empty($ns_roots)) {\n            $folders = [];\n            foreach ($out as $folder) {\n                foreach ($ns_roots as $root => $prefix) {\n                    if ($folder === $root || strpos($folder, $prefix) === 0) {\n                        $folders[] = $folder;\n                    }\n                }\n            }\n\n            if (!empty($folders)) {\n                $out = array_merge(array_diff($out, $folders), $folders);\n            }\n        }\n\n        return $out;\n    }\n\n    /**\n     * Recursive function to put subfolders of special folders in place\n     */\n    protected function sort_folder_specials($folder, &$list, &$specials, &$out)\n    {\n        $count = count($list);\n\n        for ($i = 0; $i < $count; $i++) {\n            $name = $list[$i];\n            if ($name === null) {\n                continue;\n            }\n\n            if ($folder === null || strpos($name, $folder.$this->delimiter) === 0) {\n                $out[] = $name;\n                $list[$i] = null;\n\n                if (!empty($specials) && ($found = array_search($name, $specials)) !== false) {\n                    unset($specials[$found]);\n                    $this->sort_folder_specials($name, $list, $specials, $out);\n                }\n            }\n        }\n    }\n\n    /**\n     * Callback for uasort() that implements correct\n     * locale-aware case-sensitive sorting\n     */\n    protected function sort_folder_comparator($str1, $str2)\n    {\n        if ($this->sort_folder_collator === null) {\n            $this->sort_folder_collator = false;\n\n            // strcoll() does not work with UTF8 locale on Windows,\n            // use Collator from the intl extension\n            if (stripos(PHP_OS, 'win') === 0 && function_exists('collator_compare')) {\n                $locale = $this->options['language'] ?: 'en_US';\n                $this->sort_folder_collator = collator_create($locale) ?: false;\n            }\n        }\n\n        $path1 = explode($this->delimiter, $str1);\n        $path2 = explode($this->delimiter, $str2);\n\n        foreach ($path1 as $idx => $folder1) {\n            $folder2 = isset($path2[$idx]) ? $path2[$idx] : '';\n\n            if ($folder1 === $folder2) {\n                continue;\n            }\n\n            if ($this->sort_folder_collator) {\n                return collator_compare($this->sort_folder_collator, $folder1, $folder2);\n            }\n\n            return strcoll($folder1, $folder2);\n        }\n    }\n\n    /**\n     * Find UID of the specified message sequence ID\n     *\n     * @param int    $id     Message (sequence) ID\n     * @param string $folder Folder name\n     *\n     * @return int Message UID\n     */\n    public function id2uid($id, $folder = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->ID2UID($folder, $id);\n    }\n\n    /**\n     * Subscribe/unsubscribe a list of folders and update local cache\n     */\n    protected function change_subscription($folders, $mode)\n    {\n        $updated = 0;\n        $folders = (array) $folders;\n\n        if (!empty($folders)) {\n            if (!$this->check_connection()) {\n                return false;\n            }\n\n            foreach ($folders as $folder) {\n                $updated += (int) $this->conn->{$mode}($folder);\n            }\n        }\n\n        // clear cached folders list(s)\n        if ($updated) {\n            $this->clear_cache('mailboxes', true);\n        }\n\n        return $updated == count($folders);\n    }\n\n    /**\n     * Increase/decrease messagecount for a specific folder\n     */\n    protected function set_messagecount($folder, $mode, $increment)\n    {\n        if (!is_numeric($increment)) {\n            return false;\n        }\n\n        $mode = strtoupper($mode);\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        if (\n            !isset($a_folder_cache[$folder])\n            || !is_array($a_folder_cache[$folder])\n            || !isset($a_folder_cache[$folder][$mode])\n        ) {\n            return false;\n        }\n\n        // add incremental value to messagecount\n        $a_folder_cache[$folder][$mode] += $increment;\n\n        // there's something wrong, delete from cache\n        if ($a_folder_cache[$folder][$mode] < 0) {\n            unset($a_folder_cache[$folder][$mode]);\n        }\n\n        // write back to cache\n        $this->update_cache('messagecount', $a_folder_cache);\n\n        return true;\n    }\n\n    /**\n     * Remove messagecount of a specific folder from cache\n     */\n    protected function clear_messagecount($folder, $mode = [])\n    {\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        if (isset($a_folder_cache[$folder]) && is_array($a_folder_cache[$folder])) {\n            if (!empty($mode)) {\n                foreach ((array) $mode as $key) {\n                    unset($a_folder_cache[$folder][$key]);\n                }\n            }\n            else {\n                unset($a_folder_cache[$folder]);\n            }\n\n            $this->update_cache('messagecount', $a_folder_cache);\n        }\n    }\n\n    /**\n     * Converts date string/object into IMAP date/time format\n     */\n    protected function date_format($date)\n    {\n        if (empty($date)) {\n            return null;\n        }\n\n        if (!is_object($date) || !is_a($date, 'DateTime')) {\n            try {\n                $timestamp = rcube_utils::strtotime($date);\n                $date      = new DateTime(\"@\".$timestamp);\n            }\n            catch (Exception $e) {\n                return null;\n            }\n        }\n\n        return $date->format('d-M-Y H:i:s O');\n    }\n\n    /**\n     * Remember state of the IMAP connection (last IMAP command).\n     * Use e.g. if you want to execute more commands and ignore results of these.\n     *\n     * @return array Connection state\n     */\n    protected function save_conn_state()\n    {\n        return [\n            $this->conn->error,\n            $this->conn->errornum,\n            $this->conn->resultcode,\n        ];\n    }\n\n    /**\n     * Restore saved connection state.\n     *\n     * @param array $state Connection result\n     */\n    protected function restore_conn_state($state)\n    {\n        list($this->conn->error, $this->conn->errornum, $this->conn->resultcode) = $state;\n    }\n\n    /**\n     * This is our own debug handler for the IMAP connection\n     */\n    public function debug_handler($imap, $message)\n    {\n        rcube::write_log('imap', $message);\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | CONTENTS:                                                             |\n |   Abstract class for output generation                                |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Class for output generation\n *\n * @package    Framework\n * @subpackage View\n */\nabstract class rcube_output\n{\n    public $browser;\n\n    protected $app;\n    protected $config;\n    protected $charset = RCUBE_CHARSET;\n    protected $env     = [];\n    protected $skins   = [];\n\n\n    /**\n     * Object constructor\n     */\n    public function __construct()\n    {\n        $this->app     = rcube::get_instance();\n        $this->config  = $this->app->config;\n        $this->browser = new rcube_browser();\n    }\n\n    /**\n     * Magic getter\n     */\n    public function __get($var)\n    {\n        // allow read-only access to some members\n        switch ($var) {\n            case 'env':     return $this->env;\n            case 'skins':   return $this->skins;\n            case 'charset': return $this->charset;\n        }\n    }\n\n    /**\n     * Setter for output charset.\n     * To be specified in a meta tag and sent as http-header\n     *\n     * @param string $charset Charset name\n     */\n    public function set_charset($charset)\n    {\n        $this->charset = $charset;\n    }\n\n    /**\n     * Getter for output charset\n     *\n     * @return string Output charset name\n     */\n    public function get_charset()\n    {\n        return $this->charset;\n    }\n\n    /**\n     * Set environment variable\n     *\n     * @param string $name  Property name\n     * @param mixed  $value Property value\n     */\n    public function set_env($name, $value)\n    {\n        $this->env[$name] = $value;\n    }\n\n    /**\n     * Environment variable getter.\n     *\n     * @param string $name Property name\n     *\n     * @return mixed Property value\n     */\n    public function get_env($name)\n    {\n        return isset($this->env[$name]) ? $this->env[$name] : null;\n    }\n\n    /**\n     * Delete all stored env variables and commands\n     */\n    public function reset()\n    {\n        $this->env = [];\n    }\n\n    /**\n     * Invoke display_message command\n     *\n     * @param string  $message  Message to display\n     * @param string  $type     Message type [notice|confirm|error]\n     * @param array   $vars     Key-value pairs to be replaced in localized text\n     * @param bool    $override Override last set message\n     * @param int     $timeout  Message displaying time in seconds\n     */\n    abstract function show_message($message, $type = 'notice', $vars = null, $override = true, $timeout = 0);\n\n    /**\n     * Redirect to a certain url.\n     *\n     * @param array|string $p     Either a string with the action or url parameters as key-value pairs\n     * @param int          $delay Delay in seconds\n     */\n    abstract function redirect($p = [], $delay = 1);\n\n    /**\n     * Send output to the client.\n     */\n    abstract function send();\n\n    /**\n     * Send HTTP headers to prevent caching a page\n     */\n    public function nocacheing_headers()\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        header(\"Expires: \".gmdate(\"D, d M Y H:i:s\").\" GMT\");\n        header(\"Last-Modified: \".gmdate(\"D, d M Y H:i:s\").\" GMT\");\n\n        // We need to set the following headers to make downloads work using IE in HTTPS mode.\n        if ($this->browser->ie && rcube_utils::https_check()) {\n            header('Pragma: private');\n            header(\"Cache-Control: private, must-revalidate\");\n        }\n        else {\n            header(\"Cache-Control: private, no-cache, no-store, must-revalidate, post-check=0, pre-check=0\");\n            header(\"Pragma: no-cache\");\n        }\n    }\n\n    /**\n     * Send header with expire date 30 days in future\n     *\n     * @param int Expiration time in seconds\n     */\n    public function future_expire_header($offset = 2600000)\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        header(\"Expires: \" . gmdate(\"D, d M Y H:i:s\", time()+$offset) . \" GMT\");\n        header(\"Cache-Control: max-age=$offset\");\n        header(\"Pragma: \");\n    }\n\n    /**\n     * Send browser compatibility/security/privacy headers\n     *\n     * @param bool $privacy Enable privacy headers\n     */\n    public function common_headers($privacy = true)\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        $headers = [];\n\n        // Unlock IE compatibility mode\n        if ($this->browser->ie) {\n            $headers['X-UA-Compatible'] = 'IE=edge';\n        }\n\n        if ($privacy) {\n            // Request browser to disable DNS prefetching (CVE-2010-0464)\n            $headers['X-DNS-Prefetch-Control'] = 'off';\n\n            // Request browser disable Referer (sic) header\n            $headers['Referrer-Policy'] = 'same-origin';\n        }\n\n        // send CSRF and clickjacking protection headers\n        if ($xframe = $this->app->config->get('x_frame_options', 'sameorigin')) {\n            $headers['X-Frame-Options'] = $xframe;\n        }\n\n        $plugin = $this->app->plugins->exec_hook('common_headers', ['headers' => $headers, 'privacy' => $privacy]);\n\n        foreach ($plugin['headers'] as $header => $value) {\n            header(\"$header: $value\");\n        }\n    }\n\n    /**\n     * Send headers related to file downloads\n     *\n     * @param string $filename File name\n     * @param array  $params   Optional parameters:\n     *                         type         - File content type (default: 'application/octet-stream')\n     *                         disposition  - Download type: 'inline' or 'attachment' (default)\n     *                         length       - Content length\n     *                         charset      - File name character set\n     *                         type_charset - Content character set\n     *                         time_limit   - Script execution limit (default: 3600)\n     */\n    public function download_headers($filename, $params = [])\n    {\n        if (empty($params['disposition'])) {\n            $params['disposition'] = 'attachment';\n        }\n\n        if ($params['disposition'] == 'inline' && stripos($params['type'], 'text') === 0) {\n            $params['type'] .= '; charset=' . ($params['type_charset'] ?: $this->charset);\n        }\n\n        header(\"Content-Type: \" . (!empty($params['type']) ? $params['type'] : \"application/octet-stream\"));\n\n        if ($params['disposition'] == 'attachment' && $this->browser->ie) {\n            header(\"Content-Type: application/force-download\");\n        }\n\n        $disposition = \"Content-Disposition: \" . $params['disposition'];\n\n        // For non-ascii characters we'll use RFC2231 syntax\n        if (!preg_match('/[^a-zA-Z0-9_.:,?;@+ -]/', $filename)) {\n            $disposition .= sprintf(\"; filename=\\\"%s\\\"\", $filename);\n        }\n        else {\n            $disposition .= sprintf(\"; filename*=%s''%s\",\n                !empty($params['charset']) ? $params['charset'] : $this->charset,\n                rawurlencode($filename)\n            );\n        }\n\n        header($disposition);\n\n        if (isset($params['length'])) {\n            header(\"Content-Length: \" . $params['length']);\n        }\n\n        // don't kill the connection if download takes more than 30 sec.\n        if (!array_key_exists('time_limit', $params)) {\n            $params['time_limit'] = 3600;\n        }\n\n        if (is_numeric($params['time_limit'])) {\n            @set_time_limit($params['time_limit']);\n        }\n    }\n\n    /**\n     * Show error page and terminate script execution\n     *\n     * @param int    $code     Error code\n     * @param string $message  Error message\n     */\n    public function raise_error($code, $message)\n    {\n        // STUB: to be overloaded by specific output classes\n        fwrite(STDERR, \"Error $code: $message\\n\");\n        exit(-1);\n    }\n\n    /**\n     * Create an edit field for inclusion on a form\n     *\n     * @param string $name   Field name\n     * @param string $value  Field value\n     * @param array  $attrib HTML element attributes for the field\n     * @param string $type   HTML element type (default 'text')\n     *\n     * @return string HTML field definition\n     */\n    public static function get_edit_field($name, $value, $attrib = [], $type = 'text')\n    {\n        static $colcounts = [];\n\n        $fname           = '_' . $name;\n        $attrib['name']  = $fname . (!empty($attrib['array']) ? '[]' : '');\n        $attrib['class'] = trim((!empty($attrib['class']) ? $attrib['class'] : '') . ' ff_' . $name);\n\n        if ($type == 'checkbox') {\n            $attrib['value'] = '1';\n            $input = new html_checkbox($attrib);\n        }\n        else if ($type == 'textarea') {\n            if (!empty($attrib['size'])) {\n                $attrib['cols'] = $attrib['size'];\n            }\n            $input = new html_textarea($attrib);\n        }\n        else if ($type == 'select') {\n            $input = new html_select($attrib);\n            if (empty($attrib['skip-empty'])) {\n                $input->add('---', '');\n            }\n            if (!empty($attrib['options'])) {\n                $input->add(array_values($attrib['options']), array_keys($attrib['options']));\n            }\n        }\n        else if ($type == 'password' || (isset($attrib['type']) && $attrib['type'] == 'password')) {\n            $input = new html_passwordfield($attrib);\n        }\n        else {\n            if (!isset($attrib['type']) || ($attrib['type'] != 'text' && $attrib['type'] != 'hidden')) {\n                $attrib['type'] = 'text';\n            }\n            $input = new html_inputfield($attrib);\n        }\n\n        // use value from post\n        if (isset($_POST[$fname])) {\n            $postvalue = rcube_utils::get_input_value($fname, rcube_utils::INPUT_POST, true);\n            if (!empty($attrib['array'])) {\n                if (!isset($colcounts[$name])) {\n                    $colcounts[$name] = 0;\n                }\n                $idx   = intval($colcounts[$name]++);\n                $value = isset($postvalue[$idx]) ? $postvalue[$idx] : null;\n            }\n            else {\n                $value = $postvalue;\n            }\n        }\n\n        return $input->show($value);\n    }\n\n    /**\n     * Convert a variable into a javascript object notation\n     *\n     * @param mixed $input  Input value\n     * @param bool  $pretty Enable JSON formatting\n     * @param bool  $inline Enable inline mode (generates output safe for use inside HTML)\n     *\n     * @return string Serialized JSON string\n     */\n    public static function json_serialize($input, $pretty = false, $inline = true)\n    {\n        $options = JSON_UNESCAPED_SLASHES;\n\n        // JSON_HEX_TAG is needed for inlining JSON inside of the <script> tag\n        // if input contains a html tag it will cause issues (#6207)\n        if ($inline) {\n            $options |= JSON_HEX_TAG;\n        }\n\n        // JSON_UNESCAPED_UNICODE in PHP < 7.1.0 does not escape U+2028 and U+2029\n        // which causes issues (#6187)\n        if (PHP_VERSION_ID >= 70100) {\n            $options |= JSON_UNESCAPED_UNICODE;\n        }\n\n        if ($pretty) {\n            $options |= JSON_PRETTY_PRINT;\n        }\n\n        // The input need to be valid UTF-8 to use json_encode() in PHP < 7.2\n        if (PHP_VERSION_ID >= 70200) {\n            $options |= JSON_INVALID_UTF8_IGNORE;\n        }\n        else {\n            $input = rcube_charset::clean($input);\n        }\n\n        return json_encode($input, $options);\n    }\n}\n", "<?php\n\n/**\n * Test class to test rcube_charset class\n *\n * @package Tests\n * @group mbstring\n */\nclass Framework_Charset extends PHPUnit\\Framework\\TestCase\n{\n\n    /**\n     * Data for test_clean()\n     */\n    function data_clean()\n    {\n        return [\n            ['', ''],\n            [\"\\xC1\", \"\"],\n            [\"\u039f\u1f50\u03c7\u1f76 \u03c4\u03b1\u1f50\u03c4\u1f70 \u03c0\u03b1\u03c1\u1f77\u03c3\u03c4\u03b1\u03c4\u03b1\u1f77 \u03bc\u03bf\u03b9 \u03b3\u03b9\u03b3\u03bd\u1f7d\u03c3\u03ba\u03b5\u03b9\u03bd\", \"\u039f\u1f50\u03c7\u1f76 \u03c4\u03b1\u1f50\u03c4\u1f70 \u03c0\u03b1\u03c1\u1f77\u03c3\u03c4\u03b1\u03c4\u03b1\u1f77 \u03bc\u03bf\u03b9 \u03b3\u03b9\u03b3\u03bd\u1f7d\u03c3\u03ba\u03b5\u03b9\u03bd\"],\n            [\"\u0441\u0438\u043c\\xD0\u0432\u043e\u043b\", \"\u0441\u0438\u043c\u0432\u043e\u043b\"],\n            [[\"\u0441\u0438\u043c\\xD0\u0432\u043e\u043b\"], [\"\u0441\u0438\u043c\u0432\u043e\u043b\"]],\n            [[\"a\\x8cb\" => \"a\\x8cb\"], [\"ab\" => \"ab\"]],\n            [[\"a\\x8cb\" => \"a\\x8cb\", \"ab\" => \"12\"], [\"ab\" => \"12\"]],\n        ];\n    }\n\n    /**\n     * @dataProvider data_clean\n     */\n    function test_clean($input, $output)\n    {\n        $this->assertSame($output, rcube_charset::clean($input));\n    }\n\n    /**\n     * Data for test_parse_charset()\n     */\n    function data_parse_charset()\n    {\n        return [\n            ['UTF8', 'UTF-8'],\n            ['WIN1250', 'WINDOWS-1250'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_parse_charset\n     */\n    function test_parse_charset($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::parse_charset($input));\n    }\n\n    /**\n     * Data for test_convert()\n     */\n    function data_convert()\n    {\n        $data = [\n            ['\u00f6', '\u00f6', 'UTF-8', 'UTF-8'],\n            ['\u00f6', '', 'UTF-8', 'ASCII'],\n            ['a\u017c', 'a', 'UTF-8', 'US-ASCII'],\n            ['&BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', 'UTF7-IMAP', 'UTF-8'],\n            ['\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', '&BCAEMARBBEEESwQ7BDoEOA-', 'UTF-8', 'UTF7-IMAP'],\n            [base64_decode('GyRCLWo7M3l1OSk2SBsoQg=='), '\u3231\u5c71\ufa11\u5de5\u696d', 'ISO-2022-JP', 'UTF-8'],\n            ['\u3231\u5c71\ufa11\u5de5\u696d', base64_decode('GyRCLWo7M3l1OSk2SBsoQg=='), 'UTF-8', 'ISO-2022-JP'],\n            // try some invalid encodings, to make sure no error/exception is thrown\n            ['test', 'test', 'WIN1253', 'INVALID'],\n        ];\n\n        if (extension_loaded('iconv')) {\n            // Windows-1253 is not supported by mbstring, we're testing fallback to iconv\n            $data[] = ['\u03b5', chr(hexdec(('E5'))), 'UTF-8', 'WINDOWS-1253'];\n            // Windows-874 is also not supported by mbstring\n            $in = quoted_printable_decode('=B5=CD=BA=A1=C5=D1=BA');\n            $data[] = [$in, '\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a', 'WINDOWS-874', 'UTF-8'];\n        }\n\n        return $data;\n    }\n\n    /**\n     * @dataProvider data_convert\n     */\n    function test_convert($input, $output, $from, $to)\n    {\n        $this->assertEquals($output, rcube_charset::convert($input, $from, $to));\n    }\n\n    /**\n     * Data for test_utf7_to_utf8()\n     */\n    function data_utf7_to_utf8()\n    {\n        return [\n            ['+BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf7_to_utf8\n     */\n    function test_utf7_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf7_to_utf8($input));\n    }\n\n    /**\n     * Data for test_utf7imap_to_utf8()\n     */\n    function data_utf7imap_to_utf8()\n    {\n        return [\n            ['&BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf7imap_to_utf8\n     */\n    function test_utf7imap_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf7imap_to_utf8($input));\n    }\n\n    /**\n     * Data for test_utf8_to_utf7imap()\n     */\n    function data_utf8_to_utf7imap()\n    {\n        return [\n            ['\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', '&BCAEMARBBEEESwQ7BDoEOA-'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf8_to_utf7imap\n     */\n    function test_utf8_to_utf7imap($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf8_to_utf7imap($input));\n    }\n\n    /**\n     * Data for test_utf16_to_utf8()\n     */\n    function data_utf16_to_utf8()\n    {\n        return [\n            [base64_decode('BCAEMARBBEEESwQ7BDoEOA=='), '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf16_to_utf8\n     */\n    function test_utf16_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf16_to_utf8($input));\n    }\n\n    /**\n     * Data for test_detect()\n     */\n    function data_detect()\n    {\n        return [\n            ['', '', 'UTF-8'],\n            ['a', 'UTF-8', 'UTF-8'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_detect\n     */\n    function test_detect($input, $fallback, $output)\n    {\n        $this->assertEquals($output, rcube_charset::detect($input, $fallback));\n    }\n\n    /**\n     * Data for test_detect()\n     */\n    function data_detect_with_lang()\n    {\n        return [\n            [base64_decode('xeOl3KZXutkspUStbg=='), 'zh_TW', 'BIG-5'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_detect_with_lang\n     */\n    function test_detect_with_lang($input, $lang, $output)\n    {\n        $this->assertEquals($output, rcube_charset::detect($input, $output, $lang));\n    }\n}\n"], "fixing_code": ["# Changelog Roundcube Webmail\n\n## Unreleased\n\n- Fix cross-site scripting (XSS) vulnerability in setting Content-Type/Content-Disposition for attachment preview/download\n\n## Release 1.5.5\n\n- Fix cross-site scripting (XSS) vulnerability in handling of SVG in HTML messages (#9168)\n\n## Release 1.5.4\n\n- Fix cross-site scripting (XSS) vulnerability in handling of linkrefs in plain text messages\n- Fix so output of log_date_format with microseconds contains time in server time zone, not UTC\n- Fix so N property always exists in a vCard export (#8771)\n- Fix so rcmail::format_date() works with DateTimeImmutable input (#8867)\n- Fix bug where a non-ASCII character in app.js could cause error in javascript engine (#8894)\n\n## Release 1.5.3\n\n- Enigma: Fix initial synchronization of private keys\n- Enigma: Fix double quoted-printable encoding of pgp-signed messages with no attachments (#8413)\n- Fix various PHP8 warnings (#8392)\n- Fix mail headers injection via the subject field on mail compose (#8404)\n- Fix bug where small message/rfc822 parts could not be decoded (#8408)\n- Fix setting HTML mode on reply/forward of a signed message (#8405)\n- Fix handling of RFC2231-encoded attachment names inside of a message/rfc822 part (#8418)\n- Fix bug where some mail parts (images) could have not be listed as attachments (#8425)\n- Fix bug where attachment icons were stuck at the top of the messages list in Safari (#8433)\n- Fix handling of message/rfc822 parts that are small and are multipart structures with a single part (#8458)\n- Fix bug where session could time out if DB and PHP timezone were different (#8303)\n- Fix bug where DSN flag state wasn't stored with a draft (#8371)\n- Fix broken encoding of HTML content encapsulated in a RTF attachment (#8444)\n- Fix problem with aria-hidden=true on toolbar menus in the Elastic skin (#8517)\n- Fix bug where title tag content was displayed in the body if it contained HTML tags (#8540)\n- Fix support for DSN specification without host e.g. pgsql:///dbname (#8558)\n\n## Release 1.5.2\n\n- OAuth: pass 'id_token' to 'oauth_login' plugin hook (#8214)\n- OAuth: fix expiration of short-lived oauth tokens (#8147)\n- OAuth: fix relative path to assets if /index.php/foo/bar url is used (#8144)\n- OAuth: no auto-redirect on imap login failures (#8370)\n- OAuth: refresh access token in 'refresh' plugin hook (#8224)\n- Fix so folder search parameters are honored by subscriptions_option plugin (#8312)\n- Fix password change with Directadmin driver (#8322, #8329)\n- Fix so css files in plugins/jqueryui/themes will be minified too (#8337)\n- Fix handling of unicode/special characters in custom From input (#8357)\n- Fix some PHP8 compatibility issues (#8363)\n- Fix chpass-wrapper.py helper compatibility with Python 3 (#8324)\n- Fix scrolling and missing Close button in the Select image dialog in Elastic/mobile (#8367)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious CSS content\n\n## Release 1.5.1\n\n- Fix importing contacts with no email address (#8227)\n- Fix so session's search scope is not used if search is not active (#8199)\n- Fix some PHP8 warnings (#8239)\n- Fix so dark mode state is retained after closing the browser (#8237)\n- Fix bug where new messages were not added to the list on refresh if skip_deleted=true (#8234)\n- Fix colors on \"Show source\" page in dark mode (#8246)\n- Fix handling of dark_mode_support:false setting in skins meta.json - also when devel_mode=false (#8249)\n- Fix database initialization if db_prefix is a schema prefix (#8221)\n- Fix undefined constant error in Installer on Windows (#8258)\n- Fix installation/upgrade on MySQL 5.5 - Index column size too large (#8231)\n- Fix regression in setting of contact listing name (#8260)\n- Fix bug in Larry skin where headers toggle state was reset on full page preview (#8203)\n- Fix bug where \\u200b characters were added into the recipient input preventing mail delivery (#8269)\n- Fix charset conversion errors on PHP < 8 for charsets not supported by mbstring (#8252)\n- Fix bug where adding a contact to trusted senders via \"Always allow from...\" button didn't work (#8264, #8268)\n- Fix bug with show_images setting where option 1 and 3 were swapped (#8268)\n- Fix PHP fatal error on an undefined constant in contacts import action (#8277)\n- Fix fetching headers of multiple message parts at once in rcube_imap_generic::fetchMIMEHeaders() (#8282)\n- Fix bug where attachment download could sometimes fail with a CSRF check error (#8283)\n- Fix an infinite loop when parsing environment variables with float/integer values (#8293)\n- Fix so 'small-dark' logo has more priority than the 'small' logo (#8298)\n\n## Release 1.5.0\n\n- Support displaying RTF content (including encapsulated HTML) from a TNEF attachment\n- Disable the default spellchecker option using spell.roundcube.net (#8182)\n- Newmail_notifier: Improved the notification sound (#8155)\n- Fix size of Mailvelope iframe for PGP-inlined mail, again (#8126)\n- Fix handling of group names with @ character in autocomplete and contacts widget (#8098)\n- Fix Firefox infinate loading display on mail screen (#8128)\n- Fix converting >1MB of HTML content into plain text (#8137)\n- Fix bug where expanding a group in the recipient input could corrupt the input content (#7569)\n- Fix fatal error/warning on invalid input to user parameter (#8152)\n- Fix changing password with dovecot_passwdfile driver (#8145)\n- Fix handling of headers that occur multiple times by show_additional_headers plugin (#8157)\n- Fix bug where vertical scrollbar in new HTML message bounced back on scroll (#8046)\n- Fix displaying inline images with incorrectly declared content-type (#8158)\n- Fix so addr-spec with missing closing angle bracket can be parsed (#8164)\n- Fix handling of spellcheck connection errors (#8172)\n- Fix a couple of PHP8 warnings (#8175, #8176)\n- Fix bug where \"from my contacts\" and \"from trusted senders\" values were mixed up (#8177)\n- Fix password/token length check on OAuth login (#8178)\n- Fix XSS issue in handling attachment filename extension in mimetype mismatch warning (#8193)\n- Fix SQL injection via some session variables\n- Fix handling of dark_mode_support:false setting in skins meta.json (#8186)\n- Fix security issues regarding server name and trusted_host_patterns setting\n\n## Release 1.5-rc\n\n- Upgrade to TinyMCE 5.8.2\n- SMTP XCLIENT support (#7893, #6411)\n- Add IDN homograph attack (spoofing) detection [CVE-2019-15237] (#6891)\n- Add configuration options for subject prefixes (#7929, #4981)\n- Support IMAP LITERAL- extension [RFC 7888] (#6878)\n- Warn the user about a potential data leak on mail bounce or forward (#7993)\n- Make the Empty action available for every non-empty folder, not only Trash (#7948)\n- Remove (incorrect) use of Return-Receipt-To header (#8069)\n- Submit various simple dialog forms with the Enter key (#7133)\n- Add RFC2231 support to rcube_mime_decode (#7390)\n- Plugin API: Allow modification of 'error' argument in 'message_send_error' hook (#7914)\n- OAuth: add plugin hooks `oauth_login` and `oauth_refresh_token` for oauth events (#8028, #8040)\n- Debug_logger: Fix the main plugin functionality and documentation (#8041)\n- Enigma: Fix bug where signature verification could fail for non-ascii bodies (#7919)\n- Enigma: Fix invalid expiration dates of PGP keys on a 32bit system (#7531)\n- Enigma: Display an information that public and private keys are stored on the server (#7941)\n- Enigma: Optional support for passwordless keys (#7265)\n- Managesieve: Fix removing nested rules in scripts (#8011)\n- Managesieve: Support XOAUTH2, requires Net_Sieve 1.4.5 (#7925)\n- Managesieve: Added ability to remove 'redirect' option from UI (#7922)\n- New_user_dialog: Use the 'identity_update' hook (#8023)\n- Password: Fix broken 'hmail' driver (#7966)\n- Password: Set password_minimum_length to 8 by default (#8003)\n- Vcard_attachments: Improve handling of multiple contacts (#7027)\n- Fix inserting a group from non-default source using the Insert contact(s) dialog (#8095)\n- Fix invalid search fields after search scope change (#6919)\n- Fix so \"Always allow from...\" button appears also when allow_images=3 (#7961)\n- Fix Elastic's pretty select scroll position in Chrome (#7964)\n- Fix bug where invalid non-unicode characters in JSON output could make the UI unresponsive (#7955)\n- Fix PHP 8 fatal error when allowing images in an email (#7968)\n- Fix so session expiration is more precise and do not depend on the garbage collector (#7576)\n- Fix bug where imap_conn_options settings were ignored (#7912)\n- Fix bug causing some HTML message content to be not centered in Elastic skin (#7911)\n- Fix bug when sending an email and recipient's email address contains a trailing dot (#7899)\n- Fix bug where the list page wasn't reset when changing a folder on mail view page (#7932)\n- Fix so selecting the same folder to reset search resets also the page number (#7125)\n- Fix login page rendering after oauth failure (#7812,#7923)\n- Fix bug where assigning users to groups via menu (not drag'n'drop) could fail in Elastic theme (#7973)\n- Fix HTML5 parser issue with a messy HTML code from Outlook (#7356)\n- Fix handling of multiple link references with the same index in plain text message (#8021)\n- Fix various actions on folders with angle brackets in name (#8037)\n- Fix inconsistent fowarding actions statuses on drafts (#8039)\n- Fix bug where `start` and `reversed` attributes of `ol` tag were ignored (#8059)\n- Fix bug where consecutive LDAP searches could return wrong results (#8064)\n- Fix bug where plus characters in attachment filename could have been ignored (#8074)\n- Fix displaying HTML body with inline images encapsulated using TNEF format (winmail.dat)\n- Fix handling of custom sender addresses with names (#8106)\n- Fix shift + drag'n'drop menu not working in Elastic skin with Chrome browser (#8107)\n\n## Release 1.5-beta\n\n- Require PHP >= 5.5\n- Support PHP 8.0 (#7625)\n- Require php-intl\n- Remove use of Net_IDNA2 package\n- Require GuzzleHttp\\Client\n- Upgrade to TinyMCE 5.5.1\n- Upgrade to jQuery 3.5.1 (#7464)\n- Update build tools (#7800, #7804, #7497):\n    - jsshrink.sh: Replace google-closure-compiler with UglifyJS\n    - cssshrink.sh: Replace yuicompressor with csso\n    - require lessc >= 2.5.2 (and add support for v4) with less-plugin-clean-css for Less files compilation\n- Automatically collected recipients and trusted senders (#6904)\n    - Added configurable Collected Recipients addressbook source (#4971)\n    - Added configurable Trusted Senders addressbook source (#5046)\n    - Added 'contact_exists' hook\n    - Added separate \"trusted senders\" options for show_images and mdn_request preferences (#7614)\n- Contact form mode: private/business (#7630)\n- OAuth/XOauth support (#7425, #6933)\n- Cache refactoring (#6312)\n- Added special value 'email' to login_username_filter, it changes also logon input type (#7179)\n- Allow array in smtp_host config (#7296)\n- Support proxy for server-side HTTP requests (#7658)\n- By default do not set the User-Agent header (#7731)\n- Add possibility to (re-)define field mapping on contacts import from a CSV file (#7045, #6668)\n- Move \"On request for return receipt\" from \"Mailbox View\" to \"Displaying Messages\" (#7614)\n- Support RFC8438: IMAP STATUS=SIZE - for faster folder size calculation (#7269)\n- MySQL: Use utf8mb4 charset and utf8mb4_unicode_ci collation (#6535, #7113)\n- Allow NULL in users.preferences column in postgres and sqlite db, the same as for other engines (#7767)\n- Support for language codes up to 16 chars long (e.g. es-419) in database schema (#6851)\n- Relaxed domain name validation for extended TLDs support (#5588)\n- Allow opening application/octet-stream attachments according to filename extension (#6821)\n- Added support for INSERT OR REPLACE queries (#6771)\n- Allow skins to define which layout options they support (#7235)\n- Extract RFC2231 attachment name from message headers (#6729, #6783)\n- Add support for SameSite cookie attribute via session_samesite option (req PHP >= 7.3.0) (#6772)\n- Change folders sorting so shared/other users namespaces are listed last (#5012)\n- Display a warning and do not try to open empty attachments (#7332)\n- Return 204 rather than 404 on missing contact photo (#7777)\n- Add 'reconnect' plugin to retry IMAP connection (#7844)\n- Plugin API: Added 'message' argument to 'message_compose_body' hook\n- Plugin API: Added 'preferences' parameter to 'user_create' hook (#7692)\n- Elastic: Dark mode (#6709)\n- Elastic: Display email size on the list of messages (#7162)\n- Elastic: Replace properties sidebar with a dialog on the attachment preview page (#7635)\n- Elastic: Minimize forms/colors blink on page load\n- Elastic: Improve mail header \"detailed mode\" (#7224)\n- Elastic: Moving single recipients between recipient inputs with drag-n-drop (#5069)\n- Elastic: Display a special icon for other users and shared namespace roots (#5012)\n- Elastic: Support space-separated email addresses in recipient input (#6529, #6457)\n- Elastic: Remember list checkbox selection state (#7148)\n- Elastic: Add \"Open in new window\" in mail compose (#7260)\n- Elastic: Make custom less files optional (#7497)\n- Elastic: Prevent from opening mail preview in a new window on touch devices using double tap (#7732)\n- Templates: Add support for expressions in object attributes (#7237)\n- Templates: Add support for nested if conditions (#6818)\n- Templates: Make [space][slash] ending of condition objects optional (#6954)\n- Mailvelope: Fix size of iframe for PGP-inlined mail (#7348)\n- Mailvelope: Add config option to use Main Keyring (#7348, #7157)\n- Mailvelope: Add config option to set the size for new keys (#7348)\n- Mailvelope: Always ask before discarding email currently being composed (#7348)\n- Mailvelope: Fix unnecessary warning to re-add attachments when restoring a draft (#7348)\n- Archive: Added options to split archive by year or year+month and folder (#7216)\n- Enigma: Support ECC key generation - when using GnuPG >= 2.1.7 (#6853)\n- Managesieve: Add support for 'spamtest' extension - RFC3685 (#6950)\n- Managesieve: Allow display name with email address in vacation :from field (#6760)\n- Managesieve: Improve UX on custom header input (#7207)\n- Managesieve: Fix bug where activation of forward/vacation rule could activate a wrong script (#7423)\n- Managesieve: Fix bug where forward/vacation rule could end up being duplicated (#7349)\n- new_user_identity: Fix missing password for user-specific LDAP operations (#7667)\n- Password: Added 'pwned' password strength driver (#7274)\n- Password: Added Mail-in-a-Box (miab) driver (#7824)\n- Password: Added TinyCP driver (#7510)\n- Password: Added httpapi driver to connect to generic HTTP/HTTPS APIs (#7439)\n- Password: Added dovecot_passwdfile driver (#5786)\n- Password: Removed old 'cpanel' driver, 'cpanel_webmail' driver renamed to 'cpanel' (#7780)\n- Fix handling of address groups in email headers by ignoring their names (#7663)\n- Fix so message flags are updated on refresh also for multifolder search results (#7774)\n- Fix so IMAP ID command is send only after authentication (#7517)\n- Fix bug where it wasn't possible to save Spanish (Latin America) locale preference (#7784)\n- Fix mail search error on invalid search_mods definition (#7789)\n- Fix error when dealing with message/rfc822 attachments using Gmail IMAP (#6854)\n- Fix ISO-2022-JP-MS encoding issues (#7091)\n- Fix so messages in threads with no root aren't displayed separately (#4999)\n- Fix so anchor tags without href attribute are not modified (#7413)\n- Fix invalid IMAP SEARCH command in some rare case on messages cache synchronization (#7895)\n- Fix so allowing remote resources does not add an entry to browser history (#6620)\n\n## Release 1.4.11\n\n- Display a nice error informing about no PHP8 support\n- Elastic: Fix compatibility with Less v3 and v4 (#7813)\n- Fix bug with managesieve_domains in Settings > Forwarding form (#7849)\n- Fix errors in MSSQL database update scripts (#7853)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious CSS content\n\n## Release 1.4.10\n\n- Fix extra angle brackets in In-Reply-To header derived from mailto: params (#7655)\n- Fix folder list issue whan special folder is a subfolder (#7647)\n- Fix Elastic's folder subscription toggle in search result (#7653)\n- Fix state of subscription toggle on folders list after changing folder state from the search result (#7653)\n- Security: Fix cross-site scripting (XSS) via HTML or Plain text messages with malicious content [CVE-2020-35730]\n\n## Release 1.4.9\n\n- Fix HTML editor in latest Chrome 85.0.4183.102, update to TinyMCE 4.9.11 (#7615)\n- Add missing localization for some label/legend elements in userinfo plugin (#7478)\n- Fix importing birthday dates from Gmail vCards (BDAY:YYYYMMDD)\n- Fix restoring Cc/Bcc fields from local storage (#7554)\n- Fix jstz.min.js installation, bump version to 1.0.7\n- Fix link to closure compiler in bin/jsshrink.sh script (#7567)\n- Fix incorrect PDO::lastInsertId() use in sqlsrv driver (#7564)\n- Fix bug where some parts of a message could have been missing in a reply/forward body (#7568)\n- Fix empty space on mail printouts in Chrome (#7604)\n- Fix empty output from HTML5 parser when content contains XML tag (#7624)\n- Fix scroll jump on key press in plain text mode of the HTML editor (#7622)\n- Fix so autocompletion list does not hide on scroll inside it (#7592)\n\n## Release 1.4.8\n\n- Fix support for an error as a string in message_before_send hook (#7475)\n- Elastic: Fix redundant scrollbar in plain text editor on mail reply (#7500)\n- Elastic: Fix deleted and replied+forwarded icons on messages list (#7503)\n- Managesieve: Fix too-small input field in Elastic when using custom headers (#7498)\n- Managesieve: Allow angle brackets in out-of-office message body (#7518)\n- Fix bug in conversion of email addresses to mailto links in plain text messages (#7526)\n- Fix format=flowed formatting on plain text part derived from the HTML content (#7504)\n- Fix incorrect rewriting of internal links in HTML content (#7512)\n- Fix handling links without defined protocol (#7454)\n- Fix paging of search results on IMAP servers with no SORT capability (#7462)\n- Fix detecting special folders on servers with both SPECIAL-USE and LIST-STATUS (#7525)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious svg content [CVE-2020-16145]\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious math content\n- Security: Fix potential XSS issue in HTML editor of the identity signature input (#7507)\n\n## Release 1.4.7\n\n- Fix bug where subfolders of special folders could have been duplicated on folder list\n- Increase maximum size of contact jobtitle and department fields to 128 characters\n- Fix missing newline after the logged line when writing to stdout (#7418)\n- Elastic: Fix context menu (paste) on the recipient input (#7431)\n- Fix problem with forwarding inline images attached to messages with no HTML part (#7414)\n- Fix problem with handling attached images with same name when using database_attachments/redundant_attachments (#7455)\n- Security: Fix cross-site scripting (XSS) via HTML messages with malicious svg/namespace [CVE-2020-15562]\n\n## Release 1.4.6\n\n- Installer: Fix regression in SMTP test section (#7417)\n\n## Release 1.4.5\n\n- Fix bug in extracting required plugins from composer.json that led to spurious error in log (#7364)\n- Fix so the database setup description is compatible with MySQL 8 (#7340)\n- Markasjunk: Fix regression in jsevent driver (#7361)\n- Fix missing flag indication on collapsed thread in Larry and Elastic (#7366)\n- Fix default keyservers (use keys.openpgp.org), add note about CORS (#7373, #7367)\n- Password: Fix issue with Modoboa driver (#7372)\n- Mailvelope: Use sender's address to find pubkeys to check signatures (#7348)\n- Mailvelope: Fix Encrypt button hidden in Elastic (#7353)\n- Fix PHP warning: count(): Parameter must be an array or an object... in ID command handler (#7392)\n- Fix error when user-configured skin does not exist anymore (#7271)\n- Elastic: Fix aspect ratio of a contact photo in mail preview (#7339)\n- Fix bug where PDF attachments marked as inline could have not been attached on mail forward (#7382)\n- Security: Fix a couple of XSS issues in Installer (#7406)\n- Security: Fix XSS issue in template object 'username' (#7406)\n- Security: Better fix for CVE-2020-12641\n- Security: Fix cross-site scripting (XSS) via malicious XML attachment\n\n## Release 1.4.4\n\n- Fix bug where attachments with Content-Id were attached to the message on reply (#7122)\n- Fix identity selection on reply when both sender and recipient addresses are included in identities (#7211)\n- Elastic: Fix text selection with Shift+PageUp and Shift+PageDown in plain text editor when using Chrome (#7230)\n- Elastic: Fix recipient input bug when using click to select a contact from autocomplete list (#7231)\n- Elastic: Fix color of a folder with recent messages (#7281)\n- Elastic: Restrict logo size in print view (#7275)\n- Fix invalid Content-Type for messages with only html part and inline images - Mail_Mime-1.10.7 (#7261)\n- Fix missing contact display name in QR Code data (#7257)\n- Fix so button label in Select image/media dialogs is \"Close\" not \"Cancel\" (#7246)\n- Fix regression in testing database schema on MSSQL (#7227)\n- Fix cursor position after inserting a group to a recipient input using autocompletion (#7267)\n- Fix string literals handling in IMAP STATUS (and various other) responses (#7290)\n- Fix bug where multiple images in a message were replaced by the first one on forward/reply/edit (#7293)\n- Fix handling keyservers configured with protocol prefix (#7295)\n- Markasjunk: Fix marking as spam/ham on moving messages with Move menu (#7189)\n- Markasjunk: Fix bug where moving to Junk was failing on messages selected with Select > All (#7206)\n- Fix so imap error message is displayed to the user on folder create/update (#7245)\n- Fix bug where a special folder couldn't be created if a special-use flag is not supported (#7147)\n- Mailvelope: Fix bug where recipients with name were not handled properly in mail compose (#7312)\n- Fix characters encoding in group rename input after group creation/rename (#7330)\n- Fix bug where some message/rfc822 parts could not be attached on forward (#7323)\n- Make install-jsdeps.sh script working without the 'file' program installed (#7325)\n- Fix performance issue of parsing big HTML messages by disabling HTML5 parser for these (#7331)\n- Fix so Print button for PDF attachments works on Firefox >= 75 (#5125)\n- Security: Fix XSS issue in handling of CDATA in HTML messages [CVE-2020-12625]\n- Security: Fix remote code execution via crafted 'im_convert_path' or 'im_identify_path' settings [CVE-2020-12641]\n- Security: Fix local file inclusion (and code execution) via crafted 'plugins' option [CVE-2020-12640]\n- Security: Fix CSRF bypass that could be used to log out an authenticated user [CVE-2020-12626] (#7302)\n\n## Release 1.4.3\n\n- Enigma: Fix so key list selection is reset when opening key creation form (#7154)\n- Enigma: Fix so using list checkbox selection does not load the key preview frame\n- Enigma: Fix generation of key pairs for identities with IDN domains (#7181)\n- Enigma: Display IDN domains of key users and identities in UTF8\n- Enigma: Fix bug where \"Send unencrypted\" button didn't work in Elastic skin (#7205)\n- Managesieve: Fix bug where it wasn't possible to save flag actions (#7188)\n- Markasjunk: Fix bug where marking as spam/ham didn't work on moving messages with drag-and-drop (#7137)\n- Password: Make chpass-wrapper.py Python 3 compatible (#7135)\n- Elastic: Fix disappearing sidebar in mail compose after clicking Mail button\n- Elastic: Fix incorrect aria-disabled attribute on Mail taskmenu button in mail compose\n- Elastic: Fix bug where it was possible to switch editor mode when 'htmleditor' was in 'dont_override' (#7143)\n- Elastic: Fix text selection in recipient inputs (#7129)\n- Elastic: Fix missing Close button in \"more recipients\" dialog\n- Elastic: Fix non-working folder subscription checkbox for newly added folders (#7174)\n- Fix regression where \"Open in new window\" action didn't work (#7155)\n- Fix PHP Warning: array_filter() expects parameter 1 to be array, null given in subscriptions_option plugin (#7165)\n- Fix unexpected error message when mail refresh involves folder auto-unsubscribe (#6923)\n- Fix recipient duplicates in print-view when the recipient list has been expanded (#7169)\n- Fix bug where files in skins/ directory were listed on skins list (#7180)\n- Fix bug where message parts with no Content-Disposition header and no name were not listed on attachments list (#7117)\n- Fix display issues with mail subject that contains line-breaks (#7191)\n- Fix invalid Content-Transfer-Encoding on multipart messages - Mail_Mime fix (#7170)\n- Fix regression where using an absolute path to SQLite database file on Windows didn't work (#7196)\n- Fix using unix:///path/to/socket.file in memcached driver (#7210)\n\n## Release 1.4.2\n\n- Add support for PHPUnit 6 and 7 (#6870)\n- Plugin API: Make actionbefore, before<action>, actionafter and after<action> events working with plugin actions (#7106)\n- Managesieve: Replace \"Filter disabled\" with \"Filter enabled\" (#7028)\n- Managesieve: Fix so modifier type select wasn't hidden after hiding modifier select on header change\n- Managesieve: Fix filter selection after removing a first filter (#7079)\n- Markasjunk: Fix marking more than one message as spam/ham with email_learn driver (#7121)\n- Password: Fix kpasswd and smb drivers' double-escaping bug (#7092)\n- Enigma: Add script to import keys from filesystem to the db storage (for multihost)\n- Installer: Fix DB Write test on SQLite database (\"database is locked\" error) (#7064)\n- Installer: Fix so SQLite DSN with a relative path to the database file works in Installer\n- Elastic: Fix contrast of warning toasts (#7058)\n- Elastic: Simple search in pretty selects (#7072)\n- Elastic: Fix hidden list widget on mobile/tablet when selecting folder while search menu is open (#7120)\n- Fix so type attribute on script tags is not used on HTML5 pages (#6975)\n- Fix unread count after purge on a folder that is not currently selected (#7051)\n- Fix bug where Enter key didn't work on messages list in \"List\" layout (#7052)\n- Fix bug where deleting a saved search in addressbook caused display issue on sources/groups list (#7061)\n- Fix bug where a new saved search added after removing all searches wasn't added to the list (#7061)\n- Fix bug where a new contact group added after removing all groups from addressbook wasn't added to the list\n- Fix bug where Ctype extension wasn't required in Installer and INSTALL file (#7049)\n- Fix so install-jsdeps.sh removes Bootstrap's sourceMappingURL (#7035)\n- Fix so use of Ctrl+A does not scroll the list (#7020)\n- Fix/remove useless keyup event handler on username input in logon form (#6970)\n- Fix bug where cancelling switching from HTML to plain text didn't set the flag properly (#7077)\n- Fix bug where HTML reply could add an empty line with extra indentation above the original message (#7088)\n- Fix matching multiple X-Forwarded-For addresses with 'proxy_whitelist' (#7107)\n- Fix so displayed maximum attachment size depends also on 'max_message_size' (#7105)\n- Fix bug where 'skins_allowed' option didn't enforce user skin preference (#7080)\n- Fix so contact's organization field accepts up to 128 characters (it was 50)\n- Fix bug where listing tables in PostgreSQL database with db_prefix didn't work (#7093)\n- Fix bug where 'text' attribute on body tag was ignored when displaying HTML message (#7109)\n- Fix bug where next message wasn't displayed after delete in List mode (#7096)\n- Fix so number of contacts in a group is not limited to 200 when redirecting to mail composer from Contacts (#6972)\n- Fix malformed characters in HTML message with charset meta tag not in head (#7116)\n\n## Release 1.4.1\n\n- Elastic: Change HTML editor widget to improve form flow (#6992)\n- Elastic: Fix position of mobile floating action button (#7038)\n- Managesieve: Fix locked UI after opening filter frame (#7007)\n- Fix PHP warning: \"array_merge(): Expected parameter 2 to be an array, null given in sendmail.inc (#7003)\n- Fix bug where cache keys could exceed length limit specified in db schema (#7004)\n- Fix invalid Signature button state after escaping Mailvelope mode (#7015)\n- Fix so 401 error is returned only on failed logon requests (#7010)\n- Fix db_prefix handling in queries with `TRUNCATE TABLE <name>` and `UNIQUE <name>` (#7013)\n- Fix so update.sh script warns about changed defaults (#7011)\n- Fix tables listing routine when DSN contained a database with unsupported suffix (#7034)\n- Fix so Elastic is also a default in jqueryui plugin (#7039)\n- Fix bug where the Installer would not warn about required schema upgrade (#7042)\n\n## Release 1.4.0\n\n- Elastic: Resizable columns (#6929)\n- Elastic: Fix position and style of auto-complete dropdown on small screens (#6951)\n- Elastic: Fix initial focus on recipients input in mail compose screen\n- Elastic: Fix inserting responses at cursor position (#6971)\n- Elastic: Fix unread filter icon and search state on folder change (#6978)\n- Elastic: Fix regression where Encrypt button wasn't displayed in mail compose toolbar (#6982)\n- Elastic: Fix regression where recipient input didn't update internal input state (#6988)\n- Enigma: Fix bug where signing option was set to disabled after saving a draft in Elastic skin (#6515)\n- Redis: Improve error handling and phpredis 5.X support (#6888)\n- Archive: Fix bug where next email was not displayed after Archive button use (#6965)\n- Archive: Fix missing Archive icon in folder selector popup in Elastic\n- Fix bug where cache keys were not case-sensitive on MySQL/MSSQL (#6942)\n- Fix so an error is logged when encryption fails (#6948)\n- Fix bug where inline images could have been ignored if Content-Id header contained redundant spaces (#6980)\n- Fix and document skin_logo setup (#6981)\n\n## Release 1.4-rc2\n\n- Update to jQuery 3.4.1\n- Clarified 'address_book_type' option behavior (#6680)\n- Added cookie mismatch detection, display an error message informing the user to clear cookies\n- Renamed 'log_session' option to 'session_debug'\n- Removed 'delete_always' option (#6782)\n- Don't log full session identifiers in userlogins log (#6625)\n- Support $HasAttachment/$HasNoAttachment keywords (#6201)\n- Support PECL memcached extension as a session and cache storage driver (experimental)\n- Switch to IDNA2008 variant (#6806)\n- installto.sh: Add possibility to run the update even on the up-to-date installation (#6533)\n- Plugin API: Add 'render_folder_selector' hook\n- Added 'keyservers' option to define list of HKP servers for Enigma/Mailvelope (#6326)\n- Added flag to disable server certificate validation via Mysql DSN argument (#6848)\n- Select all records on the current list page with CTRL + A (#6813)\n- Use Left/Right Arrow keys to faster move over threaded messages list (#6399)\n- Changes in `display_next` setting (#6795):\n    - Move it to Preferences > User Interface > Main Options\n    - Make it apply to Contacts interface too\n    - Make it apply only if deleting/moving a previewed message/contact\n- Redis: Support connection to unix socket\n- Put charset meta specification before a title tag, add page title automatically (#6811)\n- Elastic: Various internal refactorings\n- Elastic: Add Prev/Next buttons on message page toolbar (#6648)\n- Elastic: Close search options on Enter key press in quick-search input (#6660)\n- Elastic: Changed some icons (#6852)\n- Elastic: Changed read/unread icons (#6636)\n- Elastic: Changed \"Move to...\" icon (#6637)\n- Elastic: Add hide/show for advanced preferences (#6632)\n- Elastic: Add default icon on Settings/Preferences lists for external plugins (#6814)\n- Elastic: Add indicator for popover menu items that open a submenu (#6868)\n- Elastic: Move compose attachments/options to the right side (#6839)\n- Elastic: Add border/background to attachments list widget (#6842)\n- Elastic: Add \"Show unread messages\" button to the search bar (#6587)\n- Elastic: Fix bug where toolbar disappears on attachment menu use in Chrome (#6677)\n- Elastic: Fix folders list scrolling on touch devices (#6706)\n- Elastic: Fix non-working pretty selects in Chrome browser (#6705)\n- Elastic: Fix issue with absolute positioned mail content (#6739)\n- Elastic: Fix bug where some menu actions could cause a browser popup warning\n- Elastic: Fix handling mailto: URL parameters in contact menu (#6751)\n- Elastic: Fix keyboard navigation in some menus, e.g. the contact menu\n- Elastic: Fix visual issue with long buttons in .boxwarning (#6797)\n- Elastic: Fix handling new-line in text pasted to a recipient input\n- Elastic: Fix so search is not reset when returning from the message preview page (#6847)\n- Larry: Fix regression where menu actions didn't work with keyboard (#6740)\n- ACL: Display user/group names (from ldap) instead of acl identifier\n- Password: Added ldap_exop driver (#4992)\n- Password: Added support for SSHA512 password algorithm (#6805)\n- Managesieve: Fix bug where global includes were requested for vacation (#6716)\n- Managesieve: Use RFC-compliant line endings, CRLF instead of LF (#6686)\n- Managesieve: Fix so \"Create filter\" option does not show up when Filters menu is disabled (#6723)\n- Enigma: For verified signatures, display the user id associated with the sender address (#5958)\n- Enigma: Fix bug where revoked users/keys were not greyed out in key info\n- Enigma: Fix error message when trying to encrypt with a revoked key (#6607)\n- Enigma: Fix \"decryption oracle\" bug [CVE-2019-10740] (#6638)\n- Enigma: Fix bug where signature verification could have been skipped for some message structures (#6838)\n- Fix language selection for spellchecker in html mode (#6915)\n- Fix css styles leak from replied/forwarded message to the rest of the composed text (#6831)\n- Fix invalid path to \"add contact\" icon when using assets_path setting\n- Fix invalid path to blocked.gif when using assets_path setting (#6752)\n- Fix so advanced search dialog is not automatically displayed on searchonly addressbooks (#6679)\n- Fix so an error is logged when more than one attachment plugin has been enabled, initialize the first one (#6735)\n- Fix bug where flag change could have been passed to a preview frame when not expected\n- Fix bug in HTML parser that could cause missing text fragments when there was no head/body tag (#6713)\n- Fix bug where HTML messages with a xml:namespace tag were not rendered (#6697)\n- Fix TinyMCE download location (#6694)\n- Fix so \"Open in new window\" consistently displays \"external window\" interface (#6659)\n- Fix bug where next row wasn't selected after deleting a collapsed thread (#6655)\n- Fix bug where external content (e.g. mail body) was passed to templates parsing code (#6640)\n- Fix bug where attachment preview didn't work with x_frame_options=deny (#6688)\n- Fix so bin/install-jsdeps.sh returns error code on error (#6704)\n- Fix bug where bmp images couldn't be displayed on some systems (#6728)\n- Fix bug in parsing vCard data using PHP 7.3 due to an invalid regexp (#6744)\n- Fix bug where bold/strong text was converted to upper-case on html-to-text conversion (6758)\n- Fix bug in rcube_utils::parse_hosts() where %t, %d, %z could return only tld (#6746)\n- Fix bug where Next/Prev button in mail view didn't work with multi-folder search result (#6793)\n- Fix bug where selection of columns on messages list wasn't working\n- Fix bug in converting multi-page Tiff images to Jpeg (#6824)\n- Fix bug where handling multiple messages from multi-folder search result could not work (#6845)\n- Fix bug where unread count wasn't updated after moving multi-folder result (#6846)\n- Fix wrong messages order after returning to a multi-folder search result (#6836)\n- Fix some PHP 7.4 compat. issues (#6884, #6866)\n- Fix bug where it was possible to bypass the position:fixed CSS check in received messages (#6898)\n- Fix bug where some strict remote URIs in url() style were unintentionally blocked (#6899)\n- Fix bug where it was possible to bypass the CSS jail in HTML messages using :root pseudo-class (#6897)\n- Fix bug where it was possible to bypass href URI check with data:application/xhtml+xml URIs (#6896)\n\n## Release 1.4-rc1\n\n- Changed 'password_charset' default to 'UTF-8' (#6522)\n- Add skins_allowed option (#6483)\n- SMTP GSSAPI support via krb_authentication plugin (#6417)\n- Avoid Referer leaking by using Referrer-Policy:same-origin header (#6385)\n- Removed 'referer_check' option (#6440)\n- Use constant prefix for temp file names, don't remove temp files from other apps (#6511)\n- Ignore 'Sender' header on Reply-All action (#6506)\n- deluser.sh: Add option to delete users who have not logged in for more than X days (#6340)\n- HTML5 Upload Progress - as a replacement for the old server-side solution (#6177)\n- Update to TinyMCE 4.8.2\n- Update to jQuery-MiniColors 2.3.4\n- Prevent from using deprecated timezone names from jsTimezoneDetect\n- Force session.gc_probability=1 when using custom session handlers (#6560)\n- Support simple field labels (e.g. LetterHub examples) in csv imports (#6541)\n- Add cache busters also to images used by templates (#6610)\n- Plugin API: Added 'raise_error' hook (#6199)\n- Plugin API: Added 'common_headers' hook (#6385)\n- Plugin API: Added 'ldap_connected' hook\n- Enigma: Update to OpenPGPjs 4.2.1 - fixes user name encoding issues in key generation (#6524)\n- Enigma: Fixed multi-host synchronization of private and deleted keys and pubring.kbx file\n- Managesieve: Added support for 'editheader' extension - RFC5293 (#5954)\n- Managesieve: Fix bug where custom header or variable could be lost on form submission (#6594)\n- Markasjunk: Integrate markasjunk2 features into markasjunk - marking as non-junk + learning engine (#6504)\n- Password: Added 'modoboa' driver (#6361)\n- Password: Fix bug where password_dovecotpw_with_method setting could be ignored (#6436)\n- Password: Fix bug where new users could skip forced password change (#6434)\n- Password: Allow drivers to override default password comparisons (eg new is not same as current) (#6473)\n- Password: Allow drivers to override default strength checks (eg allow for 'not the same as last x passwords') (#246)\n- Password: Allow drivers to define password strength rules displayed to the user\n- Password: Allow separate password saving and strength drivers for use of strength checking services (#5040)\n- Password: Add zxcvbn driver for checking password strength (#6479)\n- Password: Disallow control characters in passwords\n- Password: Add support for Plesk >= 17.8 (#6526)\n- Elastic: Improved datepicker displayed always in parent window\n- Elastic: On touch devices display attachment icons on messages list (#6296)\n- Elastic: Make menu button inactive if all subactions are inactive (#6444)\n- Elastic: On mobile/tablet jump to the list on folder selection (#6415)\n- Elastic: Various improvements on mail compose screen (#6413)\n- Elastic: Support new-line char as a separator for pasted recipients (#6460)\n- Elastic: Improved UX of search dialogs (#6416)\n- Elastic: Fix unwanted thread expanding when selecting a collapsed thread in non-mobile mode (#6445)\n- Elastic: Fix too small height of mailvelope mail preview frame (#6600)\n- Elastic: Add \"status bar\" for mobile in mail composer\n- Elastic: Add selection options on contacts list (#6595)\n- Elastic: Fix unintentional layout preference overwrite (#6613)\n- Elastic: Fix bug where Enigma options in mail compose could sometimes be ignored (#6515)\n- Log errors caused by low pcre.backtrack_limit when sending a mail message (#6433)\n- Fix regression where drafts were not deleted after sending the message (#6756)\n- Fix so max_message_size limit is checked also when forwarding messages as attachments (#6580)\n- Fix so performance stats are logged to the main console log also when per_user_logging=true\n- Fix malformed message saved into Sent folder when using big attachments and low memory limit (#6498)\n- Fix incorrect IMAP SASL GSSAPI negotiation (#6308)\n- Fix so unicode in local part of the email address is also supported in recipient inputs (#6490)\n- Fix bug where autocomplete list could be displayed out of screen (#6469)\n- Fix style/navigation on error page depending on authentication state (#6362)\n- Fix so invalid smtp_helo_host is never used, fallback to localhost (#6408)\n- Fix custom logo size in Elastic (#6424)\n- Fix listing the same attachment multiple times on forwarded messages\n- Fix bug where a message/rfc822 part without a filename wasn't listed on the attachments list (#6494)\n- Fix inconsistent offset for various time zones - always display Standard Time offset (#6531)\n- Fix dummy Message-Id when resuming a draft without Message-Id header (#6548)\n- Fix handling of empty entries in vCard import (#6564)\n- Fix bug in parsing some IMAP command responses that include unsolicited replies (#6577)\n- Fix PHP 7.2 compatibility in debug_logger plugin (#6586)\n- Fix so ANY record is not used for email domain validation, use A, MX, CNAME, AAAA instead (#6581)\n- Fix so mime_content_type check in Installer uses files that should always be available (i.e. from program/resources) (#6599)\n- Fix missing CSRF token on a link to download too-big message part (#6621)\n- Fix bug when aborting dragging with ESC key didn't stop the move action (#6623)\n\n## Release 1.4-beta\n\n- Added new skin with mobile support - the Elastic\n- Support Redis cache\n- Email Resent (Bounce) feature (#4985)\n- Improved Mailvelope integration\n  - Added private key listing and generating to identity settings\n  - Enable encrypt & sign option if Mailvelope supports it\n- Allow contacts without an email address (#5079)\n- Support SMTPUTF8 and relax email address validation to support unicode in local part (#5120)\n- Support for IMAP folders that cannot contain both folders and messages (#5057)\n- Update to jQuery-3.3.1\n- Update to jQuery-minicolors 2.2.6\n- Update to TinyMCE 4.7.13\n- Remove sample PHP configuration from .htaccess and .user.ini files (#5850)\n- Extend skin_logo setting to allow per skin logos (#6272)\n- Use Masterminds/HTML5 parser for better HTML5 support (#5761)\n- Add More actions button in Contacts toolbar with Copy/Move actions (#6081)\n- Display an error when clicking disabled link to register protocol handler (#6079)\n- Add option trusted_host_patterns (#6009, #5752)\n- Support additional connect parameters in PostgreSQL database wrapper\n- Use UI dialogs instead of confirm() and alert() where possible\n- Display value of the SMTP message size limit in the error message (#6032)\n- Show message flagged status in message view (#5080)\n- Skip redundant INSERT query on successful logon when using PHP7\n- Replace display_version with display_product_version (#5904)\n- Extend disabled_actions config so it accepts also button names (#5903)\n- Handle remote stylesheets the same as remote images, ask the user to allow them (#5994)\n- Add Message-ID to the sendmail log (#5871)\n- Add option to hide folders in share/other-user namespace or outside of the personal namespace root (#5073)\n- Archive: Fix archiving by sender address on cyrus-imap\n- Archive: Style Archive folder also on folder selector and folder manager lists\n- Archive: Add Thunderbird compatible Month option (#5623)\n- Archive: Create archive folder automatically if it's configured, but does not exist (#6076)\n- Enigma: Add button to send mail unencrypted if no key was found (#5913)\n- Enigma: Add options to set PGP cipher/digest algorithms (#5645)\n- Enigma: Multi-host support\n- Managesieve: Add ability to disable filter sets and other actions (#5496, #5898)\n- Managesieve: Add option managesieve_forward to enable settings dialog for simple forwarding (#6021)\n- Managesieve: Support filter action with custom IMAP flags (#6011)\n- Managesieve: Support 'mime' extension tests - RFC5703 (#5832)\n- Managesieve: Support GSSAPI authentication with krb_authentication plugin (#5779)\n- Managesieve: Support enabling the plugin for specified hosts only (#6292)\n- Password: Support host variables in password_db_dsn option (#5955)\n- Password: Automatic virtualmin domain setting, removed password_virtualmin_format option (#5759)\n- Password: Added password_username_format option (#5766)\n- subscriptions_option: show \\\\Noselect folders greyed out (#5621)\n- zipdownload: Added option to define size limit for multiple messages download (#5696)\n- vcard_attachments: Add possibility to send contact vCard from Contacts toolbar (#6080)\n- Changed defaults for smtp_user (%u), smtp_pass (%p) and smtp_port (587)\n- Composer: Fix certificate validation errors by using packagist only (#5148)\n- Add --get and --extract arguments and CACHEDIR env-variable support to install-jsdeps.sh (#5882)\n- Support _filter and _scope as GET arguments for opening mail UI (#5825)\n- Various improvements for templating engine and skin behaviours\n  - Support conditional include\n  - Support for 'link' objects\n  - Support including files with path relative to templates directory\n  - Use <button> instead of <input> for submit button on logon screen\n- Support skin localization (#5853)\n- Reset onerror on images if placeholder does not exist to prevent from requests storm\n- Unified and simplified code for loading content frame for responses and identities\n- Display contact import and advanced search in popup dialogs\n- Display a dialog for mail import with supported format description and upload size hint\n- Make possible to set (some) config options from a skin\n- Added optional checkbox selection for the list widget\n- Make 'compose' command always enabled\n- Add .log suffix to all log file names, add option log_file_ext to control this (#313)\n- Return \"401 Unauthorized\" status when login fails (#5663)\n- Support both comma and semicolon as recipient separator, drop recipients_separator option (#5092)\n- Plugin API: Added 'show_bytes' hook (#5001)\n- Add option to not indent quoted text on top-posting reply (#5105)\n- Removed global $CONFIG variable\n- Removed debug_level setting\n- Support AUTHENTICATE LOGIN for IMAP connections (#5563)\n- Support LDAP GSSAPI authentication (#5703)\n- Localized timezone selector (#4983)\n- Use 7bit encoding for ISO-2022-* charsets in sent mail (#5640)\n- Handle inline images also inside multipart/mixed messages (#5905)\n- Allow style tags in HTML editor on composed/reply messages (#5751)\n- Use Github API as a fallback to fetch js dependencies to workaround throttling issues (#6248)\n- Show confirm dialog when moving folders using drag and drop (#6119)\n- Fix bug where new_user_dialog email check could have been circumvented by deleting / abandoning session (#5929)\n- Fix skin extending for assets (#5115)\n- Fix handling of forwarded messages inside of a TNEF message (#5632)\n- Fix bug where attachment size wasn't visible when the filename was too long (#6033)\n- Fix checking table columns when there's more schemas/databases in postgres/mysql (#6047)\n- Fix css conflicts in user interface and e-mail content (#5891)\n- Fix duplicated signature when using Back button in Chrome (#5809)\n- Fix touch event issue on messages list in IE/Edge (#5781)\n- Fix so links over images are not removed in plain text signatures converted from HTML (#4473)\n- Fix various issues when downloading files with names containing non-ascii chars, use RFC 2231 (#5772)\n\n## Release 1.3.8\n\n- Fix PHP warnings on dummy QUOTA responses in Courier-IMAP 4.17.1 (#6374)\n- Fix so fallback from BINARY to BODY FETCH is used also on [PARSE] errors in dovecot 2.3 (#6383)\n- Enigma: Fix deleting keys with authentication subkeys (#6381)\n- Fix invalid regular expressions that throw warnings on PHP 7.3 (#6398)\n- Fix so Classic skin splitter does not escape out of window (#6397)\n- Fix XSS issue in handling invalid style tag content [CVE-2018-19206] (#6410)\n- Fix compatibility with MySQL 8 - error on 'system' table use\n- Managesieve: Fix bug where show_real_foldernames setting wasn't respected (#6422)\n- New_user_identity: Fix %fu/%u vars substitution in user specific LDAP params (#6419)\n- Fix support for \"allow-from <uri>\" in \"x_frame_options\" config option (#6449)\n- Fix bug where valid content between HTML comments could have been skipped in some cases (#6464)\n- Fix multiple VCard field search (#6466)\n- Fix session issue on long running requests (#6470)\n\n## Release 1.3.7\n\n- Fix PHP Warning: Use of undefined constant IDNA_DEFAULT on systems without php-intl (#6244)\n- Fix bug where some parts of quota information could have been ignored (#6280)\n- Fix bug where some escape sequences in html styles could bypass security checks\n- Fix bug where some forbidden characters on Cyrus-IMAP were not prevented from use in folder names\n- Fix bug where only attachments with the same name would be ignored on zip download (#6301)\n- Fix bug where unicode contact names could have been broken/emptied or caused DB errors (#6299)\n- Fix bug where after \"mark all folders as read\" action message counters were not reset (#6307)\n- Enigma: [EFAIL] Don't decrypt PGP messages with no MDC protection (#6289)\n- Fix bug where some HTML comments could have been malformed by HTML parser (#6333)\n\n## Release 1.3.6\n\n- Fix parsing date strings (e.g. from a Date: mail header) with comments (#6216)\n- Fix PHP 7.2: count(): Parameter must be an array in enchant-based spellchecker (#6234)\n- Fix possible IMAP command injection and type juggling vulnerabilities (#6229)\n- Enigma: Fix key selection for signing\n- Enigma: Enable keypair generation on Internet Explorer 11\n- Fix check_request() bypass in places using get_uids() [CVE-2018-9846] (#6238)\n- Fix bug where usernames without domain part could be malformed or converted to lower-case on logon (#6224)\n\n## Release 1.3.5\n\n- Managesieve: Fix bug where text: syntax was forced for strings longer than 1024 characters (#6143)\n- Managesieve: Fix missing Save button in Edit Filter Set page of Classic skin (#6154)\n- Fix duplicated labels in Test SMTP Config section (#6166)\n- Fix PHP Warning: exif_read_data(...): Illegal IFD size (#6169)\n- Enigma: Fix key generation in Safari by upgrade to OpenPGP 2.6.2 (#6149)\n- Fix security issue in remote content blocking on HTML image and style tags (#6178)\n- Added 9pt and 11pt to the list of font sizes in HTML editor\n- Fix handling encoding of HTML tags in \"inline\" JSON output (#6207)\n- Fix bug where some unix timestamps were not handled correctly by rcube_utils::anytodatetime() (#6212)\n\n## Release 1.3.4\n\n- Fix bug where contacts search could skip some records (#6130)\n- Fix possible information leak - add more strict sql error check on user creation (#6125)\n- Fix a couple of warnings on PHP 7.2 (#6098)\n- Fix broken long filenames when using imap4d server - workaround server bug (#6048)\n- Fix so temp_dir misconfiguration prints an error to the log (#6045)\n- Fix untagged COPYUID responses handling - again (#5982)\n- Fix PHP warning \"idn_to_utf8(): INTL_IDNA_VARIANT_2003 is deprecated\" with PHP 7.2 (#6075)\n- Fix bug where Archive folder wasn't auto-created on login with create_default_folders=true\n- Fix performance issue when parsing malformed and long Date header (#6087)\n- Fix syntax error in mssql.initial.sql (#6097)\n- Fix bug where contacts export by selection returned no more than 10 entries (#6103)\n- Fix searching contacts by address in LDAP source (#6084)\n- Fix X-Frame-Options:ALLOW-FROM support, remove custom click-jacking protection (#6057)\n\n## Release 1.3.3\n\n- Fix decoding of mailto: links with + character in HTML messages (#6020)\n- Fix false reporting of failed upgrade in installto.sh (#6019)\n- Fix file disclosure vulnerability caused by insufficient input validation [CVE-2017-16651] (#6026)\n- Fix mangled non-ASCII characters in links in HTML messages (#6028)\n\n## Release 1.3.2\n\n- Fix bug where pink image was used instead of a thumbnail when image resize fails (#5933)\n- Fix so files size/count limit is verified (client-side) also on drag-n-drop uploads (#5940)\n- Fix invalid template loading on a message error in preview frame (#5941)\n- Fix bug where HTML messages could have been rendered empty on some systems (#5957)\n- Fix wording of \"Mark previewed messages as read\" to \"Mark messages as read\" (#5952)\n- Enigma: Fix decryption of messages encoded with non-ascii charset (#5962)\n- Fix missing cursor in HTML editor on mail reply (#5969)\n- Fix (again) bug where image data URIs in css style were treated as evil/remote in mail preview (#5580)\n- Fix bug where mail search could return empty result on servers without SORT capability (#5973)\n- Fix bug where assets_path wasn't added to some watermark frames\n- Fix so untagged COPYUID responses are also supported according to RFC6851 (#5982)\n- Fix issue caused by non-default session.cookie_lifetime setting (#5961)\n- Fix Edge encoding bug when pasting text into the HTML editor, update to TinyMCE 4.5.8 (#5885)\n- Fix handling of unknown Content-Disposition type (#6002)\n- Fix truncated folder name on messages list in multi-folder mode, for folders with non-ascii characters (#6004)\n- Fix bug where removing the last subfolder did not hide toggle button on its parent record (#6007)\n- Fix bug where ghost messages could be added to the list after fast delete (#5941)\n\n## Release 1.3.1\n\n- Add Preferences > Mailbox View > Main Options > Layout (#5829)\n- Password: Fix compatibility with PHP 7+ in cpanel_webmail driver (#5820)\n- Managesieve: Fix parsing dot-staffed lines in multiline text (#5838)\n- Managesieve: Fix AM/PM suffix in vacation time selectors\n- Managesieve: Fix bug where 'exists' operator was reset to 'contains' (#5899)\n- Remove non-printable characters from filenames on download/display (#5880)\n- Fix decoding non-ascii attachment names from TNEF attachments (#5646, #5799)\n- Fix uninitialized string offset in rcube_utils::bin2ascii() and make sure rcube_utils::random_bytes() result has always requested length (#5788)\n- Fix bug where HTML messages with @media styles could modify style of page body (#5811)\n- Fix style issue on selected and unfocused message that is part of a thread (#5798)\n- Fix bug where a.button style from managesieve plugin could impact other elements (#5800)\n- Fix position of selected icon for (Mailvelope) Encrypt button\n- Fix fatal error when using DMY- or MDY-based date format in PostgreSQL (#5808)\n- Fix bug where errors were not printed when using bin/update.sh (#5834)\n- Fix PHP 7.2 warnings on count() use (#5845)\n- Fix bug where Chrome could not upload the same file that was selected before (#5854)\n- Fix duplicate messages on the list after deleting messages on the next to the last page (#5862)\n- Fix bug where messages count was not updated after delete when imap_cache is set (#5872)\n- Fix potential XSS vulnerability with malformed HTML message markup\n- Fix sending message with \"Too many public recipients\" dialog buttons (#5924)\n- Bring back double-click behavior on the message list which was removed in 1.3.0 (#5823)\n- Enigma: Fix decrypting an encrypted+signed message when signature verification fails (#5914)\n\n## Release 1.3.0\n\n- Update to TinyMCE 4.5.7\n- Fix bug where invalid recipients could be silently discarded (#5739)\n- Fix conflict with _gid cookie of Google Analytics (#5748)\n- Print error from CLI scripts when system/exec function is disabled (#5744)\n- Fix bug where comment notation within style tag would cause the whole style to be ignored (#5747)\n- Fix bug where it wasn't possible to scroll folders list in Edge (#5750)\n- Fix folders list sorting on Windows - if php-intl is available (#5732)\n- Fix addressbook searching by gender (#5757)\n- Fix prevention from using % and * characters in folder name (#5762)\n- Fix POST parameter reflection in default_charset selector (#5768)\n- Enigma: Fix compatibility with assets_dir\n- Managesieve: Skip redundant LISTSCRIPTS command\n- Fix SQL syntax error on MariaDB 10.2 (#5774)\n- Fix bug where zipdownload ignored files with the same name (#5777)\n- Fix bug where it wasn't possible to set timezone to auto-detected value (#5782)\n\n## Release 1.3-rc\n\n- \"Flattened\" the larry theme: fresher look by removing shadows and gradients\n- Support logging to php://stdout (#5721)\n- Add support for DelSp=Yes in format=flowed messages (#5702)\n- Update to jQuery 3.2.1\n- Update to TinyMCE 4.5.6\n- Plugin API: Call message_part_structure hook for sub-parts of multipart/alternative message (#5678)\n- Enigma: Always use detached signatures (#5624)\n- Enigma: Fix handling of messages with nested PGP encrypted parts (#5634)\n- Minimize unwanted message loading in preview frame on drag (#5616)\n- Fix failing database schema check in all engines except mysql (#5730)\n- Fix autocomplete popup closing with click outside the input, don't handle Tab key as Enter (#5606)\n- Fix jsdeps.json synchronization on update, warn about missing requirements of install-jsdeps.sh (#5598)\n- Fix missing thread expand icon on search result in widescreen mode (#5613)\n- Fix bug where image data URIs in css style were treated as evil/remote in mail preview (#5580)\n- Fix bug where external content in src attribute of input/video tags was not secured (#5583)\n- Fix PHP error on update of a contact with multiple email addresses when using PHP 7.1 (#5587)\n- Fix bug where mail content frame couldn't be reset in some corner cases (#5608)\n- Fix bug where some classic skin images were not displayed in IE/Edge (#5614)\n- Fix bug where signature couldn't be added above the quote in Firefox 51 (#5628)\n- Fix regression where groups with email address were resolved to its members' addresses\n- Fix update of group name in the contacts list header on group rename (#5648)\n- Add rewrite rule to disable access to /vendor/bin folder in .htaccess (#5630)\n- Fix bug where it was too easy accidentally move a folder when using the subscription checkbox (#5655)\n- Managesieve: Fix parser issue with empty lines between comments (#5657)\n- Managesieve: Fix possible defect in handling \\r\\n in scripts (#5685)\n- Fix/rephrase \"unsaved changes\" warning when cancelling a draft (#5610)\n- Fix XSS issue in handling of a style tag inside of an svg element [CVE-2017-6820]\n- Fix bug where settings/upload.inc could not be used by plugins (#5694)\n- Fix regression in LDAP fuzzy search where it always used prefix search instead (#5713)\n- Fix bug where namespace prefix could not be truncated on folders list if show_real_foldernames=true (#5695)\n- Fix undesired effects when postgres database uses different timezone than PHP host (#5708)\n- Installer: Fix DB schema initialization on MS SQL Server\n- Fix bug where base_dn setting was ignored inside group_filters (#5720)\n- Password: Fix security issue in virtualmin and sasl drivers [CVE-2017-8114]\n\n## Release 1.3-beta\n\n- Nicely handle contact deletion on contact edit (#5522)\n- vcard_attachments: Add possibility to attach contact vCard to composed message (#4997)\n- Preserve message internal/received date on import in mbox format (#5559)\n- Zipdownload: Fix date format in mbox \"From line\"\n- Possibility to display QR code for contacts data (#5030)\n- Added identicon plugin\n- Widescreen layout aka three column view (#5093)\n- Unify automatic marking as \\Seen in preview pane, full-page and extwin views (#5071)\n- Disable double-click on the list when preview pane is on (#5199)\n- Support hostname and hostname:port in force_https option (#5511)\n- Support ALLOW-FROM in x_frame_options (#5122)\n- Allow to omit a subject when sending an email (#5068)\n- Warn about too many disclosed recipients in composed email [max_disclosed_recipients] (#5132)\n- identity_select: Support Received header (#5085)\n- Plugin API: Added get_compose_responses hook (#5457)\n- Display error when trying to upload more files than specified in max_file_uploads (#5483)\n- Add missing sql upgrade file for 'ip' column resize in session table (#5465)\n- Do not show inline images of unsupported mimetype (#5463)\n- Password: Added replacement variables support in password_pop_host (#5539)\n- Password: Don't store passwords in temp files when using dovecotpw (#5531)\n- Password: Added LDAP PPolicy driver (#5364)\n- Password: Added cpanel_webmail driver (#5549)\n- Password: Added possibility to nicely redirect from other plugins on password expiration (#5468)\n- Implement separate action to mark all messages in a folder as \\Seen (#5006)\n- Implement marking as \\Seen in all folders or in a folder and its subfolders (#5076)\n- Archive: Don't reload messages list when it's not needed (#5225)\n- Archive: Add option to automatically mark archived messages as \\Seen (#5142)\n- Improve randomness of password salts and random hashes (#5266)\n- Password/cPanel: Add support for hash authentication and reseller accounts (#5252)\n- Support host-specific imap_conn_options/smtp_conn_options/managesieve_conn_options (#5136)\n- Center and scale images in attachment preview frame (#5421)\n- Added max_message_size option enforced when attaching files to a composed message (#4993)\n- Added Search button in quick search menus (#5312)\n- Implement \"one click\" attachment/messages/photo upload (#5024)\n- Squirrelmail_usercopy: Add option to define character set of data files\n- Removed useless 'created' column from 'session' table (#5389)\n- Dropped legacy browsers support (#5167)\n    - Removed legacy_browser plugin\n    - Removed hacks for IE < 10\n    - Update to jQuery 3.1.1 and jQuery-UI 1.12.0\n    - compile .min.js files with ECMASCRIPT5 option\n- Require PHP >= 5.4\n- Add possibility to preview and download attachments in mail compose (#5053)\n- Add possibility to rename attachments in mail compose (#4996)\n- Remove backward compatibility \"layer\" of bc.php (#4902)\n- Support WEBP images in mail messages (#5362)\n- Support MathML in HTML message preview (#5182)\n- Rename Addressbook to Contacts (#5233)\n- Remove PHP mail() support, smtp_server is required now (#5340)\n- Display full message subject in onmouseover on truncated subject in mail view (#5346)\n- Enigma: Support GnuPG 2.1 (#5313)\n- Enigma: Support key generation for multiple identities (#5383)\n- Enigma: Import keys from key-server(s) (#5286)\n- Enigma: Search missing public keys on a key-server in mail compose (#5286)\n- Enigma: Delete user keys when using deluser.sh script\n- Enigma: Fix redundant list-secret-keys/list-public-keys calls on signing/encryption\n- Enigma: Implement PGP encryption and signing in one go (#5302)\n- Enigma: Display signature verification status for encrypted+signed messages (#5302)\n- Display different attachment icon on encrypted messages\n- Display different confirmation text when moving messages to Trash (#5220)\n- Indicate that a collapsed thread has flagged children (#5013)\n- Implemented message/rfc822 attachment preview\n- Update to jsTimezoneDetect 1.0.6\n- Managesieve: Add (optional) RAW script editor (#5414)\n- Managesieve: Add option to automatically set vacation :from address (#5428)\n- Managesieve: Support 'string' test from variables extension [RFC 5229] (#5248)\n- Managesieve: Support 'duplicate' extension [RFC 7352]\n- Managesieve: Unhide advanced rule controls if there are inputs with errors\n- Managesieve: Display warning message when filter form contains errors\n- Control search engine crawlers via X-Robots-Tag header instead of <meta> and robots.txt (#5098)\n- Fixed redundancy in sql caching system and compatibility with Galera Cluster (#5439)\n    - Removed redundant 'created' column from cache and cache_shared tables\n    - Removed use of redundant data records\n    - Added missing primary keys (dictionary, cache, cache_shared tables)\n- Fix so templating system does not mess with external (e.g. email) content (#5499)\n- Fix redundant keep-alive/refresh after session error on compose page (#5500)\n- Managesieve: Fix handling of scripts with nested rules (#5540)\n- Fix variable substitution in ldap host for some use-cases, e.g. new_user_identity (#5544)\n- Enigma: Fix PHP fatal error when decrypting a message with invalid signature (#5555)\n- Fix adding images to new identity signatures\n- Fix rsync error handling in installto.sh script (#5562)\n- Fix some advanced search issues with multiple addressbooks (#5572)\n- Fix so group/addressbook selection is retained on page refresh\n\n## Release 1.2.3\n\n- Searching in both contacts and groups when LDAP addressbook with group_filters option is used\n- Fix vulnerability in handling of mail()'s 5th argument\n- Fix To: header encoding in mail sent with mail() method (#5475)\n- Fix flickering of header topline in min-mode (#5426)\n- Fix bug where folders list would scroll to top when clicking on subscription checkbox (#5447)\n- Fix decoding of GB2312/GBK text when iconv is not installed (#5448)\n- Fix regression where creation of default folders wasn't functioning without prefix (#5460)\n- Enigma: Fix bug where last records on keys list were hidden (#5461)\n- Enigma: Fix key search with keyword containing non-ascii characters (#5459)\n- Fix bug where deleting folders with subfolders could fail in some cases (#5466)\n- Fix bug where IMAP password could be exposed via error message (#5472)\n- Fix bug where it wasn't possible to store more that 2MB objects in memcache/apc,\n  Added memcache_max_allowed_packet and apc_max_allowed_packet settings (#5452)\n- Fix \"Illegal string offset\" warning in rcube::log_bug() on PHP 7.1 (#5508)\n- Fix storing \"empty\" values in rcube_cache/rcube_cache_shared (#5519)\n- Fix missing content check when image resize fails on attachment thumbnail generation (#5485)\n- Fix displaying attached images with wrong Content-Type specified (#5527)\n\n## Release 1.2.2\n\n- Enigma: Add possibility to configure gpg-agent binary location (enigma_pgp_agent)\n- Enigma: Fix signature verification with some IMAP servers, e.g. Gmail, DBMail (#5371)\n- Enigma: Make recipient key searches case-insensitive (#5434)\n- Fix regression in resizing JPEG images with Imagick (#5376)\n- Managesieve: Fix parsing of vacation date-time with non-default date_format (#5372)\n- Use SymLinksIfOwnerMatch in .htaccess instead of FollowSymLinks disabled on some hosts for security reasons (#5370)\n- Wash position:fixed style in HTML mail for better security (#5264)\n- Fix bug where memcache_debug didn't work for session operations\n- Fix bug where Message-ID domain part was tied to username instead of current identity (#5385)\n- Fix bug where blocked.gif couldn't be attached to reply/forward with insecure content\n- Fix E_DEPRECATED warning when using Auth_SASL::factory() (#5401)\n- Fix bug where names of downloaded files could be malformed when derived from the message subject (#5404)\n- Fix so \"All\" messages selection is reset on search reset (#5413)\n- Fix bug where folder creation could fail if personal namespace contained more than one entry (#5403)\n- Fix error causing empty INBOX listing in Firefox when using an URL with user:password specified (#5400)\n- Fix PHP warning when handling shared namespace with empty prefix (#5420)\n- Fix so folders list is scrolled to the selected folder on page load (#5424)\n- Fix so when moving to Trash we make sure the folder exists (#5192)\n- Fix displaying size of attachments with zero size\n- Fix so \"Action disabled\" error uses more appropriate 404 code (#5440)\n\n## Release 1.2.1\n\n- Update TinyMCE to version 4.3.13 (#5309)\n- Fix bug where errors could have been not logged when per_user_logging=true\n- Fix bug where message list columns could be in wrong order after column drag-n-drop and list sorting\n- Fix so minified publickey.js (with cache-buster) is used when available (#5254)\n- Fix (replace) application/x-tar file extension test as it might not exist in nginx config (#5253)\n- Fix PHP warning when password_hosts is set, but is not an array (#5260)\n- Fix redundant keep-alive requests when session_lifetime is greater than ~20000 (#5273)\n- Fix so subfolders of INBOX can be set as Archive (#5274)\n- Fix bug where multi-folder search could choose a wrong folder in \"this and subfolders\" scope (#5282)\n- Fix bug where multi-folder search didn't work for unsubscribed INBOX (#5259)\n- Fix bug where \"no body\" alert could be displayed when sending mailvelope email\n- Enigma: Fix keys import from inside of an encrypted message (#5285)\n- Enigma: Fix malformed signed messages with force_7bit=true (#5292)\n- Enigma: Add possibility to configure gpg binary location (enigma_pgp_binary)\n- Enigma: Add possibility to export private keys (#5321)\n- Fix searching by email address in contacts with multiple addresses (#5291)\n- Fix handling of --delete argument in moduserprefs.sh script (#5296)\n- Workaround PHP issue by calling closelog() on script shutdown when using log_driver=syslog (#5289)\n- Fix so upgrade script makes sure program/lib directory does not contain old libraries (#5287)\n- Fix subscription checkbox state on error in folder subscribe/unsubscribe action (#5243)\n- Fix bug where microsecond format in logged date didn't work in some cases\n- Fix conflict in new_user_dialog and password_force_new_user settings (#5275)\n- Don't create multipart/alternative messages with empty text/plain part (#5283)\n- Use contact_search_name format in popup on results in compose contacts search\n- Fix handling of 'mailto' and 'error' arguments in message_before_send hook (#5347)\n- Fix missing localization of HTML editor when assets_dir != INSTALL_PATH\n- Fix handling of blockquote tags with mixed case on html2text conversion (#5363)\n- Fix javascript errors in IE on page with iframe that points to another domain\n\n## Release 1.2.0\n\n- Enigma: Added enigma_debug option\n- Fix message list multi-select/deselect issue (#5219)\n- Fix bug where getting HTML editor content could steal focus from other form controls (#5223)\n- Fix bug where contact search menu fields where always unchecked in Larry skin\n- Fix autoloading of 'html' class\n- Fix bug where Encrypt button appears when switching editor to HTML (#5235)\n- Fix XSS issue in href attribute on area tag (#5240)\n\n## Release 1.2-rc\n\n- Managesieve: Refactored script parser to be 100x faster\n- Enigma: added option to force users to use signing/encryption\n- Enigma: Added option to attach public keys to sent mail (#5152)\n- Enigma: Handle messages with text before an encrypted block (#5149)\n- Enigma: Handle encrypted/signed content inside message/rfc822 attachments\n- Enigma: Fix missing html/plain switch on multipart/signed messages (#4963)\n- Enigma: Disable format=flowed for signed plain text messages (#4960)\n- Enigma: Fix handling of encrypted + signed messages (#4950)\n- Enigma: Fix invalid boundary use in signed messages structure\n- Enable use of TLSv1.1 and TLSv1.2 for IMAP (#4955)\n- Save copy of original .htaccess file when using installto.sh script (#4947)\n- Fix regression where some message attachments could be missing on edit/forward (#4939)\n- Fix regression in displaying contents of message/rfc822 parts (#4937)\n- Fix handling of message/rfc822 attachments on replies and forwards (#4938)\n- Fix PDF support detection in Firefox > 19 (#4941)\n- Fix path traversal vulnerability in setting a skin [CVE-2015-8770] (#4945)\n- Fix so drag-n-drop of text (e.g. recipient addresses) on compose page actually works (#4944)\n- Fix .htaccess rewrite rules to not block .well-known URIs (#4943)\n- Fix mail view scaling on iOS (#4915)\n- Fix PHP7 warning \"session_start(): Session callback expects true/false return value\" (#4948)\n- Fix XSS issue in SVG images handling [CVE-2015-8864, CVE-2016-4068] (#4949)\n- Fix missing language name in \"Add to Dictionary\" request in HTML mode (#4951)\n- Fix (again) security issue in DBMail driver of password plugin [CVE-2015-2181] (#4958)\n- Fix bug where Archive/Junk buttons were not active after page jump with select=all mode (#4961)\n- Fix bug in long recipients list parsing for cases where recipient name contained @-char (#4964)\n- Plugin API: Added addressbook_export hook\n- Fix additional_message_headers plugin compatibility with Mail_Mime >= 1.9 (#4966)\n- Hide DSN option in Preferences when smtp_server is not used (#4967)\n- Fix handling of body parameter in mail compose request\n- Protect download urls against CSRF using unique request tokens [CVE-2016-4069] (#4957)\n- newmail_notifier: Refactor desktop notifications\n- Fix so contactlist_fields option can be set via config file\n- Fix so SPECIAL-USE assignments are forced only until user sets special folders (#4782)\n- Fix performance in reverting order of THREAD result\n- Fix converting mail addresses with @www. into mailto links (#5197)\n\n## Release 1.2-beta\n\n- Update TinyMCE to version 4.2\n- Added support for Redis session handler\n- Removed some deprecated methods: https://github.com/roundcube/roundcubemail/commit/454b0b1c\n- Remove backward compatibility \"layer\" of bc.php (#4902)\n- Add possibility to define date format in write operations for ldap attributes (#3956)\n- Display attachment size in compose (#1329)\n- Added possibility to drag-n-drop attachments from mail preview to compose window\n- Implemented mail messages searching with predefined date interval\n- PGP encryption support via Mailvelope integration\n- PGP encryption support via Enigma plugin\n- PHP7 compatibility fixes (#4836)\n- Security: Added brute-force attack prevention via login rate limit (#4922)\n- Security: Added options to validate username/password on logon (#4884)\n- Security: Improve randomness of security tokens (#4899)\n- Security: Use random security tokens instead of hashes based on encryption key (#4829)\n- Security: Improved encrypt/decrypt methods with option to choose the cipher_method (#4492)\n- Make optional adding of standard signature separator - sig_separator (#3276)\n- Optimize folder_size() on Cyrus IMAP by using special folder annotation (#4894)\n- Make optional hiding of folders with name starting with a dot - imap_skip_hidden_folders (#4870)\n- Add option to enable HTML editor always, except when replying to plain text messages (#4352)\n- Emoticons: Added option to switch on/off emoticons in compose editor (#2076)\n- Emoticons: Added option to switch on/off emoticons in plain text messages\n- Emoticons: All emoticons-related functionality is handled by the plugin now\n- Installer: Add button to save generated config file in system temp directory (#3553)\n- Remove common subject prefixes Re:, Re[x]:, Re-x: on reply (#4882)\n- Added GSSAPI/Kerberos authentication plugin - krb_authentication\n- Password: Allow temporarily disabling the plugin functionality with a notice\n- Require Mbstring and OpenSSL extensions (#5166)\n- Add --config and --type options to moduserprefs.sh script (#4651)\n- Implemented memcache_debug and apc_debug options\n- Installer: Remove system() function use (#4695)\n- Password plugin: Added 'kpasswd' driver by Peter Allgeyer\n- Add initdb.sh to create database from initial.sql script with prefix support (#4722)\n- Plugin API: Added disabled_plugins an disabled_buttons options in html_editor hook\n- Plugin API: Added html2text hook\n- Plugin API: Added message_part_body hook\n- Plugin API: Added message_ready hook\n- Plugin API: Add special onload() method to execute plugin actions before startup (session and GUI initialization)\n- Implemented UI element to jump to specified page of the messages list (#1677)\n- Fix searching of contacts to allow remote images for known senders (#4886)\n- Fix bug where clicking date column with 'arrival' sorting would switch to sorting by 'date' (#4690)\n- Fix bug where message content could overlap attachments list in Larry skin (#4876)\n- Fix so microseconds macro (u) in log_date_format works (#4855)\n- Fix so unrecognized TNEF attachments are displayed on the list of attachments (#5138)\n- Fix so database_attachments::cleanup() does not remove attachments from other sessions (#4907)\n- Fix responses list update issue after response name change (#4917)\n- Fix bug where message preview was unintentionally reset on check-recent action (#4921)\n- Fix bug where HTML messages with invalid/excessive css styles couldn't be displayed (#4905)\n- Fix redundant blank lines when using HTML and top posting (#4927)\n- Fix redundant blank lines on start of text after html to text conversion (#4928)\n- Fix HTML sanitizer to skip `<!-- node type X -->` in output (#4932)\n- Fix invalid LDAP query in ACL user autocompletion (#4934)\n\n## Release 1.1.3\n\n- Fix closing of nested menus (#4854)\n- Fix so E_DEPRECATED errors from PEAR libs are ignored by error_reporting change (#4770)\n- Fix compatibility with PHP 5.3 in rcube_ldap class (#4842)\n- Get rid of Mail_mimeDecode package dependency (#4836)\n- Fix \"Importing...\" message does not hide on error (#4840)\n- Fix Compose action in addressbook for results from multiple addressbooks (#4834)\n- Fix bug where some messages in multi-folder search couldn't be viewed/printed/downloaded (#4843)\n- Fix unintentional messages list page change on page switch in compose addressbook (#4844)\n- Fix race-condition in saving user preferences and loading plugin config (#4845)\n- Fix so plain text signature field uses monospace font (#4848)\n- Fix so links with href == content aren't added to links list on html to text conversion (#4847)\n- Fix handling of non-break spaces in html to text conversion (#4849)\n- Fix self-reply detection issues (#4852)\n- Fix multi-folder search result sorting by arrival date (#4858)\n- Fix so *-request@ addresses in Sender: header are also ignored on reply-all (#4860)\n- Update to TinyMCE 4.1.10 (#5164)\n- Fix draft removal after a message is sent and storing sent message is disabled (#4869)\n- Fix so imap folder attribute comparisons are case-insensitive (#4868)\n- Fix bug where new messages weren't added to the list in search mode\n- Fix wrong positioning of message list header on page scroll in Webkit browsers (#4646)\n- Fix some javascript errors in rare situations (#4853)\n- Fix error when using back button after sending an email (#4628)\n- Fix removing signature when switching to identity with an empty sig in HTML mode (#4872)\n- Disable links list generation on html-to-text conversion of identities or composed message (#4850)\n- Fix \"washing\" of style elements wrapped into many lines\n- Fix so input field (e.g. search box) does not loose focus on list load (#4862)\n- Fix so css of one html part does not apply to other text parts on message display (#4887)\n- Fix XSS issue in drag-n-drop file uploads [CVE-2015-8105] (#4900)\n- Fix handling of plus character in mailto: links (#4891)\n- Fix so adding CC/BCC recipients from the sidebar unhides compose form fields in Classic skin (#4874)\n- Fix so gc.sh script removes also expired sessions from sql database (#4893)\n- Fix support for Mozilla-based browsers, e.g. Pale Moon (#4895)\n- Fix various issues with Turkish (and similar) locales (#4896)\n- Fix so In-Reply-To header is set also for MDN receipts (#4897)\n- Fix missing HTTP_X_FORWARDED_FOR address in generated Received header\n- Fix issue where Content-Length of some attachments could be set to wrong value causing browser errors (#4877)\n\n## Release 1.1.2\n\n- Add new plugin hook 'identity_create_after' providing the ID of the inserted identity (#4807)\n- Add option to place signature at bottom of the quoted text even in top-posting mode [sig_below]\n- Fix handling of %-encoded entities in mailto: URLs (#4799)\n- Fix zipped messages downloads after selecting all messages in a folder (#4797)\n- Fix vpopmaild driver of password plugin\n- Fix PHP warning: Non-static method PEAR::setErrorHandling() should not be called statically (#4798)\n- Fix tables listing routine on mysql and postgres so it skips system or other database tables and views (#4796)\n- Fix message list header in classic skin on window resize in Internet Explorer (#4732)\n- Fix so text/calendar parts are listed as attachments even if not marked as such (#4795)\n- Fix lack of signature separator for plain text signatures in html mode (#4802)\n- Fix font artifact in Google Chrome on Windows (#4803)\n- Fix bug where forced extwin page reload could exit from the extwin mode (#4801)\n- Fix bug where some unrelated attachments in multipart/related message were not listed (#4805)\n- Fix mouseup event handling when dragging a list record (#4808)\n- Fix bug where preview_pane setting wasn't always saved into user preferences (#4809)\n- Fix bug where messages count was not updated after message move/delete with skip_deleted=false (#4814)\n- Fix security issue in contact photo handling (#4817)\n- Fix possible memcache/apc cache data consistency issues (#4820)\n- Fix bug where imap_conn_options were ignored in IMAP connection test (#4822)\n- Fix bug where some files could have \"executable\" extension when stored in temp folder (#4815)\n- Fix attached file path unsetting in database_attachments plugin (#4823)\n- Fix issues when using moduserprefs.sh without --user argument (#4825)\n- Fix potential info disclosure issue by protecting directory access (#4816)\n- Fix blank image in html_signature when saving identity changes (#4833)\n- Installer: Use openssl_random_pseudo_bytes() (if available) to generate des_key (#4827)\n- Fix XSS vulnerability in _mbox argument handling (#4837)\n\n## Release 1.1.1\n\n- ACL: Allow other plugins to adjust the list of permissions and groups to edit\n- Add possibility to print contact information (of a single contact)\n- Add possibility to configure max_allowed_packet value for all database engines (#4772)\n- Improved handling of storage errors after message is sent\n- Update to TinyMCE 4.1.9\n- Unified request* event arguments handling, added support for _unlock and _action parameters\n- Security: Generate random hash for the per-user local storage prefix (#4768)\n- Fix refreshing of drafts list when sending a message which was saved in meantime (#4745)\n- Fix saving/sending emoticon images when assets_dir is set\n- Fix PHP fatal error when visiting Vacation interface and there's no sieve script yet (#4778)\n- Fix setting max packet size for DB caches and check packet size also in shared cache\n- Fix needless security warning on BMP attachments display (#4771)\n- Fix handling of some improper constructs in format=flowed text as per the RFC3676[4.5] (#4773)\n- Fix performance of rcube_db_mysql::get_variable()\n- Fix missing or not up-to-date CATEGORIES entry in vCard export (#4766)\n- Fix fatal errors on systems without mbstring extension or mb_regex_encoding() function (#4769)\n- Fix cursor position on reply below the quote in HTML mode (#4759)\n- Fix so \"over quota\" errors are displayed also in message compose page\n- Fix duplicate entries suppression in autocomplete result (#4776)\n- Fix \"Non-static method PEAR::isError() should not be called statically\" errors (#4770)\n- Fix parsing invalid HTML messages with BOM after `<!DOCTYPE>` (#4777)\n- Fix duplicate entry on timezones list in rcube_config::timezone_name_from_abbr() (#4779)\n- Fix so localized folder name is displayed in multi-folder search result (#4750)\n- Fix javascript error after creating a folder which is a subfolder of another one (#4781)\n- Fix bug where subject of sent/saved message was removed if mbstring wasn't installed (#4780)\n- Fix missing vcard_attachment icon on messages list (#4783)\n- Fix storing signatures with big images in MySQL database (#4785)\n- Fix Opera browser detection in javascript (#4786)\n- Fix so search filter, scope and fields are reset on folder change\n- Fix rows count when messages search fails (#4760)\n- Fix bug where spellchecking in HTML editor do not work after switching editor type more than once (#4789)\n- Fix bug where TinyMCE area height was too small on slow network connection (#4788)\n- Fix backtick character handling in sql queries (#4790)\n- Fix redirect URL for attachments loaded in an iframe when behind a proxy (#4724)\n- Fix menu container references to point to the actual `<ul>` element (#4791)\n- Fix javascripts errors in IE8 - lack of Event.which, focusing a hidden element (#4793)\n\n## Release 1.1.0\n\n- Make SMTP error log more verbose - include server response and error code\n- Fix download options menu (added by zipdownload plugin) in classic skin (#4740)\n- Fix blocked.gif image usage with assets_dir set\n- Fix bug where max_group_members was ignored when adding a new contact (#4733)\n- Hide MDN and DSN options in compose if disabled by admin (#4735)\n- Fix checks based on window.ActiveXObject in IE > 10\n- Fix XSS issue in style attribute handling [CVE-2015-1433] (#4739)\n- Fix bug where Drafts list wasn't updated on draft-save action in new window (#4737)\n- Fix so \"set as default\" option is hidden if identities_level > 1 (#4738)\n- Fix bug where search was reset after returning from compose visited for reply\n- Fix javascript error in \"IE 8.0/Tablet PC\" browser (#4730)\n- Fix bug where Reply-To address was ignored on reply to messages sent by self (#4742)\n- Fix bug where empty fieldmap config entries caused empty results of ldap search (#4741)\n- Fix bug where drafts list wasn't refreshed after draft message was sent from another window (#4745)\n- Fix keyboard navigation and css in datepicker widget across many Firefox versions\n- Fix false warning when opening attached text/plain files (#4748)\n- Fix bug where signature could have been inserted twice after plain-to-html switch (#4746)\n- Fix security issue in DBMail driver of password plugin (#4757)\n- Enable FollowSymLinks option in .htaccess file which is required by rewrite rules (#4754)\n- Fix so JSON.parse() errors on localStorage items are ignored (#4752)\n\n## Release 1.1-rc\n\n- Update jQuery to version 2.1.3\n- Allow to override any config option through env variables\n- Improve system security by using optional special URL with security token - use_secure_urls\n- Allow to define separate server/path for image/js/css files - assets_url/assets_dir\n- Sync vendor folder if exists in source package (#4700)\n- Avoid useless reloading list when resetting search with active filter (#4654)\n- Fix invalid folder selection if clicked while busy (#4709)\n- Fix import of multiple contact email addresses from Outlook-csv format (#4714)\n- Fix drag-n-drop to folders expanded while dragging (#4708)\n- Fix import of multiple contact groups from Google-csv format (#4710)\n- Fix import of contacts with multiple email addresses from Google-csv format (#4719)\n- Fix bugs where CSRF attacks were still possible on some requests [CVE-2014-9587]\n- Fix some rcube_utils::anytodatetime() corner cases with timezone mismatches (#4712)\n- Improve move-to and contact-export button in classic skin (#4713)\n- Fix wrong icon for download button in classic skin\n- Fix bug where sent message was saved in Sent folder even if disabled by user (#4729)\n\n## Release 1.1-beta\n\n- Fix skin path handling in plugin context (#4111)\n- Prevent memory exhaustion on image resizing with GD on Windows (#4580)\n- Add plugin hook for database table name lookups as requested in #4538\n- Added Oracle database support\n- Support contacts import in GMail CSV format\n- Added namespace filter in Folder Manager\n- Added folder searching in Folder Manager\n- Fix restoring draft messages from localStorage if editor mode differs (#4631)\n- Added config option/user preference to disable saving messages in localStorage (#4606)\n- Added config option 'imap_log_session' to enable Roundcube <-> IMAP session ID logging\n- Added config option 'log_session_id' to control the length of the session identifier in logs\n- Implemented 'storage_connected' API hook after successful IMAP login (#4638)\n- Integrate Net_LDAP3 and rcube_ldap_generic classes\n- Add option (disabled_actions) to disable UI elements/actions (#4478)\n- Support password encryption using openssl extension (#4614)\n- Create/rename groups in UI dialogs (#4592)\n- Added 'contact_search_name' option to define autocompletion entry format\n- Display quota information for current folder not INBOX only (#3442)\n- Support images in HTML signatures (#3917)\n- Display full quota information in popup (#2103, #2746)\n- Mail compose: Selecting contact inserts recipient to previously focused input - to/cc/bcc accordingly (#4487)\n- Close \"no subject\" prompt with Enter key (#4463)\n- Password: Add option to force new users to change their password (#2963)\n- Improve support for screen readers and assistive technology using WCAG 2.0 and WAI ARIA standards\n- Enable basic keyboard navigation throughout the UI (#3333)\n- Select/scroll to previously selected message when returning from message page (#4146)\n- Display a warning if popup window was blocked (#4472)\n- Remove (was: ...) from message subject on reply (#4359)\n- Update to TinyMCE 4.1 (#4168)\n- Enable autolink plugin in TinyMCE (#4029)\n- Support image operations with Imagick extension (#4498)\n- Support upload progress with session.upload_progress and PECL uploadprogress module (#3934)\n- Make identity name field optional (#4435)\n- Utility script to remove user records from the local database\n- Plugin API: Added message_saved hook (#4503)\n- Plugin API: Added imap_search_before hook\n- Support messages import from zip archives\n- Zipdownload: Added mbox format support (#2354)\n- Drop support for IE6, move IE7/IE8 support to legacy_browser plugin\n- Update to jQuery-2.1.1\n- Search across multiple folders (#1676)\n- Improve UI integration of ACL settings\n- Drop support for PHP < 5.3.7\n- Set In-Reply-To and References for forwarded messages (#4465)\n- Removed redundant default_folders config option (#4500)\n- Implemented IMAP SPECIAL-USE extension support [RFC6154] (#3326)\n- Optimize some framed pages content for better performance (#4517)\n- Improve text messages display and conversion to HTML (#4091)\n- Don't remove links when html signature is converted to text (#4473)\n- Fix page title when using search filter (#4636)\n- Fix mbox files import\n- Fix some character sets detection (#4694)\n- Fix so attachment charset is set in headers of forward/draft message (#4676)\n- Fix bug where wrong charset could be used for text attachment preview page (#4674)\n\n## Release 1.0.5\n\n- Fix wrong icon for download button in classic skin\n- Fix checks based on window.ActiveXObject in IE > 10\n- Fix XSS issue in style attribute handling (#4739)\n- Fix bug where Drafts list wasn't updated on draft-save action in new window (#4737)\n- Fix so \"set as default\" option is hidden if identities_level > 1 (#4738)\n- Fix javascript error in \"IE 8.0/Tablet PC\" browser (#4730)\n- Fix bug where empty fieldmap config entries caused empty results of ldap search (#4741)\n- Fix bug where sent message was saved in Sent folder even if disabled by user (#4729)\n\n## Release 1.0.4\n\n- Disable TinyMCE contextmenu plugin as there are more cons than pros in using it (#4684)\n- Fix bug where show_real_foldernames setting wasn't honored on compose page (#4705)\n- Fix issue where Archive folder wasn't protected in Folder Manager (#4706)\n- Fix compatibility with PHP 5.2. in rcube_imap_generic (#4682)\n- Fix setting flags on servers with no PERMANENTFLAGS response (#4667)\n- Fix regression in SHA password generation in ldap driver of password plugin (#4670)\n- Fix displaying of HTML messages with absolutely positioned elements in Larry skin (#4672)\n- Fix font style display issue in HTML messages with styled <span> elements (#4671)\n- Fix download of attachments that are part of TNEF message (#4668)\n- Fix handling of uuencoded messages if messages_cache is enabled (#4675)\n- Fix handling of base64-encoded attachments with extra spaces (#4678)\n- Fix handling of UNKNOWN-CTE response, try do decode content client-side (#4650)\n- Fix bug where creating subfolders in shared folders wasn't possible without ACL extension (#4680)\n- Fix reply scrolling issue with text mode and start message below the quote (#4681)\n- Fix possible issues in skin/skin_path config handling (#4689)\n- Fix lack of delimiter for recipient addresses in smtp_log (#4703)\n- Fix generation of Blowfish-based password hashes (#4721)\n- Fix bugs where CSRF attacks were still possible on some requests [CVE-2014-9587]\n\n## Release 1.0.3\n\n- Initialize HTML editor before restoring a message from localStorage (#4631)\n- Add 'sig_max_lines' config option to default config file (#5162)\n- Add config option to specify IMAP connection socket parameters - imap_conn_options (#4589)\n- Add option to set default message list mode - default_list_mode (#3157)\n- Enable contextmenu plugin for TinyMCE editor (#3062)\n- Fix insert-signature command in external compose window if opened from inline compose screen (#4663)\n- Fix some mime-type to extension mapping checks in Installer (#4610)\n- Fix errors when using localStorage in Safari's private browsing mode (#4619)\n- Fix bug where $Forwarded flag was being set even if server didn't support it (#4621)\n- Fix various iCloud vCard issues, added fallback for external photos (#4617)\n- Fix invalid Content-Type header when send_format_flowed=false (#4616)\n- Fix errors when adding/updating contacts in active search (#4630)\n- Fix incorrect thumbnail rotation with GD and exif orientation data (#4641)\n- Fix contacts list update after adding/deleting/moving a contact (#4640, #4644)\n- Fix handling of email addresses with quoted domain part (#4647)\n- Fix comm_path update on task switch (#4648)\n- Fix error in MSSQL update script 2013061000.sql (#4658)\n- Fix validation of email addresses with IDNA domains (#4661)\n\n## Release 1.0.2\n\n- Fix storing unsaved drafts in localStorage (#4529)\n- Add configurable LDAP_OPT_DEREF option (#4546)\n- Fix so when switching editor mode original version of signature is used (#4032)\n- Fix unintentional draft autosave request if autosave is disabled (#4550)\n- Fix malformed References: header in send/saved mail (#4552)\n- Fix handling unicode characters in links (#4555)\n- Fix incorrect handling of HTML comments in messages sanitization code (#4558)\n- Fix so current page is reset on list-mode change (#4561)\n- Fix so responses menu hides on click in classic skin (#4566)\n- Fix unintentional line-height style modification in HTML messages (#4567)\n- Fix broken normalize_string(), add support for ISO-8859-2 (#4568)\n- Support csv contacts import in German localization (#4570)\n- Fix so message list and counters are updated when a message is opened in new window (#4569)\n- Fix malformed recipient name when composing a message by clicking on mailto link (#4583)\n- Fix list reload after sending message in another window (#4576)\n- Fix so address format errors are ignored when saving a draft (#4594)\n- Fix incorrect label translation in return receipt (#4598)\n- Fix security issue in delete-response action - allow only ajax request\n- Fix Delete button state after deleting identity/response (#4603)\n- Fix bug where contacts with no email address were listed on compose addressbook (#4602)\n- Fix images import from various vCard formats (#4604)\n- Fix sorting messages by size on servers without SORT capability (#4608)\n\n## Release 1.0.1\n\n- Support 'error' and 'body_file' return attribs in 'message_before_send' hook (#4467)\n- Apply user-specific replacements to group's base_dn property (#4512)\n- Fix missing email address when importing contacts from outlook csv (#4535)\n- Fix bug where \"With attachment\" option in search filter wasn't selected after return from mail view (#4508)\n- Fix \"washing\" of unicode style attributes (#4510)\n- Fix unintentional redirect from compose page in Webkit browsers (#4516)\n- Fix messages index cache update under some conditions (e.g. proxy) (#4505)\n- Fix lack of translation of special folders in some configurations (#4520)\n- Fix XSS issue in plain text spellchecker (#4524)\n- Fix invalid page title for some folders (1489804)\n- Fix redundant alert message on over-size uploads (#4528)\n- Fix next message display after removing a message (#4521)\n- Fix missing Mail-Followup-To header in sent mail (#4534)\n- Fix error when spell-checking an empty text (#4536)\n- Avoid popupmenus being closed when scrollbar is clicked (#4537)\n- Add proxy_whitelist configuration option (#4496)\n- Fix identities_level=4 handling in new_user_dialog plugin (#4540)\n- Fix various db_prefix issues (#4539)\n- Fix too small length of users.preferences column data type on MySQL\n- Fix redundant warning when switching from html to text in empty editor (#4530)\n- Fix invalid host validation on login (#4541)\n- Fix IMAP connection test in installer so it is aware of imap_auth_type (#4502)\n\n## Release 1.0.0\n\n- Added toolbar button to move message in message view\n- Fix style of disabled protocol handler link on IE (#4460)\n- Fix message import dialog when no file is selected (#4488)\n- Fix opening compose screen in new window after saving as draft (#4479)\n- Fix directories check in Installer on Windows (#4462)\n- Fix issue when default_addressbook option is set to integer value (#4379)\n- Fix Opera > 15 detection (#4455)\n- Fix security issue in DomainFactory driver of Password plugin\n- Fix invalid X-Draft-Info on forwarded message draft (#4464)\n- Fix regression in handling of 'attachments' result in message_compose hook (#4474)\n- Fix issue where msgexport.sh printed the message to STDOUT instead of a file (#4476)\n- Fix fatal error in database_attachments plugin under some conditions (#4495)\n\n## Release 1.0-rc\n\n- Small CSS fix with message notice boxes in Larry skin (#4429)\n- Include groups in contacts search on mail compose (#4186)\n- Add mime-type mapping for .7z files (#4436)\n- Invoke update scripts with php to circumvent execution restrictions (#4330)\n- Fix drag & drop message/contact moving on touch device (#4395)\n- Fix canned responses in HTML mode (#4446)\n- Check/create default folders on every login not only the first (#4391)\n- Update to jQuery-1.11.0 and jQuery-UI-1.9.2\n- Support SMTP socket context options via new config option 'smtp_conn_options'\n- Fix compatibility with PHP 5.2 in html.php file (#4438)\n- Remove expand/collapse with plus/minus keys (on numeric keypad) (#4437)\n- Fix issue where filesystem path was added to all-attachments (zip) file (#4433)\n- Fix case-sensitivity of email addresses handling on compose (#1899)\n- Don't alter Message-ID of a draft when sending (#4381)\n- Fix issue where deprecated syntax for HTML lists was not handled properly (#3975)\n- Display different icons when Trash folder is empty or full (#2108)\n- Remember last position of more headers switch (#3660)\n- Fix so message flags modified by another client are applied on the list on refresh (#1639)\n- Fix broken text/* attachments when forwarding/editing a message (#4393)\n- Improved minified files handling, added css minification (#3041)\n- Fix handling of X-Forwarded-For header with multiple addresses (#4424)\n- Fix border issue on folders list in classic skin (#4419)\n- Implemented menu actions to copy/move messages, added folder-selector widget (#863)\n- Fix security rules in .htaccess preventing access to base URL without the ending slash (#4422)\n- Fix regression where only first new folder was placed in correct place on the list (#4418)\n- Fix issue where children of selected and collapsed thread were skipped on various actions (#4410)\n- Fix issue where groups were not deleted when \"Replace entire addressbook\" option on contacts import was used (#4388)\n- Fix unreliable mimetype tests in Installer (#4408)\n- Fix performance of listing writeable folders (#4406)\n\n## Release 1.0-beta\n\n- Fix handling of invalid closing tags in HTML messages (#4403)\n- Set real content-type for file downloads (#4400)\n- Update TinyMCE to version 3.5.10 (#4401)\n- Fix keyboard navigation in list widgets (#4367)\n- Allow plugins to grab the reference of opened windows (#4383)\n- Larry skin: Improved status message display for better visibility (#4115)\n- Fix Internet Explorer 11 detection (#4397)\n- Fix date column width to fit the widest possible date format (#4354)\n- Move certain user preference options to a collapsed \"advanced\" block (#4015)\n- Add file type icons for PowerPoint and Open Office presentations (#4269)\n- Fix operations on folders with trailing spaces in name (#4387)\n- Improve identity selection based on From: header (#4360)\n- Fix issue where mails with inline images of the same name contained only the first image multiple times (#4378)\n- Use left/right arrow keys to collapse/expand thread and spacebar to select a row, change Ctrl key behavior (#4367)\n- Fix an issue where using arrow keys to go up a list can result in selected message being under headers (#4375)\n- Fix an issue where Home/End keys don't focus list row properly, don't scrollTo properly (#4370)\n- Add an option to disable smart Reply-List behaviour - reply_all_mode (#3953)\n- Fix an issue where pressing minus key on contacts list was hiding list records (#4368)\n- Fix an issue where shift + arrow-up key wasn't selecting all messages in collapsed thread (#4371)\n- Added icon for priority column in messages list header (#4275)\n- New feature \"Canned Responses\" to save and recall boilerplate text snippets\n- Fix HTML part detection when encapsulated inside multipart/signed (#4357)\n- Add spellchecker backend for the After the Deadline service\n- Replace markdown-style [1] link indexes in plain text email bodies\n- Improved mailto: link arguments handling (#4351)\n- Use DOMDocument LIBXML_PARSEHUGE and LIBXML_COMPACT options if possible (#4316)\n- Support HTTP_HOST, SERVER_NAME and SERVER_ADDR values in include_host_config feature\n- Make default font size for HTML messages configurable (request #118)\n- Fix XSS issue in addressbook group name field [CVE-2013-5646] (#4337)\n- After message is sent refresh messages list of replied message folder (#4282)\n- Add option force specified domain in user login - username_domain_forced (#4290)\n- Add option to import Vcards with group assignments\n- Save groups membership in Vcard export (#3801)\n- Workaround broken PHP function timezone_name_from_abbr (#4289)\n- Make cached message size limit configurable - messages_cache_threshold (#4326)\n- Log also failed logins to userlogins log\n- Add temp_dir_ttl configuration option (#4318)\n- Allow setting INBOX as Sent folder (#4264)\n- Fix replacement variables in user-specific base_dn in some LDAP requests (#4299)\n- Fix image scaling issues when image has only one dimension smaller than the limit (#4296)\n- Fix issue where uploaded photo was lost when contact form did not validate (#4296)\n- Move identity selection based on non-standard headers into (new) identity_select plugin (#3835)\n- Fix downloading binary files with (wrong) text/* content-type (#4292)\n- Respect HTTP_X_FORWARDED_FOR and HTTP_X_REAL_IP variables for session IP check\n- Simplified configuration by merging it into one file + defaults (#3156)\n- Make message list header stay on top when scrolling (#353)\n- Add support for 'enchant' spellcheck engine\n- Check filetype detection in installer and update script (#4252)\n- Fix folder names truncation in Classic skin (#4265)\n- Make possible to disable some (broken) IMAP extensions with imap_disable_caps option (#4245)\n- Contacts drag-n-drop default action is to move contacts (#3962)\n- Added possibility to choose to move or copy contacts from drag-n-drop menu (#3962)\n- Fix Close link and remove About link on error pages (#4201)\n- Improved/unified attachment preview screen, added print button\n- Fix lack of space between searchfilter and quicksearchbar in Larry skin (#4233)\n- Cache LDAP's user_specific search and use vlv for better performance (#4247)\n- LDAP: auto-detect and use VLV indices for all search operations\n- LDAP: additional group configuration options for  address books\n- LDAP: separated address book implementation from a generic LDAP wrapper class\n- Allow address books to browse a multi-level group hierarchy in the contacts list\n- Fix session issues when local and database time differs (#2401)\n- Fix thread cache synchronization/validation (#4150)\n- Added feature to import messages to the currently selected folder\n- Add option show_real_foldernames to disable localization of special folders\n- Fix database cache expunge issues (#4229)\n- Fix date format issues on MS SQL Server (#4078)\n- Add imap_cache_ttl option to configure TTL of imap_cache\n- Make LDAP cache engine configurable via ldap_cache and ldap_cache_ttl options\n- Fix \"duplicate entry\" errors on inserts to imap cache tables (#4228)\n- Improved handling of Reply-To/Bcc addresses of identity in compose form (#4142)\n- Added user preference to open all popups as standard windows\n- Implemented shared cache (rcube_cache_shared)\n- Change Reply-All button label/title when mailing list is detected (#4092)\n- Fix SMTP connection using IPv6 address in smtp_server option (#4147)\n- Added attachment_reminder plugin\n- Make PHP code eval() free, use create_function()\n- Add option to display email address together with a name in mail preview (#3952)\n- Support CSV import from Atmail (#4161)\n- Add db_prefix configuration option in place of db_table_*/db_sequence_* options\n- Make possible to use db_prefix for schema initialization in Installer (#4175)\n- Fix updatedb.sh script so it recognizes also table prefix for external DDL files\n- Fix parsing invalid date string (#4155)\n- Add \"with attachment\" option to messages list filter (#1795)\n- Call resize handler in intervals to prevent lags and double onresize calls in Chrome (#4137)\n- Add rel=\"noreferrer\" for links in displayed messages (#4976)\n- Add ability to toggle between HTML and text while viewing a message (#3005)\n- Remove \"HTML message\" from attachments list while viewing a message in text mode (#3005)\n- Support IMAP MOVE extension [RFC 6851]\n- Add attachment menu with Open and Download options (#4116)\n- Display user-friendly message on IMAP \"over quota\" errors (#914)\n- Extended archive plugin with user-configurable options to store messages into subfolders\n- Fix export of selected contacts from search result (#4070)\n- Feature to export only selected contacts from addressbook (by Phil Weir)\n\n## Release 0.9.5\n\n- Fix failing vCard import when email address field contains spaces (#4363)\n- Fix default spell-check configuration after Google suspended their spell service\n- Fix vulnerability in handling _session argument of utils/save-prefs [CVE-2013-6172] (#4362)\n- Fix iframe onload for upload errors handling (#4361)\n- Fix address matching in Return-Path header on identity selection (#4358)\n- Fix text wrapping issue with long unwrappable lines (#4356)\n- Fixed issues where HTML comments inside style tag would hang Internet Explorer\n- Hide Delivery Status Notification option when smtp_server is unset (#4339)\n- Display full attachment name using title attribute when name is too long to display (#4328)\n- Fix attachment icon issue when rare font/language is used (#4334)\n- Fix expanded thread root message styling after refreshing messages list (#4335)\n- Fix issue where From address was removed from Cc and Bcc fields when editing a draft (#4327)\n- Fix error_reporting directive check (#4331)\n- Fix de_DE localization of \"About\" label in Help plugin (#4333)\n\n## Release 0.9.4\n\n- Make identities matching case insensitive (#1881)\n- Fix issue where too big message data was stored in cache causing sql errors (#4325)\n- Fix iframe scrollbars on webkit desktop browsers (#4319)\n- Fix issue where legacy config was overridden by default config (#4305)\n- Fix newmail_notifier issue where favicon wasn't changed back to default (#4324)\n- Fix setting of Junk and NonJunk flags by markasjunk plugin (#4303)\n- Fix lack of Reply-To address in header of forwarded message body (#4314)\n- Fix bugs when invoking contact creation form when read-only addressbook is selected (#4313)\n- Fix identity selection on reply (#4308)\n- Fix so additional headers are added to all messages sent (#4302)\n- Fix display issue after moving folder in Folder Manager (#4310)\n- Fix handling of non-default date formats (#4311)\n- Fix unquoted path in PREG expression on Windows (#4307)\n- Fix wrong close tag in /template/mail.html (#4312)\n\n## Release 0.9.3\n\n- Fix setting refresh_interval to \"Never\" in Preferences (#4304)\n- Fixed iframe scrolling on touch devices\n- Optimized message list for touch devices\n- Fix purge action in folder manager (#4300)\n- Fix base URL resolving on attribute values with no quotes (#4297)\n- Fix wrong handling of links with '|' character (#4298)\n- Fix colorspace issue on image conversion using ImageMagick (#4294)\n- Fix XSS vulnerability when editing a message \"as new\" or draft [CVE-2013-5645] (#4283)\n- Fix XSS vulnerability when saving HTML signatures [CVE-2013-5645] (#4283)\n- Fix rewrite rule in .htaccess (#4278)\n- Fix detecting Turkish language in ISO-8859-9 encoding (#4284)\n- Fix identity-selection using Return-Path headers (#4279)\n- Fix parsing of links with ... in URL (#4251)\n- Fix compose priority selector when opening in new window (#4286)\n- Fix bug where signature wasn't changed on identity selection when editing a draft (#4272)\n- Fix IMAP SETMETADATA parameters quoting (#4274)\n- Fix \"could not load message\" error on valid empty message body (#4271)\n- Fix handling of message/rfc822 attachments on message forward and edit (#4262)\n- Fix parsing of square bracket characters in IMAP response strings (#4267)\n- Don't clear References and in-Reply-To when a message is \"edited as new\" (#4263)\n- Fix messages list sorting with THREAD=REFS\n- Remove deprecated (in PHP 5.5) PREG /e modifier usage (#4239)\n- Fix empty messages list when register_globals is enabled (#4232)\n- Fix so valid and set date.timezone is not required by installer checks (#4242)\n- Canonize boolean ini_get() results (#4249)\n- Fix so install do not fail when one of DB driver checks fails but other drivers exist (#4240)\n- Fix so exported vCard specifies encoding in v3-compatible format (#4244)\n\n## Release 0.9.2\n\n- Fix image thumbnails display in print mode (#4220)\n- Fix height of message headers block (#4200)\n- Fix timeout issue on drag&drop uploads (#4238)\n- Fix default sorting of threaded list when THREAD=REFS isn't supported\n- Fix list mode switch to 'List' after saving list settings in Larry skin (#4236)\n- Fix error when there's no writeable addressbook source (#4235)\n- Fix zipdownload plugin issue with filenames charset (#4231)\n- Fix so non-inline images aren't skipped on forward (#4230)\n- Fix \"null\" instead of empty string on messages list in IE10 (#4227)\n- Fix legacy options handling\n- Fix so bounces addresses in Sender headers are skipped on Reply-All (#4140)\n- Fix bug where serialized strings were truncated in PDO::quote() (#4226)\n- Fix displaying messages with invalid self-closing HTML tags (#4223)\n- Fix PHP warning when responding to a message with many Return-Path headers (#4222)\n- Fix unintentional compose window resize (#4206)\n- Fix performance regression in text wrapping function (#4219)\n- Fix connection to postgres db using unix socket (#4218)\n- Fix handling of comma when adding contact from contacts widget (#4199)\n- Fix bug where a message was opened in both preview pane and new window on double-click (#4212)\n- Fix fatal error when xdebug.max_nesting_level was exceeded in rcube_washtml (#4202)\n- Fix PHP warning in html_table::set_row_attribs() in PHP 5.4 (#4194)\n- Fix invalid option selected in default_font selector when font is unset (#4204)\n- Fix displaying contact with ID divisible by 100 in sql addressbook (#4211)\n- Fix browser warnings on PDF plugin detection (#4209)\n- Fix fatal error when parsing UUencoded messages (#4210)\n\n## Release 0.9.1\n\n- Better German labels for from/to to avoid conflicts with 'sender' (#4188)\n- Fix problem where security warning was displayed for valid images with image/jpg type (#4196)\n- Fix handling of invalid email addresses in headers (#4193)\n- Fix IMAP connection issue with default_socket_timeout < 0 and imap_timeout < 0 (#4191)\n- Fix various PHP code bugs found using static analysis (#4190)\n- Fix backslash character handling on vCard import (#4189)\n- Fix csv import from Thunderbird with French localization (#4170)\n- Fix messages list focus issue in Opera and Webkit (#4169)\n- Fix Reply-To header handling in Reply-All action (#4157)\n- Fix so Sender: address is added to Cc: field on reply to all (#4140)\n- Fix so addressbook_search_mode works also for group search (#4183)\n- Fix removal of a contact from a group in LDAP addressbook (#4185)\n- Include SQL query in the log on SQL error (#4172)\n- Fix handling untagged responses in IMAP FETCH - \"could not load message\" error (#4180)\n- Fix very small window size in Chrome (#4087)\n- Fix list page reset when viewing a message in Larry skin (#4182)\n- Fix min_refresh_interval handling on preferences save (#4179)\n- Fix PDF support detection for Firefox PDF.js (#4113)\n- Fix possible collision in generated thumbnail cache key (#4177)\n- Fix exit code on bootstrap errors in CLI mode (#4160)\n- Fix error handling in CLI mode, use STDERR and non-empty exit code (#5161)\n- Fix error when using check_referer=true\n- Fix incorrect handling of some specific links (#4171)\n- Fix incorrect handling of leading spaces in text wrapping\n- Fix unintentional messages list jumps on click in Internet Explorer (#4167)\n- Fix list of required configuration options (#4166)\n- Fix DB error when creating a new contact and a group is selected (#4164)\n- Fix handling of deprecated boolean value of reply_mode option (#4165)\n\n## Release 0.9.0\n\n- Fix display of HTML entities in protected folder name (#4159)\n- Set minimal permissions to temp files (#4131)\n- Improve content check for embedded images without filename (#4151)\n- Fix handling of invalid characters in message headers and output (#4153)\n- Fix selecting collapsed rows on select-all (#4156)\n- Avoid race-conditions with concurrent attachment uploads (#3739)\n- Fix possible header duplicates when using additional headers (#4154)\n- Fix session issues with use_https=true (#4125)\n- Fix blockquote width in sent mail (#4152)\n- Fix keyboard events on list widgets in Internet Explorer (#4148)\n\n## Release 0.9-rc2\n\n- Fix security issue in save-pref command\n- Remove sig_above configuration option, use reply_mode only (#4135)\n- Refresh current folder in opener window after draft save or message sent (#4132)\n- Fix saving draft just after entering compose window (#4141)\n- Fix javascript error in IE9 when loading form with placeholders into an iframe (#4138)\n- Fix handling of some conditional comment tags in HTML message (#4136)\n- Fix so forward as attachment works if additional attachment is added by message_compose hook (#4134)\n- Better handling of session errors in ajax requests (#4105)\n- Fix HTML part detection for some specific message structures (#4130)\n- Don't show fake address - phishing prevention (#4120)\n- Fix forward as attachment bug with editormode != 1 (#4129)\n- Fix LIMIT/OFFSET queries handling on MS SQL Server (#4123)\n- Fix so task name can really contain all from a-z0-9_- characters (#4095)\n- Fix javascript errors when working in a page opened with target=\"_blank\"\n- Mention SQLite database format change in UPGRADING file (#4122)\n- Increase maxlength to 254 chars for email input fields in addressbook (#4126)\n- Fix thumbnail size when GD extension is used for image resize (#4124)\n- Display notice that message is encrypted also for application/pkcs7-mime messages (#3815)\n\n## Release 0.9-rc\n\n- Fix plain text spellchecker incorrect highlighting in non-ASCII text (#4114)\n- Add workaround for invalid message charset detection by IMAP servers (#4112)\n- Fix NUL characters in content-type of ms-tnef attachment (#4108)\n- Fix regression in handling LDAP contact identifiers (#4104)\n- Updated translations from Transifex\n- Fix buggy error template in a frame (#4092)\n- Add addressbook widget on compose page in classic skin\n- Add search box to compose address book widget (#3710)\n- Fix login in case when default_host is an array with one element (#4085)\n- Use LDAP fallback hosts on connect + bind instead of ldap_connect() only.\n- Add config option for LDAP bind timeout (sets LDAP_OPT_NETWORK_TIMEOUT option)\n- Submit Addressbook advanced search form with Enter key (#3843)\n- Also block remote images in HTML part view (#4013)\n- Improved database schema upgrade procedure, added updatedb.sh script\n- Force autocommit mode in mysql database driver (#4068)\n\n## Release 0.9-beta\n\n- Fix searching by date in address book (#4058)\n- Improve charset detection by prioritizing charset according to user language (#2032)\n- Fix handling of escaped separator in vCard file (#4064)\n- Add option to use envelope From address for MDN responses (#4052)\n- Add possibility to search in message body only (#3977)\n- Support \"multipart/relative\" as an alias for \"multipart/related\" type (#4057)\n- Display PGP/MIME signature attachments as \"Digital Signature\" (#3845)\n- Workaround UW-IMAP bug where hierarchy separator is added to the shared folder name (#4051)\n- Fix version comparisons with -stable suffix (#4050)\n- Add unsupported alternative parts to attachments list (#4046)\n- Add Compose button on message view page (#3959)\n- Display 'Sender' header in message preview\n- Plugin API: Added message_before_send hook\n- Fix contact copy/add-to-group operations on search result (#4042)\n- Use matching identity in MDN response (#4043)\n- Fix handling of signatures on draft edit (#3996)\n- Fix so compacting of non-empty folder is possible also when messages list is empty (#4039)\n- Allow forwarding of multiple emails (#2941)\n- Fix big memory consumption of DB layer (#4037)\n- Fix broken message/part bodies when FETCH response contains more untagged lines (#4020)\n- Fix empty email on identities list after identity update (#4018)\n- Add new identities_level: (4) one identity with possibility to edit only signature\n- Use Delivered-To and Envelope-To headers for identity selection (#4024, #3835)\n- Fix XSS vulnerability using Flash files (#4014)\n- Always save drafts with format=flowed in order to keep original line wraps (#3997)\n- Select default_addressbook on the list in Address Book (#3624)\n- Fix so mobile phone has TYPE=CELL in exported vCard (#4004)\n- Support contacts import from CSV file (#2605)\n- Improved keep-alive action. Now the interval is based on session_lifetime (#3799)\n- Added cross-task 'refresh' request for system state updates (#3799)\n- Renamed config options: keep_alive to refresh_interval, min_keep_alive to min_refresh_interval\n- Fix handling of text/enriched content on message reply/forward/edit\n- Option to display attached images as thumbnails below message body\n- Upgraded to jQuery 1.8.3 and jQuery UI 1.9.1\n- Add config option to automatically generate LDAP attributes for new entries\n- Add user settings to open message view and compose form in new windows (#1886)\n- Better client-side timezone detection using the jsTimezoneDetect library (#3947)\n- Add option to disable saving sent mail in Sent folder - no_save_sent_messages (#3923)\n- Fix handling dont_override with message_sort_col and message_sort_order settings (#3970)\n- Fix handling of URLs with asterisk characters (#3969)\n- Remove automatic to-lowercase conversion of usernames (#3941)\n- Plugin API: Add 'email_list' argument for identities data in user_create hook\n- Integrated zipdownload plugin to download all attachments (#617)\n- Fix HTML special characters handling in message list/header display (#3812)\n- List related text/html part as attachment in plain text mode (#3918)\n- Use IMAP BINARY (RFC3516) extension to fetch message/part bodies\n- Fix folder creation under public namespace root (#3910)\n- Fix so \"Edit as new\" on draft creates a new message (#3924)\n- Fix invalid error message on deleting mail from read only folder (#3929)\n- Replace data URIs of images (pasted in HTML editor) with inline attachments (#3795)\n- Remove (too big) min-width on mail screen\n- Added template object 'frame'\n- Add option to enable HTML editor on forwarding (#3807)\n- Add option to not include original message on reply, rename option top_posting to reply_mode (#1615)\n- Added session_path config option and unified cookies settings in javascript\n- Added \"Undeleted\" option to messages list filter\n- Rewritten test scripts for PHPUnit\n- Add new DB abstraction layer based on PHP PDO, supporting SQLite3 (#3668)\n- Removed PEAR::MDB2 package\n- Removed users.alias column, added option ('user_aliases')\n  to use email address from identities as username (#3851)\n- Removed redundant cache.cache_id column (#3817)\n- Fix order of attachments in sent mail (#3740)\n- Fix Shift + delete button does not permanently delete messages (#3598)\n- Add Content-Length for attachments where possible (#1880)\n- Fix attachment sizes in message print page and attachment preview page (#3805)\n- Add mail attachments using drag & drop on HTML5 enabled browsers\n- Add workaround for invalid BODYSTRUCTURE response - parse message with Mail_mimeDecode package (#1966)\n- Display Tiff as Jpeg in browsers without Tiff support (#3757)\n- Don't display Pdf/Tiff/Flash attachments inline without browser support (#3757, #3394)\n- Add is_escaped attribute for html_select and html_textarea (#3782)\n- Fix issue where draft auto-save wasn't executed after some inactivity time\n- Add vCard import from multiple files at once (#3458)\n- Roundcube Framework:\n    Add possibility to replace IMAP driver with custom class\n    Add IMAP auto-connection feature, improving performance with caching enabled\n    Replace imap_init hook with storage_init (with additional 'driver' argument)\n    Improved performance by caching IMAP server's capabilities in session\n    Unified global functions naming (rcube_ prefix)\n    Better classes separation\n    Framework files moved to lib/Roundcube\n\n## Release 0.8.5\n\n- Fix #countcontrols issue in IE<=8 when text is very long (#4060)\n- Fix unwanted horizontal scrollbar in message preview header (#4044)\n- Add workaround for IE<=8 bug where Content-Disposition:inline was ignored (#4028)\n- Fix XSS vulnerability in vbscript: and data:text links handling [CVE-2012-6121] (#4033)\n- Fix absolute positioning in HTML messages (#4007)\n- Fix cache (in)validation after setting \\Deleted flag\n- Fix keyboard events on messages list in opera browser (#4011)\n- Fix selection of collapsed thread rows (#3978)\n- Fix wrapping of quoted text with format=flowed (#3561)\n\n## Release 0.8.4\n\n- Fix regression where unintentional page reload was done after request abort (#3999)\n- Fix XSS vulnerability in handling of text/enriched messages (#4000)\n- Fix handling of 'media' attribute on linked css (#3989)\n- Fix excessive LFs at the end of composed message with top_posting=true (#3995)\n- Fix bug where leading blanks were stripped from quoted lines (#3994)\n\n## Release 0.8.3\n\n- Fix AREA links handling (#3992)\n- Fix possible HTTP DoS on error in keep-alive requests (#3983)\n- Fix compatibility with MDB2 2.5.0b4 (#3982)\n- Fix a bug where saving a message in INBOX wasn't possible\n- Fix HTML part detection in messages with attachments (#3976)\n- Fix bug where wrong words were highlighted on spell-before-send check\n- Fix scrolling quirk in email preview frame using Opera 12 (#3973)\n- Fix displaying of multipart/alternative messages with empty parts (#3961)\n- Fix threaded list sorting on PHP < 5.2.9 (#3960)\n- Fix Warning: htmlspecialchars(): charset `RCMAIL_CHARSET` not supported warning in Installer (#3958)\n\n## Release 0.8.2\n\n- Fix XSS vulnerability from HTTP User-Agent header (#3954)\n- Force fonts in compose fields to be all the same (#3926)\n- Fix handling vCard entries with TEL;TYPE=CELL (#3949)\n- Fix error where session wasn't updated after folder rename/delete (#3928)\n- Fix PLAIN authentication for some IMAP servers (#3916)\n- Fix encoding vCard file when contains PHOTO;ENCODING=b (#3922)\n- Fix focus issue in IE when selecting message row (#3881)\n- Add full headers view in message preview window (#3823)\n- Fix message display page issues - unified with message preview (#3856, #3895)\n- Fix displaying all headers when they contain malformed characters (#3911)\n- Fix decoding of HTML messages with UTF-16 charset specified (#3902)\n- Fix quota capability detection so it can be overwritten by a plugin (#3903)\n- Fix identity selection on reply (#3516)\n- Fix Larry's messages list filter in IE (#3890)\n- Fix more IE issues by disabling Compat. mode with X-UA-Compatible meta tag (#3886)\n- Fix setting locales under Solaris - use additional .UTF-8 suffix (#3887)\n- Fix email address validation for addresses with IP address in domain part\n- Fix Larry skin issues in IE7 compat. mode (#3879)\n- Fix so subscribed non-existing/non-accessible shared folder can be unsubscribed\n\n## Release 0.8.1\n\n- Fix bug where domain name was converted to lower-case even with login_lc=false (#3859)\n- Fix lower-casing email address on replies (#3863)\n- Fix line separator in exported messages (#3866)\n- Fix XSS issue where plain signatures wasn't secured in HTML mode [CVE-2012-4668] (#3875)\n- Fix XSS issue where href=\"javascript:\" wasn't secured [CVE-2012-3508] (#3875)\n- Fix impossible to create message with empty plain text part (#3873)\n- Fix stripped apostrophes when replying in plain text to HTML message (#3869)\n- Fix inactive Save search option after advanced search (#3870)\n- Fix Remove from group option is active for contact search result (#3871)\n- Disable autocapitalization in login form on iPad/iPhone (#3872)\n- Fix focus on the list when list row is clicked (#3865)\n- Added separate From and To columns apart from smart From/To column (#2970)\n- Fix fallback to Larry skin when configured skin isn't available (#3857)\n- Fix (workaround) delete operations with some versions of memcache (#3858)\n- Fix (disable) request validation for spell and spell_html actions\n\n## Release 0.8.0\n\n- Don't show product version on login screen (can be enabled by config)\n- Renamed old default skin to 'classic'. Larry is the new default skin.\n- Support connections to memcached socket file (#3848)\n- Enable TinyMCE inlinepopups plugin\n- Update to TinyMCE 3.5.6\n- Correctly escape localized labels in javascript variable (#3842)\n- Update Net_SMTP/Auth_SASL packages to fix Digest-MD5/Cram-MD5 authentication (#3846)\n- Don't add attachments content into reply/forward/draft message body (#3837)\n- Fix 'no connection' errors on page unloads (#3832)\n- Plugin API: Add 'unauthenticated' hook (#3545)\n- Show explicit error message when provided hostname is invalid (#3834)\n- Fix wrong compose screen elements focus in IE9 (#3826)\n- Fix fatal error when date.timezone isn't set (#3831)\n- Update to TinyMCE 3.5.4.1\n- Better icons with distinct shapes for priority columns (#3706)\n- Show dedicated icon for multipart/report messages (#3813)\n- Properly hide text of icon links/buttons (#3820)\n- Fix handling of unitless CSS size values in HTML message (#3821)\n- Fix removing contact photo using LDAP addressbook (#3737)\n- Fix storing X-ANNIVERSARY date in vCard format (#3816)\n- Update to Mail_Mime-1.8.5 (#3810)\n- Fix XSS vulnerability in message subject handling using Larry skin [CVE-2012-3507] (#3809)\n- Fix handling of links with various URI schemes e.g. \"skype:\" (#3521)\n- Fix handling of links inside PRE elements on html to text conversion\n- Fix indexing of links on html to text conversion\n- Decode header value in rcube_mime::get() by default (#3803)\n- Fix errors with enabled PHP magic_quotes_sybase option (#3798)\n- Fix SQL query for contacts listing on MS SQL Server (#3797)\n- Fix window.resize handler on IE8 and Opera (#3758)\n- Don't let error message popups cover the login form (#3794)\n- Update to TinyMCE 3.5.2\n- Don't show errors when moving contacts into groups they are already in (#3788)\n- Make folders with unread messages in subfolders bold again (#2892)\n- Abbreviate long attachment file names with ellipsis (#3793)\n- Fix html2text conversion of strong|b|a|th|h tags when used in upper case\n- Add listcontrols template container in Larry skin (#3792)\n- Fix host autoselection when default_host is an array (#3790)\n- Move messages forwarding mode setting into Preferences\n- Fix HTML entities handling in HTML editor (#3780)\n- Fix listing shared folders on Courier IMAP (#3767)\n\n## Release 0.8-rc\n\n- Added new translations in Belarusian, Interlingua and Malayalam\n- Flipped compose options arrow (#3772)\n- Fix handling of large uuencode attachments (#3771)\n- Fix handling of \"usemap\" attribute (#3770)\n- Fix handling of some HTML tags e.g. IMG (#3769)\n- Use similar language as a fallback for plugin localization (#3726)\n- Fix issue where signature wasn't re-added on draft compose (#3659)\n- Update to TinyMCE 3.5 (#3762)\n- Fixed multi-threaded autocompletion when number of threads > number of sources\n- Allow to configure the number of values allowed for each LDAP attribute\n- Support for serialized LDAP address values (usually delimited with a $)\n- Less restrictive session auth checks, repeat keep-alive requests on failure (#3755)\n- Fix redirect to mail/compose on re-login (#3585)\n- Add IE8 hack for messages list issue (#3317)\n- Fix handling errors on draft auto-save\n- Fix importing vCard photo with ENCODING param specified (#3746)\n- Support multiple name/email pairs for Bcc and Reply-To identity settings (#3752)\n- Set flexible width to login form fields (#3735)\n- Fix re-draw bug on list columns change in IE8 (#3318)\n- Allow mass-removal of addresses from a group (#3259)\n- Fix removing all contacts on import to LDAP addressbook\n- Fix so \"Back\" from compose/show doesn't reset search request (#3594)\n- Add option to delete messages instead of moving to Trash when in Junk folder (#2805)\n- Fix invisible cursor when replying to a html message (#3100)\n- Reset IP stored in session when destroying session data (#3485)\n- Fix bug where memory_limit = -1 wasn't handled properly\n- Support LDAP RFC2256's country object class read/write (#3535)\n- Upgraded to jQuery 1.7.2\n- Image resize with GD extension (#3712)\n- Fix lack of warning when switching task in compose window (#3725)\n- Fix bug where it wasn't possible to enter ( or & characters in autocomplete fields\n- Request all needed fields from address book backends (#3721)\n- Unified (single) spellchecker button\n- Scroll long lists on drag&drop (#2249)\n- Copy all skins in installto script (#3705)\n\n## Release 0.8-beta\n\n- Upgraded to jQuery 1.7.1 (#3673) and jQuery UI 1.8.18\n- Add Russian to the spellchecker languages list (#3542)\n- Remember custom skin selection after logout (#3688)\n- Make sure About tab is always the last tab (#3609)\n- Fix issue with folder creation under INBOX. namespace (#3683)\n- Added mailto: protocol handler registration link in User Preferences (#2729)\n- Handle identity details box with an iframe (#3066)\n- Fix issue where some text from original message was missing on reply (#3675)\n- Fix autoselect_host() for login (#3639)\n- Changed license to GNU GPLv3+ with exceptions for skins & plugins\n- Added address book widget on compose screen\n- Use proper timezones from PHP's internal timezonedb (#1973)\n- Add separate pagesize setting for mail messages and contacts (#3617)\n- Deprecate $DB, $USER, $IMAP global variables, Use $RCMAIL instead\n- Add option to set default font for HTML message (#894)\n- Fix issues with big memory allocation of IMAP results\n- Prevent from memory_limit exceeding when trying to parse big messages bodies (#3164)\n- Add possibility to add SASL mechanisms for SMTP in smtp_connect hook (#3399)\n- Mark (with different color) folders with recent messages (#2479)\n- Added About tab in Settings\n- TinyMCE updated to 3.4.6\n\n## Release 0.7.2\n\n- Fix encoding of attachment with comma in name (#3717)\n- Fix handling of % character in IMAP protocol (#3711)\n- Fix duplicate names handling in addressbook searches (#3704)\n- Fix displaying of HTML messages from Disqus (#3702)\n- Disable E_STRICT warnings on PHP 5.4\n- Prevent from folder selection on virtual folder collapsing (#3681)\n- Fix automatic unsubscribe of non-existent folders\n- Fix double-quotes handling in recipient names\n- User configurable setting how to display contact names in list\n- Make contacts list sorting configurable for the admin/user\n- Fix parse errors in DDL files for MS SQL Server\n- Revert SORT=DISPLAY support, removed by mistake (#3664)\n- Add lost translation label in de_DE (#3654)\n- Fix drafts update issues when edited from preview pane (#3653)\n- Fix wrong variable name in rcube_ldap.php (#3643)\n- Make mime type detection based on filename extension to be case-insensitive\n- Fix failure on MySQL database upgrade from 0.7 - text column can't have default value (#3642)\n\n\n## Release 0.7.1\n\n- Fix bug in handling of base href and inline content (#3634)\n- Fix SQL Error when saving a contact with many email addresses (#3630)\n- Fix strict email address searching if contact has more than one address\n- Remove duplicated 'organization' label (#3631)\n- Fix so editor selector is hidden when 'htmleditor' is listed in 'dont_override'\n- Fix wrong (long) label usage (#3627)\n- Fix handling of INBOX's subfolders in special folders config (#3623)\n- Add ifModule statement for setting Options -Indexes in .htaccess file (#3620)\n- Fix crashes with eAccelerator (#3608)\n- Fix searching on IMAP servers without CHARSET specifier support (#3619)\n- Fix expanding folders during drag&drop (#3611)\n- Fix wrong postgres sequence name in upgrade from 0.6\n- Fix broken CREATE INDEX queries in SQLite DDL files (#3607)\n\n## Release 0.7\n\n- Make Roundcube render the Email Standards Project Acid Test correctly\n- Replace prompt() with jQuery UI dialog (#1603)\n- Fix navigation in messages search results\n- Improved handling of some malformed values encoded with quoted-printable (#3590)\n- Add possibility to do LDAP bind before searching for bind DN\n- Fix handling of empty <U> tags in HTML messages (#3584)\n- Add content filter for embedded attachments to protect from XSS on IE [CVE-2012-1253] (#3372)\n- Use strpos() instead of strstr() when possible (#3581)\n- Fix handling HTML entities when converting HTML to text (#3582)\n- Fix fit_string_to_size() renders browser and ui unresponsive (#3577)\n- Fix handling of invalid characters in request (#3536)\n- Fix merging some configuration options in update.sh script (#2181)\n- Fix so TEXT key will remove all HEADER keys in IMAP SEARCH (#3578)\n- Fix handling contact photo url with https:// prefix (#3575)\n- Fix possible infinite redirect on attachment preview (#3572)\n- Improved clickjacking protection for browsers which don't support X-Frame-Options headers\n- Fixed bug where similar folder names were highlighted wrong (#3345)\n- Fixed bug in handling link with '!' character in it (#3569)\n- Fixed bug where session ID's length was limited to 40 characters (#3570)\n- TinyMCE security issue: removed moxieplayer (embedding flv and mp4 is not supported anymore)\n\n## Release 0.7-beta\n\n- Fix handling of HTML form elements in messages (#1604)\n- Fix regression in setting recipient to self when replying to a Sent message (#3101)\n- Fix listing of folders in hidden namespaces (#2895)\n- Don't consider \\Noselect flag when building folders tree (#3448)\n- Fix sorting autocomplete results (#3504)\n- Add option to set session name (#2630)\n- Add option to skip alternative email addresses in autocompletion\n- Fix inconsistent behaviour of Compose button in Drafts folder, add Edit button for drafts\n- Fix problem with parsing HTML message body with non-unicode characters (#3312)\n- Add option to define matching method for addressbook search (#2720, #3378)\n- Make email recipients separator configurable\n- Fix so folders with \\Noinferiors attribute aren't listed in parent selector\n- Fix handling of curly brackets in URLs (#3555)\n- Fix handling of dates (birthday/anniversary) in contact data (#3552)\n- Fix error on opening searched LDAP contact (#3550)\n- Fix redundant line break in flowed format (#3551)\n- Fix IDN address validation issue (#3544)\n- Fix JS error when dst_active checkbox doesn't exist (#3540)\n- Autocomplete LDAP records when adding contacts from mail (#3498)\n- Plugin API: added 'ready' hook (#3492)\n- Ignore DSN request when it isn't supported by SMTP server (#3300)\n- Make sure LDAP name fields aren't arrays (#3523)\n- Fixed imap test to non-default port when using ssl (#3532)\n- Force all files to be overwritten when updating (#3531)\n- Fix issue where it wasn't possible to change list view mode in folder manager for INBOX (#3522)\n- Fix namespace handling in special folders settings (#3527)\n- Disable time limit for CLI scripts (#3524)\n- Fix misleading display when changing editor type (#3519)\n- Add loading indicator on contact delete\n- Fix bug where after delete message rows can be added to the list of another folder (#3263)\n- Add notice on autocompletion that not all records were displayed\n- Add option 'searchonly' for LDAP address books\n- Add Priority filter to the messages list\n- Cache synchronization using QRESYNC/CONDSTORE\n- Trigger 'new_messages' hook for all checked folders (#3503)\n- Make date/time format user configurable; drop 'date_today' config option\n- Fix setting title for truncated subject in IE (#3141)\n- Fix displaying multipart/alternative messages with only one part (#3400)\n- Rewritten messages caching:\n  Indexes are stored in a separate table, so there's no need to store all messages in a folder\n  Added threads data caching\n  Flags are stored separately, so flag change doesn't cause DELETE+INSERT, just UPDATE\n- Improved FETCH response handling\n- Improvements in response tokenization method\n- Use 'From' and 'To' labels instead of 'Sender' and 'Recipient'\n- Fix username case-insensitivity issue in MySQL (#3462)\n- Addressbook Saved Searches\n- Added spellchecker exceptions dictionary (shared or per-user)\n- Added possibility to ignore words containing caps, numbers, symbols (spellcheck_ignore_* options)\n- Added 'priority' column on messages list (#2884)\n- Localize forwarded message header (#3487)\n\n## Release 0.6\n\n- Fix bug where the last identity is used on reply (#3516)\n- Fix locked folder rename option on servers supporting RFC2086 only (#3508)\n- Fix session race conditions when composing new messages\n- Fix encoding of LDAP contacts identifiers (#3501)\n- jQuery 1.6.4\n- Fix handling of binary attachments encoded with quoted-printable (#3494)\n- Fix text-overflow:ellipsis issues on messages list in FF7 and Webkit (#3490)\n- Fix handling of links with IP address\n- Fix compacting folder resets message list filter (#3499)\n\n## Release 0.6-rc\n\n- Send X-Frame-Options headers to protect from clickjacking (#3079)\n- Fallback to mail_domain in LDAP variable replacements; added 'host' to 'user_create' hook arguments (#3464)\n- Fixed wrong vCard type parameter mobile (#3496)\n- Fixed vCard WORKFAX issue (#3476)\n- Add vCard's Profile URL support (#3491)\n- jQuery 1.6.3\n- Fix imap_cache setting to values other than 'db' (#3489)\n- Fix handling of attachments inside message/rfc822 parts (#3466)\n- Make list of mimetypes that open in preview window configurable (#3175)\n- Added plugin hook 'message_part_get' for attachment downloads\n- Added unique connection identifier to IMAP debug messages\n- Fix image type check for contact photo uploads\n\n## Release 0.6-beta\n\n- Fixed selecting identity on reply/forward (#3434)\n- Add option to hide selected LDAP addressbook on the list\n- Add client-side checking of uploaded files size\n- Add newlines between organization, department, jobtitle (#3468)\n- Recalculate date when replying to a message and localize the cite header (#3212)\n- Fix handling of email addresses with quoted local part (#3401)\n- Fix EOL character in vCard exports (#3357)\n- Added optional \"multithreading\" autocomplete feature\n- Plugin API: Added 'config_get' hook\n- Fixed new_user_identity plugin to work with updated rcube_ldap class (#3443)\n- Plugin API: added folder_delete and folder_rename hooks\n- Added possibility to undo last contact delete operation\n- Fix sorting of contact groups after group create (#3258)\n- Add optional textual upload progress indicator (#2330)\n- Fix parsing URLs containing commas (#3425)\n- Added vertical splitter for books/groups list in addressbook (#3389)\n- Improved namespace roots handling in folder manager\n- Added searching in all addressbook sources\n- Added addressbook source selection in contacts import\n- Implement LDAPv3 Virtual List View (VLV) for paged results listing\n- Use 'address_template' config option when adding a new address block (#3406)\n- Added addressbook advanced search\n- Add popup with basic fields selection for addressbook search\n- Case-insensitive matching in autocompletion (#3398)\n- Added option to force spellchecking before sending a message (#1862)\n- Fix handling of \"<\" character in contact data, search fields and folder names (#3349)\n- Fix saving \"<\" character in identity name and organization fields (#3349)\n- Added option to specify to which address book add new contacts\n- Added plugin hook for keep-alive requests\n- Store user preferences in session when write-master is not available and session is stored in memcache, write them later\n- Improve performance of folder manager operations\n- Fix default_port option handling in Installer when config.inc.php file exists (#3390)\n- Removed option focus_on_new_message, added newmail_notifier plugin\n- Added general rcube_cache class with Memcache and APC support\n- Improved caching performance by skipping writes of unchanged data\n- Option enable_caching replaced by imap_cache and messages_cache options\n- Fix WORKFAX saving in address book (#3380)\n- Add forward-as-attachment feature\n- jQuery-1.6.2 (#5158, #3154)\n- Improve display name composition when saving contacts (#3153)\n- Fix problems with subfolders of INBOX folder on some IMAP servers (#3247)\n- Fix handling of folders that doesn't belong to any namespace (#3184)\n- Enable multiselection for attachments uploading in capable browsers (#2266)\n- Add possibility to change HTML editor configuration by skin\n- Fix a bug where selecting too many contacts would produce too large URI request (#3369)\n- Improve performance by including files with absolute path (#3337)\n- Move folder name truncation to client/skin (#1822)\n- Added plugin hook for request token creation\n- Replace LDAP vars in group queries (#3329)\n- Fix vcard folding with unicode characters (#3353)\n- Keep all submitted data if contact form validation fails (#3350)\n- Handle unicode strings in rcube_addressbook::normalize_string() (#3351)\n- Fix handling of debug_level=4 in ajax requests (#3327)\n- Enable TinyMCE's contextmenu (#3062)\n- Allow multiple concurrent compose sessions\n- New config option for custom logo\n- Allow skins to define/override texts with <roundcube:label />\n- Add simple ACL rights/namespace handling in folder manager\n- Force IE to send referers (#3306)\n- Better display of vcard import results (#1861)\n- Improved vcard import\n- Interactive update script with improved DB schema check\n- Fix problem with contactgroupmembers table creation on MySQL 4.x, add index on contact_id column\n- Add LDAP SASL bind and proxy authentication (#2810)\n- Replying to a sent message puts the old recipient as the new recipient (#3101)\n- Fulltext search over (almost) all data for contacts\n- Extend address book with rich contact information\n\n## Release 0.5.4\n\n- Fix XSS vulnerability in UI messages [CVE-2011-2937] (#3469)\n\n## Release 0.5.3\n\n- Fix identities \"reply-to\" and \"bcc\" fields have a bogus value when left empty (#3405)\n- Fix issue which cases IMAP disconnection when encrypt() method was used (#3374)\n- Fix some CSS issues in Settings for Internet Explorer\n- Fixed handling of folder with name \"0\" in folder selector\n- Fix bug where messages were deleted instead moved to trash folder after Shift key was used (#3376)\n- Fix relative URLs handling according to a <base> in HTML (#3368)\n- Fix handling of top-level domains with more than 5 chars or unicode chars (#3366)\n- Fix usage of non-standard HTTP error codes (#3297)\n- Fix PHP warning on mistaken in_array() usage (#3375)\n\n## Release 0.5.2\n\n- TinyMCE 3.4.2 now compatible with IE9\n- PEAR::Net_SMTP 1.5.2, fixed timeout issue (#3332)\n- Fix bug where template name without plugin prefix was used in render_page hook\n- Support 'abort' and 'result' response in 'preferences_save' hook, add error handling\n- Fix bug where some content would cause hang on html2text conversion (#3348)\n- Improve space-stuffing handling in format=flowed messages (#3346)\n- Fix bug where some dates would produce SQL error in MySQL (#3342)\n- Added workaround for some IMAP server with broken STATUS response (#3344)\n- Fix bug where default_charset was not used for text messages (#3328)\n- Stateless request tokens. No keep-alive necessary on login page (#3325)\n- Force names of unique constraints in PostgreSQL DDL\n- Add code for prevention from IMAP connection hangs when server closes socket unexpectedly\n- Remove redundant DELETE query (for old session deletion) on login\n- Get around unreliable rand() and mt_rand() in session ID generation (#2516)\n- Fix some emails are not shown using Cyrus IMAP (#3316)\n- Fix handling of mime-encoded words with non-integral number of octets in a word (#3301)\n- Fix parsing links with non-printable characters inside (#3305)\n- Fixed de_CH Localization bugs (#3279)\n- Add variable for 'Today' label in date_today option (#2394)\n- Fix dont_override setting does not override existing user preferences (#3205)\n- Use only one from IMAP authentication methods to prevent login delays (1487784)\n- Support strftime format in date_today option\n- Fix SQL query in rcube_user::query() so it uses index on MySQL again\n- Removed redundant </form> tags from contact add/edit pages\n- Fix CSS error in contact details screen on IE7 (#3281)\n\n## Release 0.5.1\n\n- Fix handling of attachments with invalid content type (#3275)\n- Add workaround for DBMail's bug http://www.dbmail.org/mantis/view.php?id=881 (#3274)\n- Use IMAP's ID extension (RFC2971) to print more info into debug log\n- Security: add optional referer check to prevent CSRF in GET requests\n- Fix email_dns_check setting not used for identities/contacts (#3251)\n- Fix ICANN example addresses doesn't validate (#3253)\n- Security: protect login form submission from CSRF [CVE-2011-1491]\n- Security: prevent from relaying malicious requests through modcss.inc [CVE-2011-1492]\n- Fix handling of non-image attachments in multipart/related messages (#3261)\n- Fix IDNA support when IDN/INTL modules are in use (#3253)\n- Fix handling of invalid HTML comments in messages (#3269)\n- Fix parsing FETCH response for very long headers (#3264)\n- Fix add/remove columns in message list when message_sort_order isn't set (#3262)\n- Check mime headers before attempt to parse them (#3256)\n- Quote header values in show_additional_headers plugin (#3255)\n- Fix settings UI on IE 6 (#3246)\n- Remove double borders in folder listing (#3236)\n- Separate full message headers UI element from headers table (#3238)\n- Add part MIME ID to message_part_* hooks (#3241)\n- Improve parsing of MS Outlook vCards (#3239)\n- Updated PEAR::Net_Socket to 1.0.10\n- Updated PEAR::Net_IDNA2 to 0.1.1\n- Fix handling of comments inside an email address spec. (#3210)\n- Show full mail subject as title when hovering a cut subject link (#3141)\n- Fix randomly disappearing folders list in IE (#3231)\n- Fix list column add/removal in IE (#3230)\n- Fix login redirect issues (#3221)\n- Require PHP 5.2.1 or greater\n- Fix %h/%z variables in username_domain option (#3228)\n- Workaround for setting charset in case of malformed bodystructure response (#3227)\n- Fix impossible to subscribe to protected folders (#3199)\n- Fix setting timezone in Preferences (#3232)\n\n## Release 0.5\n\n- Fix double-login/session issue (#3124)\n- Wrap HTML parts with <html><body> and add Doctype declaration (#3119)\n- Make rcube_autoload silently skip unknown classes (#3128)\n- Fix charset detection in vcards with encoded values (#1934)\n- Better CSS cursors for splitters (#2954)\n- Show the same message only once (#3186)\n- Fix namespaces handling (#3192)\n- Add handling of multifolder METADATA/ANNOTATION responses\n- Fix handling of INBOX when personal namespace prefix is non-empty (#3200)\n- Fix handling square brackets in links (#3209)\n- Add description of 'use_https' option in main.inc.php.dist file\n\n## Release 0.5-RC\n\n- Plugin API: Add 'pass' argument in 'authenticate' hook (#3147)\n- Fix attachments of type message/rfc822 are not listed on attachments list\n- Add 'login_lc' config option for case-insensitive authentication (#3131)\n- Fix window is blur'ed in IE when selecting a message (#3161)\n- Fix cursor position on compose form in Webkit browsers (#2796)\n- Fix setting charset of attachment filenames (#3136)\n- Allow setting autocomplete attribute for all inputs separately (#3158)\n- New Folder Manager UI\n- Fix invalid Request when creating a folder (#3165)\n- Add folder size and quota indicator in folder manager (#2112)\n- Add possibility to move a subfolder into root folder (#2890)\n- Fix copying all messages in a folder copies only messages from current page\n- Improve performance of moving or copying of all messages in a folder\n- Fix plaintext versions of HTML messages don't contain placeholders for emotions (#1657)\n- Improve performance of folder rename and delete actions\n- Better support for READ-ONLY and NOPERM responses handling (#3108)\n- Add confirmation message on purge/expunge command response\n- Fix handling of untagged responses for AUTHENTICATE command (#3171)\n- Add username and IP address to log message on unsuccessful login (#3176)\n- Improved Mail-Followup-To and Mail-Reply-To headers handling\n- Fix charset conversion for text attachments without charset specification (#3181)\n\n## Release 0.5-BETA\n\n- Make session data storage more robust against garbage session data (#3148)\n- Config option for autocomplete on login screen\n- Allow plugin templates to include local files (#3146)\n- List groups in address detail view and allow to subscribe/unsubscribe from there (#2862)\n- Messages caching: performance improvements, fixed syncing, fixes related with #2857\n- Add link to identities in compose window (#2843)\n- Add Internationalized Domain Name (IDNA) support (#729)\n- Add option to automatically send read notifications for known senders (#2199)\n- Add option to \"Return receipt\" will be always checked (#2571)\n- Fix HTML to plain text conversion doesn't handle citation blocks (#2992)\n- Use custom sorting when SORT is disabled by IMAP admin (#3020)\n- Allow setting some washtml options from plugin (#2727)\n- Add option do bind for an individual LDAP address book (#3048)\n- Change reply prefix to display email address only if sender name doesn't exist (#2709)\n- Plugin API: improved 'abort' flag handling, added 'result' item in some hooks (#2988)\n- Fix mailto optional params in plain text messages aren't handled (#3071)\n- Add Reply-to-List feature (#977)\n- Add Mail-Followup-To/Mail-Reply-To support (#1937)\n- Fix confirmation message isn't displayed after sending mail on Chrome (#2437)\n- Fix keyboard doesn't work with autocomplete list with Chrome (#3073)\n- Improve tabs to fixed width and add tabs in identities info (#3030)\n- Add unique index on users.username+users.mail_host\n- Make htmleditor option more consistent and add option to use HTML on reply to HTML message (#2164)\n- Use empty envelope sender address for message disposition notifications (RFC 2298.3)\n- Support SMTP Delivery Status Notifications - RFC 3461 (#2409)\n- Use css sprite image for messages list\n- Add (different) attachment icon for messages of type multipart/report (#2426)\n- Prevent from inserting empty link when composing HTML message (#3007)\n- Add caching support in id2uid and uid2id functions (#3065)\n- Add SASL proxy authentication for SMTP (#2811)\n- Improve displaying of UI messages (#3033)\n- Fix double e-mail filed in identity form (#3088)\n- Display IMAP errors for LIST/THREAD/SEARCH commands (#2981)\n- Add LITERAL+ (IMAP4 non-synchronizing literals) support (RFC 2088)\n- Add separate column for message status icon (#2788)\n- Add ACL extension support into IMAP classes (RFC 4314)\n- Add ANNOTATEMORE extension support into IMAP classes (draft-daboo-imap-annotatemore)\n- Add METADATA extension support into IMAP classes (RFC 5464)\n- Fix decoding of e-mail address strings in message headers (#3097)\n- Fix handling of attachments when Content-Disposition is not inline nor attachment (#3086)\n- Improve performance of unseen messages counting (#3090)\n- Improve performance of messages counting using ESEARCH extension (RFC4731)\n- Add LIST-STATUS support in rcube_imap_generic class (RFC 5819)\n- Add SASL-IR support in IMAP (RFC 4959)\n- Add LOGINDISABLED support (RFC 2595)\n- Add support for AUTH=PLAIN in IMAP authentication\n- Re-implemented SMTP proxy authentication support\n- Add support for IMAP proxy authentication (#2808)\n- Add support for AUTH=DIGEST-MD5 in IMAP (RFC 2831)\n- Fix parent folder with unread subfolder not bold when message is open (#3104)\n- Add basic IMAP LIST's \\Noselect option support\n- Add support for selection options from LIST-EXTENDED extension (RFC 5258)\n- Don't list subscribed but non-existent folders (#2474)\n- Fix handling of URLs with tilde (~) or semicolon (;) character (#3110, #3111)\n- Plugin API: added 'contact_form' hook\n- Add SORT=DISPLAY support (RFC 5957)\n- Plugin API: add possibility to disable plugin in AJAX mode, 'noajax' property\n- Plugin API: add possibility to disable plugin in framed mode, 'noframe' property\n- Improve performance of setting IMAP flags using .SILENT suffix\n- Improve performance of message cache status checking with skip_disabled=true\n- Support contact's email addresses up to 255 characters long (#3116)\n- Add option to place replies in the folder of the message being replied to (#2248)\n- Add missing confirmation/error messages on contact/group/message actions (#2935)\n- Add 'loading' message on message move/copy/delete/mark actions\n- Improve responsiveness of messages displaying (#3039)\n- Add option for minimum length of autocomplete's string (#2625)\n- Fix operations on messages in unsubscribed folder (#3126)\n- Add support for shared folders (#525)\n- Fix handling of folders with name \"0\" (#3133)\n- Fix handling of folders with \"<>\" characters in name\n- jQuery 1.4.4\n- Fix handling of HTML entity strings in plain text messages\n- Fix focused elements aren't unfocused when clicking on the list (#3137)\n- Fix error in MSSQL DDL scripts (#3130)\n- Lock submit button in onsubmit event on login page (#3078)\n- Don't set attachment's charset in Content-type header (#3136)\n- Fix handling of message bodies (quoted-printable encoded) with NULL characters (#2448)\n- Add workaround for MSOE's multipart/related messages with non-related attachments\n\n## Release 0.4.2\n\n- Fix handling of backslash as IMAP delimiter\n- Fix charset replacement in HTML message bodies (#3067)\n- Fix: contact group input is empty when using rename action more than once on the same group record\n- Fix \"Server Error! (Not Found)\" when using utils/save-pref action (#3069)\n- Fix handling of Thunderbird's vCards (#3070)\n\n## Release 0.4.1\n\n- Fix space-stuffing in format=flowed messages (#3064)\n- Fix msgexport.sh now using the new imap wrapper\n- Avoid displaying password on shell (#3010)\n- Only lower-case user name if first login attempt failed (#2600)\n- Make alias setting in squirrelmail_usercopy plugin configurable (patch by pommi, #3056)\n- Prevent from saving a non-existing skin path in user prefs (#3004)\n- Improve handling of single-part messages with bogus BODYSTRUCTURE (#2976)\n- Fix path to SQL files when using pgsql/mysqli/sqlsrv drivers (#2979)\n- Fix upgrade script for SQLite (#2980)\n- Fixes in SQL init script + added update script for MSSQL database\n- Remove redundant date in syslog messages (#3008)\n- Fix contacts list page controls when a group is selected (#3009)\n- Fix SMTP test in Installer (#3014)\n- Fix \"Select all\" causes message to be opened in folder with exactly one message (#2987)\n- Fix Tab key doesn't work in HTML editor in Google Chrome (#2995)\n- Fix TinyMCE uses zh_CN when zh_TW locale is set (#2998)\n- Fix TinyMCE buttons are hidden in Opera (#2993)\n- Fix JS error on IE when trying to send HTML message with enabled spellchecker (#3006)\n- Display inline images with known extensions and non-image content-type (#3002)\n- Fix \"Threaded\" checkbox after subfolder creation (#2997)\n- Fix timezone string in sent mail (#3021)\n- Show disabled checkboxes for protected folders instead of dots (#1898)\n- Added fieldsets in Identity form, added 'identity_form' hook\n- Re-added 'Close' button in upload form (#2999, #2917)\n- Fix handling of charsets with LATIN-* label\n- Fix messages background image handling in some cases (#3043)\n- Fix format=flowed handling (#3042)\n- Fix when IMAP connection fails in 'get' action session shouldn't be destroyed (#3046)\n- Fix list_cols is not updated after column dragging (#3050)\n- Support %z variable in host configuration options (#3054)\n\n## Release 0.4\n\n- Fix disappearing upload form disappears when user selects a file on Safari (#2917)\n- Don't replace error messages with loading info (#2534)\n- Fix JS errors on compose mode switch (#2952)\n- Fix message structure parsing when it lacks optional fields (#2960)\n- Include all recipients in sendmail log\n- Support HTTP_X_FORWARDED_PROTO header for HTTPS detecting (#2950)\n- Fix default IMAP port configuration (#2948)\n- Create Sent folder when starting to compose a new message (#2900)\n- Fix handling of messages with Content-Type: application/* and no filename (#840)\n- Improved compose screen: resizable body and attachments list, vertical splitter, options menu\n- Fix RC forgets search results (#722)\n- TinyMCE 3.3.7\n- Improve parsing of styled empty tags in HTML messages (#2908)\n- Add %dc variable support in base_dn/bind_dn config (#2881)\n- Add button to hide/unhide the preview pane (#955)\n- Fix no-cache headers on https to prevent content caching by proxies (#2897)\n- Fix attachment filenames broken with TNEF decoder using long filenames (#2894)\n- Use user's timezone in Date header, not server's timezone (#2393)\n- Add option to set separate footer for HTML messages (#2784)\n- Add real SMTP error description to displayed error messages (#2233)\n- Fix some IMAP errors handling when opening the message (#1848)\n- Fix related parts aren't displayed when got mimetype other than image/* (#2629)\n- Multiple identity and database support for squirrelmail_usercopy plugin (#2686)\n- Support dynamic hostname (%d/%n) variables in configuration options (#1843)\n- Add 'messages_list' hook (#2504)\n- Add request* event triggers in http_post/http_request (#2340)\n- Fix use RFC-compliant line-delimiter when saving messages on IMAP (#2828)\n- Add 'imap_timeout' option (#2869)\n- Fix forwarding of messages with winmail attachments\n- Fix handling of uuencoded attachments in message body (#2163)\n- Added list_mailboxes hook in rcube_imap::list_unsubscribed() (#2791)\n- Fix wrong message on file upload error (#2839)\n- Add support for data URI scheme [RFC2397] (#2851)\n- Added 'actionbefore', 'actionafter', 'responsebefore', 'responseafter' events\n- Fix double-addition of e-mail domain to content ID in HTML images\n- Read and send messages with format=flowed (#1052), fixes word wrapping issues (#2703)\n- Fix duplicated attachments when forwarding a message (#2670)\n- Fix message/rfc822 attachments containing only attachments are not parsed properly (#2854)\n- Fix %00 character in winmail.dat attachments names (#2850)\n- Fix handling errors of folder deletion (#2821)\n- Parse untagged CAPABILITY response for LOGIN command (#2853)\n- Renamed all php-cli scripts to use .sh extension\n- Some files from /bin + spellchecking actions moved to the new 'utils' task\n- Added thread tree icons\n- Extend contact groups support (#2802)\n- Fix check-recent action issues and performance (#2690)\n- Fix messages order after checking for recent (#1249)\n- Fix autocomplete shows entries without email (#2640)\n- Fix listupdate event doesn't trigger on search response (#2824)\n- Fix select_all_mode value after selecting a message (#2834)\n- Set focus to editor on reply in HTML mode (#2768)\n- Fix composing in HTML jumps cursor to body instead of recipients (#2796)\n- Allow columns order change per user - drag&drop (#2124)\n- Add References header in read receipt (#2801)\n- Fix database constraint violation when opening a message (#2814)\n- Add 'loading' message while login is in progress (#2790)\n- Fix quota_zero_as_unlimited (#2786)\n- Fix folder subscription checking (#2804)\n- Fix INBOX appears (sometimes) twice in mailbox list (#2794)\n- Fix listing of attachments of some types e.g. \"x-epoc/x-sisx-app\" (#2779)\n- Fix DB Schema checking when some db_table_* options are not set (#2780)\n\n## Release 0.4-beta\n\n- Add sizelimit and timelimit variables in LDAP config (#2704)\n- Hide IMAP host dropdown when single host is defined (#2553)\n- Add images pre-loading on login page (#623)\n- Add HTTP_X_REAL_IP and HTTP_X_FORWARDED_FOR to successful logins log (#2634)\n- Fix setting spellcheck languages with extended codes (#2747)\n- Fix messages list scrolling in FF3.6 (#2657)\n- Fix quicksearch input focus (#2770)\n- Always set changed date when flagging a DB record as deleted + provide a cleanup script\n- Fix address book/group selection (#2760)\n- Assign newly created contacts to the active group (#2764)\n- Added option not to mark messages as read when viewed in preview pane (#1513)\n- Allow plugins modify the Sent folder when composing (#2708)\n- Added optional (max_recipients) support to restrict total number of recipients per message (#1167)\n- Re-organize editor buttons, add blockquote and search buttons\n- Make possible to write inside or after a quoted html message (#1878)\n- Fix bugs on unexpected IMAP connection close (#2449, #2507)\n- Iloha's imap.inc rewritten into rcube_imap_generic class\n- Added contact groups in address book (not finished yet)\n- Added PageUp/PageDown/Home/End keys support on lists (#2627)\n- Added possibility to select all messages in a folder (#1312)\n- Added 'imap_force_caps' option for after-login CAPABILITY checking (#2087)\n- Password: Support dovecotpw encryption\n- TinyMCE 3.3.1\n- Implemented messages copying using drag&drop + SHIFT (#863)\n- Improved performance of folders operations (#2689)\n- Fix blocked.gif attachment is not attached to the message (#2685)\n- Managesieve: import from Horde-INGO\n- Managesieve: support for more than one match (#2362)\n- Managesieve: support for selectively disabling rules within a single sieve script (#2198)\n- Threaded message listing now available\n- Added sorting by ARRIVAL and CC\n- Message list columns configurable by the user\n- Removed 'index_sort' option, now we're using empty 'message_sort_col' for this\n- virtuser_query: support other identity data (#2413)\n- Options virtuser_* replaced with virtuser_* plugins\n- Plugin API: Implemented 'email2user' and 'user2email' hooks\n- Fix forwarding message omits CC header (#2538)\n- Add 'default_charset' option to user preferences (#1855)\n- Add 'delete_always' option to user preferences\n- Support/Require tls:// prefix in 'smtp_server' option for TLS connections\n- Fix inconsistent behaviour of 'delete_always' option (#2533)\n- Fix deleting all messages from last list page (#2528)\n- Flag original messages when sending a draft (#2458)\n- Changed signature separator when top-posting (#2555)\n- Let the admin define defaults for search modifiers (#2211)\n- Fix long e-mail addresses validation (#2641)\n- Remember search modifiers in user prefs (#2411)\n- Added force_7bit option to force MIME encoding of plain/text messages (#2679)\n- Use case sensitive check when checking for default folders (#2567)\n- Fix checking for new mail: now checks unseen count of inbox (#2123)\n- Improve performance by avoiding unnecessary updates to the session table (#2552)\n- Fix invalid <font> tags which cause HTML message rendering problems (#2687)\n- Fix CVE-2010-0464: Disable DNS prefetching (#2639)\n- Fix Received headers to behave better with SpamAssassin (#2682)\n- Password: Make passwords encoding consistent with core, add 'password_charset' global option (#2658)\n- Fix adding contacts SQL error on mysql (#2645)\n- Squirrelmail_usercopy: support reply-to field (#2678)\n- Fix IE spellcheck suggestion popup issue (#2656)\n- Fix email address auto-completion shows regexp pattern (#2498)\n- Fix merging of configuration parameters: user prefs always survive (#2584)\n- Fix quota indicator value after folder purge/expunge (#2671)\n- Fix external mailto links support for use as protocol handler (#2328)\n- Fix attachment excessive memory use, support messages of any size (#1245)\n- Fix setting task name according to auth state\n- Password: fix vpopmaild driver (#2662)\n- Add workaround for MySQL bug [http://bugs.mysql.com/bug.php?id=46293] (#2659)\n- Fix quoted text wrapping when replying to an HTML email in plain text (#897)\n- Fix handling of extended mailto links (with params) (#2573)\n- Fix sorting by date of messages without date header on servers without SORT (#2521)\n- Fix inconsistency when not using default table names (#2652)\n- Fix folder rename/delete buttons do not appear on creation of first folder (#2653)\n- Fix character set conversion fails on systems where iconv doesn't accept //IGNORE (#2590)\n- Log in performance: Create default folders on first login only\n- Import contacts into the selected address book (by Phil Weir)\n- Add support for MDB2's 'sqlsrv' driver (#2602)\n- Use jQuery-1.4\n- Removed problematic browser-caching of messages\n- Fix incompatibility with suhosin.executor.disable_emodifier (#2549)\n- Use PLAIN auth when CRAM fails and imap_auth_type='check' (#2587)\n- Fix removal of <title> tag from HTML messages (#2629)\n- Fix 'force_https' to specified port when URL contains a port number (#2612)\n- Fix to-text converting of HTML entities inside b/strong/th/hX tags (#2621)\n- Bug in spellchecker suggestions when server charset != UTF8 (#2607)\n- Managesieve: Fix requires generation for multiple actions (#2603)\n- Fix LDAP problem with special characters in RDN (#2548)\n- Improved handling of message parts of type message/rfc822\n- Plugin API: added 'quota' hook\n- Fix parsing conditional comments in HTML messages (#2569)\n- Use built-in json_encode() for proper JSON format in AJAX replies\n- Allow setting only selected params in 'message_compose' hook (#2543)\n- Plugin API: added 'message_compose_body' hook (#2520)\n- Fix counters of all folders are checked in 'getunread' action  with check_all_folders disabled (#2399)\n- Fix displaying alternative parts in messages of type message/rfc822 (#2488)\n- Fix possible messages exposure when using Roundcube behind a proxy (#2516)\n- Fix unicode para and line separators in javascript response (#2542)\n- Additional_message_headers: allow unsetting headers, support plugin's config file (#2505)\n- Fix displaying of hidden directories in skins list (#2535)\n- Fix open_basedir restriction error when reading skins list (#2537)\n- Fix pasting from Office apps into html editor (#2508)\n- Fix empty <a> tags parsing (#2509)\n- Don't cut off attachment names when using non-RFC2231 encoding (#1912)\n- Allow inserting signatures above replied message body (#991)\n- Managesieve 2.0: multi-script support\n- Fix imap_auth_type regression (#2502)\n\n## Release 0.3.1\n\n- Specify toolbar container in compose template (#2489)\n- Fix $_SERVER['HTTPS'] check for SSL forcing on IIS (#2486)\n- Avoid unnecessary page loads for selected tab (#2324)\n- Fix quota indicator issues by content generation on client-size (#2454, #2470)\n- Don't display disabled sections in Settings (#2380)\n- Added server-side e-mail address validation with 'email_dns_check' option (#2175)\n- Fix login page loading into an iframe when session expires (#2253)\n- Allow setting port number in 'force_https' option (#2373)\n- Option 'force_https' replaced by 'force_https' plugin\n- Fix IE issue with non-UTF-8 characters in AJAX response (#2422)\n- Partially fixed \"empty body\" issue by showing raw body of malformed message (#2427)\n- Fix importing/sending to email address with whitespace (#2467)\n- Added XIMSS (CommuniGate) driver for Password plugin\n- Fix newly attached files are not saved in drafts w/o editing any text (#2457)\n- Added attachment upload indicator with parallel upload (#2344)\n- Use default_charset for bodies of messages without charset definition (#2446)\n- Password: added cPanel driver\n- Fix return to first page from e-mail screen (#2385)\n- Fix handling HTML comments in HTML messages (#2448)\n- Fix folder/messagelist controls alignment - icons used (#2356)\n- Fix LDAP addressbook shows 'Contact not found' error sometimes (#2438)\n- Fix cache status checking + improve cache operations performance (#2384)\n- Prevent from setting INBOX as any of special folders (#2390)\n- Fix regular expression for e-mail address (#2417)\n- Fix Received header format\n- Implemented sorting by message index - added 'index_sort' option (#2240)\n- Fix dl() use in installer (#2415)\n- Added 'ldap_debug' option\n- Fix \"Empty startup greeting\" bug (#2369)\n- Fix setting user name in 'new_user_identity' plugin (#2405)\n- Fix incorrect count of new messages in folder list when using multiple IMAP clients (#2289)\n- Fix all folders checking for new messages with disabled caching (#2399)\n- Support skins in 'archive' and 'markasjunk' plugins\n- Added 'html_editor' hook (#2353)\n- Fix DB constraint violation when populating messages cache (#2338)\n- Password: added password strength options (#2348)\n- Fix LDAP partial result warning (#1928)\n- Fix delete in message view deletes permanently with flag_for_deletion=true (#2382)\n- Use faster/secure mt_rand() (#2376)\n- Fix roundcube hangs on empty inbox with bincimapd (#2375)\n- Fix wrong headers for IE on servers without $_SERVER['HTTPS'] (#2232)\n- Force IE style headers for attachments in non-HTTPS session, 'use_https' option (#2023)\n- Check 'post_max_size' for upload max filesize (#2372)\n- Password Plugin: Fix %d inserts username instead of domain (#2371)\n- Fix rcube_mdb2::affected_rows() (#2366)\n\n## Release 0.3-stable\n\n- Fix gn and givenName should be synonymous in LDAP addressbook (#2208)\n- Add mail_domain to LDAP email entries without @ sign (#1652)\n- Fix saving empty values in LDAP contact data (#2113)\n- Fix LDAP contact update when RDN field is changed (#2119)\n- Fix LDAP attributes case sensitivity problems (#2155)\n- Fix LDAP addressbook browsing when only one directory is used (#2314)\n- Fix endless loop on error response for APPEND command (#2346)\n- Don't require date.timezone setting in installer (#2284)\n- Fix date sorting problem with Courier IMAP server (#2351)\n- Unselect pressed buttons on mouse up (#2283)\n- Don't set php_value error_log in .htaccess but mention in INSTALL (#2230)\n- Fix too small status/flag/attachment columns in Safari 4 (#2349)\n- Fix selection disabling while dragging splitter in webkit browsers (#2342)\n- Added 'new_messages' plugin hook (#2298)\n- Added 'logout_after' plugin hook (#2333)\n- Added 'message_compose' hook\n- Added 'imap_connect' hook (#2256)\n- Fix vcard_attachments plugin (#2326)\n- Updated PEAR::Auth_SASL to 1.0.3 version\n- Use sequence names only with PostgreSQL (#2310)\n- Re-designed User Preferences interface\n- Fix MS SQL DDL (#2312)\n- Fix rcube_mdb2.php: call to setCharset not implemented in mssql driver (#2311)\n- Added 'display_next' option\n- Fix rcube_mdb2::unixtimestamp for MS SQL (#2308)\n- Fix HTML washing to respect character encoding\n- Fix endless loop in iil_C_Login() with Courier IMAP (#2303)\n- Fix #messagemenu display on IE (#2299)\n- Speedup UI by using sprites for (toolbar) buttons\n- Fix charset names with X- prefix handling\n- Fix displaying of HTML messages with unknown/malformed tags (#2296)\n\n## Release 0.3-RC1\n\n- Fix import of vCard entries with params (#1857)\n- Fix HTML messages output with empty block elements (#2271)\n- Use request tokens to protect POST requests from CSRF [CVE-2009-4076, CVE-2009-4077]\n- Added hook when killing a session\n- Added hook to write_log function (#2268)\n- Performance improvements by use UID commands (#2046)\n- Fix HTML editor tabIndex setting (#2269)\n- Added 'imap_debug' and 'smtp_debug' options\n- Support strftime's format modifiers in date_* options (#1354)\n- Support %h variable in 'smtp_server' option (#2101)\n- Show SMTP errors in browser (#2233)\n- Allow WBR tag in HTML message (#2259)\n- Use spl_autoload_register() instead of __autoload (#2250)\n- Add hook for identities listing (#2257)\n- Trigger hook 'smtp_connect' when opening an SMTP connection (#2255)\n- Added config option to enforce HTTPS connections\n- Fix non-unicode characters caching in unicode database (#1209)\n- Performance improvements of messages caching\n- Fix empty Date header issue (#2229)\n- Open collapsed folders during drag & drop (#2221)\n- Fixed link text replacements (#2120)\n- Also trigger 'insertrow' events on page load (#2151)\n- No link on subject in IE browsers (#1438)\n- Fixed filename encoding according to RFC2231 (#2192)\n- Added message Edit feature (#727, #1101)\n- Fix message Etag generation for counter issues (#1996)\n- Fix messages searching on MailEnable IMAP (#2097)\n- Fixed many 'skip_deleted' issues (#2006)\n- Fixed messages list sorting on servers without SORT capability\n- Colorized signatures in plain text messages\n- Reviewed/fixed skip_deleted/read_when_deleted/flag_for_deletion options handling in UI\n- Fix displaying of big maximum upload filesize (#2205)\n- Added possibility to invert messages selection\n- After move/delete from 'show' action display next message instead of messages list (#2203)\n- Fixed problem with double quote at the end of folder name (#2200)\n- Speedup UI by using CSS sprites and etags/expires/deflate in Apache config (#1397,#2128)\n- Support UID EXPUNGE: remove only moved/deleted messages\n- Add drag cancelling with ESC key (#1036)\n- Support initial identity name from virtuser_query (#807)\n- Added message menu, removed Print and Source buttons\n- Added possibility to save message as .eml file (#2178)\n- Added 1 minute interval in autosave options (#2173)\n- Support UTF-7 encoding in messages (#2156)\n- Better support for malformed character names (#2093)\n\n## Release 0.3-BETA\n\n- Plugin API + jQuery engine\n- Added possibility to encrypt received header, option 'http_received_header_encrypt',\n  added some more logic in encrypt/decrypt functions for security\n- Fix Answered/Forwarded flag setting for messages in subfolders\n- Fix autocomplete problem with capital letters (#2122)\n- Support UUencode content encoding (#2163)\n- Minimize chance of race condition in session handling (#1260)\n- Fix session handling on non-session SQL query error (#2078)\n- Fix html editor mode setting when reopening draft message (#2158)\n- Added quick search box menu (#1010)\n- Fix wrong column sort order icons (#2149)\n- Updated TinyMCE to 3.2.3 version\n- Fix attachment names encoding when charset isn't specified in attachment part (#1483)\n- Fix message normal priority problem (#2146)\n- Fix autocomplete spinning wheel does not disappear (#2132)\n- Added log_date_format option (#2060)\n- Fix text wrapping in HTML editor after switching from plain text to HTML (#1917)\n- Fix auto-complete function hangs with plus sign (#2141)\n- Fix AJAX requests errors handler (#1503)\n- Speed up message list displaying on IE\n- Fix read/write database recognition (#2137)\n\n## Release 0.2.2\n\n- Fix quicksearchbox look in Chrome and Konqueror (#1380)\n- Fix UTF-8 byte-order mark removing (#1911)\n- Fix folders subscriptions on Konqueror (#1380)\n- Fix debug console on Konqueror and Safari\n- Fix messagelist focus issue when modifying status of selected messages (#2134)\n- Support STARTTLS in IMAP connection (#1714)\n- Fix DEL key problem in search boxes (#1923)\n- Support several e-mail addresses per user from virtuser_file (#2036)\n- Fix drag&drop with scrolling on IE (#2117)\n- Fix adding signature separator in html mode (#1768)\n- Fix opening attachment marks message as read (#2131)\n- Fix 'temp_dir' does not support relative path under Windows (#1157)\n- Fix \"Initialize Database\" button missing from installer (#2130)\n- Fix compose window doesn't fit 1024x768 window (#1807)\n- Fix service not available error when pressing back from compose dialog (#1942)\n- Fix using mail() on Windows (#2111)\n- Fix word wrapping in message-part's <PRE>s for printing (#2118)\n- Fix incorrect word wrapping in outgoing plaintext multibyte messages (#2062)\n- Fix double footer in HTML message with embedded images\n- Fix TNEF implementation bug (#2107)\n- Fix incorrect row id parsing for LDAP contacts list (#2116)\n- Fix 'mode' parameter in sqlite DSN (#2106)\n\n## Release 0.2.1\n\n- Use US-ASCII as failover when Unicode searching fails (#2097)\n- Fix errors handling in IMAP command continuations (#2097)\n- Fix FETCH result parsing for servers returning flags at the end of result (#2098)\n- Fix datetime columns defaults in mysql's DDL (#2012)\n- Fix attaching more than nine inline images (#2094)\n- Support 'UNICODE-1-1-UTF-7' alias for UTF-7 encoding (#2093)\n- Fix mime-type detection using a hard-coded map (#1735)\n- Don't return empty string if charset conversion failed (#2092)\n- Disable concurrent autocomplete query results display (#2082)\n- Fix new lines stripped from message footer (#2088)\n- Fix IE problem with mouse click autocomplete (#2080)\n- Fix html body washing on reply/forward + fix attachments handling (#2034)\n- Fix multiple recipients input parsing (#2077)\n- Fix replying to message with html attachment (#2034)\n- Use default_charset for messages without specified charset (#2027, #1484961)\n- Support non-standard \"GMT-XXXX\" literal in date header (#2074)\n- Added TNEF support to decode MS Outlook attachments (winmail.dat)\n- Fix \"value continuation\" MIME headers by adding required semicolon (#2073)\n- Fix pressing select all/unread multiple times (#2069)\n- Fix selecting all unread does not honor new messages (#2070)\n- Fix some base64 encoded attachments handling (#2071)\n- Support NGINX as IMAP backend: better BAD response handling (#2066)\n- Performance fix: don't fetch attachment parts headers twice to parse filename\n- Fix checking for recent messages on various IMAP servers (#2055)\n- Performance fix: Don't fetch quota and recent messages in \"message view\" mode\n- Fix displaying of alternative-inside-alternative messages (#2061)\n- Fix MDNSent flag checking, use arbitrary keywords (asterisk) flag (#2059)\n- Fix creation of folders with '&' sign in name\n- Fix parsing of email addresses without angle brackets (#2048)\n- Save spellcheck corrections when switching from plain to html editor (and spellchecking is on)\n- Fix large search results on server without SORT capability (#2031)\n- Get rid of preg_replace() with eval modifier and create_function usage (#2042)\n- Bring back <base> and <link> tags in HTML messages\n- Fix XSS vulnerability through background attributes [CVE-2009-0413]\n- Fix problems with backslash as IMAP hierarchy delimiter (#1116)\n- Secure vcard export by getting rid of preg's 'e' modifier use (#2045)\n- Fix authentication when submitting form with existing session (#2037)\n- Allow absolute URLs to images in HTML messages/sigs (#2029)\n- Fix message body which contains both inline attachments and emotions\n- Fix SQL query execution errors handling in rcube_mdb2 class (#1907)\n- Fix address names with '@' sign handling (#2022)\n- Improve messages display performance\n- Fix messages searching with 'to:' modifier\n\n## Release 0.2-STABLE\n\n- Fix mark popup in IE 7 (#1785)\n- Fix line-break issue when copy & paste in Firefox (#1832)\n- Fix autocomplete \"unknown server error\" (#2008)\n- Fix STARTTLS before AUTH in SMTP connection (#1415)\n- Support multiple quota values in QUOTAROOT response (#1999)\n- Only abbreviate file name for IE < 7 browsers (#1548)\n- Performance: allow setting imap root dir and delimiter before connect (#1628)\n- Fix sorting of folders with more than 2 levels (#1953)\n- Fix search results page jumps in LDAP addressbook (#1689)\n- Fix empty line before the signature in IE (#1769)\n- Fix horizontal scrollbar in preview pane on IE (#1228)\n- Add Robots meta tag in login page and installer (#1385)\n- Added 'show_images' option, removed 'addrbook_show_images' (#1977)\n- Option to check for new mails in all folders (#1053)\n- Don't set client busy when checking for new messages (#1706)\n- Allow UTF-8 folder names in config (#1960)\n- Add junk_mbox option configuration in installer (#1960)\n- Do serverside addressbook queries for autocompletion (#1925)\n- Allow setting attachment col position in 'list_cols' option\n- Allow override 'list_cols' via skin (#1958)\n- Fix 'cache' table cleanup on session destroy (#1913)\n- Increase speed of session destroy and garbage clean up\n- Fix session timeout when DB server got clock skew (#1890)\n- Fix handling of some malformed messages (#1099)\n- Speed up raw message body handling\n- Better HTML entities conversion in html2text (#1916)\n- Fix big memory consumption and speed up searching on servers without SORT capability\n- Fix setting locale to tr_TR, ku and az_AZ (#1872)\n- Use SORT for searching on servers with SORT capability\n- Added message status filter\n- Fix empty file sending (#1801)\n- Improved searching with many criteria (calling one SEARCH command)\n- Fix HTML editor initialization on IE (#1731)\n- Add warning when switching editor mode from html to plain (#1888)\n- Make identities list scrollable (#1930)\n- Fix problem with numeric folder names (#1922)\n- Added BYE response simple support to prevent from endless loops in imap.inc (#777)\n- Fix unread message unintentionally marked as read if read_when_deleted=true (#1819)\n- Remove port number from SERVER_NAME in smtp_helo_host (#1915)\n- Don't send disposition notification receipts for messages marked as 'read' (#1918)\n- Added 'keep_alive' and 'min_keep_alive' options (#1777)\n- Added option 'identities_level', removed 'multiple_identities'\n- Allow deleting identities when multiple_identities=false (#1840)\n- Added option focus_on_new_message (#1789)\n- Fix html2text class autoloading on Windows (#1904)\n- Fix html signature formatting when identity save error occurred (#1833)\n- Add feedback and set busy when moving folder (#1897)\n- Fix 'Empty' link visibility for some languages e.g. Slovak (#1889)\n- Fix messages count bar overlapping (#1703)\n- Fix adding signature in drafts compose mode (#1884)\n- Fix iil_C_Sort() to support very long and/or divided responses (#1713)\n- Fix matching case sensitivity when setting identity on reply (#1881)\n- Prefer default identity on reply\n- Fix imap searching on ISMail server (#1870)\n- Add css class for flagged messages (#1868)\n- Write username instead of id in sendmail log (#1879)\n- Fix htmlspecialchars() use for PHP version < 5.2.3 (#1877)\n- Fix js keywords escaping in json_serialize() for IE/Opera (#1874)\n- Added bin/killcache.php script (#1839)\n- Add support for SJIS, GB2312, BIG5 in rc_detect_encoding()\n- Fix vCard file encoding detection for non-UTF-8 strings (#1820)\n- Add 'skip_deleted' option in User Preferences (#1850)\n- Minimize \"inline\" javascript scripts use (#1838)\n- Fix css class setting for folders with names matching defined classes names (#1772)\n- Fix race conditions when changing mailbox\n- Fix spellchecking when switching to html editor (#1779)\n- Fix compose window width/height (#1807)\n- Allow calling msgimport.sh/msgexport.sh from any directory (#1837)\n- Localized filesize units (#1760)\n- Better handling of \"no identity\" and \"no email in identity\" situations (#1592)\n- Added 'mime_param_folding' option with possibility to choose long/non-ascii attachment names encoding e.g. to be readable in MS Outlook/OE (#1743)\n- Added \"advanced options\" feature in User Preferences\n- Fix unread counter when displaying cached massage in preview panel (#1720)\n- Fix htmleditor spellchecking on MS Windows (#1808)\n- Fix problem with non-ascii attachment names in Mail_mime (#1700, #1576)\n- Fix language autodetection (#1812)\n- Fix button label in folders management (#1816)\n- Fix collapsed folder not indicating unread msgs count of all subfolders (#1814)\n- Fix handling of apostrophes in filenames decoded according to rfc2231\n\n## Release 0.2-BETA\n\n- Made config files location configurable (#1664)\n- Reduced memory footprint when forwarding attachments (#1764)\n- Allow and use spellcheck attribute for input/textarea fields (#1545)\n- Added icons for forwarded/forwarded+replied messages (#1691)\n- Added Reply-To to forwarded emails (#1739)\n- Display progress message for folders create/delete/rename (#1774)\n- Smart Tags and NOBR tag support in html messages (#1780, #1748)\n- Redesign of the identities settings (#836)\n- Add config option to disable creation/deletion of identities (#1139)\n- Added 'sendmail_delay' option to restrict messages sending interval (#1135)\n- Added vertical splitter for folders list resizing\n- Added possibility to view all headers in message view\n- Fixed splitter drag/resize on Opera (#1626)\n- Fixed quota img height/width setting from template (#1396)\n- Refactor drag & drop functionality. Don't rely on browser events anymore (#1108)\n- Insert \"virtual\" folders in subscription list (#1333)\n- Added link to open message in new window\n- Enable export of address book contacts as vCard\n- Add feature to import contacts from vcard files (#395)\n- Respect Content-Location headers in multipart/related messages according to RFC2110 (#1464)\n- Allowed max. attachment size now indicated in compose screen (#1523)\n- Also capture backspace key in list mode (#1186)\n- Allow application/pgp parts to be displayed (#1309)\n- Correctly handle options in mailto-links (#1671)\n- Immediately save sort_col/sort_order in user prefs (#1698)\n- Truncate very long (above 50 characters) attachment filenames when displaying\n- Allow to auto-detect client language if none set (#1095)\n- Auto-detect the client timezone (user configurable)\n- Add RFC2231 header value continuations support for attachment filenames + hack for servers that not support that feature\n- Fix Reply-To header displaying (#1738)\n- Mark form buttons that provide the most obvious operation (mainaction)\n- Added option 'quota_zero_as_unlimited' (#1206)\n- Added PRE handling in html2text class (#1301)\n- Added folder hierarchy collapsing\n- Added options to use syslog instead of log file (#1389)\n- Added Logging & Debugging section in Installer\n- Fix In-Reply-To and References headers when composing saved draft message (#1718)\n- Fix html message charset conversion for charsets with underline (#1717)\n- Fix buttons status after contacts deletion (#1675)\n- Fix escaping of To: and From: fields when building message body for reply or forward in the HTML editor (#1432)\n- Use current mailbox name in template (#1690)\n- Better fix for skipping untagged responses (#1694)\n- Added pspell support patch by Kris Steinhoff (#781)\n- Enable spellchecker for HTML editor (#1589)\n- Respect spellcheck_uri in tinyMCE spellchecker (#941)\n- Case insensitive contacts searching using PostgreSQL (#1692)\n- Make default imap folders configurable for each user (#1558)\n- Save outgoing mail to selectable folder (#1324581)\n- Fix hiding of mark menu when clicking th button again (#1463)\n- Use long date format in print mode (#1643)\n- Updated TinyMCE to version 3.1.0.1\n- Re-enable autocomplete attribute for login form (#1661)\n- Check PERMANENTFLAGS before saving $MDNSent flag (#1478, #1485163)\n- Added flag column on messages list (#1220)\n- Patched Mail/MimePart.php (http://pear.php.net/bugs/bug.php?id=14232)\n- Allow trash/junk subfolders to be purged (#1568)\n- Store compose parameters in session and redirect to a unique URL\n- Fixed CRAM-MD5 authentication (#1364)\n- Fixed forwarding messages with one HTML attachment (#1103)\n- Fixed encoding of message/rfc822 attachments and image/pjpeg handling (#1439)\n- Added option to select skin in user preferences\n- Added option to configure displaying of attached images below the message body\n- Added option to display images in messages from known senders (#1204)\n- User preferences grouped in more fieldsets\n- Fix corrupted MIME headers of messages in Sent folder (#1587)\n- Fixed bug in MDB2 package: http://pear.php.net/bugs/bug.php?id=14124\n- Use keypress instead of keydown to select list's row (#1362)\n- Don't call expunge and don't remove message row after message move if flag_for_deletion is set to true (#1505)\n\n## Release 0.2-ALPHA\n\n- Added option to disable autocompletion from selected LDAP address books (#1445)\n- TLS support in LDAP connections: 'use_tls' property (#1581)\n- Fixed removing messages from search set after deleting them (#1583)\n- imap.inc: Fixed iil_C_FetchStructureString() to handle many\n  literal strings in response (#1483)\n- Support for subfolders in default/protected folders (#1250)\n- Disallowed delimiter in folder name (#1351)\n- Support \" and \\ in folder names\n- Escape \\ in login (#1214)\n- Better HTML sanitization with the DOM-based washtml script (#1276)\n- Fixed sorting of folders with non-ascii characters\n- Fixed Mysql DDL for default identities creation (#1554)\n- In Preferences added possibility to configure 'read_when_deleted',\n  'mdn_requests', 'flag_for_deletion' options\n- Made IMAP auth type configurable (#683)\n- Fixed empty values with FROM_UNIXTIME() in rcube_mdb2 (#1540)\n- Fixed attachment list on IE 6/7 (#1355)\n- Fixed JavaScript in compose.html that shows cc/bcc fields if populated\n- Make password input fields of type password in installer (#1417)\n- Don't attempt to delete cache entries if enable_caching is FALSE (#1537)\n- Optimized messages sorting on servers without sort capability (#1535)\n- Corrected message headers decoding when charset isn't specified and improved\n  support for native languages (#1536, #1534)\n- Expanded LDAP configuration options to support LDAP server writes.\n- Installer: encode special characters in DB username/password (#1529)\n- Fixed management of folders with national characters in names (#1526, #1504)\n- Fixed identities saving when using MDB2 pgsql driver (#1525)\n- Fixed BCC header reset (#1501)\n- Improved messages list performance - patch from Justin Heesemann\n- Append skin_path to images location only when it starts with '/' sign (#1398)\n- Fix IMAP response in message body when message has no body (#1479)\n- Fixed non-RFC dates formatting (#1429)\n- Fixed typo in set_charset() (#1498)\n- Decode entities when inserting HTML signature to plain text message (#1497)\n- HTML editing is now working with PHP5 updates and TinyMCE v3.0.6\n- Fixed signature loading on Windows (#1169)\n- Added language support to HTML editing (#1401)\n- Fixed remove signature when replying (#446)\n- Fixed problem with line with a space at the end (#1440)\n- Fixed `<!DOCTYPE>` tag filtering (#1066)\n- Fixed <?xml> tag filtering (#1075)\n- Added sections (fieldset+label) in Settings interface\n- Mark as read in one action with message preview (#1486)\n- Deleted redundant quota reads (#1486)\n- Added options for empty trash and expunge inbox on logout (#707)\n- Removed lines wrapping when displaying message\n- Fixed month localization\n- Changed codebase to PHP5 with autoloader\n\n## Release 0.1.1\n\n- Clear selection when selecting single item (#1461)\n- Remove hard-coded image size in skin templates (#1423)\n- Database schema improvements (dropped unnecessary indexes)\n- Fixed creating a new folder with a comma in its name (#1263)\n- Fixed sorting of messages when default mailbox is empty (#1020)\n- Improve message previewpane - less loading (#1019)\n- Fixed login form autocompletion (#1378)\n- Fixed virtuser_query option for mdb2 backend (#1409)\n- Fixed attachment restoring from Drafts when message body was empty (#1144)\n- Fixed usage of ob_gzhandler (#1390)\n- Fixed message part window in IE6 (#1211)\n- Fixed decoding of mime-encoded strings (#938)\n- Fixed some iconv/mb_string problems (#1202)\n- Correctly quote mailbox name when using in URL (#1016)\n- Fixed \"headers already sent\" errors (#1399)\n\n## Release 0.1-STABLE\n\n- Added interactive installer script\n- Fix folder adding/renaming inspired by #1349\n- Localize folder name in page title (#1338)\n- Fix code using wrong variable name (#818)\n- Allow to send mail with BCC recipients only\n- condense TinyMCE toolbar down to one line, removing table buttons (#1306)\n- Add function to mark the selected messages as read/unread (#641)\n- Also do charset decoding as suggested in RFC 2231 (fix #1022)\n- Show message count in folder list and hint when creating a subfolder\n- Distinguish ssl and tls for imap connections (#1252)\n- Added some charset aliases to fix typical mis-labelling (#1185)\n- Remember decision to display images for a certain message during session (#1310)\n- Truncate attachment filenames to 55 characters due to an IE bug (#1313)\n- Make sending of read receipts configurable\n- Respect config when localize folder names (#1280)\n- Also respect receipt and priority settings when re-opening a draft message\n- Remember search results (closes #722), patch by the_glu\n- Add Received header on outgoing mail\n- Upgrade to TinyMCE 2.1.3\n- Allow inserting image attachments into HTML messages while composing (#1179)\n- Implement Message-Disposition-Notification (Receipts)\n- Fix overriding of session vars when register_globals is on (#1255)\n- Fix bug with case-sensitive folder names (#973)\n- Don't create default folders by default\n- Fixed some potential security risks (audited by Andris)\n- Only show new messages if they match the current search (#925)\n- Switch to/from when searching in Sent folder (#1177)\n- Correctly read the References header (#1236)\n- Unset old cookie before sending a new value (#1232)\n- Correctly decode attachments when downloading them (#1235 and #1484642)\n- Suppress IE errors when clearing attachments form (#1043)\n- Log error when login fails due to auto_create_user turned off\n- Filter linked/imported CSS files (closes #844)\n- Improve message compose screen (closes #1060)\n- Select next row after removing one from list (#1063)\n\n## Release 0.1-RC2\n\n- Enable drag-&-dropping of folders to a new parent and allow to create subfolders (#637)\n- Suppress IE errors when clearing attachments form (#1043)\n- Set preferences field in user table to NULL (#1062)\n- Log error when login fails due to auto_create_user turned off\n- Filter linked/imported CSS files (closes #844)\n- Improve message compose screen (closes #1060)\n- Select next row after removing one from list (#1063)\n- Make smtp HELO/EHLO hostname configurable (#851)\n- IPv6 Compatibility (#1023), Patch #1484373\n- Unlock interface when message sending fails (#1188)\n- Eval PHP code in template includes (if configured)\n- Show message when folder is empty. Mo more static text in table (#1068)\n- Only display unread count in page title when new messages arrived\n- Fixed wrong delete button tooltip (#785)\n- Fixed charset encoding bug (#1091)\n- Applied patch for LDAP version (#1175)\n- Improved XHTML validation\n- Fix message list selection (#1174)\n- Better fix lowercased usernames (#1120)\n- Update pngbehavior Script as suggested in #1134\n- Fixed moving/deleting messages when more than 1 is selected\n- Applied patch for LDAP contacts listing by Glen Ogilvie\n- Applied patch for more address fields in LDAP contacts (#1074)\n- Add alternative for getallheaders() (fix #1146)\n- Identify mailboxes case-sensitive\n- Sort mailbox list case-insensitive (closes #1032)\n- Fix display of multipart messages from Apple Mail (closes #823)\n- Protect AJAX request from being fetched by a foreign site (XSS)\n- Make autocomplete for loginform configurable by the skin template\n- Fix compose function from address book (closes #1089)\n- Added //IGNORE to iconv call (patch #1086, closes #821)\n- Check if mbstring supports charset (#1003 and #1004)\n- Prefer iconv over mbstring (as suggested in #1004)\n- Check filesize of template includes (#1079)\n- Fixed bug with buttons not dimming/enabling properly after switching folders\n- Fixed compose window becoming unresponsive after saving a draft (#1132)\n- Re-enabled \"Back\" button in compose window now that bug #1132 is fixed\n- Fixed unresponsive interface issue when downloading attachments (#1138)\n- Lowered status message time from 5 to 3 seconds to improve responsiveness\n- Raised .htaccess upload_max_filesize from 2M to 5M to differ from default php.ini\n- Increased \"mailboxcontrols\" mail.css width from 160 to 170px to fix non-english languages (#1140)\n- Fix status message bug #1114 with regard to #1041\n- Fix address adding bug reported by David Koblas\n- Applied socket error patch by Thomas Mangin\n- Pass-by-reference workaround for PHP5 in sendmail.inc\n- Fixed buggy imap_root settings (closes #1056)\n- Prevent default events on subject links (#1071)\n- Use HTTP-POST requests for actions that change state\n\n## Release 0.1-RC1\n\n- Use global filters and bind username/ for Ldap searches (#909)\n- Hide quota display if imap server does not support it\n- Hide address groups if no LDAP servers configured\n- Add link to message subjects (closes #982)\n- Better SQL query for contact listing/search (closes #1051)\n- Fixed marking as read in preview pane (closes #1048)\n- CSS hack to display attachments correctly in IE6\n- Wrap message body text (closes #901)\n- LDAP access is back in address book (closes #864)\n- Added search function for contacts\n- New Template parsing and output encoding\n- Fixed bugs #884 and #793\n- Fixed message moving procedure (closes #1013)\n- Fixed display of multiple attachments (closes #647)\n- Fixed check for new messages (closes #1015)\n- List attachments without filename\n- New session authentication: Change sessid cookie when login, authentication with sessauth cookie is now configurable.\n  Should close bugs #774 and #1484299\n- Correctly translate mailbox names (closes #993)\n- Quote e-mail address links (closes #1007)\n- Updated PEAR::Mail_mime package\n- Accept single quotes for HTML attributes when modifying message body (thanks Jason)\n- Sanitize input for new users/identities (thanks Colin Alston)\n- Don't download HTML message parts\n- Convert HTML parts to plaintext if 'prefer_html' is off\n- Correctly parse message/rfc822 parts (closes #838)\n- Also use user_id for unique key in messages table (closes #857)\n- Hide contacts drop down on blur (closes #946)\n- Make entries in contacts drop down clickable\n- Turn off browser autocompletion on login page\n- Quote <? in text/html message parts\n- Hide border around radio buttons\n- Applied patch for attachment download by crichardson (closes #943)\n- Fixed bug in Postgres DB handling (closes #852)\n- Fixed bug of invalid calls to fetchRow() in rcube_db.inc (closes #996)\n- Fixed array_merge bug (closes #997)\n- Fixed flag for deletion in list view (closes #987)\n- Finally support semicolons as recipient separator (closes ##976)\n- Fixed message headers (subject) encoding\n- check if safe mode is on or not (closes #990)\n- Show \"no subject\" in message list if subject is missing (closes #971)\n- Solved page caching of message preview (closes #905)\n- Only use gzip compression if configured (closes #967)\n- Fixed priority selector issue (#903)\n- Fixed some CSS issues in default skin (closes #951 and #911)\n- Prevent from double quoting of numeric HTML character references (closes #978)\n- Fixed display of HTML message attachments (closes #927)\n- Applied patch for preview caching (closes #933)\n- Added error handling for attachment uploads\n- Use multibyte safe string functions where necessary (closes #798)\n- Applied security patch to validate the submitted host value (by Kees Cook)\n- Applied security patch to validate input values when deleting contacts (by Kees Cook)\n- Applied security patch that sanitizes emoticon paths when attaching them (by Kees Cook)\n- Applied a patch to more aggressively sanitize a HTML message\n- Visualize blocked images in HTML messages\n- Fixed wrong message listing when showing search results (closes #890)\n- Show remote images when opening HTML message part as attachment\n- Improve memory usage when sending mail (closes #871)\n- Mark messages as read once the preview is loaded (closes #1484132)\n- Include smtp final response in log (closes #862)\n- Corrected date string in sent message header (closes #887)\n- Correctly choose \"To\" column in sent and draft mailboxes (closes #769)\n- Changed tooltips for message browse buttons (closes #757)\n- Fixed signature delimiter character to be standard (Bug #830)\n- Fixed XSS vulnerability (Bug #877)\n- Remove newlines from mail headers (Bug #827)\n- Selection issues when moving/deleting (Bug #837)\n- Applied patch of Clement Moulin for imap host auto-selection\n- ISO-encode IMAP password for plaintext login (Bugs #792 & #723)\n- Fixed folder name encoding in subscription list (Bug #879)\n- Fixed JS errors in identity list (Bug #885)\n- Translate foldernames in folder form (closes #879)\n- Added first and last buttons to message list, address book\n  and message detail\n- Pressing Shift-Del bypasses Trash folder\n- Enable purge command for Junk folder\n- Fetch all aliases if virtuser_query is used instead\n- Re-enabled multi select of contacts (Bug #817)\n- Enable contact editing right after creation (Bug #644)\n- Correct UTF-7 to UTF-8 conversion if mbstring is not available\n- Fixed IMAP fetch of message body (Bug #819)\n- Fixed safe_mode problems (Bug #539)\n- Fixed wrong header encoding (Bug #1483976)\n- Made automatic draft saving configurable\n- Fixed JS bug when renaming folders (Bug #799)\n- Added quota display as image (by Brett Patterson)\n- Corrected creation of a message-id\n- New indentation for quoted message text\n- Improved HTML validity\n- Fixed URL character set (Ticket #616)\n- Fixed saving of contact into MySQL from LDAP query results (Ticket #681)\n- Fixed folder renaming: unsubscribe before rename (Bug #750)\n- Finalized new message parsing (+ caching)\n- Fixed wrong usage of mbstring (Bug #645)\n- Set default spelling language (Ticket #764)\n- Added support for Nox Spell Server\n- Re-built message parsing (Bug #422)\n  Now based on the message structure delivered by the IMAP server.\n- Fixed some XSS and SQL injection issues\n- Fixed charset problems with folder renaming\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   Display a mail message similar as a usual mail application does     |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n +-----------------------------------------------------------------------+\n*/\n\nclass rcmail_action_mail_viewsource extends rcmail_action\n{\n    /**\n     * Request handler.\n     *\n     * @param array $args Arguments from the previous step(s)\n     */\n    public function run($args = [])\n    {\n        $rcmail = rcmail::get_instance();\n\n        if (!empty($_GET['_save'])) {\n            $rcmail->request_security_check(rcube_utils::INPUT_GET);\n        }\n\n        ob_end_clean();\n\n        // similar code as in program/steps/mail/get.inc\n        if ($uid = rcube_utils::get_input_value('_uid', rcube_utils::INPUT_GET)) {\n            if ($pos = strpos($uid, '.')) {\n                $message = new rcube_message($uid);\n                $headers = $message->headers;\n                $part_id = substr($uid, $pos + 1);\n            }\n            else {\n                $headers = $rcmail->storage->get_message_headers($uid);\n            }\n\n            $charset  = $headers->charset ?: $rcmail->config->get('default_charset');\n            $filename = '';\n            $params   = [\n                'type'         => 'text/plain',\n                'type_charset' => $charset,\n            ];\n\n            if (!empty($_GET['_save'])) {\n                $subject  = rcube_mime::decode_header($headers->subject, $headers->charset);\n                $filename = self::filename_from_subject(mb_substr($subject, 0, 128));\n                $filename = ($filename ?: $uid)  . '.eml';\n\n                $params['length'] = $headers->size;\n                $params['disposition'] = 'attachment';\n            }\n            else {\n                $params['disposition'] = 'inline';\n            }\n\n            $rcmail->output->download_headers($filename, $params);\n\n            if (isset($part_id) && isset($message)) {\n                $message->get_part_body($part_id, empty($_GET['_save']), 0, -1);\n            }\n            else {\n                $rcmail->storage->print_raw_body($uid, empty($_GET['_save']));\n            }\n        }\n        else {\n            rcube::raise_error([\n                    'code'    => 500,\n                    'file'    => __FILE__,\n                    'line'    => __LINE__,\n                    'message' => \"Message UID $uid not found\"\n                ],\n                true, true\n            );\n        }\n\n        exit;\n    }\n\n    /**\n     * Helper function to convert message subject into filename\n     */\n    public static function filename_from_subject($str)\n    {\n        $str = preg_replace('/[:\\t\\n\\r\\0\\x0B\\/]+\\s*/', ' ', $str);\n\n        return trim($str, \" \\t\\n\\r\\0\\x0B./_\");\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n | Copyright (C) Kolab Systems AG                                        |\n | Copyright (C) 2000 Edmund Grimley Evans <edmundo@rano.org>            |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   Provide charset conversion functionality                            |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n | Author: Edmund Grimley Evans <edmundo@rano.org>                       |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Character sets conversion functionality\n *\n * @package    Framework\n * @subpackage Core\n */\nclass rcube_charset\n{\n    /**\n     * Character set aliases (some of them from HTML5 spec.)\n     *\n     * @var array\n     */\n    static public $aliases = [\n        'USASCII'       => 'WINDOWS-1252',\n        'ANSIX31101983' => 'WINDOWS-1252',\n        'ANSIX341968'   => 'WINDOWS-1252',\n        'UNKNOWN8BIT'   => 'ISO-8859-15',\n        'UNKNOWN'       => 'ISO-8859-15',\n        'USERDEFINED'   => 'ISO-8859-15',\n        'KSC56011987'   => 'EUC-KR',\n        'GB2312'        => 'GBK',\n        'GB231280'      => 'GBK',\n        'UNICODE'       => 'UTF-8',\n        'UTF7IMAP'      => 'UTF7-IMAP',\n        'TIS620'        => 'WINDOWS-874',\n        'ISO88599'      => 'WINDOWS-1254',\n        'ISO885911'     => 'WINDOWS-874',\n        'MACROMAN'      => 'MACINTOSH',\n        '77'            => 'MAC',\n        '128'           => 'SHIFT-JIS',\n        '129'           => 'CP949',\n        '130'           => 'CP1361',\n        '134'           => 'GBK',\n        '136'           => 'BIG5',\n        '161'           => 'WINDOWS-1253',\n        '162'           => 'WINDOWS-1254',\n        '163'           => 'WINDOWS-1258',\n        '177'           => 'WINDOWS-1255',\n        '178'           => 'WINDOWS-1256',\n        '186'           => 'WINDOWS-1257',\n        '204'           => 'WINDOWS-1251',\n        '222'           => 'WINDOWS-874',\n        '238'           => 'WINDOWS-1250',\n        'MS950'         => 'CP950',\n        'WINDOWS949'    => 'UHC',\n        'WINDOWS1257'   => 'ISO-8859-13',\n        'ISO2022JP'     => 'ISO-2022-JP-MS',\n    ];\n\n    /**\n     * Windows codepages\n     *\n     * @var array\n     */\n    static public $windows_codepages = [\n         37 => 'IBM037',    // IBM EBCDIC US-Canada\n        437 => 'IBM437',    // OEM United States\n        500 => 'IBM500',    // IBM EBCDIC International\n        708 => 'ASMO-708',  // Arabic (ASMO 708)\n        720 => 'DOS-720',   // Arabic (Transparent ASMO); Arabic (DOS)\n        737 => 'IBM737',    // OEM Greek (formerly 437G); Greek (DOS)\n        775 => 'IBM775',    // OEM Baltic; Baltic (DOS)\n        850 => 'IBM850',    // OEM Multilingual Latin 1; Western European (DOS)\n        852 => 'IBM852',    // OEM Latin 2; Central European (DOS)\n        855 => 'IBM855',    // OEM Cyrillic (primarily Russian)\n        857 => 'IBM857',    // OEM Turkish; Turkish (DOS)\n        858 => 'IBM00858',  // OEM Multilingual Latin 1 + Euro symbol\n        860 => 'IBM860',    // OEM Portuguese; Portuguese (DOS)\n        861 => 'IBM861',    // OEM Icelandic; Icelandic (DOS)\n        862 => 'DOS-862',   // OEM Hebrew; Hebrew (DOS)\n        863 => 'IBM863',    // OEM French Canadian; French Canadian (DOS)\n        864 => 'IBM864',    // OEM Arabic; Arabic (864)\n        865 => 'IBM865',    // OEM Nordic; Nordic (DOS)\n        866 => 'cp866',     // OEM Russian; Cyrillic (DOS)\n        869 => 'IBM869',    // OEM Modern Greek; Greek, Modern (DOS)\n        870 => 'IBM870',    // IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2\n        874 => 'windows-874',  // ANSI/OEM Thai (ISO 8859-11); Thai (Windows)\n        875 => 'cp875',     // IBM EBCDIC Greek Modern\n        932 => 'shift_jis', // ANSI/OEM Japanese; Japanese (Shift-JIS)\n        936 => 'gb2312',    // ANSI/OEM Simplified Chinese (PRC, Singapore); Chinese Simplified (GB2312)\n        950 => 'big5',      // ANSI/OEM Traditional Chinese (Taiwan; Hong Kong SAR, PRC); Chinese Traditional (Big5)\n        1026 => 'IBM1026',      // IBM EBCDIC Turkish (Latin 5)\n        1047 => 'IBM01047',     // IBM EBCDIC Latin 1/Open System\n        1140 => 'IBM01140',     // IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)\n        1141 => 'IBM01141',     // IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)\n        1142 => 'IBM01142',     // IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)\n        1143 => 'IBM01143',     // IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)\n        1144 => 'IBM01144',     // IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)\n        1145 => 'IBM01145',     // IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)\n        1146 => 'IBM01146',     // IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)\n        1147 => 'IBM01147',     // IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)\n        1148 => 'IBM01148',     // IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)\n        1149 => 'IBM01149',     // IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)\n        1200 => 'UTF-16',       // Unicode UTF-16, little endian byte order (BMP of ISO 10646); available only to managed applications\n        1201 => 'UTF-16BE',     // Unicode UTF-16, big endian byte order; available only to managed applications\n        1250 => 'windows-1250', // ANSI Central European; Central European (Windows)\n        1251 => 'windows-1251', // ANSI Cyrillic; Cyrillic (Windows)\n        1252 => 'windows-1252', // ANSI Latin 1; Western European (Windows)\n        1253 => 'windows-1253', // ANSI Greek; Greek (Windows)\n        1254 => 'windows-1254', // ANSI Turkish; Turkish (Windows)\n        1255 => 'windows-1255', // ANSI Hebrew; Hebrew (Windows)\n        1256 => 'windows-1256', // ANSI Arabic; Arabic (Windows)\n        1257 => 'windows-1257', // ANSI Baltic; Baltic (Windows)\n        1258 => 'windows-1258', // ANSI/OEM Vietnamese; Vietnamese (Windows)\n        10000 => 'macintosh',   // MAC Roman; Western European (Mac)\n        12000 => 'UTF-32',      // Unicode UTF-32, little endian byte order; available only to managed applications\n        12001 => 'UTF-32BE',    // Unicode UTF-32, big endian byte order; available only to managed applications\n        20127 => 'US-ASCII',    // US-ASCII (7-bit)\n        20273 => 'IBM273',      // IBM EBCDIC Germany\n        20277 => 'IBM277',      // IBM EBCDIC Denmark-Norway\n        20278 => 'IBM278',      // IBM EBCDIC Finland-Sweden\n        20280 => 'IBM280',      // IBM EBCDIC Italy\n        20284 => 'IBM284',      // IBM EBCDIC Latin America-Spain\n        20285 => 'IBM285',      // IBM EBCDIC United Kingdom\n        20290 => 'IBM290',      // IBM EBCDIC Japanese Katakana Extended\n        20297 => 'IBM297',      // IBM EBCDIC France\n        20420 => 'IBM420',      // IBM EBCDIC Arabic\n        20423 => 'IBM423',      // IBM EBCDIC Greek\n        20424 => 'IBM424',      // IBM EBCDIC Hebrew\n        20838 => 'IBM-Thai',    // IBM EBCDIC Thai\n        20866 => 'koi8-r',      // Russian (KOI8-R); Cyrillic (KOI8-R)\n        20871 => 'IBM871',      // IBM EBCDIC Icelandic\n        20880 => 'IBM880',      // IBM EBCDIC Cyrillic Russian\n        20905 => 'IBM905',      // IBM EBCDIC Turkish\n        20924 => 'IBM00924',    // IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)\n        20932 => 'EUC-JP',      // Japanese (JIS 0208-1990 and 0212-1990)\n        20936 => 'cp20936',     // Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)\n        20949 => 'cp20949',     // Korean Wansung\n        21025 => 'cp1025',      // IBM EBCDIC Cyrillic Serbian-Bulgarian\n        21866 => 'koi8-u',      // Ukrainian (KOI8-U); Cyrillic (KOI8-U)\n        28591 => 'iso-8859-1',  // ISO 8859-1 Latin 1; Western European (ISO)\n        28592 => 'iso-8859-2',  // ISO 8859-2 Central European; Central European (ISO)\n        28593 => 'iso-8859-3',  // ISO 8859-3 Latin 3\n        28594 => 'iso-8859-4',  // ISO 8859-4 Baltic\n        28595 => 'iso-8859-5',  // ISO 8859-5 Cyrillic\n        28596 => 'iso-8859-6',  // ISO 8859-6 Arabic\n        28597 => 'iso-8859-7',  // ISO 8859-7 Greek\n        28598 => 'iso-8859-8',  // ISO 8859-8 Hebrew; Hebrew (ISO-Visual)\n        28599 => 'iso-8859-9',  // ISO 8859-9 Turkish\n        28603 => 'iso-8859-13', // ISO 8859-13 Estonian\n        28605 => 'iso-8859-15', // ISO 8859-15 Latin 9\n        38598 => 'iso-8859-8-i', // ISO 8859-8 Hebrew; Hebrew (ISO-Logical)\n        50220 => 'iso-2022-jp', // ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)\n        50221 => 'csISO2022JP', // ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)\n        50222 => 'iso-2022-jp', // ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)\n        50225 => 'iso-2022-kr', // ISO 2022 Korean\n        51932 => 'EUC-JP',      // EUC Japanese\n        51936 => 'EUC-CN',      // EUC Simplified Chinese; Chinese Simplified (EUC)\n        51949 => 'EUC-KR',      // EUC Korean\n        52936 => 'hz-gb-2312',  // HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)\n        54936 => 'GB18030',     // Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)\n        65000 => 'UTF-7',\n        65001 => 'UTF-8',\n    ];\n\n    /**\n     * Validate character set identifier.\n     *\n     * @param string $input Character set identifier\n     *\n     * @return bool True if valid, False if not valid\n     */\n    public static function is_valid($input)\n    {\n        return is_string($input) && preg_match('|^[a-zA-Z0-9_./:#-]{2,32}$|', $input) > 0;\n    }\n\n    /**\n     * Parse and validate charset name string.\n     * Sometimes charset string is malformed, there are also charset aliases,\n     * but we need strict names for charset conversion (specially utf8 class)\n     *\n     * @param string $input Input charset name\n     *\n     * @return string The validated charset name\n     */\n    public static function parse_charset($input)\n    {\n        static $charsets = [];\n\n        $charset = strtoupper($input);\n\n        if (isset($charsets[$input])) {\n            return $charsets[$input];\n        }\n\n        $charset = preg_replace([\n            '/^[^0-9A-Z]+/',    // e.g. _ISO-8859-JP$SIO\n            '/\\$.*$/',          // e.g. _ISO-8859-JP$SIO\n            '/UNICODE-1-1-*/',  // RFC1641/1642\n            '/^X-/',            // X- prefix (e.g. X-ROMAN8 => ROMAN8)\n            '/\\*.*$/'           // lang code according to RFC 2231.5\n        ], '', $charset);\n\n        if ($charset == 'BINARY') {\n            return $charsets[$input] = null;\n        }\n\n        // allow A-Z and 0-9 only\n        $str = preg_replace('/[^A-Z0-9]/', '', $charset);\n\n        $result = $charset;\n\n        if (isset(self::$aliases[$str])) {\n            $result = self::$aliases[$str];\n        }\n        // UTF\n        else if (preg_match('/U[A-Z][A-Z](7|8|16|32)(BE|LE)*/', $str, $m)) {\n            $result = 'UTF-' . $m[1] . (!empty($m[2]) ? $m[2] : '');\n        }\n        // ISO-8859\n        else if (preg_match('/ISO8859([0-9]{0,2})/', $str, $m)) {\n            $iso = 'ISO-8859-' . ($m[1] ?: 1);\n            // some clients sends windows-1252 text as latin1,\n            // it is safe to use windows-1252 for all latin1\n            $result = $iso == 'ISO-8859-1' ? 'WINDOWS-1252' : $iso;\n        }\n        // handle broken charset names e.g. WINDOWS-1250HTTP-EQUIVCONTENT-TYPE\n        else if (preg_match('/(WIN|WINDOWS)([0-9]+)/', $str, $m)) {\n            $result = 'WINDOWS-' . $m[2];\n        }\n        // LATIN\n        else if (preg_match('/LATIN(.*)/', $str, $m)) {\n            $aliases = ['2' => 2, '3' => 3, '4' => 4, '5' => 9, '6' => 10,\n                '7' => 13, '8' => 14, '9' => 15, '10' => 16,\n                'ARABIC' => 6, 'CYRILLIC' => 5, 'GREEK' => 7, 'GREEK1' => 7, 'HEBREW' => 8\n            ];\n\n            // some clients sends windows-1252 text as latin1,\n            // it is safe to use windows-1252 for all latin1\n            if ($m[1] == 1) {\n                $result = 'WINDOWS-1252';\n            }\n            // we need ISO labels\n            else if (!empty($aliases[$m[1]])) {\n                $result = 'ISO-8859-'.$aliases[$m[1]];\n            }\n        }\n\n        $charsets[$input] = $result;\n\n        return $result;\n    }\n\n    /**\n     * Convert a string from one charset to another.\n     *\n     * @param string $str  Input string\n     * @param string $from Suspected charset of the input string\n     * @param string $to   Target charset to convert to; defaults to RCUBE_CHARSET\n     *\n     * @return string Converted string\n     */\n    public static function convert($str, $from, $to = null)\n    {\n        static $iconv_options;\n\n        $to   = empty($to) ? RCUBE_CHARSET : self::parse_charset($to);\n        $from = self::parse_charset($from);\n\n        // It is a common case when UTF-16 charset is used with US-ASCII content (#1488654)\n        // In that case we can just skip the conversion (use UTF-8)\n        if ($from == 'UTF-16' && !preg_match('/[^\\x00-\\x7F]/', $str)) {\n            $from = 'UTF-8';\n        }\n\n        if ($from == $to || empty($str) || empty($from)) {\n            return $str;\n        }\n\n        $out = false;\n        $error_handler = function() { throw new \\Exception(); };\n\n        // Ignore invalid characters\n        $mbstring_sc = mb_substitute_character();\n        mb_substitute_character('none');\n\n        // If mbstring reports an illegal character in input via E_WARNING.\n        // FIXME: Is this really true with substitute character 'none'?\n        // A warning is thrown in PHP<8 also on unsupported encoding, in PHP>=8 ValueError\n        // is thrown instead (therefore we catch Throwable below)\n        set_error_handler($error_handler, E_WARNING);\n\n        try {\n            $out = mb_convert_encoding($str, $to, $from);\n        }\n        catch (Throwable $e) {\n            $out = false;\n        }\n        catch (Exception $e) {\n            $out = false;\n        }\n\n        restore_error_handler();\n        mb_substitute_character($mbstring_sc);\n\n        if ($out !== false) {\n            return $out;\n        }\n\n        if ($iconv_options === null) {\n            if (function_exists('iconv')) {\n                // ignore characters not available in output charset\n                $iconv_options = '//IGNORE';\n                if (iconv('', $iconv_options, '') === false) {\n                    // iconv implementation does not support options\n                    $iconv_options = '';\n                }\n            }\n            else {\n                $iconv_options = false;\n            }\n        }\n\n        // Fallback to iconv module, it is slower, but supports much more charsets than mbstring\n        if ($iconv_options !== false && $from != 'UTF7-IMAP' && $to != 'UTF7-IMAP'\n            && $from !== 'ISO-2022-JP'\n        ) {\n            // If iconv reports an illegal character in input it means that input string\n            // has been truncated. It's reported as E_NOTICE.\n            // PHP8 will also throw E_WARNING on unsupported encoding.\n            set_error_handler($error_handler, E_NOTICE | E_WARNING);\n\n            try {\n                $out = iconv($from, $to . $iconv_options, $str);\n            }\n            catch (Throwable $e) {\n                $out = false;\n            }\n            catch (Exception $e) {\n                $out = false;\n            }\n\n            restore_error_handler();\n\n            if ($out !== false) {\n                return $out;\n            }\n        }\n\n        // return the original string\n        return $str;\n    }\n\n    /**\n     * Converts string from standard UTF-7 (RFC 2152) to UTF-8.\n     *\n     * @param string $str Input string (UTF-7)\n     *\n     * @return string Converted string (UTF-8)\n     * @deprecated use self::convert()\n     */\n    public static function utf7_to_utf8($str)\n    {\n        return self::convert($str, 'UTF-7', 'UTF-8');\n    }\n\n    /**\n     * Converts string from UTF-16 to UTF-8 (helper for utf-7 to utf-8 conversion)\n     *\n     * @param string $str Input string\n     *\n     * @return string The converted string\n     * @deprecated use self::convert()\n     */\n    public static function utf16_to_utf8($str)\n    {\n        return self::convert($str, 'UTF-16BE', 'UTF-8');\n    }\n\n    /**\n     * Convert the data ($str) from RFC 2060's UTF-7 to UTF-8.\n     * If input data is invalid, return the original input string.\n     * RFC 2060 obviously intends the encoding to be unique (see\n     * point 5 in section 5.1.3), so we reject any non-canonical\n     * form, such as &ACY- (instead of &-) or &AMA-&AMA- (instead\n     * of &AMAAwA-).\n     *\n     * @param string $str Input string (UTF7-IMAP)\n     *\n     * @return string Output string (UTF-8)\n     * @deprecated use self::convert()\n     */\n    public static function utf7imap_to_utf8($str)\n    {\n        return self::convert($str, 'UTF7-IMAP', 'UTF-8');\n    }\n\n    /**\n     * Convert the data ($str) from UTF-8 to RFC 2060's UTF-7.\n     * Unicode characters above U+FFFF are replaced by U+FFFE.\n     * If input data is invalid, return an empty string.\n     *\n     * @param string $str Input string (UTF-8)\n     *\n     * @return string Output string (UTF7-IMAP)\n     * @deprecated use self::convert()\n     */\n    public static function utf8_to_utf7imap($str)\n    {\n        return self::convert($str, 'UTF-8', 'UTF7-IMAP');\n    }\n\n    /**\n     * A method to guess character set of a string.\n     *\n     * @param string $string   String\n     * @param string $failover Default result for failover\n     * @param string $language User language\n     *\n     * @return string Charset name\n     */\n    public static function detect($string, $failover = null, $language = null)\n    {\n        if (substr($string, 0, 4) == \"\\0\\0\\xFE\\xFF\") return 'UTF-32BE';  // Big Endian\n        if (substr($string, 0, 4) == \"\\xFF\\xFE\\0\\0\") return 'UTF-32LE';  // Little Endian\n        if (substr($string, 0, 2) == \"\\xFE\\xFF\")     return 'UTF-16BE';  // Big Endian\n        if (substr($string, 0, 2) == \"\\xFF\\xFE\")     return 'UTF-16LE';  // Little Endian\n        if (substr($string, 0, 3) == \"\\xEF\\xBB\\xBF\") return 'UTF-8';\n\n        // heuristics\n        if (strlen($string) >= 4) {\n            if ($string[0] == \"\\0\" && $string[1] == \"\\0\" && $string[2] == \"\\0\" && $string[3] != \"\\0\") return 'UTF-32BE';\n            if ($string[0] != \"\\0\" && $string[1] == \"\\0\" && $string[2] == \"\\0\" && $string[3] == \"\\0\") return 'UTF-32LE';\n            if ($string[0] == \"\\0\" && $string[1] != \"\\0\" && $string[2] == \"\\0\" && $string[3] != \"\\0\") return 'UTF-16BE';\n            if ($string[0] != \"\\0\" && $string[1] == \"\\0\" && $string[2] != \"\\0\" && $string[3] == \"\\0\") return 'UTF-16LE';\n        }\n\n        if (empty($language)) {\n            $rcube    = rcube::get_instance();\n            $language = $rcube->get_user_language();\n        }\n\n        // Prioritize charsets according to current language (#1485669)\n        $prio = null;\n        switch ($language) {\n        case 'ja_JP':\n            $prio = ['ISO-2022-JP', 'JIS', 'UTF-8', 'EUC-JP', 'eucJP-win', 'SJIS', 'SJIS-win'];\n            break;\n\n        case 'zh_CN':\n        case 'zh_TW':\n            $prio = ['UTF-8', 'BIG-5', 'GB2312', 'EUC-TW'];\n            break;\n\n        case 'ko_KR':\n            $prio = ['UTF-8', 'EUC-KR', 'ISO-2022-KR'];\n            break;\n\n        case 'ru_RU':\n            $prio = ['UTF-8', 'WINDOWS-1251', 'KOI8-R'];\n            break;\n\n        case 'tr_TR':\n            $prio = ['UTF-8', 'ISO-8859-9', 'WINDOWS-1254'];\n            break;\n        }\n\n        // mb_detect_encoding() is not reliable for some charsets (#1490135)\n        // use mb_check_encoding() to make charset priority lists really working\n        if (!empty($prio) && function_exists('mb_check_encoding')) {\n            foreach ($prio as $encoding) {\n                if (mb_check_encoding($string, $encoding)) {\n                    return $encoding;\n                }\n            }\n        }\n\n        if (function_exists('mb_detect_encoding')) {\n            if (empty($prio)) {\n                $prio = ['UTF-8', 'SJIS', 'GB2312',\n                    'ISO-8859-1', 'ISO-8859-2', 'ISO-8859-3', 'ISO-8859-4',\n                    'ISO-8859-5', 'ISO-8859-6', 'ISO-8859-7', 'ISO-8859-8', 'ISO-8859-9',\n                    'ISO-8859-10', 'ISO-8859-13', 'ISO-8859-14', 'ISO-8859-15', 'ISO-8859-16',\n                    'WINDOWS-1252', 'WINDOWS-1251', 'EUC-JP', 'EUC-TW', 'KOI8-R', 'BIG-5',\n                    'ISO-2022-KR', 'ISO-2022-JP',\n                ];\n            }\n\n            $encodings = array_unique(array_merge($prio, mb_list_encodings()));\n\n            if ($encoding = mb_detect_encoding($string, $encodings)) {\n                return $encoding;\n            }\n        }\n\n        // No match, check for UTF-8\n        // from http://w3.org/International/questions/qa-forms-utf-8.html\n        if (preg_match('/\\A(\n            [\\x09\\x0A\\x0D\\x20-\\x7E]\n            | [\\xC2-\\xDF][\\x80-\\xBF]\n            | \\xE0[\\xA0-\\xBF][\\x80-\\xBF]\n            | [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}\n            | \\xED[\\x80-\\x9F][\\x80-\\xBF]\n            | \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}\n            | [\\xF1-\\xF3][\\x80-\\xBF]{3}\n            | \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}\n            )*\\z/xs', substr($string, 0, 2048))\n        ) {\n            return 'UTF-8';\n        }\n\n        return $failover;\n    }\n\n    /**\n     * Removes non-unicode characters from input.\n     * If the input is an array, both values and keys will be cleaned up.\n     *\n     * @param mixed $input String or array.\n     *\n     * @return mixed String or array\n     */\n    public static function clean($input)\n    {\n        // handle input of type array\n        if (is_array($input)) {\n            foreach (array_keys($input) as $key) {\n                $k = is_string($key) ? self::clean($key) : $key;\n                $v = self::clean($input[$key]);\n\n                if ($k !== $key) {\n                    unset($input[$key]);\n                    if (!array_key_exists($k, $input)) {\n                        $input[$k] = $v;\n                    }\n                }\n                else {\n                    $input[$k] = $v;\n                }\n            }\n            return $input;\n        }\n\n        if (!is_string($input) || $input == '') {\n            return $input;\n        }\n\n        $msch = mb_substitute_character();\n        mb_substitute_character('none');\n        $res = mb_convert_encoding($input, 'UTF-8', 'UTF-8');\n        mb_substitute_character($msch);\n\n        return $res;\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube Webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n | Copyright (C) Kolab Systems AG                                        |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | PURPOSE:                                                              |\n |   IMAP Storage Engine                                                 |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Interface class for accessing an IMAP server\n *\n * @package    Framework\n * @subpackage Storage\n */\nclass rcube_imap extends rcube_storage\n{\n    /**\n     * Instance of rcube_imap_generic\n     *\n     * @var rcube_imap_generic\n     */\n    public $conn;\n\n    /**\n     * Instance of rcube_imap_cache\n     *\n     * @var rcube_imap_cache\n     */\n    protected $mcache;\n\n    /**\n     * Instance of rcube_cache\n     *\n     * @var rcube_cache\n     */\n    protected $cache;\n\n    protected $plugins;\n    protected $delimiter;\n    protected $namespace;\n    protected $struct_charset;\n    protected $search_set;\n    protected $search_string     = '';\n    protected $search_charset    = '';\n    protected $search_sort_field = '';\n    protected $search_threads    = false;\n    protected $search_sorted     = false;\n    protected $sort_field        = '';\n    protected $sort_order        = 'DESC';\n    protected $options           = ['auth_type' => 'check', 'skip_deleted' => false];\n    protected $caching           = false;\n    protected $messages_caching  = false;\n    protected $threading         = false;\n    protected $connect_done      = false;\n    protected $list_excludes     = [];\n    protected $list_root;\n    protected $msg_uid;\n    protected $sort_folder_collator;\n\n\n    /**\n     * Object constructor.\n     */\n    public function __construct()\n    {\n        $this->conn    = new rcube_imap_generic();\n        $this->plugins = rcube::get_instance()->plugins;\n\n        // Set namespace and delimiter from session,\n        // so some methods would work before connection\n        if (isset($_SESSION['imap_namespace'])) {\n            $this->namespace = $_SESSION['imap_namespace'];\n        }\n        if (isset($_SESSION['imap_delimiter'])) {\n            $this->delimiter = $_SESSION['imap_delimiter'];\n        }\n        if (!empty($_SESSION['imap_list_conf'])) {\n            list($this->list_root, $this->list_excludes) = $_SESSION['imap_list_conf'];\n        }\n    }\n\n    /**\n     * Magic getter for backward compat.\n     *\n     * @deprecated\n     */\n    public function __get($name)\n    {\n        if (isset($this->{$name})) {\n            return $this->{$name};\n        }\n    }\n\n    /**\n     * Connect to an IMAP server\n     *\n     * @param string  $host    Host to connect\n     * @param string  $user    Username for IMAP account\n     * @param string  $pass    Password for IMAP account\n     * @param integer $port    Port to connect to\n     * @param string  $use_ssl SSL schema (either ssl or tls) or null if plain connection\n     *\n     * @return bool True on success, False on failure\n     */\n    public function connect($host, $user, $pass, $port = 143, $use_ssl = null)\n    {\n        // check for OpenSSL support in PHP build\n        if ($use_ssl && extension_loaded('openssl')) {\n            $this->options['ssl_mode'] = $use_ssl == 'imaps' ? 'ssl' : $use_ssl;\n        }\n        else if ($use_ssl) {\n            rcube::raise_error([\n                    'code' => 403, 'type' => 'imap',\n                    'file' => __FILE__, 'line' => __LINE__,\n                    'message' => \"OpenSSL not available\"\n                ], true, false);\n\n            $port = 143;\n        }\n\n        $this->options['port'] = $port;\n\n        if (!empty($this->options['debug'])) {\n            $this->set_debug(true);\n\n            $this->options['ident'] = [\n                'name'    => 'Roundcube',\n                'version' => RCUBE_VERSION,\n                'php'     => PHP_VERSION,\n                'os'      => PHP_OS,\n                'command' => $_SERVER['REQUEST_URI'],\n            ];\n        }\n\n        $attempt = 0;\n        do {\n            $data = [\n                'host'    => $host,\n                'user'    => $user,\n                'attempt' => ++$attempt,\n                'retry'   => false\n            ];\n\n            $data = $this->plugins->exec_hook('storage_connect', array_merge($this->options, $data));\n\n            if ($attempt > 1 && !$data['retry']) {\n                $break;\n            }\n\n            if (!empty($data['pass'])) {\n                $pass = $data['pass'];\n            }\n\n            // Handle per-host socket options\n            if (isset($data['socket_options'])) {\n                rcube_utils::parse_socket_options($data['socket_options'], $data['host']);\n            }\n\n            $this->conn->connect($data['host'], $data['user'], $pass, $data);\n        } while(!$this->conn->connected() && $data['retry']);\n\n        $config = [\n            'host'     => $data['host'],\n            'user'     => $data['user'],\n            'password' => $pass,\n            'port'     => $port,\n            'ssl'      => $use_ssl,\n        ];\n\n        $this->options      = array_merge($this->options, $config);\n        $this->connect_done = true;\n\n        if ($this->conn->connected()) {\n            // check for session identifier\n            $session = null;\n            if (preg_match('/\\s+SESSIONID=([^=\\s]+)/', $this->conn->result, $m)) {\n                $session = $m[1];\n            }\n\n            // get namespace and delimiter\n            $this->set_env();\n\n            // trigger post-connect hook\n            $this->plugins->exec_hook('storage_connected', [\n                    'host' => $host, 'user' => $user, 'session' => $session\n            ]);\n\n            return true;\n        }\n        // write error log\n        else if ($this->conn->error) {\n            if ($pass && $user) {\n                $message = sprintf(\"Login failed for %s against %s from %s. %s\",\n                    $user, $host, rcube_utils::remote_ip(), $this->conn->error);\n\n                rcube::raise_error([\n                        'code' => 403, 'type' => 'imap',\n                        'file' => __FILE__, 'line' => __LINE__,\n                        'message' => $message\n                    ], true, false);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Close IMAP connection.\n     * Usually done on script shutdown\n     */\n    public function close()\n    {\n        $this->connect_done = false;\n        $this->conn->closeConnection();\n\n        if ($this->mcache) {\n            $this->mcache->close();\n        }\n    }\n\n    /**\n     * Check connection state, connect if not connected.\n     *\n     * @return bool Connection state.\n     */\n    public function check_connection()\n    {\n        // Establish connection if it wasn't done yet\n        if (!$this->connect_done && !empty($this->options['user'])) {\n            return $this->connect(\n                $this->options['host'],\n                $this->options['user'],\n                $this->options['password'],\n                $this->options['port'],\n                $this->options['ssl']\n            );\n        }\n\n        return $this->is_connected();\n    }\n\n    /**\n     * Checks IMAP connection.\n     *\n     * @return bool True on success, False on failure\n     */\n    public function is_connected()\n    {\n        return $this->conn->connected();\n    }\n\n    /**\n     * Returns code of last error\n     *\n     * @return int Error code\n     */\n    public function get_error_code()\n    {\n        return $this->conn->errornum;\n    }\n\n    /**\n     * Returns text of last error\n     *\n     * @return string Error string\n     */\n    public function get_error_str()\n    {\n        return $this->conn->error;\n    }\n\n    /**\n     * Returns code of last command response\n     *\n     * @return int Response code\n     */\n    public function get_response_code()\n    {\n        switch ($this->conn->resultcode) {\n            case 'NOPERM':\n                return self::NOPERM;\n            case 'READ-ONLY':\n                return self::READONLY;\n            case 'TRYCREATE':\n                return self::TRYCREATE;\n            case 'INUSE':\n                return self::INUSE;\n            case 'OVERQUOTA':\n                return self::OVERQUOTA;\n            case 'ALREADYEXISTS':\n                return self::ALREADYEXISTS;\n            case 'NONEXISTENT':\n                return self::NONEXISTENT;\n            case 'CONTACTADMIN':\n                return self::CONTACTADMIN;\n            default:\n                return self::UNKNOWN;\n        }\n    }\n\n    /**\n     * Activate/deactivate debug mode\n     *\n     * @param bool $dbg True if IMAP conversation should be logged\n     */\n    public function set_debug($dbg = true)\n    {\n        $this->options['debug'] = $dbg;\n        $this->conn->setDebug($dbg, [$this, 'debug_handler']);\n    }\n\n    /**\n     * Set internal folder reference.\n     * All operations will be performed on this folder.\n     *\n     * @param string $folder Folder name\n     */\n    public function set_folder($folder)\n    {\n        $this->folder = $folder;\n    }\n\n    /**\n     * Save a search result for future message listing methods\n     *\n     * @param array $set Search set, result from rcube_imap::get_search_set():\n     *                   0 - searching criteria, string\n     *                   1 - search result, rcube_result_index|rcube_result_thread\n     *                   2 - searching character set, string\n     *                   3 - sorting field, string\n     *                   4 - true if sorted, bool\n     */\n    public function set_search_set($set)\n    {\n        $set = (array) $set;\n\n        $this->search_string     = isset($set[0]) ? $set[0] : null;\n        $this->search_set        = isset($set[1]) ? $set[1] : null;\n        $this->search_charset    = isset($set[2]) ? $set[2] : null;\n        $this->search_sort_field = isset($set[3]) ? $set[3] : null;\n        $this->search_sorted     = isset($set[4]) ? $set[4] : null;\n        $this->search_threads    = is_a($this->search_set, 'rcube_result_thread');\n\n        if (is_a($this->search_set, 'rcube_result_multifolder')) {\n            $this->set_threading(false);\n        }\n    }\n\n    /**\n     * Return the saved search set as hash array\n     *\n     * @return array|null Search set\n     */\n    public function get_search_set()\n    {\n        if (empty($this->search_set)) {\n            return null;\n        }\n\n        return [\n            $this->search_string,\n            $this->search_set,\n            $this->search_charset,\n            $this->search_sort_field,\n            $this->search_sorted,\n        ];\n    }\n\n    /**\n     * Returns the IMAP server's capability.\n     *\n     * @param string $cap Capability name\n     *\n     * @return mixed Capability value or TRUE if supported, FALSE if not\n     */\n    public function get_capability($cap)\n    {\n        $cap      = strtoupper($cap);\n        $sess_key = \"STORAGE_$cap\";\n\n        if (!isset($_SESSION[$sess_key])) {\n            if (!$this->check_connection()) {\n                return false;\n            }\n\n            if ($cap == rcube_storage::DUAL_USE_FOLDERS) {\n                $_SESSION[$sess_key] = $this->detect_dual_use_folders();\n            }\n            else {\n                $_SESSION[$sess_key] = $this->conn->getCapability($cap);\n            }\n        }\n\n        return $_SESSION[$sess_key];\n    }\n\n    /**\n     * Checks the PERMANENTFLAGS capability of the current folder\n     * and returns true if the given flag is supported by the IMAP server\n     *\n     * @param string $flag Permanentflag name\n     *\n     * @return bool True if this flag is supported\n     */\n    public function check_permflag($flag)\n    {\n        $flag       = strtoupper($flag);\n        $perm_flags = $this->get_permflags($this->folder);\n        $imap_flag  = $this->conn->flags[$flag];\n\n        return $imap_flag && !empty($perm_flags) && in_array_nocase($imap_flag, $perm_flags);\n    }\n\n    /**\n     * Returns PERMANENTFLAGS of the specified folder\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Flags\n     */\n    public function get_permflags($folder)\n    {\n        if (!strlen($folder)) {\n            return [];\n        }\n\n        if (!$this->check_connection()) {\n            return [];\n        }\n\n        if ($this->conn->select($folder)) {\n            $permflags = $this->conn->data['PERMANENTFLAGS'];\n        }\n        else {\n            return [];\n        }\n\n        if (!isset($permflags) || !is_array($permflags)) {\n            $permflags = [];\n        }\n\n        return $permflags;\n    }\n\n    /**\n     * Returns the delimiter that is used by the IMAP server for folder separation\n     *\n     * @return string Delimiter string\n     */\n    public function get_hierarchy_delimiter()\n    {\n        return $this->delimiter;\n    }\n\n    /**\n     * Get namespace\n     *\n     * @param string $name Namespace array index: personal, other, shared, prefix\n     *\n     * @return array Namespace data\n     */\n    public function get_namespace($name = null)\n    {\n        $ns = $this->namespace;\n\n        if ($name) {\n            // an alias for BC\n            if ($name == 'prefix') {\n                $name = 'prefix_in';\n            }\n\n            return isset($ns[$name]) ? $ns[$name] : null;\n        }\n\n        unset($ns['prefix_in'], $ns['prefix_out']);\n\n        return $ns;\n    }\n\n    /**\n     * Sets delimiter and namespaces\n     */\n    protected function set_env()\n    {\n        if ($this->delimiter !== null && $this->namespace !== null) {\n            return;\n        }\n\n        $config         = rcube::get_instance()->config;\n        $imap_personal  = $config->get('imap_ns_personal');\n        $imap_other     = $config->get('imap_ns_other');\n        $imap_shared    = $config->get('imap_ns_shared');\n        $imap_delimiter = $config->get('imap_delimiter');\n\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        $ns = $this->conn->getNamespace();\n\n        // Set namespaces (NAMESPACE supported)\n        if (is_array($ns)) {\n            $this->namespace = $ns;\n        }\n        else {\n            $this->namespace = [\n                'personal' => null,\n                'other'    => null,\n                'shared'   => null,\n            ];\n        }\n\n        if ($imap_delimiter) {\n            $this->delimiter = $imap_delimiter;\n        }\n        if (empty($this->delimiter) && !empty($this->namespace['personal'][0][1])) {\n            $this->delimiter = $this->namespace['personal'][0][1];\n        }\n        if (empty($this->delimiter)) {\n            $this->delimiter = $this->conn->getHierarchyDelimiter();\n        }\n        if (empty($this->delimiter)) {\n            $this->delimiter = '/';\n        }\n\n        $this->list_root     = null;\n        $this->list_excludes = [];\n\n        // Overwrite namespaces\n        if ($imap_personal !== null) {\n            $this->namespace['personal'] = null;\n            foreach ((array) $imap_personal as $dir) {\n                $this->namespace['personal'][] = [$dir, $this->delimiter];\n            }\n        }\n\n        if ($imap_other === false) {\n            foreach ((array) $this->namespace['other'] as $dir) {\n                if (is_array($dir) && !empty($dir[0])) {\n                    $this->list_excludes[] = $dir[0];\n                }\n            }\n\n            $this->namespace['other'] = null;\n        }\n        else if ($imap_other !== null) {\n            $this->namespace['other'] = null;\n            foreach ((array) $imap_other as $dir) {\n                if ($dir) {\n                    $this->namespace['other'][] = [$dir, $this->delimiter];\n                }\n            }\n        }\n\n        if ($imap_shared === false) {\n            foreach ((array) $this->namespace['shared'] as $dir) {\n                if (is_array($dir) && !empty($dir[0])) {\n                    $this->list_excludes[] = $dir[0];\n                }\n            }\n\n            $this->namespace['shared'] = null;\n        }\n        else if ($imap_shared !== null) {\n            $this->namespace['shared'] = null;\n            foreach ((array) $imap_shared as $dir) {\n                if ($dir) {\n                    $this->namespace['shared'][] = [$dir, $this->delimiter];\n                }\n            }\n        }\n\n        // Performance optimization for case where we have no shared/other namespace\n        // and personal namespace has one prefix (#5073)\n        // In such a case we can tell the server to return only content of the\n        // specified folder in LIST/LSUB, no post-filtering\n        if (empty($this->namespace['other']) && empty($this->namespace['shared'])\n            && !empty($this->namespace['personal']) && count($this->namespace['personal']) === 1\n            && strlen($this->namespace['personal'][0][0]) > 1\n        ) {\n            $this->list_root     = $this->namespace['personal'][0][0];\n            $this->list_excludes = [];\n        }\n\n        // Find personal namespace prefix(es) for self::mod_folder()\n        if (!empty($this->namespace['personal']) && is_array($this->namespace['personal'])) {\n            // There can be more than one namespace root,\n            // - for prefix_out get the first one but only\n            //   if there is only one root\n            // - for prefix_in get the first one but only\n            //   if there is no non-prefixed namespace root (#5403)\n            $roots = [];\n            foreach ($this->namespace['personal'] as $ns) {\n                $roots[] = $ns[0];\n            }\n\n            if (!in_array('', $roots)) {\n                $this->namespace['prefix_in'] = $roots[0];\n            }\n            if (count($roots) == 1) {\n                $this->namespace['prefix_out'] = $roots[0];\n            }\n        }\n\n        $_SESSION['imap_namespace'] = $this->namespace;\n        $_SESSION['imap_delimiter'] = $this->delimiter;\n        $_SESSION['imap_list_conf'] = [$this->list_root, $this->list_excludes];\n    }\n\n    /**\n     * Returns IMAP server vendor name\n     *\n     * @return string Vendor name\n     * @since 1.2\n     */\n    public function get_vendor()\n    {\n        if (isset($_SESSION['imap_vendor'])) {\n            return $_SESSION['imap_vendor'];\n        }\n\n        $config      = rcube::get_instance()->config;\n        $imap_vendor = $config->get('imap_vendor');\n\n        if ($imap_vendor) {\n            return $imap_vendor;\n        }\n\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        if (isset($this->conn->data['ID'])) {\n            $ident = $this->conn->data['ID'];\n        }\n        else if ($this->get_capability('ID')) {\n            $ident = $this->conn->id([\n                    'name'    => 'Roundcube',\n                    'version' => RCUBE_VERSION,\n                    'php'     => PHP_VERSION,\n                    'os'      => PHP_OS,\n            ]);\n        }\n        else {\n            $ident = null;\n        }\n\n        $vendor  = (string) (!empty($ident) ? $ident['name'] : '');\n        $ident   = strtolower($vendor . ' ' . $this->conn->data['GREETING']);\n        $vendors = ['cyrus', 'dovecot', 'uw-imap', 'gimap', 'hmail', 'greenmail'];\n\n        foreach ($vendors as $v) {\n            if (strpos($ident, $v) !== false) {\n                $vendor = $v;\n                break;\n            }\n        }\n\n        return $_SESSION['imap_vendor'] = $vendor;\n    }\n\n    /**\n     * Get message count for a specific folder\n     *\n     * @param string $folder  Folder name\n     * @param string $mode    Mode for count [ALL|THREADS|UNSEEN|RECENT|EXISTS]\n     * @param bool   $force   Force reading from server and update cache\n     * @param bool   $status  Enables storing folder status info (max UID/count),\n     *                        required for folder_status()\n     *\n     * @return int Number of messages\n     */\n    public function count($folder = '', $mode = 'ALL', $force = false, $status = true)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        return $this->countmessages($folder, $mode, $force, $status);\n    }\n\n    /**\n     * Protected method for getting number of messages\n     *\n     * @param string $folder    Folder name\n     * @param string $mode      Mode for count [ALL|THREADS|UNSEEN|RECENT|EXISTS]\n     * @param bool   $force     Force reading from server and update cache\n     * @param bool   $status    Enables storing folder status info (max UID/count),\n     *                          required for folder_status()\n     * @param bool   $no_search Ignore current search result\n     *\n     * @return int Number of messages\n     * @see rcube_imap::count()\n     */\n    protected function countmessages($folder, $mode = 'ALL', $force = false, $status = true, $no_search = false)\n    {\n        $mode = strtoupper($mode);\n\n        // Count search set, assume search set is always up-to-date (don't check $force flag)\n        // @TODO: this could be handled in more reliable way, e.g. a separate method\n        //        maybe in rcube_imap_search\n        if (!$no_search && $this->search_string && $folder == $this->folder) {\n            if ($mode == 'ALL') {\n                return $this->search_set->count_messages();\n            }\n            if ($mode == 'THREADS') {\n                return $this->search_set->count();\n            }\n        }\n\n        // EXISTS is a special alias for ALL, it allows to get the number\n        // of all messages in a folder also when search is active and with\n        // any skip_deleted setting\n\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        // return cached value\n        if (!$force && isset($a_folder_cache[$folder][$mode])) {\n            return $a_folder_cache[$folder][$mode];\n        }\n\n        if (!isset($a_folder_cache[$folder]) || !is_array($a_folder_cache[$folder])) {\n            $a_folder_cache[$folder] = [];\n        }\n\n        if ($mode == 'THREADS') {\n            $res   = $this->threads($folder);\n            $count = $res->count();\n\n            if ($status) {\n                $msg_count = $res->count_messages();\n                $this->set_folder_stats($folder, 'cnt', $msg_count);\n                $this->set_folder_stats($folder, 'maxuid', $msg_count ? $this->id2uid($msg_count, $folder) : 0);\n            }\n        }\n        // Need connection here\n        else if (!$this->check_connection()) {\n            return 0;\n        }\n        // RECENT count is fetched a bit different\n        else if ($mode == 'RECENT') {\n            $count = $this->conn->countRecent($folder);\n        }\n        // use SEARCH for message counting\n        else if ($mode != 'EXISTS' && !empty($this->options['skip_deleted'])) {\n            $search_str = \"ALL UNDELETED\";\n            $keys       = ['COUNT'];\n\n            if ($mode == 'UNSEEN') {\n                $search_str .= \" UNSEEN\";\n            }\n            else {\n                if ($this->messages_caching) {\n                    $keys[] = 'ALL';\n                }\n                if ($status) {\n                    $keys[] = 'MAX';\n                }\n            }\n\n            // @TODO: if $mode == 'ALL' we could try to use cache index here\n\n            // get message count using (E)SEARCH\n            // not very performant but more precise (using UNDELETED)\n            $index = $this->conn->search($folder, $search_str, true, $keys);\n            $count = $index->count();\n\n            if ($mode == 'ALL') {\n                // Cache index data, will be used in index_direct()\n                $this->icache['undeleted_idx'] = $index;\n\n                if ($status) {\n                    $this->set_folder_stats($folder, 'cnt', $count);\n                    $this->set_folder_stats($folder, 'maxuid', $index->max());\n                }\n            }\n        }\n        else {\n            if ($mode == 'UNSEEN') {\n                $count = $this->conn->countUnseen($folder);\n            }\n            else {\n                $count = $this->conn->countMessages($folder);\n                if ($status && $mode == 'ALL') {\n                    $this->set_folder_stats($folder, 'cnt', $count);\n                    $this->set_folder_stats($folder, 'maxuid', $count ? $this->id2uid($count, $folder) : 0);\n                }\n            }\n        }\n\n        $count = (int) $count;\n\n        if (!isset($a_folder_cache[$folder][$mode]) || $a_folder_cache[$folder][$mode] !== $count) {\n            $a_folder_cache[$folder][$mode] = $count;\n\n            // write back to cache\n            $this->update_cache('messagecount', $a_folder_cache);\n        }\n\n        return $count;\n    }\n\n    /**\n     * Public method for listing message flags\n     *\n     * @param string $folder  Folder name\n     * @param array  $uids    Message UIDs\n     * @param int    $mod_seq Optional MODSEQ value (of last flag update)\n     *\n     * @return array Indexed array with message flags\n     */\n    public function list_flags($folder, $uids, $mod_seq = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return [];\n        }\n\n        // @TODO: when cache was synchronized in this request\n        // we might already have asked for flag updates, use it.\n\n        $flags  = $this->conn->fetch($folder, $uids, true, ['FLAGS'], $mod_seq);\n        $result = [];\n\n        if (!empty($flags)) {\n            foreach ($flags as $message) {\n                $result[$message->uid] = $message->flags;\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Public method for listing headers\n     *\n     * @param string $folder     Folder name\n     * @param int    $page       Current page to list\n     * @param string $sort_field Header field to sort by\n     * @param string $sort_order Sort order [ASC|DESC]\n     * @param int    $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     */\n    public function list_messages($folder = '', $page = null, $sort_field = null, $sort_order = null, $slice = 0)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        return $this->_list_messages($folder, $page, $sort_field, $sort_order, $slice);\n    }\n\n    /**\n     * protected method for listing message headers\n     *\n     * @param   string   $folder     Folder name\n     * @param   int      $page       Current page to list\n     * @param   string   $sort_field Header field to sort by\n     * @param   string   $sort_order Sort order [ASC|DESC]\n     * @param   int      $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_messages\n     */\n    protected function _list_messages($folder = '', $page = null, $sort_field = null, $sort_order = null, $slice = 0)\n    {\n        if (!strlen($folder)) {\n            return [];\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n        $page = $page ?: $this->list_page;\n\n        // use saved message set\n        if ($this->search_string) {\n            return $this->list_search_messages($folder, $page, $slice);\n        }\n\n        if ($this->threading) {\n            return $this->list_thread_messages($folder, $page, $slice);\n        }\n\n        // get UIDs of all messages in the folder, sorted\n        $index = $this->index($folder, $this->sort_field, $this->sort_order);\n\n        if ($index->is_empty()) {\n            return [];\n        }\n\n        $from = ($page-1) * $this->page_size;\n        $to   = $from + $this->page_size;\n\n        $index->slice($from, $to - $from);\n\n        if ($slice) {\n            $index->slice(-$slice, $slice);\n        }\n\n        // fetch requested messages headers\n        $a_index = $index->get();\n        $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n        return array_values($a_msg_headers);\n    }\n\n    /**\n     * protected method for listing message headers using threads\n     *\n     * @param string $folder Folder name\n     * @param int    $page   Current page to list\n     * @param int    $slice  Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_messages\n     */\n    protected function list_thread_messages($folder, $page, $slice = 0)\n    {\n        // get all threads (not sorted)\n        if ($mcache = $this->get_mcache_engine()) {\n            $threads = $mcache->get_thread($folder);\n        }\n        else {\n            $threads = $this->threads($folder);\n        }\n\n        return $this->fetch_thread_headers($folder, $threads, $page, $slice);\n    }\n\n    /**\n     * Method for fetching threads data\n     *\n     * @param string $folder Folder name\n     *\n     * @return rcube_result_thread Thread data object\n     */\n    function threads($folder)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            // don't store in self's internal cache, cache has it's own internal cache\n            return $mcache->get_thread($folder);\n        }\n\n        if (!empty($this->icache['threads'])) {\n            if ($this->icache['threads']->get_parameters('MAILBOX') == $folder) {\n                return $this->icache['threads'];\n            }\n        }\n\n        // get all threads\n        $result = $this->threads_direct($folder);\n\n        // add to internal (fast) cache\n        return $this->icache['threads'] = $result;\n    }\n\n    /**\n     * Method for direct fetching of threads data\n     *\n     * @param string $folder Folder name\n     *\n     * @return rcube_result_thread Thread data object\n     */\n    function threads_direct($folder)\n    {\n        if (!$this->check_connection()) {\n            return new rcube_result_thread();\n        }\n\n        // get all threads\n        return $this->conn->thread($folder, $this->threading,\n            $this->options['skip_deleted'] ? 'UNDELETED' : '', true);\n    }\n\n    /**\n     * protected method for fetching threaded messages headers\n     *\n     * @param string              $folder     Folder name\n     * @param rcube_result_thread $threads    Threads data object\n     * @param int                 $page       List page number\n     * @param int                 $slice      Number of threads to slice\n     *\n     * @return array Messages headers\n     */\n    protected function fetch_thread_headers($folder, $threads, $page, $slice = 0)\n    {\n        // Sort thread structure\n        $this->sort_threads($threads);\n\n        $from = ($page-1) * $this->page_size;\n        $to   = $from + $this->page_size;\n\n        $threads->slice($from, $to - $from);\n\n        if ($slice) {\n            $threads->slice(-$slice, $slice);\n        }\n\n        // Get UIDs of all messages in all threads\n        $a_index = $threads->get();\n\n        // fetch requested headers from server\n        $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n        unset($a_index);\n\n        // Set depth, has_children and unread_children fields in headers\n        $this->set_thread_flags($a_msg_headers, $threads);\n\n        return array_values($a_msg_headers);\n    }\n\n    /**\n     * protected method for setting threaded messages flags:\n     * depth, has_children, unread_children, flagged_children\n     *\n     * @param array               $headers  Reference to headers array indexed by message UID\n     * @param rcube_result_thread $threads  Threads data object\n     *\n     * @return array Message headers array indexed by message UID\n     */\n    protected function set_thread_flags(&$headers, $threads)\n    {\n        $parents = [];\n\n        list($msg_depth, $msg_children) = $threads->get_thread_data();\n\n        foreach ($headers as $uid => $header) {\n            $depth = $msg_depth[$uid];\n            $parents = array_slice($parents, 0, $depth);\n\n            if (!empty($parents)) {\n                $headers[$uid]->parent_uid = end($parents);\n                if (empty($header->flags['SEEN'])) {\n                    $headers[$parents[0]]->unread_children++;\n                }\n                if (!empty($header->flags['FLAGGED'])) {\n                    $headers[$parents[0]]->flagged_children++;\n                }\n            }\n\n            array_push($parents, $uid);\n\n            $headers[$uid]->depth            = $depth;\n            $headers[$uid]->has_children     = $msg_children[$uid];\n            $headers[$uid]->unread_children  = 0;\n            $headers[$uid]->flagged_children = 0;\n        }\n    }\n\n    /**\n     * A protected method for listing a set of message headers (search results)\n     *\n     * @param string $folder Folder name\n     * @param int    $page   Current page to list\n     * @param int    $slice  Number of slice items to extract from the result array\n     *\n     * @return array Indexed array with message header objects\n     */\n    protected function list_search_messages($folder, $page, $slice = 0)\n    {\n        if (!strlen($folder) || empty($this->search_set) || $this->search_set->is_empty()) {\n            return [];\n        }\n\n        $from = ($page-1) * $this->page_size;\n\n        // gather messages from a multi-folder search\n        if (!empty($this->search_set->multi)) {\n            $page_size  = $this->page_size;\n            $sort_field = $this->sort_field;\n            $search_set = $this->search_set;\n\n            // fetch resultset headers, sort and slice them\n            if (!empty($sort_field) && $search_set->get_parameters('SORT') != $sort_field) {\n                $this->sort_field = null;\n                $this->page_size  = 1000;  // fetch up to 1000 matching messages per folder\n                $this->threading  = false;\n\n                $a_msg_headers = [];\n                foreach ($search_set->sets as $resultset) {\n                    if (!$resultset->is_empty()) {\n                        $this->search_set     = $resultset;\n                        $this->search_threads = $resultset instanceof rcube_result_thread;\n\n                        $a_headers     =  $this->list_search_messages($resultset->get_parameters('MAILBOX'), 1);\n                        $a_msg_headers = array_merge($a_msg_headers, $a_headers);\n                        unset($a_headers);\n                    }\n                }\n\n                // sort headers\n                if (!empty($a_msg_headers)) {\n                    $a_msg_headers = rcube_imap_generic::sortHeaders($a_msg_headers, $sort_field, $this->sort_order);\n                }\n\n                // store (sorted) message index\n                $search_set->set_message_index($a_msg_headers, $sort_field, $this->sort_order);\n\n                // only return the requested part of the set\n                $a_msg_headers = array_slice(array_values($a_msg_headers), $from, $page_size);\n            }\n            else {\n                if ($this->sort_order != $search_set->get_parameters('ORDER')) {\n                    $search_set->revert();\n                }\n\n                // slice resultset first...\n                $index = array_slice($search_set->get(), $from, $page_size);\n                $fetch = [];\n\n                foreach ($index as $msg_id) {\n                    list($uid, $folder) = explode('-', $msg_id, 2);\n                    $fetch[$folder][] = $uid;\n                }\n\n                // ... and fetch the requested set of headers\n                $a_msg_headers = [];\n                foreach ($fetch as $folder => $a_index) {\n                    $a_msg_headers = array_merge($a_msg_headers, array_values($this->fetch_headers($folder, $a_index)));\n                }\n\n                // Re-sort the result according to the original search set order\n                usort($a_msg_headers, function($a, $b) use ($index) {\n                    return array_search($a->uid . '-' . $a->folder, $index) - array_search($b->uid . '-' . $b->folder, $index);\n                });\n            }\n\n            if ($slice) {\n                $a_msg_headers = array_slice($a_msg_headers, -$slice, $slice);\n            }\n\n            // restore members\n            $this->sort_field = $sort_field;\n            $this->page_size  = $page_size;\n            $this->search_set = $search_set;\n\n            return $a_msg_headers;\n        }\n\n        // use saved messages from searching\n        if ($this->threading) {\n            return $this->list_search_thread_messages($folder, $page, $slice);\n        }\n\n        // search set is threaded, we need a new one\n        if ($this->search_threads) {\n            $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n        }\n\n        $index = clone $this->search_set;\n\n        // return empty array if no messages found\n        if ($index->is_empty()) {\n            return [];\n        }\n\n        // quickest method (default sorting)\n        if (!$this->search_sort_field && !$this->sort_field) {\n            $got_index = true;\n        }\n        // sorted messages, so we can first slice array and then fetch only wanted headers\n        else if ($this->search_sorted) { // SORT searching result\n            $got_index = true;\n            // reset search set if sorting field has been changed\n            if ($this->sort_field && $this->search_sort_field != $this->sort_field) {\n                $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n\n                $index = clone $this->search_set;\n\n                // return empty array if no messages found\n                if ($index->is_empty()) {\n                    return [];\n                }\n            }\n        }\n\n        if (!empty($got_index)) {\n            if ($this->sort_order != $index->get_parameters('ORDER')) {\n                $index->revert();\n            }\n\n            // get messages uids for one page\n            $index->slice($from, $this->page_size);\n\n            if ($slice) {\n                $index->slice(-$slice, $slice);\n            }\n\n            // fetch headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n            return array_values($a_msg_headers);\n        }\n\n        // SEARCH result, need sorting\n        $cnt = $index->count();\n\n        // 300: experimental value for best result\n        if (($cnt > 300 && $cnt > $this->page_size) || !$this->sort_field) {\n            // use memory less expensive (and quick) method for big result set\n            $index = clone $this->index('', $this->sort_field, $this->sort_order);\n            // get messages uids for one page...\n            $index->slice($from, $this->page_size);\n\n            if ($slice) {\n                $index->slice(-$slice, $slice);\n            }\n\n            // ...and fetch headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index);\n\n            return array_values($a_msg_headers);\n        }\n        else {\n            // for small result set we can fetch all messages headers\n            $a_index       = $index->get();\n            $a_msg_headers = $this->fetch_headers($folder, $a_index, false);\n\n            // return empty array if no messages found\n            if (!is_array($a_msg_headers) || empty($a_msg_headers)) {\n                return [];\n            }\n\n            // if not already sorted\n            $a_msg_headers = rcube_imap_generic::sortHeaders(\n                $a_msg_headers, $this->sort_field, $this->sort_order);\n\n            $a_msg_headers = array_slice(array_values($a_msg_headers), $from, $this->page_size);\n\n            if ($slice) {\n                $a_msg_headers = array_slice($a_msg_headers, -$slice, $slice);\n            }\n\n            return $a_msg_headers;\n        }\n    }\n\n    /**\n     * protected method for listing a set of threaded message headers (search results)\n     *\n     * @param   string   $folder     Folder name\n     * @param   int      $page       Current page to list\n     * @param   int      $slice      Number of slice items to extract from result array\n     *\n     * @return array Indexed array with message header objects\n     * @see rcube_imap::list_search_messages()\n     */\n    protected function list_search_thread_messages($folder, $page, $slice = 0)\n    {\n        // update search_set if previous data was fetched with disabled threading\n        if (!$this->search_threads) {\n            if ($this->search_set->is_empty()) {\n                return [];\n            }\n            $this->search('', $this->search_string, $this->search_charset, $this->sort_field);\n        }\n\n        return $this->fetch_thread_headers($folder, clone $this->search_set, $page, $slice);\n    }\n\n    /**\n     * Fetches messages headers (by UID)\n     *\n     * @param  string  $folder   Folder name\n     * @param  array   $msgs     Message UIDs\n     * @param  bool    $sort     Enables result sorting by $msgs\n     * @param  bool    $force    Disables cache use\n     *\n     * @return array Messages headers indexed by UID\n     */\n    function fetch_headers($folder, $msgs, $sort = true, $force = false)\n    {\n        if (empty($msgs)) {\n            return [];\n        }\n\n        if (!$force && ($mcache = $this->get_mcache_engine())) {\n            $headers = $mcache->get_messages($folder, $msgs);\n        }\n        else if (!$this->check_connection()) {\n            return [];\n        }\n        else {\n            // fetch requested headers from server\n            $headers = $this->conn->fetchHeaders(\n                $folder, $msgs, true, false, $this->get_fetch_headers());\n        }\n\n        if (empty($headers)) {\n            return [];\n        }\n\n        $msg_headers = [];\n        foreach ($headers as $h) {\n            $h->folder = $folder;\n            $msg_headers[$h->uid] = $h;\n        }\n\n        if ($sort) {\n            // use this class for message sorting\n            $sorter = new rcube_message_header_sorter();\n            $sorter->set_index($msgs);\n            $sorter->sort_headers($msg_headers);\n        }\n\n        return $msg_headers;\n    }\n\n    /**\n     * Returns current status of a folder (compared to the last time use)\n     *\n     * We compare the maximum UID to determine the number of\n     * new messages because the RECENT flag is not reliable.\n     *\n     * @param string $folder Folder name\n     * @param array  $diff   Difference data\n     *\n     * @return int Folder status\n     */\n    public function folder_status($folder = null, &$diff = [])\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        $old = $this->get_folder_stats($folder);\n\n        // refresh message count -> will update\n        $this->countmessages($folder, 'ALL', true, true, true);\n\n        $result = 0;\n\n        if (empty($old)) {\n            return $result;\n        }\n\n        $new = $this->get_folder_stats($folder);\n\n        // got new messages\n        if ($new['maxuid'] > $old['maxuid']) {\n            $result += 1;\n            // get new message UIDs range, that can be used for example\n            // to get the data of these messages\n            $diff['new'] = ($old['maxuid'] + 1 < $new['maxuid'] ? ($old['maxuid']+1).':' : '') . $new['maxuid'];\n        }\n\n        // some messages has been deleted\n        if ($new['cnt'] < $old['cnt']) {\n            $result += 2;\n        }\n\n        // @TODO: optional checking for messages flags changes (?)\n        // @TODO: UIDVALIDITY checking\n\n        return $result;\n    }\n\n    /**\n     * Stores folder statistic data in session\n     * @TODO: move to separate DB table (cache?)\n     *\n     * @param string $folder  Folder name\n     * @param string $name    Data name\n     * @param mixed  $data    Data value\n     */\n    protected function set_folder_stats($folder, $name, $data)\n    {\n        $_SESSION['folders'][$folder][$name] = $data;\n    }\n\n    /**\n     * Gets folder statistic data\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Stats data\n     */\n    protected function get_folder_stats($folder)\n    {\n        if (isset($_SESSION['folders'][$folder])) {\n            return (array) $_SESSION['folders'][$folder];\n        }\n\n        return [];\n    }\n\n    /**\n     * Return sorted list of message UIDs\n     *\n     * @param string $folder     Folder to get index from\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order [ASC, DESC]\n     * @param bool   $no_threads Get not threaded index\n     * @param bool   $no_search  Get index not limited to search result (optionally)\n     *\n     * @return rcube_result_index|rcube_result_thread List of messages (UIDs)\n     */\n    public function index($folder = '', $sort_field = null, $sort_order = null,\n        $no_threads = false, $no_search = false\n    ) {\n        if (!$no_threads && $this->threading) {\n            return $this->thread_index($folder, $sort_field, $sort_order);\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // we have a saved search result, get index from there\n        if ($this->search_string) {\n            if ($this->search_set->is_empty()) {\n                return new rcube_result_index($folder, '* SORT');\n            }\n\n            if ($this->search_set instanceof rcube_result_multifolder) {\n                $index = $this->search_set;\n                $index->folder = $folder;\n                // TODO: handle changed sorting\n            }\n            // search result is an index with the same sorting?\n            else if (($this->search_set instanceof rcube_result_index)\n                && ((!$this->sort_field && !$this->search_sorted) ||\n                    ($this->search_sorted && $this->search_sort_field == $this->sort_field))\n            ) {\n                $index = $this->search_set;\n            }\n            // $no_search is enabled when we are not interested in\n            // fetching index for search result, e.g. to sort\n            // threaded search result we can use full mailbox index.\n            // This makes possible to use index from cache\n            else if (!$no_search) {\n                if (!$this->sort_field) {\n                    // No sorting needed, just build index from the search result\n                    // @TODO: do we need to sort by UID here?\n                    $search = $this->search_set->get_compressed();\n                    $index  = new rcube_result_index($folder, '* ESEARCH ALL ' . $search);\n                }\n                else {\n                    $index = $this->index_direct($folder, $this->sort_field, $this->sort_order, $this->search_set);\n                }\n            }\n\n            if (isset($index)) {\n                if ($this->sort_order != $index->get_parameters('ORDER')) {\n                    $index->revert();\n                }\n\n                return $index;\n            }\n        }\n\n        // check local cache\n        if ($mcache = $this->get_mcache_engine()) {\n            return $mcache->get_index($folder, $this->sort_field, $this->sort_order);\n        }\n\n        // fetch from IMAP server\n        return $this->index_direct($folder, $this->sort_field, $this->sort_order);\n    }\n\n    /**\n     * Return sorted list of message UIDs ignoring current search settings.\n     * Doesn't uses cache by default.\n     *\n     * @param string         $folder     Folder to get index from\n     * @param string         $sort_field Sort column\n     * @param string         $sort_order Sort order [ASC, DESC]\n     * @param rcube_result_* $search     Optional messages set to limit the result\n     *\n     * @return rcube_result_index Sorted list of message UIDs\n     */\n    public function index_direct($folder, $sort_field = null, $sort_order = null, $search = null)\n    {\n        if (!empty($search)) {\n            $search = $search->get_compressed();\n        }\n\n        // use message index sort as default sorting\n        if (!$sort_field) {\n            // use search result from count() if possible\n            if (empty($search) && $this->options['skip_deleted']\n                && !empty($this->icache['undeleted_idx'])\n                && $this->icache['undeleted_idx']->get_parameters('ALL') !== null\n                && $this->icache['undeleted_idx']->get_parameters('MAILBOX') == $folder\n            ) {\n                $index = $this->icache['undeleted_idx'];\n            }\n            else if (!$this->check_connection()) {\n                return new rcube_result_index();\n            }\n            else {\n                $query = $this->options['skip_deleted'] ? 'UNDELETED' : '';\n                if ($search) {\n                    $query = trim($query . ' UID ' . $search);\n                }\n\n                $index = $this->conn->search($folder, $query, true);\n            }\n        }\n        else if (!$this->check_connection()) {\n            return new rcube_result_index();\n        }\n        // fetch complete message index\n        else {\n            if ($this->get_capability('SORT')) {\n                $query = $this->options['skip_deleted'] ? 'UNDELETED' : '';\n                if ($search) {\n                    $query = trim($query . ' UID ' . $search);\n                }\n\n                $index = $this->conn->sort($folder, $sort_field, $query, true);\n            }\n\n            if (empty($index) || $index->is_error()) {\n                $index = $this->conn->index($folder, $search ? $search : \"1:*\",\n                    $sort_field, $this->options['skip_deleted'],\n                    $search ? true : false, true);\n            }\n        }\n\n        if ($sort_order != $index->get_parameters('ORDER')) {\n            $index->revert();\n        }\n\n        return $index;\n    }\n\n    /**\n     * Return index of threaded message UIDs\n     *\n     * @param string $folder     Folder to get index from\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order [ASC, DESC]\n     *\n     * @return rcube_result_thread Message UIDs\n     */\n    public function thread_index($folder = '', $sort_field = null, $sort_order = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // we have a saved search result, get index from there\n        if ($this->search_string && $this->search_threads && $folder == $this->folder) {\n            $threads = $this->search_set;\n        }\n        else {\n            // get all threads (default sort order)\n            $threads = $this->threads($folder);\n        }\n\n        $this->set_sort_order($sort_field, $sort_order);\n        $this->sort_threads($threads);\n\n        return $threads;\n    }\n\n    /**\n     * Sort threaded result, using THREAD=REFS method if available.\n     * If not, use any method and re-sort the result in THREAD=REFS way.\n     *\n     * @param rcube_result_thread $threads Threads result set\n     */\n    protected function sort_threads($threads)\n    {\n        if ($threads->is_empty()) {\n            return;\n        }\n\n        // THREAD=ORDEREDSUBJECT: sorting by sent date of root message\n        // THREAD=REFERENCES:     sorting by sent date of root message\n        // THREAD=REFS:           sorting by the most recent date in each thread\n\n        if ($this->threading != 'REFS' || ($this->sort_field && $this->sort_field != 'date')) {\n            $sortby = $this->sort_field ?: 'date';\n            $index  = $this->index($this->folder, $sortby, $this->sort_order, true, true);\n\n            if (!$index->is_empty()) {\n                $threads->sort($index);\n            }\n        }\n        else if ($this->sort_order != $threads->get_parameters('ORDER')) {\n            $threads->revert();\n        }\n    }\n\n    /**\n     * Invoke search request to IMAP server\n     *\n     * @param  string  $folder     Folder name to search in\n     * @param  string  $search     Search criteria\n     * @param  string  $charset    Search charset\n     * @param  string  $sort_field Header field to sort by\n     *\n     * @return rcube_result_index  Search result object\n     * @todo: Search criteria should be provided in non-IMAP format, e.g. array\n     */\n    public function search($folder = '', $search = 'ALL', $charset = null, $sort_field = null)\n    {\n        if (!$search) {\n            $search = 'ALL';\n        }\n\n        if ((is_array($folder) && empty($folder)) || (!is_array($folder) && !strlen($folder))) {\n            $folder = $this->folder;\n        }\n\n        $plugin = $this->plugins->exec_hook('imap_search_before', [\n                'folder'     => $folder,\n                'search'     => $search,\n                'charset'    => $charset,\n                'sort_field' => $sort_field,\n                'threading'  => $this->threading,\n                'result'     => null,\n        ]);\n\n        $folder     = $plugin['folder'];\n        $search     = $plugin['search'];\n        $charset    = $plugin['charset'];\n        $sort_field = $plugin['sort_field'];\n        $results    = $plugin['result'];\n\n        // multi-folder search\n        if (!$results && is_array($folder) && count($folder) > 1 && $search != 'ALL') {\n            // connect IMAP to have all the required classes and settings loaded\n            $this->check_connection();\n\n            // disable threading\n            $this->threading = false;\n\n            $searcher = new rcube_imap_search($this->options, $this->conn);\n\n            // set limit to not exceed the client's request timeout\n            $searcher->set_timelimit(60);\n\n            // continue existing incomplete search\n            if (!empty($this->search_set) && $this->search_set->incomplete && $search == $this->search_string) {\n                $searcher->set_results($this->search_set);\n            }\n\n            // execute the search\n            $results = $searcher->exec(\n                $folder,\n                $search,\n                $charset ? $charset : $this->default_charset,\n                $sort_field && $this->get_capability('SORT') ? $sort_field : null,\n                $this->threading\n            );\n        }\n        else if (!$results) {\n            $folder  = is_array($folder) ? $folder[0] : $folder;\n            $search  = is_array($search) ? $search[$folder] : $search;\n            $results = $this->search_index($folder, $search, $charset, $sort_field);\n        }\n\n        $sorted = $this->threading || $this->search_sorted || !empty($plugin['search_sorted']);\n\n        $this->set_search_set([$search, $results, $charset, $sort_field, $sorted]);\n\n        return $results;\n    }\n\n    /**\n     * Direct (real and simple) SEARCH request (without result sorting and caching).\n     *\n     * @param  string  $mailbox Mailbox name to search in\n     * @param  string  $str     Search string\n     *\n     * @return rcube_result_index  Search result (UIDs)\n     */\n    public function search_once($folder = null, $str = 'ALL')\n    {\n        if (!$this->check_connection()) {\n            return new rcube_result_index();\n        }\n\n        if (!$str) {\n            $str = 'ALL';\n        }\n\n        // multi-folder search\n        if (is_array($folder) && count($folder) > 1) {\n            $searcher = new rcube_imap_search($this->options, $this->conn);\n            $index = $searcher->exec($folder, $str, $this->default_charset);\n        }\n        else {\n            $folder = is_array($folder) ? $folder[0] : $folder;\n            if (!strlen($folder)) {\n                $folder = $this->folder;\n            }\n            $index = $this->conn->search($folder, $str, true);\n        }\n\n        return $index;\n    }\n\n    /**\n     * protected search method\n     *\n     * @param string $folder     Folder name\n     * @param string $criteria   Search criteria\n     * @param string $charset    Charset\n     * @param string $sort_field Sorting field\n     *\n     * @return rcube_result_index|rcube_result_thread  Search results (UIDs)\n     * @see rcube_imap::search()\n     */\n    protected function search_index($folder, $criteria = 'ALL', $charset = null, $sort_field = null)\n    {\n        if (!$this->check_connection()) {\n            if ($this->threading) {\n                return new rcube_result_thread();\n            }\n            else {\n                return new rcube_result_index();\n            }\n        }\n\n        if ($this->options['skip_deleted'] && !preg_match('/UNDELETED/', $criteria)) {\n            $criteria = 'UNDELETED '.$criteria;\n        }\n\n        // unset CHARSET if criteria string is ASCII, this way\n        // SEARCH won't be re-sent after \"unsupported charset\" response\n        if ($charset && $charset != 'US-ASCII' && is_ascii($criteria)) {\n            $charset = 'US-ASCII';\n        }\n\n        if ($this->threading) {\n            $threads = $this->conn->thread($folder, $this->threading, $criteria, true, $charset);\n\n            // Error, try with US-ASCII (RFC5256: SORT/THREAD must support US-ASCII and UTF-8,\n            // but I've seen that Courier doesn't support UTF-8)\n            if ($threads->is_error() && $charset && $charset != 'US-ASCII') {\n                $threads = $this->conn->thread($folder, $this->threading,\n                    self::convert_criteria($criteria, $charset), true, 'US-ASCII');\n            }\n\n            return $threads;\n        }\n\n        if ($sort_field && $this->get_capability('SORT')) {\n            $charset  = $charset ?: $this->default_charset;\n            $messages = $this->conn->sort($folder, $sort_field, $criteria, true, $charset);\n\n            // Error, try with US-ASCII (RFC5256: SORT/THREAD must support US-ASCII and UTF-8,\n            // but I've seen Courier with disabled UTF-8 support)\n            if ($messages->is_error() && $charset && $charset != 'US-ASCII') {\n                $messages = $this->conn->sort($folder, $sort_field,\n                    self::convert_criteria($criteria, $charset), true, 'US-ASCII');\n            }\n\n            if (!$messages->is_error()) {\n                $this->search_sorted = true;\n                return $messages;\n            }\n        }\n\n        $messages = $this->conn->search($folder,\n            ($charset && $charset != 'US-ASCII' ? \"CHARSET $charset \" : '') . $criteria, true);\n\n        // Error, try with US-ASCII (some servers may support only US-ASCII)\n        if ($messages->is_error() && $charset && $charset != 'US-ASCII') {\n            $messages = $this->conn->search($folder, self::convert_criteria($criteria, $charset), true);\n        }\n\n        $this->search_sorted = false;\n\n        return $messages;\n    }\n\n    /**\n     * Converts charset of search criteria string\n     *\n     * @param  string  $str          Search string\n     * @param  string  $charset      Original charset\n     * @param  string  $dest_charset Destination charset (default US-ASCII)\n     *\n     * @return string  Search string\n     */\n    public static function convert_criteria($str, $charset, $dest_charset = 'US-ASCII')\n    {\n        // convert strings to US_ASCII\n        if (preg_match_all('/\\{([0-9]+)\\}\\r\\n/', $str, $matches, PREG_OFFSET_CAPTURE)) {\n            $last = 0;\n            $res  = '';\n\n            foreach ($matches[1] as $m) {\n                $string_offset = $m[1] + strlen($m[0]) + 4; // {}\\r\\n\n                $string = substr($str, $string_offset - 1, $m[0]);\n                $string = rcube_charset::convert($string, $charset, $dest_charset);\n\n                if ($string === false || !strlen($string)) {\n                    continue;\n                }\n\n                $res .= substr($str, $last, $m[1] - $last - 1) . rcube_imap_generic::escape($string);\n                $last = $m[0] + $string_offset - 1;\n            }\n\n            if ($last < strlen($str)) {\n                $res .= substr($str, $last, strlen($str)-$last);\n            }\n        }\n        // strings for conversion not found\n        else {\n            $res = $str;\n        }\n\n        return $res;\n    }\n\n    /**\n     * Refresh saved search set\n     *\n     * @return array Current search set\n     */\n    public function refresh_search()\n    {\n        if (!empty($this->search_string)) {\n            $this->search(\n                is_object($this->search_set) ? $this->search_set->get_parameters('MAILBOX') : '',\n                $this->search_string,\n                $this->search_charset,\n                $this->search_sort_field\n            );\n        }\n\n        return $this->get_search_set();\n    }\n\n    /**\n     * Flag certain result subsets as 'incomplete'.\n     * For subsequent refresh_search() calls to only refresh the updated parts.\n     */\n    protected function set_search_dirty($folder)\n    {\n        if ($this->search_set && is_a($this->search_set, 'rcube_result_multifolder')) {\n            if ($subset = $this->search_set->get_set($folder)) {\n                $subset->incomplete = $this->search_set->incomplete = true;\n            }\n        }\n    }\n\n    /**\n     * Return message headers object of a specific message\n     *\n     * @param int     $id       Message UID\n     * @param string  $folder   Folder to read from\n     * @param bool    $force    True to skip cache\n     *\n     * @return rcube_message_header Message headers\n     */\n    public function get_message_headers($uid, $folder = null, $force = false)\n    {\n        // decode combined UID-folder identifier\n        if (preg_match('/^\\d+-.+/', $uid)) {\n            list($uid, $folder) = explode('-', $uid, 2);\n        }\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // get cached headers\n        if (!$force && $uid && ($mcache = $this->get_mcache_engine())) {\n            $headers = $mcache->get_message($folder, $uid);\n        }\n        else if (!$this->check_connection()) {\n            $headers = false;\n        }\n        else {\n            $headers = $this->conn->fetchHeader(\n                $folder, $uid, true, true, $this->get_fetch_headers());\n\n            if (is_object($headers)) {\n                $headers->folder = $folder;\n            }\n        }\n\n        return $headers;\n    }\n\n    /**\n     * Fetch message headers and body structure from the IMAP server and build\n     * an object structure.\n     *\n     * @param int    $uid    Message UID to fetch\n     * @param string $folder Folder to read from\n     *\n     * @return object rcube_message_header Message data\n     */\n    public function get_message($uid, $folder = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        // decode combined UID-folder identifier\n        if (preg_match('/^\\d+-.+/', $uid)) {\n            list($uid, $folder) = explode('-', $uid, 2);\n        }\n\n        // Check internal cache\n        if (!empty($this->icache['message']) && ($headers = $this->icache['message'])) {\n            // Make sure the folder and UID is what we expect.\n            // In case when the same process works with folders that are personal\n            // and shared two folders can contain the same UIDs.\n            if ($headers->uid == $uid && $headers->folder == $folder) {\n                return $headers;\n            }\n        }\n\n        $headers = $this->get_message_headers($uid, $folder);\n\n        // message doesn't exist?\n        if (empty($headers)) {\n            return null;\n        }\n\n        // structure might be cached\n        if (!empty($headers->structure)) {\n            return $headers;\n        }\n\n        $this->msg_uid = $uid;\n\n        if (!$this->check_connection()) {\n            return $headers;\n        }\n\n        if (empty($headers->bodystructure)) {\n            $headers->bodystructure = $this->conn->getStructure($folder, $uid, true);\n        }\n\n        $structure = $headers->bodystructure;\n\n        if (empty($structure)) {\n            return $headers;\n        }\n\n        // set message charset from message headers\n        if ($headers->charset) {\n            $this->struct_charset = $headers->charset;\n        }\n        else {\n            $this->struct_charset = $this->structure_charset($structure);\n        }\n\n        $headers->ctype = @strtolower($headers->ctype);\n\n        // Here we can recognize malformed BODYSTRUCTURE and\n        // 1. [@TODO] parse the message in other way to create our own message structure\n        // 2. or just show the raw message body.\n        // Example of structure for malformed MIME message:\n        // (\"text\" \"plain\" NIL NIL NIL \"7bit\" 2154 70 NIL NIL NIL)\n        if ($headers->ctype && !is_array($structure[0]) && $headers->ctype != 'text/plain'\n            && strtolower($structure[0].'/'.$structure[1]) == 'text/plain'\n        ) {\n            // A special known case \"Content-type: text\" (#1488968)\n            if ($headers->ctype == 'text') {\n                $structure[1]   = 'plain';\n                $headers->ctype = 'text/plain';\n            }\n            // we can handle single-part messages, by simple fix in structure (#1486898)\n            else if (preg_match('/^(text|application)\\/(.*)/', $headers->ctype, $m)) {\n                $structure[0] = $m[1];\n                $structure[1] = $m[2];\n            }\n            else {\n                // Try to parse the message using rcube_mime_decode.\n                // We need a better solution, it parses message\n                // in memory, which wouldn't work for very big messages,\n                // (it uses up to 10x more memory than the message size)\n                // it's also buggy and not actively developed\n                if ($headers->size && rcube_utils::mem_check($headers->size * 10)) {\n                    $raw_msg = $this->get_raw_body($uid);\n                    $struct = rcube_mime::parse_message($raw_msg);\n                }\n                else {\n                    return $headers;\n                }\n            }\n        }\n\n        if (empty($struct)) {\n            $struct = $this->structure_part($structure, 0, '', $headers);\n        }\n\n        // some workarounds on simple messages...\n        if (empty($struct->parts)) {\n            // ...don't trust given content-type\n            if (!empty($headers->ctype)) {\n                $struct->mime_id  = '1';\n                $struct->mimetype = strtolower($headers->ctype);\n                list($struct->ctype_primary, $struct->ctype_secondary) = explode('/', $struct->mimetype);\n            }\n\n            // ...and charset (there's a case described in #1488968 where invalid content-type\n            // results in invalid charset in BODYSTRUCTURE)\n            if (!empty($headers->charset) && $headers->charset != $struct->ctype_parameters['charset']) {\n                $struct->charset                     = $headers->charset;\n                $struct->ctype_parameters['charset'] = $headers->charset;\n            }\n        }\n\n        $headers->structure = $struct;\n\n        return $this->icache['message'] = $headers;\n    }\n\n    /**\n     * Build message part object\n     *\n     * @param array  $part\n     * @param int    $count\n     * @param string $parent\n     */\n    protected function structure_part($part, $count = 0, $parent = '', $mime_headers = null)\n    {\n        $struct = new rcube_message_part;\n        $struct->mime_id = empty($parent) ? (string)$count : \"$parent.$count\";\n\n        // multipart\n        if (is_array($part[0])) {\n            $struct->ctype_primary = 'multipart';\n\n        /* RFC3501: BODYSTRUCTURE fields of multipart part\n            part1 array\n            part2 array\n            part3 array\n            ....\n            1. subtype\n            2. parameters (optional)\n            3. description (optional)\n            4. language (optional)\n            5. location (optional)\n        */\n\n            // find first non-array entry\n            for ($i=1; $i<count($part); $i++) {\n                if (!is_array($part[$i])) {\n                    $struct->ctype_secondary = strtolower($part[$i]);\n\n                    // read content type parameters\n                    if (is_array($part[$i+1])) {\n                        $struct->ctype_parameters = [];\n                        for ($j=0; $j<count($part[$i+1]); $j+=2) {\n                            $param = strtolower($part[$i+1][$j]);\n                            $struct->ctype_parameters[$param] = $part[$i+1][$j+1];\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            $struct->mimetype = 'multipart/'.$struct->ctype_secondary;\n\n            // build parts list for headers pre-fetching\n            for ($i=0; $i<count($part); $i++) {\n                // fetch message headers if message/rfc822 or named part\n                if (is_array($part[$i]) && !is_array($part[$i][0])) {\n                    $tmp_part_id = $struct->mime_id ? $struct->mime_id.'.'.($i+1) : $i+1;\n                    if (strtolower($part[$i][0]) == 'message' && strtolower($part[$i][1]) == 'rfc822') {\n                        $mime_part_headers[] = $tmp_part_id;\n                    }\n                    else if ($this->is_attachment_part($part[$i])) {\n                        $mime_part_headers[] = $tmp_part_id;\n                    }\n                }\n            }\n\n            // pre-fetch headers of all parts (in one command for better performance)\n            // @TODO: we could do this before _structure_part() call, to fetch\n            // headers for parts on all levels\n            if (!empty($mime_part_headers)) {\n                $mime_part_headers = $this->conn->fetchMIMEHeaders($this->folder,\n                    $this->msg_uid, $mime_part_headers);\n            }\n\n            $struct->parts = [];\n            for ($i=0, $count=0; $i<count($part); $i++) {\n                if (!is_array($part[$i])) {\n                    break;\n                }\n                $tmp_part_id = $struct->mime_id ? $struct->mime_id.'.'.($i+1) : $i+1;\n                $struct->parts[] = $this->structure_part($part[$i], ++$count, $struct->mime_id,\n                    !empty($mime_part_headers[$tmp_part_id]) ? $mime_part_headers[$tmp_part_id] : null);\n            }\n\n            return $struct;\n        }\n\n        /* RFC3501: BODYSTRUCTURE fields of non-multipart part\n            0. type\n            1. subtype\n            2. parameters\n            3. id\n            4. description\n            5. encoding\n            6. size\n          -- text\n            7. lines\n          -- message/rfc822\n            7. envelope structure\n            8. body structure\n            9. lines\n          --\n            x. md5 (optional)\n            x. disposition (optional)\n            x. language (optional)\n            x. location (optional)\n        */\n\n        // regular part\n        $struct->ctype_primary   = strtolower($part[0]);\n        $struct->ctype_secondary = strtolower($part[1]);\n        $struct->mimetype        = $struct->ctype_primary.'/'.$struct->ctype_secondary;\n\n        // read content type parameters\n        if (is_array($part[2])) {\n            $struct->ctype_parameters = [];\n            for ($i=0; $i<count($part[2]); $i+=2) {\n                $struct->ctype_parameters[strtolower($part[2][$i])] = $part[2][$i+1];\n            }\n\n            if (isset($struct->ctype_parameters['charset'])) {\n                $struct->charset = $struct->ctype_parameters['charset'];\n            }\n        }\n\n        // #1487700: workaround for lack of charset in malformed structure\n        if (empty($struct->charset) && !empty($mime_headers) && !empty($mime_headers->charset)) {\n            $struct->charset = $mime_headers->charset;\n        }\n\n        // Sanitize charset for security\n        if ($struct->charset && !rcube_charset::is_valid($struct->charset)) {\n            $struct->charset = '';\n        }\n\n        // read content encoding\n        if (!empty($part[5])) {\n            $struct->encoding = strtolower($part[5]);\n            $struct->headers['content-transfer-encoding'] = $struct->encoding;\n        }\n\n        // get part size\n        if (!empty($part[6])) {\n            $struct->size = intval($part[6]);\n        }\n\n        // read part disposition\n        $di = 8;\n        if ($struct->ctype_primary == 'text') {\n            $di += 1;\n        }\n        else if ($struct->mimetype == 'message/rfc822') {\n            $di += 3;\n        }\n\n        if (isset($part[$di]) && is_array($part[$di]) && count($part[$di]) == 2) {\n            $struct->disposition = strtolower($part[$di][0]);\n            if ($struct->disposition && $struct->disposition !== 'inline' && $struct->disposition !== 'attachment') {\n                // RFC2183, Section 2.8 - unrecognized type should be treated as \"attachment\"\n                $struct->disposition = 'attachment';\n            }\n            if (is_array($part[$di][1])) {\n                for ($n=0; $n<count($part[$di][1]); $n+=2) {\n                    $struct->d_parameters[strtolower($part[$di][1][$n])] = $part[$di][1][$n+1];\n                }\n            }\n        }\n\n        // get message/rfc822's child-parts\n        if (isset($part[8]) && is_array($part[8]) && $di != 8) {\n            $struct->parts = [];\n\n            for ($i=0; $i<count($part[8]); $i++) {\n                if (!is_array($part[8][$i])) {\n                    break;\n                }\n\n                $subpart_id = $struct->mime_id ? $struct->mime_id . '.' . ($i+1) : $i+1;\n\n                if ($this->is_attachment_part($part[8][$i])) {\n                    $mime_part_headers[] = $subpart_id;\n                }\n\n                $struct->parts[$subpart_id] = $part[8][$i];\n            }\n\n            // Fetch attachment parts' headers in one go\n            if (!empty($mime_part_headers)) {\n                $mime_part_headers = $this->conn->fetchMIMEHeaders($this->folder, $this->msg_uid, $mime_part_headers);\n            }\n\n            $count = 0;\n            foreach ($struct->parts as $idx => $subpart) {\n                $struct->parts[$idx] = $this->structure_part($subpart, ++$count, $struct->mime_id,\n                    !empty($mime_part_headers[$idx]) ? $mime_part_headers[$idx] : null);\n            }\n\n            $struct->parts = array_values($struct->parts);\n        }\n\n        // get part ID\n        if (!empty($part[3])) {\n            $struct->content_id = $struct->headers['content-id'] = trim($part[3]);\n\n            if (empty($struct->disposition)) {\n                $struct->disposition = 'inline';\n            }\n        }\n\n        // fetch message headers if message/rfc822 or named part (could contain Content-Location header)\n        if (\n            $struct->ctype_primary == 'message'\n            || (!empty($struct->ctype_parameters['name']) && !empty($struct->content_id))\n        ) {\n            if (empty($mime_headers)) {\n                $mime_headers = $this->conn->fetchPartHeader($this->folder, $this->msg_uid, true, $struct->mime_id);\n            }\n\n            if (is_string($mime_headers)) {\n                $struct->headers = rcube_mime::parse_headers($mime_headers) + $struct->headers;\n            }\n            else if (is_object($mime_headers)) {\n                $struct->headers = get_object_vars($mime_headers) + $struct->headers;\n            }\n\n            // get real content-type of message/rfc822\n            if ($struct->mimetype == 'message/rfc822') {\n                // single-part\n                if (!is_array($part[8][0])) {\n                    $struct->real_mimetype = strtolower($part[8][0] . '/' . $part[8][1]);\n                }\n                // multi-part\n                else {\n                    for ($n=0; $n<count($part[8]); $n++) {\n                        if (!is_array($part[8][$n])) {\n                            break;\n                        }\n                    }\n                    $struct->real_mimetype = 'multipart/' . strtolower($part[8][$n]);\n                }\n            }\n\n            if ($struct->ctype_primary == 'message' && empty($struct->parts)) {\n                if (is_array($part[8]) && $di != 8) {\n                    $struct->parts[] = $this->structure_part($part[8], ++$count, $struct->mime_id);\n                }\n            }\n        }\n\n        // normalize filename property\n        $this->set_part_filename($struct, $mime_headers);\n\n        return $struct;\n    }\n\n    /**\n     * Check if the mail structure part is an attachment part and requires\n     * fetching the MIME headers for further processing.\n     */\n    protected function is_attachment_part($part)\n    {\n        if (!empty($part[2]) && is_array($part[2]) && empty($part[3])) {\n            $params = array_map('strtolower', (array) $part[2]);\n            $find   = ['name', 'filename', 'name*', 'filename*', 'name*0', 'filename*0', 'name*0*', 'filename*0*'];\n\n            // In case of malformed header check disposition. E.g. some servers for\n            // \"Content-Type: PDF; name=test.pdf\" may return text/plain and ignore name argument\n            return count(array_intersect($params, $find)) > 0\n                || (isset($part[9]) && is_array($part[9]) && stripos($part[9][0], 'attachment') === 0);\n        }\n\n        return false;\n    }\n\n    /**\n     * Set attachment filename from message part structure\n     *\n     * @param rcube_message_part $part    Part object\n     * @param string             $headers Part's raw headers\n     */\n    protected function set_part_filename(&$part, $headers = null)\n    {\n        // Some IMAP servers do not support RFC2231, if we have\n        // part headers we'll get attachment name from them, not the BODYSTRUCTURE\n        $rfc2231_params = [];\n        if (!empty($headers) || !empty($part->headers)) {\n            if (is_object($headers)) {\n                $headers = get_object_vars($headers);\n            }\n            else {\n                $headers = !empty($headers) ? rcube_mime::parse_headers($headers) : $part->headers;\n            }\n\n            $ctype       = isset($headers['content-type']) ? $headers['content-type'] : '';\n            $disposition = isset($headers['content-disposition']) ? $headers['content-disposition'] : '';\n            $tokens      = preg_split('/;[\\s\\r\\n\\t]*/',  $ctype. ';' . $disposition);\n\n            foreach ($tokens as $token) {\n                // TODO: Use order defined by the parameter name not order of occurrence in the header\n                if (preg_match('/^(name|filename)\\*([0-9]*)\\*?=\"*([^\"]+)\"*/i', $token, $matches)) {\n                    $key = strtolower($matches[1]);\n                    $rfc2231_params[$key] = (isset($rfc2231_params[$key]) ? $rfc2231_params[$key] : '') . $matches[3];\n                }\n            }\n        }\n\n        if (isset($rfc2231_params['name'])) {\n            $filename_encoded = $rfc2231_params['name'];\n        }\n        else if (isset($rfc2231_params['filename'])) {\n            $filename_encoded = $rfc2231_params['filename'];\n        }\n        else if (isset($part->d_parameters['filename*'])) {\n            $filename_encoded = $part->d_parameters['filename*'];\n        }\n        else if (isset($part->ctype_parameters['name*'])) {\n            $filename_encoded = $part->ctype_parameters['name*'];\n        }\n        else if (!empty($part->d_parameters['filename'])) {\n            $filename_mime = $part->d_parameters['filename'];\n        }\n        // read 'name' after rfc2231 parameters as it may contain truncated filename (from Thunderbird)\n        else if (!empty($part->ctype_parameters['name'])) {\n            $filename_mime = $part->ctype_parameters['name'];\n        }\n        else if (!empty($part->headers['content-description'])) {\n            $filename_mime = $part->headers['content-description'];\n        }\n        else {\n            return;\n        }\n\n        // decode filename\n        if (isset($filename_mime)) {\n            if (!empty($part->charset)) {\n                $charset = $part->charset;\n            }\n            else if (!empty($this->struct_charset)) {\n                $charset = $this->struct_charset;\n            }\n            else {\n                $charset = rcube_charset::detect($filename_mime, $this->default_charset);\n            }\n\n            $part->filename = rcube_mime::decode_mime_string($filename_mime, $charset);\n        }\n        else if (isset($filename_encoded)) {\n            // decode filename according to RFC 2231, Section 4\n            if (preg_match(\"/^([^']*)'[^']*'(.*)$/\", $filename_encoded, $fmatches)) {\n                $filename_charset = $fmatches[1];\n                $filename_encoded = $fmatches[2];\n            }\n\n            $part->filename = rawurldecode($filename_encoded);\n\n            if (!empty($filename_charset)) {\n                $part->filename = rcube_charset::convert($part->filename, $filename_charset);\n            }\n        }\n\n        // Workaround for invalid Content-Type (#6816)\n        // Some servers for \"Content-Type: PDF; name=test.pdf\" may return text/plain and ignore name argument\n        if ($part->mimetype == 'text/plain' && !empty($headers['content-type'])) {\n            $tokens = preg_split('/;[\\s\\r\\n\\t]*/', $headers['content-type']);\n            $type   = rcube_mime::fix_mimetype($tokens[0]);\n\n            if ($type != $part->mimetype) {\n                $part->mimetype = $type;\n                list($part->ctype_primary, $part->ctype_secondary) = explode('/', $part->mimetype);\n            }\n        }\n    }\n\n    /**\n     * Get charset name from message structure (first part)\n     *\n     * @param array $structure Message structure\n     *\n     * @return string Charset name\n     */\n    protected function structure_charset($structure)\n    {\n        while (is_array($structure)) {\n            if (is_array($structure[2]) && $structure[2][0] == 'charset') {\n                return $structure[2][1];\n            }\n            $structure = $structure[0];\n        }\n    }\n\n\n    /**\n     * Fetch message body of a specific message from the server\n     *\n     * @param int                $uid       Message UID\n     * @param string             $part      Part number\n     * @param rcube_message_part $o_part    Part object created by get_structure()\n     * @param mixed              $print     True to print part, resource to write part contents in\n     * @param resource           $fp        File pointer to save the message part\n     * @param bool               $skip_charset_conv Disables charset conversion\n     * @param int                $max_bytes Only read this number of bytes\n     * @param bool               $formatted Enables formatting of text/* parts bodies\n     *\n     * @return string Message/part body if not printed\n     */\n    public function get_message_part($uid, $part = 1, $o_part = null, $print = null, $fp = null,\n        $skip_charset_conv = false, $max_bytes = 0, $formatted = true)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        // get part data if not provided\n        if (!is_object($o_part)) {\n            $structure = $this->conn->getStructure($this->folder, $uid, true);\n            $part_data = rcube_imap_generic::getStructurePartData($structure, $part);\n\n            $o_part = new rcube_message_part;\n            $o_part->ctype_primary   = $part_data['type'];\n            $o_part->ctype_secondary = $part_data['subtype'];\n            $o_part->encoding        = isset($part_data['encoding']) ? $part_data['encoding'] : null;\n            $o_part->charset         = isset($part_data['charset']) ? $part_data['charset'] : null;\n            $o_part->size            = isset($part_data['size']) ? $part_data['size'] : null;\n        }\n\n        $body = '';\n\n        // Note: multipart/* parts will have size=0, we don't want to ignore them\n        if ($o_part && ($o_part->size || $o_part->ctype_primary == 'multipart')) {\n            $formatted = $formatted && $o_part->ctype_primary == 'text';\n            $body = $this->conn->handlePartBody($this->folder, $uid, true,\n                $part ? $part : 'TEXT', $o_part->encoding, $print, $fp, $formatted, $max_bytes);\n        }\n\n        if ($fp || $print) {\n            return true;\n        }\n\n        // convert charset (if text or message part)\n        if ($body && preg_match('/^(text|message)$/', $o_part->ctype_primary)) {\n            // Remove NULL characters if any (#1486189)\n            if ($formatted && strpos($body, \"\\x00\") !== false) {\n                $body = str_replace(\"\\x00\", '', $body);\n            }\n\n            if (!$skip_charset_conv) {\n                if (!$o_part->charset || strtoupper($o_part->charset) == 'US-ASCII') {\n                    // try to extract charset information from HTML meta tag (#1488125)\n                    if ($o_part->ctype_secondary == 'html' && preg_match('/<meta[^>]+charset=([a-z0-9-_]+)/i', $body, $m)) {\n                        $o_part->charset = strtoupper($m[1]);\n                    }\n                    else {\n                        $o_part->charset = $this->default_charset;\n                    }\n                }\n                $body = rcube_charset::convert($body, $o_part->charset);\n            }\n        }\n\n        return $body;\n    }\n\n    /**\n     * Returns the whole message source as string (or saves to a file)\n     *\n     * @param int      $uid  Message UID\n     * @param resource $fp   File pointer to save the message\n     * @param string   $part Optional message part ID\n     *\n     * @return string Message source string\n     */\n    public function get_raw_body($uid, $fp = null, $part = null)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->handlePartBody($this->folder, $uid,\n            true, $part, null, false, $fp);\n    }\n\n    /**\n     * Returns the message headers as string\n     *\n     * @param int    $uid  Message UID\n     * @param string $part Optional message part ID\n     *\n     * @return string Message headers string\n     */\n    public function get_raw_headers($uid, $part = null)\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->fetchPartHeader($this->folder, $uid, true, $part);\n    }\n\n    /**\n     * Sends the whole message source to stdout\n     *\n     * @param int  $uid       Message UID\n     * @param bool $formatted Enables line-ending formatting\n     */\n    public function print_raw_body($uid, $formatted = true)\n    {\n        if (!$this->check_connection()) {\n            return;\n        }\n\n        $this->conn->handlePartBody($this->folder, $uid, true, null, null, true, null, $formatted);\n    }\n\n    /**\n     * Set message flag to one or several messages\n     *\n     * @param mixed  $uids       Message UIDs as array or comma-separated string, or '*'\n     * @param string $flag       Flag to set: SEEN, UNDELETED, DELETED, RECENT, ANSWERED, DRAFT, MDNSENT\n     * @param string $folder     Folder name\n     * @param bool   $skip_cache True to skip message cache clean up\n     *\n     * @return bool Operation status\n     */\n    public function set_flag($uids, $flag, $folder = null, $skip_cache = false)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $flag = strtoupper($flag);\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        if (strpos($flag, 'UN') === 0) {\n            $result = $this->conn->unflag($folder, $uids, substr($flag, 2));\n        }\n        else {\n            $result = $this->conn->flag($folder, $uids, $flag);\n        }\n\n        if ($result && !$skip_cache) {\n            // reload message headers if cached\n            // update flags instead removing from cache\n            if ($mcache = $this->get_mcache_engine()) {\n                $status = strpos($flag, 'UN') !== 0;\n                $mflag  = preg_replace('/^UN/', '', $flag);\n                $mcache->change_flag($folder, $all_mode ? null : explode(',', $uids),\n                    $mflag, $status);\n            }\n\n            // clear cached counters\n            if ($flag == 'SEEN' || $flag == 'UNSEEN') {\n                $this->clear_messagecount($folder, ['SEEN', 'UNSEEN']);\n            }\n            else if ($flag == 'DELETED' || $flag == 'UNDELETED') {\n                $this->clear_messagecount($folder, ['ALL', 'THREADS']);\n                if ($this->options['skip_deleted']) {\n                    // remove cached messages\n                    $this->clear_message_cache($folder, $all_mode ? null : explode(',', $uids));\n                }\n            }\n\n            $this->set_search_dirty($folder);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Append a mail message (source) to a specific folder\n     *\n     * @param string       $folder  Target folder\n     * @param string|array $message The message source string or filename\n     *                              or array (of strings and file pointers)\n     * @param string       $headers Headers string if $message contains only the body\n     * @param bool         $is_file True if $message is a filename\n     * @param array        $flags   Message flags\n     * @param mixed        $date    Message internal date\n     * @param bool         $binary  Enables BINARY append\n     *\n     * @return int|bool Appended message UID or True on success, False on error\n     */\n    public function save_message($folder, &$message, $headers = '', $is_file = false, $flags = [], $date = null, $binary = false)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // make sure folder exists\n        if (!$this->folder_exists($folder)) {\n            return false;\n        }\n\n        $date = $this->date_format($date);\n\n        if ($is_file) {\n            $saved = $this->conn->appendFromFile($folder, $message, $headers, $flags, $date, $binary);\n        }\n        else {\n            $saved = $this->conn->append($folder, $message, $flags, $date, $binary);\n        }\n\n        if ($saved) {\n            // increase messagecount of the target folder\n            $this->set_messagecount($folder, 'ALL', 1);\n\n            $this->plugins->exec_hook('message_saved', [\n                    'folder'  => $folder,\n                    'message' => $message,\n                    'headers' => $headers,\n                    'is_file' => $is_file,\n                    'flags'   => $flags,\n                    'date'    => $date,\n                    'binary'  => $binary,\n                    'result'  => $saved,\n            ]);\n        }\n\n        return $saved;\n    }\n\n    /**\n     * Move a message from one folder to another\n     *\n     * @param mixed  $uids      Message UIDs as array or comma-separated string, or '*'\n     * @param string $to_mbox   Target folder\n     * @param string $from_mbox Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function move_message($uids, $to_mbox, $from_mbox = '')\n    {\n        if (!strlen($from_mbox)) {\n            $from_mbox = $this->folder;\n        }\n\n        if ($to_mbox === $from_mbox) {\n            return false;\n        }\n\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $config   = rcube::get_instance()->config;\n        $to_trash = $to_mbox == $config->get('trash_mbox');\n\n        // flag messages as read before moving them\n        if ($to_trash && $config->get('read_when_deleted')) {\n            // don't flush cache (4th argument)\n            $this->set_flag($uids, 'SEEN', $from_mbox, true);\n        }\n\n        // move messages\n        $moved = $this->conn->move($uids, $from_mbox, $to_mbox);\n\n        // when moving to Trash we make sure the folder exists\n        // as it's uncommon scenario we do this when MOVE fails, not before\n        if (!$moved && $to_trash && $this->get_response_code() == rcube_storage::TRYCREATE) {\n            if ($this->create_folder($to_mbox, true, 'trash')) {\n                $moved = $this->conn->move($uids, $from_mbox, $to_mbox);\n            }\n        }\n\n        if ($moved) {\n            $this->clear_messagecount($from_mbox);\n            $this->clear_messagecount($to_mbox);\n            $this->set_search_dirty($from_mbox);\n            $this->set_search_dirty($to_mbox);\n\n            // unset threads internal cache\n            unset($this->icache['threads']);\n\n            // remove message ids from search set\n            if ($this->search_set && $from_mbox == $this->folder) {\n                // threads are too complicated to just remove messages from set\n                if ($this->search_threads || $all_mode) {\n                    $this->refresh_search();\n                }\n                else if (!$this->search_set->incomplete) {\n                    $this->search_set->filter(explode(',', $uids), $this->folder);\n                }\n            }\n\n            // remove cached messages\n            // @TODO: do cache update instead of clearing it\n            $this->clear_message_cache($from_mbox, $all_mode ? null : explode(',', $uids));\n        }\n\n        return $moved;\n    }\n\n    /**\n     * Copy a message from one folder to another\n     *\n     * @param mixed  $uids      Message UIDs as array or comma-separated string, or '*'\n     * @param string $to_mbox   Target folder\n     * @param string $from_mbox Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function copy_message($uids, $to_mbox, $from_mbox = '')\n    {\n        if (!strlen($from_mbox)) {\n            $from_mbox = $this->folder;\n        }\n\n        list($uids, ) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // copy messages\n        $copied = $this->conn->copy($uids, $from_mbox, $to_mbox);\n\n        if ($copied) {\n            $this->clear_messagecount($to_mbox);\n        }\n\n        return $copied;\n    }\n\n    /**\n     * Mark messages as deleted and expunge them\n     *\n     * @param mixed  $uids   Message UIDs as array or comma-separated string, or '*'\n     * @param string $folder Source folder\n     *\n     * @return bool True on success, False on error\n     */\n    public function delete_message($uids, $folder = '')\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        list($uids, $all_mode) = $this->parse_uids($uids);\n\n        // exit if no message uids are specified\n        if (empty($uids)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $deleted = $this->conn->flag($folder, $uids, 'DELETED');\n\n        if ($deleted) {\n            // send expunge command in order to have the deleted message\n            // really deleted from the folder\n            $this->expunge_message($uids, $folder, false);\n            $this->clear_messagecount($folder);\n\n            // unset threads internal cache\n            unset($this->icache['threads']);\n\n            $this->set_search_dirty($folder);\n\n            // remove message ids from search set\n            if ($this->search_set && $folder == $this->folder) {\n                // threads are too complicated to just remove messages from set\n                if ($this->search_threads || $all_mode) {\n                    $this->refresh_search();\n                }\n                else if (!$this->search_set->incomplete) {\n                    $this->search_set->filter(explode(',', $uids));\n                }\n            }\n\n            // remove cached messages\n            $this->clear_message_cache($folder, $all_mode ? null : explode(',', $uids));\n        }\n\n        return $deleted;\n    }\n\n    /**\n     * Send IMAP expunge command and clear cache\n     *\n     * @param mixed  $uids        Message UIDs as array or comma-separated string, or '*'\n     * @param string $folder      Folder name\n     * @param bool   $clear_cache False if cache should not be cleared\n     *\n     * @return bool True on success, False on failure\n     */\n    public function expunge_message($uids, $folder = null, $clear_cache = true)\n    {\n        if ($uids && $this->get_capability('UIDPLUS')) {\n            list($uids, $all_mode) = $this->parse_uids($uids);\n        }\n        else {\n            $uids = null;\n        }\n\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        // force folder selection and check if folder is writeable\n        // to prevent a situation when CLOSE is executed on closed\n        // or EXPUNGE on read-only folder\n        $result = $this->conn->select($folder);\n        if (!$result) {\n            return false;\n        }\n\n        if (!$this->conn->data['READ-WRITE']) {\n            $this->conn->setError(rcube_imap_generic::ERROR_READONLY, \"Folder is read-only\");\n            return false;\n        }\n\n        // CLOSE(+SELECT) should be faster than EXPUNGE\n        if (empty($uids) || !empty($all_mode)) {\n            $result = $this->conn->close();\n        }\n        else {\n            $result = $this->conn->expunge($folder, $uids);\n        }\n\n        if ($result && $clear_cache) {\n            $this->clear_message_cache($folder, !empty($all_mode) ? null : explode(',', $uids));\n            $this->clear_messagecount($folder);\n        }\n\n        return $result;\n    }\n\n\n    /* --------------------------------\n     *        folder management\n     * --------------------------------*/\n\n    /**\n     * Public method for listing subscribed folders.\n     *\n     * @param   string  $root      Optional root folder\n     * @param   string  $name      Optional name pattern\n     * @param   string  $filter    Optional filter\n     * @param   string  $rights    Optional ACL requirements\n     * @param   bool    $skip_sort Enable to return unsorted list (for better performance)\n     *\n     * @return  array   List of folders\n     */\n    public function list_folders_subscribed($root = '', $name = '*', $filter = null, $rights = null, $skip_sort = false)\n    {\n        $cache_key = rcube_cache::key_name('mailboxes', [$root, $name, $filter, $rights]);\n\n        // get cached folder list\n        $a_mboxes = $this->get_cache($cache_key);\n        if (is_array($a_mboxes)) {\n            return $a_mboxes;\n        }\n\n        // Give plugins a chance to provide a list of folders\n        $data = $this->plugins->exec_hook('storage_folders',\n            ['root' => $root, 'name' => $name, 'filter' => $filter, 'mode' => 'LSUB']);\n\n        if (isset($data['folders'])) {\n            $a_mboxes = $data['folders'];\n        }\n        else {\n            $a_mboxes = $this->list_folders_subscribed_direct($root, $name);\n        }\n\n        if (!is_array($a_mboxes)) {\n            return [];\n        }\n\n        // filter folders list according to rights requirements\n        if ($rights && $this->get_capability('ACL')) {\n            $a_mboxes = $this->filter_rights($a_mboxes, $rights);\n        }\n\n        // INBOX should always be available\n        if (in_array_nocase($root . $name, ['*', '%', 'INBOX', 'INBOX*'])\n            && (!$filter || $filter == 'mail') && !in_array('INBOX', $a_mboxes)\n        ) {\n            array_unshift($a_mboxes, 'INBOX');\n        }\n\n        // sort folders (always sort for cache)\n        if (!$skip_sort || $this->cache) {\n            $a_mboxes = $this->sort_folder_list($a_mboxes);\n        }\n\n        // write folders list to cache\n        $this->update_cache($cache_key, $a_mboxes);\n\n        return $a_mboxes;\n    }\n\n    /**\n     * Method for direct folders listing (LSUB)\n     *\n     * @param string $root Optional root folder\n     * @param string $name Optional name pattern\n     *\n     * @return array List of subscribed folders\n     * @see rcube_imap::list_folders_subscribed()\n     */\n    public function list_folders_subscribed_direct($root = '', $name = '*')\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        $config    = rcube::get_instance()->config;\n        $list_root = $root === '' && $this->list_root ? $this->list_root : $root;\n\n        // Server supports LIST-EXTENDED, we can use selection options\n        // #1486225: Some dovecot versions return wrong result using LIST-EXTENDED\n        $list_extended = !$config->get('imap_force_lsub') && $this->get_capability('LIST-EXTENDED');\n\n        if ($list_extended) {\n            // This will also set folder options, LSUB doesn't do that\n            $result = $this->conn->listMailboxes($list_root, $name, null, ['SUBSCRIBED']);\n        }\n        else {\n            // retrieve list of folders from IMAP server using LSUB\n            $result = $this->conn->listSubscribed($list_root, $name);\n        }\n\n        if (!is_array($result)) {\n            return [];\n        }\n\n        // Add/Remove folders according to some configuration options\n        $this->list_folders_filter($result, $root . $name, ($list_extended ? 'ext-' : '') . 'subscribed');\n\n        // Save the last command state, so we can ignore errors on any following UNSUBSCRIBE calls\n        $state = $this->save_conn_state();\n\n        if ($list_extended) {\n            // unsubscribe non-existent folders, remove from the list\n            if ($name == '*' && !empty($this->conn->data['LIST'])) {\n                foreach ($result as $idx => $folder) {\n                    if (($opts = $this->conn->data['LIST'][$folder])\n                        && in_array_nocase('\\\\NonExistent', $opts)\n                    ) {\n                        $this->conn->unsubscribe($folder);\n                        unset($result[$idx]);\n                    }\n                }\n            }\n        }\n        else {\n            // unsubscribe non-existent folders, remove them from the list\n            if (!empty($result) && $name == '*') {\n                $existing = $this->list_folders($root, $name);\n\n                // Try to make sure the list of existing folders is not malformed,\n                // we don't want to unsubscribe existing folders on error\n                if (is_array($existing) && (!empty($root) || count($existing) > 1)) {\n                    $nonexisting = array_diff($result, $existing);\n                    $result      = array_diff($result, $nonexisting);\n\n                    foreach ($nonexisting as $folder) {\n                        $this->conn->unsubscribe($folder);\n                    }\n                }\n            }\n        }\n\n        $this->restore_conn_state($state);\n\n        return $result;\n    }\n\n    /**\n     * Get a list of all folders available on the server\n     *\n     * @param string  $root      IMAP root dir\n     * @param string  $name      Optional name pattern\n     * @param mixed   $filter    Optional filter\n     * @param string  $rights    Optional ACL requirements\n     * @param bool    $skip_sort Enable to return unsorted list (for better performance)\n     *\n     * @return array Indexed array with folder names\n     */\n    public function list_folders($root = '', $name = '*', $filter = null, $rights = null, $skip_sort = false)\n    {\n        $cache_key = rcube_cache::key_name('mailboxes.list', [$root, $name, $filter, $rights]);\n\n        // get cached folder list\n        $a_mboxes = $this->get_cache($cache_key);\n        if (is_array($a_mboxes)) {\n            return $a_mboxes;\n        }\n\n        // Give plugins a chance to provide a list of folders\n        $data = $this->plugins->exec_hook('storage_folders',\n            ['root' => $root, 'name' => $name, 'filter' => $filter, 'mode' => 'LIST']);\n\n        if (isset($data['folders'])) {\n            $a_mboxes = $data['folders'];\n        }\n        else {\n            // retrieve list of folders from IMAP server\n            $a_mboxes = $this->list_folders_direct($root, $name);\n        }\n\n        if (!is_array($a_mboxes)) {\n            $a_mboxes = [];\n        }\n\n        // INBOX should always be available\n        if (in_array_nocase($root . $name, ['*', '%', 'INBOX', 'INBOX*'])\n            && (!$filter || $filter == 'mail') && !in_array('INBOX', $a_mboxes)\n        ) {\n            array_unshift($a_mboxes, 'INBOX');\n        }\n\n        // cache folder attributes\n        if ($root == '' && $name == '*' && empty($filter) && !empty($this->conn->data)) {\n            $this->update_cache('mailboxes.attributes', $this->conn->data['LIST']);\n        }\n\n        // filter folders list according to rights requirements\n        if ($rights && $this->get_capability('ACL')) {\n            $a_mboxes = $this->filter_rights($a_mboxes, $rights);\n        }\n\n        // filter folders and sort them\n        if (!$skip_sort) {\n            $a_mboxes = $this->sort_folder_list($a_mboxes);\n        }\n\n        // write folders list to cache\n        $this->update_cache($cache_key, $a_mboxes);\n\n        return $a_mboxes;\n    }\n\n    /**\n     * Method for direct folders listing (LIST)\n     *\n     * @param string $root Optional root folder\n     * @param string $name Optional name pattern\n     *\n     * @return array List of folders\n     * @see rcube_imap::list_folders()\n     */\n    public function list_folders_direct($root = '', $name = '*')\n    {\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        $list_root = $root === '' && $this->list_root ? $this->list_root : $root;\n\n        $result = $this->conn->listMailboxes($list_root, $name);\n\n        if (!is_array($result)) {\n            return [];\n        }\n\n        // Add/Remove folders according to some configuration options\n        $this->list_folders_filter($result, $root . $name);\n\n        return $result;\n    }\n\n    /**\n     * Apply configured filters on folders list\n     */\n    protected function list_folders_filter(&$result, $root, $update_type = null)\n    {\n        $config = rcube::get_instance()->config;\n\n        // #1486796: some server configurations doesn't return folders in all namespaces\n        if ($root === '*' && $config->get('imap_force_ns')) {\n            $this->list_folders_update($result, $update_type);\n        }\n\n        // Remove hidden folders\n        if ($config->get('imap_skip_hidden_folders')) {\n            $result = array_filter($result, function($v) { return $v[0] != '.'; });\n        }\n\n        // Remove folders in shared namespaces (if configured, see self::set_env())\n        if ($root === '*' && !empty($this->list_excludes)) {\n            $result = array_filter($result, function($v) {\n                foreach ($this->list_excludes as $prefix) {\n                    if (strpos($v, $prefix) === 0) {\n                        return false;\n                    }\n                }\n\n                return true;\n            });\n        }\n    }\n\n    /**\n     * Fix folders list by adding folders from other namespaces.\n     * Needed on some servers e.g. Courier IMAP\n     *\n     * @param array  $result Reference to folders list\n     * @param string $type   Listing type (ext-subscribed, subscribed or all)\n     */\n    protected function list_folders_update(&$result, $type = null)\n    {\n        $namespace = $this->get_namespace();\n        $search    = [];\n\n        // build list of namespace prefixes\n        foreach ((array)$namespace as $ns) {\n            if (is_array($ns)) {\n                foreach ($ns as $ns_data) {\n                    if (strlen($ns_data[0])) {\n                        $search[] = $ns_data[0];\n                    }\n                }\n            }\n        }\n\n        if (!empty($search)) {\n            // go through all folders detecting namespace usage\n            foreach ($result as $folder) {\n                foreach ($search as $idx => $prefix) {\n                    if (strpos($folder, $prefix) === 0) {\n                        unset($search[$idx]);\n                    }\n                }\n                if (empty($search)) {\n                    break;\n                }\n            }\n\n            // get folders in hidden namespaces and add to the result\n            foreach ($search as $prefix) {\n                if ($type == 'ext-subscribed') {\n                    $list = $this->conn->listMailboxes('', $prefix . '*', null, ['SUBSCRIBED']);\n                }\n                else if ($type == 'subscribed') {\n                    $list = $this->conn->listSubscribed('', $prefix . '*');\n                }\n                else {\n                    $list = $this->conn->listMailboxes('', $prefix . '*');\n                }\n\n                if (!empty($list)) {\n                    $result = array_merge($result, $list);\n                }\n            }\n        }\n    }\n\n    /**\n     * Filter the given list of folders according to access rights\n     *\n     * For performance reasons we assume user has full rights\n     * on all personal folders.\n     */\n    protected function filter_rights($a_folders, $rights)\n    {\n        $regex = '/('.$rights.')/';\n\n        foreach ($a_folders as $idx => $folder) {\n            if ($this->folder_namespace($folder) == 'personal') {\n                continue;\n            }\n\n            $myrights = implode('', (array)$this->my_rights($folder));\n\n            if ($myrights !== null && !preg_match($regex, $myrights)) {\n                unset($a_folders[$idx]);\n            }\n        }\n\n        return $a_folders;\n    }\n\n    /**\n     * Get mailbox quota information\n     *\n     * @param string $folder Folder name\n     *\n     * @return mixed Quota info or False if not supported\n     */\n    public function get_quota($folder = null)\n    {\n        if ($this->get_capability('QUOTA') && $this->check_connection()) {\n            return $this->conn->getQuota($folder);\n        }\n\n        return false;\n    }\n\n    /**\n     * Get folder size (size of all messages in a folder)\n     *\n     * @param string $folder Folder name\n     *\n     * @return int Folder size in bytes, False on error\n     */\n    public function folder_size($folder)\n    {\n        if (!strlen($folder)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return 0;\n        }\n\n        if ($this->get_capability('STATUS=SIZE')) {\n            $status = $this->conn->status($folder, ['SIZE']);\n            if (is_array($status) && array_key_exists('SIZE', $status)) {\n                return (int) $status['SIZE'];\n            }\n        }\n\n        // On Cyrus we can use special folder annotation, which should be much faster\n        if ($this->get_vendor() == 'cyrus') {\n            $idx    = '/shared/vendor/cmu/cyrus-imapd/size';\n            $result = $this->get_metadata($folder, $idx, [], true);\n\n            if (!empty($result) && isset($result[$folder][$idx]) && is_numeric($result[$folder][$idx])) {\n                return $result[$folder][$idx];\n            }\n        }\n\n        // @TODO: could we try to use QUOTA here?\n        $result = $this->conn->fetchHeaderIndex($folder, '1:*', 'SIZE', false);\n\n        if (is_array($result)) {\n            $result = array_sum($result);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Subscribe to a specific folder(s)\n     *\n     * @param array $folders Folder name(s)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function subscribe($folders)\n    {\n        // let this common function do the main work\n        return $this->change_subscription($folders, 'subscribe');\n    }\n\n    /**\n     * Unsubscribe folder(s)\n     *\n     * @param array $a_mboxes Folder name(s)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function unsubscribe($folders)\n    {\n        // let this common function do the main work\n        return $this->change_subscription($folders, 'unsubscribe');\n    }\n\n    /**\n     * Create a new folder on the server and register it in local cache\n     *\n     * @param string $folder    New folder name\n     * @param bool   $subscribe True if the new folder should be subscribed\n     * @param string $type      Optional folder type (junk, trash, drafts, sent, archive)\n     * @param bool   $noselect  Make the folder a \\NoSelect folder by adding hierarchy\n     *                          separator at the end (useful for server that do not support\n     *                          both folders and messages as folder children)\n     *\n     * @return bool True on success, False on failure\n     */\n    public function create_folder($folder, $subscribe = false, $type = null, $noselect = false)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        if ($noselect) {\n            $folder .= $this->delimiter;\n        }\n\n        $result = $this->conn->createFolder($folder, $type ? [\"\\\\\" . ucfirst($type)] : null);\n\n        // Folder creation may fail when specific special-use flag is not supported.\n        // Try to create it anyway with no flag specified (#7147)\n        if (!$result && $type) {\n            $result = $this->conn->createFolder($folder);\n        }\n\n        // try to subscribe it\n        if ($result) {\n            // clear cache\n            $this->clear_cache('mailboxes', true);\n\n            if ($subscribe && !$noselect) {\n                $this->subscribe($folder);\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Set a new name to an existing folder\n     *\n     * @param string $folder   Folder to rename\n     * @param string $new_name New folder name\n     *\n     * @return bool True on success, False on failure\n     */\n    public function rename_folder($folder, $new_name)\n    {\n        if (!strlen($new_name)) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $delm = $this->get_hierarchy_delimiter();\n\n        // get list of subscribed folders\n        if ((strpos($folder, '%') === false) && (strpos($folder, '*') === false)) {\n            $a_subscribed = $this->list_folders_subscribed('', $folder . $delm . '*');\n            $subscribed   = $this->folder_exists($folder, true);\n        }\n        else {\n            $a_subscribed = $this->list_folders_subscribed();\n            $subscribed   = in_array($folder, $a_subscribed);\n        }\n\n        $result = $this->conn->renameFolder($folder, $new_name);\n\n        if ($result) {\n            // unsubscribe the old folder, subscribe the new one\n            if ($subscribed) {\n                $this->conn->unsubscribe($folder);\n                $this->conn->subscribe($new_name);\n            }\n\n            // check if folder children are subscribed\n            foreach ($a_subscribed as $c_subscribed) {\n                if (strpos($c_subscribed, $folder.$delm) === 0) {\n                    $this->conn->unsubscribe($c_subscribed);\n                    $this->conn->subscribe(preg_replace('/^'.preg_quote($folder, '/').'/',\n                        $new_name, $c_subscribed));\n\n                    // clear cache\n                    $this->clear_message_cache($c_subscribed);\n                }\n            }\n\n            // clear cache\n            $this->clear_message_cache($folder);\n            $this->clear_cache('mailboxes', true);\n        }\n\n        return $result;\n    }\n\n    /**\n     * Remove folder (with subfolders) from the server\n     *\n     * @param string $folder Folder name\n     *\n     * @return bool True on success, False on failure\n     */\n    public function delete_folder($folder)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $delm = $this->get_hierarchy_delimiter();\n\n        // get list of sub-folders or all folders\n        // if folder name contains special characters\n        $path       = strspn($folder, '%*') > 0 ? ($folder . $delm) : '';\n        $sub_mboxes = $this->list_folders('', $path . '*');\n\n        // According to RFC3501 deleting a \\Noselect folder\n        // with subfolders may fail. To workaround this we delete\n        // subfolders first (in reverse order) (#5466)\n        if (!empty($sub_mboxes)) {\n            foreach (array_reverse($sub_mboxes) as $mbox) {\n                if (strpos($mbox, $folder . $delm) === 0) {\n                    if ($this->conn->deleteFolder($mbox)) {\n                        $this->conn->unsubscribe($mbox);\n                        $this->clear_message_cache($mbox);\n                    }\n                }\n            }\n        }\n\n        // delete the folder\n        if ($result = $this->conn->deleteFolder($folder)) {\n            // and unsubscribe it\n            $this->conn->unsubscribe($folder);\n            $this->clear_message_cache($folder);\n        }\n\n        $this->clear_cache('mailboxes', true);\n\n        return $result;\n    }\n\n    /**\n     * Detect special folder associations stored in storage backend\n     */\n    public function get_special_folders($forced = false)\n    {\n        $result = parent::get_special_folders();\n        $rcube  = rcube::get_instance();\n\n        // Lock SPECIAL-USE after user preferences change (#4782)\n        if ($rcube->config->get('lock_special_folders')) {\n            return $result;\n        }\n\n        if (isset($this->icache['special-use'])) {\n            return array_merge($result, $this->icache['special-use']);\n        }\n\n        if (!$forced || !$this->get_capability('SPECIAL-USE')) {\n            return $result;\n        }\n\n        if (!$this->check_connection()) {\n            return $result;\n        }\n\n        $types   = array_map(function($value) { return \"\\\\\" . ucfirst($value); }, rcube_storage::$folder_types);\n        $special = [];\n\n        // request \\Subscribed flag in LIST response as performance improvement for folder_exists()\n        $folders = $this->conn->listMailboxes('', '*', ['SUBSCRIBED'], ['SPECIAL-USE']);\n\n        if (!empty($folders)) {\n            foreach ($folders as $idx => $folder) {\n                if (is_array($folder)) {\n                    $folder = $idx;\n                }\n                if (!empty($this->conn->data['LIST'][$folder])) {\n                    $flags = $this->conn->data['LIST'][$folder];\n                    foreach ($types as $type) {\n                        if (in_array($type, $flags)) {\n                            $type           = strtolower(substr($type, 1));\n                            $special[$type] = $folder;\n                        }\n                    }\n                }\n            }\n        }\n\n        $this->icache['special-use'] = $special;\n        unset($this->icache['special-folders']);\n\n        return array_merge($result, $special);\n    }\n\n    /**\n     * Set special folder associations stored in storage backend\n     */\n    public function set_special_folders($specials)\n    {\n        if (!$this->get_capability('SPECIAL-USE') || !$this->get_capability('METADATA')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $folders = $this->get_special_folders(true);\n        $old     = isset($this->icache['special-use']) ? (array) $this->icache['special-use'] : [];\n\n        foreach ($specials as $type => $folder) {\n            if (in_array($type, rcube_storage::$folder_types)) {\n                $old_folder = isset($old[$type]) ? $old[$type] : null;\n                if ($old_folder !== $folder) {\n                    // unset old-folder metadata\n                    if ($old_folder !== null) {\n                        $this->delete_metadata($old_folder, ['/private/specialuse']);\n                    }\n                    // set new folder metadata\n                    if ($folder) {\n                        $this->set_metadata($folder, ['/private/specialuse' => \"\\\\\" . ucfirst($type)]);\n                    }\n                }\n            }\n        }\n\n        $this->icache['special-use'] = $specials;\n        unset($this->icache['special-folders']);\n\n        return true;\n    }\n\n    /**\n     * Checks if folder exists and is subscribed\n     *\n     * @param string  $folder       Folder name\n     * @param bool    $subscription Enable subscription checking\n     *\n     * @return bool True or False\n     */\n    public function folder_exists($folder, $subscription = false)\n    {\n        if ($folder == 'INBOX') {\n            return true;\n        }\n\n        $key = $subscription ? 'subscribed' : 'existing';\n\n        if (!empty($this->icache[$key]) && in_array($folder, (array) $this->icache[$key])) {\n            return true;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        if ($subscription) {\n            // It's possible we already called LIST command, check LIST data\n            if (!empty($this->conn->data['LIST']) && !empty($this->conn->data['LIST'][$folder])\n                && in_array_nocase('\\\\Subscribed', $this->conn->data['LIST'][$folder])\n            ) {\n                $a_folders = [$folder];\n            }\n            else {\n                $a_folders = $this->conn->listSubscribed('', $folder);\n            }\n        }\n        else {\n            // It's possible we already called LIST command, check LIST data\n            if (!empty($this->conn->data['LIST']) && isset($this->conn->data['LIST'][$folder])) {\n                $a_folders = [$folder];\n            }\n            else {\n                $a_folders = $this->conn->listMailboxes('', $folder);\n            }\n        }\n\n        if (is_array($a_folders) && in_array($folder, $a_folders)) {\n            $this->icache[$key][] = $folder;\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the namespace where the folder is in\n     *\n     * @param string $folder Folder name\n     *\n     * @return string One of 'personal', 'other' or 'shared'\n     */\n    public function folder_namespace($folder)\n    {\n        if ($folder == 'INBOX') {\n            return 'personal';\n        }\n\n        foreach ($this->namespace as $type => $namespace) {\n            if (is_array($namespace)) {\n                foreach ($namespace as $ns) {\n                    if ($len = strlen($ns[0])) {\n                        if (($len > 1 && $folder == substr($ns[0], 0, -1))\n                            || strpos($folder, $ns[0]) === 0\n                        ) {\n                            return $type;\n                        }\n                    }\n                }\n            }\n        }\n\n        return 'personal';\n    }\n\n    /**\n     * Modify folder name according to personal namespace prefix.\n     * For output it removes prefix of the personal namespace if it's possible.\n     * For input it adds the prefix. Use it before creating a folder in root\n     * of the folders tree.\n     *\n     * @param string $folder Folder name\n     * @param string $mode   Mode name (out/in)\n     *\n     * @return string Folder name\n     */\n    public function mod_folder($folder, $mode = 'out')\n    {\n        $prefix = isset($this->namespace['prefix_' . $mode]) ? $this->namespace['prefix_' . $mode] : null;\n\n        if ($prefix === null || $prefix === ''\n            || !($prefix_len = strlen($prefix)) || !strlen($folder)\n        ) {\n            return $folder;\n        }\n\n        // remove prefix for output\n        if ($mode == 'out') {\n            if (substr($folder, 0, $prefix_len) === $prefix) {\n                return substr($folder, $prefix_len);\n            }\n\n            return $folder;\n        }\n\n        // add prefix for input (e.g. folder creation)\n        return $prefix . $folder;\n    }\n\n    /**\n     * Gets folder attributes from LIST response, e.g. \\Noselect, \\Noinferiors\n     *\n     * @param string $folder Folder name\n     * @param bool   $force  Set to True if attributes should be refreshed\n     *\n     * @return array Options list\n     */\n    public function folder_attributes($folder, $force = false)\n    {\n        // get attributes directly from LIST command\n        if (!empty($this->conn->data['LIST'])\n            && isset($this->conn->data['LIST'][$folder])\n            && is_array($this->conn->data['LIST'][$folder])\n        ) {\n            $opts = $this->conn->data['LIST'][$folder];\n        }\n        // get cached folder attributes\n        else if (!$force) {\n            $opts = $this->get_cache('mailboxes.attributes');\n            if ($opts && isset($opts[$folder])) {\n                $opts = $opts[$folder];\n            }\n        }\n\n        if (!isset($opts) || !is_array($opts)) {\n            if (!$this->check_connection()) {\n                return [];\n            }\n\n            $this->conn->listMailboxes('', $folder);\n\n            if (isset($this->conn->data['LIST'][$folder])) {\n                $opts = $this->conn->data['LIST'][$folder];\n            }\n        }\n\n        return isset($opts) && is_array($opts) ? $opts : [];\n    }\n\n    /**\n     * Gets connection (and current folder) data: UIDVALIDITY, EXISTS, RECENT,\n     * PERMANENTFLAGS, UIDNEXT, UNSEEN\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Data\n     */\n    public function folder_data($folder)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder !== null ? $this->folder : 'INBOX';\n        }\n\n        if ($this->conn->selected != $folder) {\n            if (!$this->check_connection()) {\n                return [];\n            }\n\n            if ($this->conn->select($folder)) {\n                $this->folder = $folder;\n            }\n            else {\n                return null;\n            }\n        }\n\n        $data = $this->conn->data;\n\n        // add (E)SEARCH result for ALL UNDELETED query\n        if (!empty($this->icache['undeleted_idx'])\n            && $this->icache['undeleted_idx']->get_parameters('MAILBOX') == $folder\n        ) {\n            $data['UNDELETED'] = $this->icache['undeleted_idx'];\n        }\n\n        // dovecot does not return HIGHESTMODSEQ until requested, we use it though in our caching system\n        // calling STATUS is needed only once, after first use mod-seq db will be maintained\n        if (!isset($data['HIGHESTMODSEQ']) && empty($data['NOMODSEQ'])\n            && ($this->get_capability('QRESYNC') || $this->get_capability('CONDSTORE'))\n        ) {\n            if ($add_data = $this->conn->status($folder, ['HIGHESTMODSEQ'])) {\n                $data = array_merge($data, $add_data);\n            }\n        }\n\n        return $data;\n    }\n\n    /**\n     * Returns extended information about the folder\n     *\n     * @param string $folder Folder name\n     *\n     * @return array Data\n     */\n    public function folder_info($folder)\n    {\n        if (!empty($this->icache['options']) && $this->icache['options']['name'] == $folder) {\n            return $this->icache['options'];\n        }\n\n        // get cached metadata\n        $cache_key = rcube_cache::key_name('mailboxes.folder-info', [$folder]);\n        $cached    = $this->get_cache($cache_key);\n\n        if (is_array($cached)) {\n            return $cached;\n        }\n\n        $acl       = $this->get_capability('ACL');\n        $namespace = $this->get_namespace();\n        $options   = ['is_root' => false];\n\n        // check if the folder is a namespace prefix\n        if (!empty($namespace)) {\n            $mbox = $folder . $this->delimiter;\n            foreach ($namespace as $ns) {\n                if (!empty($ns)) {\n                    foreach ($ns as $item) {\n                        if ($item[0] === $mbox) {\n                            $options['is_root'] = true;\n                            break 2;\n                        }\n                    }\n                }\n            }\n        }\n        // check if the folder is other user virtual-root\n        if ($options['is_root'] && !empty($namespace) && !empty($namespace['other'])) {\n            $parts = explode($this->delimiter, $folder);\n            if (count($parts) == 2) {\n                $mbox = $parts[0] . $this->delimiter;\n                foreach ($namespace['other'] as $item) {\n                    if ($item[0] === $mbox) {\n                        $options['is_root'] = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        $options['name']       = $folder;\n        $options['attributes'] = $this->folder_attributes($folder, true);\n        $options['namespace']  = $this->folder_namespace($folder);\n        $options['special']    = $this->is_special_folder($folder);\n        $options['noselect']   = false;\n\n        // Set 'noselect' flag\n        if (is_array($options['attributes'])) {\n            foreach ($options['attributes'] as $attrib) {\n                $attrib = strtolower($attrib);\n                if ($attrib == '\\noselect' || $attrib == '\\nonexistent') {\n                    $options['noselect'] = true;\n                }\n            }\n        }\n        else {\n            $options['noselect'] = true;\n        }\n\n        // Get folder rights (MYRIGHTS)\n        if ($acl && ($rights = $this->my_rights($folder))) {\n            $options['rights'] = $rights;\n        }\n\n        // Set 'norename' flag\n        if (!empty($options['rights'])) {\n            $rfc_4314 = is_array($this->get_capability('RIGHTS'));\n            $options['norename'] = ($rfc_4314 && !in_array('x', $options['rights']))\n                                || (!$rfc_4314 && !in_array('d', $options['rights']));\n\n            if (!$options['noselect']) {\n                $options['noselect'] = !in_array('r', $options['rights']);\n            }\n        }\n        else {\n            $options['norename'] = $options['is_root'] || $options['namespace'] != 'personal';\n        }\n\n        // update caches\n        $this->icache['options'] = $options;\n        $this->update_cache($cache_key, $options);\n\n        return $options;\n    }\n\n    /**\n     * Synchronizes messages cache.\n     *\n     * @param string $folder Folder name\n     */\n    public function folder_sync($folder)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            $mcache->synchronize($folder);\n        }\n    }\n\n    /**\n     * Check if the folder name is valid\n     *\n     * @param string $folder Folder name (UTF-8)\n     * @param string &$char  First forbidden character found\n     *\n     * @return bool True if the name is valid, False otherwise\n     */\n    public function folder_validate($folder, &$char = null)\n    {\n        if (parent::folder_validate($folder, $char)) {\n            $vendor = $this->get_vendor();\n            $regexp = '\\\\x00-\\\\x1F\\\\x7F%*';\n\n            if ($vendor == 'cyrus') {\n                // List based on testing Kolab's Cyrus-IMAP 2.5\n                $regexp .= '!`@(){}|\\\\?<;\"';\n            }\n\n            if (!preg_match(\"/[$regexp]/\", $folder, $m)) {\n                return true;\n            }\n\n            $char = $m[0];\n        }\n\n        return false;\n    }\n\n    /**\n     * Get message header names for rcube_imap_generic::fetchHeader(s)\n     *\n     * @return string Space-separated list of header names\n     */\n    protected function get_fetch_headers()\n    {\n        if (!empty($this->options['fetch_headers'])) {\n            $headers = explode(' ', $this->options['fetch_headers']);\n        }\n        else {\n            $headers = [];\n        }\n\n        if ($this->messages_caching || !empty($this->options['all_headers'])) {\n            $headers = array_merge($headers, $this->all_headers);\n        }\n\n        return $headers;\n    }\n\n\n    /* -----------------------------------------\n     *   ACL and METADATA/ANNOTATEMORE methods\n     * ----------------------------------------*/\n\n    /**\n     * Changes the ACL on the specified folder (SETACL)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     * @param string $acl     ACL string\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function set_acl($folder, $user, $acl)\n    {\n        if (!$this->get_capability('ACL')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache(rcube_cache::key_name('mailboxes.folder-info', [$folder]));\n\n        return $this->conn->setACL($folder, $user, $acl);\n    }\n\n    /**\n     * Removes any <identifier,rights> pair for the\n     * specified user from the ACL for the specified\n     * folder (DELETEACL)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function delete_acl($folder, $user)\n    {\n        if (!$this->get_capability('ACL')) {\n            return false;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        return $this->conn->deleteACL($folder, $user);\n    }\n\n    /**\n     * Returns the access control list for folder (GETACL)\n     *\n     * @param string $folder Folder name\n     *\n     * @return array User-rights array on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function get_acl($folder)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->getACL($folder);\n    }\n\n    /**\n     * Returns information about what rights can be granted to the\n     * user (identifier) in the ACL for the folder (LISTRIGHTS)\n     *\n     * @param string $folder  Folder name\n     * @param string $user    User name\n     *\n     * @return array List of user rights\n     * @since 0.5-beta\n     */\n    public function list_rights($folder, $user)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->listRights($folder, $user);\n    }\n\n    /**\n     * Returns the set of rights that the current user has to\n     * folder (MYRIGHTS)\n     *\n     * @param string $folder Folder name\n     *\n     * @return array MYRIGHTS response on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function my_rights($folder)\n    {\n        if (!$this->get_capability('ACL')) {\n            return null;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->myRights($folder);\n    }\n\n    /**\n     * Sets IMAP metadata/annotations (SETMETADATA/SETANNOTATION)\n     *\n     * @param string $folder  Folder name (empty for server metadata)\n     * @param array  $entries Entry-value array (use NULL value as NIL)\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function set_metadata($folder, $entries)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache('mailboxes.metadata.', true);\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            return $this->conn->setMetadata($folder, $entries);\n        }\n\n        if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            foreach ((array)$entries as $entry => $value) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $entries[$entry] = [$ent, $attr, $value];\n            }\n\n            return $this->conn->setAnnotation($folder, $entries);\n        }\n\n        return false;\n    }\n\n    /**\n     * Unsets IMAP metadata/annotations (SETMETADATA/SETANNOTATION)\n     *\n     * @param string $folder  Folder name (empty for server metadata)\n     * @param array  $entries Entry names array\n     *\n     * @return bool True on success, False on failure\n     * @since 0.5-beta\n     */\n    public function delete_metadata($folder, $entries)\n    {\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $this->clear_cache('mailboxes.metadata.', true);\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            return $this->conn->deleteMetadata($folder, $entries);\n        }\n\n        if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            foreach ((array)$entries as $idx => $entry) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $entries[$idx] = [$ent, $attr, null];\n            }\n\n            return $this->conn->setAnnotation($folder, $entries);\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns IMAP metadata/annotations (GETMETADATA/GETANNOTATION)\n     *\n     * @param string  $folder   Folder name (empty for server metadata)\n     * @param array   $entries  Entries\n     * @param array   $options  Command options (with MAXSIZE and DEPTH keys)\n     * @param bool    $force    Disables cache use\n     *\n     * @return array Metadata entry-value hash array on success, NULL on error\n     * @since 0.5-beta\n     */\n    public function get_metadata($folder, $entries, $options = [], $force = false)\n    {\n        $entries = (array) $entries;\n\n        if (!$force) {\n            $cache_key = rcube_cache::key_name('mailboxes.metadata', [$folder, $options, $entries]);\n\n            // get cached data\n            $cached_data = $this->get_cache($cache_key);\n\n            if (is_array($cached_data)) {\n                return $cached_data;\n            }\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        if ($this->get_capability('METADATA') ||\n            (!strlen($folder) && $this->get_capability('METADATA-SERVER'))\n        ) {\n            $res = $this->conn->getMetadata($folder, $entries, $options);\n        }\n        else if ($this->get_capability('ANNOTATEMORE') || $this->get_capability('ANNOTATEMORE2')) {\n            $queries = [];\n            $res     = [];\n\n            // Convert entry names\n            foreach ($entries as $entry) {\n                list($ent, $attr) = $this->md2annotate($entry);\n                $queries[$attr][] = $ent;\n            }\n\n            // @TODO: Honor MAXSIZE and DEPTH options\n            foreach ($queries as $attrib => $entry) {\n                $result = $this->conn->getAnnotation($folder, $entry, $attrib);\n\n                // an error, invalidate any previous getAnnotation() results\n                if (!is_array($result)) {\n                    return null;\n                }\n\n                foreach ($result as $fldr => $data) {\n                    $res[$fldr] = array_merge((array) $res[$fldr], $data);\n                }\n            }\n        }\n\n        if (isset($res)) {\n            if (!$force && !empty($cache_key)) {\n                $this->update_cache($cache_key, $res);\n            }\n\n            return $res;\n        }\n    }\n\n    /**\n     * Converts the METADATA extension entry name into the correct\n     * entry-attrib names for older ANNOTATEMORE version.\n     *\n     * @param string $entry Entry name\n     *\n     * @return array Entry-attribute list, NULL if not supported (?)\n     */\n    protected function md2annotate($entry)\n    {\n        if (substr($entry, 0, 7) == '/shared') {\n            return [substr($entry, 7), 'value.shared'];\n        }\n        else if (substr($entry, 0, 8) == '/private') {\n            return [substr($entry, 8), 'value.priv'];\n        }\n\n        // @TODO: log error\n    }\n\n\n    /* --------------------------------\n     *   internal caching methods\n     * --------------------------------*/\n\n    /**\n     * Enable or disable indexes caching\n     *\n     * @param string $type Cache type (@see rcube::get_cache)\n     */\n    public function set_caching($type)\n    {\n        if ($type) {\n            $this->caching = $type;\n        }\n        else {\n            if ($this->cache) {\n                $this->cache->close();\n            }\n            $this->cache   = null;\n            $this->caching = false;\n        }\n    }\n\n    /**\n     * Getter for IMAP cache object\n     */\n    protected function get_cache_engine()\n    {\n        if ($this->caching && !$this->cache) {\n            $rcube = rcube::get_instance();\n            $ttl   = $rcube->config->get('imap_cache_ttl', '10d');\n            $this->cache = $rcube->get_cache('IMAP', $this->caching, $ttl);\n        }\n\n        return $this->cache;\n    }\n\n    /**\n     * Returns cached value\n     *\n     * @param string $key Cache key\n     *\n     * @return mixed\n     */\n    public function get_cache($key)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            return $cache->get($key);\n        }\n    }\n\n    /**\n     * Update cache\n     *\n     * @param string $key  Cache key\n     * @param mixed  $data Data\n     */\n    public function update_cache($key, $data)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            $cache->set($key, $data);\n        }\n    }\n\n    /**\n     * Clears the cache.\n     *\n     * @param string  $key         Cache key name or pattern\n     * @param bool    $prefix_mode Enable it to clear all keys starting\n     *                             with prefix specified in $key\n     */\n    public function clear_cache($key = null, $prefix_mode = false)\n    {\n        if ($cache = $this->get_cache_engine()) {\n            $cache->remove($key, $prefix_mode);\n        }\n    }\n\n\n    /* --------------------------------\n     *   message caching methods\n     * --------------------------------*/\n\n    /**\n     * Enable or disable messages caching\n     *\n     * @param bool $set  Flag\n     * @param int  $mode Cache mode\n     */\n    public function set_messages_caching($set, $mode = null)\n    {\n        if ($set) {\n            $this->messages_caching = true;\n\n            if ($mode && ($cache = $this->get_mcache_engine())) {\n                $cache->set_mode($mode);\n            }\n        }\n        else {\n            if ($this->mcache) {\n                $this->mcache->close();\n            }\n            $this->mcache = null;\n            $this->messages_caching = false;\n        }\n    }\n\n    /**\n     * Getter for messages cache object\n     */\n    protected function get_mcache_engine()\n    {\n        if ($this->messages_caching && !$this->mcache) {\n            $rcube = rcube::get_instance();\n            if (($dbh = $rcube->get_dbh()) && ($userid = $rcube->get_user_id())) {\n                $ttl       = $rcube->config->get('messages_cache_ttl', '10d');\n                $threshold = $rcube->config->get('messages_cache_threshold', 50);\n                $this->mcache = new rcube_imap_cache(\n                    $dbh, $this, $userid, $this->options['skip_deleted'], $ttl, $threshold);\n            }\n        }\n\n        return $this->mcache;\n    }\n\n    /**\n     * Clears the messages cache.\n     *\n     * @param string $folder Folder name\n     * @param array  $uids   Optional message UIDs to remove from cache\n     */\n    protected function clear_message_cache($folder = null, $uids = null)\n    {\n        if ($mcache = $this->get_mcache_engine()) {\n            $mcache->clear($folder, $uids);\n        }\n    }\n\n    /**\n     * Delete outdated cache entries\n     */\n    function cache_gc()\n    {\n        rcube_imap_cache::gc();\n    }\n\n\n    /* --------------------------------\n     *         protected methods\n     * --------------------------------*/\n\n    /**\n     * Determines if server supports dual use folders (those can\n     * contain both sub-folders and messages).\n     *\n     * @return bool\n     */\n    protected function detect_dual_use_folders()\n    {\n        $val = rcube::get_instance()->config->get('imap_dual_use_folders');\n        if ($val !== null) {\n            return (bool) $val;\n        }\n\n        if (!$this->check_connection()) {\n            return false;\n        }\n\n        $folder    = str_replace('.', '', 'foldertest' . microtime(true));\n        $folder    = $this->mod_folder($folder, 'in');\n        $subfolder = $folder . $this->delimiter . 'foldertest';\n\n        if ($this->conn->createFolder($folder)) {\n            if ($created = $this->conn->createFolder($subfolder)) {\n                $this->conn->deleteFolder($subfolder);\n            }\n\n            $this->conn->deleteFolder($folder);\n\n            return $created;\n        }\n\n        return false;\n    }\n\n    /**\n     * Validate the given input and save to local properties\n     *\n     * @param string $sort_field Sort column\n     * @param string $sort_order Sort order\n     */\n    protected function set_sort_order($sort_field, $sort_order)\n    {\n        if ($sort_field != null) {\n            $this->sort_field = asciiwords($sort_field);\n        }\n        if ($sort_order != null) {\n            $this->sort_order = strtoupper($sort_order) == 'DESC' ? 'DESC' : 'ASC';\n        }\n    }\n\n    /**\n     * Sort folders in alphabetical order. Optionally put special folders\n     * first and other-users/shared namespaces last.\n     *\n     * @param array $a_folders    Folders list\n     * @param bool  $skip_special Skip special folders handling\n     *\n     * @return array Sorted list\n     */\n    public function sort_folder_list($a_folders, $skip_special = false)\n    {\n        $folders = [];\n\n        // convert names to UTF-8\n        foreach ($a_folders as $folder) {\n            // for better performance skip encoding conversion\n            // if the string does not look like UTF7-IMAP\n            $folders[$folder] = strpos($folder, '&') === false ? $folder : rcube_charset::convert($folder, 'UTF7-IMAP');\n        }\n\n        // sort folders\n        // asort($folders, SORT_LOCALE_STRING) is not properly sorting case sensitive names\n        uasort($folders, [$this, 'sort_folder_comparator']);\n\n        $folders = array_keys($folders);\n\n        if ($skip_special || empty($folders)) {\n            return $folders;\n        }\n\n        // Collect special folders and non-personal namespace roots\n        $specials = array_merge(['INBOX'], array_values($this->get_special_folders()));\n        $ns_roots = [];\n\n        foreach (['other', 'shared'] as $ns_name) {\n            if ($ns = $this->get_namespace($ns_name)) {\n                foreach ($ns as $root) {\n                    if (isset($root[0]) && strlen($root[0])) {\n                        $ns_roots[rtrim($root[0], $root[1])] = $root[0];\n                    }\n                }\n            }\n        }\n\n        // Force the type of folder name variable (#1485527)\n        $folders = array_map('strval', $folders);\n        $out     = [];\n\n        // Put special folders on top...\n        $specials = array_unique(array_intersect($specials, $folders));\n        $folders  = array_merge($specials, array_diff($folders, $specials));\n\n        // ... and rebuild the list to move their subfolders where they belong\n        $this->sort_folder_specials(null, $folders, $specials, $out);\n\n        // Put other-user/shared namespaces at the end\n        if (!empty($ns_roots)) {\n            $folders = [];\n            foreach ($out as $folder) {\n                foreach ($ns_roots as $root => $prefix) {\n                    if ($folder === $root || strpos($folder, $prefix) === 0) {\n                        $folders[] = $folder;\n                    }\n                }\n            }\n\n            if (!empty($folders)) {\n                $out = array_merge(array_diff($out, $folders), $folders);\n            }\n        }\n\n        return $out;\n    }\n\n    /**\n     * Recursive function to put subfolders of special folders in place\n     */\n    protected function sort_folder_specials($folder, &$list, &$specials, &$out)\n    {\n        $count = count($list);\n\n        for ($i = 0; $i < $count; $i++) {\n            $name = $list[$i];\n            if ($name === null) {\n                continue;\n            }\n\n            if ($folder === null || strpos($name, $folder.$this->delimiter) === 0) {\n                $out[] = $name;\n                $list[$i] = null;\n\n                if (!empty($specials) && ($found = array_search($name, $specials)) !== false) {\n                    unset($specials[$found]);\n                    $this->sort_folder_specials($name, $list, $specials, $out);\n                }\n            }\n        }\n    }\n\n    /**\n     * Callback for uasort() that implements correct\n     * locale-aware case-sensitive sorting\n     */\n    protected function sort_folder_comparator($str1, $str2)\n    {\n        if ($this->sort_folder_collator === null) {\n            $this->sort_folder_collator = false;\n\n            // strcoll() does not work with UTF8 locale on Windows,\n            // use Collator from the intl extension\n            if (stripos(PHP_OS, 'win') === 0 && function_exists('collator_compare')) {\n                $locale = $this->options['language'] ?: 'en_US';\n                $this->sort_folder_collator = collator_create($locale) ?: false;\n            }\n        }\n\n        $path1 = explode($this->delimiter, $str1);\n        $path2 = explode($this->delimiter, $str2);\n\n        foreach ($path1 as $idx => $folder1) {\n            $folder2 = isset($path2[$idx]) ? $path2[$idx] : '';\n\n            if ($folder1 === $folder2) {\n                continue;\n            }\n\n            if ($this->sort_folder_collator) {\n                return collator_compare($this->sort_folder_collator, $folder1, $folder2);\n            }\n\n            return strcoll($folder1, $folder2);\n        }\n    }\n\n    /**\n     * Find UID of the specified message sequence ID\n     *\n     * @param int    $id     Message (sequence) ID\n     * @param string $folder Folder name\n     *\n     * @return int Message UID\n     */\n    public function id2uid($id, $folder = null)\n    {\n        if (!strlen($folder)) {\n            $folder = $this->folder;\n        }\n\n        if (!$this->check_connection()) {\n            return null;\n        }\n\n        return $this->conn->ID2UID($folder, $id);\n    }\n\n    /**\n     * Subscribe/unsubscribe a list of folders and update local cache\n     */\n    protected function change_subscription($folders, $mode)\n    {\n        $updated = 0;\n        $folders = (array) $folders;\n\n        if (!empty($folders)) {\n            if (!$this->check_connection()) {\n                return false;\n            }\n\n            foreach ($folders as $folder) {\n                $updated += (int) $this->conn->{$mode}($folder);\n            }\n        }\n\n        // clear cached folders list(s)\n        if ($updated) {\n            $this->clear_cache('mailboxes', true);\n        }\n\n        return $updated == count($folders);\n    }\n\n    /**\n     * Increase/decrease messagecount for a specific folder\n     */\n    protected function set_messagecount($folder, $mode, $increment)\n    {\n        if (!is_numeric($increment)) {\n            return false;\n        }\n\n        $mode = strtoupper($mode);\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        if (\n            !isset($a_folder_cache[$folder])\n            || !is_array($a_folder_cache[$folder])\n            || !isset($a_folder_cache[$folder][$mode])\n        ) {\n            return false;\n        }\n\n        // add incremental value to messagecount\n        $a_folder_cache[$folder][$mode] += $increment;\n\n        // there's something wrong, delete from cache\n        if ($a_folder_cache[$folder][$mode] < 0) {\n            unset($a_folder_cache[$folder][$mode]);\n        }\n\n        // write back to cache\n        $this->update_cache('messagecount', $a_folder_cache);\n\n        return true;\n    }\n\n    /**\n     * Remove messagecount of a specific folder from cache\n     */\n    protected function clear_messagecount($folder, $mode = [])\n    {\n        $a_folder_cache = $this->get_cache('messagecount');\n\n        if (isset($a_folder_cache[$folder]) && is_array($a_folder_cache[$folder])) {\n            if (!empty($mode)) {\n                foreach ((array) $mode as $key) {\n                    unset($a_folder_cache[$folder][$key]);\n                }\n            }\n            else {\n                unset($a_folder_cache[$folder]);\n            }\n\n            $this->update_cache('messagecount', $a_folder_cache);\n        }\n    }\n\n    /**\n     * Converts date string/object into IMAP date/time format\n     */\n    protected function date_format($date)\n    {\n        if (empty($date)) {\n            return null;\n        }\n\n        if (!is_object($date) || !is_a($date, 'DateTime')) {\n            try {\n                $timestamp = rcube_utils::strtotime($date);\n                $date      = new DateTime(\"@\".$timestamp);\n            }\n            catch (Exception $e) {\n                return null;\n            }\n        }\n\n        return $date->format('d-M-Y H:i:s O');\n    }\n\n    /**\n     * Remember state of the IMAP connection (last IMAP command).\n     * Use e.g. if you want to execute more commands and ignore results of these.\n     *\n     * @return array Connection state\n     */\n    protected function save_conn_state()\n    {\n        return [\n            $this->conn->error,\n            $this->conn->errornum,\n            $this->conn->resultcode,\n        ];\n    }\n\n    /**\n     * Restore saved connection state.\n     *\n     * @param array $state Connection result\n     */\n    protected function restore_conn_state($state)\n    {\n        list($this->conn->error, $this->conn->errornum, $this->conn->resultcode) = $state;\n    }\n\n    /**\n     * This is our own debug handler for the IMAP connection\n     */\n    public function debug_handler($imap, $message)\n    {\n        rcube::write_log('imap', $message);\n    }\n}\n", "<?php\n\n/**\n +-----------------------------------------------------------------------+\n | This file is part of the Roundcube webmail client                     |\n |                                                                       |\n | Copyright (C) The Roundcube Dev Team                                  |\n |                                                                       |\n | Licensed under the GNU General Public License version 3 or            |\n | any later version with exceptions for skins & plugins.                |\n | See the README file for a full license statement.                     |\n |                                                                       |\n | CONTENTS:                                                             |\n |   Abstract class for output generation                                |\n +-----------------------------------------------------------------------+\n | Author: Thomas Bruederli <roundcube@gmail.com>                        |\n | Author: Aleksander Machniak <alec@alec.pl>                            |\n +-----------------------------------------------------------------------+\n*/\n\n/**\n * Class for output generation\n *\n * @package    Framework\n * @subpackage View\n */\nabstract class rcube_output\n{\n    public $browser;\n\n    protected $app;\n    protected $config;\n    protected $charset = RCUBE_CHARSET;\n    protected $env     = [];\n    protected $skins   = [];\n\n\n    /**\n     * Object constructor\n     */\n    public function __construct()\n    {\n        $this->app     = rcube::get_instance();\n        $this->config  = $this->app->config;\n        $this->browser = new rcube_browser();\n    }\n\n    /**\n     * Magic getter\n     */\n    public function __get($var)\n    {\n        // allow read-only access to some members\n        switch ($var) {\n            case 'env':     return $this->env;\n            case 'skins':   return $this->skins;\n            case 'charset': return $this->charset;\n        }\n    }\n\n    /**\n     * Setter for output charset.\n     * To be specified in a meta tag and sent as http-header\n     *\n     * @param string $charset Charset name\n     */\n    public function set_charset($charset)\n    {\n        $this->charset = $charset;\n    }\n\n    /**\n     * Getter for output charset\n     *\n     * @return string Output charset name\n     */\n    public function get_charset()\n    {\n        return $this->charset;\n    }\n\n    /**\n     * Set environment variable\n     *\n     * @param string $name  Property name\n     * @param mixed  $value Property value\n     */\n    public function set_env($name, $value)\n    {\n        $this->env[$name] = $value;\n    }\n\n    /**\n     * Environment variable getter.\n     *\n     * @param string $name Property name\n     *\n     * @return mixed Property value\n     */\n    public function get_env($name)\n    {\n        return isset($this->env[$name]) ? $this->env[$name] : null;\n    }\n\n    /**\n     * Delete all stored env variables and commands\n     */\n    public function reset()\n    {\n        $this->env = [];\n    }\n\n    /**\n     * Invoke display_message command\n     *\n     * @param string  $message  Message to display\n     * @param string  $type     Message type [notice|confirm|error]\n     * @param array   $vars     Key-value pairs to be replaced in localized text\n     * @param bool    $override Override last set message\n     * @param int     $timeout  Message displaying time in seconds\n     */\n    abstract function show_message($message, $type = 'notice', $vars = null, $override = true, $timeout = 0);\n\n    /**\n     * Redirect to a certain url.\n     *\n     * @param array|string $p     Either a string with the action or url parameters as key-value pairs\n     * @param int          $delay Delay in seconds\n     */\n    abstract function redirect($p = [], $delay = 1);\n\n    /**\n     * Send output to the client.\n     */\n    abstract function send();\n\n    /**\n     * Send HTTP headers to prevent caching a page\n     */\n    public function nocacheing_headers()\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        header(\"Expires: \".gmdate(\"D, d M Y H:i:s\").\" GMT\");\n        header(\"Last-Modified: \".gmdate(\"D, d M Y H:i:s\").\" GMT\");\n\n        // We need to set the following headers to make downloads work using IE in HTTPS mode.\n        if ($this->browser->ie && rcube_utils::https_check()) {\n            header('Pragma: private');\n            header(\"Cache-Control: private, must-revalidate\");\n        }\n        else {\n            header(\"Cache-Control: private, no-cache, no-store, must-revalidate, post-check=0, pre-check=0\");\n            header(\"Pragma: no-cache\");\n        }\n    }\n\n    /**\n     * Send header with expire date 30 days in future\n     *\n     * @param int Expiration time in seconds\n     */\n    public function future_expire_header($offset = 2600000)\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        header(\"Expires: \" . gmdate(\"D, d M Y H:i:s\", time()+$offset) . \" GMT\");\n        header(\"Cache-Control: max-age=$offset\");\n        header(\"Pragma: \");\n    }\n\n    /**\n     * Send browser compatibility/security/privacy headers\n     *\n     * @param bool $privacy Enable privacy headers\n     */\n    public function common_headers($privacy = true)\n    {\n        if (headers_sent()) {\n            return;\n        }\n\n        $headers = [];\n\n        // Unlock IE compatibility mode\n        if ($this->browser->ie) {\n            $headers['X-UA-Compatible'] = 'IE=edge';\n        }\n\n        if ($privacy) {\n            // Request browser to disable DNS prefetching (CVE-2010-0464)\n            $headers['X-DNS-Prefetch-Control'] = 'off';\n\n            // Request browser disable Referer (sic) header\n            $headers['Referrer-Policy'] = 'same-origin';\n        }\n\n        // send CSRF and clickjacking protection headers\n        if ($xframe = $this->app->config->get('x_frame_options', 'sameorigin')) {\n            $headers['X-Frame-Options'] = $xframe;\n        }\n\n        $plugin = $this->app->plugins->exec_hook('common_headers', ['headers' => $headers, 'privacy' => $privacy]);\n\n        foreach ($plugin['headers'] as $header => $value) {\n            header(\"$header: $value\");\n        }\n    }\n\n    /**\n     * Send headers related to file downloads.\n     *\n     * @param string $filename File name\n     * @param array  $params   Optional parameters:\n     *                         type         - File content type (default: 'application/octet-stream')\n     *                         disposition  - Download type: 'inline' or 'attachment' (default)\n     *                         length       - Content length\n     *                         charset      - File name character set\n     *                         type_charset - Content character set\n     *                         time_limit   - Script execution limit (default: 3600)\n     */\n    public function download_headers($filename, $params = [])\n    {\n        // For security reasons we validate type, filename and charset params.\n        // Some HTTP servers might drop a header that is malformed or very long, this then\n        // can lead to web browsers unintentionally executing javascript code in the body.\n\n        if (empty($params['disposition'])) {\n            $params['disposition'] = 'attachment';\n        }\n\n        $ctype       = 'application/octet-stream';\n        $disposition = $params['disposition'];\n\n        if (!empty($params['type']) && is_string($params['type']) && strlen($params['type']) < 256\n            && preg_match('/^[a-z0-9!#$&.+^_-]+\\/[a-z0-9!#$&.+^_-]+$/i', $params['type'])\n        ) {\n            $ctype = $params['type'];\n        }\n\n        if ($disposition == 'inline' && stripos($ctype, 'text') === 0) {\n            $charset = $this->charset;\n            if (!empty($params['type_charset']) && rcube_charset::is_valid($params['type_charset'])) {\n                $charset = $params['type_charset'];\n            }\n\n            $ctype .= \"; charset={$charset}\";\n        }\n\n        if (is_string($filename) && strlen($filename) > 0 && strlen($filename) <= 1024) {\n            // For non-ascii characters we'll use RFC2231 syntax\n            if (!preg_match('/[^a-zA-Z0-9_.:,?;@+ -]/', $filename)) {\n                $disposition .= \"; filename=\\\"{$filename}\\\"\";\n            }\n            else {\n                $filename = rawurlencode($filename);\n                $charset  = $this->charset;\n                if (!empty($params['charset']) && rcube_charset::is_valid($params['charset'])) {\n                    $charset = $params['charset'];\n                }\n\n                $disposition .= \"; filename*={$charset}''{$filename}\";\n            }\n        }\n\n        header(\"Content-Disposition: {$disposition}\");\n        header(\"Content-Type: {$ctype}\");\n\n        if ($params['disposition'] == 'attachment' && $this->browser->ie) {\n            header(\"Content-Type: application/force-download\");\n        }\n\n        if (isset($params['length'])) {\n            header(\"Content-Length: \" . $params['length']);\n        }\n\n        // don't kill the connection if download takes more than 30 sec.\n        if (!array_key_exists('time_limit', $params)) {\n            $params['time_limit'] = 3600;\n        }\n\n        if (is_numeric($params['time_limit'])) {\n            @set_time_limit($params['time_limit']);\n        }\n    }\n\n    /**\n     * Show error page and terminate script execution\n     *\n     * @param int    $code     Error code\n     * @param string $message  Error message\n     */\n    public function raise_error($code, $message)\n    {\n        // STUB: to be overloaded by specific output classes\n        fwrite(STDERR, \"Error $code: $message\\n\");\n        exit(-1);\n    }\n\n    /**\n     * Create an edit field for inclusion on a form\n     *\n     * @param string $name   Field name\n     * @param string $value  Field value\n     * @param array  $attrib HTML element attributes for the field\n     * @param string $type   HTML element type (default 'text')\n     *\n     * @return string HTML field definition\n     */\n    public static function get_edit_field($name, $value, $attrib = [], $type = 'text')\n    {\n        static $colcounts = [];\n\n        $fname           = '_' . $name;\n        $attrib['name']  = $fname . (!empty($attrib['array']) ? '[]' : '');\n        $attrib['class'] = trim((!empty($attrib['class']) ? $attrib['class'] : '') . ' ff_' . $name);\n\n        if ($type == 'checkbox') {\n            $attrib['value'] = '1';\n            $input = new html_checkbox($attrib);\n        }\n        else if ($type == 'textarea') {\n            if (!empty($attrib['size'])) {\n                $attrib['cols'] = $attrib['size'];\n            }\n            $input = new html_textarea($attrib);\n        }\n        else if ($type == 'select') {\n            $input = new html_select($attrib);\n            if (empty($attrib['skip-empty'])) {\n                $input->add('---', '');\n            }\n            if (!empty($attrib['options'])) {\n                $input->add(array_values($attrib['options']), array_keys($attrib['options']));\n            }\n        }\n        else if ($type == 'password' || (isset($attrib['type']) && $attrib['type'] == 'password')) {\n            $input = new html_passwordfield($attrib);\n        }\n        else {\n            if (!isset($attrib['type']) || ($attrib['type'] != 'text' && $attrib['type'] != 'hidden')) {\n                $attrib['type'] = 'text';\n            }\n            $input = new html_inputfield($attrib);\n        }\n\n        // use value from post\n        if (isset($_POST[$fname])) {\n            $postvalue = rcube_utils::get_input_value($fname, rcube_utils::INPUT_POST, true);\n            if (!empty($attrib['array'])) {\n                if (!isset($colcounts[$name])) {\n                    $colcounts[$name] = 0;\n                }\n                $idx   = intval($colcounts[$name]++);\n                $value = isset($postvalue[$idx]) ? $postvalue[$idx] : null;\n            }\n            else {\n                $value = $postvalue;\n            }\n        }\n\n        return $input->show($value);\n    }\n\n    /**\n     * Convert a variable into a javascript object notation\n     *\n     * @param mixed $input  Input value\n     * @param bool  $pretty Enable JSON formatting\n     * @param bool  $inline Enable inline mode (generates output safe for use inside HTML)\n     *\n     * @return string Serialized JSON string\n     */\n    public static function json_serialize($input, $pretty = false, $inline = true)\n    {\n        $options = JSON_UNESCAPED_SLASHES;\n\n        // JSON_HEX_TAG is needed for inlining JSON inside of the <script> tag\n        // if input contains a html tag it will cause issues (#6207)\n        if ($inline) {\n            $options |= JSON_HEX_TAG;\n        }\n\n        // JSON_UNESCAPED_UNICODE in PHP < 7.1.0 does not escape U+2028 and U+2029\n        // which causes issues (#6187)\n        if (PHP_VERSION_ID >= 70100) {\n            $options |= JSON_UNESCAPED_UNICODE;\n        }\n\n        if ($pretty) {\n            $options |= JSON_PRETTY_PRINT;\n        }\n\n        // The input need to be valid UTF-8 to use json_encode() in PHP < 7.2\n        if (PHP_VERSION_ID >= 70200) {\n            $options |= JSON_INVALID_UTF8_IGNORE;\n        }\n        else {\n            $input = rcube_charset::clean($input);\n        }\n\n        return json_encode($input, $options);\n    }\n}\n", "<?php\n\n/**\n * Test class to test rcube_charset class\n *\n * @package Tests\n * @group mbstring\n */\nclass Framework_Charset extends PHPUnit\\Framework\\TestCase\n{\n    /**\n     * Data for test_clean()\n     */\n    function data_clean()\n    {\n        return [\n            ['', ''],\n            [\"\\xC1\", \"\"],\n            [\"\u039f\u1f50\u03c7\u1f76 \u03c4\u03b1\u1f50\u03c4\u1f70 \u03c0\u03b1\u03c1\u1f77\u03c3\u03c4\u03b1\u03c4\u03b1\u1f77 \u03bc\u03bf\u03b9 \u03b3\u03b9\u03b3\u03bd\u1f7d\u03c3\u03ba\u03b5\u03b9\u03bd\", \"\u039f\u1f50\u03c7\u1f76 \u03c4\u03b1\u1f50\u03c4\u1f70 \u03c0\u03b1\u03c1\u1f77\u03c3\u03c4\u03b1\u03c4\u03b1\u1f77 \u03bc\u03bf\u03b9 \u03b3\u03b9\u03b3\u03bd\u1f7d\u03c3\u03ba\u03b5\u03b9\u03bd\"],\n            [\"\u0441\u0438\u043c\\xD0\u0432\u043e\u043b\", \"\u0441\u0438\u043c\u0432\u043e\u043b\"],\n            [[\"\u0441\u0438\u043c\\xD0\u0432\u043e\u043b\"], [\"\u0441\u0438\u043c\u0432\u043e\u043b\"]],\n            [[\"a\\x8cb\" => \"a\\x8cb\"], [\"ab\" => \"ab\"]],\n            [[\"a\\x8cb\" => \"a\\x8cb\", \"ab\" => \"12\"], [\"ab\" => \"12\"]],\n        ];\n    }\n\n    /**\n     * @dataProvider data_clean\n     */\n    function test_clean($input, $output)\n    {\n        $this->assertSame($output, rcube_charset::clean($input));\n    }\n\n    /**\n     * Data for test_is_valid()\n     */\n    function data_is_valid()\n    {\n        $list = [];\n        foreach (mb_list_encodings() as $charset) {\n            $list[] = [$charset, true];\n        }\n\n        return array_merge($list, [\n            ['', false],\n            ['a', false],\n            ['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', false],\n            [null, false],\n\n            ['TCVN5712-1:1993', true],\n            ['JUS_I.B1.002', true],\n        ]);\n    }\n\n    /**\n     * @dataProvider data_is_valid\n     */\n    function test_is_valid($input, $result)\n    {\n        $this->assertSame($result, rcube_charset::is_valid($input));\n    }\n\n    /**\n     * Data for test_parse_charset()\n     */\n    function data_parse_charset()\n    {\n        return [\n            ['UTF8', 'UTF-8'],\n            ['WIN1250', 'WINDOWS-1250'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_parse_charset\n     */\n    function test_parse_charset($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::parse_charset($input));\n    }\n\n    /**\n     * Data for test_convert()\n     */\n    function data_convert()\n    {\n        $data = [\n            ['\u00f6', '\u00f6', 'UTF-8', 'UTF-8'],\n            ['\u00f6', '', 'UTF-8', 'ASCII'],\n            ['a\u017c', 'a', 'UTF-8', 'US-ASCII'],\n            ['&BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', 'UTF7-IMAP', 'UTF-8'],\n            ['\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', '&BCAEMARBBEEESwQ7BDoEOA-', 'UTF-8', 'UTF7-IMAP'],\n            [base64_decode('GyRCLWo7M3l1OSk2SBsoQg=='), '\u3231\u5c71\ufa11\u5de5\u696d', 'ISO-2022-JP', 'UTF-8'],\n            ['\u3231\u5c71\ufa11\u5de5\u696d', base64_decode('GyRCLWo7M3l1OSk2SBsoQg=='), 'UTF-8', 'ISO-2022-JP'],\n            // try some invalid encodings, to make sure no error/exception is thrown\n            ['test', 'test', 'WIN1253', 'INVALID'],\n        ];\n\n        if (extension_loaded('iconv')) {\n            // Windows-1253 is not supported by mbstring, we're testing fallback to iconv\n            $data[] = ['\u03b5', chr(hexdec(('E5'))), 'UTF-8', 'WINDOWS-1253'];\n            // Windows-874 is also not supported by mbstring\n            $in = quoted_printable_decode('=B5=CD=BA=A1=C5=D1=BA');\n            $data[] = [$in, '\u0e15\u0e2d\u0e1a\u0e01\u0e25\u0e31\u0e1a', 'WINDOWS-874', 'UTF-8'];\n        }\n\n        return $data;\n    }\n\n    /**\n     * @dataProvider data_convert\n     */\n    function test_convert($input, $output, $from, $to)\n    {\n        $this->assertEquals($output, rcube_charset::convert($input, $from, $to));\n    }\n\n    /**\n     * Data for test_utf7_to_utf8()\n     */\n    function data_utf7_to_utf8()\n    {\n        return [\n            ['+BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf7_to_utf8\n     */\n    function test_utf7_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf7_to_utf8($input));\n    }\n\n    /**\n     * Data for test_utf7imap_to_utf8()\n     */\n    function data_utf7imap_to_utf8()\n    {\n        return [\n            ['&BCAEMARBBEEESwQ7BDoEOA-', '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf7imap_to_utf8\n     */\n    function test_utf7imap_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf7imap_to_utf8($input));\n    }\n\n    /**\n     * Data for test_utf8_to_utf7imap()\n     */\n    function data_utf8_to_utf7imap()\n    {\n        return [\n            ['\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438', '&BCAEMARBBEEESwQ7BDoEOA-'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf8_to_utf7imap\n     */\n    function test_utf8_to_utf7imap($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf8_to_utf7imap($input));\n    }\n\n    /**\n     * Data for test_utf16_to_utf8()\n     */\n    function data_utf16_to_utf8()\n    {\n        return [\n            [base64_decode('BCAEMARBBEEESwQ7BDoEOA=='), '\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0438'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_utf16_to_utf8\n     */\n    function test_utf16_to_utf8($input, $output)\n    {\n        $this->assertEquals($output, rcube_charset::utf16_to_utf8($input));\n    }\n\n    /**\n     * Data for test_detect()\n     */\n    function data_detect()\n    {\n        return [\n            ['', '', 'UTF-8'],\n            ['a', 'UTF-8', 'UTF-8'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_detect\n     */\n    function test_detect($input, $fallback, $output)\n    {\n        $this->assertEquals($output, rcube_charset::detect($input, $fallback));\n    }\n\n    /**\n     * Data for test_detect()\n     */\n    function data_detect_with_lang()\n    {\n        return [\n            [base64_decode('xeOl3KZXutkspUStbg=='), 'zh_TW', 'BIG-5'],\n        ];\n    }\n\n    /**\n     * @dataProvider data_detect_with_lang\n     */\n    function test_detect_with_lang($input, $lang, $output)\n    {\n        $this->assertEquals($output, rcube_charset::detect($input, $output, $lang));\n    }\n}\n"], "filenames": ["CHANGELOG.md", "program/actions/mail/viewsource.php", "program/lib/Roundcube/rcube_charset.php", "program/lib/Roundcube/rcube_imap.php", "program/lib/Roundcube/rcube_output.php", "tests/Framework/Charset.php"], "buggy_code_start_loc": [3, 48, 180, 2158, 215, 11], "buggy_code_end_loc": [3, 63, 180, 2158, 256, 33], "fixing_code_start_loc": [4, 48, 181, 2159, 215, 10], "fixing_code_end_loc": [8, 68, 193, 2164, 275, 62], "type": "CWE-79", "message": "Roundcube 1.5.x before 1.5.6 and 1.6.x before 1.6.5 allows XSS via a Content-Type or Content-Disposition header (used for attachment preview or download).", "other": {"cve": {"id": "CVE-2023-47272", "sourceIdentifier": "cve@mitre.org", "published": "2023-11-06T00:15:09.380", "lastModified": "2023-12-28T17:24:36.373", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Roundcube 1.5.x before 1.5.6 and 1.6.x before 1.6.5 allows XSS via a Content-Type or Content-Disposition header (used for attachment preview or download)."}, {"lang": "es", "value": "Roundcube 1.5.x anterior a 1.5.6 y 1.6.x anterior a 1.6.5 permite XSS a trav\u00e9s de un encabezado Content-Type o Content-Disposition (utilizado para la vista previa o descarga de archivos adjuntos)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cve@mitre.org", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.5.0", "versionEndExcluding": "1.5.6", "matchCriteriaId": "9B2ED2ED-CC1A-4FDD-B9B4-1FA5CCD6DC60"}, {"vulnerable": true, "criteria": "cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.6.0", "versionEndExcluding": "1.6.5", "matchCriteriaId": "EB0E97CB-55FA-43CB-A85F-252CC55731ED"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*", "matchCriteriaId": "E30D0E6F-4AE8-4284-8716-991DFA48CC5D"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*", "matchCriteriaId": "CC559B26-5DFC-4B7A-A27C-B77DE755DFF9"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*", "matchCriteriaId": "B8EDB836-4E6A-4B71-B9B2-AA3E03E0F646"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*", "matchCriteriaId": "FA6FEEC2-9F11-4643-8827-749718254FED"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*", "matchCriteriaId": "46D69DCC-AE4D-4EA5-861C-D60951444C6C"}]}]}], "references": [{"url": "https://github.com/roundcube/roundcubemail/commit/5ec496885e18ec6af956e8c0d627856c2257ba2d", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/roundcube/roundcubemail/releases/tag/1.5.6", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://github.com/roundcube/roundcubemail/releases/tag/1.6.5", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://lists.debian.org/debian-lts-announce/2023/12/msg00005.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GILSR762MJB3BNJOVOCMW2JXEPV46IIQ/", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YFRGBPET73URF6364CI547ZVWQESJLGK/", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Z4F4DUA3Q46ZVB2RD7BFP4XMNS4RYFFQ/", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "https://www.debian.org/security/2023/dsa-5572", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/roundcube/roundcubemail/commit/5ec496885e18ec6af956e8c0d627856c2257ba2d"}}