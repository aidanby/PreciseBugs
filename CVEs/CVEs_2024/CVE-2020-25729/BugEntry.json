{"buggy_code": ["<?php\n//\n// ZoneMinder web export view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\nif ( !canView('Events') ) {\n  $view = 'error';\n  return;\n}\n\n$total_size = 0;\nif ( isset($_SESSION['montageReviewFilter']) and !isset($_REQUEST['eids']) ) {\n  # Handles montageReview filter\n  $eventsSql = 'SELECT E.Id, E.DiskSpace FROM Events AS E WHERE 1';\n  $eventsSql .= $_SESSION['montageReviewFilter']['sql'];\n  $results = dbQuery($eventsSql);\n  $eids = [];\n  while ( $event_row = dbFetchNext( $results ) ) {\n    array_push($eids, $event_row['Id']);\n    $total_size += $event_row['DiskSpace'];\n  }\n  $_REQUEST['eids'] = $eids;\n  if ( ! count($eids) ) {\n    ZM\\Error(\"No events found for download using $eventsSql\");\n  } \n  #session_start();\n  #unset($_SESSION['montageReviewFilter']);\n  #session_write_close();\n#} else {\n#Logger::Debug(\"NO montageReviewFilter\");\n}\n\n$exportFormat = '';\nif ( isset($_REQUEST['exportFormat']) ) {\n  if ( !in_array($_REQUEST['exportFormat'], array('zip', 'tar')) ) {\n    ZM\\Error('Invalid exportFormat: '.$_REQUEST['exportFormat']);\n  } else {\n    $exportFormat = $_REQUEST['exportFormat'];\n  }\n}\n\nif ( !empty($_REQUEST['eid']) ) {\n  $Event = new ZM\\Event($_REQUEST['eid']);\n  if ( !$Event->Id ) {\n    Error('Invalid event id');\n  }\n}\n\n$focusWindow = true;\n$connkey = isset($_REQUEST['connkey']) ? $_REQUEST['connkey'] : generateConnKey();\n\nxhtmlHeaders(__FILE__, translate('Download'));\n?>\n<body>\n  <div id=\"page\">\n    <div id=\"header\">\n      <div id=\"headerButtons\">\n        <a href=\"#\" data-on-click=\"closeWindow\"><?php echo translate('Close') ?></a>\n      </div>\n      <h2><?php echo translate('Download') ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"contentForm\" id=\"contentForm\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">\n        <input type=\"hidden\" name=\"connkey\" value=\"<?php echo $connkey; ?>\"/>\n<?php\nif ( !empty($_REQUEST['eid']) ) {\n?>\n        <input type=\"hidden\" name=\"id\" value=\"<?php echo validInt($_REQUEST['eid']) ?>\"/>\n    <?php\n    $Event = new ZM\\Event($_REQUEST['eid']);\n    echo 'Downloading event ' . $Event->Id . '. Resulting file should be approximately ' . human_filesize( $Event->DiskSpace() );\n} else if ( !empty($_REQUEST['eids']) ) {\n    $total_size = 0;\n    foreach ( $_REQUEST['eids'] as $eid ) {\n      if ( ! validInt($eid) ) {\n        ZM\\Warning(\"Invalid event id in eids[] $eid\");\n        continue;\n      }\n      $Event = new ZM\\Event($eid);\n      $total_size += $Event->DiskSpace();\n?>\n        <input type=\"hidden\" name=\"eids[]\" value=\"<?php echo validInt($eid) ?>\"/>\n<?php\n    }\n    unset($eid);\n    echo \"Downloading \" . count($_REQUEST['eids']) . ' events.  Resulting file should be approximately ' . human_filesize($total_size);\n} else {\n    echo '<div class=\"warning\">There are no events found.  Resulting download will be empty.</div>';\n}\n?>\n        <table id=\"contentTable\" class=\"minor\">\n          <tbody>\n            <tr>\n              <td><input type=\"hidden\" name=\"exportVideo\" value=\"1\"/></td>\n            </tr>\n            <tr>\n              <th scope=\"row\"><?php echo translate('ExportFormat') ?></th>\n              <td>\n                <input type=\"radio\" id=\"exportFormatTar\" name=\"exportFormat\" value=\"tar\"/>\n                <label for=\"exportFormatTar\"><?php echo translate('ExportFormatTar') ?></label>\n                <input type=\"radio\" id=\"exportFormatZip\" name=\"exportFormat\" value=\"zip\" checked=\"checked\"/>\n                <label for=\"exportFormatZip\"><?php echo translate('ExportFormatZip') ?></label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type=\"button\" id=\"exportButton\" name=\"exportButton\" value=\"GenerateDownload\">\n <!--data-on-click-this=\"exportEvent\">-->\n        <?php echo translate('GenerateDownload') ?>\n        </button>\n      </form>\n    </div>\n<?php\n    if ( isset($_REQUEST['generated']) ) {\n?>\n      <h2 id=\"exportProgress\" class=\"<?php echo $_REQUEST['generated']?'infoText':'errorText' ?>\">\n        <span id=\"exportProgressText\"><?php echo $_REQUEST['generated']?translate('ExportSucceeded'):translate('ExportFailed') ?></span>\n        <span id=\"exportProgressTicker\"></span>\n      </h2>\n<?php\n    } else {\n?>\n      <h2 id=\"exportProgress\" class=\"hidden warnText\">\n        <span id=\"exportProgressText\"><?php echo translate('Exporting') ?></span>\n        <span id=\"exportProgressTicker\"></span>\n      </h2>\n<?php\n    }\n    if ( !empty($_REQUEST['generated']) ) {\n?>\n      <h3 id=\"downloadLink\"><a href=\"?view=archive&amp;type=<?php echo $exportFormat; ?>\"><?php echo translate('Download') ?></a></h3>\n<?php\n    }\n?>\n  </div>\n</body>\n</html>\n", "<?php\n//\n// ZoneMinder web export view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\nif ( !canView('Events') ) {\n  $view = 'error';\n  return;\n}\n\nif ( isset($_SESSION['export']) ) {\n  if ( isset($_SESSION['export']['detail']) )\n    $_REQUEST['exportDetail'] = $_SESSION['export']['detail'];\n  if ( isset($_SESSION['export']['frames']) )\n    $_REQUEST['exportFrames'] = $_SESSION['export']['frames'];\n  if ( isset($_SESSION['export']['images']) )\n    $_REQUEST['exportImages'] = $_SESSION['export']['images'];\n  if ( isset($_SESSION['export']['video']) )\n    $_REQUEST['exportVideo'] = $_SESSION['export']['video'];\n  if ( isset($_SESSION['export']['misc']) )\n    $_REQUEST['exportMisc'] = $_SESSION['export']['misc'];\n  if ( isset($_SESSION['export']['format']) )\n    $_REQUEST['exportFormat'] = $_SESSION['export']['format'];\n  if ( isset($_SESSION['export']['compress']) )\n    $_REQUEST['exportCompress'] = $_SESSION['export']['compress'];\n} else {\n  $_REQUEST['exportDetail'] =\n  $_REQUEST['exportFrames'] =\n  $_REQUEST['exportImages'] =\n  $_REQUEST['exportVideo'] =\n  $_REQUEST['exportMisc'] = 1;\n  $_REQUEST['exportCompress'] = 0;\n}\n\nif (isset($_REQUEST['exportFormat'])) {\n  if (!in_array($_REQUEST['exportFormat'], array('zip', 'tar'))) {\n    ZM\\Error('Invalid exportFormat');\n    return;\n  }\n}\n\n$focusWindow = true;\n$connkey = isset($_REQUEST['connkey']) ? $_REQUEST['connkey'] : generateConnKey();\n\nxhtmlHeaders(__FILE__, translate('Export'));\n?>\n<body>\n  <div id=\"page\">\n    <?php echo getNavBarHTML() ?>\n    <div id=\"header\">\n      <h2><?php echo translate('ExportOptions') ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"contentForm\" id=\"contentForm\" method=\"post\" action=\"?view=export\">\n        <input type=\"hidden\" name=\"connkey\" value=\"<?php echo $connkey; ?>\"/>\n<?php\n\n$eventsSql = 'SELECT E.*,M.Name AS MonitorName FROM Monitors AS M INNER JOIN Events AS E on (M.Id = E.MonitorId) WHERE';\n$eventsValues = array();\n$filterQuery = '';\n$sortColumn = '';\n$sortOrder = '';\n$limitQuery = '';\n\nif ( $user['MonitorIds'] ) {\n  $user_monitor_ids = ' M.Id in ('.$user['MonitorIds'].')';\n  $eventsSql .= $user_monitor_ids;\n} else {\n  $eventsSql .= ' 1';\n}\n\nif ( isset($_REQUEST['eid']) and $_REQUEST['eid'] ) {\n  ZM\\Logger::Debug('Loading events by single eid');\n  $eventsSql .= ' AND E.Id=?';\n  $eventsValues[] = $_REQUEST['eid'];\n} elseif ( isset($_REQUEST['eids']) and count($_REQUEST['eids']) > 0 ) {\n  ZM\\Logger::Debug('Loading events by eids');\n  $eventsSql .= ' AND E.Id IN ('.implode(',', array_map(function(){return '?';}, $_REQUEST['eids'])). ')';\n  $eventsValues += $_REQUEST['eids'];\n} else if ( isset($_REQUEST['filter']) ) {\n  parseSort();\n  parseFilter($_REQUEST['filter']);\n  $filterQuery = $_REQUEST['filter']['query'];\n\n  if ( $_REQUEST['filter']['sql'] ) {\n    $eventsSql .= $_REQUEST['filter']['sql'];\n  }\n  $eventsSql .= \" ORDER BY $sortColumn $sortOrder\";\n  if ( isset($_REQUEST['filter']['Query']['limit']) )\n    $eventsSql .= ' LIMIT '.validInt($_REQUEST['filter']['Query']['limit']);\n} # end if filter\n\n$results = dbQuery($eventsSql, $eventsValues);\n\necho 'Export the following ' .$results->rowCount() . ' events:<br/>';\n$disk_space_total = 0;\n?>\n        <table id=\"contentTable\" class=\"major\">\n          <thead>\n            <tr>\n              <th class=\"colId\"><a href=\"<?php echo sortHeader('Id') ?>\"><?php echo translate('Id') ?><?php echo sortTag('Id') ?></a></th>\n              <th class=\"colName\"><a href=\"<?php echo sortHeader('Name') ?>\"><?php echo translate('Name') ?><?php echo sortTag('Name') ?></a></th>\n              <th class=\"colMonitor\"><a href=\"<?php echo sortHeader('MonitorName') ?>\"><?php echo translate('Monitor') ?><?php echo sortTag('MonitorName') ?></a></th>\n              <th class=\"colCause\"><a href=\"<?php echo sortHeader('Cause') ?>\"><?php echo translate('Cause') ?><?php echo sortTag('Cause') ?></a></th>\n              <th class=\"colTime\"><a href=\"<?php echo sortHeader('StartTime') ?>\"><?php echo translate('Time') ?><?php echo sortTag('StartTime') ?></a></th>\n              <th class=\"colDuration\"><a href=\"<?php echo sortHeader('Length') ?>\"><?php echo translate('Duration') ?><?php echo sortTag('Length') ?></a></th>\n              <th class=\"colFrames\"><a href=\"<?php echo sortHeader('Frames') ?>\"><?php echo translate('Frames') ?><?php echo sortTag('Frames') ?></a></th>\n              <th class=\"colAlarmFrames\"><a href=\"<?php echo sortHeader('AlarmFrames') ?>\"><?php echo translate('AlarmBrFrames') ?><?php echo sortTag('AlarmFrames') ?></a></th>\n              <th class=\"colTotScore\"><a href=\"<?php echo sortHeader('TotScore') ?>\"><?php echo translate('TotalBrScore') ?><?php echo sortTag('TotScore') ?></a></th>\n              <th class=\"colAvgScore\"><a href=\"<?php echo sortHeader('AvgScore') ?>\"><?php echo translate('AvgBrScore') ?><?php echo sortTag('AvgScore') ?></a></th>\n              <th class=\"colMaxScore\"><a href=\"<?php echo sortHeader('MaxScore') ?>\"><?php echo translate('MaxBrScore') ?><?php echo sortTag('MaxScore') ?></a></th>\n<?php\n    if ( ZM_WEB_EVENT_DISK_SPACE ) {\n?>\n              <th class=\"colDiskSpace\"><a href=\"<?php echo sortHeader('DiskSpace') ?>\"><?php echo translate('DiskSpace') ?><?php echo sortTag('DiskSpace') ?></a></th>\n<?php\n    }\n?>\n        </tr>\n      </thead>\n      <tbody>\n<?php\n$event_count = 0;\nwhile ( $event_row = dbFetchNext($results) ) {\n  $event = new ZM\\Event($event_row);\n  $scale = max(reScale(SCALE_BASE, $event->Monitor()->DefaultScale(), ZM_WEB_DEFAULT_SCALE), SCALE_BASE);\n?>\n          <tr<?php echo $event->Archived() ? ' class=\"archived\"' : '' ?>>\n              <td class=\"colId\">\n                <input type=\"hidden\" name=\"eids[]\" value=\"<?php echo $event->Id()?>\"/>\n                <a href=\"?view=event&amp;eid=<?php echo $event->Id().$filterQuery.$sortQuery ?>&amp;page=1\"><?php echo $event->Id().($event->Archived()?'*':'') ?></a>\n              </td>\n              <td class=\"colName\"><a href=\"?view=event&amp;eid=<?php echo $event->Id().$filterQuery.$sortQuery ?>&amp;page=1\"><?php echo validHtmlStr($event->Name()).($event->Archived()?'*':'') ?></a></td>\n              <td class=\"colMonitorName\"><?php echo makePopupLink( '?view=monitor&amp;mid='.$event->MonitorId(), 'zmMonitor'.$event->MonitorId(), 'monitor', $event->MonitorName(), canEdit( 'Monitors' ) ) ?></td>\n              <td class=\"colCause\"><?php echo makePopupLink( '?view=eventdetail&amp;eid='.$event->Id(), 'zmEventDetail', 'eventdetail', validHtmlStr($event->Cause()), canEdit( 'Events' ), 'title=\"'.htmlspecialchars($event->Notes()).'\"' ) ?></td>\n              <td class=\"colTime\"><?php echo strftime(STRF_FMT_DATETIME_SHORTER, strtotime($event->StartTime())) .\n( $event->EndTime() ? ' until ' . strftime(STRF_FMT_DATETIME_SHORTER, strtotime($event->EndTime()) ) : '' ) ?>\n              </td>\n              <td class=\"colDuration\"><?php echo gmdate(\"H:i:s\", $event->Length() ) ?></td>\n              <td class=\"colFrames\"><?php echo makePopupLink( '?view=frames&amp;eid='.$event->Id(), 'zmFrames', 'frames', $event->Frames() ) ?></td>\n              <td class=\"colAlarmFrames\"><?php echo makePopupLink( '?view=frames&amp;eid='.$event->Id(), 'zmFrames', 'frames', $event->AlarmFrames() ) ?></td>\n              <td class=\"colTotScore\"><?php echo $event->TotScore() ?></td>\n              <td class=\"colAvgScore\"><?php echo $event->AvgScore() ?></td>\n              <td class=\"colMaxScore\"><?php echo\n $event->MaxScore();\n #makePopupLink('?view=frame&amp;eid='.$event->Id().'&amp;fid=0', 'zmImage', array('image', reScale($event->Width(), $scale), reScale($event->Height(), $scale)), $event->MaxScore()) ?></td>\n<?php\n  if ( ZM_WEB_EVENT_DISK_SPACE ) {\n    $disk_space_total += $event->DiskSpace();\n\t\t$event_count += 1;\n    echo '<td class=\"colDiskSpace\">'.human_filesize($event->DiskSpace()).'</td>';\n  }\n  unset($event);\n  echo '\n</tr>\n';\n} # end foreach event\n?>\n        </tbody>\n\t\t\t\t<tfoot>\n          <tr>\n            <td colspan=\"11\"><?php echo $event_count ?> events</td>\n<?php\n  if ( ZM_WEB_EVENT_DISK_SPACE ) {\n?>\n            <td class=\"colDiskSpace\"><?php echo human_filesize($disk_space_total);?></td>\n<?php\n  }\n?>\n          </tr>\n\t\t\t\t</tfoot>\n      </table>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportDetail\"><?php echo translate('ExportDetails') ?>\n          <input type=\"checkbox\" name=\"exportDetail\" value=\"1\"<?php if ( !empty($_REQUEST['exportDetail']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exportFrames\"><?php echo translate('ExportFrames') ?>\n          <input type=\"checkbox\" name=\"exportFrames\" value=\"1\"<?php if ( !empty($_REQUEST['exportFrames']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportImages\"><?php echo translate('ExportImageFiles') ?>\n          <input type=\"checkbox\" name=\"exportImages\" value=\"1\"<?php if ( !empty($_REQUEST['exportImages']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n\n        </label>\n       </div>\n       <div class=\"form-group\">\n         <label for=\"exportVideo\"><?php echo translate('ExportVideoFiles') ?>\n         <input type=\"checkbox\" name=\"exportVideo\" value=\"1\"<?php if ( !empty($_REQUEST['exportVideo']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n         </label>\n       </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportMisc\"><?php echo translate('ExportMiscFiles') ?>\n        <input type=\"checkbox\" name=\"exportMisc\" value=\"1\"<?php if ( !empty($_REQUEST['exportMisc']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportFormat\"><?php echo translate('ExportFormat') ?>\n          <?php echo html_radio('exportFormat',\n            array('tar'=>translate('ExportFormatTar'), 'zip' => translate('ExportFormatZip')),\n            (isset($_REQUEST['exportFormat'])?$_REQUEST['exportFormat']:'zip'), # default to zip\n            array(),\n            array('data-on-click-this'=>'configureExportButton')\n          ); ?>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exportCompress\"><?php echo translate('ExportCompress') ?>\n          <?php echo html_radio('exportCompress',\n            array('1'=>translate('Yes'), '0' => translate('No')),\n            (isset($_REQUEST['exportCompress'])?$_REQUEST['exportCompress']:'0'), # default to no\n            array(),\n            array('data-on-click-this'=>'configureExportButton')\n          ); ?>\n        </label>\n      </div>\n    </div>\n  </div><!--row-->\n  <button type=\"button\" id=\"exportButton\" name=\"exportButton\" value=\"Export\" disabled=\"disabled\"><?php echo translate('Export') ?></button>\n</div><!--container-->\n          <h2 id=\"exportProgress\" class=\"<?php\n            if ( isset($_REQUEST['generated']) ) {\n              if ( $_REQUEST['generated'] )\n                echo 'infoText';\n              else\n                echo 'errorText';\n            } else {\n              echo 'hidden warnText';\n            }\n        ?>\">\n            <span id=\"exportProgressText\">\n              <?php\n                if ( isset($_REQUEST['generated']) ) {\n                  if ( $_REQUEST['generated'] )\n                    echo translate('ExportSucceeded');\n                  else\n                    echo translate('ExportFailed');\n                }\n            ?></span>\n            <span id=\"exportProgressTicker\"></span>\n          </h2>\n          <button type=\"button\" data-on-click-this=\"startDownload\"<?php echo empty($_REQUEST['generated'])? ' class=\"hidden\"' : '' ?>><?php echo translate('Download') ?></button>\n          <input type=\"hidden\" name=\"exportFile\" value=\"<?php echo isset($_REQUEST['exportFile']) ? validHtmlStr($_REQUEST['exportFile']) : '' ?>\"/>\n          <input type=\"hidden\" name=\"generated\" value=\"<?php echo isset($_REQUEST['generated']) ? validHtmlStr($_REQUEST['generated']) : '' ?>\"/>\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n"], "fixing_code": ["<?php\n//\n// ZoneMinder web export view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\nif ( !canView('Events') ) {\n  $view = 'error';\n  return;\n}\n\n$total_size = 0;\nif ( isset($_SESSION['montageReviewFilter']) and !isset($_REQUEST['eids']) ) {\n  # Handles montageReview filter\n  $eventsSql = 'SELECT E.Id, E.DiskSpace FROM Events AS E WHERE 1';\n  $eventsSql .= $_SESSION['montageReviewFilter']['sql'];\n  $results = dbQuery($eventsSql);\n  $eids = [];\n  while ( $event_row = dbFetchNext( $results ) ) {\n    array_push($eids, $event_row['Id']);\n    $total_size += $event_row['DiskSpace'];\n  }\n  $_REQUEST['eids'] = $eids;\n  if ( ! count($eids) ) {\n    ZM\\Error(\"No events found for download using $eventsSql\");\n  } \n  #session_start();\n  #unset($_SESSION['montageReviewFilter']);\n  #session_write_close();\n#} else {\n#Logger::Debug(\"NO montageReviewFilter\");\n}\n\n$exportFormat = '';\nif ( isset($_REQUEST['exportFormat']) ) {\n  if ( !in_array($_REQUEST['exportFormat'], array('zip', 'tar')) ) {\n    ZM\\Error('Invalid exportFormat: '.$_REQUEST['exportFormat']);\n  } else {\n    $exportFormat = $_REQUEST['exportFormat'];\n  }\n}\n\nif ( !empty($_REQUEST['eid']) ) {\n  $Event = new ZM\\Event($_REQUEST['eid']);\n  if ( !$Event->Id ) {\n    Error('Invalid event id');\n  }\n}\n\n$focusWindow = true;\n$connkey = isset($_REQUEST['connkey']) ? validInt($_REQUEST['connkey']) : generateConnKey();\n\nxhtmlHeaders(__FILE__, translate('Download'));\n?>\n<body>\n  <div id=\"page\">\n    <div id=\"header\">\n      <div id=\"headerButtons\">\n        <a href=\"#\" data-on-click=\"closeWindow\"><?php echo translate('Close') ?></a>\n      </div>\n      <h2><?php echo translate('Download') ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"contentForm\" id=\"contentForm\" method=\"post\" action=\"?\">\n        <input type=\"hidden\" name=\"connkey\" value=\"<?php echo $connkey; ?>\"/>\n<?php\nif ( !empty($_REQUEST['eid']) ) {\n?>\n        <input type=\"hidden\" name=\"id\" value=\"<?php echo validInt($_REQUEST['eid']) ?>\"/>\n    <?php\n    $Event = new ZM\\Event($_REQUEST['eid']);\n    echo 'Downloading event ' . $Event->Id . '. Resulting file should be approximately ' . human_filesize( $Event->DiskSpace() );\n} else if ( !empty($_REQUEST['eids']) ) {\n    $total_size = 0;\n    foreach ( $_REQUEST['eids'] as $eid ) {\n      if ( ! validInt($eid) ) {\n        ZM\\Warning(\"Invalid event id in eids[] $eid\");\n        continue;\n      }\n      $Event = new ZM\\Event($eid);\n      $total_size += $Event->DiskSpace();\n?>\n        <input type=\"hidden\" name=\"eids[]\" value=\"<?php echo validInt($eid) ?>\"/>\n<?php\n    }\n    unset($eid);\n    echo \"Downloading \" . count($_REQUEST['eids']) . ' events.  Resulting file should be approximately ' . human_filesize($total_size);\n} else {\n    echo '<div class=\"warning\">There are no events found.  Resulting download will be empty.</div>';\n}\n?>\n        <table id=\"contentTable\" class=\"minor\">\n          <tbody>\n            <tr>\n              <td><input type=\"hidden\" name=\"exportVideo\" value=\"1\"/></td>\n            </tr>\n            <tr>\n              <th scope=\"row\"><?php echo translate('ExportFormat') ?></th>\n              <td>\n                <input type=\"radio\" id=\"exportFormatTar\" name=\"exportFormat\" value=\"tar\"/>\n                <label for=\"exportFormatTar\"><?php echo translate('ExportFormatTar') ?></label>\n                <input type=\"radio\" id=\"exportFormatZip\" name=\"exportFormat\" value=\"zip\" checked=\"checked\"/>\n                <label for=\"exportFormatZip\"><?php echo translate('ExportFormatZip') ?></label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type=\"button\" id=\"exportButton\" name=\"exportButton\" value=\"GenerateDownload\">\n <!--data-on-click-this=\"exportEvent\">-->\n        <?php echo translate('GenerateDownload') ?>\n        </button>\n      </form>\n    </div>\n<?php\n    if ( isset($_REQUEST['generated']) ) {\n?>\n      <h2 id=\"exportProgress\" class=\"<?php echo $_REQUEST['generated']?'infoText':'errorText' ?>\">\n        <span id=\"exportProgressText\"><?php echo $_REQUEST['generated']?translate('ExportSucceeded'):translate('ExportFailed') ?></span>\n        <span id=\"exportProgressTicker\"></span>\n      </h2>\n<?php\n    } else {\n?>\n      <h2 id=\"exportProgress\" class=\"hidden warnText\">\n        <span id=\"exportProgressText\"><?php echo translate('Exporting') ?></span>\n        <span id=\"exportProgressTicker\"></span>\n      </h2>\n<?php\n    }\n    if ( !empty($_REQUEST['generated']) ) {\n?>\n      <h3 id=\"downloadLink\"><a href=\"?view=archive&amp;type=<?php echo $exportFormat; ?>\"><?php echo translate('Download') ?></a></h3>\n<?php\n    }\n?>\n  </div>\n</body>\n</html>\n", "<?php\n//\n// ZoneMinder web export view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\nif ( !canView('Events') ) {\n  $view = 'error';\n  return;\n}\n\nif ( isset($_SESSION['export']) ) {\n  if ( isset($_SESSION['export']['detail']) )\n    $_REQUEST['exportDetail'] = $_SESSION['export']['detail'];\n  if ( isset($_SESSION['export']['frames']) )\n    $_REQUEST['exportFrames'] = $_SESSION['export']['frames'];\n  if ( isset($_SESSION['export']['images']) )\n    $_REQUEST['exportImages'] = $_SESSION['export']['images'];\n  if ( isset($_SESSION['export']['video']) )\n    $_REQUEST['exportVideo'] = $_SESSION['export']['video'];\n  if ( isset($_SESSION['export']['misc']) )\n    $_REQUEST['exportMisc'] = $_SESSION['export']['misc'];\n  if ( isset($_SESSION['export']['format']) )\n    $_REQUEST['exportFormat'] = $_SESSION['export']['format'];\n  if ( isset($_SESSION['export']['compress']) )\n    $_REQUEST['exportCompress'] = $_SESSION['export']['compress'];\n} else {\n  $_REQUEST['exportDetail'] =\n  $_REQUEST['exportFrames'] =\n  $_REQUEST['exportImages'] =\n  $_REQUEST['exportVideo'] =\n  $_REQUEST['exportMisc'] = 1;\n  $_REQUEST['exportCompress'] = 0;\n}\n\nif (isset($_REQUEST['exportFormat'])) {\n  if (!in_array($_REQUEST['exportFormat'], array('zip', 'tar'))) {\n    ZM\\Error('Invalid exportFormat');\n    return;\n  }\n}\n\n$focusWindow = true;\n$connkey = isset($_REQUEST['connkey']) ? validInt($_REQUEST['connkey']) : generateConnKey();\n\nxhtmlHeaders(__FILE__, translate('Export'));\n?>\n<body>\n  <div id=\"page\">\n    <?php echo getNavBarHTML() ?>\n    <div id=\"header\">\n      <h2><?php echo translate('ExportOptions') ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"contentForm\" id=\"contentForm\" method=\"post\" action=\"?view=export\">\n        <input type=\"hidden\" name=\"connkey\" value=\"<?php echo $connkey; ?>\"/>\n<?php\n\n$eventsSql = 'SELECT E.*,M.Name AS MonitorName FROM Monitors AS M INNER JOIN Events AS E on (M.Id = E.MonitorId) WHERE';\n$eventsValues = array();\n$filterQuery = '';\n$sortColumn = '';\n$sortOrder = '';\n$limitQuery = '';\n\nif ( $user['MonitorIds'] ) {\n  $user_monitor_ids = ' M.Id in ('.$user['MonitorIds'].')';\n  $eventsSql .= $user_monitor_ids;\n} else {\n  $eventsSql .= ' 1';\n}\n\nif ( isset($_REQUEST['eid']) and $_REQUEST['eid'] ) {\n  ZM\\Logger::Debug('Loading events by single eid');\n  $eventsSql .= ' AND E.Id=?';\n  $eventsValues[] = $_REQUEST['eid'];\n} elseif ( isset($_REQUEST['eids']) and count($_REQUEST['eids']) > 0 ) {\n  ZM\\Logger::Debug('Loading events by eids');\n  $eventsSql .= ' AND E.Id IN ('.implode(',', array_map(function(){return '?';}, $_REQUEST['eids'])). ')';\n  $eventsValues += $_REQUEST['eids'];\n} else if ( isset($_REQUEST['filter']) ) {\n  parseSort();\n  parseFilter($_REQUEST['filter']);\n  $filterQuery = $_REQUEST['filter']['query'];\n\n  if ( $_REQUEST['filter']['sql'] ) {\n    $eventsSql .= $_REQUEST['filter']['sql'];\n  }\n  $eventsSql .= \" ORDER BY $sortColumn $sortOrder\";\n  if ( isset($_REQUEST['filter']['Query']['limit']) )\n    $eventsSql .= ' LIMIT '.validInt($_REQUEST['filter']['Query']['limit']);\n} # end if filter\n\n$results = dbQuery($eventsSql, $eventsValues);\n\necho 'Export the following ' .$results->rowCount() . ' events:<br/>';\n$disk_space_total = 0;\n?>\n        <table id=\"contentTable\" class=\"major\">\n          <thead>\n            <tr>\n              <th class=\"colId\"><a href=\"<?php echo sortHeader('Id') ?>\"><?php echo translate('Id') ?><?php echo sortTag('Id') ?></a></th>\n              <th class=\"colName\"><a href=\"<?php echo sortHeader('Name') ?>\"><?php echo translate('Name') ?><?php echo sortTag('Name') ?></a></th>\n              <th class=\"colMonitor\"><a href=\"<?php echo sortHeader('MonitorName') ?>\"><?php echo translate('Monitor') ?><?php echo sortTag('MonitorName') ?></a></th>\n              <th class=\"colCause\"><a href=\"<?php echo sortHeader('Cause') ?>\"><?php echo translate('Cause') ?><?php echo sortTag('Cause') ?></a></th>\n              <th class=\"colTime\"><a href=\"<?php echo sortHeader('StartTime') ?>\"><?php echo translate('Time') ?><?php echo sortTag('StartTime') ?></a></th>\n              <th class=\"colDuration\"><a href=\"<?php echo sortHeader('Length') ?>\"><?php echo translate('Duration') ?><?php echo sortTag('Length') ?></a></th>\n              <th class=\"colFrames\"><a href=\"<?php echo sortHeader('Frames') ?>\"><?php echo translate('Frames') ?><?php echo sortTag('Frames') ?></a></th>\n              <th class=\"colAlarmFrames\"><a href=\"<?php echo sortHeader('AlarmFrames') ?>\"><?php echo translate('AlarmBrFrames') ?><?php echo sortTag('AlarmFrames') ?></a></th>\n              <th class=\"colTotScore\"><a href=\"<?php echo sortHeader('TotScore') ?>\"><?php echo translate('TotalBrScore') ?><?php echo sortTag('TotScore') ?></a></th>\n              <th class=\"colAvgScore\"><a href=\"<?php echo sortHeader('AvgScore') ?>\"><?php echo translate('AvgBrScore') ?><?php echo sortTag('AvgScore') ?></a></th>\n              <th class=\"colMaxScore\"><a href=\"<?php echo sortHeader('MaxScore') ?>\"><?php echo translate('MaxBrScore') ?><?php echo sortTag('MaxScore') ?></a></th>\n<?php\n    if ( ZM_WEB_EVENT_DISK_SPACE ) {\n?>\n              <th class=\"colDiskSpace\"><a href=\"<?php echo sortHeader('DiskSpace') ?>\"><?php echo translate('DiskSpace') ?><?php echo sortTag('DiskSpace') ?></a></th>\n<?php\n    }\n?>\n        </tr>\n      </thead>\n      <tbody>\n<?php\n$event_count = 0;\nwhile ( $event_row = dbFetchNext($results) ) {\n  $event = new ZM\\Event($event_row);\n  $scale = max(reScale(SCALE_BASE, $event->Monitor()->DefaultScale(), ZM_WEB_DEFAULT_SCALE), SCALE_BASE);\n?>\n          <tr<?php echo $event->Archived() ? ' class=\"archived\"' : '' ?>>\n              <td class=\"colId\">\n                <input type=\"hidden\" name=\"eids[]\" value=\"<?php echo $event->Id()?>\"/>\n                <a href=\"?view=event&amp;eid=<?php echo $event->Id().$filterQuery.$sortQuery ?>&amp;page=1\"><?php echo $event->Id().($event->Archived()?'*':'') ?></a>\n              </td>\n              <td class=\"colName\"><a href=\"?view=event&amp;eid=<?php echo $event->Id().$filterQuery.$sortQuery ?>&amp;page=1\"><?php echo validHtmlStr($event->Name()).($event->Archived()?'*':'') ?></a></td>\n              <td class=\"colMonitorName\"><?php echo makePopupLink( '?view=monitor&amp;mid='.$event->MonitorId(), 'zmMonitor'.$event->MonitorId(), 'monitor', $event->MonitorName(), canEdit( 'Monitors' ) ) ?></td>\n              <td class=\"colCause\"><?php echo makePopupLink( '?view=eventdetail&amp;eid='.$event->Id(), 'zmEventDetail', 'eventdetail', validHtmlStr($event->Cause()), canEdit( 'Events' ), 'title=\"'.htmlspecialchars($event->Notes()).'\"' ) ?></td>\n              <td class=\"colTime\"><?php echo strftime(STRF_FMT_DATETIME_SHORTER, strtotime($event->StartTime())) .\n( $event->EndTime() ? ' until ' . strftime(STRF_FMT_DATETIME_SHORTER, strtotime($event->EndTime()) ) : '' ) ?>\n              </td>\n              <td class=\"colDuration\"><?php echo gmdate(\"H:i:s\", $event->Length() ) ?></td>\n              <td class=\"colFrames\"><?php echo makePopupLink( '?view=frames&amp;eid='.$event->Id(), 'zmFrames', 'frames', $event->Frames() ) ?></td>\n              <td class=\"colAlarmFrames\"><?php echo makePopupLink( '?view=frames&amp;eid='.$event->Id(), 'zmFrames', 'frames', $event->AlarmFrames() ) ?></td>\n              <td class=\"colTotScore\"><?php echo $event->TotScore() ?></td>\n              <td class=\"colAvgScore\"><?php echo $event->AvgScore() ?></td>\n              <td class=\"colMaxScore\"><?php echo\n $event->MaxScore();\n #makePopupLink('?view=frame&amp;eid='.$event->Id().'&amp;fid=0', 'zmImage', array('image', reScale($event->Width(), $scale), reScale($event->Height(), $scale)), $event->MaxScore()) ?></td>\n<?php\n  if ( ZM_WEB_EVENT_DISK_SPACE ) {\n    $disk_space_total += $event->DiskSpace();\n\t\t$event_count += 1;\n    echo '<td class=\"colDiskSpace\">'.human_filesize($event->DiskSpace()).'</td>';\n  }\n  unset($event);\n  echo '\n</tr>\n';\n} # end foreach event\n?>\n        </tbody>\n\t\t\t\t<tfoot>\n          <tr>\n            <td colspan=\"11\"><?php echo $event_count ?> events</td>\n<?php\n  if ( ZM_WEB_EVENT_DISK_SPACE ) {\n?>\n            <td class=\"colDiskSpace\"><?php echo human_filesize($disk_space_total);?></td>\n<?php\n  }\n?>\n          </tr>\n\t\t\t\t</tfoot>\n      </table>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportDetail\"><?php echo translate('ExportDetails') ?>\n          <input type=\"checkbox\" name=\"exportDetail\" value=\"1\"<?php if ( !empty($_REQUEST['exportDetail']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exportFrames\"><?php echo translate('ExportFrames') ?>\n          <input type=\"checkbox\" name=\"exportFrames\" value=\"1\"<?php if ( !empty($_REQUEST['exportFrames']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportImages\"><?php echo translate('ExportImageFiles') ?>\n          <input type=\"checkbox\" name=\"exportImages\" value=\"1\"<?php if ( !empty($_REQUEST['exportImages']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n\n        </label>\n       </div>\n       <div class=\"form-group\">\n         <label for=\"exportVideo\"><?php echo translate('ExportVideoFiles') ?>\n         <input type=\"checkbox\" name=\"exportVideo\" value=\"1\"<?php if ( !empty($_REQUEST['exportVideo']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n         </label>\n       </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportMisc\"><?php echo translate('ExportMiscFiles') ?>\n        <input type=\"checkbox\" name=\"exportMisc\" value=\"1\"<?php if ( !empty($_REQUEST['exportMisc']) ) { ?> checked=\"checked\"<?php } ?> data-on-click-this=\"configureExportButton\"/>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"form-group\">\n        <label for=\"exportFormat\"><?php echo translate('ExportFormat') ?>\n          <?php echo html_radio('exportFormat',\n            array('tar'=>translate('ExportFormatTar'), 'zip' => translate('ExportFormatZip')),\n            (isset($_REQUEST['exportFormat'])?$_REQUEST['exportFormat']:'zip'), # default to zip\n            array(),\n            array('data-on-click-this'=>'configureExportButton')\n          ); ?>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exportCompress\"><?php echo translate('ExportCompress') ?>\n          <?php echo html_radio('exportCompress',\n            array('1'=>translate('Yes'), '0' => translate('No')),\n            (isset($_REQUEST['exportCompress'])?$_REQUEST['exportCompress']:'0'), # default to no\n            array(),\n            array('data-on-click-this'=>'configureExportButton')\n          ); ?>\n        </label>\n      </div>\n    </div>\n  </div><!--row-->\n  <button type=\"button\" id=\"exportButton\" name=\"exportButton\" value=\"Export\" disabled=\"disabled\"><?php echo translate('Export') ?></button>\n</div><!--container-->\n          <h2 id=\"exportProgress\" class=\"<?php\n            if ( isset($_REQUEST['generated']) ) {\n              if ( $_REQUEST['generated'] )\n                echo 'infoText';\n              else\n                echo 'errorText';\n            } else {\n              echo 'hidden warnText';\n            }\n        ?>\">\n            <span id=\"exportProgressText\">\n              <?php\n                if ( isset($_REQUEST['generated']) ) {\n                  if ( $_REQUEST['generated'] )\n                    echo translate('ExportSucceeded');\n                  else\n                    echo translate('ExportFailed');\n                }\n            ?></span>\n            <span id=\"exportProgressTicker\"></span>\n          </h2>\n          <button type=\"button\" data-on-click-this=\"startDownload\"<?php echo empty($_REQUEST['generated'])? ' class=\"hidden\"' : '' ?>><?php echo translate('Download') ?></button>\n          <input type=\"hidden\" name=\"exportFile\" value=\"<?php echo isset($_REQUEST['exportFile']) ? validHtmlStr($_REQUEST['exportFile']) : '' ?>\"/>\n          <input type=\"hidden\" name=\"generated\" value=\"<?php echo isset($_REQUEST['generated']) ? validHtmlStr($_REQUEST['generated']) : '' ?>\"/>\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n"], "filenames": ["web/skins/classic/views/download.php", "web/skins/classic/views/export.php"], "buggy_code_start_loc": [65, 58], "buggy_code_end_loc": [79, 59], "fixing_code_start_loc": [65, 58], "fixing_code_end_loc": [79, 59], "type": "CWE-79", "message": "ZoneMinder before 1.34.21 has XSS via the connkey parameter to download.php or export.php.", "other": {"cve": {"id": "CVE-2020-25729", "sourceIdentifier": "cve@mitre.org", "published": "2020-09-17T18:15:12.523", "lastModified": "2020-09-24T14:42:09.080", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "ZoneMinder before 1.34.21 has XSS via the connkey parameter to download.php or export.php."}, {"lang": "es", "value": "ZoneMinder versiones anteriores a 1.34.21, presenta una vulnerabilidad de tipo XSS por medio del par\u00e1metro connkey para los archivos download.php o export.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:zoneminder:zoneminder:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.34.21", "matchCriteriaId": "B0F1456B-A3D0-449E-8E56-C65E6546C05E"}]}]}], "references": [{"url": "https://forums.zoneminder.com/viewforum.php?f=1", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://github.com/ZoneMinder/zoneminder/commit/9268db14a79c4ccd444c2bf8d24e62b13207b413", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/ZoneMinder/zoneminder/releases/tag/1.34.21", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ZoneMinder/zoneminder/commit/9268db14a79c4ccd444c2bf8d24e62b13207b413"}}