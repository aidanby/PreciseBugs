{"buggy_code": ["'use strict';\n\n/**\n * Teedy application.\n */\nangular.module('docs',\n    // Dependencies\n    ['ui.router', 'ui.bootstrap', 'dialog', 'ngProgress', 'monospaced.qrcode', 'yaru22.angular-timeago', 'ui.validate',\n      'ui.sortable', 'restangular', 'ngSanitize', 'ngTouch', 'colorpicker.module', 'ngFileUpload', 'pascalprecht.translate',\n      'tmh.dynamicLocale', 'ngOnboarding']\n  )\n\n/**\n * Configuring modules.\n */\n.config(function($locationProvider, $urlRouterProvider, $stateProvider, $httpProvider, $qProvider,\n                 RestangularProvider, $translateProvider, timeAgoSettings, tmhDynamicLocaleProvider) {\n  $locationProvider.hashPrefix('');\n\n  // Configuring UI Router\n  $stateProvider\n    .state('main', {\n      url: '',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/main.html',\n          controller: 'Main'\n        }\n      }\n    })\n    .state('passwordreset', {\n      url: '/passwordreset/:key',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/passwordreset.html',\n          controller: 'PasswordReset'\n        }\n      }\n    })\n    .state('tag', {\n      url: '/tag',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/tag.html',\n          controller: 'Tag'\n        }\n      }\n    })\n    .state('tag.default', {\n      url: '',\n      views: {\n        'tag': {\n          templateUrl: 'partial/docs/tag.default.html'\n        }\n      }\n    })\n    .state('tag.edit', {\n      url: '/:id',\n      views: {\n        'tag': {\n          templateUrl: 'partial/docs/tag.edit.html',\n          controller: 'TagEdit'\n        }\n      }\n    })\n    .state('settings', {\n      url: '/settings',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/settings.html',\n          controller: 'Settings'\n        }\n      }\n    })\n    .state('settings.default', {\n      url: '',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.default.html',\n          controller: 'SettingsDefault'\n        }\n      }\n    })\n    .state('settings.account', {\n      url: '/account',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.account.html',\n          controller: 'SettingsAccount'\n        }\n      }\n    })\n    .state('settings.security', {\n      url: '/security',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.security.html',\n          controller: 'SettingsSecurity'\n        }\n      }\n    })\n    .state('settings.session', {\n      url: '/session',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.session.html',\n          controller: 'SettingsSession'\n        }\n      }\n    })\n    .state('settings.fileimporter', {\n      url: '/fileimporter',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.fileimporter.html'\n        }\n      }\n    })\n    .state('settings.monitoring', {\n      url: '/monitoring',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.monitoring.html',\n          controller: 'SettingsMonitoring'\n        }\n      }\n    })\n    .state('settings.config', {\n      url: '/config',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.config.html',\n          controller: 'SettingsConfig'\n        }\n      }\n    })\n    .state('settings.inbox', {\n      url: '/inbox',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.inbox.html',\n          controller: 'SettingsInbox'\n        }\n      }\n    })\n    .state('settings.metadata', {\n      url: '/metadata',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.metadata.html',\n          controller: 'SettingsMetadata'\n        }\n      }\n    })\n    .state('settings.user', {\n      url: '/user',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.user.html',\n          controller: 'SettingsUser'\n        }\n      }\n    })\n    .state('settings.user.edit', {\n      url: '/edit/:username',\n      views: {\n        'user': {\n          templateUrl: 'partial/docs/settings.user.edit.html',\n          controller: 'SettingsUserEdit'\n        }\n      }\n    })\n    .state('settings.user.add', {\n      url: '/add',\n      views: {\n        'user': {\n          templateUrl: 'partial/docs/settings.user.edit.html',\n          controller: 'SettingsUserEdit'\n        }\n      }\n    })\n    .state('settings.workflow', {\n      url: '/workflow',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.workflow.html',\n          controller: 'SettingsWorkflow'\n        }\n      }\n    })\n    .state('settings.workflow.edit', {\n      url: '/edit/:id',\n      views: {\n        'workflow': {\n          templateUrl: 'partial/docs/settings.workflow.edit.html',\n          controller: 'SettingsWorkflowEdit'\n        }\n      }\n    })\n    .state('settings.workflow.add', {\n      url: '/add',\n      views: {\n        'workflow': {\n          templateUrl: 'partial/docs/settings.workflow.edit.html',\n          controller: 'SettingsWorkflowEdit'\n        }\n      }\n    })\n    .state('settings.group', {\n      url: '/group',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.group.html',\n          controller: 'SettingsGroup'\n        }\n      }\n    })\n    .state('settings.group.edit', {\n      url: '/edit/:name',\n      views: {\n        'group': {\n          templateUrl: 'partial/docs/settings.group.edit.html',\n          controller: 'SettingsGroupEdit'\n        }\n      }\n    })\n    .state('settings.group.add', {\n      url: '/add',\n      views: {\n        'group': {\n          templateUrl: 'partial/docs/settings.group.edit.html',\n          controller: 'SettingsGroupEdit'\n        }\n      }\n    })\n    .state('settings.vocabulary', {\n      url: '/vocabulary',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.vocabulary.html',\n          controller: 'SettingsVocabulary'\n        }\n      }\n    })\n    .state('settings.ldap', {\n      url: '/ldap',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.ldap.html',\n          controller: 'SettingsLdap'\n        }\n      }\n    })\n    .state('document', {\n      url: '/document',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/document.html',\n          controller: 'Document'\n        }\n      }\n    })\n    .state('document.default', {\n      url: '',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.default.html',\n          controller: 'DocumentDefault'\n        }\n      }\n    })\n    .state('document.default.search', {\n      url: '/search/:search'\n    })\n    .state('document.default.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n    .state('document.add', {\n      url: '/add?files',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.edit.html',\n          controller: 'DocumentEdit'\n        }\n      }\n    })\n    .state('document.edit', {\n      url: '/edit/:id?files',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.edit.html',\n          controller: 'DocumentEdit'\n        }\n      }\n    })\n    .state('document.view', {\n      url: '/view/:id',\n      redirectTo: 'document.view.content',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.view.html',\n          controller: 'DocumentView'\n        }\n      }\n    })\n    .state('document.view.content', {\n      url: '/content',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.content.html',\n          controller: 'DocumentViewContent'\n        }\n      }\n    })\n    .state('document.view.workflow', {\n      url: '/workflow',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.workflow.html',\n          controller: 'DocumentViewWorkflow'\n        }\n      }\n    })\n    .state('document.view.content.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n    .state('document.view.permissions', {\n      url: '/permissions',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.permissions.html',\n          controller: 'DocumentViewPermissions'\n        }\n      }\n    })\n    .state('document.view.activity', {\n      url: '/activity',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.activity.html',\n          controller: 'DocumentViewActivity'\n        }\n      }\n    })\n    .state('login', {\n      url: '/login?redirectState&redirectParams',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/login.html',\n          controller: 'Login'\n        }\n      }\n    })\n    .state('user', {\n      url: '/user',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/usergroup.html',\n          controller: 'UserGroup'\n        }\n      }\n    })\n    .state('user.default', {\n      url: '',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/usergroup.default.html'\n        }\n      }\n    })\n    .state('user.profile', {\n      url: '/:username',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/user.profile.html',\n          controller: 'UserProfile'\n        }\n      }\n    })\n    .state('group', {\n      url: '/group',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/usergroup.html',\n          controller: 'UserGroup'\n        }\n      }\n    })\n    .state('group.default', {\n      url: '',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/usergroup.default.html'\n        }\n      }\n    })\n    .state('group.profile', {\n      url: '/:name',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/group.profile.html',\n          controller: 'GroupProfile'\n        }\n      }\n    });\n\n  // Configuring Restangular\n  RestangularProvider.setBaseUrl('../api');\n\n  // Configuring Angular Translate\n  $translateProvider\n    .useSanitizeValueStrategy(null)\n    .useStaticFilesLoader({\n      prefix: 'locale/',\n      suffix: '.json?@build.date@'\n    })\n    .registerAvailableLanguageKeys(['en', 'es', 'fr', 'de', 'el', 'ru', 'it', 'pl', 'zh_CN', 'zh_TW'], {\n      'en_*': 'en',\n      'es_*': 'es',\n      'fr_*': 'fr',\n      'de_*': 'de',\n\t    'el_*': 'el',\n      'ru_*': 'ru',\n      'it_*': 'it',\n\t    'pl_*': 'pl',\n      '*': 'en'\n    })\n    .fallbackLanguage('en');\n\n  if (!_.isUndefined(localStorage.overrideLang)) {\n    // Set the current language if an override is saved in local storage\n    $translateProvider.use(localStorage.overrideLang);\n  } else {\n    // Or else determine the language based on the user's browser\n    $translateProvider.determinePreferredLanguage();\n    if (!$translateProvider.use()) {\n      $translateProvider.use('en');\n    }\n  }\n\n  // Configuring Timago\n  timeAgoSettings.fullDateAfterSeconds = 60 * 60 * 24 * 30; // 30 days\n\n  // Configuring tmhDynamicLocale\n  tmhDynamicLocaleProvider.localeLocationPattern('locale/angular-locale_{{locale}}.js');\n\n  // Configuring $http to act like jQuery.ajax\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.transformRequest = [function(data) {\n    var param = function(obj) {\n      var query = '';\n      var name, value, fullSubName, subName, subValue, innerObj, i;\n      \n      for(name in obj) {\n        value = obj[name];\n        \n        if(value instanceof Array) {\n          for(i=0; i<value.length; ++i) {\n            subValue = value[i];\n            fullSubName = name;\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        } else if(value instanceof Object) {\n          for(subName in value) {\n            subValue = value[subName];\n            fullSubName = name + '[' + subName + ']';\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        }\n        else if(value !== undefined && value !== null) {\n          query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n        }\n      }\n      \n      return query.length ? query.substr(0, query.length - 1) : query;\n    };\n    \n    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\n  }];\n\n  // Silence unhandled rejections\n  $qProvider.errorOnUnhandledRejections(false);\n})\n\n/**\n * Application initialization.\n */\n.run(function($rootScope, $state, $stateParams, Restangular) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  // Fetch the current theme configuration\n  $rootScope.appName = '';\n  Restangular.one('theme').get().then(function(data) {\n    $rootScope.appName = data.name;\n  });\n\n  // Languages\n  $rootScope.acceptedLanguages = [\n    { key: 'eng', label: 'English' },\n    { key: 'fra', label: 'Fran\u00e7ais' },\n    { key: 'ita', label: 'Italiano' },\n    { key: 'deu', label: 'Deutsch' },\n    { key: 'spa', label: 'Espa\u00f1ol' },\n    { key: 'por', label: 'Portugu\u00eas' },\n    { key: 'pol', label: 'Polski' },\n    { key: 'rus', label: '\u0440\u0443\u0441\u0441\u043a\u0438\u0439' },\n    { key: 'ukr', label: '\u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430' },\n    { key: 'ara', label: '\u0627\u0644\u0639\u0631\u0628\u064a\u0629' },\n    { key: 'hin', label: '\u0939\u093f\u0928\u094d\u0926\u0940' },\n    { key: 'chi_sim', label: '\u7b80\u4f53\u4e2d\u6587' },\n    { key: 'chi_tra', label: '\u7e41\u4f53\u4e2d\u6587' },\n    { key: 'jpn', label: '\u65e5\u672c\u8a9e' },\n    { key: 'tha', label: '\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22' },\n    { key: 'kor', label: '\ud55c\uad6d\uc5b4' },\n    { key: 'nld', label: 'Nederlands' },\n    { key: 'tur', label: 'T\u00fcrk\u00e7e' },\n    { key: 'heb', label: '\u05e2\u05d1\u05e8\u05d9\u05ea' },\n    { key: 'hun', label: 'Magyar' },\n    { key: 'fin', label: 'Suomi' },\n    { key: 'swe', label: 'Svenska' },\n    { key: 'lav', label: 'Latvie\u0161u' },\n    { key: 'dan', label: 'Dansk' },\n    { key: 'nor', label: 'Norsk' },\n    { key: 'vie', label: 'Ti\u1ebfng Vi\u1ec7t' }\n  ];\n})\n/**\n * Initialize ngProgress.\n */\n.run (function ($rootScope, ngProgressFactory, $http) {\n  $rootScope.ngProgress = ngProgressFactory.createInstance();\n\n  // Watch for the number of XHR running\n  $rootScope.$watch(function() {\n    return $http.pendingRequests.length > 0\n  }, function(loading) {\n    if (!loading) {\n      $rootScope.ngProgress.complete();\n    } else {\n      $rootScope.ngProgress.start();\n    }\n  });\n})\n/**\n * Initialize ngOnboarding.\n */\n.run (function ($rootScope) {\n  $rootScope.onboardingEnabled = false;\n});\n\nif (location.search.indexOf(\"protractor\") > -1) {\n  window.name = 'NG_DEFER_BOOTSTRAP!';\n}\n", "'use strict';\n\n/**\n * Share application.\n */\nangular.module('share',\n    // Dependencies\n    ['ui.router', 'ui.bootstrap', 'restangular', 'ngSanitize', 'ngTouch', 'pascalprecht.translate', 'tmh.dynamicLocale']\n  )\n\n/**\n * Configuring modules.\n */\n.config(function($locationProvider, $stateProvider, $httpProvider, RestangularProvider, $translateProvider, tmhDynamicLocaleProvider) {\n  $locationProvider.hashPrefix('');\n\n  // Configuring UI Router\n  $stateProvider\n  .state('main', {\n    url: '',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/main.html',\n        controller: 'Main'\n      }\n    }\n  })\n  .state('share', {\n    url: '/share/:documentId/:shareId',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/share.html',\n        controller: 'Share'\n      }\n    }\n  })\n    .state('share.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n  .state('403', {\n    url: '/403',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/403.html'\n      }\n    }\n  });\n  \n  // Configuring Restangular\n  RestangularProvider.setBaseUrl('../api');\n\n  // Configuring Angular Translate\n  $translateProvider\n      .useSanitizeValueStrategy(null)\n      .useStaticFilesLoader({\n        prefix: 'locale/',\n        suffix: '.json?@build.date@'\n      })\n      .registerAvailableLanguageKeys(['en', 'es', 'fr', 'de', 'el', 'ru', 'it', 'pl', 'zh_CN', 'zh_TW'], {\n        'en_*': 'en',\n        'es_*': 'es',\n        'fr_*': 'fr',\n        'de_*': 'de',\n        'el_*': 'el',\n        'ru_*': 'ru',\n        'it_*': 'it',\n        'pl_*': 'pl',\n        '*': 'en'\n      })\n      .fallbackLanguage('en');\n\n  if (!_.isUndefined(localStorage.overrideLang)) {\n    // Set the current language if an override is saved in local storage\n    $translateProvider.use(localStorage.overrideLang);\n  } else {\n    // Or else determine the language based on the user's browser\n    $translateProvider.determinePreferredLanguage();\n  }\n\n  // Configuring tmhDynamicLocale\n  tmhDynamicLocaleProvider.localeLocationPattern('locale/angular-locale_{{locale}}.js');\n  \n  // Configuring $http to act like jQuery.ajax\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.transformRequest = [function(data) {\n    var param = function(obj) {\n      var query = '';\n      var name, value, fullSubName, subName, subValue, innerObj, i;\n      \n      for(name in obj) {\n        value = obj[name];\n        \n        if(value instanceof Array) {\n          for(i=0; i<value.length; ++i) {\n            subValue = value[i];\n            fullSubName = name;\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        } else if(value instanceof Object) {\n          for(subName in value) {\n            subValue = value[subName];\n            fullSubName = name + '[' + subName + ']';\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        }\n        else if(value !== undefined && value !== null) {\n          query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n        }\n      }\n      \n      return query.length ? query.substr(0, query.length - 1) : query;\n    };\n    \n    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\n  }];\n})\n\n/**\n * Application initialization.\n */\n.run(function($rootScope, $state, $stateParams, Restangular) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  // Fetch the current theme configuration\n  $rootScope.appName = '';\n  Restangular.one('theme').get().then(function(data) {\n    $rootScope.appName = data.name;\n  });\n});"], "fixing_code": ["'use strict';\n\n/**\n * Teedy application.\n */\nangular.module('docs',\n    // Dependencies\n    ['ui.router', 'ui.bootstrap', 'dialog', 'ngProgress', 'monospaced.qrcode', 'yaru22.angular-timeago', 'ui.validate',\n      'ui.sortable', 'restangular', 'ngSanitize', 'ngTouch', 'colorpicker.module', 'ngFileUpload', 'pascalprecht.translate',\n      'tmh.dynamicLocale', 'ngOnboarding']\n  )\n\n/**\n * Configuring modules.\n */\n.config(function($locationProvider, $urlRouterProvider, $stateProvider, $httpProvider, $qProvider,\n                 RestangularProvider, $translateProvider, timeAgoSettings, tmhDynamicLocaleProvider) {\n  $locationProvider.hashPrefix('');\n\n  // Configuring UI Router\n  $stateProvider\n    .state('main', {\n      url: '',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/main.html',\n          controller: 'Main'\n        }\n      }\n    })\n    .state('passwordreset', {\n      url: '/passwordreset/:key',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/passwordreset.html',\n          controller: 'PasswordReset'\n        }\n      }\n    })\n    .state('tag', {\n      url: '/tag',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/tag.html',\n          controller: 'Tag'\n        }\n      }\n    })\n    .state('tag.default', {\n      url: '',\n      views: {\n        'tag': {\n          templateUrl: 'partial/docs/tag.default.html'\n        }\n      }\n    })\n    .state('tag.edit', {\n      url: '/:id',\n      views: {\n        'tag': {\n          templateUrl: 'partial/docs/tag.edit.html',\n          controller: 'TagEdit'\n        }\n      }\n    })\n    .state('settings', {\n      url: '/settings',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/settings.html',\n          controller: 'Settings'\n        }\n      }\n    })\n    .state('settings.default', {\n      url: '',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.default.html',\n          controller: 'SettingsDefault'\n        }\n      }\n    })\n    .state('settings.account', {\n      url: '/account',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.account.html',\n          controller: 'SettingsAccount'\n        }\n      }\n    })\n    .state('settings.security', {\n      url: '/security',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.security.html',\n          controller: 'SettingsSecurity'\n        }\n      }\n    })\n    .state('settings.session', {\n      url: '/session',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.session.html',\n          controller: 'SettingsSession'\n        }\n      }\n    })\n    .state('settings.fileimporter', {\n      url: '/fileimporter',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.fileimporter.html'\n        }\n      }\n    })\n    .state('settings.monitoring', {\n      url: '/monitoring',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.monitoring.html',\n          controller: 'SettingsMonitoring'\n        }\n      }\n    })\n    .state('settings.config', {\n      url: '/config',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.config.html',\n          controller: 'SettingsConfig'\n        }\n      }\n    })\n    .state('settings.inbox', {\n      url: '/inbox',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.inbox.html',\n          controller: 'SettingsInbox'\n        }\n      }\n    })\n    .state('settings.metadata', {\n      url: '/metadata',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.metadata.html',\n          controller: 'SettingsMetadata'\n        }\n      }\n    })\n    .state('settings.user', {\n      url: '/user',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.user.html',\n          controller: 'SettingsUser'\n        }\n      }\n    })\n    .state('settings.user.edit', {\n      url: '/edit/:username',\n      views: {\n        'user': {\n          templateUrl: 'partial/docs/settings.user.edit.html',\n          controller: 'SettingsUserEdit'\n        }\n      }\n    })\n    .state('settings.user.add', {\n      url: '/add',\n      views: {\n        'user': {\n          templateUrl: 'partial/docs/settings.user.edit.html',\n          controller: 'SettingsUserEdit'\n        }\n      }\n    })\n    .state('settings.workflow', {\n      url: '/workflow',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.workflow.html',\n          controller: 'SettingsWorkflow'\n        }\n      }\n    })\n    .state('settings.workflow.edit', {\n      url: '/edit/:id',\n      views: {\n        'workflow': {\n          templateUrl: 'partial/docs/settings.workflow.edit.html',\n          controller: 'SettingsWorkflowEdit'\n        }\n      }\n    })\n    .state('settings.workflow.add', {\n      url: '/add',\n      views: {\n        'workflow': {\n          templateUrl: 'partial/docs/settings.workflow.edit.html',\n          controller: 'SettingsWorkflowEdit'\n        }\n      }\n    })\n    .state('settings.group', {\n      url: '/group',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.group.html',\n          controller: 'SettingsGroup'\n        }\n      }\n    })\n    .state('settings.group.edit', {\n      url: '/edit/:name',\n      views: {\n        'group': {\n          templateUrl: 'partial/docs/settings.group.edit.html',\n          controller: 'SettingsGroupEdit'\n        }\n      }\n    })\n    .state('settings.group.add', {\n      url: '/add',\n      views: {\n        'group': {\n          templateUrl: 'partial/docs/settings.group.edit.html',\n          controller: 'SettingsGroupEdit'\n        }\n      }\n    })\n    .state('settings.vocabulary', {\n      url: '/vocabulary',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.vocabulary.html',\n          controller: 'SettingsVocabulary'\n        }\n      }\n    })\n    .state('settings.ldap', {\n      url: '/ldap',\n      views: {\n        'settings': {\n          templateUrl: 'partial/docs/settings.ldap.html',\n          controller: 'SettingsLdap'\n        }\n      }\n    })\n    .state('document', {\n      url: '/document',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/document.html',\n          controller: 'Document'\n        }\n      }\n    })\n    .state('document.default', {\n      url: '',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.default.html',\n          controller: 'DocumentDefault'\n        }\n      }\n    })\n    .state('document.default.search', {\n      url: '/search/:search'\n    })\n    .state('document.default.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n    .state('document.add', {\n      url: '/add?files',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.edit.html',\n          controller: 'DocumentEdit'\n        }\n      }\n    })\n    .state('document.edit', {\n      url: '/edit/:id?files',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.edit.html',\n          controller: 'DocumentEdit'\n        }\n      }\n    })\n    .state('document.view', {\n      url: '/view/:id',\n      redirectTo: 'document.view.content',\n      views: {\n        'document': {\n          templateUrl: 'partial/docs/document.view.html',\n          controller: 'DocumentView'\n        }\n      }\n    })\n    .state('document.view.content', {\n      url: '/content',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.content.html',\n          controller: 'DocumentViewContent'\n        }\n      }\n    })\n    .state('document.view.workflow', {\n      url: '/workflow',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.workflow.html',\n          controller: 'DocumentViewWorkflow'\n        }\n      }\n    })\n    .state('document.view.content.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n    .state('document.view.permissions', {\n      url: '/permissions',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.permissions.html',\n          controller: 'DocumentViewPermissions'\n        }\n      }\n    })\n    .state('document.view.activity', {\n      url: '/activity',\n      views: {\n        'tab': {\n          templateUrl: 'partial/docs/document.view.activity.html',\n          controller: 'DocumentViewActivity'\n        }\n      }\n    })\n    .state('login', {\n      url: '/login?redirectState&redirectParams',\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/login.html',\n          controller: 'Login'\n        }\n      }\n    })\n    .state('user', {\n      url: '/user',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/usergroup.html',\n          controller: 'UserGroup'\n        }\n      }\n    })\n    .state('user.default', {\n      url: '',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/usergroup.default.html'\n        }\n      }\n    })\n    .state('user.profile', {\n      url: '/:username',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/user.profile.html',\n          controller: 'UserProfile'\n        }\n      }\n    })\n    .state('group', {\n      url: '/group',\n      abstract: true,\n      views: {\n        'page': {\n          templateUrl: 'partial/docs/usergroup.html',\n          controller: 'UserGroup'\n        }\n      }\n    })\n    .state('group.default', {\n      url: '',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/usergroup.default.html'\n        }\n      }\n    })\n    .state('group.profile', {\n      url: '/:name',\n      views: {\n        'sub': {\n          templateUrl: 'partial/docs/group.profile.html',\n          controller: 'GroupProfile'\n        }\n      }\n    });\n\n  // Configuring Restangular\n  RestangularProvider.setBaseUrl('../api');\n\n  // Configuring Angular Translate\n  $translateProvider\n    .useSanitizeValueStrategy('escapeParameters')\n    .useStaticFilesLoader({\n      prefix: 'locale/',\n      suffix: '.json?@build.date@'\n    })\n    .registerAvailableLanguageKeys(['en', 'es', 'fr', 'de', 'el', 'ru', 'it', 'pl', 'zh_CN', 'zh_TW'], {\n      'en_*': 'en',\n      'es_*': 'es',\n      'fr_*': 'fr',\n      'de_*': 'de',\n\t    'el_*': 'el',\n      'ru_*': 'ru',\n      'it_*': 'it',\n\t    'pl_*': 'pl',\n      '*': 'en'\n    })\n    .fallbackLanguage('en');\n\n  if (!_.isUndefined(localStorage.overrideLang)) {\n    // Set the current language if an override is saved in local storage\n    $translateProvider.use(localStorage.overrideLang);\n  } else {\n    // Or else determine the language based on the user's browser\n    $translateProvider.determinePreferredLanguage();\n    if (!$translateProvider.use()) {\n      $translateProvider.use('en');\n    }\n  }\n\n  // Configuring Timago\n  timeAgoSettings.fullDateAfterSeconds = 60 * 60 * 24 * 30; // 30 days\n\n  // Configuring tmhDynamicLocale\n  tmhDynamicLocaleProvider.localeLocationPattern('locale/angular-locale_{{locale}}.js');\n\n  // Configuring $http to act like jQuery.ajax\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.transformRequest = [function(data) {\n    var param = function(obj) {\n      var query = '';\n      var name, value, fullSubName, subName, subValue, innerObj, i;\n      \n      for(name in obj) {\n        value = obj[name];\n        \n        if(value instanceof Array) {\n          for(i=0; i<value.length; ++i) {\n            subValue = value[i];\n            fullSubName = name;\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        } else if(value instanceof Object) {\n          for(subName in value) {\n            subValue = value[subName];\n            fullSubName = name + '[' + subName + ']';\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        }\n        else if(value !== undefined && value !== null) {\n          query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n        }\n      }\n      \n      return query.length ? query.substr(0, query.length - 1) : query;\n    };\n    \n    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\n  }];\n\n  // Silence unhandled rejections\n  $qProvider.errorOnUnhandledRejections(false);\n})\n\n/**\n * Application initialization.\n */\n.run(function($rootScope, $state, $stateParams, Restangular) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  // Fetch the current theme configuration\n  $rootScope.appName = '';\n  Restangular.one('theme').get().then(function(data) {\n    $rootScope.appName = data.name;\n  });\n\n  // Languages\n  $rootScope.acceptedLanguages = [\n    { key: 'eng', label: 'English' },\n    { key: 'fra', label: 'Fran\u00e7ais' },\n    { key: 'ita', label: 'Italiano' },\n    { key: 'deu', label: 'Deutsch' },\n    { key: 'spa', label: 'Espa\u00f1ol' },\n    { key: 'por', label: 'Portugu\u00eas' },\n    { key: 'pol', label: 'Polski' },\n    { key: 'rus', label: '\u0440\u0443\u0441\u0441\u043a\u0438\u0439' },\n    { key: 'ukr', label: '\u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430' },\n    { key: 'ara', label: '\u0627\u0644\u0639\u0631\u0628\u064a\u0629' },\n    { key: 'hin', label: '\u0939\u093f\u0928\u094d\u0926\u0940' },\n    { key: 'chi_sim', label: '\u7b80\u4f53\u4e2d\u6587' },\n    { key: 'chi_tra', label: '\u7e41\u4f53\u4e2d\u6587' },\n    { key: 'jpn', label: '\u65e5\u672c\u8a9e' },\n    { key: 'tha', label: '\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22' },\n    { key: 'kor', label: '\ud55c\uad6d\uc5b4' },\n    { key: 'nld', label: 'Nederlands' },\n    { key: 'tur', label: 'T\u00fcrk\u00e7e' },\n    { key: 'heb', label: '\u05e2\u05d1\u05e8\u05d9\u05ea' },\n    { key: 'hun', label: 'Magyar' },\n    { key: 'fin', label: 'Suomi' },\n    { key: 'swe', label: 'Svenska' },\n    { key: 'lav', label: 'Latvie\u0161u' },\n    { key: 'dan', label: 'Dansk' },\n    { key: 'nor', label: 'Norsk' },\n    { key: 'vie', label: 'Ti\u1ebfng Vi\u1ec7t' }\n  ];\n})\n/**\n * Initialize ngProgress.\n */\n.run (function ($rootScope, ngProgressFactory, $http) {\n  $rootScope.ngProgress = ngProgressFactory.createInstance();\n\n  // Watch for the number of XHR running\n  $rootScope.$watch(function() {\n    return $http.pendingRequests.length > 0\n  }, function(loading) {\n    if (!loading) {\n      $rootScope.ngProgress.complete();\n    } else {\n      $rootScope.ngProgress.start();\n    }\n  });\n})\n/**\n * Initialize ngOnboarding.\n */\n.run (function ($rootScope) {\n  $rootScope.onboardingEnabled = false;\n});\n\nif (location.search.indexOf(\"protractor\") > -1) {\n  window.name = 'NG_DEFER_BOOTSTRAP!';\n}\n", "'use strict';\n\n/**\n * Share application.\n */\nangular.module('share',\n    // Dependencies\n    ['ui.router', 'ui.bootstrap', 'restangular', 'ngSanitize', 'ngTouch', 'pascalprecht.translate', 'tmh.dynamicLocale']\n  )\n\n/**\n * Configuring modules.\n */\n.config(function($locationProvider, $stateProvider, $httpProvider, RestangularProvider, $translateProvider, tmhDynamicLocaleProvider) {\n  $locationProvider.hashPrefix('');\n\n  // Configuring UI Router\n  $stateProvider\n  .state('main', {\n    url: '',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/main.html',\n        controller: 'Main'\n      }\n    }\n  })\n  .state('share', {\n    url: '/share/:documentId/:shareId',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/share.html',\n        controller: 'Share'\n      }\n    }\n  })\n    .state('share.file', {\n      url: '/file/:fileId',\n      views: {\n        'file': {\n          controller: 'FileView'\n        }\n      }\n    })\n  .state('403', {\n    url: '/403',\n    views: {\n      'page': {\n        templateUrl: 'partial/share/403.html'\n      }\n    }\n  });\n  \n  // Configuring Restangular\n  RestangularProvider.setBaseUrl('../api');\n\n  // Configuring Angular Translate\n  $translateProvider\n      .useSanitizeValueStrategy('escapeParameters')\n      .useStaticFilesLoader({\n        prefix: 'locale/',\n        suffix: '.json?@build.date@'\n      })\n      .registerAvailableLanguageKeys(['en', 'es', 'fr', 'de', 'el', 'ru', 'it', 'pl', 'zh_CN', 'zh_TW'], {\n        'en_*': 'en',\n        'es_*': 'es',\n        'fr_*': 'fr',\n        'de_*': 'de',\n        'el_*': 'el',\n        'ru_*': 'ru',\n        'it_*': 'it',\n        'pl_*': 'pl',\n        '*': 'en'\n      })\n      .fallbackLanguage('en');\n\n  if (!_.isUndefined(localStorage.overrideLang)) {\n    // Set the current language if an override is saved in local storage\n    $translateProvider.use(localStorage.overrideLang);\n  } else {\n    // Or else determine the language based on the user's browser\n    $translateProvider.determinePreferredLanguage();\n  }\n\n  // Configuring tmhDynamicLocale\n  tmhDynamicLocaleProvider.localeLocationPattern('locale/angular-locale_{{locale}}.js');\n  \n  // Configuring $http to act like jQuery.ajax\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  $httpProvider.defaults.transformRequest = [function(data) {\n    var param = function(obj) {\n      var query = '';\n      var name, value, fullSubName, subName, subValue, innerObj, i;\n      \n      for(name in obj) {\n        value = obj[name];\n        \n        if(value instanceof Array) {\n          for(i=0; i<value.length; ++i) {\n            subValue = value[i];\n            fullSubName = name;\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        } else if(value instanceof Object) {\n          for(subName in value) {\n            subValue = value[subName];\n            fullSubName = name + '[' + subName + ']';\n            innerObj = {};\n            innerObj[fullSubName] = subValue;\n            query += param(innerObj) + '&';\n          }\n        }\n        else if(value !== undefined && value !== null) {\n          query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n        }\n      }\n      \n      return query.length ? query.substr(0, query.length - 1) : query;\n    };\n    \n    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\n  }];\n})\n\n/**\n * Application initialization.\n */\n.run(function($rootScope, $state, $stateParams, Restangular) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  // Fetch the current theme configuration\n  $rootScope.appName = '';\n  Restangular.one('theme').get().then(function(data) {\n    $rootScope.appName = data.name;\n  });\n});"], "filenames": ["docs-web/src/main/webapp/src/app/docs/app.js", "docs-web/src/main/webapp/src/app/share/app.js"], "buggy_code_start_loc": [427, 59], "buggy_code_end_loc": [428, 60], "fixing_code_start_loc": [427, 59], "fixing_code_end_loc": [428, 60], "type": "CWE-79", "message": "In Teedy, versions v1.5 through v1.9 are vulnerable to Stored Cross-Site Scripting (XSS) in the name of a created Tag. Since the Tag name is not being sanitized properly in the edit tag page, a low privileged attacker can store malicious scripts in the name of the Tag. In the worst case, the victim who inadvertently triggers the attack is a highly privileged administrator. The injected scripts can extract the Session ID, which can lead to full Account Takeover of the administrator, and privileges escalation.", "other": {"cve": {"id": "CVE-2022-22115", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2022-01-10T16:15:09.993", "lastModified": "2022-01-21T14:19:21.837", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In Teedy, versions v1.5 through v1.9 are vulnerable to Stored Cross-Site Scripting (XSS) in the name of a created Tag. Since the Tag name is not being sanitized properly in the edit tag page, a low privileged attacker can store malicious scripts in the name of the Tag. In the worst case, the victim who inadvertently triggers the attack is a highly privileged administrator. The injected scripts can extract the Session ID, which can lead to full Account Takeover of the administrator, and privileges escalation."}, {"lang": "es", "value": "En Teedy, versiones v1.5 hasta v1.9, son vulnerables a un ataque de tipo Cross-Site Scripting (XSS) Almacenado, en el nombre de una etiqueta creada. Dado que el nombre de la etiqueta no est\u00e1 siendo saneado correctamente en la p\u00e1gina de edici\u00f3n de la etiqueta, un atacante con pocos privilegios puede almacenar scripts maliciosos en el nombre de la etiqueta. En el peor de los casos, la v\u00edctima que desencadena inadvertidamente el ataque es un administrador con altos privilegios. Los scripts inyectados pueden extraer el ID de la sesi\u00f3n, lo que puede conllevar a una toma de posesi\u00f3n completa de la cuenta del administrador, y una escalada de privilegios"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}, {"source": "vulnerabilitylab@mend.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "vulnerabilitylab@mend.io", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sismics:teedy:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.5", "versionEndIncluding": "1.9", "matchCriteriaId": "C76A96EC-CC57-4CEC-82B5-C11EED7DEB85"}]}]}], "references": [{"url": "https://github.com/sismics/docs/commit/4951229576d6892dc58ab8c572e73639ca82d80c", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-22115", "source": "vulnerabilitylab@mend.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sismics/docs/commit/4951229576d6892dc58ab8c572e73639ca82d80c"}}