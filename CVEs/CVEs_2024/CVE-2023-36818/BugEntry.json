{"buggy_code": ["# frozen_string_literal: true\n\nclass SidebarSectionsController < ApplicationController\n  requires_login\n  before_action :check_access_if_public\n\n  def index\n    sections =\n      SidebarSection\n        .strict_loading\n        .includes(:sidebar_urls)\n        .where(\"public OR user_id = ?\", current_user.id)\n        .order(\"(public IS TRUE) DESC, title ASC\")\n        .map { |section| SidebarSectionSerializer.new(section, root: false) }\n\n    render json: sections\n  end\n\n  def create\n    sidebar_section =\n      SidebarSection.create!(section_params.merge(sidebar_urls_attributes: links_params))\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_create_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n      Site.clear_anon_cache!\n    end\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  rescue ActiveRecord::RecordInvalid => e\n    render_json_error(e.record.errors.full_messages.first)\n  end\n\n  def update\n    sidebar_section = SidebarSection.find_by(id: section_params[\"id\"])\n    @guardian.ensure_can_edit!(sidebar_section)\n\n    ActiveRecord::Base.transaction do\n      sidebar_section.update!(section_params.merge(sidebar_urls_attributes: links_params))\n      sidebar_section.sidebar_section_links.update_all(user_id: sidebar_section.user_id)\n\n      order =\n        sidebar_section\n          .sidebar_urls\n          .sort_by do |url|\n            links_params.index { |link| link[\"name\"] == url.name && link[\"value\"] == url.value } ||\n              -1\n          end\n          .each_with_index\n          .map { |url, index| [url.id, index] }\n          .to_h\n\n      set_order(sidebar_section, order)\n    end\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_update_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n      Site.clear_anon_cache!\n    end\n\n    render_serialized(sidebar_section.reload, SidebarSectionSerializer)\n  rescue ActiveRecord::RecordInvalid => e\n    render_json_error(e.record.errors.full_messages.first)\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def reset\n    sidebar_section = SidebarSection.find_by(id: params[:id])\n    raise Discourse::InvalidParameters if !sidebar_section\n    @guardian.ensure_can_edit!(sidebar_section)\n\n    case sidebar_section.section_type\n    when \"community\"\n      sidebar_section.reset_community!\n    end\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  end\n\n  def reorder\n    sidebar_section = SidebarSection.find_by(id: reorder_params[\"sidebar_section_id\"])\n    @guardian.ensure_can_edit!(sidebar_section)\n    order = reorder_params[\"links_order\"].map(&:to_i).each_with_index.to_h\n    set_order(sidebar_section, order)\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def destroy\n    sidebar_section = SidebarSection.find_by(id: section_params[\"id\"])\n    @guardian.ensure_can_delete!(sidebar_section)\n    sidebar_section.destroy!\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_destroy_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n    end\n\n    render json: success_json\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def section_params\n    section_params = params.permit(:id, :title, :public)\n    section_params.merge!(user: current_user) if !params[:public]\n    section_params\n  end\n\n  def links_params\n    params.permit(links: %i[icon name value id _destroy segment])[\"links\"]\n  end\n\n  def reorder_params\n    params.permit(:sidebar_section_id, links_order: [])\n  end\n\n  private\n\n  def set_order(sidebar_section, order)\n    position_generator =\n      (0..sidebar_section.sidebar_section_links.count * 2).excluding(\n        sidebar_section.sidebar_section_links.map(&:position),\n      ).each\n\n    links =\n      sidebar_section\n        .sidebar_section_links\n        .sort_by { |link| order[link.linkable_id] }\n        .map { |link| link.attributes.merge(position: position_generator.next) }\n\n    sidebar_section.sidebar_section_links.upsert_all(links, update_only: [:position])\n  end\n\n  def check_access_if_public\n    return true if !params[:public]\n    raise Discourse::InvalidAccess.new if !guardian.can_create_public_sidebar_section?\n  end\nend\n", "# frozen_string_literal: true\n\nclass SidebarSection < ActiveRecord::Base\n  MAX_TITLE_LENGTH = 30\n\n  belongs_to :user\n  has_many :sidebar_section_links, -> { order(\"position\") }, dependent: :destroy\n\n  has_many :sidebar_urls,\n           through: :sidebar_section_links,\n           source: :linkable,\n           source_type: \"SidebarUrl\"\n\n  accepts_nested_attributes_for :sidebar_urls, allow_destroy: true\n\n  before_save :set_system_user_for_public_section\n\n  validates :title,\n            presence: true,\n            uniqueness: {\n              scope: %i[user_id],\n            },\n            length: {\n              maximum: MAX_TITLE_LENGTH,\n            }\n\n  scope :public_sections, -> { where(\"public\") }\n  enum :section_type, { community: 0 }, scopes: false, suffix: true\n\n  def reset_community!\n    ActiveRecord::Base.transaction do\n      self.update!(title: \"Community\")\n      self.sidebar_section_links.destroy_all\n      community_urls =\n        SidebarUrl::COMMUNITY_SECTION_LINKS.map do |url_data|\n          \"('#{url_data[:name]}', '#{url_data[:path]}', '#{url_data[:icon]}', '#{url_data[:segment]}', false, now(), now())\"\n        end\n\n      result = DB.query <<~SQL\n      INSERT INTO sidebar_urls(name, value, icon, segment, external, created_at, updated_at)\n      VALUES #{community_urls.join(\",\")}\n      RETURNING sidebar_urls.id\n      SQL\n\n      sidebar_section_links =\n        result.map.with_index do |url, index|\n          \"(-1, #{url.id}, 'SidebarUrl', #{self.id}, #{index},  now(), now())\"\n        end\n\n      DB.query <<~SQL\n      INSERT INTO sidebar_section_links(user_id, linkable_id, linkable_type, sidebar_section_id, position, created_at, updated_at)\n      VALUES #{sidebar_section_links.join(\",\")}\n      SQL\n    end\n  end\n\n  private\n\n  def set_system_user_for_public_section\n    self.user_id = Discourse.system_user.id if self.public\n  end\nend\n\n# == Schema Information\n#\n# Table name: sidebar_sections\n#\n#  id           :bigint           not null, primary key\n#  user_id      :integer          not null\n#  title        :string(30)       not null\n#  created_at   :datetime         not null\n#  updated_at   :datetime         not null\n#  public       :boolean          default(FALSE), not null\n#  section_type :integer\n#\n# Indexes\n#\n#  index_sidebar_sections_on_section_type       (section_type) UNIQUE\n#  index_sidebar_sections_on_user_id_and_title  (user_id,title) UNIQUE\n#\n", "# Available options:\n#\n# default            - The default value of the setting. For upload site settings, use the id of the upload seeded in db/fixtures/010_uploads.rb.\n# client             - Set to true if the javascript should have access to this setting's value.\n# refresh            - Set to true if clients should refresh when the setting is changed.\n# min                - For a string setting, the minimum length. For an integer setting, the minimum value.\n# max                - For a string setting, the maximum length. For an integer setting, the maximum value.\n# regex              - A regex that the value must match.\n# validator          - The name of the class that will be use to validate the value of the setting.\n# allow_any          - For choice settings allow items not specified in the choice list (default true)\n# secret             - Set to true if input type should be password and value needs to be scrubbed from logs (default false).\n# enum               - The setting has a fixed set of allowed values, and only one can be chosen.\n#                      Set to the class name that defines the set.\n# locale_default     - A hash which overrides according to `SiteSetting.default_locale`.\n#                      The key should be as the same as possible value of default_locale.\n#\n#\n# type: email    - Must be a valid email address.\n# type: username - Must match the username of an existing user.\n# type: list     - A list of values, chosen from a set of valid values defined in the choices option.\n# type: enum     - A single value, chosen from a set of valid values in the choices option.\n#\n# A type:list setting with the word 'colors' in its name will make color values have a bold line of the corresponding color\n#\nrequired:\n  title:\n    client: true\n    default: \"Discourse\"\n  site_description:\n    default: \"\"\n  short_site_description:\n    default: \"\"\n    client: true\n  contact_email:\n    default: \"\"\n    type: email\n  contact_url:\n    default: \"\"\n  notification_email:\n    default: \"noreply@unconfigured.discourse.org\"\n    type: email\n  site_contact_username:\n    default: \"\"\n    type: username\n  site_contact_group_name:\n    default: \"\"\n    type: group\n  exclude_rel_nofollow_domains:\n    client: true\n    default: \"\"\n    type: list\n    list_type: simple\n  company_name:\n    default: \"\"\n  governing_law:\n    default: \"\"\n  city_for_disputes:\n    default: \"\"\n\nbranding:\n  logo:\n    default: -5\n    client: true\n    type: upload\n  logo_small:\n    default: -6\n    client: true\n    type: upload\n  digest_logo:\n    default: \"\"\n    client: true\n    type: upload\n  mobile_logo:\n    default: \"\"\n    client: true\n    type: upload\n  logo_dark:\n    default: \"\"\n    client: true\n    type: upload\n  logo_small_dark:\n    default: \"\"\n    client: true\n    type: upload\n  mobile_logo_dark:\n    default: \"\"\n    client: true\n    type: upload\n  large_icon:\n    default: \"\"\n    client: true\n    type: upload\n  manifest_icon:\n    default: \"\"\n    type: upload\n  manifest_screenshots:\n    type: list\n    list_type: simple\n    default: \"\"\n  favicon:\n    default: \"\"\n    client: true\n    type: upload\n  apple_touch_icon:\n    default: \"\"\n    client: true\n    type: upload\n  opengraph_image:\n    default: \"\"\n    type: upload\n  twitter_summary_large_image:\n    default: \"\"\n    type: upload\n\nbasic:\n  display_local_time_in_user_card:\n    client: true\n    default: false\n  allow_user_locale:\n    client: true\n    default: false\n  set_locale_from_accept_language_header:\n    default: false\n    client: true\n    validator: \"AllowUserLocaleEnabledValidator\"\n  set_locale_from_cookie:\n    default: false\n    hidden: true\n    client: true\n    validator: \"AllowUserLocaleEnabledValidator\"\n  support_mixed_text_direction:\n    client: true\n    default: false\n  categories_topics:\n    default: 20\n    validator: \"CategoriesTopicsValidator\"\n  suggested_topics:\n    client: true\n    default: 5\n    max: 2000\n  limit_suggested_to_category:\n    default: false\n  suggested_topics_unread_max_days_old:\n    default: 90\n    min: 0\n    max: 36500\n  suggested_topics_max_days_old:\n    default: 365\n    min: 7\n    max: 36500\n  ga_version:\n    type: enum\n    default: v4_gtag\n    choices:\n      - v3_analytics\n      - v4_gtag\n  ga_universal_tracking_code:\n    client: true\n    default: \"\"\n    regex: \"^(UA|G)-[\\\\w-]+\"\n  ga_universal_domain_name:\n    client: true\n    default: \"auto\"\n  ga_universal_auto_link_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  gtm_container_id:\n    client: true\n    default: \"\"\n    regex: \"^GTM-\"\n  top_menu:\n    client: true\n    refresh: true\n    type: list\n    list_type: simple\n    default: \"latest|new|unread|top|categories\"\n    regex: \"latest\"\n    regex_error: \"site_settings.errors.must_include_latest\"\n    validator: RegexPresenceValidator\n    allow_any: false\n    choices:\n      - latest\n      - new\n      - unread\n      - unseen\n      - top\n      - categories\n      - read\n      - posted\n      - bookmarks\n  post_menu:\n    client: true\n    type: list\n    default: \"read|like|share|flag|edit|bookmark|delete|admin|reply\"\n    allow_any: false\n    choices:\n      - read\n      - like\n      - edit\n      - flag\n      - delete\n      - share\n      - bookmark\n      - admin\n      - reply\n  post_menu_hidden_items:\n    client: true\n    type: list\n    default: \"flag|bookmark|edit|delete|admin\"\n    allow_any: false\n    choices:\n      - like\n      - edit\n      - flag\n      - delete\n      - share\n      - bookmark\n      - admin\n      - reply\n  share_links:\n    client: true\n    type: list\n    default: \"twitter|facebook|email\"\n    allow_any: false\n    choices:\n      - twitter\n      - facebook\n      - email\n  allow_username_in_share_links:\n    client: true\n    default: true\n  share_quote_visibility:\n    client: true\n    type: enum\n    default: \"anonymous\"\n    choices:\n      - none\n      - anonymous\n      - all\n  share_quote_buttons:\n    client: true\n    type: list\n    default: \"twitter|email\"\n    allow_any: false\n    choices:\n      - twitter\n      - facebook\n      - email\n  desktop_category_page_style:\n    client: true\n    enum: \"CategoryPageStyle\"\n    default: \"categories_and_latest_topics\"\n  category_colors:\n    client: true\n    type: list\n    list_type: compact\n    default: \"BF1E2E|F1592A|F7941D|9EB83B|3AB54A|12A89D|25AAE2|0E76BD|652D90|92278F|ED207B|8C6238|231F20|808281|B3B5B4|E45735\"\n  category_style:\n    client: true\n    default: \"bullet\"\n    type: enum\n    choices:\n      - bar\n      - box\n      - bullet\n      - none\n  max_category_nesting:\n    client: true\n    default: 2\n    min: 2\n    max: 3\n    hidden: true\n  enable_mobile_theme:\n    client: true\n    default: true\n    hidden: true\n  enable_direct_s3_uploads:\n    client: true\n    default: false\n    hidden: true\n  enable_upload_debug_mode:\n    default: false\n    hidden: true\n    client: true\n  default_theme_id:\n    default: -1\n    hidden: true\n  default_dark_mode_color_scheme_id:\n    default: -1\n    type: enum\n    enum: \"ColorSchemeSetting\"\n    client: true\n  relative_date_duration:\n    client: true\n    default: 30\n  topics_per_period_in_top_summary:\n    default: 20\n    min: 1\n  topics_per_period_in_top_page:\n    default: 50\n    min: 1\n  top_page_default_timeframe:\n    client: true\n    default: \"yearly\"\n    type: enum\n    choices:\n      - all\n      - yearly\n      - quarterly\n      - monthly\n      - weekly\n      - daily\n  fixed_category_positions:\n    client: true\n    default: false\n  fixed_category_positions_on_create:\n    client: true\n    default: false\n  enable_badges:\n    client: true\n    default: true\n  enable_badge_sql:\n    client: true\n    default: false\n    hidden: true\n  max_favorite_badges:\n    client: true\n    default: 2\n    min: 0\n    max: 6\n  whispers_allowed_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  hidden_post_visible_groups:\n    type: group_list\n    list_type: compact\n    default: \"14\"\n    allow_any: false\n    refresh: true\n  enable_bookmarks_with_reminders:\n    client: true\n    default: true\n    hidden: true\n  push_notifications_prompt:\n    default: true\n    client: true\n  push_notifications_icon:\n    default: \"\"\n    type: upload\n  enable_desktop_push_notifications:\n    default: true\n    client: true\n  push_notification_time_window_mins:\n    default: 10\n    min: 0\n  short_title:\n    default: \"\"\n    max: 12\n  vapid_public_key_bytes:\n    default: \"\"\n    client: true\n    hidden: true\n  vapid_public_key:\n    default: \"\"\n    hidden: true\n  vapid_private_key:\n    default: \"\"\n    hidden: true\n  vapid_base_url:\n    default: \"\"\n    hidden: true\n  base_font:\n    default: \"arial\"\n    enum: \"BaseFontSetting\"\n    refresh: true\n  heading_font:\n    default: \"arial\"\n    enum: \"BaseFontSetting\"\n    refresh: true\n  enable_sitemap:\n    default: true\n  sitemap_page_size:\n    default: 10000\n  enable_user_status:\n    client: true\n    default: false\n  enable_user_tips:\n    client: true\n    default: true\n    refresh: true\n  page_loading_indicator:\n    client: true\n    type: enum\n    default: \"slider\"\n    choices:\n      - spinner\n      - slider\n\nlogin:\n  invite_only:\n    refresh: true\n    client: true\n    default: false\n  login_required:\n    refresh: true\n    client: true\n    default: false\n  must_approve_users:\n    client: true\n    default: false\n  invite_code: \"\"\n  enable_local_logins:\n    client: true\n    default: true\n  enable_local_logins_via_email:\n    client: true\n    default: true\n    validator: \"EnableLocalLoginsViaEmailValidator\"\n  allow_new_registrations:\n    client: true\n    default: true\n  enable_signup_cta:\n    client: true\n    default: true\n  enable_google_oauth2_logins:\n    default: false\n  google_oauth2_client_id: \"\"\n  google_oauth2_client_secret:\n    default: \"\"\n    secret: true\n  google_oauth2_prompt:\n    default: \"\"\n    type: list\n    choices:\n      - \"\"\n      - \"none\"\n      - \"consent\"\n      - \"select_account\"\n  google_oauth2_hd:\n    default: \"\"\n  google_oauth2_hd_groups:\n    default: false\n    validator: GoogleOauth2HdGroupsValidator\n  google_oauth2_hd_groups_service_account_admin_email:\n    default: \"\"\n  google_oauth2_hd_groups_service_account_json:\n    default: \"\"\n    textarea: true\n  enable_twitter_logins:\n    default: false\n  twitter_consumer_key:\n    default: \"\"\n    regex: \"^[\\\\w+-]+$\"\n  twitter_consumer_secret:\n    default: \"\"\n    regex: \"^[\\\\w+-]+$\"\n    secret: true\n  enable_facebook_logins:\n    default: false\n  facebook_app_id:\n    client: true\n    default: \"\"\n    regex: \"^\\\\d+$\"\n  facebook_app_secret:\n    default: \"\"\n    regex: \"^[a-f0-9]+$\"\n    secret: true\n  enable_github_logins:\n    default: false\n  github_client_id:\n    default: \"\"\n    regex: \"^[a-zA-Z0-9\\\\.]+$\"\n  github_client_secret:\n    default: \"\"\n    regex: \"^[a-f0-9]+$\"\n    secret: true\n  enable_discord_logins:\n    default: false\n  discord_client_id:\n    default: \"\"\n  discord_secret:\n    default: \"\"\n    secret: true\n  discord_trusted_guilds:\n    default: \"\"\n    type: list\n    list_type: simple\n  auth_skip_create_confirm:\n    default: false\n    client: true\n  auth_immediately:\n    default: true\n  auth_overrides_email:\n    default: false\n    validator: \"SsoOverridesEmailValidator\"\n    client: true\n  auth_overrides_username: false\n  auth_overrides_name: false\n  enable_discourse_connect:\n    client: true\n    default: false\n    validator: \"EnableSsoValidator\"\n  discourse_connect_allowed_redirect_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  verbose_discourse_connect_logging: false\n  verbose_upload_logging:\n    hidden: true\n    default: false\n  verbose_auth_token_logging:\n    hidden: true\n    default: false\n  max_suspicious_distance_km:\n    hidden: true\n    default: 100\n  discourse_connect_url:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  discourse_connect_secret:\n    default: \"\"\n    secret: true\n  discourse_connect_overrides_groups: false\n  discourse_connect_overrides_bio: false\n  discourse_connect_overrides_avatar:\n    default: false\n    client: true\n  discourse_connect_overrides_profile_background: false\n  discourse_connect_overrides_location: false\n  discourse_connect_overrides_website: false\n  discourse_connect_overrides_card_background: false\n  discourse_connect_not_approved_url: \"\"\n  discourse_connect_csrf_protection:\n    default: true\n    hidden: true\n  enable_discourse_connect_provider: false\n  discourse_connect_provider_secrets:\n    default: \"\"\n    type: list\n    list_type: secret\n    secret: true\n    placeholder:\n      key: \"sso_provider.key_placeholder\"\n      value: \"sso_provider.value_placeholder\"\n  blocked_email_domains:\n    default: \"mailinator.com\"\n    type: host_list\n    list_type: simple\n  allowed_email_domains:\n    default: \"\"\n    type: host_list\n    list_type: simple\n  normalize_emails:\n    default: false\n  auto_approve_email_domains:\n    default: \"\"\n    type: host_list\n    list_type: simple\n  hide_email_address_taken:\n    client: true\n    default: false\n  log_out_strict: false\n  pending_users_reminder_delay_minutes:\n    min: -1\n    default: 480\n  persistent_sessions: true\n  maximum_session_age:\n    default: 1440\n    min: 1\n    max: 175200\nusers:\n  min_username_length:\n    client: true\n    default: 3\n    validator: \"MinUsernameLengthValidator\"\n  max_username_length:\n    client: true\n    default: 20\n    validator: \"MaxUsernameLengthValidator\"\n  unicode_usernames:\n    default: false\n    client: true\n    validator: \"UnicodeUsernameValidator\"\n  allowed_unicode_username_characters:\n    validator: \"UnicodeUsernameAllowlistValidator\"\n    default: \"\"\n    locale_default:\n      cs: \"[\u011b\u0161\u010d\u0159\u017e\u00fd\u00e1\u00ed\u00e9\u00f3\u016f\u00fa\u010f\u0165\u0148\u011a\u0160\u010c\u0158\u017d\u00dd\u00c1\u00cd\u00c9\u00d3\u016e\u00da\u010e\u0164\u0147]\"\n      de: \"[\u00e4\u00f6\u00fc\u00df\u00c4\u00d6\u00dc\u1e9e]\"\n      fi: \"[\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6]\"\n      ja: '[\\p{Han}\\p{Katakana}\\p{Hiragana}]'\n      ko: '\\p{Hangul}'\n      zh_CN: '\\p{Han}'\n      zh_TW: '\\p{Han}'\n  reserved_usernames:\n    type: list\n    list_type: compact\n    default: \"admin|moderator|administrator|mod|sys|system|community|info|you|name|username|user|nickname|discourse|discourseorg|discourseforum|support|all|here\"\n  min_password_length:\n    client: true\n    default: 10\n    min: 8\n    max: 500\n  min_admin_password_length:\n    client: true\n    default: 15\n    min: 8\n    max: 500\n  password_unique_characters:\n    default: 6\n    min: 1\n    max: 10\n  block_common_passwords: true\n  username_change_period: 3\n  email_editable:\n    client: true\n    default: true\n  logout_redirect:\n    client: true\n    default: \"\"\n  full_name_required:\n    client: true\n    default: false\n  enable_names:\n    client: true\n    default: true\n  invite_expiry_days:\n    default: 90\n    client: true\n    max: 36500\n  invites_per_page:\n    client: true\n    default: 40\n    hidden: true\n  delete_user_max_post_age:\n    client: true\n    default: 60\n  delete_all_posts_max:\n    client: true\n    default: 15\n    min: 1\n  delete_user_self_max_post_count:\n    default: 1\n    min: -1\n  redirect_users_to_top_page: true\n  prioritize_username_in_ux:\n    client: true\n    default: true\n  email_token_valid_hours:\n    default: 48\n    min: 1\n  purge_unactivated_users_grace_period_days:\n    default: 14\n    max: 36500\n  public_user_custom_fields:\n    type: list\n    list_type: simple\n    default: \"\"\n  staff_user_custom_fields:\n    type: list\n    list_type: simple\n    default: \"\"\n  enable_user_directory:\n    client: true\n    default: true\n  allow_anonymous_posting:\n    default: false\n    client: true\n  anonymous_posting_min_trust_level:\n    default: 1\n    enum: \"TrustLevelSetting\"\n    client: true\n  anonymous_account_duration_minutes:\n    default: 10080\n    max: 99000\n  allow_users_to_hide_profile:\n    default: true\n    client: true\n  hide_user_profiles_from_public:\n    default: false\n    client: true\n  allow_featured_topic_on_user_profiles:\n    default: true\n    client: true\n  show_inactive_accounts:\n    default: false\n  allowed_user_website_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  hide_suspension_reasons:\n    default: false\n    client: true\n  log_personal_messages_views: false\n  ignored_users_count_message_threshold:\n    default: 5\n    client: true\n    min: 1\n  ignored_users_message_gap_days:\n    default: 365\n    client: true\n    min: 1\n    max: 36500\n  clean_up_inactive_users_after_days:\n    default: 730\n    min: 0\n    max: 36500\n  clean_up_unused_staged_users_after_days:\n    default: 365\n    min: 0\n    max: 36500\n  user_selected_primary_groups:\n    default: false\n    client: true\n  max_notifications_per_user:\n    default: 10000\n  gravatar_name:\n    default: Gravatar\n    client: true\n  gravatar_base_url:\n    default: www.gravatar.com\n    client: true\n  gravatar_login_url:\n    default: /emails\n    client: true\n  max_bookmarks_per_user:\n    default: 2000\n    hidden: true\n  use_email_for_username_and_name_suggestions:\n    default: false\n  use_name_for_username_suggestions:\n    default: true\n\ngroups:\n  enable_group_directory:\n    client: true\n    default: true\n  group_in_subject:\n    default: false\n  enable_category_group_moderation:\n    client: true\n    default: false\n\nposting:\n  min_post_length:\n    client: true\n    min: 1\n    default: 20\n    locale_default:\n      ja: 8\n      zh_CN: 8\n      zh_TW: 8\n  min_first_post_length:\n    client: true\n    min: 1\n    default: 20\n    locale_default:\n      ja: 8\n      zh_CN: 8\n      zh_TW: 8\n  min_personal_message_post_length:\n    client: true\n    min: 1\n    default: 10\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  max_post_length:\n    client: true\n    default: 32000\n    max: 150000\n  topic_featured_link_enabled:\n    client: true\n    default: true\n  body_min_entropy:\n    default: 7\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  min_topic_views_for_delete_confirm:\n    client: true\n    default: 5000\n  min_topic_title_length:\n    client: true\n    default: 15\n    min: 1\n    locale_default:\n      ja: 6\n      zh_CN: 6\n      zh_TW: 6\n  max_topic_title_length:\n    client: true\n    default: 255\n    min: 5\n    max: 255\n  title_min_entropy:\n    default: 10\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  allow_uppercase_posts:\n    default: false\n    locale_default:\n      ja: true\n  max_consecutive_replies:\n    default: 3\n  enable_filtered_replies_view:\n    default: false\n    client: true\n  title_prettify:\n    default: true\n    locale_default:\n      ja: false\n      zh_CN: false\n      zh_TW: false\n  title_remove_extraneous_space:\n    default: false\n    locale_default:\n      en: true\n      en_GB: true\n  title_fancy_entities: true\n  min_personal_message_title_length:\n    client: true\n    default: 2\n    min: 1\n  max_emojis_in_title: 1\n  allow_uncategorized_topics:\n    client: true\n    default: false\n    refresh: true\n  allow_duplicate_topic_titles: false\n  allow_duplicate_topic_titles_category: false\n  min_title_similar_length:\n    client: true\n    default: 10\n    locale_default:\n      ja: 4\n      zh_CN: 4\n      zh_TW: 4\n  enable_system_message_replies:\n    default: true\n  personal_message_enabled_groups:\n    default: \"11\" # auto group trust_level_1\n    type: group_list\n    client: true\n    allow_any: false\n    refresh: true\n    validator: \"PersonalMessageEnabledGroupsValidator\"\n  editing_grace_period: 300\n  editing_grace_period_max_diff: 100\n  editing_grace_period_max_diff_high_trust: 400\n  staff_edit_locks_post: false\n  shared_drafts_category:\n    type: category\n    default: \"\"\n  shared_drafts_min_trust_level:\n    default: \"staff\"\n    enum: \"TrustLevelAndStaffSetting\"\n  post_edit_time_limit:\n    default: 1440\n    max: 10080\n  tl2_post_edit_time_limit:\n    default: 43200\n    max: 525600\n  edit_history_visible_to_public:\n    client: true\n    default: true\n  delete_removed_posts_after:\n    client: true\n    default: 24\n    max: 876000\n  notify_users_after_responses_deleted_on_flagged_post:\n    default: false\n  traditional_markdown_linebreaks:\n    client: true\n    default: false\n  enable_markdown_typographer:\n    client: true\n    default: true\n  enable_markdown_linkify:\n    client: true\n    default: true\n  markdown_linkify_tlds:\n    client: true\n    type: list\n    default: \"com|net|org|io|onion|co|tv|ru|cn|us|uk|me|de|fr|fi|gov\"\n    list_type: compact\n    validator: \"MarkdownLinkifyTldsValidator\"\n  markdown_typographer_quotation_marks:\n    client: true\n    type: list\n    list_type: compact\n    validator: \"MarkdownTypographerQuotationMarksValidator\"\n    default: \"\u201c|\u201d|\u2018|\u2019\"\n    locale_default:\n      de: \"\u201e|\u201c|\u201a|\u2018\"\n      fr: \"\u00ab\\xA0|\\xA0\u00bb|\u2039\\xA0|\\xA0\u203a\"\n  enable_rich_text_paste:\n    client: true\n    default: true\n  suppress_reply_directly_below:\n    client: true\n    default: true\n  suppress_reply_directly_above:\n    client: true\n    default: true\n  suppress_reply_when_quoting:\n    default: true\n  remove_full_quote:\n    default: true\n  max_reply_history:\n    default: 1\n    client: true\n  post_undo_action_window_mins: 10\n  enable_mentions:\n    default: true\n    client: true\n  max_mentions_per_post: 10\n  max_users_notified_per_group_mention:\n    default: 100\n    client: true\n  newuser_max_replies_per_topic: 3\n  newuser_max_mentions_per_post: 2\n  here_mention:\n    default: \"here\"\n    validator: \"NotUsernameValidator\"\n    client: true\n  max_here_mentioned: 10\n  min_trust_level_for_here_mention:\n    default: \"2\"\n    enum: \"TrustLevelAndStaffSetting\"\n  title_max_word_length:\n    default: 30\n    locale_default:\n      ja: 50\n      ko: 50\n      zh_CN: 50\n      zh_TW: 50\n  allowed_link_domains:\n    default: \"\"\n    type: list\n  newuser_max_links: 2\n  newuser_max_embedded_media:\n    client: true\n    default: 1\n  newuser_max_attachments:\n    client: true\n    default: 0\n  post_excerpt_maxlength:\n    default: 300\n    max: 1000\n    locale_default:\n      ja: 120\n      zh_CN: 120\n      zh_TW: 120\n  topic_excerpt_maxlength:\n    default: 220\n    max: 1000\n    locale_default:\n      ja: 120\n      zh_CN: 120\n      zh_TW: 120\n  default_subcategory_on_read_only_category:\n    client: true\n    default: false\n  show_pinned_excerpt_mobile:\n    client: true\n    default: true\n  show_pinned_excerpt_desktop:\n    client: true\n    default: true\n  display_name_on_posts:\n    client: true\n    default: false\n  show_time_gap_days:\n    default: 7\n    max: 36500\n    client: true\n  short_progress_text_threshold:\n    client: true\n    default: 10000\n    max: 99000\n  default_code_lang:\n    client: true\n    default: \"auto\"\n  warn_reviving_old_topic_age: 180\n  autohighlight_all_code:\n    client: true\n    default: false\n  highlighted_languages:\n    default: \"bash|c|cpp|csharp|css|diff|go|graphql|ini|java|javascript|json|kotlin|lua|makefile|markdown|objectivec|perl|php|php-template|plaintext|python|python-repl|r|ruby|rust|scss|shell|sql|swift|typescript|xml|yaml|wasm\"\n    choices: \"HighlightJs.languages\"\n    type: list\n    client: true\n    list_type: compact\n  show_copy_button_on_codeblocks:\n    client: true\n    default: false\n  delete_old_hidden_posts: true\n  enable_emoji:\n    default: true\n    client: true\n  enable_emoji_shortcuts:\n    default: true\n    client: true\n  emoji_set:\n    default: \"twitter\"\n    client: true\n    enum: \"EmojiSetSiteSetting\"\n  emoji_autocomplete_min_chars:\n    client: true\n    default: 0\n    locale_default:\n      fr: 1\n  enable_inline_emoji_translation:\n    client: true\n    default: false\n    locale_default:\n      zh_CN: true\n      zh_TW: true\n      ja: true\n      ko: true\n  emoji_deny_list:\n    type: emoji_list\n    default: \"\"\n    client: true\n    refresh: true\n  approve_post_count:\n    default: 0\n  approve_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  approve_new_topics_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  approve_suspect_users:\n    default: true\n  approve_unless_staged:\n    default: false\n  notify_about_queued_posts_after:\n    type: float\n    default: 24\n    min: 0\n  auto_close_messages_post_count:\n    default: 500\n  auto_close_topics_post_count:\n    default: 10000\n  auto_close_topics_create_linked_topic:\n    default: true\n  code_formatting_style:\n    client: true\n    type: enum\n    default: \"code-fences\"\n    choices:\n      - code-fences\n      - 4-spaces-indent\n  embed_any_origin: false\n  embed_topics_list: false\n  embed_set_canonical_url: false\n  embed_unlisted: true\n  embed_truncate: true\n  embed_support_markdown: false\n  allowed_embed_selectors: \"\"\n  allowed_href_schemes:\n    client: true\n    default: \"\"\n    type: list\n    list_type: compact\n  max_allowed_message_recipients:\n    default: 30\n    min: 1\n  watched_words_regular_expressions:\n    client: true\n    default: false\n  enable_diffhtml_preview:\n    default: false\n    client: true\n  enable_fast_edit:\n    default: true\n    client: true\n  old_post_notice_days:\n    default: 14\n    max: 36500\n    client: true\n  new_user_notice_tl:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  returning_user_notice_tl:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  returning_users_days:\n    default: 120\n    max: 36500\n  review_media_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  blur_tl0_flagged_posts_media:\n    default: true\n    client: true\n  enable_page_publishing:\n    default: false\n  show_published_pages_login_required:\n    default: false\n  skip_auto_delete_reply_likes: 5\n  review_every_post:\n    default: false\n  max_draft_length:\n    default: 400_000\n    hidden: true\n  max_form_template_title_length:\n    default: 100\n    min: 5\n    max: 255\n  max_form_template_content_length:\n    default: 2000\n    max: 150000\n\nemail:\n  email_time_window_mins:\n    default: 10\n    client: true\n  personal_email_time_window_seconds: 20\n  email_posts_context: 5\n  digest_min_excerpt_length:\n    default: 100\n    locale_default:\n      ja: 50\n      zh_CN: 50\n      zh_TW: 50\n  digest_topics:\n    default: 5\n    min: 1\n    max: 20\n  digest_posts:\n    default: 5\n    min: 0\n    max: 20\n  digest_other_topics:\n    default: 5\n    min: 0\n    max: 20\n  suppress_digest_email_after_days:\n    default: 180\n    max: 36500\n  digest_suppress_categories:\n    type: category_list\n    default: \"\"\n  disable_digest_emails:\n    default: false\n    client: true\n  apply_custom_styles_to_digest: true\n  email_accent_bg_color:\n    type: color\n    default: \"#2F70AC\"\n    validator: \"CssColorValidator\"\n  email_accent_fg_color:\n    type: color\n    default: \"#FFFFFF\"\n    validator: \"CssColorValidator\"\n  email_link_color:\n    type: color\n    default: \"#006699\"\n    validator: \"CssColorValidator\"\n  show_topic_featured_link_in_digest: false\n  email_custom_headers: \"Auto-Submitted: auto-generated\"\n  email_subject: \"[%{site_name}] %{optional_pm}%{optional_cat}%{topic_title}\"\n  reply_by_email_enabled:\n    default: false\n    validator: \"ReplyByEmailEnabledValidator\"\n  reply_by_email_address:\n    default: \"\"\n    validator: \"ReplyByEmailAddressValidator\"\n  alternative_reply_by_email_addresses:\n    default: \"\"\n    validator: \"AlternativeReplyByEmailAddressesValidator\"\n  find_related_post_with_key:\n    default: true\n  manual_polling_enabled:\n    default: false\n  pop3_polling_enabled:\n    default: false\n    validator: \"POP3PollingEnabledSettingValidator\"\n  pop3_polling_ssl: true\n  pop3_polling_openssl_verify: true\n  pop3_polling_period_mins: 5\n  pop3_polling_host: \"\"\n  pop3_polling_port: 995\n  pop3_polling_username: \"\"\n  pop3_polling_password:\n    default: \"\"\n    secret: true\n  pop3_polling_delete_from_server: true\n  log_mail_processing_failures: false\n  incoming_email_prefer_html: true\n  strip_incoming_email_lines: false\n  email_in:\n    default: false\n    client: true\n  email_in_min_trust:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  email_in_authserv_id:\n    default: \"\"\n  email_in_spam_header:\n    type: enum\n    default: \"none\"\n    choices:\n      - none\n      - X-Spam-Flag\n      - X-Spam-Status\n      - X-SES-Spam-Verdict\n  enable_imap:\n    default: false\n    client: true\n  enable_imap_write:\n    default: false\n  enable_imap_idle:\n    default: false\n  enable_smtp:\n    default: false\n    client: true\n  imap_polling_period_mins:\n    default: 5\n  imap_polling_old_emails:\n    default: 1000\n  imap_polling_new_emails:\n    default: 250\n  imap_batch_import_email:\n    default: 100\n  email_prefix: \"\"\n  email_site_title: \"\"\n  disable_emails:\n    client: true\n    type: enum\n    default: \"no\"\n    choices:\n      - \"no\"\n      - \"yes\"\n      - \"non-staff\"\n  strip_images_from_short_emails: true\n  short_email_length: 2800\n  display_name_on_email_from:\n    default: true\n  unsubscribe_via_email:\n    default: true\n  unsubscribe_via_email_footer:\n    default: false\n  disallow_reply_by_email_after_days:\n    default: 90\n    max: 36500\n  delete_email_logs_after_days:\n    default: 90\n    max: 36500\n  max_emails_per_day_per_user: 100\n  enable_staged_users: true\n  maximum_staged_users_per_email: 10\n  maximum_recipients_per_new_group_email:\n    default: 10\n    min: 1\n  auto_generated_allowlist:\n    default: \"\"\n    type: list\n    list_type: simple\n  block_auto_generated_emails: true\n  ignore_by_title:\n    type: list\n    list_type: simple\n    default: \"\"\n  mailgun_api_key:\n    default: \"\"\n    regex: '^((key-)?\\h{32}|\\h{32}-\\h{8}-\\h{8})$'\n    secret: true\n  sendgrid_verification_key:\n    default: \"\"\n    secret: true\n  mailjet_webhook_token:\n    default: \"\"\n    secret: true\n  mandrill_authentication_key:\n    default: \"\"\n    secret: true\n  postmark_webhook_token:\n    default: \"\"\n    secret: true\n  sparkpost_webhook_token:\n    default: \"\"\n    secret: true\n  bounce_score_threshold:\n    client: true\n    default: 4\n    min: 1\n  bounce_score_erode_on_send:\n    default: 0.1\n    hidden: true\n  soft_bounce_score:\n    default: 1\n    min: 1\n  hard_bounce_score:\n    default: 2\n    min: 2\n  reset_bounce_score_after_days:\n    default: 30\n    max: 36500\n  blocked_attachment_content_types:\n    type: list\n    default: \"pkcs7|x-vcard|pgp-keys|pgp-signature\"\n    list_type: compact\n  blocked_attachment_filenames:\n    type: list\n    default: \"smime.p7s|signature.asc|winmail.dat\"\n    list_type: compact\n  forwarded_emails_behaviour:\n    type: enum\n    default: hide\n    choices:\n      - hide\n      - quote\n      - create_replies\n  always_show_trimmed_content: false\n  trim_incoming_emails: true\n  private_email: false\n  email_custom_template:\n    default: \"\"\n    hidden: true\n  email_custom_css:\n    default: \"\"\n    hidden: true\n  email_custom_css_compiled:\n    default: \"\"\n    hidden: true\n  email_total_attachment_size_limit_kb:\n    default: 0\n    max: 51200\n  post_excerpts_in_emails: false\n  raw_email_max_length: 220000\n  raw_rejected_email_max_length: 4000\n  delete_rejected_email_after_days:\n    default: 90\n    validator: \"DeleteRejectedEmailAfterDaysValidator\"\n  enable_secondary_emails:\n    client: true\n    default: true\n    hidden: true\n  max_participant_names:\n    default: 10\n    hidden: true\n  require_change_email_confirmation: false\n\nfiles:\n  max_image_size_kb:\n    client: true\n    default: 4096\n    max: 102400\n  max_attachment_size_kb:\n    client: true\n    default: 4096\n    max: 1024000\n  max_image_megapixels:\n    default: 40\n    min: 5\n    max: 150\n  max_export_file_size_kb:\n    hidden: true\n    default: 50000\n    max: 1024000\n  theme_authorized_extensions:\n    default: \"wasm|jpg|jpeg|png|woff|woff2|svg|eot|ttf|otf|gif|webp|avif|js\"\n    type: list\n    list_type: compact\n  authorized_extensions:\n    client: true\n    default: \"jpg|jpeg|png|gif|heic|heif|webp|avif\"\n    refresh: true\n    type: list\n    list_type: compact\n  authorized_extensions_for_staff:\n    client: true\n    default: \"\"\n    refresh: true\n    type: list\n    list_type: compact\n  export_authorized_extensions:\n    hidden: true\n    default: \"zip\"\n    type: list\n    list_type: compact\n  responsive_post_image_sizes:\n    default: \"1|1.5|2\"\n    type: list\n    list_type: compact\n  max_image_width:\n    client: true\n    default: 690\n  max_image_height:\n    client: true\n    default: 500\n  download_remote_images_to_local:\n    default: true\n  download_remote_images_threshold: 10\n  disabled_image_download_domains:\n    type: list\n    list_type: simple\n    default: \"\"\n  block_hotlinked_media:\n    default: false\n  block_hotlinked_media_exceptions:\n    default: \"\"\n    type: list\n    regex: '\\A((https?:\\/\\/.+)(\\|https?:\\/\\/.+[|$])*)?\\z'\n  create_thumbnails: true\n  clean_up_uploads: true\n  clean_orphan_uploads_grace_period_hours: 48\n  purge_deleted_uploads_grace_period_days:\n    default: 30\n    max: 36500\n  prevent_anons_from_downloading_files:\n    default: false\n    client: true\n  secure_uploads:\n    default: false\n    client: true\n  secure_uploads_allow_embed_images_in_emails:\n    default: true\n  secure_uploads_max_email_embed_image_size_kb:\n    default: 1024\n    min: 1\n    max: 10240\n  enable_s3_uploads:\n    default: false\n    client: true\n  s3_use_iam_profile:\n    default: false\n  s3_access_key_id:\n    default: \"\"\n    secret: true\n  s3_secret_access_key:\n    default: \"\"\n    secret: true\n  s3_region:\n    default: \"us-east-1\"\n    enum: \"S3RegionSiteSetting\"\n  s3_upload_bucket:\n    default: \"\"\n    regex: '^[a-z0-9\\-\\/_]+$' # can't use '.' when using HTTPS\n  s3_endpoint:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  s3_http_continue_timeout:\n    default: 1\n    hidden: true\n  s3_install_cors_rule:\n    default: true\n    hidden: true\n  s3_cdn_url:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  s3_configure_tombstone_policy:\n    default: true\n  s3_use_acls:\n    default: true\n  enable_s3_inventory:\n    default: false\n  s3_configure_inventory_policy:\n    default: true\n    hidden: true\n  s3_presigned_get_url_expires_after_seconds:\n    default: 300\n    hidden: true\n    min: 60\n    max: 604800\n  allow_profile_backgrounds:\n    client: true\n    default: true\n  automatically_download_gravatars: true\n  allow_uploaded_avatars:\n    client: true\n    default: \"0\"\n    enum: \"TrustLevelAndStaffAndDisabledSetting\"\n  default_avatars:\n    default: \"\"\n    type: url_list\n    client: true\n  avatar_sizes:\n    default: \"24|48|72|96|144|288\"\n    type: list\n    list_type: compact\n    client: true\n  external_system_avatars_enabled:\n    default: true\n    client: true\n    validator: \"ExternalSystemAvatarsValidator\"\n  external_system_avatars_url:\n    default: \"/letter_avatar_proxy/v4/letter/{first_letter}/{color}/{size}.png\"\n    client: true\n    regex: '^((https?:)?\\/)?\\/.+[^\\/]'\n  external_emoji_url:\n    default: \"\"\n    client: true\n  restrict_letter_avatar_colors:\n    default: \"\"\n    type: list\n    list_type: compact\n    validator: \"ColorListValidator\"\n  selectable_avatars_mode:\n    default: disabled\n    client: true\n    type: enum\n    choices:\n      - disabled\n      - everyone\n      - tl1\n      - tl2\n      - tl3\n      - tl4\n      - staff\n      - no_one\n    validator: \"SelectableAvatarsModeValidator\"\n  selectable_avatars:\n    default: \"\"\n    client: true\n    type: uploaded_image_list\n  allow_all_attachments_for_group_messages: false\n  png_to_jpg_quality:\n    default: 95\n    min: 1\n    max: 100\n  recompress_original_jpg_quality:\n    default: 90\n    min: 1\n    max: 100\n  image_preview_jpg_quality:\n    default: 90\n    min: 1\n    max: 100\n  allow_staff_to_upload_any_file_in_pm:\n    default: true\n    client: true\n  strip_image_metadata: true\n  min_ratio_to_crop:\n    type: float\n    default: 0.22\n    min: 0\n    max: 1\n  simultaneous_uploads:\n    client: true\n    default: 5\n    min: 0\n    max: 20\n  decompressed_theme_max_file_size_mb:\n    default: 1000\n    hidden: true\n  decompressed_backup_max_file_size_mb:\n    default: 100000\n    hidden: true\n  composer_media_optimization_image_enabled:\n    default: true\n    client: true\n  composer_media_optimization_image_bytes_optimization_threshold:\n    default: 524288\n    client: true\n  composer_media_optimization_image_resize_dimensions_threshold:\n    default: 1920\n    client: true\n  composer_media_optimization_image_resize_width_target:\n    default: 1920\n    client: true\n  composer_media_optimization_image_resize_pre_multiply:\n    default: false\n    hidden: true\n    client: true\n  composer_media_optimization_image_resize_linear_rgb:\n    default: false\n    hidden: true\n    client: true\n  composer_media_optimization_image_encode_quality:\n    default: 75\n    client: true\n  composer_media_optimization_debug_mode:\n    default: false\n    client: true\n    hidden: true\n  composer_ios_media_optimisation_image_enabled:\n    default: false\n    client: true\n    hidden: true\n  video_thumbnails_enabled:\n    default: true\n    client: true\n    hidden: true\n\ntrust:\n  default_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  default_invitee_trust_level:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_create_topic:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_edit_wiki_post:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_edit_post:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_allow_self_wiki:\n    default: 3\n    enum: \"TrustLevelSetting\"\n  min_trust_to_send_email_messages:\n    default: \"4\"\n    enum: \"TrustLevelAndStaffSetting\"\n  min_trust_to_flag_posts:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_post_links:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_post_embedded_media:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_profile_background:\n    default: 0\n    client: true\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_user_card_background:\n    default: 0\n    client: true\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_invite:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_ignore:\n    default: 2\n    enum: \"TrustLevelSetting\"\n    client: true\n  allow_flagging_staff: true\n  send_tl1_welcome_message: true\n  send_tl2_promotion_message: true\n  tl1_requires_topics_entered: 5\n  tl1_requires_read_posts:\n    default: 30\n    client: true\n  tl1_requires_time_spent_mins: 10\n  tl2_requires_topics_entered: 20\n  tl2_requires_read_posts: 100\n  tl2_requires_time_spent_mins: 60\n  tl2_requires_days_visited:\n    default: 15\n    max: 36500\n  tl2_requires_likes_received: 1\n  tl2_requires_likes_given: 1\n  tl2_requires_topic_reply_count: 3\n  tl3_time_period:\n    default: 100\n    min: 1\n    max: 1000000\n  tl3_requires_days_visited:\n    default: 50\n    max: 36500\n  tl3_requires_topics_replied_to:\n    default: 10\n  tl3_requires_topics_viewed:\n    default: 25\n    max: 100\n  tl3_requires_topics_viewed_cap:\n    default: 500\n  tl3_requires_posts_read:\n    default: 25\n    max: 100\n  tl3_requires_posts_read_cap:\n    default: 20000\n    max: 99000\n  tl3_requires_topics_viewed_all_time:\n    default: 200\n  tl3_requires_posts_read_all_time:\n    default: 500\n  tl3_requires_max_flagged:\n    default: 5\n  tl3_promotion_min_duration:\n    default: 14\n    max: 10000\n  tl3_requires_likes_given:\n    default: 30\n  tl3_requires_likes_received:\n    default: 20\n  tl3_links_no_follow:\n    default: false\n    client: true\n  tl4_delete_posts_and_topics:\n    default: false\n    client: true\n  edit_all_topic_groups:\n    default: \"13\"\n    type: group_list\n  edit_all_post_groups:\n    default: \"14\"\n    type: group_list\n\nsecurity:\n  detailed_404: false\n  enforce_second_factor:\n    client: true\n    type: enum\n    default: \"no\"\n    choices:\n      - \"no\"\n      - \"staff\"\n      - \"all\"\n  force_https:\n    default: false\n  same_site_cookies:\n    default: Lax\n    type: enum\n    choices:\n      - Lax\n      - Strict\n      - Disabled\n      - None\n    regex: \"^(Lax|Strict|Disabled|None)$\"\n  enable_escaped_fragments: true\n  allow_index_in_robots_txt: true\n  allow_indexing_non_canonical_urls:\n    default: true\n    hidden: true\n  moderators_manage_categories_and_groups:\n    default: false\n    client: true\n  moderators_change_post_ownership:\n    client: true\n    default: false\n  moderators_view_emails:\n    client: true\n    default: false\n  non_crawler_user_agents:\n    hidden: true\n    default: \"trident|webkit|gecko|chrome|safari|msie|opera|goanna|discourse\"\n    type: list\n    list_type: compact\n  crawler_user_agents:\n    hidden: true\n    default: \"rss|bot|spider|crawler|facebook|archive|wayback|ping|monitor|lighthouse\"\n    type: list\n    list_type: compact\n  browser_update_user_agents:\n    hidden: true\n    default: \"MSIE 6|MSIE 7|MSIE 8|MSIE 9|Xbox|PlayStation\"\n    type: list\n    list_type: compact\n  crawler_check_bypass_agents:\n    hidden: true\n    default: \"cubot\"\n  cors_origins:\n    default: \"\"\n    type: list\n    list_type: simple\n  keep_old_ip_address_count:\n    default: 0\n    hidden: true\n  use_admin_ip_allowlist:\n    default: false\n    client: true\n  blocked_ip_blocks:\n    default: \"\"\n    type: list\n    list_type: compact\n  allowed_internal_hosts:\n    default: \"\"\n    type: list\n  allowed_onebox_iframes:\n    default: \"*\"\n    type: list\n    allow_any: false\n    choices: \"['*'] + Onebox::Engine.all_iframe_origins\"\n  allowed_iframes:\n    default: \"https://www.google.com/maps/embed?|https://www.openstreetmap.org/export/embed.html?|https://calendar.google.com/calendar/embed?|https://codepen.io/|https://www.instagram.com\"\n    type: list\n    list_type: simple\n    client: true\n  allowed_crawler_user_agents:\n    type: list\n    default: \"\"\n    list_type: compact\n  blocked_crawler_user_agents:\n    type: list\n    default: \"mauibot|semrushbot|ahrefsbot|blexbot|seo spider\"\n    list_type: compact\n  slow_down_crawler_user_agents:\n    type: list\n    default: \"\"\n    list_type: compact\n  slow_down_crawler_rate: 60\n  content_security_policy:\n    default: true\n  content_security_policy_report_only:\n    default: false\n  content_security_policy_collect_reports:\n    default: false\n    hidden: true\n  content_security_policy_frame_ancestors:\n    default: true\n  content_security_policy_script_src:\n    type: simple_list\n    default: \"\"\n  invalidate_inactive_admin_email_after_days:\n    default: 365\n    min: 0\n    max: 36500\n  allow_embedding_site_in_an_iframe:\n    default: false\n    hidden: true\n  send_old_credential_reminder_days:\n    default: 0\n    hidden: true\n  disable_onebox_media_download_controls:\n    default: false\n    hidden: true\n  can_permanently_delete:\n    default: false\n    client: true\n    hidden: true\n  suppress_secured_categories_from_admin:\n    default: false\n    hidden: true\n  include_secure_categories_in_tag_counts:\n    default: false\n  display_personal_messages_tag_counts:\n    default: false\n\nonebox:\n  post_onebox_maxlength:\n    default: 500\n    locale_default:\n      ja: 200\n      zh_CN: 200\n      zh_TW: 200\n  blocked_onebox_domains:\n    default: \"\"\n    type: host_list\n    list_type: compact\n  max_oneboxes_per_post:\n    default: 50\n    client: true\n  allowed_inline_onebox_domains:\n    default: \"\"\n    type: list\n    list_type: compact\n  enable_inline_onebox_on_all_domains:\n    default: true\n  force_custom_user_agent_hosts:\n    default: \"http://codepen.io\"\n    type: list\n  force_get_hosts:\n    default: \"us.battle.net|news.yahoo.com|*.medium.com\"\n    type: list\n    hidden: true\n  facebook_app_access_token:\n    default: \"\"\n    secret: true\n  block_onebox_on_redirect:\n    default: false\n  cache_onebox_response_body:\n    default: false\n    hidden: true\n  cache_onebox_response_body_domains:\n    default: \"\"\n    type: list\n    hidden: true\n  cache_onebox_user_agent:\n    default: \"\"\n    hidden: true\nspam:\n  add_rel_nofollow_to_user_content: true\n  hide_post_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 6\n  cooldown_minutes_after_hiding_posts: 10\n  silence_new_user_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 3\n  num_users_to_silence_new_user: 3\n  notify_mods_when_user_silenced: false\n  flag_sockpuppets: false\n  newuser_spam_host_threshold: 3\n  allowed_spam_host_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  levenshtein_distance_spammer_emails:\n    default: 2\n    max: 3\n  max_new_accounts_per_registration_ip: 3\n  min_ban_entries_for_roll_up: 5\n  max_age_unmatched_emails: 365\n  max_age_unmatched_ips: 365\n  num_flaggers_to_close_topic: 5\n  auto_close_topic_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 9\n  num_hours_to_close_topic:\n    default: 4\n    min: 1\n  auto_respond_to_flag_actions: true\n  min_first_post_typing_time: 3000\n  auto_silence_fast_typers_on_first_post: true\n  auto_silence_fast_typers_max_trust_level: 0\n  auto_silence_first_post_regex: \"\"\n  high_trust_flaggers_auto_hide_posts: true\n  cooldown_hours_until_reflag:\n    default: 24\n    min: 0\n  slow_mode_prevents_editing: true\n\n  reviewable_claiming:\n    client: true\n    type: enum\n    default: disabled\n    choices:\n      - disabled\n      - optional\n      - required\n\n  reviewable_default_topics:\n    default: false\n    client: true\n  reviewable_default_visibility:\n    client: true\n    type: enum\n    default: low\n    enum: \"ReviewablePrioritySetting\"\n  reviewable_low_priority_threshold:\n    default: 0\n    min: 0\n\nrate_limits:\n  unique_posts_mins: 5\n  rate_limit_create_topic: 15\n  rate_limit_create_post: 5\n  rate_limit_new_user_create_topic: 120\n  rate_limit_new_user_create_post: 30\n  rate_limit_search_anon_global_per_minute:\n    hidden: true\n    default: 150\n  rate_limit_search_anon_user_per_minute:\n    hidden: true\n    default: 15\n  rate_limit_search_anon_global_per_second:\n    hidden: true\n    default: 8\n  rate_limit_search_anon_user_per_second:\n    hidden: true\n    default: 2\n  rate_limit_search_user:\n    hidden: true\n    default: 30\n  max_topics_per_day: 20\n  max_personal_messages_per_day: 20\n  max_likes_per_day: 50\n  max_bookmarks_per_day: 20\n  max_flags_per_day: 20\n  max_edits_per_day: 30\n  max_invites_per_day: 10\n  max_topic_invitations_per_day: 30\n  max_topic_invitations_per_minute: 5\n  max_topics_in_first_day: 3\n  max_replies_in_first_day: 10\n  tl2_additional_likes_per_day_multiplier: 1.5\n  tl3_additional_likes_per_day_multiplier: 2\n  tl4_additional_likes_per_day_multiplier: 3\n  tl2_additional_edits_per_day_multiplier: 1.5\n  tl3_additional_edits_per_day_multiplier: 2\n  tl4_additional_edits_per_day_multiplier: 3\n  tl2_additional_flags_per_day_multiplier: 1.5\n  tl3_additional_flags_per_day_multiplier: 2\n  tl4_additional_flags_per_day_multiplier: 3\n  alert_admins_if_errors_per_minute:\n    client: true\n    default: 0\n  alert_admins_if_errors_per_hour:\n    client: true\n    default: 0\n  max_prints_per_hour_per_user:\n    default: 5\n    client: true\n    min: 0\n  max_logins_per_ip_per_hour:\n    min: 1\n    default: 30\n  max_logins_per_ip_per_minute:\n    min: 1\n    default: 6\n  max_post_deletions_per_minute:\n    min: 0\n    default: 2\n  max_post_deletions_per_day:\n    min: 0\n    default: 10\n  invite_link_max_redemptions_limit:\n    min: 2\n    max: 1000000\n    default: 5000\n    client: true\n  invite_link_max_redemptions_limit_users:\n    min: 2\n    max: 1000000\n    default: 10\n    client: true\n  max_allowed_secondary_emails:\n    default: 10\n    hidden: true\n    client: true\n  max_batch_presign_multipart_per_minute:\n    default: 20\n    hidden: true\n  max_presigned_put_per_minute:\n    default: 10\n    hidden: true\n  max_create_multipart_per_minute:\n    default: 10\n    hidden: true\n  max_complete_multipart_per_minute:\n    default: 10\n    hidden: true\n\ndeveloper:\n  force_hostname:\n    hidden: true\n    default: \"\"\n  port:\n    hidden: true\n    default: \"\"\n  enable_chunked_encoding:\n    hidden: true\n    client: true\n    default: true\n  long_polling_base_url:\n    hidden: true\n    client: true\n    default: \"/\"\n  background_polling_interval:\n    hidden: true\n    client: true\n    default: 60000\n    max: 99000\n  polling_interval:\n    hidden: true\n    client: true\n    default: 3000\n    max: 99000\n  anon_polling_interval:\n    hidden: true\n    client: true\n    default: 25000\n    max: 99000\n  flush_timings_secs:\n    client: true\n    default: 60\n  active_user_rate_limit_secs: 60\n  verbose_localization:\n    default: false\n    client: true\n  top_topics_formula_log_views_multiplier:\n    default: 2\n  top_topics_formula_first_post_likes_multiplier:\n    default: 0.5\n  top_topics_formula_least_likes_per_post_multiplier:\n    default: 3\n  rebake_old_posts_count:\n    hidden: true\n    default: 80\n    min: 1\n  migrate_to_new_scheme:\n    hidden: true\n    default: false\n  max_new_topics:\n    default: 500\n    client: true\n    hidden: true\n  wizard_enabled:\n    default: true\n    hidden: true\n  bypass_wizard_check:\n    default: false\n    hidden: true\n  logging_provider:\n    hidden: true\n    default: \"default\"\n    type: \"list\"\n    choices:\n      - \"default\"\n      - \"lograge\"\n  bootstrap_error_pages:\n    hidden: true\n    default: false\n  enable_safe_mode:\n    default: true\n    client: true\n  enable_experimental_hashtag_autocomplete:\n    default: true\n    client: true\n    hidden: true\n  experimental_hashtag_search_result_limit:\n    default: 20\n    client: true\n    hidden: true\n  include_associated_account_ids:\n    default: false\n    hidden: true\n  experimental_form_templates:\n    client: true\n    default: false\n    hidden: true\n  experimental_new_new_view_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  experimental_topics_filter:\n    client: true\n    default: false\n  experimental_search_menu_groups:\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n\nnavigation:\n  navigation_menu:\n    client: true\n    default: \"sidebar\"\n    type: enum\n    enum: \"NavigationMenuSiteSetting\"\n  default_navigation_menu_categories:\n    type: category_list\n    default: \"\"\n    client: true\n  default_navigation_menu_tags:\n    type: tag_list\n    default: \"\"\n    client: true\n\nembedding:\n  embed_by_username:\n    default: \"\"\n    type: username\n    hidden: true\n  embed_post_limit:\n    default: 100\n    hidden: true\n  embed_topic_limit_per_page:\n    default: 200\n    hidden: true\n  embed_title_scrubber:\n    default: \"\"\n    hidden: true\n  blocked_embed_selectors:\n    default: \"\"\n    hidden: true\n  allowed_embed_classnames:\n    default: \"emoji\"\n    hidden: true\n\nlegal:\n  tos_url:\n    client: true\n    default: \"\"\n  privacy_policy_url:\n    client: true\n    default: \"\"\n  faq_url:\n    client: true\n    default: \"\"\n  log_anonymizer_details:\n    default: true\n\nbackups:\n  enable_backups:\n    default: true\n    client: true\n  allow_restore:\n    default: false\n  backup_location:\n    default: \"local\"\n    type: enum\n    enum: \"BackupLocationSiteSetting\"\n    client: true\n  maximum_backups:\n    client: true\n    default: 5\n  automatic_backups_enabled:\n    default: true\n  backup_frequency:\n    min: 1\n    max: 30\n    default: 7\n  s3_backup_bucket:\n    default: \"\"\n    regex: '^[a-z0-9\\-\\/]+$' # can't use '.' when using HTTPS\n  s3_disable_cleanup:\n    default: false\n  backup_time_of_day:\n    default: \"3:30\"\n    regex: \"^((0?(0|1|2|3|4|5|6|7|8|9)|(10|11|12|13|14|15|16|17|18|19|20|21|22|23))):\\\\d\\\\d$\"\n  backup_with_uploads: true\n  backup_gzip_compression_level_for_uploads:\n    default: 1\n    min: 1\n    max: 9\n  include_thumbnails_in_backups:\n    default: false\n  include_s3_uploads_in_backups:\n    default: false\n    hidden: true\n    client: true\n\nsearch:\n  user_search_similar_results:\n    default: false\n    hidden: true\n  prioritize_exact_search_title_match:\n    default: true\n    hidden: true\n  max_duplicate_search_index_terms:\n    default: 6\n    hidden: true\n  use_pg_headlines_for_excerpt:\n    default: false\n    hidden: true\n    client: true\n  search_max_indexed_word_length:\n    default: 100\n    hidden: true\n  search_ranking_normalization:\n    default: \"0\"\n    hidden: true\n  search_ranking_weights:\n    default: \"\"\n    hidden: true\n    validator: \"SearchRankingWeightsValidator\"\n  min_search_term_length:\n    client: true\n    default: 3\n    locale_default:\n      zh_CN: 1\n      zh_TW: 1\n      ko: 1\n      ja: 1\n  search_tokenize_chinese:\n    default: false\n    validator: \"SearchTokenizeChineseValidator\"\n  search_tokenize_japanese:\n    default: false\n    validator: \"SearchTokenizeJapaneseValidator\"\n  search_prefer_recent_posts: false\n  search_recent_posts_size:\n    default: 1000000\n    max: 10000000\n  search_recent_regular_posts_offset_post_id:\n    default: 0\n    hidden: true\n  search_enable_recent_regular_posts_offset_size:\n    default: 200000\n    hidden: true\n  log_search_queries:\n    client: true\n    default: true\n  search_query_log_max_size:\n    default: 1000000\n    max: 1000000\n  search_query_log_max_retention_days:\n    default: 365 # 1 year\n    max: 1825 # 5 years\n  search_ignore_accents:\n    default: false\n    locale_default:\n      ar: true\n      ca: true\n      cs: true\n      el: true\n      es: true\n      fa_IR: true\n      fr: true\n      hu: true\n      pt: true\n      pt_BR: true\n      ro: true\n      sk: true\n      tr_TR: true\n  category_search_priority_low_weight:\n    default: 0.8\n    hidden: true\n    validator: \"CategorySearchPriorityWeightsValidator\"\n  category_search_priority_high_weight:\n    default: 1.2\n    hidden: true\n    validator: \"CategorySearchPriorityWeightsValidator\"\n  search_page_size:\n    default: 50\n    hidden: true\n\nuncategorized:\n  version_checks:\n    client: true\n    default: true\n  new_version_emails: true\n  send_welcome_message: true\n\n  suppress_uncategorized_badge:\n    client: true\n    default: true\n\n  header_dropdown_category_count:\n    client: true\n    default: 8\n\n  slug_generation_method:\n    default: \"ascii\"\n    enum: \"SlugSetting\"\n    client: true\n    locale_default:\n      ja: \"none\"\n      zh_CN: \"none\"\n      zh_TW: \"none\"\n\n  permalink_normalizations:\n    default: \"\"\n    type: list\n    list_type: simple\n    validator: \"RegexpListValidator\"\n\n  max_similar_results: 5\n  minimum_topics_similar: 50\n\n  previous_visit_timeout_hours: 1\n  staff_like_weight: 3\n  topic_view_duration_hours: 8\n  user_profile_view_duration_hours: 8\n\n  # Summary mode\n  summary_score_threshold: 15\n  summary_posts_required: 50\n  summary_likes_required: 1\n  summary_percent_filter: 20\n  summary_max_results: 100\n  summary_timeline_button:\n    client: true\n    default: false\n\n  summarization_strategy:\n    client: true\n    default: \"\"\n    enum: \"SummarizationStrategy\"\n    validator: \"SummarizationValidator\"\n  custom_summarization_allowed_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"3|14\" # 3: @staff, 14: @trust_level_4\n\n  automatic_topic_heat_values: true\n\n  # View heat thresholds\n  topic_views_heat_low:\n    client: true\n    default: 1000\n  topic_views_heat_medium:\n    client: true\n    default: 2000\n  topic_views_heat_high:\n    client: true\n    default: 3500\n\n  # Post/Like heat thresholds\n  topic_post_like_heat_low:\n    client: true\n    default: 0.5\n  topic_post_like_heat_medium:\n    client: true\n    default: 1.0\n  topic_post_like_heat_high:\n    client: true\n    default: 2.0\n\n  # History edit heat thresholds\n  history_hours_low:\n    client: true\n    default: 12\n  history_hours_medium:\n    client: true\n    default: 24\n  history_hours_high:\n    client: true\n    default: 48\n\n  # Cold map thresholds\n  cold_age_days_low:\n    default: 14\n    max: 36500\n    client: true\n  cold_age_days_medium:\n    default: 90\n    max: 36500\n    client: true\n  cold_age_days_high:\n    default: 180\n    max: 36500\n    client: true\n\n  # Warnings\n  educate_until_posts: 2\n  sequential_replies_threshold: 2\n  get_a_room_threshold: 3\n  dont_feed_the_trolls_threshold: 2\n  dominating_topic_minimum_percent: 40\n  disable_avatar_education_message: false\n  pm_warn_user_last_seen_months_ago: 24\n\n  global_notice:\n    default: \"\"\n    client: true\n  has_login_hint:\n    default: false\n    hidden: true\n\n  # Nothing past this threshold is ever considered new\n  # this is calculated dynamically every 15 minutes\n  min_new_topics_time:\n    default: 0\n    hidden: true\n\n  # Category IDs\n  general_category_id:\n    default: -1\n    hidden: true\n    client: true\n  meta_category_id:\n    default: -1\n    hidden: true\n  staff_category_id:\n    default: -1\n    hidden: true\n  uncategorized_category_id:\n    default: -1\n    hidden: true\n  default_composer_category:\n    client: true\n    type: category\n    default: \"\"\n    validator: \"DefaultComposerCategoryValidator\"\n\n  notify_about_reviewable_item_after:\n    type: float\n    default: 48\n\n  enable_system_avatars:\n    hidden: true\n    default: true\n\n  use_site_small_logo_as_system_avatar:\n    default: true\n\n  enable_listing_suspended_users_on_search:\n    default: false\n\n  disable_system_edit_notifications: true\n\n  disable_category_edit_notifications:\n    default: false\n\n  disable_tags_edit_notifications:\n    default: false\n\n  notification_consolidation_threshold:\n    default: 3\n    min: 0\n\n  likes_notification_consolidation_window_mins:\n    default: 120\n    min: 1\n\n  delete_drafts_older_than_n_days:\n    default: 180\n    max: 36500\n\n  delete_merged_stub_topics_after_days:\n    default: 7\n    min: 0\n\n  backup_drafts_to_pm_length:\n    default: 0\n    hidden: true\n\n  view_user_route:\n    default: \"summary\"\n    hidden: true\n    client: true\n\n  tos_topic_id:\n    default: -1\n    hidden: true\n  guidelines_topic_id:\n    default: -1\n    hidden: true\n  privacy_topic_id:\n    default: -1\n    hidden: true\n  welcome_topic_id:\n    default: -1\n    hidden: true\n  admin_quick_start_topic_id:\n    default: -1\n    hidden: true\n    client: true\n\n  bootstrap_mode_min_users:\n    default: 50\n    client: true\n    max: 5000\n\n  bootstrap_mode_enabled:\n    default: false\n    client: true\n    hidden: true\n\n  check_for_new_features:\n    default: false\n    hidden: true\n\n  automatically_unpin_topics:\n    default: true\n    client: true\n\n  read_time_word_count:\n    default: 500\n    client: true\n    locale_default:\n      ja: 350\n      zh_CN: 350\n      zh_TW: 350\n\n  topic_page_title_includes_category:\n    default: true\n    client: true\n\n  native_app_install_banner_ios: false\n\n  native_app_install_banner_android: false\n\n  ios_app_id:\n    default: \"1173672076\"\n    hidden: true\n\n  android_app_id:\n    default: \"com.discourse\"\n    hidden: true\n\n  pwa_display_browser_regex:\n    default: \"a^\"\n    hidden: true\n\n  app_association_android:\n    default: \"\"\n    textarea: true\n\n  app_association_ios:\n    default: \"\"\n    textarea: true\n\n  share_anonymized_statistics: true\n\n  auto_handle_queued_age:\n    default: 60\n    min: 0\n\n  penalty_step_hours:\n    default: \"24|72|168|720\"\n    type: \"list\"\n    list_type: \"compact\"\n\n  svg_icon_subset:\n    default: \"\"\n    type: \"list\"\n    list_type: \"compact\"\n    client: true\n\n  always_include_topic_excerpts:\n    default: false\n    hidden: true\n\n  allow_bulk_invite:\n    default: true\n    client: true\n\n  max_bulk_invites:\n    default: 50000\n    hidden: true\n\n  overridden_robots_txt:\n    default: \"\"\n    hidden: true\n  show_category_definitions_in_topic_lists:\n    default: false\n    hidden: true\n    client: true\n\n  create_revision_on_bulk_topic_moves:\n    default: true\n\n  allow_changing_staged_user_tracking: false\n\n  use_polymorphic_bookmarks:\n    client: true\n    default: true\n    hidden: true\n\n  splash_screen:\n    default: true\n\n  suggest_weekends_in_date_pickers:\n    client: true\n    default: true\n\nuser_preferences:\n  default_email_digest_frequency:\n    enum: \"DigestEmailSiteSetting\"\n    default: 10080\n  default_include_tl0_in_digests: false\n  default_email_level:\n    enum: \"EmailLevelSiteSetting\"\n    default: 1\n  default_email_messages_level:\n    enum: \"EmailLevelSiteSetting\"\n    default: 0\n  default_email_mailing_list_mode: false\n  default_email_mailing_list_mode_frequency:\n    enum: \"MailingListModeSiteSetting\"\n    default: 1\n  disable_mailing_list_mode:\n    default: true\n    client: true\n  default_email_previous_replies:\n    enum: \"PreviousRepliesSiteSetting\"\n    default: 2\n  default_email_in_reply_to:\n    default: false\n  default_hide_profile_and_presence:\n    default: false\n\n  default_other_new_topic_duration_minutes:\n    enum: \"NewTopicDurationSiteSetting\"\n    default: 2880\n  default_other_auto_track_topics_after_msecs:\n    enum: \"AutoTrackDurationSiteSetting\"\n    default: 300000\n  default_other_notification_level_when_replying:\n    enum: \"NotificationLevelWhenReplyingSiteSetting\"\n    default: 2\n  default_other_external_links_in_new_tab: false\n  default_other_enable_quoting: true\n  default_other_enable_defer: false\n  default_other_dynamic_favicon: false\n  default_other_skip_new_user_tips: false\n  default_other_like_notification_frequency:\n    enum: \"LikeNotificationFrequencySiteSetting\"\n    default: 1\n\n  default_topics_automatic_unpin:\n    default: true\n    client: true\n\n  default_categories_watching:\n    type: category_list\n    default: \"\"\n  default_categories_tracking:\n    type: category_list\n    default: \"\"\n  default_categories_muted:\n    type: category_list\n    default: \"\"\n  default_categories_watching_first_post:\n    type: category_list\n    default: \"\"\n  default_categories_normal:\n    type: category_list\n    default: \"\"\n  mute_all_categories_by_default:\n    default: false\n    client: true\n\n  default_tags_watching:\n    type: tag_list\n    default: \"\"\n  default_tags_tracking:\n    type: tag_list\n    default: \"\"\n  default_tags_muted:\n    type: tag_list\n    default: \"\"\n  default_tags_watching_first_post:\n    type: tag_list\n    default: \"\"\n\n  default_text_size:\n    type: enum\n    default: normal\n    choices:\n      - smaller\n      - normal\n      - larger\n      - largest\n\n  default_title_count_mode:\n    type: enum\n    default: notifications\n    choices:\n      - notifications\n      - contextual\n  enable_offline_indicator:\n    default: false\n    client: true\n  default_sidebar_link_to_filtered_list: false\n  default_sidebar_show_count_of_new_items: false\n\napi:\n  retain_web_hook_events_period_days:\n    default: 30\n    max: 36500\n  retry_web_hook_events:\n    default: false\n  api_key_last_used_epoch:\n    default: \"\" # Value is added in a migration\n    hidden: true\n  revoke_api_keys_days:\n    default: 180\n    max: 36500\n\nuser_api:\n  allow_user_api_keys:\n    default: true\n  allow_user_api_key_scopes:\n    default: \"read|write|message_bus|push|notifications|session_info|one_time_password\"\n    type: list\n  push_api_secret_key:\n    default: \"\"\n    hidden: true\n  min_trust_level_for_user_api_key:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  allowed_user_api_push_urls:\n    default: \"\"\n    type: list\n    hidden: true\n  allowed_user_api_auth_redirects:\n    default: \"https://api.discourse.org/api/auth_redirect|discourse://auth_redirect\"\n    type: list\n  expire_user_api_keys_days:\n    default: 180\n    max: 36500\n\ntags:\n  tagging_enabled:\n    client: true\n    default: true\n    refresh: true\n  tag_style:\n    client: true\n    type: enum\n    default: \"simple\"\n    choices:\n      - simple\n      - bullet\n      - box\n    preview: '<div class=\"discourse-tags\"><span class=\"discourse-tag {{value}}\">tag1</span><span class=\"discourse-tag {{value}}\">tag2</span></div>'\n  max_tags_per_topic:\n    default: 5\n    client: true\n  enable_max_tags_per_email_subject:\n    default: false\n    client: true\n  max_tags_per_email_subject:\n    default: 5\n    client: true\n    min: 0\n  max_tag_length:\n    default: 20\n    client: true\n  min_trust_to_create_tag:\n    default: \"3\"\n    enum: \"TrustLevelAndStaffSetting\"\n  min_trust_level_to_tag_topics:\n    default: \"0\"\n    enum: \"TrustLevelAndStaffSetting\"\n    client: true\n  max_tag_search_results:\n    client: true\n    default: 5\n    min: 1\n  max_tags_in_filter_list:\n    client: true\n    default: 30\n    min: 1\n    refresh: true\n  tags_sort_alphabetically:\n    client: true\n    default: false\n    refresh: true\n  tags_listed_by_group:\n    client: true\n    default: false\n  pm_tags_allowed_for_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  suppress_overlapping_tags_in_list:\n    default: false\n    client: true\n  remove_muted_tags_from_latest:\n    client: true\n    type: enum\n    default: always\n    enum: RemoveMutedTagsFromLatestSiteSetting\n  watched_precedence_over_muted:\n    client: true\n    default: false\n\n  force_lowercase_tags:\n    default: true\n    client: true\n  create_post_for_category_and_tag_changes:\n    default: false\n\ndashboard:\n  dashboard_hidden_reports:\n    client: true\n    type: list\n    list_type: compact\n    default: \"\"\n    allow_any: true\n  dashboard_visible_tabs:\n    client: true\n    type: list\n    list_type: compact\n    default: \"moderation|security|reports\"\n    allow_any: false\n    choices:\n      - moderation\n      - security\n      - reports\n  dashboard_general_tab_activity_metrics:\n    client: true\n    type: list\n    list_type: compact\n    default: \"page_view_total_reqs|visits|time_to_first_response|likes|flags|user_to_user_private_messages_with_replies\"\n    allow_any: false\n    choices:\n      - page_view_total_reqs\n      - visits\n      - time_to_first_response\n      - likes\n      - flags\n      - user_to_user_private_messages_with_replies\n      - signups\n  verbose_user_stat_count_logging:\n    hidden: true\n    default: false\n", "# frozen_string_literal: true\n\nRSpec.describe SidebarSectionsController do\n  fab!(:user) { Fabricate(:user) }\n  fab!(:admin) { Fabricate(:admin) }\n  fab!(:moderator) { Fabricate(:moderator) }\n\n  describe \"#index\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, title: \"private section\", user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n    fab!(:sidebar_section_2) { Fabricate(:sidebar_section, title: \"public section\", public: true) }\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    it \"returns public and private sections\" do\n      sign_in(user)\n      get \"/sidebar_sections.json\"\n      expect(response.status).to eq(200)\n      expect(response.parsed_body[\"sidebar_sections\"].map { |section| section[\"title\"] }).to eq(\n        [\"Community\", \"public section\", \"private section\"],\n      )\n    end\n  end\n\n  describe \"#create\" do\n    it \"is not available for anonymous\" do\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"link\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n      expect(response.status).to eq(403)\n    end\n\n    it \"creates custom section for user\" do\n      sign_in(user)\n      expect(SidebarSection.count).to eq(1)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             links: [\n               {\n                 icon: \"link\",\n                 name: \"categories\",\n                 value: \"http://#{Discourse.current_hostname}/categories\",\n               },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n               { icon: \"external-link-alt\", name: \"Discourse\", value: \"https://discourse.org\" },\n               { icon: \"external-link-alt\", name: \"My preferences\", value: \"/my/preferences\" },\n             ],\n           }\n\n      expect(response.status).to eq(200)\n\n      expect(SidebarSection.count).to eq(2)\n      sidebar_section = SidebarSection.last\n\n      expect(sidebar_section.title).to eq(\"custom section\")\n      expect(sidebar_section.user).to eq(user)\n      expect(sidebar_section.public).to be false\n      expect(UserHistory.count).to eq(0)\n      expect(sidebar_section.sidebar_urls.count).to eq(4)\n      expect(sidebar_section.sidebar_urls.first.icon).to eq(\"link\")\n      expect(sidebar_section.sidebar_urls.first.name).to eq(\"categories\")\n      expect(sidebar_section.sidebar_urls.first.value).to eq(\"/categories\")\n      expect(sidebar_section.sidebar_urls.first.external).to be false\n      expect(sidebar_section.sidebar_urls.second.icon).to eq(\"address-book\")\n      expect(sidebar_section.sidebar_urls.second.name).to eq(\"tags\")\n      expect(sidebar_section.sidebar_urls.second.value).to eq(\"/tags\")\n      expect(sidebar_section.sidebar_urls.second.external).to be false\n      expect(sidebar_section.sidebar_urls.third.icon).to eq(\"external-link-alt\")\n      expect(sidebar_section.sidebar_urls.third.name).to eq(\"Discourse\")\n      expect(sidebar_section.sidebar_urls.third.value).to eq(\"https://discourse.org\")\n      expect(sidebar_section.sidebar_urls.third.external).to be true\n      expect(sidebar_section.sidebar_urls.fourth.icon).to eq(\"external-link-alt\")\n      expect(sidebar_section.sidebar_urls.fourth.name).to eq(\"My preferences\")\n      expect(sidebar_section.sidebar_urls.fourth.value).to eq(\"/my/preferences\")\n      expect(sidebar_section.sidebar_urls.fourth.external).to be false\n    end\n\n    it \"does not allow regular user to create public section\" do\n      sign_in(user)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"does not allow moderator to create public section\" do\n      sign_in(moderator)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admin to create public section\" do\n      sign_in(admin)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(200)\n\n      sidebar_section = SidebarSection.last\n      expect(sidebar_section.title).to eq(\"custom section\")\n      expect(sidebar_section.public).to be true\n      expect(sidebar_section.user_id).to be Discourse.system_user.id\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:create_public_sidebar_section])\n      expect(user_history.subject).to eq(\"custom section\")\n      expect(user_history.details).to eq(\"links: categories - /categories, tags - /tags\")\n    end\n  end\n\n  describe \"#update\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"allows user to update their own section and links\" do\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.title).to eq(\"custom section edited\")\n      expect(UserHistory.count).to eq(0)\n      expect(sidebar_url_1.reload.name).to eq(\"latest\")\n      expect(sidebar_url_1.value).to eq(\"/latest\")\n      expect { section_link_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect { sidebar_url_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n    end\n\n    it \"allows admin to update public section and links\" do\n      sign_in(admin)\n      sidebar_section.update!(public: true)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              {\n                icon: \"link\",\n                name: \"meta\",\n                value: \"https://meta.discourse.org\",\n                segment: \"primary\",\n              },\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n              {\n                icon: \"link\",\n                name: \"homepage\",\n                value: \"https://discourse.org\",\n                segment: \"secondary\",\n              },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.title).to eq(\"custom section edited\")\n      expect(sidebar_url_1.reload.name).to eq(\"latest\")\n      expect(sidebar_url_1.value).to eq(\"/latest\")\n      expect { section_link_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect { sidebar_url_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n\n      urls = sidebar_section.sidebar_urls\n      expect(urls[0].name).to eq(\"meta\")\n      expect(urls[0].value).to eq(\"https://meta.discourse.org\")\n      expect(urls[0].segment).to eq(\"primary\")\n      expect(urls[1].name).to eq(\"latest\")\n      expect(urls[1].value).to eq(\"/latest\")\n      expect(urls[2].name).to eq(\"homepage\")\n      expect(urls[2].value).to eq(\"https://discourse.org\")\n      expect(urls[2].segment).to eq(\"secondary\")\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:update_public_sidebar_section])\n      expect(user_history.subject).to eq(\"custom section edited\")\n      expect(user_history.details).to eq(\n        \"links: latest - /latest, meta - https://meta.discourse.org, homepage - https://discourse.org\",\n      )\n    end\n\n    it \"doesn't allow to edit other's sections\" do\n      sidebar_section_2 = Fabricate(:sidebar_section)\n      sidebar_url_3 = Fabricate(:sidebar_url, name: \"other_tags\", value: \"/tags\")\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section_2, linkable: sidebar_url_3)\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section_2.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [{ icon: \"link\", id: sidebar_url_3.id, name: \"takeover\", value: \"/categories\" }],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to edit public sections\" do\n      sign_in(user)\n      sidebar_section.update!(public: true)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n            ],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to edit other's links\" do\n      sidebar_url_3 = Fabricate(:sidebar_url, name: \"other_tags\", value: \"/tags\")\n\n      Fabricate(\n        :sidebar_section_link,\n        sidebar_section: Fabricate(:sidebar_section),\n        linkable: sidebar_url_3,\n      )\n\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [{ icon: \"link\", id: sidebar_url_3.id, name: \"takeover\", value: \"/categories\" }],\n          }\n\n      expect(response.status).to eq(404)\n      expect(sidebar_url_3.reload.name).to eq(\"other_tags\")\n    end\n\n    it \"doesn't allow users to edit community section\" do\n      sign_in(user)\n\n      put \"/sidebar_sections/#{community_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admin to edit community section\" do\n      sign_in(admin)\n\n      topics_link = community_section.sidebar_urls.find_by(name: \"Topics\")\n      my_posts_link = community_section.sidebar_urls.find_by(name: \"My Posts\")\n\n      community_section\n        .sidebar_section_links\n        .where.not(linkable_id: [topics_link.id, my_posts_link.id])\n        .destroy_all\n\n      put \"/sidebar_sections/#{community_section.id}.json\",\n          params: {\n            title: \"community section edited\",\n            links: [\n              { icon: \"link\", id: my_posts_link.id, name: \"my posts edited\", value: \"/my_posts\" },\n              { icon: \"link\", id: topics_link.id, name: \"topics edited\", value: \"/new\" },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(community_section.reload.title).to eq(\"community section edited\")\n      expect(community_section.sidebar_urls[0].name).to eq(\"my posts edited\")\n      expect(community_section.sidebar_urls[0].value).to eq(\"/my_posts\")\n      expect(community_section.sidebar_urls[1].name).to eq(\"topics edited\")\n      expect(community_section.sidebar_urls[1].value).to eq(\"/new\")\n    end\n  end\n\n  describe \"#reorder\" do\n    fab!(:user2) { Fabricate(:user) }\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n    fab!(:sidebar_url_3) { Fabricate(:sidebar_url, name: \"topic\", value: \"/t/1\") }\n\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    fab!(:section_link_3) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_3)\n    end\n\n    it \"sorts links\" do\n      expect(sidebar_section.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_1.id, sidebar_url_2.id, sidebar_url_3.id],\n      )\n\n      sign_in(user)\n\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n      )\n    end\n\n    it \"returns 403 when a user tries to reorder a section that doesn't belong to them\" do\n      sign_in(user2)\n\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eq(403)\n\n      expect(sidebar_section.reload.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_1.id, sidebar_url_2.id, sidebar_url_3.id],\n      )\n    end\n\n    it \"returns 403 for an non user\" do\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eql(403)\n    end\n  end\n\n  describe \"#destroy\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"allows user to delete their own section\" do\n      sign_in(user)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(200)\n\n      expect { sidebar_section.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect(UserHistory.count).to eq(0)\n    end\n\n    it \"allows admin to delete public section\" do\n      sign_in(admin)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(200)\n\n      expect { sidebar_section.reload }.to raise_error(ActiveRecord::RecordNotFound)\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:destroy_public_sidebar_section])\n      expect(user_history.subject).to eq(\"Sidebar section\")\n    end\n\n    it \"doesn't allow to delete other's sidebar section\" do\n      sidebar_section_2 = Fabricate(:sidebar_section)\n      sign_in(user)\n      delete \"/sidebar_sections/#{sidebar_section_2.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to delete public sidebar section\" do\n      sign_in(user)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow moderator to delete public sidebar section\" do\n      sign_in(moderator)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n  end\n\n  describe \"#reset\" do\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"doesn't allow user to reset community section\" do\n      sign_in(user)\n      SidebarSection.any_instance.expects(:reset_community!).never\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow staff to reset community section\" do\n      sign_in(moderator)\n      SidebarSection.any_instance.expects(:reset_community!).never\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admins to reset community section to default\" do\n      sign_in(admin)\n      SidebarSection.any_instance.expects(:reset_community!).once\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(200)\n      expect(response.parsed_body[\"sidebar_section\"][\"id\"]).to eq(community_section.id)\n      expect(response.parsed_body[\"sidebar_section\"][\"title\"]).to eq(community_section.title)\n    end\n\n    it \"doesn't allow admin to delete community sidebar section\" do\n      sign_in(admin)\n      delete \"/sidebar_sections/#{community_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n  end\nend\n"], "fixing_code": ["# frozen_string_literal: true\n\nclass SidebarSectionsController < ApplicationController\n  requires_login\n  before_action :check_access_if_public\n\n  def index\n    sections =\n      SidebarSection\n        .strict_loading\n        .includes(:sidebar_urls)\n        .where(\"public OR user_id = ?\", current_user.id)\n        .order(\"(public IS TRUE) DESC, title ASC\")\n        .map { |section| SidebarSectionSerializer.new(section, root: false) }\n\n    render json: sections\n  end\n\n  def create\n    sidebar_section =\n      SidebarSection.create!(section_params.merge(sidebar_urls_attributes: links_params))\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_create_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n      Site.clear_anon_cache!\n    end\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  rescue ActiveRecord::RecordInvalid => e\n    render_json_error(e.record.errors.full_messages.first)\n  rescue ActiveRecord::NestedAttributes::TooManyRecords => e\n    render_json_error(e.message)\n  end\n\n  def update\n    sidebar_section = SidebarSection.find_by(id: section_params[\"id\"])\n    @guardian.ensure_can_edit!(sidebar_section)\n\n    ActiveRecord::Base.transaction do\n      sidebar_section.update!(section_params.merge(sidebar_urls_attributes: links_params))\n      sidebar_section.sidebar_section_links.update_all(user_id: sidebar_section.user_id)\n\n      order =\n        sidebar_section\n          .sidebar_urls\n          .sort_by do |url|\n            links_params.index { |link| link[\"name\"] == url.name && link[\"value\"] == url.value } ||\n              -1\n          end\n          .each_with_index\n          .map { |url, index| [url.id, index] }\n          .to_h\n\n      set_order(sidebar_section, order)\n    end\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_update_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n      Site.clear_anon_cache!\n    end\n\n    render_serialized(sidebar_section.reload, SidebarSectionSerializer)\n  rescue ActiveRecord::RecordInvalid => e\n    render_json_error(e.record.errors.full_messages.first)\n  rescue ActiveRecord::NestedAttributes::TooManyRecords => e\n    render_json_error(e.message)\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def reset\n    sidebar_section = SidebarSection.find_by(id: params[:id])\n    raise Discourse::InvalidParameters if !sidebar_section\n    @guardian.ensure_can_edit!(sidebar_section)\n\n    case sidebar_section.section_type\n    when \"community\"\n      sidebar_section.reset_community!\n    end\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  end\n\n  def reorder\n    sidebar_section = SidebarSection.find_by(id: reorder_params[\"sidebar_section_id\"])\n    @guardian.ensure_can_edit!(sidebar_section)\n    order = reorder_params[\"links_order\"].map(&:to_i).each_with_index.to_h\n    set_order(sidebar_section, order)\n\n    render_serialized(sidebar_section, SidebarSectionSerializer)\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def destroy\n    sidebar_section = SidebarSection.find_by(id: section_params[\"id\"])\n    @guardian.ensure_can_delete!(sidebar_section)\n    sidebar_section.destroy!\n\n    if sidebar_section.public?\n      StaffActionLogger.new(current_user).log_destroy_public_sidebar_section(sidebar_section)\n      MessageBus.publish(\"/refresh-sidebar-sections\", nil)\n    end\n\n    render json: success_json\n  rescue Discourse::InvalidAccess\n    render json: failed_json, status: 403\n  end\n\n  def section_params\n    section_params = params.permit(:id, :title, :public)\n    section_params.merge!(user: current_user) if !params[:public]\n    section_params\n  end\n\n  def links_params\n    params.permit(links: %i[icon name value id _destroy segment])[\"links\"]\n  end\n\n  def reorder_params\n    params.permit(:sidebar_section_id, links_order: [])\n  end\n\n  private\n\n  def set_order(sidebar_section, order)\n    position_generator =\n      (0..sidebar_section.sidebar_section_links.count * 2).excluding(\n        sidebar_section.sidebar_section_links.map(&:position),\n      ).each\n\n    links =\n      sidebar_section\n        .sidebar_section_links\n        .sort_by { |link| order[link.linkable_id] }\n        .map { |link| link.attributes.merge(position: position_generator.next) }\n\n    sidebar_section.sidebar_section_links.upsert_all(links, update_only: [:position])\n  end\n\n  def check_access_if_public\n    return true if !params[:public]\n    raise Discourse::InvalidAccess.new if !guardian.can_create_public_sidebar_section?\n  end\nend\n", "# frozen_string_literal: true\n\nclass SidebarSection < ActiveRecord::Base\n  MAX_TITLE_LENGTH = 30\n\n  belongs_to :user\n  has_many :sidebar_section_links, -> { order(\"position\") }, dependent: :destroy\n\n  has_many :sidebar_urls,\n           through: :sidebar_section_links,\n           source: :linkable,\n           source_type: \"SidebarUrl\"\n\n  accepts_nested_attributes_for :sidebar_urls,\n                                allow_destroy: true,\n                                limit: -> { SiteSetting.max_sidebar_section_links }\n\n  before_save :set_system_user_for_public_section\n\n  validates :title,\n            presence: true,\n            uniqueness: {\n              scope: %i[user_id],\n            },\n            length: {\n              maximum: MAX_TITLE_LENGTH,\n            }\n\n  scope :public_sections, -> { where(\"public\") }\n  enum :section_type, { community: 0 }, scopes: false, suffix: true\n\n  def reset_community!\n    ActiveRecord::Base.transaction do\n      self.update!(title: \"Community\")\n      self.sidebar_section_links.destroy_all\n      community_urls =\n        SidebarUrl::COMMUNITY_SECTION_LINKS.map do |url_data|\n          \"('#{url_data[:name]}', '#{url_data[:path]}', '#{url_data[:icon]}', '#{url_data[:segment]}', false, now(), now())\"\n        end\n\n      result = DB.query <<~SQL\n      INSERT INTO sidebar_urls(name, value, icon, segment, external, created_at, updated_at)\n      VALUES #{community_urls.join(\",\")}\n      RETURNING sidebar_urls.id\n      SQL\n\n      sidebar_section_links =\n        result.map.with_index do |url, index|\n          \"(-1, #{url.id}, 'SidebarUrl', #{self.id}, #{index},  now(), now())\"\n        end\n\n      DB.query <<~SQL\n      INSERT INTO sidebar_section_links(user_id, linkable_id, linkable_type, sidebar_section_id, position, created_at, updated_at)\n      VALUES #{sidebar_section_links.join(\",\")}\n      SQL\n    end\n  end\n\n  private\n\n  def set_system_user_for_public_section\n    self.user_id = Discourse.system_user.id if self.public\n  end\nend\n\n# == Schema Information\n#\n# Table name: sidebar_sections\n#\n#  id           :bigint           not null, primary key\n#  user_id      :integer          not null\n#  title        :string(30)       not null\n#  created_at   :datetime         not null\n#  updated_at   :datetime         not null\n#  public       :boolean          default(FALSE), not null\n#  section_type :integer\n#\n# Indexes\n#\n#  index_sidebar_sections_on_section_type       (section_type) UNIQUE\n#  index_sidebar_sections_on_user_id_and_title  (user_id,title) UNIQUE\n#\n", "# Available options:\n#\n# default            - The default value of the setting. For upload site settings, use the id of the upload seeded in db/fixtures/010_uploads.rb.\n# client             - Set to true if the javascript should have access to this setting's value.\n# refresh            - Set to true if clients should refresh when the setting is changed.\n# min                - For a string setting, the minimum length. For an integer setting, the minimum value.\n# max                - For a string setting, the maximum length. For an integer setting, the maximum value.\n# regex              - A regex that the value must match.\n# validator          - The name of the class that will be use to validate the value of the setting.\n# allow_any          - For choice settings allow items not specified in the choice list (default true)\n# secret             - Set to true if input type should be password and value needs to be scrubbed from logs (default false).\n# enum               - The setting has a fixed set of allowed values, and only one can be chosen.\n#                      Set to the class name that defines the set.\n# locale_default     - A hash which overrides according to `SiteSetting.default_locale`.\n#                      The key should be as the same as possible value of default_locale.\n#\n#\n# type: email    - Must be a valid email address.\n# type: username - Must match the username of an existing user.\n# type: list     - A list of values, chosen from a set of valid values defined in the choices option.\n# type: enum     - A single value, chosen from a set of valid values in the choices option.\n#\n# A type:list setting with the word 'colors' in its name will make color values have a bold line of the corresponding color\n#\nrequired:\n  title:\n    client: true\n    default: \"Discourse\"\n  site_description:\n    default: \"\"\n  short_site_description:\n    default: \"\"\n    client: true\n  contact_email:\n    default: \"\"\n    type: email\n  contact_url:\n    default: \"\"\n  notification_email:\n    default: \"noreply@unconfigured.discourse.org\"\n    type: email\n  site_contact_username:\n    default: \"\"\n    type: username\n  site_contact_group_name:\n    default: \"\"\n    type: group\n  exclude_rel_nofollow_domains:\n    client: true\n    default: \"\"\n    type: list\n    list_type: simple\n  company_name:\n    default: \"\"\n  governing_law:\n    default: \"\"\n  city_for_disputes:\n    default: \"\"\n\nbranding:\n  logo:\n    default: -5\n    client: true\n    type: upload\n  logo_small:\n    default: -6\n    client: true\n    type: upload\n  digest_logo:\n    default: \"\"\n    client: true\n    type: upload\n  mobile_logo:\n    default: \"\"\n    client: true\n    type: upload\n  logo_dark:\n    default: \"\"\n    client: true\n    type: upload\n  logo_small_dark:\n    default: \"\"\n    client: true\n    type: upload\n  mobile_logo_dark:\n    default: \"\"\n    client: true\n    type: upload\n  large_icon:\n    default: \"\"\n    client: true\n    type: upload\n  manifest_icon:\n    default: \"\"\n    type: upload\n  manifest_screenshots:\n    type: list\n    list_type: simple\n    default: \"\"\n  favicon:\n    default: \"\"\n    client: true\n    type: upload\n  apple_touch_icon:\n    default: \"\"\n    client: true\n    type: upload\n  opengraph_image:\n    default: \"\"\n    type: upload\n  twitter_summary_large_image:\n    default: \"\"\n    type: upload\n\nbasic:\n  display_local_time_in_user_card:\n    client: true\n    default: false\n  allow_user_locale:\n    client: true\n    default: false\n  set_locale_from_accept_language_header:\n    default: false\n    client: true\n    validator: \"AllowUserLocaleEnabledValidator\"\n  set_locale_from_cookie:\n    default: false\n    hidden: true\n    client: true\n    validator: \"AllowUserLocaleEnabledValidator\"\n  support_mixed_text_direction:\n    client: true\n    default: false\n  categories_topics:\n    default: 20\n    validator: \"CategoriesTopicsValidator\"\n  suggested_topics:\n    client: true\n    default: 5\n    max: 2000\n  limit_suggested_to_category:\n    default: false\n  suggested_topics_unread_max_days_old:\n    default: 90\n    min: 0\n    max: 36500\n  suggested_topics_max_days_old:\n    default: 365\n    min: 7\n    max: 36500\n  ga_version:\n    type: enum\n    default: v4_gtag\n    choices:\n      - v3_analytics\n      - v4_gtag\n  ga_universal_tracking_code:\n    client: true\n    default: \"\"\n    regex: \"^(UA|G)-[\\\\w-]+\"\n  ga_universal_domain_name:\n    client: true\n    default: \"auto\"\n  ga_universal_auto_link_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  gtm_container_id:\n    client: true\n    default: \"\"\n    regex: \"^GTM-\"\n  top_menu:\n    client: true\n    refresh: true\n    type: list\n    list_type: simple\n    default: \"latest|new|unread|top|categories\"\n    regex: \"latest\"\n    regex_error: \"site_settings.errors.must_include_latest\"\n    validator: RegexPresenceValidator\n    allow_any: false\n    choices:\n      - latest\n      - new\n      - unread\n      - unseen\n      - top\n      - categories\n      - read\n      - posted\n      - bookmarks\n  post_menu:\n    client: true\n    type: list\n    default: \"read|like|share|flag|edit|bookmark|delete|admin|reply\"\n    allow_any: false\n    choices:\n      - read\n      - like\n      - edit\n      - flag\n      - delete\n      - share\n      - bookmark\n      - admin\n      - reply\n  post_menu_hidden_items:\n    client: true\n    type: list\n    default: \"flag|bookmark|edit|delete|admin\"\n    allow_any: false\n    choices:\n      - like\n      - edit\n      - flag\n      - delete\n      - share\n      - bookmark\n      - admin\n      - reply\n  share_links:\n    client: true\n    type: list\n    default: \"twitter|facebook|email\"\n    allow_any: false\n    choices:\n      - twitter\n      - facebook\n      - email\n  allow_username_in_share_links:\n    client: true\n    default: true\n  share_quote_visibility:\n    client: true\n    type: enum\n    default: \"anonymous\"\n    choices:\n      - none\n      - anonymous\n      - all\n  share_quote_buttons:\n    client: true\n    type: list\n    default: \"twitter|email\"\n    allow_any: false\n    choices:\n      - twitter\n      - facebook\n      - email\n  desktop_category_page_style:\n    client: true\n    enum: \"CategoryPageStyle\"\n    default: \"categories_and_latest_topics\"\n  category_colors:\n    client: true\n    type: list\n    list_type: compact\n    default: \"BF1E2E|F1592A|F7941D|9EB83B|3AB54A|12A89D|25AAE2|0E76BD|652D90|92278F|ED207B|8C6238|231F20|808281|B3B5B4|E45735\"\n  category_style:\n    client: true\n    default: \"bullet\"\n    type: enum\n    choices:\n      - bar\n      - box\n      - bullet\n      - none\n  max_category_nesting:\n    client: true\n    default: 2\n    min: 2\n    max: 3\n    hidden: true\n  enable_mobile_theme:\n    client: true\n    default: true\n    hidden: true\n  enable_direct_s3_uploads:\n    client: true\n    default: false\n    hidden: true\n  enable_upload_debug_mode:\n    default: false\n    hidden: true\n    client: true\n  default_theme_id:\n    default: -1\n    hidden: true\n  default_dark_mode_color_scheme_id:\n    default: -1\n    type: enum\n    enum: \"ColorSchemeSetting\"\n    client: true\n  relative_date_duration:\n    client: true\n    default: 30\n  topics_per_period_in_top_summary:\n    default: 20\n    min: 1\n  topics_per_period_in_top_page:\n    default: 50\n    min: 1\n  top_page_default_timeframe:\n    client: true\n    default: \"yearly\"\n    type: enum\n    choices:\n      - all\n      - yearly\n      - quarterly\n      - monthly\n      - weekly\n      - daily\n  fixed_category_positions:\n    client: true\n    default: false\n  fixed_category_positions_on_create:\n    client: true\n    default: false\n  enable_badges:\n    client: true\n    default: true\n  enable_badge_sql:\n    client: true\n    default: false\n    hidden: true\n  max_favorite_badges:\n    client: true\n    default: 2\n    min: 0\n    max: 6\n  whispers_allowed_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  hidden_post_visible_groups:\n    type: group_list\n    list_type: compact\n    default: \"14\"\n    allow_any: false\n    refresh: true\n  enable_bookmarks_with_reminders:\n    client: true\n    default: true\n    hidden: true\n  push_notifications_prompt:\n    default: true\n    client: true\n  push_notifications_icon:\n    default: \"\"\n    type: upload\n  enable_desktop_push_notifications:\n    default: true\n    client: true\n  push_notification_time_window_mins:\n    default: 10\n    min: 0\n  short_title:\n    default: \"\"\n    max: 12\n  vapid_public_key_bytes:\n    default: \"\"\n    client: true\n    hidden: true\n  vapid_public_key:\n    default: \"\"\n    hidden: true\n  vapid_private_key:\n    default: \"\"\n    hidden: true\n  vapid_base_url:\n    default: \"\"\n    hidden: true\n  base_font:\n    default: \"arial\"\n    enum: \"BaseFontSetting\"\n    refresh: true\n  heading_font:\n    default: \"arial\"\n    enum: \"BaseFontSetting\"\n    refresh: true\n  enable_sitemap:\n    default: true\n  sitemap_page_size:\n    default: 10000\n  enable_user_status:\n    client: true\n    default: false\n  enable_user_tips:\n    client: true\n    default: true\n    refresh: true\n  page_loading_indicator:\n    client: true\n    type: enum\n    default: \"slider\"\n    choices:\n      - spinner\n      - slider\n\nlogin:\n  invite_only:\n    refresh: true\n    client: true\n    default: false\n  login_required:\n    refresh: true\n    client: true\n    default: false\n  must_approve_users:\n    client: true\n    default: false\n  invite_code: \"\"\n  enable_local_logins:\n    client: true\n    default: true\n  enable_local_logins_via_email:\n    client: true\n    default: true\n    validator: \"EnableLocalLoginsViaEmailValidator\"\n  allow_new_registrations:\n    client: true\n    default: true\n  enable_signup_cta:\n    client: true\n    default: true\n  enable_google_oauth2_logins:\n    default: false\n  google_oauth2_client_id: \"\"\n  google_oauth2_client_secret:\n    default: \"\"\n    secret: true\n  google_oauth2_prompt:\n    default: \"\"\n    type: list\n    choices:\n      - \"\"\n      - \"none\"\n      - \"consent\"\n      - \"select_account\"\n  google_oauth2_hd:\n    default: \"\"\n  google_oauth2_hd_groups:\n    default: false\n    validator: GoogleOauth2HdGroupsValidator\n  google_oauth2_hd_groups_service_account_admin_email:\n    default: \"\"\n  google_oauth2_hd_groups_service_account_json:\n    default: \"\"\n    textarea: true\n  enable_twitter_logins:\n    default: false\n  twitter_consumer_key:\n    default: \"\"\n    regex: \"^[\\\\w+-]+$\"\n  twitter_consumer_secret:\n    default: \"\"\n    regex: \"^[\\\\w+-]+$\"\n    secret: true\n  enable_facebook_logins:\n    default: false\n  facebook_app_id:\n    client: true\n    default: \"\"\n    regex: \"^\\\\d+$\"\n  facebook_app_secret:\n    default: \"\"\n    regex: \"^[a-f0-9]+$\"\n    secret: true\n  enable_github_logins:\n    default: false\n  github_client_id:\n    default: \"\"\n    regex: \"^[a-zA-Z0-9\\\\.]+$\"\n  github_client_secret:\n    default: \"\"\n    regex: \"^[a-f0-9]+$\"\n    secret: true\n  enable_discord_logins:\n    default: false\n  discord_client_id:\n    default: \"\"\n  discord_secret:\n    default: \"\"\n    secret: true\n  discord_trusted_guilds:\n    default: \"\"\n    type: list\n    list_type: simple\n  auth_skip_create_confirm:\n    default: false\n    client: true\n  auth_immediately:\n    default: true\n  auth_overrides_email:\n    default: false\n    validator: \"SsoOverridesEmailValidator\"\n    client: true\n  auth_overrides_username: false\n  auth_overrides_name: false\n  enable_discourse_connect:\n    client: true\n    default: false\n    validator: \"EnableSsoValidator\"\n  discourse_connect_allowed_redirect_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  verbose_discourse_connect_logging: false\n  verbose_upload_logging:\n    hidden: true\n    default: false\n  verbose_auth_token_logging:\n    hidden: true\n    default: false\n  max_suspicious_distance_km:\n    hidden: true\n    default: 100\n  discourse_connect_url:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  discourse_connect_secret:\n    default: \"\"\n    secret: true\n  discourse_connect_overrides_groups: false\n  discourse_connect_overrides_bio: false\n  discourse_connect_overrides_avatar:\n    default: false\n    client: true\n  discourse_connect_overrides_profile_background: false\n  discourse_connect_overrides_location: false\n  discourse_connect_overrides_website: false\n  discourse_connect_overrides_card_background: false\n  discourse_connect_not_approved_url: \"\"\n  discourse_connect_csrf_protection:\n    default: true\n    hidden: true\n  enable_discourse_connect_provider: false\n  discourse_connect_provider_secrets:\n    default: \"\"\n    type: list\n    list_type: secret\n    secret: true\n    placeholder:\n      key: \"sso_provider.key_placeholder\"\n      value: \"sso_provider.value_placeholder\"\n  blocked_email_domains:\n    default: \"mailinator.com\"\n    type: host_list\n    list_type: simple\n  allowed_email_domains:\n    default: \"\"\n    type: host_list\n    list_type: simple\n  normalize_emails:\n    default: false\n  auto_approve_email_domains:\n    default: \"\"\n    type: host_list\n    list_type: simple\n  hide_email_address_taken:\n    client: true\n    default: false\n  log_out_strict: false\n  pending_users_reminder_delay_minutes:\n    min: -1\n    default: 480\n  persistent_sessions: true\n  maximum_session_age:\n    default: 1440\n    min: 1\n    max: 175200\nusers:\n  min_username_length:\n    client: true\n    default: 3\n    validator: \"MinUsernameLengthValidator\"\n  max_username_length:\n    client: true\n    default: 20\n    validator: \"MaxUsernameLengthValidator\"\n  unicode_usernames:\n    default: false\n    client: true\n    validator: \"UnicodeUsernameValidator\"\n  allowed_unicode_username_characters:\n    validator: \"UnicodeUsernameAllowlistValidator\"\n    default: \"\"\n    locale_default:\n      cs: \"[\u011b\u0161\u010d\u0159\u017e\u00fd\u00e1\u00ed\u00e9\u00f3\u016f\u00fa\u010f\u0165\u0148\u011a\u0160\u010c\u0158\u017d\u00dd\u00c1\u00cd\u00c9\u00d3\u016e\u00da\u010e\u0164\u0147]\"\n      de: \"[\u00e4\u00f6\u00fc\u00df\u00c4\u00d6\u00dc\u1e9e]\"\n      fi: \"[\u00e5\u00e4\u00f6\u00c5\u00c4\u00d6]\"\n      ja: '[\\p{Han}\\p{Katakana}\\p{Hiragana}]'\n      ko: '\\p{Hangul}'\n      zh_CN: '\\p{Han}'\n      zh_TW: '\\p{Han}'\n  reserved_usernames:\n    type: list\n    list_type: compact\n    default: \"admin|moderator|administrator|mod|sys|system|community|info|you|name|username|user|nickname|discourse|discourseorg|discourseforum|support|all|here\"\n  min_password_length:\n    client: true\n    default: 10\n    min: 8\n    max: 500\n  min_admin_password_length:\n    client: true\n    default: 15\n    min: 8\n    max: 500\n  password_unique_characters:\n    default: 6\n    min: 1\n    max: 10\n  block_common_passwords: true\n  username_change_period: 3\n  email_editable:\n    client: true\n    default: true\n  logout_redirect:\n    client: true\n    default: \"\"\n  full_name_required:\n    client: true\n    default: false\n  enable_names:\n    client: true\n    default: true\n  invite_expiry_days:\n    default: 90\n    client: true\n    max: 36500\n  invites_per_page:\n    client: true\n    default: 40\n    hidden: true\n  delete_user_max_post_age:\n    client: true\n    default: 60\n  delete_all_posts_max:\n    client: true\n    default: 15\n    min: 1\n  delete_user_self_max_post_count:\n    default: 1\n    min: -1\n  redirect_users_to_top_page: true\n  prioritize_username_in_ux:\n    client: true\n    default: true\n  email_token_valid_hours:\n    default: 48\n    min: 1\n  purge_unactivated_users_grace_period_days:\n    default: 14\n    max: 36500\n  public_user_custom_fields:\n    type: list\n    list_type: simple\n    default: \"\"\n  staff_user_custom_fields:\n    type: list\n    list_type: simple\n    default: \"\"\n  enable_user_directory:\n    client: true\n    default: true\n  allow_anonymous_posting:\n    default: false\n    client: true\n  anonymous_posting_min_trust_level:\n    default: 1\n    enum: \"TrustLevelSetting\"\n    client: true\n  anonymous_account_duration_minutes:\n    default: 10080\n    max: 99000\n  allow_users_to_hide_profile:\n    default: true\n    client: true\n  hide_user_profiles_from_public:\n    default: false\n    client: true\n  allow_featured_topic_on_user_profiles:\n    default: true\n    client: true\n  show_inactive_accounts:\n    default: false\n  allowed_user_website_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  hide_suspension_reasons:\n    default: false\n    client: true\n  log_personal_messages_views: false\n  ignored_users_count_message_threshold:\n    default: 5\n    client: true\n    min: 1\n  ignored_users_message_gap_days:\n    default: 365\n    client: true\n    min: 1\n    max: 36500\n  clean_up_inactive_users_after_days:\n    default: 730\n    min: 0\n    max: 36500\n  clean_up_unused_staged_users_after_days:\n    default: 365\n    min: 0\n    max: 36500\n  user_selected_primary_groups:\n    default: false\n    client: true\n  max_notifications_per_user:\n    default: 10000\n  gravatar_name:\n    default: Gravatar\n    client: true\n  gravatar_base_url:\n    default: www.gravatar.com\n    client: true\n  gravatar_login_url:\n    default: /emails\n    client: true\n  max_bookmarks_per_user:\n    default: 2000\n    hidden: true\n  use_email_for_username_and_name_suggestions:\n    default: false\n  use_name_for_username_suggestions:\n    default: true\n\ngroups:\n  enable_group_directory:\n    client: true\n    default: true\n  group_in_subject:\n    default: false\n  enable_category_group_moderation:\n    client: true\n    default: false\n\nposting:\n  min_post_length:\n    client: true\n    min: 1\n    default: 20\n    locale_default:\n      ja: 8\n      zh_CN: 8\n      zh_TW: 8\n  min_first_post_length:\n    client: true\n    min: 1\n    default: 20\n    locale_default:\n      ja: 8\n      zh_CN: 8\n      zh_TW: 8\n  min_personal_message_post_length:\n    client: true\n    min: 1\n    default: 10\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  max_post_length:\n    client: true\n    default: 32000\n    max: 150000\n  topic_featured_link_enabled:\n    client: true\n    default: true\n  body_min_entropy:\n    default: 7\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  min_topic_views_for_delete_confirm:\n    client: true\n    default: 5000\n  min_topic_title_length:\n    client: true\n    default: 15\n    min: 1\n    locale_default:\n      ja: 6\n      zh_CN: 6\n      zh_TW: 6\n  max_topic_title_length:\n    client: true\n    default: 255\n    min: 5\n    max: 255\n  title_min_entropy:\n    default: 10\n    locale_default:\n      ja: 3\n      zh_CN: 3\n      zh_TW: 3\n  allow_uppercase_posts:\n    default: false\n    locale_default:\n      ja: true\n  max_consecutive_replies:\n    default: 3\n  enable_filtered_replies_view:\n    default: false\n    client: true\n  title_prettify:\n    default: true\n    locale_default:\n      ja: false\n      zh_CN: false\n      zh_TW: false\n  title_remove_extraneous_space:\n    default: false\n    locale_default:\n      en: true\n      en_GB: true\n  title_fancy_entities: true\n  min_personal_message_title_length:\n    client: true\n    default: 2\n    min: 1\n  max_emojis_in_title: 1\n  allow_uncategorized_topics:\n    client: true\n    default: false\n    refresh: true\n  allow_duplicate_topic_titles: false\n  allow_duplicate_topic_titles_category: false\n  min_title_similar_length:\n    client: true\n    default: 10\n    locale_default:\n      ja: 4\n      zh_CN: 4\n      zh_TW: 4\n  enable_system_message_replies:\n    default: true\n  personal_message_enabled_groups:\n    default: \"11\" # auto group trust_level_1\n    type: group_list\n    client: true\n    allow_any: false\n    refresh: true\n    validator: \"PersonalMessageEnabledGroupsValidator\"\n  editing_grace_period: 300\n  editing_grace_period_max_diff: 100\n  editing_grace_period_max_diff_high_trust: 400\n  staff_edit_locks_post: false\n  shared_drafts_category:\n    type: category\n    default: \"\"\n  shared_drafts_min_trust_level:\n    default: \"staff\"\n    enum: \"TrustLevelAndStaffSetting\"\n  post_edit_time_limit:\n    default: 1440\n    max: 10080\n  tl2_post_edit_time_limit:\n    default: 43200\n    max: 525600\n  edit_history_visible_to_public:\n    client: true\n    default: true\n  delete_removed_posts_after:\n    client: true\n    default: 24\n    max: 876000\n  notify_users_after_responses_deleted_on_flagged_post:\n    default: false\n  traditional_markdown_linebreaks:\n    client: true\n    default: false\n  enable_markdown_typographer:\n    client: true\n    default: true\n  enable_markdown_linkify:\n    client: true\n    default: true\n  markdown_linkify_tlds:\n    client: true\n    type: list\n    default: \"com|net|org|io|onion|co|tv|ru|cn|us|uk|me|de|fr|fi|gov\"\n    list_type: compact\n    validator: \"MarkdownLinkifyTldsValidator\"\n  markdown_typographer_quotation_marks:\n    client: true\n    type: list\n    list_type: compact\n    validator: \"MarkdownTypographerQuotationMarksValidator\"\n    default: \"\u201c|\u201d|\u2018|\u2019\"\n    locale_default:\n      de: \"\u201e|\u201c|\u201a|\u2018\"\n      fr: \"\u00ab\\xA0|\\xA0\u00bb|\u2039\\xA0|\\xA0\u203a\"\n  enable_rich_text_paste:\n    client: true\n    default: true\n  suppress_reply_directly_below:\n    client: true\n    default: true\n  suppress_reply_directly_above:\n    client: true\n    default: true\n  suppress_reply_when_quoting:\n    default: true\n  remove_full_quote:\n    default: true\n  max_reply_history:\n    default: 1\n    client: true\n  post_undo_action_window_mins: 10\n  enable_mentions:\n    default: true\n    client: true\n  max_mentions_per_post: 10\n  max_users_notified_per_group_mention:\n    default: 100\n    client: true\n  newuser_max_replies_per_topic: 3\n  newuser_max_mentions_per_post: 2\n  here_mention:\n    default: \"here\"\n    validator: \"NotUsernameValidator\"\n    client: true\n  max_here_mentioned: 10\n  min_trust_level_for_here_mention:\n    default: \"2\"\n    enum: \"TrustLevelAndStaffSetting\"\n  title_max_word_length:\n    default: 30\n    locale_default:\n      ja: 50\n      ko: 50\n      zh_CN: 50\n      zh_TW: 50\n  allowed_link_domains:\n    default: \"\"\n    type: list\n  newuser_max_links: 2\n  newuser_max_embedded_media:\n    client: true\n    default: 1\n  newuser_max_attachments:\n    client: true\n    default: 0\n  post_excerpt_maxlength:\n    default: 300\n    max: 1000\n    locale_default:\n      ja: 120\n      zh_CN: 120\n      zh_TW: 120\n  topic_excerpt_maxlength:\n    default: 220\n    max: 1000\n    locale_default:\n      ja: 120\n      zh_CN: 120\n      zh_TW: 120\n  default_subcategory_on_read_only_category:\n    client: true\n    default: false\n  show_pinned_excerpt_mobile:\n    client: true\n    default: true\n  show_pinned_excerpt_desktop:\n    client: true\n    default: true\n  display_name_on_posts:\n    client: true\n    default: false\n  show_time_gap_days:\n    default: 7\n    max: 36500\n    client: true\n  short_progress_text_threshold:\n    client: true\n    default: 10000\n    max: 99000\n  default_code_lang:\n    client: true\n    default: \"auto\"\n  warn_reviving_old_topic_age: 180\n  autohighlight_all_code:\n    client: true\n    default: false\n  highlighted_languages:\n    default: \"bash|c|cpp|csharp|css|diff|go|graphql|ini|java|javascript|json|kotlin|lua|makefile|markdown|objectivec|perl|php|php-template|plaintext|python|python-repl|r|ruby|rust|scss|shell|sql|swift|typescript|xml|yaml|wasm\"\n    choices: \"HighlightJs.languages\"\n    type: list\n    client: true\n    list_type: compact\n  show_copy_button_on_codeblocks:\n    client: true\n    default: false\n  delete_old_hidden_posts: true\n  enable_emoji:\n    default: true\n    client: true\n  enable_emoji_shortcuts:\n    default: true\n    client: true\n  emoji_set:\n    default: \"twitter\"\n    client: true\n    enum: \"EmojiSetSiteSetting\"\n  emoji_autocomplete_min_chars:\n    client: true\n    default: 0\n    locale_default:\n      fr: 1\n  enable_inline_emoji_translation:\n    client: true\n    default: false\n    locale_default:\n      zh_CN: true\n      zh_TW: true\n      ja: true\n      ko: true\n  emoji_deny_list:\n    type: emoji_list\n    default: \"\"\n    client: true\n    refresh: true\n  approve_post_count:\n    default: 0\n  approve_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  approve_new_topics_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  approve_suspect_users:\n    default: true\n  approve_unless_staged:\n    default: false\n  notify_about_queued_posts_after:\n    type: float\n    default: 24\n    min: 0\n  auto_close_messages_post_count:\n    default: 500\n  auto_close_topics_post_count:\n    default: 10000\n  auto_close_topics_create_linked_topic:\n    default: true\n  code_formatting_style:\n    client: true\n    type: enum\n    default: \"code-fences\"\n    choices:\n      - code-fences\n      - 4-spaces-indent\n  embed_any_origin: false\n  embed_topics_list: false\n  embed_set_canonical_url: false\n  embed_unlisted: true\n  embed_truncate: true\n  embed_support_markdown: false\n  allowed_embed_selectors: \"\"\n  allowed_href_schemes:\n    client: true\n    default: \"\"\n    type: list\n    list_type: compact\n  max_allowed_message_recipients:\n    default: 30\n    min: 1\n  watched_words_regular_expressions:\n    client: true\n    default: false\n  enable_diffhtml_preview:\n    default: false\n    client: true\n  enable_fast_edit:\n    default: true\n    client: true\n  old_post_notice_days:\n    default: 14\n    max: 36500\n    client: true\n  new_user_notice_tl:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  returning_user_notice_tl:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  returning_users_days:\n    default: 120\n    max: 36500\n  review_media_unless_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  blur_tl0_flagged_posts_media:\n    default: true\n    client: true\n  enable_page_publishing:\n    default: false\n  show_published_pages_login_required:\n    default: false\n  skip_auto_delete_reply_likes: 5\n  review_every_post:\n    default: false\n  max_draft_length:\n    default: 400_000\n    hidden: true\n  max_form_template_title_length:\n    default: 100\n    min: 5\n    max: 255\n  max_form_template_content_length:\n    default: 2000\n    max: 150000\n\nemail:\n  email_time_window_mins:\n    default: 10\n    client: true\n  personal_email_time_window_seconds: 20\n  email_posts_context: 5\n  digest_min_excerpt_length:\n    default: 100\n    locale_default:\n      ja: 50\n      zh_CN: 50\n      zh_TW: 50\n  digest_topics:\n    default: 5\n    min: 1\n    max: 20\n  digest_posts:\n    default: 5\n    min: 0\n    max: 20\n  digest_other_topics:\n    default: 5\n    min: 0\n    max: 20\n  suppress_digest_email_after_days:\n    default: 180\n    max: 36500\n  digest_suppress_categories:\n    type: category_list\n    default: \"\"\n  disable_digest_emails:\n    default: false\n    client: true\n  apply_custom_styles_to_digest: true\n  email_accent_bg_color:\n    type: color\n    default: \"#2F70AC\"\n    validator: \"CssColorValidator\"\n  email_accent_fg_color:\n    type: color\n    default: \"#FFFFFF\"\n    validator: \"CssColorValidator\"\n  email_link_color:\n    type: color\n    default: \"#006699\"\n    validator: \"CssColorValidator\"\n  show_topic_featured_link_in_digest: false\n  email_custom_headers: \"Auto-Submitted: auto-generated\"\n  email_subject: \"[%{site_name}] %{optional_pm}%{optional_cat}%{topic_title}\"\n  reply_by_email_enabled:\n    default: false\n    validator: \"ReplyByEmailEnabledValidator\"\n  reply_by_email_address:\n    default: \"\"\n    validator: \"ReplyByEmailAddressValidator\"\n  alternative_reply_by_email_addresses:\n    default: \"\"\n    validator: \"AlternativeReplyByEmailAddressesValidator\"\n  find_related_post_with_key:\n    default: true\n  manual_polling_enabled:\n    default: false\n  pop3_polling_enabled:\n    default: false\n    validator: \"POP3PollingEnabledSettingValidator\"\n  pop3_polling_ssl: true\n  pop3_polling_openssl_verify: true\n  pop3_polling_period_mins: 5\n  pop3_polling_host: \"\"\n  pop3_polling_port: 995\n  pop3_polling_username: \"\"\n  pop3_polling_password:\n    default: \"\"\n    secret: true\n  pop3_polling_delete_from_server: true\n  log_mail_processing_failures: false\n  incoming_email_prefer_html: true\n  strip_incoming_email_lines: false\n  email_in:\n    default: false\n    client: true\n  email_in_min_trust:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  email_in_authserv_id:\n    default: \"\"\n  email_in_spam_header:\n    type: enum\n    default: \"none\"\n    choices:\n      - none\n      - X-Spam-Flag\n      - X-Spam-Status\n      - X-SES-Spam-Verdict\n  enable_imap:\n    default: false\n    client: true\n  enable_imap_write:\n    default: false\n  enable_imap_idle:\n    default: false\n  enable_smtp:\n    default: false\n    client: true\n  imap_polling_period_mins:\n    default: 5\n  imap_polling_old_emails:\n    default: 1000\n  imap_polling_new_emails:\n    default: 250\n  imap_batch_import_email:\n    default: 100\n  email_prefix: \"\"\n  email_site_title: \"\"\n  disable_emails:\n    client: true\n    type: enum\n    default: \"no\"\n    choices:\n      - \"no\"\n      - \"yes\"\n      - \"non-staff\"\n  strip_images_from_short_emails: true\n  short_email_length: 2800\n  display_name_on_email_from:\n    default: true\n  unsubscribe_via_email:\n    default: true\n  unsubscribe_via_email_footer:\n    default: false\n  disallow_reply_by_email_after_days:\n    default: 90\n    max: 36500\n  delete_email_logs_after_days:\n    default: 90\n    max: 36500\n  max_emails_per_day_per_user: 100\n  enable_staged_users: true\n  maximum_staged_users_per_email: 10\n  maximum_recipients_per_new_group_email:\n    default: 10\n    min: 1\n  auto_generated_allowlist:\n    default: \"\"\n    type: list\n    list_type: simple\n  block_auto_generated_emails: true\n  ignore_by_title:\n    type: list\n    list_type: simple\n    default: \"\"\n  mailgun_api_key:\n    default: \"\"\n    regex: '^((key-)?\\h{32}|\\h{32}-\\h{8}-\\h{8})$'\n    secret: true\n  sendgrid_verification_key:\n    default: \"\"\n    secret: true\n  mailjet_webhook_token:\n    default: \"\"\n    secret: true\n  mandrill_authentication_key:\n    default: \"\"\n    secret: true\n  postmark_webhook_token:\n    default: \"\"\n    secret: true\n  sparkpost_webhook_token:\n    default: \"\"\n    secret: true\n  bounce_score_threshold:\n    client: true\n    default: 4\n    min: 1\n  bounce_score_erode_on_send:\n    default: 0.1\n    hidden: true\n  soft_bounce_score:\n    default: 1\n    min: 1\n  hard_bounce_score:\n    default: 2\n    min: 2\n  reset_bounce_score_after_days:\n    default: 30\n    max: 36500\n  blocked_attachment_content_types:\n    type: list\n    default: \"pkcs7|x-vcard|pgp-keys|pgp-signature\"\n    list_type: compact\n  blocked_attachment_filenames:\n    type: list\n    default: \"smime.p7s|signature.asc|winmail.dat\"\n    list_type: compact\n  forwarded_emails_behaviour:\n    type: enum\n    default: hide\n    choices:\n      - hide\n      - quote\n      - create_replies\n  always_show_trimmed_content: false\n  trim_incoming_emails: true\n  private_email: false\n  email_custom_template:\n    default: \"\"\n    hidden: true\n  email_custom_css:\n    default: \"\"\n    hidden: true\n  email_custom_css_compiled:\n    default: \"\"\n    hidden: true\n  email_total_attachment_size_limit_kb:\n    default: 0\n    max: 51200\n  post_excerpts_in_emails: false\n  raw_email_max_length: 220000\n  raw_rejected_email_max_length: 4000\n  delete_rejected_email_after_days:\n    default: 90\n    validator: \"DeleteRejectedEmailAfterDaysValidator\"\n  enable_secondary_emails:\n    client: true\n    default: true\n    hidden: true\n  max_participant_names:\n    default: 10\n    hidden: true\n  require_change_email_confirmation: false\n\nfiles:\n  max_image_size_kb:\n    client: true\n    default: 4096\n    max: 102400\n  max_attachment_size_kb:\n    client: true\n    default: 4096\n    max: 1024000\n  max_image_megapixels:\n    default: 40\n    min: 5\n    max: 150\n  max_export_file_size_kb:\n    hidden: true\n    default: 50000\n    max: 1024000\n  theme_authorized_extensions:\n    default: \"wasm|jpg|jpeg|png|woff|woff2|svg|eot|ttf|otf|gif|webp|avif|js\"\n    type: list\n    list_type: compact\n  authorized_extensions:\n    client: true\n    default: \"jpg|jpeg|png|gif|heic|heif|webp|avif\"\n    refresh: true\n    type: list\n    list_type: compact\n  authorized_extensions_for_staff:\n    client: true\n    default: \"\"\n    refresh: true\n    type: list\n    list_type: compact\n  export_authorized_extensions:\n    hidden: true\n    default: \"zip\"\n    type: list\n    list_type: compact\n  responsive_post_image_sizes:\n    default: \"1|1.5|2\"\n    type: list\n    list_type: compact\n  max_image_width:\n    client: true\n    default: 690\n  max_image_height:\n    client: true\n    default: 500\n  download_remote_images_to_local:\n    default: true\n  download_remote_images_threshold: 10\n  disabled_image_download_domains:\n    type: list\n    list_type: simple\n    default: \"\"\n  block_hotlinked_media:\n    default: false\n  block_hotlinked_media_exceptions:\n    default: \"\"\n    type: list\n    regex: '\\A((https?:\\/\\/.+)(\\|https?:\\/\\/.+[|$])*)?\\z'\n  create_thumbnails: true\n  clean_up_uploads: true\n  clean_orphan_uploads_grace_period_hours: 48\n  purge_deleted_uploads_grace_period_days:\n    default: 30\n    max: 36500\n  prevent_anons_from_downloading_files:\n    default: false\n    client: true\n  secure_uploads:\n    default: false\n    client: true\n  secure_uploads_allow_embed_images_in_emails:\n    default: true\n  secure_uploads_max_email_embed_image_size_kb:\n    default: 1024\n    min: 1\n    max: 10240\n  enable_s3_uploads:\n    default: false\n    client: true\n  s3_use_iam_profile:\n    default: false\n  s3_access_key_id:\n    default: \"\"\n    secret: true\n  s3_secret_access_key:\n    default: \"\"\n    secret: true\n  s3_region:\n    default: \"us-east-1\"\n    enum: \"S3RegionSiteSetting\"\n  s3_upload_bucket:\n    default: \"\"\n    regex: '^[a-z0-9\\-\\/_]+$' # can't use '.' when using HTTPS\n  s3_endpoint:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  s3_http_continue_timeout:\n    default: 1\n    hidden: true\n  s3_install_cors_rule:\n    default: true\n    hidden: true\n  s3_cdn_url:\n    default: \"\"\n    regex: '^https?:\\/\\/.+[^\\/]$'\n  s3_configure_tombstone_policy:\n    default: true\n  s3_use_acls:\n    default: true\n  enable_s3_inventory:\n    default: false\n  s3_configure_inventory_policy:\n    default: true\n    hidden: true\n  s3_presigned_get_url_expires_after_seconds:\n    default: 300\n    hidden: true\n    min: 60\n    max: 604800\n  allow_profile_backgrounds:\n    client: true\n    default: true\n  automatically_download_gravatars: true\n  allow_uploaded_avatars:\n    client: true\n    default: \"0\"\n    enum: \"TrustLevelAndStaffAndDisabledSetting\"\n  default_avatars:\n    default: \"\"\n    type: url_list\n    client: true\n  avatar_sizes:\n    default: \"24|48|72|96|144|288\"\n    type: list\n    list_type: compact\n    client: true\n  external_system_avatars_enabled:\n    default: true\n    client: true\n    validator: \"ExternalSystemAvatarsValidator\"\n  external_system_avatars_url:\n    default: \"/letter_avatar_proxy/v4/letter/{first_letter}/{color}/{size}.png\"\n    client: true\n    regex: '^((https?:)?\\/)?\\/.+[^\\/]'\n  external_emoji_url:\n    default: \"\"\n    client: true\n  restrict_letter_avatar_colors:\n    default: \"\"\n    type: list\n    list_type: compact\n    validator: \"ColorListValidator\"\n  selectable_avatars_mode:\n    default: disabled\n    client: true\n    type: enum\n    choices:\n      - disabled\n      - everyone\n      - tl1\n      - tl2\n      - tl3\n      - tl4\n      - staff\n      - no_one\n    validator: \"SelectableAvatarsModeValidator\"\n  selectable_avatars:\n    default: \"\"\n    client: true\n    type: uploaded_image_list\n  allow_all_attachments_for_group_messages: false\n  png_to_jpg_quality:\n    default: 95\n    min: 1\n    max: 100\n  recompress_original_jpg_quality:\n    default: 90\n    min: 1\n    max: 100\n  image_preview_jpg_quality:\n    default: 90\n    min: 1\n    max: 100\n  allow_staff_to_upload_any_file_in_pm:\n    default: true\n    client: true\n  strip_image_metadata: true\n  min_ratio_to_crop:\n    type: float\n    default: 0.22\n    min: 0\n    max: 1\n  simultaneous_uploads:\n    client: true\n    default: 5\n    min: 0\n    max: 20\n  decompressed_theme_max_file_size_mb:\n    default: 1000\n    hidden: true\n  decompressed_backup_max_file_size_mb:\n    default: 100000\n    hidden: true\n  composer_media_optimization_image_enabled:\n    default: true\n    client: true\n  composer_media_optimization_image_bytes_optimization_threshold:\n    default: 524288\n    client: true\n  composer_media_optimization_image_resize_dimensions_threshold:\n    default: 1920\n    client: true\n  composer_media_optimization_image_resize_width_target:\n    default: 1920\n    client: true\n  composer_media_optimization_image_resize_pre_multiply:\n    default: false\n    hidden: true\n    client: true\n  composer_media_optimization_image_resize_linear_rgb:\n    default: false\n    hidden: true\n    client: true\n  composer_media_optimization_image_encode_quality:\n    default: 75\n    client: true\n  composer_media_optimization_debug_mode:\n    default: false\n    client: true\n    hidden: true\n  composer_ios_media_optimisation_image_enabled:\n    default: false\n    client: true\n    hidden: true\n  video_thumbnails_enabled:\n    default: true\n    client: true\n    hidden: true\n\ntrust:\n  default_trust_level:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  default_invitee_trust_level:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_create_topic:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_edit_wiki_post:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_edit_post:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_allow_self_wiki:\n    default: 3\n    enum: \"TrustLevelSetting\"\n  min_trust_to_send_email_messages:\n    default: \"4\"\n    enum: \"TrustLevelAndStaffSetting\"\n  min_trust_to_flag_posts:\n    default: 1\n    enum: \"TrustLevelSetting\"\n  min_trust_to_post_links:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_to_post_embedded_media:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_profile_background:\n    default: 0\n    client: true\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_user_card_background:\n    default: 0\n    client: true\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_invite:\n    default: 2\n    enum: \"TrustLevelSetting\"\n  min_trust_level_to_allow_ignore:\n    default: 2\n    enum: \"TrustLevelSetting\"\n    client: true\n  allow_flagging_staff: true\n  send_tl1_welcome_message: true\n  send_tl2_promotion_message: true\n  tl1_requires_topics_entered: 5\n  tl1_requires_read_posts:\n    default: 30\n    client: true\n  tl1_requires_time_spent_mins: 10\n  tl2_requires_topics_entered: 20\n  tl2_requires_read_posts: 100\n  tl2_requires_time_spent_mins: 60\n  tl2_requires_days_visited:\n    default: 15\n    max: 36500\n  tl2_requires_likes_received: 1\n  tl2_requires_likes_given: 1\n  tl2_requires_topic_reply_count: 3\n  tl3_time_period:\n    default: 100\n    min: 1\n    max: 1000000\n  tl3_requires_days_visited:\n    default: 50\n    max: 36500\n  tl3_requires_topics_replied_to:\n    default: 10\n  tl3_requires_topics_viewed:\n    default: 25\n    max: 100\n  tl3_requires_topics_viewed_cap:\n    default: 500\n  tl3_requires_posts_read:\n    default: 25\n    max: 100\n  tl3_requires_posts_read_cap:\n    default: 20000\n    max: 99000\n  tl3_requires_topics_viewed_all_time:\n    default: 200\n  tl3_requires_posts_read_all_time:\n    default: 500\n  tl3_requires_max_flagged:\n    default: 5\n  tl3_promotion_min_duration:\n    default: 14\n    max: 10000\n  tl3_requires_likes_given:\n    default: 30\n  tl3_requires_likes_received:\n    default: 20\n  tl3_links_no_follow:\n    default: false\n    client: true\n  tl4_delete_posts_and_topics:\n    default: false\n    client: true\n  edit_all_topic_groups:\n    default: \"13\"\n    type: group_list\n  edit_all_post_groups:\n    default: \"14\"\n    type: group_list\n\nsecurity:\n  detailed_404: false\n  enforce_second_factor:\n    client: true\n    type: enum\n    default: \"no\"\n    choices:\n      - \"no\"\n      - \"staff\"\n      - \"all\"\n  force_https:\n    default: false\n  same_site_cookies:\n    default: Lax\n    type: enum\n    choices:\n      - Lax\n      - Strict\n      - Disabled\n      - None\n    regex: \"^(Lax|Strict|Disabled|None)$\"\n  enable_escaped_fragments: true\n  allow_index_in_robots_txt: true\n  allow_indexing_non_canonical_urls:\n    default: true\n    hidden: true\n  moderators_manage_categories_and_groups:\n    default: false\n    client: true\n  moderators_change_post_ownership:\n    client: true\n    default: false\n  moderators_view_emails:\n    client: true\n    default: false\n  non_crawler_user_agents:\n    hidden: true\n    default: \"trident|webkit|gecko|chrome|safari|msie|opera|goanna|discourse\"\n    type: list\n    list_type: compact\n  crawler_user_agents:\n    hidden: true\n    default: \"rss|bot|spider|crawler|facebook|archive|wayback|ping|monitor|lighthouse\"\n    type: list\n    list_type: compact\n  browser_update_user_agents:\n    hidden: true\n    default: \"MSIE 6|MSIE 7|MSIE 8|MSIE 9|Xbox|PlayStation\"\n    type: list\n    list_type: compact\n  crawler_check_bypass_agents:\n    hidden: true\n    default: \"cubot\"\n  cors_origins:\n    default: \"\"\n    type: list\n    list_type: simple\n  keep_old_ip_address_count:\n    default: 0\n    hidden: true\n  use_admin_ip_allowlist:\n    default: false\n    client: true\n  blocked_ip_blocks:\n    default: \"\"\n    type: list\n    list_type: compact\n  allowed_internal_hosts:\n    default: \"\"\n    type: list\n  allowed_onebox_iframes:\n    default: \"*\"\n    type: list\n    allow_any: false\n    choices: \"['*'] + Onebox::Engine.all_iframe_origins\"\n  allowed_iframes:\n    default: \"https://www.google.com/maps/embed?|https://www.openstreetmap.org/export/embed.html?|https://calendar.google.com/calendar/embed?|https://codepen.io/|https://www.instagram.com\"\n    type: list\n    list_type: simple\n    client: true\n  allowed_crawler_user_agents:\n    type: list\n    default: \"\"\n    list_type: compact\n  blocked_crawler_user_agents:\n    type: list\n    default: \"mauibot|semrushbot|ahrefsbot|blexbot|seo spider\"\n    list_type: compact\n  slow_down_crawler_user_agents:\n    type: list\n    default: \"\"\n    list_type: compact\n  slow_down_crawler_rate: 60\n  content_security_policy:\n    default: true\n  content_security_policy_report_only:\n    default: false\n  content_security_policy_collect_reports:\n    default: false\n    hidden: true\n  content_security_policy_frame_ancestors:\n    default: true\n  content_security_policy_script_src:\n    type: simple_list\n    default: \"\"\n  invalidate_inactive_admin_email_after_days:\n    default: 365\n    min: 0\n    max: 36500\n  allow_embedding_site_in_an_iframe:\n    default: false\n    hidden: true\n  send_old_credential_reminder_days:\n    default: 0\n    hidden: true\n  disable_onebox_media_download_controls:\n    default: false\n    hidden: true\n  can_permanently_delete:\n    default: false\n    client: true\n    hidden: true\n  suppress_secured_categories_from_admin:\n    default: false\n    hidden: true\n  include_secure_categories_in_tag_counts:\n    default: false\n  display_personal_messages_tag_counts:\n    default: false\n\nonebox:\n  post_onebox_maxlength:\n    default: 500\n    locale_default:\n      ja: 200\n      zh_CN: 200\n      zh_TW: 200\n  blocked_onebox_domains:\n    default: \"\"\n    type: host_list\n    list_type: compact\n  max_oneboxes_per_post:\n    default: 50\n    client: true\n  allowed_inline_onebox_domains:\n    default: \"\"\n    type: list\n    list_type: compact\n  enable_inline_onebox_on_all_domains:\n    default: true\n  force_custom_user_agent_hosts:\n    default: \"http://codepen.io\"\n    type: list\n  force_get_hosts:\n    default: \"us.battle.net|news.yahoo.com|*.medium.com\"\n    type: list\n    hidden: true\n  facebook_app_access_token:\n    default: \"\"\n    secret: true\n  block_onebox_on_redirect:\n    default: false\n  cache_onebox_response_body:\n    default: false\n    hidden: true\n  cache_onebox_response_body_domains:\n    default: \"\"\n    type: list\n    hidden: true\n  cache_onebox_user_agent:\n    default: \"\"\n    hidden: true\nspam:\n  add_rel_nofollow_to_user_content: true\n  hide_post_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 6\n  cooldown_minutes_after_hiding_posts: 10\n  silence_new_user_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 3\n  num_users_to_silence_new_user: 3\n  notify_mods_when_user_silenced: false\n  flag_sockpuppets: false\n  newuser_spam_host_threshold: 3\n  allowed_spam_host_domains:\n    default: \"\"\n    type: list\n    list_type: simple\n  levenshtein_distance_spammer_emails:\n    default: 2\n    max: 3\n  max_new_accounts_per_registration_ip: 3\n  min_ban_entries_for_roll_up: 5\n  max_age_unmatched_emails: 365\n  max_age_unmatched_ips: 365\n  num_flaggers_to_close_topic: 5\n  auto_close_topic_sensitivity:\n    type: enum\n    enum: \"ReviewableSensitivitySetting\"\n    default: 9\n  num_hours_to_close_topic:\n    default: 4\n    min: 1\n  auto_respond_to_flag_actions: true\n  min_first_post_typing_time: 3000\n  auto_silence_fast_typers_on_first_post: true\n  auto_silence_fast_typers_max_trust_level: 0\n  auto_silence_first_post_regex: \"\"\n  high_trust_flaggers_auto_hide_posts: true\n  cooldown_hours_until_reflag:\n    default: 24\n    min: 0\n  slow_mode_prevents_editing: true\n\n  reviewable_claiming:\n    client: true\n    type: enum\n    default: disabled\n    choices:\n      - disabled\n      - optional\n      - required\n\n  reviewable_default_topics:\n    default: false\n    client: true\n  reviewable_default_visibility:\n    client: true\n    type: enum\n    default: low\n    enum: \"ReviewablePrioritySetting\"\n  reviewable_low_priority_threshold:\n    default: 0\n    min: 0\n\nrate_limits:\n  unique_posts_mins: 5\n  rate_limit_create_topic: 15\n  rate_limit_create_post: 5\n  rate_limit_new_user_create_topic: 120\n  rate_limit_new_user_create_post: 30\n  rate_limit_search_anon_global_per_minute:\n    hidden: true\n    default: 150\n  rate_limit_search_anon_user_per_minute:\n    hidden: true\n    default: 15\n  rate_limit_search_anon_global_per_second:\n    hidden: true\n    default: 8\n  rate_limit_search_anon_user_per_second:\n    hidden: true\n    default: 2\n  rate_limit_search_user:\n    hidden: true\n    default: 30\n  max_topics_per_day: 20\n  max_personal_messages_per_day: 20\n  max_likes_per_day: 50\n  max_bookmarks_per_day: 20\n  max_flags_per_day: 20\n  max_edits_per_day: 30\n  max_invites_per_day: 10\n  max_topic_invitations_per_day: 30\n  max_topic_invitations_per_minute: 5\n  max_topics_in_first_day: 3\n  max_replies_in_first_day: 10\n  tl2_additional_likes_per_day_multiplier: 1.5\n  tl3_additional_likes_per_day_multiplier: 2\n  tl4_additional_likes_per_day_multiplier: 3\n  tl2_additional_edits_per_day_multiplier: 1.5\n  tl3_additional_edits_per_day_multiplier: 2\n  tl4_additional_edits_per_day_multiplier: 3\n  tl2_additional_flags_per_day_multiplier: 1.5\n  tl3_additional_flags_per_day_multiplier: 2\n  tl4_additional_flags_per_day_multiplier: 3\n  alert_admins_if_errors_per_minute:\n    client: true\n    default: 0\n  alert_admins_if_errors_per_hour:\n    client: true\n    default: 0\n  max_prints_per_hour_per_user:\n    default: 5\n    client: true\n    min: 0\n  max_logins_per_ip_per_hour:\n    min: 1\n    default: 30\n  max_logins_per_ip_per_minute:\n    min: 1\n    default: 6\n  max_post_deletions_per_minute:\n    min: 0\n    default: 2\n  max_post_deletions_per_day:\n    min: 0\n    default: 10\n  invite_link_max_redemptions_limit:\n    min: 2\n    max: 1000000\n    default: 5000\n    client: true\n  invite_link_max_redemptions_limit_users:\n    min: 2\n    max: 1000000\n    default: 10\n    client: true\n  max_allowed_secondary_emails:\n    default: 10\n    hidden: true\n    client: true\n  max_batch_presign_multipart_per_minute:\n    default: 20\n    hidden: true\n  max_presigned_put_per_minute:\n    default: 10\n    hidden: true\n  max_create_multipart_per_minute:\n    default: 10\n    hidden: true\n  max_complete_multipart_per_minute:\n    default: 10\n    hidden: true\n\ndeveloper:\n  force_hostname:\n    hidden: true\n    default: \"\"\n  port:\n    hidden: true\n    default: \"\"\n  enable_chunked_encoding:\n    hidden: true\n    client: true\n    default: true\n  long_polling_base_url:\n    hidden: true\n    client: true\n    default: \"/\"\n  background_polling_interval:\n    hidden: true\n    client: true\n    default: 60000\n    max: 99000\n  polling_interval:\n    hidden: true\n    client: true\n    default: 3000\n    max: 99000\n  anon_polling_interval:\n    hidden: true\n    client: true\n    default: 25000\n    max: 99000\n  flush_timings_secs:\n    client: true\n    default: 60\n  active_user_rate_limit_secs: 60\n  verbose_localization:\n    default: false\n    client: true\n  top_topics_formula_log_views_multiplier:\n    default: 2\n  top_topics_formula_first_post_likes_multiplier:\n    default: 0.5\n  top_topics_formula_least_likes_per_post_multiplier:\n    default: 3\n  rebake_old_posts_count:\n    hidden: true\n    default: 80\n    min: 1\n  migrate_to_new_scheme:\n    hidden: true\n    default: false\n  max_new_topics:\n    default: 500\n    client: true\n    hidden: true\n  wizard_enabled:\n    default: true\n    hidden: true\n  bypass_wizard_check:\n    default: false\n    hidden: true\n  logging_provider:\n    hidden: true\n    default: \"default\"\n    type: \"list\"\n    choices:\n      - \"default\"\n      - \"lograge\"\n  bootstrap_error_pages:\n    hidden: true\n    default: false\n  enable_safe_mode:\n    default: true\n    client: true\n  enable_experimental_hashtag_autocomplete:\n    default: true\n    client: true\n    hidden: true\n  experimental_hashtag_search_result_limit:\n    default: 20\n    client: true\n    hidden: true\n  include_associated_account_ids:\n    default: false\n    hidden: true\n  experimental_form_templates:\n    client: true\n    default: false\n    hidden: true\n  experimental_new_new_view_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  experimental_topics_filter:\n    client: true\n    default: false\n  experimental_search_menu_groups:\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  max_sidebar_section_links:\n    default: 50\n    hidden: true\n\nnavigation:\n  navigation_menu:\n    client: true\n    default: \"sidebar\"\n    type: enum\n    enum: \"NavigationMenuSiteSetting\"\n  default_navigation_menu_categories:\n    type: category_list\n    default: \"\"\n    client: true\n  default_navigation_menu_tags:\n    type: tag_list\n    default: \"\"\n    client: true\n\nembedding:\n  embed_by_username:\n    default: \"\"\n    type: username\n    hidden: true\n  embed_post_limit:\n    default: 100\n    hidden: true\n  embed_topic_limit_per_page:\n    default: 200\n    hidden: true\n  embed_title_scrubber:\n    default: \"\"\n    hidden: true\n  blocked_embed_selectors:\n    default: \"\"\n    hidden: true\n  allowed_embed_classnames:\n    default: \"emoji\"\n    hidden: true\n\nlegal:\n  tos_url:\n    client: true\n    default: \"\"\n  privacy_policy_url:\n    client: true\n    default: \"\"\n  faq_url:\n    client: true\n    default: \"\"\n  log_anonymizer_details:\n    default: true\n\nbackups:\n  enable_backups:\n    default: true\n    client: true\n  allow_restore:\n    default: false\n  backup_location:\n    default: \"local\"\n    type: enum\n    enum: \"BackupLocationSiteSetting\"\n    client: true\n  maximum_backups:\n    client: true\n    default: 5\n  automatic_backups_enabled:\n    default: true\n  backup_frequency:\n    min: 1\n    max: 30\n    default: 7\n  s3_backup_bucket:\n    default: \"\"\n    regex: '^[a-z0-9\\-\\/]+$' # can't use '.' when using HTTPS\n  s3_disable_cleanup:\n    default: false\n  backup_time_of_day:\n    default: \"3:30\"\n    regex: \"^((0?(0|1|2|3|4|5|6|7|8|9)|(10|11|12|13|14|15|16|17|18|19|20|21|22|23))):\\\\d\\\\d$\"\n  backup_with_uploads: true\n  backup_gzip_compression_level_for_uploads:\n    default: 1\n    min: 1\n    max: 9\n  include_thumbnails_in_backups:\n    default: false\n  include_s3_uploads_in_backups:\n    default: false\n    hidden: true\n    client: true\n\nsearch:\n  user_search_similar_results:\n    default: false\n    hidden: true\n  prioritize_exact_search_title_match:\n    default: true\n    hidden: true\n  max_duplicate_search_index_terms:\n    default: 6\n    hidden: true\n  use_pg_headlines_for_excerpt:\n    default: false\n    hidden: true\n    client: true\n  search_max_indexed_word_length:\n    default: 100\n    hidden: true\n  search_ranking_normalization:\n    default: \"0\"\n    hidden: true\n  search_ranking_weights:\n    default: \"\"\n    hidden: true\n    validator: \"SearchRankingWeightsValidator\"\n  min_search_term_length:\n    client: true\n    default: 3\n    locale_default:\n      zh_CN: 1\n      zh_TW: 1\n      ko: 1\n      ja: 1\n  search_tokenize_chinese:\n    default: false\n    validator: \"SearchTokenizeChineseValidator\"\n  search_tokenize_japanese:\n    default: false\n    validator: \"SearchTokenizeJapaneseValidator\"\n  search_prefer_recent_posts: false\n  search_recent_posts_size:\n    default: 1000000\n    max: 10000000\n  search_recent_regular_posts_offset_post_id:\n    default: 0\n    hidden: true\n  search_enable_recent_regular_posts_offset_size:\n    default: 200000\n    hidden: true\n  log_search_queries:\n    client: true\n    default: true\n  search_query_log_max_size:\n    default: 1000000\n    max: 1000000\n  search_query_log_max_retention_days:\n    default: 365 # 1 year\n    max: 1825 # 5 years\n  search_ignore_accents:\n    default: false\n    locale_default:\n      ar: true\n      ca: true\n      cs: true\n      el: true\n      es: true\n      fa_IR: true\n      fr: true\n      hu: true\n      pt: true\n      pt_BR: true\n      ro: true\n      sk: true\n      tr_TR: true\n  category_search_priority_low_weight:\n    default: 0.8\n    hidden: true\n    validator: \"CategorySearchPriorityWeightsValidator\"\n  category_search_priority_high_weight:\n    default: 1.2\n    hidden: true\n    validator: \"CategorySearchPriorityWeightsValidator\"\n  search_page_size:\n    default: 50\n    hidden: true\n\nuncategorized:\n  version_checks:\n    client: true\n    default: true\n  new_version_emails: true\n  send_welcome_message: true\n\n  suppress_uncategorized_badge:\n    client: true\n    default: true\n\n  header_dropdown_category_count:\n    client: true\n    default: 8\n\n  slug_generation_method:\n    default: \"ascii\"\n    enum: \"SlugSetting\"\n    client: true\n    locale_default:\n      ja: \"none\"\n      zh_CN: \"none\"\n      zh_TW: \"none\"\n\n  permalink_normalizations:\n    default: \"\"\n    type: list\n    list_type: simple\n    validator: \"RegexpListValidator\"\n\n  max_similar_results: 5\n  minimum_topics_similar: 50\n\n  previous_visit_timeout_hours: 1\n  staff_like_weight: 3\n  topic_view_duration_hours: 8\n  user_profile_view_duration_hours: 8\n\n  # Summary mode\n  summary_score_threshold: 15\n  summary_posts_required: 50\n  summary_likes_required: 1\n  summary_percent_filter: 20\n  summary_max_results: 100\n  summary_timeline_button:\n    client: true\n    default: false\n\n  summarization_strategy:\n    client: true\n    default: \"\"\n    enum: \"SummarizationStrategy\"\n    validator: \"SummarizationValidator\"\n  custom_summarization_allowed_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"3|14\" # 3: @staff, 14: @trust_level_4\n\n  automatic_topic_heat_values: true\n\n  # View heat thresholds\n  topic_views_heat_low:\n    client: true\n    default: 1000\n  topic_views_heat_medium:\n    client: true\n    default: 2000\n  topic_views_heat_high:\n    client: true\n    default: 3500\n\n  # Post/Like heat thresholds\n  topic_post_like_heat_low:\n    client: true\n    default: 0.5\n  topic_post_like_heat_medium:\n    client: true\n    default: 1.0\n  topic_post_like_heat_high:\n    client: true\n    default: 2.0\n\n  # History edit heat thresholds\n  history_hours_low:\n    client: true\n    default: 12\n  history_hours_medium:\n    client: true\n    default: 24\n  history_hours_high:\n    client: true\n    default: 48\n\n  # Cold map thresholds\n  cold_age_days_low:\n    default: 14\n    max: 36500\n    client: true\n  cold_age_days_medium:\n    default: 90\n    max: 36500\n    client: true\n  cold_age_days_high:\n    default: 180\n    max: 36500\n    client: true\n\n  # Warnings\n  educate_until_posts: 2\n  sequential_replies_threshold: 2\n  get_a_room_threshold: 3\n  dont_feed_the_trolls_threshold: 2\n  dominating_topic_minimum_percent: 40\n  disable_avatar_education_message: false\n  pm_warn_user_last_seen_months_ago: 24\n\n  global_notice:\n    default: \"\"\n    client: true\n  has_login_hint:\n    default: false\n    hidden: true\n\n  # Nothing past this threshold is ever considered new\n  # this is calculated dynamically every 15 minutes\n  min_new_topics_time:\n    default: 0\n    hidden: true\n\n  # Category IDs\n  general_category_id:\n    default: -1\n    hidden: true\n    client: true\n  meta_category_id:\n    default: -1\n    hidden: true\n  staff_category_id:\n    default: -1\n    hidden: true\n  uncategorized_category_id:\n    default: -1\n    hidden: true\n  default_composer_category:\n    client: true\n    type: category\n    default: \"\"\n    validator: \"DefaultComposerCategoryValidator\"\n\n  notify_about_reviewable_item_after:\n    type: float\n    default: 48\n\n  enable_system_avatars:\n    hidden: true\n    default: true\n\n  use_site_small_logo_as_system_avatar:\n    default: true\n\n  enable_listing_suspended_users_on_search:\n    default: false\n\n  disable_system_edit_notifications: true\n\n  disable_category_edit_notifications:\n    default: false\n\n  disable_tags_edit_notifications:\n    default: false\n\n  notification_consolidation_threshold:\n    default: 3\n    min: 0\n\n  likes_notification_consolidation_window_mins:\n    default: 120\n    min: 1\n\n  delete_drafts_older_than_n_days:\n    default: 180\n    max: 36500\n\n  delete_merged_stub_topics_after_days:\n    default: 7\n    min: 0\n\n  backup_drafts_to_pm_length:\n    default: 0\n    hidden: true\n\n  view_user_route:\n    default: \"summary\"\n    hidden: true\n    client: true\n\n  tos_topic_id:\n    default: -1\n    hidden: true\n  guidelines_topic_id:\n    default: -1\n    hidden: true\n  privacy_topic_id:\n    default: -1\n    hidden: true\n  welcome_topic_id:\n    default: -1\n    hidden: true\n  admin_quick_start_topic_id:\n    default: -1\n    hidden: true\n    client: true\n\n  bootstrap_mode_min_users:\n    default: 50\n    client: true\n    max: 5000\n\n  bootstrap_mode_enabled:\n    default: false\n    client: true\n    hidden: true\n\n  check_for_new_features:\n    default: false\n    hidden: true\n\n  automatically_unpin_topics:\n    default: true\n    client: true\n\n  read_time_word_count:\n    default: 500\n    client: true\n    locale_default:\n      ja: 350\n      zh_CN: 350\n      zh_TW: 350\n\n  topic_page_title_includes_category:\n    default: true\n    client: true\n\n  native_app_install_banner_ios: false\n\n  native_app_install_banner_android: false\n\n  ios_app_id:\n    default: \"1173672076\"\n    hidden: true\n\n  android_app_id:\n    default: \"com.discourse\"\n    hidden: true\n\n  pwa_display_browser_regex:\n    default: \"a^\"\n    hidden: true\n\n  app_association_android:\n    default: \"\"\n    textarea: true\n\n  app_association_ios:\n    default: \"\"\n    textarea: true\n\n  share_anonymized_statistics: true\n\n  auto_handle_queued_age:\n    default: 60\n    min: 0\n\n  penalty_step_hours:\n    default: \"24|72|168|720\"\n    type: \"list\"\n    list_type: \"compact\"\n\n  svg_icon_subset:\n    default: \"\"\n    type: \"list\"\n    list_type: \"compact\"\n    client: true\n\n  always_include_topic_excerpts:\n    default: false\n    hidden: true\n\n  allow_bulk_invite:\n    default: true\n    client: true\n\n  max_bulk_invites:\n    default: 50000\n    hidden: true\n\n  overridden_robots_txt:\n    default: \"\"\n    hidden: true\n  show_category_definitions_in_topic_lists:\n    default: false\n    hidden: true\n    client: true\n\n  create_revision_on_bulk_topic_moves:\n    default: true\n\n  allow_changing_staged_user_tracking: false\n\n  use_polymorphic_bookmarks:\n    client: true\n    default: true\n    hidden: true\n\n  splash_screen:\n    default: true\n\n  suggest_weekends_in_date_pickers:\n    client: true\n    default: true\n\nuser_preferences:\n  default_email_digest_frequency:\n    enum: \"DigestEmailSiteSetting\"\n    default: 10080\n  default_include_tl0_in_digests: false\n  default_email_level:\n    enum: \"EmailLevelSiteSetting\"\n    default: 1\n  default_email_messages_level:\n    enum: \"EmailLevelSiteSetting\"\n    default: 0\n  default_email_mailing_list_mode: false\n  default_email_mailing_list_mode_frequency:\n    enum: \"MailingListModeSiteSetting\"\n    default: 1\n  disable_mailing_list_mode:\n    default: true\n    client: true\n  default_email_previous_replies:\n    enum: \"PreviousRepliesSiteSetting\"\n    default: 2\n  default_email_in_reply_to:\n    default: false\n  default_hide_profile_and_presence:\n    default: false\n\n  default_other_new_topic_duration_minutes:\n    enum: \"NewTopicDurationSiteSetting\"\n    default: 2880\n  default_other_auto_track_topics_after_msecs:\n    enum: \"AutoTrackDurationSiteSetting\"\n    default: 300000\n  default_other_notification_level_when_replying:\n    enum: \"NotificationLevelWhenReplyingSiteSetting\"\n    default: 2\n  default_other_external_links_in_new_tab: false\n  default_other_enable_quoting: true\n  default_other_enable_defer: false\n  default_other_dynamic_favicon: false\n  default_other_skip_new_user_tips: false\n  default_other_like_notification_frequency:\n    enum: \"LikeNotificationFrequencySiteSetting\"\n    default: 1\n\n  default_topics_automatic_unpin:\n    default: true\n    client: true\n\n  default_categories_watching:\n    type: category_list\n    default: \"\"\n  default_categories_tracking:\n    type: category_list\n    default: \"\"\n  default_categories_muted:\n    type: category_list\n    default: \"\"\n  default_categories_watching_first_post:\n    type: category_list\n    default: \"\"\n  default_categories_normal:\n    type: category_list\n    default: \"\"\n  mute_all_categories_by_default:\n    default: false\n    client: true\n\n  default_tags_watching:\n    type: tag_list\n    default: \"\"\n  default_tags_tracking:\n    type: tag_list\n    default: \"\"\n  default_tags_muted:\n    type: tag_list\n    default: \"\"\n  default_tags_watching_first_post:\n    type: tag_list\n    default: \"\"\n\n  default_text_size:\n    type: enum\n    default: normal\n    choices:\n      - smaller\n      - normal\n      - larger\n      - largest\n\n  default_title_count_mode:\n    type: enum\n    default: notifications\n    choices:\n      - notifications\n      - contextual\n  enable_offline_indicator:\n    default: false\n    client: true\n  default_sidebar_link_to_filtered_list: false\n  default_sidebar_show_count_of_new_items: false\n\napi:\n  retain_web_hook_events_period_days:\n    default: 30\n    max: 36500\n  retry_web_hook_events:\n    default: false\n  api_key_last_used_epoch:\n    default: \"\" # Value is added in a migration\n    hidden: true\n  revoke_api_keys_days:\n    default: 180\n    max: 36500\n\nuser_api:\n  allow_user_api_keys:\n    default: true\n  allow_user_api_key_scopes:\n    default: \"read|write|message_bus|push|notifications|session_info|one_time_password\"\n    type: list\n  push_api_secret_key:\n    default: \"\"\n    hidden: true\n  min_trust_level_for_user_api_key:\n    default: 0\n    enum: \"TrustLevelSetting\"\n  allowed_user_api_push_urls:\n    default: \"\"\n    type: list\n    hidden: true\n  allowed_user_api_auth_redirects:\n    default: \"https://api.discourse.org/api/auth_redirect|discourse://auth_redirect\"\n    type: list\n  expire_user_api_keys_days:\n    default: 180\n    max: 36500\n\ntags:\n  tagging_enabled:\n    client: true\n    default: true\n    refresh: true\n  tag_style:\n    client: true\n    type: enum\n    default: \"simple\"\n    choices:\n      - simple\n      - bullet\n      - box\n    preview: '<div class=\"discourse-tags\"><span class=\"discourse-tag {{value}}\">tag1</span><span class=\"discourse-tag {{value}}\">tag2</span></div>'\n  max_tags_per_topic:\n    default: 5\n    client: true\n  enable_max_tags_per_email_subject:\n    default: false\n    client: true\n  max_tags_per_email_subject:\n    default: 5\n    client: true\n    min: 0\n  max_tag_length:\n    default: 20\n    client: true\n  min_trust_to_create_tag:\n    default: \"3\"\n    enum: \"TrustLevelAndStaffSetting\"\n  min_trust_level_to_tag_topics:\n    default: \"0\"\n    enum: \"TrustLevelAndStaffSetting\"\n    client: true\n  max_tag_search_results:\n    client: true\n    default: 5\n    min: 1\n  max_tags_in_filter_list:\n    client: true\n    default: 30\n    min: 1\n    refresh: true\n  tags_sort_alphabetically:\n    client: true\n    default: false\n    refresh: true\n  tags_listed_by_group:\n    client: true\n    default: false\n  pm_tags_allowed_for_groups:\n    client: true\n    type: group_list\n    list_type: compact\n    default: \"\"\n    allow_any: false\n    refresh: true\n  suppress_overlapping_tags_in_list:\n    default: false\n    client: true\n  remove_muted_tags_from_latest:\n    client: true\n    type: enum\n    default: always\n    enum: RemoveMutedTagsFromLatestSiteSetting\n  watched_precedence_over_muted:\n    client: true\n    default: false\n\n  force_lowercase_tags:\n    default: true\n    client: true\n  create_post_for_category_and_tag_changes:\n    default: false\n\ndashboard:\n  dashboard_hidden_reports:\n    client: true\n    type: list\n    list_type: compact\n    default: \"\"\n    allow_any: true\n  dashboard_visible_tabs:\n    client: true\n    type: list\n    list_type: compact\n    default: \"moderation|security|reports\"\n    allow_any: false\n    choices:\n      - moderation\n      - security\n      - reports\n  dashboard_general_tab_activity_metrics:\n    client: true\n    type: list\n    list_type: compact\n    default: \"page_view_total_reqs|visits|time_to_first_response|likes|flags|user_to_user_private_messages_with_replies\"\n    allow_any: false\n    choices:\n      - page_view_total_reqs\n      - visits\n      - time_to_first_response\n      - likes\n      - flags\n      - user_to_user_private_messages_with_replies\n      - signups\n  verbose_user_stat_count_logging:\n    hidden: true\n    default: false\n", "# frozen_string_literal: true\n\nRSpec.describe SidebarSectionsController do\n  fab!(:user) { Fabricate(:user) }\n  fab!(:admin) { Fabricate(:admin) }\n  fab!(:moderator) { Fabricate(:moderator) }\n\n  describe \"#index\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, title: \"private section\", user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n    fab!(:sidebar_section_2) { Fabricate(:sidebar_section, title: \"public section\", public: true) }\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    it \"returns public and private sections\" do\n      sign_in(user)\n      get \"/sidebar_sections.json\"\n      expect(response.status).to eq(200)\n      expect(response.parsed_body[\"sidebar_sections\"].map { |section| section[\"title\"] }).to eq(\n        [\"Community\", \"public section\", \"private section\"],\n      )\n    end\n  end\n\n  describe \"#create\" do\n    it \"is not available for anonymous\" do\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"link\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n      expect(response.status).to eq(403)\n    end\n\n    it \"creates custom section for user\" do\n      sign_in(user)\n      expect(SidebarSection.count).to eq(1)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             links: [\n               {\n                 icon: \"link\",\n                 name: \"categories\",\n                 value: \"http://#{Discourse.current_hostname}/categories\",\n               },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n               { icon: \"external-link-alt\", name: \"Discourse\", value: \"https://discourse.org\" },\n               { icon: \"external-link-alt\", name: \"My preferences\", value: \"/my/preferences\" },\n             ],\n           }\n\n      expect(response.status).to eq(200)\n\n      expect(SidebarSection.count).to eq(2)\n      sidebar_section = SidebarSection.last\n\n      expect(sidebar_section.title).to eq(\"custom section\")\n      expect(sidebar_section.user).to eq(user)\n      expect(sidebar_section.public).to be false\n      expect(UserHistory.count).to eq(0)\n      expect(sidebar_section.sidebar_urls.count).to eq(4)\n      expect(sidebar_section.sidebar_urls.first.icon).to eq(\"link\")\n      expect(sidebar_section.sidebar_urls.first.name).to eq(\"categories\")\n      expect(sidebar_section.sidebar_urls.first.value).to eq(\"/categories\")\n      expect(sidebar_section.sidebar_urls.first.external).to be false\n      expect(sidebar_section.sidebar_urls.second.icon).to eq(\"address-book\")\n      expect(sidebar_section.sidebar_urls.second.name).to eq(\"tags\")\n      expect(sidebar_section.sidebar_urls.second.value).to eq(\"/tags\")\n      expect(sidebar_section.sidebar_urls.second.external).to be false\n      expect(sidebar_section.sidebar_urls.third.icon).to eq(\"external-link-alt\")\n      expect(sidebar_section.sidebar_urls.third.name).to eq(\"Discourse\")\n      expect(sidebar_section.sidebar_urls.third.value).to eq(\"https://discourse.org\")\n      expect(sidebar_section.sidebar_urls.third.external).to be true\n      expect(sidebar_section.sidebar_urls.fourth.icon).to eq(\"external-link-alt\")\n      expect(sidebar_section.sidebar_urls.fourth.name).to eq(\"My preferences\")\n      expect(sidebar_section.sidebar_urls.fourth.value).to eq(\"/my/preferences\")\n      expect(sidebar_section.sidebar_urls.fourth.external).to be false\n    end\n\n    it \"validates max number of links\" do\n      SiteSetting.max_sidebar_section_links = 5\n\n      sign_in(user)\n\n      links =\n        6.times.map do\n          { icon: \"external-link-alt\", name: \"My preferences\", value: \"/my/preferences\" }\n        end\n\n      post \"/sidebar_sections.json\", params: { title: \"custom section\", links: links }\n\n      expect(response.status).to eq(422)\n      expect(response.parsed_body[\"errors\"]).to eq(\n        [\"Maximum 5 records are allowed. Got 6 records instead.\"],\n      )\n    end\n\n    it \"does not allow regular user to create public section\" do\n      sign_in(user)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"does not allow moderator to create public section\" do\n      sign_in(moderator)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admin to create public section\" do\n      sign_in(admin)\n\n      post \"/sidebar_sections.json\",\n           params: {\n             title: \"custom section\",\n             public: true,\n             links: [\n               { icon: \"link\", name: \"categories\", value: \"/categories\" },\n               { icon: \"address-book\", name: \"tags\", value: \"/tags\" },\n             ],\n           }\n\n      expect(response.status).to eq(200)\n\n      sidebar_section = SidebarSection.last\n      expect(sidebar_section.title).to eq(\"custom section\")\n      expect(sidebar_section.public).to be true\n      expect(sidebar_section.user_id).to be Discourse.system_user.id\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:create_public_sidebar_section])\n      expect(user_history.subject).to eq(\"custom section\")\n      expect(user_history.details).to eq(\"links: categories - /categories, tags - /tags\")\n    end\n  end\n\n  describe \"#update\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"allows user to update their own section and links\" do\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.title).to eq(\"custom section edited\")\n      expect(UserHistory.count).to eq(0)\n      expect(sidebar_url_1.reload.name).to eq(\"latest\")\n      expect(sidebar_url_1.value).to eq(\"/latest\")\n      expect { section_link_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect { sidebar_url_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n    end\n\n    it \"allows admin to update public section and links\" do\n      sign_in(admin)\n      sidebar_section.update!(public: true)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              {\n                icon: \"link\",\n                name: \"meta\",\n                value: \"https://meta.discourse.org\",\n                segment: \"primary\",\n              },\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n              {\n                icon: \"link\",\n                name: \"homepage\",\n                value: \"https://discourse.org\",\n                segment: \"secondary\",\n              },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.title).to eq(\"custom section edited\")\n      expect(sidebar_url_1.reload.name).to eq(\"latest\")\n      expect(sidebar_url_1.value).to eq(\"/latest\")\n      expect { section_link_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect { sidebar_url_2.reload }.to raise_error(ActiveRecord::RecordNotFound)\n\n      urls = sidebar_section.sidebar_urls\n      expect(urls[0].name).to eq(\"meta\")\n      expect(urls[0].value).to eq(\"https://meta.discourse.org\")\n      expect(urls[0].segment).to eq(\"primary\")\n      expect(urls[1].name).to eq(\"latest\")\n      expect(urls[1].value).to eq(\"/latest\")\n      expect(urls[2].name).to eq(\"homepage\")\n      expect(urls[2].value).to eq(\"https://discourse.org\")\n      expect(urls[2].segment).to eq(\"secondary\")\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:update_public_sidebar_section])\n      expect(user_history.subject).to eq(\"custom section edited\")\n      expect(user_history.details).to eq(\n        \"links: latest - /latest, meta - https://meta.discourse.org, homepage - https://discourse.org\",\n      )\n    end\n\n    it \"validates limit of links\" do\n      SiteSetting.max_sidebar_section_links = 5\n\n      sign_in(user)\n\n      links =\n        6.times.map do\n          { icon: \"external-link-alt\", name: \"My preferences\", value: \"/my/preferences\" }\n        end\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section\",\n            links: links,\n          }\n\n      expect(response.status).to eq(422)\n      expect(response.parsed_body[\"errors\"]).to eq(\n        [\"Maximum 5 records are allowed. Got 6 records instead.\"],\n      )\n    end\n\n    it \"doesn't allow to edit other's sections\" do\n      sidebar_section_2 = Fabricate(:sidebar_section)\n      sidebar_url_3 = Fabricate(:sidebar_url, name: \"other_tags\", value: \"/tags\")\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section_2, linkable: sidebar_url_3)\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section_2.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [{ icon: \"link\", id: sidebar_url_3.id, name: \"takeover\", value: \"/categories\" }],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to edit public sections\" do\n      sign_in(user)\n      sidebar_section.update!(public: true)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [\n              { icon: \"link\", id: sidebar_url_1.id, name: \"latest\", value: \"/latest\" },\n              { icon: \"link\", id: sidebar_url_2.id, name: \"tags\", value: \"/tags\", _destroy: \"1\" },\n            ],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to edit other's links\" do\n      sidebar_url_3 = Fabricate(:sidebar_url, name: \"other_tags\", value: \"/tags\")\n\n      Fabricate(\n        :sidebar_section_link,\n        sidebar_section: Fabricate(:sidebar_section),\n        linkable: sidebar_url_3,\n      )\n\n      sign_in(user)\n\n      put \"/sidebar_sections/#{sidebar_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [{ icon: \"link\", id: sidebar_url_3.id, name: \"takeover\", value: \"/categories\" }],\n          }\n\n      expect(response.status).to eq(404)\n      expect(sidebar_url_3.reload.name).to eq(\"other_tags\")\n    end\n\n    it \"doesn't allow users to edit community section\" do\n      sign_in(user)\n\n      put \"/sidebar_sections/#{community_section.id}.json\",\n          params: {\n            title: \"custom section edited\",\n            links: [],\n          }\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admin to edit community section\" do\n      sign_in(admin)\n\n      topics_link = community_section.sidebar_urls.find_by(name: \"Topics\")\n      my_posts_link = community_section.sidebar_urls.find_by(name: \"My Posts\")\n\n      community_section\n        .sidebar_section_links\n        .where.not(linkable_id: [topics_link.id, my_posts_link.id])\n        .destroy_all\n\n      put \"/sidebar_sections/#{community_section.id}.json\",\n          params: {\n            title: \"community section edited\",\n            links: [\n              { icon: \"link\", id: my_posts_link.id, name: \"my posts edited\", value: \"/my_posts\" },\n              { icon: \"link\", id: topics_link.id, name: \"topics edited\", value: \"/new\" },\n            ],\n          }\n\n      expect(response.status).to eq(200)\n\n      expect(community_section.reload.title).to eq(\"community section edited\")\n      expect(community_section.sidebar_urls[0].name).to eq(\"my posts edited\")\n      expect(community_section.sidebar_urls[0].value).to eq(\"/my_posts\")\n      expect(community_section.sidebar_urls[1].name).to eq(\"topics edited\")\n      expect(community_section.sidebar_urls[1].value).to eq(\"/new\")\n    end\n  end\n\n  describe \"#reorder\" do\n    fab!(:user2) { Fabricate(:user) }\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n    fab!(:sidebar_url_1) { Fabricate(:sidebar_url, name: \"tags\", value: \"/tags\") }\n    fab!(:sidebar_url_2) { Fabricate(:sidebar_url, name: \"categories\", value: \"/categories\") }\n    fab!(:sidebar_url_3) { Fabricate(:sidebar_url, name: \"topic\", value: \"/t/1\") }\n\n    fab!(:section_link_1) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_1)\n    end\n\n    fab!(:section_link_2) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_2)\n    end\n\n    fab!(:section_link_3) do\n      Fabricate(:sidebar_section_link, sidebar_section: sidebar_section, linkable: sidebar_url_3)\n    end\n\n    it \"sorts links\" do\n      expect(sidebar_section.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_1.id, sidebar_url_2.id, sidebar_url_3.id],\n      )\n\n      sign_in(user)\n\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eq(200)\n\n      expect(sidebar_section.reload.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n      )\n    end\n\n    it \"returns 403 when a user tries to reorder a section that doesn't belong to them\" do\n      sign_in(user2)\n\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eq(403)\n\n      expect(sidebar_section.reload.sidebar_urls.pluck(:id)).to eq(\n        [sidebar_url_1.id, sidebar_url_2.id, sidebar_url_3.id],\n      )\n    end\n\n    it \"returns 403 for an non user\" do\n      post \"/sidebar_sections/reorder.json\",\n           params: {\n             sidebar_section_id: sidebar_section.id,\n             links_order: [sidebar_url_2.id, sidebar_url_3.id, sidebar_url_1.id],\n           }\n\n      expect(response.status).to eql(403)\n    end\n  end\n\n  describe \"#destroy\" do\n    fab!(:sidebar_section) { Fabricate(:sidebar_section, user: user) }\n\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"allows user to delete their own section\" do\n      sign_in(user)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(200)\n\n      expect { sidebar_section.reload }.to raise_error(ActiveRecord::RecordNotFound)\n      expect(UserHistory.count).to eq(0)\n    end\n\n    it \"allows admin to delete public section\" do\n      sign_in(admin)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(200)\n\n      expect { sidebar_section.reload }.to raise_error(ActiveRecord::RecordNotFound)\n\n      user_history = UserHistory.last\n      expect(user_history.action).to eq(UserHistory.actions[:destroy_public_sidebar_section])\n      expect(user_history.subject).to eq(\"Sidebar section\")\n    end\n\n    it \"doesn't allow to delete other's sidebar section\" do\n      sidebar_section_2 = Fabricate(:sidebar_section)\n      sign_in(user)\n      delete \"/sidebar_sections/#{sidebar_section_2.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow to delete public sidebar section\" do\n      sign_in(user)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow moderator to delete public sidebar section\" do\n      sign_in(moderator)\n      sidebar_section.update!(public: true)\n      delete \"/sidebar_sections/#{sidebar_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n  end\n\n  describe \"#reset\" do\n    let(:community_section) do\n      SidebarSection.find_by(section_type: SidebarSection.section_types[:community])\n    end\n\n    it \"doesn't allow user to reset community section\" do\n      sign_in(user)\n      SidebarSection.any_instance.expects(:reset_community!).never\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(403)\n    end\n\n    it \"doesn't allow staff to reset community section\" do\n      sign_in(moderator)\n      SidebarSection.any_instance.expects(:reset_community!).never\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(403)\n    end\n\n    it \"allows admins to reset community section to default\" do\n      sign_in(admin)\n      SidebarSection.any_instance.expects(:reset_community!).once\n      put \"/sidebar_sections/reset/#{community_section.id}.json\"\n      expect(response.status).to eq(200)\n      expect(response.parsed_body[\"sidebar_section\"][\"id\"]).to eq(community_section.id)\n      expect(response.parsed_body[\"sidebar_section\"][\"title\"]).to eq(community_section.title)\n    end\n\n    it \"doesn't allow admin to delete community sidebar section\" do\n      sign_in(admin)\n      delete \"/sidebar_sections/#{community_section.id}.json\"\n\n      expect(response.status).to eq(403)\n    end\n  end\nend\n"], "filenames": ["app/controllers/sidebar_sections_controller.rb", "app/models/sidebar_section.rb", "config/site_settings.yml", "spec/requests/sidebar_sections_controller_spec.rb"], "buggy_code_start_loc": [31, 14, 2139, 89], "buggy_code_end_loc": [64, 15, 2139, 238], "fixing_code_start_loc": [32, 14, 2140, 90], "fixing_code_end_loc": [69, 17, 2143, 279], "type": "NVD-CWE-noinfo", "message": "Discourse is an open source discussion platform. In affected versions a request to create or update custom sidebar section can cause a denial of service. This issue has been patched in commit `52b003d915`. Users are advised to upgrade. There are no known workarounds for this vulnerability.", "other": {"cve": {"id": "CVE-2023-36818", "sourceIdentifier": "security-advisories@github.com", "published": "2023-07-14T22:15:09.243", "lastModified": "2023-07-27T04:04:36.043", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Discourse is an open source discussion platform. In affected versions a request to create or update custom sidebar section can cause a denial of service. This issue has been patched in commit `52b003d915`. Users are advised to upgrade. There are no known workarounds for this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-400"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:discourse:discourse:3.1.0:beta5:*:*:beta:*:*:*", "matchCriteriaId": "9FE11D4E-32EE-48F4-8082-B37D2F804450"}]}]}], "references": [{"url": "https://github.com/discourse/discourse/commit/52b003d915761f1581ae2d105f3cbe76df7bf1ff", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/discourse/discourse/security/advisories/GHSA-gxqx-3q2p-37gm", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/discourse/discourse/commit/52b003d915761f1581ae2d105f3cbe76df7bf1ff"}}