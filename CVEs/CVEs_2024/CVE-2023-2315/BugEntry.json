{"buggy_code": ["<?php\nnamespace Opencart\\Admin\\Controller\\Tool;\n/**\n * Class Log\n *\n * @package Opencart\\Admin\\Controller\\Tool\n */\nclass Log extends \\Opencart\\System\\Engine\\Controller {\n\t/**\n\t * @return void\n\t */\n\tpublic function index(): void {\n\t\t$this->load->language('tool/log');\n\t\t\n\t\t$this->document->setTitle($this->language->get('heading_title'));\n\n\t\t$data['breadcrumbs'] = [];\n\n\t\t$data['breadcrumbs'][] = [\n\t\t\t'text' => $this->language->get('text_home'),\n\t\t\t'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'])\n\t\t];\n\n\t\t$data['breadcrumbs'][] = [\n\t\t\t'text' => $this->language->get('heading_title'),\n\t\t\t'href' => $this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'])\n\t\t];\n\n\t\tif (isset($this->session->data['error'])) {\n\t\t\t$data['error_warning'] = $this->session->data['error'];\n\n\t\t\tunset($this->session->data['error']);\n\t\t} else {\n\t\t\t$data['error_warning'] = '';\n\t\t}\n\n\t\t$file = DIR_LOGS . $this->config->get('config_error_filename');\n\n\t\tif (!is_file($file)) {\n\t\t\tfile_put_contents($file, '', FILE_APPEND);\n\t\t}\n\n\n\t\t$data['log'] = [];\n\n\t\t$files = glob(DIR_LOGS . '*.log');\n\n\t\tforeach ($files as $file) {\n\t\t\t$error = '';\n\n\t\t\t$filename = basename($file);\n\n\t\t\t$size = filesize($file);\n\n\t\t\tif ($size >= 3145728) {\n\t\t\t\t$suffix = [\n\t\t\t\t\t'B',\n\t\t\t\t\t'KB',\n\t\t\t\t\t'MB',\n\t\t\t\t\t'GB',\n\t\t\t\t\t'TB',\n\t\t\t\t\t'PB',\n\t\t\t\t\t'EB',\n\t\t\t\t\t'ZB',\n\t\t\t\t\t'YB'\n\t\t\t\t];\n\n\t\t\t\t$i = 0;\n\n\t\t\t\twhile (($size / 1024) > 1) {\n\t\t\t\t\t$size = $size / 1024;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\t$error = sprintf($this->language->get('error_size'), $filename, round(substr($size, 0, strpos($size, '.') + 4), 2) . $suffix[$i]);\n\t\t\t}\n\n\t\t\t$handle = fopen($file, 'r+');\n\n\t\t\t$data['logs'][] = [\n\t\t\t\t'name'     => $filename,\n\t\t\t\t'output'   => fread($handle, 3145728),\n\t\t\t\t'download' => $this->url->link('tool/log.download', 'user_token=' . $this->session->data['user_token'] . '&filename=' . $filename),\n\t\t\t\t'clear'    => $this->url->link('tool/log.clear', 'user_token=' . $this->session->data['user_token'] . '&filename=' . $filename),\n\t\t\t\t'error'    => $error\n\t\t\t];\n\n\t\t\tfclose($handle);\n\t\t}\n\n\t\t$data['user_token'] = $this->session->data['user_token'];\n\n\t\t$data['header'] = $this->load->controller('common/header');\n\t\t$data['column_left'] = $this->load->controller('common/column_left');\n\t\t$data['footer'] = $this->load->controller('common/footer');\n\n\t\t$this->response->setOutput($this->load->view('tool/log', $data));\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function download(): void {\n\t\t$this->load->language('tool/log');\n\n\t\tif (isset($this->request->get['filename'])) {\n\t\t\t$filename = (string)basename($this->request->get['filename']);\n\t\t} else {\n\t\t\t$filename = '';\n\t\t}\n\n\t\t$file = DIR_LOGS . $filename;\n\n\t\tif (!is_file($file)) {\n\t\t\t$this->session->data['error'] = sprintf($this->language->get('error_file'), $filename);\n\n\t\t\t$this->response->redirect($this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'], true));\n\t\t}\n\n\t\tif (!filesize($file)) {\n\t\t\t$this->session->data['error'] = sprintf($this->language->get('error_empty'), $filename);\n\n\t\t\t$this->response->redirect($this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'], true));\n\t\t}\n\n\t\t$this->response->addheader('Pragma: public');\n\t\t$this->response->addheader('Expires: 0');\n\t\t$this->response->addheader('Content-Description: File Transfer');\n\t\t$this->response->addheader('Content-Type: application/octet-stream');\n\t\t$this->response->addheader('Content-Disposition: attachment; filename=\"' . $this->config->get('config_name') . '_' . date('Y-m-d_H-i-s', time()) . '_error.log\"');\n\t\t$this->response->addheader('Content-Transfer-Encoding: binary');\n\n\t\t$this->response->setOutput(file_get_contents($file, FILE_USE_INCLUDE_PATH, null));\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function clear(): void {\n\t\t$this->load->language('tool/log');\n\n\t\tif (isset($this->request->get['filename'])) {\n\t\t\t$filename = (string)$this->request->get['filename'];\n\t\t} else {\n\t\t\t$filename = '';\n\t\t}\n\n\t\t$json = [];\n\n\t\tif (!$this->user->hasPermission('modify', 'tool/log')) {\n\t\t\t$json['error'] = $this->language->get('error_permission');\n\t\t}\n\n\t\t$file = DIR_LOGS . $filename;\n\n\t\tif (!is_file($file)) {\n\t\t\t$json['error'] = sprintf($this->language->get('error_file'), $filename);\n\t\t}\n\n\t\tif (!$json) {\n\t\t\t$handle = fopen($file, 'w+');\n\n\t\t\tfclose($handle);\n\n\t\t\t$json['success'] = $this->language->get('text_success');\n\t\t}\n\n\t\t$this->response->addHeader('Content-Type: application/json');\n\t\t$this->response->setOutput(json_encode($json));\n\t}\n}"], "fixing_code": ["<?php\nnamespace Opencart\\Admin\\Controller\\Tool;\n/**\n * Class Log\n *\n * @package Opencart\\Admin\\Controller\\Tool\n */\nclass Log extends \\Opencart\\System\\Engine\\Controller {\n\t/**\n\t * @return void\n\t */\n\tpublic function index(): void {\n\t\t$this->load->language('tool/log');\n\t\t\n\t\t$this->document->setTitle($this->language->get('heading_title'));\n\n\t\t$data['breadcrumbs'] = [];\n\n\t\t$data['breadcrumbs'][] = [\n\t\t\t'text' => $this->language->get('text_home'),\n\t\t\t'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'])\n\t\t];\n\n\t\t$data['breadcrumbs'][] = [\n\t\t\t'text' => $this->language->get('heading_title'),\n\t\t\t'href' => $this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'])\n\t\t];\n\n\t\tif (isset($this->session->data['error'])) {\n\t\t\t$data['error_warning'] = $this->session->data['error'];\n\n\t\t\tunset($this->session->data['error']);\n\t\t} else {\n\t\t\t$data['error_warning'] = '';\n\t\t}\n\n\t\t$file = DIR_LOGS . $this->config->get('config_error_filename');\n\n\t\tif (!is_file($file)) {\n\t\t\tfile_put_contents($file, '', FILE_APPEND);\n\t\t}\n\n\n\t\t$data['log'] = [];\n\n\t\t$files = glob(DIR_LOGS . '*.log');\n\n\t\tforeach ($files as $file) {\n\t\t\t$error = '';\n\n\t\t\t$filename = basename($file);\n\n\t\t\t$size = filesize($file);\n\n\t\t\tif ($size >= 3145728) {\n\t\t\t\t$suffix = [\n\t\t\t\t\t'B',\n\t\t\t\t\t'KB',\n\t\t\t\t\t'MB',\n\t\t\t\t\t'GB',\n\t\t\t\t\t'TB',\n\t\t\t\t\t'PB',\n\t\t\t\t\t'EB',\n\t\t\t\t\t'ZB',\n\t\t\t\t\t'YB'\n\t\t\t\t];\n\n\t\t\t\t$i = 0;\n\n\t\t\t\twhile (($size / 1024) > 1) {\n\t\t\t\t\t$size = $size / 1024;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\t$error = sprintf($this->language->get('error_size'), $filename, round(substr($size, 0, strpos($size, '.') + 4), 2) . $suffix[$i]);\n\t\t\t}\n\n\t\t\t$handle = fopen($file, 'r+');\n\n\t\t\t$data['logs'][] = [\n\t\t\t\t'name'     => $filename,\n\t\t\t\t'output'   => fread($handle, 3145728),\n\t\t\t\t'download' => $this->url->link('tool/log.download', 'user_token=' . $this->session->data['user_token'] . '&filename=' . $filename),\n\t\t\t\t'clear'    => $this->url->link('tool/log.clear', 'user_token=' . $this->session->data['user_token'] . '&filename=' . $filename),\n\t\t\t\t'error'    => $error\n\t\t\t];\n\n\t\t\tfclose($handle);\n\t\t}\n\n\t\t$data['user_token'] = $this->session->data['user_token'];\n\n\t\t$data['header'] = $this->load->controller('common/header');\n\t\t$data['column_left'] = $this->load->controller('common/column_left');\n\t\t$data['footer'] = $this->load->controller('common/footer');\n\n\t\t$this->response->setOutput($this->load->view('tool/log', $data));\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function download(): void {\n\t\t$this->load->language('tool/log');\n\n\t\tif (isset($this->request->get['filename'])) {\n\t\t\t$filename = (string)basename(html_entity_decode($this->request->get['filename'], ENT_QUOTES, 'UTF-8'));\n\t\t} else {\n\t\t\t$filename = '';\n\t\t}\n\n\t\t$file = DIR_LOGS . $filename;\n\n\t\tif (!is_file($file)) {\n\t\t\t$this->session->data['error'] = sprintf($this->language->get('error_file'), $filename);\n\n\t\t\t$this->response->redirect($this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'], true));\n\t\t}\n\n\t\tif (!filesize($file)) {\n\t\t\t$this->session->data['error'] = sprintf($this->language->get('error_empty'), $filename);\n\n\t\t\t$this->response->redirect($this->url->link('tool/log', 'user_token=' . $this->session->data['user_token'], true));\n\t\t}\n\n\t\t$this->response->addheader('Pragma: public');\n\t\t$this->response->addheader('Expires: 0');\n\t\t$this->response->addheader('Content-Description: File Transfer');\n\t\t$this->response->addheader('Content-Type: application/octet-stream');\n\t\t$this->response->addheader('Content-Disposition: attachment; filename=\"' . $this->config->get('config_name') . '_' . date('Y-m-d_H-i-s', time()) . '_error.log\"');\n\t\t$this->response->addheader('Content-Transfer-Encoding: binary');\n\n\t\t$this->response->setOutput(file_get_contents($file, FILE_USE_INCLUDE_PATH, null));\n\t}\n\n\t/**\n\t * @return void\n\t */\n\tpublic function clear(): void {\n\t\t$this->load->language('tool/log');\n\n\t\tif (isset($this->request->get['filename'])) {\n\t\t\t$filename = (string)basename(html_entity_decode($this->request->get['filename'], ENT_QUOTES, 'UTF-8'));\n\t\t} else {\n\t\t\t$filename = '';\n\t\t}\n\n\t\t$json = [];\n\n\t\tif (!$this->user->hasPermission('modify', 'tool/log')) {\n\t\t\t$json['error'] = $this->language->get('error_permission');\n\t\t}\n\n\t\t$file = DIR_LOGS . $filename;\n\n\t\tif (!is_file($file)) {\n\t\t\t$json['error'] = sprintf($this->language->get('error_file'), $filename);\n\t\t}\n\n\t\tif (!$json) {\n\t\t\t$handle = fopen($file, 'w+');\n\n\t\t\tfclose($handle);\n\n\t\t\t$json['success'] = $this->language->get('text_success');\n\t\t}\n\n\t\t$this->response->addHeader('Content-Type: application/json');\n\t\t$this->response->setOutput(json_encode($json));\n\t}\n}"], "filenames": ["upload/admin/controller/tool/log.php"], "buggy_code_start_loc": [107], "buggy_code_end_loc": [144], "fixing_code_start_loc": [107], "fixing_code_end_loc": [144], "type": "CWE-22", "message": "Path Traversal in OpenCart versions 4.0.0.0 to 4.0.2.2 allows an authenticated user with access/modify privilege on the Log component to empty out arbitrary files on the server", "other": {"cve": {"id": "CVE-2023-2315", "sourceIdentifier": "info@starlabs.sg", "published": "2023-09-27T15:18:50.317", "lastModified": "2023-09-27T19:52:30.920", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Path Traversal in OpenCart versions 4.0.0.0 to 4.0.2.2 allows an authenticated user with access/modify privilege on the Log component to empty out arbitrary files on the server"}, {"lang": "es", "value": "Path Traversal en las versiones 4.0.0.0 a 4.0.2.2 de OpenCart permite a un usuario autenticado con privilegios de acceso/modificaci\u00f3n en el componente de Log vaciar archivos arbitrarios en el servidor"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "info@starlabs.sg", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}, {"source": "info@starlabs.sg", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opencart:opencart:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.0.0.0", "versionEndIncluding": "4.0.2.2", "matchCriteriaId": "A10DB344-A38D-4589-99E2-C1AFDF783379"}]}]}], "references": [{"url": "https://github.com/opencart/opencart/commit/0a8dd91e385f70e42795380009fd644224c1bc97", "source": "info@starlabs.sg", "tags": ["Patch"]}, {"url": "https://starlabs.sg/advisories/23/23-2315/", "source": "info@starlabs.sg", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/opencart/opencart/commit/0a8dd91e385f70e42795380009fd644224c1bc97"}}