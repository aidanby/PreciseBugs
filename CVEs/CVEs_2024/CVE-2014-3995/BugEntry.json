{"buggy_code": ["version 0.7.30 final (6-June-2014):\n\t* Security:\n\t\t* Fixed a XSS issue in the gravatars code.\n\n\t\t  Users could construct a name that would allow for injecting\n\t\t  JavaScript in the page. That name is now properly escaped.\n\n\t\t* Fixed a XSS issue in json_dumps.\n\n\t\t  JSON payloads constructed based on user input and then injected into\n\t\t  a page could result in custom JavaScript being injected into the\n\t\t  page. Additional escaping is now performed to ensure this does not\n\t\t  happen.\n\n\nversion 0.7.29 final (9-April-2014):\n\t* djblets.webapi:\n\t\t* Add requested query parameters in pagination links. (Bug #3199)\n\n\nversion 0.7.28 final (31-December-2013):\n\t* djblets.auth:\n\t\t* Fixed HTTP 500 errors when failing to save the registration form.\n\n\t\t  If saving the registration form failed in some way (due to a username\n\t\t  conflict, for example), Djblets would fail with an HTTP 500. It's\n\t\t  now propagated up and reported properly.\n\n\nversion 0.7.27 final (12-December-2013):\n\t* djblets.webapi:\n\t\t* Fixed a regression with the new webapi auth backend support.\n\n\t\t  If an Authorization header was sent by a client that already had\n\t\t  a valid cookie, the code would attempt to access an undefined\n\t\t  variable. The code is now in a more appropriate place to access\n\t\t  that variable.\n\n\nversion 0.7.26 final (10-December-2013):\n\t* djblets.util.fields:\n\t\t* Fixed JSONField in the administration UI.\n\n\t\t  A JSONField will now render proper JSON, and not a Python\n\t\t  repr() of JSON, in the administration UI. This is properly validated\n\t\t  and saved.\n\n\t* djblets.webapi:\n\t\t* Added support for web API authentication backends.\n\n\t\t  It's now possible to write custom auth backends for the web API.\n\t\t  By default, our standard HTTP Basic Auth is used, but others\n\t\t  can now be written.\n\n\t\t  Projects can set settings.WEB_API_AUTH_BACKENDS to a list of\n\t\t  Python class paths to set custom auth backends. In coming\n\t\t  releases, we'll supply new ones as well.\n\n\nversion 0.7.25 final (28-November-2013):\n\t* djblets.auth:\n\t\t* Added some human-readable labels for RegistrationForm.\n\n\t\t* RegistrationForm subclasses that make use of fields that normalize\n\t\t  to non-strings no longer fail to save.\n\n\t* djblets.webapi:\n\t\t* Usernames with plus signs in them are now matched in the API.\n\t\t  This is useful for e-mail addresses as usernames.\n\n\t\t  Patch by Mark C\u00f4t\u00e9.\n\n\nversion 0.7.24 final (21-November-2013):\n\t* djblets.util.http:\n\t\t* Fixed ETag matching.\n\n\t\t  ETag request headers weren't being looked up properly, preventing pages\n\t\t  from being able to make intelligent caching decisions.\n\n\nversion 0.7.23 final (5-November-2013):\n\t* djblets.extensions:\n\t\t* Fix URL errors when configuring extensions with a custom SITE_ROOT.\n\n\t* djblets.util.fields:\n\t\t* JSONFields can now be safely edited through the administration UI,\n\t\t  complete with validation.\n\n\t* jquery.gravy:\n\t\t* Fixed hiding the pencil icons on an inlineEditor when disabled.\n\n\nversion 0.7.22 final (1-November-2013):\n\t* djblets.extensions:\n\t\t* AJAX_SERIAL is updated when extensions are enabled/disabled or their\n\t\t  configuration changes, allowing templates using AJAX_SERIAL as part\n\t\t  of their cache to invalidate.\n\n\t* djblets.siteconfig:\n\t\t* Reduced query counts for installs using siteconfig.\n\n\t* djblets.webapi:\n\t\t* Reduced query counts when returning payloads for list resources\n\t\t  with no entries.\n\n\t\t* Common attribute lookups on WebAPIResource are now cached.\n\n\nversion 0.7.21 final (11-October-2013):\n\t* djblets.webapi:\n\t\t* Added a has_list_access_permissions function, which is used to\n\t\t  determine access to a list resource.\n\n\nversion 0.7.20 final (11-October-2013):\n\t* djblets.datagrid:\n\t\t* Fixed pagination on the datagrid.\n\n\nversion 0.7.19 final (10-October-2013):\n\t* Security updates:\n\t\t* JSONField now corrects incorrectly stored contents in a safer way,\n\t\t  to remove the risk of any exploits in a JSON payload.\n\n\t\t  This is CVE-2013-4409, and was reported and patched by\n\t\t  Frederik Braun.\n\n\t* General:\n\t\t* Updated much of the codebase to be more compatible with Django 1.5\n\t\t  and newer. The upcoming Djblets 0.8 releases will be geared more\n\t\t  heavily toward Django 1.5 compatibility.\n\n\t* Packaging:\n\t\t* Fixed building the static media for Djblets when using a Python\n\t\t  interpreter other than the one named 'python' in the system path.\n\t\t  Patch by Emmanuel Gil Peyrot.\n\n\t\t* Djblets now requires django-pipeline 1.2.24. This version of\n\t\t  Djblets does not work correctly with newer versions.\n\n\t* djblets.extensions:\n\t\t* Extensions can now add additional middleware by setting\n\t\t  Extension.middleware to a list of middleware classes.\n\n\t\t  Patch by Mark C\u00f4t\u00e9.\n\n\t\t* Updated ExtensionResource to use the modern, type-checked,\n\t\t  documented field style, and to add missing documentation.\n\n\t* djblets.util.templatetags.djblets_js:\n\t\t* The json_dumps filter no longer defaults to indenting at all.\n\t\t  Previously, it defaulted to 0, which did not indent code, but\n\t\t  did preserve newlines.\n\n\t* djblets.webapi:\n\t\t* WebAPIError.with_message no longer overrides the original message\n\t\t  for all other instances of that error.\n\n\t\t* Added WebAPIError.with_overrides, which allows overriding the\n\t\t  message and HTTP headers.\n\n\t\t* The webapi decorators now preserve and merge webapi-related\n\t\t  information from other decorators, such as the lists of\n\t\t  response errors and optional/required fields.\n\n\t* jquery.gravy:\n\t\t* The modalBox z-index has been increased from its previously\n\t\t  low z-index, to prevent other UI elements from more easily\n\t\t  popping up over it.\n\n\t\t  Patch by Natasha Dalal.\n\n\nversion 0.7.18 final (15-September-2013):\n\t* Security updates:\n\t\t* We now require Django 1.4.8, which has some important security\n\t\t  updates to prevent a DoS against the auth module.\n\n\t\t* Web API resource lists are now more careful about access\n\t\t  permissions. See the section on djblets.webapi below.\n\n\t* JavaScript:\n\t\t* inlineEditor now has a \"raw value\" option.\n\n\t\t  There are now a couple new options to the inlineEditor widget\n\t\t  for dealing with custom text: \"hasRawValue\" and \"rawValue\". If\n\t\t  hasRawValue is true, then the contents of rawValue is used as the\n\t\t  source text for the editor, instead of the text contents of the\n\t\t  associated element. This allows the caller to do some specialized\n\t\t  pre-formatting on the text contents.\n\n\t\t* Added a \"matchHeight\" option to inlineEditor to prevent the\n\t\t  height-matching behavior.\n\n\t\t  A matchHeight is false (defaults to true), the editor won't\n\t\t  attempt to match the height of the rendered element. This is\n\t\t  important when pre-formatting the text going into the widget\n\t\t  using the new raw value options.\n\n\t\t* Preserve the height of the label for inlineEditors when toggling\n\t\t  pencil visibility.\n\n\t\t  The label should no longer change height when the pencil icon\n\t\t  is shown or hidden.\n\n\t* djblets.webapi:\n\t\t* Fixed access permissions on resource lists.\n\n\t\t  The list resources, by default, didn't do any permissions checking\n\t\t  other than the basic logged-in checks. This meant that if you had\n\t\t  a protected resource with children, you could get lists of the\n\t\t  children even without access to the parents.\n\n\t\t  This is an important security update, and we recommend all users\n\t\t  of the API update immediately.\n\n\t\t* Requests to invalid API resources now return a standard API 404,\n\t\t  instead of a default Django 404. (Bug #3052)\n\n\nversion 0.7.17 final (15-August-2013):\n\t* Packaging:\n\t\t* We now require Django 1.4.6, which is the latest security release\n\t\t  in the 1.4.x series.\n\n\t\t* The build-media script is no longer assumed to be executable\n\t\t  when building the package. Patch by Andrew Grigorev.\n\n\t\t* The 'tests' module is no longer included in the egg.\n\t\t  Patch by Alex Morega.\n\n\t* djblets.extensions:\n\t\t* The extensions media directory is once again based on the package\n\t\t  name, and not the display name of the extension.\n\n\t* djblets.util:\n\t\t* Added a cached_javascript_catalog view in djblets.util.views,\n\t\t  which caches and returns the JavaScript localization catalog\n\t\t  provided by Django. This prevents having to regenerate it all\n\t\t  the time.\n\n\t\t* Fixed a compatibility issue with Python 2.5 in\n\t\t  @controlled_subprocess when trying to kill the process.\n\t\t  (Bug #2935)\n\n\t\t* Improved the localizability of a string in @controlled_subprocess.\n\n\t* djblets.webapi:\n\t\t* The documentation for ?max-results= now explains the existence\n\t\t  of a hard limit of 200 results, so callers aren't surprised\n\t\t  when they try to use larger numbers.\n\n\t\t* The 'X-Content-Type-Options: nosniff' header is passed in\n\t\t  API response headers, to prevent IE8 from trying to download\n\t\t  payloads. (Bug #2889)\n\n\nversion 0.7.16 final (27-July-2013):\n\tThis release contains security fixes in the datagrid. If you are using\n\tthe datagrid, it is recommended that you upgrade to this release.\n\n\t* JavaScript:\n\t\t* autoSizeTextArea now cleans up its hidden proxy elements when\n\t\t  destroyed.\n\n\t\t* inlineEditor can be told not to focus a textarea by default by\n\t\t  setting 'focusOnOpen' to false.\n\n\t\t* modalBox can place itself in an element other than <body> by\n\t\t  setting the 'container' option to the element.\n\n\t\t* modalBox takes a 'boxID' option that, if specified, will set the\n\t\t  ID of the modalBox element.\n\n\t\t* funcQueue now takes an optional context parameter for callback\n\t\t  functions. The callbacks will be invoked with 'this' set to that\n\t\t  context.\n\n\t* djblets.datagrid:\n\t\t* Data pulled from the database and rendered into cells are always\n\t\t  escaped now. Custom columns can still override this by providing\n\t\t  their own rendering. This led to an XSS vulnerability.\n\n\t\t  This is CVE-2013-4795.\n\n\t\t* Columns can now specify an image_class instead of an image_url.\n\t\t  This will render the icon as a <div> with the given CSS class name,\n\t\t  instead of rendering an <img>. It's useful when using spritesheets.\n\n\t\t* Added a JavaScript reload() function that can be called on a\n\t\t  datagrid element to trigger a dynamic reload from the server.\n\n\t* djblets.extensions:\n\t\t* Extensions can now specify their list of app directories.\n\n\t\t  An Extension subclass can define an 'apps' member variable that,\n\t\t  like INSTALLED_APPS, lists the app module paths the extension\n\t\t  uses. These will each be added to INSTALLED_APPS when enabled,\n\t\t  and removed when disabled.\n\n\t\t  If an extension does not provide 'apps', then this falls back\n\t\t  on the default behavior of only adding the extension's parent\n\t\t  app.\n\n\t\t* Extensions can now specify the author's URL.\n\n\t\t  Extension.metadata can now specify an 'Author-home-page' field,\n\t\t  which points to the URL for the author's site. This is meant to\n\t\t  distinguish between the extension's URL, and the URL for the\n\t\t  person/company/organization that created the extension.\n\n\t\t* Improved the look and feel for extension configuration.\n\n\t\t  The extension configuration pages now fit in with the admin UI\n\t\t  a lot better. They share much of the look of other admin UI\n\t\t  pages.\n\n\t\t  Furthermore, when extensions are saved, there's now feedback\n\t\t  given to the user, instead of just simply re-rendering the page.\n\n\t\t* Improved the functionality for extension configuration.\n\n\t\t  Extension configuration forms now contain all the functionality\n\t\t  of SiteSettingsForm. This include fieldsets and save blacklists\n\t\t  (which prevent a field from automatically being saved in the\n\t\t  extension settings).\n\n\t\t* Improved the list of available extensions.\n\n\t\t  The list no longer causes part of the extension description\n\t\t  to be overlapped. It also shows the author of the extension,\n\t\t  and links back to the author's site.\n\n\nversion 0.7.15 final (26-May-2013):\n\t* djblets.extensions:\n\t\t* Extension classes can now define a 'metadata' variable to override\n\t\t  the package's metadata. This uses standard PyPI metadata fields.\n\t\t  Using this, single Python package can provide several extensions.\n\n\t\t* TemplateHooks subclasses can now override a new render_to_string\n\t\t  function to do their own processing and rendering, instead of\n\t\t  simply rendering the provided template_name.\n\n\t\t* The template_name parameter to TemplateHook is now optional.\n\n\t\t* The Django template loader cache is now reset when syncing\n\t\t  extension settings or enabling/disabling an extension.\n\n\t* djblets.webapi:\n\t\t* Added a \"is_webapi_handler\" attribute to WebAPIResource.\n\n\t\t  This allows for introspection from any middleware that's going\n\t\t  to call a view. It can test if this is set on the view to know\n\t\t  whether it's calling into an API handler.\n\n\nversion 0.7.14 final (6-May-2013):\n\t* JavaScript:\n\t\t* inlineEditor now emits a \"cancel\" event when pressing OK without any\n\t\t  modifications. Previously, there was no indication that it had\n\t\t  finished.\n\n\t\t* inlineEditor's \"complete\" event now has the initialValue parameter\n\t\t  (which comes after the new value) set correctly. Previously, it was\n\t\t  always the same as the value, making it hard to determine if\n\t\t  anything had changed.\n\n\t\t* $.fn.html() now works with setting empty strings.\n\n\t* djblets.gravatars:\n\t\t* Added get_gravatar_url_for_email.\n\n\t\t  This returns the gravatar URL for a given e-mail address, rather\n\t\t  than needing a User object.\n\n\t* djblets.webapi:\n\t\t* The cache of known URI templates for a RootResource now works\n\t\t  properly when the path leading to the RootResource can change.\n\n\t\t* When serializing an object while using ?expand, any QuerySet\n\t\t  will be converted to a list. This prevents any changes from\n\t\t  happening between serializing and rendering.\n\n\nversion 0.7.13 final (26-April-2013):\n\t* djblets.log:\n\t\t* Added enhanced request logging.\n\n\t\t  This supplements Python's logging functions (logging.info, etc.)\n\t\t  to take an optional request= parameter. When passed, the logging\n\t\t  information will show some additional details (by default, the\n\t\t  username and path) related to the log entry, helping with\n\t\t  debugging.\n\n\t* djblets.siteconfig:\n\t\t* Changing and loading the site_static_url setting will now actually\n\t\t  cause static media files to be loaded from that URL.\n\n\nversion 0.7.12 final (19-April-2013):\n\t* djblets.datagrid:\n\t\t* Massively speed up datagrid rendering.\n\n\t\t  The rendering code for datagrids had a flaw where it would\n\t\t  re-populate some state for every cell, and this could be very\n\t\t  expensive. It's now reused on all cells.\n\n\t\t  We saw this with one application where a datagrid would take\n\t\t  6 seconds to render. Now it takes 0.5 seconds.\n\n\t* djblets.extensions:\n\t\t* Added an install_extension function to ExtensionManager.\n\n\t\t  This can be used to install extensions dynamically from a file\n\t\t  or URL.\n\n\t\t  Patch by Surya Nallu.\n\n\t* djblets.util.fields:\n\t\t* CounterField now allows incrementing/decrementing by values other\n\t\t  than 1.\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.util.templatetags:\n\t\t* The thumbnail and crop_image template tags now work with\n\t\t  Django Storage backends.\n\n\t\t* Added a save_image_to_storage function in djblets_images that\n\t\t  makes it easy to save image data to Storage backends.\n\n\t* djblets.webapi:\n\t\t* Resources now consider both Last Modified and ETag headers\n\t\t  simultaneously when determining if a cached payload is still\n\t\t  valid. Previously, if the Last Modified timestamps were the same,\n\t\t  the ETag check would fail.\n\n\nversion 0.7.11 final (21-February-2013):\n\t* General:\n\t\t* Require Django 1.4.5 as a minimum.\n\n\t\t  This is the latest security release of Django. For more information,\n\t\t  see https://www.djangoproject.com/weblog/2013/feb/19/security/\n\n\t* djblets.extensions:\n\t\t* \"config/\" and \"db/\" links for extensions are now generated\n\t\t  properly when specifying a custom SITE_ROOT. (Bug #2843)\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.log:\n\t\t* Added an Admin UI setting for changing log levels. This is the\n\t\t  'logging_level' setting in siteconfig, which controls\n\t\t  settings.LOGGING_LEVEL.\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.siteconfig:\n\t\t* Added new 'list-siteconfig', 'get-siteconfig', and 'set-siteconfig'\n\t\t  management commands for manipulating siteconfig configuration\n\t\t  from the shell.\n\n\nversion 0.7.10 final (6-February-2013):\n\t* djblets.util.fields:\n\t\t* CounterField was failing to use the initializers for brand new\n\t\t  instances of a model, defaulting to None instead.\n\n\t\t  Patch by Raja Venkataraman.\n\n\nversion 0.7.9 final (27-January-2013):\n\t* JavaScript:\n\t\t* modalBoxes now use z-indexes of 99 and 100 for the box and content,\n\t\t  instead of 11000 and 11001.\n\n\t* djblets.datagrid:\n\t\t* Columns data by way of field access can now span field relationships.\n\t\t  For example, \"some.other.object.field\" can now be used.\n\n\t\t  Patch by Alexander Artemenko.\n\n\t* djblets.extensions:\n\t\t* Fixed a failure when clearing extension info.\n\n\t\t  Extensions that weren't properly set up yet were causing a crash\n\t\t  when attempting to reload the list of extensions.\n\n\t* djblets.siteconfig:\n\t\t* When loading the stored timezone, we're now longer setting\n\t\t  os.environ['TZ'] to that timezone. Instead, we're just activating\n\t\t  that timezone for Django only.\n\n\t\t  This works around some problems with auto-reload threads (which will\n\t\t  still be on the default timezone instead of the loaded one) and\n\t\t  importing certain Python eggs, which would end up causing file\n\t\t  timestamps relative to different timezones. That would cause\n\t\t  autoreload to kick in prematurely and break any spawned processes.\n\n\t* djblets.webapi:\n\t\t* Fixed a bug where list resources that had an unknown ID in the URL\n\t\t  could end up throwing an exception instead of returning a 404.\n\n\t\t  Patch by Niklas Hambuechen.\n\n\nversion 0.7.8 final (19-December-2012):\n\t* JavaScript:\n\t\t* Fixed a crash when enabling/disabling an inlineEditor without an\n\t\t  edit icon.\n\n\nversion 0.7.7 final (16-December-2012):\n\t* djblets.datagrid:\n\t\t* Fixed a possible XSS exploit in datagrids. Patch by\n\t\t  Alexander Artemenko.\n\n\t\t* Failures during rendering the datagrid now results in a traceback.\n\n\t* djblets.extensions:\n\t\t* Database evolutions are no longer applying using\n\t\t  evolve --hint --execute. This fixes unintentional database\n\t\t  changes elsewhere.\n\n\t* JavaScript:\n\t\t* The second display of an inlineEditor no longer breaks the size\n\t\t  of the editor.\n\n\nversion 0.7.6 final (8-December-2012):\n\t* JavaScript:\n\t\t* inlineEditor now supports changing an \"enabled\" option, allowing\n\t\t  editors to start out enabled or disabled, or dynamically change\n\t\t  that state.\n\n\t\t  Patch by Jesus Zambrano.\n\n\t* djblets.siteconfig:\n\t\t* Siteconfig now handles old-style CACHE_BACKEND values and\n\t\t  new-style CACHES[cachename] dictionaries in hte 'cache_backend'\n\t\t  setting.\n\n\t* djblets.util.cache:\n\t\t* Added normalize_cache_backend.\n\n\t\t  This can take either an old-style CACHE_BACKEND or new-style\n\t\t  CACHES[cachename] and return a valid entry for CACHES['default'].\n\n\t* djblets.webapi:\n\t\t* Added unregister_resource_for_model.\n\n\t\t  This is useful for extensions that called register_resource_for_model.\n\n\t\t  Patch by Steven MacLeod.\n\n\nversion 0.7.5 final (30-November-2012):\n\t* djblets.siteconfig:\n\t\t* Fixed a couple missing imports.\n\n\nversion 0.7.4 final (29-November-2012):\n\t* djblets.siteconfig:\n\t\t* The stored cache_backend setting is now deserialized into\n\t\t  settings.CACHES['backend']. This leaves other caches\n\t\t  unaffected and stops accessing settings.CACHE_BACKEND.\n\n\nversion 0.7.3 final (29-November-2012):\n\t* This version contains all the fixes and functionality of 0.6.27.\n\n\t* General:\n\t\t* Django 1.4.2 is now required.\n\n\t\t* All admin-related templates have been changed to better fit\n\t\t  the admin template structure and styles. This includes siteconfig\n\t\t  and logs.\n\n\t* djblets.extensions:\n\t\t* Extension lists and state are now synchronized across\n\t\t  threads/processes/servers.\n\n\t\t* Extension subclasses now must capture all variable arguments\n\t\t  (*args, **kwargs) and pass them to the parent constructor.\n\n\t\t* URLHook, admin URLs, and API resource URLs are all now added and\n\t\t  removed properly when an extension is enabled or disabled.\n\n\t* djblets.util:\n\t\t* Cache keys are now bound to the SITE_ROOT, if one is set, to\n\t\t  prevent leakage across instances. (Bug #2538)\n\n\t\t* Added DynamicURLResolver in djblets.util.urlresolvers.\n\n\t\t  This can be added to a urlpatterns list to provide an entry point\n\t\t  for dynamically adding or removing URLs on a site. This is used\n\t\t  primarily for extensions.\n\n\t* djblets.webapi:\n\t\t* API handler functions that specify allow_unknown=True in\n\t\t  @webapi_request_fields can now retrieve all extra fields as\n\t\t  an 'extra_fields' argument.\n\n\t* JavaScript:\n\t\t* The jQuery dependency has been updated to 1.8.2, and\n\t\t  jQuery-UI to 1.8.24.\n\n\t\t* inlineEditor's animation speed has increased, and is now\n\t\t  customizable through options.fadeSpeedMS.\n\n\t\t* inlineEditor now does a better job of matching the parent\n\t\t  container's bounds.\n\n\t\t* inlineEditor no longer activates when simply selecting text.\n\t\t  Patch by Dave Druska.\n\n\t\t* Added a $.fn.retinaGravatar function that, on Retina-capable\n\t\t  displays, requests a larger gravatar for the given URL\n\t\t  specified in an <img/>.\n\n\nversion 0.7.2 final (26-September-2012):\n\t* This version contains all the fixes and functionality of 0.6.24.\n\n\t* General:\n\t\t* Styled all admin UI templates to add a \"title\" class to <h1> page\n\t\t  titles. This affects extensions, log viewer, and siteconfig.\n\n\t* djblets.log:\n\t\t* Fixed the columns to match the style of other admin UI columns.\n\n\t* djblets.pipeline:\n\t\t* Our 'bless' compiler is now compatible with the latest versions of\n\t\t  pipeline.\n\n\t* JavaScript:\n\t\t* modalBox's positioning is now properly centered. It was previously\n\t\t  just off-center a bit.\n\n\nversion 0.7.1 final (3-August-2012):\n\t* Added the contrib directory to the source distribution.\n\n\t  This solves a packaging problem when not using eggs.\n\n\nversion 0.7.0 final (2-August-2012):\n\t* General:\n\t\t* Djblets now requires Django 1.4.1+.\n\n\t\t* Added localized timezone awareness. Datagrids, log generation,\n\t\t  and various utility functions now operate in the user's\n\t\t  pre-configured local timezone.\n\n\t\t* Djblets now uses Django's standard static media support.\n\t\t  It looks for bundled media files using the static support.\n\t\t  Applications must have STATIC_URL, STATIC_ROOT, etc. configured\n\t\t  correctly.\n\n\t* djblets.datagrid:\n\t\t* DateTimeColumn and DateTimeSinceColumn are now timezone-aware.\n\n\t* djblets.extensions:\n\t\t* Added a framework for supporting loadable, configurable extensions\n\t\t  in Django-based sites.\n\n\t\t  Extensions can be used to augment the functionality of a webapp.\n\t\t  Webapps can provide hooks in their codebase at any point they want\n\t\t  to extend. These can come in the form of template hooks, URLs hooks,\n\t\t  admin UI hooks, and other in-process hooks.\n\n\t\t  A webapp will provide a single ExtensionManager, specifying the name\n\t\t  of a Python setuptools entrypoint. This entrypoint will be scanned\n\t\t  for any installed packages on the system that provide Extension\n\t\t  subclasses. Integration in the Administration UI is provided by\n\t\t  linking to the provided admin URLs.\n\n\t\t  WebApps will typically only have a single ExtensionManager, but it is\n\t\t  possible for it to have multiple ExtensionManagers, allowing\n\t\t  different modules to provide their own extension mechanisms.\n\n\t\t  Extensions themselves can depend on other extensions. Dependency\n\t\t  resolution happens automatically when enabling extensions.\n\n\t\t  Extensions also have easy support for configuration forms in the\n\t\t  admin UI. All data is automatically loaded and stored in the\n\t\t  database.\n\n\t\t  This is an experimental feature, and at this point we are not\n\t\t  guaranteeing compatibility between 0.7.x releases. 0.8 will have\n\t\t  a stable API.\n\n\t* djblets.util:\n\t\t* ModificationTimestampField, http_date, and the the ageid filter have\n\t\t  been made timezone-aware.\n\n\t\t* Added a TimeZoneField, which displays all known timezones for\n\t\t  selection. The timezones come from the pytz module, which is now\n\t\t  a dependency of djblets.\n\n\nversion 0.6.31 final (11-October-2013):\n\t* djblets.webapi:\n\t\t* Added a has_list_access_permissions function, which is used to\n\t\t  determine access to a list resource.\n\n\nversion 0.6.30 final (10-October-2013);\n\t* Security updates:\n\t\t* JSONField now corrects incorrectly stored contents in a safer way,\n\t\t  to remove the risk of any exploits in a JSON payload.\n\n\t\t  This is CVE-2013-4409, and was reported and patched by\n\t\t  Frederik Braun.\n\n\nversion 0.6.29 final (27-July-2013):\n\t* djblets.datagrid:\n\t\t* Data pulled from the database and rendered into cells are always\n\t\t  escaped now. Custom columns can still override this by providing\n\t\t  their own rendering. This led to an XSS vulnerability.\n\n\t\t  This is CVE-2013-4795.\n\n\nversion 0.6.28 final (20-February-2013):\n\t* General:\n\t\t* Require Django 1.3.7 as a minimum.\n\n\t\t  This is the latest security release of Django. For more information,\n\t\t  see https://www.djangoproject.com/weblog/2013/feb/19/security/\n\n\t* djblets.datagrid:\n\t\t* Fixed a possible XSS exploit in datagrids. Patch by Alexander\n\t\t  Artemenko.\n\n\t\t* Failures during rendering the datagrid now results in a traceback.\n\n\t* djblets.util.fields:\n\t\t* CounterField was failing to use the initializers for brand new\n\t\t  instances of a model, defaulting to None instead.\n\n\t\t  Patch by Raja Venkataraman.\n\n\nverrsion 0.6.27 final (24-November-2012):\n\t* djblets.gravatars:\n\t\t* The gravatar URL used for HTTPS connections now uses\n\t\t  https://secure.gravatar.com and not https://www.gravatar.com.\n\n\t* djblets.webapi:\n\t\t* The allowed_mimetypes list in WebAPIResource is no longer\n\t\t  getting polluted with every WebAPIResource's allowed item and list\n\t\t  mimetypes.\n\n\nversion 0.6.26 final (5-November-2012):\n\t* djblets.gravatars:\n\t\t* Added a get_gravatar_url() function, which can be used to get\n\t\t  the URL for a user's gravatar without generating HTML.\n\n\t\t* Made gravatar support smart enough to choose an HTTP vs. HTTPS\n\t\t  URL, depending on what was used to access the page. (Bug #2768)\n\n\t* djblets.webapi:\n\t\t* generate_etag() and serialize_*_field() functions now take a\n\t\t  request parameter.\n\n\t\t  This requires that all callers update their serialize_*_field()\n\t\t  functions to take a **kwargs parameter.\n\n\t\t  This breaks backwards-compatibility, but is a necessary change.\n\n\t\t* Resource handler functions that provide default values for\n\t\t  parameters can now expect those to be used. Previously, when\n\t\t  a parameter to the API wasn't provided, the value passed would\n\t\t  be None.\n\n\nversion 0.6.25 final (27-October-2012):\n\t* General:\n\t\t* Require Django 1.3.4.\n\n\t\t  This is a simple release that just bumps our Django requirement,\n\t\t  in order to not have issues with consumers depending on the\n\t\t  latest security release in the 1.3.x branch.\n\n\nversion 0.6.24 final (25-September-2012):\n\t* djblets.feedview:\n\t\t* We now use the latest upstream of feedparser instead of an older\n\t\t  bundled version. This keeps us updated and prevents a security\n\t\t  issue with the version we shipped.\n\n\nversion 0.6.23 final (24-September-2012):\n\t* General:\n\t\t* We now require Django 1.3.3.\n\n\t\t  Previous versions claimed to work with Django 1.1.1 or higher,\n\t\t  but for the remainder of the 0.6.x line, we plan to stay only on\n\t\t  Django 1.3.x.\n\n\t\t  For Django 1.4+ support, use the latest 0.7.x releases.\n\n\t* djblets.util:\n\t\t* Added djblets.util.humanize.\n\n\t\t  This currently contains a humanize_list function. It's the same\n\t\t  as the template filter we provide, but is a bit nicer to include\n\t\t  and work with than a filter.\n\n\t* djblets.webapi:\n\t\t* Added an Item-Content-Type header to web API responses for\n\t\t  list resources.\n\n\t\t  This header contains the mimetype for the items in the list, making\n\t\t  it possible to determine what to use when fetching the items. The\n\t\t  documentation has been updated on how to use this.\n\n\nversion 0.6.22 final (31-July-2012):\n\t* djblets.util:\n\t\t* User and AnonymousUser are no longer imported globally in\n\t\t  the djblets_utils templatetags. This fixes some breakages in\n\t\t  apps that imported this file to get access to filters, but weren't\n\t\t  running in a Django settings environment.\n\n\nversion 0.6.21 final (24-July-2012):\n\t* djblets.util:\n\t\t* Fixed a bug with ifuserorperm and non-int IDs.\n\n\nversion 0.6.20 final (21-July-2012):\n\t* djblets.datagrid:\n\t\t* Improved performance of the datagrids.\n\n\t\t  Datagrids now fetch all needed ForeignKey-related objects in one\n\t\t  go, instead of having one query per unique object. This can reduce\n\t\t  the query count substantially.\n\n\t* djblets.util:\n\t\t* The ifuserorperm template tag now accepts both IDs and User\n\t\t  objects, allowing comparisons to be made without fetching the\n\t\t  User.\n\n\nversion 0.6.19 final (11-June-2012):\n\t* JavaScript:\n\t\t* inlineEditor no longer bubbles keypress events up. This helps prevent\n\t\t  problems with global key handlers being greedy.\n\n\nversion 0.6.18 final (5-June-2012):\n\t* djblets.siteconfig:\n\t\t* Settings form rows in the template now have IDs indicating the row\n\t\t  (in the form of \"row-{{fieldname}}\") and CSS class names\n\t\t  (\"field-{{fieldname}}\").\n\n\t\t* Help text for fields are now marked as safe, so that the contents\n\t\t  aren't escaped.\n\n\t\t* The form's disabled_reasons is no longer assumed to be populated.\n\n\t\t* The initial field values are now always set. Previously, they would\n\t\t  only be set if the field type was a boolean, or the value didn't\n\t\t  evaluate to false, which broke numeric fields set to 0.\n\n\t* djblets.util:\n\t\t* Added a json_dumps filter, which serialized a value to JSON.\n\n\nversion 0.6.17 final (2-April-2012):\n\t* djblets.gravatars:\n\t\t* Gravatars are no longer hard-coded to be jpegs. This was\n\t\t  breaking some gravatars.\n\n\t* JavaScript:\n\t\t* inlineEditor now has a showRequiredFlag option for indicating if\n\t\t  a field is required.\n\n\t\t  No validation is done on this, but an asterisk is displayed in\n\t\t  order to indicate that it's required.\n\n\t\t  Patch by Yazan Medanat.\n\n\t\t* inlineEditor now indicates when its dirty state changes.\n\n\t\t  A new \"dirtyStateChanged\" signal is emitted whenever the dirty\n\t\t  state changes, which happens as the result of a number of\n\t\t  different events. Looking up the dirty state is now cheaper, as\n\t\t  it's calculated when needed instead of on lookup.\n\n\t\t  Patch by Jim Chen.\n\n\nversion 0.6.16 final (26-February-2012):\n\t* djblets.datagrid:\n\t\t* Removed an extraneous </span> in the paginator.\n\t\t* Fixed a compatibility issue with Django 1.4 in the queries.\n\n\t* djblets.util:\n\t\t* Fix parsing of tokens in a blocktag in Django 1.4.\n\n\t\t  We were failing to pass a tuple to parser.parse() when specifying the\n\t\t  end tags for a block tag. Somehow this never bit us before, but a\n\t\t  seemingly unrelated change in Django 1.4 triggered this broken\n\t\t  behavior, making all custom blocktags break.\n\n\t\t  This led to some false-positives in other fixes, where it seemed that\n\t\t  removing custom tags starting with \"if\" solved things. In reality, it\n\t\t  didn't solve anything. It just masked the problem.\n\n\t\t  This change should be compatible with all versions of Django.\n\n\t* djblets.webapi:\n\t\t* Add support for resource-specific mimetypes.\n\n\t\t  A common method for REST services is to have payloads returned with\n\t\t  resource-specific mimetypes. These can help to identify the format of\n\t\t  a payload (useful for automatic bindings) without having to inspect\n\t\t  the URI.\n\n\t\t  This adds support for easily telling a resource to return such\n\t\t  mimetypes.  If mimetype_vendor is specified, WebAPIResource can\n\t\t  populate the accepted mimetypes list with some\n\t\t  vendor/resource-specific mimetypes that will be used by default for\n\t\t  any responses.\n\n\t\t  When there's a vendor mimetype, the resources will use the resource\n\t\t  names for the mimetypes, but these can be overridden using\n\t\t  mimetype_list_resource_name and mimetype_item_resource_name.\n\n\t\t* Accept \"true\" as a valid boolean value in the web API.\n\t\t  Patch by Jim Chen.\n\n\nversion 0.6.15 final (13-December-2011):\n\t* djblets.pipeline:\n\t\t* Replaced the djblets.compress module with djblets.pipeline.\n\n\t\t  django-compress was deprecated shortly after our 0.6.14 release, with\n\t\t  django-pipeline being the successor. As such, we've decided to get rid of\n\t\t  the djblets.compress support and just replace it with equivalent pipeline\n\t\t  support.\n\n\t\t  We're not aware of any projects this will break.\n\n\t* djblets.util:\n\t\t* Fixed Django 1.4 compatibility.\n\n\t\t  djblets.util.misc was importing RegexURLPattern from a location that\n\t\t  no longer worked. This has been updated to use the proper import path.\n\n\nversion 0.6.14 final (9-November-2011):\n\t* djblets.compress:\n\t\t* Added a new filters for django-compress that handles lesscss\n\t\t  (http://lesscss.org) files and automatically converts/deploys as\n\t\t  CSS.\n\n\t\t* Added new templates for django-compress that handles the\n\t\t  MEDIA_SERIAL suffix.\n\n\t* djblets.siteconfig:\n\t\t* The settings template now allows fields to not have a label by\n\t\t  setting \"fields_no_label\" to True in the form class. Patch by\n\t\t  Hongbin Lu.\n\n\t* djblets.webapi:\n\t\t* Fixed authentication failures when \":\" was in the password.\n\t\t  Patch by Dave Druska. (Bug #2334)\n\n\t* djblets.util:\n\t\t* The jQuery and jQuery-UI versions are now referenced in only one\n\t\t  place, in js/jquery.html and js/jquery-ui.html. Other templates\n\t\t  can include these and keep up-to-date with the versions Djblets\n\t\t  provides.\n\n\t\t  Projects can override these templates to provide their own\n\t\t  hard-coded versions.\n\n\t\t  In the next release, these will switch to the Google CDN by default.\n\n\nversion 0.6.13 final (7-October-2011):\n\t* djblets.log:\n\t\t* Include the HTTP method in the new page request logs.\n\n\t* djblets.util:\n\t\t* Moved controlled_subprocess into djblets.util.contextmanagers.\n\n\t\t  This makes it easier to selectively import on Python 2.4.\n\n\t\t* Fixed a syntax error in controlled_subprocess on Python 2.4 and 2.5.\n\n\nversion 0.6.12 final (6-October-2011):\n\t* djblets.log:\n\t\t* Allow logging page access times.\n\n\t\t  If settings.LOGGING_PAGE_TIMES is set to True, page access times\n\t\t  (along with HTTP method, URL, and user) are logged. This can be\n\t\t  handy in tracking performance problems and blocked page loads.\n\n\t* djblets.util:\n\t\t* Added a controlled_subprocess context manager for Python 2.5+.\n\n\t\t  This is useful for using subprocess.Popen on a process that may end\n\t\t  up blocking. It ensures that a blocked process will terminate.\n\n\t\t  This is experimental and may change in behavior, or move to a new\n\t\t  file.\n\n\t\t  Patch by Mike Conley.\n\n\t* djblets.webapi:\n\t\t* API authorization failures, misparsed headers, and authorization\n\t\t  attempts are now logged.\n\n\nversion 0.6.11 final (10-September-2011):\n\t* djblets.testing:\n\t\t* Added a new TestCase class and @add_fixtures decorator for\n\t\t  having fixtures specific to text functions.\n\n\t* djblets.util:\n\t\t* Fixed defaults on counter fields on new model instances.\n\n\t\t  Counter fields on new model instances were being set to 0, preventing\n\t\t  them from recomputing the next time they're accessed. This would\n\t\t  cause any new models to be incorrect. They're now initialized to\n\t\t  NULL instead. (Bug #2268)\n\n\nversion 0.6.10 final (20-August-2011):\n\t* djblets.datagrid:\n\t\t* Log failed attempts at finding cell templates, in order to aid\n\t\t  debugging.\n\n\t* djblets.feedview:\n\t\t* Don't fail with an uncaught exception if loading an RSS feed fails.\n\t\t  (Bug #2189)\n\n\t\t  If loading the RSS feed fails (if it's behind a proxy, for example),\n\t\t  feedview would raise an error. Now it provides the error data for\n\t\t  the caller to render.\n\n\t* djblets.log:\n\t\t* Fixed a date range calculation bug in the log viewer. (Bug #2218)\n\n\t\t  The \"This Month\" view in the log viewer was broken due to it\n\t\t  attempting to use the beginning of the date range calculated, which\n\t\t  was 0, instead of 01.  Since we can assume the start of the month\n\t\t  will continue to be 1 for the foreseeable future, we can just\n\t\t  hardcode this and be safe.\n\n\t\t  Patch by Lee Loucks.\n\n\t* djblets.util:\n\t\t* Added a make_cache_key function for generating usable cache keys.\n\n\t\t  The make_cache_key function generates a cache key guaranteed to be\n\t\t  able to fit inside the memcached key length restrictions. It will\n\t\t  generate a MD5 hash of the key if it exceeds the length.\n\n\t\t  This is the same logic that cache_memoize uses to build the keys.\n\t\t  It can be used to perform other operations on that key.\n\n\t\t  Patch by Vlad Filippov.\n\n\t\t* Allow JSONField to store up to 4GB of data on MySQL. (Bug #1481)\n\n\t\t  JSONField on MySQL was hard-coding the \"TEXT\" column type,\n\t\t  allowing only 64KB of data. Now it uses the default for Django's\n\t\t  TextField, which is 4GB.\n\n\t\t  This won't break compatibility with existing fields, but those\n\t\t  fields won't gain the benefits. To update an existing field on\n\t\t  MySQL, you will need to perform the following:\n\n\t\t      ALTER TABLE table_name MODIFY field_name LONGTEXT;\n\n\t\t* Fixed a storage problem with large cache data. (Bug #1660)\n\n\t\t  Large cache data was encoded incorrectly, causing anything stored to\n\t\t  become unloadable, meaning it'd have to be recomputed. This was due\n\t\t  to a string being stored for all but the last chunk, instead of a\n\t\t  string wrapped in a list.  This affects any data that, after being\n\t\t  picked and zlib-compressed, is over 1MB in size.\n\n\t* djblets.webapi:\n\n\t\t* Make it easier to debug invalid data types in @webapi_request_fields.\n\n\t\t  If using an invalid data type in the @webapi_request_fields listing,\n\t\t  you'd see a cryptic error being raised. Now the field is ignored\n\t\t  and an error is logged.\n\n\nversion 0.6.9 final (21-July-2011):\n\t* djblets.auth:\n\t\t* Add optional first and last name fields to RegistrationForm.\n\n\t\t* Prevent occasional errors when calling delete_test_cookie().\n\n\t\t  Sometimes validate_test_cookie() will work and then delete\n\t\t  delete_test_cookie() will throw an error. If the test cookie is\n\t\t  already gone from the session, we no longer care if it fails to\n\t\t  be deleted.\n\n\t* djblets.datagrid:\n\t\t* Fixed an occasional crash due to id_list not being set. (Bug #1526)\n\n\t\t* Fixed an occasional rendering error caused by a 'None' object being\n\t\t  rendered.\n\n\t\t* Changing datagrid columns no longer loses the current page you're on,\n\t\t  or other view settings. Patch by Simon Wu.\n\n\t* djblets.util:\n\t\t* Added a ifnotuserandperm template tag, which is the negation of\n\t\t  ifuserandperm. Patch by Hongbin Lu.\n\n\t* djblets.webapi:\n\t\t* Add support for browser-side caching of webapi resources.\n\n\t\t  WebAPIResource now has a few new properties and methods for handling\n\t\t  browser-side caching. Resources can handle Last Modified timestamps\n\t\t  or ETags, and generate them either based on fields or through custom\n\t\t  functions.\n\n\t\t  This can speed up access to resources, improving performance both\n\t\t  client-side and server-side.\n\n\t* JavaScript:\n\t\t* Prompt when canceling a dirty inlineEditor by default. (Bug #2096)\n\n\t\t  inlineEditor now prompts the user if they cancel via Escape or the\n\t\t  Cancel button when the editor is dirty. The user has a chance to\n\t\t  change his mind instead of just losing everything he wrote. This can\n\t\t  be turned off per-inlineEditor.\n\n\t\t* Support Control-S for saving on inlineEditors. (Bug #1958)\n\n\t\t  When editing a long block of text on an edit field, it's handy to be\n\t\t  able to save periodically. Now, pressing Control-S will now trigger a\n\t\t  save without closing the field. Patch by Hongbin Lu.\n\n\nversion 0.6.8 final (23-June-2011):\n\t* djblets.datagrid:\n\t\t* Fixed an occasional ValueError with the datagrid.\n\n\t\t  On occasion, the \"active\" state of a column can sometimes be\n\t\t  True when the column isn't in self.datagrid.columns, which meant\n\t\t  it would throw a ValueError when trying to remove itself from the\n\t\t  list. We're more bullet-proof now.\n\n\t* djblets.gravatars:\n\t\t* The gravatar templatetag no longer errors out if the provided user\n\t\t  is anonymous.\n\n\t* djblets.log:\n\t\t* The \"Logging to...\" lines are now only logged when settings.DEBUG\n\t\t  is on.\n\n\t* djblets.util:\n\t\t* JSONField no longer errors out if blank=False is used. (Bug #2015)\n\n\t\t* Fixed escaping of label names in label_tag() on newer versions\n\t\t of Django.\n\n\t* djblets.webapi:\n\t\t* Fixed a problem when settings.WEB_API_ENCODERS isn't set.\n\n\t\t  Our fallback for when this setting wasn't set was broken, causing\n\t\t  new errors.\n\n\nversion 0.6.7 final (9-January-2011):\n\t* djblets.datagrid:\n\t\t* The datagrids now use a RequestContext when rendering cells, allowing\n\t\t  the columns or templates to access data from context processors.\n\n\t* djblets.siteconfig:\n\t\t* The form body of a siteconfig settings page can now be replaced.\n\t\t  It's now stored in the \"form_content\" block.\n\n\t\t* SiteConfigurationManager no longer crashes if trying to clear\n\t\t  the cache for a SiteConfiguration that no longer exists.\n\n\t* djblets.testing:\n\t\t* The Selenium test suite has been updated to support Django 1.2's\n\t\t  multi-database support. Previously, fixtures would fail to load\n\t\t  if using the new settings.DATABASES variable.\n\n\t* djblets.util:\n\t\t* The @augment_method_from decorator wasn't properly calling up the\n\t\t  decorator chain, preventing some decorators from being invoked. This\n\t\t  has been fixed to ensure all decorators are called.\n\n\t* djblets.webapi:\n\t\t* Due to the @augment_method_from breakage listed above, webapi\n\t\t  decorators could fail to add their own checks, causing various\n\t\t  problems in field checking and authentication. This is now fixed.\n\n\t\t* The Permission Denied (HTTP 403) errors being returned weren't\n\t\t  sufficient for clients that weren't authenticated. Now, an\n\t\t  unauthenticated client will instead see Not Logged In (HTTP 401)\n\t\t  errors.\n\n\t\t* The HTTP_AUTHORIZATION header is now checked on all requests. When\n\t\t  provided by the client, it will be used for authentication. This\n\t\t  means that clients can now force a login from their very first\n\t\t  request on, instead of requiring a HTTP 401 Unauthorized being\n\t\t  sent out first.\n\n\t\t  This will also prevent multiple logins across different requests\n\t\t  from the same client, when the HTTP_AUTHORIZATION header is passed\n\t\t  on each request. This makes requests less heavy-weight and prevents\n\t\t  the last_login timestamp on the User from being updated on each\n\t\t  request.\n\n\t\t  As part of this change, any webapps manually using the\n\t\t  @webapi_login_required decorator without the new resource code\n\t\t  will no longer support HTTP Basic auth. However, this was never\n\t\t  a supported feature anyway, and was more there by accident.\n\n\t\t* The 'api_format' parameter in requests is now treated specially\n\t\t  and doesn't trigger any invalid attribute errors during field\n\t\t  validation.\n\n\t\t* WebAPIResource.delete now uses get_object instead of fetching\n\t\t  the object directly, which simplifies the function and guarantees\n\t\t  that the correct object is used (especially when a resource\n\t\t  overrides get_object).\n\n\t\t* Redirects now preserve any special parameters (\"callback\",\n\t\t  \"_method\", \"expand\", and \"api_format\") passed to the request.\n\t\t  This works around problems in HTTP implementations that don't\n\t\t  allow the caller to know that redirects occurred (such as major\n\t\t  browsers), which would lead to this information being stripped and\n\t\t  the wrong results being returned.\n\n\t\t* The \"expand\" parameter for expanding links in payloads is now\n\t\t  supported for POST and PUT requests.\n\n\nversion 0.6.6 final (22-November-2010):\n\t* djblets.util:\n\t\t* Fixed a compatibility problem with JSONField and Django 1.1. It\n\t\t  was assuming support for Django 1.2's multi-database support.\n\n\t\t* Fixed multi-database support in Django 1.2 with JSONField, where\n\t\t  the default connection was always being used in one case.\n\n\nversion 0.6.5 final (20-November-2010):\n\t* djblets.datagrid:\n\t\t* MEDIA_SERIAL is now used for all the images in the datagrid\n\t\t  template. Patch by Ben Hollis.\n\n\t* djblets.util:\n\t\t* Added a @root_url decorator for use with get_absolute_url\n\t\t  implementations, which appends SITE-ROOT to any returned URLs.\n\n\t\t* Added a CounterField for atomically updating counters.\n\n\t\t  CounterField can be used to atomically increment or decrement\n\t\t  an integer stored in the database, on individual models or\n\t\t  on many models at a time. It's intended to substitute for\n\t\t  potentially expensive or numerous SQL queries that retrieve\n\t\t  counts of objects.\n\n\t\t* Updated the custom fields for Django 1.2 multi-database\n\t\t  compatibility.\n\n\t* djblets.webapi:\n\t\t* Fixed a bug in serializing 'long' values in XML.\n\n\t\t* Resources now Vary on HTTP Accept, meaning that the browser won't\n\t\t  cache the wrong response type when accessing the same resource\n\t\t  with two different requested mimetypes.\n\n\t\t* Reduced the SQL query count for resources.\n\n\t\t* Fixed problems that could occur with URLs when serializing objects in\n\t\t  a list and when returning links.\n\n\nversion 0.6.4 final (14-September-2010):\n\t* djblets.testing:\n\t\t* An undefined variable error when using the Selenium test support\n\t\t  has been fixed.\n\n\t* djblets.util:\n\t\t* Added an augment_method_from decorator for augmenting existing\n\t\t  functions.\n\n\t\t  This allows a subclass to augment a parent class's function's\n\t\t  documentation and decorators. The existing decorators are\n\t\t  automatically inherited. Where this becomes useful is where you have\n\t\t  several classes that share common logic, but may need further\n\t\t  restrictions or new documentation.\n\n\t\t  The defined function is meant to have an empty body (or 'pass'),\n\t\t  but it can contain code wich will be executed after the parent\n\t\t  function. No returned values will be used, however.\n\n\t* djblets.webapi:\n\t\t* When serializing a dictionary in a webapi response into XML, we\n\t\t  now properly serialize keys that are integers. They are serialized\n\t\t  as <int value=\"...\">.\n\n\t\t* Fixed a circular dependency that occured between resources.py,\n\t\t  encoders.py, and core.py (depending on which was first imported).\n\n\t\t* The User resource now accepts a '.' in the username.\n\n\t\t* List-only resources now always have their get_list function called,\n\t\t  regardless of whether it had list_child_resources defined.\n\n\t\t* Singleton resources (resources that exist as a single child item\n\t\t  with no object list) must now have the 'singleton' parameter set\n\t\t  to 'True'.\n\n\t\t* HTTP Accept mimetypes and ?api_format= are now supported properly\n\t\t  for resources.\n\n\t\t* Specifying api_format in POST requests now works.\n\n\t\t* Resource classes instances can now be queried by class, using\n\t\t  the get_resource_from_class function.\n\n\t\t* Resource classes can now be introspected:\n\n\t\t\t* Functions can list which error classes the client can expect\n\t\t\t  to receive using the @webapi_response_errors decorator. It can\n\t\t\t  be queried using function.response_errors.\n\n\t\t\t* The list of fields that can or must be specified for\n\t\t\t  HTTP GET/PUT/POST can now be queried. It can be queried using\n\t\t\t  function.required_fields and function.optional_fields.\n\n\t\t\t* Usage of @webapi_login_required can now be checked by accessing\n\t\t\t  function.login_required.\n\n\t\t\t* The list of fields on a resource should now be a dictionary,\n\t\t\t  which can include a description of the field.\n\n\t\t\t* The custom links on a resource can now be explicitly listed\n\t\t\t  by overriding the get_related_links function.\n\n\nversion 0.6.3 final (4-July-2010):\n\t* djblets.testing:\n\t\t* Fixed Selenium unit testing to properly skip the tests when\n\t\t  the Selenium server was down.\n\n\t* djblets.util:\n\t\t* Added utility functions for HTTP Accept-based content negotation.\n\n\t\t  This adds new get_http_requested_mimetype and get_http_accept_lists\n\t\t  functions for doing content negotiation using the HTTP Accept request\n\t\t  header. This header allows clients to tell the server which mimetypes\n\t\t  it accepts or explicitly forbids, based on priorities, so that the\n\t\t  server can send the right data. This can allow a single URL to return\n\t\t  various forms of data based on the client (HTML, PDF, JSON, etc.).\n\n\t\t  The get_http_accept_lists() function parses the HTTP Accept request\n\t\t  header and returns sorted lists of acceptable mimetypes and\n\t\t  unacceptable mimetypes.  These are sorted based on the priorities in\n\t\t  the header.\n\n\t\t  The get_http_requested_mimetype() function takes a HttpRequest and a\n\t\t  list of supported mimetypes for that URL and then, based on the\n\t\t  results of get_http_accept_lists() and the supported mimetypes,\n\t\t  determines what mimetype the server should be using. If nothing is\n\t\t  supported, it will return None, and the server is expected to return\n\t\t  a HttpResponseNotAcceptable.\n\n\t* JavaScript:\n\t\t* This adds some stuff to gravy to make sites work better on the\n\t\t  iPhone/iPad versions of Safari.  A new $.proxyTouchEvents function\n\t\t  has been added, which causes touch screen events to be forwarded to\n\t\t  existing mouse event handlers. It's intended for basic use cases\n\t\t  where multi-touch events really don't need to be handled.\n\n\t\t* $.browser has been updated with a 'mobileSafari' check, making it\n\t\t  easier to determine whether we're running on the iPhone/iPad.\n\n\t\t* A workaround for jQuery bug #6446 has been implemented, which\n\t\t  basically fixes an issue with the result from $.offset() being\n\t\t  incorrect.\n\n\t\t* Tooltips are disabled on iPhone/Pad, as they're really not at all\n\t\t  useful and their hover events manage to get in the way of other\n\t\t  events.\n\n\nversion 0.6.2 final (13-May-2010):\n\t* djblets.log:\n\t\t* Fix a compatibility error with Python 2.4 and 2.5.\n\n\nversion 0.6.1 final (12-May-2010):\n\t* djblets.webapi:\n\t\t* Fixed a regression with the webapi auth handlers. They weren't\n\t\t  accepting the right arguments.\n\n\nversion 0.6.0 final (11-May-2010):\n\t* djblets.datagrid:\n\t\t* Fixed rendering issues with columns in the datagrids.\n\n\t\t  Adding columns to a datagrid would cause odd rendering issues. This\n\t\t  was due to not including the 'last' flag (indicating the last\n\t\t  column, in order to position the Edit Columns column properly) in\n\t\t  the cache key. We now add the key, which allows the datagrid to\n\t\t  render properly when adding or removing columns.\n\n\t\t* Fixed over-caching of columns.\n\n\t\t  There were a couple bugs where Djblets cached the rendered columns\n\t\t  too aggressively, causing links on cells to point to the wrong\n\t\t  addresses and columns to render incorrectly based on previous loads.\n\t\t  (Bug #1582)\n\n\t* djblets.log:\n\t\t* Switched the logging setup code to use a WatchedFileHandler,\n\t\t  which automatically reopens the log files for writing when they're\n\t\t  deleting (such as after log rotation).\n\n\t* djblets.testing:\n\t\t* Added the new djblets.testing module, which houses our old unit\n\t\t  testing helpers from djblets.util.testing.\n\n\t\t* Added new Selenium test suite support for automated browser\n\t\t  testing.\n\n\t* djblets.webapi:\n\t\t* Added a new resource-based model for doing more RESTful APIs.\n\n\t\tThis introduces a new class for easily creating RESTful URL resources\n\t\tthat can handle standard HTTP methods and return meaningful data in a\n\t\tnicely constructed hierarchy.\n\n\t\tBy using WebAPIResource, a site can offer a very clean set of URLs to\n\t\twork with any object.\n\n\t\tThere's a lot to this object, but it's all covered in the extensive\n\t\tdocumentation in webapi/resources.py.\n\n\nversion 0.5.9 final (28-March-2010):\n\t* djblets.util:\n\t\t* cache_memoize now converts all keys to plain strings, instead of\n\t\t  allowing unicode to be passed to the backend. Not all cache\n\t\t  backends allow for unicode keys.\n\n\t* djblets.siteconfig:\n\t\t* The same change for cache keys was made here as well.\n\n\t* djblets:\n\t\t* Added ez_setup.py to the source distribution.\n\t\t* Added djblets.__version__ and djblets.__version_info__.\n\t\t  __version__ is a variable containing the results of\n\t\t  djblets.get_package_version(), and __version_info__ contains\n\t\t  the version parts in a tuple.\n\n\nversion 0.5.8 final (27-March-2010):\n\t* djblets.datagrid:\n\t\t* Made many more speed improvements in the datagrids.\n\n\t\t  This builds upon the previous set of improvements.\n\n\t\t  We now parse and cache the cell and header templates before any\n\t\t  rendering is done, instead of doing it once per cell.\n\n\t\t  We also cache cells by their displayed content, so that two cells\n\t\t  that would show the same rendered data will only render once.\n\t\t  This is especially useful for cells showing such things as\n\t\t  usernames.\n\n\t\t  This can easily take seconds off the load of a heavy datagrid.\n\n\t\t* Objects in the datagrid with custom primary keys that aren't named\n\t\t  'id' now work.\n\n\t\t* The Edit Columns icon is now a pencil instead of just \"...', making\n\t\t  it easier to see it and figure out its purpose. (Bug #910)\n\n\t* djblets.feedview:\n\t\t* The feedparser library is now only imported when needed. This\n\t\t  reduces startup time for requests by as much as a quarter of a\n\t\t  second, as feedparser is a very large library and takes time to\n\t\t  import.\n\n\t\t  This should improve performance for any site that at all lists\n\t\t  djblets.feedview in INSTALLED_APPS, even for pages not making use\n\t\t  of feedview.\n\n\t* djblets.siteconfig:\n\t\t* The stale settings issue appears to be fixed in this release. It\n\t\t  needs more testing in large deployments, but we've identified a\n\t\t  couple cases that would cause this problem and have fixed them.\n\n\t\t* The mail authentication information is now saved as plain strings\n\t\t  instead of unicode strings in order to fix a compatibility issue\n\t\t  with Python 2.6's HMAC library.\n\n\t\t* The SiteConfiguration's settings field is now read-only in the\n\t\t  Django administration UI in Django 1.2.\n\n\t* djblets.webapi:\n\t\t* WebAPIErrors can now take HTTP status codes that will be sent to\n\t\t  the browser. These default to 400, though the built-in errors may\n\t\t  define different codes.\n\n\t\t  This change does break backwards-compatibility if a client calling\n\t\t  the API makes the assumption that every result with a payload will\n\t\t  be an HTTP 200 OK. Clients shouldn't make these assumptions, but\n\t\t  it's possible that they do.\n\n\t\t* Added support for Basic HTTP Authentication.\n\n\t\t  Clients making a call when not logged in to a restricted URL will\n\t\t  now get an HTTP 401 Unauthorized, along with a WWW-Authentication\n\t\t  header specifying that Basic Auth is to be used.\n\n\t\t  Clients can use standard Basic Auth to pass credentials to any\n\t\t  URL requiring such authorization in order to log in. This removes\n\t\t  the need for special login URLs.\n\n\t\t  This makes APIs more accessible to applications like wget or\n\t\t  curl.\n\n\t\t* Added an easy way to do pagination with the web API.\n\n\t\t  API calls returning lists of data can now paginate the results,\n\t\t  returning only a certain amount of data. The results and the\n\t\t  total number of items across all pages will be returned.\n\n\t\t  URLs are provided in the resulting JSON payload that point to the\n\t\t  previous or next queries. Callers can pass a 'start' parameter to\n\t\t  the URL to specify the first item's index (0-based), and\n\t\t  'max-results' to specify the maximum number of items it wants in\n\t\t  that request (which may be capped server-side).\n\n\nversion 0.5.7 final (14-February-2010):\n\t* djblets.datagrid:\n\t\t* Columns in datagrids can now augment the queryset before actually\n\t\t  querying the database. This allows them to prefetch information\n\t\t  instead of having to do a query per-row.\n\n\t\t  This also now by default globally caches the resulting data in\n\t\t  Column.render_data if displaying a foreign key. This means that if\n\t\t  several rows are all referencing the same User object, for instance,\n\t\t  there will be only one query for that object instead of one per row.\n\n\t* djblets.log:\n\t\t* Add a title to the Server Log page.\n\n\t* djblets.util:\n\t\t* Fixed image cropping with the new Django storage support.\n\n\t\t  Python Image Library was confused about the format to save the\n\t\t  resulting image in when cropping. We now pass in the appropriate\n\t\t  format in order to allow it to save. We also log any failures that\n\t\t  may come up. (Bug #1396)\n\n\t* JavaScript:\n\t\t* Allow the classes in modalBox to be customized on a per-instance\n\t\t  basis, allowing for more custom types of modalBoxes (such as a\n\t\t  specially stylized help box). Patch by Hussain Bohra.\n\n\t\t* Added a new $.fn.scrollIntoView function. This will ensure that the\n\t\t  target element is visible on-screen.\n\n\nversion 0.5.6 final (15-November-2009):\n\t* djblets.auth:\n\t\t* RegistrationForm now takes in a request.\n\t\t* Extra context can be passed to the template for the registration\n\t\t  form.\n\n\nversion 0.5.5 final (22-October-2009):\n\t* JavaScript:\n\t\t* Fix a bug on Internet Explorer when setting the white-space\n\t\t  property on an auto-size text area. (Bug #1349)\n\n\nversion 0.5.4 final (4-October-2009):\n\t* djblets.datagrid:\n\t\t* Compatibility updates for the Django 1.2 development branch.\n\n\t* JavaScript:\n\t\t* On Google Chrome, the text areas would grow by a line with every key\n\t\t  pressed. Patch by Cory McWilliams. (Bug #1145)\n\n\t\t* On Safari 4, the text areas wouldn't auto-resize based on text.\n\n\t\t* On Firefox, the text areas would shrink too much when deleting text.\n\n\nversion 0.5.3 final (17-September-2009):\n\t* djblets.siteconfig:\n\t\t* Updated to work with Django 1.1's admin UI stylesheets.\n\n\nversion 0.5.2 final (15-September-2009):\n\t* General:\n\t\t* Added copyright and MIT license headers to all files.\n\n\t* JavaScript:\n\t\t* inlineEditors now prevent the event from bubbling up when\n\t\t  clicking their target element. This means that a target element\n\t\t  inside of an <a href=\"...\"> will no longer cause the page to\n\t\t  change when clicking the element. (Bug #1221)\n\n\t* djblets.auth:\n\t\t* Deleted the password recovery code. It was intended for use in\n\t\t  an old version of Django and has since been supplanted by\n\t\t  Django. We don't believe anyone is using it or should be\n\t\t  encouraged to use it.\n\n\t* djblets.log:\n\t\t* Added a Server Log view for administration UIs. This is used\n\t\t  to display the server log (using the Python logging defaults from\n\t\t  djblets.log). The log is filterable and sortable.\n\n\t\t* Exceptions are now logged when using LoggingMiddleware. When an\n\t\t  exception occurs, the stack, username and URL are logged.\n\n\t* djblets.util.misc:\n\t\t* cache_memoize will now always ensure that cache keys will never\n\t\t  exceed the maximum key length. If the key is larger, an md5sum\n\t\t  of the key is used instead. Patch by Thilo-Alexander Ginkel.\n\n\nversion 0.5.1 final (2-August-2009):\n\t* JavaScript:\n\t\t* Added a clear() function to $.funcQueue(), which clears the\n\t\t  queue and prevents any further processing until it's next started.\n\n\t* djblets.util.filesystem:\n\t\t* Added the new djblets.util.filesystem for filesystem-related\n\t\t  functionality.\n\n\t\t* This currently contains is_exe_in_path, which checks if an\n\t\t  executale exists in the system path. This will do intelligent\n\t\t  file extension determination. It expects an application name without\n\t\t  a file extension (such as \"cvs\") and will append the \".exe\" on\n\t\t  Windows. This is an improvement over the method we used in Review\n\t\t  Board before where we blindly searched for \"cvs\" (which could in\n\t\t  theory exist yet not be an executable) on Windows, or \"cvs.exe\"\n\t\t  (which could in theory exist yet not be an executable) on Linux.\n\n\nversion 0.5 final (20-June-2009):\n\t* Final release of Djblets 0.5.\n\n\t  This release was made to go alongside Review Board 1.0. While Djblets\n\t  works its way to its own 1.0, we will attempt to not break any existing\n\t  API. However, it is important to note that Djblets is not API frozen\n\t  at all yet.\n\n\t  We advise developers to continue to work against Djblets SVN/nightlies,\n\t  but to base production applications on 0.5.\n\n\nversion 0.5 rc2 (13-June-2009):\n\t* General:\n\t\t* Properly list the license as MIT, not GPL, in setup.py.\n\t\t  (Bug #1120)\n\n\t* JavaScript:\n\t\t* Prevent funcQueue.start() from being called when the queue is\n\t\t  already started.\n\n\t* djblets.datagrid:\n\t\t* Added speedups when sorting columns. We used to generate an SQL\n\t\t  query that pulled in all information in the order specified by\n\t\t  the columns, but this could be slow for large data sets. We now\n\t\t  do the minimal query, retrieving only the object IDs, and then\n\t\t  fetch data on those specific IDs in a second query. The end result\n\t\t  is a significant speedup in rendering datagrids when used with\n\t\t  large amounts of data.\n\n\t* djblets.log:\n\t\t* Fix logging when we're unable to write to the log file. We now\n\t\t  fall back on stderr. Patch by Paolo Borelli.\n\n\t* djblets.util.fields:\n\t\t* Fixed a typo in a variable name that caused problems in JSONField\n\t\t  when getting data in an unexpected format.\n\n\nversion 0.5 rc1 (3-May-2009):\n\t* JavaScript:\n\t\t* Clicking the edit icons for inlineEditors no longer causes the\n\t\t  page to scroll in some browsers. (Bug #1057)\n\n\t* djblets.datagrids:\n\t\t* Sped up the datagrids in some cases by always including related\n\t\t  objects (up to one depth level) in the query for the datagrid.\n\n\t* djblets.siteconfig:\n\t\t* Prepended the site's domain to the siteconfig cache key, making it\n\t\t  possible to use multiple siteconfig-based apps on the same server.\n\t\t  (Bug #986)\n\n\t\t* Saving a SiteConfig didn't always cause other instances of that\n\t\t  SiteConfig on the server to reload, meaning that people would\n\t\t  sometimes have to restart the server to get settings to apply.\n\t\t  This is now fixed.\n\t\t  (Bug #734)\n\n\t\t* Removed a redundant key for the timezone.\n\n\t* djblets.util.templatetags.djblets_utils:\n\t\t* The ageid filter now returns an empty string if passed 'None' as\n\t\t  the timestamp.\n\n\nversion 0.5 beta 1 (28-March-2009):\n\t* JavaScript:\n\t\t* Moved to using jQuery 1.3.2.\n\n\t\t* Small performance improvements in tooltip and modalBox.\n\n\t\t* The edit icons in an inlineEditor are now accessible, so they can\n\t\t  be activated by pressing the Enter key in Firefox. Patch by\n\t\t  Brad Taylor. (Bug #965)\n\n\t* djblets.util.fields:\n\t\t* JSONField and Base64Field now properly serialize to a JSON file,\n\t\t  so long as the patch at http://code.djangoproject.com/ticket/9522\n\t\t  is applied.\n\n\t\t* Objects saved in the admin UI that have a Base64Field no longer\n\t\t  causes garbage in the field. The fields are now saved properly.\n\t\t  (Bug #918)\n\n\t* djblets.gravatars:\n\t\t* Added an \"alt\" attribute for the generated gravatar image, in order\n\t\t  to fix XHTML compliance.\n\n\t* djblets.datagrids:\n\t\t* Fixed some XHTML validation errors. Patch by Onkar Shinde.\n\t\t  (Bug #932)\n\n\nversion 0.5 alpha 3 (15-February-2009):\n\t* JavaScript Bugs Fixed:\n\t\t* Fixed some major performance issues in autoSizeTextArea.\n\n\t\t* Fixed a bug with Safari and inlineEditor where Safari would\n\t\t  sometimes crash due to autoSizeTextArea. We now just disable\n\t\t  the autoSizeTextArea functionality.\n\n\t\t* inlineEditor no longer allows startEdit to be called when editing\n\t\t  is already enabled.\n\n\t* New Features:\n\t\t* Added new set_etag, etag_if_none_match, etag_if_match functions\n\t\t  for working with ETags.\n\n\t\t* Added a new jQuery.fn.html() method that works around IE's broken\n\t\t  innerHTML implementation. innerHTML in IE would strip whitespace,\n\t\t  which was bad when inserting into <pre> and <textarea> tags.\n\n\n\nversion 0.5 alpha 2 (3-February-2009):\n\t* JavaScript:\n\t\t* We now include and require jQuery 1.3.1 and jQueyr-ui 1.6rc5.\n\n\t\t* Added support for starting an inlineEditor in the opened state,\n\t\t  and prevent animations when starting or forcing it to be open.\n\n\t\t* Disabled keypress propagation for inlineEditor. This fixes a bug\n\t\t  in Review Board's diff viewer (bug #838).\n\n\t* djblets.gravatars (new):\n\t\t* Added basic support for gravatars. This provides a {% gravatars %}\n\t\t  template tag for displaying a gravatar based on a User object.\n\t\t  See http://www.gravatar.com/ for more information on Gravatars.\n\n\t* djblets.util:\n\t\t* Added a {% include_as_string %} tag for including a template\n\t\t  as a JavaScript string.\n\n\t\t* Added the ability to generate media and AJAX serial numbers based\n\t\t  on the media files and template files. These can be appended to\n\t\t  the media and AJAX URLs which, in combination with aggressive\n\t\t  Expires headers, can drastically speed up load times of sites.\n\n\t\t  See djblets.util.context_processors and\n\t\t  djblets.util.misc.generate_cache_serials.\n\n\t* djblets.webapi:\n\t\t* Set the mime type for JSON responses to application/json,\n\t\t  except when responding to an upload, in which case text/plain\n\t\t  is used.\n\n\t\t* Fixed a bug where WebAPIResponse._get_content was called too\n\t\t  frequently and in some cases generated a 500 error.\n"], "fixing_code": ["version 0.7.30 final (6-June-2014):\n\t* Security:\n\t\t* Fixed a XSS issue in the gravatars code.\n\n\t\t  Users could construct a name that would allow for injecting\n\t\t  JavaScript in the page. That name is now properly escaped.\n\n\t\t  This is CVE-2014-3995.\n\n\t\t* Fixed a XSS issue in json_dumps.\n\n\t\t  JSON payloads constructed based on user input and then injected into\n\t\t  a page could result in custom JavaScript being injected into the\n\t\t  page. Additional escaping is now performed to ensure this does not\n\t\t  happen.\n\n\t\t  This is CVE-2014-3994 (discovered by \"uchida\", bug #3406).\n\n\nversion 0.7.29 final (9-April-2014):\n\t* djblets.webapi:\n\t\t* Add requested query parameters in pagination links. (Bug #3199)\n\n\nversion 0.7.28 final (31-December-2013):\n\t* djblets.auth:\n\t\t* Fixed HTTP 500 errors when failing to save the registration form.\n\n\t\t  If saving the registration form failed in some way (due to a username\n\t\t  conflict, for example), Djblets would fail with an HTTP 500. It's\n\t\t  now propagated up and reported properly.\n\n\nversion 0.7.27 final (12-December-2013):\n\t* djblets.webapi:\n\t\t* Fixed a regression with the new webapi auth backend support.\n\n\t\t  If an Authorization header was sent by a client that already had\n\t\t  a valid cookie, the code would attempt to access an undefined\n\t\t  variable. The code is now in a more appropriate place to access\n\t\t  that variable.\n\n\nversion 0.7.26 final (10-December-2013):\n\t* djblets.util.fields:\n\t\t* Fixed JSONField in the administration UI.\n\n\t\t  A JSONField will now render proper JSON, and not a Python\n\t\t  repr() of JSON, in the administration UI. This is properly validated\n\t\t  and saved.\n\n\t* djblets.webapi:\n\t\t* Added support for web API authentication backends.\n\n\t\t  It's now possible to write custom auth backends for the web API.\n\t\t  By default, our standard HTTP Basic Auth is used, but others\n\t\t  can now be written.\n\n\t\t  Projects can set settings.WEB_API_AUTH_BACKENDS to a list of\n\t\t  Python class paths to set custom auth backends. In coming\n\t\t  releases, we'll supply new ones as well.\n\n\nversion 0.7.25 final (28-November-2013):\n\t* djblets.auth:\n\t\t* Added some human-readable labels for RegistrationForm.\n\n\t\t* RegistrationForm subclasses that make use of fields that normalize\n\t\t  to non-strings no longer fail to save.\n\n\t* djblets.webapi:\n\t\t* Usernames with plus signs in them are now matched in the API.\n\t\t  This is useful for e-mail addresses as usernames.\n\n\t\t  Patch by Mark C\u00f4t\u00e9.\n\n\nversion 0.7.24 final (21-November-2013):\n\t* djblets.util.http:\n\t\t* Fixed ETag matching.\n\n\t\t  ETag request headers weren't being looked up properly, preventing pages\n\t\t  from being able to make intelligent caching decisions.\n\n\nversion 0.7.23 final (5-November-2013):\n\t* djblets.extensions:\n\t\t* Fix URL errors when configuring extensions with a custom SITE_ROOT.\n\n\t* djblets.util.fields:\n\t\t* JSONFields can now be safely edited through the administration UI,\n\t\t  complete with validation.\n\n\t* jquery.gravy:\n\t\t* Fixed hiding the pencil icons on an inlineEditor when disabled.\n\n\nversion 0.7.22 final (1-November-2013):\n\t* djblets.extensions:\n\t\t* AJAX_SERIAL is updated when extensions are enabled/disabled or their\n\t\t  configuration changes, allowing templates using AJAX_SERIAL as part\n\t\t  of their cache to invalidate.\n\n\t* djblets.siteconfig:\n\t\t* Reduced query counts for installs using siteconfig.\n\n\t* djblets.webapi:\n\t\t* Reduced query counts when returning payloads for list resources\n\t\t  with no entries.\n\n\t\t* Common attribute lookups on WebAPIResource are now cached.\n\n\nversion 0.7.21 final (11-October-2013):\n\t* djblets.webapi:\n\t\t* Added a has_list_access_permissions function, which is used to\n\t\t  determine access to a list resource.\n\n\nversion 0.7.20 final (11-October-2013):\n\t* djblets.datagrid:\n\t\t* Fixed pagination on the datagrid.\n\n\nversion 0.7.19 final (10-October-2013):\n\t* Security updates:\n\t\t* JSONField now corrects incorrectly stored contents in a safer way,\n\t\t  to remove the risk of any exploits in a JSON payload.\n\n\t\t  This is CVE-2013-4409, and was reported and patched by\n\t\t  Frederik Braun.\n\n\t* General:\n\t\t* Updated much of the codebase to be more compatible with Django 1.5\n\t\t  and newer. The upcoming Djblets 0.8 releases will be geared more\n\t\t  heavily toward Django 1.5 compatibility.\n\n\t* Packaging:\n\t\t* Fixed building the static media for Djblets when using a Python\n\t\t  interpreter other than the one named 'python' in the system path.\n\t\t  Patch by Emmanuel Gil Peyrot.\n\n\t\t* Djblets now requires django-pipeline 1.2.24. This version of\n\t\t  Djblets does not work correctly with newer versions.\n\n\t* djblets.extensions:\n\t\t* Extensions can now add additional middleware by setting\n\t\t  Extension.middleware to a list of middleware classes.\n\n\t\t  Patch by Mark C\u00f4t\u00e9.\n\n\t\t* Updated ExtensionResource to use the modern, type-checked,\n\t\t  documented field style, and to add missing documentation.\n\n\t* djblets.util.templatetags.djblets_js:\n\t\t* The json_dumps filter no longer defaults to indenting at all.\n\t\t  Previously, it defaulted to 0, which did not indent code, but\n\t\t  did preserve newlines.\n\n\t* djblets.webapi:\n\t\t* WebAPIError.with_message no longer overrides the original message\n\t\t  for all other instances of that error.\n\n\t\t* Added WebAPIError.with_overrides, which allows overriding the\n\t\t  message and HTTP headers.\n\n\t\t* The webapi decorators now preserve and merge webapi-related\n\t\t  information from other decorators, such as the lists of\n\t\t  response errors and optional/required fields.\n\n\t* jquery.gravy:\n\t\t* The modalBox z-index has been increased from its previously\n\t\t  low z-index, to prevent other UI elements from more easily\n\t\t  popping up over it.\n\n\t\t  Patch by Natasha Dalal.\n\n\nversion 0.7.18 final (15-September-2013):\n\t* Security updates:\n\t\t* We now require Django 1.4.8, which has some important security\n\t\t  updates to prevent a DoS against the auth module.\n\n\t\t* Web API resource lists are now more careful about access\n\t\t  permissions. See the section on djblets.webapi below.\n\n\t* JavaScript:\n\t\t* inlineEditor now has a \"raw value\" option.\n\n\t\t  There are now a couple new options to the inlineEditor widget\n\t\t  for dealing with custom text: \"hasRawValue\" and \"rawValue\". If\n\t\t  hasRawValue is true, then the contents of rawValue is used as the\n\t\t  source text for the editor, instead of the text contents of the\n\t\t  associated element. This allows the caller to do some specialized\n\t\t  pre-formatting on the text contents.\n\n\t\t* Added a \"matchHeight\" option to inlineEditor to prevent the\n\t\t  height-matching behavior.\n\n\t\t  A matchHeight is false (defaults to true), the editor won't\n\t\t  attempt to match the height of the rendered element. This is\n\t\t  important when pre-formatting the text going into the widget\n\t\t  using the new raw value options.\n\n\t\t* Preserve the height of the label for inlineEditors when toggling\n\t\t  pencil visibility.\n\n\t\t  The label should no longer change height when the pencil icon\n\t\t  is shown or hidden.\n\n\t* djblets.webapi:\n\t\t* Fixed access permissions on resource lists.\n\n\t\t  The list resources, by default, didn't do any permissions checking\n\t\t  other than the basic logged-in checks. This meant that if you had\n\t\t  a protected resource with children, you could get lists of the\n\t\t  children even without access to the parents.\n\n\t\t  This is an important security update, and we recommend all users\n\t\t  of the API update immediately.\n\n\t\t* Requests to invalid API resources now return a standard API 404,\n\t\t  instead of a default Django 404. (Bug #3052)\n\n\nversion 0.7.17 final (15-August-2013):\n\t* Packaging:\n\t\t* We now require Django 1.4.6, which is the latest security release\n\t\t  in the 1.4.x series.\n\n\t\t* The build-media script is no longer assumed to be executable\n\t\t  when building the package. Patch by Andrew Grigorev.\n\n\t\t* The 'tests' module is no longer included in the egg.\n\t\t  Patch by Alex Morega.\n\n\t* djblets.extensions:\n\t\t* The extensions media directory is once again based on the package\n\t\t  name, and not the display name of the extension.\n\n\t* djblets.util:\n\t\t* Added a cached_javascript_catalog view in djblets.util.views,\n\t\t  which caches and returns the JavaScript localization catalog\n\t\t  provided by Django. This prevents having to regenerate it all\n\t\t  the time.\n\n\t\t* Fixed a compatibility issue with Python 2.5 in\n\t\t  @controlled_subprocess when trying to kill the process.\n\t\t  (Bug #2935)\n\n\t\t* Improved the localizability of a string in @controlled_subprocess.\n\n\t* djblets.webapi:\n\t\t* The documentation for ?max-results= now explains the existence\n\t\t  of a hard limit of 200 results, so callers aren't surprised\n\t\t  when they try to use larger numbers.\n\n\t\t* The 'X-Content-Type-Options: nosniff' header is passed in\n\t\t  API response headers, to prevent IE8 from trying to download\n\t\t  payloads. (Bug #2889)\n\n\nversion 0.7.16 final (27-July-2013):\n\tThis release contains security fixes in the datagrid. If you are using\n\tthe datagrid, it is recommended that you upgrade to this release.\n\n\t* JavaScript:\n\t\t* autoSizeTextArea now cleans up its hidden proxy elements when\n\t\t  destroyed.\n\n\t\t* inlineEditor can be told not to focus a textarea by default by\n\t\t  setting 'focusOnOpen' to false.\n\n\t\t* modalBox can place itself in an element other than <body> by\n\t\t  setting the 'container' option to the element.\n\n\t\t* modalBox takes a 'boxID' option that, if specified, will set the\n\t\t  ID of the modalBox element.\n\n\t\t* funcQueue now takes an optional context parameter for callback\n\t\t  functions. The callbacks will be invoked with 'this' set to that\n\t\t  context.\n\n\t* djblets.datagrid:\n\t\t* Data pulled from the database and rendered into cells are always\n\t\t  escaped now. Custom columns can still override this by providing\n\t\t  their own rendering. This led to an XSS vulnerability.\n\n\t\t  This is CVE-2013-4795.\n\n\t\t* Columns can now specify an image_class instead of an image_url.\n\t\t  This will render the icon as a <div> with the given CSS class name,\n\t\t  instead of rendering an <img>. It's useful when using spritesheets.\n\n\t\t* Added a JavaScript reload() function that can be called on a\n\t\t  datagrid element to trigger a dynamic reload from the server.\n\n\t* djblets.extensions:\n\t\t* Extensions can now specify their list of app directories.\n\n\t\t  An Extension subclass can define an 'apps' member variable that,\n\t\t  like INSTALLED_APPS, lists the app module paths the extension\n\t\t  uses. These will each be added to INSTALLED_APPS when enabled,\n\t\t  and removed when disabled.\n\n\t\t  If an extension does not provide 'apps', then this falls back\n\t\t  on the default behavior of only adding the extension's parent\n\t\t  app.\n\n\t\t* Extensions can now specify the author's URL.\n\n\t\t  Extension.metadata can now specify an 'Author-home-page' field,\n\t\t  which points to the URL for the author's site. This is meant to\n\t\t  distinguish between the extension's URL, and the URL for the\n\t\t  person/company/organization that created the extension.\n\n\t\t* Improved the look and feel for extension configuration.\n\n\t\t  The extension configuration pages now fit in with the admin UI\n\t\t  a lot better. They share much of the look of other admin UI\n\t\t  pages.\n\n\t\t  Furthermore, when extensions are saved, there's now feedback\n\t\t  given to the user, instead of just simply re-rendering the page.\n\n\t\t* Improved the functionality for extension configuration.\n\n\t\t  Extension configuration forms now contain all the functionality\n\t\t  of SiteSettingsForm. This include fieldsets and save blacklists\n\t\t  (which prevent a field from automatically being saved in the\n\t\t  extension settings).\n\n\t\t* Improved the list of available extensions.\n\n\t\t  The list no longer causes part of the extension description\n\t\t  to be overlapped. It also shows the author of the extension,\n\t\t  and links back to the author's site.\n\n\nversion 0.7.15 final (26-May-2013):\n\t* djblets.extensions:\n\t\t* Extension classes can now define a 'metadata' variable to override\n\t\t  the package's metadata. This uses standard PyPI metadata fields.\n\t\t  Using this, single Python package can provide several extensions.\n\n\t\t* TemplateHooks subclasses can now override a new render_to_string\n\t\t  function to do their own processing and rendering, instead of\n\t\t  simply rendering the provided template_name.\n\n\t\t* The template_name parameter to TemplateHook is now optional.\n\n\t\t* The Django template loader cache is now reset when syncing\n\t\t  extension settings or enabling/disabling an extension.\n\n\t* djblets.webapi:\n\t\t* Added a \"is_webapi_handler\" attribute to WebAPIResource.\n\n\t\t  This allows for introspection from any middleware that's going\n\t\t  to call a view. It can test if this is set on the view to know\n\t\t  whether it's calling into an API handler.\n\n\nversion 0.7.14 final (6-May-2013):\n\t* JavaScript:\n\t\t* inlineEditor now emits a \"cancel\" event when pressing OK without any\n\t\t  modifications. Previously, there was no indication that it had\n\t\t  finished.\n\n\t\t* inlineEditor's \"complete\" event now has the initialValue parameter\n\t\t  (which comes after the new value) set correctly. Previously, it was\n\t\t  always the same as the value, making it hard to determine if\n\t\t  anything had changed.\n\n\t\t* $.fn.html() now works with setting empty strings.\n\n\t* djblets.gravatars:\n\t\t* Added get_gravatar_url_for_email.\n\n\t\t  This returns the gravatar URL for a given e-mail address, rather\n\t\t  than needing a User object.\n\n\t* djblets.webapi:\n\t\t* The cache of known URI templates for a RootResource now works\n\t\t  properly when the path leading to the RootResource can change.\n\n\t\t* When serializing an object while using ?expand, any QuerySet\n\t\t  will be converted to a list. This prevents any changes from\n\t\t  happening between serializing and rendering.\n\n\nversion 0.7.13 final (26-April-2013):\n\t* djblets.log:\n\t\t* Added enhanced request logging.\n\n\t\t  This supplements Python's logging functions (logging.info, etc.)\n\t\t  to take an optional request= parameter. When passed, the logging\n\t\t  information will show some additional details (by default, the\n\t\t  username and path) related to the log entry, helping with\n\t\t  debugging.\n\n\t* djblets.siteconfig:\n\t\t* Changing and loading the site_static_url setting will now actually\n\t\t  cause static media files to be loaded from that URL.\n\n\nversion 0.7.12 final (19-April-2013):\n\t* djblets.datagrid:\n\t\t* Massively speed up datagrid rendering.\n\n\t\t  The rendering code for datagrids had a flaw where it would\n\t\t  re-populate some state for every cell, and this could be very\n\t\t  expensive. It's now reused on all cells.\n\n\t\t  We saw this with one application where a datagrid would take\n\t\t  6 seconds to render. Now it takes 0.5 seconds.\n\n\t* djblets.extensions:\n\t\t* Added an install_extension function to ExtensionManager.\n\n\t\t  This can be used to install extensions dynamically from a file\n\t\t  or URL.\n\n\t\t  Patch by Surya Nallu.\n\n\t* djblets.util.fields:\n\t\t* CounterField now allows incrementing/decrementing by values other\n\t\t  than 1.\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.util.templatetags:\n\t\t* The thumbnail and crop_image template tags now work with\n\t\t  Django Storage backends.\n\n\t\t* Added a save_image_to_storage function in djblets_images that\n\t\t  makes it easy to save image data to Storage backends.\n\n\t* djblets.webapi:\n\t\t* Resources now consider both Last Modified and ETag headers\n\t\t  simultaneously when determining if a cached payload is still\n\t\t  valid. Previously, if the Last Modified timestamps were the same,\n\t\t  the ETag check would fail.\n\n\nversion 0.7.11 final (21-February-2013):\n\t* General:\n\t\t* Require Django 1.4.5 as a minimum.\n\n\t\t  This is the latest security release of Django. For more information,\n\t\t  see https://www.djangoproject.com/weblog/2013/feb/19/security/\n\n\t* djblets.extensions:\n\t\t* \"config/\" and \"db/\" links for extensions are now generated\n\t\t  properly when specifying a custom SITE_ROOT. (Bug #2843)\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.log:\n\t\t* Added an Admin UI setting for changing log levels. This is the\n\t\t  'logging_level' setting in siteconfig, which controls\n\t\t  settings.LOGGING_LEVEL.\n\n\t\t  Patch by Raja Venkataraman.\n\n\t* djblets.siteconfig:\n\t\t* Added new 'list-siteconfig', 'get-siteconfig', and 'set-siteconfig'\n\t\t  management commands for manipulating siteconfig configuration\n\t\t  from the shell.\n\n\nversion 0.7.10 final (6-February-2013):\n\t* djblets.util.fields:\n\t\t* CounterField was failing to use the initializers for brand new\n\t\t  instances of a model, defaulting to None instead.\n\n\t\t  Patch by Raja Venkataraman.\n\n\nversion 0.7.9 final (27-January-2013):\n\t* JavaScript:\n\t\t* modalBoxes now use z-indexes of 99 and 100 for the box and content,\n\t\t  instead of 11000 and 11001.\n\n\t* djblets.datagrid:\n\t\t* Columns data by way of field access can now span field relationships.\n\t\t  For example, \"some.other.object.field\" can now be used.\n\n\t\t  Patch by Alexander Artemenko.\n\n\t* djblets.extensions:\n\t\t* Fixed a failure when clearing extension info.\n\n\t\t  Extensions that weren't properly set up yet were causing a crash\n\t\t  when attempting to reload the list of extensions.\n\n\t* djblets.siteconfig:\n\t\t* When loading the stored timezone, we're now longer setting\n\t\t  os.environ['TZ'] to that timezone. Instead, we're just activating\n\t\t  that timezone for Django only.\n\n\t\t  This works around some problems with auto-reload threads (which will\n\t\t  still be on the default timezone instead of the loaded one) and\n\t\t  importing certain Python eggs, which would end up causing file\n\t\t  timestamps relative to different timezones. That would cause\n\t\t  autoreload to kick in prematurely and break any spawned processes.\n\n\t* djblets.webapi:\n\t\t* Fixed a bug where list resources that had an unknown ID in the URL\n\t\t  could end up throwing an exception instead of returning a 404.\n\n\t\t  Patch by Niklas Hambuechen.\n\n\nversion 0.7.8 final (19-December-2012):\n\t* JavaScript:\n\t\t* Fixed a crash when enabling/disabling an inlineEditor without an\n\t\t  edit icon.\n\n\nversion 0.7.7 final (16-December-2012):\n\t* djblets.datagrid:\n\t\t* Fixed a possible XSS exploit in datagrids. Patch by\n\t\t  Alexander Artemenko.\n\n\t\t* Failures during rendering the datagrid now results in a traceback.\n\n\t* djblets.extensions:\n\t\t* Database evolutions are no longer applying using\n\t\t  evolve --hint --execute. This fixes unintentional database\n\t\t  changes elsewhere.\n\n\t* JavaScript:\n\t\t* The second display of an inlineEditor no longer breaks the size\n\t\t  of the editor.\n\n\nversion 0.7.6 final (8-December-2012):\n\t* JavaScript:\n\t\t* inlineEditor now supports changing an \"enabled\" option, allowing\n\t\t  editors to start out enabled or disabled, or dynamically change\n\t\t  that state.\n\n\t\t  Patch by Jesus Zambrano.\n\n\t* djblets.siteconfig:\n\t\t* Siteconfig now handles old-style CACHE_BACKEND values and\n\t\t  new-style CACHES[cachename] dictionaries in hte 'cache_backend'\n\t\t  setting.\n\n\t* djblets.util.cache:\n\t\t* Added normalize_cache_backend.\n\n\t\t  This can take either an old-style CACHE_BACKEND or new-style\n\t\t  CACHES[cachename] and return a valid entry for CACHES['default'].\n\n\t* djblets.webapi:\n\t\t* Added unregister_resource_for_model.\n\n\t\t  This is useful for extensions that called register_resource_for_model.\n\n\t\t  Patch by Steven MacLeod.\n\n\nversion 0.7.5 final (30-November-2012):\n\t* djblets.siteconfig:\n\t\t* Fixed a couple missing imports.\n\n\nversion 0.7.4 final (29-November-2012):\n\t* djblets.siteconfig:\n\t\t* The stored cache_backend setting is now deserialized into\n\t\t  settings.CACHES['backend']. This leaves other caches\n\t\t  unaffected and stops accessing settings.CACHE_BACKEND.\n\n\nversion 0.7.3 final (29-November-2012):\n\t* This version contains all the fixes and functionality of 0.6.27.\n\n\t* General:\n\t\t* Django 1.4.2 is now required.\n\n\t\t* All admin-related templates have been changed to better fit\n\t\t  the admin template structure and styles. This includes siteconfig\n\t\t  and logs.\n\n\t* djblets.extensions:\n\t\t* Extension lists and state are now synchronized across\n\t\t  threads/processes/servers.\n\n\t\t* Extension subclasses now must capture all variable arguments\n\t\t  (*args, **kwargs) and pass them to the parent constructor.\n\n\t\t* URLHook, admin URLs, and API resource URLs are all now added and\n\t\t  removed properly when an extension is enabled or disabled.\n\n\t* djblets.util:\n\t\t* Cache keys are now bound to the SITE_ROOT, if one is set, to\n\t\t  prevent leakage across instances. (Bug #2538)\n\n\t\t* Added DynamicURLResolver in djblets.util.urlresolvers.\n\n\t\t  This can be added to a urlpatterns list to provide an entry point\n\t\t  for dynamically adding or removing URLs on a site. This is used\n\t\t  primarily for extensions.\n\n\t* djblets.webapi:\n\t\t* API handler functions that specify allow_unknown=True in\n\t\t  @webapi_request_fields can now retrieve all extra fields as\n\t\t  an 'extra_fields' argument.\n\n\t* JavaScript:\n\t\t* The jQuery dependency has been updated to 1.8.2, and\n\t\t  jQuery-UI to 1.8.24.\n\n\t\t* inlineEditor's animation speed has increased, and is now\n\t\t  customizable through options.fadeSpeedMS.\n\n\t\t* inlineEditor now does a better job of matching the parent\n\t\t  container's bounds.\n\n\t\t* inlineEditor no longer activates when simply selecting text.\n\t\t  Patch by Dave Druska.\n\n\t\t* Added a $.fn.retinaGravatar function that, on Retina-capable\n\t\t  displays, requests a larger gravatar for the given URL\n\t\t  specified in an <img/>.\n\n\nversion 0.7.2 final (26-September-2012):\n\t* This version contains all the fixes and functionality of 0.6.24.\n\n\t* General:\n\t\t* Styled all admin UI templates to add a \"title\" class to <h1> page\n\t\t  titles. This affects extensions, log viewer, and siteconfig.\n\n\t* djblets.log:\n\t\t* Fixed the columns to match the style of other admin UI columns.\n\n\t* djblets.pipeline:\n\t\t* Our 'bless' compiler is now compatible with the latest versions of\n\t\t  pipeline.\n\n\t* JavaScript:\n\t\t* modalBox's positioning is now properly centered. It was previously\n\t\t  just off-center a bit.\n\n\nversion 0.7.1 final (3-August-2012):\n\t* Added the contrib directory to the source distribution.\n\n\t  This solves a packaging problem when not using eggs.\n\n\nversion 0.7.0 final (2-August-2012):\n\t* General:\n\t\t* Djblets now requires Django 1.4.1+.\n\n\t\t* Added localized timezone awareness. Datagrids, log generation,\n\t\t  and various utility functions now operate in the user's\n\t\t  pre-configured local timezone.\n\n\t\t* Djblets now uses Django's standard static media support.\n\t\t  It looks for bundled media files using the static support.\n\t\t  Applications must have STATIC_URL, STATIC_ROOT, etc. configured\n\t\t  correctly.\n\n\t* djblets.datagrid:\n\t\t* DateTimeColumn and DateTimeSinceColumn are now timezone-aware.\n\n\t* djblets.extensions:\n\t\t* Added a framework for supporting loadable, configurable extensions\n\t\t  in Django-based sites.\n\n\t\t  Extensions can be used to augment the functionality of a webapp.\n\t\t  Webapps can provide hooks in their codebase at any point they want\n\t\t  to extend. These can come in the form of template hooks, URLs hooks,\n\t\t  admin UI hooks, and other in-process hooks.\n\n\t\t  A webapp will provide a single ExtensionManager, specifying the name\n\t\t  of a Python setuptools entrypoint. This entrypoint will be scanned\n\t\t  for any installed packages on the system that provide Extension\n\t\t  subclasses. Integration in the Administration UI is provided by\n\t\t  linking to the provided admin URLs.\n\n\t\t  WebApps will typically only have a single ExtensionManager, but it is\n\t\t  possible for it to have multiple ExtensionManagers, allowing\n\t\t  different modules to provide their own extension mechanisms.\n\n\t\t  Extensions themselves can depend on other extensions. Dependency\n\t\t  resolution happens automatically when enabling extensions.\n\n\t\t  Extensions also have easy support for configuration forms in the\n\t\t  admin UI. All data is automatically loaded and stored in the\n\t\t  database.\n\n\t\t  This is an experimental feature, and at this point we are not\n\t\t  guaranteeing compatibility between 0.7.x releases. 0.8 will have\n\t\t  a stable API.\n\n\t* djblets.util:\n\t\t* ModificationTimestampField, http_date, and the the ageid filter have\n\t\t  been made timezone-aware.\n\n\t\t* Added a TimeZoneField, which displays all known timezones for\n\t\t  selection. The timezones come from the pytz module, which is now\n\t\t  a dependency of djblets.\n\n\nversion 0.6.31 final (11-October-2013):\n\t* djblets.webapi:\n\t\t* Added a has_list_access_permissions function, which is used to\n\t\t  determine access to a list resource.\n\n\nversion 0.6.30 final (10-October-2013);\n\t* Security updates:\n\t\t* JSONField now corrects incorrectly stored contents in a safer way,\n\t\t  to remove the risk of any exploits in a JSON payload.\n\n\t\t  This is CVE-2013-4409, and was reported and patched by\n\t\t  Frederik Braun.\n\n\nversion 0.6.29 final (27-July-2013):\n\t* djblets.datagrid:\n\t\t* Data pulled from the database and rendered into cells are always\n\t\t  escaped now. Custom columns can still override this by providing\n\t\t  their own rendering. This led to an XSS vulnerability.\n\n\t\t  This is CVE-2013-4795.\n\n\nversion 0.6.28 final (20-February-2013):\n\t* General:\n\t\t* Require Django 1.3.7 as a minimum.\n\n\t\t  This is the latest security release of Django. For more information,\n\t\t  see https://www.djangoproject.com/weblog/2013/feb/19/security/\n\n\t* djblets.datagrid:\n\t\t* Fixed a possible XSS exploit in datagrids. Patch by Alexander\n\t\t  Artemenko.\n\n\t\t* Failures during rendering the datagrid now results in a traceback.\n\n\t* djblets.util.fields:\n\t\t* CounterField was failing to use the initializers for brand new\n\t\t  instances of a model, defaulting to None instead.\n\n\t\t  Patch by Raja Venkataraman.\n\n\nverrsion 0.6.27 final (24-November-2012):\n\t* djblets.gravatars:\n\t\t* The gravatar URL used for HTTPS connections now uses\n\t\t  https://secure.gravatar.com and not https://www.gravatar.com.\n\n\t* djblets.webapi:\n\t\t* The allowed_mimetypes list in WebAPIResource is no longer\n\t\t  getting polluted with every WebAPIResource's allowed item and list\n\t\t  mimetypes.\n\n\nversion 0.6.26 final (5-November-2012):\n\t* djblets.gravatars:\n\t\t* Added a get_gravatar_url() function, which can be used to get\n\t\t  the URL for a user's gravatar without generating HTML.\n\n\t\t* Made gravatar support smart enough to choose an HTTP vs. HTTPS\n\t\t  URL, depending on what was used to access the page. (Bug #2768)\n\n\t* djblets.webapi:\n\t\t* generate_etag() and serialize_*_field() functions now take a\n\t\t  request parameter.\n\n\t\t  This requires that all callers update their serialize_*_field()\n\t\t  functions to take a **kwargs parameter.\n\n\t\t  This breaks backwards-compatibility, but is a necessary change.\n\n\t\t* Resource handler functions that provide default values for\n\t\t  parameters can now expect those to be used. Previously, when\n\t\t  a parameter to the API wasn't provided, the value passed would\n\t\t  be None.\n\n\nversion 0.6.25 final (27-October-2012):\n\t* General:\n\t\t* Require Django 1.3.4.\n\n\t\t  This is a simple release that just bumps our Django requirement,\n\t\t  in order to not have issues with consumers depending on the\n\t\t  latest security release in the 1.3.x branch.\n\n\nversion 0.6.24 final (25-September-2012):\n\t* djblets.feedview:\n\t\t* We now use the latest upstream of feedparser instead of an older\n\t\t  bundled version. This keeps us updated and prevents a security\n\t\t  issue with the version we shipped.\n\n\nversion 0.6.23 final (24-September-2012):\n\t* General:\n\t\t* We now require Django 1.3.3.\n\n\t\t  Previous versions claimed to work with Django 1.1.1 or higher,\n\t\t  but for the remainder of the 0.6.x line, we plan to stay only on\n\t\t  Django 1.3.x.\n\n\t\t  For Django 1.4+ support, use the latest 0.7.x releases.\n\n\t* djblets.util:\n\t\t* Added djblets.util.humanize.\n\n\t\t  This currently contains a humanize_list function. It's the same\n\t\t  as the template filter we provide, but is a bit nicer to include\n\t\t  and work with than a filter.\n\n\t* djblets.webapi:\n\t\t* Added an Item-Content-Type header to web API responses for\n\t\t  list resources.\n\n\t\t  This header contains the mimetype for the items in the list, making\n\t\t  it possible to determine what to use when fetching the items. The\n\t\t  documentation has been updated on how to use this.\n\n\nversion 0.6.22 final (31-July-2012):\n\t* djblets.util:\n\t\t* User and AnonymousUser are no longer imported globally in\n\t\t  the djblets_utils templatetags. This fixes some breakages in\n\t\t  apps that imported this file to get access to filters, but weren't\n\t\t  running in a Django settings environment.\n\n\nversion 0.6.21 final (24-July-2012):\n\t* djblets.util:\n\t\t* Fixed a bug with ifuserorperm and non-int IDs.\n\n\nversion 0.6.20 final (21-July-2012):\n\t* djblets.datagrid:\n\t\t* Improved performance of the datagrids.\n\n\t\t  Datagrids now fetch all needed ForeignKey-related objects in one\n\t\t  go, instead of having one query per unique object. This can reduce\n\t\t  the query count substantially.\n\n\t* djblets.util:\n\t\t* The ifuserorperm template tag now accepts both IDs and User\n\t\t  objects, allowing comparisons to be made without fetching the\n\t\t  User.\n\n\nversion 0.6.19 final (11-June-2012):\n\t* JavaScript:\n\t\t* inlineEditor no longer bubbles keypress events up. This helps prevent\n\t\t  problems with global key handlers being greedy.\n\n\nversion 0.6.18 final (5-June-2012):\n\t* djblets.siteconfig:\n\t\t* Settings form rows in the template now have IDs indicating the row\n\t\t  (in the form of \"row-{{fieldname}}\") and CSS class names\n\t\t  (\"field-{{fieldname}}\").\n\n\t\t* Help text for fields are now marked as safe, so that the contents\n\t\t  aren't escaped.\n\n\t\t* The form's disabled_reasons is no longer assumed to be populated.\n\n\t\t* The initial field values are now always set. Previously, they would\n\t\t  only be set if the field type was a boolean, or the value didn't\n\t\t  evaluate to false, which broke numeric fields set to 0.\n\n\t* djblets.util:\n\t\t* Added a json_dumps filter, which serialized a value to JSON.\n\n\nversion 0.6.17 final (2-April-2012):\n\t* djblets.gravatars:\n\t\t* Gravatars are no longer hard-coded to be jpegs. This was\n\t\t  breaking some gravatars.\n\n\t* JavaScript:\n\t\t* inlineEditor now has a showRequiredFlag option for indicating if\n\t\t  a field is required.\n\n\t\t  No validation is done on this, but an asterisk is displayed in\n\t\t  order to indicate that it's required.\n\n\t\t  Patch by Yazan Medanat.\n\n\t\t* inlineEditor now indicates when its dirty state changes.\n\n\t\t  A new \"dirtyStateChanged\" signal is emitted whenever the dirty\n\t\t  state changes, which happens as the result of a number of\n\t\t  different events. Looking up the dirty state is now cheaper, as\n\t\t  it's calculated when needed instead of on lookup.\n\n\t\t  Patch by Jim Chen.\n\n\nversion 0.6.16 final (26-February-2012):\n\t* djblets.datagrid:\n\t\t* Removed an extraneous </span> in the paginator.\n\t\t* Fixed a compatibility issue with Django 1.4 in the queries.\n\n\t* djblets.util:\n\t\t* Fix parsing of tokens in a blocktag in Django 1.4.\n\n\t\t  We were failing to pass a tuple to parser.parse() when specifying the\n\t\t  end tags for a block tag. Somehow this never bit us before, but a\n\t\t  seemingly unrelated change in Django 1.4 triggered this broken\n\t\t  behavior, making all custom blocktags break.\n\n\t\t  This led to some false-positives in other fixes, where it seemed that\n\t\t  removing custom tags starting with \"if\" solved things. In reality, it\n\t\t  didn't solve anything. It just masked the problem.\n\n\t\t  This change should be compatible with all versions of Django.\n\n\t* djblets.webapi:\n\t\t* Add support for resource-specific mimetypes.\n\n\t\t  A common method for REST services is to have payloads returned with\n\t\t  resource-specific mimetypes. These can help to identify the format of\n\t\t  a payload (useful for automatic bindings) without having to inspect\n\t\t  the URI.\n\n\t\t  This adds support for easily telling a resource to return such\n\t\t  mimetypes.  If mimetype_vendor is specified, WebAPIResource can\n\t\t  populate the accepted mimetypes list with some\n\t\t  vendor/resource-specific mimetypes that will be used by default for\n\t\t  any responses.\n\n\t\t  When there's a vendor mimetype, the resources will use the resource\n\t\t  names for the mimetypes, but these can be overridden using\n\t\t  mimetype_list_resource_name and mimetype_item_resource_name.\n\n\t\t* Accept \"true\" as a valid boolean value in the web API.\n\t\t  Patch by Jim Chen.\n\n\nversion 0.6.15 final (13-December-2011):\n\t* djblets.pipeline:\n\t\t* Replaced the djblets.compress module with djblets.pipeline.\n\n\t\t  django-compress was deprecated shortly after our 0.6.14 release, with\n\t\t  django-pipeline being the successor. As such, we've decided to get rid of\n\t\t  the djblets.compress support and just replace it with equivalent pipeline\n\t\t  support.\n\n\t\t  We're not aware of any projects this will break.\n\n\t* djblets.util:\n\t\t* Fixed Django 1.4 compatibility.\n\n\t\t  djblets.util.misc was importing RegexURLPattern from a location that\n\t\t  no longer worked. This has been updated to use the proper import path.\n\n\nversion 0.6.14 final (9-November-2011):\n\t* djblets.compress:\n\t\t* Added a new filters for django-compress that handles lesscss\n\t\t  (http://lesscss.org) files and automatically converts/deploys as\n\t\t  CSS.\n\n\t\t* Added new templates for django-compress that handles the\n\t\t  MEDIA_SERIAL suffix.\n\n\t* djblets.siteconfig:\n\t\t* The settings template now allows fields to not have a label by\n\t\t  setting \"fields_no_label\" to True in the form class. Patch by\n\t\t  Hongbin Lu.\n\n\t* djblets.webapi:\n\t\t* Fixed authentication failures when \":\" was in the password.\n\t\t  Patch by Dave Druska. (Bug #2334)\n\n\t* djblets.util:\n\t\t* The jQuery and jQuery-UI versions are now referenced in only one\n\t\t  place, in js/jquery.html and js/jquery-ui.html. Other templates\n\t\t  can include these and keep up-to-date with the versions Djblets\n\t\t  provides.\n\n\t\t  Projects can override these templates to provide their own\n\t\t  hard-coded versions.\n\n\t\t  In the next release, these will switch to the Google CDN by default.\n\n\nversion 0.6.13 final (7-October-2011):\n\t* djblets.log:\n\t\t* Include the HTTP method in the new page request logs.\n\n\t* djblets.util:\n\t\t* Moved controlled_subprocess into djblets.util.contextmanagers.\n\n\t\t  This makes it easier to selectively import on Python 2.4.\n\n\t\t* Fixed a syntax error in controlled_subprocess on Python 2.4 and 2.5.\n\n\nversion 0.6.12 final (6-October-2011):\n\t* djblets.log:\n\t\t* Allow logging page access times.\n\n\t\t  If settings.LOGGING_PAGE_TIMES is set to True, page access times\n\t\t  (along with HTTP method, URL, and user) are logged. This can be\n\t\t  handy in tracking performance problems and blocked page loads.\n\n\t* djblets.util:\n\t\t* Added a controlled_subprocess context manager for Python 2.5+.\n\n\t\t  This is useful for using subprocess.Popen on a process that may end\n\t\t  up blocking. It ensures that a blocked process will terminate.\n\n\t\t  This is experimental and may change in behavior, or move to a new\n\t\t  file.\n\n\t\t  Patch by Mike Conley.\n\n\t* djblets.webapi:\n\t\t* API authorization failures, misparsed headers, and authorization\n\t\t  attempts are now logged.\n\n\nversion 0.6.11 final (10-September-2011):\n\t* djblets.testing:\n\t\t* Added a new TestCase class and @add_fixtures decorator for\n\t\t  having fixtures specific to text functions.\n\n\t* djblets.util:\n\t\t* Fixed defaults on counter fields on new model instances.\n\n\t\t  Counter fields on new model instances were being set to 0, preventing\n\t\t  them from recomputing the next time they're accessed. This would\n\t\t  cause any new models to be incorrect. They're now initialized to\n\t\t  NULL instead. (Bug #2268)\n\n\nversion 0.6.10 final (20-August-2011):\n\t* djblets.datagrid:\n\t\t* Log failed attempts at finding cell templates, in order to aid\n\t\t  debugging.\n\n\t* djblets.feedview:\n\t\t* Don't fail with an uncaught exception if loading an RSS feed fails.\n\t\t  (Bug #2189)\n\n\t\t  If loading the RSS feed fails (if it's behind a proxy, for example),\n\t\t  feedview would raise an error. Now it provides the error data for\n\t\t  the caller to render.\n\n\t* djblets.log:\n\t\t* Fixed a date range calculation bug in the log viewer. (Bug #2218)\n\n\t\t  The \"This Month\" view in the log viewer was broken due to it\n\t\t  attempting to use the beginning of the date range calculated, which\n\t\t  was 0, instead of 01.  Since we can assume the start of the month\n\t\t  will continue to be 1 for the foreseeable future, we can just\n\t\t  hardcode this and be safe.\n\n\t\t  Patch by Lee Loucks.\n\n\t* djblets.util:\n\t\t* Added a make_cache_key function for generating usable cache keys.\n\n\t\t  The make_cache_key function generates a cache key guaranteed to be\n\t\t  able to fit inside the memcached key length restrictions. It will\n\t\t  generate a MD5 hash of the key if it exceeds the length.\n\n\t\t  This is the same logic that cache_memoize uses to build the keys.\n\t\t  It can be used to perform other operations on that key.\n\n\t\t  Patch by Vlad Filippov.\n\n\t\t* Allow JSONField to store up to 4GB of data on MySQL. (Bug #1481)\n\n\t\t  JSONField on MySQL was hard-coding the \"TEXT\" column type,\n\t\t  allowing only 64KB of data. Now it uses the default for Django's\n\t\t  TextField, which is 4GB.\n\n\t\t  This won't break compatibility with existing fields, but those\n\t\t  fields won't gain the benefits. To update an existing field on\n\t\t  MySQL, you will need to perform the following:\n\n\t\t      ALTER TABLE table_name MODIFY field_name LONGTEXT;\n\n\t\t* Fixed a storage problem with large cache data. (Bug #1660)\n\n\t\t  Large cache data was encoded incorrectly, causing anything stored to\n\t\t  become unloadable, meaning it'd have to be recomputed. This was due\n\t\t  to a string being stored for all but the last chunk, instead of a\n\t\t  string wrapped in a list.  This affects any data that, after being\n\t\t  picked and zlib-compressed, is over 1MB in size.\n\n\t* djblets.webapi:\n\n\t\t* Make it easier to debug invalid data types in @webapi_request_fields.\n\n\t\t  If using an invalid data type in the @webapi_request_fields listing,\n\t\t  you'd see a cryptic error being raised. Now the field is ignored\n\t\t  and an error is logged.\n\n\nversion 0.6.9 final (21-July-2011):\n\t* djblets.auth:\n\t\t* Add optional first and last name fields to RegistrationForm.\n\n\t\t* Prevent occasional errors when calling delete_test_cookie().\n\n\t\t  Sometimes validate_test_cookie() will work and then delete\n\t\t  delete_test_cookie() will throw an error. If the test cookie is\n\t\t  already gone from the session, we no longer care if it fails to\n\t\t  be deleted.\n\n\t* djblets.datagrid:\n\t\t* Fixed an occasional crash due to id_list not being set. (Bug #1526)\n\n\t\t* Fixed an occasional rendering error caused by a 'None' object being\n\t\t  rendered.\n\n\t\t* Changing datagrid columns no longer loses the current page you're on,\n\t\t  or other view settings. Patch by Simon Wu.\n\n\t* djblets.util:\n\t\t* Added a ifnotuserandperm template tag, which is the negation of\n\t\t  ifuserandperm. Patch by Hongbin Lu.\n\n\t* djblets.webapi:\n\t\t* Add support for browser-side caching of webapi resources.\n\n\t\t  WebAPIResource now has a few new properties and methods for handling\n\t\t  browser-side caching. Resources can handle Last Modified timestamps\n\t\t  or ETags, and generate them either based on fields or through custom\n\t\t  functions.\n\n\t\t  This can speed up access to resources, improving performance both\n\t\t  client-side and server-side.\n\n\t* JavaScript:\n\t\t* Prompt when canceling a dirty inlineEditor by default. (Bug #2096)\n\n\t\t  inlineEditor now prompts the user if they cancel via Escape or the\n\t\t  Cancel button when the editor is dirty. The user has a chance to\n\t\t  change his mind instead of just losing everything he wrote. This can\n\t\t  be turned off per-inlineEditor.\n\n\t\t* Support Control-S for saving on inlineEditors. (Bug #1958)\n\n\t\t  When editing a long block of text on an edit field, it's handy to be\n\t\t  able to save periodically. Now, pressing Control-S will now trigger a\n\t\t  save without closing the field. Patch by Hongbin Lu.\n\n\nversion 0.6.8 final (23-June-2011):\n\t* djblets.datagrid:\n\t\t* Fixed an occasional ValueError with the datagrid.\n\n\t\t  On occasion, the \"active\" state of a column can sometimes be\n\t\t  True when the column isn't in self.datagrid.columns, which meant\n\t\t  it would throw a ValueError when trying to remove itself from the\n\t\t  list. We're more bullet-proof now.\n\n\t* djblets.gravatars:\n\t\t* The gravatar templatetag no longer errors out if the provided user\n\t\t  is anonymous.\n\n\t* djblets.log:\n\t\t* The \"Logging to...\" lines are now only logged when settings.DEBUG\n\t\t  is on.\n\n\t* djblets.util:\n\t\t* JSONField no longer errors out if blank=False is used. (Bug #2015)\n\n\t\t* Fixed escaping of label names in label_tag() on newer versions\n\t\t of Django.\n\n\t* djblets.webapi:\n\t\t* Fixed a problem when settings.WEB_API_ENCODERS isn't set.\n\n\t\t  Our fallback for when this setting wasn't set was broken, causing\n\t\t  new errors.\n\n\nversion 0.6.7 final (9-January-2011):\n\t* djblets.datagrid:\n\t\t* The datagrids now use a RequestContext when rendering cells, allowing\n\t\t  the columns or templates to access data from context processors.\n\n\t* djblets.siteconfig:\n\t\t* The form body of a siteconfig settings page can now be replaced.\n\t\t  It's now stored in the \"form_content\" block.\n\n\t\t* SiteConfigurationManager no longer crashes if trying to clear\n\t\t  the cache for a SiteConfiguration that no longer exists.\n\n\t* djblets.testing:\n\t\t* The Selenium test suite has been updated to support Django 1.2's\n\t\t  multi-database support. Previously, fixtures would fail to load\n\t\t  if using the new settings.DATABASES variable.\n\n\t* djblets.util:\n\t\t* The @augment_method_from decorator wasn't properly calling up the\n\t\t  decorator chain, preventing some decorators from being invoked. This\n\t\t  has been fixed to ensure all decorators are called.\n\n\t* djblets.webapi:\n\t\t* Due to the @augment_method_from breakage listed above, webapi\n\t\t  decorators could fail to add their own checks, causing various\n\t\t  problems in field checking and authentication. This is now fixed.\n\n\t\t* The Permission Denied (HTTP 403) errors being returned weren't\n\t\t  sufficient for clients that weren't authenticated. Now, an\n\t\t  unauthenticated client will instead see Not Logged In (HTTP 401)\n\t\t  errors.\n\n\t\t* The HTTP_AUTHORIZATION header is now checked on all requests. When\n\t\t  provided by the client, it will be used for authentication. This\n\t\t  means that clients can now force a login from their very first\n\t\t  request on, instead of requiring a HTTP 401 Unauthorized being\n\t\t  sent out first.\n\n\t\t  This will also prevent multiple logins across different requests\n\t\t  from the same client, when the HTTP_AUTHORIZATION header is passed\n\t\t  on each request. This makes requests less heavy-weight and prevents\n\t\t  the last_login timestamp on the User from being updated on each\n\t\t  request.\n\n\t\t  As part of this change, any webapps manually using the\n\t\t  @webapi_login_required decorator without the new resource code\n\t\t  will no longer support HTTP Basic auth. However, this was never\n\t\t  a supported feature anyway, and was more there by accident.\n\n\t\t* The 'api_format' parameter in requests is now treated specially\n\t\t  and doesn't trigger any invalid attribute errors during field\n\t\t  validation.\n\n\t\t* WebAPIResource.delete now uses get_object instead of fetching\n\t\t  the object directly, which simplifies the function and guarantees\n\t\t  that the correct object is used (especially when a resource\n\t\t  overrides get_object).\n\n\t\t* Redirects now preserve any special parameters (\"callback\",\n\t\t  \"_method\", \"expand\", and \"api_format\") passed to the request.\n\t\t  This works around problems in HTTP implementations that don't\n\t\t  allow the caller to know that redirects occurred (such as major\n\t\t  browsers), which would lead to this information being stripped and\n\t\t  the wrong results being returned.\n\n\t\t* The \"expand\" parameter for expanding links in payloads is now\n\t\t  supported for POST and PUT requests.\n\n\nversion 0.6.6 final (22-November-2010):\n\t* djblets.util:\n\t\t* Fixed a compatibility problem with JSONField and Django 1.1. It\n\t\t  was assuming support for Django 1.2's multi-database support.\n\n\t\t* Fixed multi-database support in Django 1.2 with JSONField, where\n\t\t  the default connection was always being used in one case.\n\n\nversion 0.6.5 final (20-November-2010):\n\t* djblets.datagrid:\n\t\t* MEDIA_SERIAL is now used for all the images in the datagrid\n\t\t  template. Patch by Ben Hollis.\n\n\t* djblets.util:\n\t\t* Added a @root_url decorator for use with get_absolute_url\n\t\t  implementations, which appends SITE-ROOT to any returned URLs.\n\n\t\t* Added a CounterField for atomically updating counters.\n\n\t\t  CounterField can be used to atomically increment or decrement\n\t\t  an integer stored in the database, on individual models or\n\t\t  on many models at a time. It's intended to substitute for\n\t\t  potentially expensive or numerous SQL queries that retrieve\n\t\t  counts of objects.\n\n\t\t* Updated the custom fields for Django 1.2 multi-database\n\t\t  compatibility.\n\n\t* djblets.webapi:\n\t\t* Fixed a bug in serializing 'long' values in XML.\n\n\t\t* Resources now Vary on HTTP Accept, meaning that the browser won't\n\t\t  cache the wrong response type when accessing the same resource\n\t\t  with two different requested mimetypes.\n\n\t\t* Reduced the SQL query count for resources.\n\n\t\t* Fixed problems that could occur with URLs when serializing objects in\n\t\t  a list and when returning links.\n\n\nversion 0.6.4 final (14-September-2010):\n\t* djblets.testing:\n\t\t* An undefined variable error when using the Selenium test support\n\t\t  has been fixed.\n\n\t* djblets.util:\n\t\t* Added an augment_method_from decorator for augmenting existing\n\t\t  functions.\n\n\t\t  This allows a subclass to augment a parent class's function's\n\t\t  documentation and decorators. The existing decorators are\n\t\t  automatically inherited. Where this becomes useful is where you have\n\t\t  several classes that share common logic, but may need further\n\t\t  restrictions or new documentation.\n\n\t\t  The defined function is meant to have an empty body (or 'pass'),\n\t\t  but it can contain code wich will be executed after the parent\n\t\t  function. No returned values will be used, however.\n\n\t* djblets.webapi:\n\t\t* When serializing a dictionary in a webapi response into XML, we\n\t\t  now properly serialize keys that are integers. They are serialized\n\t\t  as <int value=\"...\">.\n\n\t\t* Fixed a circular dependency that occured between resources.py,\n\t\t  encoders.py, and core.py (depending on which was first imported).\n\n\t\t* The User resource now accepts a '.' in the username.\n\n\t\t* List-only resources now always have their get_list function called,\n\t\t  regardless of whether it had list_child_resources defined.\n\n\t\t* Singleton resources (resources that exist as a single child item\n\t\t  with no object list) must now have the 'singleton' parameter set\n\t\t  to 'True'.\n\n\t\t* HTTP Accept mimetypes and ?api_format= are now supported properly\n\t\t  for resources.\n\n\t\t* Specifying api_format in POST requests now works.\n\n\t\t* Resource classes instances can now be queried by class, using\n\t\t  the get_resource_from_class function.\n\n\t\t* Resource classes can now be introspected:\n\n\t\t\t* Functions can list which error classes the client can expect\n\t\t\t  to receive using the @webapi_response_errors decorator. It can\n\t\t\t  be queried using function.response_errors.\n\n\t\t\t* The list of fields that can or must be specified for\n\t\t\t  HTTP GET/PUT/POST can now be queried. It can be queried using\n\t\t\t  function.required_fields and function.optional_fields.\n\n\t\t\t* Usage of @webapi_login_required can now be checked by accessing\n\t\t\t  function.login_required.\n\n\t\t\t* The list of fields on a resource should now be a dictionary,\n\t\t\t  which can include a description of the field.\n\n\t\t\t* The custom links on a resource can now be explicitly listed\n\t\t\t  by overriding the get_related_links function.\n\n\nversion 0.6.3 final (4-July-2010):\n\t* djblets.testing:\n\t\t* Fixed Selenium unit testing to properly skip the tests when\n\t\t  the Selenium server was down.\n\n\t* djblets.util:\n\t\t* Added utility functions for HTTP Accept-based content negotation.\n\n\t\t  This adds new get_http_requested_mimetype and get_http_accept_lists\n\t\t  functions for doing content negotiation using the HTTP Accept request\n\t\t  header. This header allows clients to tell the server which mimetypes\n\t\t  it accepts or explicitly forbids, based on priorities, so that the\n\t\t  server can send the right data. This can allow a single URL to return\n\t\t  various forms of data based on the client (HTML, PDF, JSON, etc.).\n\n\t\t  The get_http_accept_lists() function parses the HTTP Accept request\n\t\t  header and returns sorted lists of acceptable mimetypes and\n\t\t  unacceptable mimetypes.  These are sorted based on the priorities in\n\t\t  the header.\n\n\t\t  The get_http_requested_mimetype() function takes a HttpRequest and a\n\t\t  list of supported mimetypes for that URL and then, based on the\n\t\t  results of get_http_accept_lists() and the supported mimetypes,\n\t\t  determines what mimetype the server should be using. If nothing is\n\t\t  supported, it will return None, and the server is expected to return\n\t\t  a HttpResponseNotAcceptable.\n\n\t* JavaScript:\n\t\t* This adds some stuff to gravy to make sites work better on the\n\t\t  iPhone/iPad versions of Safari.  A new $.proxyTouchEvents function\n\t\t  has been added, which causes touch screen events to be forwarded to\n\t\t  existing mouse event handlers. It's intended for basic use cases\n\t\t  where multi-touch events really don't need to be handled.\n\n\t\t* $.browser has been updated with a 'mobileSafari' check, making it\n\t\t  easier to determine whether we're running on the iPhone/iPad.\n\n\t\t* A workaround for jQuery bug #6446 has been implemented, which\n\t\t  basically fixes an issue with the result from $.offset() being\n\t\t  incorrect.\n\n\t\t* Tooltips are disabled on iPhone/Pad, as they're really not at all\n\t\t  useful and their hover events manage to get in the way of other\n\t\t  events.\n\n\nversion 0.6.2 final (13-May-2010):\n\t* djblets.log:\n\t\t* Fix a compatibility error with Python 2.4 and 2.5.\n\n\nversion 0.6.1 final (12-May-2010):\n\t* djblets.webapi:\n\t\t* Fixed a regression with the webapi auth handlers. They weren't\n\t\t  accepting the right arguments.\n\n\nversion 0.6.0 final (11-May-2010):\n\t* djblets.datagrid:\n\t\t* Fixed rendering issues with columns in the datagrids.\n\n\t\t  Adding columns to a datagrid would cause odd rendering issues. This\n\t\t  was due to not including the 'last' flag (indicating the last\n\t\t  column, in order to position the Edit Columns column properly) in\n\t\t  the cache key. We now add the key, which allows the datagrid to\n\t\t  render properly when adding or removing columns.\n\n\t\t* Fixed over-caching of columns.\n\n\t\t  There were a couple bugs where Djblets cached the rendered columns\n\t\t  too aggressively, causing links on cells to point to the wrong\n\t\t  addresses and columns to render incorrectly based on previous loads.\n\t\t  (Bug #1582)\n\n\t* djblets.log:\n\t\t* Switched the logging setup code to use a WatchedFileHandler,\n\t\t  which automatically reopens the log files for writing when they're\n\t\t  deleting (such as after log rotation).\n\n\t* djblets.testing:\n\t\t* Added the new djblets.testing module, which houses our old unit\n\t\t  testing helpers from djblets.util.testing.\n\n\t\t* Added new Selenium test suite support for automated browser\n\t\t  testing.\n\n\t* djblets.webapi:\n\t\t* Added a new resource-based model for doing more RESTful APIs.\n\n\t\tThis introduces a new class for easily creating RESTful URL resources\n\t\tthat can handle standard HTTP methods and return meaningful data in a\n\t\tnicely constructed hierarchy.\n\n\t\tBy using WebAPIResource, a site can offer a very clean set of URLs to\n\t\twork with any object.\n\n\t\tThere's a lot to this object, but it's all covered in the extensive\n\t\tdocumentation in webapi/resources.py.\n\n\nversion 0.5.9 final (28-March-2010):\n\t* djblets.util:\n\t\t* cache_memoize now converts all keys to plain strings, instead of\n\t\t  allowing unicode to be passed to the backend. Not all cache\n\t\t  backends allow for unicode keys.\n\n\t* djblets.siteconfig:\n\t\t* The same change for cache keys was made here as well.\n\n\t* djblets:\n\t\t* Added ez_setup.py to the source distribution.\n\t\t* Added djblets.__version__ and djblets.__version_info__.\n\t\t  __version__ is a variable containing the results of\n\t\t  djblets.get_package_version(), and __version_info__ contains\n\t\t  the version parts in a tuple.\n\n\nversion 0.5.8 final (27-March-2010):\n\t* djblets.datagrid:\n\t\t* Made many more speed improvements in the datagrids.\n\n\t\t  This builds upon the previous set of improvements.\n\n\t\t  We now parse and cache the cell and header templates before any\n\t\t  rendering is done, instead of doing it once per cell.\n\n\t\t  We also cache cells by their displayed content, so that two cells\n\t\t  that would show the same rendered data will only render once.\n\t\t  This is especially useful for cells showing such things as\n\t\t  usernames.\n\n\t\t  This can easily take seconds off the load of a heavy datagrid.\n\n\t\t* Objects in the datagrid with custom primary keys that aren't named\n\t\t  'id' now work.\n\n\t\t* The Edit Columns icon is now a pencil instead of just \"...', making\n\t\t  it easier to see it and figure out its purpose. (Bug #910)\n\n\t* djblets.feedview:\n\t\t* The feedparser library is now only imported when needed. This\n\t\t  reduces startup time for requests by as much as a quarter of a\n\t\t  second, as feedparser is a very large library and takes time to\n\t\t  import.\n\n\t\t  This should improve performance for any site that at all lists\n\t\t  djblets.feedview in INSTALLED_APPS, even for pages not making use\n\t\t  of feedview.\n\n\t* djblets.siteconfig:\n\t\t* The stale settings issue appears to be fixed in this release. It\n\t\t  needs more testing in large deployments, but we've identified a\n\t\t  couple cases that would cause this problem and have fixed them.\n\n\t\t* The mail authentication information is now saved as plain strings\n\t\t  instead of unicode strings in order to fix a compatibility issue\n\t\t  with Python 2.6's HMAC library.\n\n\t\t* The SiteConfiguration's settings field is now read-only in the\n\t\t  Django administration UI in Django 1.2.\n\n\t* djblets.webapi:\n\t\t* WebAPIErrors can now take HTTP status codes that will be sent to\n\t\t  the browser. These default to 400, though the built-in errors may\n\t\t  define different codes.\n\n\t\t  This change does break backwards-compatibility if a client calling\n\t\t  the API makes the assumption that every result with a payload will\n\t\t  be an HTTP 200 OK. Clients shouldn't make these assumptions, but\n\t\t  it's possible that they do.\n\n\t\t* Added support for Basic HTTP Authentication.\n\n\t\t  Clients making a call when not logged in to a restricted URL will\n\t\t  now get an HTTP 401 Unauthorized, along with a WWW-Authentication\n\t\t  header specifying that Basic Auth is to be used.\n\n\t\t  Clients can use standard Basic Auth to pass credentials to any\n\t\t  URL requiring such authorization in order to log in. This removes\n\t\t  the need for special login URLs.\n\n\t\t  This makes APIs more accessible to applications like wget or\n\t\t  curl.\n\n\t\t* Added an easy way to do pagination with the web API.\n\n\t\t  API calls returning lists of data can now paginate the results,\n\t\t  returning only a certain amount of data. The results and the\n\t\t  total number of items across all pages will be returned.\n\n\t\t  URLs are provided in the resulting JSON payload that point to the\n\t\t  previous or next queries. Callers can pass a 'start' parameter to\n\t\t  the URL to specify the first item's index (0-based), and\n\t\t  'max-results' to specify the maximum number of items it wants in\n\t\t  that request (which may be capped server-side).\n\n\nversion 0.5.7 final (14-February-2010):\n\t* djblets.datagrid:\n\t\t* Columns in datagrids can now augment the queryset before actually\n\t\t  querying the database. This allows them to prefetch information\n\t\t  instead of having to do a query per-row.\n\n\t\t  This also now by default globally caches the resulting data in\n\t\t  Column.render_data if displaying a foreign key. This means that if\n\t\t  several rows are all referencing the same User object, for instance,\n\t\t  there will be only one query for that object instead of one per row.\n\n\t* djblets.log:\n\t\t* Add a title to the Server Log page.\n\n\t* djblets.util:\n\t\t* Fixed image cropping with the new Django storage support.\n\n\t\t  Python Image Library was confused about the format to save the\n\t\t  resulting image in when cropping. We now pass in the appropriate\n\t\t  format in order to allow it to save. We also log any failures that\n\t\t  may come up. (Bug #1396)\n\n\t* JavaScript:\n\t\t* Allow the classes in modalBox to be customized on a per-instance\n\t\t  basis, allowing for more custom types of modalBoxes (such as a\n\t\t  specially stylized help box). Patch by Hussain Bohra.\n\n\t\t* Added a new $.fn.scrollIntoView function. This will ensure that the\n\t\t  target element is visible on-screen.\n\n\nversion 0.5.6 final (15-November-2009):\n\t* djblets.auth:\n\t\t* RegistrationForm now takes in a request.\n\t\t* Extra context can be passed to the template for the registration\n\t\t  form.\n\n\nversion 0.5.5 final (22-October-2009):\n\t* JavaScript:\n\t\t* Fix a bug on Internet Explorer when setting the white-space\n\t\t  property on an auto-size text area. (Bug #1349)\n\n\nversion 0.5.4 final (4-October-2009):\n\t* djblets.datagrid:\n\t\t* Compatibility updates for the Django 1.2 development branch.\n\n\t* JavaScript:\n\t\t* On Google Chrome, the text areas would grow by a line with every key\n\t\t  pressed. Patch by Cory McWilliams. (Bug #1145)\n\n\t\t* On Safari 4, the text areas wouldn't auto-resize based on text.\n\n\t\t* On Firefox, the text areas would shrink too much when deleting text.\n\n\nversion 0.5.3 final (17-September-2009):\n\t* djblets.siteconfig:\n\t\t* Updated to work with Django 1.1's admin UI stylesheets.\n\n\nversion 0.5.2 final (15-September-2009):\n\t* General:\n\t\t* Added copyright and MIT license headers to all files.\n\n\t* JavaScript:\n\t\t* inlineEditors now prevent the event from bubbling up when\n\t\t  clicking their target element. This means that a target element\n\t\t  inside of an <a href=\"...\"> will no longer cause the page to\n\t\t  change when clicking the element. (Bug #1221)\n\n\t* djblets.auth:\n\t\t* Deleted the password recovery code. It was intended for use in\n\t\t  an old version of Django and has since been supplanted by\n\t\t  Django. We don't believe anyone is using it or should be\n\t\t  encouraged to use it.\n\n\t* djblets.log:\n\t\t* Added a Server Log view for administration UIs. This is used\n\t\t  to display the server log (using the Python logging defaults from\n\t\t  djblets.log). The log is filterable and sortable.\n\n\t\t* Exceptions are now logged when using LoggingMiddleware. When an\n\t\t  exception occurs, the stack, username and URL are logged.\n\n\t* djblets.util.misc:\n\t\t* cache_memoize will now always ensure that cache keys will never\n\t\t  exceed the maximum key length. If the key is larger, an md5sum\n\t\t  of the key is used instead. Patch by Thilo-Alexander Ginkel.\n\n\nversion 0.5.1 final (2-August-2009):\n\t* JavaScript:\n\t\t* Added a clear() function to $.funcQueue(), which clears the\n\t\t  queue and prevents any further processing until it's next started.\n\n\t* djblets.util.filesystem:\n\t\t* Added the new djblets.util.filesystem for filesystem-related\n\t\t  functionality.\n\n\t\t* This currently contains is_exe_in_path, which checks if an\n\t\t  executale exists in the system path. This will do intelligent\n\t\t  file extension determination. It expects an application name without\n\t\t  a file extension (such as \"cvs\") and will append the \".exe\" on\n\t\t  Windows. This is an improvement over the method we used in Review\n\t\t  Board before where we blindly searched for \"cvs\" (which could in\n\t\t  theory exist yet not be an executable) on Windows, or \"cvs.exe\"\n\t\t  (which could in theory exist yet not be an executable) on Linux.\n\n\nversion 0.5 final (20-June-2009):\n\t* Final release of Djblets 0.5.\n\n\t  This release was made to go alongside Review Board 1.0. While Djblets\n\t  works its way to its own 1.0, we will attempt to not break any existing\n\t  API. However, it is important to note that Djblets is not API frozen\n\t  at all yet.\n\n\t  We advise developers to continue to work against Djblets SVN/nightlies,\n\t  but to base production applications on 0.5.\n\n\nversion 0.5 rc2 (13-June-2009):\n\t* General:\n\t\t* Properly list the license as MIT, not GPL, in setup.py.\n\t\t  (Bug #1120)\n\n\t* JavaScript:\n\t\t* Prevent funcQueue.start() from being called when the queue is\n\t\t  already started.\n\n\t* djblets.datagrid:\n\t\t* Added speedups when sorting columns. We used to generate an SQL\n\t\t  query that pulled in all information in the order specified by\n\t\t  the columns, but this could be slow for large data sets. We now\n\t\t  do the minimal query, retrieving only the object IDs, and then\n\t\t  fetch data on those specific IDs in a second query. The end result\n\t\t  is a significant speedup in rendering datagrids when used with\n\t\t  large amounts of data.\n\n\t* djblets.log:\n\t\t* Fix logging when we're unable to write to the log file. We now\n\t\t  fall back on stderr. Patch by Paolo Borelli.\n\n\t* djblets.util.fields:\n\t\t* Fixed a typo in a variable name that caused problems in JSONField\n\t\t  when getting data in an unexpected format.\n\n\nversion 0.5 rc1 (3-May-2009):\n\t* JavaScript:\n\t\t* Clicking the edit icons for inlineEditors no longer causes the\n\t\t  page to scroll in some browsers. (Bug #1057)\n\n\t* djblets.datagrids:\n\t\t* Sped up the datagrids in some cases by always including related\n\t\t  objects (up to one depth level) in the query for the datagrid.\n\n\t* djblets.siteconfig:\n\t\t* Prepended the site's domain to the siteconfig cache key, making it\n\t\t  possible to use multiple siteconfig-based apps on the same server.\n\t\t  (Bug #986)\n\n\t\t* Saving a SiteConfig didn't always cause other instances of that\n\t\t  SiteConfig on the server to reload, meaning that people would\n\t\t  sometimes have to restart the server to get settings to apply.\n\t\t  This is now fixed.\n\t\t  (Bug #734)\n\n\t\t* Removed a redundant key for the timezone.\n\n\t* djblets.util.templatetags.djblets_utils:\n\t\t* The ageid filter now returns an empty string if passed 'None' as\n\t\t  the timestamp.\n\n\nversion 0.5 beta 1 (28-March-2009):\n\t* JavaScript:\n\t\t* Moved to using jQuery 1.3.2.\n\n\t\t* Small performance improvements in tooltip and modalBox.\n\n\t\t* The edit icons in an inlineEditor are now accessible, so they can\n\t\t  be activated by pressing the Enter key in Firefox. Patch by\n\t\t  Brad Taylor. (Bug #965)\n\n\t* djblets.util.fields:\n\t\t* JSONField and Base64Field now properly serialize to a JSON file,\n\t\t  so long as the patch at http://code.djangoproject.com/ticket/9522\n\t\t  is applied.\n\n\t\t* Objects saved in the admin UI that have a Base64Field no longer\n\t\t  causes garbage in the field. The fields are now saved properly.\n\t\t  (Bug #918)\n\n\t* djblets.gravatars:\n\t\t* Added an \"alt\" attribute for the generated gravatar image, in order\n\t\t  to fix XHTML compliance.\n\n\t* djblets.datagrids:\n\t\t* Fixed some XHTML validation errors. Patch by Onkar Shinde.\n\t\t  (Bug #932)\n\n\nversion 0.5 alpha 3 (15-February-2009):\n\t* JavaScript Bugs Fixed:\n\t\t* Fixed some major performance issues in autoSizeTextArea.\n\n\t\t* Fixed a bug with Safari and inlineEditor where Safari would\n\t\t  sometimes crash due to autoSizeTextArea. We now just disable\n\t\t  the autoSizeTextArea functionality.\n\n\t\t* inlineEditor no longer allows startEdit to be called when editing\n\t\t  is already enabled.\n\n\t* New Features:\n\t\t* Added new set_etag, etag_if_none_match, etag_if_match functions\n\t\t  for working with ETags.\n\n\t\t* Added a new jQuery.fn.html() method that works around IE's broken\n\t\t  innerHTML implementation. innerHTML in IE would strip whitespace,\n\t\t  which was bad when inserting into <pre> and <textarea> tags.\n\n\n\nversion 0.5 alpha 2 (3-February-2009):\n\t* JavaScript:\n\t\t* We now include and require jQuery 1.3.1 and jQueyr-ui 1.6rc5.\n\n\t\t* Added support for starting an inlineEditor in the opened state,\n\t\t  and prevent animations when starting or forcing it to be open.\n\n\t\t* Disabled keypress propagation for inlineEditor. This fixes a bug\n\t\t  in Review Board's diff viewer (bug #838).\n\n\t* djblets.gravatars (new):\n\t\t* Added basic support for gravatars. This provides a {% gravatars %}\n\t\t  template tag for displaying a gravatar based on a User object.\n\t\t  See http://www.gravatar.com/ for more information on Gravatars.\n\n\t* djblets.util:\n\t\t* Added a {% include_as_string %} tag for including a template\n\t\t  as a JavaScript string.\n\n\t\t* Added the ability to generate media and AJAX serial numbers based\n\t\t  on the media files and template files. These can be appended to\n\t\t  the media and AJAX URLs which, in combination with aggressive\n\t\t  Expires headers, can drastically speed up load times of sites.\n\n\t\t  See djblets.util.context_processors and\n\t\t  djblets.util.misc.generate_cache_serials.\n\n\t* djblets.webapi:\n\t\t* Set the mime type for JSON responses to application/json,\n\t\t  except when responding to an upload, in which case text/plain\n\t\t  is used.\n\n\t\t* Fixed a bug where WebAPIResponse._get_content was called too\n\t\t  frequently and in some cases generated a 500 error.\n"], "filenames": ["NEWS"], "buggy_code_start_loc": [6], "buggy_code_end_loc": [13], "fixing_code_start_loc": [7], "fixing_code_end_loc": [18], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in gravatars/templatetags/gravatars.py in Djblets before 0.7.30 and 0.8.x before 0.8.3 for Django allows remote attackers to inject arbitrary web script or HTML via a user display name.", "other": {"cve": {"id": "CVE-2014-3995", "sourceIdentifier": "cve@mitre.org", "published": "2014-06-16T18:55:09.497", "lastModified": "2014-06-17T14:22:48.647", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in gravatars/templatetags/gravatars.py in Djblets before 0.7.30 and 0.8.x before 0.8.3 for Django allows remote attackers to inject arbitrary web script or HTML via a user display name."}, {"lang": "es", "value": "Vulnerabilidad de XSS en gravatars/templatetags/gravatars.py en Djblets anterior a 0.7.30 y 0.8.x anterior a 0.8.3 para Django permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s de un nombre de pantalla de usuario."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:reviewboard:djblets:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.7.29", "matchCriteriaId": "686B0A9E-DC65-4162-9A17-6BC638220C4C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:reviewboard:djblets:0.7.27:*:*:*:*:*:*:*", "matchCriteriaId": "96E63A81-C146-4FF8-B42F-5FF3D337DFBD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:reviewboard:djblets:0.7.28:*:*:*:*:*:*:*", "matchCriteriaId": "692BC2AF-0253-4907-AC90-A2ACC0A1CA8F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:reviewboard:djblets:0.8.1:*:*:*:*:*:*:*", "matchCriteriaId": "E578875D-92CD-4D36-8F28-CA1928495770"}, {"vulnerable": true, "criteria": "cpe:2.3:a:reviewboard:djblets:0.8.2:*:*:*:*:*:*:*", "matchCriteriaId": "A4477F46-9341-4DD0-B809-361AEBC3A7C2"}]}]}], "references": [{"url": "http://seclists.org/oss-sec/2014/q2/494", "source": "cve@mitre.org"}, {"url": "http://seclists.org/oss-sec/2014/q2/498", "source": "cve@mitre.org"}, {"url": "https://github.com/djblets/djblets/commit/50000d0bbb983fa8c097b588d06b64df8df483bd", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/djblets/djblets/commit/77ac64642ad530bf69e390c51fc6fdcb8914c8e7", "source": "cve@mitre.org", "tags": ["Exploit", "Patch"]}, {"url": "https://github.com/djblets/djblets/commit/e2c79117efd925636acd871a5f473512602243cf", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/djblets/djblets/commit/50000d0bbb983fa8c097b588d06b64df8df483bd"}}