{"buggy_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // include validation utils\n    include(\"library/validation.php\");\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctactive.php');\n    $help = t('helpPage','acctactive');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"username\" => t('all','Username'),\n                    \"attribute\" => t('all','Attribute'),\n                    \"maxtimeexpiration\" => t('all','MaxTimeExpiration'),\n                    \"usedtime\" => t('all','UsedTime'),\n                    t('all','Status'),\n                    t('all','Usage')    \n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n\n    include('library/opendb.php');\n    include('library/datediff.php');\n    include('include/management/pages_common.php');\n    \n    $currdate = date(\"j M Y\");\n    \n    //orig: used as maethod to get total rows - this is required for the pages_numbering.php page\n    $sql = sprintf(\"SELECT DISTINCT(ra.username) AS username, rc.attribute AS attribute, rc.Value AS maxtimeexpiration,\n                           SUM(ra.AcctSessionTime) AS usedtime\n                      FROM %s AS ra, %s AS rc\n                     WHERE ra.username=rc.username AND (rc.Attribute = 'Max-All-Session' OR rc.Attribute='Expiration')\n                     GROUP BY ra.username\", $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_RADCHECK']);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n            \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n    \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n            </tr>\n            \n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while($row = $res->fetchRow()) {\n            $status=\"Active\";\n\n            if ($row[1] == \"Expiration\") {        \n                if (datediff('d', $row[2], \"$currdate\", false) > 0) {\n                    $status = \"Expired\";\n                }\n            } \n\n            if ($row[1] == \"Max-All-Session\") {        \n                if ($row[3] >= $row[2]) {\n                    $status = \"End\";\n                }\n            }\n\n            foreach ($row as $i => $value) {\n                $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n            }\n\n            echo \"<tr>\";\n        \n            $onclick = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo','username=%s');\"\n                     . \"return false;\", $row[0]);\n        \n            $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n        \n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[0]);\n            \n            printf(\"<td>%s</td>\", $row[1]);\n            printf(\"<td>%s</td>\", $row[2]);\n            printf(\"<td>%s</td>\", time2str($row[3]));\n            printf(\"<td>%s</td>\", $status);\n\n            echo \"<td>\";\n\n            if ($row[1] == \"Expiration\") {        \n                $difference = datediff('d', $row[2], \"$currdate\", false);\n                if ($difference > 0)\n                    echo \"<h100> \" . \" $difference days since expired\" . \"</h100> \";\n                else \n                    echo substr($difference, 1) . \" days until expiration\";\n            } \n\n            if ($row[1] == \"Max-All-Session\") {        \n                if ($status == \"End\") {\n                    echo \"<h100> \" . abs($row[2] - $row[3]) . \" seconds overdue credit\" . \"</h100>\";\n                } else {\n                    echo $row[2] - $row[3];\n                    echo \" left on credit\";\n                }\n            } \n\n\n            echo \"</td>\"\n               . \"</tr>\";\n        }\n\n        echo '</tbody>';\n    \n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n    } else {\n        $failureMsg = \"Nothing to display\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for all accounting records on page: \";\n    $logDebugSQL = \"\";\n\n    include(\"library/validation.php\");\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctall.php');\n    $help = t('helpPage','acctall');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n\n    include('library/opendb.php');\n    include_once('include/management/pages_common.php');\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = \"\";\n    $_SESSION['reportType'] = \"accountingGeneric\";\n\n    $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->fetchrow()[0];\n\n    if ($numrows > 0) {\n            \n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                               ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                               ra.AcctTerminateCause, ra.NASIPAddress\n                          FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                       $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'])\n             . sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n?>\n\n    <table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType);\n        echo \"</tr>\";\n?>\n    </thead>\n    \n    <tbody>\n<?php\n        $simple_td_format = '<td>%s</td>';\n        $li_style = 'margin: 7px auto';\n\n        while ($row = $res->fetchRow()) {\n            foreach ($row as $i => $value) {\n                $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n            }\n            \n            echo \"<tr>\";\n            printf($simple_td_format, $row[0]);\n            \n            $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                     . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n            $tooltip = '<ul style=\"list-style-type: none\">'\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                               $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                               $li_style, t('all','Compare'))\n                     . '</ul>'\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n            \n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[1]);\n            \n            $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                     . sprintf(\"'username=%s');return false;\", $row[2]);\n            $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[2]);\n\n            printf($simple_td_format, $row[3]);\n            printf($simple_td_format, $row[4]);\n            printf($simple_td_format, $row[5]);\n            \n            printf($simple_td_format, time2str($row[6]));\n            printf($simple_td_format, toxbyte($row[7]));\n            printf($simple_td_format, toxbyte($row[8]));\n            printf($simple_td_format, $row[9]);\n            printf($simple_td_format, $row[10]);\n        \n            echo \"</tr>\";\n        \n        }\n\n        echo '</tbody>';\n\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n        \n    } else {\n        $failureMsg = \"Nothing to display\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once('library/config_read.php');\n    \n    include(\"library/validation.php\");\n    \n    $sqlfields = (array_key_exists('sqlfields', $_GET) && !empty($_GET['sqlfields']) && is_array($_GET['sqlfields']) &&\n                  array_intersect($_GET['sqlfields'], $acct_custom_query_options_all) == $_GET['sqlfields'])\n               ? $_GET['sqlfields'] : $acct_custom_query_options_default;\n    \n    $cols = array();\n    foreach ($sqlfields as $sqlfield) {\n        $cols[$sqlfield] = $sqlfield;\n    }\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($acct_custom_query_options_all)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    $valid_operators = array(\"equals\" => \"=\", \"contains\" => \"LIKE\");\n    $operator = (array_key_exists('operator', $_GET) && !empty($_GET['operator']) &&\n                 in_array($_GET['operator'], array_keys($valid_operators)))\n              ? $_GET['operator'] : \"\";\n    \n    $where_field = (array_key_exists('where_field', $_GET) && !empty($_GET['where_field']) &&\n                    in_array($_GET['where_field'], $acct_custom_query_options_all))\n                 ? $_GET['where_field'] : \"\";\n    \n    $where_value = (array_key_exists('where_value', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['where_value']))))\n                 ? str_replace(\"%\", \"\", trim($_GET['where_value'])) : \"\";\n\n    $where_value_enc = (!empty($where_value)) ? htmlspecialchars($where_value, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $accounting_custom_startdate = $startdate;\n    $accounting_custom_enddate = $enddate;\n    $accounting_custom_value = $where_value_enc;\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','acctcustomquery.php');\n    $help = t('helpPage','acctcustomquery');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-accounting-custom.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    // preparing the custom query\n    \n    $sql_WHERE = array();\n    $partial_query_string_pieces = array();\n    \n    foreach ($sqlfields as $sqlfield) {\n        $partial_query_string_pieces[] = sprintf(\"sqlfields[]=%s\", $sqlfield);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_string_pieces[] = sprintf(\"startdate=%s\", $startdate);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_string_pieces[] = sprintf(\"enddate=%s\", $enddate);\n    }\n    \n    if (!empty($where_value)) {\n        // get the operator\n        $op = $valid_operators[$operator];\n        \n        // if the op is LIKE then the SQL syntax uses % for pattern matching\n        // and we sorround the $value with % as a wildcard\n        $where_value = $dbSocket->escapeSimple($where_value);\n        \n        if ($op == \"LIKE\") {\n            $where_value = \"%\" . $where_value . \"%\";\n        }\n\n        $sql_WHERE[] = sprintf(\"%s %s '%s'\", $where_field, $op, $where_value);\n\n        $partial_query_string_pieces[] = sprintf(\"where_field=%s\", $where_field);\n        $partial_query_string_pieces[] = sprintf(\"operator=%s\", $operator);\n        $partial_query_string_pieces[] = sprintf(\"where_value=%s\", $where_value_enc);\n    }\n\n    // executing the custom query\n\n    $sql = sprintf(\"SELECT %s FROM %s\", implode(\", \", $sqlfields), $configValues['CONFIG_DB_TBL_RADACCT']);\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (count($partial_query_string_pieces) > 0)\n                              ? \"&\" . implode(\"&\", $partial_query_string_pieces) : \"\";\n\n\n        echo '<table border=\"0\" class=\"table1\">'\n           . '<thead>';\n            \n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n\n            \n        echo '</thead>'\n           . '<tbody>';\n\n        // inserting the values of each field from the database to the table\n        while($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            echo \"<tr>\";\n            foreach ($sqlfields as $field) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$field], ENT_QUOTES, 'UTF-8'));\n            }\n            echo \"</tr>\";\n        }\n\n        echo '</tbody>';\n\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n        \n    include('library/closedb.php');    \n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include(\"library/validation.php\");\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctcustom.php');\n    $help = t('helpPage','acctcustom');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting-custom.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // include validation utils\n    include(\"library/validation.php\");\n    \n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctdate.php');\n    $help = t('helpPage','acctdate');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n    \n        // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n        include('library/opendb.php');\n        include('include/management/pages_common.php');\n    \n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n        if (count($sql_WHERE) > 0) {\n            $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n            if (count($sql_WHERE) > 0) {\n                $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n            }\n\n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n\n    \n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n\n    <tbody>\n<?php\n            $simple_td_format = '<td>%s</td>';\n            $li_style = 'margin: 7px auto';\n\n            while ($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n                \n                echo \"<tr>\";\n                printf($simple_td_format, $row[0]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[1]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $row[2]);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[2]);\n\n                printf($simple_td_format, $row[3]);\n                printf($simple_td_format, $row[4]);\n                printf($simple_td_format, $row[5]);\n                \n                printf($simple_td_format, time2str($row[6]));\n                printf($simple_td_format, toxbyte($row[7]));\n                printf($simple_td_format, toxbyte($row[8]));\n                printf($simple_td_format, $row[9]);\n                printf($simple_td_format, $row[10]);\n            \n                echo \"</tr>\";\n            \n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include(\"library/validation.php\");\n    \n    // validate this parameter before including menu\n    $ipaddress = (array_key_exists('ipaddress', $_GET) && isset($_GET['ipaddress']) &&\n                  preg_match(LOOSE_IP_REGEX, $_GET['ipaddress'], $m) !== false) ? $_GET['ipaddress'] : \"\";\n    $ipaddress_enc = (!empty($ipaddress)) ? htmlspecialchars($ipaddress, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $accounting_ipaddress = $ipaddress_enc;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = sprintf(\"performed query for %s on page: \",\n                        ((!empty($ipaddress)) ? \"IP address [$ipaddress]\" : \"all IP addresses\"));\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n    \n    $title = t('Intro','acctipaddress.php');\n    $help = t('helpPage','acctipaddress');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctoutputoctets\" => t('all','Download') .\" (\" . t('all','Bytes') . \")\",\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array($_GET['orderType'], array( \"desc\", \"asc\" )))\n               ? $_GET['orderType'] : \"asc\";\n               \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = (!empty($ipaddress))\n               ? sprintf(\" WHERE FramedIPAddress LIKE '%s%%'\", $dbSocket->escapeSimple($ipaddress))\n               : \"\";\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportType'] = \"accountingGeneric\";\n    $_SESSION['reportQuery'] = (!empty($ipaddress)) ? $sql_WHERE : \"\";\n\n    $sql = \"SELECT ra.RadAcctId, dh.name AS hotspot, ra.UserName, ra.FramedIPAddress AS FramedIPAddress,\n                   ra.AcctStartTime, ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                   ra.AcctTerminateCause, ra.NASIPAddress\n              FROM %s AS ra LEFT JOIN %s AS dh ON ra.calledstationid=dh.mac\";\n\n    $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']) . $sql_WHERE;\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($ipaddress_enc) ? sprintf(\"&ipaddress=%s\", urlencode($ipaddress_enc)) : \"\");\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if needed\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\" style=\"text-align: right\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $hotspot_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n            $username_enc = htmlspecialchars($row[2], ENT_QUOTES, 'UTF-8');\n            \n            // tooltip and ajax stuff\n            $username_js = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo',\"\n                                 . \"'divContainerUserInfo','username=%s');return false;\", urlencode($username_enc));\n            \n            $username_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>',\n                                        urlencode($username_enc), t('Tooltip','UserEdit'))\n                               . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n?>\n            <tr>\n                <td><?= htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8') ?></td>\n                <td>\n<?php\n            if (!empty($hotspot_enc)) {\n                // tooltip and ajax stuff\n                $hotspot_js = sprintf(\"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat',\"\n                                    . \"'divContainerHotspotInfo','hotspot=%s');return false;\", urlencode($hotspot_enc));\n                \n                $li_style = 'margin: 7px auto';\n                $hotspot_tooltip = '<ul style=\"list-style-type: none\">'\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                           $li_style, urlencode($hotspot_enc), t('Tooltip','HotspotEdit'))\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                           $li_style, t('all','Compare'))\n                                 . '</ul>'\n                                 . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n?>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $hotspot_js ?>\" tooltipText='<?= $hotspot_tooltip ?>'>\n                        <?= $hotspot_enc ?>\n                    </a>\n<?php\n            }\n?>\n                </td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $username_js ?>\" tooltipText='<?= $username_tooltip ?>'>\n                        <?= $username_enc ?>\n                    </a>\n                </td>\n                <td><?= htmlspecialchars($row[3], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[4], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[5], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(time2str($row[6]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[7]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[8]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[9], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[10], ENT_QUOTES, 'UTF-8') ?></td>\n            </tr>\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctmain.php');\n    $help = t('helpPage','acctmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include(\"library/validation.php\");\n\n    // validate this parameter before including menu\n    $onlyactive = (array_key_exists('only-active', $_GET) && isset($_GET['only-active']));\n    \n    // validate this parameter before including menu\n    $nasipaddress = (array_key_exists('nasipaddress', $_GET) && isset($_GET['nasipaddress']) &&\n                  preg_match(LOOSE_IP_REGEX, $_GET['nasipaddress'], $m) !== false) ? $_GET['nasipaddress'] : \"\";\n    $nasipaddress_enc = (!empty($nasipaddress)) ? htmlspecialchars($nasipaddress, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $accounting_nasipaddress = $nasipaddress_enc;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = sprintf(\"performed query for %s on page: \",\n                        ((!empty($nasipaddress)) ? \"NAS IP address [$nasipaddress]\" : \"all NAS IP addresses\"));\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n    \n    $title = t('Intro','acctnasipaddress.php');\n    $help = t('helpPage','acctnasipaddress');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctoutputoctets\" => t('all','Download') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress')\n                 );\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = (!empty($nasipaddress))\n               ? sprintf(\" WHERE NASIPAddress LIKE '%s%%'\", $dbSocket->escapeSimple($nasipaddress))\n               : \"\";\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = $sql_WHERE;\n    $_SESSION['reportType'] = \"accountingGeneric\";\n\n    $sql = \"SELECT ra.RadAcctId, dh.name as hotspot, ra.UserName, ra.FramedIPAddress, ra.AcctStartTime, ra.AcctStopTime,\n                   ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets, ra.AcctTerminateCause, ra.NASIPAddress\n              FROM %s AS ra LEFT JOIN %s AS dh ON ra.calledstationid=dh.mac\";\n    \n    $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']) . $sql_WHERE;\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($nasipaddress_enc) ? \"&nasipaddress=$nasipaddress_enc\" : \"\");\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if needed\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\" style=\"text-align: right\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $hotspot_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n            \n            $hotspot_js = sprintf(\"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo',\"\n                                . \"'hotspot=%s');return false;\", $hotspot_enc);\n            \n            $hotspot_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a>&nbsp;'\n                                     . '<a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a><br><br>'\n                                     . '<div id=\"divContainerHotspotInfo\">Loading...</div><br>',\n                                       $hotspot_enc, t('Tooltip','HotspotEdit'), t('all','Compare'));\n            \n            $username_enc = htmlspecialchars($row[2], ENT_QUOTES, 'UTF-8');\n\n            $username_js = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                                 . \"'username=%s');return false;\", $username_enc);\n            \n            $username_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a><br><br>'\n                                      . '<div id=\"divContainerUserInfo\">Loading...</div><br>', $username_enc, t('Tooltip','UserEdit'));\n            \n?>\n            <tr>\n                <td><?= htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8') ?></td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $hotspot_js ?>\" tooltipText='<?= $hotspot_tooltip ?>'>\n                        <?= $hotspot_enc ?>\n                    </a>\n                </td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $username_js ?>\" tooltipText='<?= $username_tooltip ?>'>\n                        <?= $username_enc ?>\n                    </a>\n                </td>\n                <td><?= htmlspecialchars($row[3], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[4], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[5], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(time2str($row[6]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[7]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[8]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[9], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[10], ENT_QUOTES, 'UTF-8') ?></td>\n            </tr>\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query \";\n    if (!empty($username)) {\n        $logQuery .= \"for [$username] \";\n    }\n    $logQuery .= \"on page: \";\n    $logDebugSQL = \"\";\n\n    //feed the sidebar variables\n    $accounting_username = $username_enc;\n    \n    include(\"library/validation.php\");\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctusername.php');\n    $help = t('helpPage','acctusername');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    \n    $sql_WHERE = \"\";\n    $partial_query_string = \"\";\n    if (!empty($username)) {\n        $sql_WHERE = sprintf(\" WHERE username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_string = sprintf(\"&username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = $sql_WHERE;\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n        include('library/opendb.php');\n        include_once('include/management/pages_common.php');\n\n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']) . $sql_WHERE;\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            \n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'])\n                 . $sql_WHERE\n                 . sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n    \n    <tbody>\n<?php\n            $simple_td_format = '<td>%s</td>';\n            $li_style = 'margin: 7px auto';\n\n            while ($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n                \n                echo \"<tr>\";\n                printf($simple_td_format, $row[0]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[1]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $row[2]);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[2]);\n\n                printf($simple_td_format, $row[3]);\n                printf($simple_td_format, $row[4]);\n                printf($simple_td_format, $row[5]);\n                \n                printf($simple_td_format, time2str($row[6]));\n                printf($simple_td_format, toxbyte($row[7]));\n                printf($simple_td_format, toxbyte($row[8]));\n                printf($simple_td_format, $row[9]);\n                printf($simple_td_format, $row[10]);\n            \n                echo \"</tr>\";\n            \n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n\tinclude('library/check_operator_perm.php');\n\t\n\t//setting values for the order by and order type variables\n\tisset($_GET['orderBy']) ? $orderBy = $_GET['orderBy'] : $orderBy = \"radacctid\";\n\tisset($_GET['orderType']) ? $orderType = $_GET['orderType'] : $orderType = \"asc\";\n\n\n\tisset($_GET['username']) ? $username = trim($_GET['username']) : $username = \"%\";\n\tisset($_GET['billaction']) ? $billaction = trim($_GET['billaction']) : $billaction = \"\";\n\tisset($_GET['sqlfields']) ? $sqlfields = $_GET['sqlfields'] : $sqlfields = \"\";\n\tisset($_GET['startdate']) ? $startdate = $_GET['startdate'] : $startdate = \"\";\n\tisset($_GET['enddate']) ? $enddate = $_GET['enddate'] : $enddate = \"\";\n\n\n\t$username = str_replace('*', '%', $username);\n\n\t//feed the sidebar variables\n\t$billing_date_startdate = $startdate;\n\t$billing_date_enddate = $enddate;\n\t$billing_history_username = $username;\n\t$billing_history_billaction = $billaction;\n\n\n\tinclude_once('library/config_read.php');\n    $log = \"visited page: \";\n    $logQuery = \"performed query for all accounting records on page: \";\n\n?>\n\n<?php\n\tinclude(\"menu-bill-history.php\");\n?>\n\n\t\t<div id=\"contentnorightbar\">\n\t\t\n\t\t<h2 id=\"Intro\"><a href=\"#\" onclick=\"javascript:toggleShowDiv('helpPage')\"><?php echo t('Intro','billhistoryquery.php')?>\n\t\t<h144>&#x2754;</h144></a></h2>\n\t\t\t\t\n\t\t<div id=\"helpPage\" style=\"display:none;visibility:visible\" >\n\t\t\t<?php echo t('helpPage','billhistoryquery') ?>\n\t\t\t<br/>\n\t\t</div>\n\t\t<br/>\n\n\n\n<?php\n\n\t\tinclude 'library/opendb.php';\n\t\tinclude 'include/management/pages_common.php';\t\n\t\tinclude 'include/management/pages_numbering.php';\t\t// must be included after opendb because it needs to read the CONFIG_IFACE_TABLES_LISTING variable from the config file\n\n\t\t// let's sanitize the values passed to us:\n\t\t$username = $dbSocket->escapeSimple($username);\n\t\t$billaction = $dbSocket->escapeSimple($billaction);\n\t\t$startdate = $dbSocket->escapeSimple($startdate);\n\t\t$enddate = $dbSocket->escapeSimple($enddate);\n\n//\t        include_once('include/management/userBilling.php');\n//\t        userBillingPayPalSummary($startdate, $enddate, $payer_email, $payment_address_status, $payer_status, $payment_status, 1);\n\t\t\t\t\t\t\t\t\t                         // draw the billing rates summary table\n\n\n\t        include 'library/opendb.php';\n\t\t// since we need to span through pages, which we do using GET queries I can't rely on this page\n\t\t// to be processed through POST but rather using GET only (with the current design anyway).\n\t\t// For this reason, I need to build the GET query which I will later use in the page number's links\n\n\t\t$getFields = \"\";\n\t\t$counter = 0;\n\t\tforeach ($sqlfields as $elements) {\n\t\t\t$getFields .= \"&sqlfields[$counter]=$elements\";\n\t\t\t$counter++;\n\t\t}\n\n\t\t// we should also sanitize the array that we will be passing to this page in the next query\n\t\t$getFields = $dbSocket->escapeSimple($getFields);\n\n\n\t\t$getQuery = \"\";\n\t\t$getQuery .= \"&username=$username\";\n\t\t$getQuery .= \"&billAction=$billaction\";\n\t\t$getQuery .= \"&startdate=$startdate&enddate=$enddate\";\n\n\n\t\t$select = implode(\",\", $sqlfields);\n\t\t// sanitizing the array passed to us in the get request\n\t\t$select = $dbSocket->escapeSimple($select);\n\n\n\t\t$sql = \"SELECT $select FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGHISTORY'].\" WHERE \".\n\t\t\t\" (username LIKE '$username') AND \".\n\t\t\t\" (billAction LIKE '$billaction') \";\n\t\t$res = $dbSocket->query($sql);\n\t\t$numrows = $res->numRows();\n\n\n\t\t$sql = \"SELECT $select FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGHISTORY'].\" WHERE \".\n\t\t\t\" (username LIKE '$username') AND \".\n\t\t\t\" (billAction LIKE '$billaction') \".\n\t\t\t\" ORDER BY $orderBy $orderType LIMIT $offset, $rowsPerPage;\";\n\t\t$res = $dbSocket->query($sql);\n\t\t$logDebugSQL = \"\";\n\t\t$logDebugSQL .= $sql . \"\\n\";\n\n\n\t/* START - Related to pages_numbering.php */\n\t$maxPage = ceil($numrows/$rowsPerPage);\n\t/* END */\n\n\n\techo \"<table border='0' class='table1'>\\n\";\n\techo \"\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th colspan='25'>\".t('all','Records').\"</th>\n\t\t\t\t\t\t\t</tr>\n\n                                                        <tr>\n                                                        <th colspan='25' align='left'>\n                <br/>\n        \";\n\n        if ($configValues['CONFIG_IFACE_TABLES_LISTING_NUM'] == \"yes\")\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $getFields, $getQuery);\n\n        echo \" </th></tr>\n                                        </thead>\n\n                        \";\n\n\n\t// building the dybamic table list fields\n\techo \"<thread> <tr>\";\n\tforeach ($sqlfields as $value) {\n\t\tswitch($value) {\n\n\t\tcase \"id\":\n\t\t\t$title = t('all','ID');\n\t\t\tbreak;\n\t\tcase \"username\":\n\t\t\t$title = t('all','Username');\n\t\t\tbreak;\n\t\tcase \"planId\":\n\t\t\t$title = t('all','PlanId');\n\t\t\tbreak;\n\t\tcase \"billAmount\":\n\t\t\t$title = t('all','BillAmount');\n\t\t\tbreak;\n\t\tcase \"billAction\":\n\t\t\t$title = t('all','BillAction');\n\t\t\tbreak;\n\t\tcase \"billPerformer\":\n\t\t\t$title = t('all','BillPerformer');\n\t\t\tbreak;\n\t\tcase \"billReason\":\n\t\t\t$title = t('all','BillReason');\n\t\t\tbreak;\n\t\tcase \"paymentmethod\":\n\t\t\t$title = t('ContactInfo','PaymentMethod');\n\t\t\tbreak;\n\t\tcase \"cash\":\n\t\t\t$title = t('ContactInfo','Cash');\n\t\t\tbreak;\n\t\tcase \"creditcardname\":\n\t\t\t$title = t('ContactInfo','CreditCardName');\n\t\t\tbreak;\n\t\tcase \"creditcardnumber\":\n\t\t\t$title = t('ContactInfo','CreditCardNumber');\n\t\t\tbreak;\n\t\tcase \"creditcardverification\":\n\t\t\t$title = t('ContactInfo','CreditCardVerificationNumber');\n\t\t\tbreak;\n\t\tcase \"creditcardtype\":\n\t\t\t$title = t('ContactInfo','CreditCardType');\n\t\t\tbreak;\n\t\tcase \"creditcardexp\":\n\t\t\t$title = t('ContactInfo','CreditCardExpiration');\n\t\t\tbreak;\n\t\tcase \"coupon\":\n\t\t\t$title = t('all','Coupon');\n\t\t\tbreak;\n\t\tcase \"discount\":\n\t\t\t$title = t('all','Discount');\n\t\t\tbreak;\n\t\tcase \"notes\":\n\t\t\t$title = t('ContactInfo','Notes');\n\t\t\tbreak;\n\t\tcase \"creationdate\":\n\t\t\t$title = t('all','CreationDate');\n\t\t\tbreak;\n\t\tcase \"creationby\":\n\t\t\t$title = t('all','CreationBy');\n\t\t\tbreak;\n\t\tcase \"updatedate\":\n\t\t\t$title = t('all','UpdateDate');\n\t\t\tbreak;\n\t\tcase \"updateby\":\n\t\t\t$title = t('all','UpdateBy');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$title = $value;\n\t\t\tbreak;\n\t\t}\n\n\t\techo \"<th scope='col'> $title   </th>\";\n\t} //foreach $sqlfields\n\techo \"</tr> </thread>\";\n\n\n\t// inserting the values of each field from the database to the table\n\twhile($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n\t\techo \"<tr>\";\n\t\tforeach ($sqlfields as $value) {\n\t\t\techo \"<td> \" . $row[$value] . \"</td>\";\n\t\t}\n\t\techo \"</tr>\";\n\t}\n\n        echo \"\n                                        <tfoot>\n                                                        <tr>\n                                                        <th colspan='25' align='left'>\n        \";\n        setupLinks($pageNum, $maxPage, $orderBy, $orderType, $getFields, $getQuery);\n        echo \"\n                                                        </th>\n                                                        </tr>\n                                        </tfoot>\n                \";\n\n\techo \"</table>\";\n\n\tinclude 'library/closedb.php';\n\n?>\n\n\n\n<?php\n\tinclude('include/config/logging.php');\n?>\n\n\t\t</div>\n\t\t\n\t\t<div id=\"footer\">\n\t\t\n\t\t\t\t\t\t\t\t<?php\n        include 'page-footer.php';\n?>\n\n\t\t\n\t\t</div>\n\t\t\n</div>\n</div>\n\n\n</body>\n</html>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','billhistorymain.php');\n    $help = t('helpPage','billhistorymain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-history.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','billmain.php');\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-pos.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    echo '</div><!-- #contentnorightbar -->'\n       . '<div id=\"footer\">';\n\n    include('include/config/logging.php');\n    include('page-footer.php');\n    \n    echo '</div><!-- #footer -->';\n\n?>\n\n        </div>\n    </div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n\tinclude('library/check_operator_perm.php');\n\t\n\t//setting values for the order by and order type variables\n\tisset($_GET['orderBy']) ? $orderBy = $_GET['orderBy'] : $orderBy = \"radacctid\";\n\tisset($_GET['orderType']) ? $orderType = $_GET['orderType'] : $orderType = \"asc\";\n\n\n\tisset($_GET['payer_email']) ? $payer_email = $_GET['payer_email'] : $payer_email = \"%\";\n\tisset($_GET['payment_address_status']) ? $payment_address_status = $_GET['payment_address_status'] : $payment_address_status = \"%\";\n\tisset($_GET['payer_status']) ? $payer_status = $_GET['payer_status'] : $payer_status = \"%\";\n\tisset($_GET['payment_status']) ? $payment_status = $_GET['payment_status'] : $payment_status = \"%\";\n\tisset($_GET['vendor_type']) ? $vendor_type = $_GET['vendor_type'] : $vendor_type = \"%\";\n\tisset($_GET['sqlfields']) ? $sqlfields = $_GET['sqlfields'] : $sqlfields = \"\";\n\tisset($_GET['startdate']) ? $startdate = $_GET['startdate'] : $startdate = \"\";\n\tisset($_GET['enddate']) ? $enddate = $_GET['enddate'] : $enddate = \"\";\n\n\n\t$payer_email = str_replace('*', '%', $payer_email);\n\n\t//feed the sidebar variables\n\t$billing_date_startdate = $startdate;\n\t$billing_date_enddate = $enddate;\n\t//$billing_paypal_firstname = $value;\n\t$billing_paypal_payeremail = $payer_email;\n\t$billing_paypal_paymentaddressstatus = $payment_address_status;\n\t$billing_paypal_payerstatus = $payer_status;\n\t$billing_paypal_paymentstatus = $payment_status;\n\t$billing_paypal_vendor_type = $vendor_type;\n\n\n\tinclude_once('library/config_read.php');\n    $log = \"visited page: \";\n    $logQuery = \"performed query for all accounting records on page: \";\n\n?>\n\n<?php\n\t\n\tinclude(\"menu-bill-merchant.php\");\n\t\n?>\n\n\t\t<div id=\"contentnorightbar\">\n\t\t\n\t\t<h2 id=\"Intro\"><a href=\"#\" onclick=\"javascript:toggleShowDiv('helpPage')\"><?php echo t('Intro','billpaypaltransactions.php')?>\n\t\t<h144>&#x2754;</h144></a></h2>\n\t\t\t\t\n\t\t<div id=\"helpPage\" style=\"display:none;visibility:visible\" >\n\t\t\t<?php echo t('helpPage','billpaypaltransactions') ?>\n\t\t\t<br/>\n\t\t</div>\n\t\t<br/>\n\n\n\n<?php\n\n\t\tinclude 'library/opendb.php';\n\t\tinclude 'include/management/pages_common.php';\t\n\t\tinclude 'include/management/pages_numbering.php';\t\t// must be included after opendb because it needs to read the CONFIG_IFACE_TABLES_LISTING variable from the config file\n\n\t\t// let's sanitize the values passed to us:\n\t\t$payer_email = $dbSocket->escapeSimple($payer_email);\n\t\t$payment_address_status = $dbSocket->escapeSimple($payment_address_status);\n\t\t$payer_status = $dbSocket->escapeSimple($payer_status);\n\t\t$payment_status = $dbSocket->escapeSimple($payment_status);\n\t\t$vendor_type = $dbSocket->escapeSimple($vendor_type);\n\t\t$startdate = $dbSocket->escapeSimple($startdate);\n\t\t$enddate = $dbSocket->escapeSimple($enddate);\n\n\t        include_once('include/management/userBilling.php');\n\t        userBillingPayPalSummary($startdate, $enddate, $payer_email, $payment_address_status, $payer_status, $payment_status, $vendor_type, 1);\n\t\t\t\t\t\t\t\t\t                         // draw the billing rates summary table\n\n\n\t        include 'library/opendb.php';\n\t\t// since we need to span through pages, which we do using GET queries I can't rely on this page\n\t\t// to be processed through POST but rather using GET only (with the current design anyway).\n\t\t// For this reason, I need to build the GET query which I will later use in the page number's links\n\n\t\t$getFields = \"\";\n\t\t$counter = 0;\n\t\tforeach ($sqlfields as $elements) {\n\t\t\t$getFields .= \"&sqlfields[$counter]=$elements\";\n\t\t\t$counter++;\n\t\t}\n\n\t\t// we should also sanitize the array that we will be passing to this page in the next query\n\t\t$getFields = $dbSocket->escapeSimple($getFields);\n\n\n\t\t$getQuery = \"\";\n\t\t$getQuery .= \"&payer_email=$payer_email\";\n\t\t$getQuery .= \"&payment_address_status=$payment_address_status\";\n\t\t$getQuery .= \"&payer_status=$payer_status\";\n\t\t$getQuery .= \"&payment_status=$payment_status\";\n\t\t$getQuery .= \"&vendor_type=$vendor_type\";\n\t\t$getQuery .= \"&startdate=$startdate&enddate=$enddate\";\n\n\n\t\t$select = implode(\",\", $sqlfields);\n\t\t// sanitizing the array passed to us in the get request\n\t\t$select = $dbSocket->escapeSimple($select);\n\n\n\t\t$sql = \"SELECT $select FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\" WHERE \".\n\t\t\t\" (payer_email LIKE '$payer_email') AND \".\n\t\t\t\" (payment_address_status LIKE '$payment_address_status') AND \".\n\t\t\t\" (payer_status LIKE '$payer_status') AND \".\n\t\t\t\" (payment_status LIKE '$payment_status') AND \".\n\t\t\t\" (vendor_type LIKE '$vendor_type') AND \".\n\t\t\t\" (payment_date>'$startdate' AND payment_date<'$enddate')\";\n\t\t$res = $dbSocket->query($sql);\n\t\t$numrows = $res->numRows();\n\n\n\t\t$sql = \"SELECT $select FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\" WHERE \".\n\t\t\t\" (payer_email LIKE '$payer_email') AND \".\n\t\t\t\" (payment_address_status LIKE '$payment_address_status') AND \".\n\t\t\t\" (payer_status LIKE '$payer_status') AND \".\n\t\t\t\" (payment_status LIKE '$payment_status') AND \".\n\t\t\t\" (vendor_type LIKE '$vendor_type') AND \".\n\t\t\t\" (payment_date>'$startdate' AND payment_date<'$enddate') \".\n\t\t\t\" ORDER BY $orderBy $orderType LIMIT $offset, $rowsPerPage;\";\n\t\t$res = $dbSocket->query($sql);\n\t\t$logDebugSQL = \"\";\n\t\t$logDebugSQL .= $sql . \"\\n\";\n\n\n\t/* START - Related to pages_numbering.php */\n\t$maxPage = ceil($numrows/$rowsPerPage);\n\t/* END */\n\n\n\techo \"<table border='0' class='table1'>\\n\";\n\techo \"\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th colspan='25'>\".t('all','Records').\"</th>\n\t\t\t\t\t\t\t</tr>\n\n                                                        <tr>\n                                                        <th colspan='25' align='left'>\n                <br/>\n        \";\n\n        if ($configValues['CONFIG_IFACE_TABLES_LISTING_NUM'] == \"yes\")\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $getFields, $getQuery);\n\n        echo \" </th></tr>\n                                        </thead>\n\n                        \";\n\n\n\t// building the dybamic table list fields\n\techo \"<thread> <tr>\";\n\tforeach ($sqlfields as $value) {\n\t\tswitch($value) {\n\n\t\tcase \"id\":\n\t\t\t$title = t('all','ID');\n\t\t\tbreak;\n\t\tcase \"username\":\n\t\t\t$title = t('all','Username');\n\t\t\tbreak;\n\t\tcase \"password\":\n\t\t\t$title = t('all','Password');\n\t\t\tbreak;\n\t\tcase \"txnId\":\n\t\t\t$title = t('all','TxnId');\n\t\t\tbreak;\n\t\tcase \"planId\":\n\t\t\t$title = t('all','PlanId');\n\t\t\tbreak;\n\t\tcase \"quantity\":\n\t\t\t$title = t('all','Quantity');\n\t\t\tbreak;\n\t\tcase \"business_email\":\n\t\t\t$title = t('all','ReceiverEmail');\n\t\t\tbreak;\n\t\tcase \"business_id\":\n\t\t\t$title = t('all','Business');\n\t\t\tbreak;\n\t\tcase \"payment_tax\":\n\t\t\t$title = t('all','Tax');\n\t\t\tbreak;\n\t\tcase \"payment_cost\":\n\t\t\t$title = t('all','Cost');\n\t\t\tbreak;\n\t\tcase \"payment_fee\":\n\t\t\t$title = t('all','TransactionFee');\n\t\t\tbreak;\n\t\tcase \"payment_total\":\n\t\t\t$title = t('all','TotalCost');\n\t\t\tbreak;\n\t\tcase \"payment_currency\":\n\t\t\t$title = t('all','PaymentCurrency');\n\t\t\tbreak;\n\t\tcase \"first_name\":\n\t\t\t$title = t('all','FirstName');\n\t\t\tbreak;\n\t\tcase \"last_name\":\n\t\t\t$title = t('all','LastName');\n\t\t\tbreak;\n\t\tcase \"payer_email\":\n\t\t\t$title = t('all','PayerEmail');\n\t\t\tbreak;\n\t\tcase \"payer_address_name\":\n\t\t\t$title = t('all','AddressRecipient');\n\t\t\tbreak;\n\t\tcase \"payer_address_street\":\n\t\t\t$title = t('all','Street');\n\t\t\tbreak;\n\t\tcase \"payer_address_country\":\n\t\t\t$title = t('all','Country');\n\t\t\tbreak;\n\t\tcase \"payer_address_country_code\":\n\t\t\t$title = t('all','CountryCode');\n\t\t\tbreak;\n\t\tcase \"payer_address_city\":\n\t\t\t$title = t('all','City');\n\t\t\tbreak;\n\t\tcase \"payer_address_state\":\n\t\t\t$title = t('all','State');\n\t\t\tbreak;\n\t\tcase \"payer_address_zip\":\n\t\t\t$title = t('all','Zip');\n\t\t\tbreak;\n\t\tcase \"payment_date\":\n\t\t\t$title = t('all','PaymentDate');\n\t\t\tbreak;\n\t\tcase \"payment_status\":\n\t\t\t$title = t('all','PaymentStatus');\n\t\t\tbreak;\n\t\tcase \"payer_status\":\n\t\t\t$title = t('all','PayerStatus');\n\t\t\tbreak;\n\t\tcase \"vendor_type\":\n\t\t\t$title = t('all','VendorType');\n\t\t\tbreak;\n\t\tcase \"payment_address_status\":\n\t\t\t$title = t('all','PaymentAddressStatus');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$title = $value;\n\t\t\tbreak;\n\t\t}\n\n\t\techo \"<th scope='col'> $title   </th>\";\n\t} //foreach $sqlfields\n\techo \"</tr> </thread>\";\n\n\n\t// inserting the values of each field from the database to the table\n\twhile($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n\t\techo \"<tr>\";\n\t\tforeach ($sqlfields as $value) {\n\t\t\techo \"<td> \" . $row[$value] . \"</td>\";\n\t\t}\n\t\techo \"</tr>\";\n\t}\n\n        echo \"\n                                        <tfoot>\n                                                        <tr>\n                                                        <th colspan='25' align='left'>\n        \";\n        setupLinks($pageNum, $maxPage, $orderBy, $orderType, $getFields, $getQuery);\n        echo \"\n                                                        </th>\n                                                        </tr>\n                                        </tfoot>\n                \";\n\n\techo \"</table>\";\n\n\tinclude 'library/closedb.php';\n\n?>\n\n\n\n<?php\n\tinclude('include/config/logging.php');\n?>\n\n\t\t</div>\n\t\t\n\t\t<div id=\"footer\">\n\t\t\n\t\t\t\t\t\t\t\t<?php\n        include 'page-footer.php';\n?>\n\n\t\t\n\t\t</div>\n\t\t\n</div>\n</div>\n\n\n</body>\n</html>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','paypalmain.php');\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-merchant.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once('library/config_read.php');\n    \n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    \n    // required later\n    $currDate = date('Y-m-d H:i:s');\n    $currBy = $operator;\n    \n    include('library/opendb.php');\n\n    \n    function addPlanProfile($dbSocket, $username, $planName, $oldplanName) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        $sql = sprintf(\"DELETE FROM %s WHERE UserName='%s'\",\n                       $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        // search to see if the plan is associated with any profiles\n        $sql = sprintf(\"SELECT profile_name FROM %s WHERE plan_name='%s'\",\n                       $configValues['CONFIG_DB_TBL_DALOBILLINGPLANSPROFILES'], $dbSocket->escapeSimple($planName));\n        \n        // $res is an array of all profiles associated with this plan\n        $cols = $dbSocket->getCol($sql);\n        \n        // if the profile list for this plan isn't empty, we associate it with the user\n        if (count($cols) > 0) {\n    \n            // if profiles are associated with this plan, loop through each and add a usergroup entry for each\n            foreach($cols as $profile_name) {\n                $sql = sprintf(\"INSERT INTO %s (username, groupname, priority) VALUES ('%s','%s','0')\",\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($profile_name));\n                $res = $dbSocket->query($sql);\n            }\n        }\n    }\n    \n    function addUserProfiles($dbSocket, $username, $planName, $oldplanName, $groups, $groups_priority, $newgroups) {\n\n        global $logDebugSQL;\n        global $configValues;\n        \n        // update usergroup mapping (existing)\n        if (is_array($groups) && count($groups) > 0) {\n\n            $sql = sprintf(\"DELETE FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n\n            $insert_group_format = \"INSERT INTO %s (username, groupname, priority) VALUES ('%s', '%s', %s)\";\n\n            foreach ($groups as $i => $group) {\n                $group = trim($group);\n                \n                if (empty($group)) {\n                    continue;\n                }\n\n                $priority = (!empty($groups_priority[$i])) ? $groups_priority[$i] : \"0\";\n\n                $sql = sprintf($insert_group_format,\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($group),\n                               $dbSocket->escapeSimple($priority));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n            }\n\n        }\n           \n        // insert usergroup mapping (new groups)\n        if (is_array($newgroups) && count($newgroups) > 0) {\n            foreach ($newgroups as $newgroup) {\n                $newgroup = trim($newgroup);\n                \n                if (empty($newgroup)) {\n                    continue;\n                }\n                \n                $sql = sprintf($insert_group_format,\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($group), 0);\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n            }\n        }\n           \n    }\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        // TODO validate user input\n        $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                  ? trim(str_replace(\"%\", \"\", $_POST['username'])) : \"\";\n        $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n            \n        isset($_POST['password']) ? $password = $_POST['password'] : $password = \"\";\n        isset($_POST['oldplanName']) ? $oldplanName = $_POST['oldplanName'] : $oldplanName = \"\";\n        isset($_POST['planName']) ? $planName = $_POST['planName'] : $planName = \"\";\n        isset($_POST['profiles']) ? $profiles = $_POST['profiles'] : $profiles = \"\";\n        isset($_POST['passwordType']) ? $passwordtype = $_POST['passwordType'] : $passwordtype = \"\";\n        isset($_POST['reassignplanprofiles']) ? $reassignplanprofiles = $_POST['reassignplanprofiles'] : $reassignplanprofiles = \"\";\n        \n        $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n        $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n        $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n        $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n        $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n        $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n        $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n        $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n        $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n        $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n        $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n        $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n        $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n        $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n        $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n        $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n        $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n        $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n        \n        isset($_POST['bi_lead']) ? $bi_lead = $_POST['bi_lead'] : $bi_lead = \"\";\n        isset($_POST['bi_coupon']) ? $bi_coupon = $_POST['bi_coupon'] : $bi_coupon = \"\";\n        isset($_POST['bi_ordertaker']) ? $bi_ordertaker = $_POST['bi_ordertaker'] : $bi_ordertaker = \"\";\n        isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n        isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n        isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n        isset($_POST['bi_nextinvoicedue']) ? $bi_nextinvoicedue = $_POST['bi_nextinvoicedue'] : $bi_nextinvoicedue = \"\";\n        isset($_POST['bi_billdue']) ? $bi_billdue = $_POST['bi_billdue'] : $bi_billdue = \"\";\n        isset($_POST['bi_postalinvoice']) ? $bi_postalinvoice = $_POST['bi_postalinvoice'] : $bi_postalinvoice = \"\";\n        isset($_POST['bi_faxinvoice']) ? $bi_faxinvoice = $_POST['bi_faxinvoice'] : $bi_faxinvoice = \"\";\n        isset($_POST['bi_emailinvoice']) ? $bi_emailinvoice = $_POST['bi_emailinvoice'] : $bi_emailinvoice = \"\";\n\n        $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n        $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n        $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n        $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n        $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n        $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n        $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n        $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n        $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n        $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n        $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n        $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n        $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n        $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n        \n        $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n        $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n        $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n        \n        isset ($_POST['newgroups']) ? $newgroups = $_POST['newgroups'] : $newgroups = \"\";\n        isset ($_POST['groups']) ? $groups = $_POST['groups'] : $groups = \"\";\n        isset ($_POST['groups_priority']) ? $groups_priority = $_POST['groups_priority'] : $groups_priority = \"\";\n\n        if (!empty($username)) {\n            \n            // insert userinfo\n            $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $userinfoExist = intval($res->fetchrow()[0]) > 0;\n            $logDebugSQL .= \"$sql;\\n\";\n        \n            // if there were no records for this user present in the userinfo table\n            if (!$userinfoExist) {\n                // insert user information table\n                $sql = sprintf(\"INSERT INTO %s (id, username, firstname, lastname, email, department, company,\n                                                workphone, homephone,  mobilephone, address, city, state, country,\n                                                zip, notes, changeuserinfo, portalloginpassword, enableportallogin,\n                                                creationdate, creationby, updatedate, updateby) \n                                        VALUES (0, '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s', \n                                                '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s', '%s',\n                                                '%s', NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                                    $dbSocket->escapeSimple($username), $dbSocket->escapeSimple($firstname),\n                                                                    $dbSocket->escapeSimple($lastname), $dbSocket->escapeSimple($email),\n                                                                    $dbSocket->escapeSimple($department), $dbSocket->escapeSimple($company),\n                                                                    $dbSocket->escapeSimple($workphone), $dbSocket->escapeSimple($homephone),\n                                                                    $dbSocket->escapeSimple($mobilephone), $dbSocket->escapeSimple($address),\n                                                                    $dbSocket->escapeSimple($city), $dbSocket->escapeSimple($state),\n                                                                    $dbSocket->escapeSimple($country), $dbSocket->escapeSimple($zip),\n                                                                    $dbSocket->escapeSimple($notes), $dbSocket->escapeSimple($ui_changeuserinfo),\n                                                                    $dbSocket->escapeSimple($ui_PortalLoginPassword),\n                                                                    $dbSocket->escapeSimple($ui_enableUserPortalLogin),\n                                                                    $dbSocket->escapeSimple($currDate), $dbSocket->escapeSimple($currBy));\n            } else {\n               // update user information table\n               $sql = sprintf(\"UPDATE %s SET firstname='%s', lastname='%s', email='%s', department='%s', company='%s', workphone='%s',\n                                             homephone='%s', mobilephone='%s', address='%s', city='%s', state='%s', country='%s',\n                                             zip='%s', notes='%s', changeuserinfo='%s', portalloginpassword='%s', enableportallogin='%s',\n                                             updatedate='%s', updateby='%s'\n                                WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $dbSocket->escapeSimple($firstname),\n                                                      $dbSocket->escapeSimple($lastname), $dbSocket->escapeSimple($email),\n                                                      $dbSocket->escapeSimple($department), $dbSocket->escapeSimple($company),\n                                                      $dbSocket->escapeSimple($workphone), $dbSocket->escapeSimple($homephone),\n                                                      $dbSocket->escapeSimple($mobilephone), $dbSocket->escapeSimple($address),\n                                                      $dbSocket->escapeSimple($city), $dbSocket->escapeSimple($state),\n                                                      $dbSocket->escapeSimple($country), $dbSocket->escapeSimple($zip),\n                                                      $dbSocket->escapeSimple($notes), $dbSocket->escapeSimple($ui_changeuserinfo),\n                                                      $dbSocket->escapeSimple($ui_PortalLoginPassword),\n                                                      $dbSocket->escapeSimple($ui_enableUserPortalLogin),\n                                                      $dbSocket->escapeSimple($currDate), $dbSocket->escapeSimple($currBy),\n                                                      $dbSocket->escapeSimple($username));\n            }\n\n            // execute the insert/update onto userinfo\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            \n            /* perform user billing info table instructions */\n            $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $userbillinfoExist = $res->fetchrow()[0];\n            $logDebugSQL .= \"$sql;\\n\";\n\n            // if there were no records for this user present in the userbillinfo table\n            if (!$userbillinfoExits) {\n                // insert user billing information table\n                $sql = sprintf(\"INSERT INTO %s (id, username, contactperson, company, email, phone, address,\n                                                city, state, country, zip, paymentmethod, cash, creditcardname,\n                                                creditcardnumber, creditcardverification, creditcardtype,\n                                                creditcardexp, notes, changeuserbillinfo, creationdate,\n                                                creationby, updatedate, updateby)\n                                       VALUES (0, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                                               '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                                               NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                             $dbSocket->escapeSimple($username), $dbSocket->escapeSimple($bi_contactperson),\n                                                             $dbSocket->escapeSimple($bi_company), $dbSocket->escapeSimple($bi_email),\n                                                             $dbSocket->escapeSimple($bi_phone), $dbSocket->escapeSimple($bi_address),\n                                                             $dbSocket->escapeSimple($bi_city), $dbSocket->escapeSimple($bi_state),\n                                                             $dbSocket->escapeSimple($bi_country), $dbSocket->escapeSimple($bi_zip),\n                                                             $dbSocket->escapeSimple($bi_paymentmethod), $dbSocket->escapeSimple($bi_cash),\n                                                             $dbSocket->escapeSimple($bi_creditcardname),\n                                                             $dbSocket->escapeSimple($bi_creditcardnumber), \n                                                             $dbSocket->escapeSimple($bi_creditcardverification),\n                                                             $dbSocket->escapeSimple($bi_creditcardtype),\n                                                             $dbSocket->escapeSimple($bi_creditcardexp), $dbSocket->escapeSimple($bi_notes),\n                                                             $dbSocket->escapeSimple($bi_changeuserbillinfo), $currDate, $currBy);\n            } else {\n                // update user information table\n                $sql = sprintf(\"UPDATE %s SET `contactperson`='%s', `planname`='%s', `company`='%s', `email`='%s', `phone`='%s',\n                                              `paymentmethod`='%s', `cash`='%s', `creditcardname`='%s', `creditcardnumber`='%s',\n                                              `creditcardverification`='%s', `creditcardtype`='%s', `creditcardexp`='%s', `address`='%s',\n                                              `city`='%s', `state`='%s', `country`='%s', `zip`='%s', `notes`='%s', `changeuserbillinfo`='%s',\n                                              `lead`='%s', `coupon`='%s', `ordertaker`='%s', `billstatus`='%s', `nextinvoicedue`='%s',\n                                              `billdue`='%s', `postalinvoice`='%s', `faxinvoice`='%s', `emailinvoice`='%s', `updatedate`='%s',\n                                              `updateby`='%s'\n                                        WHERE `username`='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'], $dbSocket->escapeSimple($bi_contactperson),\n                                                                $dbSocket->escapeSimple($planName), $dbSocket->escapeSimple($bi_company),\n                                                                $dbSocket->escapeSimple($bi_email), $dbSocket->escapeSimple($bi_phone),\n                                                                $dbSocket->escapeSimple($bi_paymentmethod), $dbSocket->escapeSimple($bi_cash),\n                                                                $dbSocket->escapeSimple($bi_creditcardname), $dbSocket->escapeSimple($bi_creditcardnumber),\n                                                                $dbSocket->escapeSimple($bi_creditcardverification), $dbSocket->escapeSimple($bi_creditcardtype),\n                                                                $dbSocket->escapeSimple($bi_creditcardexp), $dbSocket->escapeSimple($bi_address),\n                                                                $dbSocket->escapeSimple($bi_city), $dbSocket->escapeSimple($bi_state),\n                                                                $dbSocket->escapeSimple($bi_country), $dbSocket->escapeSimple($bi_zip),\n                                                                $dbSocket->escapeSimple($bi_notes), $dbSocket->escapeSimple($bi_changeuserbillinfo),\n                                                                $dbSocket->escapeSimple($bi_lead), $dbSocket->escapeSimple($bi_coupon),\n                                                                $dbSocket->escapeSimple($bi_ordertaker), $dbSocket->escapeSimple($bi_billstatus),\n                                                                $dbSocket->escapeSimple($bi_nextinvoicedue), $dbSocket->escapeSimple($bi_billdue),\n                                                                $dbSocket->escapeSimple($bi_postalinvoice), $dbSocket->escapeSimple($bi_faxinvoice),\n                                                                $dbSocket->escapeSimple($bi_emailinvoice), $currDate, $currBy,\n                                                                $dbSocket->escapeSimple($username));\n            }\n\n            // execute the insert/update onto userbillinfo\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            if ($reassignplanprofiles == 1) {\n                // if the user chose to re-assign profiles from the change of plan then we proceed with removing\n                // all profiles associated with the user and re-assigning them based on the plan's profiles associations\n                addPlanProfile($dbSocket, $username, $planName, $oldplanName);\n            } else {\n                // otherwise, we remove all profiles and assign profiles as configured in the profiles tab by the user\n                addUserProfiles($dbSocket, $username, $planName, $oldplanName, $groups, $groups_priority, $newgroups);\n            }\n            \n        }\n        \n    } else {\n        $username = (array_key_exists('username', $_REQUEST) && isset($_REQUEST['username']))\n                  ? trim(str_replace(\"%\", \"\", $_REQUEST['username'])) : \"\";\n        $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    }\n    \n    //feed the sidebar variables\n    $edit_username = $username_enc;\n\n\n    /* an sql query to retrieve the password for the username to use in the quick link for the user test connectivity */\n    $sql = sprintf(\"SELECT value FROM %s WHERE username='%s' AND attribute LIKE '%%-Password' ORDER BY id DESC LIMIT 1\",\n                   $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    $user_password = $res->fetchRow()[0];\n\n    /* fill-in all the user info details */\n    $sql = sprintf(\"SELECT firstname, lastname, email, department, company, workphone, homephone, mobilephone, address, city,\n                           state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate,\n                           creationby, updatedate, updateby\n                      FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                    $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    list( \n          $ui_firstname, $ui_lastname, $ui_email, $ui_department, $ui_company, $ui_workphone, $ui_homephone,\n          $ui_mobilephone, $ui_address, $ui_city, $ui_state, $ui_country, $ui_zip, $ui_notes, $ui_changeuserinfo,\n          $ui_PortalLoginPassword, $ui_enableUserPortalLogin, $ui_creationdate, $ui_creationby, $ui_updatedate,\n          $ui_updateby\n        ) = $res->fetchRow();\n\n\n    /* fill-in all the user bill info details */\n    $sql = sprintf(\"SELECT id, planName, contactperson, company, email, phone, address, city, state, country, zip, paymentmethod,\n                           cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp,\n                           notes, changeuserbillinfo, `lead`, coupon, ordertaker, billstatus, lastbill, nextbill,\n                           nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, creationdate, creationby,\n                           updatedate, updateby\n                      FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                    $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    list(\n            $user_id, $bi_planname, $bi_contactperson, $bi_company, $bi_email, $bi_phone, $bi_address, $bi_city,\n            $bi_state, $bi_country, $bi_zip, $bi_paymentmethod, $bi_cash, $bi_creditcardname, $bi_creditcardnumber,\n            $bi_creditcardverification, $bi_creditcardtype, $bi_creditcardexp, $bi_notes, $bi_changeuserbillinfo,\n            $bi_lead, $bi_coupon, $bi_ordertaker, $bi_billstatus, $bi_lastbill, $bi_nextbill, $bi_nextinvoicedue,\n            $bi_billdue, $bi_postalinvoice, $bi_faxinvoice, $bi_emailinvoice, $bi_creationdate, $bi_creationby,\n            $bi_updatedate, $bi_updateby\n        ) = $res->fetchRow();\n\n    include('library/closedb.php');\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    // inline extra javascript\n    $inline_extra_js = sprintf(\"var strUsername = 'username=%s';\\n\", $username_enc);\n    \n    $inline_extra_js .= '\nfunction disableUser() {\n    if (confirm(\"You are about to disable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userDisable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction enableUser() {\n    if (confirm(\"You are about to enable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userEnable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction refillSessionTime() {\n    if (confirm(\"You are about to refill session time for this user account\\nDo you want to continue?\\n\\nSuch action will also bill the user if set so in the plant the user is associated with!\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"refillSessionTime=true\", \"returnMessages\", strUsername);\n        return true;    \n    }\n}\n\n\nfunction refillSessionTraffic() {\n    if (confirm(\"You are about to refill session traffic for this user account\\nDo you want to continue?\\n\\nSuch action will also bill the user if set so in the plant the user is associated with!\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"refillSessionTraffic=true\", \"returnMessages\", strUsername);\n        return true;    \n    }\n}\n\nwindow.onload = function(){\n    ajaxGeneric(\"include/management/userOperations.php\", \"checkDisabled=true\", \"returnMessages\", strUsername);\n};' . \"\\n\";\n    \n    $title = t('Intro','billposedit.php');\n    $help = t('helpPage','billposedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js, \"\", $inline_extra_js);\n\n    include(\"menu-bill-pos.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // ajax return div\n    echo '<div id=\"returnMessages\"></div>';\n\n    if (!empty($username)) {\n\n        include_once('include/management/actionMessages.php');\n        include_once('include/management/populate_selectbox.php');\n\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                    \"type\" => \"hidden\",\n                                    \"value\" => $username_enc,\n                                    \"name\" => \"username\"\n                                 );\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"username_presentation\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($username)) ? $username : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                      );\n                                    \n        $input_descriptors1[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"value\" => ((isset($user_password)) ? $user_password : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        \n        $input_descriptors1[] = array( 'name' => 'oldplanName', 'type' => 'hidden',\n                                                 'value' => ((isset($bi_planname)) ? $bi_planname : \"\") );\n                        \n        $options = get_active_plans();\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                         'type' => 'select',\n                                         'name' => 'planName',\n                                         'caption' => t('all','PlanName'),\n                                         'tooltipText' => t('Tooltip','planNameTooltip'),\n                                         'options' => $options,\n                                         'selected_value' => ((isset($bi_planname)) ? $bi_planname : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        'type' => 'checkbox',\n                                        'name' => 'reassignplanprofiles',\n                                        'caption' => t('button','ReAssignPlanProfiles'),\n                                        'value' => ((isset($reassignplanprofiles)) ? $reassignplanprofiles : \"\"),\n                                        'tooltipText' => t('Tooltip','reassignplanprofiles')\n                                     );\n\n        // draw navbar\n        $navbuttons = array(\n                                'AccountInfo-tab' => t('title','AccountInfo'),\n                                'UserInfo-tab' => t('title','UserInfo'),\n                                'BillingInfo-tab' => t('title','BillingInfo'),\n                                'Profiles-tab' => t('title','Profiles'),\n                                'Invoices-tab' => t('title','Invoices'),\n                                'OtherInfo-tab' => 'Other Info'\n                           );\n        print_tab_navbuttons($navbuttons);\n\n?>\n\n<form method=\"POST\">\n    <div id=\"AccountInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','AccountInfo') ?>\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','AccountInfo') ?></h302>\n\n            <ul>\n\n<?php\n                foreach ($input_descriptors1 as $descr) {\n                    print_form_component($descr);\n                }\n                \n                $buttons = array();\n                \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Refill Session Time',\n                                    'onclick' => 'javascript:refillSessionTime()',\n                                    'name' => 'refillSessionTime-button'\n                                  );\n                                  \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Refill Session Traffic',\n                                    'onclick' => 'javascript:refillSessionTraffic()',\n                                    'name' => 'refillSessionTraffic-button'\n                                  );\n                \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Enable User',\n                                    'onclick' => 'javascript:enableUser()',\n                                    'name' => 'enableUser-button'\n                                  );\n                                  \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Disable User',\n                                    'onclick' => 'javascript:disableUser()',\n                                    'name' => 'disableUser-button'\n                                  );\n                \n                $submit_descriptor = array(\n                                              'type' => 'submit',\n                                              'name' => 'submit',\n                                              'id' => 'AccountInfo-submit',\n                                              'value' => t('buttons','apply')\n                                          );\n?>\n\n                <li class='fieldset'>\n                    <br/><hr><br/><br/>\n            \n<?php\n                    foreach ($buttons as $button_desc) {\n                        print_input_field($button_desc);\n                    }\n?>\n\n                </li>\n            </ul>\n        </fieldset>\n        \n<?php\n        print_input_field($submit_descriptor);\n?>\n        \n    </div>\n\n    <div id=\"UserInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','UserInfo'); ?>\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userinfo.php');\n?>\n    </div>\n\n    <div id=\"BillingInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','BillingInfo'); ?>\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userbillinfo.php');\n?>\n    </div>\n    \n    <div id=\"Profiles-tab\" class=\"tabcontent\" title=\"<?= t('title','Profiles'); ?>\">\n\n<?php\n        include('library/opendb.php');\n        $groupTerminology = \"Profile\";\n        $groupTerminologyPriority = \"ProfilePriority\";\n        include_once('include/management/groups.php');\n        include('library/closedb.php');\n?>\n\n        <h301> Assign New Profiles </h301>\n        <br/>\n        \n        <fieldset>\n            <ul>\n\n                <li class='fieldset'>\n                    <label for='profile' class='form'><?= t('all','Profile')?></label>\n                    <?php\n                            populate_groups(\"Select Profile\",\"newgroups[]\");\n                    ?>\n\n                    <a class='tablenovisit' href='#'\n                            onClick=\"javascript:ajaxGeneric('include/management/dynamic_groups.php','getGroups','divContainerProfiles',genericCounter('divCounter')+'&elemName=newgroups[]');\">Add</a>\n\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('groupTooltip')\" />\n\n                    <div id='divContainerProfiles'>\n                    </div>\n\n                    <div id='groupTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                            <img src='images/icons/comment.png' alt='Tip' border='0' />\n                            <?= t('Tooltip','groupTooltip') ?>\n                    </div>\n                </li>\n\n                <li class='fieldset'>\n                    <br/><br/>\n                    <br/>\n                    <hr><br/>\n                    \n                    <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' class='button' />\n                </li>\n\n            </ul>\n\n        </fieldset>\n\n    <br/>\n\n    </div>\n\n    <div id=\"Invoices-tab\" class=\"tabcontent\" title=\"<?= t('title','Invoices'); ?>\">\n<?php\n        include_once('include/management/userBilling.php');\n        userInvoicesStatus($user_id, 1);\n?>\n    </div><!-- #Invoices-tab -->\n\n</form>\n\n    <div id=\"OtherInfo-tab\" class=\"tabcontent\" title=\"Other Info\">\n<?php\n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n?>\n    </div><!-- #OtherInfo-tab -->\n\n<?php\n    }\n    \n    if (array_key_exists('PREV_LIST_PAGE', $_SESSION) && !empty(trim($_SESSION['PREV_LIST_PAGE']))) {\n        echo '<div style=\"float: right; text-align: right; margin: 0; font-size: small\">';\n        printf('<a href=\"%s\" title=\"Back to Previous Page\">Back to Previous Page</a>', trim($_SESSION['PREV_LIST_PAGE']));\n        echo '</div>';\n        \n        unset($_SESSION['PREV_LIST_PAGE']);\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include('include/management/pages_common.php');\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                     in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n\n\n    isset($_POST['username']) ? $username = $_POST['username'] : $username = \"\";\n    isset($_POST['password']) ? $password = $_POST['password'] : $password = \"\";\n    isset($_POST['planName']) ? $planName = $_POST['planName'] : $planName = \"\";\n    isset($_POST['profiles']) ? $profiles = $_POST['profiles'] : $profiles = \"\";\n    isset($_POST['notificationWelcome']) ? $notificationWelcome = $_POST['notificationWelcome'] : $notificationWelcome = \"\";\n    \n\n    isset($_POST['bi_contactperson']) ? $bi_contactperson = $_POST['bi_contactperson'] : $bi_contactperson = \"\";\n    isset($_POST['bi_company']) ? $bi_company = $_POST['bi_company'] : $bi_company = \"\";\n    isset($_POST['bi_email']) ? $bi_email = $_POST['bi_email'] : $bi_email = \"\";\n    isset($_POST['bi_phone']) ? $bi_phone = $_POST['bi_phone'] : $bi_phone = \"\";\n    isset($_POST['bi_address']) ? $bi_address = $_POST['bi_address'] : $bi_address = \"\";\n    isset($_POST['bi_city']) ? $bi_city = $_POST['bi_city'] : $bi_city = \"\";\n    isset($_POST['bi_state']) ? $bi_state = $_POST['bi_state'] : $bi_state = \"\";\n    isset($_POST['bi_country']) ? $bi_country = $_POST['bi_country'] : $bi_country = \"\";\n    isset($_POST['bi_zip']) ? $bi_zip = $_POST['bi_zip'] : $bi_zip = \"\";\n    isset($_POST['bi_paymentmethod']) ? $bi_paymentmethod = $_POST['bi_paymentmethod'] : $bi_paymentmethod = \"\";\n    isset($_POST['bi_cash']) ? $bi_cash = $_POST['bi_cash'] : $bi_cash = \"\";\n    isset($_POST['bi_creditcardname']) ? $bi_creditcardname = $_POST['bi_creditcardname'] : $bi_creditcardname = \"\";\n    isset($_POST['bi_creditcardnumber']) ? $bi_creditcardnumber = $_POST['bi_creditcardnumber'] : $bi_creditcardnumber = \"\";\n    isset($_POST['bi_creditcardverification']) ? $bi_creditcardverification = $_POST['bi_creditcardverification'] : $bi_creditcardverification = \"\";\n    isset($_POST['bi_creditcardtype']) ? $bi_creditcardtype = $_POST['bi_creditcardtype'] : $bi_creditcardtype = \"\";\n    isset($_POST['bi_creditcardexp']) ? $bi_creditcardexp = $_POST['bi_creditcardexp'] : $bi_creditcardexp = \"\";\n    isset($_POST['bi_notes']) ? $bi_notes = $_POST['bi_notes'] : $bi_notes = \"\";\n    isset($_POST['bi_lead']) ? $bi_lead = $_POST['bi_lead'] : $bi_lead = \"\";\n    isset($_POST['bi_coupon']) ? $bi_coupon = $_POST['bi_coupon'] : $bi_coupon = \"\";\n    isset($_POST['bi_ordertaker']) ? $bi_ordertaker = $_POST['bi_ordertaker'] : $bi_ordertaker = \"\";\n    isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n    isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n    isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n    isset($_POST['bi_nextinvoicedue']) ? $bi_nextinvoicedue = $_POST['bi_nextinvoicedue'] : $bi_nextinvoicedue = \"\";\n    isset($_POST['bi_billdue']) ? $bi_billdue = $_POST['bi_billdue'] : $bi_billdue = \"\";\n    isset($_POST['bi_postalinvoice']) ? $bi_postalinvoice = $_POST['bi_postalinvoice'] : $bi_postalinvoice = \"\";\n    isset($_POST['bi_faxinvoice']) ? $bi_faxinvoice = $_POST['bi_faxinvoice'] : $bi_faxinvoice = \"\";\n    isset($_POST['bi_emailinvoice']) ? $bi_emailinvoice = $_POST['bi_emailinvoice'] : $bi_emailinvoice = \"\";\n    isset($_POST['changeUserBillInfo']) ? $bi_changeuserbillinfo = $_POST['changeUserBillInfo'] : $bi_changeuserbillinfo = \"0\";\n\n    isset($_POST['firstname']) ? $firstname = $_POST['firstname'] : $firstname = \"\";\n    isset($_POST['lastname']) ? $lastname = $_POST['lastname'] : $lastname = \"\";\n    isset($_POST['email']) ? $email = $_POST['email'] : $email = \"\";\n    isset($_POST['department']) ? $department = $_POST['department'] : $department = \"\";\n    isset($_POST['company']) ? $company = $_POST['company'] : $company = \"\";\n    isset($_POST['workphone']) ? $workphone = $_POST['workphone'] : $workphone = \"\";\n    isset($_POST['homephone']) ? $homephone = $_POST['homephone'] :  $homephone = \"\";\n    isset($_POST['mobilephone']) ? $mobilephone = $_POST['mobilephone'] : $mobilephone = \"\";\n    isset($_POST['address']) ? $ui_address = $_POST['address'] : $ui_address = \"\";\n    isset($_POST['city']) ? $ui_city = $_POST['city'] : $ui_city = \"\";\n    isset($_POST['state']) ? $ui_state = $_POST['state'] : $ui_state = \"\";\n    isset($_POST['country']) ? $ui_country = $_POST['country'] : $ui_country = \"\";\n    isset($_POST['zip']) ? $ui_zip = $_POST['zip'] : $ui_zip = \"\";\n    isset($_POST['notes']) ? $notes = $_POST['notes'] : $notes = \"\";\n    isset($_POST['changeUserInfo']) ? $ui_changeuserinfo = $_POST['changeUserInfo'] : $ui_changeuserinfo = \"0\";\n    isset($_POST['enableUserPortalLogin']) ? $ui_enableUserPortalLogin = $_POST['enableUserPortalLogin'] : $ui_enableUserPortalLogin = \"0\";\n    isset($_POST['portalLoginPassword']) ? $ui_PortalLoginPassword = $_POST['portalLoginPassword'] : $ui_PortalLoginPassword = \"\";\n    \n\n    function addPlanProfile($dbSocket, $username, $planName) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        // search to see if the plan is associated with any profiles\n        $sql = \"SELECT profile_name FROM \".\n                $configValues['CONFIG_DB_TBL_DALOBILLINGPLANSPROFILES'].\n                \" WHERE plan_name='$planName'\";\n        $res = $dbSocket->getCol($sql);\n        // $res is an array of all profiles associated with this plan\n        \n        // if the profile list for this plan isn't empty, we associate it with the user\n        if (count($res) != 0) {\n    \n            // if profiles are associated with this plan, loop through each and add a usergroup entry for each\n            foreach($res as $profile_name) {\n                $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADUSERGROUP'].\" (UserName,GroupName,priority) \".\n                    \" VALUES ('\".$dbSocket->escapeSimple($username).\"','$profile_name','0')\";\n                $res = $dbSocket->query($sql);\n            }\n            \n            return true;\n        \n        }\n        \n        return false;\n\n    }\n    \n\n    function addGroups($dbSocket, $username, $groups) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        // insert usergroup mapping\n        if (isset($groups)) {\n\n            foreach ($groups as $group) {\n\n                if (trim($group) != \"\") {\n                    $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADUSERGROUP'].\" (UserName,GroupName,priority) \".\n                            \" VALUES ('\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($group).\"',0) \";\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= $sql . \"\\n\";\n                }\n            }\n        }\n    }\n\n\n    \n    \n    function addUserInfo($dbSocket, $username) {\n\n        global $firstname;\n        global $lastname;\n        global $email;\n        global $department;\n        global $company;\n        global $workphone;\n        global $homephone;\n        global $mobilephone;\n        global $ui_address;\n        global $ui_city;\n        global $ui_state;\n        global $ui_country;\n        global $ui_zip;\n        global $notes;\n        global $ui_changeuserinfo;\n        global $ui_enableUserPortalLogin;\n        global $ui_PortalLoginPassword;\n        global $logDebugSQL;\n        global $configValues;\n\n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOUSERINFO'].\n                        \" WHERE username='\".$dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        // if there were no records for this user present in the userinfo table\n        if ($res->numRows() == 0) {\n            // insert user information table\n            $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOUSERINFO'].\n                    \" (id, username, firstname, lastname, email, department, company, workphone, homephone, \".\n                    \" mobilephone, address, city, state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate, creationby, updatedate, updateby) \".\n                    \" VALUES (0,\n                    '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($firstname).\"', '\".\n                    $dbSocket->escapeSimple($lastname).\"', '\".$dbSocket->escapeSimple($email).\"', '\".\n                    $dbSocket->escapeSimple($department).\"', '\".$dbSocket->escapeSimple($company).\"', '\".\n                    $dbSocket->escapeSimple($workphone).\"', '\".$dbSocket->escapeSimple($homephone).\"', '\".\n                    $dbSocket->escapeSimple($mobilephone).\"', '\".$dbSocket->escapeSimple($ui_address).\"', '\".\n                    $dbSocket->escapeSimple($ui_city).\"', '\".$dbSocket->escapeSimple($ui_state).\"', '\".\n                    $dbSocket->escapeSimple($ui_country).\"', '\".\n                    $dbSocket->escapeSimple($ui_zip).\"', '\".$dbSocket->escapeSimple($notes).\"', '\".\n                    $dbSocket->escapeSimple($ui_changeuserinfo).\"', '\".\n                    $dbSocket->escapeSimple($ui_PortalLoginPassword).\"', '\".$dbSocket->escapeSimple($ui_enableUserPortalLogin).\n                    \"', '$currDate', '$currBy', NULL, NULL)\";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n        } //FIXME:\n          //if the user already exist in userinfo then we should somehow alert the user\n          //that this has happened and the administrator/operator will take care of it\n    }\n\n\n\n    function addUserBillInfo($dbSocket, $username) {\n\n        global $planName;\n        global $bi_contactperson;\n        global $bi_company;\n        global $bi_email;\n        global $bi_phone;\n        global $bi_address;\n        global $bi_city;\n        global $bi_state;\n        global $bi_country;\n        global $bi_zip;\n        global $bi_paymentmethod;\n        global $bi_cash;\n        global $bi_creditcardname;\n        global $bi_creditcardnumber;\n        global $bi_creditcardexp;\n        global $bi_creditcardverification;\n        global $bi_creditcardtype;\n        global $bi_notes;\n        global $bi_lead;\n        global $bi_coupon;\n        global $bi_ordertaker;\n        global $bi_billstatus;\n        global $bi_lastbill;\n        global $bi_nextbill;\n        global $bi_nextinvoicedue;\n        global $bi_billdue;\n        global $bi_postalinvoice;\n        global $bi_faxinvoice;\n        global $bi_emailinvoice;\n        global $bi_changeuserbillinfo;\n        global $logDebugSQL;\n        global $configValues;\n\n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n                        \" WHERE username='\".$dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        // if there were no records for this user present in the userbillinfo table\n        if ($res->numRows() == 0) {\n            \n            // calculate the nextbill and other related billing information\n            $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\n                            \" WHERE planName='\".$dbSocket->escapeSimple($planName).\"' LIMIT 1\";\n            $res = $dbSocket->query($sql);\n            $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n            $logDebugSQL .= $sql . \"\\n\";\n                            \n            $planRecurring = $row['planRecurring'];\n            $planRecurringPeriod = $row['planRecurringPeriod'];\n            $planRecurringBillingSchedule = $row['planRecurringBillingSchedule'];\n            \n            \n            // initialize next bill date string (Y-m-d style)\n            $nextBillDate = \"0000-00-00\";\n            \n            // get next billing date\n            if ($planRecurring == \"Yes\") {\n                $nextBillDate = getNextBillingDate($planRecurringBillingSchedule, $planRecurringPeriod);\n            }\n\n        \n            // if $bi_nextbill was not set to anything (empty)\n            if (empty($bi_nextbill))\n                $bi_nextbill = $nextBillDate;\n                    \n            \n            \n            // insert user billing information table\n            $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n                    \" (id, planname, username, contactperson, company, email, phone, \".\n                    \" address, city, state, country, zip, \".\n                    \" paymentmethod, cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp, \".\n                    \" notes, changeuserbillinfo, \".\n                    \" `lead`, coupon, ordertaker, billstatus, lastbill, nextbill, nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, \".\n                    \" creationdate, creationby, updatedate, updateby) \".\n                    \" VALUES (0, '\".$dbSocket->escapeSimple($planName).\"', \n                    '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($bi_contactperson).\"', '\".\n                    $dbSocket->escapeSimple($bi_company).\"', '\".$dbSocket->escapeSimple($bi_email).\"', '\".\n                    $dbSocket->escapeSimple($bi_phone).\"', '\".$dbSocket->escapeSimple($bi_address).\"', '\".\n                    $dbSocket->escapeSimple($bi_city).\"', '\".$dbSocket->escapeSimple($bi_state).\"', '\".\n                    $dbSocket->escapeSimple($bi_country).\"', '\".\n                    $dbSocket->escapeSimple($bi_zip).\"', '\".$dbSocket->escapeSimple($bi_paymentmethod).\"', '\".\n                    $dbSocket->escapeSimple($bi_cash).\"', '\".$dbSocket->escapeSimple($bi_creditcardname).\"', '\".\n                    $dbSocket->escapeSimple($bi_creditcardnumber).\"', '\".$dbSocket->escapeSimple($bi_creditcardverification).\"', '\".\n                    $dbSocket->escapeSimple($bi_creditcardtype).\"', '\".$dbSocket->escapeSimple($bi_creditcardexp).\"', '\".\n                    $dbSocket->escapeSimple($bi_notes).\"', '\".\n                    $dbSocket->escapeSimple($bi_changeuserbillinfo).\"', '\".\n                    $dbSocket->escapeSimple($bi_lead).\"', '\".$dbSocket->escapeSimple($bi_coupon).\"', '\".\n                    $dbSocket->escapeSimple($bi_ordertaker).\"', '\".$dbSocket->escapeSimple($bi_billstatus).\"', '\".\n                    $dbSocket->escapeSimple($bi_lastbill).\"', '\".$dbSocket->escapeSimple($bi_nextbill).\"', '\".\n                    $dbSocket->escapeSimple($bi_nextinvoicedue).\"', '\".$dbSocket->escapeSimple($bi_billdue).\"', '\".\n                    $dbSocket->escapeSimple($bi_postalinvoice).\"', '\".$dbSocket->escapeSimple($bi_faxinvoice).\"', '\".\n                    $dbSocket->escapeSimple($bi_emailinvoice).\n                                    \"', '$currDate', '$currBy', NULL, NULL)\";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n            \n            $user_id = $dbSocket->getOne( \"SELECT LAST_INSERT_ID() FROM `\".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\"`\" );\n            return $user_id;\n            \n        } //FIXME:\n          //if the user already exist in userinfo then we should somehow alert the user\n          //that this has happened and the administrator/operator will take care of it\n\n    }\n    \n    \n    \n    \n\n    if (isset($_POST[\"submit\"])) {\n        \n        include 'library/opendb.php';\n\n        global $username;\n        global $password;\n        global $passwordType;\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_RADCHECK'].\" WHERE UserName='\".\n                        $dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        if ($res->numRows() == 0) {\n            \n            if (trim($username) != \"\" and trim($password) != \"\") {\n\n                // we need to perform the secure method escapeSimple on $dbPassword early because as seen below\n                // we manipulate the string and manually add to it the '' which screw up the query if added in $sql\n                $password = $dbSocket->escapeSimple($password);\n\n                switch($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) {\n                    case \"cleartext\":\n                            $dbPassword = \"'$password'\";\n                            break;\n                    case \"crypt\":\n                            $dbPassword = \"ENCRYPT('$password')\";\n                            break;\n                    case \"md5\":\n                            $dbPassword = \"MD5('$password')\";\n                            break;\n                    default:\n                            $dbPassword = \"'$password'\";\n                }\n\n                // at this stage $dbPassword contains the password string encapsulated by '' and either uses\n                // a function to encrypt it like ENCRYPT or it doesn't, it's based on the configuration\n                // but here we provide another stage, for Crypt-Password and MD5-Password it's obvious\n                // that the password need be encrypted so even if this option is not in the configuration\n                // we enforce it.\n\n                // we first check if the password attribute is to be encrypted at all\n                if (preg_match(\"/crypt/i\", $passwordType)) {\n                    // if we don't find the encrypt function even though we identified\n                    // a Crypt-Password attribute\n                    if (!(preg_match(\"/encrypt/i\",$dbPassword))) {\n                            $dbPassword = \"ENCRYPT('$password')\";\n                    }\n\n                        // we now perform the same check but for an MD5-Password attribute\n                } elseif (preg_match(\"/md5/i\", $passwordType)) {\n                    // if we don't find the md5 function even though we identified\n                    // a MD5-Password attribute\n                    if (!(preg_match(\"/md5/i\",$dbPassword))) {\n                            $dbPassword = \"MD5('$password')\";\n                    }\n                }\n\n                // insert username/password\n                $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADCHECK'].\" (id,Username,Attribute,op,Value) \".\n                                \" VALUES (0, '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($passwordType).\n                                \"', ':=', $dbPassword)\";\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= $sql . \"\\n\";\n\n                addGroups($dbSocket, $username, $profiles);\n                addPlanProfile($dbSocket, $username, $planName);\n                addUserInfo($dbSocket, $username);\n                $userbillinfo_id = addUserBillInfo($dbSocket, $username);\n\n                // create any invoices if required (meaning, if a plan was chosen)\n                if ($planName) {\n                    include_once(\"include/management/userBilling.php\");\n                    \n                    // get plan information\n                    $sql = \"SELECT id, planCost, planSetupCost, planTax FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\n                        \" WHERE planName='\".$dbSocket->escapeSimple($planName).\"' LIMIT 1\";\n                    $res = $dbSocket->query($sql);\n                    $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n                    // calculate tax (planTax is the numerical percentage amount) \n                    $calcTax = (float) ($row['planCost'] * (float)($row['planTax'] / 100) );\n                    $invoiceItems[0]['plan_id'] = $row['id'];\n                    $invoiceItems[0]['amount'] = $row['planCost'];\n                    $invoiceItems[0]['tax'] = $calcTax;\n                    $invoiceItems[0]['notes'] = 'charge for plan service';\n                    \n                    if (isset($row['planSetupCost']) && ($row['planSetupCost'] != '') ) {\n                        $calcTax = (float) ($row['planSetupCost'] * (float)($row['planTax'] / 100) );\n                        $invoiceItems[1]['plan_id'] = $row['id'];\n                        $invoiceItems[1]['amount'] = $row['planSetupCost'];\n                        $invoiceItems[1]['tax'] = $calcTax;\n                        $invoiceItems[1]['notes'] = 'charge for plan setup fee (one time)';\n                    }\n                                        \n                    userInvoiceAdd($userbillinfo_id, array(), $invoiceItems);\n                    \n                }\n                \n                \n                if ($notificationWelcome == 1) {\n                    include(\"include/common/notificationsWelcome.php\");\n                    \n                }\n                \n                $successMsg = \"Added to database new user: <b> $username </b>\";\n                $logAction .= \"Successfully added new user [$username] on page: \";\n            } else {\n                $failureMsg = \"username or password are empty\";\n                $logAction .= \"Failed adding (possible empty user/pass) new user [$username] on page: \";\n            }\n        } else { \n            $failureMsg = \"user already exist in database: <b> $username </b>\";\n            $logAction .= \"Failed adding new user already existing in database [$username] on page: \";\n        }\n    \n        include 'library/closedb.php';\n\n    }\n\n    include_once('library/config_read.php');\n    \n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','billposnew.php');\n    $help = t('helpPage','billposnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-bill-pos.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n        // set navbar stuff\n    $navbuttons = array(\n                            \"AccountInfo-tab\" => t('title','AccountInfo'),\n                            \"UserInfo-tab\" => t('title','UserInfo'),\n                            \"BillingInfo-tab\" => t('title','BillingInfo'),\n                            \"Advanced-tab\" => t('title','Advanced'),\n                       );\n\n    print_tab_navbuttons($navbuttons);\n\n    include_once('include/management/actionMessages.php');\n    \n    include_once('include/management/populate_selectbox.php');\n    \n    $input_descriptors = array();\n    \n    $input_descriptors[] = array(\n                                    \"id\" => \"username\",\n                                    \"name\" => \"username\",\n                                    \"caption\" => t('all','Username'),\n                                    \"type\" => \"text\",\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                 );\n                                \n    $input_descriptors[] = array(\n                                    \"id\" => \"password\",\n                                    \"name\" => \"password\",\n                                    \"caption\" => t('all','Password'),\n                                    \"type\" => $hiddenPassword,\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                );\n    \n?>\n\n<form method=\"POST\">\n    <div class=\"tabber\">\n        <div class=\"tabcontent\" id=\"AccountInfo-tab\" style=\"display: block\">\n            <fieldset>\n\n                <h302><?= t('title','AccountInfo') ?></h302>\n\n                <ul>\n<?php\n                    foreach ($input_descriptors as $input_descriptor) {\n                        print_form_component($input_descriptor);\n                    }\n?>\n\n\n\n                    <li class='fieldset'>\n                    <label for='planName' class='form'><?= t('all','PlanName') ?></label>\n                            <?php\n                                   populate_plans(\"Select Plan\",\"planName\",\"form\");\n                            ?>\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('planNameTooltip')\" /> \n                    \n                    <div id='planNameTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                        <img src='images/icons/comment.png' alt='Tip' border='0' />\n                        <?= t('Tooltip','planNameTooltip') ?>\n                    </div>\n                    </li>\n    \n\n                    <li class='fieldset'>\n                    <label for='profile' class='form'><?= t('all','Profile')?></label>\n                    <?php\n                            populate_groups(\"Select Profile\",\"profiles[]\");\n                    ?>\n\n                    <a class='tablenovisit' href='#'\n                            onClick=\"javascript:ajaxGeneric('include/management/dynamic_groups.php','getGroups','divContainerProfiles',genericCounter('divCounter')+'&elemName=profiles[]');\">Add</a>\n\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('groupTooltip')\" />\n\n                    <div id='divContainerProfiles'>\n                    </div>\n\n                    <div id='groupTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                            <img src='images/icons/comment.png' alt='Tip' border='0' />\n                            <?= t('Tooltip','groupTooltip') ?>\n                    </div>\n                    </li>\n\n        <li class='fieldset'>\n        <label for='userupdate' class='form'><?= t('all','SendWelcomeNotification')?></label>\n        <input type='checkbox' class='form' name='notificationWelcome' value='1' checked/>\n            <br/>\n        </li>\n\n\n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n\n    </fieldset>\n\n    </div>\n\n\n        <div class=\"tabcontent\" id=\"UserInfo-tab\">\n        <?php\n                $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n                include_once('include/management/userinfo.php');\n        ?>\n        </div>\n\n        <div class=\"tabcontent\" id=\"BillingInfo-tab\">\n        <?php\n                $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n                include_once('include/management/userbillinfo.php');\n        ?>\n        </div>\n\n\n     <div class=\"tabcontent\" id=\"Advanced-tab\">\n\n        <fieldset>\n\n                <h302> <?= t('title','AccountInfo'); ?> </h302>\n\n                <ul>\n\n                <li class='fieldset'>\n                <label for='passwordType' class='form'><?= t('all','PasswordType')?> </label>\n                <select class='form' tabindex=102 name='passwordType' >\n                        <option value='Cleartext-Password'>Cleartext-Password</option>\n                        <option value='User-Password'>User-Password</option>\n                        <option value='Crypt-Password'>Crypt-Password</option>\n                        <option value='MD5-Password'>MD5-Password</option>\n                        <option value='SHA1-Password'>SHA1-Password</option>\n                        <option value='CHAP-Password'>CHAP-Password</option>\n                </select>\n                </li>\n\n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n\n    </fieldset>\n\n    </div>\n\n</div>\n\n    </form>\n\n<?php\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include(\"library/validation.php\");\n\n    //setting values for the order by and order type variables\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $ratename = (array_key_exists('ratename', $_GET) && isset($_GET['ratename']))\n              ? trim(str_replace(\"%\", \"\", $_GET['ratename'])) : \"\";\n    $ratename_enc = (!empty($ratename)) ? htmlspecialchars($ratename, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n              ? trim(str_replace(\"%\", \"\", $_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // in other cases we just check that syntax is ok\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    //feed the sidebar variables\n    $billing_date_ratename = $ratename;\n    $billing_date_username = $username;\n    $billing_date_startdate = $startdate;\n    $billing_date_enddate = $enddate;\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array();\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','billratesdate.php');\n    $help = t('helpPage','billratesdate');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n\n    include(\"menu-bill-rates.php\");\n    \n    $cols = array(\n                    \"username\" => t('all','Username'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                    \"acctstarttime\" => t('all','LastLoginTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    t('all','Billed')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n    }\n\n    if (!empty($ratename)) {\n        $sql_WHERE[] = sprintf(\"ratename='%s'\", $dbSocket->escapeSimple($ratename));\n        $partial_query_params[] = sprintf(\"ratename=%s\", urlencode($ratename_enc));\n        \n\n        include 'library/opendb.php';\n        include 'include/management/pages_common.php';\n        include 'include/management/pages_numbering.php';        // must be included after opendb because it needs to read the CONFIG_IFACE_TABLES_LISTING variable from the config file\n\n        // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n        $username = $dbSocket->escapeSimple($username);\n        $startdate = $dbSocket->escapeSimple($startdate);\n        $enddate = $dbSocket->escapeSimple($enddate);\n        $ratename = $dbSocket->escapeSimple($ratename);\n\n        include_once('include/management/userBilling.php');\n        userBillingRatesSummary($username, $startdate, $enddate, $ratename, 1);                // draw the billing rates summary table\n\n\n        include 'library/opendb.php';\n\n        // get rate type\n        $sql = sprintf(\"SELECT rateType FROM %s WHERE rateName = '%s'\", $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'], $ratename);\n        $res = $dbSocket->query($sql);\n\n        if ($res->numRows() == 0) {\n            $failureMsg = \"Rate was not found in database, check again please\";\n        } else {\n\n            $row = $res->fetchRow();\n            list($ratetypenum, $ratetypetime) = explode(\"/\", $row[0]);\n\n            switch ($ratetypetime) {                  // we need to translate any kind of time into seconds,\n                                                      // so a minute is 60 seconds, an hour is 3600,\n                case \"second\":                        // and so on...\n                    $multiplicate = 1;\n                    break;\n                case \"minute\":\n                    $multiplicate = 60;\n                    break;\n                case \"hour\":\n                    $multiplicate = 3600;\n                    break;\n                case \"day\":\n                    $multiplicate = 86400;\n                    break;\n                case \"week\":\n                    $multiplicate = 604800;\n                    break;\n                case \"month\":\n                    $multiplicate = 187488000;        // a month is 31 days\n                    break;\n                default:\n                    $multiplicate = 0;\n                    break;\n            }\n\n            // then the rate cost would be the amount of seconds times the prefix multiplicator thus:\n            $rateDivisor = $ratetypenum * $multiplicate;\n        }\n\n        $sql = sprintf(\"SELECT DISTINCT(ra.username), ra.NASIPAddress, ra.AcctStartTime, ra.AcctSessionTime, dbr.rateCost\n                          FROM %s AS ra, %s AS dbr WHERE dbr.rateName='%s' \",\n                       $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'], $ratename);\n\n        if (count($sql_WHERE) > 0) {\n            $sql .= implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $numrows = $res->numRows();\n\n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n            $per_page_numrows = $res->numRows();\n\n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n                echo '</td>';\n            }\n?>\n            </tr>\n            \n            <tr>\n<?php\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n\n<?php\n\n            $sumBilled = 0;\n            $sumSession = 0;\n\n            $td_format = \"<td>%s</td>\";\n\n            while($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n\n                $sessionTime = $row[3];\n                $rateCost = $row[4];\n                $billed = ($sessionTime/$rateDivisor) * $rateCost;\n                $sumBilled += $billed;\n                $sumSession += $sessionTime;\n\n                echo \"<tr>\";\n                printf($td_format, $row[0]);\n                printf($td_format, $row[1]);\n                printf($td_format, $row[2]);\n                printf($td_format, time2str($row[3]));\n                printf($td_format, number_format($billed, 2));\n                echo \"</tr>\";\n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n    \n        } else {\n            $failureMsg = \"No entries retrieved\";\n        }\n        \n    } else {\n        $failureMsg = \"Rate name is required\";\n        \n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n\n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/validation.php\");\n    \n    $db_tbl_param_label = array(\n                                    'CONFIG_DB_TBL_RADCHECK' => t('all','radcheck'), \n                                    'CONFIG_DB_TBL_RADREPLY' => t('all','radreply'),\n                                    'CONFIG_DB_TBL_RADGROUPREPLY' => t('all','radgroupreply'), \n                                    'CONFIG_DB_TBL_RADGROUPCHECK' => t('all','radgroupcheck'), \n                                    'CONFIG_DB_TBL_RADUSERGROUP' => t('all','usergroup'), \n                                    'CONFIG_DB_TBL_RADACCT' => t('all','radacct'), \n                                    'CONFIG_DB_TBL_RADNAS' => t('all','nas'),\n                                    'CONFIG_DB_TBL_RADHG' => t('all','hunt'), \n                                    'CONFIG_DB_TBL_RADPOSTAUTH' => t('all','radpostauth'), \n                                    'CONFIG_DB_TBL_RADIPPOOL' => t('all','radippool'), \n                                    'CONFIG_DB_TBL_DALOUSERINFO' => t('all','userinfo'), \n                                    'CONFIG_DB_TBL_DALODICTIONARY' => t('all','dictionary'), \n                                    'CONFIG_DB_TBL_DALOREALMS' => t('all','realms'), \n                                    'CONFIG_DB_TBL_DALOPROXYS' => t('all','proxys'), \n                                    'CONFIG_DB_TBL_DALOBILLINGMERCHANT' => t('all','billingmerchant'), \n                                    'CONFIG_DB_TBL_DALOBILLINGPAYPAL' => t('all','billingpaypal'), \n                                    'CONFIG_DB_TBL_DALOBILLINGPLANS' => t('all','billingplans'), \n                                    'CONFIG_DB_TBL_DALOBILLINGRATES' => t('all','billingrates'), \n                                    'CONFIG_DB_TBL_DALOBILLINGHISTORY' => t('all','billinghistory'), \n                                    'CONFIG_DB_TBL_DALOUSERBILLINFO' => t('all','billinginfo'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICE' => t('all','Invoice'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS' => t('all','InvoiceItems'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICESTATUS' => t('all','InvoiceStatus'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICETYPE' => t('all','InvoiceType'), \n                                    'CONFIG_DB_TBL_DALOPAYMENTTYPES' => t('all','payment_type'), \n                                    'CONFIG_DB_TBL_DALOPAYMENTS' => t('all','payments'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS' => t('all','operators'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS_ACL' => t('all','operators_acl'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS_ACL_FILES' => t('all','operators_acl_files'), \n                                    'CONFIG_DB_TBL_DALOHOTSPOTS' => t('all','hotspots'), \n                                    'CONFIG_DB_TBL_DALONODE' => t('all','node'), \n                                );\n    \n    $generic_db_conf_params = array(\n                                        'CONFIG_DB_HOST' => t('all','DatabaseHostname'),\n                                        'CONFIG_DB_USER' => t('all','DatabaseUser'),\n                                        'CONFIG_DB_PASS' => t('all','DatabasePass'),\n                                        'CONFIG_DB_NAME' => t('all','DatabaseName'),\n                                   );\n    \n    $tbl_name_regex = '^[a-zA-Z0-9_]+$';\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // if the form has been submitted we validate and store the configuration\n            if (array_key_exists('CONFIG_DB_ENGINE', $_POST) && isset($_POST['CONFIG_DB_ENGINE']) &&\n                in_array(strtolower($_POST['CONFIG_DB_ENGINE']), array_keys($valid_db_engines))) {\n                $configValues['CONFIG_DB_ENGINE'] = $_POST['CONFIG_DB_ENGINE']; \n            }\n        \n            if (array_key_exists('CONFIG_DB_PORT', $_POST) && isset($_POST['CONFIG_DB_PORT']) &&\n                intval($_POST['CONFIG_DB_PORT']) >= 0 && intval($_POST['CONFIG_DB_PORT']) <= 65535) {\n                $configValues['CONFIG_DB_PORT'] = intval($_POST['CONFIG_DB_PORT']);\n            }\n\n            foreach ($generic_db_conf_params as $param => $caption) {\n                if (array_key_exists($param, $_POST) && isset($_POST[$param])) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n\n            // validate table name\n            foreach ($db_tbl_param_label as $param => $label) {\n                if (array_key_exists($param, $_POST) && isset($_POST[$param]) && preg_match($tbl_name_regex, $_POST[$param]) !== false) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n\n            include(\"library/config_write.php\");\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n    \n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','configmain.php');\n    $help = t('helpPage','configmain');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-config.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    \n    $submit_descriptor = array(\n                                \"type\" => \"submit\",\n                                \"name\" => \"submit\",\n                                \"value\" => t('buttons','apply')\n                              );\n    \n    // first tab\n    $input_descriptors1 = array();\n    \n    $input_descriptors1[] = array(\n                                        \"name\" => \"CONFIG_DB_ENGINE\",\n                                        \"caption\" => t('all','DBEngine'),\n                                        \"selected_value\" => $configValues['CONFIG_DB_ENGINE'],\n                                        \"type\" => \"select\",\n                                        \"options\" => $valid_db_engines,\n                                     );\n    \n    $input_descriptors1[] = array(\n                                        \"name\" => \"CONFIG_DB_PORT\",\n                                        \"caption\" => t('all','DatabasePort'),\n                                        \"value\" => $configValues['CONFIG_DB_PORT'],\n                                        \"type\" => \"number\",\n                                        \"min\" => \"0\",\n                                        \"max\" => \"65535\",\n                                     );\n    \n    foreach ($generic_db_conf_params as $name => $caption) {\n        $input_descriptors1[] = array(\n                                        \"name\" => $name,\n                                        \"caption\" => $caption,\n                                        \"value\" => $configValues[$name],\n                                        \"type\" => \"text\"\n                                     );\n    }\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = $submit_descriptor;\n\n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Settings'),\n                                 );\n\n    // second tab\n    $input_descriptors2 = array();\n    foreach ($db_tbl_param_label as $name => $caption) {\n        $input_descriptors2[] = array(\n                                        \"name\" => $name,\n                                        \"caption\" => $caption,\n                                        \"value\" => $configValues[$name],\n                                        \"pattern\" => $tbl_name_regex,\n                                        \"type\" => \"text\"\n                                     );\n    }\n    \n    $input_descriptors2[] = $submit_descriptor;\n    \n    $fieldset2_descriptor = array(\n                                    \"title\" => t('title','DatabaseTables'),\n                                 );\n    \n    // set navbar stuff\n    $navkeys = array( 'Settings', 'DatabaseTables' );\n\n    // print navbar controls\n    print_tab_header($navkeys);\n\n    // open form\n    open_form();\n    \n    // open first tab (shown)\n    open_tab($navkeys, 0, true);\n    \n    open_fieldset($fieldset1_descriptor);\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab();\n    \n    // open second tab (hidden)\n    open_tab($navkeys, 1);\n    \n    open_fieldset($fieldset2_descriptor);\n\n    foreach ($input_descriptors2 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab();\n    \n    close_form();\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include(\"library/validation.php\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            if (array_key_exists('CONFIG_LANG', $_POST) && !empty(strtolower(trim($_POST['CONFIG_LANG']))) &&\n                in_array(strtolower(trim($_POST['CONFIG_LANG'])), array_keys($valid_languages))) {\n                \n                $configValues['CONFIG_LANG'] = $_POST['CONFIG_LANG'];\n                include(\"library/config_write.php\");\n            }\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','configlang.php');\n    $help = t('helpPage','configlang');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    $input_descriptors1 = array();\n    \n    $input_descriptors1[] = array(\n                                    'name' => 'CONFIG_LANG',\n                                    'type' => 'select',\n                                    'caption' => t('all','PrimaryLanguage'),\n                                    'options' => $valid_languages,\n                                    'selected_value' => $configValues['CONFIG_LANG']\n                                 );\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                 );\n                                 \n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Settings'),\n                                 );\n\n    open_form();\n    \n    open_fieldset($fieldset1_descriptor);\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n   \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    \n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','configmain.php');\n    $help = t('helpPage','configmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config-reports.php\");\n\n?>\n                \n        <div id=\"contentnorightbar\">\n\n<?php\n    print_title_and_help($title, $help);\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    $log = \"visited page: \";\n\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    \n    if (array_key_exists('submit', $_POST) && isset($_POST['submit'])) {\n        $myfile = \"library/googlemaps.php\";\n        \n        $default_failureMsg = sprintf(\"Error: could not open the file for reading or writing: <strong>%s</strong>\", $myfile)\n                            . \"<br>Check file permissions. The file should be readable and writable by the webserver's user/group\";\n        \n        \n        if (array_key_exists('code', $_POST) && isset($_POST['code']) &&\n            preg_match('/[a-zA-Z0-9_-]+/', $_POST['code']) !== false) {\n        \n            \n            \n            if (is_readable($myfile) && is_writable($myfile)) {\n                $old_contents = file_get_contents($myfile);\n                $replacement = sprintf('<script src=\"//maps.google.com/maps?file=api&v=3&key=%s\"></script>', $_POST['code']);\n                $new_contents = preg_replace('/<script.*<\\/script>/si', $replacement, $old_contents);\n                \n                if ($new_contents !== $old_contents) {\n                    if (file_put_contents($myfile, $new_contents) !== false) {\n                        $successMsg = \"Successfully updated GoogleMaps API Registration code\";\n                    } else {\n                        $failureMsg = $default_failureMsg;\n                    }\n                }\n\n            } else {\n                $failureMsg = $default_failureMsg;\n            }\n        }\n    }\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','gismain.php');\n    $help = t('helpPage','gismain');\n\n    print_html_prologue($title, $langCode);\n    \n    include (\"menu-gis.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','graphmain.php');\n    $help = t('helpPage','graphmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-graphs.php\");\n\n?>\n        <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = \"Help\";\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-help.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n?>\n\n            <p>\n                One of several communication mediums available at your disposal:<br/><br/>\n\n                <b>daloRADIUS website</b>: <a href=\"http://www.daloradius.com\">daloRADIUS blog</a><br/><br/>\n                <b>daloRADIUS Project at GitHub</b>: <a href=\"https://github.com/lirantal/daloradius\">GitHub project</a><br/>\n                At GitHub you may find the trackers for submitting tickets for support, bugs or features for next releases.<br/>\n                The official daloRADIUS package is available at\n                GitHub as well.<br/><br/>\n                <b>daloRADIUS Project at SourceForge</b>: <a href=\"http://sourceforge.net/projects/daloradius/\">SourceForge project</a><br/>\n                Forums and the mailing list archive to review and search for issues.<br/>\n                The daloRADIUS packages here are old, use the GitHub ones instead.<br/><br/>\n                <b>daloRADIUS Mailing List</b>: Email to daloradius-users@lists.sourceforge.net, though registration to the mailing list<br/>\n                is required first <a href=\"https://lists.sourceforge.net/lists/listinfo/daloradius-users\">here</a><br/><br/>\n\n                <b>daloRADIUS IRC</b>: you can find us at #daloradius on irc.freenode.net\n            </p>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n\n\n<?php\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n\tinclude_once('library/config_read.php');\n    $log = \"visited page: \";\n    include('include/config/logging.php');\n\n?>\n\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * Description:\n *              returns user billing information (rates, plans, etc)\n *\n * Authors:     Liran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n\n\n\n\n/*\n *********************************************************************************************************\n * userInvoiceAdd\n * general billing function to add invoices to the user based on the user_id\n *\n * $userId \t\t\t\t   the userbillinfo user id or the username (autodetects)\n * $invoiceInfo            array holding the invoice information\n * $invoiceItems           array holding the invoice items information\n *\n *********************************************************************************************************\n */\nfunction userInvoiceAdd($userId, $invoiceInfo = array(), $invoiceItems = array()) {\n\n\tinclude(dirname(__FILE__).'/../../library/opendb.php');\n\n\t$user_id = false;\n\n\t// if provided a numeric user id then this is the user_id that we need\n\tif (is_numeric($userId)) {\n\t\t$user_id = $dbSocket->escapeSimple($userId);\t\t\t// sanitize variable for sql statement\n\t} else {\n\t\t// otherwise this is the username and we need to look up the user id from the userbillinfo table\n\n\t\t$username = $dbSocket->escapeSimple($userId);\n\t\t$sql = 'SELECT id FROM '.$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n\t\t\t\t' WHERE username=\"'.$username.'\"';\n\t\t$res = $dbSocket->query($sql);\n\t\t$logDebugSQL .= $sql . \"\\n\";\n\n\t\t$row = $res->fetchRow();\n\t\t$user_id = $row[0];\n\n\t}\n\n\t// if something is not right with the user id (set to null, false, whatever) we abort\n\tif (!$user_id)\n\t\treturn false;\n\n\n\t$currDate = date('Y-m-d H:i:s');\n\t$currBy = $_SESSION['operator_user'];\n\n\tif (!$invoiceInfo)\n\t\t$invoiceInfo = array();\n\n\t// create default invoice information if nothing was provided\n\t$myinvoiceInfo['date'] = $currDate;\n\t$myinvoiceInfo['status_id'] = 1;\t\t\t // defaults to invoice status of 'open'\n\t$myinvoiceInfo['type_id'] = 1;\t\t\t // defaults to invoice type of 'Plans'\n\t$myinvoiceInfo['notes'] = 'provisioned new user from daloRADIUS platform';\n\t$invoiceInfo = array_merge($myinvoiceInfo, $invoiceInfo);\n\n\n\t$sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\n\t\t\t\" (id, user_id, date, status_id, type_id, notes, creationdate, creationby, updatedate, updateby) \".\n\t\t\t\" VALUES (0, '\".$user_id.\"', '\".\n\t\t\t$dbSocket->escapeSimple($invoiceInfo['date']).\"', '\".\n\t\t\t$dbSocket->escapeSimple($invoiceInfo['status_id']).\"', '\".\n\t\t\t$dbSocket->escapeSimple($invoiceInfo['type_id']).\"', '\".\n\t\t\t$dbSocket->escapeSimple($invoiceInfo['notes']).\"', \".\n\t\t\t\" '$currDate', '$currBy', NULL, NULL)\";\n\t$res = $dbSocket->query($sql);\n\t$logDebugSQL .= $sql . \"\\n\";\n\n\t// if there hasn't been any errors with inserting the invoice record\n\tif (!PEAR::isError($res)) {\n\n\t\t// get the added invoice id from the database\n\t\t$invoice_id = $dbSocket->getOne( \"SELECT LAST_INSERT_ID() FROM `\".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\"`\" );\n\n\t\tif (!$invoice_id)\n\t\t\treturn false;\n\n\t\tforeach($invoiceItems as $invoiceItem) {\n\t\t\t// set default information for the invoice items\n\t\t\t/*\n\t\t\t$myinvoiceItems['plan_id'] = '' ;\n\t\t\t$myinvoiceItems['amount'] = '' ;\n\t\t\t$myinvoiceItems['tax'] = '' ;\n\t\t\t$myinvoiceItems['notes'] = '' ;\n\t\t\t$invoiceItems = array_merge($myinvoiceItems, $invoiceItems);\n\t\t\t*/\n\n\t\t\t// now add an invoice item\n\t\t\t$sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS'].\n\t\t\t\t\" (id, invoice_id, plan_id, amount, tax_amount, notes, \".\n\t\t\t\t\" creationdate, creationby, updatedate, updateby) \".\n\t\t\t\t\" VALUES (0, '\".$invoice_id.\"', '\".\n\t\t\t\t$dbSocket->escapeSimple($invoiceItem['plan_id']).\"', '\".\n\t\t\t\t$dbSocket->escapeSimple($invoiceItem['amount']).\"', '\".\n\t\t\t\t$dbSocket->escapeSimple($invoiceItem['tax']).\"', '\".\n\t\t\t\t$dbSocket->escapeSimple($invoiceItem['notes']).\"', \".\n\t\t\t\t\" '$currDate', '$currBy', NULL, NULL)\";\n\n\t\t\t$res = $dbSocket->query($sql);\n\t\t\t$logDebugSQL .= $sql . \"\\n\";\n\n\t\t}\n\n\t}\n\n\n\n\tinclude(dirname(__FILE__).'/../../library/closedb.php');\n\n\treturn true;\n\n}\n\n\n\n\n\n/*\n *********************************************************************************************************\n * userInvoicesStatus\n * $username            username to provide information of\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user invoices status: total invoices, partial, completed, due invoices, due amount\n *\n *********************************************************************************************************\n */\nfunction userInvoicesStatus($user_id, $drawTable) {\n\n\tinclude_once('include/management/pages_common.php');\n\tinclude 'library/opendb.php';\n\n\t$user_id = $dbSocket->escapeSimple($user_id);\t\t\t// sanitize variable for sql statement\n\n\t$sql = \"SELECT COUNT(distinct(a.id)) AS TotalInvoices, a.id, a.date, a.status_id, a.type_id, b.contactperson, b.username, \".\n\t\t\t\" c.value AS status, COALESCE(SUM(e2.totalpayed), 0) as totalpayed, COALESCE(SUM(d2.totalbilled), 0) as totalbilled, \".\n\t\t\t\" SUM(a.status_id = 1) as openInvoices \".\n\t\t\t\" FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\" AS a\".\n\t\t\t\" INNER JOIN \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\" AS b ON (a.user_id = b.id) \".\n\t\t\t\" INNER JOIN \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICESTATUS'].\" AS c ON (a.status_id = c.id) \".\n\t\t\t\" LEFT JOIN (SELECT SUM(d.amount + d.tax_amount) \".\n\t\t\t\t\t\" as totalbilled, invoice_id FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS'].\" AS d \".\n\t\t\t\" GROUP BY d.invoice_id) AS d2 ON (d2.invoice_id = a.id) \".\n\t\t\t\" LEFT JOIN (SELECT SUM(e.amount) as totalpayed, invoice_id FROM \".\n\t\t\t$configValues['CONFIG_DB_TBL_DALOPAYMENTS'].\" AS e GROUP BY e.invoice_id) AS e2 ON (e2.invoice_id = a.id) \".\n\t\t\t\" WHERE (a.user_id = $user_id)\".\n\t\t\t\" GROUP BY b.id \";\n\n\t$res = $dbSocket->query($sql);\n\t$row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n\t$totalInvoices = $row['TotalInvoices'];\n\t$totalBilled = $row['totalbilled'];\n\t$totalPayed = $row['totalpayed'];\n\t$openInvoices = $row['openInvoices'];\n\n\tinclude 'library/closedb.php';\n\n\tif ($drawTable == 1) {\n\t\techo '\n\t\t\t\t<fieldset>\n\n                <h302> User Invoices </h302>\n\t\t\t\t<br/>\n\n\t\t\t\t<ul>\n\n\t\t\t\t\t<input class=\"button\" type=\"button\" value=\"New Invoice\"\n\t\t\t\t\t\tonClick=\"javascript:window.location = \\'bill-invoice-new.php?user_id='.$user_id.'\\';\" />\n\n\t\t\t\t\t<input class=\"button\" type=\"button\" value=\"Show Invoices\"\n\t\t\t\t\t\tonClick=\"javascript:window.location = \\'bill-invoice-list.php?user_id='.$user_id.'\\';\" />\n\n\t\t\t\t\t<input class=\"button\" type=\"button\" value=\"Show Payments\"\n\t\t\t\t\t\tonClick=\"javascript:window.location = \\'bill-payments-list.php?user_id='.$user_id.'\\';\" />\n\n\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t\t<label for=\"totalInvoices\" class=\"form\">Total Invoices</label>\n\t\t\t\t\t\t<input type=\"text\" value=\"'.$totalInvoices.'\" disabled />\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t\t<label for=\"totalbilled\" class=\"form\">Open Invoices</label>\n\t\t\t\t\t\t<input type=\"text\" value=\"'.$openInvoices.'\" disabled />\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t\t<label for=\"totalbilled\" class=\"form\">Total Billed</label>\n\t\t\t\t\t\t<input type=\"text\" value=\"'.$totalBilled.'\" disabled />\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t\t<label for=\"totalbilled\" class=\"form\">Total Payed</label>\n\t\t\t\t\t\t<input type=\"text\" value=\"'.$totalPayed.'\" disabled />\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t\t<label for=\"totalbilled\" class=\"form\">Balance</label>\n\t\t\t\t\t\t<input type=\"text\" value=\"'.($totalPayed - $totalBilled).'\" disabled />\n\t\t\t\t\t</li>\n\n\n\t\t\t\t\t<li class=\"fieldset\">\n\t\t\t\t\t<br/>\n\t\t\t\t\t<hr><br/>\n\t\t\t\t\t<input type=\"submit\" name=\"submit\" value=\"Apply\" tabindex=10000 class=\"button\" />\n\t\t\t\t\t</li>\n\n\t\t\t</ul>\n\n\t\t\t</fieldset>\n\n\t\t\t';\n\n\t}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n *********************************************************************************************************\n * userBillingRatesSummary\n * $username            username to provide information of\n * $startdate\t\tstarting date, first accounting session\n * $enddate\t\tending date, last accounting session\n * $ratename\t\tthe rate to use for calculations\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user connection information: uploads, download, session time, total billed, etc...\n *\n *********************************************************************************************************\n */\nfunction userBillingRatesSummary($username, $startdate, $enddate, $ratename, $drawTable) {\n\n\tinclude_once('include/management/pages_common.php');\n\tinclude 'library/opendb.php';\n\n\t$username = $dbSocket->escapeSimple($username);\t\t\t// sanitize variable for sql statement\n    $startdate = $dbSocket->escapeSimple($startdate);\n    $enddate = $dbSocket->escapeSimple($enddate);\n    $ratename = $dbSocket->escapeSimple($ratename);\n\n    // get rate type\n    $sql = \"SELECT rateType FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\" WHERE \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateName = '$ratename'\";\n    $res = $dbSocket->query($sql);\n\n\tif ($res->numRows() == 0)\n\t\treturn;\n\n        $row = $res->fetchRow();\n        list($ratetypenum, $ratetypetime) = explode(\"/\",$row[0]);\n\n        switch ($ratetypetime) {                                        // we need to translate any kind of time into seconds, so a minute is 60 seconds, an hour is 3600,\n                case \"second\":                                          // and so on...\n                        $multiplicate = 1;\n                        break;\n                case \"minute\":\n                        $multiplicate = 60;\n                        break;\n                case \"hour\":\n                        $multiplicate = 3600;\n                        break;\n                case \"day\":\n                        $multiplicate = 86400;\n                        break;\n                case \"week\":\n                        $multiplicate = 604800;\n                        break;\n                case \"month\":\n                        $multiplicate = 187488000;                      // a month is 31 days\n                        break;\n                default:\n                        $multiplicate = 0;\n                        break;\n        }\n\n        // then the rate cost would be the amount of seconds times the prefix multiplicator thus:\n        $rateDivisor = ($ratetypenum * $multiplicate);\n\n        $sql = \"SELECT distinct(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".username), \".$configValues['CONFIG_DB_TBL_RADACCT'].\".NASIPAddress, \".\n                $configValues['CONFIG_DB_TBL_RADACCT'].\".AcctStartTime, SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctSessionTime) AS AcctSessionTime, \".\n                $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateCost, SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctInputOctets) AS AcctInputOctets, \".\n\t\t\" SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctOutputOctets) AS AcctOutputOctets \".\n                \" FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\", \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\" WHERE (AcctStartTime >= '$startdate') and (AcctStartTime <= '$enddate') and (UserName = '$username') and (\".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateName = '$ratename') GROUP BY UserName\";\n\t$res = $dbSocket->query($sql);\n\t$row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n\t$rateCost = $row['rateCost'];\n\t$userUpload = toxbyte($row['AcctInputOctets']);\n\t$userDownload = toxbyte($row['AcctOutputOctets']);\n\t$userOnlineTime = time2str($row['AcctSessionTime']);\n\t$sessionTime = $row['AcctSessionTime'];\n\n\t$sumBilled = (($sessionTime/$rateDivisor)*$rateCost);\n\n        include 'library/closedb.php';\n\n        if ($drawTable == 1) {\n\n                echo \"<table border='0' class='table1'>\";\n                echo \"\n        \t\t<thead>\n        \t\t\t<tr>\n        \t                <th colspan='10' align='left'>\n        \t\t\t\t<a class=\\\"table\\\" href=\\\"javascript:toggleShowDiv('divBillingRatesSummary')\\\">Billing Summary</a>\n        \t                </th>\n        \t                </tr>\n        \t\t</thead>\n        \t\t</table>\n        \t\";\n\n                echo \"\n                        <div id='divBillingRatesSummary' style='display:none;visibility:visible'>\n               \t\t<table border='0' class='table1'>\n        \t\t<thread>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Username\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $username\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Billing for period of\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $startdate until $enddate (inclusive)\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Online Time\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userOnlineTime\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Upload\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userUpload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Download\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userDownload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Rate Name\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $ratename\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Total Billed\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $sumBilled\n                        </th>\n                        </tr>\n\n                        </table>\n\n        \t\t</div>\n        \t\";\n\n\t}\n\n\n}\n\n\n\n/*\n *********************************************************************************************************\n * userBillingPayPalSummary\n * $startdate\t\tstarting date, first accounting session\n * $enddate\t\tending date, last accounting session\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user connection information: uploads, download, session time, total billed, etc...\n *\n *********************************************************************************************************\n */\nfunction userBillingPayPalSummary($startdate, $enddate, $payer_email, $payment_address_status, $payer_status, $payment_status, $vendor_type, $drawTable) {\n\n\tinclude_once('include/management/pages_common.php');\n\tinclude 'library/opendb.php';\n\n        $startdate = $dbSocket->escapeSimple($startdate);\n        $enddate = $dbSocket->escapeSimple($enddate);\n        $payer_email = $dbSocket->escapeSimple($payer_email);\n        $payment_address_status = $dbSocket->escapeSimple($payment_address_status);\n        $payer_status = $dbSocket->escapeSimple($payer_status);\n        $payment_status = $dbSocket->escapeSimple($payment_status);\n\n        $sql = \"SELECT \".$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\".Username AS Username, business_email, \".\n        $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\".planName, \".$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\".planId, SUM(payment_total) AS total, SUM(payment_fee) \".\n\t\t\" AS fee, SUM(payment_tax) AS tax, payment_currency, SUM(AcctSessionTime) AS AcctSessionTime, SUM(AcctInputOctets) AS AcctInputOctets, \".\n\t\t\" SUM(AcctOutputOctets) AS AcctOutputOctets \".\n\t\t\" FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\n\t\t\" LEFT JOIN \".$configValues['CONFIG_DB_TBL_RADACCT'].\" ON \".\n\t\t$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\".Username=\".$configValues['CONFIG_DB_TBL_RADACCT'].\".Username \".\n\t\t\" LEFT JOIN \".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\" ON \".\n\t\t$configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'].\".planId=\".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\".id \".\n\t\t\" WHERE \".\n\t        \" (business_email LIKE '$payer_email') AND \".\n                \" (payment_address_status LIKE '$payment_address_status') AND \".\n                \" (payer_status LIKE '$payer_status') AND \".\n                \" (payment_status LIKE '$payment_status') AND \".\n                \" (vendor_type LIKE '$vendor_type') AND \".\n                \" (payment_date>'$startdate' AND payment_date<'$enddate')\".\n\t\t\" GROUP BY Username\";\n        $res = $dbSocket->query($sql);\n\n\tif ($res->numRows() == 0)\n\t\treturn;\n\n\t$row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n\t$planTotalCost = $row['total'];\n\t$planTotalTax = $row['tax'];\n\t$planTotalFee = $row['fee'];\n\t$userUpload = toxbyte($row['AcctInputOctets']);\n\t$userDownload = toxbyte($row['AcctOutputOctets']);\n\t$userOnlineTime = time2str($row['AcctSessionTime']);\n\t$sessionTime = $row['AcctSessionTime'];\n\t$planCurrency = $row['payment_currency'];\n\t$planName = $row['planName'];\n\t$planId = $row['planId'];\n\t$payer_email = $row['business_email'];\n\t$username = $row['Username'];\n\n\t$grossGain = ($planTotalCost-($planTotalTax+$planTotalFee));\n\n        include 'library/closedb.php';\n\n        if ($drawTable == 1) {\n\n                echo \"<table border='0' class='table1'>\";\n                echo \"\n        \t\t<thead>\n        \t\t\t<tr>\n        \t                <th colspan='10' align='left'>\n        \t\t\t\t<a class=\\\"table\\\" href=\\\"javascript:toggleShowDiv('divBillingPayPalSummary')\\\">Billing Summary</a>\n        \t                </th>\n        \t                </tr>\n        \t\t</thead>\n        \t\t</table>\n        \t\";\n\n                echo \"\n                        <div id='divBillingPayPalSummary' style='display:none;visibility:visible'>\n               \t\t<table border='0' class='table1'>\n        \t\t<thread>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Username\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $username (email: $payer_email)\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Billing for period of\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $startdate until $enddate (inclusive)\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Online Time\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userOnlineTime\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Upload\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userUpload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Download\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userDownload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Plan name\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $planName (planId: $planId)\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Total Plans Cost <br/> Total Transaction Fees <br/> Total Transaction Taxs\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $planTotalCost <br/> $planTotalFee <br/> $planTotalTax\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Gross Gain\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $grossGain $planCurrency\n                        </th>\n                        </tr>\n\n                        </table>\n\n        \t\t</div>\n        \t\";\n\n\t}\n\n\n}\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/validation.php') !== false) {\n    header('Location: ../index.php');\n    exit;\n}\n\n// commonly used regexes collection\ndefine(\"DATE_REGEX\", '/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/');\ndefine(\"ORDER_TYPE_REGEX\", '/^(de|a)sc$/');\ndefine(\"IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9]).){3}((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])$/');\ndefine(\"NETMASK_LENGTH_REGEX\", '/^3[0-2]|[1-2][0-9]|[1-9]$/');\ndefine(\"MACADDR_REGEX\", '/^(?:[0-9A-Fa-f]{2}([-:]))(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}$/');\ndefine(\"PINCODE_REGEX\", '/^[a-zA-Z0-9]+$/');\n\n// this regex allows input like (e.g.) 127, 127., 127.0, 127.0., 127.0.0, 127.0.0 and 127.0.0.1\ndefine(\"LOOSE_IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])\\.?){1,4}$/');\n\ndefine(\"ALL_PRINTABLE_CHARS_REGEX\", '/^[ -~]+$/');\n\n// some parameters can be validated using a whitelist.\n// here we collect some useful whitelist.\n// this lists can be also used for presentation purpose.\n// whitelists naming convention:\n// $valid_ [param_name] s\n$valid_authTypes = array( \n                            \"userAuth\" => \"Based on username and password\",\n                            \"macAuth\" => \"Based on MAC address\",\n                            \"pincodeAuth\" => \"Based on PIN code\"\n                        );\n\n$valid_passwordTypes = array(\n                                \"Cleartext-Password\",\n                                \"NT-Password\",\n                                \"MD5-Password\",\n                                \"SHA1-Password\",\n                                \"User-Password\",\n                                \"Crypt-Password\",\n                                //~ \"CHAP-Password\"\n                             );\n\n$valid_ops = array(\n                    \"=\", \":=\", \":=\", \"==\", \"+=\", \"!=\", \">\",\n                    \">=\", \"<\", \"<=\", \"=~\", \"!~\", \"=*\", \"!*\"\n                  );\n\n$valid_db_engines = array(\n                            \"mysql\" => \"MySQL\",\n                            \"pgsql\" => \"PostgreSQL\",\n                            \"odbc\" => \"ODBC\",\n                            \"mssql\" => \"MsSQL\",\n                            \"mysqli\" => \"MySQLi\",\n                            \"msql\" => \"MsQL\",\n                            \"sybase\" => \"Sybase\",\n                            \"sqlite\" => \"Sqlite\",\n                            \"oci8\" => \"Oci8 \",\n                            \"ibase\" => \"ibase\",\n                            \"fbsql\" => \"fbsql\",\n                            \"informix\" => \"informix\"\n                         );\n\n// values taken from an instance of freeradius 3.0.21\n$valid_nastypes = array(\n                         \"other\", \"cisco\", \"computone\", \"livingston\", \"juniper\", \"max40xx\", \"multitech\",\n                         \"netserver\", \"pathras\", \"patton\", \"portslave\", \"tc\", \"usrhiper\"\n                       );\n\n$acct_custom_query_options_all = array(\n                                        \"RadAcctId\",\n                                        \"AcctSessionId\",\n                                        \"AcctUniqueId\",\n                                        \"UserName\",\n                                        \"Realm\",\n                                        \"NASIPAddress\",\n                                        \"NASPortId\",\n                                        \"NASPortType\",\n                                        \"AcctStartTime\",\n                                        \"AcctStopTime\",\n                                        \"AcctSessionTime\",\n                                        \"AcctAuthentic\",\n                                        \"ConnectInfo_start\",\n                                        \"ConnectInfo_stop\",\n                                        \"AcctInputOctets\",\n                                        \"AcctOutputOctets\",\n                                        \"CalledStationId\",\n                                        \"CallingStationId\",\n                                        \"AcctTerminateCause\",\n                                        \"ServiceType\",\n                                        \"FramedProtocol\",\n                                        \"FramedIPAddress\",\n                                        \"AcctStartDelay\",\n                                        \"AcctStopDelay\"\n                                    );\n                                    \n$acct_custom_query_options_default = array(\n                                            \"UserName\", \"Realm\", \"NASIPAddress\", \"AcctStartTime\", \"AcctStopTime\",\n                                            \"AcctSessionTime\", \"AcctInputOctets\", \"AcctOutputOctets\", \"CalledStationId\",\n                                            \"CallingStationId\", \"AcctTerminateCause\", \"FramedIPAddress\"\n                                          );\n\n// validating values\n$valid_languages = array(\n                            \"en\" => \"English\", \n                            \"it\" => \"Italian\", \n                            \"hu\" => \"Hungarian\", \n                            \"ro\" => \"Romanian\",\n                            \"ru\" => \"Russian\", \n                            \"ja\" => \"Japanese\",\n                            \"zh\" => \"Chinese\",\n                            \"es_ve\" => \"Spanish - Venezuelan\", \n                            \"pt_br\" => \"Portuguese - Brazilian\", \n                        );\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-accounting-custom.php') !== false) {\n    header(\"Location: /index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Accounting\";\n\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/accounting-subnav.php\");\n\n?>\n\n            <div id=\"sidebar\">\n                <h2>Accounting</h2>\n                \n                <h3>Custom Query</h3>\n                <ul class=\"subnav\">\n                \n                    <li>\n                        <form name=\"acctcustomquery\" action=\"acct-custom-query.php\" method=\"get\" class=\"sidebar\">\n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                            <br><br>\n                            \n                            <h109><?= t('button','BetweenDates') ?></h109><br>\n                            \n                            <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                            <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_startdate)) ? $accounting_custom_startdate : date(\"Y-m-01\") ?>\">\n\n                            <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                            <input name=\"enddate\" type=\"date\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_enddate)) ? $accounting_custom_enddate : date(\"Y-m-t\") ?>\">\n                            \n                            <br><br>\n                            \n<?php\n                                \n                            $descr = array(\n                                            \"caption\" => t('button','Where'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"where_field\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($where_field)) ? $where_field : $acct_custom_query_options_all[0]),\n                                          );\n                            \n                            print_form_component($descr);\n                            \n                            \n                            $descr = array(\n                                            \"caption\" => \"Operator\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"operator\",\n                                            \"options\" => array(\"equals\", \"contains\"),\n                                            \"selected_value\" => ((isset($operator)) ? $operator : \"equals\"),\n                                          );\n                            \n                            print_form_component($descr);\n                            \n?>\n                            <input type=\"text\" name=\"where_value\" tooltipText=\"<?= t('Tooltip','Filter') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_value)) ? $accounting_custom_value : \"\" ?>\">\n                            <br><br>\n\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','AccountingFieldsinQuery'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"sqlfields[]\",\n                                            \"id\" => \"sqlfields\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($sqlfields)) ? $sqlfields : $acct_custom_query_options_default),\n                                            \"multiple\" => true\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('all')\">Select All</a>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('none')\">Select None</a>\n                            <br><br>\n\n<script>\n    function select(what) {\n        var selected = (what == 'all'),\n            sqlfields = document.getElementById('sqlfields');\n    \n        for (var i = 0; i < sqlfields.options.length; i++) {\n            sqlfields.options[i].selected = selected;\n        }\n    }\n</script>\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','OrderBy'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderBy\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($orderBy)) ? $orderBy : $acct_custom_query_options_all[0])\n                                          );\n                            \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => \"Order Type\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderType\",\n                                            \"options\" => array(\"asc\" => \"Ascending\", \"desc\" => \"Descending\"),\n                                            \"selected_value\" => ((isset($orderType)) ? $orderType : \"asc\")\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                            <br>\n                            \n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                        </form>\n                    </li>\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-bill-history.php') !== false) {\n    header(\"Location: /index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Billing\";\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/billing-subnav.php\");\n\n$checkboxes = array(\n                        \"id\" => t('all','ID'),\n                        \"username\" => t('all','Username'),\n                        \"planId\" => t('all','PlanId'),\n\n                        \"billAmount\" => t('all','BillAmount'),\n                        \"billAction\" => t('all','BillAction'),\n                        \"billPerformer\" => t('all','BillPerformer'),\n                        \"billReason\" => t('all','BillReason'),\n\n                        \"paymentmethod\" => t('ContactInfo','PaymentMethod'),\n                        \"cash\" => t('ContactInfo','Cash'),\n\n                        \"creditcardname\" => t('ContactInfo','CreditCardName'),\n                        \"creditcardnumber\" => t('ContactInfo','CreditCardNumber'),\n                        \"creditcardverification\" => t('ContactInfo','CreditCardVerificationNumber'),\n                        \"creditcardtype\" => t('ContactInfo','CreditCardType'),\n                        \"creditcardexp\" => t('ContactInfo','CreditCardExpiration'),\n                        \"coupon\" => t('all','Coupon'),\n                        \"discount\" => t('all','Discount'),\n                        \"notes\" => t('ContactInfo','Notes'),\n                        \"creationdate\" => t('all','CreationDate'),\n                        \"creationby\" => t('all','CreationBy'),\n                        \"updatedate\" => t('all','UpdateDate'),\n                        \"updateby\" => t('all','UpdateBy')\n                    );\n\n$checkboxes_checked = array(\n                                \"username\",\n                                \"planId\",\n                                \"billAmount\",\n                                \"billAction\",\n                                \"billPerformer\",\n                                \"paymentmethod\"\n                           );\n\n?>\n\n            <div id=\"sidebar\">\n                <h2>Billing</h2>\n                \n                <h3>Track Billing History</h3>\n                <ul class=\"subnav\">\n                    <li>\n                        <form name=\"billhistory\" action=\"bill-history-query.php\" method=\"GET\" class=\"sidebar\">\n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                            \n                            <br><br>\n\n                            <h109><?= t('button','BetweenDates') ?></h109><br>\n                            <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                            <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                value=\"<?= (isset($billing_date_startdate)) ? $billing_date_startdate : date(\"Y-m-01\") ?>\">\n\n                            <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                            <input name=\"enddate\" type=\"date\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                value=\"<?= (isset($billing_date_enddate)) ? $billing_date_enddate : date(\"Y-m-t\") ?>\">\n                            \n                            <br><br>\n\n                            <h109><?= t('all','Username') ?></h109><br>\n                            <input name=\"username\" type=\"text\"\n                                value=\"<?= (isset($billing_history_username)) ? $billing_history_username : \"*\" ?>\">\n\n                            <h109><?= t('all','BillAction') ?></h109><br>\n                            <select name=\"billaction\" size=\"1\">\n                                <option value=\"<?= (isset($billing_history_billaction)) ? $billing_history_billaction : \"%\" ?>\">\n                                    <?= (isset($billing_history_billaction)) ? $billing_history_billaction : \"Any\" ?>\n                                </option>\n            \n                                <option value=\"\"></option>\n                                <option value=\"Refill Session Time\">Refill Session Time</option>\n                                <option value=\"Refill Session Traffic\">Refill Session Traffic</option>\n                            </select>\n                            \n                            <br><br>\n                                \n                            <h109><?= t('button','AccountingFieldsinQuery') ?></h109><br>\n<?php\n                            foreach ($checkboxes as $value => $caption) {\n                                $checked = in_array($value, $checkboxes_checked) ? ' checked' : '';\n                                printf('<input type=\"checkbox\" name=\"sqlfields[]\" value=\"%s\"%s><h109>%s</h109><br>', $value, $checked, $caption);\n                            }\n?>\n\n                            <br>Select:\n                            <a class=\"table\" href=\"javascript:SetChecked(1,'sqlfields[]','billhistory')\">All</a>\n                            <a class=\"table\" href=\"javascript:SetChecked(0,'sqlfields[]','billhistory')\">None</a>\n\n                            <br><br>\n            \n                            <h109><?= t('button','OrderBy') ?><h109><br>         \n                            <div style=\"text-align: center\">\n                                <select name=\"orderBy\" size=\"1\">\n                                    <option value=\"id\"> Id </option>\n                                    <option value=\"username\"> username </option>\n                                    <option value=\"txnId\"> txnId </option>\n                                </select>\n\n                                <select name=\"orderType\" size=\"1\">\n                                    <option value=\"ASC\"> Ascending </option>\n                                    <option value=\"DESC\"> Descending </option>\n                                </select>\n                            </div>\n\n                            <br><br>\n   \n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                        </form>\n                    </li>\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-bill-merchant.php') !== false) {\n    header(\"Location: /index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Billing\";\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/billing-subnav.php\");\n    \n$checkboxes = array(\n                        \"id\" => t('all','ID'),\n                        \"username\" => t('all','Username'),\n                        \"password\"  => t('all','Password'),\n                        \"txnId\"  => t('all','TxnId'),\n                        \"planName\" => t('all','PlanName'),\n                        \"planId\"  => t('all','PlanId'),\n                        \"quantity\"  => t('all','Quantity'),\n                        \"business_email\"  => t('all','ReceiverEmail'),\n                        \"business_id\"  => t('all','Business'),\n                        \"payment_tax\" => t('all','Tax'),\n                        \"payment_cost\"  => t('all','Cost'),\n                        \"payment_fee\" => t('all','TransactionFee'),\n                        \"payment_total\" => t('all','TotalCost'),\n                        \"payment_currency\" => t('all','PaymentCurrency'),\n                        \"first_name\" => t('all','FirstName'),\n                        \"last_name\" => t('all','LastName'),\n                        \"payer_email\" => t('all','PayerEmail'),\n                        \"payer_address_name\"  => t('all','AddressRecipient'),\n                        \"payer_address_street\"  => t('all','Street'),\n                        \"payer_address_country\" => t('all','Country'),\n                        \"payer_address_country_code\"  => t('all','CountryCode'),\n                        \"payer_address_city\" => t('all','City'),\n                        \"payer_address_state\" => t('all','State'),\n                        \"payer_address_zip\"  => t('all','Zip'),\n                        \"payment_date\" => t('all','PaymentDate'),\n                        \"payment_status\" => t('all','PaymentStatus'),\n                        \"payer_status\" => t('all','PayerStatus'),\n                        \"payment_address_status\" => t('all','PaymentAddressStatus'),\n                        \"vendor_type\" => t('all','VendorType')\n                   );\n$checkboxes_checked = array(\n                            \"username\",\n                            \"planName\",\n                            \"payment_fee\",\n                            \"payment_total\",\n                            \"payment_currency\",\n                            \"first_name\",\n                            \"last_name\",\n                            \"payer_email\",\n                            \"payer_address_country\",\n                            \"payer_address_city\",\n                            \"payer_address_state\",\n                            \"payment_date\",\n                            \"payment_status\",\n                            \"vendor_type\"\n                           );\n\n?>\n\n                <div id=\"sidebar\">\n                    <h2>Billing</h2>\n                    \n                    <h3>Track PayPal Transactions</h3>\n                    <ul class=\"subnav\">\n                        <li>\n                            <form name=\"billpaypaltransactions\" action=\"bill-merchant-transactions.php\" method=\"GET\" class=\"sidebar\">\n                                <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                                \n                                <br><br>\n                                \n                                <h109><?= t('button','BetweenDates'); ?></h109><br>\n                                \n                                <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                                <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                    value=\"<?= (isset($billing_date_startdate)) ? $billing_date_startdate : date(\"Y-m-01\") ?>\">\n\n                                <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                                <input name=\"enddate\" type=\"text\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                    value=\"<?= (isset($billing_date_enddate)) ? $billing_date_enddate : date(\"Y-m-t\") ?>\">\n\n                                <br><br>\n\n                                <h109><?= t('all','VendorType'); ?></h109><br>\n                                <select name=\"vendor_type\" size=\"1\">\n                                    <option value=\"<?= (isset($billing_paypal_vendor_type)) ? $billing_paypal_vendor_type : \"%\" ?>\">\n                                        <?= (isset($billing_paypal_vendor_type)) ? $billing_paypal_vendor_type : \"Any\" ?>\n                                    </option>\n                                    <option value=\"\"></option>\n                                    <option value=\"%\">Any</option>\n                                    <option value=\"PayPal\">PayPal</option>\n                                    <option value=\"2Checkout\">2Checkout</option>\n                                </select>\n                                \n                                <h109><?= t('all','PayerEmail'); ?></h109><br>\n                                <input name=\"payer_email\" type=\"text\"\n                                    value=\"<?= (isset($billing_paypal_payeremail)) ? $billing_paypal_payeremail : \"*\" ?>\">\n\t\t\t\n                                <br><br>\n\n                                <h109><?= t('all','PaymentStatus'); ?></h109><br>\n                                <select name=\"payment_status\" size=\"1\">\n                                    <option value=\"<?= (isset($billing_paypal_paymentstatus)) ? $billing_paypal_paymentstatus : \"%\" ?>\">\n                                        <?= (isset($billing_paypal_paymentstatus)) ? $billing_paypal_paymentstatus : \"Any\" ?>\n                                    </option>\n                                    <option value=\"\"></option>\n                                    <option value=\"Completed\">Completed</option>\n                                    <option value=\"Denied\">Denied</option>\n                                    <option value=\"Expired\">Expired</option>\n                                    <option value=\"Failed\">Failed</option>\n                                    <option value=\"In-Progress\">In-Progress</option>\n                                    <option value=\"Pending\">Pending</option>\n                                    <option value=\"Processed\">Processed</option>\n                                    <option value=\"Refunded\">Refunded</option>\n                                    <option value=\"Reversed\">Reversed</option>\n                                    <option value=\"Canceled-Reversal\">Canceled-Reversal</option>\n                                    <option value=\"Voided\">Voided</option>\n                                </select>\n\n                                <br><br>\n\n                                <h109><?= t('button','AccountingFieldsinQuery'); ?></h109><br>\n<?php\n                                foreach ($checkboxes as $value => $caption) {\n                                    $checked = in_array($value, $checkboxes_checked) ? ' checked' : '';\n                                    printf('<input type=\"checkbox\" name=\"sqlfields[]\" value=\"%s\"%s><h109>%s</h109><br>',\n                                           $value, $checked, $caption);\n                                }\n?>\n                                <br><h109>Select:</h109>\n                                <a class=\"table\" href=\"javascript:SetChecked(1,'sqlfields[]','billpaypaltransactions')\">All</a>\n                                <a class=\"table\" href=\"javascript:SetChecked(0,'sqlfields[]','billpaypaltransactions')\">None</a>\n\n                                <br><br>\n                                \n                                <h109><?= t('button','OrderBy') ?></h109><br>\n                                \n                                <div style=\"text-align: center\">\n                                    <select name=\"orderBy\" size=\"1\">\n                                        <option value=\"id\"> Id </option>\n                                        <option value=\"username\"> username </option>\n                                        <option value=\"txnId\"> txnId </option>\n                                    </select>\n\n                                    <select name=\"orderType\" size=\"1\">\n                                        <option value=\"ASC\"> Ascending </option>\n                                        <option value=\"DESC\"> Descending </option>\n                                    </select>\n                                </div>\n\n                                <br><br>\n                                \n                                <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n\n                            </form>\n                        </li>\n\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n        $valid_passwordTypes = array_values($valid_passwordTypes);\n    }\n    \n    include('library/opendb.php');\n    \n    $sql = sprintf(\"SELECT id, name FROM %s\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $valid_hotspots = array( );\n    while ($row = $res->fetchrow()) {\n        list($id, $name) = $row;\n        \n        $valid_hotspots[\"hotspot-$id\"] = $name;\n    }\n\n    include_once('include/management/populate_selectbox.php');\n    $valid_groups = get_groups();\n    $valid_planNames = get_plans();\n    \n    \n    include(\"include/management/functions.php\");\n    include('include/management/pages_common.php');\n\n\n    function addUserBatchHistory($dbSocket) {\n        \n        global $batch_name;\n        global $batch_description;\n        global $hotspot_id;\n        global $logDebugSQL;\n        global $configValues;\n        \n        // the returned id of last insert batch_history record\n        $batch_id = 0;\n        \n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n        \n        $sql = sprintf(\"INSERT INTO %s (id, batch_name, batch_description, hotspot_id, creationdate, creationby, updatedate, updateby) \n                                VALUES (0, '%s', '%s', '%s', '%s', '%s', NULL, NULL)\",\n                       $configValues['CONFIG_DB_TBL_DALOBATCHHISTORY'],\n                       $dbSocket->escapeSimple($batch_name), $dbSocket->escapeSimple($batch_description),\n                       $dbSocket->escapeSimple($hotspot_id), $currDate, $currBy);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $sql = sprintf(\"SELECT id FROM %s WHERE batch_name = '%s'\", \n                       $configValues['CONFIG_DB_TBL_DALOBATCHHISTORY'], $dbSocket->escapeSimple($batch_name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n    \n        // if the INSERT to the batch_history table was succesful and there exist\n        // only 1 record (meaning, we don't have a duplicate) then we return the id\n        return ($res->numRows() == 1) ? intval($res->fetchRow()[0]) : 0;        \n    }\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngbatch.php');\n    $help = t('helpPage','mngbatch');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-batch.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $exportForm = \"\";\n    $detailedInfo = array();\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n\n        /* variables for batch_history */\n        $batch_name = (array_key_exists('batch_name', $_POST) && !empty(trim($_POST['batch_name'])) &&\n                       preg_match(\"/^[\\w\\-. ]+$/\", trim($_POST['batch_name']) !== false)) ? trim($_POST['batch_name']) : \"\";\n        \n        if (empty($batch_name)) {\n            // batch name required\n            $failureMsg = \"Failure creating batch - please provide a batch name\";\n            $logAction .= \"Failure creating batch - missing field [batch_name] on page: \";\n        } else {\n        \n            $batch_description = (array_key_exists('batch_description', $_POST) && isset($_POST['batch_description']))\n                               ? trim(str_replace(\"%\", \"\", $_POST['batch_description'])) : \"\";\n            \n            $hotspot_id = (array_key_exists('hotspot_id', $_POST) && !empty(trim($_POST['hotspot_id'])) &&\n                           in_array(trim($_POST['hotspot_id']), array_keys($valid_hotspots)))\n                        ? intval(str_replace(\"hotspot-\", \"\", $_POST['hotspot_id'])) : \"\";\n\n            /* variables for userbillinfo */\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            $bi_billstatus = (array_key_exists('bi_billstatus', $_POST) && isset($_POST['bi_billstatus'])) ? $_POST['bi_billstatus'] : \"\";\n            $bi_lastbill = (array_key_exists('bi_lastbill', $_POST) && isset($_POST['bi_lastbill'])) ? $_POST['bi_lastbill'] : \"\";\n            $bi_nextbill = (array_key_exists('bi_nextbill', $_POST) && isset($_POST['bi_nextbill'])) ? $_POST['bi_nextbill'] : \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n            \n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n\n            /* variables for userinfo */\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            $username_prefix = (array_key_exists('username_prefix', $_POST) && !empty(trim(str_replace(\"%\", \"\", $_POST['username_prefix']))))\n                             ? trim(str_replace(\"%\", \"\", $_POST['username_prefix'])) : \"\";\n            $number = (array_key_exists('number', $_POST) && !empty(trim($_POST['number'])) && intval(trim($_POST['number'])) > 0)\n                    ? intval(trim($_POST['number'])) : 4;\n            \n            $length_pass = (array_key_exists('length_pass', $_POST) && !empty(trim($_POST['length_pass'])) && intval(trim($_POST['length_pass'])) > 0)\n                         ? intval(trim($_POST['length_pass'])) : 8;\n            $length_user = (array_key_exists('length_user', $_POST) && !empty(trim($_POST['length_user'])) && intval(trim($_POST['length_user'])) > 0)\n                         ? intval(trim($_POST['length_user'])) : 8;\n            \n            $passwordType = (array_key_exists('passwordType', $_POST) && !empty(trim($_POST['passwordType'])) &&\n                          in_array(trim($_POST['passwordType']), $valid_passwordTypes))\n                       ? trim($_POST['passwordType']) : $valid_passwordTypes[0];\n            \n            $group = (array_key_exists('group', $_POST) && !empty($_POST['group']) && in_array($_POST['group'], $valid_groups))\n                   ? $_POST['group'] : \"\";\n            $group_priority = (array_key_exists('group_priority', $_POST) && !empty(trim($_POST['group_priority'])) &&\n                               intval(trim($_POST['group_priority'])) >= 0)\n                            ? intval(trim($_POST['group_priority'])) : 0;\n\n            $planName = (array_key_exists('planName', $_POST) && !empty($_POST['planName']) && in_array($_POST['planName'], $valid_planNames))\n                   ? $_POST['planName'] : \"\";\n            \n            $startingIndex = (array_key_exists('startingIndex', $_POST) && !empty(trim($_POST['startingIndex'])) &&\n                              intval(trim($_POST['startingIndex'])) > 0)\n                           ? intval(trim($_POST['startingIndex'])) : 1000;\n            \n            $createBatchUsersType = (array_key_exists('createBatchUsersType', $_POST) && !empty(trim($_POST['createBatchUsersType'])) &&\n                                     in_array(trim($_POST['createBatchUsersType']), array(\"createRandomUsers\", \"createIncrementUsers\")))\n                                  ? trim($_POST['createBatchUsersType']) : \"createRandomUsers\";\n            \n            \n            $currDate = date('Y-m-d H:i:s');            // current date and time to enter as creationdate field\n            $currBy = $_SESSION['operator_user'];\n\n\n            // before looping through all generated batch users we create the batch_history entry\n            // to associate the created users with a batch_history entry\n            $sql_batch_id = addUserBatchHistory($dbSocket);\n            \n            if ($sql_batch_id == 0) {\n                // 0 may be returned in the case of failure in adding the batch_history record due\n                // to SQL related issues or in case where there is a duplicate record of the batch_history,\n                // meaning, the same batch_name is used to identify the batch entry\n                $failureMsg = \"Failure creating batch users due to an error or possible duplicate entry: <b> $batch_name </b>\";\n                $logAction .= \"Failure creating a batch_history entry on page: \";\n            } else {\n                \n                $actionMsgBadUsernames = \"\";\n                $actionMsgGoodUsernames = \"\";\n\n                $exportCSV = \"Username,Password||\";\n                \n                $inserted_usernames = array( \"Username\" );\n                $inserted_passwords = array( \"Password\" );\n                \n                if ($number > 0) {\n                    for ($i = 0; $i < $number; $i++) {\n\n                        // create the username\n                        switch ($createBatchUsersType) {\n                            default:\n                            case \"createRandomUsers\":\n                                $username_suffix = createPassword($length_user, $configValues['CONFIG_USER_ALLOWEDRANDOMCHARS']);\n                                break;\n                                \n                            case \"createIncrementUsers\":\n                                $username_suffix = $startingIndex + $i;\n                                break;\n                        }\n                        \n                        $username = $username_prefix . $username_suffix;\n                        $password = createPassword($length_pass, $configValues['CONFIG_USER_ALLOWEDRANDOMCHARS']);\n                        \n                        if (user_exists($dbSocket, $username)) {\n                            // $username skipped\n                            $detailedInfo[] = sprintf(\"cannot insert username %s, username exists\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                            continue;\n                        }\n                        \n                        // username does not exist\n                        include_once(\"library/attributes.php\");\n                        \n                        $hash = hashPasswordAttribute($passwordType, $password);\n                        \n                        if (!insert_single_attribute($dbSocket, $username, $passwordType, ':=', $hash)) {\n                            // if we fail to insert this user, we skip other queries\n                            $detailedInfo[] = sprintf(\"cannot insert username %s, db error\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                            continue;\n                        }\n                        \n                        // if a group was defined to add the user to in the form let's add it to the database\n                        if (!empty($group)) {\n                            if (!insert_single_user_group_mapping($dbSocket, $username, $group, $group_priority)) {\n                                $detailedInfo[] = sprintf(\"cannot insert user-group mapping %s-%s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'), \n                                                      htmlspecialchars($group, ENT_QUOTES, 'UTF-8'));\n                            }\n                        }\n                        \n                        // adding user info\n                        $params = array(\n                                            \"firstname\" => $firstname,\n                                            \"lastname\" => $lastname,\n                                            \"email\" => $email,\n                                            \"department\" => $department,\n                                            \"company\" => $company,\n                                            \"workphone\" => $workphone,\n                                            \"homephone\" => $homephone,\n                                            \"mobilephone\" => $mobilephone,\n                                            \"address\" => $address,\n                                            \"city\" => $city,\n                                            \"state\" => $state,\n                                            \"country\" => $country,\n                                            \"zip\" => $zip,\n                                            \"notes\" => $notes,\n                                            \"changeuserinfo\" => $ui_changeuserinfo,\n                                            \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                            \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                       );\n                        \n                        if (add_user_info($dbSocket, $username, $params) === false) {\n                            $detailedInfo[] = sprintf(\"cannot insert userinfo for user %s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                        }\n                        \n                        \n                        // adding billing info\n                        $params = array(\n                                            \"contactperson\" => $bi_contactperson,\n                                            \"company\" => $bi_company,\n                                            \"email\" => $bi_email,\n                                            \"phone\" => $bi_phone,\n                                            \"address\" => $bi_address,\n                                            \"city\" => $bi_city,\n                                            \"state\" => $bi_state,\n                                            \"country\" => $bi_country,\n                                            \"zip\" => $bi_zip,\n                                            \"paymentmethod\" => $bi_paymentmethod,\n                                            \"cash\" => $bi_cash,\n                                            \"creditcardname\" => $bi_creditcardname,\n                                            \"creditcardnumber\" => $bi_creditcardnumber,\n                                            \"creditcardexp\" => $bi_creditcardexp,\n                                            \"creditcardverification\" => $bi_creditcardverification,\n                                            \"creditcardtype\" => $bi_creditcardtype,\n                                            \"notes\" => $bi_notes,\n                                            \"lead\" => $bi_lead,\n                                            \"coupon\" => $bi_coupon,\n                                            \"ordertaker\" => $bi_ordertaker,\n                                            \"billstatus\" => $bi_billstatus,\n                                            \"lastbill\" => $bi_lastbill,\n                                            \"nextbill\" => $bi_nextbill,\n                                            \"postalinvoice\" => $bi_postalinvoice,\n                                            \"faxinvoice\" => $bi_faxinvoice,\n                                            \"emailinvoice\" => $bi_emailinvoice,\n                                            \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                            \"planName\" => $planName,\n                                            \"hotspot_id\" => $hotspot_id,\n                                            \"batch_id\" => $sql_batch_id,\n                                            \"creationdate\" => $currDate,\n                                            \"creationby\" => $operator\n                                       );\n                        \n                        if (add_user_billing_info($dbSocket, $username, $params) === false) {\n                            $detailedInfo[] = sprintf(\"cannot insert billing info for user %s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                        }\n                        \n                        // adding attributes\n                        $skipList = array( \n                                           \"username_prefix\", \"passwordType\", \"length_pass\", \"length_user\", \"number\", \"plan\",\n                                           \"submit\", \"group\", \"group_priority\", \"createBatchUsersType\", \"startingIndex\",\n                                           \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\", \"homephone\",\n                                           \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\", \"bi_contactperson\",\n                                           \"bi_company\", \"bi_email\", \"bi_phone\", \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\",\n                                           \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\", \"bi_creditcardnumber\",\n                                           \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\", \"bi_notes\", \"bi_lead\",\n                                           \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\", \"bi_lastbill\", \"bi_nextbill\", \"bi_postalinvoice\",\n                                           \"bi_faxinvoice\", \"bi_emailinvoice\", \"bi_batch_id\", \"changeUserBillInfo\", \"changeUserInfo\",\n                                           \"batch_description\", \"batch_name\", \"hotspot\", \"hotspot_id\", \"copycontact\",\n                                           \"enableUserPortalLogin\", \"portalLoginPassword\", \"csrf_token\"\n                                         );\n                        \n                        $count = handleAttributes($dbSocket, $username, $skipList);\n                        \n                        $inserted_usernames[] = $username;\n                        $inserted_passwords[] = $password;\n                        \n                        $exportCSV .= \"$username,$password||\";\n                        \n                    } // end for\n                    \n                    $form_id = \"export-users-form\";\n                    $exportForm .= sprintf('<form target=\"_blank\" id=\"%s\" ', $form_id)\n                                 . 'method=\"POST\">'\n                                 . sprintf('<input style=\"display: none\" type=\"hidden\" name=\"batch_name\" value=\"%s\">',\n                                           htmlspecialchars($batch_name, ENT_QUOTES, 'UTF-8'))\n                                 . '<input style=\"display: none\" type=\"hidden\" name=\"type\" value=\"batch\">';\n                                 \n                    if (!empty($planName)) {\n                        $exportForm .= sprintf('<input type=\"hidden\" name=\"plan\" value=\"%s\">',\n                                               htmlspecialchars($planName, ENT_QUOTES, 'UTF-8'));\n                    }\n                    \n                    for ($i = 0; $i < count($inserted_usernames); $i++) {\n                        $u = $inserted_usernames[$i];\n                        $p = $inserted_passwords[$i];\n                        $exportForm .= sprintf('<input style=\"display: none\" type=\"hidden\" name=\"accounts[%d][0]\" value=\"%s\">', $i, htmlspecialchars($u, ENT_QUOTES, 'UTF-8'))\n                                     . sprintf('<input style=\"display: none\" type=\"hidden\" name=\"accounts[%d][1]\" value=\"%s\">', $i, htmlspecialchars($p, ENT_QUOTES, 'UTF-8'));\n                    }\n                    \n                    \n                    $exportForm .= '<fieldset><label for=\"ticketInformation\" class=\"form\">Description</label>'\n                                 . '<textarea class=\"form\" id=\"ticketInformation\" name=\"ticketInformation\">'\n                                 . 'to use this card, please connect your device to the nearest ssid.' . \"\\n\"\n                                 . 'Open your web browser and enter each needed field.</textarea>';\n                    $exportForm .= '</fieldset></form>';\n                    $onclick = \"batch_export('include/common/fileExportCSV.php')\";\n                    $exportForm .= sprintf('<input style=\"margin: 10px\" type=\"button\" onclick=\"%s\" value=\"CSV Download\">', $onclick);\n                    $onclick = \"batch_export('include/common/printTickets.php')\";\n                    $exportForm .= sprintf('<input style=\"margin: 10px\" type=\"button\" onclick=\"%s\" value=\"Printable Tickets\">', $onclick);\n                            \n                    $successMsg = sprintf(\"Created %d user(s) (batch name: <strong>%s</strong>)\", count($inserted_usernames)-1, $batch_name);\n                    $logAction .= sprintf(\"Successfully added to database new users [%s] with prefix [%s] on page: \",\n                                          implode(\", \", $inserted_usernames), $username_prefix);\n\n                } else {// $number > 0\n                    $failureMsg = \"specify a valid number of accounts\";\n                    $logAction = \"specified an invalid number of accounts on page: \";\n                }\n            }\n        }\n    }\n\n    include('library/closedb.php');\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($exportForm)) {\n        echo $exportForm;\n        \n        if (count($detailedInfo) > 0) {\n            echo \"<h4>Detailed info</h4>\"\n               . \"<pre>\"\n               . implode(\"\\n\", $detailedInfo)\n               . \"</pre>\";\n        }\n        \n    } else {\n    \n        // set navbar stuff\n        $navbuttons = array(\n                                \"AccountInfo-tab\" => t('title','AccountInfo'),\n                                \"UserInfo-tab\" => t('title','UserInfo'),\n                                \"BillingInfo-tab\" => t('title','BillingInfo'),\n                                \"Attributes-tab\" => t('title','Attributes'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n        \n        $input_descriptors1 = array();\n        $input_descriptors1[] = array(\n                                        \"name\" => \"batch_name\",\n                                        \"caption\" => t('all','batchName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $batch_name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','batchNameTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"batch_description\",\n                                        \"caption\" => t('all','batchDescription'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $batch_description : \"\"),\n                                        \"tooltipText\" => t('Tooltip','batchDescriptionTooltip')\n                                     );\n                                     \n        $options = $valid_hotspots;\n        array_unshift($options , '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"hotspot_id\",\n                                        \"caption\" => t('all','HotSpot'),\n                                        \"options\" => $options,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg) && intval($hotspot_id) > 0) ? \"hotspot-$hotspot_id\" : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"username_prefix\",\n                                        \"caption\" => t('all','UsernamePrefix'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $username_prefix : \"\"),\n                                        \"tooltipText\" => t('Tooltip','usernamePrefixTooltip'),\n                                        \"random\" => true\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"radio\",\n                                        \"value\" => \"createRandomUsers\",\n                                        \"name\" => \"createBatchUsersType\",\n                                        \"onclick\" => \"toggleRandomUsers()\",\n                                        \"caption\" => t('all','CreateRandomUsers'),\n                                        \"checked\" => true\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"length_user\",\n                                        \"caption\" => t('all','UsernameLength'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $length_user : \"8\"),\n                                        \"tooltipText\" => t('Tooltip','lengthOfUsernameTooltip'),\n                                        \"min\" => \"4\",\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"radio\",\n                                        \"value\" => \"createIncrementUsers\",\n                                        \"name\" => \"createBatchUsersType\",\n                                        \"onclick\" => \"toggleIncrementUsers()\",\n                                        \"caption\" => t('all','CreateIncrementingUsers'),\n                                        \"checked\" => false\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"startingIndex\",\n                                        \"caption\" => t('all','StartingIndex'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $startingIndex : \"1000\"),\n                                        \"tooltipText\" => t('Tooltip','startingIndexTooltip'),\n                                        \"min\" => \"1\",\n                                        \"disabled\" => true,\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\"),\n                                        \"tooltipText\" => t('Tooltip','passwordTypeTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"length_pass\",\n                                        \"caption\" => t('all','PasswordLength'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $length_pass : \"8\"),\n                                        \"tooltipText\" => t('Tooltip','lengthOfPasswordTooltip'),\n                                        \"min\" => \"8\",\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"number\",\n                                        \"caption\" => t('all','NumberInstances'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $number : \"4\"),\n                                        \"tooltipText\" => t('Tooltip','instancesToCreateTooltip'),\n                                        \"min\" => \"4\",\n                                        \"step\" => \"4\"\n                                     );\n                                     \n        $options = $valid_groups;\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"group\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $group : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"group_priority\",\n                                        \"caption\" => t('all','GroupPriority'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $group_priority : \"0\"),\n                                        \"min\" => \"0\",\n                                     );\n        \n        $options = $valid_planNames;\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"planName\",\n                                        \"caption\" => t('all','PlanName'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $planName : \"\"),\n                                        \"tooltipText\" => t('Tooltip','planTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                      );\n?>\n\n<form name=\"batchuser\" method=\"POST\">\n    <div class=\"tabcontent\" id=\"AccountInfo-tab\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','AccountInfo') ?></h302>\n            <ul>\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n            </ul>\n        </fieldset>\n    </div><!-- #AccountInfo-tab -->\n\n    <div class=\"tabcontent\" id=\"UserInfo-tab\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userinfo.php');\n?>\n    </div>\n\n    <div class=\"tabcontent\" id=\"BillingInfo-tab\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userbillinfo.php');\n?>\n    </div>\n\n    <div class=\"tabcontent\" id=\"Attributes-tab\">\n<?php\n        include_once('include/management/attributes.php');\n?>\n    </div>\n</form>\n\n<?php\n    }\n\n    include('include/config/logging.php');\n    \n    if (!empty($exportForm) && !empty($form_id)) {\n        $inline_extra_js = 'function batch_export(action) {' . \"\\n\";\n        $inline_extra_js .= sprintf(\"var f = document.getElementById('%s');\", $form_id);\n        $inline_extra_js .= '\nf.action = action;\nf.submit();\n}\n';\n    } else {\n        $inline_extra_js = \"\";\n    }\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    include_once(\"include/management/functions.php\");\n    \n    \n    include('library/opendb.php');\n    \n    // updates old plan profile with a new one\n    // or simply add a new plan profile\n    function addPlanProfile($dbSocket, $username, $planName, $oldplanName) {\n        global $logDebugSQL;\n        global $configValues;\n        \n        if ($planName == $oldplanName) {\n            return;\n        }\n\n        $sql = sprintf(\"SELECT planGroup FROM %s WHERE planName='%s'\",\n                        $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'],\n                        $dbSocket->escapeSimple($oldplanName));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        $oldplanGroup = $res->fetchRow()[0];\n        \n        if (!empty($oldplanGroup)) {\n            $sql = sprintf(\"DELETE FROM %s WHERE username='%s' AND groupname='%s'\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username),\n                           $dbSocket->escapeSimple($oldplanGroup));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n        }\n\n        $sql = sprintf(\"SELECT planGroup FROM %s WHERE planName='%s'\",\n                        $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'],\n                        $dbSocket->escapeSimple($planName));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $planGroup = $res->fetchRow()[0];\n\n        if (!empty($planGroup)) {\n\n            $sql = sprintf(\"INSERT INTO %s (username, groupname, priority) VALUES ('%s', '%s', 0)\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username),\n                           $dbSocket->escapeSimple($planGroup));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n        }\n    }\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n            \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                      ? str_replace(\"%\", \"\", trim($_POST['username'])) : \"\";\n\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            $newgroups = (array_key_exists('newgroups', $_POST) && isset($_POST['newgroups'])) ? $_POST['newgroups'] : array();\n            $groups_priority = (array_key_exists('groups_priority', $_POST) && isset($_POST['groups_priority'])) ? $_POST['groups_priority'] : array();\n            \n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n        \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            $bi_billstatus = (array_key_exists('bi_billstatus', $_POST) && isset($_POST['bi_billstatus'])) ? $_POST['bi_billstatus'] : \"\";\n            $bi_lastbill = (array_key_exists('bi_lastbill', $_POST) && isset($_POST['bi_lastbill'])) ? $_POST['bi_lastbill'] : \"\";\n            $bi_nextbill = (array_key_exists('bi_nextbill', $_POST) && isset($_POST['bi_nextbill'])) ? $_POST['bi_nextbill'] : \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n\n            $planName = (array_key_exists('planName', $_POST) && isset($_POST['planName'])) ? trim($_POST['planName']) : \"\";\n            $oldplanName = (array_key_exists('oldplanName', $_POST) && isset($_POST['oldplanName'])) ? trim($_POST['oldplanName']) : \"\";\n\n            // fix up errors with droping the Plan name\n            if (empty($planName)) {\n                $planName = $oldplanName;\n            }\n\n            if (!empty($username)) {\n                \n                // dealing with attributes\n                include(\"library/attributes.php\");\n\n                $skipList = array( \"username\", \"submit\", \"oldgroups\", \"groups\", \"planName\", \"oldplanName\", \"groups_priority\",\n                                   \"copycontact\", \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\",\n                                   \"homephone\", \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\",\n                                   \"changeUserInfo\", \"bi_contactperson\", \"bi_company\", \"bi_email\", \"bi_phone\", \"bi_address\",\n                                   \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\",\n                                   \"bi_creditcardnumber\", \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\",\n                                   \"bi_notes\", \"changeUserBillInfo\", \"bi_lead\", \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\",\n                                   \"bi_lastbill\", \"bi_nextbill\", \"bi_nextinvoicedue\", \"bi_billdue\", \"bi_postalinvoice\", \"bi_faxinvoice\",\n                                   \"bi_emailinvoice\", \"bi_planname\", \"newgroups\", \"portalLoginPassword\", \"enableUserPortalLogin\",\n                                   \"csrf_token\", \"submit\"\n                                 );\n\n                \n                handleAttributes($dbSocket, $username, $skipList, false);\n                \n                // insert or update user info\n                $userinfoExist = user_exists($dbSocket, $username, 'CONFIG_DB_TBL_DALOUSERINFO');\n                \n                $params = array(\n                                    \"firstname\" => $firstname,\n                                    \"lastname\" => $lastname,\n                                    \"email\" => $email,\n                                    \"department\" => $department,\n                                    \"company\" => $company,\n                                    \"workphone\" => $workphone,\n                                    \"homephone\" => $homephone,\n                                    \"mobilephone\" => $mobilephone,\n                                    \"address\" => $address,\n                                    \"city\" => $city,\n                                    \"state\" => $state,\n                                    \"country\" => $country,\n                                    \"zip\" => $zip,\n                                    \"notes\" => $notes,\n                                    \"changeuserinfo\" => $ui_changeuserinfo,\n                                    \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                    \"portalloginpassword\" => $ui_PortalLoginPassword,\n                               );\n                               \n                if ($userinfoExist) {\n                    $params[\"updatedate\"] = $currDate;\n                    $params[\"updateby\"] = $currBy;\n                    $addedUserInfo = (update_user_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                } else {\n                    $params[\"creationdate\"] = $currDate;\n                    $params[\"creationby\"] = $currBy;\n                    $addedUserInfo = (add_user_info($dbSocket, $username, $params)) ? \"updated\" : \"nothing to update\";\n                }\n                \n                \n                // insert or update billing info\n                $billinfoExist = user_exists($dbSocket, $username, 'CONFIG_DB_TBL_DALOUSERBILLINFO');\n                \n                $params = array(\n                                    \"contactperson\" => $bi_contactperson,\n                                    \"company\" => $bi_company,\n                                    \"email\" => $bi_email,\n                                    \"phone\" => $bi_phone,\n                                    \"address\" => $bi_address,\n                                    \"city\" => $bi_city,\n                                    \"state\" => $bi_state,\n                                    \"country\" => $bi_country,\n                                    \"zip\" => $bi_zip,\n                                    \"postalinvoice\" => $bi_postalinvoice,\n                                    \"faxinvoice\" => $bi_faxinvoice,\n                                    \"emailinvoice\" => $bi_emailinvoice,\n                                    \n                                    \"paymentmethod\" => $bi_paymentmethod,\n                                    \"cash\" => $bi_cash,\n                                    \"creditcardname\" => $bi_creditcardname,\n                                    \"creditcardnumber\" => $bi_creditcardnumber,\n                                    \"creditcardverification\" => $bi_creditcardverification,\n                                    \"creditcardtype\" => $bi_creditcardtype,\n                                    \"creditcardexp\" => $bi_creditcardexp,\n                                    \n                                    \"lead\" => $bi_lead,\n                                    \"coupon\" => $bi_coupon,\n                                    \"ordertaker\" => $bi_ordertaker,\n                                    \n                                    \"notes\" => $bi_notes,\n                                    \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                    \n                                    //~ \"billstatus\" => $bi_billstatus,\n                                    //~ \"lastbill\" => $bi_lastbill,\n                                    //~ \"nextbill\" => $bi_nextbill,\n                                    \"billdue\" => $bi_billdue,\n                                    \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                    \n                                    \"creationdate\" => $currDate,\n                                    \"creationby\" => $currBy,\n                               );\n                \n                if ($billinfoExist) {\n                    $params[\"planName\"] = $planName;\n                    $params[\"updatedate\"] = $currDate;\n                    $params[\"updateby\"] = $currBy;\n                    $addedBillinfo = (update_user_billing_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                } else {\n                    $params[\"creationdate\"] = $currDate;\n                    $params[\"creationby\"] = $currBy;\n                    $addedBillinfo = (add_user_billing_info($dbSocket, $username, $params)) ? \"updated\" : \"nothing to update\";\n                }\n                \n                // add new user group mappings (implicitly) using priority 0\n                $user_groups = get_user_group_mappings($dbSocket, $username);\n                if (count($newgroups) > 0) {\n                    foreach ($newgroups as $groupname) {\n                        $groupname = trim($groupname);\n                        \n                        if (empty($groupname) || in_array($groupname, $user_groups)) {\n                            continue;\n                        }\n                        \n                        insert_single_user_group_mapping($dbSocket, $username, $groupname);\n                    }\n                }\n\n                // $groups and $groups_priority are used to update existing user group mappings\n                if (count($groups) == count($groups_priority)) {\n                    // we need that these two arrays contain the exact same number of elements\n                    \n                    $updated_user_group_mappings = array();\n                    \n                    for ($i = 0; $i < count($groups); $i++) {\n                        $groupname = trim($groups[$i]);\n                        \n                        // if the groupname is empty or it is not contained\n                        // in the user group mappings we skip\n                        if (empty($groupname) || !in_array($groupname, $user_groups)) {\n                            continue;\n                        }\n                        \n                        $priority = (empty($groups_priority[$i])) ? 0 : intval($groups_priority[$i]);\n                        \n                        // if the groupname appears two times, we \"reset\" the priority to the default values\n                        $updated_user_group_mappings[$groupname] = (array_key_exists($groupname, $updated_user_group_mappings))\n                                                                 ? 0 : $priority;\n                    }\n                    \n                    // we now can proceed and update existing user group mappings\n                    foreach ($updated_user_group_mappings as $groupname => $priority) {\n                        update_user_group_mapping_priority($dbSocket, $username, $groupname, $priority);\n                    }\n                }\n                            \n                \n                addPlanProfile($dbSocket, $username, $planName, $oldplanName);\n\n                $successMsg = sprintf(\"Successfully updated user <strong>%s</strong>\", $username_enc);\n                $logAction .= sprintf(\"Successfully updated user %s on page: \", $username);\n            \n            } else { // if username != \"\"\n                $failureMsg = \"no user was entered, please specify a username to edit\";\n                $logAction .= \"Failed updating attributes for user [$username] on page: \";\n            }\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n        \n    } else {\n        $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                  ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    }\n\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $edit_username = $username_enc;\n\n    if (empty($username)) {\n        $failureMsg = \"no user was entered, please specify a username to edit\";\n    } else {\n\n        /* an sql query to retrieve the password for the username to use in the quick link for the user test connectivity */\n        $sql = sprintf(\"SELECT value FROM %s WHERE username='%s' AND attribute LIKE '%%-Password' ORDER BY id DESC\",\n                       $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        $user_password = $res->fetchRow()[0];\n\n        /* fill-in all the user info details */\n        $sql = sprintf(\"SELECT firstname, lastname, email, department, company, workphone, homephone, mobilephone, address, city,\n                               state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate,\n                               creationby, updatedate, updateby\n                          FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                        $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        list( \n              $ui_firstname, $ui_lastname, $ui_email, $ui_department, $ui_company, $ui_workphone, $ui_homephone,\n              $ui_mobilephone, $ui_address, $ui_city, $ui_state, $ui_country, $ui_zip, $ui_notes, $ui_changeuserinfo,\n              $ui_PortalLoginPassword, $ui_enableUserPortalLogin, $ui_creationdate, $ui_creationby, $ui_updatedate,\n              $ui_updateby\n            ) = $res->fetchRow();\n\n        /* fill-in all the user bill info details */\n        $sql = sprintf(\"SELECT planName, contactperson, company, email, phone, address, city, state, country, zip, paymentmethod,\n                               cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp,\n                               notes, changeuserbillinfo, `lead`, coupon, ordertaker, billstatus, lastbill, nextbill,\n                               nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, creationdate, creationby,\n                               updatedate, updateby\n                          FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                        $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        list(\n                $bi_planname, $bi_contactperson, $bi_company, $bi_email, $bi_phone, $bi_address, $bi_city, $bi_state,\n                $bi_country, $bi_zip, $bi_paymentmethod, $bi_cash, $bi_creditcardname, $bi_creditcardnumber,\n                $bi_creditcardverification, $bi_creditcardtype, $bi_creditcardexp, $bi_notes, $bi_changeuserbillinfo,\n                $bi_lead, $bi_coupon, $bi_ordertaker, $bi_billstatus, $bi_lastbill, $bi_nextbill, $bi_nextinvoicedue,\n                $bi_billdue, $bi_postalinvoice, $bi_faxinvoice, $bi_emailinvoice, $bi_creationdate, $bi_creationby,\n                $bi_updatedate, $bi_updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    // inline extra javascript\n    $inline_extra_js = sprintf(\"var strUsername = 'username=%s';\\n\", $username_enc);\n    \n    $inline_extra_js .= '\nfunction disableUser() {\n    if (confirm(\"You are about to disable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userDisable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction enableUser() {\n    if (confirm(\"You are about to enable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userEnable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nwindow.onload = function(){\n    ajaxGeneric(\"include/management/userOperations.php\", \"checkDisabled=true\", \"returnMessages\", strUsername);\n};' . \"\\n\";\n    \n    $title = t('Intro','mngedit.php');\n    $help = t('helpPage','mngedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js, \"\", $inline_extra_js);\n\n    if (!empty($username_enc)) {\n        $title .= \" :: $username_enc\";\n    }\n\n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // ajax return div\n    echo '<div id=\"returnMessages\"></div>';\n\n    include_once('include/management/actionMessages.php');\n    include('include/management/populate_selectbox.php');\n    \n    if (!empty($username)) {\n        // we have more than one form in this page so we can reuse many times the same csrf_token value\n        $csrf_token = dalo_csrf_token();\n        \n        $submit_descriptor = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $csrf_token,\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $username_enc,\n                                        \"name\" => \"username\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"username_presentation\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($username)) ? $username : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                      );\n                                    \n        $input_descriptors0[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"value\" => ((isset($user_password)) ? $user_password : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        \n        $input_descriptors0[] = array( 'name' => 'oldplanName', 'type' => 'hidden',\n                                                 'value' => ((isset($bi_planname)) ? $bi_planname : \"\") );\n                        \n        $options = get_active_plans();\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                         'type' => 'select',\n                                         'name' => 'planName',\n                                         'caption' => t('all','PlanName'),\n                                         'tooltipText' => t('Tooltip','planNameTooltip'),\n                                         'options' => $options,\n                                         'selected_value' => ((isset($bi_planname)) ? $bi_planname : \"\")\n                                     );\n\n        $buttons = array();\n        $buttons[] = array(\n                            'type' => 'button',\n                            'value' => 'Enable User',\n                            'onclick' => 'javascript:enableUser()',\n                            'name' => 'enableUser-button'\n                          );\n                          \n        $buttons[] = array(\n                            'type' => 'button',\n                            'value' => 'Disable User',\n                            'onclick' => 'javascript:disableUser()',\n                            'name' => 'disableUser-button'\n                          );\n        \n        // set navbar stuff\n        $navkeys = array( \n                          'AccountInfo', 'RADIUSCheck', 'RADIUSReply', 'UserInfo', 'BillingInfo',\n                          'Groups', 'Attributes', array( 'OtherInfo', \"Other Info\" )\n                        );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n\n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','AccountInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => \"Actions\",\n                                     );\n        \n        open_fieldset($fieldset0_descriptor);\n        \n        include('include/management/buttons.php');\n            \n        foreach ($buttons as $button_desc) {\n            print_input_field($button_desc);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        \n        // open 1-st tab (not shown)\n        open_tab($navkeys, 1);\n        \n        // open 1-st fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => t('title','RADIUSCheck'),\n                                     );\n        open_fieldset($fieldset1_descriptor);\n        \n        $hashing_algorithm_notice = '<small style=\"font-size: 10px; color: black\">'\n                                  . 'Notice that for supported password-like attributes, you can just specify a plaintext value. '\n                                  . 'The system will take care of correctly hashing it.'\n                                  . '</small>';\n\n        include('library/opendb.php');\n\n        include_once('include/management/pages_common.php');\n\n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.username='%s' ORDER BY rc.id ASC\", $configValues['CONFIG_DB_TBL_RADCHECK'],\n                                                                     $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                                     $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        if ($res->numRows() == 0) {\n            echo '<div style=\"text-align: center\">'\n               . t('messages','noCheckAttributesForUser')\n               . '</div>';\n        } else {\n            \n            echo '<ul>';\n            \n            while ($row = $res->fetchRow()) {\n                \n                foreach ($row as $i => $v) {\n                    $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                }\n\n                $id = $row[5];\n                $id__attribute = sprintf('%s__%s', $id, $row[0]);\n                $name = sprintf('editValues%s[]', $id);\n                $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n                $onclick = sprintf(\"document.getElementById('form-%d-radcheck').submit()\", $id);\n                \n                echo '<li>';\n                printf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">', $onclick);\n                echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n                \n                printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n                printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n                \n                printf('<select name=\"%s\" class=\"form\">', $name);\n                printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n                drawOptions();\n                echo '</select>';\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"radcheck\">', $name);\n\n\n                if (!empty($row[3]) || !empty($row[4])) {\n                    $divId = sprintf(\"%s-Tooltip-%d-radcheck\", $row[0], $id);\n                    $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                    printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                    printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                    \n                    if (!empty($row[3])) {\n                        echo '<br>';\n                        printf('<i><b>Type:</b> %s</i>', $row[3]);\n                    }\n                    \n                    if (!empty($row[4])) {\n                        echo '<br>';\n                        printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                    }\n                    echo '</div>';\n                }\n                \n                echo '</li>';\n            }\n            \n            echo '</ul>';\n        }\n        \n        echo $hashing_algorithm_notice;\n        \n        //~ print_form_component($submit_descriptor);\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 1);\n                        \n        // open 2-nd tab (not shown)\n        open_tab($navkeys, 2);\n        \n        // open 2-nd fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => t('title','RADIUSReply'),\n                                     );\n        open_fieldset($fieldset1_descriptor);\n        \n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.username='%s' ORDER BY rc.id ASC\", $configValues['CONFIG_DB_TBL_RADREPLY'],\n                                                                     $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                                     $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        if ($res->numRows() == 0) {\n            echo '<div style=\"text-align: center\">'\n               . t('messages','noReplyAttributesForUser')\n               . '</div>';\n        } else {\n            \n            echo '<ul>';\n            while ($row = $res->fetchRow()) {\n                \n                foreach ($row as $i => $v) {\n                    $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                }\n\n                $id = $row[5];\n                $id__attribute = sprintf('%s__%s', $id, $row[0]);\n                $name = sprintf('editValues%s[]', $id);\n                $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n                $onclick = sprintf(\"document.getElementById('form-%d-radreply').submit()\", $id);\n                \n                echo '<li>';\n                printf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">', $onclick);\n                echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n\n                printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n                printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n                \n                printf('<select name=\"%s\" class=\"form\">', $name);\n                printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n                drawOptions();\n                echo '</select>';\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"radreply\">', $name);\n\n                if (!empty($row[3]) || !empty($row[4])) {\n                    $divId = sprintf(\"%s-Tooltip-%d-radreply\", $row[0], $id);\n                    $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                    printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                    printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                    \n                    if (!empty($row[3])) {\n                        echo '<br>';\n                        printf('<i><b>Type:</b> %s</i>', $row[3]);\n                    }\n                    \n                    if (!empty($row[4])) {\n                        echo '<br>';\n                        printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                    }\n                    echo '</div>';\n                }\n                \n                echo '</li>';\n            }\n            echo '</ul>';\n        }\n\n        echo $hashing_algorithm_notice;\n\n        //~ print_form_component($submit_descriptor);\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 2);\n\n        //~ $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n        \n        // open 3-rd tab (not shown)\n        open_tab($navkeys, 3);\n        include_once('include/management/userinfo.php');\n        close_tab($navkeys, 3);\n        \n        \n        // open 4-th tab (not shown)\n        open_tab($navkeys, 4);\n        include_once('include/management/userbillinfo.php');\n        close_tab($navkeys, 4);\n\n        // open 5-th tab (not shown)\n        open_tab($navkeys, 5);\n\n        $fieldset5_descriptor = array(\n                                        \"title\" => \"Assign New Groups\",\n                                     );\n\n        open_fieldset($fieldset5_descriptor);\n\n        include_once('include/management/populate_selectbox.php');\n        $options = get_groups();\n        array_unshift($options, '');\n\n        include('library/opendb.php');\n        include_once('include/management/groups.php');\n        $selected_options = get_user_group_mappings($dbSocket, $username);\n        include('library/closedb.php');\n        \n        $input_descriptors5 = array();\n        \n        $input_descriptors5[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"newgroups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => $selected_options,\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n        //~ $input_descriptors5[] = array(\n                                        //~ 'type' => 'submit',\n                                        //~ 'name' => 'submit',\n                                        //~ 'value' => t('buttons','apply')\n                                     //~ );\n                                     \n        foreach ($input_descriptors5 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n\n        echo '<small style=\"font-size: 10px; color: black\">Manage all user-group mappings for this user '\n           . sprintf('<a href=\"mng-rad-usergroup-list-user.php?username=%s\">here</a>.', $username_enc)\n           . '</small>';\n        \n\n        close_fieldset();\n        \n        close_tab($navkeys, 5);\n\n        open_tab($navkeys, 6);\n\n        include_once('include/management/attributes.php');\n\n        close_tab($navkeys, 6);\n        \n        open_tab($navkeys, 7);\n\n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n\n        close_tab($navkeys, 7);\n\n        print_form_component($submit_descriptor);\n\n        close_form();\n\n        // print forms\n        include('library/opendb.php');\n\n        $tables = array(\n                            'radcheck' => $configValues['CONFIG_DB_TBL_RADCHECK'],\n                            'radreply' => $configValues['CONFIG_DB_TBL_RADREPLY']\n                       );\n\n        foreach ($tables as $table_value => $table) {\n\n            $sql = sprintf(\"SELECT id, attribute, value FROM %s WHERE username='%s' ORDER BY id ASC\",\n                           $table, $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n            if ($res->numRows() > 0) {\n                \n                while ($row = $res->fetchrow()) {\n                    list($id, $attribute, $value) = $row;\n                    $id = intval($id);\n                    \n                    $formId = sprintf(\"form-%d-%s\", $id, $table_value);\n                    $id__attribute = sprintf(\"%d__%s\", $id, htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8'));\n                    \n                    printf('<form id=\"%s\" style=\"display: none\" method=\"POST\" action=\"mng-del.php\">', $formId);\n                    printf('<input type=\"hidden\" name=\"username\" value=\"%s\">', $username_enc);\n                    printf('<input type=\"hidden\" name=\"attribute\" value=\"%s\">', $id__attribute);\n                    printf('<input type=\"hidden\" name=\"csrf_token\" value=\"%s\">', $csrf_token);\n                    printf('<input type=\"hidden\" name=\"tablename\" value=\"%s\">', $table_value);\n                    echo '</form>';\n                }\n            }\n        }\n        include('library/closedb.php');\n\n    }\n    \n    print_back_to_previous_page();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    include('library/opendb.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $name = (array_key_exists('name', $_POST) && isset($_POST['name']) && trim(str_replace(\"%\", \"\", $_POST['name'])))\n              ? trim($_POST['name']) : \"\";\n    } else {\n        $name = (array_key_exists('name', $_REQUEST) && isset($_REQUEST['name']) && trim(str_replace(\"%\", \"\", $_REQUEST['name'])))\n              ? trim($_REQUEST['name']) : \"\";\n    }\n    $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $edit_hotspotname = $name_enc;\n    \n    // check if it exists\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                               $dbSocket->escapeSimple($name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    $exists = $res->fetchrow()[0] > 0;\n    \n    if (!$exists) {\n        // we empty the name if the hs does not exist\n        $name = \"\";\n    }\n    \n    // from now on we can assume that $name is valid\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($name)) {\n                $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                               (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                                filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                            ? $_POST['macaddress'] : \"\";\n                \n                // we check that this MAC/IP addr is not assigned to any other HS\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE mac='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                                          $dbSocket->escapeSimple($macaddress));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if (!$exitst) {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n                    $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                                \n                    $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n                    $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n                    $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n                    $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n                    $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n                    $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n                    $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n                    $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n                    \n                    $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n                    $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n                    $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n                    $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n                    \n                    $sql = sprintf(\"UPDATE %s SET mac='%s', geocode='%s', owner='%s', email_owner='%s', manager='%s', email_manager='%s',\n                                                  address='%s', company='%s', phone1='%s', phone2='%s', type='%s', companywebsite='%s',\n                                                  companyemail='%s', companycontact='%s', companyphone='%s', updatedate='%s', updateby='%s'\n                                            WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode), $dbSocket->escapeSimple($owner),\n                                   $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager), $dbSocket->escapeSimple($email_manager),\n                                   $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company), $dbSocket->escapeSimple($phone1),\n                                   $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type), $dbSocket->escapeSimple($companywebsite),\n                                   $dbSocket->escapeSimple($companyemail) , $dbSocket->escapeSimple($companycontact),\n                                   $dbSocket->escapeSimple($companyphone), $currDate, $currBy, $dbSocket->escapeSimple($name));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to update this hotspot [%s]\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Updated hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully updated hotspot [%s] on page: \", $name);\n                    }\n                    \n                } else {\n                    // MAC/IP already taken\n                    $failureMsg = \"MAC/IP address already in use\";\n                    $logAction .= \"Failed updating (possible duplicate MAC/IP addr) HS on page: \";\n                }\n                \n            } else {\n                // invalid or empty\n                $failureMsg = \"Hotspot name is invalid or empty\";\n                $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n            }\n            \n        } else {\n            // csrf\n            $name = \"\";\n            $failureMsg = sprintf(\"CSRF token error\");\n            $logAction .= sprintf(\"CSRF token error on page: \");\n        }\n        \n    }\n    \n    \n    if (empty($name)) {\n        $failureMsg = \"Hotspot name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n    } else {\n        /* fill-in all the hs settings */\n        $sql = sprintf(\"SELECT id, name, mac, geocode, owner, email_owner, manager, email_manager, address, company,\n                               phone1, phone2, type, companywebsite, companyemail, companycontact, companyphone,\n                               creationdate, creationby, updatedate, updateby\n                          FROM %s\n                         WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                               $dbSocket->escapeSimple($name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        list(\n                $id, $name, $mac, $geocode, $owner, $email_owner, $manager, $email_manager, $address, $company, $phone1,\n                $phone2, $type, $companywebsite, $companyemail, $companycontact, $companyphone,\n                $creationdate, $creationby, $updatedate, $updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mnghsedit.php');\n    $help = t('helpPage','mnghsedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($name_enc)) {\n        $title .= \" :: $name_enc\";\n    } \n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($name)) {\n    \n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $name_enc,\n                                        \"name\" => \"name\"\n                                     );\n\n        $input_descriptors0[] = array(\n                                        \"name\" => \"name_presentation\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip'),\n                                        \"disabled\" => true\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($mac)) ? $mac : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        close_form();\n        \n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mnghslist.php');\n    $help = t('helpPage','mnghslist');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-mng-hs.php\");\n    \n    $cols = array(\n                    'name' => t('all','HotSpot'),\n                    'owner' => t('ContactInfo','OwnerName'),\n                    'company' => t('ContactInfo','Company'),\n                    'type' => t('ContactInfo','HotspotType')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    // we use this simplified query just to initialize $numrows\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n\n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql = \"SELECT name, owner, company, type FROM %s ORDER BY %s %s LIMIT %s, %s\";\n        $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                             $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-hs-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            \n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>' . '</tr>';\n        }\n?>\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('name[]', $action);\n?>\n                </th>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType);\n?>           \n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        $count = 1;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n        \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n        \n            list($name, $owner, $company, $type) = $row;\n            \n            $li_style = 'margin: 7px auto';\n            $tooltipText = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($name), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n            $onclick = sprintf('javascript:ajaxGeneric(\"include/management/retHotspotInfo.php\",\"retHotspotGeneralStat\",'\n                             . '\"divContainerHotspotInfo\",\"hotspot=%s\");return false;', urlencode($name));\n            \n?>\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"name[]\" value=\"<?= $name ?>\" id=\"<?= \"checkbox-$count\" ?>\">\n                    <label for=\"<?= \"checkbox-$count\" ?>\">\n                        <a class=\"tablenovisit\" href=\"#\" onclick='<?= $onclick ?>' tooltipText='<?= $tooltipText ?>'>\n                            <?= $name ?>\n                        </a>\n                    </label>\n                </td>\n<?php\n            // simply print remaining row elements\n            for ($i = 1; $i < $rowlen; $i++) {\n                echo \"<td>\" . $row[$i] . \"</td>\";\n            }\n?>\n            </tr>\n<?php\n            $count++;\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n    </table>\n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n?>\n                \n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n<script>\n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    include(\"include/management/functions.php\");\n\n    // custom valid authTypes\n    $valid_authTypes = array(\n                                \"userAuth\" => \"Based on username and password\",\n                                \"otherAuth\" => \"Based on MAC addr/PIN code\"\n                            );\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    \n    include_once('include/management/populate_selectbox.php');\n    $valid_groups = get_groups();\n    $valid_planNames = get_plans();\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $authType = (array_key_exists('authType', $_POST) && isset($_POST['authType']) &&\n                         in_array($_POST['authType'], array_keys($valid_authTypes))) ? $_POST['authType'] : array_keys($valid_authTypes)[0];\n            \n            $planName = (array_key_exists('planName', $_POST) && !empty($_POST['planName']) &&\n                         in_array($_POST['planName'], $valid_planNames))\n                      ? $_POST['planName'] : \"\";\n            \n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            \n            $csvdata = (array_key_exists('csvdata', $_POST) && isset($_POST['csvdata']))\n                     ? $_POST['csvdata'] : \"\";\n            \n            $csvFormattedData = (!empty($csvdata)) ? explode(\"\\n\", $csvdata) : array();\n            \n            $simpleList = (array_key_exists('simpleList', $_POST) && isset($_POST['simpleList']))\n                        ? $_POST['simpleList'] : \"\";\n            \n            $simpleListData = (!empty($simpleList)) ? explode(\"\\n\", $simpleList) : array();\n            \n            $data = array();\n            $passwordType = \"\";\n            \n            if (count($csvFormattedData) > 0) {\n                \n                $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                                 in_array($_POST['passwordType'], $valid_passwordTypes))\n                              ? $_POST['passwordType'] : $valid_passwordTypes[0];\n                \n                foreach ($csvFormattedData as $csvLine) {\n                    \n                    $arr = explode(\",\", $csvLine);\n                    \n                    if (count($arr) != 2) {\n                        continue;\n                    }\n                    \n                    list($username, $password) = $arr;\n                    $username = trim($username);\n                    $password = trim($password);\n                    \n                    echo $username;\n                    echo $password;\n                    \n                    \n                    if (strpos(\"%\", $username) === false &&\n                        preg_match(ALL_PRINTABLE_CHARS_REGEX, $username) &&\n                        preg_match(ALL_PRINTABLE_CHARS_REGEX, $password) &&\n                        !array_key_exists($username, $data)) {\n                        $data[$username] = $password;\n                    }\n                }\n            \n                \n            } else if (count($simpleListData) > 0) {\n            \n                $passwordType = \"Auth-Type\";\n            \n                foreach ($simpleListData as $simpleLine) {\n                    $username = trim($simpleLine);\n                    \n                    if (preg_match(ALL_PRINTABLE_CHARS_REGEX, $username) &&\n                        !array_key_exists($username, $data)) {\n                        $data[$username] = \"Accept\";\n                    }\n                }\n            \n            }\n            \n            if (count($data) > 0 && !empty($passwordType)) {\n                \n                $currDate = date('Y-m-d H:i:s');\n                $currBy = $_SESSION['operator_user'];\n                \n                include('library/opendb.php');\n                \n                \n                $counter = 0;\n                foreach ($data as $subject => $value) {\n                    \n                    // skipping this user if it exists or insert fails\n                    if (user_exists($dbSocket, $subject) || \n                        !insert_single_attribute($dbSocket, $subject, $passwordType, \":=\", $value)) {\n                        continue;\n                    }\n                    \n                    // adding user info\n                    $params = array(\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = add_user_info($dbSocket, $subject, $params);\n                    \n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $subject, $groups);\n                    \n                    // adding billing info\n                    if (!empty($planName)) {\n                        $params[\"planName\"] = $planName;\n                    \n                        $addedBillingInfo = add_user_billing_info($dbSocket, $subject, $params);\n                    }\n                    \n                    $counter++;\n                }\n                \n                include('library/closedb.php');\n                \n                if ($counter > 0) {\n                    $successMsg = \"Successfully imported a total of <b>$counter</b> users to database\";\n                    $logAction .= \"Successfully imported a total of <b>$counter</b> users to database on page: \";\n                } else {\n                    $failureMsg = \"No users have been imported to database\";\n                    $logAction .= \"No users have been imported to database on page: \";\n                }\n                \n            } else {\n                // invalid data\n                $failureMsg = \"Empty or invalid data provided\";\n                $logAction .= \"Empty or invalid data provided on page: \";\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array();\n    \n    $extra_js = array(\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngimportusers.php');\n    $help = t('helpPage','mngimportusers');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include (\"menu-mng-users.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"authType\",\n                                        \"caption\" => \"Authentication Type\",\n                                        \"options\" => $valid_authTypes,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $authType : \"\")\n                                     );\n\n        $options = $valid_groups;\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"groups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n                                     \n        $options = $valid_planNames;\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"planName\",\n                                        \"caption\" => t('all','PlanName'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $planName : \"\"),\n                                        \"tooltipText\" => t('Tooltip','planTooltip')\n                                     );\n        \n        open_form();\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','ImportUsers'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        \n        // open a fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => \"Username/password info\",\n                                        \"id\" => \"userAuth-fieldset\",\n                                     );\n        \n        open_fieldset($fieldset1_descriptor);\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"type\" => \"select\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\")\n                                    );\n                                    \n        $input_descriptors1[] = array(\n                                        \"caption\" => t('all','CSVData'),\n                                        \"type\" => \"textarea\",\n                                        \"class\" => \"form_fileimport\",\n                                        \"name\" => \"csvdata\",\n                                        \"content\" => ((isset($failureMsg)) ? $csvdata : \"\"),\n                                     );\n                                        \n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        echo '<small style=\"color: black\">Paste a CSV-formatted data input of users, expected format is: user,password<br>'\n           . '<strong>Note</strong>: any CSV fields beyond the first 2 (user and password) are ignored<br></small>';\n        \n        close_fieldset();\n        \n        // open a fieldset\n        $fieldset2_descriptor = array(\n                                        \"title\" => \"MAC addr/PIN code info\",\n                                        \"id\" => \"otherAuth-fieldset\",\n                                     );\n        \n        open_fieldset($fieldset2_descriptor);\n        \n        $input_descriptors2[] = array(\n                                        \"caption\" => \"Simple List\",\n                                        \"type\" => \"textarea\",\n                                        \"class\" => \"form_fileimport\",\n                                        \"name\" => \"simpleList\",\n                                        \"content\" => ((isset($failureMsg)) ? $simpleList : \"\"),\n                                     );\n        \n        foreach ($input_descriptors2 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        echo '<small style=\"color: black\">Paste a simple list of MAC addresses or PIN codes<br>'\n           . '<strong>Note</strong>: each line a single MAC address or a PIN code<br></small>';\n        \n        close_fieldset();\n        \n        $button_descriptor = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                  );\n        \n        print_form_component($button_descriptor);\n        \n        close_form();\n    \n    }\n\n    include('include/config/logging.php');\n    $inline_extra_js = '\nfunction switchAuthType() {\n    var switcher = document.getElementById(\"authType\");\n    \n    for (var i=0; i<switcher.length; i++) {\n        var fieldset_id = switcher[i].value + \"-fieldset\",\n            disabled = switcher.value != switcher[i].value,\n            fieldset = document.getElementById(fieldset_id);\n        \n        fieldset.disabled = disabled;\n        fieldset.style.display = (disabled) ? \"none\" : \"block\";\n    }\n}\n\nwindow.addEventListener(\"load\", function() { switchAuthType(); });\n';\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mnglistall.php');\n    $help = t('helpPage','mnglistall');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-users.php\");\n    \n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"selected\",\n                    \"fullname\" => t('all','Name'),\n                    \"username\" => t('all','Username'),\n                 );\n\n    if (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) === \"yes\") {\n        $cols[] = t('all','Password');\n    } else {\n        $cols[\"auth\"] = t('all','Password');\n    }\n    \n    $cols[] = t('title','Groups');\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    echo '<div id=\"returnMessages\"></div>';\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADCHECK'];\n    $_SESSION['reportQuery'] = \"\";\n    $_SESSION['reportType'] = \"usernameListGeneric\";\n\n    // we use this simplified query just to initialize $numrows\n    $sql0 = sprintf(\"SELECT COUNT(DISTINCT(username)) AS username\n                       FROM %s\n                      WHERE attribute='Auth-Type' OR attribute LIKE '%%-Password'\", $configValues['CONFIG_DB_TBL_RADCHECK']);\n    $res = $dbSocket->query($sql0);\n    $logDebugSQL .= \"$sql0;\\n\";\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n\n        // we execute and log the actual query\n        // sql1 get id, username, password, firstname and lastname\n        $sql1 = sprintf(\"SELECT rc.username AS username, rc.value AS auth, rc.attribute,\n                                CONCAT(ui.firstname, ' ', ui.lastname) AS fullname\n                           FROM %s AS rc, %s AS ui\n                          WHERE rc.username=ui.username\n                            AND (rc.attribute='Auth-Type' OR rc.attribute LIKE '%%-Password')\n                          ORDER BY %s %s LIMIT %s, %s\",\n                        $configValues['CONFIG_DB_TBL_RADCHECK'], $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                        $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql1);\n        $logDebugSQL .= \"$sql1;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // init $records and $usernamelist arrays\n        $records = array();\n        $usernamelist = array();\n        \n        while ($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            // we start storing data...\n            // the enable flag is initialized to true\n            // and the groups list is empty\n            $this_username = $row['username'];\n            \n            if (array_key_exists($this_username, $records)) {\n                continue;\n            }\n            \n            // we try to get the type of this user\n            if ($row['attribute'] == 'Auth-Type' && $row['auth'] == 'Accept') {\n                if (filter_var($this_username, FILTER_VALIDATE_MAC)) {\n                    $type = 'MAC';\n                } else {\n                    $type = 'PIN';\n                }\n            } else {\n                $type = 'USER';\n            }\n            \n            $records[$this_username] = array(\n                'auth' => $row['auth'],\n                'fullname' => $row['fullname'],\n                'enabled' => true,\n                'groups' => array(),\n                'type' => $type\n            );\n            // in the same pass we init the $usernamelist\n            $usernamelist[] = sprintf(\"'%s'\", $dbSocket->escapeSimple($this_username));\n        }\n        \n        // with this second query we retrieve user status (enabled/disabled) and user groups list\n        $sql2 = sprintf(\"SELECT username, groupname FROM %s WHERE username IN (%s)\",\n                        $configValues['CONFIG_DB_TBL_RADUSERGROUP'], implode(\", \", $usernamelist));\n        $res = $dbSocket->query($sql2);\n        $logDebugSQL .= \"$sql2;\\n\";\n\n        // foreach user we update the enabled flag and the grouplist\n        while ($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            $this_username = $row['username'];\n            $this_groupname = $row['groupname'];\n\n            if ($this_groupname === 'daloRADIUS-Disabled-Users') {\n                $records[$this_username]['enabled'] = false;\n            } else {\n                array_push($records[$this_username]['groups'],\n                           htmlspecialchars($this_groupname, ENT_QUOTES, 'UTF-8'));\n            }\n        }\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-del.php\";\n?>\n\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n\n            </tr>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('username[]', $action);\n?>\n                    <input class=\"button\" type=\"button\" value=\"Disable\"\n                        onclick=\"javascript:disableCheckbox('listall','include/management/userOperations.php')\">\n                    <input class=\"button\" type=\"button\" value=\"Enable\"\n                        onclick=\"javascript:enableCheckbox('listall','include/management/userOperations.php')\">\n                </th>\n            </tr>\n\n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType);\n?>\n            </tr>\n            \n        </thead>\n\n        <tbody>\n<?php\n        $count = 0;\n        foreach ($records as $username => $data) {\n            $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n            $type = $data['type'];\n            \n            $img = (!$data['enabled'])\n                 ? '<img title=\"user is disabled\" src=\"images/icons/userStatusDisabled.gif\" alt=\"[disabled]\">'\n                 : '<img title=\"user is enabled\" src=\"images/icons/userStatusActive.gif\" alt=\"[enabled]\">';\n            \n            $auth = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) === \"yes\")\n                  ? \"[Password is hidden]\" : htmlspecialchars($data['auth'], ENT_QUOTES, 'UTF-8');\n            \n            $fullname = htmlspecialchars($data['fullname'], ENT_QUOTES, 'UTF-8');\n            $grouplist = implode(\"<br>\", $data['groups']);\n            \n            // tooltip and ajax stuff\n            $onclick = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo',\"\n                             . \"'divContainerUserInfo','username=%s');\", urlencode($username));\n            $content = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>',\n                               urlencode($username), t('Tooltip','UserEdit'));\n            $arr = array(\n                            'content' => $content,\n                            'onClick' => $onclick,\n                            'value' => urlencode($username),\n                            'divId' => 'divContainerUserInfo'\n                        );\n            $tooltip = addToolTipBalloon($arr);\n?>\n            <tr>\n                <td>\n                    <label for=\"<?= \"checkbox-$count\" ?>\">\n                        <input type=\"checkbox\" name=\"username[]\" id=\"<?= \"checkbox-$count\" ?>\" value=\"<?= $username ?>\">\n                    </label>\n                </td>\n                <td><?= \"$fullname\" ?></td>\n                <td><?= \"$img $tooltip\" . sprintf(' <span class=\"badge badge-%s\">%s</span>', strtolower($type), $type); ?></td>\n                <td><?= ($type == 'USER') ? $auth : \"\" ?></td>\n                <td><?= $grouplist ?></td>\n            </tr>\n<?php\n        } \n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n\n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    include(\"include/management/functions.php\");\n    \n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n        \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                      ? trim(str_replace(\"%\", \"\", $_POST['username'])) : \"\";\n            $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n            // search:  \\$([A-Za-z0-9_]+)\\s+=\\s+\\$_POST\\[\\'([A-Za-z0-9_]+)\\'\\];\n            // replace: $\\1 = (array_key_exists('\\2', $_POST) && isset($_POST['\\2'])) ? $_POST['\\2'] : \"\";\n\n            $password = (array_key_exists('password', $_POST) && isset($_POST['password'])) ? trim($_POST['password']) : \"\";\n            $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                             in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            $maxallsession = (array_key_exists('maxallsession', $_POST) && isset($_POST['maxallsession'])) ? $_POST['maxallsession'] : \"\";\n            $expiration = (array_key_exists('expiration', $_POST) && isset($_POST['expiration'])) ? $_POST['expiration'] : \"\";\n            $sessiontimeout = (array_key_exists('sessiontimeout', $_POST) && isset($_POST['sessiontimeout'])) ? $_POST['sessiontimeout'] : \"\";\n            $idletimeout = (array_key_exists('idletimeout', $_POST) && isset($_POST['idletimeout'])) ? $_POST['idletimeout'] : \"\";\n            $simultaneoususe = (array_key_exists('simultaneoususe', $_POST) && isset($_POST['simultaneoususe'])) ? $_POST['simultaneoususe'] : \"\";\n            $framedipaddress = (array_key_exists('framedipaddress', $_POST) && isset($_POST['framedipaddress'])) ? $_POST['framedipaddress'] : \"\";\n\n            // search:  isset\\(\\$_POST\\[\\'([A-Za-z0-9_]+)\\'\\]\\)\\s+\\?\\s+\\$([A-Za-z0-9_]+).*\n            // replace: $\\2 = (array_key_exists('\\1', $_POST) && isset($_POST['\\1'])) ? $_POST['\\1'] : \"\";\n\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            // billing info variables\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n            \n            include('library/opendb.php');\n            \n            // check if username is already present in the radcheck table\n            $userExists = user_exists($dbSocket, $username);\n\n            if ($userExists) {\n                $failureMsg = \"user already exist in database: <b> $username_enc </b>\";\n                $logAction .= \"Failed adding new user already existing in database [$username] on page: \";\n            } else {\n                \n                // username and password are required\n                if (empty($username) || empty($password)) {\n                    $failureMsg = \"username and/or password are empty\";\n                    $logAction .= \"Failed adding (possible empty user/pass) new user [$username] on page: \";\n                } else {\n                \n                    // we \"inject\" specified attribute in the $_POST array.\n                    // handleAttributes() - called later - will take care of it.\n                    $injected_attribute = array();\n                    \n                    $injected_attribute[$passwordType] = $password;\n                    \n                    if ($maxallsession) {\n                        $injected_attribute['Max-All-Session'] = $maxallsession;\n                    }\n\n                    if ($expiration) {\n                        $injected_attribute['Expiration'] = $expiration;\n                    }\n\n                    if ($sessiontimeout) {\n                        $injected_attribute['Session-Timeout'] = $sessiontimeout;\n                    }\n\n                    if ($idletimeout) {\n                        $injected_attribute['Idle-Timeout'] = $idletimeout;\n                    }\n\n                    if ($simultaneoususe) {\n                        $injected_attribute['Simultaneous-Use'] = $simultaneoususe;\n                    }\n                    \n                    if ($framedipaddress) {\n                        $injected_attribute['Framed-IP-Address'] = $framedipaddress;\n                    }\n\n                    $i = 0;\n                    foreach ($injected_attribute as $attribute => $value) {\n                        $index = 'injected_attribute' . $i;\n                        $_POST[$index] = array( $attribute, $value, ':=', 'check' );\n                        $i++;\n                    }\n\n                    include(\"library/attributes.php\");\n                    $skipList = array(\n                                       \"username\", \"password\", \"passwordType\", \"groups\", \"maxallsession\", \"expiration\",\n                                       \"sessiontimeout\", \"idletimeout\", \"simultaneoususe\", \"framedipaddress\",\n                                       \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\", \"homephone\",\n                                       \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\", \"changeuserinfo\",\n                                       \"enableUserPortalLogin\", \"portalLoginPassword\", \"bi_contactperson\", \"bi_company\",\n                                       \"bi_email\", \"bi_phone\", \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\",\n                                       \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\", \"bi_creditcardnumber\",\n                                       \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\", \"bi_notes\",\n                                       \"changeUserBillInfo\", \"csrf_token\", \"submit\"\n                                     );\n                    $attributesCount = handleAttributes($dbSocket, $username, $skipList);\n                    \n                    // check if any group should be added\n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $username, $groups);\n                    \n                    // adding user info\n                    $params = array(\n                                        \"firstname\" => $firstname,\n                                        \"lastname\" => $lastname,\n                                        \"email\" => $email,\n                                        \"department\" => $department,\n                                        \"company\" => $company,\n                                        \"workphone\" => $workphone,\n                                        \"homephone\" => $homephone,\n                                        \"mobilephone\" => $mobilephone,\n                                        \"address\" => $address,\n                                        \"city\" => $city,\n                                        \"state\" => $state,\n                                        \"country\" => $country,\n                                        \"zip\" => $zip,\n                                        \"notes\" => $notes,\n                                        \"changeuserinfo\" => $ui_changeuserinfo,\n                                        \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                        \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = (add_user_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    // adding billing info\n                    $params = array(\n                                        //~ \"planName\" => $planName,\n                                        \"contactperson\" => $bi_contactperson,\n                                        \"company\" => $bi_company,\n                                        \"email\" => $bi_email,\n                                        \"phone\" => $bi_phone,\n                                        \"address\" => $bi_address,\n                                        \"city\" => $bi_city,\n                                        \"state\" => $bi_state,\n                                        \"country\" => $bi_country,\n                                        \"zip\" => $bi_zip,\n                                        \"postalinvoice\" => $bi_postalinvoice,\n                                        \"faxinvoice\" => $bi_faxinvoice,\n                                        \"emailinvoice\" => $bi_emailinvoice,\n                                        \n                                        \"paymentmethod\" => $bi_paymentmethod,\n                                        \"cash\" => $bi_cash,\n                                        \"creditcardname\" => $bi_creditcardname,\n                                        \"creditcardnumber\" => $bi_creditcardnumber,\n                                        \"creditcardverification\" => $bi_creditcardverification,\n                                        \"creditcardtype\" => $bi_creditcardtype,\n                                        \"creditcardexp\" => $bi_creditcardexp,\n                                        \n                                        \"lead\" => $bi_lead,\n                                        \"coupon\" => $bi_coupon,\n                                        \"ordertaker\" => $bi_ordertaker,\n                                        \n                                        \"notes\" => $bi_notes,\n                                        \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                        \n                                        //~ \"billstatus\" => $bi_billstatus,\n                                        //~ \"lastbill\" => $bi_lastbill,\n                                        //~ \"nextbill\" => $bi_nextbill,\n                                        \"billdue\" => $bi_billdue,\n                                        \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                        \n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedBillingInfo = (add_user_billing_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    $successMsg = 'Inserted new <strong>user</strong>: '\n                                . sprintf('<a href=\"mng-edit.php?username=%s\" title=\"Edit\">%s</a>', $username_enc, $username_enc)\n                                . '<ul style=\"color: black\">'\n                                . sprintf(\"<li><strong>attributes count</strong>: %d</li>\", $attributesCount)\n                                . sprintf(\"<li><strong>groups count</strong>: %d</li>\", $groupsCount)\n                                . sprintf(\"<li><strong>user info</strong>: %s</li>\", $addedUserInfo)\n                                . sprintf(\"<li><strong>billing info</strong>: %s</li>\", $addedBillingInfo)\n                                . \"</ul>\";\n                    \n                    $logAction .= sprintf(\"Successfully inserted new user [%s] on page: \", $username);\n                    \n                } // if (empty($username) || empty($password)) {\n            \n            } // if ($userExists) {\n\n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngnewquick.php');\n    $help = t('helpPage','mngnewquick');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    // set navbar stuff\n    $navkeys = array( 'AccountInfo', 'UserInfo', 'BillingInfo' );\n\n    // print navbar controls\n    print_tab_header($navkeys);\n    \n    open_form();\n    \n    // open 0-th tab (shown)\n    open_tab($navkeys, 0, true);\n    \n    // open 0-th fieldset\n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','AccountInfo'),\n                                 );\n\n    open_fieldset($fieldset0_descriptor);\n    \n    \n    $input_descriptors0 = array();\n    \n    $input_descriptors0[] = array(\n                                    \"id\" => \"username\",\n                                    \"name\" => \"username\",\n                                    \"caption\" => t('all','Username'),\n                                    \"type\" => \"text\",\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                 );\n                                \n    $input_descriptors0[] = array(\n                                    \"id\" => \"password\",\n                                    \"name\" => \"password\",\n                                    \"caption\" => t('all','Password'),\n                                    \"type\" => $hiddenPassword,\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                 );\n\n    $input_descriptors0[] = array(\n                                    \"name\" => \"passwordType\",\n                                    \"caption\" => t('all','PasswordType'),\n                                    \"options\" => $valid_passwordTypes,\n                                    \"type\" => \"select\"\n                                );\n                  \n    include_once('include/management/populate_selectbox.php');\n    $options = get_groups();\n    array_unshift($options, '');\n    $input_descriptors0[] = array(\n                                    \"type\" =>\"select\",\n                                    \"name\" => \"groups[]\",\n                                    \"id\" => \"groups\",\n                                    \"caption\" => t('all','Group'),\n                                    \"options\" => $options,\n                                    \"multiple\" => true,\n                                    \"size\" => 5,\n                                    \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                    \"tooltipText\" => t('Tooltip','groupTooltip')\n                                 );\n    \n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    \n    // open 1-th fieldset\n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Attributes'),\n                                 );\n\n    open_fieldset($fieldset1_descriptor);\n    \n    $input_descriptors1 = array();\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"simultaneoususe\",\n                                    \"caption\" => t('all','SimultaneousUse'),\n                                    \"type\" => \"number\",\n                                );\n    \n    $input_descriptors1[] = array(\n                                    \"name\" => \"framedipaddress\",\n                                    \"caption\" => t('all','FramedIPAddress'),\n                                    \"type\" => \"text\",\n                                    \"pattern\" => trim(IP_REGEX, \"/\"),\n                                    \"title\" => \"you should provide a valid IP address\"\n                                );\n    \n    $input_descriptors1[] = array(\n                                    \"id\" => \"expiration\",\n                                    \"name\" => \"expiration\",\n                                    \"caption\" => t('all','Expiration'),\n                                    \"type\" => \"date\",\n                                    \"min\" => date('Y-m-d', strtotime('+1 day')), // tomorrow\n                                );\n    \n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    $time_values = array(\n                            \"0\" => \"calculate time\",\n                            \"1\" => \"seconds\",\n                            \"60\" => \"minutes\",\n                            \"3600\" => \"hours\",\n                            \"86400\" => \"days\",\n                            \"604800\" => \"weeks\",\n                            \"2592000\" => \"months (30 days)\",\n                        );\n                        \n    $select_descriptors = array();\n    \n    $select_descriptors[] = array(\n                                    \"id\" => \"sessiontimeout\",\n                                    \"name\" => \"sessiontimeout\",\n                                    \"caption\" => t('all','SessionTimeout'),\n                                    \"type\" => \"number\",\n                                    \"options\" => $time_values\n                                 );\n                                 \n    $select_descriptors[] = array(\n                                    \"id\" => \"idletimeout\",\n                                    \"name\" => \"idletimeout\",\n                                    \"caption\" => t('all','IdleTimeout'),\n                                    \"type\" => \"number\",\n                                    \"options\" => $time_values\n                                 );\n                                 \n    $select_descriptors[] = array(\n                                \"id\" => \"maxallsession\",\n                                \"name\" => \"idletimeout\",\n                                \"caption\" => t('all','MaxAllSession'),\n                                \"type\" => \"number\",\n                                \"options\" => $time_values\n                             );\n                             \n    \n    foreach ($select_descriptors as $select_descriptor) {\n        print_calculated_select($select_descriptor);\n    }\n    \n    close_fieldset();\n    \n    $button_descriptor = array(\n                                'type' => 'submit',\n                                'name' => 'submit',\n                                'value' => t('buttons','apply'),\n                                'onclick' => 'javascript:small_window(document.newuser.username.value,\n                                                                      document.newuser.password.value,\n                                                                      document.newuser.maxallsession.value)'\n                              );\n    \n    print_form_component($button_descriptor);\n    \n    close_tab($navkeys, 0);\n\n    // open 1-th tab (shown)\n    open_tab($navkeys, 1);\n    \n    $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" ', t('buttons','apply'))\n                       . 'onclick=\"javascript:small_window(document.newuser.username.value, '\n                       . 'document.newuser.password.value, document.newuser.maxallsession.value);\" '\n                       . 'class=\"button\">';\n    include_once('include/management/userinfo.php');\n    \n    close_tab($navkeys, 1);\n    \n    // open 2-th tab (shown)\n    open_tab($navkeys, 2);\n    \n    $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n    include_once('include/management/userbillinfo.php');\n    \n    close_tab($navkeys, 2);\n    \n    close_form();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    include(\"include/management/functions.php\");\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n    \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n    \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['username']))))\n                      ? str_replace(\"%\", \"\", trim($_POST['username'])) : \"\";\n            $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n            $authType = (array_key_exists('authType', $_POST) && isset($_POST['authType']) &&\n                         in_array($_POST['authType'], array_keys($valid_authTypes))) ? $_POST['authType'] : array_keys($valid_authTypes)[0];\n            \n            $password = (array_key_exists('password', $_POST) && isset($_POST['password'])) ? $_POST['password'] : \"\";\n            $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                             in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n            \n            $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                           filter_var(trim(strtoupper($_POST['macaddress'])), FILTER_VALIDATE_MAC)) ? trim(strtoupper($_POST['macaddress'])) : \"\";\n                           \n            $pincode = (array_key_exists('pincode', $_POST) && isset($_POST['pincode'])) ? trim($_POST['pincode']) : \"\";\n\n            // this can be used for all authTypes\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n\n            // billing info variables\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n            \n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            \n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n            \n            //~ isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n            //~ isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n            //~ isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            \n            \n            // user info variables\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n            \n            isset($_POST['dictAttributes']) ? $dictAttributes = $_POST['dictAttributes'] : $dictAttributes = \"\";\n    \n            include('library/opendb.php');\n\n            // we will have a $username_to_check, only\n            // if required arguments have been supplied\n            // according to the chosen $authType\n            $username_to_check = \"\";\n            \n            if ($authType == \"userAuth\") {\n                // we can add a new record to the check table\n                // only if $username and $password are not empty\n                if (!empty($username) && !empty($password)) {\n                    $username_to_check = $username;\n                } else {\n                    $failureMsg = \"Username and/or password are invalid\";\n                    \n                }\n            } else if ($authType == \"macAuth\") {\n                if (!empty($macaddress)) {\n                    $username_to_check = $macaddress;\n                } else {\n                    $failureMsg = \"MAC address is invalid\";\n                }\n            } else if ($authType == \"pincodeAuth\") {\n                if (!empty($pincode)) {\n                    $username_to_check = $pincode;\n                } else {\n                    $failureMsg = \"PIN code is invalid\";\n                }\n            } else {\n                // authentication method is invalid\n                $failureMsg = \"Unknown authentication method\";\n            }\n\n            if (empty($username_to_check)) {\n                // failure message has been set above\n                $logAction .= \"Failed adding a new user ($failureMsg) on page: \";\n                \n            } else {\n                \n                // we can proceed and check if username/mac address/pincode is already present in the radcheck table\n                $exists = user_exists($dbSocket, $username_to_check);\n                \n                // we proceed only if username/mac address/pincode is not present\n                if ($exists) {\n                    // user exists\n                    $failureMsg = sprintf(\"record already found in database: <strong>%s</strong>\",\n                                          htmlspecialchars($username_to_check, ENT_QUOTES, 'UTF-8'));\n                    $logAction .= \"Failed adding new user already existing in database [$username_to_check] on page: \";\n                } else {\n                    \n                    if ($authType == \"userAuth\") {\n                        // we prepare a password attribute for the \"injection\" (see below)\n                        // and the success/log messages\n                        \n                        $attribute = $passwordType;\n                        $value = $password;\n                        \n                        $u = $username;\n                        $what = \"user\";\n\n                    } else if ($authType == \"macAuth\" || $authType == \"pincodeAuth\") {\n                        // we prepare an auth attribute for the \"injection\" (see below)\n                        // and the success/log messages\n                        \n                        $attribute = 'Auth-Type';\n                        $value = 'Accept';\n                        \n                        if ($authType == \"macAuth\") {\n                            $u = $macaddress;\n                            $what = \"MAC address\";\n                            \n                        } else {\n                            $u = $pincode;\n                            $what = \"PIN code\";\n                        }\n\n                    } \n                   \n                    // we \"inject\" the prepared password/auth attribute in the $_POST array.\n                    // handleAttributes() - called later - will take care of it.\n                    $_POST['injected_attribute'] = array( $attribute, $value, ':=', 'check' );\n\n                    include(\"library/attributes.php\");\n\n                    $skipList = array( \"authType\", \"username\", \"password\", \"passwordType\", \"groups\",\n                                       \"macaddress\", \"pincode\", \"submit\", \"firstname\", \"lastname\", \"email\",\n                                       \"department\", \"company\", \"workphone\", \"homephone\", \"mobilephone\", \"address\", \"city\",\n                                       \"state\", \"country\", \"zip\", \"notes\", \"bi_contactperson\", \"bi_company\", \"bi_email\", \"bi_phone\",\n                                       \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\",\n                                       \"bi_creditcardname\", \"bi_creditcardnumber\", \"bi_creditcardverification\", \"bi_creditcardtype\",\n                                       \"bi_creditcardexp\", \"bi_notes\", \"bi_lead\", \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\",\n                                       \"bi_lastbill\", \"bi_nextbill\", \"bi_nextinvoicedue\", \"bi_billdue\", \"bi_postalinvoice\", \"bi_faxinvoice\",\n                                       \"bi_emailinvoice\", \"changeUserBillInfo\", \"changeUserInfo\", \"copycontact\", \"portalLoginPassword\",\n                                       \"enableUserPortalLogin\", \"csrf_token\", \"submit\"\n                                     );\n\n                    $attributesCount = handleAttributes($dbSocket, $u, $skipList);\n                    \n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $u, $groups);\n                    \n                    // adding user info\n                    $params = array(\n                                        \"firstname\" => $firstname,\n                                        \"lastname\" => $lastname,\n                                        \"email\" => $email,\n                                        \"department\" => $department,\n                                        \"company\" => $company,\n                                        \"workphone\" => $workphone,\n                                        \"homephone\" => $homephone,\n                                        \"mobilephone\" => $mobilephone,\n                                        \"address\" => $address,\n                                        \"city\" => $city,\n                                        \"state\" => $state,\n                                        \"country\" => $country,\n                                        \"zip\" => $zip,\n                                        \"notes\" => $notes,\n                                        \"changeuserinfo\" => $ui_changeuserinfo,\n                                        \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                        \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = (add_user_info($dbSocket, $u, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    // adding billing info\n                    $params = array(\n                                        //~ \"planName\" => $planName,\n                                        \"contactperson\" => $bi_contactperson,\n                                        \"company\" => $bi_company,\n                                        \"email\" => $bi_email,\n                                        \"phone\" => $bi_phone,\n                                        \"address\" => $bi_address,\n                                        \"city\" => $bi_city,\n                                        \"state\" => $bi_state,\n                                        \"country\" => $bi_country,\n                                        \"zip\" => $bi_zip,\n                                        \"postalinvoice\" => $bi_postalinvoice,\n                                        \"faxinvoice\" => $bi_faxinvoice,\n                                        \"emailinvoice\" => $bi_emailinvoice,\n                                        \n                                        \"paymentmethod\" => $bi_paymentmethod,\n                                        \"cash\" => $bi_cash,\n                                        \"creditcardname\" => $bi_creditcardname,\n                                        \"creditcardnumber\" => $bi_creditcardnumber,\n                                        \"creditcardverification\" => $bi_creditcardverification,\n                                        \"creditcardtype\" => $bi_creditcardtype,\n                                        \"creditcardexp\" => $bi_creditcardexp,\n                                        \n                                        \"lead\" => $bi_lead,\n                                        \"coupon\" => $bi_coupon,\n                                        \"ordertaker\" => $bi_ordertaker,\n                                        \n                                        \"notes\" => $bi_notes,\n                                        \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                        \n                                        //~ \"billstatus\" => $bi_billstatus,\n                                        //~ \"lastbill\" => $bi_lastbill,\n                                        //~ \"nextbill\" => $bi_nextbill,\n                                        \"billdue\" => $bi_billdue,\n                                        \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                        \n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedBillingInfo = (add_user_billing_info($dbSocket, $u, $params)) ? \"stored\" : \"nothing to store\";\n\n                    $u_enc = htmlspecialchars($u, ENT_QUOTES, 'UTF-8');\n\n                    $successMsg = sprintf('Inserted new <strong>%s</strong>: ', $what)\n                                . sprintf('<a href=\"mng-edit.php?username=%s\" title=\"Edit\">%s</a>', $u_enc, $u_enc)\n                                . '<ul style=\"color: black\">'\n                                . sprintf(\"<li><strong>attributes count</strong>: %d</li>\", $attributesCount)\n                                . sprintf(\"<li><strong>groups count</strong>: %d</li>\", $groupsCount)\n                                . sprintf(\"<li><strong>user info</strong>: %s</li>\", $addedUserInfo)\n                                . sprintf(\"<li><strong>billing info</strong>: %s</li>\", $addedBillingInfo)\n                                . \"</ul>\";\n                    \n                    $logAction .= sprintf(\"Successfully inserted new %s [%s] on page: \", $what, $u);\n                }\n            }\n            \n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngnew.php');\n    $help = t('helpPage','mngnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n    \n        include_once('include/management/populate_selectbox.php');\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"authType\",\n                                        \"caption\" => \"Authentication Type\",\n                                        \"options\" => $valid_authTypes,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $authType : \"\")\n                                     );\n\n        $options = get_groups();\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"groups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n\n\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"id\" => \"username\",\n                                        \"name\" => \"username\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"random\" => true,\n                                        \"value\" => ((isset($failureMsg)) ? $username : \"\"),\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                     );\n                                    \n        $input_descriptors1[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"random\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        $input_descriptors1[] = array(\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"type\" => \"select\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\")\n                                    );\n\n\n        $input_descriptors2 = array();\n        \n        $input_descriptors2[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','macaddressTooltip'),\n                                        \"pattern\" => trim(MACADDR_REGEX, \"/\"),\n                                        \"title\" => \"you should provide a valid MAC address\"\n                                     );\n                                     \n\n        $input_descriptors3 = array();\n\n        $input_descriptors3[] = array(\n                                        \"name\" => \"pincode\",\n                                        \"caption\" => t('all','PINCode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $pincode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','pincodeTooltip'),\n                                        \"random\" => true,\n                                     );\n                                     \n        $button_descriptor = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                  );\n        \n        // fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => \"Common parameters\",\n                                     );\n                                 \n        $fieldset1_descriptor = array(\n                                        \"title\" => \"Username/password info\",\n                                        \"id\" => \"userAuth-fieldset\",\n                                     );\n                                 \n        $fieldset2_descriptor = array(\n                                        \"title\" => \"MAC Address info\",\n                                        \"id\" => \"macAuth-fieldset\",\n                                     );\n                                 \n        $fieldset3_descriptor = array(\n                                        \"title\" => \"PIN code info\",\n                                        \"id\" => \"pincodeAuth-fieldset\",\n                                     );\n        \n        // set navbar stuff\n        $navkeys = array( 'AccountInfo', 'UserInfo', 'BillingInfo', 'Attributes' );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        open_form();\n        \n        // open 0-th tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open 0-th fieldset\n        open_fieldset($fieldset0_descriptor);\n\n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset($navkeys, 0);\n        \n        // open 1-st fieldset\n        open_fieldset($fieldset1_descriptor);\n\n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        // open 2-st fieldset\n        open_fieldset($fieldset2_descriptor);\n\n        foreach ($input_descriptors2 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        \n        // open 3-st fieldset\n        open_fieldset($fieldset3_descriptor);\n\n        foreach ($input_descriptors3 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        print_form_component($button_descriptor);\n        \n        close_tab();\n        \n        \n        $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n        \n        // open 1-th tab (shown)\n        open_tab($navkeys, 1);\n        include_once('include/management/userinfo.php');\n        close_tab($navkeys, 1);\n        \n        \n        // open 2-th tab (shown)\n        open_tab($navkeys, 2);\n        include_once('include/management/userbillinfo.php');\n        close_tab($navkeys, 2);\n        \n        // open 3-th tab (shown)\n        open_tab($navkeys, 3);\n        include_once('include/management/attributes.php');\n        close_tab($navkeys, 3);\n\n    }\n    \n    include('include/config/logging.php');\n    \n    $inline_extra_js = '\nfunction switchAuthType() {\n    var switcher = document.getElementById(\"authType\");\n    \n    for (var i=0; i<switcher.length; i++) {\n        var fieldset_id = switcher[i].value + \"-fieldset\",\n            disabled = switcher.value != switcher[i].value,\n            fieldset = document.getElementById(fieldset_id);\n        \n        fieldset.disabled = disabled;\n        fieldset.style.display = (disabled) ? \"none\" : \"block\";\n    }\n}\n\nwindow.addEventListener(\"load\", function() { switchAuthType(); });\n';\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    isset($_REQUEST['vendor']) ? $vendor = $_REQUEST['vendor'] : $vendor = \"\";\n    isset($_REQUEST['attribute']) ? $attribute = $_REQUEST['attribute'] : $attribute = \"\";\n\n    if (isset($_POST[\"submit\"])) {\n\n        isset($_POST['vendor']) ? $vendor = $_POST['vendor'] : $vendor = \"\";\n        isset($_POST['attributeOld']) ? $attributeOld = $_POST['attributeOld'] : $attributeOld = \"\";\n        isset($_POST['attribute']) ? $attribute = $_POST['attribute'] : $attribute = \"\";\n        isset($_POST['type']) ? $type = $_POST['type'] : $type = \"\";\n        isset($_POST['RecommendedOP']) ? $RecommendedOP = $_POST['RecommendedOP'] : $RecommendedOP = \"\";\n        isset($_POST['RecommendedTable']) ? $RecommendedTable = $_POST['RecommendedTable'] : $RecommendedTable = \"\";\n        isset($_POST['RecommendedTooltip']) ? $RecommendedTooltip = $_POST['RecommendedTooltip'] : $RecommendedTooltip = \"\";\n        isset($_POST['RecommendedHelper']) ? $RecommendedHelper = $_POST['RecommendedHelper'] : $RecommendedHelper = \"\";\n\n        include 'library/opendb.php';\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALODICTIONARY'].\" WHERE vendor='\".$dbSocket->escapeSimple($vendor).\n            \"' AND attribute='\".$dbSocket->escapeSimple($attribute).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        if ($res->numRows() == 1) {\n            if (trim($vendor) != \"\" and trim($attribute) != \"\") {\n                // update vendor/attribute pairs to database\n                $sql = \"UPDATE \".$configValues['CONFIG_DB_TBL_DALODICTIONARY'].\" SET \n                    type='\".\n                    $dbSocket->escapeSimple($type).\"', attribute='\".$dbSocket->escapeSimple($attribute).\n                    \"', RecommendedOP='\".$dbSocket->escapeSimple($RecommendedOP).\n                    \"', RecommendedTable='\".$dbSocket->escapeSimple($RecommendedTable).\n                    \"', RecommendedTooltip='\".$dbSocket->escapeSimple($RecommendedTooltip).\n                    \"', RecommendedHelper='\".$dbSocket->escapeSimple($RecommendedHelper).\n                    \"' WHERE Vendor='$vendor' AND Attribute='$attributeOld'\";\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= $sql . \"\\n\";\n\n                $successMsg = \"Updated database with vendor attribute: <b>$attribute</b> of vendor: <b>$vendor</b>\";\n                $logAction .= \"Successfully update vendor [$vendor] and attribute [$attribute] on page: \";\n            } else {\n                $failureMsg = \"you must provide atleast a vendor name and attribute\";    \n                $logAction .= \"Failed updating vendor [$vendor] and attribute [$attribute] on page: \";\n            }\n        } else { \n            $failureMsg = \"You have tried to update a vendor's attribute that either is not present in the database or there\n                    may be more than 1 entry for this vendor attribute in database (attribute :$attribute)\";\n            $logAction .= \"Failed updating vendor attribute already in database [$attribute] on page: \";        \n        }\n    \n        include 'library/closedb.php';\n\n    }\n\n\n\n    include 'library/opendb.php';\n\n    $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALODICTIONARY'].\" WHERE vendor='\".$dbSocket->escapeSimple($vendor).\n        \"' AND attribute='\".$dbSocket->escapeSimple($attribute).\"'\";\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= $sql . \"\\n\";\n\n    $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n    isset($row['Attribute']) ? $attribute = $row['Attribute'] : $attribute = \"\";\n    isset($row['Type']) ? $type = $row['Type'] : $type = \"\";\n    isset($row['Vendor']) ? $vendor = $row['Vendor'] : $vendor = \"\";\n    isset($row['RecommendedOP']) ? $RecommendedOP = $row['RecommendedOP'] : $RecommendedOP = \"\";\n    isset($row['RecommendedTable']) ? $RecommendedTable = $row['RecommendedTable'] : $RecommendedTable = \"\";\n    isset($row['RecommendedTooltip']) ? $RecommendedTooltip = $row['RecommendedTooltip'] : $RecommendedTooltip = \"\";\n    isset($row['RecommendedHelper']) ? $RecommendedHelper = $row['RecommendedHelper'] : $RecommendedHelper = \"\";\n\n    include 'library/closedb.php';\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradattributesedit.php');\n    $help = t('helpPage','mngradattributesedit');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-attributes.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n\n?>\n\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n\n    <fieldset>\n\n        <h302> <?php echo t('title','VendorAttribute'); ?> </h302>\n        <br/>\n\n        <ul>\n\n        <input type='hidden' name='vendor' value='<?php if (isset($vendor)) echo $vendor ?>' />\n\n        <li class='fieldset'>\n        <label for='vendor' class='form'><?php echo t('all','VendorName') ?></label>\n        <input disabled name='vendor' type='text' id='vendor' value='<?php if (isset($vendor)) echo $vendor ?>' tabindex=100 />\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('vendorNameTooltip')\" />\n        \n        <div id='vendorNameTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','vendorNameTooltip') ?>\n        </div>\n        </li>\n\n        <input type='hidden' name='attributeOld' value='<?php if (isset($attribute)) echo $attribute ?>' />\n\n        <li class='fieldset'>\n        <label for='attribute' class='form'><?php echo t('all','Attribute') ?></label>\n        <input name='attribute' type='text' id='attribute' value='<?php if (isset($attribute)) echo $attribute ?>' tabindex=101 />\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('attributeTooltip')\" />\n        \n        <div id='attributeTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','attributeTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='type' class='form'><?php echo t('all','Type') ?></label>\n        <select name='type' type='text' id='type' class='form' tabindex=102 />\n        <option value='<?php echo $type; ?>'><?php echo $type; ?></option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawTypes();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('typeTooltip')\" />\n        \n        <div id='typeTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','typeTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedOP' class='form'><?php echo t('all','RecommendedOP') ?></label>\n        <select name='RecommendedOP' type='text' id='RecommendedOP' class='form' tabindex=103 />\n        <option value='<?php echo $RecommendedOP; ?>'><?php echo $RecommendedOP; ?></option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawOptions();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedOPTooltip')\" />\n        \n        <div id='RecommendedOPTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedOPTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedTable' class='form'><?php echo t('all','RecommendedTable') ?></label>\n        <select name='RecommendedTable' type='text' id='RecommendedTable' class='form' tabindex=104 />\n        <option value='<?php echo $RecommendedTable; ?>'><?php echo $RecommendedTable; ?></option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawTables();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedTableTooltip')\" />\n        \n        <div id='RecommendedTableTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedTableTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedTooltip' class='form'><?php echo t('all','RecommendedTooltip') ?></label>\n        <textarea class='form' name='RecommendedTooltip' type='text' id='RecommendedTooltip' tabindex=105 /><?php if (isset($RecommendedTooltip)) echo $RecommendedTooltip ?></textarea>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedTooltipTooltip')\" />\n        \n        <div id='RecommendedTooltipTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedTooltipTooltip') ?>\n        </div>\n        </li>\n\n\n        <li class='fieldset'>\n        <label for='RecommendedHelper' class='form'><?php echo t('all','RecommendedHelper') ?></label>\n        <select name='RecommendedHelper' type='text' id='RecommendedHelper' class='form' tabindex=104 />\n        <option value='<?php echo $RecommendedHelper; ?>'><?php echo $RecommendedHelper; ?></option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawRecommendedHelper();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedHelperTooltip')\" />\n        \n        <div id='RecommendedHelperTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedHelperTooltip') ?>\n        </div>\n        </li>\n    \n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?php echo t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n    </fieldset>\n\n    </form>\n\n<?php\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    if (isset($_POST[\"submit\"])) {\n\n        isset($_POST['vendor']) ? $vendor = $_POST['vendor'] : $vendor = \"\";\n        isset($_POST['attribute']) ? $attribute = $_POST['attribute'] : $attribute = \"\";\n        isset($_POST['type']) ? $type = $_POST['type'] : $type = \"\";\n        isset($_POST['RecommendedOP']) ? $RecommendedOP = $_POST['RecommendedOP'] : $RecommendedOP = \"\";\n        isset($_POST['RecommendedTable']) ? $RecommendedTable = $_POST['RecommendedTable'] : $RecommendedTable = \"\";\n        isset($_POST['RecommendedTooltip']) ? $RecommendedTooltip = $_POST['RecommendedTooltip'] : $RecommendedTooltip = \"\";\n\n        include 'library/opendb.php';\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALODICTIONARY'].\" WHERE vendor='\".$dbSocket->escapeSimple($vendor).\n            \"' AND attribute='\".$dbSocket->escapeSimple($attribute).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        if ($res->numRows() == 0) {\n            if (trim($vendor) != \"\" and trim($attribute) != \"\") {\n                // insert vendor/attribute pairs to database\n                $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALODICTIONARY'].\n                    \" (id, type, attribute, vendor, RecommendedOP, RecommendedTable, RecommendedTooltip) VALUES (0, '\".\n                    $dbSocket->escapeSimple($type).\"', '\".$dbSocket->escapeSimple($attribute).\"','\".\n                    $dbSocket->escapeSimple($vendor).\"','\".    $dbSocket->escapeSimple($RecommendedOP).\"','\".\n                    $dbSocket->escapeSimple($RecommendedTable).\"','\".$dbSocket->escapeSimple($RecommendedTooltip).\"')\";\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= $sql . \"\\n\";\n\n                $successMsg = \"Added to database new vendor attribute: <b>$attribute</b> of vendor: <b>$vendor</b>\";\n                $logAction .= \"Successfully added new vendor [$vendor] and attribute [$attribute] on page: \";\n            } else {\n                $failureMsg = \"You must provide atleast a vendor name and attribute\";    \n                $logAction .= \"Failed adding new vendor [$vendor] and attribute [$attribute] on page: \";\n            }\n        } else { \n            $failureMsg = \"You have tried to add a vendor's attribute that already exist in the database: $attribute\";\n            $logAction .= \"Failed adding new vendor attribute already in database [$attribute] on page: \";        \n        }\n    \n        include 'library/closedb.php';\n\n    }\n\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradattributesnew.php');\n    $help = t('helpPage','mngradattributesnew');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-attributes.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    \n    <fieldset>\n\n        <h302> <?php echo t('title','VendorAttribute'); ?> </h302>\n        <br/>\n\n        <ul>\n\n        <li class='fieldset'>\n        <label for='vendor' class='form'><?php echo t('all','VendorName') ?></label>\n        <input name='vendor' type='text' id='vendor' value='' tabindex=100 />\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('vendorNameTooltip')\" />\n        \n        <div id='vendorNameTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','vendorNameTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='attribute' class='form'><?php echo t('all','Attribute') ?></label>\n        <input name='attribute' type='text' id='attribute' value='' tabindex=101 />\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('attributeTooltip')\" />\n\n        <div id='attributeTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','attributeTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='type' class='form'><?php echo t('all','Type') ?></label>\n        <select name='type' type='text' id='type' class='form' tabindex=102 />\n            <option value=''>Select Type...</option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawTypes();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('typeTooltip')\" />\n        \n        <div id='typeTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','typeTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedOP' class='form'><?php echo t('all','RecommendedOP') ?></label>\n        <select name='RecommendedOP' id='RecommendedOP' class='form' tabindex=103 />\n            <option value=''>Select OP...</option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawOptions();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedOPTooltip')\" />\n        \n        <div id='RecommendedOPTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedOPTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedTable' class='form'><?php echo t('all','RecommendedTable') ?></label>\n                <select name='RecommendedTable' id='RecommendedTable' class='form' tabindex=104 />\n        <option value=''>Select Table...</option>\n        <?php\n            include_once('include/management/populate_selectbox.php');\n            drawTables();\n        ?>\n        </select>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedTableTooltip')\" />\n        \n        <div id='RecommendedTableTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedTableTooltip') ?>\n        </div>\n        </li>\n\n        <li class='fieldset'>\n        <label for='RecommendedTooltip' class='form'><?php echo t('all','RecommendedTooltip') ?></label>\n        <textarea class='form' name='RecommendedTooltip' type='text' id='RecommendedTooltip' tabindex=105 /></textarea>\n        <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('RecommendedTooltipTooltip')\" />\n        <div id='RecommendedTooltipTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n            <img src='images/icons/comment.png' alt='Tip' border='0' />\n            <?php echo t('Tooltip','RecommendedTooltipTooltip') ?>\n        </div>\n        </li>\n\n    \n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?php echo t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n    </fieldset>\n\n    </form>\n\n<?php\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // get vendor name passed to us from menu-mng-rad-attributes.php\n    $attribute = (array_key_exists('attribute', $_GET) && isset($_GET['attribute']))\n            ? str_replace(\"%\", \"\", $_GET['attribute']) : \"\";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mngradattributessearch.php');\n    $help = t('helpPage','mngradattributessearch');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-attributes.php\");\n    \n    $cols = array(\n                    \"id\" => t('all','VendorID'),\n                    \"vendor\" => t('all','VendorName'),\n                    \"attribute\" => t('all','VendorAttribute')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    $sql_WHERE[] = \"(type <> '' OR type IS NOT NULL)\";\n    if (!empty($vendor)) {\n        $sql_WHERE[] = sprintf(\"attribute LIKE '%s%%'\", $dbSocket->escapeSimple($attribute));\n    }\n    \n    // we use this simplified query just to initialize $numrows\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s\", $configValues['CONFIG_DB_TBL_DALODICTIONARY']);\n    $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql = sprintf(\"SELECT id, vendor, attribute FROM %s\", $configValues['CONFIG_DB_TBL_DALODICTIONARY']);\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($attribute))\n                              ? \"&attribute=\" . urlencode(htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8')) : \"\";\n                              \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-attributes-del.php\";\n?>\n\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('vendor__attribute[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        $counter = 1;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n        \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            list($this_id, $this_vendor, $this_attribute) = $row;\n            \n            $tooltipText = sprintf('<a class=\"toolTip\" href=\"mng-rad-attributes-edit.php?vendor=%s&attribute=%s\">%s</a>',\n                                   urlencode($this_vendor), urlencode($this_attribute), t('Tooltip','AttributeEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerAttributeInfo\">Loading...</div>';\n            \n            $onclick = sprintf('javascript:ajaxGeneric(\"include/management/retVendorAttributeInfo.php\",\"retAttributeInfo\",'\n                             . '\"divContainerAttributeInfo\",\"attribute=%s\");return false;', urlencode($this_attribute));\n?>\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"vendor__attribute[]\" id=\"checkbox-<?= $counter ?>\"\n                        value=\"<?= urlencode($this_vendor) . \"__\" . urlencode($this_attribute) ?>\">\n                    <label for=\"checkbox-<?= $counter ?>\"><?= $this_id ?></label>\n                </td>\n                <td><?= $this_vendor ?></td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick='<?= $onclick ?>' tooltipText='<?= $tooltipText ?>'>\n                        <?= $this_attribute ?>\n                    </a>\n                </td>\n            </tr>\n        \n<?php\n            $counter++;\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links, $partial_query_string);\n?>\n    </table>\n    \n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    include_once('include/management/populate_selectbox.php');\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $groupname = (array_key_exists('groupname', $_POST) && isset($_POST['groupname']))\n                 ? trim(str_replace(\"%\", \"\", $_POST['groupname'])) : \"\";\n        $groupname_enc = (!empty($groupname)) ? htmlspecialchars($groupname, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($groupname)) {\n            // profile required\n            $failureMsg = \"The specified group name is empty or invalid\";\n            $logAction .= \"Failed creating a new group check mapping [empty or invalid group name] on page: \";\n        } else {\n            \n            include('library/opendb.php');\n            \n            $groups = array_keys(get_groups());\n            if (!in_array($groupname, $groups)) {\n                // invalid profile name\n                $failureMsg = \"The chosen group [<strong>$groupname_enc</strong>] does not exist\";\n                $logAction .= \"Failed creating group check mapping [$groupname, does not exist] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"groupname\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $groupname, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new group check mapping for <strong>$groupname_enc</strong>\";\n                    $logAction .= \"Successfully added a new group [$groupname] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating group [$groupname_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating group [$groupname], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngradgroupchecknew.php');\n    $help = t('helpPage','mngradgroupchecknew');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-groups.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $groups = get_groups();\n        array_unshift($groups , '');\n        $input_descriptors1[] = array(\n                                        \"name\" => \"groupname\",\n                                        \"caption\" => t('all','Groupname'),\n                                        \"type\" => \"select\",\n                                        \"options\" => $groups,\n                                        \"selected_value\" => ((isset($groupname)) ? $groupname : \"\")\n                                     );\n                                     \n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                     //~ );\n?>\n<form name=\"newgroupcheck\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','GroupInfo') ?></h302>\n        \n        <ul>\n<?php\n            foreach ($input_descriptors1 as $input_descriptor) {\n                print_form_component($input_descriptor);\n            }\n?>\n\n        </ul>\n\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    include_once('include/management/populate_selectbox.php');\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $groupname = (array_key_exists('groupname', $_POST) && isset($_POST['groupname']))\n                 ? trim(str_replace(\"%\", \"\", $_POST['groupname'])) : \"\";\n        $groupname_enc = (!empty($groupname)) ? htmlspecialchars($groupname, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($groupname)) {\n            // profile required\n            $failureMsg = \"The specified group name is empty or invalid\";\n            $logAction .= \"Failed creating a new group reply mapping [empty or invalid group name] on page: \";\n        } else {\n            \n            include('library/opendb.php');\n            \n            $groups = array_keys(get_groups());\n            if (!in_array($groupname, $groups)) {\n                // invalid profile name\n                $failureMsg = \"The chosen group [<strong>$groupname_enc</strong>] does not exist\";\n                $logAction .= \"Failed creating group reply mapping [$groupname, does not exist] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"groupname\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $groupname, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new group reply mapping for <strong>$groupname_enc</strong>\";\n                    $logAction .= \"Successfully added a new group [$groupname] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating group [$groupname_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating group [$groupname], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngradgroupreplynew.php');\n    $help = t('helpPage','mngradgroupreplynew');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-groups.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $groups = get_groups();\n        array_unshift($groups , '');\n        $input_descriptors1[] = array(\n                                        \"name\" => \"groupname\",\n                                        \"caption\" => t('all','Groupname'),\n                                        \"type\" => \"select\",\n                                        \"options\" => $groups,\n                                        \"selected_value\" => ((isset($groupname)) ? $groupname : \"\")\n                                     );\n                                     \n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                     //~ );\n?>\n<form name=\"newgroupreply\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','GroupInfo') ?></h302>\n        \n        <ul>\n<?php\n            foreach ($input_descriptors1 as $input_descriptor) {\n                print_form_component($input_descriptor);\n            }\n?>\n\n        </ul>\n\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    // we import validation facilities\n    include_once(\"library/validation.php\");\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $nasname = (array_key_exists('nasname', $_POST) && isset($_POST['nasname'])) ? trim(str_replace(\"%\", \"\", $_POST['nasname'])) : \"\";\n        $nassecret = (array_key_exists('nassecret', $_POST) && isset($_POST['nassecret'])) ? trim(str_replace(\"%\", \"\", $_POST['nassecret'])) : \"\";\n        \n        $nasname_enc = (!empty($nasname)) ? htmlspecialchars($nasname, ENT_QUOTES, 'UTF-8') : \"\";\n        \n        if (empty($nasname) || empty($nassecret)) {\n            // required\n            $failureMsg = sprintf(\"%s and/or %s are empty or invalid\", t('all','NasIPHost'), t('all','NasSecret'));\n            $logAction .= \"Failed adding (possible empty user/pass) new operator on page: \";\n        } else {\n            include('library/opendb.php');\n            \n            $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE nasname='%s'\", $configValues['CONFIG_DB_TBL_RADNAS'],\n                                                                          $dbSocket->escapeSimple($nasname));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $exists = $res->fetchrow()[0] > 0;\n            \n            if ($exists) {\n                // name already taken\n                $failureMsg = sprintf(\"This %s already exists: <b>%s</b>\", t('all','NasIPHost'), $nasname_enc);\n                $logAction .= \"Failed adding a new NAS [$nasname already exists] on page: \";\n            } else {\n                $shortname = (array_key_exists('shortname', $_POST) && isset($_POST['shortname'])) ? trim(str_replace(\"%\", \"\", $_POST['shortname'])) : \"\";\n                $nasports = (array_key_exists('nasports', $_POST) && isset($_POST['nasports'])) ? trim(str_replace(\"%\", \"\", $_POST['nasports'])) : \"\";\n                $nastype = (array_key_exists('nastype', $_POST) && isset($_POST['nastype']) &&\n                            in_array($_POST['nastype'], $valid_nastypes)) ? $_POST['nastype'] : $valid_nastypes[0];\n                $nasdescription = (array_key_exists('nasdescription', $_POST) && isset($_POST['nasdescription'])) ? trim(str_replace(\"%\", \"\", $_POST['nasdescription'])) : \"\";\n                $nascommunity = (array_key_exists('nascommunity', $_POST) && isset($_POST['nascommunity'])) ? trim(str_replace(\"%\", \"\", $_POST['nascommunity'])) : \"\";\n                $nasvirtualserver = (array_key_exists('nasvirtualserver', $_POST) && isset($_POST['nasvirtualserver'])) ? trim(str_replace(\"%\", \"\", $_POST['nasvirtualserver'])) : \"\";\n                \n                $sql = sprintf(\"INSERT INTO %s (id, nasname, shortname, type, ports, secret, server, community, description)\n                                        VALUES (0, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')\", $configValues['CONFIG_DB_TBL_RADNAS'],\n                               $dbSocket->escapeSimple($nasname), $dbSocket->escapeSimple($shortname), $dbSocket->escapeSimple($nastype),\n                               $dbSocket->escapeSimple($nasports), $dbSocket->escapeSimple($nassecret), $dbSocket->escapeSimple($nasvirtualserver),\n                               $dbSocket->escapeSimple($nascommunity), $dbSocket->escapeSimple($nasdescription));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                if (!DB::isError($res)) {\n                    // it seems that operator could not be added\n                    $f = \"Failed to add this new NAS [%s] to database\";\n                    $failureMsg = sprintf($f, $nasname_enc);\n                    $logAction .= sprintf($f, $nasname_enc);\n                } else {\n                    $successMsg = sprintf(\"Added to database new NAS: <strong>%s</strong>\", $nasname_enc);\n                    $logAction .= sprintf(\"Successfully added new NAS [%s] on page: \", $nasname);\n                }\n            }\n            \n            include('library/closedb.php');\n        }\n\n    }\n\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','mngradnasnew.php');\n    $help = t('helpPage','mngradnasnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-rad-nas.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n    if (!isset($successMsg)) {\n\n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nasname\",\n                                        \"caption\" => t('all','NasIPHost'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nasname)) ? $nasname : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nassecret\",\n                                        \"caption\" => t('all','NasSecret'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nassecret)) ? $nassecret : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nastype\",\n                                        \"caption\" => t('all','NasType'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_nastypes,\n                                        \"value\" => ((isset($nastype)) ? $nastype : $valid_nastypes[0])\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"shortname\",\n                                        \"caption\" => t('all','NasShortname'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($shortname)) ? $shortname : \"\")\n                                     );\n\n        \n        $input_descriptors2 = array();\n        \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasports\",\n                                        \"caption\" => t('all','NasPorts'),\n                                        \"type\" => \"number\",\n                                        \"min\" => \"0\",\n                                        \"max\" => \"65535\",\n                                        \"value\" => ((isset($nasports)) ? $nasports : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nascommunity\",\n                                        \"caption\" => t('all','NasCommunity'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nascommunity)) ? $nascommunity : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasvirtualserver\",\n                                        \"caption\" => t('all','NasVirtualServer'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nasvirtualserver)) ? $nasvirtualserver : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasdescription\",\n                                        \"caption\" => t('all','NasDescription'),\n                                        \"type\" => \"textarea\",\n                                        \"content\" => ((isset($nasdescription)) ? $nasdescription : \"\")\n                                     );\n\n        $submit_descriptor = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n\n        // set navbar stuff\n        $navbuttons = array(\n                              'NASInfo-tab' => t('title','NASInfo'),\n                              'NASAdvanced-tab' => t('title','NASAdvanced'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n\n?>\n\n<form name=\"newnas\" action=\"<?= $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <div class=\"tabcontent\" id=\"NASInfo-tab\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','NASInfo') ?></h302>\n        \n            <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n            </ul>\n        </fieldset>\n     </div><!-- #NASInfo-tab -->\n    \n    <div class=\"tabcontent\" id=\"NASAdvanced-tab\">\n        <fieldset>\n            <h302><?= t('title','NASAdvanced') ?></h302>\n            <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors2 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n            </ul>\n        </fieldset>\n    </div><!-- #NASAdvanced-tab -->\n    \n<?php\n        print_form_component($submit_descriptor);\n?>\n\n</form>\n\n<?php\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $profile_name = (array_key_exists('profile_name', $_POST) && !empty($_POST['profile_name']) &&\n                         str_replace(\"%\", \"\", trim($_POST['profile_name'])))\n                      ? str_replace(\"%\", \"\", trim($_POST['profile_name'])) : \"\";\n    } else {\n        $profile_name = (array_key_exists('profile_name', $_REQUEST) && isset($_REQUEST['profile_name']) &&\n                         str_replace(\"%\", \"\", trim($_REQUEST['profile_name'])))\n                      ? str_replace(\"%\", \"\", trim($_REQUEST['profile_name'])) : \"\";\n    }\n    \n    $profile_name_enc = (!empty($profile_name)) ? htmlspecialchars($profile_name, ENT_QUOTES, 'UTF-8') : \"\";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngradprofilesedit.php');\n    $help = t('helpPage','mngradprofilesedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($profile_name_enc)) {\n        $title .= \" :: $profile_name_enc\";\n    } \n\n    include_once('include/management/populate_selectbox.php');\n    include(\"menu-mng-rad-profiles.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        \n        $groups = array_keys(get_groups());\n        \n        // check if it exists\n        if (!in_array($profile_name, $groups)) {\n            // we empty the profile if the hs does not exist\n            $profile_name = \"\";\n        } else {\n            include('library/opendb.php');\n            include(\"library/attributes.php\");\n            $skipList = array( \"profile_name\", \"submit\", \"csrf_token\" );\n            $count = handleAttributes($dbSocket, $profile_name, $skipList, false, 'group');\n            include('library/closedb.php');\n            \n            $successMsg = \"Updated attributes for: <b> $profile_name_enc </b>\";\n            $logAction .= \"Successfully updates attributes for profile [$profile_name] on page:\";\n        }\n    }\n    \n    if (empty($profile_name)) {\n        $failureMsg = \"Profile name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid profile name) profile on page: \";\n    }\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($profile_name)) { \n        \n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        $input_descriptors1[] = array(\n                                        \"name\" => \"profile_name\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $profile_name,\n                                     );\n        \n        $input_descriptors2 = array();\n        $input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n        $input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n        $input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n        $input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n        \n        $submit_descriptor = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navbuttons = array(\n                              'RADIUSCheck-tab' => t('title','RADIUSCheck'),\n                              'RADIUSReply-tab' => t('title','RADIUSReply'),\n                              'Attributes-tab' => t('title','Attributes'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n    \n    \n        include('library/opendb.php');\n        include_once('include/management/pages_common.php');\n        \n        $hashing_algorithm_notice = '<small style=\"font-size: 10px; color: black\">'\n                                  . 'Notice that for supported password-like attributes, you can just specify a plaintext value. '\n                                  . 'The system will take care of correctly hashing it.'\n                                  . '</small>';\n                                  \n    \n        $fieldset1_descriptor = array(\n                                    \"title\" => t('title','RADIUSCheck'),\n                                 );\n    \n        open_form();\n    \n        \n?>\n\n        <div id=\"RADIUSCheck-tab\" class=\"tabcontent\" style=\"display: block\">\n    \n<?php\n        open_fieldset($fieldset1_descriptor);\n\n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n\n\n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.groupname='%s'\", $configValues['CONFIG_DB_TBL_RADGROUPCHECK'],\n                                                   $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                   $dbSocket->escapeSimple($profile_name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n    if ($res->numRows() == 0) {\n        echo '<div style=\"text-align: center\">'\n           . t('messages','noCheckAttributesForGroup')\n           . '</div>';\n    } else {\n        \n        echo '<ul>';\n        \n        $editCounter = 0;\n        $table = 'radgroupcheck';\n        while ($row = $res->fetchRow()) {\n            \n            foreach ($row as $i => $v) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n            \n            $id = intval($row[5]);\n            $id__attribute = sprintf('%d__%s', $id, $row[0]);\n            $name = sprintf('editValues%s[]', $editCounter);\n            $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n            \n            echo '<li>';\n            printf('<a class=\"tablenovisit\" href=\"mng-rad-profiles-del.php?profile_name=%s&id=%d&tablename=%s\">',\n                   urlencode($profile_name_enc), $id, $table);\n            echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n            \n            printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n            printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n            \n            printf('<select name=\"%s\" class=\"form\">', $name);\n            printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n            drawOptions();\n            echo '</select>';\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $table);\n\n\n            if (!empty($row[3]) || !empty($row[4])) {\n                $divId = sprintf(\"%s-Tooltip-%d-%s\", $row[0], $editCounter, $table);\n                $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                \n                if (!empty($row[3])) {\n                    echo '<br>';\n                    printf('<i><b>Type:</b> %s</i>', $row[3]);\n                }\n                \n                if (!empty($row[4])) {\n                    echo '<br>';\n                    printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                }\n                echo '</div>';\n            }\n            \n            echo '</li>';\n            \n            // we increment the counter for the html elements of the edit attributes\n            $editCounter++;\n        }\n        \n        echo '</ul>';\n        \n        echo $hashing_algorithm_notice;\n    }\n\n?>\n            </ul>\n\n<?php\n            print_form_component($submit_descriptor);\n?>\n\n        </fieldset>\n    </div>\n\n    <div class=\"tabcontent\" id=\"RADIUSReply-tab\">\n\n<?php\n\n    $fieldset2_descriptor = array(\n                                    \"title\" => t('title','RADIUSReply'),\n                                 );\n\n    open_fieldset($fieldset2_descriptor);\n\n    $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                      FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                     WHERE rc.groupname='%s'\", $configValues['CONFIG_DB_TBL_RADGROUPREPLY'],\n                                               $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                               $dbSocket->escapeSimple($profile_name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    if ($res->numRows() == 0) {\n        echo '<div style=\"text-align: center\">'\n           . t('messages','noReplyAttributesForGroup')\n           . '</div>';\n    } else {\n        \n        echo '<ul>';\n        \n        $editCounter = 0;\n        $table = 'radgroupreply';\n        while ($row = $res->fetchRow()) {\n            \n            foreach ($row as $i => $v) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            $id__attribute = sprintf('%s__%s', $row[5], $row[0]);\n            $name = sprintf('editValues%s[]', $editCounter);\n            $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n            \n            echo '<li>';\n            printf('<a class=\"tablenovisit\" href=\"mng-rad-profiles-del.php?profile_name=%s&id=%d&tablename=%s\">',\n                   urlencode($profile_name_enc), $id, $table);\n            echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n            \n            printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n            printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n            \n            printf('<select name=\"%s\" class=\"form\">', $name);\n            printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n            drawOptions();\n            echo '</select>';\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $table);\n\n\n            if (!empty($row[3]) || !empty($row[4])) {\n                $divId = sprintf(\"%s-Tooltip-%d-%s\", $row[0], $editCounter, $table);\n                $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                \n                if (!empty($row[3])) {\n                    echo '<br>';\n                    printf('<i><b>Type:</b> %s</i>', $row[3]);\n                }\n                \n                if (!empty($row[4])) {\n                    echo '<br>';\n                    printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                }\n                echo '</div>';\n            }\n            \n            echo '</li>';\n            \n            // we increment the counter for the html elements of the edit attributes\n            $editCounter++;\n        }\n        \n        echo '</ul>';\n        \n        echo $hashing_algorithm_notice;\n    }\n    \n?>\n            </ul>\n            \n<?php\n            print_form_component($submit_descriptor);\n?>\n            \n        </fieldset>\n    </div>\n\n<?php\n        include('library/closedb.php');\n?>\n    \n    <div class=\"tabcontent\" id=\"Attributes-tab\">\n<?php\n        include_once('include/management/attributes.php');\n?>\n    </div>     \n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    $log = \"visited page: \";\n\n    // we import validation facilities\n    include_once(\"library/validation.php\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $profile = (array_key_exists('profile', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['profile']))))\n                 ? str_replace(\"%\", \"\", trim($_POST['profile'])) : \"\";\n        $profile_enc = (!empty($profile)) ? htmlspecialchars($profile, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($profile)) {\n            // profile required\n            $failureMsg = \"The specified profile name is empty or invalid\";\n            $logAction .= \"Failed creating profile [empty or invalid profile name] on page: \";\n        } else {\n            \n            include_once('include/management/populate_selectbox.php');\n            $groups = array_keys(get_groups());\n            include('library/opendb.php');\n            \n            if (in_array($profile, $groups)) {\n                // invalid profile name\n                $failureMsg = \"This profile name [<strong>$profile_enc</strong>] is already in use\";\n                $logAction .= \"Failed creating profile [$profile, name already in use] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"profile\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $profile, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new profile: <b> $profile_enc </b>\";\n                    $logAction .= \"Successfully added a new profile [$profile] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating profile [$profile_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating profile [$profile], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngradprofilesnew.php');\n    $help = t('helpPage','mngradprofilesnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-mng-rad-profiles.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n    \n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"profile\",\n                                        \"caption\" => \"Profile Name\",\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($profile)) ? $profile : \"\")\n                                     );\n\n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                  //~ );\n?>\n\n<form name=\"newusergroup\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','ProfileInfo') ?></h302>\n\n        <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n        </ul>\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once('library/config_read.php');\n\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // feed the sidebar\n    $usernameList = $username_enc;\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradusergrouplistuser');\n    $help = t('helpPage','mngradusergrouplistuser');\n    \n    print_html_prologue($title, $langCode);\n\n    if (!empty($username_enc)) {\n        $title .= \" :: $username_enc\";\n    }\n\n    include(\"menu-mng-rad-usergroup.php\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"groupname\" => t('all','Groupname'),\n                    \"priority\" => t('all','Priority')\n                 );\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[1];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $sql = sprintf(\"SELECT COUNT(DISTINCT(groupname)) FROM %s WHERE username='%s'\",\n                   $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n    \n        $sql = sprintf(\"SELECT groupname, priority FROM %s WHERE username='%s'\",\n                       $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n         $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc)) ? \"&username=\" . urlencode($username_enc) : \"\";\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-usergroup-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('usergroup[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        $li_style = 'margin: 7px auto';\n        $counter = 1;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            echo '<tr>';\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                \n                if ($i == 0) {\n                    $tooltipText = '<ul style=\"list-style-type: none\">'\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-rad-usergroup-edit.php?username=%s&group=%s\">%s</a></li>',\n                                           $li_style, urlencode($username_enc), urlencode($row[$i]), t('Tooltip','EditUserGroup'))\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-rad-usergroup-del.php?username=%s&group=%s\">%s</a></li>',\n                                           $li_style, urlencode($username_enc), urlencode($row[$i]), t('Tooltip','DeleteUserGroup'))\n                                 . '</ul>';\n                    \n                    echo '<td>';\n                    printf('<input type=\"checkbox\" name=\"usergroup[]\" id=\"checkbox-%s\" value=\"%s||%s\">',\n                           $counter, $username_enc, $row[$i]);\n                    printf('<label for=\"checkbox-%s\">', $counter);\n                    echo '<a class=\"tablenovisit\" href=\"#\" ' . sprintf(\"tooltipText='%s'>\", $tooltipText);\n                    printf('%s</a>', $row[$i]);\n                    echo '</label>'\n                       . '</td>';\n                    \n                } else {\n                    printf('<td>%s</td>', $row[$i]);\n                }\n                \n            }\n            \n            echo '</tr>';\n            \n            $counter++;\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links, $partial_query_string);\n?>\n    </table>\n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n    \n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n\n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // feed the sidebar\n    $usernameList = $username_enc;\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradusergrouplist');\n    $help = t('helpPage','mngradusergrouplist');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-usergroup.php\");\n    \n    $cols = array(\n        \"username\" => t('all','Username'),\n        \"fullname\" => t('all','Name'),\n        t('all','Groupname') . \" (\" . t('all','Priority') . \")\",\n        \"selected\"\n    );\n    \n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n               \n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n                                                          \n    $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s\", $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n    if (!empty($username)) {\n        $sql .= sprintf(\" WHERE username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    }\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        $records = array();\n        \n        $nested_query = sprintf(\"SELECT DISTINCT(rug.username) FROM %s AS rug\", $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n        if (!empty($username)) {\n            $nested_query .= sprintf(\" WHERE rug.username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n        }\n        \n        $sql0 = \"SELECT dui.username AS username, CONCAT(firstname, ' ', lastname) AS fullname\n                   FROM %s AS dui\n                  WHERE dui.username IN (%s)\n                  ORDER BY %s %s LIMIT %s, %s\";\n        $sql0 = sprintf($sql0, $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                               $nested_query,\n                               $orderBy, $orderType, $offset, $rowsPerPage);\n        $res0 = $dbSocket->query($sql0);\n\n        $per_page_numrows = $res0->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc) ? \"&username=\" . urlencode($username_enc) : \"\");\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-usergroup-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('usergroup[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        \n        function print_user_group_prio($this_username, $this_groupname, $this_priority) {\n            $onclick='javascript:return false;';\n        \n            $li_style = 'margin: 7px auto';\n            $tooltipText_format = '<ul style=\"list-style-type: none\">'\n                                . sprintf('<li style=\"%s\">', $li_style) \n                                . '<a class=\"toolTip\" href=\"mng-rad-usergroup-edit.php?username=%s&group=%s\">%s</a>'\n                                . '</li>'\n                                . sprintf('<li style=\"%s\">', $li_style)\n                                . '<a class=\"toolTip\" href=\"mng-rad-usergroup-list-user.php?username=%s&group=%s\">%s</a>'\n                                . '</li>'\n                                . '</ul>';\n            \n            $tooltipText = sprintf($tooltipText_format, urlencode($this_username), urlencode($this_groupname), t('Tooltip','EditUserGroup'),\n                                                        urlencode($this_username), urlencode($this_groupname), t('Tooltip','ListUserGroups'));\n            $tooltipText = sprintf(\"tooltipText='%s'\", $tooltipText);\n\n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" %s>%s</a> (%s)</td>', $onclick, $tooltipText, $this_groupname, $this_priority);\n            printf('<td><input type=\"checkbox\" name=\"usergroup[]\" value=\"%s||%s\"></td>',\n                   urlencode($this_username), urlencode($this_groupname));\n        }\n        \n        while ($row0 = $res0->fetchRow()) {\n            $row0len = count($row0);\n        \n            // escape row elements\n            for ($i = 0; $i < $row0len; $i++) {\n                $row0[$i] = htmlspecialchars($row0[$i], ENT_QUOTES, 'UTF-8');\n            }\n        \n            list($this_username, $fullname) = $row0;\n            $records[$this_username] = array(\n                'fullname' => $fullname,\n                'groups' => array()\n            );\n            \n            $sql1 = sprintf(\"SELECT groupname, priority FROM %s WHERE username='%s' ORDER BY priority DESC, groupname ASC\",\n                            $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($this_username));\n            $res1 = $dbSocket->query($sql1);\n            \n            while ($row1 = $res1->fetchRow()) {\n                $row1len = count($row1);\n        \n                // escape row elements\n                for ($i = 0; $i < $row1len; $i++) {\n                    $row1[$i] = htmlspecialchars($row1[$i], ENT_QUOTES, 'UTF-8');\n                }\n            \n                list($this_groupname, $this_priority) = $row1;\n                $records[$this_username]['groups'][] = array( 'groupname' => $this_groupname, 'priority' => $this_priority );\n            }\n        }\n                \n        foreach ($records as $this_username => $data) {\n            $rowspan = count($data['groups']);\n            $group = $data['groups'][0];\n            \n            echo \"<tr>\";\n            \n            printf('<td rowspan=\"%s\">%s</td>', $rowspan, $this_username);\n            printf('<td rowspan=\"%s\">%s</td>', $rowspan, $data['fullname']);\n            \n            print_user_group_prio($this_username, $group['groupname'], $group['priority']);\n            \n            echo \"</tr>\";\n            \n            if ($rowspan > 1) {\n                for ($i = 1; $i < $rowspan; $i++) {\n                    $group = $data['groups'][$i];\n                    echo \"<tr>\";\n                    print_user_group_prio($this_username, $group['groupname'], $group['priority']);                    \n                    echo \"</tr>\";\n                }\n            }\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n    </table>\n    \n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mngsearch.php');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    // we partially strip some character and\n    // leave validation/escaping to other functions used later in the script\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n              ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    \n    $username_enc = (!empty($username))\n                  ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8')\n                  : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for \";\n    if (!empty($username)) {\n         $logQuery .= \"username(s) starting with [$username] \";\n    } else {\n        $logQuery .= \"all usernames \";\n    }\n    $logQuery .= \"on page: \";\n\n    //feed the sidebar variables\n    $search_username = $username_enc;\n\n    if (!empty($username_enc)) {\n        $title .=  \" :: \" . $username_enc;\n    }\n\n    $help = (!empty($username_enc)) ? \"looked for user $username_enc\" : \"no user specified\";\n\n    include (\"menu-mng-users.php\");\n    \n    // these three variable can be used for validation an presentation purpose\n    $cols = array(\n                   'id' => t('all','ID'),\n                   'username' => t('all','Username'),\n                   'fullname' => 'Full name'\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n?>\n\n    <div id=\"contentnorightbar\">\n\n<?php\n    print_title_and_help($title, $help);\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    if (!empty($username)) {\n        array_push($sql_WHERE,\n                   sprintf(\"ui.username LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.username LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.firstname LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.lastname LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.homephone LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.workphone LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.mobilephone LIKE '%s%%'\", $dbSocket->escapeSimple($username)));\n    }\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADCHECK'];\n    $_SESSION['reportQuery'] = sprintf(\" WHERE username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    $_SESSION['reportType'] = \"usernameListGeneric\";\n\n    $sql_format = \"SELECT DISTINCT(ui.username) AS username,\n                          CONCAT(COALESCE(ui.firstname, ''), ' ', COALESCE(ui.lastname, '')) AS fullname,\n                          ui.id, IFNULL(rug.username, 0) AS disabled\n                   FROM %s AS ui LEFT JOIN %s AS rug ON rug.username=ui.username AND rug.groupname='daloRADIUS-Disabled-Users'\";\n    $sql = sprintf($sql_format, $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" OR \", $sql_WHERE);\n    }\n    $sql .= \" GROUP BY username\";\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= \" ORDER BY $orderBy $orderType LIMIT $offset, $rowsPerPage\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc) ? \"&usernameOnline=\" . urlencode($username_enc) : \"\");\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-del.php\";\n?>\n        \n<form name=\"searchusers\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            \n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('username[]', $action, 'searchusers');\n?>\n                </th>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            // username, fullname, ui.id, disabled\n            \n            $disabled = $row[3] !== '0';\n            \n            $img = ($disabled)\n                 ? '<img title=\"user is disabled\" src=\"images/icons/userStatusDisabled.gif\" alt=\"[disabled]\">'\n                 : '<img title=\"user is enabled\" src=\"images/icons/userStatusActive.gif\" alt=\"[enabled]\">';\n\n            $this_username_enc = htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8');\n            $this_fullname_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n\n            $id = intval($row[2]);\n\n            // tooltip and ajax stuff\n            $li_style = 'margin: 7px auto';\n            $tooltip = '<ul style=\"list-style-type: none\">'\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), t('Tooltip','UserEdit'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"config-maint-test-user.php?username=%s&password=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), urlencode($this_fullname_enc), t('all','TestUser'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-username.php?username=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), t('all','Accounting'))\n                     . '</ul>'\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n\n            $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo','username=\"\n                     . urlencode($this_username_enc) . \"');return false;\";\n?>\n\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"username[]\" value=\"<?= $this_username_enc ?>\">\n                    <?= $id ?>\n                </td>\n                <td>\n                    <?= $img ?>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $onclick ?>\" tooltipText='<?= $tooltip ?>'>\n                        <?= $this_username_enc ?>\n                    </a>\n                </td>\n                <td><?= $this_fullname_enc ?></td>\n            </tr>\n\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n    \n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n\n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','msgerrorpermissions.php');\n    $help = t('helpPage','msgerrorpermissions');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-home.php\");\n?>\n\n                <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n    $failureMsg = t('helpPage','msgerrorpermissions');\n    include_once(\"include/management/actionMessages.php\");\n?>\n                </div><!-- #contentnorightbar -->\n                        \n                <div id=\"footer\">\n<?php\n    include('page-footer.php');\n?>\n                </div><!-- #footer -->\n            </div>\n        </div>\n    </body>\n</html>\n\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue   \n    $title = t('Intro','repbatch.php');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-batch.php\");\n    \n    $log = \"visited page: \";\n?>\n        <div id=\"contentnorightbar\">\n            <h2 id=\"Intro\">\n                <a href=\"#\" onclick=\"javascript:toggleShowDiv('helpPage')\">\n                    <?= t('Intro','repbatch.php'); ?><h144>&#x2754;</h144>\n                </a>\n            </h2>\n\n            <div id=\"helpPage\" style=\"display:none;visibility:visible\"><?= t('helpPage','repbatch') ?><br></div>\n            <br>\n<?php\n    include('include/config/logging.php');\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n        \n<?php\n    include('page-footer.php');\n?>\n\n        \n        </div><!-- #footer -->\n    </div>\n</div>\n\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','rephb.php');\n    $help = t('helpPage','rephb');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-hb.php\");\n\n?>\n        <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query on page: \";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replastconnect.php');\n    $help = t('helpPage','replastconnect');\n    \n    print_html_prologue($title, $langCode);\n\n    // setting table-related parameters first\n    switch($configValues['FREERADIUS_VERSION']) {\n    case '1':\n        $tableSetting['postauth']['user'] = 'user';\n        $tableSetting['postauth']['date'] = 'date';\n        break;\n        \n    case '2':\n    case '3':\n    default:\n        $tableSetting['postauth']['user'] = 'username';\n        $tableSetting['postauth']['date'] = 'authdate';\n        break;\n    }\n    \n    include(\"library/validation.php\");\n    \n    // in other cases we just check that syntax is ok\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : date(\"Y-m-01\");\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : date(\"Y-m-01\", mktime(0, 0, 0, date('n') + 1, 1, date('Y')));\n\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $usernameLastConnect = (array_key_exists('usernameLastConnect', $_GET) &&\n                            !empty(str_replace(\"%\", \"\", trim($_GET['usernameLastConnect']))))\n                         ? str_replace(\"%\", \"\", trim($_GET['usernameLastConnect'])) : \"\";\n    $username_enc = (!empty($usernameLastConnect)) ? htmlspecialchars($usernameLastConnect, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    include(\"menu-reports.php\");\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array( \n                   $tableSetting['postauth']['user'] => t('all','Username'),\n                 );\n    \n    if (!$hiddenPassword) {\n        $cols[\"pass\"] = t('all','Password');\n    }\n    \n    $date_label = $tableSetting['postauth']['date'];\n    $cols[$date_label] = t('all','StartTime');\n    $cols[\"reply\"] = t('all','RADIUSReply');\n    \n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    $default_orderBy = array_keys($cols)[count($cols) - 2];\n    $default_orderType = \"desc\";\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : $default_orderBy;\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : $default_orderType;\n\n    $radiusReply = (array_key_exists('radiusReply', $_GET) && isset($_GET['radiusReply']) &&\n                    in_array($_GET['radiusReply'], array( \"Any\", \"Access-Accept\", \"Access-Reject\" )))\n                 ? $_GET['radiusReply'] : \"Any\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    include('include/management/pages_common.php');\n    include('library/opendb.php');\n\n    // pa is a placeholder in the SQL statements below\n    // except for $usernameLastConnect, which has been only partially escaped,\n    // all other query parameters have been validated earlier.\n    $sql_WHERE = array();\n    if (!empty($usernameLastConnect)) {\n        $sql_WHERE[] = sprintf(\"pa.%s LIKE '%s%%'\", $tableSetting['postauth']['user'],\n                                                    $dbSocket->escapeSimple($usernameLastConnect));\n    }\n    $sql_WHERE[] = sprintf(\"pa.%s BETWEEN '%s' AND '%s'\", $tableSetting['postauth']['date'],\n                                                          $dbSocket->escapeSimple($startdate),\n                                                          $dbSocket->escapeSimple($enddate));\n    if ($radiusReply != \"Any\") {\n        $sql_WHERE[] = sprintf(\"pa.reply='%s'\", $dbSocket->escapeSimple($radiusReply));\n    }\n    \n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADPOSTAUTH'];\n    $_SESSION['reportQuery'] = \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    $_SESSION['reportType'] = \"reportsLastConnectionAttempts\";\n\n    //orig: used as maethod to get total rows - this is required for the pages_numbering.php page \n    $sql_format = \"SELECT pa.%s, pa.pass, pa.reply, pa.%s FROM %s AS pa\";\n    \n    $sql = sprintf($sql_format, $tableSetting['postauth']['user'],\n                                $tableSetting['postauth']['date'],\n                                $configValues['CONFIG_DB_TBL_RADPOSTAUTH'])\n         . $_SESSION['reportQuery'];\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n        \n        $sql .= sprintf(\" ORDER BY pa.%s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n\n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_params = array();\n        if (!empty($startdate)) {\n            $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n        }\n        if (!empty($enddate)) {\n            $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n        }\n        if (!empty($username_enc)) {\n            $partial_query_params[] = sprintf(\"usernameLastConnect=%s\", urlencode($username_enc));\n        }\n        if (!empty($radiusReply)) {\n            $partial_query_params[] = sprintf(\"radiusReply=%s\", $radiusReply);\n        }\n        \n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n            </tr>\n            \n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n\n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            // The table that is being produced is in the format of:\n            // +-------------+-------------+---------------+-----------+\n            // | user        | pass (opt.) | reply         | date      |   \n            // +-------------+-------------+---------------+-----------+\n\n            list($user, $pass, $reply, $starttime) = $row;\n\n            echo \"<tr>\";\n            \n            printf(\"<td>%s</td>\", $user);\n            if (!$hiddenPassword) {\n                printf(\"<td>%s</td>\", $pass);\n            }\n            printf(\"<td>%s</td>\", $starttime);\n            \n            $color = ($reply == \"Access-Reject\") ? \"red\" : \"green\";\n            printf('<td style=\"color: %s\">%s</td>', $color, $reply);\n            \n            echo \"</tr>\";\n\n        }\n?>\n        </tbody>\n\n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // parameter validation\n    $bootLineCount = (array_key_exists('bootLineCount', $_GET) && isset($_GET['bootLineCount']) &&\n                      intval($_GET['bootLineCount']) > 0)\n                   ? intval($_GET['bootLineCount']) : 50;\n\n    // preg quoted before usage\n    $bootFilter = (array_key_exists('bootFilter', $_GET) && isset($_GET['bootFilter']))\n                ? $_GET['bootFilter'] : \"\";\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replogsboot.php') . \" :: $bootLineCount Lines Count\";\n    if (!empty($bootFilter) && $bootFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($bootFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogsboot');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-logs.php\");\n      \n?>    \n    <div id=\"contentnorightbar\">\n\n<?php\n    print_title_and_help($title, $help);\n\n    include('library/exten-boot_log.php');\n    include_once('include/management/actionMessages.php');\n?>\n         </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // parameter validation\n    $radiusLineCount = (array_key_exists('radiusLineCount', $_GET) && isset($_GET['radiusLineCount']) &&\n                        intval($_GET['radiusLineCount']) > 0)\n                     ? intval($_GET['radiusLineCount']) : 50;\n\n    // preg quoted before usage\n    $radiusFilter = (array_key_exists('radiusFilter', $_GET) && isset($_GET['radiusFilter']) &&\n                     in_array($_GET['radiusFilter'], array( \"Auth\", \"Info\", \"Error\" )))\n                  ? $_GET['radiusFilter'] : \"\";\n\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replogsradius.php') . \" :: $radiusLineCount Lines Count\";\n    if (!empty($radiusFilter) && $radiusFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($radiusFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogsradius');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-reports-logs.php\");\n\n?>\n    <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n    include('library/exten-radius_log.php');\n    include_once('include/management/actionMessages.php');\n?>\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // parameter validation\n    $systemLineCount = (array_key_exists('systemLineCount', $_GET) && isset($_GET['systemLineCount']) &&\n                        intval($_GET['systemLineCount']) > 0)\n                     ? intval($_GET['systemLineCount']) : 50;\n\n    // preg quoted before usage\n    $systemFilter = (array_key_exists('systemFilter', $_GET) && isset($_GET['systemFilter']))\n                  ? $_GET['systemFilter'] : \"\";\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replogssystem.php') . \" :: $systemLineCount Lines Count\";\n    if (!empty($systemFilter) && $systemFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($systemFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogssystem');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-reports-logs.php\");      \n?>    \n        <div id=\"contentnorightbar\">\n\n<?php\n    print_title_and_help($title, $help);\n    include('library/exten-syslog_log.php');\n    include_once('include/management/actionMessages.php');\n?>\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replogs.php');\n    $help = t('helpPage','replogs');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-logs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    //~ include('library/check_operator_perm.php');\n    \n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repmain.php');\n    $help = t('helpPage','repmain');\n    \n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-reports.php\");\n\n?>\n        \n        <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n?>\n        \n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    $log = \"visited page: \";\n\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Maria Del Prete <filippo.delprete@gmail.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include(\"library/validation.php\");\n\n    // we validate starting and ending dates\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for new user(s)\";\n    if (!empty($startdate)) {\n         $logQuery .= \" from $startdate\";\n    }\n    if (!empty($enddate)) {\n         $logQuery .= \" to $enddate\";\n    }\n    $logQuery .= \"on page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','repnewusers.php');\n    $help = t('helpPage','repnewusers');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-reports.php\");\n    \n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"month\" => t('all','Month'),\n                    \"users\" => t('all','Users')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $sql_WHERE_pieces = array();\n    if (!empty($enddate)) {\n        $sql_WHERE_pieces[] = sprintf(\"CreationDate <= '%s'\", $dbSocket->escapeSimple($enddate));\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE_pieces[] = sprintf(\"CreationDate >= '%s'\", $dbSocket->escapeSimple($startdate));\n    }\n\n    $sql_WHERE = (count($sql_WHERE_pieces) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE_pieces) : \"\";\n\n    // month is used as a \"shadow\" parameter for non-lexicographic ordering purpose\n    // period and users are used for presentation purpose\n    $sql = sprintf(\"SELECT CONCAT(MONTHNAME(CreationDate), ' ', YEAR(CreationDate)) AS period, COUNT(*) As users,\n                           CAST(CONCAT(YEAR(CreationDate), '-', MONTH(CreationDate), '-01') AS DATE) AS month\n                      FROM %s\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'])\n         . $sql_WHERE . \" GROUP BY month\";                                                \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n\n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $logDebugSQL = \"$sql;\\n\";\n        $res = $dbSocket->query($sql);\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_params = array();\n        if (!empty($startdate)) {\n            $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n        }\n        if (!empty($enddate)) {\n            $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n        }\n        \n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n        \n        \n        // set navbar stuff\n        $navkeys = array( array( 'stats', t('all','Statistics') ), array( 'graphs', t('menu','Graphs') ), );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n?>\n                        <table border=\"0\" class=\"table1\">\n                            <thead>\n                                <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                                </tr>\n\n                                <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n                                </tr>\n                            </thead>\n                            \n                            <tbody>\n<?php\n        $count = 0;\n        while ($row = $res->fetchRow()) {\n            \n            // last field is used only for ordering purpose\n            $rowlen = count($row) - 1;\n            \n            // print table row\n            printf('<tr id=\"row-%d\">', $count);\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                printf(\"<td>%s</td>\", $row[$i]);\n            }\n            \n            echo '</tr>';\n            \n            $count++;\n        }\n?>\n                            </tbody>\n                            \n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n                            \n                        </table>\n<?php\n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        $img_format = '<div style=\"text-align: center\"><img src=\"%s\" alt=\"%s\" style=\"%s\"></div>';\n        $src = sprintf('library/graphs-reports-new-users.php?startdate=%s&enddate=%s', $startdate, $enddate);\n        $alt = \"monthly number of new users\";\n        printf($img_format, $src, \"Online users\", \"margin: 30px auto\");\n\n        close_tab($navkeys, 1);\n        \n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatserver.php');\n    $help = t('helpPage','repstatserver');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n    \n?>    \n        <div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n    include('library/exten-server_info.php');\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    include('include/config/logging.php');\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatradius.php');\n    $help = t('helpPage','repstatradius');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n      \n?>    \n        <div id=\"contentnorightbar\">\n\n<?php\n    print_title_and_help($title, $help);\n    include('library/exten-radius_server_info.php');\n?>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">        \n<?php\n        include('page-footer.php');\n?>\n\n        </div><!-- #footer -->\n    </div>\n</div>\n\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:     Liran Tal <liran@enginx.com>\n *              Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    $logQuery = \"performed query on page: \";\n    include('include/config/logging.php');\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = \"UPS Status\";\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n      \n?>\n        <div id=\"contentnorightbar\">\n<?php\n\n    print_title_and_help($title, $help);\n\n    exec(\"which apcaccess || command -v apcaccess\", $output, $retStatus);\n\n    $failureMsg = \"\";\n\n    $sep = \":\";\n    if ($retStatus !== 0) {\n        $sep = \"\\n\";\n        $failureMsg = '<strong>Error</strong> accessing UPS device information<br><br>';\n    } else {\n?>\n\n            <h3>General Information</h3>\n            <table class=\"summarySection\">\n\n<?php \n        foreach ($output as $line) {\n        list($var, $val) = split($sep, $line);\n        $var = htmlspecialchars($var, ENT_QUOTES, 'UTF-8');\n        $val = htmlspecialchars($val, ENT_QUOTES, 'UTF-8');\n?>\n                <tr>\n                <td class=\"summaryKey\"><?= $var ?></td>\n                <td class=\"summaryValue\"><span class=\"sleft\"><?= $val ?></span></td>\n                </tr>\n<?php\n        }\n?>\n            </table>\n<?php\n    }\n    \n    if (!empty($failureMsg)) {\n        include_once('include/management/actionMessages.php');\n    }\n?>\n        </div>\n        \n        <div id=\"footer\">\n<?php\n    include('page-footer.php');\n?>\n        </div>\n        \n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n*\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n\tinclude_once('library/config_read.php');\n    $log = \"visited page: \";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatus.php');\n    $help = t('helpPage','repstatus');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n\n?>\n\t\t<div id=\"contentnorightbar\">\n<?php\n    print_title_and_help($title, $help);\n?>\n\t\t\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include_once('include/config/logging.php');\n    include('page-footer.php');\n?>\n\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include(\"library/validation.php\");\n    \n    $limit = (array_key_exists('limit', $_GET) && isset($_GET['limit']) && intval($_GET['limit']) > 0)\n           ? intval($_GET['limit']) : \"\";\n    \n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','reptopusers.php');\n    $help = t('helpPage','reptopusers') . \" \" . $orderBy;\n    \n    print_html_prologue($title, $langCode);\n    \n    include (\"menu-reports.php\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    'username' => t('all','Username'),\n                    'framedipaddress' => t('all','IPAddress'),\n                    'acctstarttime' => t('all','StartTime'),\n                    'acctstoptime' => t('all','StopTime'),\n                    'Time' => t('all','TotalTime'),\n                    'Upload' => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    'Download' => t('all','Download') . \" (\" . t('all','Bytes') . \")\",\n                    'acctterminatecause' => t('all','Termination'),\n                    'nasipaddress' => t('all','NASIPAddress')\n    );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for [order by: $orderBy\";\n    if (!empty($limit)) {\n        $logQuery .= \" / limit: $limit\";\n    }\n    $logQuery .= \"] on page: \";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    // the partial query is built starting from user input\n    // and for being passed to setupNumbering and setupLinks functions\n    $partial_query_params = array();\n    \n    // creating $sql_WHERE for SQL query\n    $sql_WHERE = array();\n    $sql_WHERE[] = \"AcctStopTime > '0000-00-00 00:00:01'\";\n    if (!empty($startdate)) {\n        $partial_query_params[] = sprintf(\"startdate=%s\", urlencode(htmlspecialchars($startdate, ENT_QUOTES, 'UTF-8')));\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n    }\n    \n    if (!empty($enddate)) {\n        $partial_query_params[] = sprintf(\"enddate=%s\", urlencode(htmlspecialchars($enddate, ENT_QUOTES, 'UTF-8')));\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($enddate));\n    }\n    \n    if (!empty($username)) {\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n        $sql_WHERE[] = sprintf(\"username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    }\n    \n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n    $_SESSION['reportType'] = \"TopUsers\";\n    \n    $sql = \"SELECT DISTINCT(ra.username) AS username, ra.FramedIPAddress, ra.AcctStartTime, MAX(ra.AcctStopTime), \n                   SUM(ra.AcctSessionTime) AS Time, SUM(ra.AcctInputOctets) AS Upload,\n                   SUM(ra.AcctOutputOctets) AS Download, ra.AcctTerminateCause, ra.NASIPAddress,\n                   SUM(ra.AcctInputOctets + ra.AcctOutputOctets) AS Bandwidth\n            FROM \" . $configValues['CONFIG_DB_TBL_RADACCT'] . \" AS ra\";\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n    \n    $sql .= \" GROUP BY username\";\n    \n    if (!empty($limit)) {\n        $partial_query_params[] = sprintf(\"limit=%d\", $limit);\n        $sql .= sprintf(\" LIMIT %d\", $limit);\n    }\n    \n    $logDebugSQL = \"$sql;\\n\";\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n\n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n\n            </tr>\n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        $count = 0;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            // print table row\n            printf('<tr id=\"row-%d\">', $count);\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                \n                if ($i == 4) {\n                    //~ Time\n                    $row[$i] = time2str($row[$i]);\n                } else if ($i == 5 || $i == 6) {\n                    //~ Upload, Download\n                    $row[$i] = toxbyte($row[$i]);\n                }\n                \n                printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n            }\n            \n            echo \"</tr>\";\n            \n            $count++;\n        }\n?>\n        </tbody>\n\n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    //~ include('library/check_operator_perm.php');\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    $log = \"visited page: \";\n    $logQuery = \"performed query for [$username\";\n    if (!empty($limit)) {\n        $logQuery .= \" : $limit\";\n    }\n    $logQuery .= \"] on page: \";\n\n    include_once('library/config_read.php');\n    \n    include(\"library/validation.php\");\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repusername.php');\n    $help = t('helpPage','repusername') . \" \" . $username_enc;\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports.php\");\n    \n    $cols = array(\n                    'id' => t('all','ID'),\n                    'username' => t('all','Username'),\n                    'attribute' => t('all','Attribute'),\n                    'op',\n                    'value' => t('all','Value'),\n                    t('all','Action')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $arr = array();\n\n    $sql = sprintf(\"SELECT id, username, attribute, op, value FROM %s WHERE username='%s' ORDER BY %s %s\", \n                   $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username), $orderBy, $orderType);\n    $arr[] = array( \n                    'sql' => $sql,\n                    'caption' => t('captions','radcheckrecords')\n                  );\n    \n    $sql = sprintf(\"SELECT id, username, attribute, op, value FROM %s WHERE username='%s' ORDER BY %s %s\", \n                   $configValues['CONFIG_DB_TBL_RADREPLY'], $dbSocket->escapeSimple($username), $orderBy, $orderType);\n    $arr[] = array( \n                    'sql' => $sql,\n                    'caption' => t('captions','radreplyrecords')\n                  );\n    \n    $total_numrows = 0;\n    foreach ($arr as $item) {\n        $res = $dbSocket->query($item['sql']);\n        $logDebugSQL .= $item['sql'] . \";\\n\";\n        \n        $numrows = $res->numRows();\n        \n        if ($numrows > 0) {\n?>\n<h3 style=\"margin-top: 10px\"><?= $item['caption'] ?></h3>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr>\n<?php\n            printTableHead($cols, $orderBy, $orderType);\n?>\n        </tr>\n    </thead>\n\n    <tbody>\n<?php\n            $csrf_token = dalo_csrf_token();\n\n            while ($row = $res->fetchRow()) {\n                $rowlen = count($row);\n                \n                echo \"<tr>\";\n                for ($i = 0; $i < $rowlen; $i++) {\n                    printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n                }\n                \n                $this_username = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n                echo '<td>';\n                $formId = $this_username . \"-form-del\";\n                printf('<form id=\"%s\" style=\"display: none\" method=\"POST\" action=\"mng-del.php\">', $formId);\n                printf('<input type=\"hidden\" name=\"username[]\" value=\"%s\">', $this_username);\n                printf('<input type=\"hidden\" name=\"csrf_token\" value=\"%s\">', $csrf_token);\n                echo '</form>';\n                \n                $onclick = sprintf(\"document.getElementById('%s').submit()\", $formId);\n                printf('<a href=\"mng-edit.php?username=%s\">%s</a>&nbsp;<a href=\"#\" onclick=\"%s\">%s</a>',\n                       urlencode($this_username), t('all','edit'), $onclick, t('all','del'));\n                echo '</td>';\n                echo \"</tr>\";\n            }\n?>\n    </tbody>\n</table>\n<?php\n\n        }\n        \n        $total_numrows += $numrows;\n    }\n    \n    include('library/closedb.php');\n\n    if ($total_numrows == 0) {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n"], "fixing_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n    \n    // print HTML prologue\n    $title = t('Intro','acctactive.php');\n    $help = t('helpPage','acctactive');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"username\" => t('all','Username'),\n                    \"attribute\" => t('all','Attribute'),\n                    \"maxtimeexpiration\" => t('all','MaxTimeExpiration'),\n                    \"usedtime\" => t('all','UsedTime'),\n                    t('all','Status'),\n                    t('all','Usage')    \n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n\n    include('library/opendb.php');\n    include('library/datediff.php');\n    include('include/management/pages_common.php');\n    \n    $currdate = date(\"j M Y\");\n    \n    //orig: used as maethod to get total rows - this is required for the pages_numbering.php page\n    $sql = sprintf(\"SELECT DISTINCT(ra.username) AS username, rc.attribute AS attribute, rc.Value AS maxtimeexpiration,\n                           SUM(ra.AcctSessionTime) AS usedtime\n                      FROM %s AS ra, %s AS rc\n                     WHERE ra.username=rc.username AND (rc.Attribute = 'Max-All-Session' OR rc.Attribute='Expiration')\n                     GROUP BY ra.username\", $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_RADCHECK']);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n            \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n    \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n            </tr>\n            \n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while($row = $res->fetchRow()) {\n            $status=\"Active\";\n\n            if ($row[1] == \"Expiration\") {        \n                if (datediff('d', $row[2], \"$currdate\", false) > 0) {\n                    $status = \"Expired\";\n                }\n            } \n\n            if ($row[1] == \"Max-All-Session\") {        \n                if ($row[3] >= $row[2]) {\n                    $status = \"End\";\n                }\n            }\n\n            foreach ($row as $i => $value) {\n                $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n            }\n\n            echo \"<tr>\";\n        \n            $onclick = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo','username=%s');\"\n                     . \"return false;\", $row[0]);\n        \n            $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n        \n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[0]);\n            \n            printf(\"<td>%s</td>\", $row[1]);\n            printf(\"<td>%s</td>\", $row[2]);\n            printf(\"<td>%s</td>\", time2str($row[3]));\n            printf(\"<td>%s</td>\", $status);\n\n            echo \"<td>\";\n\n            if ($row[1] == \"Expiration\") {        \n                $difference = datediff('d', $row[2], \"$currdate\", false);\n                if ($difference > 0)\n                    echo \"<h100> \" . \" $difference days since expired\" . \"</h100> \";\n                else \n                    echo substr($difference, 1) . \" days until expiration\";\n            } \n\n            if ($row[1] == \"Max-All-Session\") {        \n                if ($status == \"End\") {\n                    echo \"<h100> \" . abs($row[2] - $row[3]) . \" seconds overdue credit\" . \"</h100>\";\n                } else {\n                    echo $row[2] - $row[3];\n                    echo \" left on credit\";\n                }\n            } \n\n\n            echo \"</td>\"\n               . \"</tr>\";\n        }\n\n        echo '</tbody>';\n    \n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n    } else {\n        $failureMsg = \"Nothing to display\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for all accounting records on page: \";\n    $logDebugSQL = \"\";\n\n    // print HTML prologue\n    $title = t('Intro','acctall.php');\n    $help = t('helpPage','acctall');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n\n    include('library/opendb.php');\n    include_once('include/management/pages_common.php');\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = \"\";\n    $_SESSION['reportType'] = \"accountingGeneric\";\n\n    $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->fetchrow()[0];\n\n    if ($numrows > 0) {\n            \n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                               ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                               ra.AcctTerminateCause, ra.NASIPAddress\n                          FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                       $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'])\n             . sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n?>\n\n    <table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType);\n        echo \"</tr>\";\n?>\n    </thead>\n    \n    <tbody>\n<?php\n        $simple_td_format = '<td>%s</td>';\n        $li_style = 'margin: 7px auto';\n\n        while ($row = $res->fetchRow()) {\n            foreach ($row as $i => $value) {\n                $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n            }\n            \n            echo \"<tr>\";\n            printf($simple_td_format, $row[0]);\n            \n            $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                     . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n            $tooltip = '<ul style=\"list-style-type: none\">'\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                               $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                               $li_style, t('all','Compare'))\n                     . '</ul>'\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n            \n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[1]);\n            \n            $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                     . sprintf(\"'username=%s');return false;\", $row[2]);\n            $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                   $onclick, $tooltip, $row[2]);\n\n            printf($simple_td_format, $row[3]);\n            printf($simple_td_format, $row[4]);\n            printf($simple_td_format, $row[5]);\n            \n            printf($simple_td_format, time2str($row[6]));\n            printf($simple_td_format, toxbyte($row[7]));\n            printf($simple_td_format, toxbyte($row[8]));\n            printf($simple_td_format, $row[9]);\n            printf($simple_td_format, $row[10]);\n        \n            echo \"</tr>\";\n        \n        }\n\n        echo '</tbody>';\n\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n        \n    } else {\n        $failureMsg = \"Nothing to display\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    $sqlfields = (array_key_exists('sqlfields', $_GET) && !empty($_GET['sqlfields']) && is_array($_GET['sqlfields']) &&\n                  array_intersect($_GET['sqlfields'], $acct_custom_query_options_all) == $_GET['sqlfields'])\n               ? $_GET['sqlfields'] : $acct_custom_query_options_default;\n    \n    $cols = array();\n    foreach ($sqlfields as $sqlfield) {\n        $cols[$sqlfield] = $sqlfield;\n    }\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($acct_custom_query_options_all)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    $valid_operators = array(\"equals\" => \"=\", \"contains\" => \"LIKE\");\n    $operator = (array_key_exists('operator', $_GET) && !empty($_GET['operator']) &&\n                 in_array($_GET['operator'], array_keys($valid_operators)))\n              ? $_GET['operator'] : \"\";\n    \n    $where_field = (array_key_exists('where_field', $_GET) && !empty($_GET['where_field']) &&\n                    in_array($_GET['where_field'], $acct_custom_query_options_all))\n                 ? $_GET['where_field'] : \"\";\n    \n    $where_value = (array_key_exists('where_value', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['where_value']))))\n                 ? str_replace(\"%\", \"\", trim($_GET['where_value'])) : \"\";\n\n    $where_value_enc = (!empty($where_value)) ? htmlspecialchars($where_value, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $accounting_custom_startdate = $startdate;\n    $accounting_custom_enddate = $enddate;\n    $accounting_custom_value = $where_value_enc;\n\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','acctcustomquery.php');\n    $help = t('helpPage','acctcustomquery');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-accounting-custom.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    // preparing the custom query\n    \n    $sql_WHERE = array();\n    $partial_query_string_pieces = array();\n    \n    foreach ($sqlfields as $sqlfield) {\n        $partial_query_string_pieces[] = sprintf(\"sqlfields[]=%s\", $sqlfield);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_string_pieces[] = sprintf(\"startdate=%s\", $startdate);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_string_pieces[] = sprintf(\"enddate=%s\", $enddate);\n    }\n    \n    if (!empty($where_value)) {\n        // get the operator\n        $op = $valid_operators[$operator];\n        \n        // if the op is LIKE then the SQL syntax uses % for pattern matching\n        // and we sorround the $value with % as a wildcard\n        $where_value = $dbSocket->escapeSimple($where_value);\n        \n        if ($op == \"LIKE\") {\n            $where_value = \"%\" . $where_value . \"%\";\n        }\n\n        $sql_WHERE[] = sprintf(\"%s %s '%s'\", $where_field, $op, $where_value);\n\n        $partial_query_string_pieces[] = sprintf(\"where_field=%s\", $where_field);\n        $partial_query_string_pieces[] = sprintf(\"operator=%s\", $operator);\n        $partial_query_string_pieces[] = sprintf(\"where_value=%s\", $where_value_enc);\n    }\n\n    // executing the custom query\n\n    $sql = sprintf(\"SELECT %s FROM %s\", implode(\", \", $sqlfields), $configValues['CONFIG_DB_TBL_RADACCT']);\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (count($partial_query_string_pieces) > 0)\n                              ? \"&\" . implode(\"&\", $partial_query_string_pieces) : \"\";\n\n\n        echo '<table border=\"0\" class=\"table1\">'\n           . '<thead>';\n            \n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n\n            \n        echo '</thead>'\n           . '<tbody>';\n\n        // inserting the values of each field from the database to the table\n        $count = 0;\n        while($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            printf('<tr id=\"row-%d\">', $count);\n            foreach ($sqlfields as $field) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$field], ENT_QUOTES, 'UTF-8'));\n            }\n            echo '</tr>';\n            $count++;\n        }\n\n        echo '</tbody>';\n\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n        \n    include('library/closedb.php');    \n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctcustom.php');\n    $help = t('helpPage','acctcustom');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting-custom.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n\n\n    // print HTML prologue\n    $title = t('Intro','acctdate.php');\n    $help = t('helpPage','acctdate');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n    \n        // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n        include('library/opendb.php');\n        include('include/management/pages_common.php');\n    \n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n        if (count($sql_WHERE) > 0) {\n            $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n            if (count($sql_WHERE) > 0) {\n                $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n            }\n\n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n\n    \n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n\n    <tbody>\n<?php\n            $simple_td_format = '<td>%s</td>';\n            $li_style = 'margin: 7px auto';\n\n            while ($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n                \n                echo \"<tr>\";\n                printf($simple_td_format, $row[0]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[1]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $row[2]);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[2]);\n\n                printf($simple_td_format, $row[3]);\n                printf($simple_td_format, $row[4]);\n                printf($simple_td_format, $row[5]);\n                \n                printf($simple_td_format, time2str($row[6]));\n                printf($simple_td_format, toxbyte($row[7]));\n                printf($simple_td_format, toxbyte($row[8]));\n                printf($simple_td_format, $row[9]);\n                printf($simple_td_format, $row[10]);\n            \n                echo \"</tr>\";\n            \n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // validate this parameter before including menu\n    $ipaddress = (array_key_exists('ipaddress', $_GET) && isset($_GET['ipaddress']) &&\n                  preg_match(LOOSE_IP_REGEX, $_GET['ipaddress'], $m) !== false) ? $_GET['ipaddress'] : \"\";\n    $ipaddress_enc = (!empty($ipaddress)) ? htmlspecialchars($ipaddress, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $accounting_ipaddress = $ipaddress_enc;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = sprintf(\"performed query for %s on page: \",\n                        ((!empty($ipaddress)) ? \"IP address [$ipaddress]\" : \"all IP addresses\"));\n    $logDebugSQL = \"\";\n    \n    \n    // print HTML prologue\n    $title = t('Intro','acctipaddress.php');\n    $help = t('helpPage','acctipaddress');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctoutputoctets\" => t('all','Download') .\" (\" . t('all','Bytes') . \")\",\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array($_GET['orderType'], array( \"desc\", \"asc\" )))\n               ? $_GET['orderType'] : \"asc\";\n               \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = (!empty($ipaddress))\n               ? sprintf(\" WHERE FramedIPAddress LIKE '%s%%'\", $dbSocket->escapeSimple($ipaddress))\n               : \"\";\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportType'] = \"accountingGeneric\";\n    $_SESSION['reportQuery'] = (!empty($ipaddress)) ? $sql_WHERE : \"\";\n\n    $sql = \"SELECT ra.RadAcctId, dh.name AS hotspot, ra.UserName, ra.FramedIPAddress AS FramedIPAddress,\n                   ra.AcctStartTime, ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                   ra.AcctTerminateCause, ra.NASIPAddress\n              FROM %s AS ra LEFT JOIN %s AS dh ON ra.calledstationid=dh.mac\";\n\n    $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']) . $sql_WHERE;\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($ipaddress_enc) ? sprintf(\"&ipaddress=%s\", urlencode($ipaddress_enc)) : \"\");\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if needed\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\" style=\"text-align: right\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $hotspot_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n            $username_enc = htmlspecialchars($row[2], ENT_QUOTES, 'UTF-8');\n            \n            // tooltip and ajax stuff\n            $username_js = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo',\"\n                                 . \"'divContainerUserInfo','username=%s');return false;\", urlencode($username_enc));\n            \n            $username_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>',\n                                        urlencode($username_enc), t('Tooltip','UserEdit'))\n                               . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n?>\n            <tr>\n                <td><?= htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8') ?></td>\n                <td>\n<?php\n            if (!empty($hotspot_enc)) {\n                // tooltip and ajax stuff\n                $hotspot_js = sprintf(\"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat',\"\n                                    . \"'divContainerHotspotInfo','hotspot=%s');return false;\", urlencode($hotspot_enc));\n                \n                $li_style = 'margin: 7px auto';\n                $hotspot_tooltip = '<ul style=\"list-style-type: none\">'\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                           $li_style, urlencode($hotspot_enc), t('Tooltip','HotspotEdit'))\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                           $li_style, t('all','Compare'))\n                                 . '</ul>'\n                                 . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n?>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $hotspot_js ?>\" tooltipText='<?= $hotspot_tooltip ?>'>\n                        <?= $hotspot_enc ?>\n                    </a>\n<?php\n            }\n?>\n                </td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $username_js ?>\" tooltipText='<?= $username_tooltip ?>'>\n                        <?= $username_enc ?>\n                    </a>\n                </td>\n                <td><?= htmlspecialchars($row[3], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[4], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[5], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(time2str($row[6]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[7]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[8]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[9], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[10], ENT_QUOTES, 'UTF-8') ?></td>\n            </tr>\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctmain.php');\n    $help = t('helpPage','acctmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // validate this parameter before including menu\n    $onlyactive = (array_key_exists('only-active', $_GET) && isset($_GET['only-active']));\n    \n    // validate this parameter before including menu\n    $nasipaddress = (array_key_exists('nasipaddress', $_GET) && isset($_GET['nasipaddress']) &&\n                  preg_match(LOOSE_IP_REGEX, $_GET['nasipaddress'], $m) !== false) ? $_GET['nasipaddress'] : \"\";\n    $nasipaddress_enc = (!empty($nasipaddress)) ? htmlspecialchars($nasipaddress, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $accounting_nasipaddress = $nasipaddress_enc;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = sprintf(\"performed query for %s on page: \",\n                        ((!empty($nasipaddress)) ? \"NAS IP address [$nasipaddress]\" : \"all NAS IP addresses\"));\n    $logDebugSQL = \"\";\n    \n    // print HTML prologue\n    $title = t('Intro','acctnasipaddress.php');\n    $help = t('helpPage','acctnasipaddress');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctoutputoctets\" => t('all','Download') . \" (\" . t('all','Bytes') . \")\",\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress')\n                 );\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = (!empty($nasipaddress))\n               ? sprintf(\" WHERE NASIPAddress LIKE '%s%%'\", $dbSocket->escapeSimple($nasipaddress))\n               : \"\";\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = $sql_WHERE;\n    $_SESSION['reportType'] = \"accountingGeneric\";\n\n    $sql = \"SELECT ra.RadAcctId, dh.name as hotspot, ra.UserName, ra.FramedIPAddress, ra.AcctStartTime, ra.AcctStopTime,\n                   ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets, ra.AcctTerminateCause, ra.NASIPAddress\n              FROM %s AS ra LEFT JOIN %s AS dh ON ra.calledstationid=dh.mac\";\n    \n    $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']) . $sql_WHERE;\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($nasipaddress_enc) ? \"&nasipaddress=$nasipaddress_enc\" : \"\");\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if needed\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\" style=\"text-align: right\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $hotspot_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n            \n            $hotspot_js = sprintf(\"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo',\"\n                                . \"'hotspot=%s');return false;\", $hotspot_enc);\n            \n            $hotspot_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a>&nbsp;'\n                                     . '<a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a><br><br>'\n                                     . '<div id=\"divContainerHotspotInfo\">Loading...</div><br>',\n                                       $hotspot_enc, t('Tooltip','HotspotEdit'), t('all','Compare'));\n            \n            $username_enc = htmlspecialchars($row[2], ENT_QUOTES, 'UTF-8');\n\n            $username_js = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                                 . \"'username=%s');return false;\", $username_enc);\n            \n            $username_tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a><br><br>'\n                                      . '<div id=\"divContainerUserInfo\">Loading...</div><br>', $username_enc, t('Tooltip','UserEdit'));\n            \n?>\n            <tr>\n                <td><?= htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8') ?></td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $hotspot_js ?>\" tooltipText='<?= $hotspot_tooltip ?>'>\n                        <?= $hotspot_enc ?>\n                    </a>\n                </td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $username_js ?>\" tooltipText='<?= $username_tooltip ?>'>\n                        <?= $username_enc ?>\n                    </a>\n                </td>\n                <td><?= htmlspecialchars($row[3], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[4], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[5], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(time2str($row[6]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[7]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars(toxbyte($row[8]), ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[9], ENT_QUOTES, 'UTF-8') ?></td>\n                <td><?= htmlspecialchars($row[10], ENT_QUOTES, 'UTF-8') ?></td>\n            </tr>\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query \";\n    if (!empty($username)) {\n        $logQuery .= \"for [$username] \";\n    }\n    $logQuery .= \"on page: \";\n    $logDebugSQL = \"\";\n\n    //feed the sidebar variables\n    $accounting_username = $username_enc;\n    \n\n    // print HTML prologue\n    $title = t('Intro','acctusername.php');\n    $help = t('helpPage','acctusername');\n\n    print_html_prologue($title, $langCode);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($acct_custom_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    \n    $sql_WHERE = \"\";\n    $partial_query_string = \"\";\n    if (!empty($username)) {\n        $sql_WHERE = sprintf(\" WHERE username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_string = sprintf(\"&username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = $sql_WHERE;\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n        include('library/opendb.php');\n        include_once('include/management/pages_common.php');\n\n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']) . $sql_WHERE;\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            \n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'])\n                 . $sql_WHERE\n                 . sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n    \n    <tbody>\n<?php\n            $simple_td_format = '<td>%s</td>';\n            $li_style = 'margin: 7px auto';\n\n            while ($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n                \n                echo \"<tr>\";\n                printf($simple_td_format, $row[0]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[1]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $row[2]);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[2]);\n\n                printf($simple_td_format, $row[3]);\n                printf($simple_td_format, $row[4]);\n                printf($simple_td_format, $row[5]);\n                \n                printf($simple_td_format, time2str($row[6]));\n                printf($simple_td_format, toxbyte($row[7]));\n                printf($simple_td_format, toxbyte($row[8]));\n                printf($simple_td_format, $row[9]);\n                printf($simple_td_format, $row[10]);\n            \n                echo \"</tr>\";\n            \n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    $sqlfields = (array_key_exists('sqlfields', $_GET) && !empty($_GET['sqlfields']) && is_array($_GET['sqlfields']) &&\n                  array_intersect($_GET['sqlfields'], array_keys($bill_history_query_options_all)) == $_GET['sqlfields'])\n               ? $_GET['sqlfields'] : $bill_history_query_options_default;\n    \n    $cols = array();\n    foreach ($sqlfields as $sqlfield) {\n        $cols[$sqlfield] = $bill_history_query_options_all[$sqlfield];\n    }\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($bill_history_query_options_all)))\n             ? $_GET['orderBy'] : array_keys($bill_history_query_options_all)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    //~ $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  //~ preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  //~ checkdate($m[2], $m[3], $m[1]))\n               //~ ? $_GET['startdate'] : \"\";\n\n    //~ $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                //~ preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                //~ checkdate($m[2], $m[3], $m[1]))\n             //~ ? $_GET['enddate'] : \"\";\n\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    $billaction = (array_key_exists('billaction', $_GET) && isset($_GET['billaction']) &&\n                   in_array($_GET['billaction'], array_slice($valid_billactions,\u00a01))) // avoid inserting \"Any\" in the SQL query\n                ? $_GET['billaction'] : \"\";\n    $billaction_enc = (!empty($billaction)) ? htmlspecialchars($billaction, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // print HTML prologue\n    $title = t('Intro','billhistoryquery.php');\n    $help = t('helpPage','billhistoryquery');\n    \n    print_html_prologue($title, $langCode);\n    \n\n    //feed the sidebar variables\n    $billing_date_startdate = $startdate;\n    $billing_date_enddate = $enddate;\n    $billing_history_username = $username;\n    $billing_history_billaction = $billaction;\n\n    include(\"menu-bill-history.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    // preparing the custom query\n    \n    $sql_WHERE = array();\n    $partial_query_string_pieces = array();\n    \n    foreach ($sqlfields as $sqlfield) {\n        $partial_query_string_pieces[] = sprintf(\"sqlfields[]=%s\", $sqlfield);\n    }\n    \n    //~ if (!empty($startdate)) {\n        //~ $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        //~ $partial_query_string_pieces[] = sprintf(\"startdate=%s\", $startdate);\n    //~ }\n    \n    //~ if (!empty($startdate)) {\n        //~ $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        //~ $partial_query_string_pieces[] = sprintf(\"enddate=%s\", $enddate);\n    //~ }\n    \n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n        $partial_query_string_pieces[] = sprintf(\"username=%s\", $username_enc);\n    }\n    \n    if (!empty($billaction)) {\n        $sql_WHERE[] = sprintf(\"billaction LIKE '%s%%'\", $dbSocket->escapeSimple($billaction));\n        $partial_query_string_pieces[] = sprintf(\"billaction=%s\", $billaction_enc);\n    }\n    \n    // executing the custom query\n\n    $sql = sprintf(\"SELECT %s FROM %s\", implode(\", \", $sqlfields), $configValues['CONFIG_DB_TBL_DALOBILLINGHISTORY']);\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (count($partial_query_string_pieces) > 0)\n                              ? \"&\" . implode(\"&\", $partial_query_string_pieces) : \"\";\n        \n        echo '<table border=\"0\" class=\"table1\">'\n           . '<thead>';\n            \n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n        \n        echo '</thead>'\n           . '<tbody>';\n\n        // inserting the values of each field from the database to the table\n        $count = 0;\n        while($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            printf('<tr id=\"row-%d\">', $count);\n            foreach ($sqlfields as $field) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$field], ENT_QUOTES, 'UTF-8'));\n            }\n            echo '</tr>';\n            $count++;\n        }\n\n        echo '</tbody>';\n\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n    \n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n        \n    include('library/closedb.php');    \n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','billhistorymain.php');\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-history.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','billmain.php');\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-pos.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n\tinclude('library/check_operator_perm.php');\n\tinclude_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    $sqlfields = (array_key_exists('sqlfields', $_GET) && !empty($_GET['sqlfields']) && is_array($_GET['sqlfields']) &&\n                  array_intersect($_GET['sqlfields'], array_keys($bill_merchant_transactions_options_all)) == $_GET['sqlfields'])\n               ? $_GET['sqlfields'] : $bill_merchant_transactions_options_default;\n    \n    $cols = array();\n    foreach ($sqlfields as $sqlfield) {\n        $cols[$sqlfield] = $bill_merchant_transactions_options_all[$sqlfield];\n    }\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($bill_merchant_transactions_options_all)))\n             ? $_GET['orderBy'] : array_keys($bill_merchant_transactions_options_all)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    $startdate = (array_key_exists('startdate', $_GET) && !empty($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && !empty($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n             \n    $vendor_type = (array_key_exists('vendor_type', $_GET) && isset($_GET['vendor_type']) &&\n                    in_array($_GET['vendor_type'], array_slice($valid_vendorTypes, 1))) // avoid inserting \"Any\" in the SQL query\n                 ? $_GET['vendor_type'] : \"\";\n\n    $payer_email = (array_key_exists('payer_email', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['payer_email']))))\n                 ? str_replace(\"%\", \"\", trim($_GET['payer_email'])) : \"\";\n    $payer_email_enc = (!empty($payer_email)) ? htmlspecialchars($payer_email, ENT_QUOTES, 'UTF-8') : \"\";\n\n\t$payment_status = (array_key_exists('payment_status', $_GET) && isset($_GET['payment_status']) &&\n                       in_array($_GET['payment_status'], array_slice($valid_paymentStatus, 1))) // avoid inserting \"Any\" in the SQL query\n                    ? $_GET['payment_status'] : \"\";\n    \n    // FIX THIS: they aren't passed\n    $payment_address_status = (array_key_exists('payment_address_status', $_GET) &&\n                               !empty(str_replace(\"%\", \"\", trim($_GET['payment_address_status']))))\n                            ? str_replace(\"%\", \"\", trim($_GET['payment_address_status'])) : \"\";\n    $payer_status = (array_key_exists('payer_status', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['payer_status']))))\n                  ? str_replace(\"%\", \"\", trim($_GET['payer_status'])) : \"\";\n\t\n    //feed the sidebar variables\n\t$billing_date_startdate = $startdate;\n\t$billing_date_enddate = $enddate;\n\t$billing_paypal_payeremail = $payer_email_enc;\n\t$billing_paypal_paymentstatus = $payment_status;\n\t$billing_paypal_vendor_type = $vendor_type;\n\n    //~ $billing_paypal_paymentaddressstatus = $payment_address_status;\n\t//~ $billing_paypal_payerstatus = $payer_status;\n\t\n    // print HTML prologue\n    $title = t('Intro','billpaypaltransactions.php');\n    $help = t('helpPage','billpaypaltransactions');\n    \n    print_html_prologue($title, $langCode);\n    \n\tinclude(\"menu-bill-merchant.php\");\n\t\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // draw the billing rates summary table\n    include_once('include/management/userBilling.php');\n    userBillingPayPalSummary($startdate, $enddate, $payer_email, $payment_address_status, $payer_status, $payment_status, $vendor_type, 1);\n\t\t\t\t\t\t\t\t\t                         \n\n    include('library/opendb.php');\n    include_once('include/management/pages_common.php');\n    \n    // preparing the custom query\n    \n    $sql_WHERE = array();\n    $partial_query_string_pieces = array();\n    \n    foreach ($sqlfields as $sqlfield) {\n        $partial_query_string_pieces[] = sprintf(\"sqlfields[]=%s\", $sqlfield);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"payment_date > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_string_pieces[] = sprintf(\"startdate=%s\", $startdate);\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"payment_date < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_string_pieces[] = sprintf(\"enddate=%s\", $enddate);\n    }\n    \n    if (!empty($payer_email)) {\n        $sql_WHERE[] = sprintf(\"payer_email LIKE '%s%%'\", $dbSocket->escapeSimple($payer_email));\n        $partial_query_string_pieces[] = sprintf(\"payer_email=%s\", $payer_email);\n    }\n    \n    if (!empty($payment_status)) {\n        $sql_WHERE[] = sprintf(\"payment_status='%s'\", $dbSocket->escapeSimple($payment_status));\n        $partial_query_string_pieces[] = sprintf(\"payment_status=%s\", $payment_status);\n    }\n    \n    if (!empty($vendor_type)) {\n        $sql_WHERE[] = sprintf(\"vendor_type='%s'\", $dbSocket->escapeSimple($vendor_type));\n        $partial_query_string_pieces[] = sprintf(\"vendor_type=%s\", $vendor_type);\n    }\n    \n    // executing the custom query\n\n    $sql = sprintf(\"SELECT %s FROM %s\", implode(\", \", $sqlfields), $configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT']);\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $numrows = $res->numRows();\n\t\t\t\n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (count($partial_query_string_pieces) > 0)\n                              ? \"&\" . implode(\"&\", $partial_query_string_pieces) : \"\";\n\n        echo '<table border=\"0\" class=\"table1\">'\n           . '<thead>';\n\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n\n            \n        echo '</thead>'\n           . '<tbody>';\n        \n        // inserting the values of each field from the database to the table\n        $count = 0;\n        while($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            printf('<tr id=\"row-%d\">', $count);\n            foreach ($sqlfields as $field) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$field], ENT_QUOTES, 'UTF-8'));\n            }\n            echo '</tr>';\n            $count++;\n        }\n\n        echo '</tbody>';\n        \n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n        echo '</table>';\n\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n        \n    include('library/closedb.php');    \n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','paypalmain.php');\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-bill-merchant.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include_once(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    // required later\n    $currDate = date('Y-m-d H:i:s');\n    $currBy = $operator;\n    \n    include('library/opendb.php');\n\n    \n    function addPlanProfile($dbSocket, $username, $planName, $oldplanName) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        $sql = sprintf(\"DELETE FROM %s WHERE UserName='%s'\",\n                       $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        // search to see if the plan is associated with any profiles\n        $sql = sprintf(\"SELECT profile_name FROM %s WHERE plan_name='%s'\",\n                       $configValues['CONFIG_DB_TBL_DALOBILLINGPLANSPROFILES'], $dbSocket->escapeSimple($planName));\n        \n        // $res is an array of all profiles associated with this plan\n        $cols = $dbSocket->getCol($sql);\n        \n        // if the profile list for this plan isn't empty, we associate it with the user\n        if (count($cols) > 0) {\n    \n            // if profiles are associated with this plan, loop through each and add a usergroup entry for each\n            foreach($cols as $profile_name) {\n                $sql = sprintf(\"INSERT INTO %s (username, groupname, priority) VALUES ('%s','%s','0')\",\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($profile_name));\n                $res = $dbSocket->query($sql);\n            }\n        }\n    }\n    \n    function addUserProfiles($dbSocket, $username, $planName, $oldplanName, $groups, $groups_priority, $newgroups) {\n\n        global $logDebugSQL;\n        global $configValues;\n        \n        // update usergroup mapping (existing)\n        if (is_array($groups) && count($groups) > 0) {\n\n            $sql = sprintf(\"DELETE FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n\n            $insert_group_format = \"INSERT INTO %s (username, groupname, priority) VALUES ('%s', '%s', %s)\";\n\n            foreach ($groups as $i => $group) {\n                $group = trim($group);\n                \n                if (empty($group)) {\n                    continue;\n                }\n\n                $priority = (!empty($groups_priority[$i])) ? $groups_priority[$i] : \"0\";\n\n                $sql = sprintf($insert_group_format,\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($group),\n                               $dbSocket->escapeSimple($priority));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n            }\n\n        }\n           \n        // insert usergroup mapping (new groups)\n        if (is_array($newgroups) && count($newgroups) > 0) {\n            foreach ($newgroups as $newgroup) {\n                $newgroup = trim($newgroup);\n                \n                if (empty($newgroup)) {\n                    continue;\n                }\n                \n                $sql = sprintf($insert_group_format,\n                               $configValues['CONFIG_DB_TBL_RADUSERGROUP'],\n                               $dbSocket->escapeSimple($username),\n                               $dbSocket->escapeSimple($group), 0);\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n            }\n        }\n           \n    }\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        // TODO validate user input\n        $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                  ? trim(str_replace(\"%\", \"\", $_POST['username'])) : \"\";\n        $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n            \n        isset($_POST['password']) ? $password = $_POST['password'] : $password = \"\";\n        isset($_POST['oldplanName']) ? $oldplanName = $_POST['oldplanName'] : $oldplanName = \"\";\n        isset($_POST['planName']) ? $planName = $_POST['planName'] : $planName = \"\";\n        isset($_POST['profiles']) ? $profiles = $_POST['profiles'] : $profiles = \"\";\n        isset($_POST['passwordType']) ? $passwordtype = $_POST['passwordType'] : $passwordtype = \"\";\n        isset($_POST['reassignplanprofiles']) ? $reassignplanprofiles = $_POST['reassignplanprofiles'] : $reassignplanprofiles = \"\";\n        \n        $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n        $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n        $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n        $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n        $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n        $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n        $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n        $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n        $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n        $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n        $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n        $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n        $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n        $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n        $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n        $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n        $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n        $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n        \n        isset($_POST['bi_lead']) ? $bi_lead = $_POST['bi_lead'] : $bi_lead = \"\";\n        isset($_POST['bi_coupon']) ? $bi_coupon = $_POST['bi_coupon'] : $bi_coupon = \"\";\n        isset($_POST['bi_ordertaker']) ? $bi_ordertaker = $_POST['bi_ordertaker'] : $bi_ordertaker = \"\";\n        isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n        isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n        isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n        isset($_POST['bi_nextinvoicedue']) ? $bi_nextinvoicedue = $_POST['bi_nextinvoicedue'] : $bi_nextinvoicedue = \"\";\n        isset($_POST['bi_billdue']) ? $bi_billdue = $_POST['bi_billdue'] : $bi_billdue = \"\";\n        isset($_POST['bi_postalinvoice']) ? $bi_postalinvoice = $_POST['bi_postalinvoice'] : $bi_postalinvoice = \"\";\n        isset($_POST['bi_faxinvoice']) ? $bi_faxinvoice = $_POST['bi_faxinvoice'] : $bi_faxinvoice = \"\";\n        isset($_POST['bi_emailinvoice']) ? $bi_emailinvoice = $_POST['bi_emailinvoice'] : $bi_emailinvoice = \"\";\n\n        $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n        $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n        $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n        $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n        $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n        $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n        $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n        $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n        $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n        $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n        $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n        $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n        $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n        $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n        \n        $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n        $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n        $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n        \n        isset ($_POST['newgroups']) ? $newgroups = $_POST['newgroups'] : $newgroups = \"\";\n        isset ($_POST['groups']) ? $groups = $_POST['groups'] : $groups = \"\";\n        isset ($_POST['groups_priority']) ? $groups_priority = $_POST['groups_priority'] : $groups_priority = \"\";\n\n        if (!empty($username)) {\n            \n            // insert userinfo\n            $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $userinfoExist = intval($res->fetchrow()[0]) > 0;\n            $logDebugSQL .= \"$sql;\\n\";\n        \n            // if there were no records for this user present in the userinfo table\n            if (!$userinfoExist) {\n                // insert user information table\n                $sql = sprintf(\"INSERT INTO %s (id, username, firstname, lastname, email, department, company,\n                                                workphone, homephone,  mobilephone, address, city, state, country,\n                                                zip, notes, changeuserinfo, portalloginpassword, enableportallogin,\n                                                creationdate, creationby, updatedate, updateby) \n                                        VALUES (0, '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s', \n                                                '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s',  '%s', '%s',\n                                                '%s', NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                                    $dbSocket->escapeSimple($username), $dbSocket->escapeSimple($firstname),\n                                                                    $dbSocket->escapeSimple($lastname), $dbSocket->escapeSimple($email),\n                                                                    $dbSocket->escapeSimple($department), $dbSocket->escapeSimple($company),\n                                                                    $dbSocket->escapeSimple($workphone), $dbSocket->escapeSimple($homephone),\n                                                                    $dbSocket->escapeSimple($mobilephone), $dbSocket->escapeSimple($address),\n                                                                    $dbSocket->escapeSimple($city), $dbSocket->escapeSimple($state),\n                                                                    $dbSocket->escapeSimple($country), $dbSocket->escapeSimple($zip),\n                                                                    $dbSocket->escapeSimple($notes), $dbSocket->escapeSimple($ui_changeuserinfo),\n                                                                    $dbSocket->escapeSimple($ui_PortalLoginPassword),\n                                                                    $dbSocket->escapeSimple($ui_enableUserPortalLogin),\n                                                                    $dbSocket->escapeSimple($currDate), $dbSocket->escapeSimple($currBy));\n            } else {\n               // update user information table\n               $sql = sprintf(\"UPDATE %s SET firstname='%s', lastname='%s', email='%s', department='%s', company='%s', workphone='%s',\n                                             homephone='%s', mobilephone='%s', address='%s', city='%s', state='%s', country='%s',\n                                             zip='%s', notes='%s', changeuserinfo='%s', portalloginpassword='%s', enableportallogin='%s',\n                                             updatedate='%s', updateby='%s'\n                                WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $dbSocket->escapeSimple($firstname),\n                                                      $dbSocket->escapeSimple($lastname), $dbSocket->escapeSimple($email),\n                                                      $dbSocket->escapeSimple($department), $dbSocket->escapeSimple($company),\n                                                      $dbSocket->escapeSimple($workphone), $dbSocket->escapeSimple($homephone),\n                                                      $dbSocket->escapeSimple($mobilephone), $dbSocket->escapeSimple($address),\n                                                      $dbSocket->escapeSimple($city), $dbSocket->escapeSimple($state),\n                                                      $dbSocket->escapeSimple($country), $dbSocket->escapeSimple($zip),\n                                                      $dbSocket->escapeSimple($notes), $dbSocket->escapeSimple($ui_changeuserinfo),\n                                                      $dbSocket->escapeSimple($ui_PortalLoginPassword),\n                                                      $dbSocket->escapeSimple($ui_enableUserPortalLogin),\n                                                      $dbSocket->escapeSimple($currDate), $dbSocket->escapeSimple($currBy),\n                                                      $dbSocket->escapeSimple($username));\n            }\n\n            // execute the insert/update onto userinfo\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            \n            /* perform user billing info table instructions */\n            $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s WHERE username='%s'\",\n                           $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'], $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $userbillinfoExist = $res->fetchrow()[0];\n            $logDebugSQL .= \"$sql;\\n\";\n\n            // if there were no records for this user present in the userbillinfo table\n            if (!$userbillinfoExits) {\n                // insert user billing information table\n                $sql = sprintf(\"INSERT INTO %s (id, username, contactperson, company, email, phone, address,\n                                                city, state, country, zip, paymentmethod, cash, creditcardname,\n                                                creditcardnumber, creditcardverification, creditcardtype,\n                                                creditcardexp, notes, changeuserbillinfo, creationdate,\n                                                creationby, updatedate, updateby)\n                                       VALUES (0, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                                               '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                                               NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                             $dbSocket->escapeSimple($username), $dbSocket->escapeSimple($bi_contactperson),\n                                                             $dbSocket->escapeSimple($bi_company), $dbSocket->escapeSimple($bi_email),\n                                                             $dbSocket->escapeSimple($bi_phone), $dbSocket->escapeSimple($bi_address),\n                                                             $dbSocket->escapeSimple($bi_city), $dbSocket->escapeSimple($bi_state),\n                                                             $dbSocket->escapeSimple($bi_country), $dbSocket->escapeSimple($bi_zip),\n                                                             $dbSocket->escapeSimple($bi_paymentmethod), $dbSocket->escapeSimple($bi_cash),\n                                                             $dbSocket->escapeSimple($bi_creditcardname),\n                                                             $dbSocket->escapeSimple($bi_creditcardnumber), \n                                                             $dbSocket->escapeSimple($bi_creditcardverification),\n                                                             $dbSocket->escapeSimple($bi_creditcardtype),\n                                                             $dbSocket->escapeSimple($bi_creditcardexp), $dbSocket->escapeSimple($bi_notes),\n                                                             $dbSocket->escapeSimple($bi_changeuserbillinfo), $currDate, $currBy);\n            } else {\n                // update user information table\n                $sql = sprintf(\"UPDATE %s SET `contactperson`='%s', `planname`='%s', `company`='%s', `email`='%s', `phone`='%s',\n                                              `paymentmethod`='%s', `cash`='%s', `creditcardname`='%s', `creditcardnumber`='%s',\n                                              `creditcardverification`='%s', `creditcardtype`='%s', `creditcardexp`='%s', `address`='%s',\n                                              `city`='%s', `state`='%s', `country`='%s', `zip`='%s', `notes`='%s', `changeuserbillinfo`='%s',\n                                              `lead`='%s', `coupon`='%s', `ordertaker`='%s', `billstatus`='%s', `nextinvoicedue`='%s',\n                                              `billdue`='%s', `postalinvoice`='%s', `faxinvoice`='%s', `emailinvoice`='%s', `updatedate`='%s',\n                                              `updateby`='%s'\n                                        WHERE `username`='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'], $dbSocket->escapeSimple($bi_contactperson),\n                                                                $dbSocket->escapeSimple($planName), $dbSocket->escapeSimple($bi_company),\n                                                                $dbSocket->escapeSimple($bi_email), $dbSocket->escapeSimple($bi_phone),\n                                                                $dbSocket->escapeSimple($bi_paymentmethod), $dbSocket->escapeSimple($bi_cash),\n                                                                $dbSocket->escapeSimple($bi_creditcardname), $dbSocket->escapeSimple($bi_creditcardnumber),\n                                                                $dbSocket->escapeSimple($bi_creditcardverification), $dbSocket->escapeSimple($bi_creditcardtype),\n                                                                $dbSocket->escapeSimple($bi_creditcardexp), $dbSocket->escapeSimple($bi_address),\n                                                                $dbSocket->escapeSimple($bi_city), $dbSocket->escapeSimple($bi_state),\n                                                                $dbSocket->escapeSimple($bi_country), $dbSocket->escapeSimple($bi_zip),\n                                                                $dbSocket->escapeSimple($bi_notes), $dbSocket->escapeSimple($bi_changeuserbillinfo),\n                                                                $dbSocket->escapeSimple($bi_lead), $dbSocket->escapeSimple($bi_coupon),\n                                                                $dbSocket->escapeSimple($bi_ordertaker), $dbSocket->escapeSimple($bi_billstatus),\n                                                                $dbSocket->escapeSimple($bi_nextinvoicedue), $dbSocket->escapeSimple($bi_billdue),\n                                                                $dbSocket->escapeSimple($bi_postalinvoice), $dbSocket->escapeSimple($bi_faxinvoice),\n                                                                $dbSocket->escapeSimple($bi_emailinvoice), $currDate, $currBy,\n                                                                $dbSocket->escapeSimple($username));\n            }\n\n            // execute the insert/update onto userbillinfo\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            if ($reassignplanprofiles == 1) {\n                // if the user chose to re-assign profiles from the change of plan then we proceed with removing\n                // all profiles associated with the user and re-assigning them based on the plan's profiles associations\n                addPlanProfile($dbSocket, $username, $planName, $oldplanName);\n            } else {\n                // otherwise, we remove all profiles and assign profiles as configured in the profiles tab by the user\n                addUserProfiles($dbSocket, $username, $planName, $oldplanName, $groups, $groups_priority, $newgroups);\n            }\n            \n        }\n        \n    } else {\n        $username = (array_key_exists('username', $_REQUEST) && isset($_REQUEST['username']))\n                  ? trim(str_replace(\"%\", \"\", $_REQUEST['username'])) : \"\";\n        $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    }\n    \n    //feed the sidebar variables\n    $edit_username = $username_enc;\n\n\n    /* an sql query to retrieve the password for the username to use in the quick link for the user test connectivity */\n    $sql = sprintf(\"SELECT value FROM %s WHERE username='%s' AND attribute LIKE '%%-Password' ORDER BY id DESC LIMIT 1\",\n                   $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    $user_password = $res->fetchRow()[0];\n\n    /* fill-in all the user info details */\n    $sql = sprintf(\"SELECT firstname, lastname, email, department, company, workphone, homephone, mobilephone, address, city,\n                           state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate,\n                           creationby, updatedate, updateby\n                      FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                    $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    list( \n          $ui_firstname, $ui_lastname, $ui_email, $ui_department, $ui_company, $ui_workphone, $ui_homephone,\n          $ui_mobilephone, $ui_address, $ui_city, $ui_state, $ui_country, $ui_zip, $ui_notes, $ui_changeuserinfo,\n          $ui_PortalLoginPassword, $ui_enableUserPortalLogin, $ui_creationdate, $ui_creationby, $ui_updatedate,\n          $ui_updateby\n        ) = $res->fetchRow();\n\n\n    /* fill-in all the user bill info details */\n    $sql = sprintf(\"SELECT id, planName, contactperson, company, email, phone, address, city, state, country, zip, paymentmethod,\n                           cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp,\n                           notes, changeuserbillinfo, `lead`, coupon, ordertaker, billstatus, lastbill, nextbill,\n                           nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, creationdate, creationby,\n                           updatedate, updateby\n                      FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                    $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    list(\n            $user_id, $bi_planname, $bi_contactperson, $bi_company, $bi_email, $bi_phone, $bi_address, $bi_city,\n            $bi_state, $bi_country, $bi_zip, $bi_paymentmethod, $bi_cash, $bi_creditcardname, $bi_creditcardnumber,\n            $bi_creditcardverification, $bi_creditcardtype, $bi_creditcardexp, $bi_notes, $bi_changeuserbillinfo,\n            $bi_lead, $bi_coupon, $bi_ordertaker, $bi_billstatus, $bi_lastbill, $bi_nextbill, $bi_nextinvoicedue,\n            $bi_billdue, $bi_postalinvoice, $bi_faxinvoice, $bi_emailinvoice, $bi_creationdate, $bi_creationby,\n            $bi_updatedate, $bi_updateby\n        ) = $res->fetchRow();\n\n    include('library/closedb.php');\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    // inline extra javascript\n    $inline_extra_js = sprintf(\"var strUsername = 'username=%s';\\n\", $username_enc);\n    \n    $inline_extra_js .= '\nfunction disableUser() {\n    if (confirm(\"You are about to disable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userDisable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction enableUser() {\n    if (confirm(\"You are about to enable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userEnable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction refillSessionTime() {\n    if (confirm(\"You are about to refill session time for this user account\\nDo you want to continue?\\n\\nSuch action will also bill the user if set so in the plant the user is associated with!\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"refillSessionTime=true\", \"returnMessages\", strUsername);\n        return true;    \n    }\n}\n\n\nfunction refillSessionTraffic() {\n    if (confirm(\"You are about to refill session traffic for this user account\\nDo you want to continue?\\n\\nSuch action will also bill the user if set so in the plant the user is associated with!\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"refillSessionTraffic=true\", \"returnMessages\", strUsername);\n        return true;    \n    }\n}\n\nwindow.onload = function(){\n    ajaxGeneric(\"include/management/userOperations.php\", \"checkDisabled=true\", \"returnMessages\", strUsername);\n};' . \"\\n\";\n    \n    $title = t('Intro','billposedit.php');\n    $help = t('helpPage','billposedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js, \"\", $inline_extra_js);\n\n    include(\"menu-bill-pos.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // ajax return div\n    echo '<div id=\"returnMessages\"></div>';\n\n    if (!empty($username)) {\n\n        include_once('include/management/actionMessages.php');\n        include_once('include/management/populate_selectbox.php');\n\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                    \"type\" => \"hidden\",\n                                    \"value\" => $username_enc,\n                                    \"name\" => \"username\"\n                                 );\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"username_presentation\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($username)) ? $username : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                      );\n                                    \n        $input_descriptors1[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"value\" => ((isset($user_password)) ? $user_password : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        \n        $input_descriptors1[] = array( 'name' => 'oldplanName', 'type' => 'hidden',\n                                                 'value' => ((isset($bi_planname)) ? $bi_planname : \"\") );\n                        \n        $options = get_active_plans();\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                         'type' => 'select',\n                                         'name' => 'planName',\n                                         'caption' => t('all','PlanName'),\n                                         'tooltipText' => t('Tooltip','planNameTooltip'),\n                                         'options' => $options,\n                                         'selected_value' => ((isset($bi_planname)) ? $bi_planname : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        'type' => 'checkbox',\n                                        'name' => 'reassignplanprofiles',\n                                        'caption' => t('button','ReAssignPlanProfiles'),\n                                        'value' => ((isset($reassignplanprofiles)) ? $reassignplanprofiles : \"\"),\n                                        'tooltipText' => t('Tooltip','reassignplanprofiles')\n                                     );\n\n        // draw navbar\n        $navbuttons = array(\n                                'AccountInfo-tab' => t('title','AccountInfo'),\n                                'UserInfo-tab' => t('title','UserInfo'),\n                                'BillingInfo-tab' => t('title','BillingInfo'),\n                                'Profiles-tab' => t('title','Profiles'),\n                                'Invoices-tab' => t('title','Invoices'),\n                                'OtherInfo-tab' => 'Other Info'\n                           );\n        print_tab_navbuttons($navbuttons);\n\n?>\n\n<form method=\"POST\">\n    <div id=\"AccountInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','AccountInfo') ?>\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','AccountInfo') ?></h302>\n\n            <ul>\n\n<?php\n                foreach ($input_descriptors1 as $descr) {\n                    print_form_component($descr);\n                }\n                \n                $buttons = array();\n                \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Refill Session Time',\n                                    'onclick' => 'javascript:refillSessionTime()',\n                                    'name' => 'refillSessionTime-button'\n                                  );\n                                  \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Refill Session Traffic',\n                                    'onclick' => 'javascript:refillSessionTraffic()',\n                                    'name' => 'refillSessionTraffic-button'\n                                  );\n                \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Enable User',\n                                    'onclick' => 'javascript:enableUser()',\n                                    'name' => 'enableUser-button'\n                                  );\n                                  \n                $buttons[] = array(\n                                    'type' => 'button',\n                                    'value' => 'Disable User',\n                                    'onclick' => 'javascript:disableUser()',\n                                    'name' => 'disableUser-button'\n                                  );\n                \n                $submit_descriptor = array(\n                                              'type' => 'submit',\n                                              'name' => 'submit',\n                                              'id' => 'AccountInfo-submit',\n                                              'value' => t('buttons','apply')\n                                          );\n?>\n\n                <li class='fieldset'>\n                    <br/><hr><br/><br/>\n            \n<?php\n                    foreach ($buttons as $button_desc) {\n                        print_input_field($button_desc);\n                    }\n?>\n\n                </li>\n            </ul>\n        </fieldset>\n        \n<?php\n        print_input_field($submit_descriptor);\n?>\n        \n    </div>\n\n    <div id=\"UserInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','UserInfo'); ?>\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userinfo.php');\n?>\n    </div>\n\n    <div id=\"BillingInfo-tab\" class=\"tabcontent\" title=\"<?= t('title','BillingInfo'); ?>\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userbillinfo.php');\n?>\n    </div>\n    \n    <div id=\"Profiles-tab\" class=\"tabcontent\" title=\"<?= t('title','Profiles'); ?>\">\n\n<?php\n        include('library/opendb.php');\n        $groupTerminology = \"Profile\";\n        $groupTerminologyPriority = \"ProfilePriority\";\n        include_once('include/management/groups.php');\n        include('library/closedb.php');\n?>\n\n        <h301> Assign New Profiles </h301>\n        <br/>\n        \n        <fieldset>\n            <ul>\n\n                <li class='fieldset'>\n                    <label for='profile' class='form'><?= t('all','Profile')?></label>\n                    <?php\n                            populate_groups(\"Select Profile\",\"newgroups[]\");\n                    ?>\n\n                    <a class='tablenovisit' href='#'\n                            onClick=\"javascript:ajaxGeneric('include/management/dynamic_groups.php','getGroups','divContainerProfiles',genericCounter('divCounter')+'&elemName=newgroups[]');\">Add</a>\n\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('groupTooltip')\" />\n\n                    <div id='divContainerProfiles'>\n                    </div>\n\n                    <div id='groupTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                            <img src='images/icons/comment.png' alt='Tip' border='0' />\n                            <?= t('Tooltip','groupTooltip') ?>\n                    </div>\n                </li>\n\n                <li class='fieldset'>\n                    <br/><br/>\n                    <br/>\n                    <hr><br/>\n                    \n                    <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' class='button' />\n                </li>\n\n            </ul>\n\n        </fieldset>\n\n    <br/>\n\n    </div>\n\n    <div id=\"Invoices-tab\" class=\"tabcontent\" title=\"<?= t('title','Invoices'); ?>\">\n<?php\n        include_once('include/management/userBilling.php');\n        userInvoicesStatus($user_id, 1);\n?>\n    </div><!-- #Invoices-tab -->\n\n</form>\n\n    <div id=\"OtherInfo-tab\" class=\"tabcontent\" title=\"Other Info\">\n<?php\n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n?>\n    </div><!-- #OtherInfo-tab -->\n\n<?php\n    }\n    \n    print_back_to_previous_page();\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include_once(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include('include/management/pages_common.php');\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                     in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n\n\n    isset($_POST['username']) ? $username = $_POST['username'] : $username = \"\";\n    isset($_POST['password']) ? $password = $_POST['password'] : $password = \"\";\n    isset($_POST['planName']) ? $planName = $_POST['planName'] : $planName = \"\";\n    isset($_POST['profiles']) ? $profiles = $_POST['profiles'] : $profiles = \"\";\n    isset($_POST['notificationWelcome']) ? $notificationWelcome = $_POST['notificationWelcome'] : $notificationWelcome = \"\";\n    \n\n    isset($_POST['bi_contactperson']) ? $bi_contactperson = $_POST['bi_contactperson'] : $bi_contactperson = \"\";\n    isset($_POST['bi_company']) ? $bi_company = $_POST['bi_company'] : $bi_company = \"\";\n    isset($_POST['bi_email']) ? $bi_email = $_POST['bi_email'] : $bi_email = \"\";\n    isset($_POST['bi_phone']) ? $bi_phone = $_POST['bi_phone'] : $bi_phone = \"\";\n    isset($_POST['bi_address']) ? $bi_address = $_POST['bi_address'] : $bi_address = \"\";\n    isset($_POST['bi_city']) ? $bi_city = $_POST['bi_city'] : $bi_city = \"\";\n    isset($_POST['bi_state']) ? $bi_state = $_POST['bi_state'] : $bi_state = \"\";\n    isset($_POST['bi_country']) ? $bi_country = $_POST['bi_country'] : $bi_country = \"\";\n    isset($_POST['bi_zip']) ? $bi_zip = $_POST['bi_zip'] : $bi_zip = \"\";\n    isset($_POST['bi_paymentmethod']) ? $bi_paymentmethod = $_POST['bi_paymentmethod'] : $bi_paymentmethod = \"\";\n    isset($_POST['bi_cash']) ? $bi_cash = $_POST['bi_cash'] : $bi_cash = \"\";\n    isset($_POST['bi_creditcardname']) ? $bi_creditcardname = $_POST['bi_creditcardname'] : $bi_creditcardname = \"\";\n    isset($_POST['bi_creditcardnumber']) ? $bi_creditcardnumber = $_POST['bi_creditcardnumber'] : $bi_creditcardnumber = \"\";\n    isset($_POST['bi_creditcardverification']) ? $bi_creditcardverification = $_POST['bi_creditcardverification'] : $bi_creditcardverification = \"\";\n    isset($_POST['bi_creditcardtype']) ? $bi_creditcardtype = $_POST['bi_creditcardtype'] : $bi_creditcardtype = \"\";\n    isset($_POST['bi_creditcardexp']) ? $bi_creditcardexp = $_POST['bi_creditcardexp'] : $bi_creditcardexp = \"\";\n    isset($_POST['bi_notes']) ? $bi_notes = $_POST['bi_notes'] : $bi_notes = \"\";\n    isset($_POST['bi_lead']) ? $bi_lead = $_POST['bi_lead'] : $bi_lead = \"\";\n    isset($_POST['bi_coupon']) ? $bi_coupon = $_POST['bi_coupon'] : $bi_coupon = \"\";\n    isset($_POST['bi_ordertaker']) ? $bi_ordertaker = $_POST['bi_ordertaker'] : $bi_ordertaker = \"\";\n    isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n    isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n    isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n    isset($_POST['bi_nextinvoicedue']) ? $bi_nextinvoicedue = $_POST['bi_nextinvoicedue'] : $bi_nextinvoicedue = \"\";\n    isset($_POST['bi_billdue']) ? $bi_billdue = $_POST['bi_billdue'] : $bi_billdue = \"\";\n    isset($_POST['bi_postalinvoice']) ? $bi_postalinvoice = $_POST['bi_postalinvoice'] : $bi_postalinvoice = \"\";\n    isset($_POST['bi_faxinvoice']) ? $bi_faxinvoice = $_POST['bi_faxinvoice'] : $bi_faxinvoice = \"\";\n    isset($_POST['bi_emailinvoice']) ? $bi_emailinvoice = $_POST['bi_emailinvoice'] : $bi_emailinvoice = \"\";\n    isset($_POST['changeUserBillInfo']) ? $bi_changeuserbillinfo = $_POST['changeUserBillInfo'] : $bi_changeuserbillinfo = \"0\";\n\n    isset($_POST['firstname']) ? $firstname = $_POST['firstname'] : $firstname = \"\";\n    isset($_POST['lastname']) ? $lastname = $_POST['lastname'] : $lastname = \"\";\n    isset($_POST['email']) ? $email = $_POST['email'] : $email = \"\";\n    isset($_POST['department']) ? $department = $_POST['department'] : $department = \"\";\n    isset($_POST['company']) ? $company = $_POST['company'] : $company = \"\";\n    isset($_POST['workphone']) ? $workphone = $_POST['workphone'] : $workphone = \"\";\n    isset($_POST['homephone']) ? $homephone = $_POST['homephone'] :  $homephone = \"\";\n    isset($_POST['mobilephone']) ? $mobilephone = $_POST['mobilephone'] : $mobilephone = \"\";\n    isset($_POST['address']) ? $ui_address = $_POST['address'] : $ui_address = \"\";\n    isset($_POST['city']) ? $ui_city = $_POST['city'] : $ui_city = \"\";\n    isset($_POST['state']) ? $ui_state = $_POST['state'] : $ui_state = \"\";\n    isset($_POST['country']) ? $ui_country = $_POST['country'] : $ui_country = \"\";\n    isset($_POST['zip']) ? $ui_zip = $_POST['zip'] : $ui_zip = \"\";\n    isset($_POST['notes']) ? $notes = $_POST['notes'] : $notes = \"\";\n    isset($_POST['changeUserInfo']) ? $ui_changeuserinfo = $_POST['changeUserInfo'] : $ui_changeuserinfo = \"0\";\n    isset($_POST['enableUserPortalLogin']) ? $ui_enableUserPortalLogin = $_POST['enableUserPortalLogin'] : $ui_enableUserPortalLogin = \"0\";\n    isset($_POST['portalLoginPassword']) ? $ui_PortalLoginPassword = $_POST['portalLoginPassword'] : $ui_PortalLoginPassword = \"\";\n    \n\n    function addPlanProfile($dbSocket, $username, $planName) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        // search to see if the plan is associated with any profiles\n        $sql = \"SELECT profile_name FROM \".\n                $configValues['CONFIG_DB_TBL_DALOBILLINGPLANSPROFILES'].\n                \" WHERE plan_name='$planName'\";\n        $res = $dbSocket->getCol($sql);\n        // $res is an array of all profiles associated with this plan\n        \n        // if the profile list for this plan isn't empty, we associate it with the user\n        if (count($res) != 0) {\n    \n            // if profiles are associated with this plan, loop through each and add a usergroup entry for each\n            foreach($res as $profile_name) {\n                $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADUSERGROUP'].\" (UserName,GroupName,priority) \".\n                    \" VALUES ('\".$dbSocket->escapeSimple($username).\"','$profile_name','0')\";\n                $res = $dbSocket->query($sql);\n            }\n            \n            return true;\n        \n        }\n        \n        return false;\n\n    }\n    \n\n    function addGroups($dbSocket, $username, $groups) {\n\n        global $logDebugSQL;\n        global $configValues;\n\n        // insert usergroup mapping\n        if (isset($groups)) {\n\n            foreach ($groups as $group) {\n\n                if (trim($group) != \"\") {\n                    $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADUSERGROUP'].\" (UserName,GroupName,priority) \".\n                            \" VALUES ('\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($group).\"',0) \";\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= $sql . \"\\n\";\n                }\n            }\n        }\n    }\n\n\n    \n    \n    function addUserInfo($dbSocket, $username) {\n\n        global $firstname;\n        global $lastname;\n        global $email;\n        global $department;\n        global $company;\n        global $workphone;\n        global $homephone;\n        global $mobilephone;\n        global $ui_address;\n        global $ui_city;\n        global $ui_state;\n        global $ui_country;\n        global $ui_zip;\n        global $notes;\n        global $ui_changeuserinfo;\n        global $ui_enableUserPortalLogin;\n        global $ui_PortalLoginPassword;\n        global $logDebugSQL;\n        global $configValues;\n\n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOUSERINFO'].\n                        \" WHERE username='\".$dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        // if there were no records for this user present in the userinfo table\n        if ($res->numRows() == 0) {\n            // insert user information table\n            $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOUSERINFO'].\n                    \" (id, username, firstname, lastname, email, department, company, workphone, homephone, \".\n                    \" mobilephone, address, city, state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate, creationby, updatedate, updateby) \".\n                    \" VALUES (0,\n                    '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($firstname).\"', '\".\n                    $dbSocket->escapeSimple($lastname).\"', '\".$dbSocket->escapeSimple($email).\"', '\".\n                    $dbSocket->escapeSimple($department).\"', '\".$dbSocket->escapeSimple($company).\"', '\".\n                    $dbSocket->escapeSimple($workphone).\"', '\".$dbSocket->escapeSimple($homephone).\"', '\".\n                    $dbSocket->escapeSimple($mobilephone).\"', '\".$dbSocket->escapeSimple($ui_address).\"', '\".\n                    $dbSocket->escapeSimple($ui_city).\"', '\".$dbSocket->escapeSimple($ui_state).\"', '\".\n                    $dbSocket->escapeSimple($ui_country).\"', '\".\n                    $dbSocket->escapeSimple($ui_zip).\"', '\".$dbSocket->escapeSimple($notes).\"', '\".\n                    $dbSocket->escapeSimple($ui_changeuserinfo).\"', '\".\n                    $dbSocket->escapeSimple($ui_PortalLoginPassword).\"', '\".$dbSocket->escapeSimple($ui_enableUserPortalLogin).\n                    \"', '$currDate', '$currBy', NULL, NULL)\";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n        } //FIXME:\n          //if the user already exist in userinfo then we should somehow alert the user\n          //that this has happened and the administrator/operator will take care of it\n    }\n\n\n\n    function addUserBillInfo($dbSocket, $username) {\n\n        global $planName;\n        global $bi_contactperson;\n        global $bi_company;\n        global $bi_email;\n        global $bi_phone;\n        global $bi_address;\n        global $bi_city;\n        global $bi_state;\n        global $bi_country;\n        global $bi_zip;\n        global $bi_paymentmethod;\n        global $bi_cash;\n        global $bi_creditcardname;\n        global $bi_creditcardnumber;\n        global $bi_creditcardexp;\n        global $bi_creditcardverification;\n        global $bi_creditcardtype;\n        global $bi_notes;\n        global $bi_lead;\n        global $bi_coupon;\n        global $bi_ordertaker;\n        global $bi_billstatus;\n        global $bi_lastbill;\n        global $bi_nextbill;\n        global $bi_nextinvoicedue;\n        global $bi_billdue;\n        global $bi_postalinvoice;\n        global $bi_faxinvoice;\n        global $bi_emailinvoice;\n        global $bi_changeuserbillinfo;\n        global $logDebugSQL;\n        global $configValues;\n\n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n                        \" WHERE username='\".$dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        // if there were no records for this user present in the userbillinfo table\n        if ($res->numRows() == 0) {\n            \n            // calculate the nextbill and other related billing information\n            $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\n                            \" WHERE planName='\".$dbSocket->escapeSimple($planName).\"' LIMIT 1\";\n            $res = $dbSocket->query($sql);\n            $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n            $logDebugSQL .= $sql . \"\\n\";\n                            \n            $planRecurring = $row['planRecurring'];\n            $planRecurringPeriod = $row['planRecurringPeriod'];\n            $planRecurringBillingSchedule = $row['planRecurringBillingSchedule'];\n            \n            \n            // initialize next bill date string (Y-m-d style)\n            $nextBillDate = \"0000-00-00\";\n            \n            // get next billing date\n            if ($planRecurring == \"Yes\") {\n                $nextBillDate = getNextBillingDate($planRecurringBillingSchedule, $planRecurringPeriod);\n            }\n\n        \n            // if $bi_nextbill was not set to anything (empty)\n            if (empty($bi_nextbill))\n                $bi_nextbill = $nextBillDate;\n                    \n            \n            \n            // insert user billing information table\n            $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n                    \" (id, planname, username, contactperson, company, email, phone, \".\n                    \" address, city, state, country, zip, \".\n                    \" paymentmethod, cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp, \".\n                    \" notes, changeuserbillinfo, \".\n                    \" `lead`, coupon, ordertaker, billstatus, lastbill, nextbill, nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, \".\n                    \" creationdate, creationby, updatedate, updateby) \".\n                    \" VALUES (0, '\".$dbSocket->escapeSimple($planName).\"', \n                    '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($bi_contactperson).\"', '\".\n                    $dbSocket->escapeSimple($bi_company).\"', '\".$dbSocket->escapeSimple($bi_email).\"', '\".\n                    $dbSocket->escapeSimple($bi_phone).\"', '\".$dbSocket->escapeSimple($bi_address).\"', '\".\n                    $dbSocket->escapeSimple($bi_city).\"', '\".$dbSocket->escapeSimple($bi_state).\"', '\".\n                    $dbSocket->escapeSimple($bi_country).\"', '\".\n                    $dbSocket->escapeSimple($bi_zip).\"', '\".$dbSocket->escapeSimple($bi_paymentmethod).\"', '\".\n                    $dbSocket->escapeSimple($bi_cash).\"', '\".$dbSocket->escapeSimple($bi_creditcardname).\"', '\".\n                    $dbSocket->escapeSimple($bi_creditcardnumber).\"', '\".$dbSocket->escapeSimple($bi_creditcardverification).\"', '\".\n                    $dbSocket->escapeSimple($bi_creditcardtype).\"', '\".$dbSocket->escapeSimple($bi_creditcardexp).\"', '\".\n                    $dbSocket->escapeSimple($bi_notes).\"', '\".\n                    $dbSocket->escapeSimple($bi_changeuserbillinfo).\"', '\".\n                    $dbSocket->escapeSimple($bi_lead).\"', '\".$dbSocket->escapeSimple($bi_coupon).\"', '\".\n                    $dbSocket->escapeSimple($bi_ordertaker).\"', '\".$dbSocket->escapeSimple($bi_billstatus).\"', '\".\n                    $dbSocket->escapeSimple($bi_lastbill).\"', '\".$dbSocket->escapeSimple($bi_nextbill).\"', '\".\n                    $dbSocket->escapeSimple($bi_nextinvoicedue).\"', '\".$dbSocket->escapeSimple($bi_billdue).\"', '\".\n                    $dbSocket->escapeSimple($bi_postalinvoice).\"', '\".$dbSocket->escapeSimple($bi_faxinvoice).\"', '\".\n                    $dbSocket->escapeSimple($bi_emailinvoice).\n                                    \"', '$currDate', '$currBy', NULL, NULL)\";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n            \n            $user_id = $dbSocket->getOne( \"SELECT LAST_INSERT_ID() FROM `\".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\"`\" );\n            return $user_id;\n            \n        } //FIXME:\n          //if the user already exist in userinfo then we should somehow alert the user\n          //that this has happened and the administrator/operator will take care of it\n\n    }\n    \n    \n    \n    \n\n    if (isset($_POST[\"submit\"])) {\n        \n        include 'library/opendb.php';\n\n        global $username;\n        global $password;\n        global $passwordType;\n\n        $sql = \"SELECT * FROM \".$configValues['CONFIG_DB_TBL_RADCHECK'].\" WHERE UserName='\".\n                        $dbSocket->escapeSimple($username).\"'\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        if ($res->numRows() == 0) {\n            \n            if (trim($username) != \"\" and trim($password) != \"\") {\n\n                // we need to perform the secure method escapeSimple on $dbPassword early because as seen below\n                // we manipulate the string and manually add to it the '' which screw up the query if added in $sql\n                $password = $dbSocket->escapeSimple($password);\n\n                switch($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) {\n                    case \"cleartext\":\n                            $dbPassword = \"'$password'\";\n                            break;\n                    case \"crypt\":\n                            $dbPassword = \"ENCRYPT('$password')\";\n                            break;\n                    case \"md5\":\n                            $dbPassword = \"MD5('$password')\";\n                            break;\n                    default:\n                            $dbPassword = \"'$password'\";\n                }\n\n                // at this stage $dbPassword contains the password string encapsulated by '' and either uses\n                // a function to encrypt it like ENCRYPT or it doesn't, it's based on the configuration\n                // but here we provide another stage, for Crypt-Password and MD5-Password it's obvious\n                // that the password need be encrypted so even if this option is not in the configuration\n                // we enforce it.\n\n                // we first check if the password attribute is to be encrypted at all\n                if (preg_match(\"/crypt/i\", $passwordType)) {\n                    // if we don't find the encrypt function even though we identified\n                    // a Crypt-Password attribute\n                    if (!(preg_match(\"/encrypt/i\",$dbPassword))) {\n                            $dbPassword = \"ENCRYPT('$password')\";\n                    }\n\n                        // we now perform the same check but for an MD5-Password attribute\n                } elseif (preg_match(\"/md5/i\", $passwordType)) {\n                    // if we don't find the md5 function even though we identified\n                    // a MD5-Password attribute\n                    if (!(preg_match(\"/md5/i\",$dbPassword))) {\n                            $dbPassword = \"MD5('$password')\";\n                    }\n                }\n\n                // insert username/password\n                $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_RADCHECK'].\" (id,Username,Attribute,op,Value) \".\n                                \" VALUES (0, '\".$dbSocket->escapeSimple($username).\"', '\".$dbSocket->escapeSimple($passwordType).\n                                \"', ':=', $dbPassword)\";\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= $sql . \"\\n\";\n\n                addGroups($dbSocket, $username, $profiles);\n                addPlanProfile($dbSocket, $username, $planName);\n                addUserInfo($dbSocket, $username);\n                $userbillinfo_id = addUserBillInfo($dbSocket, $username);\n\n                // create any invoices if required (meaning, if a plan was chosen)\n                if ($planName) {\n                    include_once(\"include/management/userBilling.php\");\n                    \n                    // get plan information\n                    $sql = \"SELECT id, planCost, planSetupCost, planTax FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'].\n                        \" WHERE planName='\".$dbSocket->escapeSimple($planName).\"' LIMIT 1\";\n                    $res = $dbSocket->query($sql);\n                    $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n                    // calculate tax (planTax is the numerical percentage amount) \n                    $calcTax = (float) ($row['planCost'] * (float)($row['planTax'] / 100) );\n                    $invoiceItems[0]['plan_id'] = $row['id'];\n                    $invoiceItems[0]['amount'] = $row['planCost'];\n                    $invoiceItems[0]['tax'] = $calcTax;\n                    $invoiceItems[0]['notes'] = 'charge for plan service';\n                    \n                    if (isset($row['planSetupCost']) && ($row['planSetupCost'] != '') ) {\n                        $calcTax = (float) ($row['planSetupCost'] * (float)($row['planTax'] / 100) );\n                        $invoiceItems[1]['plan_id'] = $row['id'];\n                        $invoiceItems[1]['amount'] = $row['planSetupCost'];\n                        $invoiceItems[1]['tax'] = $calcTax;\n                        $invoiceItems[1]['notes'] = 'charge for plan setup fee (one time)';\n                    }\n                                        \n                    userInvoiceAdd($userbillinfo_id, array(), $invoiceItems);\n                    \n                }\n                \n                \n                if ($notificationWelcome == 1) {\n                    include(\"include/common/notificationsWelcome.php\");\n                    \n                }\n                \n                $successMsg = \"Added to database new user: <b> $username </b>\";\n                $logAction .= \"Successfully added new user [$username] on page: \";\n            } else {\n                $failureMsg = \"username or password are empty\";\n                $logAction .= \"Failed adding (possible empty user/pass) new user [$username] on page: \";\n            }\n        } else { \n            $failureMsg = \"user already exist in database: <b> $username </b>\";\n            $logAction .= \"Failed adding new user already existing in database [$username] on page: \";\n        }\n    \n        include 'library/closedb.php';\n\n    }\n\n    include_once('library/config_read.php');\n    \n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','billposnew.php');\n    $help = t('helpPage','billposnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-bill-pos.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n        // set navbar stuff\n    $navbuttons = array(\n                            \"AccountInfo-tab\" => t('title','AccountInfo'),\n                            \"UserInfo-tab\" => t('title','UserInfo'),\n                            \"BillingInfo-tab\" => t('title','BillingInfo'),\n                            \"Advanced-tab\" => t('title','Advanced'),\n                       );\n\n    print_tab_navbuttons($navbuttons);\n\n    include_once('include/management/actionMessages.php');\n    \n    include_once('include/management/populate_selectbox.php');\n    \n    $input_descriptors = array();\n    \n    $input_descriptors[] = array(\n                                    \"id\" => \"username\",\n                                    \"name\" => \"username\",\n                                    \"caption\" => t('all','Username'),\n                                    \"type\" => \"text\",\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                 );\n                                \n    $input_descriptors[] = array(\n                                    \"id\" => \"password\",\n                                    \"name\" => \"password\",\n                                    \"caption\" => t('all','Password'),\n                                    \"type\" => $hiddenPassword,\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                );\n    \n?>\n\n<form method=\"POST\">\n    <div class=\"tabber\">\n        <div class=\"tabcontent\" id=\"AccountInfo-tab\" style=\"display: block\">\n            <fieldset>\n\n                <h302><?= t('title','AccountInfo') ?></h302>\n\n                <ul>\n<?php\n                    foreach ($input_descriptors as $input_descriptor) {\n                        print_form_component($input_descriptor);\n                    }\n?>\n\n\n\n                    <li class='fieldset'>\n                    <label for='planName' class='form'><?= t('all','PlanName') ?></label>\n                            <?php\n                                   populate_plans(\"Select Plan\",\"planName\",\"form\");\n                            ?>\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('planNameTooltip')\" /> \n                    \n                    <div id='planNameTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                        <img src='images/icons/comment.png' alt='Tip' border='0' />\n                        <?= t('Tooltip','planNameTooltip') ?>\n                    </div>\n                    </li>\n    \n\n                    <li class='fieldset'>\n                    <label for='profile' class='form'><?= t('all','Profile')?></label>\n                    <?php\n                            populate_groups(\"Select Profile\",\"profiles[]\");\n                    ?>\n\n                    <a class='tablenovisit' href='#'\n                            onClick=\"javascript:ajaxGeneric('include/management/dynamic_groups.php','getGroups','divContainerProfiles',genericCounter('divCounter')+'&elemName=profiles[]');\">Add</a>\n\n                    <img src='images/icons/comment.png' alt='Tip' border='0' onClick=\"javascript:toggleShowDiv('groupTooltip')\" />\n\n                    <div id='divContainerProfiles'>\n                    </div>\n\n                    <div id='groupTooltip'  style='display:none;visibility:visible' class='ToolTip'>\n                            <img src='images/icons/comment.png' alt='Tip' border='0' />\n                            <?= t('Tooltip','groupTooltip') ?>\n                    </div>\n                    </li>\n\n        <li class='fieldset'>\n        <label for='userupdate' class='form'><?= t('all','SendWelcomeNotification')?></label>\n        <input type='checkbox' class='form' name='notificationWelcome' value='1' checked/>\n            <br/>\n        </li>\n\n\n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n\n    </fieldset>\n\n    </div>\n\n\n        <div class=\"tabcontent\" id=\"UserInfo-tab\">\n        <?php\n                $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n                include_once('include/management/userinfo.php');\n        ?>\n        </div>\n\n        <div class=\"tabcontent\" id=\"BillingInfo-tab\">\n        <?php\n                $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n                include_once('include/management/userbillinfo.php');\n        ?>\n        </div>\n\n\n     <div class=\"tabcontent\" id=\"Advanced-tab\">\n\n        <fieldset>\n\n                <h302> <?= t('title','AccountInfo'); ?> </h302>\n\n                <ul>\n\n                <li class='fieldset'>\n                <label for='passwordType' class='form'><?= t('all','PasswordType')?> </label>\n                <select class='form' tabindex=102 name='passwordType' >\n                        <option value='Cleartext-Password'>Cleartext-Password</option>\n                        <option value='User-Password'>User-Password</option>\n                        <option value='Crypt-Password'>Crypt-Password</option>\n                        <option value='MD5-Password'>MD5-Password</option>\n                        <option value='SHA1-Password'>SHA1-Password</option>\n                        <option value='CHAP-Password'>CHAP-Password</option>\n                </select>\n                </li>\n\n        <li class='fieldset'>\n        <br/>\n        <hr><br/>\n        <input type='submit' name='submit' value='<?= t('buttons','apply') ?>' tabindex=10000 class='button' />\n        </li>\n\n        </ul>\n\n    </fieldset>\n\n    </div>\n\n</div>\n\n    </form>\n\n<?php\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    //setting values for the order by and order type variables\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $ratename = (array_key_exists('ratename', $_GET) && isset($_GET['ratename']))\n              ? trim(str_replace(\"%\", \"\", $_GET['ratename'])) : \"\";\n    $ratename_enc = (!empty($ratename)) ? htmlspecialchars($ratename, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n              ? trim(str_replace(\"%\", \"\", $_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // in other cases we just check that syntax is ok\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    //feed the sidebar variables\n    $billing_date_ratename = $ratename;\n    $billing_date_username = $username;\n    $billing_date_startdate = $startdate;\n    $billing_date_enddate = $enddate;\n\n    \n    // print HTML prologue\n    $extra_css = array();\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','billratesdate.php');\n    $help = t('helpPage','billratesdate');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n\n    include(\"menu-bill-rates.php\");\n    \n    $cols = array(\n                    \"username\" => t('all','Username'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                    \"acctstarttime\" => t('all','LastLoginTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    t('all','Billed')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n    \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n    }\n\n    if (!empty($ratename)) {\n        $sql_WHERE[] = sprintf(\"ratename='%s'\", $dbSocket->escapeSimple($ratename));\n        $partial_query_params[] = sprintf(\"ratename=%s\", urlencode($ratename_enc));\n        \n\n        include 'library/opendb.php';\n        include 'include/management/pages_common.php';\n        include 'include/management/pages_numbering.php';        // must be included after opendb because it needs to read the CONFIG_IFACE_TABLES_LISTING variable from the config file\n\n        // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n        $username = $dbSocket->escapeSimple($username);\n        $startdate = $dbSocket->escapeSimple($startdate);\n        $enddate = $dbSocket->escapeSimple($enddate);\n        $ratename = $dbSocket->escapeSimple($ratename);\n\n        include_once('include/management/userBilling.php');\n        userBillingRatesSummary($username, $startdate, $enddate, $ratename, 1);                // draw the billing rates summary table\n\n\n        include 'library/opendb.php';\n\n        // get rate type\n        $sql = sprintf(\"SELECT rateType FROM %s WHERE rateName = '%s'\", $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'], $ratename);\n        $res = $dbSocket->query($sql);\n\n        if ($res->numRows() == 0) {\n            $failureMsg = \"Rate was not found in database, check again please\";\n        } else {\n\n            $row = $res->fetchRow();\n            list($ratetypenum, $ratetypetime) = explode(\"/\", $row[0]);\n\n            switch ($ratetypetime) {                  // we need to translate any kind of time into seconds,\n                                                      // so a minute is 60 seconds, an hour is 3600,\n                case \"second\":                        // and so on...\n                    $multiplicate = 1;\n                    break;\n                case \"minute\":\n                    $multiplicate = 60;\n                    break;\n                case \"hour\":\n                    $multiplicate = 3600;\n                    break;\n                case \"day\":\n                    $multiplicate = 86400;\n                    break;\n                case \"week\":\n                    $multiplicate = 604800;\n                    break;\n                case \"month\":\n                    $multiplicate = 187488000;        // a month is 31 days\n                    break;\n                default:\n                    $multiplicate = 0;\n                    break;\n            }\n\n            // then the rate cost would be the amount of seconds times the prefix multiplicator thus:\n            $rateDivisor = $ratetypenum * $multiplicate;\n        }\n\n        $sql = sprintf(\"SELECT DISTINCT(ra.username), ra.NASIPAddress, ra.AcctStartTime, ra.AcctSessionTime, dbr.rateCost\n                          FROM %s AS ra, %s AS dbr WHERE dbr.rateName='%s' \",\n                       $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'], $ratename);\n\n        if (count($sql_WHERE) > 0) {\n            $sql .= implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $numrows = $res->numRows();\n\n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n            $per_page_numrows = $res->numRows();\n\n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n                echo '</td>';\n            }\n?>\n            </tr>\n            \n            <tr>\n<?php\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n\n<?php\n\n            $sumBilled = 0;\n            $sumSession = 0;\n\n            $td_format = \"<td>%s</td>\";\n\n            while($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n\n                $sessionTime = $row[3];\n                $rateCost = $row[4];\n                $billed = ($sessionTime/$rateDivisor) * $rateCost;\n                $sumBilled += $billed;\n                $sumSession += $sessionTime;\n\n                echo \"<tr>\";\n                printf($td_format, $row[0]);\n                printf($td_format, $row[1]);\n                printf($td_format, $row[2]);\n                printf($td_format, time2str($row[3]));\n                printf($td_format, number_format($billed, 2));\n                echo \"</tr>\";\n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n    \n        } else {\n            $failureMsg = \"No entries retrieved\";\n        }\n        \n    } else {\n        $failureMsg = \"Rate name is required\";\n        \n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n\n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    $log = \"visited page: \";\n    \n    $db_tbl_param_label = array(\n                                    'CONFIG_DB_TBL_RADCHECK' => t('all','radcheck'), \n                                    'CONFIG_DB_TBL_RADREPLY' => t('all','radreply'),\n                                    'CONFIG_DB_TBL_RADGROUPREPLY' => t('all','radgroupreply'), \n                                    'CONFIG_DB_TBL_RADGROUPCHECK' => t('all','radgroupcheck'), \n                                    'CONFIG_DB_TBL_RADUSERGROUP' => t('all','usergroup'), \n                                    'CONFIG_DB_TBL_RADACCT' => t('all','radacct'), \n                                    'CONFIG_DB_TBL_RADNAS' => t('all','nas'),\n                                    'CONFIG_DB_TBL_RADHG' => t('all','hunt'), \n                                    'CONFIG_DB_TBL_RADPOSTAUTH' => t('all','radpostauth'), \n                                    'CONFIG_DB_TBL_RADIPPOOL' => t('all','radippool'), \n                                    'CONFIG_DB_TBL_DALOUSERINFO' => t('all','userinfo'), \n                                    'CONFIG_DB_TBL_DALODICTIONARY' => t('all','dictionary'), \n                                    'CONFIG_DB_TBL_DALOREALMS' => t('all','realms'), \n                                    'CONFIG_DB_TBL_DALOPROXYS' => t('all','proxys'), \n                                    'CONFIG_DB_TBL_DALOBILLINGMERCHANT' => t('all','billingmerchant'), \n                                    'CONFIG_DB_TBL_DALOBILLINGPAYPAL' => t('all','billingpaypal'), \n                                    'CONFIG_DB_TBL_DALOBILLINGPLANS' => t('all','billingplans'), \n                                    'CONFIG_DB_TBL_DALOBILLINGRATES' => t('all','billingrates'), \n                                    'CONFIG_DB_TBL_DALOBILLINGHISTORY' => t('all','billinghistory'), \n                                    'CONFIG_DB_TBL_DALOUSERBILLINFO' => t('all','billinginfo'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICE' => t('all','Invoice'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS' => t('all','InvoiceItems'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICESTATUS' => t('all','InvoiceStatus'), \n                                    'CONFIG_DB_TBL_DALOBILLINGINVOICETYPE' => t('all','InvoiceType'), \n                                    'CONFIG_DB_TBL_DALOPAYMENTTYPES' => t('all','payment_type'), \n                                    'CONFIG_DB_TBL_DALOPAYMENTS' => t('all','payments'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS' => t('all','operators'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS_ACL' => t('all','operators_acl'), \n                                    'CONFIG_DB_TBL_DALOOPERATORS_ACL_FILES' => t('all','operators_acl_files'), \n                                    'CONFIG_DB_TBL_DALOHOTSPOTS' => t('all','hotspots'), \n                                    'CONFIG_DB_TBL_DALONODE' => t('all','node'), \n                                );\n    \n    $generic_db_conf_params = array(\n                                        'CONFIG_DB_HOST' => t('all','DatabaseHostname'),\n                                        'CONFIG_DB_USER' => t('all','DatabaseUser'),\n                                        'CONFIG_DB_PASS' => t('all','DatabasePass'),\n                                        'CONFIG_DB_NAME' => t('all','DatabaseName'),\n                                   );\n    \n    $tbl_name_regex = '^[a-zA-Z0-9_]+$';\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // if the form has been submitted we validate and store the configuration\n            if (array_key_exists('CONFIG_DB_ENGINE', $_POST) && isset($_POST['CONFIG_DB_ENGINE']) &&\n                in_array(strtolower($_POST['CONFIG_DB_ENGINE']), array_keys($valid_db_engines))) {\n                $configValues['CONFIG_DB_ENGINE'] = $_POST['CONFIG_DB_ENGINE']; \n            }\n        \n            if (array_key_exists('CONFIG_DB_PORT', $_POST) && isset($_POST['CONFIG_DB_PORT']) &&\n                intval($_POST['CONFIG_DB_PORT']) >= 0 && intval($_POST['CONFIG_DB_PORT']) <= 65535) {\n                $configValues['CONFIG_DB_PORT'] = intval($_POST['CONFIG_DB_PORT']);\n            }\n\n            foreach ($generic_db_conf_params as $param => $caption) {\n                if (array_key_exists($param, $_POST) && isset($_POST[$param])) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n\n            // validate table name\n            foreach ($db_tbl_param_label as $param => $label) {\n                if (array_key_exists($param, $_POST) && isset($_POST[$param]) && preg_match($tbl_name_regex, $_POST[$param]) !== false) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n\n            include(\"library/config_write.php\");\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n    \n    \n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','configmain.php');\n    $help = t('helpPage','configmain');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-config.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    \n    $submit_descriptor = array(\n                                \"type\" => \"submit\",\n                                \"name\" => \"submit\",\n                                \"value\" => t('buttons','apply')\n                              );\n    \n    // first tab\n    $input_descriptors1 = array();\n    \n    $input_descriptors1[] = array(\n                                        \"name\" => \"CONFIG_DB_ENGINE\",\n                                        \"caption\" => t('all','DBEngine'),\n                                        \"selected_value\" => $configValues['CONFIG_DB_ENGINE'],\n                                        \"type\" => \"select\",\n                                        \"options\" => $valid_db_engines,\n                                     );\n    \n    $input_descriptors1[] = array(\n                                        \"name\" => \"CONFIG_DB_PORT\",\n                                        \"caption\" => t('all','DatabasePort'),\n                                        \"value\" => $configValues['CONFIG_DB_PORT'],\n                                        \"type\" => \"number\",\n                                        \"min\" => \"0\",\n                                        \"max\" => \"65535\",\n                                     );\n    \n    foreach ($generic_db_conf_params as $name => $caption) {\n        $input_descriptors1[] = array(\n                                        \"name\" => $name,\n                                        \"caption\" => $caption,\n                                        \"value\" => $configValues[$name],\n                                        \"type\" => \"text\"\n                                     );\n    }\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = $submit_descriptor;\n\n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Settings'),\n                                 );\n\n    // second tab\n    $input_descriptors2 = array();\n    foreach ($db_tbl_param_label as $name => $caption) {\n        $input_descriptors2[] = array(\n                                        \"name\" => $name,\n                                        \"caption\" => $caption,\n                                        \"value\" => $configValues[$name],\n                                        \"pattern\" => $tbl_name_regex,\n                                        \"type\" => \"text\"\n                                     );\n    }\n    \n    $input_descriptors2[] = $submit_descriptor;\n    \n    $fieldset2_descriptor = array(\n                                    \"title\" => t('title','DatabaseTables'),\n                                 );\n    \n    // set navbar stuff\n    $navkeys = array( 'Settings', 'DatabaseTables' );\n\n    // print navbar controls\n    print_tab_header($navkeys);\n\n    // open form\n    open_form();\n    \n    // open first tab (shown)\n    open_tab($navkeys, 0, true);\n    \n    open_fieldset($fieldset1_descriptor);\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab();\n    \n    // open second tab (hidden)\n    open_tab($navkeys, 1);\n    \n    open_fieldset($fieldset2_descriptor);\n\n    foreach ($input_descriptors2 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab();\n    \n    close_form();\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    $log = \"visited page: \";\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            if (array_key_exists('CONFIG_LANG', $_POST) && !empty(strtolower(trim($_POST['CONFIG_LANG']))) &&\n                in_array(strtolower(trim($_POST['CONFIG_LANG'])), array_keys($valid_languages))) {\n                \n                $configValues['CONFIG_LANG'] = $_POST['CONFIG_LANG'];\n                include(\"library/config_write.php\");\n            }\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    \n    // print HTML prologue\n    $title = t('Intro','configlang.php');\n    $help = t('helpPage','configlang');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    $input_descriptors1 = array();\n    \n    $input_descriptors1[] = array(\n                                    'name' => 'CONFIG_LANG',\n                                    'type' => 'select',\n                                    'caption' => t('all','PrimaryLanguage'),\n                                    'options' => $valid_languages,\n                                    'selected_value' => $configValues['CONFIG_LANG']\n                                 );\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                 );\n                                 \n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Settings'),\n                                 );\n\n    open_form();\n    \n    open_fieldset($fieldset1_descriptor);\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n   \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','configmain.php');\n    $help = t('helpPage','configmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config-reports.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    \n    if (array_key_exists('submit', $_POST) && isset($_POST['submit'])) {\n        $myfile = \"library/googlemaps.php\";\n        \n        $default_failureMsg = sprintf(\"Error: could not open the file for reading or writing: <strong>%s</strong>\", $myfile)\n                            . \"<br>Check file permissions. The file should be readable and writable by the webserver's user/group\";\n        \n        \n        if (array_key_exists('code', $_POST) && isset($_POST['code']) &&\n            preg_match('/[a-zA-Z0-9_-]+/', $_POST['code']) !== false) {\n        \n            \n            \n            if (is_readable($myfile) && is_writable($myfile)) {\n                $old_contents = file_get_contents($myfile);\n                $replacement = sprintf('<script src=\"//maps.google.com/maps?file=api&v=3&key=%s\"></script>', $_POST['code']);\n                $new_contents = preg_replace('/<script.*<\\/script>/si', $replacement, $old_contents);\n                \n                if ($new_contents !== $old_contents) {\n                    if (file_put_contents($myfile, $new_contents) !== false) {\n                        $successMsg = \"Successfully updated GoogleMaps API Registration code\";\n                    } else {\n                        $failureMsg = $default_failureMsg;\n                    }\n                }\n\n            } else {\n                $failureMsg = $default_failureMsg;\n            }\n        }\n    }\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','gismain.php');\n    $help = t('helpPage','gismain');\n\n    print_html_prologue($title, $langCode);\n    \n    include (\"menu-gis.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','graphmain.php');\n    $help = t('helpPage','graphmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-graphs.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = \"Help\";\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-help.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n?>\n\n            <p>\n                One of several communication mediums available at your disposal:<br/><br/>\n\n                <b>daloRADIUS website</b>: <a href=\"http://www.daloradius.com\">daloRADIUS blog</a><br/><br/>\n                <b>daloRADIUS Project at GitHub</b>: <a href=\"https://github.com/lirantal/daloradius\">GitHub project</a><br/>\n                At GitHub you may find the trackers for submitting tickets for support, bugs or features for next releases.<br/>\n                The official daloRADIUS package is available at\n                GitHub as well.<br/><br/>\n                <b>daloRADIUS Project at SourceForge</b>: <a href=\"http://sourceforge.net/projects/daloradius/\">SourceForge project</a><br/>\n                Forums and the mailing list archive to review and search for issues.<br/>\n                The daloRADIUS packages here are old, use the GitHub ones instead.<br/><br/>\n                <b>daloRADIUS Mailing List</b>: Email to daloradius-users@lists.sourceforge.net, though registration to the mailing list<br/>\n                is required first <a href=\"https://lists.sourceforge.net/lists/listinfo/daloradius-users\">here</a><br/><br/>\n\n                <b>daloRADIUS IRC</b>: you can find us at #daloradius on irc.freenode.net\n            </p>\n\n<?php\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Description:    returns user billing information (rates, plans, etc)\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/include/management/userBilling.php') !== false) {\n    header(\"Location: ../../index.php\");\n    exit;\n}\n\n\n/*\n *********************************************************************************************************\n * userInvoiceAdd\n * general billing function to add invoices to the user based on the user_id\n *\n * $userId                    the userbillinfo user id or the username (autodetects)\n * $invoiceInfo            array holding the invoice information\n * $invoiceItems           array holding the invoice items information\n *\n *********************************************************************************************************\n */\nfunction userInvoiceAdd($userId, $invoiceInfo = array(), $invoiceItems = array()) {\n\n    include(dirname(__FILE__).'/../../library/opendb.php');\n\n    $user_id = false;\n\n    // if provided a numeric user id then this is the user_id that we need\n    if (is_numeric($userId)) {\n        $user_id = $dbSocket->escapeSimple($userId);            // sanitize variable for sql statement\n    } else {\n        // otherwise this is the username and we need to look up the user id from the userbillinfo table\n\n        $username = $dbSocket->escapeSimple($userId);\n        $sql = 'SELECT id FROM '.$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\n                ' WHERE username=\"'.$username.'\"';\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= $sql . \"\\n\";\n\n        $row = $res->fetchRow();\n        $user_id = $row[0];\n\n    }\n\n    // if something is not right with the user id (set to null, false, whatever) we abort\n    if (!$user_id)\n        return false;\n\n\n    $currDate = date('Y-m-d H:i:s');\n    $currBy = $_SESSION['operator_user'];\n\n    if (!$invoiceInfo)\n        $invoiceInfo = array();\n\n    // create default invoice information if nothing was provided\n    $myinvoiceInfo['date'] = $currDate;\n    $myinvoiceInfo['status_id'] = 1;             // defaults to invoice status of 'open'\n    $myinvoiceInfo['type_id'] = 1;             // defaults to invoice type of 'Plans'\n    $myinvoiceInfo['notes'] = 'provisioned new user from daloRADIUS platform';\n    $invoiceInfo = array_merge($myinvoiceInfo, $invoiceInfo);\n\n\n    $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\n            \" (id, user_id, date, status_id, type_id, notes, creationdate, creationby, updatedate, updateby) \".\n            \" VALUES (0, '\".$user_id.\"', '\".\n            $dbSocket->escapeSimple($invoiceInfo['date']).\"', '\".\n            $dbSocket->escapeSimple($invoiceInfo['status_id']).\"', '\".\n            $dbSocket->escapeSimple($invoiceInfo['type_id']).\"', '\".\n            $dbSocket->escapeSimple($invoiceInfo['notes']).\"', \".\n            \" '$currDate', '$currBy', NULL, NULL)\";\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= $sql . \"\\n\";\n\n    // if there hasn't been any errors with inserting the invoice record\n    if (!PEAR::isError($res)) {\n\n        // get the added invoice id from the database\n        $invoice_id = $dbSocket->getOne( \"SELECT LAST_INSERT_ID() FROM `\".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\"`\" );\n\n        if (!$invoice_id)\n            return false;\n\n        foreach($invoiceItems as $invoiceItem) {\n            // set default information for the invoice items\n            /*\n            $myinvoiceItems['plan_id'] = '' ;\n            $myinvoiceItems['amount'] = '' ;\n            $myinvoiceItems['tax'] = '' ;\n            $myinvoiceItems['notes'] = '' ;\n            $invoiceItems = array_merge($myinvoiceItems, $invoiceItems);\n            */\n\n            // now add an invoice item\n            $sql = \"INSERT INTO \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS'].\n                \" (id, invoice_id, plan_id, amount, tax_amount, notes, \".\n                \" creationdate, creationby, updatedate, updateby) \".\n                \" VALUES (0, '\".$invoice_id.\"', '\".\n                $dbSocket->escapeSimple($invoiceItem['plan_id']).\"', '\".\n                $dbSocket->escapeSimple($invoiceItem['amount']).\"', '\".\n                $dbSocket->escapeSimple($invoiceItem['tax']).\"', '\".\n                $dbSocket->escapeSimple($invoiceItem['notes']).\"', \".\n                \" '$currDate', '$currBy', NULL, NULL)\";\n\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n\n        }\n\n    }\n\n\n\n    include(dirname(__FILE__).'/../../library/closedb.php');\n\n    return true;\n\n}\n\n\n/*\n *********************************************************************************************************\n * userInvoicesStatus\n * $username            username to provide information of\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user invoices status: total invoices, partial, completed, due invoices, due amount\n *\n *********************************************************************************************************\n */\nfunction userInvoicesStatus($user_id, $drawTable) {\n\n    include_once('include/management/pages_common.php');\n    include 'library/opendb.php';\n\n    $user_id = $dbSocket->escapeSimple($user_id);            // sanitize variable for sql statement\n\n    $sql = \"SELECT COUNT(distinct(a.id)) AS TotalInvoices, a.id, a.date, a.status_id, a.type_id, b.contactperson, b.username, \".\n            \" c.value AS status, COALESCE(SUM(e2.totalpayed), 0) as totalpayed, COALESCE(SUM(d2.totalbilled), 0) as totalbilled, \".\n            \" SUM(a.status_id = 1) as openInvoices \".\n            \" FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICE'].\" AS a\".\n            \" INNER JOIN \".$configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'].\" AS b ON (a.user_id = b.id) \".\n            \" INNER JOIN \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICESTATUS'].\" AS c ON (a.status_id = c.id) \".\n            \" LEFT JOIN (SELECT SUM(d.amount + d.tax_amount) \".\n                    \" as totalbilled, invoice_id FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGINVOICEITEMS'].\" AS d \".\n            \" GROUP BY d.invoice_id) AS d2 ON (d2.invoice_id = a.id) \".\n            \" LEFT JOIN (SELECT SUM(e.amount) as totalpayed, invoice_id FROM \".\n            $configValues['CONFIG_DB_TBL_DALOPAYMENTS'].\" AS e GROUP BY e.invoice_id) AS e2 ON (e2.invoice_id = a.id) \".\n            \" WHERE (a.user_id = $user_id)\".\n            \" GROUP BY b.id \";\n\n    $res = $dbSocket->query($sql);\n    $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n    $totalInvoices = $row['TotalInvoices'];\n    $totalBilled = $row['totalbilled'];\n    $totalPayed = $row['totalpayed'];\n    $openInvoices = $row['openInvoices'];\n\n    include 'library/closedb.php';\n\n    if ($drawTable == 1) {\n        echo '\n                <fieldset>\n\n                <h302> User Invoices </h302>\n                <br/>\n\n                <ul>\n\n                    <input class=\"button\" type=\"button\" value=\"New Invoice\"\n                        onClick=\"javascript:window.location = \\'bill-invoice-new.php?user_id='.$user_id.'\\';\" />\n\n                    <input class=\"button\" type=\"button\" value=\"Show Invoices\"\n                        onClick=\"javascript:window.location = \\'bill-invoice-list.php?user_id='.$user_id.'\\';\" />\n\n                    <input class=\"button\" type=\"button\" value=\"Show Payments\"\n                        onClick=\"javascript:window.location = \\'bill-payments-list.php?user_id='.$user_id.'\\';\" />\n\n                    <br/><br/>\n\n                    <li class=\"fieldset\">\n                        <label for=\"totalInvoices\" class=\"form\">Total Invoices</label>\n                        <input type=\"text\" value=\"'.$totalInvoices.'\" disabled />\n                    </li>\n\n                    <li class=\"fieldset\">\n                        <label for=\"totalbilled\" class=\"form\">Open Invoices</label>\n                        <input type=\"text\" value=\"'.$openInvoices.'\" disabled />\n                    </li>\n\n                    <br/>\n\n                    <li class=\"fieldset\">\n                        <label for=\"totalbilled\" class=\"form\">Total Billed</label>\n                        <input type=\"text\" value=\"'.$totalBilled.'\" disabled />\n                    </li>\n\n                    <li class=\"fieldset\">\n                        <label for=\"totalbilled\" class=\"form\">Total Payed</label>\n                        <input type=\"text\" value=\"'.$totalPayed.'\" disabled />\n                    </li>\n\n                    <li class=\"fieldset\">\n                        <label for=\"totalbilled\" class=\"form\">Balance</label>\n                        <input type=\"text\" value=\"'.($totalPayed - $totalBilled).'\" disabled />\n                    </li>\n\n\n                    <li class=\"fieldset\">\n                    <br/>\n                    <hr><br/>\n                    <input type=\"submit\" name=\"submit\" value=\"Apply\" tabindex=10000 class=\"button\" />\n                    </li>\n\n            </ul>\n\n            </fieldset>\n\n            ';\n\n    }\n\n\n}\n\n\n/*\n *********************************************************************************************************\n * userBillingRatesSummary\n * $username            username to provide information of\n * $startdate        starting date, first accounting session\n * $enddate        ending date, last accounting session\n * $ratename        the rate to use for calculations\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user connection information: uploads, download, session time, total billed, etc...\n *\n *********************************************************************************************************\n */\nfunction userBillingRatesSummary($username, $startdate, $enddate, $ratename, $drawTable) {\n\n    include_once('include/management/pages_common.php');\n    include 'library/opendb.php';\n\n    $username = $dbSocket->escapeSimple($username);            // sanitize variable for sql statement\n    $startdate = $dbSocket->escapeSimple($startdate);\n    $enddate = $dbSocket->escapeSimple($enddate);\n    $ratename = $dbSocket->escapeSimple($ratename);\n\n    // get rate type\n    $sql = \"SELECT rateType FROM \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\" WHERE \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateName = '$ratename'\";\n    $res = $dbSocket->query($sql);\n\n    if ($res->numRows() == 0)\n        return;\n\n        $row = $res->fetchRow();\n        list($ratetypenum, $ratetypetime) = explode(\"/\",$row[0]);\n\n        switch ($ratetypetime) {                                        // we need to translate any kind of time into seconds, so a minute is 60 seconds, an hour is 3600,\n                case \"second\":                                          // and so on...\n                        $multiplicate = 1;\n                        break;\n                case \"minute\":\n                        $multiplicate = 60;\n                        break;\n                case \"hour\":\n                        $multiplicate = 3600;\n                        break;\n                case \"day\":\n                        $multiplicate = 86400;\n                        break;\n                case \"week\":\n                        $multiplicate = 604800;\n                        break;\n                case \"month\":\n                        $multiplicate = 187488000;                      // a month is 31 days\n                        break;\n                default:\n                        $multiplicate = 0;\n                        break;\n        }\n\n        // then the rate cost would be the amount of seconds times the prefix multiplicator thus:\n        $rateDivisor = ($ratetypenum * $multiplicate);\n\n        $sql = \"SELECT distinct(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".username), \".$configValues['CONFIG_DB_TBL_RADACCT'].\".NASIPAddress, \".\n                $configValues['CONFIG_DB_TBL_RADACCT'].\".AcctStartTime, SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctSessionTime) AS AcctSessionTime, \".\n                $configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateCost, SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctInputOctets) AS AcctInputOctets, \".\n        \" SUM(\".$configValues['CONFIG_DB_TBL_RADACCT'].\".AcctOutputOctets) AS AcctOutputOctets \".\n                \" FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\", \".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\" WHERE (AcctStartTime >= '$startdate') and (AcctStartTime <= '$enddate') and (UserName = '$username') and (\".$configValues['CONFIG_DB_TBL_DALOBILLINGRATES'].\".rateName = '$ratename') GROUP BY UserName\";\n    $res = $dbSocket->query($sql);\n    $row = $res->fetchRow(DB_FETCHMODE_ASSOC);\n\n    $rateCost = $row['rateCost'];\n    $userUpload = toxbyte($row['AcctInputOctets']);\n    $userDownload = toxbyte($row['AcctOutputOctets']);\n    $userOnlineTime = time2str($row['AcctSessionTime']);\n    $sessionTime = $row['AcctSessionTime'];\n\n    $sumBilled = (($sessionTime/$rateDivisor)*$rateCost);\n\n        include 'library/closedb.php';\n\n        if ($drawTable == 1) {\n\n                echo \"<table border='0' class='table1'>\";\n                echo \"\n                <thead>\n                    <tr>\n                            <th colspan='10' align='left'>\n                        <a class=\\\"table\\\" href=\\\"javascript:toggleShowDiv('divBillingRatesSummary')\\\">Billing Summary</a>\n                            </th>\n                            </tr>\n                </thead>\n                </table>\n            \";\n\n                echo \"\n                        <div id='divBillingRatesSummary' style='display:none;visibility:visible'>\n                       <table border='0' class='table1'>\n                <thread>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Username\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $username\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Billing for period of\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $startdate until $enddate (inclusive)\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Online Time\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userOnlineTime\n                        </th>\n                        </tr>\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Upload\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userUpload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        User Download\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $userDownload\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Rate Name\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $ratename\n                        </th>\n                        </tr>\n\n\n                        <tr>\n                        <th scope='col' align='right'>\n                        Total Billed\n                        </th>\n\n                        <th scope='col' align='left'>\n                        $sumBilled\n                        </th>\n                        </tr>\n\n                        </table>\n\n                </div>\n            \";\n\n    }\n\n\n}\n\n\n/*\n *********************************************************************************************************\n * userBillingPayPalSummary\n * $startdate        starting date, first accounting session\n * $enddate        ending date, last accounting session\n * $drawTable           if set to 1 (enabled) a toggled on/off table will be drawn\n *\n * returns user connection information: uploads, download, session time, total billed, etc...\n *\n *********************************************************************************************************\n */\nfunction userBillingPayPalSummary($startdate, $enddate, $payer_email, $payment_address_status,\n                                  $payer_status, $payment_status, $vendor_type, $drawTable) {\n    global $logDebugSQL;\n    \n    include('library/opendb.php');\n\n    $sql_WHERE = array();\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"payment_date > '%s'\", $dbSocket->escapeSimple($startdate));\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"payment_date < '%s'\", $dbSocket->escapeSimple($enddate));\n    }\n    \n    if (!empty($payer_email)) {\n        $sql_WHERE[] = sprintf(\"payer_email LIKE '%s%%'\", $dbSocket->escapeSimple($payer_email));\n    }\n    \n    if (!empty($payment_status)) {\n        $sql_WHERE[] = sprintf(\"payment_status='%s'\", $dbSocket->escapeSimple($payment_status));\n    }\n    \n    if (!empty($vendor_type)) {\n        $sql_WHERE[] = sprintf(\"vendor_type='%s'\", $dbSocket->escapeSimple($vendor_type));\n    }\n    \n    if (!empty($payment_address_status)) {\n        $sql_WHERE[] = sprintf(\"payment_address_status='%s'\", $dbSocket->escapeSimple($payment_address_status));\n    }\n    \n    if (!empty($payer_status)) {\n        $sql_WHERE[] = sprintf(\"payer_status='%s'\", $dbSocket->escapeSimple($payer_status));\n    }\n\n    $sql = sprintf(\"SELECT dbm.Username AS Username, business_email, dbp.planName, dbm.planId, SUM(payment_total) AS total,\n                           SUM(payment_fee) AS fee, SUM(payment_tax) AS tax, payment_currency,\n                           SUM(AcctSessionTime) AS AcctSessionTime, SUM(AcctInputOctets) AS AcctInputOctets,\n                           SUM(AcctOutputOctets) AS AcctOutputOctets\n                      FROM %s AS dbm LEFT JOIN %s AS ra ON dbm.Username = ra.Username\n                                     LEFT JOIN %s AS dbp ON dbm.planId = dbp.id\", $configValues['CONFIG_DB_TBL_DALOBILLINGMERCHANT'],\n                                                                                  $configValues['CONFIG_DB_TBL_RADACCT'],\n                                                                                  $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS']);\n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        \n    }\n    \n    $sql .= \" GROUP BY Username\";\n    $logDebugSQL .= \"$sql;\\n\";\n    $res = $dbSocket->query($sql);\n\n    if ($res->numRows() > 0 && $drawTable == 1) {\n        \n        include_once('include/management/pages_common.php');\n        \n        $row = $res->fetchRow();\n        \n        for ($i=0; $i < count($row); $i++) {\n            $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n        }\n        \n        list( $username, $payer_email, $planName, $planId, $planTotalCost, $planTotalFee, $planTotalTax,\n              $planCurrency, $sessionTime, $userUpload, $userDownload ) = $row;\n        \n        $grossGain = $planTotalCost - ($planTotalTax + $planTotalFee);\n        \n        $userUpload = toxbyte($userUpload);\n        $userDownload = toxbyte($userDownload);\n        $userOnlineTime = time2str($sessionTime);\n\n    \n        $table = array(\n                        array( \"Username\", \"$username (email: $payer_email)\" ),\n                        array( \"Billing for period of\", \"$startdate until $enddate (inclusive)\" ),\n                        array( \"Online Time\", $userOnlineTime ),\n                        array( \"User Upload\", $userUpload ),\n                        array( \"User Download\", $userDownload ),\n                        array( \"Plan name\", \"$planName (planId: $planId)\" ),\n                        array( \"Total Plans Cost <br/> Total Transaction Fees <br/> Total Transaction Taxs\",\n                               \"$planTotalCost <br/> $planTotalFee <br/> $planTotalTax\" ),\n                        array( \"Gross Gain\", \"$grossGain $planCurrency\" )\n                      );\n\n        echo '<table style=\"border: 0\" class=\"table1\">'\n           . '<thead>'\n           . '<tr>'\n           . '<th colspan=\"10\" align=\"left\">';\n        \n        printf('<a class=\"table\" href=\"%s\">Billing Summary</a>', \"toggleShowDiv('divBillingPayPalSummary')\");\n        \n        echo '</th>'\n           . '</tr>'\n           . '</thead>'\n           . '</table>';\n\n\n        echo '<div id=\"divBillingPayPalSummary\" style=\"display:none; visibility:visible\">'\n           . '<table style=\"border:0\" class=\"table1\">';\n        \n        foreach ($table as $tr) {\n            list($td1, $td2) = $tr;\n            \n            echo \"<tr>\";\n            printf('<th scope=\"col\" align=\"right\">%s</th>', $td1);\n            printf('<th scope=\"col\" align=\"left\">%s</th>', $td2);\n            echo \"</tr>\";\n        }\n        \n        echo '</table>'\n           . '</div>';\n\n    }\n    \n    include('library/closedb.php');\n\n}\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/validation.php') !== false) {\n    header('Location: ../index.php');\n    exit;\n}\n\n// commonly used regexes collection\ndefine(\"DATE_REGEX\", '/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/');\ndefine(\"ORDER_TYPE_REGEX\", '/^(de|a)sc$/');\ndefine(\"IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9]).){3}((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])$/');\ndefine(\"NETMASK_LENGTH_REGEX\", '/^3[0-2]|[1-2][0-9]|[1-9]$/');\ndefine(\"MACADDR_REGEX\", '/^(?:[0-9A-Fa-f]{2}([-:]))(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}$/');\ndefine(\"PINCODE_REGEX\", '/^[a-zA-Z0-9]+$/');\n\n// this regex allows input like (e.g.) 127, 127., 127.0, 127.0., 127.0.0, 127.0.0 and 127.0.0.1\ndefine(\"LOOSE_IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])\\.?){1,4}$/');\n\ndefine(\"ALL_PRINTABLE_CHARS_REGEX\", '/^[ -~]+$/');\n\n// some parameters can be validated using a whitelist.\n// here we collect some useful whitelist.\n// this lists can be also used for presentation purpose.\n// whitelists naming convention:\n// $valid_ [param_name] s\n$valid_authTypes = array( \n                            \"userAuth\" => \"Based on username and password\",\n                            \"macAuth\" => \"Based on MAC address\",\n                            \"pincodeAuth\" => \"Based on PIN code\"\n                        );\n\n$valid_passwordTypes = array(\n                                \"Cleartext-Password\",\n                                \"NT-Password\",\n                                \"MD5-Password\",\n                                \"SHA1-Password\",\n                                \"User-Password\",\n                                \"Crypt-Password\",\n                                //~ \"CHAP-Password\"\n                             );\n\n$valid_ops = array(\n                    \"=\", \":=\", \":=\", \"==\", \"+=\", \"!=\", \">\",\n                    \">=\", \"<\", \"<=\", \"=~\", \"!~\", \"=*\", \"!*\"\n                  );\n\n$valid_recommendedHelpers = array(\n                                    \"date\", \"datetime\", \"authtype\", \"framedprotocol\", \"servicetype\",\n                                    \"kbitspersecond\", \"bitspersecond\", \"volumebytes\", \"mikrotikRateLimit\",\n                                 );\n\n$valid_attributeTypes = array(\n                                \"string\",\n                                \"integer\",\n                                \"ipaddr\",\n                                \"date\",\n                                \"octets\",\n                                \"ipv6addr\",\n                                \"ifid\",\n                                \"abinary\",\n                             );\n\n$valid_db_engines = array(\n                            \"mysql\" => \"MySQL\",\n                            \"pgsql\" => \"PostgreSQL\",\n                            \"odbc\" => \"ODBC\",\n                            \"mssql\" => \"MsSQL\",\n                            \"mysqli\" => \"MySQLi\",\n                            \"msql\" => \"MsQL\",\n                            \"sybase\" => \"Sybase\",\n                            \"sqlite\" => \"Sqlite\",\n                            \"oci8\" => \"Oci8 \",\n                            \"ibase\" => \"ibase\",\n                            \"fbsql\" => \"fbsql\",\n                            \"informix\" => \"informix\"\n                         );\n\n// values taken from an instance of freeradius 3.0.21\n$valid_nastypes = array(\n                         \"other\", \"cisco\", \"computone\", \"livingston\", \"juniper\", \"max40xx\", \"multitech\",\n                         \"netserver\", \"pathras\", \"patton\", \"portslave\", \"tc\", \"usrhiper\"\n                       );\n\n// accounting custom-query options list\n$acct_custom_query_options_all = array(\n                                        \"RadAcctId\",\n                                        \"AcctSessionId\",\n                                        \"AcctUniqueId\",\n                                        \"UserName\",\n                                        \"Realm\",\n                                        \"NASIPAddress\",\n                                        \"NASPortId\",\n                                        \"NASPortType\",\n                                        \"AcctStartTime\",\n                                        \"AcctStopTime\",\n                                        \"AcctSessionTime\",\n                                        \"AcctAuthentic\",\n                                        \"ConnectInfo_start\",\n                                        \"ConnectInfo_stop\",\n                                        \"AcctInputOctets\",\n                                        \"AcctOutputOctets\",\n                                        \"CalledStationId\",\n                                        \"CallingStationId\",\n                                        \"AcctTerminateCause\",\n                                        \"ServiceType\",\n                                        \"FramedProtocol\",\n                                        \"FramedIPAddress\",\n                                        \"AcctStartDelay\",\n                                        \"AcctStopDelay\"\n                                    );\n\n// accounting custom-query options selected by default\n$acct_custom_query_options_default = array(\n                                            \"UserName\", \"Realm\", \"NASIPAddress\", \"AcctStartTime\", \"AcctStopTime\",\n                                            \"AcctSessionTime\", \"AcctInputOctets\", \"AcctOutputOctets\", \"CalledStationId\",\n                                            \"CallingStationId\", \"AcctTerminateCause\", \"FramedIPAddress\"\n                                          );\n\n// billing history query options list\n$bill_history_query_options_all = array(\n                                            \"id\" => t('all','ID'),\n                                            \"username\" => t('all','Username'),\n                                            \"planId\" => t('all','PlanId'),\n\n                                            \"billAmount\" => t('all','BillAmount'),\n                                            \"billAction\" => t('all','BillAction'),\n                                            \"billPerformer\" => t('all','BillPerformer'),\n                                            \"billReason\" => t('all','BillReason'),\n\n                                            \"paymentmethod\" => t('ContactInfo','PaymentMethod'),\n                                            \"cash\" => t('ContactInfo','Cash'),\n\n                                            \"creditcardname\" => t('ContactInfo','CreditCardName'),\n                                            \"creditcardnumber\" => t('ContactInfo','CreditCardNumber'),\n                                            \"creditcardverification\" => t('ContactInfo','CreditCardVerificationNumber'),\n                                            \"creditcardtype\" => t('ContactInfo','CreditCardType'),\n                                            \"creditcardexp\" => t('ContactInfo','CreditCardExpiration'),\n                                            \"coupon\" => t('all','Coupon'),\n                                            \"discount\" => t('all','Discount'),\n                                            \"notes\" => t('ContactInfo','Notes'),\n                                            \"creationdate\" => t('all','CreationDate'),\n                                            \"creationby\" => t('all','CreationBy'),\n                                            \"updatedate\" => t('all','UpdateDate'),\n                                            \"updateby\" => t('all','UpdateBy')\n                                       );\n\n// billing history query options selected by default\n$bill_history_query_options_default = array(\n                                                \"username\",\n                                                \"planId\",\n                                                \"billAmount\",\n                                                \"billAction\",\n                                                \"billPerformer\",\n                                                \"paymentmethod\"\n                                           );\n\n$bill_merchant_transactions_options_all = array(\n                                                    \"id\" => t('all','ID'),\n                                                    \"username\" => t('all','Username'),\n                                                    \"password\"  => t('all','Password'),\n                                                    \"txnId\"  => t('all','TxnId'),\n                                                    \"planName\" => t('all','PlanName'),\n                                                    \"planId\"  => t('all','PlanId'),\n                                                    \"quantity\"  => t('all','Quantity'),\n                                                    \"business_email\"  => t('all','ReceiverEmail'),\n                                                    \"business_id\"  => t('all','Business'),\n                                                    \"payment_tax\" => t('all','Tax'),\n                                                    \"payment_cost\"  => t('all','Cost'),\n                                                    \"payment_fee\" => t('all','TransactionFee'),\n                                                    \"payment_total\" => t('all','TotalCost'),\n                                                    \"payment_currency\" => t('all','PaymentCurrency'),\n                                                    \"first_name\" => t('all','FirstName'),\n                                                    \"last_name\" => t('all','LastName'),\n                                                    \"payer_email\" => t('all','PayerEmail'),\n                                                    \"payer_address_name\"  => t('all','AddressRecipient'),\n                                                    \"payer_address_street\"  => t('all','Street'),\n                                                    \"payer_address_country\" => t('all','Country'),\n                                                    \"payer_address_country_code\"  => t('all','CountryCode'),\n                                                    \"payer_address_city\" => t('all','City'),\n                                                    \"payer_address_state\" => t('all','State'),\n                                                    \"payer_address_zip\"  => t('all','Zip'),\n                                                    \"payment_date\" => t('all','PaymentDate'),\n                                                    \"payment_status\" => t('all','PaymentStatus'),\n                                                    \"payer_status\" => t('all','PayerStatus'),\n                                                    \"payment_address_status\" => t('all','PaymentAddressStatus'),\n                                                    \"vendor_type\" => t('all','VendorType')\n                                               );\n                                               \n$bill_merchant_transactions_options_default = array(\n                                                        \"username\",\n                                                        \"planName\",\n                                                        \"payment_fee\",\n                                                        \"payment_total\",\n                                                        \"payment_currency\",\n                                                        \"first_name\",\n                                                        \"last_name\",\n                                                        \"payer_email\",\n                                                        \"payer_address_country\",\n                                                        \"payer_address_city\",\n                                                        \"payer_address_state\",\n                                                        \"payment_date\",\n                                                        \"payment_status\",\n                                                        \"vendor_type\"\n                                                   );\n\n// validating values\n\n$valid_paymentStatus = array(\n                              \"Any\", \"Completed\",  \"Denied\",  \"Expired\",  \"Failed\",  \"In-Progress\",  \"Pending\", \n                              \"Processed\",  \"Refunded\",  \"Reversed\",  \"Canceled-Reversal\",  \"Voided\", \n                            );\n$valid_vendorTypes = array( \"Any\", \"2Checkout\", \"PayPal\" );\n$valid_billactions = array( \"Any\", \"Refill Session Time\", \"Refill Session Traffic\" );\n\n$valid_languages = array(\n                            \"en\" => \"English\", \n                            \"it\" => \"Italian\", \n                            \"hu\" => \"Hungarian\", \n                            \"ro\" => \"Romanian\",\n                            \"ru\" => \"Russian\", \n                            \"ja\" => \"Japanese\",\n                            \"zh\" => \"Chinese\",\n                            \"es_ve\" => \"Spanish - Venezuelan\", \n                            \"pt_br\" => \"Portuguese - Brazilian\", \n                        );\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-accounting-custom.php') !== false) {\n    header(\"Location: index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Accounting\";\n\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/accounting-subnav.php\");\n\n?>\n\n            <div id=\"sidebar\">\n                <h2>Accounting</h2>\n                \n                <h3>Custom Query</h3>\n                <ul class=\"subnav\">\n                \n                    <li>\n                        <form name=\"acctcustomquery\" action=\"acct-custom-query.php\" method=\"get\" class=\"sidebar\">\n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                            <br><br>\n                            \n                            <h109><?= t('button','BetweenDates') ?></h109><br>\n                            \n                            <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                            <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_startdate)) ? $accounting_custom_startdate : date(\"Y-m-01\") ?>\">\n\n                            <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                            <input name=\"enddate\" type=\"date\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_enddate)) ? $accounting_custom_enddate : date(\"Y-m-t\") ?>\">\n                            \n                            <br><br>\n                            \n<?php\n                                \n                            $descr = array(\n                                            \"caption\" => t('button','Where'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"where_field\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($where_field)) ? $where_field : $acct_custom_query_options_all[0]),\n                                          );\n                            \n                            print_form_component($descr);\n                            \n                            \n                            $descr = array(\n                                            \"caption\" => \"Operator\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"operator\",\n                                            \"options\" => array(\"equals\", \"contains\"),\n                                            \"selected_value\" => ((isset($operator)) ? $operator : \"equals\"),\n                                          );\n                            \n                            print_form_component($descr);\n                            \n?>\n                            <input type=\"text\" name=\"where_value\" tooltipText=\"<?= t('Tooltip','Filter') ?><br>\"\n                                value=\"<?= (isset($accounting_custom_value)) ? $accounting_custom_value : \"\" ?>\">\n                            <br><br>\n\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','AccountingFieldsinQuery'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"sqlfields[]\",\n                                            \"id\" => \"sqlfields\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($sqlfields)) ? $sqlfields : $acct_custom_query_options_default),\n                                            \"multiple\" => true\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('all')\">Select All</a>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('none')\">Select None</a>\n                            <br><br>\n\n<script>\n    function select(what) {\n        var selected = (what == 'all'),\n            sqlfields = document.getElementById('sqlfields');\n    \n        for (var i = 0; i < sqlfields.options.length; i++) {\n            sqlfields.options[i].selected = selected;\n        }\n    }\n</script>\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','OrderBy'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderBy\",\n                                            \"options\" => $acct_custom_query_options_all,\n                                            \"selected_value\" => ((isset($orderBy)) ? $orderBy : $acct_custom_query_options_all[0])\n                                          );\n                            \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => \"Order Type\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderType\",\n                                            \"options\" => array(\"asc\" => \"Ascending\", \"desc\" => \"Descending\"),\n                                            \"selected_value\" => ((isset($orderType)) ? $orderType : \"asc\")\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                            <br>\n                            \n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                        </form>\n                    </li>\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-bill-history.php') !== false) {\n    header(\"Location: index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Billing\";\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/billing-subnav.php\");\n\n?>\n\n            <div id=\"sidebar\">\n                <h2>Billing</h2>\n                \n                <h3>Track Billing History</h3>\n                <ul class=\"subnav\">\n                    <li>\n                        <form name=\"billhistory\" action=\"bill-history-query.php\" method=\"GET\" class=\"sidebar\">\n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                            \n                            <br><br>\n<?php\n/*                            <h109><?= t('button','BetweenDates') ?></h109><br>\n                            <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                            <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                value=\"<?= (isset($billing_date_startdate)) ? $billing_date_startdate : date(\"Y-m-01\") ?>\">\n\n                            <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                            <input name=\"enddate\" type=\"date\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                value=\"<?= (isset($billing_date_enddate)) ? $billing_date_enddate : date(\"Y-m-t\") ?>\">\n\n                            <br><br>\n*/\n\n                            $descr = array(\n                                            \"caption\" => t('all','Username'),\n                                            \"type\" => \"text\",\n                                            \"name\" => \"username\",\n                                            \"value\" => ((isset($billing_history_username)) ? $billing_history_username : \"\"),\n                                          );\n                                          \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => t('all','BillAction'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"billaction\",\n                                            \"options\" => $valid_billactions,\n                                            \"selected_value\" => ((isset($billaction)) ? $billaction : $valid_billactions[0]),\n                                          );\n                            \n                            print_form_component($descr);\n?>\n\n                            <br><br>\n<?php\n                            \n                            $descr = array(\n                                            \"caption\" => t('button','AccountingFieldsinQuery'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"sqlfields[]\",\n                                            \"id\" => \"sqlfields\",\n                                            \"options\" => $bill_history_query_options_all,\n                                            \"selected_value\" => ((isset($sqlfields)) ? $sqlfields : $bill_history_query_options_default),\n                                            \"multiple\" => true\n                                          );\n                            \n                            print_form_component($descr);\n                            \n?>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('all')\">Select All</a>\n                            <a style=\"display: inline\" href=\"#\" onclick=\"select('none')\">Select None</a>\n                            <br><br>\n\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','OrderBy'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderBy\",\n                                            \"options\" => $bill_history_query_options_all,\n                                            \"selected_value\" => ((isset($orderBy)) ? $orderBy : $bill_history_query_options_all[0])\n                                          );\n                            \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => \"Order Type\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderType\",\n                                            \"options\" => array(\"asc\" => \"Ascending\", \"desc\" => \"Descending\"),\n                                            \"selected_value\" => ((isset($orderType)) ? $orderType : \"asc\")\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                            <br>\n   \n                            <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                        </form>\n                    </li>\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    function select(what) {\n        var selected = (what == 'all'),\n            sqlfields = document.getElementById('sqlfields');\n    \n        for (var i = 0; i < sqlfields.options.length; i++) {\n            sqlfields.options[i].selected = selected;\n        }\n    }\n    \n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/menu-bill-merchant.php') !== false) {\n    header(\"Location: index.php\");\n    exit;\n}\n\ninclude_once(\"lang/main.php\");\n\n$m_active = \"Billing\";\n\ninclude_once(\"include/menu/menu-items.php\");\ninclude_once(\"include/menu/billing-subnav.php\");\n\n?>\n\n                <div id=\"sidebar\">\n                    <h2>Billing</h2>\n                    \n                    <h3>Track PayPal Transactions</h3>\n                    <ul class=\"subnav\">\n                        <li>\n                            <form name=\"billpaypaltransactions\" action=\"bill-merchant-transactions.php\" method=\"GET\" class=\"sidebar\">\n                                <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n                                \n                                <br><br>\n                                \n                                <h109><?= t('button','BetweenDates'); ?></h109><br>\n                                \n                                <label style=\"user-select: none\" for=\"startdate\"><?= t('all','StartingDate') ?></label>\n                                <input name=\"startdate\" type=\"date\" id=\"startdate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                    value=\"<?= (!empty($billing_date_startdate)) ? $billing_date_startdate : date(\"Y-m-01\") ?>\">\n\n                                <label style=\"user-select: none\" for=\"enddate\"><?= t('all','EndingDate') ?></label>\n                                <input name=\"enddate\" type=\"date\" id=\"enddate\" tooltipText=\"<?= t('Tooltip','Date') ?>\"\n                                    value=\"<?= (!empty($billing_date_enddate)) ? $billing_date_enddate : date(\"Y-m-t\") ?>\">\n\n                                <br><br>\n<?php\n                            $descr = array(\n                                            \"caption\" => t('all','VendorType'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"vendor_type\",\n                                            \"options\" => $valid_vendorTypes,\n                                            \"selected_value\" => ((isset($billing_paypal_vendor_type)) ? $billing_paypal_vendor_type : $valid_vendorTypes[0])\n                                          );\n                            \n                            print_form_component($descr);\n                            \n                            $descr = array(\n                                            \"caption\" => t('all','PayerEmail'),\n                                            \"type\" => \"text\",\n                                            \"name\" => \"payer_email\",\n                                            \"value\" => ((isset($billing_paypal_payeremail)) ? $billing_paypal_payeremail : \"\"),\n                                          );\n                                          \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => t('all','PaymentStatus'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"payment_status\",\n                                            \"options\" => $valid_paymentStatus,\n                                            \"selected_value\" => ((isset($billing_paypal_paymentstatus)) ? $billing_paypal_paymentstatus : $valid_paymentStatus[0])\n                                          );\n                            \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => t('button','AccountingFieldsinQuery'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"sqlfields[]\",\n                                            \"id\" => \"sqlfields\",\n                                            \"options\" => $bill_merchant_transactions_options_all,\n                                            \"selected_value\" => ((isset($sqlfields)) ? $sqlfields : $bill_merchant_transactions_options_default),\n                                            \"multiple\" => true\n                                          );\n                            \n                            print_form_component($descr);\n                            \n?>\n                                <a style=\"display: inline\" href=\"#\" onclick=\"select('all')\">Select All</a>\n                                <a style=\"display: inline\" href=\"#\" onclick=\"select('none')\">Select None</a>\n                                <br><br>\n\n<?php\n                            $descr = array(\n                                            \"caption\" => t('button','OrderBy'),\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderBy\",\n                                            \"options\" => $bill_merchant_transactions_options_all,\n                                            \"selected_value\" => ((isset($orderBy)) ? $orderBy : $bill_merchant_transactions_options_default[0])\n                                          );\n                            \n                            print_form_component($descr);\n\n                            $descr = array(\n                                            \"caption\" => \"Order Type\",\n                                            \"type\" => \"select\",\n                                            \"name\" => \"orderType\",\n                                            \"options\" => array(\"asc\" => \"Ascending\", \"desc\" => \"Descending\"),\n                                            \"selected_value\" => ((isset($orderType)) ? $orderType : \"asc\")\n                                          );\n                            \n                            print_form_component($descr);\n?>\n                               \n                                <br><br>\n                                \n                                <input class=\"sidebutton\" type=\"submit\" name=\"submit\" value=\"<?= t('button','ProcessQuery') ?>\">\n\n                            </form>\n                        </li>\n\n                </ul><!-- .subnav -->\n            </div><!-- #sidebar -->\n\n<script>\n    function select(what) {\n        var selected = (what == 'all'),\n            sqlfields = document.getElementById('sqlfields');\n    \n        for (var i = 0; i < sqlfields.options.length; i++) {\n            sqlfields.options[i].selected = selected;\n        }\n    }\n    \n    var tooltipObj = new DHTMLgoodies_formTooltip();\n    tooltipObj.setTooltipPosition('right');\n    tooltipObj.setPageBgColor('#EEEEEE');\n    tooltipObj.setTooltipCornerSize(15);\n    tooltipObj.initFormFieldTooltip();\n</script>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n    \n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n        $valid_passwordTypes = array_values($valid_passwordTypes);\n    }\n    \n    include('library/opendb.php');\n    \n    $sql = sprintf(\"SELECT id, name FROM %s\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $valid_hotspots = array( );\n    while ($row = $res->fetchrow()) {\n        list($id, $name) = $row;\n        \n        $valid_hotspots[\"hotspot-$id\"] = $name;\n    }\n\n    include_once('include/management/populate_selectbox.php');\n    $valid_groups = get_groups();\n    $valid_planNames = get_plans();\n    \n    \n    include(\"include/management/functions.php\");\n    include('include/management/pages_common.php');\n\n\n    function addUserBatchHistory($dbSocket) {\n        \n        global $batch_name;\n        global $batch_description;\n        global $hotspot_id;\n        global $logDebugSQL;\n        global $configValues;\n        \n        // the returned id of last insert batch_history record\n        $batch_id = 0;\n        \n        $currDate = date('Y-m-d H:i:s');\n        $currBy = $_SESSION['operator_user'];\n        \n        $sql = sprintf(\"INSERT INTO %s (id, batch_name, batch_description, hotspot_id, creationdate, creationby, updatedate, updateby) \n                                VALUES (0, '%s', '%s', '%s', '%s', '%s', NULL, NULL)\",\n                       $configValues['CONFIG_DB_TBL_DALOBATCHHISTORY'],\n                       $dbSocket->escapeSimple($batch_name), $dbSocket->escapeSimple($batch_description),\n                       $dbSocket->escapeSimple($hotspot_id), $currDate, $currBy);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $sql = sprintf(\"SELECT id FROM %s WHERE batch_name = '%s'\", \n                       $configValues['CONFIG_DB_TBL_DALOBATCHHISTORY'], $dbSocket->escapeSimple($batch_name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n    \n        // if the INSERT to the batch_history table was succesful and there exist\n        // only 1 record (meaning, we don't have a duplicate) then we return the id\n        return ($res->numRows() == 1) ? intval($res->fetchRow()[0]) : 0;        \n    }\n    \n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngbatch.php');\n    $help = t('helpPage','mngbatch');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-batch.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $exportForm = \"\";\n    $detailedInfo = array();\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n\n        /* variables for batch_history */\n        $batch_name = (array_key_exists('batch_name', $_POST) && !empty(trim($_POST['batch_name'])) &&\n                       preg_match(\"/^[\\w\\-. ]+$/\", trim($_POST['batch_name']) !== false)) ? trim($_POST['batch_name']) : \"\";\n        \n        if (empty($batch_name)) {\n            // batch name required\n            $failureMsg = \"Failure creating batch - please provide a batch name\";\n            $logAction .= \"Failure creating batch - missing field [batch_name] on page: \";\n        } else {\n        \n            $batch_description = (array_key_exists('batch_description', $_POST) && isset($_POST['batch_description']))\n                               ? trim(str_replace(\"%\", \"\", $_POST['batch_description'])) : \"\";\n            \n            $hotspot_id = (array_key_exists('hotspot_id', $_POST) && !empty(trim($_POST['hotspot_id'])) &&\n                           in_array(trim($_POST['hotspot_id']), array_keys($valid_hotspots)))\n                        ? intval(str_replace(\"hotspot-\", \"\", $_POST['hotspot_id'])) : \"\";\n\n            /* variables for userbillinfo */\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            $bi_billstatus = (array_key_exists('bi_billstatus', $_POST) && isset($_POST['bi_billstatus'])) ? $_POST['bi_billstatus'] : \"\";\n            $bi_lastbill = (array_key_exists('bi_lastbill', $_POST) && isset($_POST['bi_lastbill'])) ? $_POST['bi_lastbill'] : \"\";\n            $bi_nextbill = (array_key_exists('bi_nextbill', $_POST) && isset($_POST['bi_nextbill'])) ? $_POST['bi_nextbill'] : \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n            \n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n\n            /* variables for userinfo */\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            $username_prefix = (array_key_exists('username_prefix', $_POST) && !empty(trim(str_replace(\"%\", \"\", $_POST['username_prefix']))))\n                             ? trim(str_replace(\"%\", \"\", $_POST['username_prefix'])) : \"\";\n            $number = (array_key_exists('number', $_POST) && !empty(trim($_POST['number'])) && intval(trim($_POST['number'])) > 0)\n                    ? intval(trim($_POST['number'])) : 4;\n            \n            $length_pass = (array_key_exists('length_pass', $_POST) && !empty(trim($_POST['length_pass'])) && intval(trim($_POST['length_pass'])) > 0)\n                         ? intval(trim($_POST['length_pass'])) : 8;\n            $length_user = (array_key_exists('length_user', $_POST) && !empty(trim($_POST['length_user'])) && intval(trim($_POST['length_user'])) > 0)\n                         ? intval(trim($_POST['length_user'])) : 8;\n            \n            $passwordType = (array_key_exists('passwordType', $_POST) && !empty(trim($_POST['passwordType'])) &&\n                          in_array(trim($_POST['passwordType']), $valid_passwordTypes))\n                       ? trim($_POST['passwordType']) : $valid_passwordTypes[0];\n            \n            $group = (array_key_exists('group', $_POST) && !empty($_POST['group']) && in_array($_POST['group'], $valid_groups))\n                   ? $_POST['group'] : \"\";\n            $group_priority = (array_key_exists('group_priority', $_POST) && !empty(trim($_POST['group_priority'])) &&\n                               intval(trim($_POST['group_priority'])) >= 0)\n                            ? intval(trim($_POST['group_priority'])) : 0;\n\n            $planName = (array_key_exists('planName', $_POST) && !empty($_POST['planName']) && in_array($_POST['planName'], $valid_planNames))\n                   ? $_POST['planName'] : \"\";\n            \n            $startingIndex = (array_key_exists('startingIndex', $_POST) && !empty(trim($_POST['startingIndex'])) &&\n                              intval(trim($_POST['startingIndex'])) > 0)\n                           ? intval(trim($_POST['startingIndex'])) : 1000;\n            \n            $createBatchUsersType = (array_key_exists('createBatchUsersType', $_POST) && !empty(trim($_POST['createBatchUsersType'])) &&\n                                     in_array(trim($_POST['createBatchUsersType']), array(\"createRandomUsers\", \"createIncrementUsers\")))\n                                  ? trim($_POST['createBatchUsersType']) : \"createRandomUsers\";\n            \n            \n            $currDate = date('Y-m-d H:i:s');            // current date and time to enter as creationdate field\n            $currBy = $_SESSION['operator_user'];\n\n\n            // before looping through all generated batch users we create the batch_history entry\n            // to associate the created users with a batch_history entry\n            $sql_batch_id = addUserBatchHistory($dbSocket);\n            \n            if ($sql_batch_id == 0) {\n                // 0 may be returned in the case of failure in adding the batch_history record due\n                // to SQL related issues or in case where there is a duplicate record of the batch_history,\n                // meaning, the same batch_name is used to identify the batch entry\n                $failureMsg = \"Failure creating batch users due to an error or possible duplicate entry: <b> $batch_name </b>\";\n                $logAction .= \"Failure creating a batch_history entry on page: \";\n            } else {\n                \n                $actionMsgBadUsernames = \"\";\n                $actionMsgGoodUsernames = \"\";\n\n                $exportCSV = \"Username,Password||\";\n                \n                $inserted_usernames = array( \"Username\" );\n                $inserted_passwords = array( \"Password\" );\n                \n                if ($number > 0) {\n                    for ($i = 0; $i < $number; $i++) {\n\n                        // create the username\n                        switch ($createBatchUsersType) {\n                            default:\n                            case \"createRandomUsers\":\n                                $username_suffix = createPassword($length_user, $configValues['CONFIG_USER_ALLOWEDRANDOMCHARS']);\n                                break;\n                                \n                            case \"createIncrementUsers\":\n                                $username_suffix = $startingIndex + $i;\n                                break;\n                        }\n                        \n                        $username = $username_prefix . $username_suffix;\n                        $password = createPassword($length_pass, $configValues['CONFIG_USER_ALLOWEDRANDOMCHARS']);\n                        \n                        if (user_exists($dbSocket, $username)) {\n                            // $username skipped\n                            $detailedInfo[] = sprintf(\"cannot insert username %s, username exists\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                            continue;\n                        }\n                        \n                        // username does not exist\n                        include_once(\"library/attributes.php\");\n                        \n                        $hash = hashPasswordAttribute($passwordType, $password);\n                        \n                        if (!insert_single_attribute($dbSocket, $username, $passwordType, ':=', $hash)) {\n                            // if we fail to insert this user, we skip other queries\n                            $detailedInfo[] = sprintf(\"cannot insert username %s, db error\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                            continue;\n                        }\n                        \n                        // if a group was defined to add the user to in the form let's add it to the database\n                        if (!empty($group)) {\n                            if (!insert_single_user_group_mapping($dbSocket, $username, $group, $group_priority)) {\n                                $detailedInfo[] = sprintf(\"cannot insert user-group mapping %s-%s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'), \n                                                      htmlspecialchars($group, ENT_QUOTES, 'UTF-8'));\n                            }\n                        }\n                        \n                        // adding user info\n                        $params = array(\n                                            \"firstname\" => $firstname,\n                                            \"lastname\" => $lastname,\n                                            \"email\" => $email,\n                                            \"department\" => $department,\n                                            \"company\" => $company,\n                                            \"workphone\" => $workphone,\n                                            \"homephone\" => $homephone,\n                                            \"mobilephone\" => $mobilephone,\n                                            \"address\" => $address,\n                                            \"city\" => $city,\n                                            \"state\" => $state,\n                                            \"country\" => $country,\n                                            \"zip\" => $zip,\n                                            \"notes\" => $notes,\n                                            \"changeuserinfo\" => $ui_changeuserinfo,\n                                            \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                            \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                       );\n                        \n                        if (add_user_info($dbSocket, $username, $params) === false) {\n                            $detailedInfo[] = sprintf(\"cannot insert userinfo for user %s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                        }\n                        \n                        \n                        // adding billing info\n                        $params = array(\n                                            \"contactperson\" => $bi_contactperson,\n                                            \"company\" => $bi_company,\n                                            \"email\" => $bi_email,\n                                            \"phone\" => $bi_phone,\n                                            \"address\" => $bi_address,\n                                            \"city\" => $bi_city,\n                                            \"state\" => $bi_state,\n                                            \"country\" => $bi_country,\n                                            \"zip\" => $bi_zip,\n                                            \"paymentmethod\" => $bi_paymentmethod,\n                                            \"cash\" => $bi_cash,\n                                            \"creditcardname\" => $bi_creditcardname,\n                                            \"creditcardnumber\" => $bi_creditcardnumber,\n                                            \"creditcardexp\" => $bi_creditcardexp,\n                                            \"creditcardverification\" => $bi_creditcardverification,\n                                            \"creditcardtype\" => $bi_creditcardtype,\n                                            \"notes\" => $bi_notes,\n                                            \"lead\" => $bi_lead,\n                                            \"coupon\" => $bi_coupon,\n                                            \"ordertaker\" => $bi_ordertaker,\n                                            \"billstatus\" => $bi_billstatus,\n                                            \"lastbill\" => $bi_lastbill,\n                                            \"nextbill\" => $bi_nextbill,\n                                            \"postalinvoice\" => $bi_postalinvoice,\n                                            \"faxinvoice\" => $bi_faxinvoice,\n                                            \"emailinvoice\" => $bi_emailinvoice,\n                                            \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                            \"planName\" => $planName,\n                                            \"hotspot_id\" => $hotspot_id,\n                                            \"batch_id\" => $sql_batch_id,\n                                            \"creationdate\" => $currDate,\n                                            \"creationby\" => $operator\n                                       );\n                        \n                        if (add_user_billing_info($dbSocket, $username, $params) === false) {\n                            $detailedInfo[] = sprintf(\"cannot insert billing info for user %s\",\n                                                      htmlspecialchars($username, ENT_QUOTES, 'UTF-8'));\n                        }\n                        \n                        // adding attributes\n                        $skipList = array( \n                                           \"username_prefix\", \"passwordType\", \"length_pass\", \"length_user\", \"number\", \"plan\",\n                                           \"submit\", \"group\", \"group_priority\", \"createBatchUsersType\", \"startingIndex\",\n                                           \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\", \"homephone\",\n                                           \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\", \"bi_contactperson\",\n                                           \"bi_company\", \"bi_email\", \"bi_phone\", \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\",\n                                           \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\", \"bi_creditcardnumber\",\n                                           \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\", \"bi_notes\", \"bi_lead\",\n                                           \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\", \"bi_lastbill\", \"bi_nextbill\", \"bi_postalinvoice\",\n                                           \"bi_faxinvoice\", \"bi_emailinvoice\", \"bi_batch_id\", \"changeUserBillInfo\", \"changeUserInfo\",\n                                           \"batch_description\", \"batch_name\", \"hotspot\", \"hotspot_id\", \"copycontact\",\n                                           \"enableUserPortalLogin\", \"portalLoginPassword\", \"csrf_token\"\n                                         );\n                        \n                        $count = handleAttributes($dbSocket, $username, $skipList);\n                        \n                        $inserted_usernames[] = $username;\n                        $inserted_passwords[] = $password;\n                        \n                        $exportCSV .= \"$username,$password||\";\n                        \n                    } // end for\n                    \n                    $form_id = \"export-users-form\";\n                    $exportForm .= sprintf('<form target=\"_blank\" id=\"%s\" ', $form_id)\n                                 . 'method=\"POST\">'\n                                 . sprintf('<input style=\"display: none\" type=\"hidden\" name=\"batch_name\" value=\"%s\">',\n                                           htmlspecialchars($batch_name, ENT_QUOTES, 'UTF-8'))\n                                 . '<input style=\"display: none\" type=\"hidden\" name=\"type\" value=\"batch\">';\n                                 \n                    if (!empty($planName)) {\n                        $exportForm .= sprintf('<input type=\"hidden\" name=\"plan\" value=\"%s\">',\n                                               htmlspecialchars($planName, ENT_QUOTES, 'UTF-8'));\n                    }\n                    \n                    for ($i = 0; $i < count($inserted_usernames); $i++) {\n                        $u = $inserted_usernames[$i];\n                        $p = $inserted_passwords[$i];\n                        $exportForm .= sprintf('<input style=\"display: none\" type=\"hidden\" name=\"accounts[%d][0]\" value=\"%s\">', $i, htmlspecialchars($u, ENT_QUOTES, 'UTF-8'))\n                                     . sprintf('<input style=\"display: none\" type=\"hidden\" name=\"accounts[%d][1]\" value=\"%s\">', $i, htmlspecialchars($p, ENT_QUOTES, 'UTF-8'));\n                    }\n                    \n                    \n                    $exportForm .= '<fieldset><label for=\"ticketInformation\" class=\"form\">Description</label>'\n                                 . '<textarea class=\"form\" id=\"ticketInformation\" name=\"ticketInformation\">'\n                                 . 'to use this card, please connect your device to the nearest ssid.' . \"\\n\"\n                                 . 'Open your web browser and enter each needed field.</textarea>';\n                    $exportForm .= '</fieldset></form>';\n                    $onclick = \"batch_export('include/common/fileExportCSV.php')\";\n                    $exportForm .= sprintf('<input style=\"margin: 10px\" type=\"button\" onclick=\"%s\" value=\"CSV Download\">', $onclick);\n                    $onclick = \"batch_export('include/common/printTickets.php')\";\n                    $exportForm .= sprintf('<input style=\"margin: 10px\" type=\"button\" onclick=\"%s\" value=\"Printable Tickets\">', $onclick);\n                            \n                    $successMsg = sprintf(\"Created %d user(s) (batch name: <strong>%s</strong>)\", count($inserted_usernames)-1, $batch_name);\n                    $logAction .= sprintf(\"Successfully added to database new users [%s] with prefix [%s] on page: \",\n                                          implode(\", \", $inserted_usernames), $username_prefix);\n\n                } else {// $number > 0\n                    $failureMsg = \"specify a valid number of accounts\";\n                    $logAction = \"specified an invalid number of accounts on page: \";\n                }\n            }\n        }\n    }\n\n    include('library/closedb.php');\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($exportForm)) {\n        echo $exportForm;\n        \n        if (count($detailedInfo) > 0) {\n            echo \"<h4>Detailed info</h4>\"\n               . \"<pre>\"\n               . implode(\"\\n\", $detailedInfo)\n               . \"</pre>\";\n        }\n        \n    } else {\n    \n        // set navbar stuff\n        $navbuttons = array(\n                                \"AccountInfo-tab\" => t('title','AccountInfo'),\n                                \"UserInfo-tab\" => t('title','UserInfo'),\n                                \"BillingInfo-tab\" => t('title','BillingInfo'),\n                                \"Attributes-tab\" => t('title','Attributes'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n        \n        $input_descriptors1 = array();\n        $input_descriptors1[] = array(\n                                        \"name\" => \"batch_name\",\n                                        \"caption\" => t('all','batchName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $batch_name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','batchNameTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"batch_description\",\n                                        \"caption\" => t('all','batchDescription'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $batch_description : \"\"),\n                                        \"tooltipText\" => t('Tooltip','batchDescriptionTooltip')\n                                     );\n                                     \n        $options = $valid_hotspots;\n        array_unshift($options , '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"hotspot_id\",\n                                        \"caption\" => t('all','HotSpot'),\n                                        \"options\" => $options,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg) && intval($hotspot_id) > 0) ? \"hotspot-$hotspot_id\" : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"username_prefix\",\n                                        \"caption\" => t('all','UsernamePrefix'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $username_prefix : \"\"),\n                                        \"tooltipText\" => t('Tooltip','usernamePrefixTooltip'),\n                                        \"random\" => true\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"radio\",\n                                        \"value\" => \"createRandomUsers\",\n                                        \"name\" => \"createBatchUsersType\",\n                                        \"onclick\" => \"toggleRandomUsers()\",\n                                        \"caption\" => t('all','CreateRandomUsers'),\n                                        \"checked\" => true\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"length_user\",\n                                        \"caption\" => t('all','UsernameLength'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $length_user : \"8\"),\n                                        \"tooltipText\" => t('Tooltip','lengthOfUsernameTooltip'),\n                                        \"min\" => \"4\",\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"radio\",\n                                        \"value\" => \"createIncrementUsers\",\n                                        \"name\" => \"createBatchUsersType\",\n                                        \"onclick\" => \"toggleIncrementUsers()\",\n                                        \"caption\" => t('all','CreateIncrementingUsers'),\n                                        \"checked\" => false\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"startingIndex\",\n                                        \"caption\" => t('all','StartingIndex'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $startingIndex : \"1000\"),\n                                        \"tooltipText\" => t('Tooltip','startingIndexTooltip'),\n                                        \"min\" => \"1\",\n                                        \"disabled\" => true,\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\"),\n                                        \"tooltipText\" => t('Tooltip','passwordTypeTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"length_pass\",\n                                        \"caption\" => t('all','PasswordLength'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $length_pass : \"8\"),\n                                        \"tooltipText\" => t('Tooltip','lengthOfPasswordTooltip'),\n                                        \"min\" => \"8\",\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"number\",\n                                        \"caption\" => t('all','NumberInstances'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $number : \"4\"),\n                                        \"tooltipText\" => t('Tooltip','instancesToCreateTooltip'),\n                                        \"min\" => \"4\",\n                                        \"step\" => \"4\"\n                                     );\n                                     \n        $options = $valid_groups;\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"group\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $group : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"group_priority\",\n                                        \"caption\" => t('all','GroupPriority'),\n                                        \"type\" => \"number\",\n                                        \"value\" => ((isset($failureMsg)) ? $group_priority : \"0\"),\n                                        \"min\" => \"0\",\n                                     );\n        \n        $options = $valid_planNames;\n        array_unshift($options, '');\n        $input_descriptors1[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"planName\",\n                                        \"caption\" => t('all','PlanName'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $planName : \"\"),\n                                        \"tooltipText\" => t('Tooltip','planTooltip')\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                      );\n?>\n\n<form name=\"batchuser\" method=\"POST\">\n    <div class=\"tabcontent\" id=\"AccountInfo-tab\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','AccountInfo') ?></h302>\n            <ul>\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n            </ul>\n        </fieldset>\n    </div><!-- #AccountInfo-tab -->\n\n    <div class=\"tabcontent\" id=\"UserInfo-tab\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userinfo.php');\n?>\n    </div>\n\n    <div class=\"tabcontent\" id=\"BillingInfo-tab\">\n<?php\n        $customApplyButton = \"<input type='submit' name='submit' value=\".t('buttons','apply').\" class='button' />\";\n        include_once('include/management/userbillinfo.php');\n?>\n    </div>\n\n    <div class=\"tabcontent\" id=\"Attributes-tab\">\n<?php\n        include_once('include/management/attributes.php');\n?>\n    </div>\n</form>\n\n<?php\n    }\n\n    include('include/config/logging.php');\n    \n    if (!empty($exportForm) && !empty($form_id)) {\n        $inline_extra_js = 'function batch_export(action) {' . \"\\n\";\n        $inline_extra_js .= sprintf(\"var f = document.getElementById('%s');\", $form_id);\n        $inline_extra_js .= '\nf.action = action;\nf.submit();\n}\n';\n    } else {\n        $inline_extra_js = \"\";\n    }\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n    \n    \n    include('library/opendb.php');\n    \n    // updates old plan profile with a new one\n    // or simply add a new plan profile\n    function addPlanProfile($dbSocket, $username, $planName, $oldplanName) {\n        global $logDebugSQL;\n        global $configValues;\n        \n        if ($planName == $oldplanName) {\n            return;\n        }\n\n        $sql = sprintf(\"SELECT planGroup FROM %s WHERE planName='%s'\",\n                        $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'],\n                        $dbSocket->escapeSimple($oldplanName));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        $oldplanGroup = $res->fetchRow()[0];\n        \n        if (!empty($oldplanGroup)) {\n            $sql = sprintf(\"DELETE FROM %s WHERE username='%s' AND groupname='%s'\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username),\n                           $dbSocket->escapeSimple($oldplanGroup));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n        }\n\n        $sql = sprintf(\"SELECT planGroup FROM %s WHERE planName='%s'\",\n                        $configValues['CONFIG_DB_TBL_DALOBILLINGPLANS'],\n                        $dbSocket->escapeSimple($planName));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $planGroup = $res->fetchRow()[0];\n\n        if (!empty($planGroup)) {\n\n            $sql = sprintf(\"INSERT INTO %s (username, groupname, priority) VALUES ('%s', '%s', 0)\",\n                           $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username),\n                           $dbSocket->escapeSimple($planGroup));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n        }\n    }\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n            \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                      ? str_replace(\"%\", \"\", trim($_POST['username'])) : \"\";\n\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            $newgroups = (array_key_exists('newgroups', $_POST) && isset($_POST['newgroups'])) ? $_POST['newgroups'] : array();\n            $groups_priority = (array_key_exists('groups_priority', $_POST) && isset($_POST['groups_priority'])) ? $_POST['groups_priority'] : array();\n            \n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n        \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            $bi_billstatus = (array_key_exists('bi_billstatus', $_POST) && isset($_POST['bi_billstatus'])) ? $_POST['bi_billstatus'] : \"\";\n            $bi_lastbill = (array_key_exists('bi_lastbill', $_POST) && isset($_POST['bi_lastbill'])) ? $_POST['bi_lastbill'] : \"\";\n            $bi_nextbill = (array_key_exists('bi_nextbill', $_POST) && isset($_POST['bi_nextbill'])) ? $_POST['bi_nextbill'] : \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n\n            $planName = (array_key_exists('planName', $_POST) && isset($_POST['planName'])) ? trim($_POST['planName']) : \"\";\n            $oldplanName = (array_key_exists('oldplanName', $_POST) && isset($_POST['oldplanName'])) ? trim($_POST['oldplanName']) : \"\";\n\n            // fix up errors with droping the Plan name\n            if (empty($planName)) {\n                $planName = $oldplanName;\n            }\n\n            if (!empty($username)) {\n                \n                // dealing with attributes\n                include(\"library/attributes.php\");\n\n                $skipList = array( \"username\", \"submit\", \"oldgroups\", \"groups\", \"planName\", \"oldplanName\", \"groups_priority\",\n                                   \"copycontact\", \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\",\n                                   \"homephone\", \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\",\n                                   \"changeUserInfo\", \"bi_contactperson\", \"bi_company\", \"bi_email\", \"bi_phone\", \"bi_address\",\n                                   \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\",\n                                   \"bi_creditcardnumber\", \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\",\n                                   \"bi_notes\", \"changeUserBillInfo\", \"bi_lead\", \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\",\n                                   \"bi_lastbill\", \"bi_nextbill\", \"bi_nextinvoicedue\", \"bi_billdue\", \"bi_postalinvoice\", \"bi_faxinvoice\",\n                                   \"bi_emailinvoice\", \"bi_planname\", \"newgroups\", \"portalLoginPassword\", \"enableUserPortalLogin\",\n                                   \"csrf_token\", \"submit\"\n                                 );\n\n                \n                handleAttributes($dbSocket, $username, $skipList, false);\n                \n                // insert or update user info\n                $userinfoExist = user_exists($dbSocket, $username, 'CONFIG_DB_TBL_DALOUSERINFO');\n                \n                $params = array(\n                                    \"firstname\" => $firstname,\n                                    \"lastname\" => $lastname,\n                                    \"email\" => $email,\n                                    \"department\" => $department,\n                                    \"company\" => $company,\n                                    \"workphone\" => $workphone,\n                                    \"homephone\" => $homephone,\n                                    \"mobilephone\" => $mobilephone,\n                                    \"address\" => $address,\n                                    \"city\" => $city,\n                                    \"state\" => $state,\n                                    \"country\" => $country,\n                                    \"zip\" => $zip,\n                                    \"notes\" => $notes,\n                                    \"changeuserinfo\" => $ui_changeuserinfo,\n                                    \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                    \"portalloginpassword\" => $ui_PortalLoginPassword,\n                               );\n                               \n                if ($userinfoExist) {\n                    $params[\"updatedate\"] = $currDate;\n                    $params[\"updateby\"] = $currBy;\n                    $addedUserInfo = (update_user_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                } else {\n                    $params[\"creationdate\"] = $currDate;\n                    $params[\"creationby\"] = $currBy;\n                    $addedUserInfo = (add_user_info($dbSocket, $username, $params)) ? \"updated\" : \"nothing to update\";\n                }\n                \n                \n                // insert or update billing info\n                $billinfoExist = user_exists($dbSocket, $username, 'CONFIG_DB_TBL_DALOUSERBILLINFO');\n                \n                $params = array(\n                                    \"contactperson\" => $bi_contactperson,\n                                    \"company\" => $bi_company,\n                                    \"email\" => $bi_email,\n                                    \"phone\" => $bi_phone,\n                                    \"address\" => $bi_address,\n                                    \"city\" => $bi_city,\n                                    \"state\" => $bi_state,\n                                    \"country\" => $bi_country,\n                                    \"zip\" => $bi_zip,\n                                    \"postalinvoice\" => $bi_postalinvoice,\n                                    \"faxinvoice\" => $bi_faxinvoice,\n                                    \"emailinvoice\" => $bi_emailinvoice,\n                                    \n                                    \"paymentmethod\" => $bi_paymentmethod,\n                                    \"cash\" => $bi_cash,\n                                    \"creditcardname\" => $bi_creditcardname,\n                                    \"creditcardnumber\" => $bi_creditcardnumber,\n                                    \"creditcardverification\" => $bi_creditcardverification,\n                                    \"creditcardtype\" => $bi_creditcardtype,\n                                    \"creditcardexp\" => $bi_creditcardexp,\n                                    \n                                    \"lead\" => $bi_lead,\n                                    \"coupon\" => $bi_coupon,\n                                    \"ordertaker\" => $bi_ordertaker,\n                                    \n                                    \"notes\" => $bi_notes,\n                                    \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                    \n                                    //~ \"billstatus\" => $bi_billstatus,\n                                    //~ \"lastbill\" => $bi_lastbill,\n                                    //~ \"nextbill\" => $bi_nextbill,\n                                    \"billdue\" => $bi_billdue,\n                                    \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                    \n                                    \"creationdate\" => $currDate,\n                                    \"creationby\" => $currBy,\n                               );\n                \n                if ($billinfoExist) {\n                    $params[\"planName\"] = $planName;\n                    $params[\"updatedate\"] = $currDate;\n                    $params[\"updateby\"] = $currBy;\n                    $addedBillinfo = (update_user_billing_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                } else {\n                    $params[\"creationdate\"] = $currDate;\n                    $params[\"creationby\"] = $currBy;\n                    $addedBillinfo = (add_user_billing_info($dbSocket, $username, $params)) ? \"updated\" : \"nothing to update\";\n                }\n                \n                // add new user group mappings (implicitly) using priority 0\n                $user_groups = get_user_group_mappings($dbSocket, $username);\n                if (count($newgroups) > 0) {\n                    foreach ($newgroups as $groupname) {\n                        $groupname = trim($groupname);\n                        \n                        if (empty($groupname) || in_array($groupname, $user_groups)) {\n                            continue;\n                        }\n                        \n                        insert_single_user_group_mapping($dbSocket, $username, $groupname);\n                    }\n                }\n\n                // $groups and $groups_priority are used to update existing user group mappings\n                if (count($groups) == count($groups_priority)) {\n                    // we need that these two arrays contain the exact same number of elements\n                    \n                    $updated_user_group_mappings = array();\n                    \n                    for ($i = 0; $i < count($groups); $i++) {\n                        $groupname = trim($groups[$i]);\n                        \n                        // if the groupname is empty or it is not contained\n                        // in the user group mappings we skip\n                        if (empty($groupname) || !in_array($groupname, $user_groups)) {\n                            continue;\n                        }\n                        \n                        $priority = (empty($groups_priority[$i])) ? 0 : intval($groups_priority[$i]);\n                        \n                        // if the groupname appears two times, we \"reset\" the priority to the default values\n                        $updated_user_group_mappings[$groupname] = (array_key_exists($groupname, $updated_user_group_mappings))\n                                                                 ? 0 : $priority;\n                    }\n                    \n                    // we now can proceed and update existing user group mappings\n                    foreach ($updated_user_group_mappings as $groupname => $priority) {\n                        update_user_group_mapping_priority($dbSocket, $username, $groupname, $priority);\n                    }\n                }\n                            \n                \n                addPlanProfile($dbSocket, $username, $planName, $oldplanName);\n\n                $successMsg = sprintf(\"Successfully updated user <strong>%s</strong>\", $username_enc);\n                $logAction .= sprintf(\"Successfully updated user %s on page: \", $username);\n            \n            } else { // if username != \"\"\n                $failureMsg = \"no user was entered, please specify a username to edit\";\n                $logAction .= \"Failed updating attributes for user [$username] on page: \";\n            }\n        \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n        \n    } else {\n        $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                  ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    }\n\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    //feed the sidebar variables\n    $edit_username = $username_enc;\n\n    if (empty($username)) {\n        $failureMsg = \"no user was entered, please specify a username to edit\";\n    } else {\n\n        /* an sql query to retrieve the password for the username to use in the quick link for the user test connectivity */\n        $sql = sprintf(\"SELECT value FROM %s WHERE username='%s' AND attribute LIKE '%%-Password' ORDER BY id DESC\",\n                       $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        $user_password = $res->fetchRow()[0];\n\n        /* fill-in all the user info details */\n        $sql = sprintf(\"SELECT firstname, lastname, email, department, company, workphone, homephone, mobilephone, address, city,\n                               state, country, zip, notes, changeuserinfo, portalloginpassword, enableportallogin, creationdate,\n                               creationby, updatedate, updateby\n                          FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                                                        $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        list( \n              $ui_firstname, $ui_lastname, $ui_email, $ui_department, $ui_company, $ui_workphone, $ui_homephone,\n              $ui_mobilephone, $ui_address, $ui_city, $ui_state, $ui_country, $ui_zip, $ui_notes, $ui_changeuserinfo,\n              $ui_PortalLoginPassword, $ui_enableUserPortalLogin, $ui_creationdate, $ui_creationby, $ui_updatedate,\n              $ui_updateby\n            ) = $res->fetchRow();\n\n        /* fill-in all the user bill info details */\n        $sql = sprintf(\"SELECT planName, contactperson, company, email, phone, address, city, state, country, zip, paymentmethod,\n                               cash, creditcardname, creditcardnumber, creditcardverification, creditcardtype, creditcardexp,\n                               notes, changeuserbillinfo, `lead`, coupon, ordertaker, billstatus, lastbill, nextbill,\n                               nextinvoicedue, billdue, postalinvoice, faxinvoice, emailinvoice, creationdate, creationby,\n                               updatedate, updateby\n                          FROM %s WHERE username='%s'\", $configValues['CONFIG_DB_TBL_DALOUSERBILLINFO'],\n                                                        $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        list(\n                $bi_planname, $bi_contactperson, $bi_company, $bi_email, $bi_phone, $bi_address, $bi_city, $bi_state,\n                $bi_country, $bi_zip, $bi_paymentmethod, $bi_cash, $bi_creditcardname, $bi_creditcardnumber,\n                $bi_creditcardverification, $bi_creditcardtype, $bi_creditcardexp, $bi_notes, $bi_changeuserbillinfo,\n                $bi_lead, $bi_coupon, $bi_ordertaker, $bi_billstatus, $bi_lastbill, $bi_nextbill, $bi_nextinvoicedue,\n                $bi_billdue, $bi_postalinvoice, $bi_faxinvoice, $bi_emailinvoice, $bi_creationdate, $bi_creationby,\n                $bi_updatedate, $bi_updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    \n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    // inline extra javascript\n    $inline_extra_js = sprintf(\"var strUsername = 'username=%s';\\n\", $username_enc);\n    \n    $inline_extra_js .= '\nfunction disableUser() {\n    if (confirm(\"You are about to disable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userDisable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nfunction enableUser() {\n    if (confirm(\"You are about to enable this user account\\nDo you want to continue?\"))  {\n        ajaxGeneric(\"include/management/userOperations.php\", \"userEnable=true\", \"returnMessages\", strUsername);\n        return true;\n    }\n}\n\nwindow.onload = function(){\n    ajaxGeneric(\"include/management/userOperations.php\", \"checkDisabled=true\", \"returnMessages\", strUsername);\n};' . \"\\n\";\n    \n    $title = t('Intro','mngedit.php');\n    $help = t('helpPage','mngedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js, \"\", $inline_extra_js);\n\n    if (!empty($username_enc)) {\n        $title .= \" :: $username_enc\";\n    }\n\n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // ajax return div\n    echo '<div id=\"returnMessages\"></div>';\n\n    include_once('include/management/actionMessages.php');\n    include('include/management/populate_selectbox.php');\n    \n    if (!empty($username)) {\n        // we have more than one form in this page so we can reuse many times the same csrf_token value\n        $csrf_token = dalo_csrf_token();\n        \n        $submit_descriptor = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $csrf_token,\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $username_enc,\n                                        \"name\" => \"username\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"username_presentation\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($username)) ? $username : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                      );\n                                    \n        $input_descriptors0[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"value\" => ((isset($user_password)) ? $user_password : \"\"),\n                                        \"disabled\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        \n        $input_descriptors0[] = array( 'name' => 'oldplanName', 'type' => 'hidden',\n                                                 'value' => ((isset($bi_planname)) ? $bi_planname : \"\") );\n                        \n        $options = get_active_plans();\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                         'type' => 'select',\n                                         'name' => 'planName',\n                                         'caption' => t('all','PlanName'),\n                                         'tooltipText' => t('Tooltip','planNameTooltip'),\n                                         'options' => $options,\n                                         'selected_value' => ((isset($bi_planname)) ? $bi_planname : \"\")\n                                     );\n\n        $buttons = array();\n        $buttons[] = array(\n                            'type' => 'button',\n                            'value' => 'Enable User',\n                            'onclick' => 'javascript:enableUser()',\n                            'name' => 'enableUser-button'\n                          );\n                          \n        $buttons[] = array(\n                            'type' => 'button',\n                            'value' => 'Disable User',\n                            'onclick' => 'javascript:disableUser()',\n                            'name' => 'disableUser-button'\n                          );\n        \n        // set navbar stuff\n        $navkeys = array( \n                          'AccountInfo', 'RADIUSCheck', 'RADIUSReply', 'UserInfo', 'BillingInfo',\n                          'Groups', 'Attributes', array( 'OtherInfo', \"Other Info\" )\n                        );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n\n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','AccountInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => \"Actions\",\n                                     );\n        \n        open_fieldset($fieldset0_descriptor);\n        \n        include('include/management/buttons.php');\n            \n        foreach ($buttons as $button_desc) {\n            print_input_field($button_desc);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        \n        // open 1-st tab (not shown)\n        open_tab($navkeys, 1);\n        \n        // open 1-st fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => t('title','RADIUSCheck'),\n                                     );\n        open_fieldset($fieldset1_descriptor);\n        \n        $hashing_algorithm_notice = '<small style=\"font-size: 10px; color: black\">'\n                                  . 'Notice that for supported password-like attributes, you can just specify a plaintext value. '\n                                  . 'The system will take care of correctly hashing it.'\n                                  . '</small>';\n\n        include('library/opendb.php');\n\n        include_once('include/management/pages_common.php');\n\n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.username='%s' ORDER BY rc.id ASC\", $configValues['CONFIG_DB_TBL_RADCHECK'],\n                                                                     $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                                     $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        if ($res->numRows() == 0) {\n            echo '<div style=\"text-align: center\">'\n               . t('messages','noCheckAttributesForUser')\n               . '</div>';\n        } else {\n            \n            echo '<ul>';\n            \n            while ($row = $res->fetchRow()) {\n                \n                foreach ($row as $i => $v) {\n                    $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                }\n\n                $id = $row[5];\n                $id__attribute = sprintf('%s__%s', $id, $row[0]);\n                $name = sprintf('editValues%s[]', $id);\n                $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n                $onclick = sprintf(\"document.getElementById('form-%d-radcheck').submit()\", $id);\n                \n                echo '<li>';\n                printf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">', $onclick);\n                echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n                \n                printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n                printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n                \n                printf('<select name=\"%s\" class=\"form\">', $name);\n                printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n                drawOptions();\n                echo '</select>';\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"radcheck\">', $name);\n\n\n                if (!empty($row[3]) || !empty($row[4])) {\n                    $divId = sprintf(\"%s-Tooltip-%d-radcheck\", $row[0], $id);\n                    $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                    printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                    printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                    \n                    if (!empty($row[3])) {\n                        echo '<br>';\n                        printf('<i><b>Type:</b> %s</i>', $row[3]);\n                    }\n                    \n                    if (!empty($row[4])) {\n                        echo '<br>';\n                        printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                    }\n                    echo '</div>';\n                }\n                \n                echo '</li>';\n            }\n            \n            echo '</ul>';\n        }\n        \n        echo $hashing_algorithm_notice;\n        \n        //~ print_form_component($submit_descriptor);\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 1);\n                        \n        // open 2-nd tab (not shown)\n        open_tab($navkeys, 2);\n        \n        // open 2-nd fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => t('title','RADIUSReply'),\n                                     );\n        open_fieldset($fieldset1_descriptor);\n        \n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.username='%s' ORDER BY rc.id ASC\", $configValues['CONFIG_DB_TBL_RADREPLY'],\n                                                                     $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                                     $dbSocket->escapeSimple($username));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n        if ($res->numRows() == 0) {\n            echo '<div style=\"text-align: center\">'\n               . t('messages','noReplyAttributesForUser')\n               . '</div>';\n        } else {\n            \n            echo '<ul>';\n            while ($row = $res->fetchRow()) {\n                \n                foreach ($row as $i => $v) {\n                    $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                }\n\n                $id = $row[5];\n                $id__attribute = sprintf('%s__%s', $id, $row[0]);\n                $name = sprintf('editValues%s[]', $id);\n                $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n                $onclick = sprintf(\"document.getElementById('form-%d-radreply').submit()\", $id);\n                \n                echo '<li>';\n                printf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">', $onclick);\n                echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n\n                printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n                printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n                \n                printf('<select name=\"%s\" class=\"form\">', $name);\n                printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n                drawOptions();\n                echo '</select>';\n\n                printf('<input type=\"hidden\" name=\"%s\" value=\"radreply\">', $name);\n\n                if (!empty($row[3]) || !empty($row[4])) {\n                    $divId = sprintf(\"%s-Tooltip-%d-radreply\", $row[0], $id);\n                    $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                    printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                    printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                    \n                    if (!empty($row[3])) {\n                        echo '<br>';\n                        printf('<i><b>Type:</b> %s</i>', $row[3]);\n                    }\n                    \n                    if (!empty($row[4])) {\n                        echo '<br>';\n                        printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                    }\n                    echo '</div>';\n                }\n                \n                echo '</li>';\n            }\n            echo '</ul>';\n        }\n\n        echo $hashing_algorithm_notice;\n\n        //~ print_form_component($submit_descriptor);\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 2);\n\n        //~ $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n        \n        // open 3-rd tab (not shown)\n        open_tab($navkeys, 3);\n        include_once('include/management/userinfo.php');\n        close_tab($navkeys, 3);\n        \n        \n        // open 4-th tab (not shown)\n        open_tab($navkeys, 4);\n        include_once('include/management/userbillinfo.php');\n        close_tab($navkeys, 4);\n\n        // open 5-th tab (not shown)\n        open_tab($navkeys, 5);\n\n        $fieldset5_descriptor = array(\n                                        \"title\" => \"Assign New Groups\",\n                                     );\n\n        open_fieldset($fieldset5_descriptor);\n\n        include_once('include/management/populate_selectbox.php');\n        $options = get_groups();\n        array_unshift($options, '');\n\n        include('library/opendb.php');\n        include_once('include/management/groups.php');\n        $selected_options = get_user_group_mappings($dbSocket, $username);\n        include('library/closedb.php');\n        \n        $input_descriptors5 = array();\n        \n        $input_descriptors5[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"newgroups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => $selected_options,\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n        //~ $input_descriptors5[] = array(\n                                        //~ 'type' => 'submit',\n                                        //~ 'name' => 'submit',\n                                        //~ 'value' => t('buttons','apply')\n                                     //~ );\n                                     \n        foreach ($input_descriptors5 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n\n        echo '<small style=\"font-size: 10px; color: black\">Manage all user-group mappings for this user '\n           . sprintf('<a href=\"mng-rad-usergroup-list-user.php?username=%s\">here</a>.', $username_enc)\n           . '</small>';\n        \n\n        close_fieldset();\n        \n        close_tab($navkeys, 5);\n\n        open_tab($navkeys, 6);\n\n        include_once('include/management/attributes.php');\n\n        close_tab($navkeys, 6);\n        \n        open_tab($navkeys, 7);\n\n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n\n        close_tab($navkeys, 7);\n\n        print_form_component($submit_descriptor);\n\n        close_form();\n\n        // print forms\n        include('library/opendb.php');\n\n        $tables = array(\n                            'radcheck' => $configValues['CONFIG_DB_TBL_RADCHECK'],\n                            'radreply' => $configValues['CONFIG_DB_TBL_RADREPLY']\n                       );\n\n        foreach ($tables as $table_value => $table) {\n\n            $sql = sprintf(\"SELECT id, attribute, value FROM %s WHERE username='%s' ORDER BY id ASC\",\n                           $table, $dbSocket->escapeSimple($username));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n\n            if ($res->numRows() > 0) {\n                \n                while ($row = $res->fetchrow()) {\n                    list($id, $attribute, $value) = $row;\n                    $id = intval($id);\n                    \n                    $formId = sprintf(\"form-%d-%s\", $id, $table_value);\n                    $id__attribute = sprintf(\"%d__%s\", $id, htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8'));\n                    \n                    printf('<form id=\"%s\" style=\"display: none\" method=\"POST\" action=\"mng-del.php\">', $formId);\n                    printf('<input type=\"hidden\" name=\"username\" value=\"%s\">', $username_enc);\n                    printf('<input type=\"hidden\" name=\"attribute\" value=\"%s\">', $id__attribute);\n                    printf('<input type=\"hidden\" name=\"csrf_token\" value=\"%s\">', $csrf_token);\n                    printf('<input type=\"hidden\" name=\"tablename\" value=\"%s\">', $table_value);\n                    echo '</form>';\n                }\n            }\n        }\n        include('library/closedb.php');\n\n    }\n    \n    print_back_to_previous_page();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n\n    include('library/opendb.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $name = (array_key_exists('name', $_POST) && isset($_POST['name']) && trim(str_replace(\"%\", \"\", $_POST['name'])))\n              ? trim($_POST['name']) : \"\";\n    } else {\n        $name = (array_key_exists('name', $_REQUEST) && isset($_REQUEST['name']) && trim(str_replace(\"%\", \"\", $_REQUEST['name'])))\n              ? trim($_REQUEST['name']) : \"\";\n    }\n    $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $edit_hotspotname = $name_enc;\n    \n    // check if it exists\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                               $dbSocket->escapeSimple($name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    $exists = $res->fetchrow()[0] > 0;\n    \n    if (!$exists) {\n        // we empty the name if the hs does not exist\n        $name = \"\";\n    }\n    \n    // from now on we can assume that $name is valid\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($name)) {\n                $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                               (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                                filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                            ? $_POST['macaddress'] : \"\";\n                \n                // we check that this MAC/IP addr is not assigned to any other HS\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE mac='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                                          $dbSocket->escapeSimple($macaddress));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if (!$exitst) {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n                    $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                                \n                    $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n                    $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n                    $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n                    $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n                    $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n                    $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n                    $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n                    $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n                    \n                    $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n                    $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n                    $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n                    $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n                    \n                    $sql = sprintf(\"UPDATE %s SET mac='%s', geocode='%s', owner='%s', email_owner='%s', manager='%s', email_manager='%s',\n                                                  address='%s', company='%s', phone1='%s', phone2='%s', type='%s', companywebsite='%s',\n                                                  companyemail='%s', companycontact='%s', companyphone='%s', updatedate='%s', updateby='%s'\n                                            WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode), $dbSocket->escapeSimple($owner),\n                                   $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager), $dbSocket->escapeSimple($email_manager),\n                                   $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company), $dbSocket->escapeSimple($phone1),\n                                   $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type), $dbSocket->escapeSimple($companywebsite),\n                                   $dbSocket->escapeSimple($companyemail) , $dbSocket->escapeSimple($companycontact),\n                                   $dbSocket->escapeSimple($companyphone), $currDate, $currBy, $dbSocket->escapeSimple($name));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to update this hotspot [%s]\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Updated hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully updated hotspot [%s] on page: \", $name);\n                    }\n                    \n                } else {\n                    // MAC/IP already taken\n                    $failureMsg = \"MAC/IP address already in use\";\n                    $logAction .= \"Failed updating (possible duplicate MAC/IP addr) HS on page: \";\n                }\n                \n            } else {\n                // invalid or empty\n                $failureMsg = \"Hotspot name is invalid or empty\";\n                $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n            }\n            \n        } else {\n            // csrf\n            $name = \"\";\n            $failureMsg = sprintf(\"CSRF token error\");\n            $logAction .= sprintf(\"CSRF token error on page: \");\n        }\n        \n    }\n    \n    \n    if (empty($name)) {\n        $failureMsg = \"Hotspot name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n    } else {\n        /* fill-in all the hs settings */\n        $sql = sprintf(\"SELECT id, name, mac, geocode, owner, email_owner, manager, email_manager, address, company,\n                               phone1, phone2, type, companywebsite, companyemail, companycontact, companyphone,\n                               creationdate, creationby, updatedate, updateby\n                          FROM %s\n                         WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                               $dbSocket->escapeSimple($name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        list(\n                $id, $name, $mac, $geocode, $owner, $email_owner, $manager, $email_manager, $address, $company, $phone1,\n                $phone2, $type, $companywebsite, $companyemail, $companycontact, $companyphone,\n                $creationdate, $creationby, $updatedate, $updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mnghsedit.php');\n    $help = t('helpPage','mnghsedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($name_enc)) {\n        $title .= \" :: $name_enc\";\n    } \n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($name)) {\n    \n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $name_enc,\n                                        \"name\" => \"name\"\n                                     );\n\n        $input_descriptors0[] = array(\n                                        \"name\" => \"name_presentation\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip'),\n                                        \"disabled\" => true\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($mac)) ? $mac : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        close_form();\n        \n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mnghslist.php');\n    $help = t('helpPage','mnghslist');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-mng-hs.php\");\n    \n    $cols = array(\n                    'name' => t('all','HotSpot'),\n                    'owner' => t('ContactInfo','OwnerName'),\n                    'company' => t('ContactInfo','Company'),\n                    'type' => t('ContactInfo','HotspotType')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    // we use this simplified query just to initialize $numrows\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n\n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql = \"SELECT name, owner, company, type FROM %s ORDER BY %s %s LIMIT %s, %s\";\n        $sql = sprintf($sql, $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                             $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-hs-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            \n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>' . '</tr>';\n        }\n?>\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('name[]', $action);\n?>\n                </th>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType);\n?>           \n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        $li_style = 'margin: 7px auto';\n        $count = 0;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n        \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n        \n            list($name, $owner, $company, $type) = $row;\n            \n            $tooltipText = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($name), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n            $onclick = sprintf('javascript:ajaxGeneric(\"include/management/retHotspotInfo.php\",\"retHotspotGeneralStat\",'\n                             . '\"divContainerHotspotInfo\",\"hotspot=%s\");return false;', urlencode($name));\n            \n?>\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"name[]\" value=\"<?= $name ?>\" id=\"<?= \"checkbox-$count\" ?>\">\n                    <label for=\"<?= \"checkbox-$count\" ?>\">\n                        <a class=\"tablenovisit\" href=\"#\" onclick='<?= $onclick ?>' tooltipText='<?= $tooltipText ?>'>\n                            <?= $name ?>\n                        </a>\n                    </label>\n                </td>\n<?php\n            // simply print remaining row elements\n            for ($i = 1; $i < $rowlen; $i++) {\n                echo \"<td>\" . $row[$i] . \"</td>\";\n            }\n?>\n            </tr>\n<?php\n            $count++;\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n    </table>\n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n\n    print_footer_and_html_epilogue($inline_extra_js);\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n\n    include_once('include/management/populate_selectbox.php');\n\n    // custom valid authTypes\n    $valid_authTypes = array(\n                                \"userAuth\" => \"Based on username and password\",\n                                \"otherAuth\" => \"Based on MAC addr/PIN code\"\n                            );\n\n    $valid_groups = get_groups();\n    $valid_planNames = get_plans();\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $authType = (array_key_exists('authType', $_POST) && isset($_POST['authType']) &&\n                         in_array($_POST['authType'], array_keys($valid_authTypes))) ? $_POST['authType'] : array_keys($valid_authTypes)[0];\n            \n            $planName = (array_key_exists('planName', $_POST) && !empty($_POST['planName']) &&\n                         in_array($_POST['planName'], $valid_planNames))\n                      ? $_POST['planName'] : \"\";\n            \n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            \n            $csvdata = (array_key_exists('csvdata', $_POST) && isset($_POST['csvdata']))\n                     ? $_POST['csvdata'] : \"\";\n            \n            $csvFormattedData = (!empty($csvdata)) ? explode(\"\\n\", $csvdata) : array();\n            \n            $simpleList = (array_key_exists('simpleList', $_POST) && isset($_POST['simpleList']))\n                        ? $_POST['simpleList'] : \"\";\n            \n            $simpleListData = (!empty($simpleList)) ? explode(\"\\n\", $simpleList) : array();\n            \n            $data = array();\n            $passwordType = \"\";\n            \n            if (count($csvFormattedData) > 0) {\n                \n                $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                                 in_array($_POST['passwordType'], $valid_passwordTypes))\n                              ? $_POST['passwordType'] : $valid_passwordTypes[0];\n                \n                foreach ($csvFormattedData as $csvLine) {\n                    \n                    $arr = explode(\",\", $csvLine);\n                    \n                    if (count($arr) != 2) {\n                        continue;\n                    }\n                    \n                    list($username, $password) = $arr;\n                    $username = trim($username);\n                    $password = trim($password);\n                    \n                    echo $username;\n                    echo $password;\n                    \n                    \n                    if (strpos(\"%\", $username) === false &&\n                        preg_match(ALL_PRINTABLE_CHARS_REGEX, $username) &&\n                        preg_match(ALL_PRINTABLE_CHARS_REGEX, $password) &&\n                        !array_key_exists($username, $data)) {\n                        $data[$username] = $password;\n                    }\n                }\n            \n                \n            } else if (count($simpleListData) > 0) {\n            \n                $passwordType = \"Auth-Type\";\n            \n                foreach ($simpleListData as $simpleLine) {\n                    $username = trim($simpleLine);\n                    \n                    if (preg_match(ALL_PRINTABLE_CHARS_REGEX, $username) &&\n                        !array_key_exists($username, $data)) {\n                        $data[$username] = \"Accept\";\n                    }\n                }\n            \n            }\n            \n            if (count($data) > 0 && !empty($passwordType)) {\n                \n                $currDate = date('Y-m-d H:i:s');\n                $currBy = $_SESSION['operator_user'];\n                \n                include('library/opendb.php');\n                \n                \n                $counter = 0;\n                foreach ($data as $subject => $value) {\n                    \n                    // skipping this user if it exists or insert fails\n                    if (user_exists($dbSocket, $subject) || \n                        !insert_single_attribute($dbSocket, $subject, $passwordType, \":=\", $value)) {\n                        continue;\n                    }\n                    \n                    // adding user info\n                    $params = array(\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = add_user_info($dbSocket, $subject, $params);\n                    \n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $subject, $groups);\n                    \n                    // adding billing info\n                    if (!empty($planName)) {\n                        $params[\"planName\"] = $planName;\n                    \n                        $addedBillingInfo = add_user_billing_info($dbSocket, $subject, $params);\n                    }\n                    \n                    $counter++;\n                }\n                \n                include('library/closedb.php');\n                \n                if ($counter > 0) {\n                    $successMsg = \"Successfully imported a total of <b>$counter</b> users to database\";\n                    $logAction .= \"Successfully imported a total of <b>$counter</b> users to database on page: \";\n                } else {\n                    $failureMsg = \"No users have been imported to database\";\n                    $logAction .= \"No users have been imported to database on page: \";\n                }\n                \n            } else {\n                // invalid data\n                $failureMsg = \"Empty or invalid data provided\";\n                $logAction .= \"Empty or invalid data provided on page: \";\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n\n    // print HTML prologue\n    $extra_css = array();\n    \n    $extra_js = array(\n        \"library/javascript/productive_funcs.js\",\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngimportusers.php');\n    $help = t('helpPage','mngimportusers');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include (\"menu-mng-users.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"authType\",\n                                        \"caption\" => \"Authentication Type\",\n                                        \"options\" => $valid_authTypes,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $authType : \"\")\n                                     );\n\n        $options = $valid_groups;\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"groups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n                                     \n        $options = $valid_planNames;\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"planName\",\n                                        \"caption\" => t('all','PlanName'),\n                                        \"options\" => $options,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $planName : \"\"),\n                                        \"tooltipText\" => t('Tooltip','planTooltip')\n                                     );\n        \n        open_form();\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','ImportUsers'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        \n        // open a fieldset\n        $fieldset1_descriptor = array(\n                                        \"title\" => \"Username/password info\",\n                                        \"id\" => \"userAuth-fieldset\",\n                                     );\n        \n        open_fieldset($fieldset1_descriptor);\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"type\" => \"select\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\")\n                                    );\n                                    \n        $input_descriptors1[] = array(\n                                        \"caption\" => t('all','CSVData'),\n                                        \"type\" => \"textarea\",\n                                        \"class\" => \"form_fileimport\",\n                                        \"name\" => \"csvdata\",\n                                        \"content\" => ((isset($failureMsg)) ? $csvdata : \"\"),\n                                     );\n                                        \n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        echo '<small style=\"color: black\">Paste a CSV-formatted data input of users, expected format is: user,password<br>'\n           . '<strong>Note</strong>: any CSV fields beyond the first 2 (user and password) are ignored<br></small>';\n        \n        close_fieldset();\n        \n        // open a fieldset\n        $fieldset2_descriptor = array(\n                                        \"title\" => \"MAC addr/PIN code info\",\n                                        \"id\" => \"otherAuth-fieldset\",\n                                     );\n        \n        open_fieldset($fieldset2_descriptor);\n        \n        $input_descriptors2[] = array(\n                                        \"caption\" => \"Simple List\",\n                                        \"type\" => \"textarea\",\n                                        \"class\" => \"form_fileimport\",\n                                        \"name\" => \"simpleList\",\n                                        \"content\" => ((isset($failureMsg)) ? $simpleList : \"\"),\n                                     );\n        \n        foreach ($input_descriptors2 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        echo '<small style=\"color: black\">Paste a simple list of MAC addresses or PIN codes<br>'\n           . '<strong>Note</strong>: each line a single MAC address or a PIN code<br></small>';\n        \n        close_fieldset();\n        \n        $button_descriptor = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                  );\n        \n        print_form_component($button_descriptor);\n        \n        close_form();\n    \n    }\n\n    include('include/config/logging.php');\n    $inline_extra_js = '\nfunction switchAuthType() {\n    var switcher = document.getElementById(\"authType\");\n    \n    for (var i=0; i<switcher.length; i++) {\n        var fieldset_id = switcher[i].value + \"-fieldset\",\n            disabled = switcher.value != switcher[i].value,\n            fieldset = document.getElementById(fieldset_id);\n        \n        fieldset.disabled = disabled;\n        fieldset.style.display = (disabled) ? \"none\" : \"block\";\n    }\n}\n\nwindow.addEventListener(\"load\", function() { switchAuthType(); });\n';\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mnglistall.php');\n    $help = t('helpPage','mnglistall');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-users.php\");\n    \n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"selected\",\n                    \"fullname\" => t('all','Name'),\n                    \"username\" => t('all','Username'),\n                 );\n\n    if (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) === \"yes\") {\n        $cols[] = t('all','Password');\n    } else {\n        $cols[\"auth\"] = t('all','Password');\n    }\n    \n    $cols[] = t('title','Groups');\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    echo '<div id=\"returnMessages\"></div>';\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADCHECK'];\n    $_SESSION['reportQuery'] = \"\";\n    $_SESSION['reportType'] = \"usernameListGeneric\";\n\n    // we use this simplified query just to initialize $numrows\n    $sql0 = sprintf(\"SELECT COUNT(DISTINCT(rc.username)) AS username\n                       FROM %s AS rc, %s AS ui\n                      WHERE rc.username=ui.username AND (rc.attribute='Auth-Type' OR rc.attribute LIKE '%%-Password')\",\n                    $configValues['CONFIG_DB_TBL_RADCHECK'], $configValues['CONFIG_DB_TBL_DALOUSERINFO']);\n    $res = $dbSocket->query($sql0);\n    $logDebugSQL .= \"$sql0;\\n\";\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n\n        // we execute and log the actual query\n        // sql1 get id, username, password, firstname and lastname\n        $sql1 = sprintf(\"SELECT rc.username AS username, rc.value AS auth, rc.attribute,\n                                CONCAT(ui.firstname, ' ', ui.lastname) AS fullname\n                           FROM %s AS rc, %s AS ui\n                          WHERE rc.username=ui.username\n                            AND (rc.attribute='Auth-Type' OR rc.attribute LIKE '%%-Password')\n                          ORDER BY %s %s LIMIT %s, %s\",\n                        $configValues['CONFIG_DB_TBL_RADCHECK'], $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                        $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql1);\n        $logDebugSQL .= \"$sql1;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // init $records and $usernamelist arrays\n        $records = array();\n        $usernamelist = array();\n        \n        while ($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n            // we start storing data...\n            // the enable flag is initialized to true\n            // and the groups list is empty\n            $this_username = $row['username'];\n            \n            if (array_key_exists($this_username, $records)) {\n                continue;\n            }\n            \n            // we try to get the type of this user\n            if ($row['attribute'] == 'Auth-Type' && $row['auth'] == 'Accept') {\n                if (filter_var($this_username, FILTER_VALIDATE_MAC)) {\n                    $type = 'MAC';\n                } else {\n                    $type = 'PIN';\n                }\n            } else {\n                $type = 'USER';\n            }\n            \n            $records[$this_username] = array(\n                'auth' => $row['auth'],\n                'fullname' => $row['fullname'],\n                'enabled' => true,\n                'groups' => array(),\n                'type' => $type\n            );\n            // in the same pass we init the $usernamelist\n            $usernamelist[] = sprintf(\"'%s'\", $dbSocket->escapeSimple($this_username));\n        }\n        \n        if (count($usernamelist) > 0) {\n        \n            // with this second query we retrieve user status (enabled/disabled) and user groups list\n            $sql2 = sprintf(\"SELECT username, groupname FROM %s WHERE username IN (%s)\",\n                            $configValues['CONFIG_DB_TBL_RADUSERGROUP'], implode(\", \", $usernamelist));\n            $res = $dbSocket->query($sql2);\n            $logDebugSQL .= \"$sql2;\\n\";\n\n            // foreach user we update the enabled flag and the grouplist\n            while ($row = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n                $this_username = $row['username'];\n                $this_groupname = $row['groupname'];\n\n                if ($this_groupname === 'daloRADIUS-Disabled-Users') {\n                    $records[$this_username]['enabled'] = false;\n                } else {\n                    array_push($records[$this_username]['groups'],\n                               htmlspecialchars($this_groupname, ENT_QUOTES, 'UTF-8'));\n                }\n            }\n        }\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-del.php\";\n?>\n\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n\n            </tr>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('username[]', $action);\n?>\n                    <input class=\"button\" type=\"button\" value=\"Disable\"\n                        onclick=\"javascript:disableCheckbox('listall','include/management/userOperations.php')\">\n                    <input class=\"button\" type=\"button\" value=\"Enable\"\n                        onclick=\"javascript:enableCheckbox('listall','include/management/userOperations.php')\">\n                </th>\n            </tr>\n\n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType);\n?>\n            </tr>\n            \n        </thead>\n\n        <tbody>\n<?php\n        $count = 0;\n        foreach ($records as $username => $data) {\n            $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n            $type = $data['type'];\n            \n            $img = (!$data['enabled'])\n                 ? '<img title=\"user is disabled\" src=\"images/icons/userStatusDisabled.gif\" alt=\"[disabled]\">'\n                 : '<img title=\"user is enabled\" src=\"images/icons/userStatusActive.gif\" alt=\"[enabled]\">';\n            \n            $auth = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) === \"yes\")\n                  ? \"[Password is hidden]\" : htmlspecialchars($data['auth'], ENT_QUOTES, 'UTF-8');\n            \n            $fullname = htmlspecialchars($data['fullname'], ENT_QUOTES, 'UTF-8');\n            $grouplist = implode(\"<br>\", $data['groups']);\n            \n            // tooltip and ajax stuff\n            $onclick = sprintf(\"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo',\"\n                             . \"'divContainerUserInfo','username=%s');\", urlencode($username));\n            $content = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>',\n                               urlencode($username), t('Tooltip','UserEdit'));\n            $arr = array(\n                            'content' => $content,\n                            'onClick' => $onclick,\n                            'value' => urlencode($username),\n                            'divId' => 'divContainerUserInfo'\n                        );\n            $tooltip = addToolTipBalloon($arr);\n?>\n            <tr>\n                <td>\n                    <label for=\"<?= \"checkbox-$count\" ?>\">\n                        <input type=\"checkbox\" name=\"username[]\" id=\"<?= \"checkbox-$count\" ?>\" value=\"<?= $username ?>\">\n                    </label>\n                </td>\n                <td><?= \"$fullname\" ?></td>\n                <td><?= \"$img $tooltip\" . sprintf(' <span class=\"badge badge-%s\">%s</span>', strtolower($type), $type); ?></td>\n                <td><?= ($type == 'USER') ? $auth : \"(n/a)\" ?></td>\n                <td><?= $grouplist ?></td>\n            </tr>\n<?php\n        } \n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n\n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n    \n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n        \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && isset($_POST['username']))\n                      ? trim(str_replace(\"%\", \"\", $_POST['username'])) : \"\";\n            $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n            // search:  \\$([A-Za-z0-9_]+)\\s+=\\s+\\$_POST\\[\\'([A-Za-z0-9_]+)\\'\\];\n            // replace: $\\1 = (array_key_exists('\\2', $_POST) && isset($_POST['\\2'])) ? $_POST['\\2'] : \"\";\n\n            $password = (array_key_exists('password', $_POST) && isset($_POST['password'])) ? trim($_POST['password']) : \"\";\n            $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                             in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n            $maxallsession = (array_key_exists('maxallsession', $_POST) && isset($_POST['maxallsession'])) ? $_POST['maxallsession'] : \"\";\n            $expiration = (array_key_exists('expiration', $_POST) && isset($_POST['expiration'])) ? $_POST['expiration'] : \"\";\n            $sessiontimeout = (array_key_exists('sessiontimeout', $_POST) && isset($_POST['sessiontimeout'])) ? $_POST['sessiontimeout'] : \"\";\n            $idletimeout = (array_key_exists('idletimeout', $_POST) && isset($_POST['idletimeout'])) ? $_POST['idletimeout'] : \"\";\n            $simultaneoususe = (array_key_exists('simultaneoususe', $_POST) && isset($_POST['simultaneoususe'])) ? $_POST['simultaneoususe'] : \"\";\n            $framedipaddress = (array_key_exists('framedipaddress', $_POST) && isset($_POST['framedipaddress'])) ? $_POST['framedipaddress'] : \"\";\n\n            // search:  isset\\(\\$_POST\\[\\'([A-Za-z0-9_]+)\\'\\]\\)\\s+\\?\\s+\\$([A-Za-z0-9_]+).*\n            // replace: $\\2 = (array_key_exists('\\1', $_POST) && isset($_POST['\\1'])) ? $_POST['\\1'] : \"\";\n\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n\n            // billing info variables\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n            \n            include('library/opendb.php');\n            \n            // check if username is already present in the radcheck table\n            $userExists = user_exists($dbSocket, $username);\n\n            if ($userExists) {\n                $failureMsg = \"user already exist in database: <b> $username_enc </b>\";\n                $logAction .= \"Failed adding new user already existing in database [$username] on page: \";\n            } else {\n                \n                // username and password are required\n                if (empty($username) || empty($password)) {\n                    $failureMsg = \"username and/or password are empty\";\n                    $logAction .= \"Failed adding (possible empty user/pass) new user [$username] on page: \";\n                } else {\n                \n                    // we \"inject\" specified attribute in the $_POST array.\n                    // handleAttributes() - called later - will take care of it.\n                    $injected_attribute = array();\n                    \n                    $injected_attribute[$passwordType] = $password;\n                    \n                    if ($maxallsession) {\n                        $injected_attribute['Max-All-Session'] = $maxallsession;\n                    }\n\n                    if ($expiration) {\n                        $injected_attribute['Expiration'] = $expiration;\n                    }\n\n                    if ($sessiontimeout) {\n                        $injected_attribute['Session-Timeout'] = $sessiontimeout;\n                    }\n\n                    if ($idletimeout) {\n                        $injected_attribute['Idle-Timeout'] = $idletimeout;\n                    }\n\n                    if ($simultaneoususe) {\n                        $injected_attribute['Simultaneous-Use'] = $simultaneoususe;\n                    }\n                    \n                    if ($framedipaddress) {\n                        $injected_attribute['Framed-IP-Address'] = $framedipaddress;\n                    }\n\n                    $i = 0;\n                    foreach ($injected_attribute as $attribute => $value) {\n                        $index = 'injected_attribute' . $i;\n                        $_POST[$index] = array( $attribute, $value, ':=', 'check' );\n                        $i++;\n                    }\n\n                    include(\"library/attributes.php\");\n                    $skipList = array(\n                                       \"username\", \"password\", \"passwordType\", \"groups\", \"maxallsession\", \"expiration\",\n                                       \"sessiontimeout\", \"idletimeout\", \"simultaneoususe\", \"framedipaddress\",\n                                       \"firstname\", \"lastname\", \"email\", \"department\", \"company\", \"workphone\", \"homephone\",\n                                       \"mobilephone\", \"address\", \"city\", \"state\", \"country\", \"zip\", \"notes\", \"changeuserinfo\",\n                                       \"enableUserPortalLogin\", \"portalLoginPassword\", \"bi_contactperson\", \"bi_company\",\n                                       \"bi_email\", \"bi_phone\", \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\",\n                                       \"bi_paymentmethod\", \"bi_cash\", \"bi_creditcardname\", \"bi_creditcardnumber\",\n                                       \"bi_creditcardverification\", \"bi_creditcardtype\", \"bi_creditcardexp\", \"bi_notes\",\n                                       \"changeUserBillInfo\", \"csrf_token\", \"submit\"\n                                     );\n                    $attributesCount = handleAttributes($dbSocket, $username, $skipList);\n                    \n                    // check if any group should be added\n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $username, $groups);\n                    \n                    // adding user info\n                    $params = array(\n                                        \"firstname\" => $firstname,\n                                        \"lastname\" => $lastname,\n                                        \"email\" => $email,\n                                        \"department\" => $department,\n                                        \"company\" => $company,\n                                        \"workphone\" => $workphone,\n                                        \"homephone\" => $homephone,\n                                        \"mobilephone\" => $mobilephone,\n                                        \"address\" => $address,\n                                        \"city\" => $city,\n                                        \"state\" => $state,\n                                        \"country\" => $country,\n                                        \"zip\" => $zip,\n                                        \"notes\" => $notes,\n                                        \"changeuserinfo\" => $ui_changeuserinfo,\n                                        \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                        \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = (add_user_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    // adding billing info\n                    $params = array(\n                                        //~ \"planName\" => $planName,\n                                        \"contactperson\" => $bi_contactperson,\n                                        \"company\" => $bi_company,\n                                        \"email\" => $bi_email,\n                                        \"phone\" => $bi_phone,\n                                        \"address\" => $bi_address,\n                                        \"city\" => $bi_city,\n                                        \"state\" => $bi_state,\n                                        \"country\" => $bi_country,\n                                        \"zip\" => $bi_zip,\n                                        \"postalinvoice\" => $bi_postalinvoice,\n                                        \"faxinvoice\" => $bi_faxinvoice,\n                                        \"emailinvoice\" => $bi_emailinvoice,\n                                        \n                                        \"paymentmethod\" => $bi_paymentmethod,\n                                        \"cash\" => $bi_cash,\n                                        \"creditcardname\" => $bi_creditcardname,\n                                        \"creditcardnumber\" => $bi_creditcardnumber,\n                                        \"creditcardverification\" => $bi_creditcardverification,\n                                        \"creditcardtype\" => $bi_creditcardtype,\n                                        \"creditcardexp\" => $bi_creditcardexp,\n                                        \n                                        \"lead\" => $bi_lead,\n                                        \"coupon\" => $bi_coupon,\n                                        \"ordertaker\" => $bi_ordertaker,\n                                        \n                                        \"notes\" => $bi_notes,\n                                        \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                        \n                                        //~ \"billstatus\" => $bi_billstatus,\n                                        //~ \"lastbill\" => $bi_lastbill,\n                                        //~ \"nextbill\" => $bi_nextbill,\n                                        \"billdue\" => $bi_billdue,\n                                        \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                        \n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedBillingInfo = (add_user_billing_info($dbSocket, $username, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    $successMsg = 'Inserted new <strong>user</strong>: '\n                                . sprintf('<a href=\"mng-edit.php?username=%s\" title=\"Edit\">%s</a>', $username_enc, $username_enc)\n                                . '<ul style=\"color: black\">'\n                                . sprintf(\"<li><strong>attributes count</strong>: %d</li>\", $attributesCount)\n                                . sprintf(\"<li><strong>groups count</strong>: %d</li>\", $groupsCount)\n                                . sprintf(\"<li><strong>user info</strong>: %s</li>\", $addedUserInfo)\n                                . sprintf(\"<li><strong>billing info</strong>: %s</li>\", $addedBillingInfo)\n                                . \"</ul>\";\n                    \n                    $logAction .= sprintf(\"Successfully inserted new user [%s] on page: \", $username);\n                    \n                } // if (empty($username) || empty($password)) {\n            \n            } // if ($userExists) {\n\n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngnewquick.php');\n    $help = t('helpPage','mngnewquick');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    // set navbar stuff\n    $navkeys = array( 'AccountInfo', 'UserInfo', 'BillingInfo' );\n\n    // print navbar controls\n    print_tab_header($navkeys);\n    \n    open_form();\n    \n    // open 0-th tab (shown)\n    open_tab($navkeys, 0, true);\n    \n    // open 0-th fieldset\n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','AccountInfo'),\n                                 );\n\n    open_fieldset($fieldset0_descriptor);\n    \n    \n    $input_descriptors0 = array();\n    \n    $input_descriptors0[] = array(\n                                    \"id\" => \"username\",\n                                    \"name\" => \"username\",\n                                    \"caption\" => t('all','Username'),\n                                    \"type\" => \"text\",\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                 );\n                                \n    $input_descriptors0[] = array(\n                                    \"id\" => \"password\",\n                                    \"name\" => \"password\",\n                                    \"caption\" => t('all','Password'),\n                                    \"type\" => $hiddenPassword,\n                                    \"value\" => \"\",\n                                    \"random\" => true,\n                                    \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                 );\n\n    $input_descriptors0[] = array(\n                                    \"name\" => \"passwordType\",\n                                    \"caption\" => t('all','PasswordType'),\n                                    \"options\" => $valid_passwordTypes,\n                                    \"type\" => \"select\"\n                                );\n                  \n    include_once('include/management/populate_selectbox.php');\n    $options = get_groups();\n    array_unshift($options, '');\n    $input_descriptors0[] = array(\n                                    \"type\" =>\"select\",\n                                    \"name\" => \"groups[]\",\n                                    \"id\" => \"groups\",\n                                    \"caption\" => t('all','Group'),\n                                    \"options\" => $options,\n                                    \"multiple\" => true,\n                                    \"size\" => 5,\n                                    \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                    \"tooltipText\" => t('Tooltip','groupTooltip')\n                                 );\n    \n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    \n    // open 1-th fieldset\n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','Attributes'),\n                                 );\n\n    open_fieldset($fieldset1_descriptor);\n    \n    $input_descriptors1 = array();\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors1[] = array(\n                                    \"name\" => \"simultaneoususe\",\n                                    \"caption\" => t('all','SimultaneousUse'),\n                                    \"type\" => \"number\",\n                                );\n    \n    $input_descriptors1[] = array(\n                                    \"name\" => \"framedipaddress\",\n                                    \"caption\" => t('all','FramedIPAddress'),\n                                    \"type\" => \"text\",\n                                    \"pattern\" => trim(IP_REGEX, \"/\"),\n                                    \"title\" => \"you should provide a valid IP address\"\n                                );\n    \n    $input_descriptors1[] = array(\n                                    \"id\" => \"expiration\",\n                                    \"name\" => \"expiration\",\n                                    \"caption\" => t('all','Expiration'),\n                                    \"type\" => \"date\",\n                                    \"min\" => date('Y-m-d', strtotime('+1 day')), // tomorrow\n                                );\n    \n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    $time_values = array(\n                            \"0\" => \"calculate time\",\n                            \"1\" => \"seconds\",\n                            \"60\" => \"minutes\",\n                            \"3600\" => \"hours\",\n                            \"86400\" => \"days\",\n                            \"604800\" => \"weeks\",\n                            \"2592000\" => \"months (30 days)\",\n                        );\n                        \n    $select_descriptors = array();\n    \n    $select_descriptors[] = array(\n                                    \"id\" => \"sessiontimeout\",\n                                    \"name\" => \"sessiontimeout\",\n                                    \"caption\" => t('all','SessionTimeout'),\n                                    \"type\" => \"number\",\n                                    \"options\" => $time_values\n                                 );\n                                 \n    $select_descriptors[] = array(\n                                    \"id\" => \"idletimeout\",\n                                    \"name\" => \"idletimeout\",\n                                    \"caption\" => t('all','IdleTimeout'),\n                                    \"type\" => \"number\",\n                                    \"options\" => $time_values\n                                 );\n                                 \n    $select_descriptors[] = array(\n                                \"id\" => \"maxallsession\",\n                                \"name\" => \"idletimeout\",\n                                \"caption\" => t('all','MaxAllSession'),\n                                \"type\" => \"number\",\n                                \"options\" => $time_values\n                             );\n                             \n    \n    foreach ($select_descriptors as $select_descriptor) {\n        print_calculated_select($select_descriptor);\n    }\n    \n    close_fieldset();\n    \n    $button_descriptor = array(\n                                'type' => 'submit',\n                                'name' => 'submit',\n                                'value' => t('buttons','apply'),\n                                'onclick' => 'javascript:small_window(document.newuser.username.value,\n                                                                      document.newuser.password.value,\n                                                                      document.newuser.maxallsession.value)'\n                              );\n    \n    print_form_component($button_descriptor);\n    \n    close_tab($navkeys, 0);\n\n    // open 1-th tab (shown)\n    open_tab($navkeys, 1);\n    \n    $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" ', t('buttons','apply'))\n                       . 'onclick=\"javascript:small_window(document.newuser.username.value, '\n                       . 'document.newuser.password.value, document.newuser.maxallsession.value);\" '\n                       . 'class=\"button\">';\n    include_once('include/management/userinfo.php');\n    \n    close_tab($navkeys, 1);\n    \n    // open 2-th tab (shown)\n    open_tab($navkeys, 2);\n    \n    $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n    include_once('include/management/userbillinfo.php');\n    \n    close_tab($navkeys, 2);\n    \n    close_form();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n\n    // if cleartext passwords are not allowed, \n    // we remove Cleartext-Password from the $valid_passwordTypes array\n    if (isset($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) &&\n        strtolower($configValues['CONFIG_DB_PASSWORD_ENCRYPTION']) !== 'cleartext') {\n        $valid_passwordTypes = array_diff($valid_passwordTypes, array(\"Cleartext-Password\"));\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n    \n            // required later\n            $currDate = date('Y-m-d H:i:s');\n            $currBy = $operator;\n    \n            // TODO validate user input\n            $username = (array_key_exists('username', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['username']))))\n                      ? str_replace(\"%\", \"\", trim($_POST['username'])) : \"\";\n            $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n            $authType = (array_key_exists('authType', $_POST) && isset($_POST['authType']) &&\n                         in_array($_POST['authType'], array_keys($valid_authTypes))) ? $_POST['authType'] : array_keys($valid_authTypes)[0];\n            \n            $password = (array_key_exists('password', $_POST) && isset($_POST['password'])) ? $_POST['password'] : \"\";\n            $passwordType = (array_key_exists('passwordType', $_POST) && isset($_POST['passwordType']) &&\n                             in_array($_POST['passwordType'], $valid_passwordTypes)) ? $_POST['passwordType'] : \"\";\n            \n            $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                           filter_var(trim(strtoupper($_POST['macaddress'])), FILTER_VALIDATE_MAC)) ? trim(strtoupper($_POST['macaddress'])) : \"\";\n                           \n            $pincode = (array_key_exists('pincode', $_POST) && isset($_POST['pincode'])) ? trim($_POST['pincode']) : \"\";\n\n            // this can be used for all authTypes\n            $groups = (array_key_exists('groups', $_POST) && isset($_POST['groups'])) ? $_POST['groups'] : array();\n\n            // billing info variables\n            $bi_contactperson = (array_key_exists('bi_contactperson', $_POST) && isset($_POST['bi_contactperson'])) ? $_POST['bi_contactperson'] : \"\";\n            $bi_company = (array_key_exists('bi_company', $_POST) && isset($_POST['bi_company'])) ? $_POST['bi_company'] : \"\";\n            $bi_email = (array_key_exists('bi_email', $_POST) && isset($_POST['bi_email'])) ? $_POST['bi_email'] : \"\";\n            $bi_phone = (array_key_exists('bi_phone', $_POST) && isset($_POST['bi_phone'])) ? $_POST['bi_phone'] : \"\";\n            $bi_address = (array_key_exists('bi_address', $_POST) && isset($_POST['bi_address'])) ? $_POST['bi_address'] : \"\";\n            $bi_city = (array_key_exists('bi_city', $_POST) && isset($_POST['bi_city'])) ? $_POST['bi_city'] : \"\";\n            $bi_state = (array_key_exists('bi_state', $_POST) && isset($_POST['bi_state'])) ? $_POST['bi_state'] : \"\";\n            $bi_country = (array_key_exists('bi_country', $_POST) && isset($_POST['bi_country'])) ? $_POST['bi_country'] : \"\";\n            $bi_zip = (array_key_exists('bi_zip', $_POST) && isset($_POST['bi_zip'])) ? $_POST['bi_zip'] : \"\";\n            $bi_postalinvoice = (array_key_exists('bi_postalinvoice', $_POST) && isset($_POST['bi_postalinvoice'])) ? $_POST['bi_postalinvoice'] : \"\";\n            $bi_faxinvoice = (array_key_exists('bi_faxinvoice', $_POST) && isset($_POST['bi_faxinvoice'])) ? $_POST['bi_faxinvoice'] : \"\";\n            $bi_emailinvoice = (array_key_exists('bi_emailinvoice', $_POST) && isset($_POST['bi_emailinvoice'])) ? $_POST['bi_emailinvoice'] : \"\";\n            \n            $bi_paymentmethod = (array_key_exists('bi_paymentmethod', $_POST) && isset($_POST['bi_paymentmethod'])) ? $_POST['bi_paymentmethod'] : \"\";\n            $bi_cash = (array_key_exists('bi_cash', $_POST) && isset($_POST['bi_cash'])) ? $_POST['bi_cash'] : \"\";\n            $bi_creditcardname = (array_key_exists('bi_creditcardname', $_POST) && isset($_POST['bi_creditcardname'])) ? $_POST['bi_creditcardname'] : \"\";\n            $bi_creditcardnumber = (array_key_exists('bi_creditcardnumber', $_POST) && isset($_POST['bi_creditcardnumber'])) ? $_POST['bi_creditcardnumber'] : \"\";\n            $bi_creditcardverification = (array_key_exists('bi_creditcardverification', $_POST) && isset($_POST['bi_creditcardverification'])) ? $_POST['bi_creditcardverification'] : \"\";\n            $bi_creditcardtype = (array_key_exists('bi_creditcardtype', $_POST) && isset($_POST['bi_creditcardtype'])) ? $_POST['bi_creditcardtype'] : \"\";\n            $bi_creditcardexp = (array_key_exists('bi_creditcardexp', $_POST) && isset($_POST['bi_creditcardexp'])) ? $_POST['bi_creditcardexp'] : \"\";\n            \n            $bi_lead = (array_key_exists('bi_lead', $_POST) && isset($_POST['bi_lead'])) ? $_POST['bi_lead'] : \"\";\n            $bi_coupon = (array_key_exists('bi_coupon', $_POST) && isset($_POST['bi_coupon'])) ? $_POST['bi_coupon'] : \"\";\n            $bi_ordertaker = (array_key_exists('bi_ordertaker', $_POST) && isset($_POST['bi_ordertaker'])) ? $_POST['bi_ordertaker'] : \"\";\n            \n            $bi_notes = (array_key_exists('bi_notes', $_POST) && isset($_POST['bi_notes'])) ? $_POST['bi_notes'] : \"\";\n            $bi_changeuserbillinfo = (array_key_exists('changeUserBillInfo', $_POST) && isset($_POST['changeUserBillInfo'])) ? $_POST['changeUserBillInfo'] : \"0\";\n            \n            //~ isset($_POST['bi_billstatus']) ? $bi_billstatus = $_POST['bi_billstatus'] : $bi_billstatus = \"\";\n            //~ isset($_POST['bi_lastbill']) ? $bi_lastbill = $_POST['bi_lastbill'] : $bi_lastbill = \"\";\n            //~ isset($_POST['bi_nextbill']) ? $bi_nextbill = $_POST['bi_nextbill'] : $bi_nextbill = \"\";\n            $bi_nextinvoicedue = (array_key_exists('bi_nextinvoicedue', $_POST) && isset($_POST['bi_nextinvoicedue'])) ? $_POST['bi_nextinvoicedue'] : \"\";\n            $bi_billdue = (array_key_exists('bi_billdue', $_POST) && isset($_POST['bi_billdue'])) ? $_POST['bi_billdue'] : \"\";\n            \n            \n            // user info variables\n            $firstname = (array_key_exists('firstname', $_POST) && isset($_POST['firstname'])) ? $_POST['firstname'] : \"\";\n            $lastname = (array_key_exists('lastname', $_POST) && isset($_POST['lastname'])) ? $_POST['lastname'] : \"\";\n            $email = (array_key_exists('email', $_POST) && isset($_POST['email'])) ? $_POST['email'] : \"\";\n            $department = (array_key_exists('department', $_POST) && isset($_POST['department'])) ? $_POST['department'] : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? $_POST['company'] : \"\";\n            $workphone = (array_key_exists('workphone', $_POST) && isset($_POST['workphone'])) ? $_POST['workphone'] : \"\";\n            $homephone = (array_key_exists('homephone', $_POST) && isset($_POST['homephone'])) ? $_POST['homephone'] : \"\";\n            $mobilephone = (array_key_exists('mobilephone', $_POST) && isset($_POST['mobilephone'])) ? $_POST['mobilephone'] : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? $_POST['address'] : \"\";\n            $city = (array_key_exists('city', $_POST) && isset($_POST['city'])) ? $_POST['city'] : \"\";\n            $state = (array_key_exists('state', $_POST) && isset($_POST['state'])) ? $_POST['state'] : \"\";\n            $country = (array_key_exists('country', $_POST) && isset($_POST['country'])) ? $_POST['country'] : \"\";\n            $zip = (array_key_exists('zip', $_POST) && isset($_POST['zip'])) ? $_POST['zip'] : \"\";\n            $notes = (array_key_exists('notes', $_POST) && isset($_POST['notes'])) ? $_POST['notes'] : \"\";\n            $ui_changeuserinfo = (array_key_exists('changeuserinfo', $_POST) && isset($_POST['changeuserinfo'])) ? $_POST['changeuserinfo'] : \"0\";\n            $ui_enableUserPortalLogin = (array_key_exists('enableUserPortalLogin', $_POST) && isset($_POST['enableUserPortalLogin'])) ? $_POST['enableUserPortalLogin'] : \"0\";\n            $ui_PortalLoginPassword = (array_key_exists('portalLoginPassword', $_POST) && isset($_POST['portalLoginPassword'])) ? $_POST['portalLoginPassword'] : \"\";\n            \n            isset($_POST['dictAttributes']) ? $dictAttributes = $_POST['dictAttributes'] : $dictAttributes = \"\";\n    \n            include('library/opendb.php');\n\n            // we will have a $username_to_check, only\n            // if required arguments have been supplied\n            // according to the chosen $authType\n            $username_to_check = \"\";\n            \n            if ($authType == \"userAuth\") {\n                // we can add a new record to the check table\n                // only if $username and $password are not empty\n                if (!empty($username) && !empty($password)) {\n                    $username_to_check = $username;\n                } else {\n                    $failureMsg = \"Username and/or password are invalid\";\n                    \n                }\n            } else if ($authType == \"macAuth\") {\n                if (!empty($macaddress)) {\n                    $username_to_check = $macaddress;\n                } else {\n                    $failureMsg = \"MAC address is invalid\";\n                }\n            } else if ($authType == \"pincodeAuth\") {\n                if (!empty($pincode)) {\n                    $username_to_check = $pincode;\n                } else {\n                    $failureMsg = \"PIN code is invalid\";\n                }\n            } else {\n                // authentication method is invalid\n                $failureMsg = \"Unknown authentication method\";\n            }\n\n            if (empty($username_to_check)) {\n                // failure message has been set above\n                $logAction .= \"Failed adding a new user ($failureMsg) on page: \";\n                \n            } else {\n                \n                // we can proceed and check if username/mac address/pincode is already present in the radcheck table\n                $exists = user_exists($dbSocket, $username_to_check);\n                \n                // we proceed only if username/mac address/pincode is not present\n                if ($exists) {\n                    // user exists\n                    $failureMsg = sprintf(\"record already found in database: <strong>%s</strong>\",\n                                          htmlspecialchars($username_to_check, ENT_QUOTES, 'UTF-8'));\n                    $logAction .= \"Failed adding new user already existing in database [$username_to_check] on page: \";\n                } else {\n                    \n                    if ($authType == \"userAuth\") {\n                        // we prepare a password attribute for the \"injection\" (see below)\n                        // and the success/log messages\n                        \n                        $attribute = $passwordType;\n                        $value = $password;\n                        \n                        $u = $username;\n                        $what = \"user\";\n\n                    } else if ($authType == \"macAuth\" || $authType == \"pincodeAuth\") {\n                        // we prepare an auth attribute for the \"injection\" (see below)\n                        // and the success/log messages\n                        \n                        $attribute = 'Auth-Type';\n                        $value = 'Accept';\n                        \n                        if ($authType == \"macAuth\") {\n                            $u = $macaddress;\n                            $what = \"MAC address\";\n                            \n                        } else {\n                            $u = $pincode;\n                            $what = \"PIN code\";\n                        }\n\n                    } \n                   \n                    // we \"inject\" the prepared password/auth attribute in the $_POST array.\n                    // handleAttributes() - called later - will take care of it.\n                    $_POST['injected_attribute'] = array( $attribute, $value, ':=', 'check' );\n\n                    include(\"library/attributes.php\");\n\n                    $skipList = array( \"authType\", \"username\", \"password\", \"passwordType\", \"groups\",\n                                       \"macaddress\", \"pincode\", \"submit\", \"firstname\", \"lastname\", \"email\",\n                                       \"department\", \"company\", \"workphone\", \"homephone\", \"mobilephone\", \"address\", \"city\",\n                                       \"state\", \"country\", \"zip\", \"notes\", \"bi_contactperson\", \"bi_company\", \"bi_email\", \"bi_phone\",\n                                       \"bi_address\", \"bi_city\", \"bi_state\", \"bi_country\", \"bi_zip\", \"bi_paymentmethod\", \"bi_cash\",\n                                       \"bi_creditcardname\", \"bi_creditcardnumber\", \"bi_creditcardverification\", \"bi_creditcardtype\",\n                                       \"bi_creditcardexp\", \"bi_notes\", \"bi_lead\", \"bi_coupon\", \"bi_ordertaker\", \"bi_billstatus\",\n                                       \"bi_lastbill\", \"bi_nextbill\", \"bi_nextinvoicedue\", \"bi_billdue\", \"bi_postalinvoice\", \"bi_faxinvoice\",\n                                       \"bi_emailinvoice\", \"changeUserBillInfo\", \"changeUserInfo\", \"copycontact\", \"portalLoginPassword\",\n                                       \"enableUserPortalLogin\", \"csrf_token\", \"submit\"\n                                     );\n\n                    $attributesCount = handleAttributes($dbSocket, $u, $skipList);\n                    \n                    $groupsCount = insert_multiple_user_group_mappings($dbSocket, $u, $groups);\n                    \n                    // adding user info\n                    $params = array(\n                                        \"firstname\" => $firstname,\n                                        \"lastname\" => $lastname,\n                                        \"email\" => $email,\n                                        \"department\" => $department,\n                                        \"company\" => $company,\n                                        \"workphone\" => $workphone,\n                                        \"homephone\" => $homephone,\n                                        \"mobilephone\" => $mobilephone,\n                                        \"address\" => $address,\n                                        \"city\" => $city,\n                                        \"state\" => $state,\n                                        \"country\" => $country,\n                                        \"zip\" => $zip,\n                                        \"notes\" => $notes,\n                                        \"changeuserinfo\" => $ui_changeuserinfo,\n                                        \"enableuserportallogin\" => $ui_enableUserPortalLogin,\n                                        \"portalloginpassword\" => $ui_PortalLoginPassword,\n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedUserInfo = (add_user_info($dbSocket, $u, $params)) ? \"stored\" : \"nothing to store\";\n                    \n                    // adding billing info\n                    $params = array(\n                                        //~ \"planName\" => $planName,\n                                        \"contactperson\" => $bi_contactperson,\n                                        \"company\" => $bi_company,\n                                        \"email\" => $bi_email,\n                                        \"phone\" => $bi_phone,\n                                        \"address\" => $bi_address,\n                                        \"city\" => $bi_city,\n                                        \"state\" => $bi_state,\n                                        \"country\" => $bi_country,\n                                        \"zip\" => $bi_zip,\n                                        \"postalinvoice\" => $bi_postalinvoice,\n                                        \"faxinvoice\" => $bi_faxinvoice,\n                                        \"emailinvoice\" => $bi_emailinvoice,\n                                        \n                                        \"paymentmethod\" => $bi_paymentmethod,\n                                        \"cash\" => $bi_cash,\n                                        \"creditcardname\" => $bi_creditcardname,\n                                        \"creditcardnumber\" => $bi_creditcardnumber,\n                                        \"creditcardverification\" => $bi_creditcardverification,\n                                        \"creditcardtype\" => $bi_creditcardtype,\n                                        \"creditcardexp\" => $bi_creditcardexp,\n                                        \n                                        \"lead\" => $bi_lead,\n                                        \"coupon\" => $bi_coupon,\n                                        \"ordertaker\" => $bi_ordertaker,\n                                        \n                                        \"notes\" => $bi_notes,\n                                        \"changeuserbillinfo\" => $bi_changeuserbillinfo,\n                                        \n                                        //~ \"billstatus\" => $bi_billstatus,\n                                        //~ \"lastbill\" => $bi_lastbill,\n                                        //~ \"nextbill\" => $bi_nextbill,\n                                        \"billdue\" => $bi_billdue,\n                                        \"nextinvoicedue\" => $bi_nextinvoicedue,\n                                        \n                                        \"creationdate\" => $currDate,\n                                        \"creationby\" => $currBy,\n                                   );\n                    \n                    $addedBillingInfo = (add_user_billing_info($dbSocket, $u, $params)) ? \"stored\" : \"nothing to store\";\n\n                    $u_enc = htmlspecialchars($u, ENT_QUOTES, 'UTF-8');\n\n                    $successMsg = sprintf('Inserted new <strong>%s</strong>: ', $what)\n                                . sprintf('<a href=\"mng-edit.php?username=%s\" title=\"Edit\">%s</a>', $u_enc, $u_enc)\n                                . '<ul style=\"color: black\">'\n                                . sprintf(\"<li><strong>attributes count</strong>: %d</li>\", $attributesCount)\n                                . sprintf(\"<li><strong>groups count</strong>: %d</li>\", $groupsCount)\n                                . sprintf(\"<li><strong>user info</strong>: %s</li>\", $addedUserInfo)\n                                . sprintf(\"<li><strong>billing info</strong>: %s</li>\", $addedBillingInfo)\n                                . \"</ul>\";\n                    \n                    $logAction .= sprintf(\"Successfully inserted new %s [%s] on page: \", $what, $u);\n                }\n            }\n            \n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\")\n                    ? 'password' : 'text';\n    \n    \n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngnew.php');\n    $help = t('helpPage','mngnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-mng-users.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n    \n        include_once('include/management/populate_selectbox.php');\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"authType\",\n                                        \"caption\" => \"Authentication Type\",\n                                        \"options\" => $valid_authTypes,\n                                        \"onchange\" => \"switchAuthType()\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $authType : \"\")\n                                     );\n\n        $options = get_groups();\n        array_unshift($options, '');\n        $input_descriptors0[] = array(\n                                        \"type\" =>\"select\",\n                                        \"name\" => \"groups[]\",\n                                        \"id\" => \"groups\",\n                                        \"caption\" => t('all','Group'),\n                                        \"options\" => $options,\n                                        \"multiple\" => true,\n                                        \"size\" => 5,\n                                        \"selected_value\" => ((isset($failureMsg)) ? $groups : \"\"),\n                                        \"tooltipText\" => t('Tooltip','groupTooltip')\n                                     );\n\n\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"id\" => \"username\",\n                                        \"name\" => \"username\",\n                                        \"caption\" => t('all','Username'),\n                                        \"type\" => \"text\",\n                                        \"random\" => true,\n                                        \"value\" => ((isset($failureMsg)) ? $username : \"\"),\n                                        \"tooltipText\" => t('Tooltip','usernameTooltip')\n                                     );\n                                    \n        $input_descriptors1[] = array(\n                                        \"id\" => \"password\",\n                                        \"name\" => \"password\",\n                                        \"caption\" => t('all','Password'),\n                                        \"type\" => $hiddenPassword,\n                                        \"random\" => true,\n                                        \"tooltipText\" => t('Tooltip','passwordTooltip')\n                                     );\n        $input_descriptors1[] = array(\n                                        \"name\" => \"passwordType\",\n                                        \"caption\" => t('all','PasswordType'),\n                                        \"options\" => $valid_passwordTypes,\n                                        \"type\" => \"select\",\n                                        \"selected_value\" => ((isset($failureMsg)) ? $passwordType : \"\")\n                                    );\n\n\n        $input_descriptors2 = array();\n        \n        $input_descriptors2[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','macaddressTooltip'),\n                                        \"pattern\" => trim(MACADDR_REGEX, \"/\"),\n                                        \"title\" => \"you should provide a valid MAC address\"\n                                     );\n                                     \n\n        $input_descriptors3 = array();\n\n        $input_descriptors3[] = array(\n                                        \"name\" => \"pincode\",\n                                        \"caption\" => t('all','PINCode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($failureMsg)) ? $pincode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','pincodeTooltip'),\n                                        \"random\" => true,\n                                     );\n                                     \n        $button_descriptor = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                  );\n        \n        // fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => \"Common parameters\",\n                                     );\n                                 \n        $fieldset1_descriptor = array(\n                                        \"title\" => \"Username/password info\",\n                                        \"id\" => \"userAuth-fieldset\",\n                                     );\n                                 \n        $fieldset2_descriptor = array(\n                                        \"title\" => \"MAC Address info\",\n                                        \"id\" => \"macAuth-fieldset\",\n                                     );\n                                 \n        $fieldset3_descriptor = array(\n                                        \"title\" => \"PIN code info\",\n                                        \"id\" => \"pincodeAuth-fieldset\",\n                                     );\n        \n        // set navbar stuff\n        $navkeys = array( 'AccountInfo', 'UserInfo', 'BillingInfo', 'Attributes' );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        open_form();\n        \n        // open 0-th tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open 0-th fieldset\n        open_fieldset($fieldset0_descriptor);\n\n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset($navkeys, 0);\n        \n        // open 1-st fieldset\n        open_fieldset($fieldset1_descriptor);\n\n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        // open 2-st fieldset\n        open_fieldset($fieldset2_descriptor);\n\n        foreach ($input_descriptors2 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        \n        // open 3-st fieldset\n        open_fieldset($fieldset3_descriptor);\n\n        foreach ($input_descriptors3 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        print_form_component($button_descriptor);\n        \n        close_tab();\n        \n        \n        $customApplyButton = sprintf('<input type=\"submit\" name=\"submit\" value=\"%s\" class=\"button\">', t('buttons','apply'));\n        \n        // open 1-th tab (shown)\n        open_tab($navkeys, 1);\n        include_once('include/management/userinfo.php');\n        close_tab($navkeys, 1);\n        \n        \n        // open 2-th tab (shown)\n        open_tab($navkeys, 2);\n        include_once('include/management/userbillinfo.php');\n        close_tab($navkeys, 2);\n        \n        // open 3-th tab (shown)\n        open_tab($navkeys, 3);\n        include_once('include/management/attributes.php');\n        close_tab($navkeys, 3);\n\n    }\n    \n    include('include/config/logging.php');\n    \n    $inline_extra_js = '\nfunction switchAuthType() {\n    var switcher = document.getElementById(\"authType\");\n    \n    for (var i=0; i<switcher.length; i++) {\n        var fieldset_id = switcher[i].value + \"-fieldset\",\n            disabled = switcher.value != switcher[i].value,\n            fieldset = document.getElementById(fieldset_id);\n        \n        fieldset.disabled = disabled;\n        fieldset.style.display = (disabled) ? \"none\" : \"block\";\n    }\n}\n\nwindow.addEventListener(\"load\", function() { switchAuthType(); });\n';\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // custom validation structures\n    $valid_tables = array(\"check\", \"reply\");\n\n    function attribute_vendor_exist($dbSocket, $attribute, $vendor) {\n        global $configValues, $logDebugSQL;\n        \n        $sql = sprintf(\"SELECT COUNT(DISTINCT(id)) FROM %s WHERE attribute='%s' AND vendor='%s'\",\n                               $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                               $dbSocket->escapeSimple($attribute),\n                               $dbSocket->escapeSimple($vendor));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        return $res->fetchrow()[0] > 0;\n    }\n\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n\n            $vendor = (array_key_exists('vendor', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['vendor']))))\n                    ? str_replace(\"%\", \"\", trim($_POST['vendor'])) : \"\";\n            $vendor_enc = (!empty($vendor)) ? htmlspecialchars($vendor, ENT_QUOTES, 'UTF-8') : \"\";\n\n            $attribute = (array_key_exists('attribute', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['attribute']))))\n                       ? str_replace(\"%\", \"\", trim($_POST['attribute'])) : \"\";\n            $attribute_enc = (!empty($attribute)) ? htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8') : \"\";\n\n            $type = (array_key_exists('type', $_POST) && !empty(trim($_POST['type'])) &&\n                     in_array(trim($_POST['type']), $valid_attributeTypes))\n                  ? $_POST['type'] : \"\";\n\n            $op = (array_key_exists('RecommendedOP', $_POST) && isset($_POST['RecommendedOP']) &&\n                   in_array($_POST['RecommendedOP'], $valid_ops))\n                ? $_POST['RecommendedOP'] : \"\";\n            \n            $table = (array_key_exists('RecommendedTable', $_POST) && isset($_POST['RecommendedTable']) &&\n                      in_array($_POST['RecommendedTable'], $valid_tables))\n                   ? $_POST['RecommendedTable'] : \"\";\n            \n            $helper = (array_key_exists('RecommendedHelper', $_POST) && isset($_POST['RecommendedHelper']) &&\n                       in_array($_POST['RecommendedHelper'], $valid_recommendedHelpers))\n                    ? $_POST['RecommendedHelper'] : \"\";\n            \n            $tooltip = (array_key_exists('RecommendedTooltip', $_POST) &&\n                        !empty(str_replace(\"%\", \"\", trim($_POST['RecommendedTooltip']))))\n                     ? str_replace(\"%\", \"\", trim($_POST['RecommendedTooltip'])) : \"\";\n\n            if (empty($vendor) || empty($attribute)) {\n                // vendor and attribute are required\n                $failureMsg = \"vendor and/or attribute are empty or invalid\";\n                $logAction .= \"Failed updating attribute [$attribute] (possible empty/invalid vendor and/or attribute) on page: \";\n            } else {\n                \n                include('library/opendb.php');\n                \n                $exists = attribute_vendor_exist($dbSocket, $attribute, $vendor);\n                \n                if (!$exists) {\n                    // vendor and/or attribute invalid\n                    $failureMsg = \"vendor and/or attribute are invalid\";\n                    $logAction .= \"Failed updating attribute [$attribute] (possible invalid vendor and/or attribute) on page: \";\n                } else {\n                    \n                    $sql = sprintf(\"UPDATE %s\n                                       SET Type='%s', RecommendedOP='%s', RecommendedTable='%s',\n                                           RecommendedTooltip='%s', RecommendedHelper='%s'\n                                     WHERE Vendor='%s' AND Attribute='%s'\",\n                                   $configValues['CONFIG_DB_TBL_DALODICTIONARY'], $dbSocket->escapeSimple($type),\n                                   $dbSocket->escapeSimple($op), $dbSocket->escapeSimple($table),\n                                   $dbSocket->escapeSimple($tooltip), $dbSocket->escapeSimple($helper), \n                                   $dbSocket->escapeSimple($vendor), $dbSocket->escapeSimple($attribute));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (!DB::isError($res)) {\n                        $format = \"Attribute information has been updated in the dictionary (attribute: %s, vendor: %s)\";\n                        $successMsg = sprintf($format, $attribute_enc, $vendor_enc);\n                        $logAction .= sprintf(\"$format on page: \", $attribute, $vendor);\n                    } else {\n                        $format = \"An error occurred when updating attribute information in the dictionary (attribute: %s, vendor: %s)\";\n                        $failureMsg = sprintf($format, $attribute_enc, $vendor_enc);\n                        $logAction .= sprintf(\"Failed to add an attribute [$format] on page: \", $attribute, $vendor);\n                    }\n                }\n                \n                include('library/closedb.php');\n            }\n\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    } else {\n        // !POST\n        \n        $vendor = (array_key_exists('vendor', $_REQUEST) && !empty(str_replace(\"%\", \"\", trim($_REQUEST['vendor']))))\n                ? str_replace(\"%\", \"\", trim($_REQUEST['vendor'])) : \"\";\n        $vendor_enc = (!empty($vendor)) ? htmlspecialchars($vendor, ENT_QUOTES, 'UTF-8') : \"\";\n\n        $attribute = (array_key_exists('attribute', $_REQUEST) && !empty(str_replace(\"%\", \"\", trim($_REQUEST['attribute']))))\n                   ? str_replace(\"%\", \"\", trim($_REQUEST['attribute'])) : \"\";\n        $attribute_enc = (!empty($attribute)) ? htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8') : \"\";\n    }\n\n\n    // print HTML prologue\n    $title = t('Intro','mngradattributesedit.php');\n    $help = t('helpPage','mngradattributesedit');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-attributes.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    \n    $exists = attribute_vendor_exist($dbSocket, $attribute, $vendor);\n                    \n    if (!$exists) {\n        // vendor and/or attribute invalid\n        $failureMsg = \"vendor and/or attribute are invalid\";\n        $logAction .= \"Failed updating attribute [$attribute] (possible invalid vendor and/or attribute) on page: \";\n        \n    } else {\n        $sql = sprintf(\"SELECT id, Type, Attribute, Value, Format, Vendor, RecommendedOP,\n                               RecommendedTable, RecommendedHelper, RecommendedTooltip\n                          FROM %s WHERE attribute='%s' AND vendor='%s' LIMIT 1\",\n                       $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                       $dbSocket->escapeSimple($attribute),\n                       $dbSocket->escapeSimple($vendor));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        list(\n                $this_id, $this_Type, $this_Attribute, $this_Value, $this_Format,\n                $this_Vendor, $this_OP, $this_Table, $this_Helper, $this_Tooltip\n            ) = $res->fetchrow();\n            \n        \n    }\n    \n    include('library/closedb.php');\n\n    include_once('include/management/actionMessages.php');\n\n\n    if (!isset($successMsg) && !empty($vendor) && !empty($attribute)) {\n        \n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','VendorAttribute'),\n                                     );\n\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"vendor\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => (isset($vendor) ? $vendor : \"\"),\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"attribute\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => (isset($attribute) ? $attribute : \"\"),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"vendor_presentation\",\n                                        \"caption\" => t('all','VendorName'),\n                                        \"type\" => \"text\",\n                                        \"tooltipText\" => t('Tooltip','vendorNameTooltip'),\n                                        \"value\" => (isset($vendor) ? $vendor : \"\"),\n                                        \"disabled\" => true\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"attribute_presentation\",\n                                        \"caption\" => t('all','Attribute'),\n                                        \"type\" => \"text\",\n                                        \"tooltipText\" => t('Tooltip','attributeTooltip'),\n                                        \"value\" => (isset($attribute) ? $attribute : \"\"),\n                                        \"disabled\" => true\n                                     );\n                              \n        $input_descriptors0[] = array(\n                                        \"name\" => \"type\",\n                                        \"caption\" => t('all','Type'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_attributeTypes,\n                                        \"value\" => ((isset($type)) ? $type : \"\"),\n                                        \"tooltipText\" => t('Tooltip','typeTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedOP\",\n                                        \"caption\" => t('all','RecommendedOP'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_ops,\n                                        \"value\" => ((isset($op)) ? $op : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedOPTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedTable\",\n                                        \"caption\" => t('all','RecommendedTable'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_tables,\n                                        \"value\" => ((isset($table)) ? $table : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedTableTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedHelper\",\n                                        \"caption\" => t('all','RecommendedHelper'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_recommendedHelpers,\n                                        \"value\" => ((isset($helper)) ? $helper : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedHelperTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedTooltip\",\n                                        \"caption\" => t('all','RecommendedTooltip'),\n                                        \"type\" => \"textarea\",\n                                        \"tooltipText\" => t('Tooltip','RecommendedTooltipTooltip'),\n                                        \"value\" => (isset($tooltip) ? $tooltip : \"\")\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n\n        $input_descriptors0[] = array(\n                                        'type' => 'submit',\n                                        'name' => 'submit',\n                                        'value' => t('buttons','apply')\n                                     );\n        \n        open_form();\n        \n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_form();\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // custom validation structures\n    $valid_tables = array(\"check\", \"reply\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $vendor = (array_key_exists('vendor', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['vendor']))))\n                    ? str_replace(\"%\", \"\", trim($_POST['vendor'])) : \"\";\n            $vendor_enc = (!empty($vendor)) ? htmlspecialchars($vendor, ENT_QUOTES, 'UTF-8') : \"\";\n\n            $attribute = (array_key_exists('attribute', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['attribute']))))\n                       ? str_replace(\"%\", \"\", trim($_POST['attribute'])) : \"\";\n            $attribute_enc = (!empty($attribute)) ? htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8') : \"\";\n            \n            $type = (array_key_exists('type', $_POST) && isset($_POST['type']) &&\n                     in_array($_POST['type'], $valid_attributeTypes))\n                  ? $_POST['type'] : \"\";\n\n            $op = (array_key_exists('RecommendedOP', $_POST) && isset($_POST['RecommendedOP']) &&\n                   in_array($_POST['RecommendedOP'], $valid_ops))\n                ? $_POST['RecommendedOP'] : \"\";\n            \n            $table = (array_key_exists('RecommendedTable', $_POST) && isset($_POST['RecommendedTable']) &&\n                      in_array($_POST['RecommendedTable'], $valid_tables))\n                   ? $_POST['RecommendedTable'] : \"\";\n\n            $helper = (array_key_exists('RecommendedHelper', $_POST) && isset($_POST['RecommendedHelper']) &&\n                       in_array($_POST['RecommendedHelper'], $valid_recommendedHelpers))\n                    ? $_POST['RecommendedHelper'] : \"\";\n\n            $tooltip = (array_key_exists('RecommendedTooltip', $_POST) &&\n                        !empty(str_replace(\"%\", \"\", trim($_POST['RecommendedTooltip']))))\n                     ? str_replace(\"%\", \"\", trim($_POST['RecommendedTooltip'])) : \"\";\n\n            if (empty($vendor) || empty($attribute)) {\n                // vendor and attribute are required\n                $failureMsg = \"vendor and/or attribute are empty or invalid\";\n                $logAction .= \"Failed adding new attribute [$attribute] (possible empty/invalid vendor and/or attribute) on page: \";\n            } else {\n                include('library/opendb.php');\n                \n                $sql = sprintf(\"SELECT DISTINCT(Vendor) FROM %s WHERE attribute='%s'\",\n                               $configValues['CONFIG_DB_TBL_DALODICTIONARY'], $dbSocket->escapeSimple($attribute));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n\n                $vendors = array();\n                while ($row = $res->fetchrow()) {\n                    $vendors[] = $row[0];\n                }\n                \n                if (count($vendors) > 0) {\n                    // already present\n                    $format = \"An attribute with the same name is already present in another dictionary (attribute: %s, vendor(s): %s)\";\n                    $failureMsg = sprintf($format, $attribute_enc, htmlspecialchars(implode(\", \", $vendors), ENT_QUOTES, 'UTF-8'));\n                    $logAction .= sprintf(\"Failed to add an attribute [$format] on page: \", $attribute, implode(\", \", $vendors));\n                    \n                } else {\n                    \n                    $sql = sprintf(\"INSERT INTO %s (id, Type, Attribute, Value, Format, Vendor, RecommendedOP,\n                                                    RecommendedTable, RecommendedHelper, RecommendedTooltip)\n                                            VALUES (0, '%s', '%s', '', '', '%s', '%s', '%s', '%s', '%s')\",\n                                   $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                   $dbSocket->escapeSimple($type), $dbSocket->escapeSimple($attribute),\n                                   $dbSocket->escapeSimple($vendor), $dbSocket->escapeSimple($op),\n                                   $dbSocket->escapeSimple($table), $dbSocket->escapeSimple($helper),\n                                   $dbSocket->escapeSimple($tooltip));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (!DB::isError($res)) {\n                        $format = \"The new attribute has been inserted in the dictionary (attribute: %s, vendor: %s)\";\n                        $successMsg = sprintf($format, $attribute_enc, $vendor_enc);\n                        $logAction .= sprintf(\"$format on page: \", $attribute, $vendor);\n                    } else {\n                        $format = \"An error occurred when adding the new attribute to a dictionary (attribute: %s, vendor: %s)\";\n                        $failureMsg = sprintf($format, $attribute_enc, $vendor_enc);\n                        $logAction .= sprintf(\"Failed to add an attribute [$format] on page: \", $attribute, $vendor);\n                    }\n                }\n                \n                include('library/closedb.php');\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n    \n    \n    // print HTML prologue\n    $title = t('Intro','mngradattributesnew.php');\n    $help = t('helpPage','mngradattributesnew');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-attributes.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n\n    if (!isset($successMsg)) {\n\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','VendorAttribute'),\n                                     );\n\n        \n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"vendor\",\n                                        \"caption\" => t('all','VendorName'),\n                                        \"type\" => \"text\",\n                                        \"tooltipText\" => t('Tooltip','vendorNameTooltip'),\n                                        \"value\" => (isset($vendor) ? $vendor : \"\")\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"attribute\",\n                                        \"caption\" => t('all','Attribute'),\n                                        \"type\" => \"text\",\n                                        \"tooltipText\" => t('Tooltip','attributeTooltip'),\n                                        \"value\" => (isset($attribute) ? $attribute : \"\")\n                                     );\n                              \n        $input_descriptors0[] = array(\n                                        \"name\" => \"type\",\n                                        \"caption\" => t('all','Type'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_attributeTypes,\n                                        \"value\" => ((isset($type)) ? $type : \"\"),\n                                        \"tooltipText\" => t('Tooltip','typeTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedOP\",\n                                        \"caption\" => t('all','RecommendedOP'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_ops,\n                                        \"value\" => ((isset($op)) ? $op : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedOPTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedTable\",\n                                        \"caption\" => t('all','RecommendedTable'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_tables,\n                                        \"value\" => ((isset($table)) ? $table : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedTableTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedHelper\",\n                                        \"caption\" => t('all','RecommendedHelper'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_recommendedHelpers,\n                                        \"value\" => ((isset($helper)) ? $helper : \"\"),\n                                        \"tooltipText\" => t('Tooltip','RecommendedHelperTooltip'),\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"RecommendedTooltip\",\n                                        \"caption\" => t('all','RecommendedTooltip'),\n                                        \"type\" => \"textarea\",\n                                        \"tooltipText\" => t('Tooltip','RecommendedTooltipTooltip'),\n                                        \"value\" => (isset($tooltip) ? $tooltip : \"\")\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n\n        $input_descriptors0[] = array(\n                                        'type' => 'submit',\n                                        'name' => 'submit',\n                                        'value' => t('buttons','apply')\n                                     );\n\n        open_form();\n        \n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_form();\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init loggin variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // get attribute name passed to us from menu-mng-rad-attributes.php\n    $attribute = (array_key_exists('attribute', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['attribute']))))\n               ? str_replace(\"%\", \"\", trim($_GET['attribute'])) : \"\";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mngradattributessearch.php');\n    $help = t('helpPage','mngradattributessearch');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-attributes.php\");\n    \n    $cols = array(\n                    \"id\" => t('all','VendorID'),\n                    \"vendor\" => t('all','VendorName'),\n                    \"attribute\" => t('all','VendorAttribute')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    $sql_WHERE[] = \"(type <> '' OR type IS NOT NULL)\";\n    if (!empty($attribute)) {\n        $sql_WHERE[] = sprintf(\"attribute LIKE '%s%%'\", $dbSocket->escapeSimple($attribute));\n    }\n    \n    // we use this simplified query just to initialize $numrows\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s\", $configValues['CONFIG_DB_TBL_DALODICTIONARY']);\n    $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql = sprintf(\"SELECT id, vendor, attribute FROM %s\", $configValues['CONFIG_DB_TBL_DALODICTIONARY']);\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($attribute))\n                              ? \"&attribute=\" . urlencode(htmlspecialchars($attribute, ENT_QUOTES, 'UTF-8')) : \"\";\n                              \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-attributes-del.php\";\n?>\n\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('vendor__attribute[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        $counter = 1;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n        \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            list($this_id, $this_vendor, $this_attribute) = $row;\n            \n            $tooltipText = sprintf('<a class=\"toolTip\" href=\"mng-rad-attributes-edit.php?vendor=%s&attribute=%s\">%s</a>',\n                                   urlencode($this_vendor), urlencode($this_attribute), t('Tooltip','AttributeEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerAttributeInfo\">Loading...</div>';\n            \n            $onclick = sprintf('javascript:ajaxGeneric(\"include/management/retVendorAttributeInfo.php\",\"retAttributeInfo\",'\n                             . '\"divContainerAttributeInfo\",\"attribute=%s\");return false;', urlencode($this_attribute));\n?>\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"vendor__attribute[]\" id=\"checkbox-<?= $counter ?>\"\n                        value=\"<?= urlencode($this_vendor) . \"__\" . urlencode($this_attribute) ?>\">\n                    <label for=\"checkbox-<?= $counter ?>\"><?= $this_id ?></label>\n                </td>\n                <td><?= $this_vendor ?></td>\n                <td>\n                    <a class=\"tablenovisit\" href=\"#\" onclick='<?= $onclick ?>' tooltipText='<?= $tooltipText ?>'>\n                        <?= $this_attribute ?>\n                    </a>\n                </td>\n            </tr>\n        \n<?php\n            $counter++;\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links, $partial_query_string);\n?>\n    </table>\n    \n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    include_once('include/management/populate_selectbox.php');\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $groupname = (array_key_exists('groupname', $_POST) && isset($_POST['groupname']))\n                 ? trim(str_replace(\"%\", \"\", $_POST['groupname'])) : \"\";\n        $groupname_enc = (!empty($groupname)) ? htmlspecialchars($groupname, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($groupname)) {\n            // profile required\n            $failureMsg = \"The specified group name is empty or invalid\";\n            $logAction .= \"Failed creating a new group check mapping [empty or invalid group name] on page: \";\n        } else {\n            \n            include('library/opendb.php');\n            \n            $groups = array_keys(get_groups());\n            if (!in_array($groupname, $groups)) {\n                // invalid profile name\n                $failureMsg = \"The chosen group [<strong>$groupname_enc</strong>] does not exist\";\n                $logAction .= \"Failed creating group check mapping [$groupname, does not exist] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"groupname\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $groupname, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new group check mapping for <strong>$groupname_enc</strong>\";\n                    $logAction .= \"Successfully added a new group [$groupname] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating group [$groupname_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating group [$groupname], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngradgroupchecknew.php');\n    $help = t('helpPage','mngradgroupchecknew');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-groups.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $groups = get_groups();\n        array_unshift($groups , '');\n        $input_descriptors1[] = array(\n                                        \"name\" => \"groupname\",\n                                        \"caption\" => t('all','Groupname'),\n                                        \"type\" => \"select\",\n                                        \"options\" => $groups,\n                                        \"selected_value\" => ((isset($groupname)) ? $groupname : \"\")\n                                     );\n                                     \n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                     //~ );\n?>\n<form name=\"newgroupcheck\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','GroupInfo') ?></h302>\n        \n        <ul>\n<?php\n            foreach ($input_descriptors1 as $input_descriptor) {\n                print_form_component($input_descriptor);\n            }\n?>\n\n        </ul>\n\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    include_once('include/management/populate_selectbox.php');\n    \n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $groupname = (array_key_exists('groupname', $_POST) && isset($_POST['groupname']))\n                 ? trim(str_replace(\"%\", \"\", $_POST['groupname'])) : \"\";\n        $groupname_enc = (!empty($groupname)) ? htmlspecialchars($groupname, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($groupname)) {\n            // profile required\n            $failureMsg = \"The specified group name is empty or invalid\";\n            $logAction .= \"Failed creating a new group reply mapping [empty or invalid group name] on page: \";\n        } else {\n            \n            include('library/opendb.php');\n            \n            $groups = array_keys(get_groups());\n            if (!in_array($groupname, $groups)) {\n                // invalid profile name\n                $failureMsg = \"The chosen group [<strong>$groupname_enc</strong>] does not exist\";\n                $logAction .= \"Failed creating group reply mapping [$groupname, does not exist] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"groupname\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $groupname, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new group reply mapping for <strong>$groupname_enc</strong>\";\n                    $logAction .= \"Successfully added a new group [$groupname] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating group [$groupname_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating group [$groupname], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n    );\n    \n    $title = t('Intro','mngradgroupreplynew.php');\n    $help = t('helpPage','mngradgroupreplynew');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    include(\"menu-mng-rad-groups.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n        \n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $groups = get_groups();\n        array_unshift($groups , '');\n        $input_descriptors1[] = array(\n                                        \"name\" => \"groupname\",\n                                        \"caption\" => t('all','Groupname'),\n                                        \"type\" => \"select\",\n                                        \"options\" => $groups,\n                                        \"selected_value\" => ((isset($groupname)) ? $groupname : \"\")\n                                     );\n                                     \n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                     //~ );\n?>\n<form name=\"newgroupreply\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','GroupInfo') ?></h302>\n        \n        <ul>\n<?php\n            foreach ($input_descriptors1 as $input_descriptor) {\n                print_form_component($input_descriptor);\n            }\n?>\n\n        </ul>\n\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $nasname = (array_key_exists('nasname', $_POST) && isset($_POST['nasname'])) ? trim(str_replace(\"%\", \"\", $_POST['nasname'])) : \"\";\n        $nassecret = (array_key_exists('nassecret', $_POST) && isset($_POST['nassecret'])) ? trim(str_replace(\"%\", \"\", $_POST['nassecret'])) : \"\";\n        \n        $nasname_enc = (!empty($nasname)) ? htmlspecialchars($nasname, ENT_QUOTES, 'UTF-8') : \"\";\n        \n        if (empty($nasname) || empty($nassecret)) {\n            // required\n            $failureMsg = sprintf(\"%s and/or %s are empty or invalid\", t('all','NasIPHost'), t('all','NasSecret'));\n            $logAction .= \"Failed adding (possible empty user/pass) new operator on page: \";\n        } else {\n            include('library/opendb.php');\n            \n            $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE nasname='%s'\", $configValues['CONFIG_DB_TBL_RADNAS'],\n                                                                          $dbSocket->escapeSimple($nasname));\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $exists = $res->fetchrow()[0] > 0;\n            \n            if ($exists) {\n                // name already taken\n                $failureMsg = sprintf(\"This %s already exists: <b>%s</b>\", t('all','NasIPHost'), $nasname_enc);\n                $logAction .= \"Failed adding a new NAS [$nasname already exists] on page: \";\n            } else {\n                $shortname = (array_key_exists('shortname', $_POST) && isset($_POST['shortname'])) ? trim(str_replace(\"%\", \"\", $_POST['shortname'])) : \"\";\n                $nasports = (array_key_exists('nasports', $_POST) && isset($_POST['nasports'])) ? trim(str_replace(\"%\", \"\", $_POST['nasports'])) : \"\";\n                $nastype = (array_key_exists('nastype', $_POST) && isset($_POST['nastype']) &&\n                            in_array($_POST['nastype'], $valid_nastypes)) ? $_POST['nastype'] : $valid_nastypes[0];\n                $nasdescription = (array_key_exists('nasdescription', $_POST) && isset($_POST['nasdescription'])) ? trim(str_replace(\"%\", \"\", $_POST['nasdescription'])) : \"\";\n                $nascommunity = (array_key_exists('nascommunity', $_POST) && isset($_POST['nascommunity'])) ? trim(str_replace(\"%\", \"\", $_POST['nascommunity'])) : \"\";\n                $nasvirtualserver = (array_key_exists('nasvirtualserver', $_POST) && isset($_POST['nasvirtualserver'])) ? trim(str_replace(\"%\", \"\", $_POST['nasvirtualserver'])) : \"\";\n                \n                $sql = sprintf(\"INSERT INTO %s (id, nasname, shortname, type, ports, secret, server, community, description)\n                                        VALUES (0, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')\", $configValues['CONFIG_DB_TBL_RADNAS'],\n                               $dbSocket->escapeSimple($nasname), $dbSocket->escapeSimple($shortname), $dbSocket->escapeSimple($nastype),\n                               $dbSocket->escapeSimple($nasports), $dbSocket->escapeSimple($nassecret), $dbSocket->escapeSimple($nasvirtualserver),\n                               $dbSocket->escapeSimple($nascommunity), $dbSocket->escapeSimple($nasdescription));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                if (!DB::isError($res)) {\n                    // it seems that operator could not be added\n                    $f = \"Failed to add this new NAS [%s] to database\";\n                    $failureMsg = sprintf($f, $nasname_enc);\n                    $logAction .= sprintf($f, $nasname_enc);\n                } else {\n                    $successMsg = sprintf(\"Added to database new NAS: <strong>%s</strong>\", $nasname_enc);\n                    $logAction .= sprintf(\"Successfully added new NAS [%s] on page: \", $nasname);\n                }\n            }\n            \n            include('library/closedb.php');\n        }\n\n    }\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','mngradnasnew.php');\n    $help = t('helpPage','mngradnasnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-rad-nas.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n    if (!isset($successMsg)) {\n\n        // set form component descriptors\n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nasname\",\n                                        \"caption\" => t('all','NasIPHost'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nasname)) ? $nasname : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nassecret\",\n                                        \"caption\" => t('all','NasSecret'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nassecret)) ? $nassecret : \"\")\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"nastype\",\n                                        \"caption\" => t('all','NasType'),\n                                        \"type\" => \"text\",\n                                        \"datalist\" => $valid_nastypes,\n                                        \"value\" => ((isset($nastype)) ? $nastype : $valid_nastypes[0])\n                                     );\n                                     \n        $input_descriptors1[] = array(\n                                        \"name\" => \"shortname\",\n                                        \"caption\" => t('all','NasShortname'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($shortname)) ? $shortname : \"\")\n                                     );\n\n        \n        $input_descriptors2 = array();\n        \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasports\",\n                                        \"caption\" => t('all','NasPorts'),\n                                        \"type\" => \"number\",\n                                        \"min\" => \"0\",\n                                        \"max\" => \"65535\",\n                                        \"value\" => ((isset($nasports)) ? $nasports : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nascommunity\",\n                                        \"caption\" => t('all','NasCommunity'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nascommunity)) ? $nascommunity : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasvirtualserver\",\n                                        \"caption\" => t('all','NasVirtualServer'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($nasvirtualserver)) ? $nasvirtualserver : \"\")\n                                     );\n                                     \n        $input_descriptors2[] = array(\n                                        \"name\" => \"nasdescription\",\n                                        \"caption\" => t('all','NasDescription'),\n                                        \"type\" => \"textarea\",\n                                        \"content\" => ((isset($nasdescription)) ? $nasdescription : \"\")\n                                     );\n\n        $submit_descriptor = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n\n        // set navbar stuff\n        $navbuttons = array(\n                              'NASInfo-tab' => t('title','NASInfo'),\n                              'NASAdvanced-tab' => t('title','NASAdvanced'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n\n?>\n\n<form name=\"newnas\" action=\"<?= $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <div class=\"tabcontent\" id=\"NASInfo-tab\" style=\"display: block\">\n        <fieldset>\n            <h302><?= t('title','NASInfo') ?></h302>\n        \n            <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n            </ul>\n        </fieldset>\n     </div><!-- #NASInfo-tab -->\n    \n    <div class=\"tabcontent\" id=\"NASAdvanced-tab\">\n        <fieldset>\n            <h302><?= t('title','NASAdvanced') ?></h302>\n            <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors2 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n            </ul>\n        </fieldset>\n    </div><!-- #NASAdvanced-tab -->\n    \n<?php\n        print_form_component($submit_descriptor);\n?>\n\n</form>\n\n<?php\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n    \n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $profile_name = (array_key_exists('profile_name', $_POST) && !empty($_POST['profile_name']) &&\n                         str_replace(\"%\", \"\", trim($_POST['profile_name'])))\n                      ? str_replace(\"%\", \"\", trim($_POST['profile_name'])) : \"\";\n    } else {\n        $profile_name = (array_key_exists('profile_name', $_REQUEST) && isset($_REQUEST['profile_name']) &&\n                         str_replace(\"%\", \"\", trim($_REQUEST['profile_name'])))\n                      ? str_replace(\"%\", \"\", trim($_REQUEST['profile_name'])) : \"\";\n    }\n    \n    $profile_name_enc = (!empty($profile_name)) ? htmlspecialchars($profile_name, ENT_QUOTES, 'UTF-8') : \"\";\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngradprofilesedit.php');\n    $help = t('helpPage','mngradprofilesedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($profile_name_enc)) {\n        $title .= \" :: $profile_name_enc\";\n    } \n\n    include_once('include/management/populate_selectbox.php');\n    include(\"menu-mng-rad-profiles.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        \n        $groups = array_keys(get_groups());\n        \n        // check if it exists\n        if (!in_array($profile_name, $groups)) {\n            // we empty the profile if the hs does not exist\n            $profile_name = \"\";\n        } else {\n            include('library/opendb.php');\n            include(\"library/attributes.php\");\n            $skipList = array( \"profile_name\", \"submit\", \"csrf_token\" );\n            $count = handleAttributes($dbSocket, $profile_name, $skipList, false, 'group');\n            include('library/closedb.php');\n            \n            $successMsg = \"Updated attributes for: <b> $profile_name_enc </b>\";\n            $logAction .= \"Successfully updates attributes for profile [$profile_name] on page:\";\n        }\n    }\n    \n    if (empty($profile_name)) {\n        $failureMsg = \"Profile name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid profile name) profile on page: \";\n    }\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($profile_name)) { \n        \n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"csrf_token\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                     );\n        $input_descriptors1[] = array(\n                                        \"name\" => \"profile_name\",\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $profile_name,\n                                     );\n        \n        $input_descriptors2 = array();\n        $input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n        $input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n        $input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n        $input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n                                       'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n        \n        $submit_descriptor = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navbuttons = array(\n                              'RADIUSCheck-tab' => t('title','RADIUSCheck'),\n                              'RADIUSReply-tab' => t('title','RADIUSReply'),\n                              'Attributes-tab' => t('title','Attributes'),\n                           );\n\n        print_tab_navbuttons($navbuttons);\n    \n    \n        include('library/opendb.php');\n        include_once('include/management/pages_common.php');\n        \n        $hashing_algorithm_notice = '<small style=\"font-size: 10px; color: black\">'\n                                  . 'Notice that for supported password-like attributes, you can just specify a plaintext value. '\n                                  . 'The system will take care of correctly hashing it.'\n                                  . '</small>';\n                                  \n    \n        $fieldset1_descriptor = array(\n                                    \"title\" => t('title','RADIUSCheck'),\n                                 );\n    \n        open_form();\n    \n        \n?>\n\n        <div id=\"RADIUSCheck-tab\" class=\"tabcontent\" style=\"display: block\">\n    \n<?php\n        open_fieldset($fieldset1_descriptor);\n\n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n\n\n        $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                          FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                         WHERE rc.groupname='%s'\", $configValues['CONFIG_DB_TBL_RADGROUPCHECK'],\n                                                   $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                                   $dbSocket->escapeSimple($profile_name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n\n    if ($res->numRows() == 0) {\n        echo '<div style=\"text-align: center\">'\n           . t('messages','noCheckAttributesForGroup')\n           . '</div>';\n    } else {\n        \n        echo '<ul>';\n        \n        $editCounter = 0;\n        $table = 'radgroupcheck';\n        while ($row = $res->fetchRow()) {\n            \n            foreach ($row as $i => $v) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n            \n            $id = intval($row[5]);\n            $id__attribute = sprintf('%d__%s', $id, $row[0]);\n            $name = sprintf('editValues%s[]', $editCounter);\n            $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n            \n            echo '<li>';\n            printf('<a class=\"tablenovisit\" href=\"mng-rad-profiles-del.php?profile_name=%s&id=%d&tablename=%s\">',\n                   urlencode($profile_name_enc), $id, $table);\n            echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n            \n            printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n            printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n            \n            printf('<select name=\"%s\" class=\"form\">', $name);\n            printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n            drawOptions();\n            echo '</select>';\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $table);\n\n\n            if (!empty($row[3]) || !empty($row[4])) {\n                $divId = sprintf(\"%s-Tooltip-%d-%s\", $row[0], $editCounter, $table);\n                $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                \n                if (!empty($row[3])) {\n                    echo '<br>';\n                    printf('<i><b>Type:</b> %s</i>', $row[3]);\n                }\n                \n                if (!empty($row[4])) {\n                    echo '<br>';\n                    printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                }\n                echo '</div>';\n            }\n            \n            echo '</li>';\n            \n            // we increment the counter for the html elements of the edit attributes\n            $editCounter++;\n        }\n        \n        echo '</ul>';\n        \n        echo $hashing_algorithm_notice;\n    }\n\n?>\n            </ul>\n\n<?php\n            print_form_component($submit_descriptor);\n?>\n\n        </fieldset>\n    </div>\n\n    <div class=\"tabcontent\" id=\"RADIUSReply-tab\">\n\n<?php\n\n    $fieldset2_descriptor = array(\n                                    \"title\" => t('title','RADIUSReply'),\n                                 );\n\n    open_fieldset($fieldset2_descriptor);\n\n    $sql = sprintf(\"SELECT rc.attribute, rc.op, rc.value, dd.type, dd.recommendedTooltip, rc.id\n                      FROM %s AS rc LEFT JOIN %s AS dd ON rc.attribute = dd.attribute AND dd.value IS NULL\n                     WHERE rc.groupname='%s'\", $configValues['CONFIG_DB_TBL_RADGROUPREPLY'],\n                                               $configValues['CONFIG_DB_TBL_DALODICTIONARY'],\n                                               $dbSocket->escapeSimple($profile_name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    if ($res->numRows() == 0) {\n        echo '<div style=\"text-align: center\">'\n           . t('messages','noReplyAttributesForGroup')\n           . '</div>';\n    } else {\n        \n        echo '<ul>';\n        \n        $editCounter = 0;\n        $table = 'radgroupreply';\n        while ($row = $res->fetchRow()) {\n            \n            foreach ($row as $i => $v) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            $id__attribute = sprintf('%s__%s', $row[5], $row[0]);\n            $name = sprintf('editValues%s[]', $editCounter);\n            $type = (preg_match(\"/-Password$/\", $row[0])) ? $hiddenPassword : \"text\";\n            \n            echo '<li>';\n            printf('<a class=\"tablenovisit\" href=\"mng-rad-profiles-del.php?profile_name=%s&id=%d&tablename=%s\">',\n                   urlencode($profile_name_enc), $id, $table);\n            echo '<img src=\"images/icons/delete.png\" border=\"0\" alt=\"Remove\"></a>';\n            \n            printf('<label for=\"attribute\" class=\"attributes\">%s</label>', $row[0]);\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $id__attribute);            \n            printf('<input type=\"%s\" value=\"%s\" name=\"%s\">', $type, $row[2], $name);\n            \n            printf('<select name=\"%s\" class=\"form\">', $name);\n            printf('<option value=\"%s\">%s</option>', $row[1], $row[1]);\n            drawOptions();\n            echo '</select>';\n\n            printf('<input type=\"hidden\" name=\"%s\" value=\"%s\">', $name, $table);\n\n\n            if (!empty($row[3]) || !empty($row[4])) {\n                $divId = sprintf(\"%s-Tooltip-%d-%s\", $row[0], $editCounter, $table);\n                $onclick = sprintf(\"toggleShowDiv('%s')\", $divId);\n                printf('<img src=\"images/icons/comment.png\" alt=\"Tip\" border=\"0\" onClick=\"%s\">', $onclick);\n                printf('<div id=\"%s\" style=\"display:none;visibility:visible\" class=\"ToolTip2\">', $divId);\n                \n                if (!empty($row[3])) {\n                    echo '<br>';\n                    printf('<i><b>Type:</b> %s</i>', $row[3]);\n                }\n                \n                if (!empty($row[4])) {\n                    echo '<br>';\n                    printf('<i><b>Tooltip Description:</b> %s</i>', $row[4]);\n                }\n                echo '</div>';\n            }\n            \n            echo '</li>';\n            \n            // we increment the counter for the html elements of the edit attributes\n            $editCounter++;\n        }\n        \n        echo '</ul>';\n        \n        echo $hashing_algorithm_notice;\n    }\n    \n?>\n            </ul>\n            \n<?php\n            print_form_component($submit_descriptor);\n?>\n            \n        </fieldset>\n    </div>\n\n<?php\n        include('library/closedb.php');\n?>\n    \n    <div class=\"tabcontent\" id=\"Attributes-tab\">\n<?php\n        include_once('include/management/attributes.php');\n?>\n    </div>     \n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    \n        $profile = (array_key_exists('profile', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['profile']))))\n                 ? str_replace(\"%\", \"\", trim($_POST['profile'])) : \"\";\n        $profile_enc = (!empty($profile)) ? htmlspecialchars($profile, ENT_QUOTES, 'UTF-8') : \"\";\n    \n        if (empty($profile)) {\n            // profile required\n            $failureMsg = \"The specified profile name is empty or invalid\";\n            $logAction .= \"Failed creating profile [empty or invalid profile name] on page: \";\n        } else {\n            \n            include_once('include/management/populate_selectbox.php');\n            $groups = array_keys(get_groups());\n            include('library/opendb.php');\n            \n            if (in_array($profile, $groups)) {\n                // invalid profile name\n                $failureMsg = \"This profile name [<strong>$profile_enc</strong>] is already in use\";\n                $logAction .= \"Failed creating profile [$profile, name already in use] on page: \";\n            } else {\n    \n                include(\"library/attributes.php\");\n                $skipList = array( \"profile\", \"submit\", \"csrf_token\" );\n                $count = handleAttributes($dbSocket, $profile, $skipList, true, 'group');\n\n                if ($count > 0) {\n                    $successMsg = \"Added new profile: <b> $profile_enc </b>\";\n                    $logAction .= \"Successfully added a new profile [$profile] on page: \";\n                } else {\n                    $failureMsg = \"Failed creating profile [$profile_enc], invalid or empty attributes list\";\n                    $logAction .= \"Failed creating profile [$profile], invalid or empty attributes list] on page: \";\n                }\n\n            } // profile non-existent\n            \n            include('library/closedb.php');\n            \n        } // profile name not empty    \n    }\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/dynamic_attributes.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/productive_funcs.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mngradprofilesnew.php');\n    $help = t('helpPage','mngradprofilesnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-mng-rad-profiles.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!isset($successMsg)) {\n    \n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"name\" => \"profile\",\n                                        \"caption\" => \"Profile Name\",\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($profile)) ? $profile : \"\")\n                                     );\n\n        //~ $input_descriptors1[] = array(\n                                        //~ \"type\" => \"submit\",\n                                        //~ \"name\" => \"submit\",\n                                        //~ \"value\" => t('buttons','apply')\n                                  //~ );\n?>\n\n<form name=\"newusergroup\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','ProfileInfo') ?></h302>\n\n        <ul style=\"margin: 30px auto\">\n\n<?php\n                foreach ($input_descriptors1 as $input_descriptor) {\n                    print_form_component($input_descriptor);\n                }\n?>\n\n        </ul>\n    </fieldset>\n\n<?php\n    include_once('include/management/attributes.php');\n?>\n\n</form>\n\n<?php\n    }\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    include_once('library/config_read.php');\n\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // feed the sidebar\n    $usernameList = $username_enc;\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradusergrouplistuser');\n    $help = t('helpPage','mngradusergrouplistuser');\n    \n    print_html_prologue($title, $langCode);\n\n    if (!empty($username_enc)) {\n        $title .= \" :: $username_enc\";\n    }\n\n    include(\"menu-mng-rad-usergroup.php\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"groupname\" => t('all','Groupname'),\n                    \"priority\" => t('all','Priority')\n                 );\n\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[1];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $sql = sprintf(\"SELECT COUNT(DISTINCT(groupname)) FROM %s WHERE username='%s'\",\n                   $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n    \n        $sql = sprintf(\"SELECT groupname, priority FROM %s WHERE username='%s'\",\n                       $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($username));\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n         $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc)) ? \"&username=\" . urlencode($username_enc) : \"\";\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-usergroup-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('usergroup[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        $li_style = 'margin: 7px auto';\n        $counter = 0;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            printf('<tr id=\"row-%d\">', $counter);\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                \n                if ($i == 0) {\n                    $tooltipText = '<ul style=\"list-style-type: none\">'\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-rad-usergroup-edit.php?username=%s&group=%s\">%s</a></li>',\n                                           $li_style, urlencode($username_enc), urlencode($row[$i]), t('Tooltip','EditUserGroup'))\n                                 . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-rad-usergroup-del.php?username=%s&group=%s\">%s</a></li>',\n                                           $li_style, urlencode($username_enc), urlencode($row[$i]), t('Tooltip','DeleteUserGroup'))\n                                 . '</ul>';\n                    \n                    echo '<td>';\n                    printf('<input type=\"checkbox\" name=\"usergroup[]\" id=\"checkbox-%s\" value=\"%s||%s\">',\n                           $counter, $username_enc, $row[$i]);\n                    printf('<label for=\"checkbox-%s\">', $counter);\n                    echo '<a class=\"tablenovisit\" href=\"#\" ' . sprintf(\"tooltipText='%s'>\", $tooltipText);\n                    printf('%s</a>', $row[$i]);\n                    echo '</label>'\n                       . '</td>';\n                    \n                } else {\n                    printf('<td>%s</td>', $row[$i]);\n                }\n                \n            }\n            \n            echo '</tr>';\n            \n            $counter++;\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links, $partial_query_string);\n?>\n    </table>\n    \n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n    \n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n\n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for listing of records on page: \";\n    $logDebugSQL = \"\";\n\n    // set session's page variable\n    $_SESSION['PREV_LIST_PAGE'] = $_SERVER['REQUEST_URI'];\n\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    // feed the sidebar\n    $usernameList = $username_enc;\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','mngradusergrouplist');\n    $help = t('helpPage','mngradusergrouplist');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-mng-rad-usergroup.php\");\n    \n    $cols = array(\n        \"username\" => t('all','Username'),\n        \"fullname\" => t('all','Name'),\n        t('all','Groupname') . \" (\" . t('all','Priority') . \")\",\n        \"selected\"\n    );\n    \n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n               \n    // start printing content\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n                                                          \n    $sql = sprintf(\"SELECT COUNT(DISTINCT(username)) FROM %s\", $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n    if (!empty($username)) {\n        $sql .= sprintf(\" WHERE username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    }\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->fetchrow()[0];\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        $records = array();\n        \n        $nested_query = sprintf(\"SELECT DISTINCT(rug.username) FROM %s AS rug\", $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n        if (!empty($username)) {\n            $nested_query .= sprintf(\" WHERE rug.username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n        }\n        \n        $sql0 = \"SELECT dui.username AS username, CONCAT(firstname, ' ', lastname) AS fullname\n                   FROM %s AS dui\n                  WHERE dui.username IN (%s)\n                  ORDER BY %s %s LIMIT %s, %s\";\n        $sql0 = sprintf($sql0, $configValues['CONFIG_DB_TBL_DALOUSERINFO'],\n                               $nested_query,\n                               $orderBy, $orderType, $offset, $rowsPerPage);\n        $res0 = $dbSocket->query($sql0);\n\n        $per_page_numrows = $res0->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc) ? \"&username=\" . urlencode($username_enc) : \"\");\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-rad-usergroup-del.php\";\n?>\n<form name=\"listall\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            echo '<tr style=\"background-color: white\">';\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>' . '</tr>';\n        }\n?>\n\n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('usergroup[]', $action);\n?>\n                </th>\n            </tr>\n<?php\n        // second line of table header\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n        echo \"</tr>\";\n?>\n        </thead>\n        \n        <tbody>\n<?php\n        \n        function print_user_group_prio($this_username, $this_groupname, $this_priority) {\n            $onclick='javascript:return false;';\n        \n            $li_style = 'margin: 7px auto';\n            $tooltipText_format = '<ul style=\"list-style-type: none\">'\n                                . sprintf('<li style=\"%s\">', $li_style) \n                                . '<a class=\"toolTip\" href=\"mng-rad-usergroup-edit.php?username=%s&group=%s\">%s</a>'\n                                . '</li>'\n                                . sprintf('<li style=\"%s\">', $li_style)\n                                . '<a class=\"toolTip\" href=\"mng-rad-usergroup-list-user.php?username=%s&group=%s\">%s</a>'\n                                . '</li>'\n                                . '</ul>';\n            \n            $tooltipText = sprintf($tooltipText_format, urlencode($this_username), urlencode($this_groupname), t('Tooltip','EditUserGroup'),\n                                                        urlencode($this_username), urlencode($this_groupname), t('Tooltip','ListUserGroups'));\n            $tooltipText = sprintf(\"tooltipText='%s'\", $tooltipText);\n\n            printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" %s>%s</a> (%s)</td>', $onclick, $tooltipText, $this_groupname, $this_priority);\n            printf('<td><input type=\"checkbox\" name=\"usergroup[]\" value=\"%s||%s\"></td>',\n                   urlencode($this_username), urlencode($this_groupname));\n        }\n        \n        while ($row0 = $res0->fetchRow()) {\n            $row0len = count($row0);\n        \n            // escape row elements\n            for ($i = 0; $i < $row0len; $i++) {\n                $row0[$i] = htmlspecialchars($row0[$i], ENT_QUOTES, 'UTF-8');\n            }\n        \n            list($this_username, $fullname) = $row0;\n            $records[$this_username] = array(\n                'fullname' => $fullname,\n                'groups' => array()\n            );\n            \n            $sql1 = sprintf(\"SELECT groupname, priority FROM %s WHERE username='%s' ORDER BY priority ASC, groupname ASC\",\n                            $configValues['CONFIG_DB_TBL_RADUSERGROUP'], $dbSocket->escapeSimple($this_username));\n            $res1 = $dbSocket->query($sql1);\n            \n            while ($row1 = $res1->fetchRow()) {\n                $row1len = count($row1);\n        \n                // escape row elements\n                for ($i = 0; $i < $row1len; $i++) {\n                    $row1[$i] = htmlspecialchars($row1[$i], ENT_QUOTES, 'UTF-8');\n                }\n            \n                list($this_groupname, $this_priority) = $row1;\n                $records[$this_username]['groups'][] = array( 'groupname' => $this_groupname, 'priority' => $this_priority );\n            }\n        }\n                \n        foreach ($records as $this_username => $data) {\n            $rowspan = count($data['groups']);\n            $group = $data['groups'][0];\n            \n            echo \"<tr>\";\n            \n            printf('<td rowspan=\"%s\">%s</td>', $rowspan, $this_username);\n            printf('<td rowspan=\"%s\">%s</td>', $rowspan, $data['fullname']);\n            \n            print_user_group_prio($this_username, $group['groupname'], $group['priority']);\n            \n            echo \"</tr>\";\n            \n            if ($rowspan > 1) {\n                for ($i = 1; $i < $rowspan; $i++) {\n                    $group = $data['groups'][$i];\n                    echo \"<tr>\";\n                    print_user_group_prio($this_username, $group['groupname'], $group['priority']);                    \n                    echo \"</tr>\";\n                }\n            }\n        }\n?>\n        </tbody>\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n    </table>\n    \n    <input name=\"csrf_token\" type=\"hidden\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // we partially strip some character and\n    // leave validation/escaping to other functions used later in the script\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username))\n                  ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8')\n                  : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for \";\n    if (!empty($username)) {\n         $logQuery .= \"username(s) starting with [$username] \";\n    } else {\n        $logQuery .= \"all usernames \";\n    }\n    $logQuery .= \"on page: \";\n\n    //feed the sidebar variables\n    $search_username = $username_enc;\n\n\n    // print HTML prologue\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\"\n    );\n    \n    $title = t('Intro','mngsearch.php');\n    \n    print_html_prologue($title, $langCode, array(), $extra_js);\n\n    if (!empty($username_enc)) {\n        $title .=  \" :: \" . $username_enc;\n    }\n\n    $help = (!empty($username_enc)) ? \"looked for user $username_enc\" : \"no user specified\";\n\n    include (\"menu-mng-users.php\");\n    \n    // these three variable can be used for validation an presentation purpose\n    $cols = array(\n                   'id' => t('all','ID'),\n                   'username' => t('all','Username'),\n                   'fullname' => 'Full name'\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    if (!empty($username)) {\n        array_push($sql_WHERE,\n                   sprintf(\"ui.username LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.username LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.firstname LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.lastname LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.homephone LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.workphone LIKE '%s%%'\", $dbSocket->escapeSimple($username)),\n                   sprintf(\"ui.mobilephone LIKE '%s%%'\", $dbSocket->escapeSimple($username)));\n    }\n\n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADCHECK'];\n    $_SESSION['reportQuery'] = sprintf(\" WHERE username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    $_SESSION['reportType'] = \"usernameListGeneric\";\n\n    $sql_format = \"SELECT DISTINCT(ui.username) AS username,\n                          CONCAT(COALESCE(ui.firstname, ''), ' ', COALESCE(ui.lastname, '')) AS fullname,\n                          ui.id, IFNULL(rug.username, 0) AS disabled\n                   FROM %s AS ui LEFT JOIN %s AS rug ON rug.username=ui.username AND rug.groupname='daloRADIUS-Disabled-Users'\";\n    $sql = sprintf($sql_format, $configValues['CONFIG_DB_TBL_DALOUSERINFO'], $configValues['CONFIG_DB_TBL_RADUSERGROUP']);\n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" OR \", $sql_WHERE);\n    }\n    $sql .= \" GROUP BY username\";\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= \" ORDER BY $orderBy $orderType LIMIT $offset, $rowsPerPage\";\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = (!empty($username_enc) ? \"&usernameOnline=\" . urlencode($username_enc) : \"\");\n        \n        // this can be passed as form attribute and \n        // printTableFormControls function parameter\n        $action = \"mng-del.php\";\n?>\n        \n<form name=\"searchusers\" method=\"POST\" action=\"<?= $action ?>\">\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n            </tr>\n            \n            <tr>\n                <th style=\"text-align: left\" colspan=\"<?= $colspan ?>\">\n<?php\n        printTableFormControls('username[]', $action, 'searchusers');\n?>\n                </th>\n            </tr>\n            \n            <tr>\n<?php\n        // second line of table header\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            // username, fullname, ui.id, disabled\n            \n            $disabled = $row[3] !== '0';\n            \n            $img = ($disabled)\n                 ? '<img title=\"user is disabled\" src=\"images/icons/userStatusDisabled.gif\" alt=\"[disabled]\">'\n                 : '<img title=\"user is enabled\" src=\"images/icons/userStatusActive.gif\" alt=\"[enabled]\">';\n\n            $this_username_enc = htmlspecialchars($row[0], ENT_QUOTES, 'UTF-8');\n            $this_fullname_enc = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n\n            $id = intval($row[2]);\n\n            // tooltip and ajax stuff\n            $li_style = 'margin: 7px auto';\n            $tooltip = '<ul style=\"list-style-type: none\">'\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), t('Tooltip','UserEdit'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"config-maint-test-user.php?username=%s&password=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), urlencode($this_fullname_enc), t('all','TestUser'))\n                     . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-username.php?username=%s\">%s</a></li>',\n                               $li_style, urlencode($this_username_enc), t('all','Accounting'))\n                     . '</ul>'\n                     . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n\n            $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo','username=\"\n                     . urlencode($this_username_enc) . \"');return false;\";\n?>\n\n            <tr>\n                <td>\n                    <input type=\"checkbox\" name=\"username[]\" value=\"<?= $this_username_enc ?>\">\n                    <?= $id ?>\n                </td>\n                <td>\n                    <?= $img ?>\n                    <a class=\"tablenovisit\" href=\"#\" onclick=\"<?= $onclick ?>\" tooltipText='<?= $tooltip ?>'>\n                        <?= $this_username_enc ?>\n                    </a>\n                </td>\n                <td><?= $this_fullname_enc ?></td>\n            </tr>\n\n<?php\n        }\n?>\n        </tbody>\n\n<?php\n        // tfoot\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n    \n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?= dalo_csrf_token() ?>\">\n    \n</form>\n\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n\n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n\n    // print HTML prologue\n    $title = t('Intro','msgerrorpermissions.php');\n    $help = t('helpPage','msgerrorpermissions');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-home.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    $failureMsg = t('helpPage','msgerrorpermissions');\n    include_once('include/management/actionMessages.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repbatch.php');\n    $help = t('helpPage','repbatch');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-batch.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','rephb.php');\n    $help = t('helpPage','rephb');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-hb.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query on page: \";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','replastconnect.php');\n    $help = t('helpPage','replastconnect');\n    \n    print_html_prologue($title, $langCode);\n\n    // setting table-related parameters first\n    switch($configValues['FREERADIUS_VERSION']) {\n    case '1':\n        $tableSetting['postauth']['user'] = 'user';\n        $tableSetting['postauth']['date'] = 'date';\n        break;\n        \n    case '2':\n    case '3':\n    default:\n        $tableSetting['postauth']['user'] = 'username';\n        $tableSetting['postauth']['date'] = 'authdate';\n        break;\n    }\n    \n    // in other cases we just check that syntax is ok\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : date(\"Y-m-01\");\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : date(\"Y-m-01\", mktime(0, 0, 0, date('n') + 1, 1, date('Y')));\n\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $usernameLastConnect = (array_key_exists('usernameLastConnect', $_GET) &&\n                            !empty(str_replace(\"%\", \"\", trim($_GET['usernameLastConnect']))))\n                         ? str_replace(\"%\", \"\", trim($_GET['usernameLastConnect'])) : \"\";\n    $username_enc = (!empty($usernameLastConnect)) ? htmlspecialchars($usernameLastConnect, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    include(\"menu-reports.php\");\n\n    $hiddenPassword = (strtolower($configValues['CONFIG_IFACE_PASSWORD_HIDDEN']) == \"yes\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array( \n                   $tableSetting['postauth']['user'] => t('all','Username'),\n                 );\n    \n    if (!$hiddenPassword) {\n        $cols[\"pass\"] = t('all','Password');\n    }\n    \n    $date_label = $tableSetting['postauth']['date'];\n    $cols[$date_label] = t('all','StartTime');\n    $cols[\"reply\"] = t('all','RADIUSReply');\n    \n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    $default_orderBy = array_keys($cols)[count($cols) - 2];\n    $default_orderType = \"desc\";\n    \n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : $default_orderBy;\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : $default_orderType;\n\n    $radiusReply = (array_key_exists('radiusReply', $_GET) && isset($_GET['radiusReply']) &&\n                    in_array($_GET['radiusReply'], array( \"Any\", \"Access-Accept\", \"Access-Reject\" )))\n                 ? $_GET['radiusReply'] : \"Any\";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n\n    include('include/management/pages_common.php');\n    include('library/opendb.php');\n\n    // pa is a placeholder in the SQL statements below\n    // except for $usernameLastConnect, which has been only partially escaped,\n    // all other query parameters have been validated earlier.\n    $sql_WHERE = array();\n    if (!empty($usernameLastConnect)) {\n        $sql_WHERE[] = sprintf(\"pa.%s LIKE '%s%%'\", $tableSetting['postauth']['user'],\n                                                    $dbSocket->escapeSimple($usernameLastConnect));\n    }\n    $sql_WHERE[] = sprintf(\"pa.%s BETWEEN '%s' AND '%s'\", $tableSetting['postauth']['date'],\n                                                          $dbSocket->escapeSimple($startdate),\n                                                          $dbSocket->escapeSimple($enddate));\n    if ($radiusReply != \"Any\") {\n        $sql_WHERE[] = sprintf(\"pa.reply='%s'\", $dbSocket->escapeSimple($radiusReply));\n    }\n    \n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADPOSTAUTH'];\n    $_SESSION['reportQuery'] = \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    $_SESSION['reportType'] = \"reportsLastConnectionAttempts\";\n\n    //orig: used as maethod to get total rows - this is required for the pages_numbering.php page \n    $sql_format = \"SELECT pa.%s, pa.pass, pa.reply, pa.%s FROM %s AS pa\";\n    \n    $sql = sprintf($sql_format, $tableSetting['postauth']['user'],\n                                $tableSetting['postauth']['date'],\n                                $configValues['CONFIG_DB_TBL_RADPOSTAUTH'])\n         . $_SESSION['reportQuery'];\n    \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n        \n        $sql .= sprintf(\" ORDER BY pa.%s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n\n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_params = array();\n        if (!empty($startdate)) {\n            $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n        }\n        if (!empty($enddate)) {\n            $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n        }\n        if (!empty($username_enc)) {\n            $partial_query_params[] = sprintf(\"usernameLastConnect=%s\", urlencode($username_enc));\n        }\n        if (!empty($radiusReply)) {\n            $partial_query_params[] = sprintf(\"radiusReply=%s\", $radiusReply);\n        }\n        \n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n\n?>\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n            </tr>\n            \n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n\n        <tbody>\n<?php\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            // escape row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n            }\n\n            // The table that is being produced is in the format of:\n            // +-------------+-------------+---------------+-----------+\n            // | user        | pass (opt.) | reply         | date      |   \n            // +-------------+-------------+---------------+-----------+\n\n            list($user, $pass, $reply, $starttime) = $row;\n\n            echo \"<tr>\";\n            \n            printf(\"<td>%s</td>\", $user);\n            if (!$hiddenPassword) {\n                printf(\"<td>%s</td>\", $pass);\n            }\n            printf(\"<td>%s</td>\", $starttime);\n            \n            $color = ($reply == \"Access-Reject\") ? \"red\" : \"green\";\n            printf('<td style=\"color: %s\">%s</td>', $color, $reply);\n            \n            echo \"</tr>\";\n\n        }\n?>\n        </tbody>\n\n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // parameter validation\n    $bootLineCount = (array_key_exists('bootLineCount', $_GET) && isset($_GET['bootLineCount']) &&\n                      intval($_GET['bootLineCount']) > 0)\n                   ? intval($_GET['bootLineCount']) : 50;\n\n    // preg quoted before usage\n    $bootFilter = (array_key_exists('bootFilter', $_GET) && isset($_GET['bootFilter']))\n                ? $_GET['bootFilter'] : \"\";\n\n\n    // print HTML prologue\n    $title = t('Intro','replogsboot.php') . \" :: $bootLineCount Lines Count\";\n    if (!empty($bootFilter) && $bootFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($bootFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogsboot');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-logs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/exten-boot_log.php');\n    include_once('include/management/actionMessages.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // parameter validation\n    $radiusLineCount = (array_key_exists('radiusLineCount', $_GET) && isset($_GET['radiusLineCount']) &&\n                        intval($_GET['radiusLineCount']) > 0)\n                     ? intval($_GET['radiusLineCount']) : 50;\n\n    // preg quoted before usage\n    $radiusFilter = (array_key_exists('radiusFilter', $_GET) && isset($_GET['radiusFilter']) &&\n                     in_array($_GET['radiusFilter'], array( \"Auth\", \"Info\", \"Error\" )))\n                  ? $_GET['radiusFilter'] : \"\";\n\n\n    // print HTML prologue\n    $title = t('Intro','replogsradius.php') . \" :: $radiusLineCount Lines Count\";\n    if (!empty($radiusFilter) && $radiusFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($radiusFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogsradius');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-reports-logs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/exten-radius_log.php');\n    include_once('include/management/actionMessages.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n    \n    // parameter validation\n    $systemLineCount = (array_key_exists('systemLineCount', $_GET) && isset($_GET['systemLineCount']) &&\n                        intval($_GET['systemLineCount']) > 0)\n                     ? intval($_GET['systemLineCount']) : 50;\n\n    // preg quoted before usage\n    $systemFilter = (array_key_exists('systemFilter', $_GET) && isset($_GET['systemFilter']))\n                  ? $_GET['systemFilter'] : \"\";\n\n    \n    // print HTML prologue\n    $title = t('Intro','replogssystem.php') . \" :: $systemLineCount Lines Count\";\n    if (!empty($systemFilter) && $systemFilter !== '.+') {\n        $title .= \" with filter set to \" . htmlspecialchars($systemFilter, ENT_QUOTES, 'UTF-8');\n    }\n    $help = t('helpPage','replogssystem');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-reports-logs.php\");      \n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/exten-syslog_log.php');\n    include_once('include/management/actionMessages.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n        \n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");    \n    include(\"library/layout.php\");\n\n\n    // print HTML prologue\n    $title = t('Intro','replogs.php');\n    $help = t('helpPage','replogs');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-logs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repmain.php');\n    $help = t('helpPage','repmain');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Maria Del Prete <filippo.delprete@gmail.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // we validate starting and ending dates\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for new user(s)\";\n    if (!empty($startdate)) {\n         $logQuery .= \" from $startdate\";\n    }\n    if (!empty($enddate)) {\n         $logQuery .= \" to $enddate\";\n    }\n    $logQuery .= \"on page: \";\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','repnewusers.php');\n    $help = t('helpPage','repnewusers');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n    \n    include(\"menu-reports.php\");\n    \n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    \"month\" => t('all','Month'),\n                    \"users\" => t('all','Users')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"desc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $sql_WHERE_pieces = array();\n    if (!empty($enddate)) {\n        $sql_WHERE_pieces[] = sprintf(\"CreationDate <= '%s'\", $dbSocket->escapeSimple($enddate));\n    }\n    \n    if (!empty($startdate)) {\n        $sql_WHERE_pieces[] = sprintf(\"CreationDate >= '%s'\", $dbSocket->escapeSimple($startdate));\n    }\n\n    $sql_WHERE = (count($sql_WHERE_pieces) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE_pieces) : \"\";\n\n    // month is used as a \"shadow\" parameter for non-lexicographic ordering purpose\n    // period and users are used for presentation purpose\n    $sql = sprintf(\"SELECT CONCAT(MONTHNAME(CreationDate), ' ', YEAR(CreationDate)) AS period, COUNT(*) As users,\n                           CAST(CONCAT(YEAR(CreationDate), '-', MONTH(CreationDate), '-01') AS DATE) AS month\n                      FROM %s\", $configValues['CONFIG_DB_TBL_DALOUSERINFO'])\n         . $sql_WHERE . \" GROUP BY month\";                                                \n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n\n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $logDebugSQL = \"$sql;\\n\";\n        $res = $dbSocket->query($sql);\n        \n        $per_page_numrows = $res->numRows();\n        \n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_params = array();\n        if (!empty($startdate)) {\n            $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n        }\n        if (!empty($enddate)) {\n            $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n        }\n        \n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n        \n        \n        // set navbar stuff\n        $navkeys = array( array( 'stats', t('all','Statistics') ), array( 'graphs', t('menu','Graphs') ), );\n\n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n?>\n                        <table border=\"0\" class=\"table1\">\n                            <thead>\n                                <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $colspan);\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                                </tr>\n\n                                <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n                                </tr>\n                            </thead>\n                            \n                            <tbody>\n<?php\n        $count = 0;\n        while ($row = $res->fetchRow()) {\n            \n            // last field is used only for ordering purpose\n            $rowlen = count($row) - 1;\n            \n            // print table row\n            printf('<tr id=\"row-%d\">', $count);\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                $row[$i] = htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8');\n                printf(\"<td>%s</td>\", $row[$i]);\n            }\n            \n            echo '</tr>';\n            \n            $count++;\n        }\n?>\n                            </tbody>\n                            \n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n                            \n                        </table>\n<?php\n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        $img_format = '<div style=\"text-align: center\"><img src=\"%s\" alt=\"%s\" style=\"%s\"></div>';\n        $src = sprintf('library/graphs-reports-new-users.php?startdate=%s&enddate=%s', $startdate, $enddate);\n        $alt = \"monthly number of new users\";\n        printf($img_format, $src, \"Online users\", \"margin: 30px auto\");\n\n        close_tab($navkeys, 1);\n        \n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip()\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatserver.php');\n    $help = t('helpPage','repstatserver');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/exten-server_info.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    $log = \"visited page: \";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatradius.php');\n    $help = t('helpPage','repstatradius');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n      \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('library/exten-radius_server_info.php');\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:     Liran Tal <liran@enginx.com>\n *              Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    $log = \"visited page: \";\n    $logQuery = \"performed query on page: \";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n\n    // print HTML prologue\n    $title = \"UPS Status\";\n    $help = \"\";\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    exec(\"which apcaccess || command -v apcaccess\", $output, $retStatus);\n\n    $failureMsg = \"\";\n\n    $sep = \":\";\n    if ($retStatus !== 0) {\n        $sep = \"\\n\";\n        $failureMsg = '<strong>Error</strong> accessing UPS device information<br><br>';\n    } else {\n?>\n\n            <h3>General Information</h3>\n            <table class=\"summarySection\">\n\n<?php \n        foreach ($output as $line) {\n        list($var, $val) = split($sep, $line);\n        $var = htmlspecialchars($var, ENT_QUOTES, 'UTF-8');\n        $val = htmlspecialchars($val, ENT_QUOTES, 'UTF-8');\n?>\n                <tr>\n                <td class=\"summaryKey\"><?= $var ?></td>\n                <td class=\"summaryValue\"><span class=\"sleft\"><?= $val ?></span></td>\n                </tr>\n<?php\n        }\n?>\n            </table>\n<?php\n    }\n    \n    if (!empty($failureMsg)) {\n        include_once('include/management/actionMessages.php');\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','repstatus.php');\n    $help = t('helpPage','repstatus');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports-status.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    $limit = (array_key_exists('limit', $_GET) && isset($_GET['limit']) && intval($_GET['limit']) > 0)\n           ? intval($_GET['limit']) : \"\";\n    \n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n\n    // and in other cases we partially strip some character,\n    // and leave validation/escaping to other functions used later in the script\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n\n    // print HTML prologue\n    $title = t('Intro','reptopusers.php');\n    $help = t('helpPage','reptopusers') . \" \" . $orderBy;\n    \n    print_html_prologue($title, $langCode);\n    \n    include (\"menu-reports.php\");\n\n    // the array $cols has multiple purposes:\n    // - its keys (when non-numerical) can be used\n    //   - for validating user input\n    //   - for table ordering purpose\n    // - its value can be used for table headings presentation\n    $cols = array(\n                    'username' => t('all','Username'),\n                    'framedipaddress' => t('all','IPAddress'),\n                    'acctstarttime' => t('all','StartTime'),\n                    'acctstoptime' => t('all','StopTime'),\n                    'Time' => t('all','TotalTime'),\n                    'Upload' => t('all','Upload') . \" (\" . t('all','Bytes') . \")\",\n                    'Download' => t('all','Download') . \" (\" . t('all','Bytes') . \")\",\n                    'acctterminatecause' => t('all','Termination'),\n                    'nasipaddress' => t('all','NASIPAddress')\n    );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for [order by: $orderBy\";\n    if (!empty($limit)) {\n        $logQuery .= \" / limit: $limit\";\n    }\n    $logQuery .= \"] on page: \";\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    // the partial query is built starting from user input\n    // and for being passed to setupNumbering and setupLinks functions\n    $partial_query_params = array();\n    \n    // creating $sql_WHERE for SQL query\n    $sql_WHERE = array();\n    $sql_WHERE[] = \"AcctStopTime > '0000-00-00 00:00:01'\";\n    if (!empty($startdate)) {\n        $partial_query_params[] = sprintf(\"startdate=%s\", urlencode(htmlspecialchars($startdate, ENT_QUOTES, 'UTF-8')));\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n    }\n    \n    if (!empty($enddate)) {\n        $partial_query_params[] = sprintf(\"enddate=%s\", urlencode(htmlspecialchars($enddate, ENT_QUOTES, 'UTF-8')));\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($enddate));\n    }\n    \n    if (!empty($username)) {\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n        $sql_WHERE[] = sprintf(\"username LIKE '%s%%'\", $dbSocket->escapeSimple($username));\n    }\n    \n    // setup php session variables for exporting\n    $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n    $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n    $_SESSION['reportType'] = \"TopUsers\";\n    \n    $sql = \"SELECT DISTINCT(ra.username) AS username, ra.FramedIPAddress, ra.AcctStartTime, MAX(ra.AcctStopTime), \n                   SUM(ra.AcctSessionTime) AS Time, SUM(ra.AcctInputOctets) AS Upload,\n                   SUM(ra.AcctOutputOctets) AS Download, ra.AcctTerminateCause, ra.NASIPAddress,\n                   SUM(ra.AcctInputOctets + ra.AcctOutputOctets) AS Bandwidth\n            FROM \" . $configValues['CONFIG_DB_TBL_RADACCT'] . \" AS ra\";\n    \n    if (count($sql_WHERE) > 0) {\n        $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n    }\n    \n    $sql .= \" GROUP BY username\";\n    \n    if (!empty($limit)) {\n        $partial_query_params[] = sprintf(\"limit=%d\", $limit);\n        $sql .= sprintf(\" LIMIT %d\", $limit);\n    }\n    \n    $logDebugSQL = \"$sql;\\n\";\n    $res = $dbSocket->query($sql);\n    $numrows = $res->numRows();\n    \n    if ($numrows > 0) {\n        /* START - Related to pages_numbering.php */\n        \n        // when $numrows is set, $maxPage is calculated inside this include file\n        include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                              // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n        \n        // here we decide if page numbers should be shown\n        $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n        \n        /* END */\n                     \n        // we execute and log the actual query\n        $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n        $res = $dbSocket->query($sql);\n        $logDebugSQL = \"$sql;\\n\";\n\n        $per_page_numrows = $res->numRows();\n\n        // the partial query is built starting from user input\n        // and for being passed to setupNumbering and setupLinks functions\n        $partial_query_string = ((count($partial_query_params) > 0) ? \"&\" . implode(\"&\", $partial_query_params)  : \"\");\n?>\n\n    <table border=\"0\" class=\"table1\">\n        <thead>\n            <tr style=\"background-color: white\">\n<?php\n        // page numbers are shown only if there is more than one page\n        if ($drawNumberLinks) {\n            printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n            setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n            echo '</td>';\n        }\n?>\n                <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                    <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                        onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n                </td>\n\n            </tr>\n            <tr>\n<?php\n        printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n?>\n            </tr>\n        </thead>\n        \n        <tbody>\n<?php\n        $count = 0;\n        while ($row = $res->fetchRow()) {\n            $rowlen = count($row);\n            \n            // print table row\n            printf('<tr id=\"row-%d\">', $count);\n            \n            for ($i = 0; $i < $rowlen; $i++) {\n                \n                if ($i == 4) {\n                    //~ Time\n                    $row[$i] = time2str($row[$i]);\n                } else if ($i == 5 || $i == 6) {\n                    //~ Upload, Download\n                    $row[$i] = toxbyte($row[$i]);\n                }\n                \n                printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n            }\n            \n            echo \"</tr>\";\n            \n            $count++;\n        }\n?>\n        </tbody>\n\n<?php\n        $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n        printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n?>\n\n    </table>\n<?php\n    } else {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    //~ include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    $log = \"visited page: \";\n    $logQuery = \"performed query for \";\n    if (!empty($username)) {\n         $logQuery .= \"username(s) starting with [$username] \";\n    } else {\n        $logQuery .= \"all usernames \";\n    }\n    $logQuery .= \"on page: \";\n\n    \n    // print HTML prologue\n    $title = t('Intro','repusername.php');\n    $help = t('helpPage','repusername') . \" \" . $username_enc;\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-reports.php\");\n    \n    $cols = array(\n                    'id' => t('all','ID'),\n                    'username' => t('all','Username'),\n                    'attribute' => t('all','Attribute'),\n                    'op',\n                    'value' => t('all','Value'),\n                    t('all','Action')\n                 );\n    $colspan = count($cols);\n    $half_colspan = intdiv($colspan, 2);\n\n    // validating user passed parameters\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n    \n    $arr = array();\n\n    $sql = sprintf(\"SELECT id, username, attribute, op, value FROM %s WHERE username='%s' ORDER BY %s %s\", \n                   $configValues['CONFIG_DB_TBL_RADCHECK'], $dbSocket->escapeSimple($username), $orderBy, $orderType);\n    $arr[] = array( \n                    'sql' => $sql,\n                    'caption' => t('captions','radcheckrecords')\n                  );\n    \n    $sql = sprintf(\"SELECT id, username, attribute, op, value FROM %s WHERE username='%s' ORDER BY %s %s\", \n                   $configValues['CONFIG_DB_TBL_RADREPLY'], $dbSocket->escapeSimple($username), $orderBy, $orderType);\n    $arr[] = array( \n                    'sql' => $sql,\n                    'caption' => t('captions','radreplyrecords')\n                  );\n    \n    $total_numrows = 0;\n    foreach ($arr as $item) {\n        $res = $dbSocket->query($item['sql']);\n        $logDebugSQL .= $item['sql'] . \";\\n\";\n        \n        $numrows = $res->numRows();\n        \n        if ($numrows > 0) {\n?>\n<h3 style=\"margin-top: 10px\"><?= $item['caption'] ?></h3>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr>\n<?php\n            printTableHead($cols, $orderBy, $orderType);\n?>\n        </tr>\n    </thead>\n\n    <tbody>\n<?php\n            $csrf_token = dalo_csrf_token();\n\n            while ($row = $res->fetchRow()) {\n                $rowlen = count($row);\n                \n                echo \"<tr>\";\n                for ($i = 0; $i < $rowlen; $i++) {\n                    printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n                }\n                \n                $this_username = htmlspecialchars($row[1], ENT_QUOTES, 'UTF-8');\n                echo '<td>';\n                $formId = $this_username . \"-form-del\";\n                printf('<form id=\"%s\" style=\"display: none\" method=\"POST\" action=\"mng-del.php\">', $formId);\n                printf('<input type=\"hidden\" name=\"username[]\" value=\"%s\">', $this_username);\n                printf('<input type=\"hidden\" name=\"csrf_token\" value=\"%s\">', $csrf_token);\n                echo '</form>';\n                \n                $onclick = sprintf(\"document.getElementById('%s').submit()\", $formId);\n                printf('<a href=\"mng-edit.php?username=%s\">%s</a>&nbsp;<a href=\"#\" onclick=\"%s\">%s</a>',\n                       urlencode($this_username), t('all','edit'), $onclick, t('all','del'));\n                echo '</td>';\n                echo \"</tr>\";\n            }\n?>\n    </tbody>\n</table>\n<?php\n\n        }\n        \n        $total_numrows += $numrows;\n    }\n    \n    include('library/closedb.php');\n\n    if ($total_numrows == 0) {\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n"], "filenames": ["acct-active.php", "acct-all.php", "acct-custom-query.php", "acct-custom.php", "acct-date.php", "acct-ipaddress.php", "acct-main.php", "acct-nasipaddress.php", "acct-username.php", "bill-history-query.php", "bill-history.php", "bill-main.php", "bill-merchant-transactions.php", "bill-merchant.php", "bill-pos-edit.php", "bill-pos-new.php", "bill-rates-date.php", "config-db.php", "config-lang.php", "config-reports.php", "gis-main.php", "graph-main.php", "help-main.php", "include/management/userBilling.php", "library/validation.php", "menu-accounting-custom.php", "menu-bill-history.php", "menu-bill-merchant.php", "mng-batch-add.php", "mng-edit.php", "mng-hs-edit.php", "mng-hs-list.php", "mng-import-users.php", "mng-list-all.php", "mng-new-quick.php", "mng-new.php", "mng-rad-attributes-edit.php", "mng-rad-attributes-new.php", "mng-rad-attributes-search.php", "mng-rad-groupcheck-new.php", "mng-rad-groupreply-new.php", "mng-rad-nas-new.php", "mng-rad-profiles-edit.php", "mng-rad-profiles-new.php", "mng-rad-usergroup-list-user.php", "mng-rad-usergroup-list.php", "mng-search.php", "msg-error-permissions.php", "rep-batch.php", "rep-hb.php", "rep-lastconnect.php", "rep-logs-boot.php", "rep-logs-radius.php", "rep-logs-system.php", "rep-logs.php", "rep-main.php", "rep-newusers.php", "rep-stat-server.php", "rep-stat-services.php", "rep-stat-ups.php", "rep-status.php", "rep-topusers.php", "rep-username.php"], "buggy_code_start_loc": [30, 29, 27, 29, 30, 29, 46, 29, 29, 1, 31, 44, 26, 31, 28, 29, 29, 28, 27, 1, 76, 1, 64, 17, 66, 26, 26, 26, 30, 35, 35, 34, 35, 104, 35, 35, 35, 35, 35, 35, 35, 27, 35, 35, 159, 199, 31, 26, 1, 1, 36, 27, 27, 27, 30, 1, 30, 28, 28, 28, 1, 29, 27], "buggy_code_end_loc": [62, 41, 212, 34, 61, 50, 46, 53, 52, 286, 37, 59, 330, 32, 687, 461, 69, 118, 55, 65, 92, 61, 90, 623, 122, 27, 150, 187, 106, 394, 175, 227, 189, 278, 280, 328, 253, 202, 85, 85, 85, 99, 53, 82, 203, 200, 99, 58, 71, 61, 61, 79, 78, 76, 59, 65, 58, 64, 67, 100, 61, 54, 49], "fixing_code_start_loc": [30, 30, 28, 30, 30, 30, 47, 30, 30, 1, 31, 43, 27, 31, 28, 30, 30, 27, 28, 1, 77, 1, 63, 17, 67, 26, 26, 26, 29, 35, 35, 35, 35, 104, 35, 35, 35, 35, 35, 35, 35, 28, 35, 35, 159, 199, 30, 27, 1, 1, 36, 28, 28, 28, 30, 1, 31, 27, 27, 27, 1, 30, 28], "fixing_code_end_loc": [58, 37, 212, 31, 58, 50, 48, 52, 50, 212, 37, 48, 235, 32, 677, 458, 68, 115, 53, 48, 81, 48, 69, 558, 236, 27, 141, 150, 103, 392, 173, 217, 188, 282, 278, 326, 300, 241, 85, 81, 81, 95, 50, 80, 207, 200, 97, 50, 48, 48, 58, 65, 66, 65, 48, 48, 56, 51, 51, 86, 46, 52, 48], "type": "CWE-732", "message": "Sensitive Cookie Without 'HttpOnly' Flag in GitHub repository lirantal/daloradius prior to master.", "other": {"cve": {"id": "CVE-2022-4630", "sourceIdentifier": "security@huntr.dev", "published": "2022-12-21T18:15:09.157", "lastModified": "2022-12-28T18:54:34.590", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Sensitive Cookie Without 'HttpOnly' Flag in GitHub repository lirantal/daloradius prior to master."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-732"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-1004"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:daloradius:daloradius:-:*:*:*:*:*:*:*", "matchCriteriaId": "C90EA4F3-961C-4C47-80DE-0AC7BBCDCF3D"}]}]}], "references": [{"url": "https://github.com/lirantal/daloradius/commit/6878619dc661b3009429777a1aeeb383ddc0166b", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/401661ee-40e6-4ee3-a925-3716b96ece5c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lirantal/daloradius/commit/6878619dc661b3009429777a1aeeb383ddc0166b"}}