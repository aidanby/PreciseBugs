{"buggy_code": ["# CHANGES\n## RosarioSIS Student Information System\n\nChanges in 9.0\n--------------\n- CSS add length to previous meals select in DailyMenus.php\n- CSS FlatSIS fix calendar menu text wrapping in stylesheet.css\n- Add Export list button in TransactionsReport.php\n- Add Food Service icon to list in ServeMenus.php\n- Add User / Student photo tooltip in ServeMenus.php & Transactions.php\n- HTML add horizontal ruler before each category in MakeReferral.php\n- Fix SQL error when generating Schedule table with PHP8.1 in GetMP.php\n- Reorder PDF list columns to match Schedule columns in PrintSchedules.php\n- SQL order Schedule list by Course Title & Course Period Short Name in Schedule.php & PrintSchedules.php\n- Fix SQL error more than one row returned by a subquery in Rollover.php\n- Fix update Course Period title when Short Name contains single quote in Courses.php\n- Fix PHP8.1 deprecated function parameter is null, program wide\n- Fix PHP8.1 deprecated automatic conversion of false to array in StudentsUsersInfo.fnc.php\n- Add Student Photo Tip Message in AddDrop.php & StudentList.php\n- Format Enrollment Start & End Date in Export.php\n- Add Student name if no Contacts at address in MailingLabel.fnc.php\n- Do not Export Delete column in Periods.php & GradeLevels.php\n- HTML group inputs inside fieldset (tab title or program name) in Configuration.php\n- Hide Comment Codes tip message if Comments unchecked for Marking Period in InputFinalGrades.php\n- Add Get Student Labels Form JS (Disable unchecked fieldset) in StudentLabels.fnc.php & StudentLabels.php\n- Fix PHP8.1 deprecated use PostgreSQL $db_connection global variable in database.inc.php & Grades/includes/Dashboard.inc.php\n- Don't Delete Gender & Birthday Student Fields in Fields.fnc.php\n- CSS set cursor for .tipmsg-label in stylesheet.css\n- Add Username to Password Reset email in PasswordReset.php\n- `intl` PHP extension is now required in diagnostic.php & INSTALL.md\n- Fix PHP8.1 deprecated strftime() use strftime_compat() instead in Side.php, Date.php, PHPCompatibility.php, strftime_compat.php, Dashboard.inc.php & Preferences.php\n- Add $course_period_id param to limit check to a single Course Period in Courses.fnc.php & Courses.php\n- Add title to Contact & Address button images in Address.inc.php\n- CSS select max-width 440px in stylesheet.css & zresponsive.css\n- HTML add label to Points inputs to correct alignment in Grades.php\n- HTML add a11y-hidden label to select in CategoryBreakdown.php, CategoryBreakdownTime.php & StudentFieldBreakdown.php\n- Place Go button right after Timeframe in DailyTransactions.php, DailyTotals.php, CategoryBreakdown.php, CategoryBreakdownTime.php, StudentFieldBreakdown.php & Percent.php\n- Fix French translation for \"Not due\" in rosariosis.po\n- Move Transcript Include form checkboxes up in Transcripts.fnc.php\n- Add Delete button for Submission File in StudentAssignments.fnc.php\n- Fix SQL error null value in column \"title\" violates not-null constraint in MassCreateAssignments.php\n- Reorder & rename Course Periods columns to match Schedule program in MassCreateAssignments.php\n- Fix get History Grades Grade Level short name only if no Grade Level available in Transcripts.fnc.php\n- Fix get Student Photo from previous year in Transcripts.fnc.php\n- Fix SQL error invalid input syntax in PrintSchedules.php & TeacherCompletion.php, thanks to @scgajge12\n- Filter IP, HTTP_* headers can be forged in index.php, PasswordReset.php & ErrorMessage.fnc.php\n- Fix SQL error value too long for type character varying(100) in index.php\n- Fix SQL error invalid input syntax for integer in Student.php, User.php, Referrals.php, Portal.php, PortalNotes.php, PortalNotes.php & Moodle/functions.php\n- Fix PHP8.1 fatal error checkdate argument must be of type int in Calendar.php\n- Fix SQL error invalid input syntax for type date in Calendar.php\n- Fix SQL error duplicate key value violates unique constraint \"attendance_calendar_pkey\" in Calendar.php\n- Fix PHP fatal error Unsupported operand types in ListOutput.php\n- Add AttrEscape() function in Inputs.php\n- Use AttrEscape() instead of htmlspecialchars(), program wide\n- Maintain Advanced search when editing Timeframe in Percent.php\n\nChanges in 8.9.4\n----------------\n- Fix SQL injection sanitize all `$_REQUEST` keys in Warehouse.php, thanks to @nhienit2010\n- Fix reflected XSS via mime-type in FileUpload.fnc.php, thanks to @nhienit2010\n\nChanges in 8.9.3\n----------------\n- Fix stored XSS security issue: do not allow unsanitized SVG in FileUpload.fnc.php, thanks to @scgajge12 & @crowdoverflow\n\nChanges in 8.9.2\n----------------\n- Fix invalidate User School in session on login in index.php\n\nChanges in 8.9.1\n----------------\n- Fix regression since 8.6 Mailing Labels widget HTML in Widgets.php\n\nChanges in 8.9\n--------------\n- Fix GetTeacher() when newly inserted teacher in GetTeacher.fnc.php\n- Remove Half Day option in AddAbsences.php, Administration.php, TakeAttendance.php, Courses.php, Courses.fnc.php & Rollover.php\n- JS Hide \"+ New Period\" link onclick in Courses.php\n- CSS FlatSIS fix bottom button line height in stylesheet.css\n- Add help texts & translations for the Scheduling > Courses program in Help_en.php & help.po\n- Correct typos in Spanish help texts in help.po\n- Fix Locked column value on list export in Schedule.php\n- Student / User Photo input: only accept .jpg,.jpeg,.png,.gif in General_Info.inc.php\n- Increase Food Service icon width to 48px in FS_Icons.inc.php & MenuItems.php\n- HTML add Add-on upload input title in Modules.inc.php & Plugins.inc.php\n- Fix do not resubmit form on List Export in Incomes.php & Expenses.php\n- Fix List Export columns: hide Delete & show File Attached in Expenses.php, Incomes.php, Salaries.php, StaffPayments.php, StudentFees.php & StudentPayments.php\n- Check AllowEdit() on Event deletion in Calendar.php\n- Food Service icon upload in MenuItems.php\n- Add French & Spanish translation for \"Icon successfully uploaded.\" in rosariosis.po\n\nChanges in 8.8\n--------------\n- Fix proc_open() PHP function not allowed in PDF.php\n- Fix PHP Warning A non-numeric value encountered in ReportCards.fnc.php\n- Fix PHP Fatal error Unsupported operand types in Teacher Programs: do not search Students List, unset in CustomFields.fnc.php\n- Add 'staff_' prefix to first & last inputs on Find a User form in GetStaffList.fnc.php & Search.fnc.php\n- Remove icons from Ungraded column, use only number in StudentGrades.php\n- Exclude 0 points assignments from Ungraded count in StudentGrades.php\n- Date select increase years options from +5 to +20 in Date.php\n- JS Raise height by 1 submenu item so we stay above browser URL in warehouse.js\n- Add Min. and Max. GPA to Last row in Grades.fnc.php & ReportCards.fnc.php\n- Add Class Rank to Last row in Grades.fnc.php & ReportCards.fnc.php\n\nChanges in 8.7\n--------------\n- Rector fix bad code in functions/, classes/core/, ProgramFunctions/\n- Update tested on: not compatible with Internet Explorer in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- Add ProgramFunctions/SendEmail.fnc.php|send_error action hook in SendEmail.fnc.php\n- EasyCodingStandard use short array notation in functions/, classes/core/, ProgramFunctions/, modules/ & plugins/\n- Fix month + year format, remove day (regression since 7.1) in Dashboard.inc.php\n- ProgramUserConfig() always return array, not null in Config.fnc.php & \\_makeLetterGrade.fnc.php\n- Allow redirect to Take Attendance, no fatal error if no current MP in Portal.php\n- CSS fix checkbox & radio input vertical align on Firefox in stylesheet.css\n- CSS fix menu hover right arrow position when module name on 2 lines in stylesheet.css\n- CSS fix font-size auto-adjust on iPhone in stylesheet.css\n- Fix typo in English string, update translations in Rollover.php & rosariosis.mo\n- JS fix menu & scroll issue on smartphone landscape > 735px in warehouse.js & jquery-fixed.menu.js\n- FlatSIS theme: use Grunt to minify in Gruntfile.js\n- FlatSIS theme: do not import WPadmin theme stylesheet anymore in stylesheet.css, stylesheet_wkhtmltopdf.css\n- Fix SQL TRANSCRIPT_GRADES view, grades were duplicated for each school year in rosariosis.sql & Update.fnc.php\n\nChanges in 8.6.1\n----------------\n- Add .webp image to FileExtensionWhiteList() in FileUpload.fnc.php\n- Fix SQL error table name \"sam\" specified more than once in Widget.php\n\nChanges in 8.6\n--------------\n- Add (Student) Widgets class in classes/core/Widgets.php\n- Add (Student) Widget interface and individual Widget classes in classes/core/Widget.php\n- Use RosarioSIS\\Widgets in Widgets.fnc.php\n- Add StaffWidgets class in classes/core/StaffWidgets.php\n- Add StaffWidget interface and individual StaffWidget classes in classes/core/StaffWidget.php\n- Use RosarioSIS\\StaffWidgets in StaffWidgets.fnc.php\n- Admin Student Payments Delete restriction: also exclude Refund in StudentPayments.php & Student_Billing/functions.inc.php\n- Fix PHP Fatal error unsupported operand types when (Staff)Widgets() & $extra used for Parent / Student in Widgets.fnc.php & StaffWidgets.fnc.php\n- Fix PHP Fatal error canBuild() must be compatible with Widget::canBuild(array $modules) in Widget.php & StaffWidget.php\n- Fix SQL error more than one row returned by a subquery in Search.fnc.php\n\nChanges in 8.5.2\n----------------\n- Fix PHP Fatal error cannot redeclare `_rosarioLoginURL()` (regression since 8.3) in MarkDownHTML.fnc.php\n\nChanges in 8.5.1\n----------------\n- Fix SQL syntax error in ORDER BY (regression since 8.3.1) in Substitutions.php\n\nChanges in 8.5\n--------------\n- Fix SQL error duplicate key value violates unique constraint \"food_service_menus_title\" in Menus.php\n- SQL add PRIMARY KEY to STAFF_EXCEPTIONS table in rosariosis.sql\n- SQL PROFILE_EXCEPTIONS & STAFF_EXCEPTIONS tables: Add Admin Student Payments Delete restriction in Update.fnc.php & rosariosis.sql\n- Add Admin Student Payments Delete restriction in Profiles.php & Exceptions.php\n- Add Admin Student Payments Delete restriction in StudentPayments.php & Student_Billing/functions.inc.php\n- Fix SQL error numeric field overflow when entering percent > 100 in MassCreateAssignments.php\n- HTML Sort Order input type number in MarkingPeriods.php\n\nChanges in 8.4\n--------------\n- SQL GRADEBOOK_GRADES table: Change comment column type to text in Update.fnc.php & rosariosis.sql\n- Increase Grades Comment input maxlength to 500 chars in Grades.php\n- Fix use more coherent number_format() precision & no thousand separator in Percent.php, Assignments.php, StudentGrades.php, Grades.fnc.php & EditReportCardGrades.php\n- SQL order fields list by Category & SORT_ORDER in AssignOtherInfo.php\n- Fix SQL error numeric field overflow when entering percent > 100 in Assignments.php\n- Comments length > 60 chars, responsive table ColorBox in EditReportCardGrades.php, FinalGrades.php, Grades.php, InputFinalGrades.php & StudentGrades.php\n- Add File Attached to Incomes in Incomes.php & Accounting/functions.inc.php\n- Add File Attached to Expenses in Expenses.php\n- SQL ACCOUNTING_INCOMES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Fix SQL error when no user in session in Template.fnc.php\n- Correct help text note for User deletion in Help_en.php & help.po\n\nChanges in 8.3.1\n----------------\n- Fix SQL exclude fields of 'files' type in Substitutions.php\n- SQL order fields list by Category & SORT_ORDER in Substitutions.php\n- Fix force numeric separator \".\" when no en_US locale, use C locale in Warehouse.php\n- Fix Advanced Search > General Info text fields when adding Username in Search.fnc.php\n\nChanges in 8.3\n--------------\n- Fix PHP Warning non-numeric value encountered, use rounded percent grade in StudentGrades.php\n- Security Fix reflected XSS: encode HTML special chars for search_term in Courses.php\n- Add File Attached to Staff Payments in StaffPayments.php & Accounting/functions.inc.php\n- Add File Attached to Payments in StudentPayments.php & Student_Billing/functions.inc.php\n- SQL ACCOUNTING_PAYMENTS table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- SQL BILLING_PAYMENTS table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add help note for student deletion & translate in Help_en.php & help.po\n- Add RosarioSIS URL to image path in MarkDownHTML.fnc.php\n- Fix SQL error invalid byte sequence for encoding \"UTF8\": 0xde 0x20 in Security.php\n\nChanges in 8.2.1\n----------------\n- Fix SQL for Warning when only 0 points assignments in Assigments.php\n\nChanges in 8.2\n--------------\n- Fix replace regex: remove slash & allow space in FileUpload.fnc.php\n- Always Use Last Year's Picture if Missing in PrintClassLists.php\n- Fix #329 SQL error division by zero in t_update_mp_stats(): set min Credits to 1 in Courses.fnc.php\n- Fix SQL error when Teacher name has single quote in Courses.php\n- CSS FlatSIS remove useless line-height for tabs in stylesheet.css\n\nChanges in 8.1.1\n----------------\n- Fix security issue #328 unauthenticated access to Side.php in Warehouse.php, thanks to @ijdpuzon\n- Fix security issue #328 sanitize `$_POST` school, syear, mp & period parameters in Side.php\n\nChanges in 8.1\n--------------\n- Remove @ error control operator on pg_exec: allow PHP Warning in database.inc.php\n- Fix Address Field sequence name in AddressFields.php\n- Remove deprecated DBSeqConvertSerialName() function in database.inc.php\n- Fix Conflict Warning displayed twice in Courses.php\n- Fix PHP Notice Undefined index in miscExport.fnc.php\n- Fix SQL error when Student / Staff ID is hacked / not an integer in URL in Current.php\n- SQL ACCOUNTING_SALARIES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add File Attached to Salaries in Salaries.php & Accounting/functions.inc.php\n- SQL BILLING_FEES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add File Attached to Fees in StudentFees.php & Student_Billing/functions.inc.php\n- Fix Student Widgets for Advanced Search exports in GetStaffList.fnc.php, GetStuList.fnc.php & Search.inc.php\n- Add Export fields list (form) & Export fields list + extra SQL (student list) action hooks in Export.php & Actions.php\n- Do not remove Full Day and Half Day school periods from the Schedule table in PrintSchedules.php\n- Fix 403 Forbidden error due to pipe \"|\" in URL when using Apache 5G rules in Widgets.fnc.php\n\nChanges in 8.0.4\n----------------\n- Fix default Student/Parent program in Attendance/Menu.php\n\nChanges in 8.0.3\n----------------\n- Fix #324 Show Student Photo in Transcripts.fnc.php\n\nChanges in 8.0.2\n----------------\n- Fix User Widgets Search Terms in Users/Search.inc.php\n\nChanges in 8.0.1\n----------------\n- Fix #322 PHP syntax error, unexpected ')' in DailySummary.php\n\nChanges in 8.0\n--------------\n- Add Total from Payments & Total from Fees fields to Advanced Report in Export.php\n- Upgrade grunt, grunt-contrib-cssmin, grunt-contrib-uglify & grunt-contrib-watch & remove grunt-phpdoc in package.json & Gruntfile.js\n- CSS minification optimizations in stylesheet.css & stylesheet_wkhtmltopdf.css\n- JS uglify optimizations in plugins.min.js & plugins.min.js.map\n- Upgrade Chart.js from 2.9.3 to 3.4.1 & save 40KB in chart.min.js & Charts.fnc.php\n- Fix \"The gradebook configuration has been modified.\" note appearing twice in Grades/Configuration.php\n- Add warning in case all Assignments in Type have 0 Points (Extra Credit) in Assignments.php\n- Update French & Spanish translations in rosariosis.po\n- CSS FlatSIS shorten menu width & submenu links height + better contrast in stylesheet.css\n- CSS FlatSIS list square bullets in stylesheet.css\n- Default theme is now FlatSIS in rosariosis.sql\n- CSS remove .radio-attendance-code class in stylesheet.css, rtl.css & TakeAttendance.php\n- CSS remove Open Sans SVG fonts, format is deprecated in font.css & WPadmin/fonts/open\n- Upgrade marked.js 0.8.2 to version 1.2.9 in assets/js/marked/\n- Fix SQL error when $staff_id is 0 (no user in session) in Config.fnc.php\n- Remove Waived Fees from list in Student_Billing/functions.inc.php\n- New ROSARIO_DISABLE_ADDON_DELETE optional config constant in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- Add-on disable delete in Modules.inc.php & Plugins.inc.php\n- Merge Daily Transactions & Daily Totals programs in DailyTransactions.php & DailyTotals.php\n- Remove Daily Totals program from Student Billing & Accounting menus in Menu.php & rosariosis.sql\n- Fix Totals calculus in Accounting/includes/DailyTotals.php\n- Multibyte strings: check if not UTF-8 first to avoid cost of setting in Warehouse.php\n- Fix false positive Hacking Attempt on Print button click when no user in session in Warehouse.php\n- Merge Attendance Chart & Absence Summary programs in DailySummary.php & StudentSummary.php & Help_en.php\n- Remove Absence Summary program from Attendance menu in Menu.php, Help_en.php & rosariosis.sql\n\nChanges in 7.9.3\n----------------\n- Fix #318 PHP warning non-numeric value encountered for $LO_dir in ListOutput.fnc.php, thanks to @AhmadKakarr\n\nChanges in 7.9.2\n----------------\n- Fix SQL error when single quote in Course Title in InputFinalGrades.php\n- Fix include Semester course periods in the Schedule table in Schedule.inc.php\n- Fix #316 CSRF security issue set cookie samesite to strict, thanks to @huntrdev\n\nChanges in 7.9.1\n----------------\n- Fix remove file when has single quote in its name and actually delete file in Student.php, User.php & Schools.php\n- Fix download backup filename when contains spaces: use double quotes in DatabaseBackup.php\n\nChanges in 7.9\n--------------\n- Update default School Year to 2021 in rosariosis.sql & config.inc.sample.php\n\nChanges in 7.8.4\n----------------\n- Fix User Marking Period title in GradeBreakdown.php\n- SQL ORDER BY Teacher name in GradeBreakdown.php\n\nChanges in 7.8.3\n----------------\n- Fix trim 0 (float) when percent > 1,000: do not use comma for thousand separator in Grades.php & ProgressReports.php\n\nChanges in 7.8.2\n----------------\n- Fix try searching plural forms adding an 's' to singular form and with number set to 1 in Translator.php\n\nChanges in 7.8.1\n----------------\n- CSS Edge browser fix: Do not merge focus-within styles with hover styles in stylesheet.css, stylesheet_wkhtmltopdf.css & rtl.css\n\nChanges in 7.8\n--------------\n- Handle `multiple` files attribute in warehouse.js & Inputs.php\n- Add FileUploadMultiple(). Handle `multiple` files attribute for FileUpload() in FileUpload.fnc.php\n- Remove Reset button from Find a Student / User forms in Students/Search.inc.php & Users/Search.inc.php\n- CSS & JS open submenu on focus & focus-within in warehouse.js, stylesheet.css & rtl.css\n- CSS menu link & button color on focus in stylesheet.css & colors.css\n- Fix check students Course Status in PrintClassLists.php, PrintClassPictures.php, ClassSearchWidget.fnc.php, Referrals.php, EmailReferral.fnc.php & Widgets.fnc.php\n- Add Include Inactive Students checkbox in MasterScheduleReport.php & RequestsReport.php\n- Fix unset current student (check Course Status) when MP updated in Side.php\n- SQL fix Discipline Referrals using WHERE EXISTS in Widgets.fnc.php\n- Numeric Discipline field: invert values so BETWEEN works in Widgets.fnc.php\n- Numeric Discipline field: input type number in Widgets.fnc.php\n- Fix SQL error missing FROM ADDRESS table in GetStuList.fnc.php\n\nChanges in 7.7\n--------------\n- Move Dashboard() call outside in Dashboard.fnc.php & Portal.php\n- Add .xlsm,.key,.midi,.aif,.mpeg,.h264,.mkv,.log,.email,.eml,.emlx,.msg,.vcf extensions to white list in FileUpload.fnc.php\n- Add \"Last Name Middle Name First Name\" option to Display Name in GetStuList.fnc.php & Configuration.php\n- Fix SQL error escape course title in StudentGrades.php\n- SQL Remove Salaries having a Payment (same Amount & Comments (Title), after or on Assigned Date) in Accounting/functions.inc.php\n- SQL match Payment Comments LIKE Fee Title in Student_Billing/functions.inc.php\n- CSS fix list line-height in FlatSIS/stylesheet_wkhtmltopdf.css\n\nChanges in 7.6.1\n----------------\n- Fix #307 XSS update CodeIgniter Security class in classes/Security.php, thanks to @DustinBorn\n- Move Portal Poll vote code to modfunc in PortalPollNotes.php & Portal.php\n- Fix #308 Unauthenticated SQL injection. Use sanitized `$_REQUEST` in Portal.php, thanks to @DustinBorn\n- Fix #308 sanitize key. Pass array keys through function in Warehouse.php, thanks to @DustinBorn\n- Fix #309 unset `$_SESSION` so user cannot maintain dummy session in PasswordReset.php, thanks to @DustinBorn\n- Remove use of `$_SESSION['STAFF_ID'] === '-1'` in User.fnc.php & PasswordReset.php\n\nChanges in 7.6\n--------------\n- Fix login password with single quote, use POST in index.php & Preferences.php\n- HTML Use #! instead of JS return false to not go back to top in Buttons.php & Profiles.php\n- JS remove warehouse.min.js & include warehouse.js inside plugins.min.js in Gruntfile.js, assets/js/ & Warehouse.php\n- Fix PHP8 compatibility issues (warnings & fatal errors), system wide\n- Fix save new Grade with \"0\" as Title in ReportCardGrades.php\n- PHP8 no xmlrpc ext: load xmlrpc compat functions in plugins/Moodle/client.php, xmlrpc.php, XML_RPC.php, XmlrpcDecoder.php & XmlrpcEncoder.php\n- Fix xmlrpc nested arrays, use param & value elements instead in XmlrpcEncoder.php\n- Fix SQL Total points only select assignments for CP teacher (teacher may have changed) in Grades.php, InputFinalGrades.php, StudentGrades.php & GradebookBreakdown.php\n- Fix SQL Grades sort order in GradebookBreakdown.php\n- Add Login form link action hook in index.php & Actions.php\n- SQL fix Report Card Grades insert in rosariosis_fr.sql\n- SQL fix ORDER Report Cards by Student name & Course list by Title in ReportCards.fnc.php\n- SQL fix error invalid input syntax for integer in DailySummary.php\n- Replace tested on Ubuntu 16.04 with 18.04 (Buster) in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n\nChanges in 7.5\n--------------\n- HTML fix Student Assignment Submission display in StudentAssignments.fnc.php\n- Percent rounding to 2 decimal places is new School default in \\_makeLetterGrade.fnc.php\n- CSS Fix widefat table border color when rendered in PDF inside Chrome in colors.css\n- Add phpwkhtmltopdf class & remove Wkhtmltopdf class in classes/\n- Use phpwkhtmltopdf class instead of Wkhtmltopdf (more reliable & faster) in PDF.php\n- Add Report Cards PDF footer action hook in ReportCards.fnc.php & Actions.php\n- Transcripts PDF header action hook: echo your custom text before or append it to $header_html to display it after in Transcripts.fnc.php\n- Transcripts PDF footer action hook: echo your custom text before or append it to $footer_html to display it after in Transcripts.fnc.php\n- Add .transcript-certificate-block1 & .transcript-certificate-block2 CSS classes in Transcripts.fnc.php\n- Add .report-card-free-text CSS class in ReportCards.fnc.php\n- Delete any attendance for this day & student prior to update in FixDailyAttendance.php\n- Use \\_makeLetterGrade() for Percent grade so it reflects Teacher's Score rounding configuration in Grades.php & ProgressReports.php\n- Fix Add Credits only for Report Cards in ReportCards.fnc.php\n- Fix SQL error invalid input syntax for integer (Class Rank input) in Widgets.fnc.php\n- HTML Grades GPA Widget: use number input & check Weighted by default in Widgets.fnc.php\n\nChanges in 7.4\n--------------\n- List sort comment: trim & fix position in ListOutput.fnc.php\n- Fix #303 Raw value in comment so we can sort Percent column the right way in Grades.php, thanks to @dd02\n- Add Database Backup link to header in Rollover.php\n- Add Course Widget configuration option: Popup window or Pull-Down in Configuration.php & Help_en.php\n- Add Course Widget: select / Pull-Down in Widgets.fnc.php\n- Update French & Spanish translations in rosariosis.po, help.po\n- Add Total Credits in ReportCards.fnc.php\n- Do not display \"General Comments\" title if no comments in ReportCards.fnc.php\n- HTML display rows of 3 School Period checkboxes in AddAbsences.php\n- Comment input maxlength increased to 500 in InputFinalGrades.php\n- Comment Code input field is required in ReportCardCommentCodes.php\n- Add php-zip extension to list in INSTALL.md\n- Check for zip extension in diagnostic.php\n- Fix SQL error integer out of range in Food_Service/Students/Accounts.php\n- French translation: replace \"Effacer\" with \"Supprimer\" in rosariosis.po & help.po\n- Fix Teacher Programs Progress Report PDF, do not echo form in TeacherPrograms.php\n\nChanges in 7.3.1\n----------------\n- Fix admin override: no input div when values are not saved yet in Grades/Configuration.php\n- Fix #304 Do not include Excused (`*` or -1) grades in GradebookBreakdown.php, thanks to @dd02\n- Fix #304 regression since 5.0 Count students in GradebookBreakdown.php, thanks to @dd02\n- Fix #304 Totals count exclude Extra Credit assignments when Total Points is 0 for the Type, thanks to @dd02\n\nChanges in 7.3\n--------------\n- SQL Replace AND p.ATTENDANCE='Y' with AND cp.DOES_ATTENDANCE IS NOT NULL in Letters.php, StudentLabels.fnc.php, HonorRoll.fnc.php & Reminders.php\n- SQL remove unused SELECT ROOM in HonorRoll.fnc.php\n- Translate database on add-on install: run 'install_fr.sql' file in Modules.inc.php, Plugins.inc.php, modules/README.md & plugins/README.md\n- CSS remove wildcard rules in stylesheet.css & wkhtmltopdf.css\n- CSS remove browser input outline on focus in colors.css\n- Fix Format Phone Number for US in GetStuList.fnc.php, thanks to @dzungdo\n- Attendance dashboard limit Absences to past days in Dashboard.inc.php\n- Fix #299 Remove trailing slash \"/\" or dash \"-\" or dot \".\" from date in DailySummary.php\n- Fix #300 Include Full Day and Half Day school periods in the schedule table in PrintSchedules.php, thanks to @dzungdo\n- Update translations complete % in locale/REFERENCE.md\n- Add tested on CentOS & Google Chrome in INSTALL.md & INSTALL.pdf, thanks to @dd02\n- Add Before First Login form action hook in index.php & Actions.php\n- Fix regression since 7.0 not rolled items are checked in Rollover.php\n\nChanges in 7.2.4\n----------------\n- Take in Account Calendar Day Minutes in UpdateAttendanceDaily.fnc.php\n- Fix regression since 5.3 Return false if School Periods Length sum is 0 in UpdateAttendanceDaily.fnc.php, thanks to @dzungdo\n\nChanges in 7.2.3\n----------------\n- Fix regression since 5.9 search text User Field in Search.fnc.php, thanks to @dzungdo\n\nChanges in 7.2.2\n----------------\n- Fix SQL error foreign keys: Roll Schools before rolling Student Enrollment in Rollover.php\n- Fix SQL error table ADDRESS specified more than once in GetStuList.fnc.php\n\nChanges in 7.2.1\n----------------\n- Fix ParseMLField for Username field category in Preferences.php\n- Fix PHP Warning check requested locale exists in Warehouse.php\n- Add Attendance Codes help for (Lunch) Categories in Help_en.php & help.po\n- Fix SQL error multiple rows returned by a subquery in CreateParents.php\n\nChanges in 7.2\n--------------\n- Add Grade Level breakdown in StudentFieldBreakdown.php\n- Add link to Student Info in AddDrop.php\n- Limit students to User schools in AddDrop.php\n- Order Day, Month & Year inputs depending on User date preference in Date.php\n- SQL fix only display enrolled students in AddStudents.php\n- Link to Student Info redirects to right school in AddStudents.php\n- Reset password variable for each Contact in CreateParents.php\n\nChanges in 7.1.4\n----------------\n- Fix infinite loop when username already exists in CreateParents.php\n\nChanges in 7.1.3\n----------------\n- Fix #297 regression since 6.9 & SQL error in StudentSummary.php\n\nChanges in 7.1.2\n----------------\n- Fix SQL error Include Inactive Students for admin in PrintClassLists.php\n\nChanges in 7.1.1\n----------------\n- Fix #296 Include Inactive Students for admin in PrintClassLists.php\n\nChanges in 7.1\n--------------\n- Final Grading Percentages: add \"No quarters found\" error in Configuration.php\n- Add Start Date input in Scheduler.php\n- Export (Excel) date to YYYY-MM-DD format (ISO) in Date.php & Preferences.php\n- Select Date Format: Add Preferences( 'DATE' ) in User.fnc.php, Preferences.php, Date.php & Side.php\n- Fix SQL error TITLE column limit to 50 characters in GradeLevels.php\n- HTML remove radio buttons (File Attached or Embed Link) in PortalNotes.php & PortalPollsNotes.fnc.php\n- Add Grade Level breakdown in StudentBreakdown.php\n- Include Credits in ReportCards.fnc.php\n\nChanges in 7.0.4\n----------------\n- Fix #295 regression since 7.0 cannot save N/A date in Date.php\n\nChanges in 7.0.3\n----------------\n- Fix Multiple School Periods: Course Period School Period does not match, skip in Scheduler.php\n\nChanges in 7.0.2\n----------------\n- JS Fix search form onsubmit in Export.php\n\nChanges in 7.0.1\n----------------\n- Fix #292 System error \"blocked access to local file\" with wkhtmltopdf 0.12.6 in Wkhtmltopdf.php\n\nChanges in 7.0\n--------------\n- Update Markdownify from v2.1.11 to v2.3.1 in classes/Markdownify/*\n- Update Parsedown from v1.6.0 to v1.7.4 in classes/Parsedown.php\n- Update MoTranslator from v3.4 to v4.0 in Warehouse.php, Help.fnc.php & classes/MoTranslator/*\n- Fix 'School' translation when using MoTranslator in Schedule.inc.php & rosariosis.po\n- Fix '%s Handbook' translation when using MoTranslator in Help.php\n- CSS fix align \"+\" New Event icon to bottom in Calendar.php, CalendarDay.inc.php, stylesheet.css & zreponsive.css\n- Fix Day Number when multiple calendars and school years in CalendarDay.inc.php, DayToNumber.inc.php\n- Fix Numbered days display in SchoolPeriodsSelectInput.fnc.php & Courses.fnc.php\n- SQL improve Numbered days in AddAbsences.php, Administration.php, DailySummary.php, TakeAttendance.php, TeacherCompletion.php, UpdateAttendanceDaily.fnc.php & Portal.php\n- Place Rollover under Utilities separator in Menu.php\n- Merge Schedule Report & Master Schedule Report in Menu.php, MasterScheduleReport.php, ScheduleReport.php & rosariosis.sql\n- Add Students column to report in RequestsReport.php\n- Merge Requests Report & Unfilled Requests in Menu.php, RequestsReport.php, UnfilledRequests.php, Scheduler.php, Help_en.php & rosariosis.sql\n- Merge Average Daily Attendance & Average Attendance by Day in Menu.php, Percent.php, Help_en.php, help.po & rosariosis.sql\n- Remove \"Happy []...\" text in Portal.php\n- HTML remove \"Demographics\" header to gain space on PDF in AttendanceSummary.php\n- SQL Update ATTENDANCE_CODE (admin) when is NULL in TakeAttendance.php\n- CSS Add .widefat.files class in StudentsUsersInfo.fnc.php & stylesheet.css\n- CSS WPadmin more padding for list rows, menu links & footer help in stylesheet.css\n- CSS FlatSIS less padding for list row, header & popTable in stylesheet.css\n- CSS FlatSIS reduce body line-height & fix Dashboard tipmsg border in stylesheet.css\n- Format \"Show Available Seats\" & \"Print Schedule\" headers in Schedule.php\n- Remove $fy_id global variable in Schedule.php\n- HTML Add tooltips & notes in Rollover.php\n- Fix current CP Marking Period check on update in Courses.php\n- Fix limit list results to 1000, do not remove 1st result in ListOutput.fnc.php\n- Add $RosarioErrorsAddress config variable in config.inc.sample.php\n- Fix $RosarioNotifyAddress config variable description in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- SQL no access to Custom \"My Report\" program for admin by default in rosariosis.sql\n- JS MarkdownToHTML No MarkDown in text, return raw text in warehouse.js\n- Fix Delete from other Student/User Info tabs in Student.php & User.php\n- Remove deprecated since 4.5 rollover_* action hooks in Rollover.php & Actions.php\n- Fix Error: There is no column for The value for 0. This value was not saved in SaveData.fnc.php\n- Fix Do not Save / Export Medical tab lists in Medical.inc.php\n\n\n### Old versions CHANGES\n- [CHANGES for versions 5 and 6](CHANGES_V5_6.md).\n- [CHANGES for versions 3 and 4](CHANGES_V3_4.md).\n- [CHANGES for versions 1 and 2](CHANGES_V1_2.md).\n", "<?php\n/**\n * Registration Save functions\n *\n * @since 6.6\n */\n\n/**\n * Save Registration\n *\n * @param array $config Registration Form Config.\n * @param array $values Requested values: address, parent, contact & student.\n *\n * @return bool\n */\nfunction RegistrationSave( $config, $values )\n{\n\tif ( ! $config\n\t\t|| ! $values )\n\t{\n\t\treturn false;\n\t}\n\n\t$address_id = RegistrationSaveAddress( $config['address'], $values['address'] );\n\n\tforeach ( (array) $config['parent'] as $id => $config_parent )\n\t{\n\t\tif ( empty( $values['parent'][ $id ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$values['parent'][ $id ]['fields'] = FilterCustomFieldsMarkdown( 'PEOPLE_FIELDS', 'parent', $id, 'fields' );\n\n\t\t$contact_id = RegistrationSaveContact( $config_parent, issetVal( $values['parent'][ $id ] ) );\n\n\t\t$contact_address_id = 0;\n\n\t\tif ( empty( $config_parent['address'] )\n\t\t\t&& $id == 0 )\n\t\t{\n\t\t\t// Parent 1, same Address as Student.\n\t\t\t$config_parent['address'] = '1';\n\t\t}\n\t\telseif ( $config_parent['address'] == '2' )\n\t\t{\n\t\t\t// New Address.\n\t\t\t$contact_address_id = RegistrationSaveAddress( [], issetVal( $values['parent'][ $id ]['address'] ) );\n\t\t}\n\n\t\tRegistrationSaveJoinContact(\n\t\t\t$contact_id,\n\t\t\t// New Address or Same as Student or No Address.\n\t\t\t( ! empty( $contact_address_id ) ? $contact_address_id : ( $config_parent['address'] == '1' ? $address_id : 0 ) ),\n\t\t\t$config_parent\n\t\t);\n\t}\n\n\tforeach ( (array) $config['contact'] as $id => $config_contact )\n\t{\n\t\tif ( empty( $values['parent'][ $id ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$values['contact'][ $id ]['fields'] = FilterCustomFieldsMarkdown( 'PEOPLE_FIELDS', 'contact', $id, 'fields' );\n\n\t\t$contact_id = RegistrationSaveContact( [], issetVal( $values['contact'][ $id ] ) );\n\n\t\t$contact_address_id = 0;\n\n\t\tif ( $config_contact['address'] == '2' )\n\t\t{\n\t\t\t// New Address.\n\t\t\t$contact_address_id = RegistrationSaveAddress( $contact_id, issetVal( $values['contact'][ $id ]['address'] ) );\n\t\t}\n\n\t\tRegistrationSaveJoinContact(\n\t\t\t$contact_id,\n\t\t\t// New Address or Same as Student or No Address.\n\t\t\t( ! empty( $contact_address_id ) ? $contact_address_id : ( $config_contact['address'] == '1'  ? $address_id : 0 ) ),\n\t\t\t$config_contact\n\t\t);\n\t}\n\n\tRegistrationSaveStudent( $config['student'], $values['student'] );\n\n\treturn true;\n}\n\n/**\n * Save Registration using Sibling Address & contact Information\n *\n * @param array $config     Registration Form Config.\n * @param array $values     Requested values: address, parent, contact & student.\n * @param int   $student_id Sibling ID.\n *\n * @return bool\n */\nfunction RegistrationSaveSibling( $config, $values, $student_id )\n{\n\tif ( ! $config\n\t\t|| ! $values\n\t\t|| ! $student_id )\n\t{\n\t\treturn false;\n\t}\n\n\t$address_id = DBGetOne( \"SELECT ADDRESS_ID\n\t\tFROM STUDENTS_JOIN_ADDRESS\n\t\tWHERE STUDENT_ID='\" . $student_id . \"'\n\t\tAND MAILING='Y'\n\t\tAND RESIDENCE='Y'\" );\n\n\tif ( $address_id )\n\t{\n\t\tRegistrationSaveJoinAddress( $address_id );\n\t}\n\n\tRegistrationSaveSiblingContacts( $student_id );\n\n\tRegistrationSaveStudent( $config['student'], $values['student'] );\n\n\treturn true;\n}\n\n/**\n * Save Registration Join Sibling Contacts to Student\n *\n * @param int $student_id Sibling ID.\n */\nfunction RegistrationSaveSiblingContacts( $student_id )\n{\n\t$contacts_RET = DBGet( \"SELECT PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION\n\t\tFROM STUDENTS_JOIN_PEOPLE\n\t\tWHERE STUDENT_ID='\" . $student_id . \"'\" );\n\n\tforeach ( (array) $contacts_RET as $contact )\n\t{\n\t\t$sql_values = db_seq_nextval( 'students_join_people_id_seq' ) . \",'\" . UserStudentID() . \"','\" .\n\t\t\t$contact['PERSON_ID'] . \"','\" . $contact['ADDRESS_ID'] . \"','\" . $contact['CUSTODY'] . \"','\" .\n\t\t\t$contact['EMERGENCY'] . \"','\" . $contact['STUDENT_RELATION'] . \"'\";\n\n\t\tDBQuery( \"INSERT INTO STUDENTS_JOIN_PEOPLE (ID,STUDENT_ID,PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION)\n\t\t\tVALUES(\" . $sql_values . \")\" );\n\t}\n}\n\n/**\n * Save Registration Student Info / Custom Fields.\n * Limit custom fields to the Categories in config.\n *\n * @param array $config Student Info config.\n * @param array $values Student Info values.\n *\n * @return bool\n */\nfunction RegistrationSaveStudent( $config, $values )\n{\n\tif ( ! $config['fields']\n\t\t|| ! $values )\n\t{\n\t\treturn false;\n\t}\n\n\t$category_ids = \"'\" . str_replace( '||', \"','\", mb_substr( $config['fields'], 2, -2 ) ) . \"'\";\n\n\t$custom_fields_RET = DBGet( \"SELECT ID\n\t\tFROM CUSTOM_FIELDS\n\t\tWHERE CATEGORY_ID IN(\" . $category_ids . \")\", [], [ 'ID' ] );\n\n\t$allowed_columns = array_keys( $custom_fields_RET );\n\n\t// Textarea fields MarkDown sanitize.\n\t$values = FilterCustomFieldsMarkdown( 'CUSTOM_FIELDS', 'students' );\n\n\t$sql = \"UPDATE STUDENTS SET \";\n\n\t$go = false;\n\n\tforeach ( (array) $values as $column => $value )\n\t{\n\t\tif ( ! in_array( str_replace( 'CUSTOM_', '', $column ), $allowed_columns ) )\n\t\t{\n\t\t\t// Limit custom fields to the Categories in config.\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( is_array( $value ) )\n\t\t{\n\t\t\t// Select Multiple from Options field type format.\n\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t}\n\n\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\n\t\t$go = true;\n\t}\n\n\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE STUDENT_ID='\" . UserStudentID() . \"'\";\n\n\tif ( $go )\n\t{\n\t\tDBQuery( $sql );\n\t}\n\n\treturn true;\n}\n\n/**\n * Save Registration Address (your/main or contact) & Address Fields if any.\n * And join address to Student.\n *\n * @uses RegistrationSaveJoinAddress()\n *\n * @param array $config Address config or empty.\n * @param array $values Student Info values.\n *\n * @return int Address ID.\n */\nfunction RegistrationSaveAddress( $config, $values )\n{\n\tstatic $inserted_addresses = [];\n\n\tif ( empty( $values['ADDRESS'] ) )\n\t{\n\t\treturn 0;\n\t}\n\n\t$address_key = preg_replace( '/[^0-9A-Za-z]+/', '', mb_strtolower( $values['ADDRESS'] ) );\n\n\tif ( isset( $inserted_addresses[ $address_key ] ) )\n\t{\n\t\treturn $inserted_addresses[ $address_key ];\n\t}\n\n\t$address_id = DBSeqNextID( 'address_address_id_seq' );\n\n\t$sql = \"INSERT INTO ADDRESS \";\n\n\t$fields = 'ADDRESS_ID,ADDRESS,CITY,STATE,ZIPCODE,';\n\n\t$values_sql = \"'\" . $address_id . \"','\" . $values['ADDRESS'] . \"','\" . $values['CITY'] . \"','\" . $values['STATE'] . \"','\" . $values['ZIPCODE'] . \"',\";\n\n\t// Textarea fields MarkDown sanitize.\n\t$values = FilterCustomFieldsMarkdown( 'ADDRESS_FIELDS', 'address' );\n\n\tif ( $config\n\t\t&& ! empty( $values['fields'] ) )\n\t{\n\t\tforeach ( (array) $values['fields'] as $column => $value )\n\t\t{\n\t\t\tif ( is_array( $value ) )\n\t\t\t{\n\t\t\t\t// Select Multiple from Options field type format.\n\t\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t\t}\n\n\t\t\tif ( ! empty( $value )\n\t\t\t\t|| $value == '0' )\n\t\t\t{\n\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t$values_sql .= \"'\" . $value . \"',\";\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\tDBQuery( $sql );\n\n\tRegistrationSaveJoinAddress( $address_id );\n\n\t$inserted_addresses[ $address_key ] = $address_id;\n\n\treturn $address_id;\n}\n\n/**\n * Save Registration Join Address to Student\n * First Address is your/main address: Mailing & Residence checked.\n *\n * @param int $address_id Address ID.\n */\nfunction RegistrationSaveJoinAddress( $address_id )\n{\n\tstatic $inserted_address;\n\n\t// Contact Address.\n\t$students_join_address = [\n\t\t'MAILING' => '',\n\t\t'RESIDENCE' => '',\n\t\t'BUS_PICKUP' => '',\n\t\t'BUS_DROPOFF' => '',\n\t];\n\n\tif ( empty( $inserted_address ) )\n\t{\n\t\t// Your Address.\n\t\t$students_join_address = [\n\t\t\t'MAILING' => 'Y',\n\t\t\t'RESIDENCE' => 'Y',\n\t\t\t'BUS_PICKUP' => ProgramConfig( 'students', 'STUDENTS_USE_BUS' ),\n\t\t\t'BUS_DROPOFF' => ProgramConfig( 'students', 'STUDENTS_USE_BUS' ),\n\t\t];\n\n\t\t$inserted_address = true;\n\t}\n\n\tDBQuery( \"INSERT INTO STUDENTS_JOIN_ADDRESS (ID,STUDENT_ID,ADDRESS_ID,\n\t\tRESIDENCE,MAILING,BUS_PICKUP,BUS_DROPOFF)\n\t\tvalues(\" . db_seq_nextval( 'students_join_address_id_seq' ) . \",'\" .\n\t\t\tUserStudentID() . \"','\" . $address_id . \"','\" .\n\t\t\t$students_join_address['MAILING'] . \"','\" .\n\t\t\t$students_join_address['RESIDENCE'] . \"','\" .\n\t\t\t$students_join_address['BUS_PICKUP'] . \"','\" .\n\t\t\t$students_join_address['BUS_DROPOFF'] . \"')\" );\n}\n\n/**\n * Save Registration Contact (parent, grandparent, etc.)\n *\n * @uses RegistrationSaveContactNameFields()\n * @uses RegistrationSaveContactInfo()\n *\n * @param array $config Parent or contact config.\n * @param array $values Contact values.\n *\n * @return int Contact ID.\n */\nfunction RegistrationSaveContact( $config, $values )\n{\n\t$contact_id = RegistrationSaveContactNameFields( $config, $values );\n\n\tif ( ! $contact_id )\n\t{\n\t\treturn 0;\n\t}\n\n\tRegistrationSaveContactInfo( $contact_id, $config, $values );\n\n\treturn $contact_id;\n}\n\n/**\n * Join Registration Contact to Student (Relation) and Address\n *\n * @param int   $contact_id Contact ID.\n * @param int   $address_id Address ID.\n * @param array $config     Contact config.\n *\n * @return bool.\n */\nfunction RegistrationSaveJoinContact( $contact_id, $address_id, $config )\n{\n\tif ( ! $contact_id )\n\t{\n\t\treturn false;\n\t}\n\n\t$sql_values = db_seq_nextval( 'students_join_people_id_seq' ) . \",'\" . UserStudentID() . \"','\" .\n\t\t$contact_id . \"','\" . $address_id . \"','\" . issetVal( $config['custody'] ) . \"','\" .\n\t\tissetVal( $config['emergency'] ) . \"','\" . $config['relation'] . \"'\";\n\n\tDBQuery( \"INSERT INTO STUDENTS_JOIN_PEOPLE (ID,STUDENT_ID,PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION)\n\t\tVALUES(\" . $sql_values . \")\" );\n\n\treturn true;\n}\n\n/**\n * Save Registration Contact Name and Fields (if any).\n *\n * @param array $config Contact config.\n * @param array $values Contact values.\n *\n * @return int Contact ID.\n */\nfunction RegistrationSaveContactNameFields( $config, $values )\n{\n\tif ( empty( $values['FIRST_NAME'] )\n\t\t|| empty( $values['LAST_NAME'] ) )\n\t{\n\t\treturn 0;\n\t}\n\n\t$person_id = DBSeqNextID( 'people_person_id_seq' );\n\n\t$sql = \"INSERT INTO PEOPLE \";\n\n\t$fields = 'PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,';\n\n\t$values_sql = \"'\" . $person_id . \"','\" . $values['LAST_NAME'] . \"','\" . $values['FIRST_NAME'] . \"','\" . $values['MIDDLE_NAME'] . \"',\";\n\n\tif ( $config\n\t\t&& ! empty( $values['fields'] ) )\n\t{\n\t\tforeach ( (array) $values['fields'] as $column => $value )\n\t\t{\n\t\t\tif ( is_array( $value ) )\n\t\t\t{\n\t\t\t\t// Select Multiple from Options field type format.\n\t\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t\t}\n\n\t\t\tif ( ! empty( $value )\n\t\t\t\t|| $value == '0' )\n\t\t\t{\n\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t$values_sql .= \"'\" . $value . \"',\";\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\tDBQuery( $sql );\n\n\treturn $person_id;\n}\n\n/**\n * Save Registration Contact Information\n *\n * @param int   $contact_id Contact ID.\n * @param array $config     Contact config.\n * @param array $values     Contact values.\n */\nfunction RegistrationSaveContactInfo( $contact_id, $config, $values )\n{\n\tif ( empty( $values['info'] ) )\n\t{\n\t\treturn;\n\t}\n\n\tforeach ( (array) $values['info'] as $column => $value )\n\t{\n\t\tif ( ! empty( $value )\n\t\t\t|| $value == '0' )\n\t\t{\n\t\t\t$sql = \"INSERT INTO PEOPLE_JOIN_CONTACTS \";\n\n\t\t\t$fields = 'ID,PERSON_ID,TITLE,VALUE,';\n\n\t\t\t$values_sql = db_seq_nextval( 'people_join_contacts_id_seq' ) . \",'\" .\n\t\t\t\t$contact_id . \"','\" . $column . \"','\" . $value . \"',\";\n\n\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\t\t\tDBQuery( $sql );\n\t\t}\n\t}\n}\n", "\t<?php\n\nrequire_once 'ProgramFunctions/MarkDownHTML.fnc.php';\nrequire_once 'modules/School_Setup/includes/CalendarDay.inc.php';\n\nDrawHeader( ProgramTitle() );\n\n// Set Month.\nif ( ! isset( $_REQUEST['month'] )\n\t|| mb_strlen( $_REQUEST['month'] ) !== 2\n\t|| (int) $_REQUEST['month'] != $_REQUEST['month'] )\n{\n\t$_REQUEST['month'] = date( 'm' );\n}\n\n// Set Year.\nif ( ! isset( $_REQUEST['year'] )\n\t|| mb_strlen( $_REQUEST['year'] ) !== 4\n\t|| (int) $_REQUEST['year'] != $_REQUEST['year'] )\n{\n\t$_REQUEST['year'] = date( 'Y' );\n}\n\nif ( isset( $_REQUEST['calendar_id'] ) )\n{\n\t$_REQUEST['calendar_id'] = (string) (int) $_REQUEST['calendar_id'];\n}\n\n// Create / Recreate Calendar.\nif ( $_REQUEST['modfunc'] === 'create'\n\t&& AllowEdit() )\n{\n\t$fy_RET = DBGet( \"SELECT START_DATE,END_DATE\n\t\tFROM SCHOOL_MARKING_PERIODS\n\t\tWHERE MP='FY'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\" );\n\n\t$fy = $fy_RET[1];\n\n\t// Get Calendars Info.\n\t$title_RET = DBGet( \"SELECT ac.CALENDAR_ID,ac.TITLE,ac.DEFAULT_CALENDAR,ac.SCHOOL_ID,\n\t\t(SELECT coalesce(SHORT_NAME,TITLE)\n\t\t\tFROM SCHOOLS\n\t\t\tWHERE SYEAR=ac.SYEAR\n\t\t\tAND ID=ac.SCHOOL_ID) AS SCHOOL_TITLE,\n\t\t(SELECT min(SCHOOL_DATE)\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID=ac.CALENDAR_ID) AS START_DATE,\n\t\t(SELECT max(SCHOOL_DATE)\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID=ac.CALENDAR_ID) AS END_DATE\n\t\tFROM ATTENDANCE_CALENDARS ac,STAFF s\n\t\tWHERE ac.SYEAR='\" . UserSyear() . \"'\n\t\tAND s.STAFF_ID='\" . User( 'STAFF_ID' ) . \"'\n\t\tAND (s.SCHOOLS IS NULL OR position(','||ac.SCHOOL_ID||',' IN s.SCHOOLS)>0)\n\t\tORDER BY \" . db_case( [ 'ac.SCHOOL_ID', \"'\" . UserSchool() . \"'\", 0, 'ac.SCHOOL_ID' ] ) . \",ac.DEFAULT_CALENDAR ASC,ac.TITLE\" );\n\n\t// Prepare table for Copy Calendar & add ' (Default)' mention.\n\t$copy_calendar_options = [];\n\n\t$recreate_calendar = false;\n\n\tforeach ( (array) $title_RET as $title )\n\t{\n\t\t$copy_calendar_options[ $title['CALENDAR_ID'] ] = $title['TITLE'];\n\n\t\tif ( AllowEdit()\n\t\t\t&& $title['DEFAULT_CALENDAR'] === 'Y'\n\t\t\t&& $title['SCHOOL_ID'] === UserSchool() )\n\t\t{\n\t\t\t$copy_calendar_options[ $title['CALENDAR_ID'] ] .= ' (' . _( 'Default' ) . ')';\n\t\t}\n\n\t\tif ( AllowEdit()\n\t\t\t&& isset( $_REQUEST['calendar_id'] )\n\t\t\t&& $title['CALENDAR_ID'] == $_REQUEST['calendar_id'] )\n\t\t{\n\t\t\t$recreate_calendar = $title;\n\t\t}\n\t}\n\n\t$div = false;\n\n\t$message = '<table class=\"valign-top fixed-col\"><tr class=\"st\">';\n\n\t// Title.\n\t$message .= '<td>' . TextInput(\n\t\t( $recreate_calendar ? $recreate_calendar['TITLE'] : '' ),\n\t\t'title',\n\t\t_( 'Title' ),\n\t\t'required maxlength=\"100\"',\n\t\t$div\n\t) . '</td>';\n\n\t// Copy calendar.\n\t$message .= '<td>' . SelectInput(\n\t\t'',\n\t\t'copy_id',\n\t\t_( 'Copy Calendar' ),\n\t\t$copy_calendar_options,\n\t\t'N/A',\n\t\t'',\n\t\t$div\n\t) . '</td></tr>';\n\n\t// Default.\n\t$message .= '<tr><td colspan=\"2\">' . CheckboxInput(\n\t\t$recreate_calendar && $recreate_calendar['DEFAULT_CALENDAR'] == 'Y',\n\t\t'default',\n\t\t_( 'Default Calendar for this School' ),\n\t\t'',\n\t\ttrue\n\t) . '</td></tr>';\n\n\t$message .= '<tr><td colspan=\"2\"><hr /></td></tr>';\n\n\t// From date.\n\t$message .= '<tr class=\"st\"><td>' . DateInput(\n\t\t$recreate_calendar && $recreate_calendar['START_DATE'] ?\n\t\t\t$recreate_calendar['START_DATE'] :\n\t\t\t$fy['START_DATE'],\n\t\t'min',\n\t\t_( 'From' ),\n\t\t$div,\n\t\ttrue,\n\t\t!( $recreate_calendar && $recreate_calendar['START_DATE'] )\n\t) . '</td>';\n\n\t// To date.\n\t$message .= '<td>' . DateInput(\n\t\t$recreate_calendar && $recreate_calendar['END_DATE'] ?\n\t\t\t$recreate_calendar['END_DATE'] :\n\t\t\t$fy['END_DATE'],\n\t\t'max',\n\t\t_( 'To' ),\n\t\t$div,\n\t\ttrue,\n\t\t!( $recreate_calendar && $recreate_calendar['END_DATE'] )\n\t) . '</td></tr>';\n\n\t$message .= '<tr class=\"st\"><td colspan=\"2\"><table class=\"valign-top cellpadding-5\"><tr><td>';\n\n\t// Weekdays.\n\t$weekdays = [\n\t\t_( 'Sunday' ),\n\t\t_( 'Monday' ),\n\t\t_( 'Tuesday' ),\n\t\t_( 'Wednesday' ),\n\t\t_( 'Thursday' ),\n\t\t_( 'Friday' ),\n\t\t_( 'Saturday' ),\n\t];\n\n\t$weekdays_inputs = [];\n\n\tforeach ( (array) $weekdays as $id => $weekday )\n\t{\n\t\t$value = 'Y';\n\n\t\t// Unckeck Saturday & Sunday.\n\t\tif ( $id === 0\n\t\t\t|| $id === 6 )\n\t\t{\n\t\t\t$value = '';\n\t\t}\n\n\t\t$weekdays_inputs[] .= CheckboxInput(\n\t\t\t$value,\n\t\t\t'weekdays[' . $id . ']',\n\t\t\t$weekday,\n\t\t\t'',\n\t\t\ttrue\n\t\t);\n\t}\n\n\t$message .= implode( '</td><td>', $weekdays_inputs );\n\n\t$message .= '</td></tr></table></td></tr>';\n\n\t// Minutes.\n\t$minutes_tip_text = ( $recreate_calendar ?\n\t\t_( 'Default is Full Day if Copy Calendar is N/A.' ) . ' ' . _( 'Otherwise Default is minutes from the Copy Calendar' ) :\n\t\t_( 'Default is Full Day' )\n\t);\n\n\t$message .= '<tr class=\"st valign-top\"><td colspan=\"2\">' . TextInput(\n\t\t'',\n\t\t'minutes',\n\t\t_( 'Minutes' ) .\n\t\t\t'<div class=\"tooltip\"><i>' . $minutes_tip_text . '</i></div>',\n\t\t' type=\"number\" min=\"1\" max=\"998\"',\n\t\t$div\n\t) . '</td></tr></table>';\n\n\t$OK = Prompt(\n\t\t! empty( $_REQUEST['calendar_id'] ) ?\n\t\tsprintf( _( 'Recreate %s calendar' ), $recreate_calendar['TITLE'] ) :\n\t\t_( 'Create new calendar' ),\n\t\t'',\n\t\t$message\n\t);\n\n\t// If Confirm Create / Recreate\n\tif ( $OK )\n\t{\n\t\t// Set Calendar ID\n\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t{\n\t\t\t$calendar_id = $_REQUEST['calendar_id'];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$calendar_id = DBSeqNextID( 'attendance_calendars_calendar_id_seq' );\n\t\t}\n\n\t\tif ( ! empty( $_REQUEST['default'] ) )\n\t\t{\n\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDARS\n\t\t\t\tSET DEFAULT_CALENDAR=NULL\n\t\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\t\t}\n\n\t\t// Recreate\n\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t{\n\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDARS\n\t\t\t\tSET TITLE='\" . $_REQUEST['title'] . \"',DEFAULT_CALENDAR='\" . $_REQUEST['default'] . \"'\n\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t}\n\t\t// Create\n\t\telse\n\t\t{\n\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDARS\n\t\t\t\t(CALENDAR_ID,SYEAR,SCHOOL_ID,TITLE,DEFAULT_CALENDAR)\n\t\t\t\tvalues('\" . $calendar_id . \"','\" . UserSyear() . \"','\" . UserSchool() . \"','\" . $_REQUEST['title'] . \"','\" . $_REQUEST['default'] . \"')\" );\n\t\t}\n\n\t\t//FJ fix bug MINUTES not numeric\n\t\t$minutes = '999';\n\n\t\tif ( isset( $_REQUEST['minutes'] )\n\t\t\t&& intval( $_REQUEST['minutes'] ) > 0 )\n\t\t{\n\t\t\t$minutes = intval( $_REQUEST['minutes'] );\n\t\t}\n\n\t\t// Copy Calendar\n\t\tif ( ! empty( $_REQUEST['copy_id'] ) )\n\t\t{\n\t\t\t$weekdays_list = [];\n\n\t\t\t// FJ remove empty weekdays.\n\t\t\tforeach ( (array) $_REQUEST['weekdays'] as $weekday_id => $yes )\n\t\t\t{\n\t\t\t\tif ( $yes )\n\t\t\t\t{\n\t\t\t\t\t$weekdays_list[] = $weekday_id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$weekdays_list = $weekdays_list ?\n\t\t\t\t\"'\" . implode( \"','\", $weekdays_list ) . \"'\" : '';\n\n\t\t\t$date_min = RequestedDate( 'min', '' );\n\n\t\t\t$date_max = RequestedDate( 'max', '' );\n\n\t\t\tif ( $_REQUEST['calendar_id']\n\t\t\t\t&& $_REQUEST['calendar_id'] === $_REQUEST['copy_id'] )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\n\t\t\t\t\tAND (SCHOOL_DATE NOT BETWEEN '\" . $date_min . \"' AND '\" . $date_max . \"'\" .\n\t\t\t\t\t( $weekdays_list ?\n\t\t\t\t\t\t\" OR extract(DOW FROM SCHOOL_DATE) NOT IN (\" . $weekdays_list . \")\" : '' ) .\n\t\t\t\t\t\")\" );\n\n\t\t\t\tif ( $minutes != '999' )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='\" . $minutes . \"'\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t\t}\n\n\t\t\t\t// Insert Days.\n\t\t\t\t$create_calendar_sql = \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,MINUTES,CALENDAR_ID)\n\t\t\t\t\t(SELECT '\" . UserSyear() . \"','\" . UserSchool() . \"',SCHOOL_DATE,\" . $minutes . \",'\" . $calendar_id . \"'\n\t\t\t\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['copy_id'] . \"'\" .\n\t\t\t\t\t\t( $weekdays_list ?\n\t\t\t\t\t\t\t\" AND extract(DOW FROM SCHOOL_DATE) IN (\" . $weekdays_list . \")\" : '' );\n\n\t\t\t\tif ( $date_min && $date_max )\n\t\t\t\t{\n\t\t\t\t\t$create_calendar_sql .= \" AND SCHOOL_DATE\n\t\t\t\t\t\tBETWEEN '\" . $date_min . \"'\n\t\t\t\t\t\tAND '\" . $date_max . \"'\";\n\t\t\t\t}\n\n\t\t\t\t$create_calendar_sql .= \")\";\n\n\t\t\t\tDBQuery( $create_calendar_sql );\n\t\t\t}\n\t\t}\n\t\t// Create Calendar\n\t\telse\n\t\t{\n\t\t\t$begin = mktime(0,0,0,$_REQUEST['month_min'],$_REQUEST['day_min']*1,$_REQUEST['year_min']) + 43200;\n\n\t\t\t$end = mktime(0,0,0,$_REQUEST['month_max'],$_REQUEST['day_max']*1,$_REQUEST['year_max']) + 43200;\n\n\t\t\t$weekday = date( 'w', $begin );\n\n\t\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t}\n\n\t\t\t$sql_calendar_days = '';\n\n\t\t\t// Insert Days.\n\t\t\tfor ( $i = $begin; $i <= $end; $i += 86400 )\n\t\t\t{\n\t\t\t\tif ( $_REQUEST['weekdays'][ $weekday ] == 'Y' )\n\t\t\t\t{\n\t\t\t\t\t$sql_calendar_days .= \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,MINUTES,CALENDAR_ID)\n\t\t\t\t\t\tVALUES('\" . UserSyear() . \"','\" . UserSchool() . \"','\" . date( 'Y-m-d', $i ) . \"',\" . $minutes . \",'\" . $calendar_id . \"');\";\n\t\t\t\t}\n\n\t\t\t\t$weekday++;\n\n\t\t\t\tif ( $weekday == 7 )\n\t\t\t\t\t$weekday = 0;\n\t\t\t}\n\n\t\t\tif ( $sql_calendar_days )\n\t\t\t{\n\t\t\t\tDBQuery( $sql_calendar_days );\n\t\t\t}\n\t\t}\n\n\t\t// Set Current Calendar\n\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\n\t\t// Unset modfunc & weekdays & title & minutes & copy ID & redirect URL.\n\t\tRedirectURL( [ 'modfunc', 'weekdays', 'title', 'minutes', 'copy_id' ] );\n\t}\n}\n\n// Delete Calendar\nif ( $_REQUEST['modfunc'] === 'delete_calendar'\n\t&& AllowEdit() )\n{\n\tif ( DeletePrompt( _( 'Calendar' ) ) )\n\t{\n\t\t$delete_sql = \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"';\";\n\n\t\t$delete_sql .= \"DELETE FROM ATTENDANCE_CALENDARS\n\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"';\";\n\n\t\tDBQuery( $delete_sql );\n\n\t\t$default_RET = DBGet( \"SELECT CALENDAR_ID\n\t\t\tFROM ATTENDANCE_CALENDARS\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND DEFAULT_CALENDAR='Y'\" );\n\n\t\t// Unset modfunc & calendar ID & redirect URL.\n\t\tRedirectURL( [ 'modfunc', 'calendar_id' ] );\n\t}\n}\n\n// Set non admin Current Calendar.\nif ( User( 'PROFILE' ) !== 'admin'\n\t&& UserCoursePeriod() )\n{\n\t$calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\tFROM COURSE_PERIODS\n\t\tWHERE COURSE_PERIOD_ID='\" . UserCoursePeriod() . \"'\" );\n\n\tif ( $calendar_id )\n\t{\n\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\t}\n}\n\n// Set Current Calendar.\nif ( ! isset( $_REQUEST['calendar_id'] )\n\t|| intval( $_REQUEST['calendar_id'] ) < 1 )\n{\n\t$default_calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\tFROM ATTENDANCE_CALENDARS\n\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND DEFAULT_CALENDAR='Y'\" );\n\n\tif ( $default_calendar_id )\n\t{\n\t\t$_REQUEST['calendar_id'] = $default_calendar_id;\n\t}\n\telse\n\t{\n\t\t$calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\t\tFROM ATTENDANCE_CALENDARS\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( $calendar_id )\n\t\t{\n\t\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\t\t}\n\t\telse\n\t\t\t$no_calendars_error[] = _( 'There are no calendars setup yet.' );\n\t}\n}\n\nunset( $_SESSION['_REQUEST_vars']['calendar_id'] );\n\n// Event / Assignment details\nif ( $_REQUEST['modfunc'] === 'detail' )\n{\n\tif ( isset( $_POST['button'] )\n\t\t&& $_POST['button'] === _( 'Save' )\n\t\t&& AllowEdit() )\n\t{\n\t\t// Add eventual Dates to $_REQUEST['values'].\n\t\tAddRequestedDates( 'values' );\n\n\t\tif ( ! empty( $_REQUEST['values'] ) )\n\t\t{\n\t\t\t// FJ textarea fields MarkDown sanitize.\n\t\t\tif ( ! empty( $_REQUEST['values']['DESCRIPTION'] ) )\n\t\t\t{\n\t\t\t\t$_REQUEST['values']['DESCRIPTION'] = SanitizeMarkDown( $_POST['values']['DESCRIPTION'] );\n\t\t\t}\n\n\t\t\t// Update Event.\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\t$sql = \"UPDATE CALENDAR_EVENTS SET \";\n\n\t\t\t\tforeach ( (array) $_REQUEST['values'] as $column => $value )\n\t\t\t\t{\n\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t}\n\n\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $_REQUEST['event_id'] . \"'\";\n\n\t\t\t\tDBQuery( $sql );\n\n\t\t\t\t// Hook.\n\t\t\t\tdo_action('School_Setup/Calendar.php|update_calendar_event');\n\t\t\t}\n\t\t\t// Create Event.\n\t\t\telse\n\t\t\t{\n\t\t\t\t// FJ add event repeat.\n\t\t\t\t$i = 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tif ( $i > 0 ) // School date + 1 day.\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['values']['SCHOOL_DATE'] = date(\n\t\t\t\t\t\t\t'd-M-Y',\n\t\t\t\t\t\t\tmktime( 0, 0, 0,\n\t\t\t\t\t\t\t\t$_REQUEST['month_values']['SCHOOL_DATE'],\n \t\t\t\t\t\t\t\t$_REQUEST['day_values']['SCHOOL_DATE'] + $i,\n\t\t\t\t\t\t\t\t$_REQUEST['year_values']['SCHOOL_DATE']\n\t\t\t\t\t\t\t)\n \t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = \"INSERT INTO CALENDAR_EVENTS \";\n\n\t\t\t\t\t$fields = 'ID,SYEAR,SCHOOL_ID,';\n\n\t\t\t\t\t$calendar_event_id = DBSeqNextID( 'calendar_events_id_seq' );\n\n\t\t\t\t\t$values = $calendar_event_id . \",'\" . UserSyear() . \"','\" . UserSchool() . \"',\";\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $_REQUEST['values'] as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\n\t\t\t\t\tif ( $go )\n\t\t\t\t\t{\n\t\t\t\t\t\tDBQuery( $sql );\n\n\t\t\t\t\t\t// Hook.\n\t\t\t\t\t\tdo_action( 'School_Setup/Calendar.php|create_calendar_event' );\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\n\t\t\t\t} while( is_numeric( $_REQUEST['REPEAT'] )\n\t\t\t\t\t&& $i <= $_REQUEST['REPEAT'] );\n\t\t\t}\n\n\t\t\t// Reload Calendar & close popup\n\t\t\t$opener_URL = \"Modules.php?modname=\" . $_REQUEST['modname'] . \"&year=\" . $_REQUEST['year'] . \"&month=\" . $_REQUEST['month'];\n\t\t\t?>\n<script>\n\twindow.opener.ajaxLink(<?php echo json_encode( $opener_URL ); ?>);\n\twindow.close();\n</script>\n\t\t\t<?php\n\t\t}\n\t}\n\t// Delete Event\n\telseif ( isset( $_REQUEST['button'] )\n\t\t&& $_REQUEST['button'] == _( 'Delete' )\n\t\t&& ! isset( $_REQUEST['delete_cancel'] )\n\t\t&& AllowEdit() )\n\t{\n\t\tif ( DeletePrompt( _( 'Event' ), 'Delete', false ) )\n\t\t{\n\t\t\tDBQuery( \"DELETE FROM CALENDAR_EVENTS\n\t\t\t\tWHERE ID='\" . $_REQUEST['event_id'] . \"'\" );\n\n\t\t\t//hook\n\t\t\tdo_action( 'School_Setup/Calendar.php|delete_calendar_event' );\n\n\t\t\t// Reload Calendar & close popup\n\t\t\t$opener_URL = \"Modules.php?modname=\" . $_REQUEST['modname'] . \"&year=\" . $_REQUEST['year'] . \"&month=\" . $_REQUEST['month'];\n\t\t\t?>\n<script>\n\twindow.opener.ajaxLink(<?php echo json_encode( $opener_URL ); ?>);\n\twindow.close();\n</script>\n\t\t\t<?php\n\t\t}\n\t}\n\t// Display Event / Assignment\n\telse\n\t{\n\t\t// Event\n\t\tif ( ! empty( $_REQUEST['event_id'] ) )\n\t\t{\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\t$RET = DBGet( \"SELECT TITLE,DESCRIPTION,SCHOOL_DATE\n\t\t\t\t\tFROM CALENDAR_EVENTS\n\t\t\t\t\tWHERE ID='\" . $_REQUEST['event_id'] . \"'\" );\n\n\t\t\t\t$title = $RET[1]['TITLE'];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//FJ add translation\n\t\t\t\t$title = _( 'New Event' );\n\n\t\t\t\t$RET[1]['SCHOOL_DATE'] = issetVal( $_REQUEST['school_date'] );\n\t\t\t}\n\n\t\t\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=detail&event_id=' . $_REQUEST['event_id'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year']  ) . '\" method=\"POST\">';\n\t\t}\n\t\t// Assignment\n\t\telseif ( ! empty( $_REQUEST['assignment_id'] ) )\n\t\t{\n\t\t\t//FJ add assigned date\n\t\t\t$RET = DBGet( \"SELECT a.TITLE,a.STAFF_ID,a.DUE_DATE AS SCHOOL_DATE,\n\t\t\t\ta.DESCRIPTION,a.ASSIGNED_DATE,c.TITLE AS COURSE,a.SUBMISSION\n\t\t\t\tFROM GRADEBOOK_ASSIGNMENTS a,COURSES c\n\t\t\t\tWHERE (a.COURSE_ID=c.COURSE_ID\n\t\t\t\t\tOR c.COURSE_ID=(SELECT cp.COURSE_ID\n\t\t\t\t\t\tFROM COURSE_PERIODS cp\n\t\t\t\t\t\tWHERE cp.COURSE_PERIOD_ID=a.COURSE_PERIOD_ID))\n\t\t\t\tAND a.ASSIGNMENT_ID='\" . $_REQUEST['assignment_id'] . \"'\" );\n\n\t\t\t$title = $RET[1]['TITLE'];\n\n\t\t\t$RET[1]['STAFF_ID'] = GetTeacher( $RET[1]['STAFF_ID'] );\n\t\t}\n\n\t\techo '<br />';\n\n\t\tPopTable( 'header', $title );\n\n\t\techo '<table class=\"cellpadding-5\"><tr><td>'  . DateInput(\n\t\t\t$RET[1]['SCHOOL_DATE'],\n\t\t\t'values[SCHOOL_DATE]',\n\t\t\t( empty( $_REQUEST['assignment_id'] ) ? _( 'Date' ) : _( 'Due Date' ) ),\n\t\t\tfalse\n\t\t) . '</td></tr>';\n\n\t\t// Add assigned date.\n\t\tif ( ! empty( $RET[1]['ASSIGNED_DATE'] ) )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tDateInput( $RET[1]['ASSIGNED_DATE'], 'values[ASSIGNED_DATE]', _( 'Assigned Date' ), false ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\t// Add submit Assignment link.\n\t\tif ( ! empty( $RET[1]['SUBMISSION'] )\n\t\t\t&& AllowUse( 'Grades/StudentAssignments.php' ) )\n\t\t{\n\t\t\techo '<tr><td>\n\t\t\t\t<a href=\"' . URLEscape( 'Modules.php?modname=Grades/StudentAssignments.php&assignment_id=' .\n\t\t\t\t\t$_REQUEST['assignment_id'] ) . '\" onclick=\"window.opener.ajaxLink(this.href); window.close();\">' .\n\t\t\t\t_( 'Submit Assignment' ) .\n\t\t\t'</a></td></tr>';\n\t\t}\n\n\t\t// FJ add event repeat.\n\t\tif ( ! empty( $_REQUEST['event_id'] )\n\t\t\t&& $_REQUEST['event_id'] === 'new' )\n\t\t{\n\t\t\techo '<tr><td>\n\t\t\t\t<input name=\"REPEAT\" id=\"REPEAT\" value=\"0\" maxlength=\"3\" size=\"1\" type=\"number\" min=\"0\" />&nbsp;' . _( 'Days' ) .\n\t\t\t\tFormatInputTitle( _( 'Event Repeat' ), 'REPEAT' ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\t// Hook.\n\t\tdo_action( 'School_Setup/Calendar.php|event_field' );\n\n\n\t\t// FJ bugfix SQL bug value too long for type character varying(50).\n\t\techo '<tr><td>' .\n\t\t\tTextInput(\n\t\t\t\tissetVal( $RET[1]['TITLE'], '' ),\n\t\t\t\t'values[TITLE]',\n\t\t\t\t_( 'Title' ),\n\t\t\t\t'required size=\"20\" maxlength=\"50\"'\n\t\t\t) .\n\t\t'</td></tr>';\n\n\t\tif ( ! empty( $RET[1]['COURSE'] ) )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tNoInput( $RET[1]['COURSE'], _( 'Course' ) ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\tif ( ! empty( $RET[1]['STAFF_ID'] )\n\t\t\t&& User( 'PROFILE' ) !== 'teacher' )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tTextInput( $RET[1]['STAFF_ID'], 'values[STAFF_ID]', _( 'Teacher' ) ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\techo '<tr><td>' .\n\t\t\tTextAreaInput( issetVal( $RET[1]['DESCRIPTION'], '' ), 'values[DESCRIPTION]', _( 'Notes' ) ) .\n\t\t'</td></tr>';\n\n\t\tif ( AllowEdit() )\n\t\t{\n\t\t\techo '<tr><td colspan=\"2\">' . SubmitButton( _( 'Save' ), 'button' );\n\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\techo SubmitButton( _( 'Delete' ), 'button', '' );\n\t\t\t}\n\n\t\t\techo '</td></tr>';\n\t\t}\n\n\t\techo '</table>';\n\n\t\tPopTable( 'footer' );\n\n\t\tif ( ! empty( $_REQUEST['event_id'] ) )\n\t\t\techo '</form>';\n\t}\n\n\t// Unset button & values & redirect URL.\n\tRedirectURL( [ 'button', 'values' ] );\n}\n\n// List Events\nif ( $_REQUEST['modfunc'] === 'list_events' )\n{\n\t$start_date = RequestedDate( 'start', '' );\n\n\tif ( ! $start_date )\n\t{\n\t\t$min_date = DBGet( \"SELECT min(SCHOOL_DATE) AS MIN_DATE\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( isset( $min_date[1]['MIN_DATE'] ) )\n\t\t{\n\t\t\t$start_date = $min_date[1]['MIN_DATE'];\n\t\t}\n\t\telse\n\t\t\t$start_date = date( 'Y-m' ) . '-01';\n\t}\n\n\t$end_date = RequestedDate( 'end', '' );\n\n\tif ( ! $end_date )\n\t{\n\t\t$max_date = DBGet( \"SELECT max(SCHOOL_DATE) AS MAX_DATE\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( isset( $max_date[1]['MAX_DATE'] ) )\n\t\t{\n\t\t\t$end_date = $max_date[1]['MAX_DATE'];\n\t\t}\n\t\telse\n\t\t\t$end_date = DBDate();\n\t}\n\n\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year']  ) . '\" method=\"POST\">';\n\n\tDrawHeader( '<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year'] ) . '\" >' . _( 'Back to Calendar' ) . '</a>' );\n\n\tDrawHeader(\n\t\t_( 'Timeframe' ) . ': ' .\n\t\tPrepareDate( $start_date, '_start', false ) . ' ' .\n\t\t_( 'to' ) . ' ' . PrepareDate( $end_date, '_end', false ) . ' ' .\n\t\tButtons( _( 'Go' ) )\n\t);\n\n\n\t$functions = [ 'SCHOOL_DATE' => 'ProperDate', 'DESCRIPTION' => 'makeTextarea' ];\n\n\t$events_RET = DBGet( \"SELECT ID,SCHOOL_DATE,TITLE,DESCRIPTION\n\t\tFROM CALENDAR_EVENTS\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $start_date . \"' AND '\" . $end_date . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\", $functions );\n\n\t$column_names = [\n\t\t'SCHOOL_DATE' => _( 'Date' ),\n\t\t'TITLE' => _('Event'),\n\t\t'DESCRIPTION' => _( 'Description' )\n\t];\n\n\tListOutput( $events_RET, $column_names, 'Event', 'Events');\n\n\techo '</form>';\n}\n\n// Display Calendar View.\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$last = 31;\n\n\twhile( ! checkdate( (int) $_REQUEST['month'], $last, (int) $_REQUEST['year'] ) )\n\t{\n\t\t$last--;\n\t}\n\n\t$first_day_month = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-01';\n\n\t$last_day_month = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-' . $last;\n\n\t$calendar_SQL = \"SELECT SCHOOL_DATE,MINUTES,BLOCK\n\t\tFROM ATTENDANCE_CALENDAR\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $first_day_month . \"'\n\t\tAND '\" . $last_day_month . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\";\n\n\t$calendar_RET = DBGet( $calendar_SQL, [], [ 'SCHOOL_DATE' ] );\n\n\t$update_calendar = false;\n\n\t// Update School Day minutes\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['minutes'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['minutes'] as $date => $minutes )\n\t\t{\n\t\t\t// Fix SQL error when all-day checked & minutes.\n\t\t\tif ( ! empty( $_REQUEST['all_day'][ $date ] ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t{\n\t\t\t\t//if ( $minutes!='0' && $minutes!='')\n\t\t\t\t//FJ fix bug MINUTES not numeric\n\t\t\t\tif ( intval( $minutes ) > 0 )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='\" . intval( $minutes ) . \"'\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t\t//elseif ( $minutes!='0' && $minutes!='')\n\t\t\t//FJ fix bug MINUTES not numeric\n\t\t\telseif ( intval( $minutes ) > 0 )\n\t\t\t{\n\t\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,CALENDAR_ID,MINUTES)\n\t\t\t\t\tvalues('\" . UserSyear() . \"','\" . UserSchool() . \"','\" . $date . \"','\" . $_REQUEST['calendar_id'] . \"','\" . intval( $minutes ) . \"')\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset minutes & redirect URL.\n\t\tRedirectURL( 'minutes' );\n\t}\n\n\t// Update All day school.\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['all_day'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['all_day'] as $date => $yes )\n\t\t{\n\t\t\tif ( $yes === 'Y' )\n\t\t\t{\n\t\t\t\tif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='999'\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,CALENDAR_ID,MINUTES)\n\t\t\t\t\t\tSELECT '\" . UserSyear() . \"','\" . UserSchool().\"','\" . $date . \"','\" . $_REQUEST['calendar_id'] . \"','999'\n\t\t\t\t\t\tWHERE NOT EXISTS(SELECT 1\n\t\t\t\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"')\" );\n\t\t\t\t}\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t\telseif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset all day & redirect URL.\n\t\tRedirectURL( 'all_day' );\n\t}\n\n\t// Update Blocks.\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['blocks'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['blocks'] as $date => $block )\n\t\t{\n\t\t\tif ( $calendar_RET[ $date ] )\n\t\t\t{\n\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\tSET BLOCK='\" . $block . \"'\n\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset blocks & redirect URL.\n\t\tRedirectURL( 'blocks' );\n\t}\n\n\t// Update Calendar RET\n\tif ( $update_calendar )\n\t{\n\t\t$calendar_RET = DBGet( $calendar_SQL, [], [ 'SCHOOL_DATE' ] );\n\t}\n\n\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname']  ) . '\" method=\"POST\">';\n\n\t// Admin Headers\n\tif ( AllowEdit() )\n\t{\n\t\t$title_RET = DBGet( \"SELECT CALENDAR_ID,TITLE,DEFAULT_CALENDAR\n\t\t\tFROM ATTENDANCE_CALENDARS WHERE SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tORDER BY DEFAULT_CALENDAR ASC,TITLE\" );\n\n\t\t$defaults = 0;\n\n\t\tforeach ( (array) $title_RET as $title )\n\t\t{\n\t\t\t$options[ $title['CALENDAR_ID'] ] = $title['TITLE'] .\n\t\t\t\t( $title['DEFAULT_CALENDAR'] === 'Y' ? ' (' . _( 'Default' ) . ')' : '' );\n\n\t\t\tif ( $title['DEFAULT_CALENDAR'] === 'Y' )\n\t\t\t{\n\t\t\t\t$defaults++;\n\t\t\t}\n\t\t}\n\n\t\t//FJ bugfix erase calendar onchange\n\t\t$calendar_onchange_URL = \"'Modules.php?modname=\" . $_REQUEST['modname'] . \"&calendar_id='\";\n\n\t\t$links = SelectInput(\n\t\t\t$_REQUEST['calendar_id'],\n\t\t\t'calendar_id',\n\t\t\t'<span class=\"a11y-hidden\">' . _( 'Calendar' ) . '</span>',\n\t\t\t$options,\n\t\t\tfalse,\n\t\t\t' onchange=\"ajaxLink(' . $calendar_onchange_URL . ' + document.getElementById(\\'calendar_id\\').value);\" ',\n\t\t\tfalse\n\t\t) .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=create' ) . '\" class=\"nobr\">' .\n\t\t\tbutton( 'add' ) . _( 'Create new calendar' ) .\n\t\t'</a> | ' .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=create&calendar_id=' . $_REQUEST['calendar_id'] ) . '\" class=\"nobr\">' .\n\t\t\t_( 'Recreate this calendar' ) .\n\t\t'</a>&nbsp; ' .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=delete_calendar&calendar_id=' . $_REQUEST['calendar_id'] ) . '\" class=\"nobr\">' .\n\t\t\tbutton( 'remove' ) . _( 'Delete this calendar' ) .\n\t\t'</a>';\n\t}\n\n\t$list_events_URL = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=list_events&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year'];\n\n\tDrawHeader(\n\t\tPrepareDate( mb_strtoupper( $first_day_month ), '', false, [ 'M' => 1, 'Y' => 1, 'submit' => true ] ) .\n\t\t' <a href=\"' . URLEscape( $list_events_URL ) . '\">' .\n\t\t\t_( 'List Events' ) .\n\t\t'</a>',\n\t\tSubmitButton()\n\t);\n\n\tif ( ! empty( $links ) )\n\t{\n\t\tDrawHeader( $links );\n\t}\n\n\t// @since 4.5 Calendars header hook.\n\tdo_action( 'School_Setup/Calendar.php|header' );\n\n\tif ( AllowEdit()\n\t\t&& $defaults != 1 )\n\t{\n\t\techo ErrorMessage(\n\t\t\t[ $defaults ?\n\t\t\t\t_( 'This school has more than one default calendar!' ) :\n\t\t\t\t_( 'This school does not have a default calendar!' )\n\t\t\t]\n\t\t);\n\t}\n\n\tif ( isset( $no_calendars_error ) )\n\t{\n\t\t// No calendars, die.\n\t\techo ErrorMessage( $no_calendars_error, 'fatal' );\n\t}\n\n\techo '<br />';\n\n\t// Get Events\n\t$events_RET = DBGet( \"SELECT ID,SCHOOL_DATE,TITLE,DESCRIPTION\n\t\tFROM CALENDAR_EVENTS\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $first_day_month . \"'\n\t\tAND '\" . $last_day_month . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\", [], [ 'SCHOOL_DATE' ] );\n\n\t// Get Assignments\n\t$assignments_RET = null;\n\n\tif ( User( 'PROFILE' ) === 'parent'\n\t\t|| User( 'PROFILE' ) === 'student' )\n\t{\n\t\t$assignments_SQL = \"SELECT ASSIGNMENT_ID AS ID,a.DUE_DATE AS SCHOOL_DATE,a.TITLE,'Y' AS ASSIGNED\n\t\t\tFROM GRADEBOOK_ASSIGNMENTS a,SCHEDULE s\n\t\t\tWHERE (a.COURSE_PERIOD_ID=s.COURSE_PERIOD_ID OR a.COURSE_ID=s.COURSE_ID)\n\t\t\tAND s.STUDENT_ID='\" . UserStudentID() . \"'\n\t\t\tAND (a.DUE_DATE BETWEEN s.START_DATE AND s.END_DATE OR s.END_DATE IS NULL)\n\t\t\tAND (a.ASSIGNED_DATE<=CURRENT_DATE OR a.ASSIGNED_DATE IS NULL)\n\t\t\tAND a.DUE_DATE BETWEEN '\" . $first_day_month . \"' AND '\" . $last_day_month . \"'\";\n\t}\n\telseif ( User( 'PROFILE' ) === 'teacher' )\n\t{\n\t\t$assignments_SQL = \"SELECT ASSIGNMENT_ID AS ID,a.DUE_DATE AS SCHOOL_DATE,a.TITLE,\n\t\t\t\tCASE WHEN a.ASSIGNED_DATE<=CURRENT_DATE OR a.ASSIGNED_DATE IS NULL THEN 'Y' ELSE NULL END AS ASSIGNED\n\t\t\tFROM GRADEBOOK_ASSIGNMENTS a\n\t\t\tWHERE a.STAFF_ID='\" . User( 'STAFF_ID' ) . \"'\n\t\t\tAND a.DUE_DATE BETWEEN '\" . $first_day_month . \"' AND '\" . $last_day_month . \"'\";\n\t}\n\n\tif ( isset( $assignments_SQL ) )\n\t{\n\t\t$assignments_RET = DBGet( $assignments_SQL, [], [ 'SCHOOL_DATE' ] );\n\t}\n\n\t// Calendar Events onclick popup\n\t$popup_URL = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=detail&year=' . $_REQUEST['year'] . '&month=' . $_REQUEST['month'];\n?>\n<script>\n\tvar popupURL = <?php echo json_encode( $popup_URL ); ?>;\n\n\tfunction CalEventPopup(url) {\n\t\tpopups.open( url, \"scrollbars=yes,resizable=yes,width=500,height=400\" );\n\t}\n</script>\n<?php\n\n\tif ( isset( $_REQUEST['_ROSARIO_PDF'] ) )\n\t{\n\t\t// Landscape PDF.\n\t\t$_SESSION['orientation'] = 'landscape';\n\t}\n\n\t// Calendar Header\n\techo '<table id=\"calendar\" class=\"width-100p valign-top\">\n\t\t<thead><tr class=\"center\">';\n\n\techo '<th>' . _( 'Sunday' ) . '</th>' .\n\t\t'<th>' . _( 'Monday' ) . '</th>' .\n\t\t'<th>' . _( 'Tuesday' ) . '</th>' .\n\t\t'<th>' . _( 'Wednesday' ) . '</th>' .\n\t\t'<th>' . _( 'Thursday' ) . '</th>' .\n\t\t'<th>' . _( 'Friday' ) . '</th>' .\n\t\t'<th>' . _( 'Saturday' ) . '</th>';\n\n\techo '</tr></thead><tbody><tr>';\n\n\t$return_counter = 0;\n\n\t// Skip until first Day of Month.\n\t$skip = date( \"w\", strtotime( $first_day_month ) );\n\n\tif ( $skip )\n\t{\n\t\techo '<td colspan=\"' . $skip . '\" class=\"calendar-skip\">&nbsp;</td>';\n\n\t\t$return_counter = $skip;\n\t}\n\n\t// Days.\n\tfor ( $i = 1; $i <= $last; $i++ )\n\t{\n\t\t$date = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-' . str_pad( $i, 2, '0', STR_PAD_LEFT );\n\n\t\t$minutes = isset( $calendar_RET[ $date ][1]['MINUTES'] ) ? $calendar_RET[ $date ][1]['MINUTES'] : '';\n\n\t\t$events_date = issetVal( $events_RET[ $date ], [] );\n\n\t\t$assignments_date = issetVal( $assignments_RET[ $date ], [] );\n\n\t\t$day_classes = CalendarDayClasses( $date, $minutes );\n\n\t\t$day_inner_classes = CalendarDayClasses(\n\t\t\t$date,\n\t\t\t$minutes,\n\t\t\t$events_date,\n\t\t\t$assignments_date,\n\t\t\t'inner'\n\t\t);\n\n\t\t$day_number_classes = CalendarDayClasses(\n\t\t\t$date,\n\t\t\t$minutes,\n\t\t\t$events_date,\n\t\t\t$assignments_date,\n\t\t\t'number'\n\t\t);\n\n\t\techo '<td class=\"calendar-day' . $day_classes . '\">\n\t\t\t<table class=\"' . $day_inner_classes . '\"><tr>';\n\n\n\t\t// Calendar Day number.\n\t\techo '<td class=\"' . $day_number_classes . '\">' . $i . '</td>\n\t\t<td class=\"width-100p align-right\">';\n\n\t\techo CalendarDayMinutesHTML( $date, $minutes );\n\n\t\t$block = issetVal( $calendar_RET[ $date ][1]['BLOCK'] );\n\n\t\techo CalendarDayBlockHTML( $date, $minutes, $block );\n\n\t\techo '</td></tr>\n\t\t\t<tr><td colspan=\"2\" class=\"calendar-event valign-top\">';\n\n\t\techo CalendarDayEventsHTML( $date, $events_date );\n\n\t\techo CalendarDayAssignmentsHTML( $date, $assignments_date );\n\n\t\techo '</td></tr><tr class=\"valign-bottom\">';\n\n\t\techo CalendarDayNewAssignmentHTML( $date, $assignments_date );\n\n\t\techo CalendarDayRotationNumberHTML( $date, $minutes );\n\n\t\techo '</tr></table></td>';\n\n\t\t$return_counter++;\n\n\t\tif ( $return_counter % 7 === 0 )\n\t\t{\n\t\t\techo '</tr><tr>';\n\t\t}\n\t}\n\n\t// Skip from Last Day of Month until end of Calendar\n\tif ( $return_counter %7 !== 0 )\n\t{\n\t\t$skip = 7 - $return_counter % 7;\n\n\t\techo '<td colspan=\"' . $skip . '\" class=\"calendar-skip\">&nbsp;</td>';\n\t}\n\n\techo '</tr></tbody></table>';\n\n\techo '<br /><div class=\"center\">' . SubmitButton() . '</div>';\n\techo '<br /><br /></form>';\n}\n", "<?php\n\nrequire_once 'modules/School_Setup/includes/MarkingPeriods.fnc.php';\n\nDrawHeader( ProgramTitle() );\n\n// Default MP ID to Full Year.\n\nif ( empty( $_REQUEST['marking_period_id'] ) )\n{\n\t$_REQUEST['marking_period_id'] = GetFullYearMP() ? GetFullYearMP() : 'new';\n\n\t$_REQUEST['mp_term'] = 'FY';\n}\n\n//unset($_SESSION['_REQUEST_vars']['marking_period_id']);\n//unset($_SESSION['_REQUEST_vars']['mp_term']);\n\nif ( $_REQUEST['marking_period_id'] === 'new' )\n{\n\tswitch ( $_REQUEST['mp_term'] )\n\t{\n\t\tcase 'FY':\n\t\t\t$title = _( 'New Year' );\n\t\t\tbreak;\n\n\t\tcase 'SEM':\n\t\t\t$title = _( 'New Semester' );\n\t\t\tbreak;\n\n\t\tcase 'QTR':\n\t\t\t$title = _( 'New Marking Period' );\n\t\t\tbreak;\n\n\t\tcase 'PRO':\n\t\t\t$title = _( 'New Progress Period' );\n\t\t\tbreak;\n\t}\n}\nelse\n{\n\t$_REQUEST['marking_period_id'] = (string) (int) $_REQUEST['marking_period_id'];\n}\n\n// Add eventual Dates to $_REQUEST['tables'].\nAddRequestedDates( 'tables', 'post' );\n\n// UPDATING\n\nif ( ! empty( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t//FJ fix SQL bug invalid sort order\n\n\t\tif ( isset( $columns['SORT_ORDER'] )\n\t\t\t&& $columns['SORT_ORDER'] !== ''\n\t\t\t&& ! is_numeric( $columns['SORT_ORDER'] ) )\n\t\t{\n\t\t\t$error[] = _( 'Please enter a valid Sort Order.' );\n\n\t\t\tbreak 1;\n\t\t}\n\n\t\t// UPDATE\n\n\t\tif ( $id !== 'new' )\n\t\t{\n\t\t\t$sql = \"UPDATE SCHOOL_MARKING_PERIODS SET \";\n\n\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t{\n\t\t\t\tif ( $column === 'START_DATE'\n\t\t\t\t\t|| $column === 'END_DATE'\n\t\t\t\t\t|| $column === 'POST_START_DATE'\n\t\t\t\t\t|| $column === 'POST_END_DATE' )\n\t\t\t\t{\n\t\t\t\t\t//FJ fix SQL bug START_DATE or END_DATE is null\n\n\t\t\t\t\tif (  ( ! VerifyDate( $value )\n\t\t\t\t\t\t&& $value !== '' )\n\t\t\t\t\t\t|| ( ( $column === 'START_DATE' || $column === 'END_DATE' )\n\t\t\t\t\t\t\t&& $value === '' ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Not all of the dates were entered correctly.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t//FJ verify END_DATE > START_DATE\n\t\t\t\t\t$mp_dates_RET = DBGet( \"SELECT START_DATE, END_DATE, POST_START_DATE, POST_END_DATE\n\t\t\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\t\t\tWHERE MARKING_PERIOD_ID='\" . $id . \"'\" );\n\n\t\t\t\t\t$start_date = ! empty( $columns['START_DATE'] ) ?\n\t\t\t\t\t\t$columns['START_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['START_DATE'];\n\n\t\t\t\t\t$end_date = ! empty( $columns['END_DATE'] ) ?\n\t\t\t\t\t\t$columns['END_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['END_DATE'];\n\n\t\t\t\t\t$post_start_date = ! empty( $columns['POST_START_DATE'] ) ?\n\t\t\t\t\t\t$columns['POST_START_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['POST_START_DATE'];\n\n\t\t\t\t\t$post_end_date = ! empty( $columns['POST_END_DATE'] ) ?\n\t\t\t\t\t\t$columns['POST_END_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['POST_END_DATE'];\n\n\t\t\t\t\tif (  ( $column === 'END_DATE'\n\t\t\t\t\t\t&& date_create( $value ) <= date_create( $start_date ) )\n\t\t\t\t\t\t|| ( $column === 'START_DATE'\n\t\t\t\t\t\t\t&& date_create( $end_date ) <= date_create( $value ) )\n\t\t\t\t\t\t|| ( $column === 'POST_END_DATE'\n\t\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t\t&& $post_start_date !== null\n\t\t\t\t\t\t\t&& date_create( $value ) <= date_create( $post_start_date ) )\n\t\t\t\t\t\t|| ( $column === 'POST_START_DATE'\n\t\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t\t&& $post_end_date !== null\n\t\t\t\t\t\t\t&& date_create( $post_end_date ) <= date_create( $value ) ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Start date must be anterior to end date.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t}\n\n\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE MARKING_PERIOD_ID='\" . $id . \"'\";\n\n\t\t\t$go = true;\n\t\t}\n\n\t\t// New: check for Title.\n\t\telseif ( $columns['TITLE'] )\n\t\t{\n\t\t\t$id_new = DBSeqNextID( 'school_marking_periods_marking_period_id_seq' );\n\n\t\t\t$sql = \"INSERT INTO SCHOOL_MARKING_PERIODS \";\n\n\t\t\t$fields = \"MARKING_PERIOD_ID,MP,SYEAR,SCHOOL_ID,\";\n\n\t\t\t$values = \"'\" . $id_new . \"','\" . $_REQUEST['mp_term'] . \"','\" . UserSyear() . \"','\" . UserSchool() . \"',\";\n\n\t\t\tswitch ( $_REQUEST['mp_term'] )\n\t\t\t{\n\t\t\t\tcase 'SEM':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['year_id'] . \"',\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'QTR':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['semester_id'] . \"',\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PRO':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['quarter_id'] . \"',\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$go = false;\n\n\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t{\n\t\t\t\tif ( $column === 'START_DATE'\n\t\t\t\t\t|| $column === 'END_DATE'\n\t\t\t\t\t|| $column === 'POST_START_DATE'\n\t\t\t\t\t|| $column === 'POST_END_DATE' )\n\t\t\t\t{\n\t\t\t\t\t//FJ fix SQL bug START_DATE or END_DATE is null\n\n\t\t\t\t\tif ( ! VerifyDate( $value )\n\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t|| ( ( $column === 'START_DATE'\n\t\t\t\t\t\t\t|| $column === 'END_DATE' )\n\t\t\t\t\t\t\t&& $value === '' ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Not all of the dates were entered correctly.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t//FJ verify END_DATE > START_DATE\n\n\t\t\t\t\tif (  ( $column === 'END_DATE'\n\t\t\t\t\t\t&& date_create( $value ) <= date_create( $columns['START_DATE'] ) )\n\t\t\t\t\t\t|| ( $column === 'POST_START_DATE'\n\t\t\t\t\t\t\t&& $columns['POST_END_DATE'] !== ''\n\t\t\t\t\t\t\t&& date_create( $value ) > date_create( $columns['POST_END_DATE'] ) ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Start date must be anterior to end date.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t|| $value === '0' )\n\t\t\t\t{\n\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t}\n\n\t\t// CHECK TO MAKE SURE ONLY ONE MP & ONE GRADING PERIOD IS OPEN AT ANY GIVEN TIME\n\t\t$dates_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\tAND ( true=false\" .\n\t\t\t( ! empty( $columns['START_DATE'] ) ? \" OR '\" . $columns['START_DATE'] .\n\t\t\t\t\"' BETWEEN START_DATE AND END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['END_DATE'] ) ? \" OR '\" . $columns['END_DATE'] .\n\t\t\t\t\"' BETWEEN START_DATE AND END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['START_DATE'] ) && ! empty( $columns['END_DATE'] ) ?\n\t\t\t\t\" OR START_DATE BETWEEN '\" . $columns['START_DATE'] . \"' AND '\" . $columns['END_DATE'] . \"'\" .\n\t\t\t\t\" OR END_DATE BETWEEN '\" . $columns['START_DATE'] . \"' AND '\" . $columns['END_DATE'] . \"'\" : '' ) . \")\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\" .\n\t\t\t( $id !== 'new' ? \" AND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND MARKING_PERIOD_ID!='\" . $id . \"'\" : '' ) );\n\n\t\t$posting_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\tAND ( true=false\" .\n\t\t\t( ! empty( $columns['POST_START_DATE'] ) ? \" OR '\" . $columns['POST_START_DATE'] .\n\t\t\t\t\"' BETWEEN POST_START_DATE AND POST_END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['POST_END_DATE'] ) ? \" OR '\" . $columns['POST_END_DATE'] .\n\t\t\t\t\"' BETWEEN POST_START_DATE AND POST_END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['POST_START_DATE'] ) && ! empty( $columns['POST_END_DATE'] ) ?\n\t\t\t\t\" OR POST_START_DATE BETWEEN '\" . $columns['POST_START_DATE'] . \"' AND '\" . $columns['POST_END_DATE'] . \"'\" .\n\t\t\t\t\" OR POST_END_DATE BETWEEN '\" . $columns['POST_START_DATE'] . \"' AND '\" . $columns['POST_END_DATE'] . \"'\" : '' ) . \")\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\" .\n\t\t\t( $id !== 'new' ? \" AND MARKING_PERIOD_ID!='\" . $id . \"'\" : '' ) );\n\n\t\tif ( ! empty( $dates_RET ) )\n\t\t{\n\t\t\t$error[] = sprintf(\n\t\t\t\t_( 'The beginning and end dates you specified for this marking period overlap with those of \"%s\".' ),\n\t\t\t\tGetMP( $dates_RET[1]['MARKING_PERIOD_ID'] )\n\t\t\t) . ' ' .\n\t\t\t_( 'Only one marking period can be open at any time.' );\n\n\t\t\t$go = false;\n\t\t}\n\n\t\tif ( ! empty( $posting_RET ) )\n\t\t{\n\t\t\t$error[] = sprintf(\n\t\t\t\t_( 'The grade posting dates you specified for this marking period overlap with those of \"%s\".' ),\n\t\t\t\tGetMP( $posting_RET[1]['MARKING_PERIOD_ID'] )\n\t\t\t) . ' ' .\n\t\t\t_( 'Only one grade posting period can be open at any time.' );\n\n\t\t\t$go = false;\n\t\t}\n\n\t\tif ( $go )\n\t\t{\n\t\t\tDBQuery( $sql );\n\t\t}\n\n\t\tif ( $id === 'new'\n\t\t\t&& $go )\n\t\t{\n\t\t\t$_REQUEST['marking_period_id'] = $id_new;\n\t\t}\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( [ 'tables' ] );\n}\n\n// DELETING\n\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tswitch ( $_REQUEST['mp_term'] )\n\t{\n\t\tcase 'FY':\n\t\t\t$name = _( 'Year' );\n\n\t\t\t$parent_term = '';\n\t\t\t$parent_id = '';\n\t\t\tbreak;\n\n\t\tcase 'SEM':\n\t\t\t$name = _( 'Semester' );\n\n\t\t\t$parent_term = 'FY';\n\t\t\t$parent_id = issetVal( $_REQUEST['year_id'] );\n\t\t\tbreak;\n\n\t\tcase 'QTR':\n\t\t\t$name = _( 'Quarter' );\n\n\t\t\t$parent_term = 'SEM';\n\t\t\t$parent_id = issetVal( $_REQUEST['semester_id'] );\n\t\t\tbreak;\n\n\t\tcase 'PRO':\n\t\t\t$name = _( 'Progress Period' );\n\n\t\t\t$parent_term = 'QTR';\n\t\t\t$parent_id = issetVal( $_REQUEST['quarter_id'] );\n\t\t\tbreak;\n\t}\n\n\tif ( DeletePrompt( $name ) )\n\t{\n\t\tDBQuery( MarkingPeriodDeleteSQL( $_REQUEST['marking_period_id'], $_REQUEST['mp_term'] ) );\n\n\t\t$_REQUEST['mp_term'] = $parent_term;\n\n\t\t$_REQUEST['marking_period_id'] = $parent_id;\n\n\t\t// Unset modfunc & redirect URL.\n\t\tRedirectURL( 'modfunc' );\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\tif ( $_REQUEST['marking_period_id']\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t// Check marking period ID is valid for current school & syear!\n\t\t$marking_period_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tAND MARKING_PERIOD_ID='\" . $_REQUEST['marking_period_id'] . \"'\" );\n\n\t\tif ( ! $marking_period_RET )\n\t\t{\n\t\t\t$_REQUEST['marking_period_id'] = GetFullYearMP() ? GetFullYearMP() : 'new';\n\n\t\t\t$_REQUEST['mp_term'] = 'FY';\n\n\t\t\t// Unset year & semester & quarter IDs & redirect URL.\n\t\t\tRedirectURL( [ 'year_id', 'semester_id', 'quarter_id' ] );\n\t\t}\n\n\t\tif ( AllowEdit()\n\t\t\t&& $_REQUEST['marking_period_id'] !== 'new'\n\t\t\t&& $_REQUEST['marking_period_id'] !== GetFullYearMP() )\n\t\t{\n\t\t\t// @since 6.6 Add warning when Marking Period dates are not within Parent MP dates range.\n\t\t\t$parent_mp_type = GetMP( $_REQUEST['marking_period_id'], 'MP' ) === 'SEM' ? 'FY' :\n\t\t\t\t( GetMP( $_REQUEST['marking_period_id'], 'MP' ) === 'QTR' ? 'SEM' : 'QTR' );\n\n\t\t\t$parent_mp_id = GetParentMP( $parent_mp_type, $_REQUEST['marking_period_id'] );\n\n\t\t\t$parent_mp_end_date = GetMP( $parent_mp_id, 'END_DATE' );\n\n\t\t\t$mp_end_date = GetMP( $_REQUEST['marking_period_id'], 'END_DATE' );\n\n\t\t\t$parent_mp_start_date = GetMP( $parent_mp_id, 'START_DATE' );\n\n\t\t\t$mp_start_date = GetMP( $_REQUEST['marking_period_id'], 'START_DATE' );\n\n\t\t\tif ( $mp_end_date > $parent_mp_end_date )\n\t\t\t{\n\t\t\t\t$warning[] = _( 'End date for current Marking Period is posterior to parent Marking Period\\'s end date.' );\n\t\t\t}\n\n\t\t\tif ( $mp_start_date < $parent_mp_start_date )\n\t\t\t{\n\t\t\t\t$warning[] = _( 'Start date for current Marking Period is anterior to parent Marking Period\\'s start date.' );\n\t\t\t}\n\t\t}\n\t}\n\n\techo ErrorMessage( $warning, 'warning' );\n\n\t// ADDING & EDITING FORM.\n\n\tif ( $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT TITLE,SHORT_NAME,SORT_ORDER,DOES_GRADES,DOES_COMMENTS,\n\t\t\t\tSTART_DATE,END_DATE,POST_START_DATE,POST_END_DATE\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MARKING_PERIOD_ID='\" . $_REQUEST['marking_period_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = $RET['TITLE'];\n\t}\n\n\t$mp_href = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=' . $_REQUEST['mp_term'] .\n\t\t'&year_id=' . issetVal( $_REQUEST['year_id'] ) .\n\t\t'&semester_id=' . issetVal( $_REQUEST['semester_id'] ) .\n\t\t'&quarter_id=' . issetVal( $_REQUEST['quarter_id'] ) .\n\t\t'&marking_period_id=' . $_REQUEST['marking_period_id'];\n\n\t$delete_button = '';\n\n\tif ( AllowEdit()\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t// Is Single Marking Period? Do NOT delete.\n\n\t\tif ( $_REQUEST['mp_term'] !== 'FY'\n\t\t\t&& $_REQUEST['mp_term'] !== 'PRO' )\n\t\t{\n\t\t\t$not_single_mp_RET = DBGet( \"SELECT COUNT( MARKING_PERIOD_ID ) > 1 AS NOT_SINGLE_MP\n\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\t\t$not_single_mp = $not_single_mp_RET[1]['NOT_SINGLE_MP'] !== 'f';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$not_single_mp = $_REQUEST['mp_term'] !== 'FY' || $_REQUEST['mp_term'] === 'PRO';\n\t\t}\n\n\t\tif ( $not_single_mp )\n\t\t{\n\t\t\t// @since 5.0 MP has Course Periods? Do NOT delete.\n\t\t\t$can_delete = DBTransDryRun(\n\t\t\t\tMarkingPeriodDeleteSQL( $_REQUEST['marking_period_id'], $_REQUEST['mp_term'] )\n\t\t\t);\n\n\t\t\tif ( $can_delete )\n\t\t\t{\n\t\t\t\t$delete_URL = \"'\" . $mp_href . \"&modfunc=delete'\";\n\n\t\t\t\t$delete_button = '<input type=\"button\" value=\"' . _( 'Delete' ) . '\" onClick=\"javascript:ajaxLink(' . $delete_URL . ');\" />';\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<form action=\"' . URLEscape( $mp_href ) . '\" method=\"POST\">';\n\n\tDrawHeader( $title, $delete_button . SubmitButton() );\n\n\t$header = '<table class=\"width-100p valign-top fixed-col\"><tr class=\"st\">';\n\n\t$header .= '<td>' . TextInput(\n\t\tissetVal( $RET['TITLE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][TITLE]',\n\t\t_( 'Title' ),\n\t\t'required maxlength=\"50\"'\n\t) . '</td>';\n\n\t$header .= '<td>' . TextInput(\n\t\tissetVal( $RET['SHORT_NAME'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][SHORT_NAME]',\n\t\t_( 'Short Name' ),\n\t\t'required maxlength=\"10\"' .\n\t\t\t( $_REQUEST['marking_period_id'] === 'new' ? ' size=\"3\"' : '' )\n\t) . '</td>';\n\n\tif ( AllowEdit() )\n\t{\n\t\t// Hide Sort Order from non editing users.\n\t\t$header .= '<td>' . TextInput(\n\t\t\tissetVal( $RET['SORT_ORDER'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][SORT_ORDER]',\n\t\t\t_( 'Sort Order' ),\n\t\t\t'type=\"number\" step=\"any\"'\n\t\t) . '</td></tr>';\n\t}\n\n\t// @since 4.1 Grade posting date inputs are required when \"Graded\" is checked.\n\t$header .= '<script>var mpGradedOnclickPostDatesRequired = function(el) {\n\t\tvar dates = [\"month\", \"day\", \"year\"],\n\t\t\tdateStartInput,\n\t\t\tdateEndInput;\n\n\t\tfor (var i=0,max=dates.length; i<max; i++) {\n\t\t\tdateStartInput = document.getElementsByName( dates[i] + \"_tables[' . $_REQUEST['marking_period_id'] .\n\t\t\t'][POST_START_DATE]\" )[0];\n\t\t\tdateEndInput = document.getElementsByName( dates[i] + \"_tables[' . $_REQUEST['marking_period_id'] .\n\t\t\t'][POST_END_DATE]\" )[0];\n\n\t\t\tdateStartInput.required = dateEndInput.required = el.checked;\n\t\t}\n\n\t\t// Add .legend-red CSS class to label if input is required/\n\t\t$(dateStartInput).parent().nextAll(\".legend-gray\").toggleClass(\"legend-red\", el.checked);\n\t\t$(dateEndInput).parent().nextAll(\".legend-gray\").toggleClass(\"legend-red\", el.checked);\n\t};</script>';\n\n\t$js_onclick_post_dates_required = 'onclick=\"mpGradedOnclickPostDatesRequired( this );\"';\n\n\t$header .= '<tr class=\"st\"><td>' . CheckboxInput(\n\t\tissetVal( $RET['DOES_GRADES'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][DOES_GRADES]',\n\t\t_( 'Graded' ),\n\t\t'',\n\t\t$_REQUEST['marking_period_id'] === 'new',\n\t\tbutton( 'check' ),\n\t\tbutton( 'x' ),\n\t\ttrue,\n\t\t$js_onclick_post_dates_required\n\t) . '</td>';\n\n\tif ( AllowEdit()\n\t\t|| ! empty( $RET['DOES_GRADES'] ) )\n\t{\n\t\t// Hide Comments from non editing users if MP not Graded.\n\t\t$header .= '<td>' . CheckboxInput(\n\t\t\tissetVal( $RET['DOES_COMMENTS'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][DOES_COMMENTS]',\n\t\t\t_( 'Comments' ),\n\t\t\t'',\n\t\t\t$_REQUEST['marking_period_id'] === 'new',\n\t\t\tbutton( 'check' ),\n\t\t\tbutton( 'x' )\n\t\t) . '</td>';\n\t}\n\n\t$header .= '</tr><tr><td colspan=\"3\"><hr /></td></tr>';\n\n\t$required = $allow_na = $div = true;\n\n\t$header .= '<tr class=\"st\"><td>' . DateInput(\n\t\tissetVal( $RET['START_DATE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][START_DATE]',\n\t\t_( 'Begins' ),\n\t\t$div,\n\t\t$allow_na,\n\t\t$required\n\t) . '</td>';\n\n\t$header .= '<td>' . DateInput(\n\t\tissetVal( $RET['END_DATE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][END_DATE]',\n\t\t_( 'Ends' ),\n\t\t$div,\n\t\t$allow_na,\n\t\t$required\n\t) . '</td></tr>';\n\n\t$required = ! empty( $RET['DOES_GRADES'] );\n\n\t$red = ! empty( $RET['DOES_GRADES'] ) && empty( $RET['POST_END_DATE'] );\n\n\tif ( AllowEdit()\n\t\t|| ! empty( $RET['DOES_GRADES'] ) )\n\t{\n\t\t// Hide Grade Posting Dates from non editing users if MP not Graded.\n\t\t$header .= '<tr class=\"st\"><td>' . DateInput(\n\t\t\tissetVal( $RET['POST_START_DATE'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][POST_START_DATE]',\n\t\t\t( $red ? '<span class=\"legend-red\">' : '' ) . _( 'Grade Posting Begins' ) . ( $red ? '</span>' : '' ),\n\t\t\t$div,\n\t\t\t$allow_na,\n\t\t\t$required\n\t\t) . '</td>';\n\n\t\t$header .= '<td>' . DateInput(\n\t\t\tissetVal( $RET['POST_END_DATE'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][POST_END_DATE]',\n\t\t\t( $red ? '<span class=\"legend-red\">' : '' ) . _( 'Grade Posting Ends' ) . ( $red ? '</span>' : '' ),\n\t\t\t$div,\n\t\t\t$allow_na,\n\t\t\t$required\n\t\t) . '</td></tr>';\n\t}\n\n\t$header .= '</table>';\n\n\tDrawHeader( $header );\n\n\techo '</form>';\n\n\t//unset($_SESSION['_REQUEST_vars']['marking_period_id']);\n\t//unset($_SESSION['_REQUEST_vars']['mp_term']);\n\n\t// DISPLAY THE MENU\n\t$LO_options = [ 'save' => false, 'search' => false, 'responsive' => false ];\n\n\t// FY\n\t$fy_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\tFROM SCHOOL_MARKING_PERIODS\n\t\tWHERE MP='FY'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"' ORDER BY SORT_ORDER\" );\n\n\tif ( ! empty( $fy_RET ) )\n\t{\n\t\tif ( ! empty( $_REQUEST['mp_term'] ) )\n\t\t{\n\t\t\tif ( $_REQUEST['mp_term'] === 'FY' )\n\t\t\t{\n\t\t\t\t$_REQUEST['year_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t}\n\n\t\t\tforeach ( (array) $fy_RET as $key => $value )\n\t\t\t{\n\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['year_id'] )\n\t\t\t\t{\n\t\t\t\t\t$fy_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div class=\"st\">';\n\n\t$columns = [ 'TITLE' => _( 'Year' ) ];\n\n\t$link = [];\n\n\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=FY';\n\n\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\tif ( empty( $fy_RET ) )\n\t{\n\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=FY&marking_period_id=new';\n\t}\n\n\tListOutput( $fy_RET, $columns, 'Year', 'Years', $link, [], $LO_options );\n\n\techo '</div>';\n\n\t// SEMESTERS\n\n\tif (  ( $_REQUEST['mp_term'] === 'FY'\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t|| $_REQUEST['mp_term'] === 'SEM'\n\t\t|| $_REQUEST['mp_term'] === 'QTR'\n\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t{\n\t\t$sem_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='SEM'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['year_id'] . \"'\n\t\t\tORDER BY SORT_ORDER\" );\n\n\t\tif ( ! empty( $sem_RET ) )\n\t\t{\n\t\t\tif ( ! empty( $_REQUEST['mp_term'] ) )\n\t\t\t{\n\t\t\t\tif ( $_REQUEST['mp_term'] === 'SEM' )\n\t\t\t\t{\n\t\t\t\t\t$_REQUEST['semester_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t\t}\n\n\t\t\t\tforeach ( (array) $sem_RET as $key => $value )\n\t\t\t\t{\n\t\t\t\t\tif ( ! empty( $_REQUEST['semester_id'] )\n\t\t\t\t\t\t&& $value['MARKING_PERIOD_ID'] === $_REQUEST['semester_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sem_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\techo '<div class=\"st\">';\n\n\t\t$columns = [ 'TITLE' => _( 'Semester' ) ];\n\n\t\t$link = [];\n\n\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=SEM&year_id=' . $_REQUEST['year_id'];\n\n\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=SEM&marking_period_id=new&year_id=' . $_REQUEST['year_id'];\n\n\t\tListOutput( $sem_RET, $columns, 'Semester', 'Semesters', $link, [], $LO_options );\n\n\t\techo '</div>';\n\n\t\t// QUARTERS\n\n\t\tif ( ( $_REQUEST['mp_term'] === 'SEM'\n\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t|| $_REQUEST['mp_term'] === 'QTR'\n\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t{\n\t\t\t$qtr_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\tWHERE MP='QTR'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['semester_id'] . \"'\n\t\t\t\tORDER BY SORT_ORDER\" );\n\n\t\t\tif ( ! empty( $qtr_RET ) )\n\t\t\t{\n\t\t\t\tif ( ( $_REQUEST['mp_term'] === 'QTR'\n\t\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t\t\t{\n\t\t\t\t\tif ( $_REQUEST['mp_term'] == 'QTR' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['quarter_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t\t\t}\n\n\t\t\t\t\tforeach ( (array) $qtr_RET as $key => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['quarter_id'] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$qtr_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<div class=\"st\">';\n\n\t\t\t$columns = [ 'TITLE' => _( 'Quarter' ) ];\n\n\t\t\t$link = [];\n\n\t\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=QTR&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'];\n\n\t\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=QTR&marking_period_id=new&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'];\n\n\t\t\tListOutput( $qtr_RET, $columns, 'Quarter', 'Quarters', $link, [], $LO_options );\n\n\t\t\techo '</div>';\n\n\t\t\t// PROGRESS PERIODS\n\n\t\t\tif ( ( $_REQUEST['mp_term'] === 'QTR'\n\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t\t{\n\t\t\t\t$pro_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\t\tWHERE MP='PRO'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['quarter_id'] . \"'\n\t\t\t\t\tORDER BY SORT_ORDER\" );\n\n\t\t\t\tif ( ! empty( $pro_RET ) )\n\t\t\t\t{\n\t\t\t\t\tif ( $_REQUEST['mp_term'] === 'PRO'\n\t\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['progress_period_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\n\t\t\t\t\t\tforeach ( (array) $pro_RET as $key => $value )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['marking_period_id'] )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$pro_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\techo '<div class=\"st\">';\n\n\t\t\t\t$columns = [ 'TITLE' => _( 'Progress Period' ) ];\n\n\t\t\t\t$link = [];\n\n\t\t\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=PRO&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'] . '&quarter_id=' . $_REQUEST['quarter_id'];\n\n\t\t\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=PRO&marking_period_id=new&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'] . '&quarter_id=' . $_REQUEST['quarter_id'];\n\n\t\t\t\tListOutput( $pro_RET, $columns, 'Progress Period', 'Progress Periods', $link, [], $LO_options );\n\n\t\t\t\techo '</div>';\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n/**\n * School Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nrequire_once 'ProgramFunctions/Fields.fnc.php';\n\nDrawHeader( ProgramTitle() );\n\n$_REQUEST['id'] = issetVal( $_REQUEST['id'], false );\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'SCHOOL_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'SCHOOLS', 'school_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'School Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'SCHOOLS', $_REQUEST['id'] );\n\n\t\t\t$_REQUEST['modfunc'] = false;\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,(SELECT NULL) AS CATEGORY_ID,TITLE,TYPE,\n\t\t\tSELECT_OPTIONS,DEFAULT_SELECTION,SORT_ORDER,REQUIRED\n\t\t\tFROM SCHOOL_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New School Field' );\n\n\t\t$RET['ID'] = 'new';\n\t}\n\n\techo GetFieldsForm(\n\t\t'SCHOOL',\n\t\t$title,\n\t\t$RET,\n\t\t[]\n\t);\n\n\t// DISPLAY THE MENU.\n\t// FIELDS.\n\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\tFROM SCHOOL_FIELDS\n\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], false );\n\n\techo '</div>';\n}\n", "<?php\n/**\n * Address Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'ADDRESS_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'ADDRESS', 'address_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'ADDRESS_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'address_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Address Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'ADDRESS', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Address Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'ADDRESS', $_REQUEST['category_id'] );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM ADDRESS_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,RESIDENCE,MAILING,BUS,SORT_ORDER\n\t\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Address Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Address Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [\n\t\t\t'<table class=\"width-100p cellspacing-0\"><tr class=\"st\"><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['RESIDENCE'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][RESIDENCE]',\n\t\t\t\t_( 'Residence' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['MAILING'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][MAILING]',\n\t\t\t\t_( 'Mailing' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['BUS'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][BUS]',\n\t\t\t\t_( 'Bus' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td></tr></table>' .\n\t\t\tFormatInputTitle(\n\t\t\t\t_( 'Note: All unchecked means applies to all addresses' ),\n\t\t\t\t'',\n\t\t\t\tfalse,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\techo GetFieldsForm(\n\t\t'ADDRESS',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM ADDRESS_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n", "<?php\n/**\n * People Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'PEOPLE_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'PEOPLE', 'people_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'PEOPLE_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'people_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Contact Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'PEOPLE', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Contact Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'PEOPLE', $_REQUEST['category_id'] );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM PEOPLE_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,CUSTODY,EMERGENCY,SORT_ORDER\n\t\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Contact Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Contact Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [\n\t\t\t'<table class=\"width-100p cellspacing-0\"><tr class=\"st\"><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['CUSTODY'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][CUSTODY]',\n\t\t\t\t_( 'Custody' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['EMERGENCY'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][EMERGENCY]',\n\t\t\t\t_( 'Emergency' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td></tr></table>' .\n\t\t\tFormatInputTitle(\n\t\t\t\t_( 'Note: All unchecked means applies to all contacts' ),\n\t\t\t\t'',\n\t\t\t\tfalse,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\techo GetFieldsForm(\n\t\t'PEOPLE',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM PEOPLE_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n", "<?php\n/**\n * Student Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// FJ Fix PHP fatal error: check Include file exists.\n\t\t\t\tif ( isset( $columns['INCLUDE'] )\n\t\t\t\t\t&& $columns['INCLUDE'] )\n\t\t\t\t{\n\t\t\t\t\t$include_file_path = 'modules/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\t// @since 4.5 Include Student/User Info tab from custom plugin.\n\t\t\t\t\t$plugins_include_file_path = 'plugins/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\tif ( ! file_exists( $include_file_path )\n\t\t\t\t\t\t&& ! file_exists( $plugins_include_file_path ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t// File does not exist: reset + error.\n\t\t\t\t\t\tunset( $columns['INCLUDE'] );\n\n\t\t\t\t\t\t$error[] = sprintf(\n\t\t\t\t\t\t\t_( 'The include file was not found: \"%s\"' ),\n\t\t\t\t\t\t\t$include_file_path . ', ' . $plugins_include_file_path\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'CUSTOM_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'STUDENTS', 'custom_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'STUDENT_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'student_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\n\t\t\t\t\t\t// Add to profile or permissions of user creating it.\n\t\t\t\t\t\tif ( User( 'PROFILE_ID' ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO PROFILE_EXCEPTIONS (PROFILE_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'PROFILE_ID' ) . \"','Students/Student.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO STAFF_EXCEPTIONS (USER_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'STAFF_ID' ) . \"','Students/Student.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Student Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'STUDENTS', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Student Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'STUDENTS', $_REQUEST['category_id'] );\n\n\t\t\t// Remove from profiles and permissions.\n\t\t\t$delete_sql = \"DELETE FROM PROFILE_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Students/Student.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\t$delete_sql .= \"DELETE FROM STAFF_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Students/Student.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\tDBQuery( $delete_sql );\n\n\t\t\t// Unset modfunc & category ID redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM CUSTOM_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,SORT_ORDER,INCLUDE,COLUMNS\n\t\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Student Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Student Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\n\t\t$RET['COLUMNS'] = '';\n\t\t$RET['INCLUDE'] = '';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [ TextInput(\n\t\t\t$RET['COLUMNS'],\n\t\t\t'tables[' . $_REQUEST['category_id'] . '][COLUMNS]',\n\t\t\t_( 'Display Columns' ),\n\t\t\t' type=\"number\" min=\"1\" max=\"10\"'\n\t\t) ];\n\n\t\tif ( $_REQUEST['category_id'] > 4\n\t\t\t|| $_REQUEST['category_id'] === 'new' )\n\t\t{\n\t\t\t// TODO: check if INCLUDE file (+ \".inc.php\") exsits.\n\t\t\t$extra_fields[] = TextInput(\n\t\t\t\t$RET['INCLUDE'],\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][INCLUDE]',\n\t\t\t\t_( 'Include (should be left blank for most categories)' )\n\t\t\t);\n\t\t}\n\t}\n\n\techo GetFieldsForm(\n\t\t'STUDENT',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM CUSTOM_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n\n", "<?php\n/**\n * User Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nrequire_once 'ProgramFunctions/Fields.fnc.php';\n\n$_REQUEST['id'] = issetVal( $_REQUEST['id'], '' );\n$_REQUEST['category_id'] = issetVal( $_REQUEST['category_id'], '' );\n\nDrawHeader( ProgramTitle() );\n\n//$_ROSARIO['allow_edit'] = true;\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// FJ Fix PHP fatal error: check Include file exists.\n\t\t\t\tif ( isset( $columns['INCLUDE'] )\n\t\t\t\t\t&& $columns['INCLUDE'] )\n\t\t\t\t{\n\t\t\t\t\t$include_file_path = 'modules/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\t// @since 4.5 Include Student/User Info tab from custom plugin.\n\t\t\t\t\t$plugins_include_file_path = 'plugins/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\tif ( ! file_exists( $include_file_path )\n\t\t\t\t\t\t&& ! file_exists( $plugins_include_file_path ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t// File does not exist: reset + error.\n\t\t\t\t\t\tunset( $columns['INCLUDE'] );\n\n\t\t\t\t\t\t$error[] = sprintf(\n\t\t\t\t\t\t\t_( 'The include file was not found: \"%s\"' ),\n\t\t\t\t\t\t\t$include_file_path . ', ' . $plugins_include_file_path\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'STAFF_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'STAFF', 'staff_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'STAFF_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'staff_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\n\t\t\t\t\t\t// Add to profile or permissions of user creating it.\n\t\t\t\t\t\tif ( User( 'PROFILE_ID' ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO PROFILE_EXCEPTIONS (PROFILE_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'PROFILE_ID' ) . \"','Users/User.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO STAFF_EXCEPTIONS (USER_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'STAFF_ID' ) . \"','Users/User.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= $column . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'User Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'STAFF', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'User Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'STAFF', $_REQUEST['category_id'] );\n\n\t\t\t// Remove from profiles and permissions.\n\t\t\t$delete_sql = \"DELETE FROM PROFILE_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Users/User.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\t$delete_sql .= \"DELETE FROM STAFF_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Users/User.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\tDBQuery( $delete_sql );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM STAFF_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM STAFF_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,ADMIN,TEACHER,PARENT,NONE,SORT_ORDER,INCLUDE,COLUMNS\n\t\t\tFROM STAFF_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New User Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = $_REQUEST['category_id'];\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New User Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\n\t\t$RET['COLUMNS'] = '';\n\t\t$RET['ADMIN'] = $RET['TEACHER'] = $RET['PARENT'] = $RET['NONE'] = '';\n\t\t$RET['INCLUDE'] = '';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [];\n\n\t\t$extra_fields[] = TextInput(\n\t\t\t$RET['COLUMNS'],\n\t\t\t'tables[' . $_REQUEST['category_id'] . '][COLUMNS]',\n\t\t\t_( 'Display Columns' ),\n\t\t\t' type=\"number\" min=\"1\" max=\"10\"'\n\t\t);\n\n\t\tif ( $_REQUEST['category_id'] != 1 )\n\t\t{\n\t\t\t$extra_fields[] = '<table><tr class=\"st\"><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['ADMIN'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][ADMIN]',\n\t\t\t\t\t_( 'Administrator' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['TEACHER'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][TEACHER]',\n\t\t\t\t\t_( 'Teacher' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td></tr><tr><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['PARENT'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][PARENT]',\n\t\t\t\t\t_( 'Parent' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['NONE'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][NONE]',\n\t\t\t\t\t_( 'No Access' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td></tr></table>' .\n\t\t\t\tFormatInputTitle(\n\t\t\t\t\t_( 'Profiles' ),\n\t\t\t\t\t'',\n\t\t\t\t\tfalse,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t}\n\n\t\tif ( $_REQUEST['category_id'] > 2\n\t\t\t|| $_REQUEST['category_id'] === 'new' )\n\t\t{\n\t\t\t// TODO: check if INCLUDE file (+ \".inc.php\") exsits.\n\t\t\t$extra_fields[] = TextInput(\n\t\t\t\t$RET['INCLUDE'],\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][INCLUDE]',\n\t\t\t\t_( 'Include (should be left blank for most categories)' )\n\t\t\t);\n\t\t}\n\t}\n\n\techo GetFieldsForm(\n\t\t'STAFF',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM STAFF_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM STAFF_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n"], "fixing_code": ["# CHANGES\n## RosarioSIS Student Information System\n\nChanges in 9.0\n--------------\n- CSS add length to previous meals select in DailyMenus.php\n- CSS FlatSIS fix calendar menu text wrapping in stylesheet.css\n- Add Export list button in TransactionsReport.php\n- Add Food Service icon to list in ServeMenus.php\n- Add User / Student photo tooltip in ServeMenus.php & Transactions.php\n- HTML add horizontal ruler before each category in MakeReferral.php\n- Fix SQL error when generating Schedule table with PHP8.1 in GetMP.php\n- Reorder PDF list columns to match Schedule columns in PrintSchedules.php\n- SQL order Schedule list by Course Title & Course Period Short Name in Schedule.php & PrintSchedules.php\n- Fix SQL error more than one row returned by a subquery in Rollover.php\n- Fix update Course Period title when Short Name contains single quote in Courses.php\n- Fix PHP8.1 deprecated function parameter is null, program wide\n- Fix PHP8.1 deprecated automatic conversion of false to array in StudentsUsersInfo.fnc.php\n- Add Student Photo Tip Message in AddDrop.php & StudentList.php\n- Format Enrollment Start & End Date in Export.php\n- Add Student name if no Contacts at address in MailingLabel.fnc.php\n- Do not Export Delete column in Periods.php & GradeLevels.php\n- HTML group inputs inside fieldset (tab title or program name) in Configuration.php\n- Hide Comment Codes tip message if Comments unchecked for Marking Period in InputFinalGrades.php\n- Add Get Student Labels Form JS (Disable unchecked fieldset) in StudentLabels.fnc.php & StudentLabels.php\n- Fix PHP8.1 deprecated use PostgreSQL $db_connection global variable in database.inc.php & Grades/includes/Dashboard.inc.php\n- Don't Delete Gender & Birthday Student Fields in Fields.fnc.php\n- CSS set cursor for .tipmsg-label in stylesheet.css\n- Add Username to Password Reset email in PasswordReset.php\n- `intl` PHP extension is now required in diagnostic.php & INSTALL.md\n- Fix PHP8.1 deprecated strftime() use strftime_compat() instead in Side.php, Date.php, PHPCompatibility.php, strftime_compat.php, Dashboard.inc.php & Preferences.php\n- Add $course_period_id param to limit check to a single Course Period in Courses.fnc.php & Courses.php\n- Add title to Contact & Address button images in Address.inc.php\n- CSS select max-width 440px in stylesheet.css & zresponsive.css\n- HTML add label to Points inputs to correct alignment in Grades.php\n- HTML add a11y-hidden label to select in CategoryBreakdown.php, CategoryBreakdownTime.php & StudentFieldBreakdown.php\n- Place Go button right after Timeframe in DailyTransactions.php, DailyTotals.php, CategoryBreakdown.php, CategoryBreakdownTime.php, StudentFieldBreakdown.php & Percent.php\n- Fix French translation for \"Not due\" in rosariosis.po\n- Move Transcript Include form checkboxes up in Transcripts.fnc.php\n- Add Delete button for Submission File in StudentAssignments.fnc.php\n- Fix SQL error null value in column \"title\" violates not-null constraint in MassCreateAssignments.php\n- Reorder & rename Course Periods columns to match Schedule program in MassCreateAssignments.php\n- Fix get History Grades Grade Level short name only if no Grade Level available in Transcripts.fnc.php\n- Fix get Student Photo from previous year in Transcripts.fnc.php\n- Fix SQL error invalid input syntax in PrintSchedules.php & TeacherCompletion.php, thanks to @scgajge12\n- Filter IP, HTTP_* headers can be forged in index.php, PasswordReset.php & ErrorMessage.fnc.php\n- Fix SQL error value too long for type character varying(100) in index.php\n- Fix SQL error invalid input syntax for integer in Student.php, User.php, Referrals.php, Portal.php, PortalNotes.php, PortalNotes.php & Moodle/functions.php\n- Fix PHP8.1 fatal error checkdate argument must be of type int in Calendar.php\n- Fix SQL error invalid input syntax for type date in Calendar.php\n- Fix SQL error duplicate key value violates unique constraint \"attendance_calendar_pkey\" in Calendar.php\n- Fix PHP fatal error Unsupported operand types in ListOutput.php\n- Add AttrEscape() function in Inputs.php\n- Use AttrEscape() instead of htmlspecialchars(), program wide\n- Maintain Advanced search when editing Timeframe in Percent.php\n- Fix SQL injection escape DB identifier in RegistrationSave.fnc.php, Calendar.php, MarkingPeriods.php, SchoolFields.php, AddressFields.php, PeopleFields.php, StudentFields.php & UserFields.php\n\nChanges in 8.9.4\n----------------\n- Fix SQL injection sanitize all `$_REQUEST` keys in Warehouse.php, thanks to @nhienit2010\n- Fix reflected XSS via mime-type in FileUpload.fnc.php, thanks to @nhienit2010\n\nChanges in 8.9.3\n----------------\n- Fix stored XSS security issue: do not allow unsanitized SVG in FileUpload.fnc.php, thanks to @scgajge12 & @crowdoverflow\n\nChanges in 8.9.2\n----------------\n- Fix invalidate User School in session on login in index.php\n\nChanges in 8.9.1\n----------------\n- Fix regression since 8.6 Mailing Labels widget HTML in Widgets.php\n\nChanges in 8.9\n--------------\n- Fix GetTeacher() when newly inserted teacher in GetTeacher.fnc.php\n- Remove Half Day option in AddAbsences.php, Administration.php, TakeAttendance.php, Courses.php, Courses.fnc.php & Rollover.php\n- JS Hide \"+ New Period\" link onclick in Courses.php\n- CSS FlatSIS fix bottom button line height in stylesheet.css\n- Add help texts & translations for the Scheduling > Courses program in Help_en.php & help.po\n- Correct typos in Spanish help texts in help.po\n- Fix Locked column value on list export in Schedule.php\n- Student / User Photo input: only accept .jpg,.jpeg,.png,.gif in General_Info.inc.php\n- Increase Food Service icon width to 48px in FS_Icons.inc.php & MenuItems.php\n- HTML add Add-on upload input title in Modules.inc.php & Plugins.inc.php\n- Fix do not resubmit form on List Export in Incomes.php & Expenses.php\n- Fix List Export columns: hide Delete & show File Attached in Expenses.php, Incomes.php, Salaries.php, StaffPayments.php, StudentFees.php & StudentPayments.php\n- Check AllowEdit() on Event deletion in Calendar.php\n- Food Service icon upload in MenuItems.php\n- Add French & Spanish translation for \"Icon successfully uploaded.\" in rosariosis.po\n\nChanges in 8.8\n--------------\n- Fix proc_open() PHP function not allowed in PDF.php\n- Fix PHP Warning A non-numeric value encountered in ReportCards.fnc.php\n- Fix PHP Fatal error Unsupported operand types in Teacher Programs: do not search Students List, unset in CustomFields.fnc.php\n- Add 'staff_' prefix to first & last inputs on Find a User form in GetStaffList.fnc.php & Search.fnc.php\n- Remove icons from Ungraded column, use only number in StudentGrades.php\n- Exclude 0 points assignments from Ungraded count in StudentGrades.php\n- Date select increase years options from +5 to +20 in Date.php\n- JS Raise height by 1 submenu item so we stay above browser URL in warehouse.js\n- Add Min. and Max. GPA to Last row in Grades.fnc.php & ReportCards.fnc.php\n- Add Class Rank to Last row in Grades.fnc.php & ReportCards.fnc.php\n\nChanges in 8.7\n--------------\n- Rector fix bad code in functions/, classes/core/, ProgramFunctions/\n- Update tested on: not compatible with Internet Explorer in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- Add ProgramFunctions/SendEmail.fnc.php|send_error action hook in SendEmail.fnc.php\n- EasyCodingStandard use short array notation in functions/, classes/core/, ProgramFunctions/, modules/ & plugins/\n- Fix month + year format, remove day (regression since 7.1) in Dashboard.inc.php\n- ProgramUserConfig() always return array, not null in Config.fnc.php & \\_makeLetterGrade.fnc.php\n- Allow redirect to Take Attendance, no fatal error if no current MP in Portal.php\n- CSS fix checkbox & radio input vertical align on Firefox in stylesheet.css\n- CSS fix menu hover right arrow position when module name on 2 lines in stylesheet.css\n- CSS fix font-size auto-adjust on iPhone in stylesheet.css\n- Fix typo in English string, update translations in Rollover.php & rosariosis.mo\n- JS fix menu & scroll issue on smartphone landscape > 735px in warehouse.js & jquery-fixed.menu.js\n- FlatSIS theme: use Grunt to minify in Gruntfile.js\n- FlatSIS theme: do not import WPadmin theme stylesheet anymore in stylesheet.css, stylesheet_wkhtmltopdf.css\n- Fix SQL TRANSCRIPT_GRADES view, grades were duplicated for each school year in rosariosis.sql & Update.fnc.php\n\nChanges in 8.6.1\n----------------\n- Add .webp image to FileExtensionWhiteList() in FileUpload.fnc.php\n- Fix SQL error table name \"sam\" specified more than once in Widget.php\n\nChanges in 8.6\n--------------\n- Add (Student) Widgets class in classes/core/Widgets.php\n- Add (Student) Widget interface and individual Widget classes in classes/core/Widget.php\n- Use RosarioSIS\\Widgets in Widgets.fnc.php\n- Add StaffWidgets class in classes/core/StaffWidgets.php\n- Add StaffWidget interface and individual StaffWidget classes in classes/core/StaffWidget.php\n- Use RosarioSIS\\StaffWidgets in StaffWidgets.fnc.php\n- Admin Student Payments Delete restriction: also exclude Refund in StudentPayments.php & Student_Billing/functions.inc.php\n- Fix PHP Fatal error unsupported operand types when (Staff)Widgets() & $extra used for Parent / Student in Widgets.fnc.php & StaffWidgets.fnc.php\n- Fix PHP Fatal error canBuild() must be compatible with Widget::canBuild(array $modules) in Widget.php & StaffWidget.php\n- Fix SQL error more than one row returned by a subquery in Search.fnc.php\n\nChanges in 8.5.2\n----------------\n- Fix PHP Fatal error cannot redeclare `_rosarioLoginURL()` (regression since 8.3) in MarkDownHTML.fnc.php\n\nChanges in 8.5.1\n----------------\n- Fix SQL syntax error in ORDER BY (regression since 8.3.1) in Substitutions.php\n\nChanges in 8.5\n--------------\n- Fix SQL error duplicate key value violates unique constraint \"food_service_menus_title\" in Menus.php\n- SQL add PRIMARY KEY to STAFF_EXCEPTIONS table in rosariosis.sql\n- SQL PROFILE_EXCEPTIONS & STAFF_EXCEPTIONS tables: Add Admin Student Payments Delete restriction in Update.fnc.php & rosariosis.sql\n- Add Admin Student Payments Delete restriction in Profiles.php & Exceptions.php\n- Add Admin Student Payments Delete restriction in StudentPayments.php & Student_Billing/functions.inc.php\n- Fix SQL error numeric field overflow when entering percent > 100 in MassCreateAssignments.php\n- HTML Sort Order input type number in MarkingPeriods.php\n\nChanges in 8.4\n--------------\n- SQL GRADEBOOK_GRADES table: Change comment column type to text in Update.fnc.php & rosariosis.sql\n- Increase Grades Comment input maxlength to 500 chars in Grades.php\n- Fix use more coherent number_format() precision & no thousand separator in Percent.php, Assignments.php, StudentGrades.php, Grades.fnc.php & EditReportCardGrades.php\n- SQL order fields list by Category & SORT_ORDER in AssignOtherInfo.php\n- Fix SQL error numeric field overflow when entering percent > 100 in Assignments.php\n- Comments length > 60 chars, responsive table ColorBox in EditReportCardGrades.php, FinalGrades.php, Grades.php, InputFinalGrades.php & StudentGrades.php\n- Add File Attached to Incomes in Incomes.php & Accounting/functions.inc.php\n- Add File Attached to Expenses in Expenses.php\n- SQL ACCOUNTING_INCOMES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Fix SQL error when no user in session in Template.fnc.php\n- Correct help text note for User deletion in Help_en.php & help.po\n\nChanges in 8.3.1\n----------------\n- Fix SQL exclude fields of 'files' type in Substitutions.php\n- SQL order fields list by Category & SORT_ORDER in Substitutions.php\n- Fix force numeric separator \".\" when no en_US locale, use C locale in Warehouse.php\n- Fix Advanced Search > General Info text fields when adding Username in Search.fnc.php\n\nChanges in 8.3\n--------------\n- Fix PHP Warning non-numeric value encountered, use rounded percent grade in StudentGrades.php\n- Security Fix reflected XSS: encode HTML special chars for search_term in Courses.php\n- Add File Attached to Staff Payments in StaffPayments.php & Accounting/functions.inc.php\n- Add File Attached to Payments in StudentPayments.php & Student_Billing/functions.inc.php\n- SQL ACCOUNTING_PAYMENTS table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- SQL BILLING_PAYMENTS table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add help note for student deletion & translate in Help_en.php & help.po\n- Add RosarioSIS URL to image path in MarkDownHTML.fnc.php\n- Fix SQL error invalid byte sequence for encoding \"UTF8\": 0xde 0x20 in Security.php\n\nChanges in 8.2.1\n----------------\n- Fix SQL for Warning when only 0 points assignments in Assigments.php\n\nChanges in 8.2\n--------------\n- Fix replace regex: remove slash & allow space in FileUpload.fnc.php\n- Always Use Last Year's Picture if Missing in PrintClassLists.php\n- Fix #329 SQL error division by zero in t_update_mp_stats(): set min Credits to 1 in Courses.fnc.php\n- Fix SQL error when Teacher name has single quote in Courses.php\n- CSS FlatSIS remove useless line-height for tabs in stylesheet.css\n\nChanges in 8.1.1\n----------------\n- Fix security issue #328 unauthenticated access to Side.php in Warehouse.php, thanks to @ijdpuzon\n- Fix security issue #328 sanitize `$_POST` school, syear, mp & period parameters in Side.php\n\nChanges in 8.1\n--------------\n- Remove @ error control operator on pg_exec: allow PHP Warning in database.inc.php\n- Fix Address Field sequence name in AddressFields.php\n- Remove deprecated DBSeqConvertSerialName() function in database.inc.php\n- Fix Conflict Warning displayed twice in Courses.php\n- Fix PHP Notice Undefined index in miscExport.fnc.php\n- Fix SQL error when Student / Staff ID is hacked / not an integer in URL in Current.php\n- SQL ACCOUNTING_SALARIES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add File Attached to Salaries in Salaries.php & Accounting/functions.inc.php\n- SQL BILLING_FEES table: Add FILE_ATTACHED column in Update.fnc.php & rosariosis.sql\n- Add File Attached to Fees in StudentFees.php & Student_Billing/functions.inc.php\n- Fix Student Widgets for Advanced Search exports in GetStaffList.fnc.php, GetStuList.fnc.php & Search.inc.php\n- Add Export fields list (form) & Export fields list + extra SQL (student list) action hooks in Export.php & Actions.php\n- Do not remove Full Day and Half Day school periods from the Schedule table in PrintSchedules.php\n- Fix 403 Forbidden error due to pipe \"|\" in URL when using Apache 5G rules in Widgets.fnc.php\n\nChanges in 8.0.4\n----------------\n- Fix default Student/Parent program in Attendance/Menu.php\n\nChanges in 8.0.3\n----------------\n- Fix #324 Show Student Photo in Transcripts.fnc.php\n\nChanges in 8.0.2\n----------------\n- Fix User Widgets Search Terms in Users/Search.inc.php\n\nChanges in 8.0.1\n----------------\n- Fix #322 PHP syntax error, unexpected ')' in DailySummary.php\n\nChanges in 8.0\n--------------\n- Add Total from Payments & Total from Fees fields to Advanced Report in Export.php\n- Upgrade grunt, grunt-contrib-cssmin, grunt-contrib-uglify & grunt-contrib-watch & remove grunt-phpdoc in package.json & Gruntfile.js\n- CSS minification optimizations in stylesheet.css & stylesheet_wkhtmltopdf.css\n- JS uglify optimizations in plugins.min.js & plugins.min.js.map\n- Upgrade Chart.js from 2.9.3 to 3.4.1 & save 40KB in chart.min.js & Charts.fnc.php\n- Fix \"The gradebook configuration has been modified.\" note appearing twice in Grades/Configuration.php\n- Add warning in case all Assignments in Type have 0 Points (Extra Credit) in Assignments.php\n- Update French & Spanish translations in rosariosis.po\n- CSS FlatSIS shorten menu width & submenu links height + better contrast in stylesheet.css\n- CSS FlatSIS list square bullets in stylesheet.css\n- Default theme is now FlatSIS in rosariosis.sql\n- CSS remove .radio-attendance-code class in stylesheet.css, rtl.css & TakeAttendance.php\n- CSS remove Open Sans SVG fonts, format is deprecated in font.css & WPadmin/fonts/open\n- Upgrade marked.js 0.8.2 to version 1.2.9 in assets/js/marked/\n- Fix SQL error when $staff_id is 0 (no user in session) in Config.fnc.php\n- Remove Waived Fees from list in Student_Billing/functions.inc.php\n- New ROSARIO_DISABLE_ADDON_DELETE optional config constant in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- Add-on disable delete in Modules.inc.php & Plugins.inc.php\n- Merge Daily Transactions & Daily Totals programs in DailyTransactions.php & DailyTotals.php\n- Remove Daily Totals program from Student Billing & Accounting menus in Menu.php & rosariosis.sql\n- Fix Totals calculus in Accounting/includes/DailyTotals.php\n- Multibyte strings: check if not UTF-8 first to avoid cost of setting in Warehouse.php\n- Fix false positive Hacking Attempt on Print button click when no user in session in Warehouse.php\n- Merge Attendance Chart & Absence Summary programs in DailySummary.php & StudentSummary.php & Help_en.php\n- Remove Absence Summary program from Attendance menu in Menu.php, Help_en.php & rosariosis.sql\n\nChanges in 7.9.3\n----------------\n- Fix #318 PHP warning non-numeric value encountered for $LO_dir in ListOutput.fnc.php, thanks to @AhmadKakarr\n\nChanges in 7.9.2\n----------------\n- Fix SQL error when single quote in Course Title in InputFinalGrades.php\n- Fix include Semester course periods in the Schedule table in Schedule.inc.php\n- Fix #316 CSRF security issue set cookie samesite to strict, thanks to @huntrdev\n\nChanges in 7.9.1\n----------------\n- Fix remove file when has single quote in its name and actually delete file in Student.php, User.php & Schools.php\n- Fix download backup filename when contains spaces: use double quotes in DatabaseBackup.php\n\nChanges in 7.9\n--------------\n- Update default School Year to 2021 in rosariosis.sql & config.inc.sample.php\n\nChanges in 7.8.4\n----------------\n- Fix User Marking Period title in GradeBreakdown.php\n- SQL ORDER BY Teacher name in GradeBreakdown.php\n\nChanges in 7.8.3\n----------------\n- Fix trim 0 (float) when percent > 1,000: do not use comma for thousand separator in Grades.php & ProgressReports.php\n\nChanges in 7.8.2\n----------------\n- Fix try searching plural forms adding an 's' to singular form and with number set to 1 in Translator.php\n\nChanges in 7.8.1\n----------------\n- CSS Edge browser fix: Do not merge focus-within styles with hover styles in stylesheet.css, stylesheet_wkhtmltopdf.css & rtl.css\n\nChanges in 7.8\n--------------\n- Handle `multiple` files attribute in warehouse.js & Inputs.php\n- Add FileUploadMultiple(). Handle `multiple` files attribute for FileUpload() in FileUpload.fnc.php\n- Remove Reset button from Find a Student / User forms in Students/Search.inc.php & Users/Search.inc.php\n- CSS & JS open submenu on focus & focus-within in warehouse.js, stylesheet.css & rtl.css\n- CSS menu link & button color on focus in stylesheet.css & colors.css\n- Fix check students Course Status in PrintClassLists.php, PrintClassPictures.php, ClassSearchWidget.fnc.php, Referrals.php, EmailReferral.fnc.php & Widgets.fnc.php\n- Add Include Inactive Students checkbox in MasterScheduleReport.php & RequestsReport.php\n- Fix unset current student (check Course Status) when MP updated in Side.php\n- SQL fix Discipline Referrals using WHERE EXISTS in Widgets.fnc.php\n- Numeric Discipline field: invert values so BETWEEN works in Widgets.fnc.php\n- Numeric Discipline field: input type number in Widgets.fnc.php\n- Fix SQL error missing FROM ADDRESS table in GetStuList.fnc.php\n\nChanges in 7.7\n--------------\n- Move Dashboard() call outside in Dashboard.fnc.php & Portal.php\n- Add .xlsm,.key,.midi,.aif,.mpeg,.h264,.mkv,.log,.email,.eml,.emlx,.msg,.vcf extensions to white list in FileUpload.fnc.php\n- Add \"Last Name Middle Name First Name\" option to Display Name in GetStuList.fnc.php & Configuration.php\n- Fix SQL error escape course title in StudentGrades.php\n- SQL Remove Salaries having a Payment (same Amount & Comments (Title), after or on Assigned Date) in Accounting/functions.inc.php\n- SQL match Payment Comments LIKE Fee Title in Student_Billing/functions.inc.php\n- CSS fix list line-height in FlatSIS/stylesheet_wkhtmltopdf.css\n\nChanges in 7.6.1\n----------------\n- Fix #307 XSS update CodeIgniter Security class in classes/Security.php, thanks to @DustinBorn\n- Move Portal Poll vote code to modfunc in PortalPollNotes.php & Portal.php\n- Fix #308 Unauthenticated SQL injection. Use sanitized `$_REQUEST` in Portal.php, thanks to @DustinBorn\n- Fix #308 sanitize key. Pass array keys through function in Warehouse.php, thanks to @DustinBorn\n- Fix #309 unset `$_SESSION` so user cannot maintain dummy session in PasswordReset.php, thanks to @DustinBorn\n- Remove use of `$_SESSION['STAFF_ID'] === '-1'` in User.fnc.php & PasswordReset.php\n\nChanges in 7.6\n--------------\n- Fix login password with single quote, use POST in index.php & Preferences.php\n- HTML Use #! instead of JS return false to not go back to top in Buttons.php & Profiles.php\n- JS remove warehouse.min.js & include warehouse.js inside plugins.min.js in Gruntfile.js, assets/js/ & Warehouse.php\n- Fix PHP8 compatibility issues (warnings & fatal errors), system wide\n- Fix save new Grade with \"0\" as Title in ReportCardGrades.php\n- PHP8 no xmlrpc ext: load xmlrpc compat functions in plugins/Moodle/client.php, xmlrpc.php, XML_RPC.php, XmlrpcDecoder.php & XmlrpcEncoder.php\n- Fix xmlrpc nested arrays, use param & value elements instead in XmlrpcEncoder.php\n- Fix SQL Total points only select assignments for CP teacher (teacher may have changed) in Grades.php, InputFinalGrades.php, StudentGrades.php & GradebookBreakdown.php\n- Fix SQL Grades sort order in GradebookBreakdown.php\n- Add Login form link action hook in index.php & Actions.php\n- SQL fix Report Card Grades insert in rosariosis_fr.sql\n- SQL fix ORDER Report Cards by Student name & Course list by Title in ReportCards.fnc.php\n- SQL fix error invalid input syntax for integer in DailySummary.php\n- Replace tested on Ubuntu 16.04 with 18.04 (Buster) in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n\nChanges in 7.5\n--------------\n- HTML fix Student Assignment Submission display in StudentAssignments.fnc.php\n- Percent rounding to 2 decimal places is new School default in \\_makeLetterGrade.fnc.php\n- CSS Fix widefat table border color when rendered in PDF inside Chrome in colors.css\n- Add phpwkhtmltopdf class & remove Wkhtmltopdf class in classes/\n- Use phpwkhtmltopdf class instead of Wkhtmltopdf (more reliable & faster) in PDF.php\n- Add Report Cards PDF footer action hook in ReportCards.fnc.php & Actions.php\n- Transcripts PDF header action hook: echo your custom text before or append it to $header_html to display it after in Transcripts.fnc.php\n- Transcripts PDF footer action hook: echo your custom text before or append it to $footer_html to display it after in Transcripts.fnc.php\n- Add .transcript-certificate-block1 & .transcript-certificate-block2 CSS classes in Transcripts.fnc.php\n- Add .report-card-free-text CSS class in ReportCards.fnc.php\n- Delete any attendance for this day & student prior to update in FixDailyAttendance.php\n- Use \\_makeLetterGrade() for Percent grade so it reflects Teacher's Score rounding configuration in Grades.php & ProgressReports.php\n- Fix Add Credits only for Report Cards in ReportCards.fnc.php\n- Fix SQL error invalid input syntax for integer (Class Rank input) in Widgets.fnc.php\n- HTML Grades GPA Widget: use number input & check Weighted by default in Widgets.fnc.php\n\nChanges in 7.4\n--------------\n- List sort comment: trim & fix position in ListOutput.fnc.php\n- Fix #303 Raw value in comment so we can sort Percent column the right way in Grades.php, thanks to @dd02\n- Add Database Backup link to header in Rollover.php\n- Add Course Widget configuration option: Popup window or Pull-Down in Configuration.php & Help_en.php\n- Add Course Widget: select / Pull-Down in Widgets.fnc.php\n- Update French & Spanish translations in rosariosis.po, help.po\n- Add Total Credits in ReportCards.fnc.php\n- Do not display \"General Comments\" title if no comments in ReportCards.fnc.php\n- HTML display rows of 3 School Period checkboxes in AddAbsences.php\n- Comment input maxlength increased to 500 in InputFinalGrades.php\n- Comment Code input field is required in ReportCardCommentCodes.php\n- Add php-zip extension to list in INSTALL.md\n- Check for zip extension in diagnostic.php\n- Fix SQL error integer out of range in Food_Service/Students/Accounts.php\n- French translation: replace \"Effacer\" with \"Supprimer\" in rosariosis.po & help.po\n- Fix Teacher Programs Progress Report PDF, do not echo form in TeacherPrograms.php\n\nChanges in 7.3.1\n----------------\n- Fix admin override: no input div when values are not saved yet in Grades/Configuration.php\n- Fix #304 Do not include Excused (`*` or -1) grades in GradebookBreakdown.php, thanks to @dd02\n- Fix #304 regression since 5.0 Count students in GradebookBreakdown.php, thanks to @dd02\n- Fix #304 Totals count exclude Extra Credit assignments when Total Points is 0 for the Type, thanks to @dd02\n\nChanges in 7.3\n--------------\n- SQL Replace AND p.ATTENDANCE='Y' with AND cp.DOES_ATTENDANCE IS NOT NULL in Letters.php, StudentLabels.fnc.php, HonorRoll.fnc.php & Reminders.php\n- SQL remove unused SELECT ROOM in HonorRoll.fnc.php\n- Translate database on add-on install: run 'install_fr.sql' file in Modules.inc.php, Plugins.inc.php, modules/README.md & plugins/README.md\n- CSS remove wildcard rules in stylesheet.css & wkhtmltopdf.css\n- CSS remove browser input outline on focus in colors.css\n- Fix Format Phone Number for US in GetStuList.fnc.php, thanks to @dzungdo\n- Attendance dashboard limit Absences to past days in Dashboard.inc.php\n- Fix #299 Remove trailing slash \"/\" or dash \"-\" or dot \".\" from date in DailySummary.php\n- Fix #300 Include Full Day and Half Day school periods in the schedule table in PrintSchedules.php, thanks to @dzungdo\n- Update translations complete % in locale/REFERENCE.md\n- Add tested on CentOS & Google Chrome in INSTALL.md & INSTALL.pdf, thanks to @dd02\n- Add Before First Login form action hook in index.php & Actions.php\n- Fix regression since 7.0 not rolled items are checked in Rollover.php\n\nChanges in 7.2.4\n----------------\n- Take in Account Calendar Day Minutes in UpdateAttendanceDaily.fnc.php\n- Fix regression since 5.3 Return false if School Periods Length sum is 0 in UpdateAttendanceDaily.fnc.php, thanks to @dzungdo\n\nChanges in 7.2.3\n----------------\n- Fix regression since 5.9 search text User Field in Search.fnc.php, thanks to @dzungdo\n\nChanges in 7.2.2\n----------------\n- Fix SQL error foreign keys: Roll Schools before rolling Student Enrollment in Rollover.php\n- Fix SQL error table ADDRESS specified more than once in GetStuList.fnc.php\n\nChanges in 7.2.1\n----------------\n- Fix ParseMLField for Username field category in Preferences.php\n- Fix PHP Warning check requested locale exists in Warehouse.php\n- Add Attendance Codes help for (Lunch) Categories in Help_en.php & help.po\n- Fix SQL error multiple rows returned by a subquery in CreateParents.php\n\nChanges in 7.2\n--------------\n- Add Grade Level breakdown in StudentFieldBreakdown.php\n- Add link to Student Info in AddDrop.php\n- Limit students to User schools in AddDrop.php\n- Order Day, Month & Year inputs depending on User date preference in Date.php\n- SQL fix only display enrolled students in AddStudents.php\n- Link to Student Info redirects to right school in AddStudents.php\n- Reset password variable for each Contact in CreateParents.php\n\nChanges in 7.1.4\n----------------\n- Fix infinite loop when username already exists in CreateParents.php\n\nChanges in 7.1.3\n----------------\n- Fix #297 regression since 6.9 & SQL error in StudentSummary.php\n\nChanges in 7.1.2\n----------------\n- Fix SQL error Include Inactive Students for admin in PrintClassLists.php\n\nChanges in 7.1.1\n----------------\n- Fix #296 Include Inactive Students for admin in PrintClassLists.php\n\nChanges in 7.1\n--------------\n- Final Grading Percentages: add \"No quarters found\" error in Configuration.php\n- Add Start Date input in Scheduler.php\n- Export (Excel) date to YYYY-MM-DD format (ISO) in Date.php & Preferences.php\n- Select Date Format: Add Preferences( 'DATE' ) in User.fnc.php, Preferences.php, Date.php & Side.php\n- Fix SQL error TITLE column limit to 50 characters in GradeLevels.php\n- HTML remove radio buttons (File Attached or Embed Link) in PortalNotes.php & PortalPollsNotes.fnc.php\n- Add Grade Level breakdown in StudentBreakdown.php\n- Include Credits in ReportCards.fnc.php\n\nChanges in 7.0.4\n----------------\n- Fix #295 regression since 7.0 cannot save N/A date in Date.php\n\nChanges in 7.0.3\n----------------\n- Fix Multiple School Periods: Course Period School Period does not match, skip in Scheduler.php\n\nChanges in 7.0.2\n----------------\n- JS Fix search form onsubmit in Export.php\n\nChanges in 7.0.1\n----------------\n- Fix #292 System error \"blocked access to local file\" with wkhtmltopdf 0.12.6 in Wkhtmltopdf.php\n\nChanges in 7.0\n--------------\n- Update Markdownify from v2.1.11 to v2.3.1 in classes/Markdownify/*\n- Update Parsedown from v1.6.0 to v1.7.4 in classes/Parsedown.php\n- Update MoTranslator from v3.4 to v4.0 in Warehouse.php, Help.fnc.php & classes/MoTranslator/*\n- Fix 'School' translation when using MoTranslator in Schedule.inc.php & rosariosis.po\n- Fix '%s Handbook' translation when using MoTranslator in Help.php\n- CSS fix align \"+\" New Event icon to bottom in Calendar.php, CalendarDay.inc.php, stylesheet.css & zreponsive.css\n- Fix Day Number when multiple calendars and school years in CalendarDay.inc.php, DayToNumber.inc.php\n- Fix Numbered days display in SchoolPeriodsSelectInput.fnc.php & Courses.fnc.php\n- SQL improve Numbered days in AddAbsences.php, Administration.php, DailySummary.php, TakeAttendance.php, TeacherCompletion.php, UpdateAttendanceDaily.fnc.php & Portal.php\n- Place Rollover under Utilities separator in Menu.php\n- Merge Schedule Report & Master Schedule Report in Menu.php, MasterScheduleReport.php, ScheduleReport.php & rosariosis.sql\n- Add Students column to report in RequestsReport.php\n- Merge Requests Report & Unfilled Requests in Menu.php, RequestsReport.php, UnfilledRequests.php, Scheduler.php, Help_en.php & rosariosis.sql\n- Merge Average Daily Attendance & Average Attendance by Day in Menu.php, Percent.php, Help_en.php, help.po & rosariosis.sql\n- Remove \"Happy []...\" text in Portal.php\n- HTML remove \"Demographics\" header to gain space on PDF in AttendanceSummary.php\n- SQL Update ATTENDANCE_CODE (admin) when is NULL in TakeAttendance.php\n- CSS Add .widefat.files class in StudentsUsersInfo.fnc.php & stylesheet.css\n- CSS WPadmin more padding for list rows, menu links & footer help in stylesheet.css\n- CSS FlatSIS less padding for list row, header & popTable in stylesheet.css\n- CSS FlatSIS reduce body line-height & fix Dashboard tipmsg border in stylesheet.css\n- Format \"Show Available Seats\" & \"Print Schedule\" headers in Schedule.php\n- Remove $fy_id global variable in Schedule.php\n- HTML Add tooltips & notes in Rollover.php\n- Fix current CP Marking Period check on update in Courses.php\n- Fix limit list results to 1000, do not remove 1st result in ListOutput.fnc.php\n- Add $RosarioErrorsAddress config variable in config.inc.sample.php\n- Fix $RosarioNotifyAddress config variable description in INSTALL.md, INSTALL_es.md & INSTALL_fr.md\n- SQL no access to Custom \"My Report\" program for admin by default in rosariosis.sql\n- JS MarkdownToHTML No MarkDown in text, return raw text in warehouse.js\n- Fix Delete from other Student/User Info tabs in Student.php & User.php\n- Remove deprecated since 4.5 rollover_* action hooks in Rollover.php & Actions.php\n- Fix Error: There is no column for The value for 0. This value was not saved in SaveData.fnc.php\n- Fix Do not Save / Export Medical tab lists in Medical.inc.php\n\n\n### Old versions CHANGES\n- [CHANGES for versions 5 and 6](CHANGES_V5_6.md).\n- [CHANGES for versions 3 and 4](CHANGES_V3_4.md).\n- [CHANGES for versions 1 and 2](CHANGES_V1_2.md).\n", "<?php\n/**\n * Registration Save functions\n *\n * @since 6.6\n */\n\n/**\n * Save Registration\n *\n * @param array $config Registration Form Config.\n * @param array $values Requested values: address, parent, contact & student.\n *\n * @return bool\n */\nfunction RegistrationSave( $config, $values )\n{\n\tif ( ! $config\n\t\t|| ! $values )\n\t{\n\t\treturn false;\n\t}\n\n\t$address_id = RegistrationSaveAddress( $config['address'], $values['address'] );\n\n\tforeach ( (array) $config['parent'] as $id => $config_parent )\n\t{\n\t\tif ( empty( $values['parent'][ $id ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$values['parent'][ $id ]['fields'] = FilterCustomFieldsMarkdown( 'PEOPLE_FIELDS', 'parent', $id, 'fields' );\n\n\t\t$contact_id = RegistrationSaveContact( $config_parent, issetVal( $values['parent'][ $id ] ) );\n\n\t\t$contact_address_id = 0;\n\n\t\tif ( empty( $config_parent['address'] )\n\t\t\t&& $id == 0 )\n\t\t{\n\t\t\t// Parent 1, same Address as Student.\n\t\t\t$config_parent['address'] = '1';\n\t\t}\n\t\telseif ( $config_parent['address'] == '2' )\n\t\t{\n\t\t\t// New Address.\n\t\t\t$contact_address_id = RegistrationSaveAddress( [], issetVal( $values['parent'][ $id ]['address'] ) );\n\t\t}\n\n\t\tRegistrationSaveJoinContact(\n\t\t\t$contact_id,\n\t\t\t// New Address or Same as Student or No Address.\n\t\t\t( ! empty( $contact_address_id ) ? $contact_address_id : ( $config_parent['address'] == '1' ? $address_id : 0 ) ),\n\t\t\t$config_parent\n\t\t);\n\t}\n\n\tforeach ( (array) $config['contact'] as $id => $config_contact )\n\t{\n\t\tif ( empty( $values['parent'][ $id ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$values['contact'][ $id ]['fields'] = FilterCustomFieldsMarkdown( 'PEOPLE_FIELDS', 'contact', $id, 'fields' );\n\n\t\t$contact_id = RegistrationSaveContact( [], issetVal( $values['contact'][ $id ] ) );\n\n\t\t$contact_address_id = 0;\n\n\t\tif ( $config_contact['address'] == '2' )\n\t\t{\n\t\t\t// New Address.\n\t\t\t$contact_address_id = RegistrationSaveAddress( $contact_id, issetVal( $values['contact'][ $id ]['address'] ) );\n\t\t}\n\n\t\tRegistrationSaveJoinContact(\n\t\t\t$contact_id,\n\t\t\t// New Address or Same as Student or No Address.\n\t\t\t( ! empty( $contact_address_id ) ? $contact_address_id : ( $config_contact['address'] == '1'  ? $address_id : 0 ) ),\n\t\t\t$config_contact\n\t\t);\n\t}\n\n\tRegistrationSaveStudent( $config['student'], $values['student'] );\n\n\treturn true;\n}\n\n/**\n * Save Registration using Sibling Address & contact Information\n *\n * @param array $config     Registration Form Config.\n * @param array $values     Requested values: address, parent, contact & student.\n * @param int   $student_id Sibling ID.\n *\n * @return bool\n */\nfunction RegistrationSaveSibling( $config, $values, $student_id )\n{\n\tif ( ! $config\n\t\t|| ! $values\n\t\t|| ! $student_id )\n\t{\n\t\treturn false;\n\t}\n\n\t$address_id = DBGetOne( \"SELECT ADDRESS_ID\n\t\tFROM STUDENTS_JOIN_ADDRESS\n\t\tWHERE STUDENT_ID='\" . $student_id . \"'\n\t\tAND MAILING='Y'\n\t\tAND RESIDENCE='Y'\" );\n\n\tif ( $address_id )\n\t{\n\t\tRegistrationSaveJoinAddress( $address_id );\n\t}\n\n\tRegistrationSaveSiblingContacts( $student_id );\n\n\tRegistrationSaveStudent( $config['student'], $values['student'] );\n\n\treturn true;\n}\n\n/**\n * Save Registration Join Sibling Contacts to Student\n *\n * @param int $student_id Sibling ID.\n */\nfunction RegistrationSaveSiblingContacts( $student_id )\n{\n\t$contacts_RET = DBGet( \"SELECT PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION\n\t\tFROM STUDENTS_JOIN_PEOPLE\n\t\tWHERE STUDENT_ID='\" . $student_id . \"'\" );\n\n\tforeach ( (array) $contacts_RET as $contact )\n\t{\n\t\t$sql_values = db_seq_nextval( 'students_join_people_id_seq' ) . \",'\" . UserStudentID() . \"','\" .\n\t\t\t$contact['PERSON_ID'] . \"','\" . $contact['ADDRESS_ID'] . \"','\" . $contact['CUSTODY'] . \"','\" .\n\t\t\t$contact['EMERGENCY'] . \"','\" . $contact['STUDENT_RELATION'] . \"'\";\n\n\t\tDBQuery( \"INSERT INTO STUDENTS_JOIN_PEOPLE (ID,STUDENT_ID,PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION)\n\t\t\tVALUES(\" . $sql_values . \")\" );\n\t}\n}\n\n/**\n * Save Registration Student Info / Custom Fields.\n * Limit custom fields to the Categories in config.\n *\n * @param array $config Student Info config.\n * @param array $values Student Info values.\n *\n * @return bool\n */\nfunction RegistrationSaveStudent( $config, $values )\n{\n\tif ( ! $config['fields']\n\t\t|| ! $values )\n\t{\n\t\treturn false;\n\t}\n\n\t$category_ids = \"'\" . str_replace( '||', \"','\", mb_substr( $config['fields'], 2, -2 ) ) . \"'\";\n\n\t$custom_fields_RET = DBGet( \"SELECT ID\n\t\tFROM CUSTOM_FIELDS\n\t\tWHERE CATEGORY_ID IN(\" . $category_ids . \")\", [], [ 'ID' ] );\n\n\t$allowed_columns = array_keys( $custom_fields_RET );\n\n\t// Textarea fields MarkDown sanitize.\n\t$values = FilterCustomFieldsMarkdown( 'CUSTOM_FIELDS', 'students' );\n\n\t$sql = \"UPDATE STUDENTS SET \";\n\n\t$go = false;\n\n\tforeach ( (array) $values as $column => $value )\n\t{\n\t\tif ( ! in_array( str_replace( 'CUSTOM_', '', $column ), $allowed_columns ) )\n\t\t{\n\t\t\t// Limit custom fields to the Categories in config.\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( is_array( $value ) )\n\t\t{\n\t\t\t// Select Multiple from Options field type format.\n\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t}\n\n\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\n\t\t$go = true;\n\t}\n\n\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE STUDENT_ID='\" . UserStudentID() . \"'\";\n\n\tif ( $go )\n\t{\n\t\tDBQuery( $sql );\n\t}\n\n\treturn true;\n}\n\n/**\n * Save Registration Address (your/main or contact) & Address Fields if any.\n * And join address to Student.\n *\n * @uses RegistrationSaveJoinAddress()\n *\n * @param array $config Address config or empty.\n * @param array $values Student Info values.\n *\n * @return int Address ID.\n */\nfunction RegistrationSaveAddress( $config, $values )\n{\n\tstatic $inserted_addresses = [];\n\n\tif ( empty( $values['ADDRESS'] ) )\n\t{\n\t\treturn 0;\n\t}\n\n\t$address_key = preg_replace( '/[^0-9A-Za-z]+/', '', mb_strtolower( $values['ADDRESS'] ) );\n\n\tif ( isset( $inserted_addresses[ $address_key ] ) )\n\t{\n\t\treturn $inserted_addresses[ $address_key ];\n\t}\n\n\t$address_id = DBSeqNextID( 'address_address_id_seq' );\n\n\t$sql = \"INSERT INTO ADDRESS \";\n\n\t$fields = 'ADDRESS_ID,ADDRESS,CITY,STATE,ZIPCODE,';\n\n\t$values_sql = \"'\" . $address_id . \"','\" . $values['ADDRESS'] . \"','\" . $values['CITY'] . \"','\" . $values['STATE'] . \"','\" . $values['ZIPCODE'] . \"',\";\n\n\t// Textarea fields MarkDown sanitize.\n\t$values = FilterCustomFieldsMarkdown( 'ADDRESS_FIELDS', 'address' );\n\n\tif ( $config\n\t\t&& ! empty( $values['fields'] ) )\n\t{\n\t\tforeach ( (array) $values['fields'] as $column => $value )\n\t\t{\n\t\t\tif ( is_array( $value ) )\n\t\t\t{\n\t\t\t\t// Select Multiple from Options field type format.\n\t\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t\t}\n\n\t\t\tif ( ! empty( $value )\n\t\t\t\t|| $value == '0' )\n\t\t\t{\n\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t$values_sql .= \"'\" . $value . \"',\";\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\tDBQuery( $sql );\n\n\tRegistrationSaveJoinAddress( $address_id );\n\n\t$inserted_addresses[ $address_key ] = $address_id;\n\n\treturn $address_id;\n}\n\n/**\n * Save Registration Join Address to Student\n * First Address is your/main address: Mailing & Residence checked.\n *\n * @param int $address_id Address ID.\n */\nfunction RegistrationSaveJoinAddress( $address_id )\n{\n\tstatic $inserted_address;\n\n\t// Contact Address.\n\t$students_join_address = [\n\t\t'MAILING' => '',\n\t\t'RESIDENCE' => '',\n\t\t'BUS_PICKUP' => '',\n\t\t'BUS_DROPOFF' => '',\n\t];\n\n\tif ( empty( $inserted_address ) )\n\t{\n\t\t// Your Address.\n\t\t$students_join_address = [\n\t\t\t'MAILING' => 'Y',\n\t\t\t'RESIDENCE' => 'Y',\n\t\t\t'BUS_PICKUP' => ProgramConfig( 'students', 'STUDENTS_USE_BUS' ),\n\t\t\t'BUS_DROPOFF' => ProgramConfig( 'students', 'STUDENTS_USE_BUS' ),\n\t\t];\n\n\t\t$inserted_address = true;\n\t}\n\n\tDBQuery( \"INSERT INTO STUDENTS_JOIN_ADDRESS (ID,STUDENT_ID,ADDRESS_ID,\n\t\tRESIDENCE,MAILING,BUS_PICKUP,BUS_DROPOFF)\n\t\tvalues(\" . db_seq_nextval( 'students_join_address_id_seq' ) . \",'\" .\n\t\t\tUserStudentID() . \"','\" . $address_id . \"','\" .\n\t\t\t$students_join_address['MAILING'] . \"','\" .\n\t\t\t$students_join_address['RESIDENCE'] . \"','\" .\n\t\t\t$students_join_address['BUS_PICKUP'] . \"','\" .\n\t\t\t$students_join_address['BUS_DROPOFF'] . \"')\" );\n}\n\n/**\n * Save Registration Contact (parent, grandparent, etc.)\n *\n * @uses RegistrationSaveContactNameFields()\n * @uses RegistrationSaveContactInfo()\n *\n * @param array $config Parent or contact config.\n * @param array $values Contact values.\n *\n * @return int Contact ID.\n */\nfunction RegistrationSaveContact( $config, $values )\n{\n\t$contact_id = RegistrationSaveContactNameFields( $config, $values );\n\n\tif ( ! $contact_id )\n\t{\n\t\treturn 0;\n\t}\n\n\tRegistrationSaveContactInfo( $contact_id, $config, $values );\n\n\treturn $contact_id;\n}\n\n/**\n * Join Registration Contact to Student (Relation) and Address\n *\n * @param int   $contact_id Contact ID.\n * @param int   $address_id Address ID.\n * @param array $config     Contact config.\n *\n * @return bool.\n */\nfunction RegistrationSaveJoinContact( $contact_id, $address_id, $config )\n{\n\tif ( ! $contact_id )\n\t{\n\t\treturn false;\n\t}\n\n\t$sql_values = db_seq_nextval( 'students_join_people_id_seq' ) . \",'\" . UserStudentID() . \"','\" .\n\t\t$contact_id . \"','\" . $address_id . \"','\" . issetVal( $config['custody'] ) . \"','\" .\n\t\tissetVal( $config['emergency'] ) . \"','\" . $config['relation'] . \"'\";\n\n\tDBQuery( \"INSERT INTO STUDENTS_JOIN_PEOPLE (ID,STUDENT_ID,PERSON_ID,ADDRESS_ID,CUSTODY,EMERGENCY,STUDENT_RELATION)\n\t\tVALUES(\" . $sql_values . \")\" );\n\n\treturn true;\n}\n\n/**\n * Save Registration Contact Name and Fields (if any).\n *\n * @param array $config Contact config.\n * @param array $values Contact values.\n *\n * @return int Contact ID.\n */\nfunction RegistrationSaveContactNameFields( $config, $values )\n{\n\tif ( empty( $values['FIRST_NAME'] )\n\t\t|| empty( $values['LAST_NAME'] ) )\n\t{\n\t\treturn 0;\n\t}\n\n\t$person_id = DBSeqNextID( 'people_person_id_seq' );\n\n\t$sql = \"INSERT INTO PEOPLE \";\n\n\t$fields = 'PERSON_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,';\n\n\t$values_sql = \"'\" . $person_id . \"','\" . $values['LAST_NAME'] . \"','\" . $values['FIRST_NAME'] . \"','\" . $values['MIDDLE_NAME'] . \"',\";\n\n\tif ( $config\n\t\t&& ! empty( $values['fields'] ) )\n\t{\n\t\tforeach ( (array) $values['fields'] as $column => $value )\n\t\t{\n\t\t\tif ( is_array( $value ) )\n\t\t\t{\n\t\t\t\t// Select Multiple from Options field type format.\n\t\t\t\t$value = implode( '||', $value ) ? '||' . implode( '||', $value ) : '';\n\t\t\t}\n\n\t\t\tif ( ! empty( $value )\n\t\t\t\t|| $value == '0' )\n\t\t\t{\n\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t$values_sql .= \"'\" . $value . \"',\";\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\tDBQuery( $sql );\n\n\treturn $person_id;\n}\n\n/**\n * Save Registration Contact Information\n *\n * @param int   $contact_id Contact ID.\n * @param array $config     Contact config.\n * @param array $values     Contact values.\n */\nfunction RegistrationSaveContactInfo( $contact_id, $config, $values )\n{\n\tif ( empty( $values['info'] ) )\n\t{\n\t\treturn;\n\t}\n\n\tforeach ( (array) $values['info'] as $column => $value )\n\t{\n\t\tif ( ! empty( $value )\n\t\t\t|| $value == '0' )\n\t\t{\n\t\t\t$sql = \"INSERT INTO PEOPLE_JOIN_CONTACTS \";\n\n\t\t\t$fields = 'ID,PERSON_ID,TITLE,VALUE,';\n\n\t\t\t$values_sql = db_seq_nextval( 'people_join_contacts_id_seq' ) . \",'\" .\n\t\t\t\t$contact_id . \"','\" . $column . \"','\" . $value . \"',\";\n\n\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values_sql, 0, -1 ) . ')';\n\n\t\t\tDBQuery( $sql );\n\t\t}\n\t}\n}\n", "\t<?php\n\nrequire_once 'ProgramFunctions/MarkDownHTML.fnc.php';\nrequire_once 'modules/School_Setup/includes/CalendarDay.inc.php';\n\nDrawHeader( ProgramTitle() );\n\n// Set Month.\nif ( ! isset( $_REQUEST['month'] )\n\t|| mb_strlen( $_REQUEST['month'] ) !== 2\n\t|| (int) $_REQUEST['month'] != $_REQUEST['month'] )\n{\n\t$_REQUEST['month'] = date( 'm' );\n}\n\n// Set Year.\nif ( ! isset( $_REQUEST['year'] )\n\t|| mb_strlen( $_REQUEST['year'] ) !== 4\n\t|| (int) $_REQUEST['year'] != $_REQUEST['year'] )\n{\n\t$_REQUEST['year'] = date( 'Y' );\n}\n\nif ( isset( $_REQUEST['calendar_id'] ) )\n{\n\t$_REQUEST['calendar_id'] = (string) (int) $_REQUEST['calendar_id'];\n}\n\n// Create / Recreate Calendar.\nif ( $_REQUEST['modfunc'] === 'create'\n\t&& AllowEdit() )\n{\n\t$fy_RET = DBGet( \"SELECT START_DATE,END_DATE\n\t\tFROM SCHOOL_MARKING_PERIODS\n\t\tWHERE MP='FY'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\" );\n\n\t$fy = $fy_RET[1];\n\n\t// Get Calendars Info.\n\t$title_RET = DBGet( \"SELECT ac.CALENDAR_ID,ac.TITLE,ac.DEFAULT_CALENDAR,ac.SCHOOL_ID,\n\t\t(SELECT coalesce(SHORT_NAME,TITLE)\n\t\t\tFROM SCHOOLS\n\t\t\tWHERE SYEAR=ac.SYEAR\n\t\t\tAND ID=ac.SCHOOL_ID) AS SCHOOL_TITLE,\n\t\t(SELECT min(SCHOOL_DATE)\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID=ac.CALENDAR_ID) AS START_DATE,\n\t\t(SELECT max(SCHOOL_DATE)\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID=ac.CALENDAR_ID) AS END_DATE\n\t\tFROM ATTENDANCE_CALENDARS ac,STAFF s\n\t\tWHERE ac.SYEAR='\" . UserSyear() . \"'\n\t\tAND s.STAFF_ID='\" . User( 'STAFF_ID' ) . \"'\n\t\tAND (s.SCHOOLS IS NULL OR position(','||ac.SCHOOL_ID||',' IN s.SCHOOLS)>0)\n\t\tORDER BY \" . db_case( [ 'ac.SCHOOL_ID', \"'\" . UserSchool() . \"'\", 0, 'ac.SCHOOL_ID' ] ) . \",ac.DEFAULT_CALENDAR ASC,ac.TITLE\" );\n\n\t// Prepare table for Copy Calendar & add ' (Default)' mention.\n\t$copy_calendar_options = [];\n\n\t$recreate_calendar = false;\n\n\tforeach ( (array) $title_RET as $title )\n\t{\n\t\t$copy_calendar_options[ $title['CALENDAR_ID'] ] = $title['TITLE'];\n\n\t\tif ( AllowEdit()\n\t\t\t&& $title['DEFAULT_CALENDAR'] === 'Y'\n\t\t\t&& $title['SCHOOL_ID'] === UserSchool() )\n\t\t{\n\t\t\t$copy_calendar_options[ $title['CALENDAR_ID'] ] .= ' (' . _( 'Default' ) . ')';\n\t\t}\n\n\t\tif ( AllowEdit()\n\t\t\t&& isset( $_REQUEST['calendar_id'] )\n\t\t\t&& $title['CALENDAR_ID'] == $_REQUEST['calendar_id'] )\n\t\t{\n\t\t\t$recreate_calendar = $title;\n\t\t}\n\t}\n\n\t$div = false;\n\n\t$message = '<table class=\"valign-top fixed-col\"><tr class=\"st\">';\n\n\t// Title.\n\t$message .= '<td>' . TextInput(\n\t\t( $recreate_calendar ? $recreate_calendar['TITLE'] : '' ),\n\t\t'title',\n\t\t_( 'Title' ),\n\t\t'required maxlength=\"100\"',\n\t\t$div\n\t) . '</td>';\n\n\t// Copy calendar.\n\t$message .= '<td>' . SelectInput(\n\t\t'',\n\t\t'copy_id',\n\t\t_( 'Copy Calendar' ),\n\t\t$copy_calendar_options,\n\t\t'N/A',\n\t\t'',\n\t\t$div\n\t) . '</td></tr>';\n\n\t// Default.\n\t$message .= '<tr><td colspan=\"2\">' . CheckboxInput(\n\t\t$recreate_calendar && $recreate_calendar['DEFAULT_CALENDAR'] == 'Y',\n\t\t'default',\n\t\t_( 'Default Calendar for this School' ),\n\t\t'',\n\t\ttrue\n\t) . '</td></tr>';\n\n\t$message .= '<tr><td colspan=\"2\"><hr /></td></tr>';\n\n\t// From date.\n\t$message .= '<tr class=\"st\"><td>' . DateInput(\n\t\t$recreate_calendar && $recreate_calendar['START_DATE'] ?\n\t\t\t$recreate_calendar['START_DATE'] :\n\t\t\t$fy['START_DATE'],\n\t\t'min',\n\t\t_( 'From' ),\n\t\t$div,\n\t\ttrue,\n\t\t!( $recreate_calendar && $recreate_calendar['START_DATE'] )\n\t) . '</td>';\n\n\t// To date.\n\t$message .= '<td>' . DateInput(\n\t\t$recreate_calendar && $recreate_calendar['END_DATE'] ?\n\t\t\t$recreate_calendar['END_DATE'] :\n\t\t\t$fy['END_DATE'],\n\t\t'max',\n\t\t_( 'To' ),\n\t\t$div,\n\t\ttrue,\n\t\t!( $recreate_calendar && $recreate_calendar['END_DATE'] )\n\t) . '</td></tr>';\n\n\t$message .= '<tr class=\"st\"><td colspan=\"2\"><table class=\"valign-top cellpadding-5\"><tr><td>';\n\n\t// Weekdays.\n\t$weekdays = [\n\t\t_( 'Sunday' ),\n\t\t_( 'Monday' ),\n\t\t_( 'Tuesday' ),\n\t\t_( 'Wednesday' ),\n\t\t_( 'Thursday' ),\n\t\t_( 'Friday' ),\n\t\t_( 'Saturday' ),\n\t];\n\n\t$weekdays_inputs = [];\n\n\tforeach ( (array) $weekdays as $id => $weekday )\n\t{\n\t\t$value = 'Y';\n\n\t\t// Unckeck Saturday & Sunday.\n\t\tif ( $id === 0\n\t\t\t|| $id === 6 )\n\t\t{\n\t\t\t$value = '';\n\t\t}\n\n\t\t$weekdays_inputs[] .= CheckboxInput(\n\t\t\t$value,\n\t\t\t'weekdays[' . $id . ']',\n\t\t\t$weekday,\n\t\t\t'',\n\t\t\ttrue\n\t\t);\n\t}\n\n\t$message .= implode( '</td><td>', $weekdays_inputs );\n\n\t$message .= '</td></tr></table></td></tr>';\n\n\t// Minutes.\n\t$minutes_tip_text = ( $recreate_calendar ?\n\t\t_( 'Default is Full Day if Copy Calendar is N/A.' ) . ' ' . _( 'Otherwise Default is minutes from the Copy Calendar' ) :\n\t\t_( 'Default is Full Day' )\n\t);\n\n\t$message .= '<tr class=\"st valign-top\"><td colspan=\"2\">' . TextInput(\n\t\t'',\n\t\t'minutes',\n\t\t_( 'Minutes' ) .\n\t\t\t'<div class=\"tooltip\"><i>' . $minutes_tip_text . '</i></div>',\n\t\t' type=\"number\" min=\"1\" max=\"998\"',\n\t\t$div\n\t) . '</td></tr></table>';\n\n\t$OK = Prompt(\n\t\t! empty( $_REQUEST['calendar_id'] ) ?\n\t\tsprintf( _( 'Recreate %s calendar' ), $recreate_calendar['TITLE'] ) :\n\t\t_( 'Create new calendar' ),\n\t\t'',\n\t\t$message\n\t);\n\n\t// If Confirm Create / Recreate\n\tif ( $OK )\n\t{\n\t\t// Set Calendar ID\n\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t{\n\t\t\t$calendar_id = $_REQUEST['calendar_id'];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$calendar_id = DBSeqNextID( 'attendance_calendars_calendar_id_seq' );\n\t\t}\n\n\t\tif ( ! empty( $_REQUEST['default'] ) )\n\t\t{\n\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDARS\n\t\t\t\tSET DEFAULT_CALENDAR=NULL\n\t\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\t\t}\n\n\t\t// Recreate\n\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t{\n\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDARS\n\t\t\t\tSET TITLE='\" . $_REQUEST['title'] . \"',DEFAULT_CALENDAR='\" . $_REQUEST['default'] . \"'\n\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t}\n\t\t// Create\n\t\telse\n\t\t{\n\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDARS\n\t\t\t\t(CALENDAR_ID,SYEAR,SCHOOL_ID,TITLE,DEFAULT_CALENDAR)\n\t\t\t\tvalues('\" . $calendar_id . \"','\" . UserSyear() . \"','\" . UserSchool() . \"','\" . $_REQUEST['title'] . \"','\" . $_REQUEST['default'] . \"')\" );\n\t\t}\n\n\t\t//FJ fix bug MINUTES not numeric\n\t\t$minutes = '999';\n\n\t\tif ( isset( $_REQUEST['minutes'] )\n\t\t\t&& intval( $_REQUEST['minutes'] ) > 0 )\n\t\t{\n\t\t\t$minutes = intval( $_REQUEST['minutes'] );\n\t\t}\n\n\t\t// Copy Calendar\n\t\tif ( ! empty( $_REQUEST['copy_id'] ) )\n\t\t{\n\t\t\t$weekdays_list = [];\n\n\t\t\t// FJ remove empty weekdays.\n\t\t\tforeach ( (array) $_REQUEST['weekdays'] as $weekday_id => $yes )\n\t\t\t{\n\t\t\t\tif ( $yes )\n\t\t\t\t{\n\t\t\t\t\t$weekdays_list[] = $weekday_id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$weekdays_list = $weekdays_list ?\n\t\t\t\t\"'\" . implode( \"','\", $weekdays_list ) . \"'\" : '';\n\n\t\t\t$date_min = RequestedDate( 'min', '' );\n\n\t\t\t$date_max = RequestedDate( 'max', '' );\n\n\t\t\tif ( $_REQUEST['calendar_id']\n\t\t\t\t&& $_REQUEST['calendar_id'] === $_REQUEST['copy_id'] )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\n\t\t\t\t\tAND (SCHOOL_DATE NOT BETWEEN '\" . $date_min . \"' AND '\" . $date_max . \"'\" .\n\t\t\t\t\t( $weekdays_list ?\n\t\t\t\t\t\t\" OR extract(DOW FROM SCHOOL_DATE) NOT IN (\" . $weekdays_list . \")\" : '' ) .\n\t\t\t\t\t\")\" );\n\n\t\t\t\tif ( $minutes != '999' )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='\" . $minutes . \"'\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t\t}\n\n\t\t\t\t// Insert Days.\n\t\t\t\t$create_calendar_sql = \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,MINUTES,CALENDAR_ID)\n\t\t\t\t\t(SELECT '\" . UserSyear() . \"','\" . UserSchool() . \"',SCHOOL_DATE,\" . $minutes . \",'\" . $calendar_id . \"'\n\t\t\t\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['copy_id'] . \"'\" .\n\t\t\t\t\t\t( $weekdays_list ?\n\t\t\t\t\t\t\t\" AND extract(DOW FROM SCHOOL_DATE) IN (\" . $weekdays_list . \")\" : '' );\n\n\t\t\t\tif ( $date_min && $date_max )\n\t\t\t\t{\n\t\t\t\t\t$create_calendar_sql .= \" AND SCHOOL_DATE\n\t\t\t\t\t\tBETWEEN '\" . $date_min . \"'\n\t\t\t\t\t\tAND '\" . $date_max . \"'\";\n\t\t\t\t}\n\n\t\t\t\t$create_calendar_sql .= \")\";\n\n\t\t\t\tDBQuery( $create_calendar_sql );\n\t\t\t}\n\t\t}\n\t\t// Create Calendar\n\t\telse\n\t\t{\n\t\t\t$begin = mktime(0,0,0,$_REQUEST['month_min'],$_REQUEST['day_min']*1,$_REQUEST['year_min']) + 43200;\n\n\t\t\t$end = mktime(0,0,0,$_REQUEST['month_max'],$_REQUEST['day_max']*1,$_REQUEST['year_max']) + 43200;\n\n\t\t\t$weekday = date( 'w', $begin );\n\n\t\t\tif ( ! empty( $_REQUEST['calendar_id'] ) )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE CALENDAR_ID='\" . $calendar_id . \"'\" );\n\t\t\t}\n\n\t\t\t$sql_calendar_days = '';\n\n\t\t\t// Insert Days.\n\t\t\tfor ( $i = $begin; $i <= $end; $i += 86400 )\n\t\t\t{\n\t\t\t\tif ( $_REQUEST['weekdays'][ $weekday ] == 'Y' )\n\t\t\t\t{\n\t\t\t\t\t$sql_calendar_days .= \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,MINUTES,CALENDAR_ID)\n\t\t\t\t\t\tVALUES('\" . UserSyear() . \"','\" . UserSchool() . \"','\" . date( 'Y-m-d', $i ) . \"',\" . $minutes . \",'\" . $calendar_id . \"');\";\n\t\t\t\t}\n\n\t\t\t\t$weekday++;\n\n\t\t\t\tif ( $weekday == 7 )\n\t\t\t\t\t$weekday = 0;\n\t\t\t}\n\n\t\t\tif ( $sql_calendar_days )\n\t\t\t{\n\t\t\t\tDBQuery( $sql_calendar_days );\n\t\t\t}\n\t\t}\n\n\t\t// Set Current Calendar\n\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\n\t\t// Unset modfunc & weekdays & title & minutes & copy ID & redirect URL.\n\t\tRedirectURL( [ 'modfunc', 'weekdays', 'title', 'minutes', 'copy_id' ] );\n\t}\n}\n\n// Delete Calendar\nif ( $_REQUEST['modfunc'] === 'delete_calendar'\n\t&& AllowEdit() )\n{\n\tif ( DeletePrompt( _( 'Calendar' ) ) )\n\t{\n\t\t$delete_sql = \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"';\";\n\n\t\t$delete_sql .= \"DELETE FROM ATTENDANCE_CALENDARS\n\t\t\tWHERE CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"';\";\n\n\t\tDBQuery( $delete_sql );\n\n\t\t$default_RET = DBGet( \"SELECT CALENDAR_ID\n\t\t\tFROM ATTENDANCE_CALENDARS\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND DEFAULT_CALENDAR='Y'\" );\n\n\t\t// Unset modfunc & calendar ID & redirect URL.\n\t\tRedirectURL( [ 'modfunc', 'calendar_id' ] );\n\t}\n}\n\n// Set non admin Current Calendar.\nif ( User( 'PROFILE' ) !== 'admin'\n\t&& UserCoursePeriod() )\n{\n\t$calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\tFROM COURSE_PERIODS\n\t\tWHERE COURSE_PERIOD_ID='\" . UserCoursePeriod() . \"'\" );\n\n\tif ( $calendar_id )\n\t{\n\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\t}\n}\n\n// Set Current Calendar.\nif ( ! isset( $_REQUEST['calendar_id'] )\n\t|| intval( $_REQUEST['calendar_id'] ) < 1 )\n{\n\t$default_calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\tFROM ATTENDANCE_CALENDARS\n\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND DEFAULT_CALENDAR='Y'\" );\n\n\tif ( $default_calendar_id )\n\t{\n\t\t$_REQUEST['calendar_id'] = $default_calendar_id;\n\t}\n\telse\n\t{\n\t\t$calendar_id = DBGetOne( \"SELECT CALENDAR_ID\n\t\t\tFROM ATTENDANCE_CALENDARS\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( $calendar_id )\n\t\t{\n\t\t\t$_REQUEST['calendar_id'] = $calendar_id;\n\t\t}\n\t\telse\n\t\t\t$no_calendars_error[] = _( 'There are no calendars setup yet.' );\n\t}\n}\n\nunset( $_SESSION['_REQUEST_vars']['calendar_id'] );\n\n// Event / Assignment details\nif ( $_REQUEST['modfunc'] === 'detail' )\n{\n\tif ( isset( $_POST['button'] )\n\t\t&& $_POST['button'] === _( 'Save' )\n\t\t&& AllowEdit() )\n\t{\n\t\t// Add eventual Dates to $_REQUEST['values'].\n\t\tAddRequestedDates( 'values' );\n\n\t\tif ( ! empty( $_REQUEST['values'] ) )\n\t\t{\n\t\t\t// FJ textarea fields MarkDown sanitize.\n\t\t\tif ( ! empty( $_REQUEST['values']['DESCRIPTION'] ) )\n\t\t\t{\n\t\t\t\t$_REQUEST['values']['DESCRIPTION'] = SanitizeMarkDown( $_POST['values']['DESCRIPTION'] );\n\t\t\t}\n\n\t\t\t// Update Event.\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\t$sql = \"UPDATE CALENDAR_EVENTS SET \";\n\n\t\t\t\tforeach ( (array) $_REQUEST['values'] as $column => $value )\n\t\t\t\t{\n\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t}\n\n\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $_REQUEST['event_id'] . \"'\";\n\n\t\t\t\tDBQuery( $sql );\n\n\t\t\t\t// Hook.\n\t\t\t\tdo_action('School_Setup/Calendar.php|update_calendar_event');\n\t\t\t}\n\t\t\t// Create Event.\n\t\t\telse\n\t\t\t{\n\t\t\t\t// FJ add event repeat.\n\t\t\t\t$i = 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tif ( $i > 0 ) // School date + 1 day.\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['values']['SCHOOL_DATE'] = date(\n\t\t\t\t\t\t\t'd-M-Y',\n\t\t\t\t\t\t\tmktime( 0, 0, 0,\n\t\t\t\t\t\t\t\t$_REQUEST['month_values']['SCHOOL_DATE'],\n \t\t\t\t\t\t\t\t$_REQUEST['day_values']['SCHOOL_DATE'] + $i,\n\t\t\t\t\t\t\t\t$_REQUEST['year_values']['SCHOOL_DATE']\n\t\t\t\t\t\t\t)\n \t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = \"INSERT INTO CALENDAR_EVENTS \";\n\n\t\t\t\t\t$fields = 'ID,SYEAR,SCHOOL_ID,';\n\n\t\t\t\t\t$calendar_event_id = DBSeqNextID( 'calendar_events_id_seq' );\n\n\t\t\t\t\t$values = $calendar_event_id . \",'\" . UserSyear() . \"','\" . UserSchool() . \"',\";\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $_REQUEST['values'] as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\n\t\t\t\t\tif ( $go )\n\t\t\t\t\t{\n\t\t\t\t\t\tDBQuery( $sql );\n\n\t\t\t\t\t\t// Hook.\n\t\t\t\t\t\tdo_action( 'School_Setup/Calendar.php|create_calendar_event' );\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\n\t\t\t\t} while( is_numeric( $_REQUEST['REPEAT'] )\n\t\t\t\t\t&& $i <= $_REQUEST['REPEAT'] );\n\t\t\t}\n\n\t\t\t// Reload Calendar & close popup\n\t\t\t$opener_URL = \"Modules.php?modname=\" . $_REQUEST['modname'] . \"&year=\" . $_REQUEST['year'] . \"&month=\" . $_REQUEST['month'];\n\t\t\t?>\n<script>\n\twindow.opener.ajaxLink(<?php echo json_encode( $opener_URL ); ?>);\n\twindow.close();\n</script>\n\t\t\t<?php\n\t\t}\n\t}\n\t// Delete Event\n\telseif ( isset( $_REQUEST['button'] )\n\t\t&& $_REQUEST['button'] == _( 'Delete' )\n\t\t&& ! isset( $_REQUEST['delete_cancel'] )\n\t\t&& AllowEdit() )\n\t{\n\t\tif ( DeletePrompt( _( 'Event' ), 'Delete', false ) )\n\t\t{\n\t\t\tDBQuery( \"DELETE FROM CALENDAR_EVENTS\n\t\t\t\tWHERE ID='\" . $_REQUEST['event_id'] . \"'\" );\n\n\t\t\t//hook\n\t\t\tdo_action( 'School_Setup/Calendar.php|delete_calendar_event' );\n\n\t\t\t// Reload Calendar & close popup\n\t\t\t$opener_URL = \"Modules.php?modname=\" . $_REQUEST['modname'] . \"&year=\" . $_REQUEST['year'] . \"&month=\" . $_REQUEST['month'];\n\t\t\t?>\n<script>\n\twindow.opener.ajaxLink(<?php echo json_encode( $opener_URL ); ?>);\n\twindow.close();\n</script>\n\t\t\t<?php\n\t\t}\n\t}\n\t// Display Event / Assignment\n\telse\n\t{\n\t\t// Event\n\t\tif ( ! empty( $_REQUEST['event_id'] ) )\n\t\t{\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\t$RET = DBGet( \"SELECT TITLE,DESCRIPTION,SCHOOL_DATE\n\t\t\t\t\tFROM CALENDAR_EVENTS\n\t\t\t\t\tWHERE ID='\" . $_REQUEST['event_id'] . \"'\" );\n\n\t\t\t\t$title = $RET[1]['TITLE'];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//FJ add translation\n\t\t\t\t$title = _( 'New Event' );\n\n\t\t\t\t$RET[1]['SCHOOL_DATE'] = issetVal( $_REQUEST['school_date'] );\n\t\t\t}\n\n\t\t\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=detail&event_id=' . $_REQUEST['event_id'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year']  ) . '\" method=\"POST\">';\n\t\t}\n\t\t// Assignment\n\t\telseif ( ! empty( $_REQUEST['assignment_id'] ) )\n\t\t{\n\t\t\t//FJ add assigned date\n\t\t\t$RET = DBGet( \"SELECT a.TITLE,a.STAFF_ID,a.DUE_DATE AS SCHOOL_DATE,\n\t\t\t\ta.DESCRIPTION,a.ASSIGNED_DATE,c.TITLE AS COURSE,a.SUBMISSION\n\t\t\t\tFROM GRADEBOOK_ASSIGNMENTS a,COURSES c\n\t\t\t\tWHERE (a.COURSE_ID=c.COURSE_ID\n\t\t\t\t\tOR c.COURSE_ID=(SELECT cp.COURSE_ID\n\t\t\t\t\t\tFROM COURSE_PERIODS cp\n\t\t\t\t\t\tWHERE cp.COURSE_PERIOD_ID=a.COURSE_PERIOD_ID))\n\t\t\t\tAND a.ASSIGNMENT_ID='\" . $_REQUEST['assignment_id'] . \"'\" );\n\n\t\t\t$title = $RET[1]['TITLE'];\n\n\t\t\t$RET[1]['STAFF_ID'] = GetTeacher( $RET[1]['STAFF_ID'] );\n\t\t}\n\n\t\techo '<br />';\n\n\t\tPopTable( 'header', $title );\n\n\t\techo '<table class=\"cellpadding-5\"><tr><td>'  . DateInput(\n\t\t\t$RET[1]['SCHOOL_DATE'],\n\t\t\t'values[SCHOOL_DATE]',\n\t\t\t( empty( $_REQUEST['assignment_id'] ) ? _( 'Date' ) : _( 'Due Date' ) ),\n\t\t\tfalse\n\t\t) . '</td></tr>';\n\n\t\t// Add assigned date.\n\t\tif ( ! empty( $RET[1]['ASSIGNED_DATE'] ) )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tDateInput( $RET[1]['ASSIGNED_DATE'], 'values[ASSIGNED_DATE]', _( 'Assigned Date' ), false ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\t// Add submit Assignment link.\n\t\tif ( ! empty( $RET[1]['SUBMISSION'] )\n\t\t\t&& AllowUse( 'Grades/StudentAssignments.php' ) )\n\t\t{\n\t\t\techo '<tr><td>\n\t\t\t\t<a href=\"' . URLEscape( 'Modules.php?modname=Grades/StudentAssignments.php&assignment_id=' .\n\t\t\t\t\t$_REQUEST['assignment_id'] ) . '\" onclick=\"window.opener.ajaxLink(this.href); window.close();\">' .\n\t\t\t\t_( 'Submit Assignment' ) .\n\t\t\t'</a></td></tr>';\n\t\t}\n\n\t\t// FJ add event repeat.\n\t\tif ( ! empty( $_REQUEST['event_id'] )\n\t\t\t&& $_REQUEST['event_id'] === 'new' )\n\t\t{\n\t\t\techo '<tr><td>\n\t\t\t\t<input name=\"REPEAT\" id=\"REPEAT\" value=\"0\" maxlength=\"3\" size=\"1\" type=\"number\" min=\"0\" />&nbsp;' . _( 'Days' ) .\n\t\t\t\tFormatInputTitle( _( 'Event Repeat' ), 'REPEAT' ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\t// Hook.\n\t\tdo_action( 'School_Setup/Calendar.php|event_field' );\n\n\n\t\t// FJ bugfix SQL bug value too long for type character varying(50).\n\t\techo '<tr><td>' .\n\t\t\tTextInput(\n\t\t\t\tissetVal( $RET[1]['TITLE'], '' ),\n\t\t\t\t'values[TITLE]',\n\t\t\t\t_( 'Title' ),\n\t\t\t\t'required size=\"20\" maxlength=\"50\"'\n\t\t\t) .\n\t\t'</td></tr>';\n\n\t\tif ( ! empty( $RET[1]['COURSE'] ) )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tNoInput( $RET[1]['COURSE'], _( 'Course' ) ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\tif ( ! empty( $RET[1]['STAFF_ID'] )\n\t\t\t&& User( 'PROFILE' ) !== 'teacher' )\n\t\t{\n\t\t\techo '<tr><td>' .\n\t\t\t\tTextInput( $RET[1]['STAFF_ID'], 'values[STAFF_ID]', _( 'Teacher' ) ) .\n\t\t\t'</td></tr>';\n\t\t}\n\n\t\techo '<tr><td>' .\n\t\t\tTextAreaInput( issetVal( $RET[1]['DESCRIPTION'], '' ), 'values[DESCRIPTION]', _( 'Notes' ) ) .\n\t\t'</td></tr>';\n\n\t\tif ( AllowEdit() )\n\t\t{\n\t\t\techo '<tr><td colspan=\"2\">' . SubmitButton( _( 'Save' ), 'button' );\n\n\t\t\tif ( $_REQUEST['event_id'] !== 'new' )\n\t\t\t{\n\t\t\t\techo SubmitButton( _( 'Delete' ), 'button', '' );\n\t\t\t}\n\n\t\t\techo '</td></tr>';\n\t\t}\n\n\t\techo '</table>';\n\n\t\tPopTable( 'footer' );\n\n\t\tif ( ! empty( $_REQUEST['event_id'] ) )\n\t\t\techo '</form>';\n\t}\n\n\t// Unset button & values & redirect URL.\n\tRedirectURL( [ 'button', 'values' ] );\n}\n\n// List Events\nif ( $_REQUEST['modfunc'] === 'list_events' )\n{\n\t$start_date = RequestedDate( 'start', '' );\n\n\tif ( ! $start_date )\n\t{\n\t\t$min_date = DBGet( \"SELECT min(SCHOOL_DATE) AS MIN_DATE\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( isset( $min_date[1]['MIN_DATE'] ) )\n\t\t{\n\t\t\t$start_date = $min_date[1]['MIN_DATE'];\n\t\t}\n\t\telse\n\t\t\t$start_date = date( 'Y-m' ) . '-01';\n\t}\n\n\t$end_date = RequestedDate( 'end', '' );\n\n\tif ( ! $end_date )\n\t{\n\t\t$max_date = DBGet( \"SELECT max(SCHOOL_DATE) AS MAX_DATE\n\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\tWHERE SYEAR='\" . UserSyear() . \"'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\tif ( isset( $max_date[1]['MAX_DATE'] ) )\n\t\t{\n\t\t\t$end_date = $max_date[1]['MAX_DATE'];\n\t\t}\n\t\telse\n\t\t\t$end_date = DBDate();\n\t}\n\n\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year']  ) . '\" method=\"POST\">';\n\n\tDrawHeader( '<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year'] ) . '\" >' . _( 'Back to Calendar' ) . '</a>' );\n\n\tDrawHeader(\n\t\t_( 'Timeframe' ) . ': ' .\n\t\tPrepareDate( $start_date, '_start', false ) . ' ' .\n\t\t_( 'to' ) . ' ' . PrepareDate( $end_date, '_end', false ) . ' ' .\n\t\tButtons( _( 'Go' ) )\n\t);\n\n\n\t$functions = [ 'SCHOOL_DATE' => 'ProperDate', 'DESCRIPTION' => 'makeTextarea' ];\n\n\t$events_RET = DBGet( \"SELECT ID,SCHOOL_DATE,TITLE,DESCRIPTION\n\t\tFROM CALENDAR_EVENTS\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $start_date . \"' AND '\" . $end_date . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\", $functions );\n\n\t$column_names = [\n\t\t'SCHOOL_DATE' => _( 'Date' ),\n\t\t'TITLE' => _('Event'),\n\t\t'DESCRIPTION' => _( 'Description' )\n\t];\n\n\tListOutput( $events_RET, $column_names, 'Event', 'Events');\n\n\techo '</form>';\n}\n\n// Display Calendar View.\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$last = 31;\n\n\twhile( ! checkdate( (int) $_REQUEST['month'], $last, (int) $_REQUEST['year'] ) )\n\t{\n\t\t$last--;\n\t}\n\n\t$first_day_month = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-01';\n\n\t$last_day_month = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-' . $last;\n\n\t$calendar_SQL = \"SELECT SCHOOL_DATE,MINUTES,BLOCK\n\t\tFROM ATTENDANCE_CALENDAR\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $first_day_month . \"'\n\t\tAND '\" . $last_day_month . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\";\n\n\t$calendar_RET = DBGet( $calendar_SQL, [], [ 'SCHOOL_DATE' ] );\n\n\t$update_calendar = false;\n\n\t// Update School Day minutes\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['minutes'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['minutes'] as $date => $minutes )\n\t\t{\n\t\t\t// Fix SQL error when all-day checked & minutes.\n\t\t\tif ( ! empty( $_REQUEST['all_day'][ $date ] ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t{\n\t\t\t\t//if ( $minutes!='0' && $minutes!='')\n\t\t\t\t//FJ fix bug MINUTES not numeric\n\t\t\t\tif ( intval( $minutes ) > 0 )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='\" . intval( $minutes ) . \"'\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t\t//elseif ( $minutes!='0' && $minutes!='')\n\t\t\t//FJ fix bug MINUTES not numeric\n\t\t\telseif ( intval( $minutes ) > 0 )\n\t\t\t{\n\t\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,CALENDAR_ID,MINUTES)\n\t\t\t\t\tvalues('\" . UserSyear() . \"','\" . UserSchool() . \"','\" . $date . \"','\" . $_REQUEST['calendar_id'] . \"','\" . intval( $minutes ) . \"')\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset minutes & redirect URL.\n\t\tRedirectURL( 'minutes' );\n\t}\n\n\t// Update All day school.\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['all_day'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['all_day'] as $date => $yes )\n\t\t{\n\t\t\tif ( $yes === 'Y' )\n\t\t\t{\n\t\t\t\tif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\t\tSET MINUTES='999'\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDBQuery( \"INSERT INTO ATTENDANCE_CALENDAR\n\t\t\t\t\t\t(SYEAR,SCHOOL_ID,SCHOOL_DATE,CALENDAR_ID,MINUTES)\n\t\t\t\t\t\tSELECT '\" . UserSyear() . \"','\" . UserSchool().\"','\" . $date . \"','\" . $_REQUEST['calendar_id'] . \"','999'\n\t\t\t\t\t\tWHERE NOT EXISTS(SELECT 1\n\t\t\t\t\t\tFROM ATTENDANCE_CALENDAR\n\t\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"')\" );\n\t\t\t\t}\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t\telseif ( ! empty( $calendar_RET[ $date ] ) )\n\t\t\t{\n\t\t\t\tDBQuery( \"DELETE FROM ATTENDANCE_CALENDAR\n\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset all day & redirect URL.\n\t\tRedirectURL( 'all_day' );\n\t}\n\n\t// Update Blocks.\n\tif ( AllowEdit()\n\t\t&& isset( $_REQUEST['blocks'] ) )\n\t{\n\t\tforeach ( (array) $_REQUEST['blocks'] as $date => $block )\n\t\t{\n\t\t\tif ( $calendar_RET[ $date ] )\n\t\t\t{\n\t\t\t\tDBQuery( \"UPDATE ATTENDANCE_CALENDAR\n\t\t\t\t\tSET BLOCK='\" . $block . \"'\n\t\t\t\t\tWHERE SCHOOL_DATE='\" . $date . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND CALENDAR_ID='\" . $_REQUEST['calendar_id'] . \"'\" );\n\n\t\t\t\t$update_calendar = true;\n\t\t\t}\n\t\t}\n\n\t\t// Unset blocks & redirect URL.\n\t\tRedirectURL( 'blocks' );\n\t}\n\n\t// Update Calendar RET\n\tif ( $update_calendar )\n\t{\n\t\t$calendar_RET = DBGet( $calendar_SQL, [], [ 'SCHOOL_DATE' ] );\n\t}\n\n\techo '<form action=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname']  ) . '\" method=\"POST\">';\n\n\t// Admin Headers\n\tif ( AllowEdit() )\n\t{\n\t\t$title_RET = DBGet( \"SELECT CALENDAR_ID,TITLE,DEFAULT_CALENDAR\n\t\t\tFROM ATTENDANCE_CALENDARS WHERE SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tORDER BY DEFAULT_CALENDAR ASC,TITLE\" );\n\n\t\t$defaults = 0;\n\n\t\tforeach ( (array) $title_RET as $title )\n\t\t{\n\t\t\t$options[ $title['CALENDAR_ID'] ] = $title['TITLE'] .\n\t\t\t\t( $title['DEFAULT_CALENDAR'] === 'Y' ? ' (' . _( 'Default' ) . ')' : '' );\n\n\t\t\tif ( $title['DEFAULT_CALENDAR'] === 'Y' )\n\t\t\t{\n\t\t\t\t$defaults++;\n\t\t\t}\n\t\t}\n\n\t\t//FJ bugfix erase calendar onchange\n\t\t$calendar_onchange_URL = \"'Modules.php?modname=\" . $_REQUEST['modname'] . \"&calendar_id='\";\n\n\t\t$links = SelectInput(\n\t\t\t$_REQUEST['calendar_id'],\n\t\t\t'calendar_id',\n\t\t\t'<span class=\"a11y-hidden\">' . _( 'Calendar' ) . '</span>',\n\t\t\t$options,\n\t\t\tfalse,\n\t\t\t' onchange=\"ajaxLink(' . $calendar_onchange_URL . ' + document.getElementById(\\'calendar_id\\').value);\" ',\n\t\t\tfalse\n\t\t) .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=create' ) . '\" class=\"nobr\">' .\n\t\t\tbutton( 'add' ) . _( 'Create new calendar' ) .\n\t\t'</a> | ' .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=create&calendar_id=' . $_REQUEST['calendar_id'] ) . '\" class=\"nobr\">' .\n\t\t\t_( 'Recreate this calendar' ) .\n\t\t'</a>&nbsp; ' .\n\t\t'<a href=\"' . URLEscape( 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=delete_calendar&calendar_id=' . $_REQUEST['calendar_id'] ) . '\" class=\"nobr\">' .\n\t\t\tbutton( 'remove' ) . _( 'Delete this calendar' ) .\n\t\t'</a>';\n\t}\n\n\t$list_events_URL = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=list_events&month=' . $_REQUEST['month'] . '&year=' . $_REQUEST['year'];\n\n\tDrawHeader(\n\t\tPrepareDate( mb_strtoupper( $first_day_month ), '', false, [ 'M' => 1, 'Y' => 1, 'submit' => true ] ) .\n\t\t' <a href=\"' . URLEscape( $list_events_URL ) . '\">' .\n\t\t\t_( 'List Events' ) .\n\t\t'</a>',\n\t\tSubmitButton()\n\t);\n\n\tif ( ! empty( $links ) )\n\t{\n\t\tDrawHeader( $links );\n\t}\n\n\t// @since 4.5 Calendars header hook.\n\tdo_action( 'School_Setup/Calendar.php|header' );\n\n\tif ( AllowEdit()\n\t\t&& $defaults != 1 )\n\t{\n\t\techo ErrorMessage(\n\t\t\t[ $defaults ?\n\t\t\t\t_( 'This school has more than one default calendar!' ) :\n\t\t\t\t_( 'This school does not have a default calendar!' )\n\t\t\t]\n\t\t);\n\t}\n\n\tif ( isset( $no_calendars_error ) )\n\t{\n\t\t// No calendars, die.\n\t\techo ErrorMessage( $no_calendars_error, 'fatal' );\n\t}\n\n\techo '<br />';\n\n\t// Get Events\n\t$events_RET = DBGet( \"SELECT ID,SCHOOL_DATE,TITLE,DESCRIPTION\n\t\tFROM CALENDAR_EVENTS\n\t\tWHERE SCHOOL_DATE BETWEEN '\" . $first_day_month . \"'\n\t\tAND '\" . $last_day_month . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\", [], [ 'SCHOOL_DATE' ] );\n\n\t// Get Assignments\n\t$assignments_RET = null;\n\n\tif ( User( 'PROFILE' ) === 'parent'\n\t\t|| User( 'PROFILE' ) === 'student' )\n\t{\n\t\t$assignments_SQL = \"SELECT ASSIGNMENT_ID AS ID,a.DUE_DATE AS SCHOOL_DATE,a.TITLE,'Y' AS ASSIGNED\n\t\t\tFROM GRADEBOOK_ASSIGNMENTS a,SCHEDULE s\n\t\t\tWHERE (a.COURSE_PERIOD_ID=s.COURSE_PERIOD_ID OR a.COURSE_ID=s.COURSE_ID)\n\t\t\tAND s.STUDENT_ID='\" . UserStudentID() . \"'\n\t\t\tAND (a.DUE_DATE BETWEEN s.START_DATE AND s.END_DATE OR s.END_DATE IS NULL)\n\t\t\tAND (a.ASSIGNED_DATE<=CURRENT_DATE OR a.ASSIGNED_DATE IS NULL)\n\t\t\tAND a.DUE_DATE BETWEEN '\" . $first_day_month . \"' AND '\" . $last_day_month . \"'\";\n\t}\n\telseif ( User( 'PROFILE' ) === 'teacher' )\n\t{\n\t\t$assignments_SQL = \"SELECT ASSIGNMENT_ID AS ID,a.DUE_DATE AS SCHOOL_DATE,a.TITLE,\n\t\t\t\tCASE WHEN a.ASSIGNED_DATE<=CURRENT_DATE OR a.ASSIGNED_DATE IS NULL THEN 'Y' ELSE NULL END AS ASSIGNED\n\t\t\tFROM GRADEBOOK_ASSIGNMENTS a\n\t\t\tWHERE a.STAFF_ID='\" . User( 'STAFF_ID' ) . \"'\n\t\t\tAND a.DUE_DATE BETWEEN '\" . $first_day_month . \"' AND '\" . $last_day_month . \"'\";\n\t}\n\n\tif ( isset( $assignments_SQL ) )\n\t{\n\t\t$assignments_RET = DBGet( $assignments_SQL, [], [ 'SCHOOL_DATE' ] );\n\t}\n\n\t// Calendar Events onclick popup\n\t$popup_URL = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=detail&year=' . $_REQUEST['year'] . '&month=' . $_REQUEST['month'];\n?>\n<script>\n\tvar popupURL = <?php echo json_encode( $popup_URL ); ?>;\n\n\tfunction CalEventPopup(url) {\n\t\tpopups.open( url, \"scrollbars=yes,resizable=yes,width=500,height=400\" );\n\t}\n</script>\n<?php\n\n\tif ( isset( $_REQUEST['_ROSARIO_PDF'] ) )\n\t{\n\t\t// Landscape PDF.\n\t\t$_SESSION['orientation'] = 'landscape';\n\t}\n\n\t// Calendar Header\n\techo '<table id=\"calendar\" class=\"width-100p valign-top\">\n\t\t<thead><tr class=\"center\">';\n\n\techo '<th>' . _( 'Sunday' ) . '</th>' .\n\t\t'<th>' . _( 'Monday' ) . '</th>' .\n\t\t'<th>' . _( 'Tuesday' ) . '</th>' .\n\t\t'<th>' . _( 'Wednesday' ) . '</th>' .\n\t\t'<th>' . _( 'Thursday' ) . '</th>' .\n\t\t'<th>' . _( 'Friday' ) . '</th>' .\n\t\t'<th>' . _( 'Saturday' ) . '</th>';\n\n\techo '</tr></thead><tbody><tr>';\n\n\t$return_counter = 0;\n\n\t// Skip until first Day of Month.\n\t$skip = date( \"w\", strtotime( $first_day_month ) );\n\n\tif ( $skip )\n\t{\n\t\techo '<td colspan=\"' . $skip . '\" class=\"calendar-skip\">&nbsp;</td>';\n\n\t\t$return_counter = $skip;\n\t}\n\n\t// Days.\n\tfor ( $i = 1; $i <= $last; $i++ )\n\t{\n\t\t$date = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-' . str_pad( $i, 2, '0', STR_PAD_LEFT );\n\n\t\t$minutes = isset( $calendar_RET[ $date ][1]['MINUTES'] ) ? $calendar_RET[ $date ][1]['MINUTES'] : '';\n\n\t\t$events_date = issetVal( $events_RET[ $date ], [] );\n\n\t\t$assignments_date = issetVal( $assignments_RET[ $date ], [] );\n\n\t\t$day_classes = CalendarDayClasses( $date, $minutes );\n\n\t\t$day_inner_classes = CalendarDayClasses(\n\t\t\t$date,\n\t\t\t$minutes,\n\t\t\t$events_date,\n\t\t\t$assignments_date,\n\t\t\t'inner'\n\t\t);\n\n\t\t$day_number_classes = CalendarDayClasses(\n\t\t\t$date,\n\t\t\t$minutes,\n\t\t\t$events_date,\n\t\t\t$assignments_date,\n\t\t\t'number'\n\t\t);\n\n\t\techo '<td class=\"calendar-day' . $day_classes . '\">\n\t\t\t<table class=\"' . $day_inner_classes . '\"><tr>';\n\n\n\t\t// Calendar Day number.\n\t\techo '<td class=\"' . $day_number_classes . '\">' . $i . '</td>\n\t\t<td class=\"width-100p align-right\">';\n\n\t\techo CalendarDayMinutesHTML( $date, $minutes );\n\n\t\t$block = issetVal( $calendar_RET[ $date ][1]['BLOCK'] );\n\n\t\techo CalendarDayBlockHTML( $date, $minutes, $block );\n\n\t\techo '</td></tr>\n\t\t\t<tr><td colspan=\"2\" class=\"calendar-event valign-top\">';\n\n\t\techo CalendarDayEventsHTML( $date, $events_date );\n\n\t\techo CalendarDayAssignmentsHTML( $date, $assignments_date );\n\n\t\techo '</td></tr><tr class=\"valign-bottom\">';\n\n\t\techo CalendarDayNewAssignmentHTML( $date, $assignments_date );\n\n\t\techo CalendarDayRotationNumberHTML( $date, $minutes );\n\n\t\techo '</tr></table></td>';\n\n\t\t$return_counter++;\n\n\t\tif ( $return_counter % 7 === 0 )\n\t\t{\n\t\t\techo '</tr><tr>';\n\t\t}\n\t}\n\n\t// Skip from Last Day of Month until end of Calendar\n\tif ( $return_counter %7 !== 0 )\n\t{\n\t\t$skip = 7 - $return_counter % 7;\n\n\t\techo '<td colspan=\"' . $skip . '\" class=\"calendar-skip\">&nbsp;</td>';\n\t}\n\n\techo '</tr></tbody></table>';\n\n\techo '<br /><div class=\"center\">' . SubmitButton() . '</div>';\n\techo '<br /><br /></form>';\n}\n", "<?php\n\nrequire_once 'modules/School_Setup/includes/MarkingPeriods.fnc.php';\n\nDrawHeader( ProgramTitle() );\n\n// Default MP ID to Full Year.\n\nif ( empty( $_REQUEST['marking_period_id'] ) )\n{\n\t$_REQUEST['marking_period_id'] = GetFullYearMP() ? GetFullYearMP() : 'new';\n\n\t$_REQUEST['mp_term'] = 'FY';\n}\n\n//unset($_SESSION['_REQUEST_vars']['marking_period_id']);\n//unset($_SESSION['_REQUEST_vars']['mp_term']);\n\nif ( $_REQUEST['marking_period_id'] === 'new' )\n{\n\tswitch ( $_REQUEST['mp_term'] )\n\t{\n\t\tcase 'FY':\n\t\t\t$title = _( 'New Year' );\n\t\t\tbreak;\n\n\t\tcase 'SEM':\n\t\t\t$title = _( 'New Semester' );\n\t\t\tbreak;\n\n\t\tcase 'QTR':\n\t\t\t$title = _( 'New Marking Period' );\n\t\t\tbreak;\n\n\t\tcase 'PRO':\n\t\t\t$title = _( 'New Progress Period' );\n\t\t\tbreak;\n\t}\n}\nelse\n{\n\t$_REQUEST['marking_period_id'] = (string) (int) $_REQUEST['marking_period_id'];\n}\n\n// Add eventual Dates to $_REQUEST['tables'].\nAddRequestedDates( 'tables', 'post' );\n\n// UPDATING\n\nif ( ! empty( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t//FJ fix SQL bug invalid sort order\n\n\t\tif ( isset( $columns['SORT_ORDER'] )\n\t\t\t&& $columns['SORT_ORDER'] !== ''\n\t\t\t&& ! is_numeric( $columns['SORT_ORDER'] ) )\n\t\t{\n\t\t\t$error[] = _( 'Please enter a valid Sort Order.' );\n\n\t\t\tbreak 1;\n\t\t}\n\n\t\t// UPDATE\n\n\t\tif ( $id !== 'new' )\n\t\t{\n\t\t\t$sql = \"UPDATE SCHOOL_MARKING_PERIODS SET \";\n\n\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t{\n\t\t\t\tif ( $column === 'START_DATE'\n\t\t\t\t\t|| $column === 'END_DATE'\n\t\t\t\t\t|| $column === 'POST_START_DATE'\n\t\t\t\t\t|| $column === 'POST_END_DATE' )\n\t\t\t\t{\n\t\t\t\t\t//FJ fix SQL bug START_DATE or END_DATE is null\n\n\t\t\t\t\tif (  ( ! VerifyDate( $value )\n\t\t\t\t\t\t&& $value !== '' )\n\t\t\t\t\t\t|| ( ( $column === 'START_DATE' || $column === 'END_DATE' )\n\t\t\t\t\t\t\t&& $value === '' ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Not all of the dates were entered correctly.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t//FJ verify END_DATE > START_DATE\n\t\t\t\t\t$mp_dates_RET = DBGet( \"SELECT START_DATE, END_DATE, POST_START_DATE, POST_END_DATE\n\t\t\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\t\t\tWHERE MARKING_PERIOD_ID='\" . $id . \"'\" );\n\n\t\t\t\t\t$start_date = ! empty( $columns['START_DATE'] ) ?\n\t\t\t\t\t\t$columns['START_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['START_DATE'];\n\n\t\t\t\t\t$end_date = ! empty( $columns['END_DATE'] ) ?\n\t\t\t\t\t\t$columns['END_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['END_DATE'];\n\n\t\t\t\t\t$post_start_date = ! empty( $columns['POST_START_DATE'] ) ?\n\t\t\t\t\t\t$columns['POST_START_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['POST_START_DATE'];\n\n\t\t\t\t\t$post_end_date = ! empty( $columns['POST_END_DATE'] ) ?\n\t\t\t\t\t\t$columns['POST_END_DATE'] :\n\t\t\t\t\t\t$mp_dates_RET[1]['POST_END_DATE'];\n\n\t\t\t\t\tif (  ( $column === 'END_DATE'\n\t\t\t\t\t\t&& date_create( $value ) <= date_create( $start_date ) )\n\t\t\t\t\t\t|| ( $column === 'START_DATE'\n\t\t\t\t\t\t\t&& date_create( $end_date ) <= date_create( $value ) )\n\t\t\t\t\t\t|| ( $column === 'POST_END_DATE'\n\t\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t\t&& $post_start_date !== null\n\t\t\t\t\t\t\t&& date_create( $value ) <= date_create( $post_start_date ) )\n\t\t\t\t\t\t|| ( $column === 'POST_START_DATE'\n\t\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t\t&& $post_end_date !== null\n\t\t\t\t\t\t\t&& date_create( $post_end_date ) <= date_create( $value ) ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Start date must be anterior to end date.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t}\n\n\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE MARKING_PERIOD_ID='\" . $id . \"'\";\n\n\t\t\t$go = true;\n\t\t}\n\n\t\t// New: check for Title.\n\t\telseif ( $columns['TITLE'] )\n\t\t{\n\t\t\t$id_new = DBSeqNextID( 'school_marking_periods_marking_period_id_seq' );\n\n\t\t\t$sql = \"INSERT INTO SCHOOL_MARKING_PERIODS \";\n\n\t\t\t$fields = \"MARKING_PERIOD_ID,MP,SYEAR,SCHOOL_ID,\";\n\n\t\t\t$values = \"'\" . $id_new . \"','\" . $_REQUEST['mp_term'] . \"','\" . UserSyear() . \"','\" . UserSchool() . \"',\";\n\n\t\t\tswitch ( $_REQUEST['mp_term'] )\n\t\t\t{\n\t\t\t\tcase 'SEM':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['year_id'] . \"',\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'QTR':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['semester_id'] . \"',\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PRO':\n\t\t\t\t\t$fields .= \"PARENT_ID,\";\n\t\t\t\t\t$values .= \"'\" . $_REQUEST['quarter_id'] . \"',\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$go = false;\n\n\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t{\n\t\t\t\tif ( $column === 'START_DATE'\n\t\t\t\t\t|| $column === 'END_DATE'\n\t\t\t\t\t|| $column === 'POST_START_DATE'\n\t\t\t\t\t|| $column === 'POST_END_DATE' )\n\t\t\t\t{\n\t\t\t\t\t//FJ fix SQL bug START_DATE or END_DATE is null\n\n\t\t\t\t\tif ( ! VerifyDate( $value )\n\t\t\t\t\t\t&& $value !== ''\n\t\t\t\t\t\t|| ( ( $column === 'START_DATE'\n\t\t\t\t\t\t\t|| $column === 'END_DATE' )\n\t\t\t\t\t\t\t&& $value === '' ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Not all of the dates were entered correctly.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t//FJ verify END_DATE > START_DATE\n\n\t\t\t\t\tif (  ( $column === 'END_DATE'\n\t\t\t\t\t\t&& date_create( $value ) <= date_create( $columns['START_DATE'] ) )\n\t\t\t\t\t\t|| ( $column === 'POST_START_DATE'\n\t\t\t\t\t\t\t&& $columns['POST_END_DATE'] !== ''\n\t\t\t\t\t\t\t&& date_create( $value ) > date_create( $columns['POST_END_DATE'] ) ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$error[] = _( 'Start date must be anterior to end date.' );\n\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t|| $value === '0' )\n\t\t\t\t{\n\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t}\n\n\t\t// CHECK TO MAKE SURE ONLY ONE MP & ONE GRADING PERIOD IS OPEN AT ANY GIVEN TIME\n\t\t$dates_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\tAND ( true=false\" .\n\t\t\t( ! empty( $columns['START_DATE'] ) ? \" OR '\" . $columns['START_DATE'] .\n\t\t\t\t\"' BETWEEN START_DATE AND END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['END_DATE'] ) ? \" OR '\" . $columns['END_DATE'] .\n\t\t\t\t\"' BETWEEN START_DATE AND END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['START_DATE'] ) && ! empty( $columns['END_DATE'] ) ?\n\t\t\t\t\" OR START_DATE BETWEEN '\" . $columns['START_DATE'] . \"' AND '\" . $columns['END_DATE'] . \"'\" .\n\t\t\t\t\" OR END_DATE BETWEEN '\" . $columns['START_DATE'] . \"' AND '\" . $columns['END_DATE'] . \"'\" : '' ) . \")\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\" .\n\t\t\t( $id !== 'new' ? \" AND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND MARKING_PERIOD_ID!='\" . $id . \"'\" : '' ) );\n\n\t\t$posting_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\tAND ( true=false\" .\n\t\t\t( ! empty( $columns['POST_START_DATE'] ) ? \" OR '\" . $columns['POST_START_DATE'] .\n\t\t\t\t\"' BETWEEN POST_START_DATE AND POST_END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['POST_END_DATE'] ) ? \" OR '\" . $columns['POST_END_DATE'] .\n\t\t\t\t\"' BETWEEN POST_START_DATE AND POST_END_DATE\" : '' ) .\n\t\t\t( ! empty( $columns['POST_START_DATE'] ) && ! empty( $columns['POST_END_DATE'] ) ?\n\t\t\t\t\" OR POST_START_DATE BETWEEN '\" . $columns['POST_START_DATE'] . \"' AND '\" . $columns['POST_END_DATE'] . \"'\" .\n\t\t\t\t\" OR POST_END_DATE BETWEEN '\" . $columns['POST_START_DATE'] . \"' AND '\" . $columns['POST_END_DATE'] . \"'\" : '' ) . \")\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\" .\n\t\t\t( $id !== 'new' ? \" AND MARKING_PERIOD_ID!='\" . $id . \"'\" : '' ) );\n\n\t\tif ( ! empty( $dates_RET ) )\n\t\t{\n\t\t\t$error[] = sprintf(\n\t\t\t\t_( 'The beginning and end dates you specified for this marking period overlap with those of \"%s\".' ),\n\t\t\t\tGetMP( $dates_RET[1]['MARKING_PERIOD_ID'] )\n\t\t\t) . ' ' .\n\t\t\t_( 'Only one marking period can be open at any time.' );\n\n\t\t\t$go = false;\n\t\t}\n\n\t\tif ( ! empty( $posting_RET ) )\n\t\t{\n\t\t\t$error[] = sprintf(\n\t\t\t\t_( 'The grade posting dates you specified for this marking period overlap with those of \"%s\".' ),\n\t\t\t\tGetMP( $posting_RET[1]['MARKING_PERIOD_ID'] )\n\t\t\t) . ' ' .\n\t\t\t_( 'Only one grade posting period can be open at any time.' );\n\n\t\t\t$go = false;\n\t\t}\n\n\t\tif ( $go )\n\t\t{\n\t\t\tDBQuery( $sql );\n\t\t}\n\n\t\tif ( $id === 'new'\n\t\t\t&& $go )\n\t\t{\n\t\t\t$_REQUEST['marking_period_id'] = $id_new;\n\t\t}\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( [ 'tables' ] );\n}\n\n// DELETING\n\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tswitch ( $_REQUEST['mp_term'] )\n\t{\n\t\tcase 'FY':\n\t\t\t$name = _( 'Year' );\n\n\t\t\t$parent_term = '';\n\t\t\t$parent_id = '';\n\t\t\tbreak;\n\n\t\tcase 'SEM':\n\t\t\t$name = _( 'Semester' );\n\n\t\t\t$parent_term = 'FY';\n\t\t\t$parent_id = issetVal( $_REQUEST['year_id'] );\n\t\t\tbreak;\n\n\t\tcase 'QTR':\n\t\t\t$name = _( 'Quarter' );\n\n\t\t\t$parent_term = 'SEM';\n\t\t\t$parent_id = issetVal( $_REQUEST['semester_id'] );\n\t\t\tbreak;\n\n\t\tcase 'PRO':\n\t\t\t$name = _( 'Progress Period' );\n\n\t\t\t$parent_term = 'QTR';\n\t\t\t$parent_id = issetVal( $_REQUEST['quarter_id'] );\n\t\t\tbreak;\n\t}\n\n\tif ( DeletePrompt( $name ) )\n\t{\n\t\tDBQuery( MarkingPeriodDeleteSQL( $_REQUEST['marking_period_id'], $_REQUEST['mp_term'] ) );\n\n\t\t$_REQUEST['mp_term'] = $parent_term;\n\n\t\t$_REQUEST['marking_period_id'] = $parent_id;\n\n\t\t// Unset modfunc & redirect URL.\n\t\tRedirectURL( 'modfunc' );\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\tif ( $_REQUEST['marking_period_id']\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t// Check marking period ID is valid for current school & syear!\n\t\t$marking_period_RET = DBGet( \"SELECT MARKING_PERIOD_ID\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tAND MARKING_PERIOD_ID='\" . $_REQUEST['marking_period_id'] . \"'\" );\n\n\t\tif ( ! $marking_period_RET )\n\t\t{\n\t\t\t$_REQUEST['marking_period_id'] = GetFullYearMP() ? GetFullYearMP() : 'new';\n\n\t\t\t$_REQUEST['mp_term'] = 'FY';\n\n\t\t\t// Unset year & semester & quarter IDs & redirect URL.\n\t\t\tRedirectURL( [ 'year_id', 'semester_id', 'quarter_id' ] );\n\t\t}\n\n\t\tif ( AllowEdit()\n\t\t\t&& $_REQUEST['marking_period_id'] !== 'new'\n\t\t\t&& $_REQUEST['marking_period_id'] !== GetFullYearMP() )\n\t\t{\n\t\t\t// @since 6.6 Add warning when Marking Period dates are not within Parent MP dates range.\n\t\t\t$parent_mp_type = GetMP( $_REQUEST['marking_period_id'], 'MP' ) === 'SEM' ? 'FY' :\n\t\t\t\t( GetMP( $_REQUEST['marking_period_id'], 'MP' ) === 'QTR' ? 'SEM' : 'QTR' );\n\n\t\t\t$parent_mp_id = GetParentMP( $parent_mp_type, $_REQUEST['marking_period_id'] );\n\n\t\t\t$parent_mp_end_date = GetMP( $parent_mp_id, 'END_DATE' );\n\n\t\t\t$mp_end_date = GetMP( $_REQUEST['marking_period_id'], 'END_DATE' );\n\n\t\t\t$parent_mp_start_date = GetMP( $parent_mp_id, 'START_DATE' );\n\n\t\t\t$mp_start_date = GetMP( $_REQUEST['marking_period_id'], 'START_DATE' );\n\n\t\t\tif ( $mp_end_date > $parent_mp_end_date )\n\t\t\t{\n\t\t\t\t$warning[] = _( 'End date for current Marking Period is posterior to parent Marking Period\\'s end date.' );\n\t\t\t}\n\n\t\t\tif ( $mp_start_date < $parent_mp_start_date )\n\t\t\t{\n\t\t\t\t$warning[] = _( 'Start date for current Marking Period is anterior to parent Marking Period\\'s start date.' );\n\t\t\t}\n\t\t}\n\t}\n\n\techo ErrorMessage( $warning, 'warning' );\n\n\t// ADDING & EDITING FORM.\n\n\tif ( $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT TITLE,SHORT_NAME,SORT_ORDER,DOES_GRADES,DOES_COMMENTS,\n\t\t\t\tSTART_DATE,END_DATE,POST_START_DATE,POST_END_DATE\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MARKING_PERIOD_ID='\" . $_REQUEST['marking_period_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = $RET['TITLE'];\n\t}\n\n\t$mp_href = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=' . $_REQUEST['mp_term'] .\n\t\t'&year_id=' . issetVal( $_REQUEST['year_id'] ) .\n\t\t'&semester_id=' . issetVal( $_REQUEST['semester_id'] ) .\n\t\t'&quarter_id=' . issetVal( $_REQUEST['quarter_id'] ) .\n\t\t'&marking_period_id=' . $_REQUEST['marking_period_id'];\n\n\t$delete_button = '';\n\n\tif ( AllowEdit()\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t{\n\t\t// Is Single Marking Period? Do NOT delete.\n\n\t\tif ( $_REQUEST['mp_term'] !== 'FY'\n\t\t\t&& $_REQUEST['mp_term'] !== 'PRO' )\n\t\t{\n\t\t\t$not_single_mp_RET = DBGet( \"SELECT COUNT( MARKING_PERIOD_ID ) > 1 AS NOT_SINGLE_MP\n\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\tWHERE MP='\" . $_REQUEST['mp_term'] . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\" );\n\n\t\t\t$not_single_mp = $not_single_mp_RET[1]['NOT_SINGLE_MP'] !== 'f';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$not_single_mp = $_REQUEST['mp_term'] !== 'FY' || $_REQUEST['mp_term'] === 'PRO';\n\t\t}\n\n\t\tif ( $not_single_mp )\n\t\t{\n\t\t\t// @since 5.0 MP has Course Periods? Do NOT delete.\n\t\t\t$can_delete = DBTransDryRun(\n\t\t\t\tMarkingPeriodDeleteSQL( $_REQUEST['marking_period_id'], $_REQUEST['mp_term'] )\n\t\t\t);\n\n\t\t\tif ( $can_delete )\n\t\t\t{\n\t\t\t\t$delete_URL = \"'\" . $mp_href . \"&modfunc=delete'\";\n\n\t\t\t\t$delete_button = '<input type=\"button\" value=\"' . _( 'Delete' ) . '\" onClick=\"javascript:ajaxLink(' . $delete_URL . ');\" />';\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<form action=\"' . URLEscape( $mp_href ) . '\" method=\"POST\">';\n\n\tDrawHeader( $title, $delete_button . SubmitButton() );\n\n\t$header = '<table class=\"width-100p valign-top fixed-col\"><tr class=\"st\">';\n\n\t$header .= '<td>' . TextInput(\n\t\tissetVal( $RET['TITLE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][TITLE]',\n\t\t_( 'Title' ),\n\t\t'required maxlength=\"50\"'\n\t) . '</td>';\n\n\t$header .= '<td>' . TextInput(\n\t\tissetVal( $RET['SHORT_NAME'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][SHORT_NAME]',\n\t\t_( 'Short Name' ),\n\t\t'required maxlength=\"10\"' .\n\t\t\t( $_REQUEST['marking_period_id'] === 'new' ? ' size=\"3\"' : '' )\n\t) . '</td>';\n\n\tif ( AllowEdit() )\n\t{\n\t\t// Hide Sort Order from non editing users.\n\t\t$header .= '<td>' . TextInput(\n\t\t\tissetVal( $RET['SORT_ORDER'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][SORT_ORDER]',\n\t\t\t_( 'Sort Order' ),\n\t\t\t'type=\"number\" step=\"any\"'\n\t\t) . '</td></tr>';\n\t}\n\n\t// @since 4.1 Grade posting date inputs are required when \"Graded\" is checked.\n\t$header .= '<script>var mpGradedOnclickPostDatesRequired = function(el) {\n\t\tvar dates = [\"month\", \"day\", \"year\"],\n\t\t\tdateStartInput,\n\t\t\tdateEndInput;\n\n\t\tfor (var i=0,max=dates.length; i<max; i++) {\n\t\t\tdateStartInput = document.getElementsByName( dates[i] + \"_tables[' . $_REQUEST['marking_period_id'] .\n\t\t\t'][POST_START_DATE]\" )[0];\n\t\t\tdateEndInput = document.getElementsByName( dates[i] + \"_tables[' . $_REQUEST['marking_period_id'] .\n\t\t\t'][POST_END_DATE]\" )[0];\n\n\t\t\tdateStartInput.required = dateEndInput.required = el.checked;\n\t\t}\n\n\t\t// Add .legend-red CSS class to label if input is required/\n\t\t$(dateStartInput).parent().nextAll(\".legend-gray\").toggleClass(\"legend-red\", el.checked);\n\t\t$(dateEndInput).parent().nextAll(\".legend-gray\").toggleClass(\"legend-red\", el.checked);\n\t};</script>';\n\n\t$js_onclick_post_dates_required = 'onclick=\"mpGradedOnclickPostDatesRequired( this );\"';\n\n\t$header .= '<tr class=\"st\"><td>' . CheckboxInput(\n\t\tissetVal( $RET['DOES_GRADES'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][DOES_GRADES]',\n\t\t_( 'Graded' ),\n\t\t'',\n\t\t$_REQUEST['marking_period_id'] === 'new',\n\t\tbutton( 'check' ),\n\t\tbutton( 'x' ),\n\t\ttrue,\n\t\t$js_onclick_post_dates_required\n\t) . '</td>';\n\n\tif ( AllowEdit()\n\t\t|| ! empty( $RET['DOES_GRADES'] ) )\n\t{\n\t\t// Hide Comments from non editing users if MP not Graded.\n\t\t$header .= '<td>' . CheckboxInput(\n\t\t\tissetVal( $RET['DOES_COMMENTS'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][DOES_COMMENTS]',\n\t\t\t_( 'Comments' ),\n\t\t\t'',\n\t\t\t$_REQUEST['marking_period_id'] === 'new',\n\t\t\tbutton( 'check' ),\n\t\t\tbutton( 'x' )\n\t\t) . '</td>';\n\t}\n\n\t$header .= '</tr><tr><td colspan=\"3\"><hr /></td></tr>';\n\n\t$required = $allow_na = $div = true;\n\n\t$header .= '<tr class=\"st\"><td>' . DateInput(\n\t\tissetVal( $RET['START_DATE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][START_DATE]',\n\t\t_( 'Begins' ),\n\t\t$div,\n\t\t$allow_na,\n\t\t$required\n\t) . '</td>';\n\n\t$header .= '<td>' . DateInput(\n\t\tissetVal( $RET['END_DATE'], '' ),\n\t\t'tables[' . $_REQUEST['marking_period_id'] . '][END_DATE]',\n\t\t_( 'Ends' ),\n\t\t$div,\n\t\t$allow_na,\n\t\t$required\n\t) . '</td></tr>';\n\n\t$required = ! empty( $RET['DOES_GRADES'] );\n\n\t$red = ! empty( $RET['DOES_GRADES'] ) && empty( $RET['POST_END_DATE'] );\n\n\tif ( AllowEdit()\n\t\t|| ! empty( $RET['DOES_GRADES'] ) )\n\t{\n\t\t// Hide Grade Posting Dates from non editing users if MP not Graded.\n\t\t$header .= '<tr class=\"st\"><td>' . DateInput(\n\t\t\tissetVal( $RET['POST_START_DATE'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][POST_START_DATE]',\n\t\t\t( $red ? '<span class=\"legend-red\">' : '' ) . _( 'Grade Posting Begins' ) . ( $red ? '</span>' : '' ),\n\t\t\t$div,\n\t\t\t$allow_na,\n\t\t\t$required\n\t\t) . '</td>';\n\n\t\t$header .= '<td>' . DateInput(\n\t\t\tissetVal( $RET['POST_END_DATE'], '' ),\n\t\t\t'tables[' . $_REQUEST['marking_period_id'] . '][POST_END_DATE]',\n\t\t\t( $red ? '<span class=\"legend-red\">' : '' ) . _( 'Grade Posting Ends' ) . ( $red ? '</span>' : '' ),\n\t\t\t$div,\n\t\t\t$allow_na,\n\t\t\t$required\n\t\t) . '</td></tr>';\n\t}\n\n\t$header .= '</table>';\n\n\tDrawHeader( $header );\n\n\techo '</form>';\n\n\t//unset($_SESSION['_REQUEST_vars']['marking_period_id']);\n\t//unset($_SESSION['_REQUEST_vars']['mp_term']);\n\n\t// DISPLAY THE MENU\n\t$LO_options = [ 'save' => false, 'search' => false, 'responsive' => false ];\n\n\t// FY\n\t$fy_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\tFROM SCHOOL_MARKING_PERIODS\n\t\tWHERE MP='FY'\n\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\tAND SYEAR='\" . UserSyear() . \"' ORDER BY SORT_ORDER\" );\n\n\tif ( ! empty( $fy_RET ) )\n\t{\n\t\tif ( ! empty( $_REQUEST['mp_term'] ) )\n\t\t{\n\t\t\tif ( $_REQUEST['mp_term'] === 'FY' )\n\t\t\t{\n\t\t\t\t$_REQUEST['year_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t}\n\n\t\t\tforeach ( (array) $fy_RET as $key => $value )\n\t\t\t{\n\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['year_id'] )\n\t\t\t\t{\n\t\t\t\t\t$fy_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\techo '<div class=\"st\">';\n\n\t$columns = [ 'TITLE' => _( 'Year' ) ];\n\n\t$link = [];\n\n\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=FY';\n\n\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\tif ( empty( $fy_RET ) )\n\t{\n\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=FY&marking_period_id=new';\n\t}\n\n\tListOutput( $fy_RET, $columns, 'Year', 'Years', $link, [], $LO_options );\n\n\techo '</div>';\n\n\t// SEMESTERS\n\n\tif (  ( $_REQUEST['mp_term'] === 'FY'\n\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t|| $_REQUEST['mp_term'] === 'SEM'\n\t\t|| $_REQUEST['mp_term'] === 'QTR'\n\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t{\n\t\t$sem_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\tWHERE MP='SEM'\n\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['year_id'] . \"'\n\t\t\tORDER BY SORT_ORDER\" );\n\n\t\tif ( ! empty( $sem_RET ) )\n\t\t{\n\t\t\tif ( ! empty( $_REQUEST['mp_term'] ) )\n\t\t\t{\n\t\t\t\tif ( $_REQUEST['mp_term'] === 'SEM' )\n\t\t\t\t{\n\t\t\t\t\t$_REQUEST['semester_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t\t}\n\n\t\t\t\tforeach ( (array) $sem_RET as $key => $value )\n\t\t\t\t{\n\t\t\t\t\tif ( ! empty( $_REQUEST['semester_id'] )\n\t\t\t\t\t\t&& $value['MARKING_PERIOD_ID'] === $_REQUEST['semester_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sem_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\techo '<div class=\"st\">';\n\n\t\t$columns = [ 'TITLE' => _( 'Semester' ) ];\n\n\t\t$link = [];\n\n\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=SEM&year_id=' . $_REQUEST['year_id'];\n\n\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=SEM&marking_period_id=new&year_id=' . $_REQUEST['year_id'];\n\n\t\tListOutput( $sem_RET, $columns, 'Semester', 'Semesters', $link, [], $LO_options );\n\n\t\techo '</div>';\n\n\t\t// QUARTERS\n\n\t\tif ( ( $_REQUEST['mp_term'] === 'SEM'\n\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t|| $_REQUEST['mp_term'] === 'QTR'\n\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t{\n\t\t\t$qtr_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\tWHERE MP='QTR'\n\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['semester_id'] . \"'\n\t\t\t\tORDER BY SORT_ORDER\" );\n\n\t\t\tif ( ! empty( $qtr_RET ) )\n\t\t\t{\n\t\t\t\tif ( ( $_REQUEST['mp_term'] === 'QTR'\n\t\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t\t\t{\n\t\t\t\t\tif ( $_REQUEST['mp_term'] == 'QTR' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['quarter_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\t\t\t\t\t}\n\n\t\t\t\t\tforeach ( (array) $qtr_RET as $key => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['quarter_id'] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$qtr_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<div class=\"st\">';\n\n\t\t\t$columns = [ 'TITLE' => _( 'Quarter' ) ];\n\n\t\t\t$link = [];\n\n\t\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=QTR&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'];\n\n\t\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=QTR&marking_period_id=new&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'];\n\n\t\t\tListOutput( $qtr_RET, $columns, 'Quarter', 'Quarters', $link, [], $LO_options );\n\n\t\t\techo '</div>';\n\n\t\t\t// PROGRESS PERIODS\n\n\t\t\tif ( ( $_REQUEST['mp_term'] === 'QTR'\n\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t|| $_REQUEST['mp_term'] === 'PRO' )\n\t\t\t{\n\t\t\t\t$pro_RET = DBGet( \"SELECT MARKING_PERIOD_ID,TITLE\n\t\t\t\t\tFROM SCHOOL_MARKING_PERIODS\n\t\t\t\t\tWHERE MP='PRO'\n\t\t\t\t\tAND SCHOOL_ID='\" . UserSchool() . \"'\n\t\t\t\t\tAND SYEAR='\" . UserSyear() . \"'\n\t\t\t\t\tAND PARENT_ID='\" . (int) $_REQUEST['quarter_id'] . \"'\n\t\t\t\t\tORDER BY SORT_ORDER\" );\n\n\t\t\t\tif ( ! empty( $pro_RET ) )\n\t\t\t\t{\n\t\t\t\t\tif ( $_REQUEST['mp_term'] === 'PRO'\n\t\t\t\t\t\t&& $_REQUEST['marking_period_id'] !== 'new' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['progress_period_id'] = issetVal( $_REQUEST['marking_period_id'] );\n\n\t\t\t\t\t\tforeach ( (array) $pro_RET as $key => $value )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( $value['MARKING_PERIOD_ID'] === $_REQUEST['marking_period_id'] )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$pro_RET[$key]['row_color'] = Preferences( 'HIGHLIGHT' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\techo '<div class=\"st\">';\n\n\t\t\t\t$columns = [ 'TITLE' => _( 'Progress Period' ) ];\n\n\t\t\t\t$link = [];\n\n\t\t\t\t$link['TITLE']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&modfunc=' . $_REQUEST['modfunc'] . '&mp_term=PRO&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'] . '&quarter_id=' . $_REQUEST['quarter_id'];\n\n\t\t\t\t$link['TITLE']['variables'] = [ 'marking_period_id' => 'MARKING_PERIOD_ID' ];\n\n\t\t\t\t$link['add']['link'] = 'Modules.php?modname=' . $_REQUEST['modname'] . '&mp_term=PRO&marking_period_id=new&year_id=' . $_REQUEST['year_id'] . '&semester_id=' . $_REQUEST['semester_id'] . '&quarter_id=' . $_REQUEST['quarter_id'];\n\n\t\t\t\tListOutput( $pro_RET, $columns, 'Progress Period', 'Progress Periods', $link, [], $LO_options );\n\n\t\t\t\techo '</div>';\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n/**\n * School Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nrequire_once 'ProgramFunctions/Fields.fnc.php';\n\nDrawHeader( ProgramTitle() );\n\n$_REQUEST['id'] = issetVal( $_REQUEST['id'], false );\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'SCHOOL_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'SCHOOLS', 'school_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'School Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'SCHOOLS', $_REQUEST['id'] );\n\n\t\t\t$_REQUEST['modfunc'] = false;\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,(SELECT NULL) AS CATEGORY_ID,TITLE,TYPE,\n\t\t\tSELECT_OPTIONS,DEFAULT_SELECTION,SORT_ORDER,REQUIRED\n\t\t\tFROM SCHOOL_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New School Field' );\n\n\t\t$RET['ID'] = 'new';\n\t}\n\n\techo GetFieldsForm(\n\t\t'SCHOOL',\n\t\t$title,\n\t\t$RET,\n\t\t[]\n\t);\n\n\t// DISPLAY THE MENU.\n\t// FIELDS.\n\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\tFROM SCHOOL_FIELDS\n\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], false );\n\n\techo '</div>';\n}\n", "<?php\n/**\n * Address Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'ADDRESS_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'ADDRESS', 'address_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'ADDRESS_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'address_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Address Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'ADDRESS', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Address Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'ADDRESS', $_REQUEST['category_id'] );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM ADDRESS_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,RESIDENCE,MAILING,BUS,SORT_ORDER\n\t\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Address Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Address Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [\n\t\t\t'<table class=\"width-100p cellspacing-0\"><tr class=\"st\"><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['RESIDENCE'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][RESIDENCE]',\n\t\t\t\t_( 'Residence' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['MAILING'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][MAILING]',\n\t\t\t\t_( 'Mailing' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['BUS'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][BUS]',\n\t\t\t\t_( 'Bus' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td></tr></table>' .\n\t\t\tFormatInputTitle(\n\t\t\t\t_( 'Note: All unchecked means applies to all addresses' ),\n\t\t\t\t'',\n\t\t\t\tfalse,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\techo GetFieldsForm(\n\t\t'ADDRESS',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM ADDRESS_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM ADDRESS_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n", "<?php\n/**\n * People Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'PEOPLE_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'PEOPLE', 'people_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'PEOPLE_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'people_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Contact Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'PEOPLE', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Contact Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'PEOPLE', $_REQUEST['category_id'] );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM PEOPLE_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,CUSTODY,EMERGENCY,SORT_ORDER\n\t\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Contact Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Contact Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [\n\t\t\t'<table class=\"width-100p cellspacing-0\"><tr class=\"st\"><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['CUSTODY'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][CUSTODY]',\n\t\t\t\t_( 'Custody' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td><td>' .\n\t\t\tCheckboxInput(\n\t\t\t\tissetVal( $RET['EMERGENCY'], '' ),\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][EMERGENCY]',\n\t\t\t\t_( 'Emergency' ),\n\t\t\t\t'',\n\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\tbutton( 'check' ),\n\t\t\t\tbutton( 'x' )\n\t\t\t) . '</td></tr></table>' .\n\t\t\tFormatInputTitle(\n\t\t\t\t_( 'Note: All unchecked means applies to all contacts' ),\n\t\t\t\t'',\n\t\t\t\tfalse,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\techo GetFieldsForm(\n\t\t'PEOPLE',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM PEOPLE_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM PEOPLE_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n", "<?php\n/**\n * Student Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select Options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// FJ Fix PHP fatal error: check Include file exists.\n\t\t\t\tif ( isset( $columns['INCLUDE'] )\n\t\t\t\t\t&& $columns['INCLUDE'] )\n\t\t\t\t{\n\t\t\t\t\t$include_file_path = 'modules/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\t// @since 4.5 Include Student/User Info tab from custom plugin.\n\t\t\t\t\t$plugins_include_file_path = 'plugins/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\tif ( ! file_exists( $include_file_path )\n\t\t\t\t\t\t&& ! file_exists( $plugins_include_file_path ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t// File does not exist: reset + error.\n\t\t\t\t\t\tunset( $columns['INCLUDE'] );\n\n\t\t\t\t\t\t$error[] = sprintf(\n\t\t\t\t\t\t\t_( 'The include file was not found: \"%s\"' ),\n\t\t\t\t\t\t\t$include_file_path . ', ' . $plugins_include_file_path\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'CUSTOM_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'STUDENTS', 'custom_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'STUDENT_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'student_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\n\t\t\t\t\t\t// Add to profile or permissions of user creating it.\n\t\t\t\t\t\tif ( User( 'PROFILE_ID' ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO PROFILE_EXCEPTIONS (PROFILE_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'PROFILE_ID' ) . \"','Students/Student.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO STAFF_EXCEPTIONS (USER_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'STAFF_ID' ) . \"','Students/Student.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Student Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'STUDENTS', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( isset( $_REQUEST['category_id'] )\n\t\t&& intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'Student Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'STUDENTS', $_REQUEST['category_id'] );\n\n\t\t\t// Remove from profiles and permissions.\n\t\t\t$delete_sql = \"DELETE FROM PROFILE_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Students/Student.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\t$delete_sql .= \"DELETE FROM STAFF_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Students/Student.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\tDBQuery( $delete_sql );\n\n\t\t\t// Unset modfunc & category ID redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t// Category menu: student|address|contact.\n\tDrawHeader( _fieldsCategoryMenu( $_REQUEST['category'] ) );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM CUSTOM_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,SORT_ORDER,INCLUDE,COLUMNS\n\t\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New Student Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = issetVal( $_REQUEST['category_id'] );\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New Student Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\n\t\t$RET['COLUMNS'] = '';\n\t\t$RET['INCLUDE'] = '';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [ TextInput(\n\t\t\t$RET['COLUMNS'],\n\t\t\t'tables[' . $_REQUEST['category_id'] . '][COLUMNS]',\n\t\t\t_( 'Display Columns' ),\n\t\t\t' type=\"number\" min=\"1\" max=\"10\"'\n\t\t) ];\n\n\t\tif ( $_REQUEST['category_id'] > 4\n\t\t\t|| $_REQUEST['category_id'] === 'new' )\n\t\t{\n\t\t\t// TODO: check if INCLUDE file (+ \".inc.php\") exsits.\n\t\t\t$extra_fields[] = TextInput(\n\t\t\t\t$RET['INCLUDE'],\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][INCLUDE]',\n\t\t\t\t_( 'Include (should be left blank for most categories)' )\n\t\t\t);\n\t\t}\n\t}\n\n\techo GetFieldsForm(\n\t\t'STUDENT',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM STUDENT_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !=='new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM CUSTOM_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n\n", "<?php\n/**\n * User Fields\n *\n * @package RosarioSIS\n * @subpackage modules\n */\n\nrequire_once 'ProgramFunctions/Fields.fnc.php';\n\n$_REQUEST['id'] = issetVal( $_REQUEST['id'], '' );\n$_REQUEST['category_id'] = issetVal( $_REQUEST['category_id'], '' );\n\nDrawHeader( ProgramTitle() );\n\n//$_ROSARIO['allow_edit'] = true;\n\nif ( isset( $_POST['tables'] )\n\t&& is_array( $_POST['tables'] )\n\t&& AllowEdit() )\n{\n\t$table = issetVal( $_REQUEST['table'] );\n\n\tforeach ( (array) $_REQUEST['tables'] as $id => $columns )\n\t{\n\t\t// FJ fix SQL bug invalid sort order.\n\t\tif ( ( empty( $columns['SORT_ORDER'] )\n\t\t\t\t|| is_numeric( $columns['SORT_ORDER'] ) )\n\t\t\t&& ( empty( $columns['COLUMNS'] )\n\t\t\t\t|| is_numeric( $columns['COLUMNS'] ) ) )\n\t\t{\n\t\t\t// FJ added SQL constraint TITLE is not null.\n\t\t\tif ( ! isset( $columns['TITLE'] )\n\t\t\t\t|| ! empty( $columns['TITLE'] ) )\n\t\t\t{\n\t\t\t\tif ( isset( $columns['SELECT_OPTIONS'] )\n\t\t\t\t\t&& $columns['SELECT_OPTIONS'] )\n\t\t\t\t{\n\t\t\t\t\t// @since 6.0 Trim select options.\n\t\t\t\t\t$columns['SELECT_OPTIONS'] = trim( $columns['SELECT_OPTIONS'] );\n\t\t\t\t}\n\n\t\t\t\t// FJ Fix PHP fatal error: check Include file exists.\n\t\t\t\tif ( isset( $columns['INCLUDE'] )\n\t\t\t\t\t&& $columns['INCLUDE'] )\n\t\t\t\t{\n\t\t\t\t\t$include_file_path = 'modules/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\t// @since 4.5 Include Student/User Info tab from custom plugin.\n\t\t\t\t\t$plugins_include_file_path = 'plugins/' . $columns['INCLUDE'] . '.inc.php';\n\n\t\t\t\t\tif ( ! file_exists( $include_file_path )\n\t\t\t\t\t\t&& ! file_exists( $plugins_include_file_path ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t// File does not exist: reset + error.\n\t\t\t\t\t\tunset( $columns['INCLUDE'] );\n\n\t\t\t\t\t\t$error[] = sprintf(\n\t\t\t\t\t\t\t_( 'The include file was not found: \"%s\"' ),\n\t\t\t\t\t\t\t$include_file_path . ', ' . $plugins_include_file_path\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update Field / Category.\n\t\t\t\tif ( $id !== 'new' )\n\t\t\t\t{\n\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] )\n\t\t\t\t\t\t&& $columns['CATEGORY_ID'] != $_REQUEST['category_id'] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = 'UPDATE ' . DBEscapeIdentifier( $table ) . ' SET ';\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\t$sql .= DBEscapeIdentifier( $column ) . \"='\" . $value . \"',\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql = mb_substr( $sql, 0, -1 ) . \" WHERE ID='\" . $id . \"'\";\n\n\t\t\t\t\t$go = true;\n\t\t\t\t}\n\t\t\t\t// New Field / Category.\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$sql = 'INSERT INTO ' . DBEscapeIdentifier( $table ) . ' ';\n\n\t\t\t\t\t// New Field.\n\t\t\t\t\tif ( $table === 'STAFF_FIELDS' )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( isset( $columns['CATEGORY_ID'] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$_REQUEST['category_id'] = $columns['CATEGORY_ID'];\n\n\t\t\t\t\t\t\tunset( $columns['CATEGORY_ID'] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$_REQUEST['id'] = AddDBField( 'STAFF', 'staff_fields_id_seq', $columns['TYPE'] );\n\n\t\t\t\t\t\t$fields = 'ID,CATEGORY_ID,';\n\n\t\t\t\t\t\t$values = $_REQUEST['id'] . \",'\" . $_REQUEST['category_id'] . \"',\";\n\t\t\t\t\t}\n\t\t\t\t\t// New Category.\n\t\t\t\t\telseif ( $table === 'STAFF_FIELD_CATEGORIES' )\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = DBSeqNextID( 'staff_field_categories_id_seq' );\n\n\t\t\t\t\t\t$fields = \"ID,\";\n\n\t\t\t\t\t\t$values = $id . \",\";\n\n\t\t\t\t\t\t$_REQUEST['category_id'] = $id;\n\n\t\t\t\t\t\t// Add to profile or permissions of user creating it.\n\t\t\t\t\t\tif ( User( 'PROFILE_ID' ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO PROFILE_EXCEPTIONS (PROFILE_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'PROFILE_ID' ) . \"','Users/User.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tDBQuery( \"INSERT INTO STAFF_EXCEPTIONS (USER_ID,MODNAME,CAN_USE,CAN_EDIT)\n\t\t\t\t\t\t\t\tvalues('\" . User( 'STAFF_ID' ) . \"','Users/User.php&category_id=\" . $id . \"','Y','Y')\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$go = false;\n\n\t\t\t\t\tforeach ( (array) $columns as $column => $value )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ! empty( $value )\n\t\t\t\t\t\t\t|| $value == '0' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$fields .= DBEscapeIdentifier( $column ) . ',';\n\n\t\t\t\t\t\t\t$values .= \"'\" . $value . \"',\";\n\n\t\t\t\t\t\t\t$go = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$sql .= '(' . mb_substr( $fields, 0, -1 ) . ') values(' . mb_substr( $values, 0, -1 ) . ')';\n\t\t\t\t}\n\n\t\t\t\tif ( $go )\n\t\t\t\t{\n\t\t\t\t\tDBQuery( $sql );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\t$error[] = _( 'Please fill in the required fields' );\n\t\t}\n\t\telse\n\t\t\t$error[] = _( 'Please enter valid Numeric data.' );\n\t}\n\n\t// Unset tables & redirect URL.\n\tRedirectURL( 'tables' );\n}\n\n// Delete Field / Category.\nif ( $_REQUEST['modfunc'] === 'delete'\n\t&& AllowEdit() )\n{\n\tif ( isset( $_REQUEST['id'] )\n\t\t&& intval( $_REQUEST['id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'User Field' ) ) )\n\t\t{\n\t\t\tDeleteDBField( 'STAFF', $_REQUEST['id'] );\n\n\t\t\t// Unset modfunc & ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'id' ] );\n\t\t}\n\t}\n\telseif ( intval( $_REQUEST['category_id'] ) > 0 )\n\t{\n\t\tif ( DeletePrompt( _( 'User Field Category' ) . ' ' .\n\t\t\t\t_( 'and all fields in the category' ) ) )\n\t\t{\n\t\t\tDeleteDBFieldCategory( 'STAFF', $_REQUEST['category_id'] );\n\n\t\t\t// Remove from profiles and permissions.\n\t\t\t$delete_sql = \"DELETE FROM PROFILE_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Users/User.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\t$delete_sql .= \"DELETE FROM STAFF_EXCEPTIONS\n\t\t\t\tWHERE MODNAME='Users/User.php&category_id=\" . $_REQUEST['category_id'] . \"';\";\n\n\t\t\tDBQuery( $delete_sql );\n\n\t\t\t// Unset modfunc & category ID & redirect URL.\n\t\t\tRedirectURL( [ 'modfunc', 'category_id' ] );\n\t\t}\n\t}\n}\n\nif ( ! $_REQUEST['modfunc'] )\n{\n\techo ErrorMessage( $error );\n\n\t$RET = [];\n\n\t// ADDING & EDITING FORM.\n\tif ( $_REQUEST['id']\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,\n\t\t\tDEFAULT_SELECTION,SORT_ORDER,REQUIRED,\n\t\t\t(SELECT TITLE\n\t\t\t\tFROM STAFF_FIELD_CATEGORIES\n\t\t\t\tWHERE ID=CATEGORY_ID) AS CATEGORY_TITLE\n\t\t\tFROM STAFF_FIELDS\n\t\t\tWHERE ID='\" . $_REQUEST['id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['CATEGORY_TITLE'] ) . ' - ' . ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $_REQUEST['id'] !== 'new' )\n\t{\n\t\t$RET = DBGet( \"SELECT ID AS CATEGORY_ID,TITLE,ADMIN,TEACHER,PARENT,NONE,SORT_ORDER,INCLUDE,COLUMNS\n\t\t\tFROM STAFF_FIELD_CATEGORIES\n\t\t\tWHERE ID='\" . $_REQUEST['category_id'] . \"'\" );\n\n\t\t$RET = $RET[1];\n\n\t\t$title = ParseMLField( $RET['TITLE'] );\n\t}\n\telseif ( $_REQUEST['id'] === 'new' )\n\t{\n\t\t$title = _( 'New User Field' );\n\n\t\t$RET['ID'] = 'new';\n\n\t\t$RET['CATEGORY_ID'] = $_REQUEST['category_id'];\n\t}\n\telseif ( $_REQUEST['category_id'] === 'new' )\n\t{\n\t\t$title = _( 'New User Field Category' );\n\n\t\t$RET['CATEGORY_ID'] = 'new';\n\n\t\t$RET['COLUMNS'] = '';\n\t\t$RET['ADMIN'] = $RET['TEACHER'] = $RET['PARENT'] = $RET['NONE'] = '';\n\t\t$RET['INCLUDE'] = '';\n\t}\n\n\tif ( $_REQUEST['category_id']\n\t\t&& ! $_REQUEST['id'] )\n\t{\n\t\t$extra_fields = [];\n\n\t\t$extra_fields[] = TextInput(\n\t\t\t$RET['COLUMNS'],\n\t\t\t'tables[' . $_REQUEST['category_id'] . '][COLUMNS]',\n\t\t\t_( 'Display Columns' ),\n\t\t\t' type=\"number\" min=\"1\" max=\"10\"'\n\t\t);\n\n\t\tif ( $_REQUEST['category_id'] != 1 )\n\t\t{\n\t\t\t$extra_fields[] = '<table><tr class=\"st\"><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['ADMIN'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][ADMIN]',\n\t\t\t\t\t_( 'Administrator' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['TEACHER'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][TEACHER]',\n\t\t\t\t\t_( 'Teacher' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td></tr><tr><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['PARENT'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][PARENT]',\n\t\t\t\t\t_( 'Parent' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td><td>' .\n\t\t\t\tCheckboxInput(\n\t\t\t\t\t$RET['NONE'],\n\t\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][NONE]',\n\t\t\t\t\t_( 'No Access' ),\n\t\t\t\t\t'',\n\t\t\t\t\t$_REQUEST['category_id'] === 'new',\n\t\t\t\t\tbutton( 'check' ),\n\t\t\t\t\tbutton( 'x' )\n\t\t\t\t) . '</td></tr></table>' .\n\t\t\t\tFormatInputTitle(\n\t\t\t\t\t_( 'Profiles' ),\n\t\t\t\t\t'',\n\t\t\t\t\tfalse,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t}\n\n\t\tif ( $_REQUEST['category_id'] > 2\n\t\t\t|| $_REQUEST['category_id'] === 'new' )\n\t\t{\n\t\t\t// TODO: check if INCLUDE file (+ \".inc.php\") exsits.\n\t\t\t$extra_fields[] = TextInput(\n\t\t\t\t$RET['INCLUDE'],\n\t\t\t\t'tables[' . $_REQUEST['category_id'] . '][INCLUDE]',\n\t\t\t\t_( 'Include (should be left blank for most categories)' )\n\t\t\t);\n\t\t}\n\t}\n\n\techo GetFieldsForm(\n\t\t'STAFF',\n\t\t$title,\n\t\t$RET,\n\t\tissetVal( $extra_fields, [] )\n\t);\n\n\t// CATEGORIES.\n\t$categories_RET = DBGet( \"SELECT ID,TITLE,SORT_ORDER\n\t\tFROM STAFF_FIELD_CATEGORIES\n\t\tORDER BY SORT_ORDER,TITLE\" );\n\n\t// DISPLAY THE MENU.\n\techo '<div class=\"st\">';\n\n\tFieldsMenuOutput( $categories_RET, $_REQUEST['category_id'] );\n\n\techo '</div>';\n\n\t// FIELDS.\n\tif ( $_REQUEST['category_id']\n\t\t&& $_REQUEST['category_id'] !== 'new'\n\t\t&& $categories_RET )\n\t{\n\t\t$fields_RET = DBGet( \"SELECT ID,TITLE,TYPE,SORT_ORDER\n\t\t\tFROM STAFF_FIELDS\n\t\t\tWHERE CATEGORY_ID='\" . $_REQUEST['category_id'] . \"'\n\t\t\tORDER BY SORT_ORDER,TITLE\", [ 'TYPE' => 'MakeFieldType' ] );\n\n\t\techo '<div class=\"st\">';\n\n\t\tFieldsMenuOutput( $fields_RET, $_REQUEST['id'], $_REQUEST['category_id'] );\n\n\t\techo '</div>';\n\t}\n}\n"], "filenames": ["CHANGES.md", "modules/Custom/includes/RegistrationSave.fnc.php", "modules/School_Setup/Calendar.php", "modules/School_Setup/MarkingPeriods.php", "modules/School_Setup/SchoolFields.php", "modules/Students/includes/AddressFields.php", "modules/Students/includes/PeopleFields.php", "modules/Students/includes/StudentFields.php", "modules/Users/UserFields.php"], "buggy_code_start_loc": [55, 410, 503, 207, 76, 94, 94, 128, 137], "buggy_code_end_loc": [55, 411, 504, 208, 77, 95, 95, 129, 138], "fixing_code_start_loc": [56, 410, 503, 207, 76, 94, 94, 128, 137], "fixing_code_end_loc": [57, 411, 504, 208, 77, 95, 95, 129, 138], "type": "CWE-89", "message": "SQL Injection in GitHub repository francoisjacquet/rosariosis prior to 9.0.", "other": {"cve": {"id": "CVE-2022-2067", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-13T13:15:13.607", "lastModified": "2022-06-21T19:48:02.533", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "SQL Injection in GitHub repository francoisjacquet/rosariosis prior to 9.0."}, {"lang": "es", "value": "Una Inyecci\u00f3n SQL en el repositorio de GitHub francoisjacquet/rosariosis versiones anteriores a 9.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:rosariosis:rosariosis:*:*:*:*:*:*:*:*", "versionEndExcluding": "9.0", "matchCriteriaId": "2BB9E0BA-2A26-4ACA-8636-DCF3512F2180"}]}]}], "references": [{"url": "https://github.com/francoisjacquet/rosariosis/commit/15d5e8700d538935b5c411b2a1e25bcf7e16c47c", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/a85a53a4-3009-4f41-ac33-8bed8bbe16a8", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/francoisjacquet/rosariosis/commit/15d5e8700d538935b5c411b2a1e25bcf7e16c47c"}}