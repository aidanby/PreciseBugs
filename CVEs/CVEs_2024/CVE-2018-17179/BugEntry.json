{"buggy_code": ["<?php\n/**\n *  php/taskman_functions.php\n *\n * Function which extend taskman.php, current a email-to-fax gateway\n *\n *\n * Copyright (C) 2016 Raymond Magauran <magauran@MedFetch.com>\n *\n * LICENSE: This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU Affero General Public License as\n *  published by the Free Software Foundation, either version 3 of the\n *  License, or (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU Affero General Public License for more details.\n *\n *  You should have received a copy of the GNU Affero General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package OpenEMR\n * @author Ray Magauran <magauran@MedFetch.com>\n * @link http://www.open-emr.org\n */\n\nuse Mpdf\\Mpdf;\nuse OpenEMR\\Services\\FacilityService;\n\n$facilityService = new FacilityService();\n\n/**\n *  This function creates a task as a record in the form_taskman DB_table.\n */\nfunction make_task($ajax_req)\n{\n    global $send;\n    $from_id    = $ajax_req['from_id'];\n    $to_id      = $ajax_req['to_id'];\n    $patient_id = $ajax_req['pid'];\n    $doc_type   = $ajax_req['doc_type'];\n    $doc_id     = $ajax_req['doc_id'];\n    $enc        = $ajax_req['enc'];\n\n    $query      = \"SELECT * FROM users WHERE id=?\";\n    $to_data    =  sqlQuery($query, array($to_id));\n    $filename   = \"Fax_\".$encounter.\"_\".$to_data['lname'].\".pdf\";\n\n    $query = \"SELECT * FROM documents where encounter_id=? and foreign_id=? and url like ?\";\n    $doc = sqlQuery($query, array($encounter,$pid,'%'.$filename.'%' ));\n\n\n    $sql = \"SELECT * from form_taskman where FROM_ID=? and TO_ID=? and PATIENT_ID=? and ENC_ID=?\";\n    $task = sqlQuery($sql, array($from_id,$to_id,$patient_id,$enc));\n\n    if (!$doc['ID'] && $task['ID'] && ($task['REQ_DATE'] < (time() - 60))) {\n        // The task was requested more than a minute ago (prevents multi-clicks from \"re-generating\" the PDF),\n        // but the document was deleted (to redo it)...\n        // Delete the task, recreate the task, and send the newly made PDF.\n        $sql = \"DELETE from form_taskman where FROM_ID=? and TO_ID=? and PATIENT_ID=? and ENC_ID=?\";\n        $task = sqlQuery($sql, array($from_id,$to_id,$patient_id,$enc));\n    }\n\n    if ($task['ID'] && $task['COMPLETED'] =='2') {\n        $send['comments'] = xlt('This fax has already been sent.').\" \".\n                            xlt('If you made changes and want to re-send it, delete the original (in Communications) or wait 60 seconds, and try again.').\" \".\n                            xlt('Filename').\": \".$filename;\n        echo json_encode($send);\n        exit;\n    } else if ($task['ID'] && $task['COMPLETED'] =='1') {\n        if ($task['DOC_TYPE'] == 'Fax') {\n            $send['DOC_link'] = \"<a href='\".$webroot.\"/openemr/controller.php?document&view&patient_id=\".$task['PATIENT_ID'].\"&doc_id=\".$task['DOC_ID'].\"'\n\t\t\t\t\t\t\t\ttarget='_blank' title='\".xla('View the Summary Report sent to Fax Server.').\"'>\n\t\t\t\t\t\t\t\t<i class='fa fa-file-pdf-o fa-fw'></i></a>\n\t\t\t\t\t\t\t\t<i class='fa fa-repeat fa-fw'\n\t\t\t\t\t\t\t\t\tonclick=\\\"top.restoreSession(); create_task('\".attr($pat_data['ref_providerID']).\"','Fax-resend','ref'); return false;\\\">\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\";\n                            //add a resend option.\n            $send['comments'] = xlt('This fax has already been sent.');\n            echo json_encode($send);\n            exit;\n        } else if ($task['DOC_TYPE'] == \"Fax-resend\") {\n            //we need to resend this fax????\n            //You can only resend from here once.\n            $send['comments'] = xlt('To resend, delete the file from Communications, reload this page and try again.');\n            echo json_encode($send);\n            update_taskman($task, 'refaxed', '2');\n            exit;\n        } else { //DOC_TYPE is a Fax or Report\n            $send['comments'] = xlt('Currently working on making this document').\"...\\n\";\n        }\n    } else if (!$task['ID']) {\n        $sql = \"INSERT into form_taskman\n\t\t\t\t(REQ_DATE, FROM_ID,  TO_ID,  PATIENT_ID,  DOC_TYPE,  DOC_ID,  ENC_ID) VALUES\n\t\t\t\t(NOW(), '$from_id', '$to_id','$patient_id','$doc_type','$doc_id','$enc')\";\n        sqlQuery($sql);\n    } else {\n        $send['comments'] = xlt('Currently working on making this document').\"...\\n\";\n    }\n}\n\n/**\n *  This function reads and processes an order (or task).\n */\nfunction process_tasks($task)\n{\n    global $send;\n    /**\n     *  First see if the doc_ID exists\n     *  if not we need to create this\n     */\n    $task = make_document($task);\n    update_taskman($task, 'created', '1');\n    if ($task['DOC_TYPE'] == 'Fax') {\n        deliver_document($task);\n    }\n\n    update_taskman($task, 'completed', '1');\n\n    if ($task['DOC_TYPE'] == \"Fax\") {\n        //now return any objects you need to Eye Form\n        $send['DOC_link'] = \"<a href='\".$webroot.\"/openemr/controller.php?document&view&patient_id=\".$task['PATIENT_ID'].\"&doc_id=\".$task['DOC_ID'].\"'\n\t\t\t\t\t\t\t\ttarget='_blank' title=\".xlt('Report was faxed. Click to view.').\">\n\t\t\t\t\t\t\t\t<i class='fa fa-file-pdf-o fa-fw'></i>\n\t\t\t\t\t\t\t</a>\";\n                            //if we want a \"resend\" icon, add it here.\n    }\n\n    return $send;\n}\n\n /**\n *  This function updates the taskman record in the form_taskman table.\n */\nfunction update_taskman($task, $action, $value)\n{\n    global $send;\n    if ($action == 'created') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMMENT=concat('Created: ',NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$task['ID']));\n        $send['comments'] .=\"Documented created.\\n\";\n    }\n\n    if ($action == 'completed') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMPLETED =?,COMPLETED_DATE=NOW(),COMMENT=concat(COMMENT,'Completed: ', NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$value,$task['ID']));\n        $send['comments'] .=\"Task completed.\\n\";\n    }\n\n    if ($action == 'refaxed') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMPLETED =?,COMPLETED_DATE=NOW(),COMMENT=concat(COMMENT,'Refaxed: ', NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$value,$task['ID']));\n        $send['comments'] .=\"Ok, we resent it to the Fax Server.\\n\";\n    }\n}\n\n\n/**\n *  This function delivers a document to the intended recipient.\n *  Will need to test for Hylafax.\n *  Will need code for Direct messaging.\n *  Will need expansion to other methods of delivery.\n *  Works for email-to-fax.\n *      To be HIPPA compliant fax address must be behind secure firewall with this server.\n *      Some suggest the fax server to fax machine portion of efaxing is not HIPPA compliant, no matter how it is done.\n *      Thus faxing is not HIPPA compliant, and if that affects you, don't deliver this way.\n */\nfunction deliver_document($task)\n{\n    global $facilityService;\n\n    //use PHPMAILER\n    $query          = \"SELECT * FROM users WHERE id=?\";\n    $to_data        =  sqlQuery($query, array($task['TO_ID']));\n    $from_data      =  sqlQuery($query, array($task['FROM_ID']));\n    $facility_data  =  $facilityService->getPrimaryBillingLocation();\n    $query          = \"SELECT * FROM patient_data where pid=?\";\n    $patientData    =  sqlQuery($query, array($task['PATIENT_ID']));\n\n    $from_fax   = preg_replace(\"/[^0-9]/\", \"\", $facility_data['fax']);\n    $from_name  = $from_data['fname'].\" \".$from_data['lname'];\n    $from_fac   = $from_facility['name'];\n    $to_fax     = preg_replace(\"/[^0-9]/\", \"\", $to_data['fax']);\n\n    $to_name    = $to_data['fname'].\" \".$to_data['lname'];\n    $pt_name    = $patientData['fname'].' '.$patientData['lname'];\n\n    $encounter = $task['ENC_ID'];\n\n    $mail = new MyMailer();\n\n    $to_email= $to_fax.\"@\".$GLOBALS['hylafax_server'];\n    $email_sender=$GLOBALS['patient_reminder_sender_email'];\n    //consider using admin email = Notification Email Address\n    //this must be a fax server approved From: address\n    $file_to_attach =   preg_replace('/^file:\\/\\//', \"\", $task['DOC_url']);\n    $file_name =  preg_replace('/^.*\\//', \"\", $task['DOC_url']);\n    $cover_page = \"We are processing this file: \".$filepath.'/'.$filename;\n\n    $mail->AddReplyTo($email_sender, $from_name);\n    $mail->SetFrom($email_sender, $from_name);\n    $mail->AddAddress($to_email); //, $to_name);\n    $mail->Subject = $from_fax;\n    $mail->MsgHTML(\"<html><HEAD> <TITLE>Fax Central openEMR</TITLE> <BASE HREF='http://www.oculoplasticsllc.com'> </HEAD><body><div class='wrapper'>\".$cover_page.\"</div></body></html>\");\n    $mail->IsHTML(true);\n    $mail->AltBody = $cover_page;\n    $mail->AddAttachment($file_to_attach, $file_name);\n    if ($mail->Send()) {\n        return true;\n    } else {\n        $email_status = $mail->ErrorInfo;\n        error_log(\"EMAIL ERROR: \".$email_status, 0);\n        return false;\n    }\n}\n\n\n/**\n *  This function will display the form_taskman table as requested, by date or by status?\n *  Currently it is not used.\n */\nfunction show_task($ajax_req)\n{\n    //$_REQUEST['show_task'] = task_id, or all or by date range?\n    //Could be a HTML5 table layout?\n    //Think about how to display this and should it link to things/documents that were sent, or just status of the request\n    //as listed in the field COMMENTS?  Think, think, think...A bear of little brain...\n}\n\n/**\n *  This function makes and stores a document that we want to deliver.\n */\nfunction make_document($task)\n{\n    global $providerNAME;\n    global $encounter;\n    global $facilityService;\n\n    /**\n     * We want to store the current PDF version of this task.\n     */\n    $query          = \"SELECT * FROM users WHERE id=?\";\n    $to_data        =  sqlQuery($query, array($task['TO_ID']));\n    $from_data      =  sqlQuery($query, array($task['FROM_ID']));\n    $facility_data  =  $facilityService->getPrimaryBillingLocation();\n    $query          = \"SELECT * FROM patient_data where pid=?\";\n    $patientData    =  sqlQuery($query, array($task['PATIENT_ID']));\n\n    $from_fax   = preg_replace(\"/[^0-9]/\", \"\", $facility_data['fax']);\n    $from_name  = $from_data['fname'].\" \".$from_data['lname'];\n    if ($from_data['suffix']) {\n        $from_name .=\", \".$from_data['suffix'];\n    }\n\n    $from_fac   = $from_facility['name'];\n    $to_fax     = preg_replace(\"/[^0-9]/\", \"\", $to_data['fax']);\n    $to_name    = $to_data['fname'].\" \".$to_data['lname'];\n    if ($to_data['suffix']) {\n        $to_name .=\", \".$to_data['suffix'];\n    }\n\n    $pt_name    = $patientData['fname'].' '.$patientData['lname'];\n    $encounter = $task['ENC_ID'];\n    $query = \"select  *,form_encounter.date as encounter_date\n              \n               from forms,form_encounter,form_eye_base, \n                form_eye_hpi,form_eye_ros,form_eye_vitals,\n                form_eye_acuity,form_eye_refraction,form_eye_biometrics,\n                form_eye_external, form_eye_antseg,form_eye_postseg,\n                form_eye_neuro,form_eye_locking\n                    where\n                    forms.deleted != '1'  and\n                    forms.formdir='eye_mag' and\n                    forms.encounter=form_encounter.encounter  and\n                    forms.form_id=form_eye_base.id and\n                    forms.form_id=form_eye_hpi.id and\n                    forms.form_id=form_eye_ros.id and\n                    forms.form_id=form_eye_vitals.id and\n                    forms.form_id=form_eye_acuity.id and\n                    forms.form_id=form_eye_refraction.id and\n                    forms.form_id=form_eye_biometrics.id and\n                    forms.form_id=form_eye_external.id and\n                    forms.form_id=form_eye_antseg.id and\n                    forms.form_id=form_eye_postseg.id and\n                    forms.form_id=form_eye_neuro.id and\n                    forms.form_id=form_eye_locking.id and\n                    forms.form_id =? and\n                    forms.pid=?\";\n    $encounter_data =sqlQuery($query, array($encounter,$task['PATIENT_ID']));\n    @extract($encounter_data);\n    $providerID  =  getProviderIdOfEncounter($encounter);\n    $providerNAME = getProviderName($providerID);\n    $dated = new DateTime($encounter_date);\n    $dated = $dated->format('Y/m/d');\n    $visit_date = oeFormatShortDate($dated);\n    $pid = $task['PATIENT_ID'];\n    $PDF_OUTPUT='1';\n\n    $filepath = $GLOBALS['oer_config']['documents']['repository'] . $task['PATIENT_ID'];\n\n    //so far we make A \"Report\", one per encounter, and \"Faxes\", as many as we need per encounter.\n    //So delete any prior report if that is what we are doing. and replace it.\n    //If it is a fax, can we check to see if the report is already here, and if it is add it, or do we have to\n    // always remake it?  For now, REMAKE IT...\n\n    if ($task['DOC_TYPE'] =='Fax') {\n        $category_name = \"Communication\"; //Faxes are stored in the Documents->Communication category.  Do we need to translate this?\n        //$category_name = xl('Communication');\n        $query = \"select id from categories where name =?\";\n        $ID = sqlQuery($query, array($category_name));\n        $category_id = $ID['id'];\n\n        $filename = \"Fax_\".$encounter.\"_\".$to_data['lname'].\".pdf\";\n        while (file_exists($filepath.'/'.$filename)) {\n            $count++;\n            $filename = \"FAX_\".$encounter.\"_\".$to_data['lname'].\"_\".$count.\".pdf\";\n        }\n    } else {\n        $category_name = \"Encounters - Eye\";\n        //$category_name = \"Encounters\";\n        // $category_name = \"Encounters - Eye\"; //<---- openEMR base requires this.  My Category names don't use the \"- Eye\" part...\n        // Should the end user change the Document Category Names, this as is will fail.\n        // Is this an issue also for foreign language users?\n        //  -- perhaps not as I suspect translations occur after DB work just before display to end user.\n        // Maybe we should search category_names for the first match to 'Encounters%' and use that id?\n        $query = \"select id from categories where name =?\";\n        $ID = sqlQuery($query, array($category_name));\n        $category_id = $ID['id'];\n\n        $filename = \"Report_\".$encounter.\".pdf\";\n        foreach (glob($filepath.'/'.$filename) as $file) {\n            unlink($file); //maybe shorten to just unlink($filepath.'/'.$filename); - well this does test to see if it is there\n        }\n\n        $sql = \"DELETE from categories_to_documents where document_id IN (SELECT id from documents where documents.url like ?)\";\n        sqlQuery($sql, array(\"%\".$filename));\n        $sql = \"DELETE from documents where documents.url like ?\";\n        sqlQuery($sql, array(\"%\".$filename));\n    }\n    \n    $config_mpdf = array(\n        'tempDir' => $GLOBALS['MPDF_WRITE_DIR'],\n        'mode' => $GLOBALS['pdf_language'],\n        'format' => $GLOBALS['pdf_size'],\n        'default_font_size' => '9',\n        'default_font' => '',\n        'margin_left' => $GLOBALS['pdf_left_margin'],\n        'margin_right' => $GLOBALS['pdf_right_margin'],\n        'margin_top' => $GLOBALS['pdf_top_margin'],\n        'margin_bottom' => $GLOBALS['pdf_bottom_margin'],\n        'margin_header' => '',\n        'margin_footer' => '',\n        'orientation' => $GLOBALS['pdf_layout'],\n        'shrink_tables_to_fit' => 1,\n        'use_kwt' => true,\n        'keep_table_proportions' => true\n    );\n\n    $pdf = new mPDF($config_mpdf);\n    if ($_SESSION['language_direction'] == 'rtl') {\n        $pdf->SetDirectionality('rtl');\n    }\n\n    ob_start();\n    ?><html>\n    <head>\n        <TITLE><?php echo xlt('Taskman: Documents in openEMR'); ?></TITLE>\n        <style>\n            .wrapper {\n                margin:20px;\n            }\n            .col1 {\n                font-weight:bold;\n                width:100px;\n                padding:10px;\n                text-align:right;\n            }\n            .col2 {\n                width:375px;\n                padding:10px;\n            }\n        </style>\n        <link rel=\"stylesheet\" href=\"<?php echo $webserver_root; ?>/interface/themes/style_pdf.css\" type=\"text/css\">\n    </head>\n    <body>\n    <?php\n    if ($task['DOC_TYPE'] == 'Fax') {\n        ?>\n        <div class='wrapper'>\n        <?php echo report_header($task['PATIENT_ID'], 'PDF'); ?>\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <hr />\n            <table>\n                <tr>\n                <td class='col1'><?php echo xlt('From'); ?>:</td>\n                    <td class='col2'>\n                    <?php echo text($from_name); ?><br />\n\n                    </td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('Address'); ?>:</td>\n                    <td class='col2'>\n                    <?php if ($from_data['name']) {\n                        echo text($from_data['name']).\"<br />\";\n} ?>\n                    <?php echo text($from_data['street']); ?><br />\n                    <?php echo text($from_data['city']); ?>, <?php echo text($from_data['state']).\" \".text($from_data['zip']); ?>\n                        <br />\n                    </td>\n                </tr>\n                <tr>\n                    <td class='col1'>\n                    <?php echo xlt('Phone'); ?>:\n                    </td>\n                    <td class='col2'>\n                    <?php echo text($from_data['phonew1']); ?>\n                    </td>\n                </tr>\n                <tr>\n                    <td class='col1'>\n                    <?php echo xlt('Fax'); ?>:\n                    </td>\n                <td class='col2'><?php echo text($from_data['fax']); ?><br />\n                    </td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('To'); ?>:</td>\n                <td class='col2'><?php echo text($to_name); ?></td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('Address'); ?>:</td>\n                    <td class='col2'>\n                    <?php echo text($to_data['street']).\"<br />\n\t\t\t\t \t\t\t\".text($to_data['city']).\", \".text($to_data['state']).\" \".text($to_data['zip']); ?>\n                            <br />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Phone'); ?>:\n                        </td>\n                        <td class='col2'>\n                            <?php echo text($to_data['phonew1']); ?>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Fax'); ?>:\n                        </td>\n                        <td class='col2'>\n                            <?php echo text($to_data['fax']); ?>\n                        </td>\n                    </tr>\n                    <tr><td colspan=\"2\"><br /><hr /></td></tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Comments'); ?>:\n                        </td>\n                        <td class='col2'><?php echo xlt('Report of visit'); ?>: <?php echo text($pt_name); ?> on <?php echo $visit_date; ?>\n                        </td>\n                    </tr>\n            </table>\n        </div>\n    <?php\n    echo '<page></page><div style=\"page-break-after:always; clear:both\"></div>';\n    }\n\n        // \tIf the doc_id does exit, why remake it?\n        //\tWe could just add another attachment, stopping here at the coversheet, and adding the doc_name that we sent...\n        //\tNo.  We actually need a physical copy of what we sent, since the report itself can be overwritten.  Keep it legal.\n        //\tUnless the Report.pdf can be merged with the cover sheet.  Until then, just redo it all.\n        echo narrative($pid, $encounter, $task['DOC_TYPE'], $form_id);\n        ?>\n    </body>\n    </html>\n    <?php\n    global $web_root, $webserver_root;\n    $content = ob_get_clean();\n\n    // Fix a nasty html2pdf bug - it ignores document root!\n    $i = 0;\n    $wrlen = strlen($web_root);\n    $wsrlen = strlen($webserver_root);\n    while (true) {\n        $i = stripos($content, \" src='/\", $i + 1);\n        if ($i === false) {\n            break;\n        }\n\n        if (substr($content, $i+6, $wrlen) === $web_root &&\n          substr($content, $i+6, $wsrlen) !== $webserver_root) {\n            $content = substr($content, 0, $i + 6) . $webserver_root . substr($content, $i + 6 + $wrlen);\n        }\n    }\n\n    // Below is for including style sheet for report specific styles. Left here for future use.\n    //$styles = file_get_contents('../css/report.css');\n    //$pdf->writeHTML($styles, 1);\n    //$pdf->writeHTML($content, 2);\n\n    $pdf->writeHTML($content, 0); // false or zero works for both mPDF and HTML2PDF\n\n    $tmpdir = $GLOBALS['OE_SITE_DIR'] . '/documents/temp/'; // Best to get a known system temp directory to ensure a writable directory.\n    $temp_filename = $tmpdir . $filename;\n    $content_pdf = $pdf->Output($temp_filename, 'F');\n    $type = \"application/pdf\";\n    $size = filesize($temp_filename);\n\n    $return = addNewDocument($filename, $type, $temp_filename, 0, $size, $task['FROM_ID'], $task['PATIENT_ID'], $category_id);\n    $task['DOC_ID'] = $return['doc_id'];\n    $task['DOC_url'] = $filepath.'/'.$filename;\n    $sql = \"UPDATE documents set encounter_id=? where id=?\"; //link it to this encounter\n    sqlQuery($sql, array($encounter,$task['DOC_ID']));\n\n    unlink($temp_filename);\n\n    return $task;\n}\n"], "fixing_code": ["<?php\n/**\n *  php/taskman_functions.php\n *\n * Function which extend taskman.php, current a email-to-fax gateway\n *\n *\n * Copyright (C) 2016 Raymond Magauran <magauran@MedFetch.com>\n *\n * LICENSE: This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU Affero General Public License as\n *  published by the Free Software Foundation, either version 3 of the\n *  License, or (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU Affero General Public License for more details.\n *\n *  You should have received a copy of the GNU Affero General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package OpenEMR\n * @author Ray Magauran <magauran@MedFetch.com>\n * @link http://www.open-emr.org\n */\n\nuse Mpdf\\Mpdf;\nuse OpenEMR\\Services\\FacilityService;\n\n$facilityService = new FacilityService();\n\n/**\n *  This function creates a task as a record in the form_taskman DB_table.\n */\nfunction make_task($ajax_req)\n{\n    global $send;\n    $from_id    = $ajax_req['from_id'];\n    $to_id      = $ajax_req['to_id'];\n    $patient_id = $ajax_req['pid'];\n    $doc_type   = $ajax_req['doc_type'];\n    $doc_id     = $ajax_req['doc_id'];\n    $enc        = $ajax_req['enc'];\n\n    $query      = \"SELECT * FROM users WHERE id=?\";\n    $to_data    =  sqlQuery($query, array($to_id));\n    $filename   = \"Fax_\".$encounter.\"_\".$to_data['lname'].\".pdf\";\n\n    $query = \"SELECT * FROM documents where encounter_id=? and foreign_id=? and url like ?\";\n    $doc = sqlQuery($query, array($encounter,$pid,'%'.$filename.'%' ));\n\n\n    $sql = \"SELECT * from form_taskman where FROM_ID=? and TO_ID=? and PATIENT_ID=? and ENC_ID=?\";\n    $task = sqlQuery($sql, array($from_id,$to_id,$patient_id,$enc));\n\n    if (!$doc['ID'] && $task['ID'] && ($task['REQ_DATE'] < (time() - 60))) {\n        // The task was requested more than a minute ago (prevents multi-clicks from \"re-generating\" the PDF),\n        // but the document was deleted (to redo it)...\n        // Delete the task, recreate the task, and send the newly made PDF.\n        $sql = \"DELETE from form_taskman where FROM_ID=? and TO_ID=? and PATIENT_ID=? and ENC_ID=?\";\n        $task = sqlQuery($sql, array($from_id,$to_id,$patient_id,$enc));\n    }\n\n    if ($task['ID'] && $task['COMPLETED'] =='2') {\n        $send['comments'] = xlt('This fax has already been sent.').\" \".\n                            xlt('If you made changes and want to re-send it, delete the original (in Communications) or wait 60 seconds, and try again.').\" \".\n                            xlt('Filename').\": \". text($filename);\n        echo json_encode($send);\n        exit;\n    } else if ($task['ID'] && $task['COMPLETED'] =='1') {\n        if ($task['DOC_TYPE'] == 'Fax') {\n            $send['DOC_link'] = \"<a href='\".$webroot.\"/openemr/controller.php?document&view&patient_id=\".attr($task['PATIENT_ID']).\"&doc_id=\".attr($task['DOC_ID']).\"'\n\t\t\t\t\t\t\t\ttarget='_blank' title='\".xla('View the Summary Report sent to Fax Server.').\"'>\n\t\t\t\t\t\t\t\t<i class='fa fa-file-pdf-o fa-fw'></i></a>\n\t\t\t\t\t\t\t\t<i class='fa fa-repeat fa-fw'\n\t\t\t\t\t\t\t\t\tonclick=\\\"top.restoreSession(); create_task('\".attr($pat_data['ref_providerID']).\"','Fax-resend','ref'); return false;\\\">\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\";\n                            //add a resend option.\n            $send['comments'] = xlt('This fax has already been sent.');\n            echo json_encode($send);\n            exit;\n        } else if ($task['DOC_TYPE'] == \"Fax-resend\") {\n            //we need to resend this fax????\n            //You can only resend from here once.\n            $send['comments'] = xlt('To resend, delete the file from Communications, reload this page and try again.');\n            echo json_encode($send);\n            update_taskman($task, 'refaxed', '2');\n            exit;\n        } else { //DOC_TYPE is a Fax or Report\n            $send['comments'] = xlt('Currently working on making this document').\"...\\n\";\n        }\n    } else if (!$task['ID']) {\n        $sql = \"INSERT into form_taskman\n\t\t\t\t(REQ_DATE, FROM_ID,  TO_ID,  PATIENT_ID,  DOC_TYPE,  DOC_ID,  ENC_ID) VALUES\n\t\t\t\t(NOW(), ?, ?, ?, ?, ?, ?)\";\n        sqlQuery($sql, array($from_id, $to_id, $patient_id, $doc_type, $doc_id, $enc));\n    } else {\n        $send['comments'] = xlt('Currently working on making this document').\"...\\n\";\n    }\n}\n\n/**\n *  This function reads and processes an order (or task).\n */\nfunction process_tasks($task)\n{\n    global $send;\n    /**\n     *  First see if the doc_ID exists\n     *  if not we need to create this\n     */\n    $task = make_document($task);\n    update_taskman($task, 'created', '1');\n    if ($task['DOC_TYPE'] == 'Fax') {\n        deliver_document($task);\n    }\n\n    update_taskman($task, 'completed', '1');\n\n    if ($task['DOC_TYPE'] == \"Fax\") {\n        //now return any objects you need to Eye Form\n        $send['DOC_link'] = \"<a href='\".$webroot.\"/openemr/controller.php?document&view&patient_id=\".attr($task['PATIENT_ID']).\"&doc_id=\".attr($task['DOC_ID']).\"'\n\t\t\t\t\t\t\t\ttarget='_blank' title=\".xlt('Report was faxed. Click to view.').\">\n\t\t\t\t\t\t\t\t<i class='fa fa-file-pdf-o fa-fw'></i>\n\t\t\t\t\t\t\t</a>\";\n                            //if we want a \"resend\" icon, add it here.\n    }\n\n    return $send;\n}\n\n /**\n *  This function updates the taskman record in the form_taskman table.\n */\nfunction update_taskman($task, $action, $value)\n{\n    global $send;\n    if ($action == 'created') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMMENT=concat('Created: ',NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$task['ID']));\n        $send['comments'] .=\"Documented created.\\n\";\n    }\n\n    if ($action == 'completed') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMPLETED =?,COMPLETED_DATE=NOW(),COMMENT=concat(COMMENT,'Completed: ', NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$value,$task['ID']));\n        $send['comments'] .=\"Task completed.\\n\";\n    }\n\n    if ($action == 'refaxed') {\n        $sql = \"UPDATE form_taskman set DOC_ID=?,COMPLETED =?,COMPLETED_DATE=NOW(),COMMENT=concat(COMMENT,'Refaxed: ', NOW(),'\\n') where ID=?\";\n        sqlQuery($sql, array($task['DOC_ID'],$value,$task['ID']));\n        $send['comments'] .=\"Ok, we resent it to the Fax Server.\\n\";\n    }\n}\n\n\n/**\n *  This function delivers a document to the intended recipient.\n *  Will need to test for Hylafax.\n *  Will need code for Direct messaging.\n *  Will need expansion to other methods of delivery.\n *  Works for email-to-fax.\n *      To be HIPPA compliant fax address must be behind secure firewall with this server.\n *      Some suggest the fax server to fax machine portion of efaxing is not HIPPA compliant, no matter how it is done.\n *      Thus faxing is not HIPPA compliant, and if that affects you, don't deliver this way.\n */\nfunction deliver_document($task)\n{\n    global $facilityService;\n\n    //use PHPMAILER\n    $query          = \"SELECT * FROM users WHERE id=?\";\n    $to_data        =  sqlQuery($query, array($task['TO_ID']));\n    $from_data      =  sqlQuery($query, array($task['FROM_ID']));\n    $facility_data  =  $facilityService->getPrimaryBillingLocation();\n    $query          = \"SELECT * FROM patient_data where pid=?\";\n    $patientData    =  sqlQuery($query, array($task['PATIENT_ID']));\n\n    $from_fax   = preg_replace(\"/[^0-9]/\", \"\", $facility_data['fax']);\n    $from_name  = $from_data['fname'].\" \".$from_data['lname'];\n    $from_fac   = $from_facility['name'];\n    $to_fax     = preg_replace(\"/[^0-9]/\", \"\", $to_data['fax']);\n\n    $to_name    = $to_data['fname'].\" \".$to_data['lname'];\n    $pt_name    = $patientData['fname'].' '.$patientData['lname'];\n\n    $encounter = $task['ENC_ID'];\n\n    $mail = new MyMailer();\n\n    $to_email= $to_fax.\"@\".$GLOBALS['hylafax_server'];\n    $email_sender=$GLOBALS['patient_reminder_sender_email'];\n    //consider using admin email = Notification Email Address\n    //this must be a fax server approved From: address\n    $file_to_attach =   preg_replace('/^file:\\/\\//', \"\", $task['DOC_url']);\n    $file_name =  preg_replace('/^.*\\//', \"\", $task['DOC_url']);\n    $cover_page = \"We are processing this file: \".$filepath.'/'.$filename;\n\n    $mail->AddReplyTo($email_sender, $from_name);\n    $mail->SetFrom($email_sender, $from_name);\n    $mail->AddAddress($to_email); //, $to_name);\n    $mail->Subject = $from_fax;\n    $mail->MsgHTML(\"<html><HEAD> <TITLE>Fax Central openEMR</TITLE> <BASE HREF='http://www.oculoplasticsllc.com'> </HEAD><body><div class='wrapper'>\".$cover_page.\"</div></body></html>\");\n    $mail->IsHTML(true);\n    $mail->AltBody = $cover_page;\n    $mail->AddAttachment($file_to_attach, $file_name);\n    if ($mail->Send()) {\n        return true;\n    } else {\n        $email_status = $mail->ErrorInfo;\n        error_log(\"EMAIL ERROR: \".$email_status, 0);\n        return false;\n    }\n}\n\n\n/**\n *  This function will display the form_taskman table as requested, by date or by status?\n *  Currently it is not used.\n */\nfunction show_task($ajax_req)\n{\n    //$_REQUEST['show_task'] = task_id, or all or by date range?\n    //Could be a HTML5 table layout?\n    //Think about how to display this and should it link to things/documents that were sent, or just status of the request\n    //as listed in the field COMMENTS?  Think, think, think...A bear of little brain...\n}\n\n/**\n *  This function makes and stores a document that we want to deliver.\n */\nfunction make_document($task)\n{\n    global $providerNAME;\n    global $encounter;\n    global $facilityService;\n\n    /**\n     * We want to store the current PDF version of this task.\n     */\n    $query          = \"SELECT * FROM users WHERE id=?\";\n    $to_data        =  sqlQuery($query, array($task['TO_ID']));\n    $from_data      =  sqlQuery($query, array($task['FROM_ID']));\n    $facility_data  =  $facilityService->getPrimaryBillingLocation();\n    $query          = \"SELECT * FROM patient_data where pid=?\";\n    $patientData    =  sqlQuery($query, array($task['PATIENT_ID']));\n\n    $from_fax   = preg_replace(\"/[^0-9]/\", \"\", $facility_data['fax']);\n    $from_name  = $from_data['fname'].\" \".$from_data['lname'];\n    if ($from_data['suffix']) {\n        $from_name .=\", \".$from_data['suffix'];\n    }\n\n    $from_fac   = $from_facility['name'];\n    $to_fax     = preg_replace(\"/[^0-9]/\", \"\", $to_data['fax']);\n    $to_name    = $to_data['fname'].\" \".$to_data['lname'];\n    if ($to_data['suffix']) {\n        $to_name .=\", \".$to_data['suffix'];\n    }\n\n    $pt_name    = $patientData['fname'].' '.$patientData['lname'];\n    $encounter = $task['ENC_ID'];\n    $query = \"select  *,form_encounter.date as encounter_date\n              \n               from forms,form_encounter,form_eye_base, \n                form_eye_hpi,form_eye_ros,form_eye_vitals,\n                form_eye_acuity,form_eye_refraction,form_eye_biometrics,\n                form_eye_external, form_eye_antseg,form_eye_postseg,\n                form_eye_neuro,form_eye_locking\n                    where\n                    forms.deleted != '1'  and\n                    forms.formdir='eye_mag' and\n                    forms.encounter=form_encounter.encounter  and\n                    forms.form_id=form_eye_base.id and\n                    forms.form_id=form_eye_hpi.id and\n                    forms.form_id=form_eye_ros.id and\n                    forms.form_id=form_eye_vitals.id and\n                    forms.form_id=form_eye_acuity.id and\n                    forms.form_id=form_eye_refraction.id and\n                    forms.form_id=form_eye_biometrics.id and\n                    forms.form_id=form_eye_external.id and\n                    forms.form_id=form_eye_antseg.id and\n                    forms.form_id=form_eye_postseg.id and\n                    forms.form_id=form_eye_neuro.id and\n                    forms.form_id=form_eye_locking.id and\n                    forms.form_id =? and\n                    forms.pid=?\";\n    $encounter_data =sqlQuery($query, array($encounter,$task['PATIENT_ID']));\n    @extract($encounter_data);\n    $providerID  =  getProviderIdOfEncounter($encounter);\n    $providerNAME = getProviderName($providerID);\n    $dated = new DateTime($encounter_date);\n    $dated = $dated->format('Y/m/d');\n    $visit_date = oeFormatShortDate($dated);\n    $pid = $task['PATIENT_ID'];\n    $PDF_OUTPUT='1';\n\n    $filepath = $GLOBALS['oer_config']['documents']['repository'] . $task['PATIENT_ID'];\n\n    //so far we make A \"Report\", one per encounter, and \"Faxes\", as many as we need per encounter.\n    //So delete any prior report if that is what we are doing. and replace it.\n    //If it is a fax, can we check to see if the report is already here, and if it is add it, or do we have to\n    // always remake it?  For now, REMAKE IT...\n\n    if ($task['DOC_TYPE'] =='Fax') {\n        $category_name = \"Communication\"; //Faxes are stored in the Documents->Communication category.  Do we need to translate this?\n        //$category_name = xl('Communication');\n        $query = \"select id from categories where name =?\";\n        $ID = sqlQuery($query, array($category_name));\n        $category_id = $ID['id'];\n\n        $filename = \"Fax_\".$encounter.\"_\".$to_data['lname'].\".pdf\";\n        while (file_exists($filepath.'/'.$filename)) {\n            $count++;\n            $filename = \"FAX_\".$encounter.\"_\".$to_data['lname'].\"_\".$count.\".pdf\";\n        }\n    } else {\n        $category_name = \"Encounters - Eye\";\n        //$category_name = \"Encounters\";\n        // $category_name = \"Encounters - Eye\"; //<---- openEMR base requires this.  My Category names don't use the \"- Eye\" part...\n        // Should the end user change the Document Category Names, this as is will fail.\n        // Is this an issue also for foreign language users?\n        //  -- perhaps not as I suspect translations occur after DB work just before display to end user.\n        // Maybe we should search category_names for the first match to 'Encounters%' and use that id?\n        $query = \"select id from categories where name =?\";\n        $ID = sqlQuery($query, array($category_name));\n        $category_id = $ID['id'];\n\n        $filename = \"Report_\".$encounter.\".pdf\";\n        foreach (glob($filepath.'/'.$filename) as $file) {\n            unlink($file); //maybe shorten to just unlink($filepath.'/'.$filename); - well this does test to see if it is there\n        }\n\n        $sql = \"DELETE from categories_to_documents where document_id IN (SELECT id from documents where documents.url like ?)\";\n        sqlQuery($sql, array(\"%\".$filename));\n        $sql = \"DELETE from documents where documents.url like ?\";\n        sqlQuery($sql, array(\"%\".$filename));\n    }\n\n    $config_mpdf = array(\n        'tempDir' => $GLOBALS['MPDF_WRITE_DIR'],\n        'mode' => $GLOBALS['pdf_language'],\n        'format' => $GLOBALS['pdf_size'],\n        'default_font_size' => '9',\n        'default_font' => '',\n        'margin_left' => $GLOBALS['pdf_left_margin'],\n        'margin_right' => $GLOBALS['pdf_right_margin'],\n        'margin_top' => $GLOBALS['pdf_top_margin'],\n        'margin_bottom' => $GLOBALS['pdf_bottom_margin'],\n        'margin_header' => '',\n        'margin_footer' => '',\n        'orientation' => $GLOBALS['pdf_layout'],\n        'shrink_tables_to_fit' => 1,\n        'use_kwt' => true,\n        'keep_table_proportions' => true\n    );\n\n    $pdf = new mPDF($config_mpdf);\n    if ($_SESSION['language_direction'] == 'rtl') {\n        $pdf->SetDirectionality('rtl');\n    }\n\n    ob_start();\n    ?><html>\n    <head>\n        <TITLE><?php echo xlt('Taskman: Documents in openEMR'); ?></TITLE>\n        <style>\n            .wrapper {\n                margin:20px;\n            }\n            .col1 {\n                font-weight:bold;\n                width:100px;\n                padding:10px;\n                text-align:right;\n            }\n            .col2 {\n                width:375px;\n                padding:10px;\n            }\n        </style>\n        <link rel=\"stylesheet\" href=\"<?php echo $webserver_root; ?>/interface/themes/style_pdf.css\" type=\"text/css\">\n    </head>\n    <body>\n    <?php\n    if ($task['DOC_TYPE'] == 'Fax') {\n        ?>\n        <div class='wrapper'>\n        <?php echo report_header($task['PATIENT_ID'], 'PDF'); ?>\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <hr />\n            <table>\n                <tr>\n                <td class='col1'><?php echo xlt('From'); ?>:</td>\n                    <td class='col2'>\n                    <?php echo text($from_name); ?><br />\n\n                    </td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('Address'); ?>:</td>\n                    <td class='col2'>\n                    <?php if ($from_data['name']) {\n                        echo text($from_data['name']).\"<br />\";\n} ?>\n                    <?php echo text($from_data['street']); ?><br />\n                    <?php echo text($from_data['city']); ?>, <?php echo text($from_data['state']).\" \".text($from_data['zip']); ?>\n                        <br />\n                    </td>\n                </tr>\n                <tr>\n                    <td class='col1'>\n                    <?php echo xlt('Phone'); ?>:\n                    </td>\n                    <td class='col2'>\n                    <?php echo text($from_data['phonew1']); ?>\n                    </td>\n                </tr>\n                <tr>\n                    <td class='col1'>\n                    <?php echo xlt('Fax'); ?>:\n                    </td>\n                <td class='col2'><?php echo text($from_data['fax']); ?><br />\n                    </td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('To'); ?>:</td>\n                <td class='col2'><?php echo text($to_name); ?></td>\n                </tr>\n                <tr>\n                <td class='col1'><?php echo xlt('Address'); ?>:</td>\n                    <td class='col2'>\n                    <?php echo text($to_data['street']).\"<br />\n\t\t\t\t \t\t\t\".text($to_data['city']).\", \".text($to_data['state']).\" \".text($to_data['zip']); ?>\n                            <br />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Phone'); ?>:\n                        </td>\n                        <td class='col2'>\n                            <?php echo text($to_data['phonew1']); ?>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Fax'); ?>:\n                        </td>\n                        <td class='col2'>\n                            <?php echo text($to_data['fax']); ?>\n                        </td>\n                    </tr>\n                    <tr><td colspan=\"2\"><br /><hr /></td></tr>\n                    <tr>\n                        <td class='col1'>\n                            <?php echo xlt('Comments'); ?>:\n                        </td>\n                        <td class='col2'><?php echo xlt('Report of visit'); ?>: <?php echo text($pt_name); ?> on <?php echo text($visit_date); ?>\n                        </td>\n                    </tr>\n            </table>\n        </div>\n    <?php\n    echo '<page></page><div style=\"page-break-after:always; clear:both\"></div>';\n    }\n\n        // \tIf the doc_id does exit, why remake it?\n        //\tWe could just add another attachment, stopping here at the coversheet, and adding the doc_name that we sent...\n        //\tNo.  We actually need a physical copy of what we sent, since the report itself can be overwritten.  Keep it legal.\n        //\tUnless the Report.pdf can be merged with the cover sheet.  Until then, just redo it all.\n        echo narrative($pid, $encounter, $task['DOC_TYPE'], $form_id);\n        ?>\n    </body>\n    </html>\n    <?php\n    global $web_root, $webserver_root;\n    $content = ob_get_clean();\n\n    // Fix a nasty html2pdf bug - it ignores document root!\n    $i = 0;\n    $wrlen = strlen($web_root);\n    $wsrlen = strlen($webserver_root);\n    while (true) {\n        $i = stripos($content, \" src='/\", $i + 1);\n        if ($i === false) {\n            break;\n        }\n\n        if (substr($content, $i+6, $wrlen) === $web_root &&\n          substr($content, $i+6, $wsrlen) !== $webserver_root) {\n            $content = substr($content, 0, $i + 6) . $webserver_root . substr($content, $i + 6 + $wrlen);\n        }\n    }\n\n    // Below is for including style sheet for report specific styles. Left here for future use.\n    //$styles = file_get_contents('../css/report.css');\n    //$pdf->writeHTML($styles, 1);\n    //$pdf->writeHTML($content, 2);\n\n    $pdf->writeHTML($content, 0); // false or zero works for both mPDF and HTML2PDF\n\n    $tmpdir = $GLOBALS['OE_SITE_DIR'] . '/documents/temp/'; // Best to get a known system temp directory to ensure a writable directory.\n    $temp_filename = $tmpdir . $filename;\n    $content_pdf = $pdf->Output($temp_filename, 'F');\n    $type = \"application/pdf\";\n    $size = filesize($temp_filename);\n\n    $return = addNewDocument($filename, $type, $temp_filename, 0, $size, $task['FROM_ID'], $task['PATIENT_ID'], $category_id);\n    $task['DOC_ID'] = $return['doc_id'];\n    $task['DOC_url'] = $filepath.'/'.$filename;\n    $sql = \"UPDATE documents set encounter_id=? where id=?\"; //link it to this encounter\n    sqlQuery($sql, array($encounter,$task['DOC_ID']));\n\n    unlink($temp_filename);\n\n    return $task;\n}\n"], "filenames": ["interface/forms/eye_mag/php/taskman_functions.php"], "buggy_code_start_loc": [68], "buggy_code_end_loc": [469], "fixing_code_start_loc": [68], "fixing_code_end_loc": [469], "type": "CWE-89", "message": "An issue was discovered in OpenEMR before 5.0.1 Patch 7. There is SQL Injection in the make_task function in /interface/forms/eye_mag/php/taskman_functions.php via /interface/forms/eye_mag/taskman.php.", "other": {"cve": {"id": "CVE-2018-17179", "sourceIdentifier": "cve@mitre.org", "published": "2019-05-17T16:29:00.250", "lastModified": "2019-05-20T14:04:16.860", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in OpenEMR before 5.0.1 Patch 7. There is SQL Injection in the make_task function in /interface/forms/eye_mag/php/taskman_functions.php via /interface/forms/eye_mag/taskman.php."}, {"lang": "es", "value": "Un problema fue descubierto en OpenEMR antes del Patch  5.0.1. Hay SQL Injection en la funci\u00f3n make_task en /interface/forms/eye_mag/php/taskman_functions.php a trav\u00e9s de /interface/forms/eye_mag/taskman.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.0.1.7", "matchCriteriaId": "3E6ABA37-073E-43C1-99B5-66CA7DA459FB"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/3e22d11c7175c1ebbf3d862545ce6fee18f70617", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.open-emr.org/wiki/index.php/OpenEMR_Patches#5.0.1_Patch_.289.2F9.2F18.29", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/3e22d11c7175c1ebbf3d862545ce6fee18f70617"}}