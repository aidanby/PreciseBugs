{"buggy_code": ["<?php\n\n/**\n * Add/Edit Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2017-2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Core\\Header;\n\nif (isset($_POST['mode'])) {\n    if (!CsrfUtils::verifyCsrfToken($_POST[\"csrf_token_form\"])) {\n        CsrfUtils::csrfNotVerified();\n    }\n\n    $currentUser = $_SESSION['authUserID'];\n    $created_time = date('Y-m-d H:i');\n    if ($_POST[\"amendment_id\"] == \"\") {\n        // New. Insert\n        $query = \"INSERT INTO amendments SET\n\t\t\tamendment_date = ?,\n\t\t\tamendment_by = ?,\n\t\t\tamendment_status = ?,\n\t\t\tpid = ?,\n\t\t\tamendment_desc = ?,\n\t\t\tcreated_by = ?,\n\t\t\tcreated_time = ?\";\n        $sqlBindArray = array(\n            DateToYYYYMMDD($_POST['amendment_date']),\n            $_POST['form_amendment_by'],\n            $_POST['form_amendment_status'],\n            $pid,\n            $_POST['desc'],\n            $currentUser,\n            $created_time\n        );\n\n        $amendment_id = sqlInsert($query, $sqlBindArray);\n    } else {\n        $amendment_id = $_POST['amendment_id'];\n        // Existing. Update\n        $query = \"UPDATE amendments SET\n\t\t\tamendment_date = ?,\n\t\t\tamendment_by = ?,\n\t\t\tamendment_status = ?,\n\t\t\tamendment_desc = ?,\n\t\t\tmodified_by = ?,\n\t\t\tmodified_time = ?\n\t\t\tWHERE amendment_id = ?\";\n        $sqlBindArray = array(\n            DateToYYYYMMDD($_POST['amendment_date']),\n            $_POST['form_amendment_by'],\n            $_POST['form_amendment_status'],\n            $_POST['desc'],\n            $currentUser,\n            $created_time,\n            $_POST['amendment_id']\n        );\n        sqlStatement($query, $sqlBindArray);\n    }\n\n    // Insert into amendments_history\n    $query = \"INSERT INTO amendments_history SET\n\t\tamendment_id = ? ,\n\t\tamendment_note = ?,\n\t\tamendment_status = ?,\n\t\tcreated_by = ?,\n\t\tcreated_time = ?\";\n    $sqlBindArray = array(\n        $amendment_id,\n        $_POST['note'],\n        $_POST[\"form_amendment_status\"],\n        $currentUser,\n        $created_time\n    );\n    sqlStatement($query, $sqlBindArray);\n    header(\"Location:add_edit_amendments.php?id=\" . urlencode($amendment_id));\n    exit;\n}\n\n$amendment_id = $amendment_id ?? ($_REQUEST['id'] ?? '');\nif (!empty($amendment_id)) {\n    $query = \"SELECT * FROM amendments WHERE amendment_id = ? \";\n    $resultSet = sqlQuery($query, array($amendment_id));\n    $amendment_date = $resultSet['amendment_date'];\n    $amendment_status = $resultSet['amendment_status'];\n    $amendment_by = $resultSet['amendment_by'];\n    $amendment_desc = $resultSet['amendment_desc'];\n\n    $query = \"SELECT * FROM amendments_history ah INNER JOIN users u ON ah.created_by = u.id WHERE amendment_id = ? \";\n    $resultSet = sqlStatement($query, array($amendment_id));\n}\n\n// Check the ACL\n$haveAccess = AclMain::aclCheckCore('patients', 'trans');\n$onlyRead = ( $haveAccess ) ? 0 : 1;\n$onlyRead = ( $onlyRead || (!empty($amendment_status)) ) ? 1 : 0;\n$customAttributes = ( $onlyRead ) ? array(\"disabled\" => \"true\") : null;\n\n?>\n\n<html>\n<head>\n\n<?php Header::setupHeader('datetime-picker');\necho \"<title>\" . xlt('Amendments') . \"</title>\";\n?>\n\n<script>\n\nfunction formValidation() {\n    if ( $(\"#amendment_date\").val() == \"\" ) {\n        alert(<?php echo xlj('Select Amendment Date'); ?>);\n        return;\n    } else if ( $(\"#form_amendment_by\").val() == \"\" ) {\n        alert(<?php echo xlj('Select Requested By'); ?>);\n        return;\n    }\n\n    var statusText = $(\"#form_amendment_status option:selected\").text();\n    $(\"#note\").val($(\"#note\").val() + ' ' + statusText);\n\n    $(\"#add_edit_amendments\").submit();\n}\n\n$(function () {\n    $('.datepicker').datetimepicker({\n        <?php $datetimepicker_timepicker = false; ?>\n        <?php $datetimepicker_showseconds = false; ?>\n        <?php $datetimepicker_formatInput = true; ?>\n        <?php require($GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'); ?>\n        <?php // can add any additional javascript settings to datetimepicker here; need to prepend first setting with a comma ?>\n    });\n});\n\n</script>\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2><?php echo xlt('Amendments'); ?></h2>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"btn-group\">\n                    <?php if (! $onlyRead) { ?>\n                        <a href=# onclick=\"formValidation()\" class=\"btn btn-primary btn-sm btn-save\"><span><?php echo xlt('Save');?></span></a>\n                    <?php } ?>\n                    <a href=\"list_amendments.php\" class=\"btn btn-secondary btn-sm btn-back\"><span><?php echo xlt('Back');?></span></a>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <form action=\"add_edit_amendments.php\" name=\"add_edit_amendments\" id=\"add_edit_amendments\" method=\"post\" onsubmit='return top.restoreSession()'>\n                    <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\" />\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Requested Date'); ?></label>\n                        <?php if (! $onlyRead) { ?>\n                            <input type='text' size='10' class='form-control datepicker' name=\"amendment_date\" id=\"amendment_date\"\n                                value='<?php echo (!empty($amendment_date)) ? attr(oeFormatShortDate($amendment_date)) : attr(oeFormatShortDate()); ?>'\n                            />\n                        <?php } else { ?>\n                            <input type='text' size='10' class='form-control' name=\"amendment_date\" id=\"amendment_date\" readonly\n                                value='<?php echo (!empty($amendment_date)) ? attr(oeFormatShortDate($amendment_date)) : attr(oeFormatShortDate()); ?>'\n                            />\n                        <?php } ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Requested By'); ?></label>\n                        <?php echo generate_select_list(\"form_amendment_by\", \"amendment_from\", ($amendment_by ?? ''), 'Amendment Request By', ' ', '', '', '', $customAttributes); ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Request Description'); ?></label>\n                        <textarea <?php echo ( $onlyRead ) ? \"readonly\" : \"\";  ?> id=\"desc\" class=\"form-control\" name=\"desc\" rows=\"4\" cols=\"30\"><?php\n                        if (!empty($amendment_id)) {\n                            echo text($amendment_desc);\n                        } else {\n                            echo \"\";\n                        }\n                        ?></textarea>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Request Status'); ?></label>\n                        <?php echo generate_select_list(\"form_amendment_status\", \"amendment_status\", ($amendment_status ?? ''), 'Amendment Status', ' ', '', '', '', $customAttributes); ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Comments'); ?></label>\n                        <textarea <?php echo ( $onlyRead ) ? \"readonly\" : \"\";  ?> id=\"note\" class=\"form-control\" name=\"note\" rows=\"4\" cols=\"30\"><?php\n                        if (!empty($amendment_id)) {\n                            echo \"\";\n                        } else {\n                            echo xlt('New amendment request');\n                        }\n                        ?></textarea>\n                    </div>\n\n                    <input type=\"hidden\" id=\"mode\" name=\"mode\" value=\"\"/>\n                    <input type=\"hidden\" id=\"amendment_id\" name=\"amendment_id\" value=\"<?php echo attr($amendment_id); ?>\"/>\n                </form>\n            </div>\n            <?php if (!empty($amendment_id)) { ?>\n            <hr />\n            <div class=\"col-12\">\n                <h2><?php echo xlt(\"History\") ; ?></h2>\n            </div>\n\n            <table class=\"table table-bordered table-hover\">\n                <!-- some columns are sortable -->\n                <thead class=\"table-primary font-weight-bold\">\n                    <tr>\n                        <th><?php echo xlt('Date'); ?></th>\n                        <th><?php echo xlt('By'); ?></th>\n                        <th><?php echo xlt('Status'); ?></th>\n                        <th><?php echo xlt('Comments'); ?></th>\n                    </tr>\n                </thead>\n                <tbody>\n                <?php\n                if (sqlNumRows($resultSet)) {\n                    while ($row = sqlFetchArray($resultSet)) {\n                        $created_date = date('Y-m-d', strtotime($row['created_time']));\n                        echo \"<tr>\";\n                        $userName = $row['lname'] . \", \" . $row['fname'];\n                        echo \"<td>\" . text(oeFormatShortDate($created_date)) . \"</td>\";\n                        echo \"<td>\" . text($userName) . \"</td>\";\n                        echo \"<td>\" . ( ( $row['amendment_status'] ) ? generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $row['amendment_status']) : '') . \"</td>\";\n                        echo \"<td>\" . text($row['amendment_note']) . \"</td>\";\n                        echo \"<tr>\";\n                    }\n                }\n                ?>\n                </tbody>\n            </table>\n            <?php } ?>\n        </div>\n    </div>\n\n</body>\n</html>\n", "<?php\n\n/**\n *\n * Patient summary screen.\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Sharon Cohen <sharonco@matrix.co.il>\n * @author    Stephen Waite <stephen.waite@cmsvt.com>\n * @author    Ranganath Pathak <pathak@scrs1.org>\n * @author    Tyler Wrenn <tyler@tylerwrenn.com>\n * @author    Robert Down <robertdown@live.com>\n * @copyright Copyright (c) 2017-2020 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2017 Sharon Cohen <sharonco@matrix.co.il>\n * @copyright Copyright (c) 2018-2020 Stephen Waite <stephen.waite@cmsvt.com>\n * @copyright Copyright (c) 2018 Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2021-2022 Robert Down <robertdown@live.com\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/patient.inc\");\nrequire_once(\"$srcdir/options.inc.php\");\nrequire_once(\"../history/history.inc.php\");\nrequire_once(\"$srcdir/clinical_rules.php\");\nrequire_once(\"$srcdir/group.inc\");\nrequire_once(__DIR__ . \"/../../../library/appointments.inc.php\");\n\nuse OpenEMR\\Billing\\EDI270;\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Session\\SessionUtil;\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Core\\Header;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\RenderEvent as CardRenderEvent;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\SectionEvent;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\RenderModel;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\CardInterface;\nuse OpenEMR\\Events\\PatientDemographics\\ViewEvent;\nuse OpenEMR\\Events\\PatientDemographics\\RenderEvent;\nuse OpenEMR\\FHIR\\SMART\\SmartLaunchController;\nuse OpenEMR\\Menu\\PatientMenuRole;\nuse OpenEMR\\OeUI\\OemrUI;\nuse OpenEMR\\Patient\\Cards\\PortalCard;\nuse OpenEMR\\Reminder\\BirthdayReminder;\nuse Symfony\\Component\\EventDispatcher\\EventDispatcher;\n\n$twig = new TwigContainer(null, $GLOBALS['kernel']);\n\n// Set session for pid (via setpid). Also set session for encounter (if applicable)\nif (isset($_GET['set_pid'])) {\n    require_once(\"$srcdir/pid.inc\");\n    setpid($_GET['set_pid']);\n    if (isset($_GET['set_encounterid']) && ((int)$_GET['set_encounterid'] > 0)) {\n        $encounter = (int)$_GET['set_encounterid'];\n        SessionUtil::setSession('encounter', $encounter);\n    }\n}\n\n// Note: it would eventually be a good idea to move this into\n// it's own module that people can remove / add if they don't\n// want smart support in their system.\n$smartLaunchController = new SMARTLaunchController($GLOBALS[\"kernel\"]->getEventDispatcher());\n$smartLaunchController->registerContextEvents();\n\n/**\n * @var EventDispatcher\n */\n$ed = $GLOBALS['kernel']->getEventDispatcher();\n\n$active_reminders = false;\n$all_allergy_alerts = false;\nif ($GLOBALS['enable_cdr']) {\n    //CDR Engine stuff\n    if ($GLOBALS['enable_allergy_check'] && $GLOBALS['enable_alert_log']) {\n        //Check for new allergies conflicts and throw popup if any exist(note need alert logging to support this)\n        $new_allergy_alerts = allergy_conflict($pid, 'new', $_SESSION['authUser']);\n        if (!empty($new_allergy_alerts)) {\n            $pod_warnings = '';\n            foreach ($new_allergy_alerts as $new_allergy_alert) {\n                $pod_warnings .= js_escape($new_allergy_alert) . ' + \"\\n\"';\n            }\n            $allergyWarningMessage = '<script>alert(' . xlj('WARNING - FOLLOWING ACTIVE MEDICATIONS ARE ALLERGIES') . ' + \"\\n\" + ' . $pod_warnings . ')</script>';\n        }\n    }\n\n    if ((empty($_SESSION['alert_notify_pid']) || ($_SESSION['alert_notify_pid'] != $pid)) && isset($_GET['set_pid']) && $GLOBALS['enable_cdr_crp']) {\n        // showing a new patient, so check for active reminders and allergy conflicts, which use in active reminder popup\n        $active_reminders = active_alert_summary($pid, \"reminders-due\", '', 'default', $_SESSION['authUser'], true);\n        if ($GLOBALS['enable_allergy_check']) {\n            $all_allergy_alerts = allergy_conflict($pid, 'all', $_SESSION['authUser'], true);\n        }\n    }\n    SessionUtil::setSession('alert_notify_pid', $pid);\n    // can not output html until after above setSession call\n    if (!empty($allergyWarningMessage)) {\n        echo $allergyWarningMessage;\n    }\n}\n//Check to see is only one insurance is allowed\nif ($GLOBALS['insurance_only_one']) {\n    $insurance_array = array('primary');\n} else {\n    $insurance_array = array('primary', 'secondary', 'tertiary');\n}\n\nfunction print_as_money($money)\n{\n    preg_match(\"/(\\d*)\\.?(\\d*)/\", $money, $moneymatches);\n    $tmp = wordwrap(strrev($moneymatches[1]), 3, \",\", 1);\n    $ccheck = strrev($tmp);\n    if ($ccheck[0] == \",\") {\n        $tmp = substr($ccheck, 1, strlen($ccheck) - 1);\n    }\n\n    if ($moneymatches[2] != \"\") {\n        return \"$ \" . strrev($tmp) . \".\" . $moneymatches[2];\n    } else {\n        return \"$ \" . strrev($tmp);\n    }\n}\n\n// get an array from Photos category\nfunction pic_array($pid, $picture_directory)\n{\n    $pics = array();\n    $sql_query = \"select documents.id from documents join categories_to_documents \" .\n        \"on documents.id = categories_to_documents.document_id \" .\n        \"join categories on categories.id = categories_to_documents.category_id \" .\n        \"where categories.name like ? and documents.foreign_id = ? and documents.deleted = 0\";\n    if ($query = sqlStatement($sql_query, array($picture_directory, $pid))) {\n        while ($results = sqlFetchArray($query)) {\n            array_push($pics, $results['id']);\n        }\n    }\n\n    return ($pics);\n}\n\n// Get the document ID of the first document in a specific catg.\nfunction get_document_by_catg($pid, $doc_catg)\n{\n    $result = array();\n\n    if ($pid and $doc_catg) {\n        $result = sqlQuery(\"SELECT d.id, d.date, d.url\n            FROM documents AS d, categories_to_documents AS cd, categories AS c\n            WHERE d.foreign_id = ?\n            AND cd.document_id = d.id\n            AND c.id = cd.category_id\n            AND c.name LIKE ?\n            ORDER BY d.date DESC LIMIT 1\", array($pid, $doc_catg));\n    }\n\n    return ($result['id'] ?? false);\n}\n\nfunction portalAuthorized($pid)\n{\n    if (!$GLOBALS['portal_onsite_two_enable'] && !$GLOBALS['portal_onsite_two_address']) {\n        return false;\n    }\n\n    $return = [\n        'isAllowed' => false\n        ,'allowed' => [\n                'api' => false\n                ,'portal' => false\n        ],\n        'credentials' => [\n                'created' => false\n                ,'date' => null\n        ]\n    ];\n\n    $portalStatus = sqlQuery(\"SELECT allow_patient_portal,prevent_portal_apps FROM patient_data WHERE pid = ?\", [$pid]);\n    $return['allowed']['portal'] = $portalStatus['allow_patient_portal'] == 'YES';\n    $return['allowed']['api'] = strtoupper($portalStatus['prevent_portal_apps']) != 'YES';\n    if ($return['allowed']['portal'] || $return['allowed']['api']) {\n        $return['isAllowed'] = true;\n        $portalLogin = sqlQuery(\"SELECT pid,date_created FROM `patient_access_onsite` WHERE `pid`=?\", [$pid]);\n        if ($portalLogin) {\n            $return['credentials']['date'] = $portalLogin['date_created'];\n            $return['credentials']['created'] = true;\n        }\n        return $return;\n    }\n    return $return;\n}\n\nfunction deceasedDays($days_deceased)\n{\n    $deceased_days = intval($days_deceased['days_deceased'] ?? '');\n    if ($deceased_days == 0) {\n        $num_of_days = xl(\"Today\");\n    } elseif ($deceased_days == 1) {\n        $num_of_days =  $deceased_days . \" \" . xl(\"day ago\");\n    } elseif ($deceased_days > 1 && $deceased_days < 90) {\n        $num_of_days =  $deceased_days . \" \" . xl(\"days ago\");\n    } elseif ($deceased_days >= 90 && $deceased_days < 731) {\n        $num_of_days =  \"~\" . round($deceased_days / 30) . \" \" . xl(\"months ago\");  // function intdiv available only in php7\n    } elseif ($deceased_days >= 731) {\n        $num_of_days =  xl(\"More than\") . \" \" . round($deceased_days / 365) . \" \" . xl(\"years ago\");\n    }\n\n    if (strlen($days_deceased['date_deceased'] ?? '') > 10 && $GLOBALS['date_display_format'] < 1) {\n        $deceased_date = substr($days_deceased['date_deceased'], 0, 10);\n    } else {\n        $deceased_date = oeFormatShortDate($days_deceased['date_deceased'] ?? '');\n    }\n\n    return xlt(\"Deceased\") . \" - \" . text($deceased_date) . \" (\" . text($num_of_days) . \")\";\n}\n\n$deceased = is_patient_deceased($pid);\n\n\n// Display image in 'widget style'\nfunction image_widget($doc_id, $doc_catg)\n{\n    global $pid, $web_root;\n    $docobj = new Document($doc_id);\n    $image_file = $docobj->get_url_file();\n    $image_file_name = $docobj->get_name();\n    $image_width = $GLOBALS['generate_doc_thumb'] == 1 ? '' : 'width=100';\n    $extension = substr($image_file_name, strrpos($image_file_name, \".\"));\n    $viewable_types = array('.png', '.jpg', '.jpeg', '.png', '.bmp', '.PNG', '.JPG', '.JPEG', '.PNG', '.BMP');\n    if (in_array($extension, $viewable_types)) { // extension matches list\n        $to_url = \"<td> <a href = '$web_root\" .\n            \"/controller.php?document&retrieve&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"&as_file=false&original_file=true&disable_exit=false&show_original=true'\" .\n            \" onclick='top.restoreSession();' class='image_modal'>\" .\n            \" <img src = '$web_root\" .\n            \"/controller.php?document&retrieve&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"&as_file=false'\" .\n            \" $image_width alt='\" . attr($doc_catg) . \":\" . attr($image_file) . \"'>  </a> </td> <td class='align-middle'>\" .\n            text($doc_catg) . '<br />&nbsp;' . text($image_file) .\n            \"</td>\";\n    } else {\n        $to_url = \"<td> <a href='\" . $web_root . \"/controller.php?document&retrieve\" .\n            \"&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"'\" .\n            \" onclick='top.restoreSession()' class='btn btn-primary btn-sm'>\" .\n            \"<span>\" .\n            xlt(\"View\") . \"</a> &nbsp;\" .\n            text(\"$doc_catg - $image_file\") .\n            \"</span> </td>\";\n    }\n\n    echo \"<table><tr>\";\n    echo $to_url;\n    echo \"</tr></table>\";\n}\n\n// Determine if the Vitals form is in use for this site.\n$tmp = sqlQuery(\"SELECT count(*) AS count FROM registry WHERE directory = 'vitals' AND state = 1\");\n$vitals_is_registered = $tmp['count'];\n\n// Get patient/employer/insurance information.\n//\n$result = getPatientData($pid, \"*, DATE_FORMAT(DOB,'%Y-%m-%d') as DOB_YMD\");\n$result2 = getEmployerData($pid);\n$result3 = getInsuranceData($pid, \"primary\", \"copay, provider, DATE_FORMAT(`date`,'%Y-%m-%d') as effdate\");\n$insco_name = \"\";\nif (!empty($result3['provider'])) {   // Use provider in case there is an ins record w/ unassigned insco\n    $insco_name = getInsuranceProvider($result3['provider']);\n}\n\n$arrOeUiSettings = array(\n    'heading_title' => xl('Medical Record Dashboard'),\n    'include_patient_name' => true,\n    'expandable' => false,\n    'expandable_files' => array(), //all file names need suffix _xpd\n    'action' => \"\", //conceal, reveal, search, reset, link or back\n    'action_title' => \"\",\n    'action_href' => \"\", //only for actions - reset, link or back\n    'show_help_icon' => true,\n    'help_file_name' => \"medical_dashboard_help.php\"\n);\n$oemr_ui = new OemrUI($arrOeUiSettings);\n?>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <?php\n    Header::setupHeader(['common']);\n    require_once(\"$srcdir/options.js.php\");\n    ?>\n    <script>\n        // Process click on diagnosis for referential cds popup.\n        function referentialCdsClick(codetype, codevalue) {\n            top.restoreSession();\n            // Force a new window instead of iframe to address cross site scripting potential\n            dlgopen('../education.php?type=' + encodeURIComponent(codetype) + '&code=' + encodeURIComponent(codevalue), '_blank', 1024, 750,true);\n        }\n\n        function oldEvt(apptdate, eventid) {\n            let title = <?php echo xlj('Appointments'); ?>;\n            dlgopen('../../main/calendar/add_edit_event.php?date=' + encodeURIComponent(apptdate) + '&eid=' + encodeURIComponent(eventid), '_blank', 800, 500, '', title);\n        }\n\n        function advdirconfigure() {\n            dlgopen('advancedirectives.php', '_blank', 400, 500);\n        }\n\n        function refreshme() {\n            top.restoreSession();\n            location.reload();\n        }\n\n        // Process click on Delete link.\n        function deleteme() { // @todo don't think this is used any longer!!\n            dlgopen('../deleter.php?patient=' + <?php echo js_url($pid); ?> + '&csrf_token_form=' + <?php echo js_url(CsrfUtils::collectCsrfToken()); ?>, '_blank', 500, 450, '', '', {\n                allowResize: false,\n                allowDrag: false,\n                dialogId: 'patdel',\n                type: 'iframe'\n            });\n            return false;\n        }\n\n        // Called by the deleteme.php window on a successful delete.\n        function imdeleted() {\n            top.clearPatient();\n        }\n\n        function newEvt() {\n            let title = <?php echo xlj('Appointments'); ?>;\n            let url = '../../main/calendar/add_edit_event.php?patientid=' + <?php echo js_url($pid); ?>;\n            dlgopen(url, '_blank', 800, 500, '', title);\n            return false;\n        }\n\n        function getWeno() {\n            top.restoreSession();\n            location.href = '../../weno/indexrx.php'\n        }\n\n        function toggleIndicator(target, div) {\n            // <i id=\"show_hide\" class=\"fa fa-lg small fa-eye-slash\" title=\"Click to Hide\"></i>\n            $mode = $(target).find(\".indicator\").text();\n            if ($mode == <?php echo xlj('collapse'); ?>) {\n                $(target).find(\".indicator\").text(<?php echo xlj('expand'); ?>);\n                $(\"#\" + div).hide();\n                $.post(\"../../../library/ajax/user_settings.php\", {\n                    target: div,\n                    mode: 0,\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            } else {\n                $(target).find(\".indicator\").text(<?php echo xlj('collapse'); ?>);\n                $(\"#\" + div).show();\n                $.post(\"../../../library/ajax/user_settings.php\", {\n                    target: div,\n                    mode: 1,\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            }\n        }\n\n        // edit prescriptions dialog.\n        // called from stats.php.\n        //\n        function editScripts(url) {\n            var AddScript = function() {\n                var __this = $(this);\n                __this.find(\"#clearButton\").css(\"display\", \"\");\n                __this.find(\"#backButton\").css(\"display\", \"\");\n                __this.find(\"#addButton\").css(\"display\", \"none\");\n\n                var iam = top.frames.editScripts;\n                iam.location.href = '<?php echo $GLOBALS['webroot'] ?>/controller.php?prescription&edit&id=0&pid=' + <?php echo js_url($pid); ?>;\n            };\n            var ListScripts = function() {\n                var __this = $(this);\n                __this.find(\"#clearButton\").css(\"display\", \"none\");\n                __this.find(\"#backButton\").css(\"display\", \"none\");\n                __this.find(\"#addButton\").css(\"display\", \"\");\n                var iam = top.frames.editScripts\n                iam.location.href = '<?php echo $GLOBALS['webroot'] ?>/controller.php?prescription&list&id=' + <?php echo js_url($pid); ?>;\n            };\n\n            let title = <?php echo xlj('Prescriptions'); ?>;\n            let w = 960; // for weno width\n\n            dlgopen(url, 'editScripts', w, 400, '', '', {\n                buttons: [{\n                        text: <?php echo xlj('Add'); ?>,\n                        close: false,\n                        id: 'addButton',\n                        class: 'btn-primary btn-sm',\n                        click: AddScript\n                    },\n                    {\n                        text: <?php echo xlj('Clear'); ?>,\n                        close: false,\n                        id: 'clearButton',\n                        style: 'display:none;',\n                        class: 'btn-primary btn-sm',\n                        click: AddScript\n                    },\n                    {\n                        text: <?php echo xlj('Back'); ?>,\n                        close: false,\n                        id: 'backButton',\n                        style: 'display:none;',\n                        class: 'btn-primary btn-sm',\n                        click: ListScripts\n                    },\n                    {\n                        text: <?php echo xlj('Quit'); ?>,\n                        close: true,\n                        id: 'doneButton',\n                        class: 'btn-secondary btn-sm'\n                    }\n                ],\n                onClosed: 'refreshme',\n                allowResize: true,\n                allowDrag: true,\n                dialogId: 'editscripts',\n                type: 'iframe'\n            });\n        }\n\n        /**\n         * async function fetchHtml(...)\n         *\n         * @param {*} url\n         * @param {boolean} embedded\n         * @param {boolean} sessionRestore\n         * @returns {text}\n         */\n        async function fetchHtml(url, embedded = false, sessionRestore = false) {\n            if (sessionRestore === true) {\n                // restore cookie before fetch.\n                top.restoreSession();\n            }\n            let csrf = new FormData;\n            // a security given.\n            csrf.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n            if (embedded === true) {\n                // special formatting in certain widgets.\n                csrf.append(\"embeddedScreen\", true);\n            }\n\n            const response = await fetch(url, {\n                method: 'POST',\n                credentials: 'same-origin',\n                body: csrf\n            });\n            return await response.text();\n        }\n\n        /**\n         * async function placeHtml(...) will await fetch of html then place in divId.\n         * This function will return a promise for use to init various items regarding\n         * inserted HTML if needed.\n         * If divId does not exist, then will skip.\n         * Example\n         *\n         * @param {*} url\n         * @param {string} divId id\n         * @param {boolean} embedded\n         * @param {boolean} sessionRestore\n         * @returns {object} promise\n         */\n        async function placeHtml(url, divId, embedded = false, sessionRestore = false) {\n            const contentDiv = document.getElementById(divId);\n            if (contentDiv) {\n                await fetchHtml(url, embedded, sessionRestore).then(fragment => {\n                    contentDiv.innerHTML = fragment;\n                });\n            }\n        }\n\n        if (typeof load_location === 'undefined') {\n            function load_location(location) {\n                top.restoreSession();\n                document.location = location;\n            }\n        }\n\n        $(function() {\n            var msg_updation = '';\n            <?php\n            if ($GLOBALS['erx_enable']) {\n                $soap_status = sqlStatement(\"select soap_import_status,pid from patient_data where pid=? and soap_import_status in ('1','3')\", array($pid));\n                while ($row_soapstatus = sqlFetchArray($soap_status)) { ?>\n                    top.restoreSession();\n                    $.ajax({\n                        type: \"POST\",\n                        url: \"../../soap_functions/soap_patientfullmedication.php\",\n                        dataType: \"html\",\n                        data: {\n                            patient: <?php echo js_escape($row_soapstatus['pid']); ?>,\n                        },\n                        async: false,\n                        success: function(thedata) {\n                            //alert(thedata);\n                            msg_updation += thedata;\n                        },\n                        error: function() {\n                            alert('ajax error');\n                        }\n                    });\n\n                    top.restoreSession();\n                    $.ajax({\n                        type: \"POST\",\n                        url: \"../../soap_functions/soap_allergy.php\",\n                        dataType: \"html\",\n                        data: {\n                            patient: <?php echo js_escape($row_soapstatus['pid']); ?>,\n                        },\n                        async: false,\n                        success: function(thedata) {\n                            //alert(thedata);\n                            msg_updation += thedata;\n                        },\n                        error: function() {\n                            alert('ajax error');\n                        }\n                    });\n                    <?php\n                    if ($GLOBALS['erx_import_status_message']) { ?>\n                        if (msg_updation)\n                            alert(msg_updation);\n                        <?php\n                    }\n                }\n            }\n            ?>\n\n            // load divs\n            placeHtml(\"stats.php\", \"stats_div\", true);\n            placeHtml(\"pnotes_fragment.php\", 'pnotes_ps_expand').then(() => {\n                // must be delegated event!\n                $(this).on(\"click\", \".complete_btn\", function() {\n                    let btn = $(this);\n                    let csrf = new FormData;\n                    csrf.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n                    fetch(\"pnotes_fragment.php?docUpdateId=\" + encodeURIComponent(btn.attr('data-id')), {\n                            method: \"POST\",\n                            credentials: 'same-origin',\n                            body: csrf\n                        })\n                        .then(function() {\n                            placeHtml(\"pnotes_fragment.php\", 'pnotes_ps_expand');\n                        });\n                });\n            });\n            placeHtml(\"disc_fragment.php\", \"disclosures_ps_expand\");\n            placeHtml(\"labdata_fragment.php\", \"labdata_ps_expand\");\n            placeHtml(\"track_anything_fragment.php\", \"track_anything_ps_expand\");\n            <?php if ($vitals_is_registered && AclMain::aclCheckCore('patients', 'med')) { ?>\n                // Initialize the Vitals form if it is registered and user is authorized.\n                placeHtml(\"vitals_fragment.php\", \"vitals_ps_expand\");\n            <?php } ?>\n\n            <?php if ($GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_crw']) { ?>\n                placeHtml(\"clinical_reminders_fragment.php\", \"clinical_reminders_ps_expand\", true, true).then(() => {\n                    // (note need to place javascript code here also to get the dynamic link to work)\n                    $(\".medium_modal\").on('click', function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        dlgopen('', '', 800, 200, '', '', {\n                            buttons: [{\n                                text: <?php echo xlj('Close'); ?>,\n                                close: true,\n                                style: 'secondary btn-sm'\n                            }],\n                            onClosed: 'refreshme',\n                            allowResize: false,\n                            allowDrag: true,\n                            dialogId: 'demreminder',\n                            type: 'iframe',\n                            url: $(this).attr('href')\n                        });\n                    });\n                });\n            <?php } // end crw\n            ?>\n\n            <?php if ($GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_prw']) { ?>\n                placeHtml(\"patient_reminders_fragment.php\", \"patient_reminders_ps_expand\", false, true);\n            <?php } // end prw\n            ?>\n\n            <?php\n            // Initialize for each applicable LBF form.\n            $gfres = sqlStatement(\"SELECT grp_form_id\n                FROM layout_group_properties\n                WHERE grp_form_id LIKE 'LBF%'\n                    AND grp_group_id = ''\n                    AND grp_repeats > 0\n                    AND grp_activity = 1\n                ORDER BY grp_seq, grp_title\");\n            while ($gfrow = sqlFetchArray($gfres)) { ?>\n                $(<?php echo js_escape(\"#\" . $gfrow['grp_form_id'] . \"_ps_expand\"); ?>).load(\"lbf_fragment.php?formname=\" + <?php echo js_url($gfrow['grp_form_id']); ?>, {\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            <?php } ?>\n            tabbify();\n\n            // modal for dialog boxes\n            $(\".large_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 1000, 600, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".rx_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var title = <?php echo xlj('Amendments'); ?>;\n                dlgopen('', 'editAmendments', 800, 300, '', title, {\n                    onClosed: 'refreshme',\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            // modal for image viewer\n            $(\".image_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 400, 300, '', <?php echo xlj('Patient Images'); ?>, {\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".deleter\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 600, 360, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    //onClosed: 'imdeleted',\n                    allowResize: false,\n                    allowDrag: false,\n                    dialogId: 'patdel',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".iframe1\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 350, 300, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n            // for patient portal\n            $(\".small_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 550, 550, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            function openReminderPopup() {\n                top.restoreSession()\n                dlgopen('', 'reminders', 500, 250, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(\"#reminder_popup_link\").attr('href')\n                });\n            }\n\n            <?php if ($GLOBALS['patient_birthday_alert']) {\n                // To display the birthday alert:\n                //  1. The patient is not deceased\n                //  2. The birthday is today (or in the past depending on global selection)\n                //  3. The notification has not been turned off (or shown depending on global selection) for this year\n                $birthdayAlert = new BirthdayReminder($pid, $_SESSION['authUserID']);\n                if ($birthdayAlert->isDisplayBirthdayAlert()) {\n                    ?>\n                    // show the active reminder modal\n                    dlgopen('', 'bdayreminder', 300, 170, '', false, {\n                        allowResize: false,\n                        allowDrag: true,\n                        dialogId: '',\n                        type: 'iframe',\n                        url: $(\"#birthday_popup\").attr('href')\n                    });\n\n                <?php } elseif ($active_reminders || $all_allergy_alerts) { ?>\n                    openReminderPopup();\n                <?php } ?>\n            <?php } elseif ($active_reminders || $all_allergy_alerts) { ?>\n                openReminderPopup();\n            <?php } ?>\n\n            // $(\".card-title\").on('click', \"button\", (e) => {\n            //     console.debug(\"click\");\n            //     updateUserVisibilitySetting(e);\n            // });\n        });\n\n        /**\n         * Change the preference to expand/collapse a given card.\n         *\n         * For the given e element, find the corresponding card body, determine if it is collapsed\n         * or shown, and then save the state to the user preferences via an async fetch call POST'ing\n         * the updated setting.\n         *\n         * @var e element The Button that was clicked to collapse/expand the card\n         */\n        async function updateUserVisibilitySetting(e) {\n            const targetID = e.target.getAttribute(\"data-target\");\n            const target = document.querySelector(targetID);\n            const targetStr = targetID.substring(1);\n\n            let formData = new FormData();\n            formData.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n            formData.append(\"target\", targetStr);\n            formData.append(\"mode\", (target.classList.contains(\"show\")) ? 0 : 1);\n\n            const response = await fetch(\"../../../library/ajax/user_settings.php\", {\n                method: \"POST\",\n                credentials: 'same-origin',\n                body: formData,\n            });\n\n            const update = await response.text();\n            return update;\n        }\n\n        // Update the User's visibility setting when the card header is clicked\n        function cardTitleButtonClickListener() {\n            const buttons = document.querySelectorAll(\".card-title button[data-toggle='collapse']\");\n            buttons.forEach((b) => {\n                b.addEventListener(\"click\", (e) => {\n                    updateUserVisibilitySetting(e);\n                });\n            });\n        }\n\n        // JavaScript stuff to do when a new patient is set.\n        //\n        function setMyPatient() {\n            <?php\n            if (isset($_GET['set_pid'])) {\n                $date_of_death = is_patient_deceased($pid);\n                if (!empty($date_of_death)) {\n                    $date_of_death = $date_of_death['date_deceased'];\n                }\n                ?>\n                parent.left_nav.setPatient(<?php echo js_escape($result['fname'] . \" \" . $result['lname']) .\n                                                \",\" . js_escape($pid) . \",\" . js_escape($result['pubpid']) . \",'',\";\n                if (empty($date_of_death)) {\n                    echo js_escape(\" \" . xl('DOB') . \": \" . oeFormatShortDate($result['DOB_YMD']) . \" \" . xl('Age') . \": \" . getPatientAgeDisplay($result['DOB_YMD']));\n                } else {\n                    echo js_escape(\" \" . xl('DOB') . \": \" . oeFormatShortDate($result['DOB_YMD']) . \" \" . xl('Age at death') . \": \" . oeFormatAge($result['DOB_YMD'], $date_of_death));\n                } ?>);\n                var EncounterDateArray = new Array;\n                var CalendarCategoryArray = new Array;\n                var EncounterIdArray = new Array;\n                var Count = 0;\n                <?php\n                //Encounter details are stored to javacript as array.\n                $result4 = sqlStatement(\"SELECT fe.encounter,fe.date,openemr_postcalendar_categories.pc_catname FROM form_encounter AS fe \" .\n                    \" left join openemr_postcalendar_categories on fe.pc_catid=openemr_postcalendar_categories.pc_catid  WHERE fe.pid = ? order by fe.date desc\", array($pid));\n                if (sqlNumRows($result4) > 0) {\n                    while ($rowresult4 = sqlFetchArray($result4)) { ?>\n                        EncounterIdArray[Count] = <?php echo js_escape($rowresult4['encounter']); ?>;\n                        EncounterDateArray[Count] = <?php echo js_escape(oeFormatShortDate(date(\"Y-m-d\", strtotime($rowresult4['date'])))); ?>;\n                        CalendarCategoryArray[Count] = <?php echo js_escape(xl_appt_category($rowresult4['pc_catname'])); ?>;\n                        Count++;\n                        <?php\n                    }\n                }\n                ?>\n                parent.left_nav.setPatientEncounter(EncounterIdArray, EncounterDateArray, CalendarCategoryArray);\n                <?php\n            } // end setting new pid\n            ?>\n            parent.left_nav.syncRadios();\n            <?php if ((isset($_GET['set_pid'])) && (isset($_GET['set_encounterid'])) && (intval($_GET['set_encounterid']) > 0)) {\n                $query_result = sqlQuery(\"SELECT `date` FROM `form_encounter` WHERE `encounter` = ?\", array($encounter)); ?>\n                encurl = 'encounter/encounter_top.php?set_encounter=' + <?php echo js_url($encounter); ?> + '&pid=' + <?php echo js_url($pid); ?>;\n                parent.left_nav.setEncounter(<?php echo js_escape(oeFormatShortDate(date(\"Y-m-d\", strtotime($query_result['date'])))); ?>, <?php echo js_escape($encounter); ?>, 'enc');\n                top.restoreSession();\n                parent.left_nav.loadFrame('enc2', 'enc', 'patient_file/' + encurl);\n            <?php } // end setting new encounter id (only if new pid is also set)\n            ?>\n        }\n\n        $(window).on('load', function() {\n            setMyPatient();\n        });\n\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            cardTitleButtonClickListener();\n        });\n    </script>\n\n    <style>\n        /* Bad practice to override here, will get moved to base style theme */\n        .card {\n            box-shadow: 1px 1px 1px hsl(0 0% 0% / .2);\n            border-radius: 0;\n        }\n\n        <?php\n        if (!empty($GLOBALS['right_justify_labels_demographics']) && ($_SESSION['language_direction'] == 'ltr')) { ?> \n        div.tab td.label_custom, div.label_custom {\n            text-align: right !important;\n        }\n\n        div.tab td.data, div.data {\n            padding-left: 0.5em;\n            padding-right: 2em;\n        }\n            <?php\n        } ?>\n        \n        <?php\n        // This is for layout font size override.\n        $grparr = array();\n        getLayoutProperties('DEM', $grparr, 'grp_size');\n        if (!empty($grparr['']['grp_size'])) {\n            $FONTSIZE = round($grparr['']['grp_size'] * 1.333333);\n            $FONTSIZE = round($FONTSIZE * 0.0625, 2);\n            ?>\n\n        /* Override font sizes in the theme. */\n        #DEM .groupname {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        #DEM .label {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n    \n        #DEM .data {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        #DEM .data td {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        <?php } ?> :root {\n            --white: #fff;\n            --bg: hsl(0 0% 90%);\n        }\n\n        body {\n            background: var(--bg) !important;\n        }\n\n        section {\n            background: var(--white);\n            margin-top: .25em;\n            padding: .25em;\n        }\n\n        .section-header-dynamic {\n            border-bottom: none;\n        }\n    </style>\n    <title><?php echo xlt(\"Dashboard{{patient file}}\"); ?></title>\n</head>\n\n<body class=\"mt-1 patient-demographic bg-light\">\n\n    <?php\n    // Create and fire the patient demographics view event\n    $viewEvent = new ViewEvent($pid);\n    $viewEvent = $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(ViewEvent::EVENT_HANDLE, $viewEvent, 10);\n    $thisauth = AclMain::aclCheckCore('patients', 'demo');\n\n    if (!$thisauth || !$viewEvent->authorized()) {\n        echo $twig->getTwig()->render('core/unauthorized-partial.html.twig', ['pageTitle' => xl(\"Medical Dashboard\")]);\n        exit();\n    }\n    ?>\n\n    <div id=\"container_div\" class=\"<?php echo $oemr_ui->oeContainer(); ?> mb-2\">\n        <a href='../reminder/active_reminder_popup.php' id='reminder_popup_link' style='display: none' onclick='top.restoreSession()'></a>\n        <a href='../birthday_alert/birthday_pop.php?pid=<?php echo attr_url($pid); ?>&user_id=<?php echo attr_url($_SESSION['authUserID']); ?>' id='birthday_popup' style='display: none;' onclick='top.restoreSession()'></a>\n        <?php\n\n        if ($thisauth) {\n            if ($result['squad'] && !AclMain::aclCheckCore('squads', $result['squad'])) {\n                $thisauth = 0;\n            }\n        }\n\n        if ($thisauth) :\n            require_once(\"$include_root/patient_file/summary/dashboard_header.php\");\n        endif;\n\n        $list_id = \"dashboard\"; // to indicate nav item is active, count and give correct id\n        // Collect the patient menu then build it\n        $menuPatient = new PatientMenuRole($twig);\n        $menuPatient->displayHorizNavBarMenu();\n        // Get the document ID of the patient ID card if access to it is wanted here.\n        $idcard_doc_id = false;\n        if ($GLOBALS['patient_id_category_name']) {\n            $idcard_doc_id = get_document_by_catg($pid, $GLOBALS['patient_id_category_name']);\n        }\n        ?>\n        <div class=\"main mb-5\">\n            <!-- start main content div -->\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <?php\n\n                    if ($deceased > 0) :\n                        echo $twig->getTwig()->render('patient/partials/deceased.html.twig', [\n                            'deceasedDays' => deceasedDays($deceased),\n                        ]);\n                    endif;\n\n                    $sectionRenderEvents = $ed->dispatch(SectionEvent::EVENT_HANDLE, new SectionEvent('primary'));\n                    $sectionCards = $sectionRenderEvents->getCards();\n\n                    $t = $twig->getTwig();\n\n                    foreach ($sectionCards as $card) {\n                        $_auth = $card->getAcl();\n                        if (!AclMain::aclCheckCore($_auth[0], $_auth[1])) {\n                            continue;\n                        }\n\n                        $btnLabel = false;\n                        if ($card->canAdd()) {\n                            $btnLabel = 'Add';\n                        } elseif ($card->canEdit()) {\n                            $btnLabel = 'Edit';\n                        }\n\n                        $viewArgs = [\n                            'title' => $card->getTitle(),\n                            'id' => $card->getIdentifier(),\n                            'initiallyCollapsed' => !$card->isInitiallyCollapsed(),\n                            'card_bg_color' => $card->getBackgroundColorClass(),\n                            'card_text_color' => $card->getTextColorClass(),\n                            'forceAlwaysOpen' => !$card->canCollapse(),\n                            'btnLabel' => $btnLabel,\n                            'btnLink' => 'test',\n                        ];\n\n                        echo $t->render($card->getTemplateFile(), array_merge($card->getTemplateVariables(), $viewArgs));\n                    }\n\n                    if (!$GLOBALS['hide_billing_widget']) :\n                        $forceBillingExpandAlways = ($GLOBALS['force_billing_widget_open']) ? true : false;\n                        $patientbalance = get_patient_balance($pid, false);\n                        $insurancebalance = get_patient_balance($pid, true) - $patientbalance;\n                        $totalbalance = $patientbalance + $insurancebalance;\n                        $id = \"billing_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('billing'));\n                        $viewArgs = [\n                            'title' => xl('Billing'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'hideBtn' => true,\n                            'patientBalance' => $patientbalance,\n                            'insuranceBalance' => $insurancebalance,\n                            'totalBalance' => $totalbalance,\n                            'forceAlwaysOpen' => $forceBillingExpandAlways,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n\n                        if (!empty($result['billing_note'])) {\n                            $viewArgs['billingNote'] = $result['billing_note'];\n                        }\n\n                        if (!empty($result3['provider'])) {\n                            $viewArgs['provider'] = true;\n                            $viewArgs['insName'] = $insco_name;\n                            $viewArgs['copay'] = $result3['copay'];\n                            $viewArgs['effDate'] = $result3['effdate'];\n                        }\n\n                        echo $twig->getTwig()->render('patient/card/billing.html.twig', $viewArgs);\n                    endif; // End the hide_billing_widget\n\n                    // if anyone wants to render anything before the patient demographic list\n                    $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(RenderEvent::EVENT_SECTION_LIST_RENDER_BEFORE, new RenderEvent($pid), 10);\n\n                    if (AclMain::aclCheckCore('patients', 'demo')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('demographic'));\n                        // Render the Demographics box\n                        $viewArgs = [\n                            'title' => xl(\"Demographics\"),\n                            'id' => \"demographics_ps_expand\",\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"demographics_full.php\",\n                            'linkMethod' => \"html\",\n                            'auth' => ACLMain::aclCheckCore('patients', 'demo', '', 'write'),\n                            'requireRestore' => (!isset($_SESSION['patient_portal_onsite_two'])) ? true : false,\n                            'initiallyCollapsed' => getUserSetting(\"demographics_ps_expand\") == true ? true : false,\n                            'tabID' => \"DEM\",\n                            'result' => $result,\n                            'result2' => $result2,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/tab_base.html.twig', $viewArgs);\n\n                        // Insurance\n                        $insArr = [];\n                        $insInBinder = '?';\n                        for ($y = 1; count($insurance_array) > $y; $y++) {\n                            $insInBinder .= ',?';\n                        }\n                        $sql = \"SELECT * FROM insurance_data WHERE pid = ? AND type IN(\" . $insInBinder . \") ORDER BY type, date DESC\";\n                        $params[] = $pid;\n                        $params = array_merge($params, $insurance_array);\n                        $res = sqlStatement($sql, $params);\n                        $prior_ins_type = '';\n\n                        while ($row = sqlFetchArray($res)) {\n                            if ($row['provider']) {\n                                // since the query is sorted by DATE DESC can use prior ins type to identify\n                                $row['isOld'] = (strcmp($row['type'], $prior_ins_type) == 0) ? true : false;\n                                $icobj = new InsuranceCompany($row['provider']);\n                                $adobj = $icobj->get_address();\n                                $insco_name = trim($icobj->get_name());\n                                $row['insco'] = [\n                                    'name' => trim($icobj->get_name()),\n                                    'address' => [\n                                        'line1' => $adobj->get_line1(),\n                                        'line2' => $adobj->get_line2(),\n                                        'city' => $adobj->get_city(),\n                                        'state' => $adobj->get_state(),\n                                        'postal' => $adobj->get_zip(),\n                                        'country' => $adobj->get_country()\n                                    ],\n                                ];\n                                $row['policy_type'] = (!empty($row['policy_type'])) ? $policy_types[$row['policy_type']] : false;\n                                $row['dispFromDate'] = $row['date'] ? true : false;\n                                $mname = ($row['subscriber_mname'] != \"\") ? $row['subscriber_mname'] : \"\";\n                                $row['subscriber_full_name'] = str_replace(\"%mname%\", $mname, \"{$row['subscriber_fname']} %mname% {$row['subscriber_lname']}\");\n                                $insArr[] = $row;\n                                $prior_ins_type = $row['type'];\n                            }\n                        }\n\n                        if ($GLOBALS[\"enable_oa\"]) {\n                            if (($_POST['status_update'] ?? '') === 'true') {\n                                unset($_POST['status_update']);\n                                $showEligibility = true;\n                                $ok = EDI270::requestEligibleTransaction($pid);\n                                if ($ok === true) {\n                                    ob_start();\n                                    EDI270::showEligibilityInformation($pid, false);\n                                    $output = ob_get_contents();\n                                    ob_end_clean();\n                                } else {\n                                    $output = $ok;\n                                }\n                            } else {\n                                ob_start();\n                                EDI270::showEligibilityInformation($pid, true);\n                                $output = ob_get_contents();\n                                ob_end_clean();\n                            }\n                        } else {\n                            ob_start();\n                            EDI270::showEligibilityInformation($pid, true);\n                            $output = ob_get_contents();\n                            ob_end_clean();\n                        }\n\n                        $id = \"insurance_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('insurance'));\n                        $viewArgs = [\n                            'title' => xl(\"Insurance\"),\n                            'id' => $id,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"demographics_full.php\",\n                            'linkMethod' => 'html',\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'ins' => $insArr,\n                            'eligibility' => $output,\n                            'enable_oa' => $GLOBALS['enable_oa'],\n                            'auth' => AclMain::aclCheckCore('patients', 'demo', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n\n                        if (count($insArr) > 0) {\n                            echo $twig->getTwig()->render('patient/card/insurance.html.twig', $viewArgs);\n                        }\n                    endif;  // end if demographics authorized\n\n                    if (AclMain::aclCheckCore('patients', 'notes')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('note'));\n                        // Notes expand collapse widget\n                        $id = \"pnotes_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl(\"Messages\"),\n                            'id' => $id,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"pnotes_full.php?form_active=1\",\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'linkMethod' => \"html\",\n                            'bodyClass' => \"notab\",\n                            'auth' => AclMain::aclCheckCore('patients', 'notes', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end if notes authorized\n\n                    if (AclMain::aclCheckCore('patients', 'reminder') && $GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_prw']) :\n                        // patient reminders collapse widget\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('reminder'));\n                        $id = \"patient_reminders_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Patient Reminders'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => '../reminder/patient_reminders.php?mode=simple&patient_id=' . attr_url($pid),\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => AclMain::aclCheckCore('patients', 'reminder', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; //end if prw is activated\n\n                    if (AclMain::aclCheckCore('patients', 'disclosure')) :\n                        $authWriteDisclosure = AclMain::aclCheckCore('patients', 'disclosure', '', 'write');\n                        $authAddonlyDisclosure = AclMain::aclCheckCore('patients', 'disclosure', '', 'addonly');\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('disclosure'));\n                        // disclosures expand collapse widget\n                        $id = \"disclosures_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Disclosures'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => 'disclosure_full.php',\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => ($authWriteDisclosure || $authAddonlyDisclosure),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end if disclosures authorized\n\n                    if ($GLOBALS['amendments'] && AclMain::aclCheckCore('patients', 'amendment')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('amendment'));\n                        // Amendments widget\n                        $sql = \"SELECT * FROM amendments WHERE pid = ? ORDER BY amendment_date DESC\";\n                        $result = sqlStatement($sql, [$pid]);\n                        $amendments = [];\n                        while ($row = sqlFetchArray($result)) {\n                            $amendments[] = $row;\n                        }\n\n                        $id = \"amendments_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Amendments'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => $GLOBALS['webroot'] . \"/interface/patient_file/summary/list_amendments.php?id=\" . attr_url($pid),\n                            'btnCLass' => '',\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => AclMain::aclCheckCore('patients', 'amendment', '', 'write'),\n                            'amendments' => $amendments,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/amendments.html.twig', $viewArgs);\n                    endif; // end amendments authorized\n\n                    if (AclMain::aclCheckCore('patients', 'lab')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('lab'));\n                        // labdata expand collapse widget\n                        // check to see if any labdata exist\n                        $spruch = \"SELECT procedure_report.date_collected AS date\n                            FROM procedure_report\n                            JOIN procedure_order ON  procedure_report.procedure_order_id = procedure_order.procedure_order_id\n                            WHERE procedure_order.patient_id = ?\n                            ORDER BY procedure_report.date_collected DESC\";\n                        $existLabdata = sqlQuery($spruch, array($pid));\n                        $widgetAuth = ($existLabdata) ? true : false;\n\n                        $id = \"labdata_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Labs'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../summary/labdata.php\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end labs authorized\n\n                    if ($vitals_is_registered && AclMain::aclCheckCore('patients', 'med')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('vital_sign'));\n                        // vitals expand collapse widget\n                        // check to see if any vitals exist\n                        $existVitals = sqlQuery(\"SELECT * FROM form_vitals WHERE pid=?\", array($pid));\n                        $widgetAuth = ($existVitals) ? true : false;\n\n                        $id = \"vitals_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Vitals'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../encounter/trend_form.php?formname=vitals\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end vitals\n\n                    // if anyone wants to render anything after the patient demographic list\n                    $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(RenderEvent::EVENT_SECTION_LIST_RENDER_AFTER, new RenderEvent($pid), 10);\n\n                    // This generates a section similar to Vitals for each LBF form that\n                    // supports charting.  The form ID is used as the \"widget label\".\n                    $gfres = sqlStatement(\"SELECT grp_form_id AS option_id, grp_title AS title, grp_aco_spec\n                        FROM layout_group_properties\n                        WHERE grp_form_id LIKE 'LBF%'\n                        AND grp_group_id = ''\n                        AND grp_repeats > 0\n                        AND grp_activity = 1\n                        ORDER BY grp_seq, grp_title\");\n\n                    while ($gfrow = sqlFetchArray($gfres)) :\n                        // $jobj = json_decode($gfrow['notes'], true);\n                        $LBF_ACO = empty($gfrow['grp_aco_spec']) ? false : explode('|', $gfrow['grp_aco_spec']);\n                        if ($LBF_ACO && !AclMain::aclCheckCore($LBF_ACO[0], $LBF_ACO[1])) {\n                            continue;\n                        }\n\n                        // vitals expand collapse widget\n                        $widgetAuth = false;\n                        if (!$LBF_ACO || AclMain::aclCheckCore($LBF_ACO[0], $LBF_ACO[1], '', 'write')) {\n                            // check to see if any instances exist for this patient\n                            $existVitals = sqlQuery(\"SELECT * FROM forms WHERE pid = ? AND formdir = ? AND deleted = 0\", [$pid, $vitals_form_id]);\n                            $widgetAuth = $existVitals;\n                        }\n\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent($gfrow['title']));\n                        $viewArgs = [\n                            'title' => xl($gfrow['title']),\n                            'id' => $vitals_form_id,\n                            'initiallyCollapsed' => getUserSetting($vitals_form_id) == true ? true : false,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../encounter/trend_form.php?formname=vitals\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endwhile; // end while\n                    ?>\n                </div> <!-- end left column div -->\n                <div class=\"col-md-4\">\n                    <!-- start right column div -->\n                    <?php\n                    if ($GLOBALS['portal_onsite_two_enable']) :\n                        $portalCard = new PortalCard($GLOBALS);\n                    endif;\n\n                    $sectionRenderEvents = $ed->dispatch(SectionEvent::EVENT_HANDLE, new SectionEvent('secondary'));\n                    $sectionCards = $sectionRenderEvents->getCards();\n\n                    $t = $twig->getTwig();\n\n                    foreach ($sectionCards as $card) {\n                        $_auth = $card->getAcl();\n                        $auth = AclMain::aclCheckCore($_auth[0], $_auth[1]);\n                        if (!$auth) {\n                            continue;\n                        }\n\n                        $btnLabel = false;\n                        if ($card->canAdd()) {\n                            $btnLabel = 'Add';\n                        } elseif ($card->canEdit()) {\n                            $btnLabel = 'Edit';\n                        }\n\n                        $viewArgs = [\n                            'card' => $card,\n                            'title' => $card->getTitle(),\n                            'id' => $card->getIdentifier(),\n                            'auth' => $auth,\n                            'linkMethod' => 'html',\n                            'initiallyCollapsed' => !$card->isInitiallyCollapsed(),\n                            'card_bg_color' => $card->getBackgroundColorClass(),\n                            'card_text_color' => $card->getTextColorClass(),\n                            'forceAlwaysOpen' => !$card->canCollapse(),\n                            'btnLabel' => $btnLabel,\n                            'btnLink' => 'test',\n                        ];\n\n                        echo $t->render($card->getTemplateFile(), array_merge($card->getTemplateVariables(), $viewArgs));\n                    }\n\n                    if ($GLOBALS['erx_enable']) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('demographics'));\n                        echo $twig->getTwig()->render('patient/partials/erx.html.twig', [\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ]);\n                    endif;\n\n                    // If there is an ID Card or any Photos show the widget\n                    $photos = pic_array($pid, $GLOBALS['patient_photo_category_name']);\n                    if ($photos or $idcard_doc_id) {\n                        $id = \"photos_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('patient_photo'));\n                        $viewArgs = [\n                            'title' => xl(\"ID Card / Photos\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'linkMethod' => \"javascript\",\n                            'bodyClass' => 'collapse show',\n                            'auth' => false,\n                            'patientIDCategoryID' => $GLOBALS['patient_id_category_name'],\n                            'patientPhotoCategoryName' => $GLOBALS['patient_photo_category_name'],\n                            'photos' => $photos,\n                            'idCardDocID' => $idcard_doc_id,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/photo.html.twig', $viewArgs);\n                    }\n\n                    // Advance Directives\n                    if ($GLOBALS['advance_directives_warning']) {\n                        // advance directives expand collapse widget\n\n                        $counterFlag = false; //flag to record whether any categories contain ad records\n                        $query = \"SELECT id FROM categories WHERE name='Advance Directive'\";\n                        $myrow2 = sqlQuery($query);\n                        $advDirArr = [];\n                        if ($myrow2) {\n                            $parentId = $myrow2['id'];\n                            $query = \"SELECT id, name FROM categories WHERE parent=?\";\n                            $resNew1 = sqlStatement($query, array($parentId));\n                            while ($myrows3 = sqlFetchArray($resNew1)) {\n                                $categoryId = $myrows3['id'];\n                                $nameDoc = $myrows3['name'];\n                                $query = \"SELECT documents.date, documents.id\n                                    FROM documents\n                                    INNER JOIN categories_to_documents ON categories_to_documents.document_id=documents.id\n                                    WHERE categories_to_documents.category_id=?\n                                    AND documents.foreign_id=?\n                                    AND documents.deleted = 0\n                                    ORDER BY documents.date DESC\";\n                                $resNew2 = sqlStatement($query, array($categoryId, $pid));\n                                $limitCounter = 0; // limit to one entry per category\n                                while (($myrows4 = sqlFetchArray($resNew2)) && ($limitCounter == 0)) {\n                                    $dateTimeDoc = $myrows4['date'];\n                                    // remove time from datetime stamp\n                                    $tempParse = explode(\" \", $dateTimeDoc);\n                                    $dateDoc = $tempParse[0];\n                                    $idDoc = $myrows4['id'];\n                                    $tmp = [\n                                        'pid' => $pid,\n                                        'docID' => $idDoc,\n                                        'docName' => $nameDoc,\n                                        'docDate' => $dateDoc,\n                                    ];\n                                    $advDirArr[] = $tmp;\n                                    $limitCounter = $limitCounter + 1;\n                                    $counterFlag = true;\n                                }\n                            }\n\n                            $id = \"adv_directives_ps_expand\";\n\n                            $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('advance_directive'));\n                            $viewArgs = [\n                                'title' => xl(\"Advance Directives\"),\n                                'id' => $id,\n                                'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                                'btnLabel' => 'Edit',\n                                'linkMethod' => \"javascript\",\n                                'btnLink' => \"return advdirconfigure();\",\n                                'bodyClass' => 'collapse show',\n                                'auth' => true,\n                                'advDirArr' => $advDirArr,\n                                'counterFlag' => $counterFlag,\n                                'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                                'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                            ];\n                            echo $twig->getTwig()->render('patient/card/adv_dir.html.twig', $viewArgs);\n                        }\n                    }  // close advanced dir block\n\n                    // Show Clinical Reminders for any user that has rules that are permitted.\n                    $clin_rem_check = resolve_rules_sql('', '0', true, '', $_SESSION['authUser']);\n                    $cdr = $GLOBALS['enable_cdr'];\n                    $cdr_crw = $GLOBALS['enable_cdr_crw'];\n                    if (!empty($clin_rem_check) && $cdr && $cdr_crw && AclMain::aclCheckCore('patients', 'alert')) {\n                        // clinical summary expand collapse widget\n                        $id = \"clinical_reminders_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('clinical_reminders'));\n                        $viewArgs = [\n                            'title' => xl(\"Clinical Reminders\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"../reminder/clinical_reminders.php?patient_id=\" . attr_url($pid),\n                            'linkMethod' => \"html\",\n                            'auth' => AclMain::aclCheckCore('patients', 'alert', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    } // end if crw\n\n                    $displayAppts = false;\n                    $displayRecurrAppts = false;\n                    $displayPastAppts = false;\n\n                    // Show current and upcoming appointments.\n                    // Recurring appointment support and Appointment Display Sets\n                    // added to Appointments by Ian Jardine ( epsdky ).\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayAppts = true;\n                        $current_date2 = date('Y-m-d');\n                        $events = array();\n                        $apptNum = (int) $GLOBALS['number_of_appts_to_show'];\n                        $apptNum2 = ($apptNum != 0) ? abs($apptNum) : 10;\n\n                        $mode1 = !$GLOBALS['appt_display_sets_option'];\n                        $colorSet1 = $GLOBALS['appt_display_sets_color_1'];\n                        $colorSet2 = $GLOBALS['appt_display_sets_color_2'];\n                        $colorSet3 = $GLOBALS['appt_display_sets_color_3'];\n                        $colorSet4 = $GLOBALS['appt_display_sets_color_4'];\n                        $extraAppts = ($mode1) ? 1 : 6;\n                        $extraApptDate = '';\n\n                        $past_appts = [];\n                        $recallArr = [];\n\n                        $events = fetchNextXAppts($current_date2, $pid, $apptNum2 + $extraAppts, true);\n\n                        if ($events) {\n                            $selectNum = 0;\n                            $apptNumber = count($events);\n                            //\n                            if ($apptNumber <= $apptNum2) {\n                                $extraApptDate = '';\n                                //\n                            } elseif ($mode1 && $apptNumber == $apptNum2 + 1) {\n                                $extraApptDate = $events[$apptNumber - 1]['pc_eventDate'];\n                                array_pop($events);\n                                --$apptNumber;\n                                $selectNum = 1;\n                                //\n                            } elseif ($apptNumber == $apptNum2 + 6) {\n                                $extraApptDate = $events[$apptNumber - 1]['pc_eventDate'];\n                                array_pop($events);\n                                --$apptNumber;\n                                $selectNum = 2;\n                                //\n                            } else { // mode 2 - $apptNum2 < $apptNumber < $apptNum2 + 6\n                                $extraApptDate = '';\n                                $selectNum = 2;\n                                //\n                            }\n\n                            $limitApptIndx = $apptNum2 - 1;\n                            $limitApptDate = $events[$limitApptIndx]['pc_eventDate'] ?? '';\n\n                            switch ($selectNum) {\n                                case 2:\n                                    $lastApptIndx = $apptNumber - 1;\n                                    $thisNumber = $lastApptIndx - $limitApptIndx;\n                                    for ($i = 1; $i <= $thisNumber; ++$i) {\n                                        if ($events[$limitApptIndx + $i]['pc_eventDate'] != $limitApptDate) {\n                                            $extraApptDate = $events[$limitApptIndx + $i]['pc_eventDate'];\n                                            $events = array_slice($events, 0, $limitApptIndx + $i);\n                                            break;\n                                        }\n                                    }\n                                    // Break in the loop to improve performance\n                                case 1:\n                                    $firstApptIndx = 0;\n                                    for ($i = 1; $i <= $limitApptIndx; ++$i) {\n                                        if ($events[$limitApptIndx - $i]['pc_eventDate'] != $limitApptDate) {\n                                            $firstApptIndx = $apptNum2 - $i;\n                                            break;\n                                        }\n                                    }\n                                    // Break in the loop to improve performance\n                            }\n\n                            if ($extraApptDate) {\n                                if ($extraApptDate != $limitApptDate) {\n                                    $apptStyle2 = \" style='background-color:\" . attr($colorSet3) . \";'\";\n                                } else {\n                                    $apptStyle2 = \" style='background-color:\" . attr($colorSet4) . \";'\";\n                                }\n                            }\n                        }\n\n                        $count = 0;\n                        $toggleSet = true;\n                        $priorDate = \"\";\n                        $therapyGroupCategories = array();\n                        $query = sqlStatement(\"SELECT pc_catid FROM openemr_postcalendar_categories WHERE pc_cattype = 3 AND pc_active = 1\");\n                        while ($result = sqlFetchArray($query)) {\n                            $therapyGroupCategories[] = $result['pc_catid'];\n                        }\n\n                        // Build the UI Loop\n                        $appts = [];\n                        foreach ($events as $row) {\n                            $count++;\n                            $dayname = date(\"D\", strtotime($row['pc_eventDate']));\n                            $displayMeridiem = ($GLOBALS['time_display_format'] == 0) ? \"\" : \"am\";\n                            $disphour = substr($row['pc_startTime'], 0, 2) + 0;\n                            $dispmin = substr($row['pc_startTime'], 3, 2);\n                            if ($disphour >= 12 && $GLOBALS['time_display_format'] == 1) {\n                                $displayMeridiem = \"pm\";\n                                if ($disphour > 12) {\n                                    $disphour -= 12;\n                                }\n                            }\n\n                            // Note the translaution occurs here instead of in teh Twig file for some specific concatenation needs\n                            $etitle = xl('(Click to edit)');\n                            if ($row['pc_hometext'] != \"\") {\n                                $etitle = xl('Comments') . \": \" . ($row['pc_hometext']) . \"\\r\\n\" . $etitle;\n                            }\n\n                            if ($extraApptDate && $count > $firstApptIndx) {\n                                $apptStyle = $apptStyle2;\n                            } else {\n                                if ($row['pc_eventDate'] != $priorDate) {\n                                    $priorDate = $row['pc_eventDate'];\n                                    $toggleSet = !$toggleSet;\n                                }\n\n                                $bgColor = ($toggleSet) ? $colorSet2 : $colorSet1;\n                            }\n\n                            $row['pc_eventTime'] = sprintf(\"%02d\", $disphour) . \":{$dispmin}\";\n                            $row['pc_status'] = generate_display_field(array('data_type' => '1', 'list_id' => 'apptstat'), $row['pc_apptstatus']);\n\n                            if (in_array($row['pc_catid'], $therapyGroupCategories)) {\n                                $row['groupName'] = getGroup($row['pc_gid'])['group_name'];\n                            }\n\n                            $row['uname'] = text($row['ufname'] . \" \" . $row['ulname']);\n                            $row['bgColor'] = $bgColor;\n                            $row['dayName'] = $dayname;\n                            $row['displayMeridiem'] = $displayMeridiem;\n                            $row['jsEvent'] = attr_js(preg_replace(\"/-/\", \"\", $row['pc_eventDate'])) . ', ' . attr_js($row['pc_eid']);\n                            $appts[] = $row;\n                        }\n\n                        if ($resNotNull) {\n                            // Show Recall if one exists\n                            $query = sqlStatement(\"SELECT * FROM medex_recalls WHERE r_pid = ?\", [$pid]);\n                            $recallArr = [];\n                            while ($result2 = sqlFetchArray($query)) {\n                                //tabYourIt('recall', 'main/messages/messages.php?go=' + choice);\n                                //parent.left_nav.loadFrame('1', tabNAME, url);\n                                $recallArr[] = [\n                                    'date' => $result2['r_eventDate'],\n                                    'reason' => $result2['r_reason'],\n                                ];\n                                $count2++;\n                            }\n                            $id = \"recall_ps_expand\";\n                            $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('recall'));\n                            echo $twig->getTwig()->render('patient/card/recall.html.twig', [\n                                'title' => xl('Recall'),\n                                'id' => $id,\n                                'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                                'recalls' => $recallArr,\n                                'recallsAvailable' => ($count < 1 && empty($count2)) ? false : true,\n                                'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                                'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                            ]);\n                        }\n                    } // End of Appointments Widget.\n\n                    /* Widget that shows recurrences for appointments. */\n                    $recurr = [];\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && $GLOBALS['appt_recurrences_widget'] && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayRecurrAppts = true;\n                        $count = 0;\n                        $toggleSet = true;\n                        $priorDate = \"\";\n\n                        //Fetch patient's recurrences. Function returns array with recurrence appointments' category, recurrence pattern (interpreted), and end date.\n                        $recurrences = fetchRecurrences($pid);\n                        if (!empty($recurrences)) {\n                            foreach ($recurrences as $row) {\n                                if (!recurrence_is_current($row['pc_endDate'])) {\n                                    continue;\n                                }\n\n                                if (ends_in_a_week($row['pc_endDate'])) {\n                                    $row['close_to_end'] = true;\n                                }\n                                $recurr[] = $row;\n                            }\n                        }\n                    }\n                    /* End of recurrence widget */\n\n                    // Show PAST appointments.\n                    // added by Terry Hill to allow reverse sorting of the appointments\n                    $direction = \"ASC\";\n                    if ($GLOBALS['num_past_appointments_to_show'] < 0) {\n                        $direction = \"DESC\";\n                        ($showpast = -1 * $GLOBALS['num_past_appointments_to_show']);\n                    } else {\n                        $showpast = $GLOBALS['num_past_appointments_to_show'];\n                    }\n\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && $showpast > 0 && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayPastAppts = true;\n                        $query = \"SELECT e.pc_eid, e.pc_aid, e.pc_title, e.pc_eventDate, e.pc_startTime, e.pc_hometext, u.fname, u.lname, u.mname, c.pc_catname, e.pc_apptstatus\n                            FROM openemr_postcalendar_events AS e,\n                                users AS u,\n                                openemr_postcalendar_categories AS c\n                            WHERE e.pc_pid = ?\n                                AND e.pc_eventDate < CURRENT_DATE\n                                AND u.id = e.pc_aid\n                                AND e.pc_catid = c.pc_catid\n                            ORDER BY e.pc_eventDate \" . escape_sort_order($direction) . \" , e.pc_startTime DESC LIMIT \" . escape_limit($showpast);\n\n                        $pres = sqlStatement($query, array($pid));\n\n                        $count = 0;\n\n                        while ($row = sqlFetchArray($pres)) {\n                            $count++;\n                            $dayname = date(\"D\", strtotime($row['pc_eventDate']));\n                            $displayMeridiem = \"am\";\n                            $disphour = substr($row['pc_startTime'], 0, 2) + 0;\n                            $dispmin = substr($row['pc_startTime'], 3, 2);\n                            if ($disphour >= 12) {\n                                $displayMeridiem = \"pm\";\n                                if ($disphour > 12 && $GLOBALS['time_display_format'] == 1) {\n                                    $disphour -= 12;\n                                }\n                            }\n\n                            $petitle = xl('(Click to edit)');\n                            if ($row['pc_hometext'] != \"\") {\n                                $petitle = xl('Comments') . \": \" . ($row['pc_hometext']) . \"\\r\\n\" . $petitle;\n                            }\n\n                            $row['pc_status'] = generate_display_field(array('data_type' => '1', 'list_id' => 'apptstat'), $row['pc_apptstatus']);\n                            $row['dayName'] = $dayname;\n                            $row['pc_eventTime'] = sprintf(\"%02d\", $disphour) . \":{$dispmin}\";\n                            $row['uname'] = text($row['fname'] . \" \" . $row['lname']);\n                            $row['jsEvent'] = attr_js(preg_replace(\"/-/\", \"\", $row['pc_eventDate'])) . ', ' . attr_js($row['pc_eid']);\n                            $past_appts[] = $row;\n                        }\n                    }\n                    // END of past appointments\n\n                    // Display the Appt card\n                    $id = \"appointments_ps_expand\";\n                    $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('appointment'));\n                    echo $twig->getTwig()->render('patient/card/appointments.html.twig', [\n                        'title' => xl(\"Appointments\"),\n                        'id' => $id,\n                        'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                        'btnLabel' => \"Add\",\n                        'btnLink' => \"return newEvt()\",\n                        'linkMethod' => \"javascript\",\n                        'appts' => $appts,\n                        'recurrAppts' => $recurr,\n                        'pastAppts' => $past_appts,\n                        'displayAppts' => $displayAppts,\n                        'displayRecurrAppts' => $displayRecurrAppts,\n                        'displayPastAppts' => $displayPastAppts,\n                        'extraApptDate' => $extraApptDate,\n                        'therapyGroupCategories' => $therapyGroupCategories,\n                        'auth' => $resNotNull && (AclMain::aclCheckCore('patients', 'appt', '', 'write') || AclMain::aclCheckCore('patients', 'appt', '', 'addonly')),\n                        'resNotNull' => $resNotNull,\n                        'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                        'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                    ]);\n\n                    echo \"<div id=\\\"stats_div\\\"></div>\";\n\n                    // TRACK ANYTHING\n                    // Determine if track_anything form is in use for this site.\n                    $tmp = sqlQuery(\"SELECT count(*) AS count FROM registry WHERE directory = 'track_anything' AND state = 1\");\n                    $track_is_registered = $tmp['count'];\n                    if ($track_is_registered) {\n                        $spruch = \"SELECT id FROM forms WHERE pid = ? AND formdir = ?\";\n                        $existTracks = sqlQuery($spruch, array($pid, \"track_anything\"));\n                        $id = \"track_anything_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('track_anything'));\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', [\n                            'title' => xl(\"Tracks\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLink' => \"../../forms/track_anything/create.php\",\n                            'linkMethod' => \"html\",\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ]);\n                    }  // end track_anything\n\n                    if ($thisauth) :\n                        echo $twig->getTwig()->render('patient/partials/delete.html.twig', [\n                            'isAdmin' => AclMain::aclCheckCore('admin', 'super'),\n                            'allowPatientDelete' => $GLOBALS['allow_pat_delete'],\n                            'csrf' => CsrfUtils::collectCsrfToken(),\n                            'pid' => $pid\n                        ]);\n                    endif;\n                    ?>\n                </div> <!-- end right column div -->\n                </div> <!-- end div.main > row:first  -->\n            </div> <!-- end main content div -->\n        </div><!-- end container div -->\n        <?php $oemr_ui->oeBelowContainerDiv(); ?>\n        <script>\n            // Array of skip conditions for the checkSkipConditions() function.\n            var skipArray = [\n                <?php echo ($condition_str ?? ''); ?>\n            ];\n            checkSkipConditions();\n\n            var isPost = <?php echo js_escape($showEligibility ?? false); ?>;\n            var listId = '#' + <?php echo js_escape($list_id); ?>;\n            $(function() {\n                $(listId).addClass(\"active\");\n                if (isPost === true) {\n                    $(\"#eligibility\").click();\n                    $(\"#eligibility\").get(0).scrollIntoView();\n                }\n            });\n        </script>\n</body>\n\n</html>\n", "<?php\n\n/**\n * List Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Core\\Header;\n\n?>\n\n<html>\n<head>\n\n<?php Header::setupHeader();\necho \"<title>\" . xlt('Amendment List') . \"</title>\";\n?>\n\n<script>\n    function checkForAmendments() {\n        var amendments = \"\";\n        $(\"#list_amendments input:checkbox:checked\").each(function() {\n                amendments += $(this).val() + \",\";\n        });\n\n        if ( amendments == '' ) {\n            alert(<?php echo xlj('Select amendments to print'); ?>);\n            return;\n        }\n\n        // Call the function to print\n        var url = \"print_amendments.php?ids=\" + encodeURIComponent(amendments);\n        window.open(url);\n    }\n\n    function checkUncheck(option) {\n        $(\"input[name='check_list[]']\").each( function () {\n            var optionFlag = ( option ) ? true : false;\n            $(this).prop('checked',optionFlag);\n        });\n    }\n    var AddAmendment = function () {\n        window.location.href = \"<?php echo $GLOBALS['webroot']?>/interface/patient_file/summary/add_edit_amendments.php\"\n    };\n    var ListAmendments = function () {\n        window.location.href = \"<?php echo $GLOBALS['webroot']?>/interface/patient_file/summary/list_amendments.php\"\n    };\n</script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2><?php echo xlt('List'); ?></h2>\n            </div>\n            <div class=\"col-12\">\n                <form action=\"list_amendments.php\" name=\"list_amendments\" id=\"list_amendments\" method=\"post\" onsubmit='return top.restoreSession()'>\n                <?php\n                $query = \"SELECT * FROM amendments WHERE pid = ? ORDER BY amendment_date DESC\";\n                $resultSet = sqlStatement($query, array($pid));\n                if (sqlNumRows($resultSet)) { ?>\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <tr>\n                                <td>\n                                    <a href=\"javascript:AddAmendment();\" class=\"btn btn-primary btn-add\"><?php echo xlt(\"Add\"); ?></a>\n                                    <a href=\"javascript:checkForAmendments();\" class=\"btn btn-primary btn-print\"><?php echo xlt(\"Print Amendments\"); ?></a>\n                                    <a href=\"javascript:ListAmendments();\" class=\"btn btn-primary\"><?php echo xlt(\"List\"); ?></a>\n                                    <a href=\"demographics.php\" class=\"btn btn-secondary\"><?php echo xlt(\"Return Dashboard\"); ?></a>\n                                </td>\n                                <td class=\"text-right\">\n                                    <a href=\"#\" class=\"small\" onClick=\"checkUncheck(1);\"><?php echo xlt('Check All');?></a> |\n                                    <a href=\"#\" class=\"small\" onClick=\"checkUncheck(0);\"><?php echo xlt('Clear All');?></a>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div id=\"patient_stats\" class=\"table-responsive\">\n                        <br />\n                        <table class=\"table table-borderless mb-3\">\n                            <thead class=\"table-primary\">\n                                <tr>\n                                    <th></th>\n                                    <th><?php echo xlt('Requested Date'); ?></th>\n                                    <th><?php echo xlt('Request Description'); ?></th>\n                                    <th><?php echo xlt('Requested By'); ?></th>\n                                    <th><?php echo xlt('Request Status'); ?></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            <?php while ($row = sqlFetchArray($resultSet)) {\n                                $amendmentLink = \"<a href='add_edit_amendments.php?id=\" . attr_url($row['amendment_id']) . \"'>\" . text(oeFormatShortDate($row['amendment_date'])) . \"</a>\";\n                                ?>\n                                <tr class=\"amendmentrow\" id=\"<?php echo attr($row['amendment_id']); ?>\">\n                                    <td><input id=\"check_list[]\" name=\"check_list[]\" type=\"checkbox\" value=\"<?php echo attr($row['amendment_id']); ?>\"></td>\n                                    <td><?php echo $amendmentLink; ?> </td>\n                                    <td><?php echo text($row['amendment_desc']); ?> </td>\n                                    <td><?php echo generate_display_field(array('data_type' => '1','list_id' => 'amendment_from'), $row['amendment_by']); ?> </td>\n                                    <td><?php echo generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $row['amendment_status']); ?> </td>\n                                </tr>\n                            <?php } ?>\n                            </tbody>\n                        </table>\n                    </div>\n                <?php } else { ?>\n                    <div class=\"btn-group\">\n                        <a href=\"javascript:AddAmendment();\" class=\"btn btn-primary btn-add\"><?php echo xlt(\"Add\"); ?></a>\n                        <a href=\"javascript:ListAmendments();\" class=\"btn btn-primary\"><?php echo xlt(\"List\"); ?></a>\n                    </div>\n                    <p class=\"text-danger\">\n                        <?php echo xlt(\"No amendment requests available\"); ?>\n                    </p>\n                <?php } ?>\n                </form>\n            </div>\n        </div>\n    </div>\n</body>\n\n</html>\n", "<?php\n\n/**\n * Print Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Core\\Header;\n\n$amendments = $_REQUEST[\"ids\"];\n$amendments = rtrim($amendments, \",\");\n$amendmentsList = explode(\",\", $amendments);\n\n$patientDetails = getPatientData($pid, \"fname,lname\");\n$patientName = $patientDetails['lname'] . \", \" . $patientDetails['fname'];\n\nfunction printAmendment($amendmentID, $lastAmendment)\n{\n    $query = \"SELECT lo.title AS 'amendmentFrom', lo1.title AS 'amendmentStatus',a.* FROM amendments a\n\t\tLEFT JOIN list_options lo ON a.amendment_by = lo.option_id AND lo.list_id = 'amendment_from' AND lo.activity = 1\n\t\tLEFT JOIN list_options lo1 ON a.amendment_status = lo1.option_id AND lo1.list_id = 'amendment_status' AND lo1.activity = 1\n\t\tWHERE a.amendment_id = ?\";\n    $resultSet = sqlQuery($query, array($amendmentID));\n    echo \"<table>\";\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Requested Date\") . \":\"  . \"</td>\";\n    echo \"<td>\" . text(oeFormatShortDate($resultSet['amendment_date'])) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Requested By\") . \":\"  . \"</td>\";\n    echo \"<td>\" . generate_display_field(array('data_type' => '1','list_id' => 'amendment_from'), $resultSet['amendment_by']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Request Status\") . \":\"  . \"</td>\";\n    echo \"<td>\" . generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $resultSet['amendment_status']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Request Description\") . \":\"  . \"</td>\";\n    echo \"<td>\" . text($resultSet['amendment_desc']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"</table>\";\n\n    echo \"<hr>\";\n    echo \"<span class='bold'>\" . xlt(\"History\") . \"</span><br />\";\n    $pageBreak = ( $lastAmendment ) ? \"\" : \"page-break-after:always\";\n    echo \"<table border='1' cellspacing=0 cellpadding=3 style='width:75%;margin-top:10px;margin-bottom:20px;\" . $pageBreak . \"'>\";\n    echo \"<tr class='text bold'>\";\n    echo \"<th align=left style='width:10%'>\" . xlt(\"Date\") . \"</th>\";\n    echo \"<th align=left style='width:20%'>\" . xlt(\"By\") . \"</th>\";\n    echo \"<th align=left >\" . xlt(\"Comments\") . \"</th>\";\n    echo \"</tr>\";\n\n    $query = \"SELECT u.fname,u.lname,ah.* FROM amendments_history ah INNER JOIN users u ON ah.created_by = u.id WHERE ah.amendment_id = ?\";\n    $resultSet = sqlStatement($query, array($amendmentID));\n    while ($row = sqlFetchArray($resultSet)) {\n        echo \"<tr class=text>\";\n        $created_date = date('Y-m-d', strtotime($row['created_time']));\n        echo \"<td>\" . text(oeFormatShortDate($created_date)) . \"</td>\";\n        echo \"<td>\" . text($row['lname']) . \", \" . text($row['fname']) . \"</td>\";\n        echo \"<td>\" . text($row['amendment_note']) . \"</td>\";\n        echo \"</tr>\";\n    }\n\n    echo \"</table>\";\n}\n\n?>\n<html>\n<head>\n    <?php Header::setupHeader(); ?>\n</head>\n\n<body class=\"body_top\">\n    <span class='title'><?php echo xlt(\"Amendments for\") . \" \" . text($patientName); ?></span>\n    <p></p>\n\n    <?php\n    for ($i = 0; $i < count($amendmentsList); $i++) {\n        $lastAmendment = ( $i == count($amendmentsList) - 1 ) ? true : false;\n        printAmendment($amendmentsList[$i], $lastAmendment);\n    }\n    ?>\n\n<script>\n    opener.top.printLogPrint(window);\n</script>\n\n</body>\n\n</html>\n"], "fixing_code": ["<?php\n\n/**\n * Add/Edit Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2017-2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Core\\Header;\n\n\n//ensure user has proper access\nif (!AclMain::aclCheckCore('patients', 'amendment')) {\n    echo (new TwigContainer(null, $GLOBALS['kernel']))->getTwig()->render('core/unauthorized.html.twig', ['pageTitle' => xl(\"Amendments\")]);\n    exit;\n}\n$editAccess = AclMain::aclCheckCore('patients', 'amendment', '', 'write');\n$addAccess = ($editAccess || AclMain::aclCheckCore('patients', 'amendment', '', 'addonly'));\n\nif (isset($_POST['mode'])) {\n    if (!CsrfUtils::verifyCsrfToken($_POST[\"csrf_token_form\"])) {\n        CsrfUtils::csrfNotVerified();\n    }\n\n    $currentUser = $_SESSION['authUserID'];\n    $created_time = date('Y-m-d H:i');\n    if ($_POST[\"amendment_id\"] == \"\") {\n        // New. Insert\n        if (!$addAccess) {\n            echo (new TwigContainer(null, $GLOBALS['kernel']))->getTwig()->render('core/unauthorized.html.twig', ['pageTitle' => xl(\"Amendment Add\")]);\n            exit;\n        }\n        $query = \"INSERT INTO amendments SET\n\t\t\tamendment_date = ?,\n\t\t\tamendment_by = ?,\n\t\t\tamendment_status = ?,\n\t\t\tpid = ?,\n\t\t\tamendment_desc = ?,\n\t\t\tcreated_by = ?,\n\t\t\tcreated_time = ?\";\n        $sqlBindArray = array(\n            DateToYYYYMMDD($_POST['amendment_date']),\n            $_POST['form_amendment_by'],\n            $_POST['form_amendment_status'],\n            $pid,\n            $_POST['desc'],\n            $currentUser,\n            $created_time\n        );\n\n        $amendment_id = sqlInsert($query, $sqlBindArray);\n    } else {\n        $amendment_id = $_POST['amendment_id'];\n        // Existing. Update\n        if (!$editAccess) {\n            echo (new TwigContainer(null, $GLOBALS['kernel']))->getTwig()->render('core/unauthorized.html.twig', ['pageTitle' => xl(\"Amendment Edit\")]);\n            exit;\n        }\n        $query = \"UPDATE amendments SET\n\t\t\tamendment_date = ?,\n\t\t\tamendment_by = ?,\n\t\t\tamendment_status = ?,\n\t\t\tamendment_desc = ?,\n\t\t\tmodified_by = ?,\n\t\t\tmodified_time = ?\n\t\t\tWHERE amendment_id = ?\";\n        $sqlBindArray = array(\n            DateToYYYYMMDD($_POST['amendment_date']),\n            $_POST['form_amendment_by'],\n            $_POST['form_amendment_status'],\n            $_POST['desc'],\n            $currentUser,\n            $created_time,\n            $_POST['amendment_id']\n        );\n        sqlStatement($query, $sqlBindArray);\n    }\n\n    // Insert into amendments_history\n    $query = \"INSERT INTO amendments_history SET\n\t\tamendment_id = ? ,\n\t\tamendment_note = ?,\n\t\tamendment_status = ?,\n\t\tcreated_by = ?,\n\t\tcreated_time = ?\";\n    $sqlBindArray = array(\n        $amendment_id,\n        $_POST['note'],\n        $_POST[\"form_amendment_status\"],\n        $currentUser,\n        $created_time\n    );\n    sqlStatement($query, $sqlBindArray);\n    header(\"Location:add_edit_amendments.php?id=\" . urlencode($amendment_id));\n    exit;\n}\n\n$amendment_id = $amendment_id ?? ($_REQUEST['id'] ?? '');\nif (!empty($amendment_id)) {\n    $query = \"SELECT * FROM amendments WHERE amendment_id = ? \";\n    $resultSet = sqlQuery($query, array($amendment_id));\n    $amendment_date = $resultSet['amendment_date'];\n    $amendment_status = $resultSet['amendment_status'];\n    $amendment_by = $resultSet['amendment_by'];\n    $amendment_desc = $resultSet['amendment_desc'];\n\n    $query = \"SELECT * FROM amendments_history ah INNER JOIN users u ON ah.created_by = u.id WHERE amendment_id = ? \";\n    $resultSet = sqlStatement($query, array($amendment_id));\n}\n\n$onlyRead = ( $editAccess || ($addAccess && empty($amendment_id)) ) ? 0 : 1;\n$onlyRead = ( $onlyRead || (!empty($amendment_status)) ) ? 1 : 0;\n$customAttributes = ( $onlyRead ) ? array(\"disabled\" => \"true\") : null;\n?>\n\n<html>\n<head>\n\n<?php Header::setupHeader('datetime-picker');\necho \"<title>\" . xlt('Amendments') . \"</title>\";\n?>\n\n<script>\n\nfunction formValidation() {\n    if ( $(\"#amendment_date\").val() == \"\" ) {\n        alert(<?php echo xlj('Select Amendment Date'); ?>);\n        return;\n    } else if ( $(\"#form_amendment_by\").val() == \"\" ) {\n        alert(<?php echo xlj('Select Requested By'); ?>);\n        return;\n    }\n\n    var statusText = $(\"#form_amendment_status option:selected\").text();\n    $(\"#note\").val($(\"#note\").val() + ' ' + statusText);\n\n    $(\"#add_edit_amendments\").submit();\n}\n\n$(function () {\n    $('.datepicker').datetimepicker({\n        <?php $datetimepicker_timepicker = false; ?>\n        <?php $datetimepicker_showseconds = false; ?>\n        <?php $datetimepicker_formatInput = true; ?>\n        <?php require($GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'); ?>\n        <?php // can add any additional javascript settings to datetimepicker here; need to prepend first setting with a comma ?>\n    });\n});\n\n</script>\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2><?php echo xlt('Amendments'); ?></h2>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"btn-group\">\n                    <?php if (! $onlyRead) { ?>\n                        <a href=# onclick=\"formValidation()\" class=\"btn btn-primary btn-sm btn-save\"><span><?php echo xlt('Save');?></span></a>\n                    <?php } ?>\n                    <a href=\"list_amendments.php\" class=\"btn btn-secondary btn-sm btn-back\"><span><?php echo xlt('Back');?></span></a>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <form action=\"add_edit_amendments.php\" name=\"add_edit_amendments\" id=\"add_edit_amendments\" method=\"post\" onsubmit='return top.restoreSession()'>\n                    <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\" />\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Requested Date'); ?></label>\n                        <?php if (! $onlyRead) { ?>\n                            <input type='text' size='10' class='form-control datepicker' name=\"amendment_date\" id=\"amendment_date\"\n                                value='<?php echo (!empty($amendment_date)) ? attr(oeFormatShortDate($amendment_date)) : attr(oeFormatShortDate()); ?>'\n                            />\n                        <?php } else { ?>\n                            <input type='text' size='10' class='form-control' name=\"amendment_date\" id=\"amendment_date\" readonly\n                                value='<?php echo (!empty($amendment_date)) ? attr(oeFormatShortDate($amendment_date)) : attr(oeFormatShortDate()); ?>'\n                            />\n                        <?php } ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Requested By'); ?></label>\n                        <?php echo generate_select_list(\"form_amendment_by\", \"amendment_from\", ($amendment_by ?? ''), 'Amendment Request By', ' ', '', '', '', $customAttributes); ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Request Description'); ?></label>\n                        <textarea <?php echo ( $onlyRead ) ? \"readonly\" : \"\";  ?> id=\"desc\" class=\"form-control\" name=\"desc\" rows=\"4\" cols=\"30\"><?php\n                        if (!empty($amendment_id)) {\n                            echo text($amendment_desc);\n                        } else {\n                            echo \"\";\n                        }\n                        ?></textarea>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Request Status'); ?></label>\n                        <?php echo generate_select_list(\"form_amendment_status\", \"amendment_status\", ($amendment_status ?? ''), 'Amendment Status', ' ', '', '', '', $customAttributes); ?>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <label><?php echo xlt('Comments'); ?></label>\n                        <textarea <?php echo ( $onlyRead ) ? \"readonly\" : \"\";  ?> id=\"note\" class=\"form-control\" name=\"note\" rows=\"4\" cols=\"30\"><?php\n                        if (!empty($amendment_id)) {\n                            echo \"\";\n                        } else {\n                            echo xlt('New amendment request');\n                        }\n                        ?></textarea>\n                    </div>\n\n                    <input type=\"hidden\" id=\"mode\" name=\"mode\" value=\"\"/>\n                    <input type=\"hidden\" id=\"amendment_id\" name=\"amendment_id\" value=\"<?php echo attr($amendment_id); ?>\"/>\n                </form>\n            </div>\n            <?php if (!empty($amendment_id)) { ?>\n            <hr />\n            <div class=\"col-12\">\n                <h2><?php echo xlt(\"History\") ; ?></h2>\n            </div>\n\n            <table class=\"table table-bordered table-hover\">\n                <!-- some columns are sortable -->\n                <thead class=\"table-primary font-weight-bold\">\n                    <tr>\n                        <th><?php echo xlt('Date'); ?></th>\n                        <th><?php echo xlt('By'); ?></th>\n                        <th><?php echo xlt('Status'); ?></th>\n                        <th><?php echo xlt('Comments'); ?></th>\n                    </tr>\n                </thead>\n                <tbody>\n                <?php\n                if (sqlNumRows($resultSet)) {\n                    while ($row = sqlFetchArray($resultSet)) {\n                        $created_date = date('Y-m-d', strtotime($row['created_time']));\n                        echo \"<tr>\";\n                        $userName = $row['lname'] . \", \" . $row['fname'];\n                        echo \"<td>\" . text(oeFormatShortDate($created_date)) . \"</td>\";\n                        echo \"<td>\" . text($userName) . \"</td>\";\n                        echo \"<td>\" . ( ( $row['amendment_status'] ) ? generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $row['amendment_status']) : '') . \"</td>\";\n                        echo \"<td>\" . text($row['amendment_note']) . \"</td>\";\n                        echo \"<tr>\";\n                    }\n                }\n                ?>\n                </tbody>\n            </table>\n            <?php } ?>\n        </div>\n    </div>\n\n</body>\n</html>\n", "<?php\n\n/**\n *\n * Patient summary screen.\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Sharon Cohen <sharonco@matrix.co.il>\n * @author    Stephen Waite <stephen.waite@cmsvt.com>\n * @author    Ranganath Pathak <pathak@scrs1.org>\n * @author    Tyler Wrenn <tyler@tylerwrenn.com>\n * @author    Robert Down <robertdown@live.com>\n * @copyright Copyright (c) 2017-2020 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2017 Sharon Cohen <sharonco@matrix.co.il>\n * @copyright Copyright (c) 2018-2020 Stephen Waite <stephen.waite@cmsvt.com>\n * @copyright Copyright (c) 2018 Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2021-2022 Robert Down <robertdown@live.com\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/patient.inc\");\nrequire_once(\"$srcdir/options.inc.php\");\nrequire_once(\"../history/history.inc.php\");\nrequire_once(\"$srcdir/clinical_rules.php\");\nrequire_once(\"$srcdir/group.inc\");\nrequire_once(__DIR__ . \"/../../../library/appointments.inc.php\");\n\nuse OpenEMR\\Billing\\EDI270;\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Session\\SessionUtil;\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Core\\Header;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\RenderEvent as CardRenderEvent;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\SectionEvent;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\RenderModel;\nuse OpenEMR\\Events\\Patient\\Summary\\Card\\CardInterface;\nuse OpenEMR\\Events\\PatientDemographics\\ViewEvent;\nuse OpenEMR\\Events\\PatientDemographics\\RenderEvent;\nuse OpenEMR\\FHIR\\SMART\\SmartLaunchController;\nuse OpenEMR\\Menu\\PatientMenuRole;\nuse OpenEMR\\OeUI\\OemrUI;\nuse OpenEMR\\Patient\\Cards\\PortalCard;\nuse OpenEMR\\Reminder\\BirthdayReminder;\nuse Symfony\\Component\\EventDispatcher\\EventDispatcher;\n\n$twig = new TwigContainer(null, $GLOBALS['kernel']);\n\n// Set session for pid (via setpid). Also set session for encounter (if applicable)\nif (isset($_GET['set_pid'])) {\n    require_once(\"$srcdir/pid.inc\");\n    setpid($_GET['set_pid']);\n    if (isset($_GET['set_encounterid']) && ((int)$_GET['set_encounterid'] > 0)) {\n        $encounter = (int)$_GET['set_encounterid'];\n        SessionUtil::setSession('encounter', $encounter);\n    }\n}\n\n// Note: it would eventually be a good idea to move this into\n// it's own module that people can remove / add if they don't\n// want smart support in their system.\n$smartLaunchController = new SMARTLaunchController($GLOBALS[\"kernel\"]->getEventDispatcher());\n$smartLaunchController->registerContextEvents();\n\n/**\n * @var EventDispatcher\n */\n$ed = $GLOBALS['kernel']->getEventDispatcher();\n\n$active_reminders = false;\n$all_allergy_alerts = false;\nif ($GLOBALS['enable_cdr']) {\n    //CDR Engine stuff\n    if ($GLOBALS['enable_allergy_check'] && $GLOBALS['enable_alert_log']) {\n        //Check for new allergies conflicts and throw popup if any exist(note need alert logging to support this)\n        $new_allergy_alerts = allergy_conflict($pid, 'new', $_SESSION['authUser']);\n        if (!empty($new_allergy_alerts)) {\n            $pod_warnings = '';\n            foreach ($new_allergy_alerts as $new_allergy_alert) {\n                $pod_warnings .= js_escape($new_allergy_alert) . ' + \"\\n\"';\n            }\n            $allergyWarningMessage = '<script>alert(' . xlj('WARNING - FOLLOWING ACTIVE MEDICATIONS ARE ALLERGIES') . ' + \"\\n\" + ' . $pod_warnings . ')</script>';\n        }\n    }\n\n    if ((empty($_SESSION['alert_notify_pid']) || ($_SESSION['alert_notify_pid'] != $pid)) && isset($_GET['set_pid']) && $GLOBALS['enable_cdr_crp']) {\n        // showing a new patient, so check for active reminders and allergy conflicts, which use in active reminder popup\n        $active_reminders = active_alert_summary($pid, \"reminders-due\", '', 'default', $_SESSION['authUser'], true);\n        if ($GLOBALS['enable_allergy_check']) {\n            $all_allergy_alerts = allergy_conflict($pid, 'all', $_SESSION['authUser'], true);\n        }\n    }\n    SessionUtil::setSession('alert_notify_pid', $pid);\n    // can not output html until after above setSession call\n    if (!empty($allergyWarningMessage)) {\n        echo $allergyWarningMessage;\n    }\n}\n//Check to see is only one insurance is allowed\nif ($GLOBALS['insurance_only_one']) {\n    $insurance_array = array('primary');\n} else {\n    $insurance_array = array('primary', 'secondary', 'tertiary');\n}\n\nfunction print_as_money($money)\n{\n    preg_match(\"/(\\d*)\\.?(\\d*)/\", $money, $moneymatches);\n    $tmp = wordwrap(strrev($moneymatches[1]), 3, \",\", 1);\n    $ccheck = strrev($tmp);\n    if ($ccheck[0] == \",\") {\n        $tmp = substr($ccheck, 1, strlen($ccheck) - 1);\n    }\n\n    if ($moneymatches[2] != \"\") {\n        return \"$ \" . strrev($tmp) . \".\" . $moneymatches[2];\n    } else {\n        return \"$ \" . strrev($tmp);\n    }\n}\n\n// get an array from Photos category\nfunction pic_array($pid, $picture_directory)\n{\n    $pics = array();\n    $sql_query = \"select documents.id from documents join categories_to_documents \" .\n        \"on documents.id = categories_to_documents.document_id \" .\n        \"join categories on categories.id = categories_to_documents.category_id \" .\n        \"where categories.name like ? and documents.foreign_id = ? and documents.deleted = 0\";\n    if ($query = sqlStatement($sql_query, array($picture_directory, $pid))) {\n        while ($results = sqlFetchArray($query)) {\n            array_push($pics, $results['id']);\n        }\n    }\n\n    return ($pics);\n}\n\n// Get the document ID of the first document in a specific catg.\nfunction get_document_by_catg($pid, $doc_catg)\n{\n    $result = array();\n\n    if ($pid and $doc_catg) {\n        $result = sqlQuery(\"SELECT d.id, d.date, d.url\n            FROM documents AS d, categories_to_documents AS cd, categories AS c\n            WHERE d.foreign_id = ?\n            AND cd.document_id = d.id\n            AND c.id = cd.category_id\n            AND c.name LIKE ?\n            ORDER BY d.date DESC LIMIT 1\", array($pid, $doc_catg));\n    }\n\n    return ($result['id'] ?? false);\n}\n\nfunction portalAuthorized($pid)\n{\n    if (!$GLOBALS['portal_onsite_two_enable'] && !$GLOBALS['portal_onsite_two_address']) {\n        return false;\n    }\n\n    $return = [\n        'isAllowed' => false\n        ,'allowed' => [\n                'api' => false\n                ,'portal' => false\n        ],\n        'credentials' => [\n                'created' => false\n                ,'date' => null\n        ]\n    ];\n\n    $portalStatus = sqlQuery(\"SELECT allow_patient_portal,prevent_portal_apps FROM patient_data WHERE pid = ?\", [$pid]);\n    $return['allowed']['portal'] = $portalStatus['allow_patient_portal'] == 'YES';\n    $return['allowed']['api'] = strtoupper($portalStatus['prevent_portal_apps']) != 'YES';\n    if ($return['allowed']['portal'] || $return['allowed']['api']) {\n        $return['isAllowed'] = true;\n        $portalLogin = sqlQuery(\"SELECT pid,date_created FROM `patient_access_onsite` WHERE `pid`=?\", [$pid]);\n        if ($portalLogin) {\n            $return['credentials']['date'] = $portalLogin['date_created'];\n            $return['credentials']['created'] = true;\n        }\n        return $return;\n    }\n    return $return;\n}\n\nfunction deceasedDays($days_deceased)\n{\n    $deceased_days = intval($days_deceased['days_deceased'] ?? '');\n    if ($deceased_days == 0) {\n        $num_of_days = xl(\"Today\");\n    } elseif ($deceased_days == 1) {\n        $num_of_days =  $deceased_days . \" \" . xl(\"day ago\");\n    } elseif ($deceased_days > 1 && $deceased_days < 90) {\n        $num_of_days =  $deceased_days . \" \" . xl(\"days ago\");\n    } elseif ($deceased_days >= 90 && $deceased_days < 731) {\n        $num_of_days =  \"~\" . round($deceased_days / 30) . \" \" . xl(\"months ago\");  // function intdiv available only in php7\n    } elseif ($deceased_days >= 731) {\n        $num_of_days =  xl(\"More than\") . \" \" . round($deceased_days / 365) . \" \" . xl(\"years ago\");\n    }\n\n    if (strlen($days_deceased['date_deceased'] ?? '') > 10 && $GLOBALS['date_display_format'] < 1) {\n        $deceased_date = substr($days_deceased['date_deceased'], 0, 10);\n    } else {\n        $deceased_date = oeFormatShortDate($days_deceased['date_deceased'] ?? '');\n    }\n\n    return xlt(\"Deceased\") . \" - \" . text($deceased_date) . \" (\" . text($num_of_days) . \")\";\n}\n\n$deceased = is_patient_deceased($pid);\n\n\n// Display image in 'widget style'\nfunction image_widget($doc_id, $doc_catg)\n{\n    global $pid, $web_root;\n    $docobj = new Document($doc_id);\n    $image_file = $docobj->get_url_file();\n    $image_file_name = $docobj->get_name();\n    $image_width = $GLOBALS['generate_doc_thumb'] == 1 ? '' : 'width=100';\n    $extension = substr($image_file_name, strrpos($image_file_name, \".\"));\n    $viewable_types = array('.png', '.jpg', '.jpeg', '.png', '.bmp', '.PNG', '.JPG', '.JPEG', '.PNG', '.BMP');\n    if (in_array($extension, $viewable_types)) { // extension matches list\n        $to_url = \"<td> <a href = '$web_root\" .\n            \"/controller.php?document&retrieve&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"&as_file=false&original_file=true&disable_exit=false&show_original=true'\" .\n            \" onclick='top.restoreSession();' class='image_modal'>\" .\n            \" <img src = '$web_root\" .\n            \"/controller.php?document&retrieve&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"&as_file=false'\" .\n            \" $image_width alt='\" . attr($doc_catg) . \":\" . attr($image_file) . \"'>  </a> </td> <td class='align-middle'>\" .\n            text($doc_catg) . '<br />&nbsp;' . text($image_file) .\n            \"</td>\";\n    } else {\n        $to_url = \"<td> <a href='\" . $web_root . \"/controller.php?document&retrieve\" .\n            \"&patient_id=\" . attr_url($pid) . \"&document_id=\" . attr_url($doc_id) . \"'\" .\n            \" onclick='top.restoreSession()' class='btn btn-primary btn-sm'>\" .\n            \"<span>\" .\n            xlt(\"View\") . \"</a> &nbsp;\" .\n            text(\"$doc_catg - $image_file\") .\n            \"</span> </td>\";\n    }\n\n    echo \"<table><tr>\";\n    echo $to_url;\n    echo \"</tr></table>\";\n}\n\n// Determine if the Vitals form is in use for this site.\n$tmp = sqlQuery(\"SELECT count(*) AS count FROM registry WHERE directory = 'vitals' AND state = 1\");\n$vitals_is_registered = $tmp['count'];\n\n// Get patient/employer/insurance information.\n//\n$result = getPatientData($pid, \"*, DATE_FORMAT(DOB,'%Y-%m-%d') as DOB_YMD\");\n$result2 = getEmployerData($pid);\n$result3 = getInsuranceData($pid, \"primary\", \"copay, provider, DATE_FORMAT(`date`,'%Y-%m-%d') as effdate\");\n$insco_name = \"\";\nif (!empty($result3['provider'])) {   // Use provider in case there is an ins record w/ unassigned insco\n    $insco_name = getInsuranceProvider($result3['provider']);\n}\n\n$arrOeUiSettings = array(\n    'heading_title' => xl('Medical Record Dashboard'),\n    'include_patient_name' => true,\n    'expandable' => false,\n    'expandable_files' => array(), //all file names need suffix _xpd\n    'action' => \"\", //conceal, reveal, search, reset, link or back\n    'action_title' => \"\",\n    'action_href' => \"\", //only for actions - reset, link or back\n    'show_help_icon' => true,\n    'help_file_name' => \"medical_dashboard_help.php\"\n);\n$oemr_ui = new OemrUI($arrOeUiSettings);\n?>\n<!DOCTYPE html>\n<html>\n\n<head>\n    <?php\n    Header::setupHeader(['common']);\n    require_once(\"$srcdir/options.js.php\");\n    ?>\n    <script>\n        // Process click on diagnosis for referential cds popup.\n        function referentialCdsClick(codetype, codevalue) {\n            top.restoreSession();\n            // Force a new window instead of iframe to address cross site scripting potential\n            dlgopen('../education.php?type=' + encodeURIComponent(codetype) + '&code=' + encodeURIComponent(codevalue), '_blank', 1024, 750,true);\n        }\n\n        function oldEvt(apptdate, eventid) {\n            let title = <?php echo xlj('Appointments'); ?>;\n            dlgopen('../../main/calendar/add_edit_event.php?date=' + encodeURIComponent(apptdate) + '&eid=' + encodeURIComponent(eventid), '_blank', 800, 500, '', title);\n        }\n\n        function advdirconfigure() {\n            dlgopen('advancedirectives.php', '_blank', 400, 500);\n        }\n\n        function refreshme() {\n            top.restoreSession();\n            location.reload();\n        }\n\n        // Process click on Delete link.\n        function deleteme() { // @todo don't think this is used any longer!!\n            dlgopen('../deleter.php?patient=' + <?php echo js_url($pid); ?> + '&csrf_token_form=' + <?php echo js_url(CsrfUtils::collectCsrfToken()); ?>, '_blank', 500, 450, '', '', {\n                allowResize: false,\n                allowDrag: false,\n                dialogId: 'patdel',\n                type: 'iframe'\n            });\n            return false;\n        }\n\n        // Called by the deleteme.php window on a successful delete.\n        function imdeleted() {\n            top.clearPatient();\n        }\n\n        function newEvt() {\n            let title = <?php echo xlj('Appointments'); ?>;\n            let url = '../../main/calendar/add_edit_event.php?patientid=' + <?php echo js_url($pid); ?>;\n            dlgopen(url, '_blank', 800, 500, '', title);\n            return false;\n        }\n\n        function getWeno() {\n            top.restoreSession();\n            location.href = '../../weno/indexrx.php'\n        }\n\n        function toggleIndicator(target, div) {\n            // <i id=\"show_hide\" class=\"fa fa-lg small fa-eye-slash\" title=\"Click to Hide\"></i>\n            $mode = $(target).find(\".indicator\").text();\n            if ($mode == <?php echo xlj('collapse'); ?>) {\n                $(target).find(\".indicator\").text(<?php echo xlj('expand'); ?>);\n                $(\"#\" + div).hide();\n                $.post(\"../../../library/ajax/user_settings.php\", {\n                    target: div,\n                    mode: 0,\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            } else {\n                $(target).find(\".indicator\").text(<?php echo xlj('collapse'); ?>);\n                $(\"#\" + div).show();\n                $.post(\"../../../library/ajax/user_settings.php\", {\n                    target: div,\n                    mode: 1,\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            }\n        }\n\n        // edit prescriptions dialog.\n        // called from stats.php.\n        //\n        function editScripts(url) {\n            var AddScript = function() {\n                var __this = $(this);\n                __this.find(\"#clearButton\").css(\"display\", \"\");\n                __this.find(\"#backButton\").css(\"display\", \"\");\n                __this.find(\"#addButton\").css(\"display\", \"none\");\n\n                var iam = top.frames.editScripts;\n                iam.location.href = '<?php echo $GLOBALS['webroot'] ?>/controller.php?prescription&edit&id=0&pid=' + <?php echo js_url($pid); ?>;\n            };\n            var ListScripts = function() {\n                var __this = $(this);\n                __this.find(\"#clearButton\").css(\"display\", \"none\");\n                __this.find(\"#backButton\").css(\"display\", \"none\");\n                __this.find(\"#addButton\").css(\"display\", \"\");\n                var iam = top.frames.editScripts\n                iam.location.href = '<?php echo $GLOBALS['webroot'] ?>/controller.php?prescription&list&id=' + <?php echo js_url($pid); ?>;\n            };\n\n            let title = <?php echo xlj('Prescriptions'); ?>;\n            let w = 960; // for weno width\n\n            dlgopen(url, 'editScripts', w, 400, '', '', {\n                buttons: [{\n                        text: <?php echo xlj('Add'); ?>,\n                        close: false,\n                        id: 'addButton',\n                        class: 'btn-primary btn-sm',\n                        click: AddScript\n                    },\n                    {\n                        text: <?php echo xlj('Clear'); ?>,\n                        close: false,\n                        id: 'clearButton',\n                        style: 'display:none;',\n                        class: 'btn-primary btn-sm',\n                        click: AddScript\n                    },\n                    {\n                        text: <?php echo xlj('Back'); ?>,\n                        close: false,\n                        id: 'backButton',\n                        style: 'display:none;',\n                        class: 'btn-primary btn-sm',\n                        click: ListScripts\n                    },\n                    {\n                        text: <?php echo xlj('Quit'); ?>,\n                        close: true,\n                        id: 'doneButton',\n                        class: 'btn-secondary btn-sm'\n                    }\n                ],\n                onClosed: 'refreshme',\n                allowResize: true,\n                allowDrag: true,\n                dialogId: 'editscripts',\n                type: 'iframe'\n            });\n        }\n\n        /**\n         * async function fetchHtml(...)\n         *\n         * @param {*} url\n         * @param {boolean} embedded\n         * @param {boolean} sessionRestore\n         * @returns {text}\n         */\n        async function fetchHtml(url, embedded = false, sessionRestore = false) {\n            if (sessionRestore === true) {\n                // restore cookie before fetch.\n                top.restoreSession();\n            }\n            let csrf = new FormData;\n            // a security given.\n            csrf.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n            if (embedded === true) {\n                // special formatting in certain widgets.\n                csrf.append(\"embeddedScreen\", true);\n            }\n\n            const response = await fetch(url, {\n                method: 'POST',\n                credentials: 'same-origin',\n                body: csrf\n            });\n            return await response.text();\n        }\n\n        /**\n         * async function placeHtml(...) will await fetch of html then place in divId.\n         * This function will return a promise for use to init various items regarding\n         * inserted HTML if needed.\n         * If divId does not exist, then will skip.\n         * Example\n         *\n         * @param {*} url\n         * @param {string} divId id\n         * @param {boolean} embedded\n         * @param {boolean} sessionRestore\n         * @returns {object} promise\n         */\n        async function placeHtml(url, divId, embedded = false, sessionRestore = false) {\n            const contentDiv = document.getElementById(divId);\n            if (contentDiv) {\n                await fetchHtml(url, embedded, sessionRestore).then(fragment => {\n                    contentDiv.innerHTML = fragment;\n                });\n            }\n        }\n\n        if (typeof load_location === 'undefined') {\n            function load_location(location) {\n                top.restoreSession();\n                document.location = location;\n            }\n        }\n\n        $(function() {\n            var msg_updation = '';\n            <?php\n            if ($GLOBALS['erx_enable']) {\n                $soap_status = sqlStatement(\"select soap_import_status,pid from patient_data where pid=? and soap_import_status in ('1','3')\", array($pid));\n                while ($row_soapstatus = sqlFetchArray($soap_status)) { ?>\n                    top.restoreSession();\n                    $.ajax({\n                        type: \"POST\",\n                        url: \"../../soap_functions/soap_patientfullmedication.php\",\n                        dataType: \"html\",\n                        data: {\n                            patient: <?php echo js_escape($row_soapstatus['pid']); ?>,\n                        },\n                        async: false,\n                        success: function(thedata) {\n                            //alert(thedata);\n                            msg_updation += thedata;\n                        },\n                        error: function() {\n                            alert('ajax error');\n                        }\n                    });\n\n                    top.restoreSession();\n                    $.ajax({\n                        type: \"POST\",\n                        url: \"../../soap_functions/soap_allergy.php\",\n                        dataType: \"html\",\n                        data: {\n                            patient: <?php echo js_escape($row_soapstatus['pid']); ?>,\n                        },\n                        async: false,\n                        success: function(thedata) {\n                            //alert(thedata);\n                            msg_updation += thedata;\n                        },\n                        error: function() {\n                            alert('ajax error');\n                        }\n                    });\n                    <?php\n                    if ($GLOBALS['erx_import_status_message']) { ?>\n                        if (msg_updation)\n                            alert(msg_updation);\n                        <?php\n                    }\n                }\n            }\n            ?>\n\n            // load divs\n            placeHtml(\"stats.php\", \"stats_div\", true);\n            placeHtml(\"pnotes_fragment.php\", 'pnotes_ps_expand').then(() => {\n                // must be delegated event!\n                $(this).on(\"click\", \".complete_btn\", function() {\n                    let btn = $(this);\n                    let csrf = new FormData;\n                    csrf.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n                    fetch(\"pnotes_fragment.php?docUpdateId=\" + encodeURIComponent(btn.attr('data-id')), {\n                            method: \"POST\",\n                            credentials: 'same-origin',\n                            body: csrf\n                        })\n                        .then(function() {\n                            placeHtml(\"pnotes_fragment.php\", 'pnotes_ps_expand');\n                        });\n                });\n            });\n            placeHtml(\"disc_fragment.php\", \"disclosures_ps_expand\");\n            placeHtml(\"labdata_fragment.php\", \"labdata_ps_expand\");\n            placeHtml(\"track_anything_fragment.php\", \"track_anything_ps_expand\");\n            <?php if ($vitals_is_registered && AclMain::aclCheckCore('patients', 'med')) { ?>\n                // Initialize the Vitals form if it is registered and user is authorized.\n                placeHtml(\"vitals_fragment.php\", \"vitals_ps_expand\");\n            <?php } ?>\n\n            <?php if ($GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_crw']) { ?>\n                placeHtml(\"clinical_reminders_fragment.php\", \"clinical_reminders_ps_expand\", true, true).then(() => {\n                    // (note need to place javascript code here also to get the dynamic link to work)\n                    $(\".medium_modal\").on('click', function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        dlgopen('', '', 800, 200, '', '', {\n                            buttons: [{\n                                text: <?php echo xlj('Close'); ?>,\n                                close: true,\n                                style: 'secondary btn-sm'\n                            }],\n                            onClosed: 'refreshme',\n                            allowResize: false,\n                            allowDrag: true,\n                            dialogId: 'demreminder',\n                            type: 'iframe',\n                            url: $(this).attr('href')\n                        });\n                    });\n                });\n            <?php } // end crw\n            ?>\n\n            <?php if ($GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_prw']) { ?>\n                placeHtml(\"patient_reminders_fragment.php\", \"patient_reminders_ps_expand\", false, true);\n            <?php } // end prw\n            ?>\n\n            <?php\n            // Initialize for each applicable LBF form.\n            $gfres = sqlStatement(\"SELECT grp_form_id\n                FROM layout_group_properties\n                WHERE grp_form_id LIKE 'LBF%'\n                    AND grp_group_id = ''\n                    AND grp_repeats > 0\n                    AND grp_activity = 1\n                ORDER BY grp_seq, grp_title\");\n            while ($gfrow = sqlFetchArray($gfres)) { ?>\n                $(<?php echo js_escape(\"#\" . $gfrow['grp_form_id'] . \"_ps_expand\"); ?>).load(\"lbf_fragment.php?formname=\" + <?php echo js_url($gfrow['grp_form_id']); ?>, {\n                    csrf_token_form: <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>\n                });\n            <?php } ?>\n            tabbify();\n\n            // modal for dialog boxes\n            $(\".large_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 1000, 600, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".rx_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var title = <?php echo xlj('Amendments'); ?>;\n                dlgopen('', 'editAmendments', 800, 300, '', title, {\n                    onClosed: 'refreshme',\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            // modal for image viewer\n            $(\".image_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 400, 300, '', <?php echo xlj('Patient Images'); ?>, {\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".deleter\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 600, 360, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    //onClosed: 'imdeleted',\n                    allowResize: false,\n                    allowDrag: false,\n                    dialogId: 'patdel',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            $(\".iframe1\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 350, 300, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n            // for patient portal\n            $(\".small_modal\").on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                dlgopen('', '', 550, 550, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(this).attr('href')\n                });\n            });\n\n            function openReminderPopup() {\n                top.restoreSession()\n                dlgopen('', 'reminders', 500, 250, '', '', {\n                    buttons: [{\n                        text: <?php echo xlj('Close'); ?>,\n                        close: true,\n                        style: 'secondary btn-sm'\n                    }],\n                    allowResize: true,\n                    allowDrag: true,\n                    dialogId: '',\n                    type: 'iframe',\n                    url: $(\"#reminder_popup_link\").attr('href')\n                });\n            }\n\n            <?php if ($GLOBALS['patient_birthday_alert']) {\n                // To display the birthday alert:\n                //  1. The patient is not deceased\n                //  2. The birthday is today (or in the past depending on global selection)\n                //  3. The notification has not been turned off (or shown depending on global selection) for this year\n                $birthdayAlert = new BirthdayReminder($pid, $_SESSION['authUserID']);\n                if ($birthdayAlert->isDisplayBirthdayAlert()) {\n                    ?>\n                    // show the active reminder modal\n                    dlgopen('', 'bdayreminder', 300, 170, '', false, {\n                        allowResize: false,\n                        allowDrag: true,\n                        dialogId: '',\n                        type: 'iframe',\n                        url: $(\"#birthday_popup\").attr('href')\n                    });\n\n                <?php } elseif ($active_reminders || $all_allergy_alerts) { ?>\n                    openReminderPopup();\n                <?php } ?>\n            <?php } elseif ($active_reminders || $all_allergy_alerts) { ?>\n                openReminderPopup();\n            <?php } ?>\n\n            // $(\".card-title\").on('click', \"button\", (e) => {\n            //     console.debug(\"click\");\n            //     updateUserVisibilitySetting(e);\n            // });\n        });\n\n        /**\n         * Change the preference to expand/collapse a given card.\n         *\n         * For the given e element, find the corresponding card body, determine if it is collapsed\n         * or shown, and then save the state to the user preferences via an async fetch call POST'ing\n         * the updated setting.\n         *\n         * @var e element The Button that was clicked to collapse/expand the card\n         */\n        async function updateUserVisibilitySetting(e) {\n            const targetID = e.target.getAttribute(\"data-target\");\n            const target = document.querySelector(targetID);\n            const targetStr = targetID.substring(1);\n\n            let formData = new FormData();\n            formData.append(\"csrf_token_form\", <?php echo js_escape(CsrfUtils::collectCsrfToken()); ?>);\n            formData.append(\"target\", targetStr);\n            formData.append(\"mode\", (target.classList.contains(\"show\")) ? 0 : 1);\n\n            const response = await fetch(\"../../../library/ajax/user_settings.php\", {\n                method: \"POST\",\n                credentials: 'same-origin',\n                body: formData,\n            });\n\n            const update = await response.text();\n            return update;\n        }\n\n        // Update the User's visibility setting when the card header is clicked\n        function cardTitleButtonClickListener() {\n            const buttons = document.querySelectorAll(\".card-title button[data-toggle='collapse']\");\n            buttons.forEach((b) => {\n                b.addEventListener(\"click\", (e) => {\n                    updateUserVisibilitySetting(e);\n                });\n            });\n        }\n\n        // JavaScript stuff to do when a new patient is set.\n        //\n        function setMyPatient() {\n            <?php\n            if (isset($_GET['set_pid'])) {\n                $date_of_death = is_patient_deceased($pid);\n                if (!empty($date_of_death)) {\n                    $date_of_death = $date_of_death['date_deceased'];\n                }\n                ?>\n                parent.left_nav.setPatient(<?php echo js_escape($result['fname'] . \" \" . $result['lname']) .\n                                                \",\" . js_escape($pid) . \",\" . js_escape($result['pubpid']) . \",'',\";\n                if (empty($date_of_death)) {\n                    echo js_escape(\" \" . xl('DOB') . \": \" . oeFormatShortDate($result['DOB_YMD']) . \" \" . xl('Age') . \": \" . getPatientAgeDisplay($result['DOB_YMD']));\n                } else {\n                    echo js_escape(\" \" . xl('DOB') . \": \" . oeFormatShortDate($result['DOB_YMD']) . \" \" . xl('Age at death') . \": \" . oeFormatAge($result['DOB_YMD'], $date_of_death));\n                } ?>);\n                var EncounterDateArray = new Array;\n                var CalendarCategoryArray = new Array;\n                var EncounterIdArray = new Array;\n                var Count = 0;\n                <?php\n                //Encounter details are stored to javacript as array.\n                $result4 = sqlStatement(\"SELECT fe.encounter,fe.date,openemr_postcalendar_categories.pc_catname FROM form_encounter AS fe \" .\n                    \" left join openemr_postcalendar_categories on fe.pc_catid=openemr_postcalendar_categories.pc_catid  WHERE fe.pid = ? order by fe.date desc\", array($pid));\n                if (sqlNumRows($result4) > 0) {\n                    while ($rowresult4 = sqlFetchArray($result4)) { ?>\n                        EncounterIdArray[Count] = <?php echo js_escape($rowresult4['encounter']); ?>;\n                        EncounterDateArray[Count] = <?php echo js_escape(oeFormatShortDate(date(\"Y-m-d\", strtotime($rowresult4['date'])))); ?>;\n                        CalendarCategoryArray[Count] = <?php echo js_escape(xl_appt_category($rowresult4['pc_catname'])); ?>;\n                        Count++;\n                        <?php\n                    }\n                }\n                ?>\n                parent.left_nav.setPatientEncounter(EncounterIdArray, EncounterDateArray, CalendarCategoryArray);\n                <?php\n            } // end setting new pid\n            ?>\n            parent.left_nav.syncRadios();\n            <?php if ((isset($_GET['set_pid'])) && (isset($_GET['set_encounterid'])) && (intval($_GET['set_encounterid']) > 0)) {\n                $query_result = sqlQuery(\"SELECT `date` FROM `form_encounter` WHERE `encounter` = ?\", array($encounter)); ?>\n                encurl = 'encounter/encounter_top.php?set_encounter=' + <?php echo js_url($encounter); ?> + '&pid=' + <?php echo js_url($pid); ?>;\n                parent.left_nav.setEncounter(<?php echo js_escape(oeFormatShortDate(date(\"Y-m-d\", strtotime($query_result['date'])))); ?>, <?php echo js_escape($encounter); ?>, 'enc');\n                top.restoreSession();\n                parent.left_nav.loadFrame('enc2', 'enc', 'patient_file/' + encurl);\n            <?php } // end setting new encounter id (only if new pid is also set)\n            ?>\n        }\n\n        $(window).on('load', function() {\n            setMyPatient();\n        });\n\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            cardTitleButtonClickListener();\n        });\n    </script>\n\n    <style>\n        /* Bad practice to override here, will get moved to base style theme */\n        .card {\n            box-shadow: 1px 1px 1px hsl(0 0% 0% / .2);\n            border-radius: 0;\n        }\n\n        <?php\n        if (!empty($GLOBALS['right_justify_labels_demographics']) && ($_SESSION['language_direction'] == 'ltr')) { ?>\n        div.tab td.label_custom, div.label_custom {\n            text-align: right !important;\n        }\n\n        div.tab td.data, div.data {\n            padding-left: 0.5em;\n            padding-right: 2em;\n        }\n            <?php\n        } ?>\n\n        <?php\n        // This is for layout font size override.\n        $grparr = array();\n        getLayoutProperties('DEM', $grparr, 'grp_size');\n        if (!empty($grparr['']['grp_size'])) {\n            $FONTSIZE = round($grparr['']['grp_size'] * 1.333333);\n            $FONTSIZE = round($FONTSIZE * 0.0625, 2);\n            ?>\n\n        /* Override font sizes in the theme. */\n        #DEM .groupname {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        #DEM .label {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        #DEM .data {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        #DEM .data td {\n            font-size: <?php echo attr($FONTSIZE); ?>rem;\n        }\n\n        <?php } ?> :root {\n            --white: #fff;\n            --bg: hsl(0 0% 90%);\n        }\n\n        body {\n            background: var(--bg) !important;\n        }\n\n        section {\n            background: var(--white);\n            margin-top: .25em;\n            padding: .25em;\n        }\n\n        .section-header-dynamic {\n            border-bottom: none;\n        }\n    </style>\n    <title><?php echo xlt(\"Dashboard{{patient file}}\"); ?></title>\n</head>\n\n<body class=\"mt-1 patient-demographic bg-light\">\n\n    <?php\n    // Create and fire the patient demographics view event\n    $viewEvent = new ViewEvent($pid);\n    $viewEvent = $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(ViewEvent::EVENT_HANDLE, $viewEvent, 10);\n    $thisauth = AclMain::aclCheckCore('patients', 'demo');\n\n    if (!$thisauth || !$viewEvent->authorized()) {\n        echo $twig->getTwig()->render('core/unauthorized-partial.html.twig', ['pageTitle' => xl(\"Medical Dashboard\")]);\n        exit();\n    }\n    ?>\n\n    <div id=\"container_div\" class=\"<?php echo $oemr_ui->oeContainer(); ?> mb-2\">\n        <a href='../reminder/active_reminder_popup.php' id='reminder_popup_link' style='display: none' onclick='top.restoreSession()'></a>\n        <a href='../birthday_alert/birthday_pop.php?pid=<?php echo attr_url($pid); ?>&user_id=<?php echo attr_url($_SESSION['authUserID']); ?>' id='birthday_popup' style='display: none;' onclick='top.restoreSession()'></a>\n        <?php\n\n        if ($thisauth) {\n            if ($result['squad'] && !AclMain::aclCheckCore('squads', $result['squad'])) {\n                $thisauth = 0;\n            }\n        }\n\n        if ($thisauth) :\n            require_once(\"$include_root/patient_file/summary/dashboard_header.php\");\n        endif;\n\n        $list_id = \"dashboard\"; // to indicate nav item is active, count and give correct id\n        // Collect the patient menu then build it\n        $menuPatient = new PatientMenuRole($twig);\n        $menuPatient->displayHorizNavBarMenu();\n        // Get the document ID of the patient ID card if access to it is wanted here.\n        $idcard_doc_id = false;\n        if ($GLOBALS['patient_id_category_name']) {\n            $idcard_doc_id = get_document_by_catg($pid, $GLOBALS['patient_id_category_name']);\n        }\n        ?>\n        <div class=\"main mb-5\">\n            <!-- start main content div -->\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <?php\n\n                    if ($deceased > 0) :\n                        echo $twig->getTwig()->render('patient/partials/deceased.html.twig', [\n                            'deceasedDays' => deceasedDays($deceased),\n                        ]);\n                    endif;\n\n                    $sectionRenderEvents = $ed->dispatch(SectionEvent::EVENT_HANDLE, new SectionEvent('primary'));\n                    $sectionCards = $sectionRenderEvents->getCards();\n\n                    $t = $twig->getTwig();\n\n                    foreach ($sectionCards as $card) {\n                        $_auth = $card->getAcl();\n                        if (!AclMain::aclCheckCore($_auth[0], $_auth[1])) {\n                            continue;\n                        }\n\n                        $btnLabel = false;\n                        if ($card->canAdd()) {\n                            $btnLabel = 'Add';\n                        } elseif ($card->canEdit()) {\n                            $btnLabel = 'Edit';\n                        }\n\n                        $viewArgs = [\n                            'title' => $card->getTitle(),\n                            'id' => $card->getIdentifier(),\n                            'initiallyCollapsed' => !$card->isInitiallyCollapsed(),\n                            'card_bg_color' => $card->getBackgroundColorClass(),\n                            'card_text_color' => $card->getTextColorClass(),\n                            'forceAlwaysOpen' => !$card->canCollapse(),\n                            'btnLabel' => $btnLabel,\n                            'btnLink' => 'test',\n                        ];\n\n                        echo $t->render($card->getTemplateFile(), array_merge($card->getTemplateVariables(), $viewArgs));\n                    }\n\n                    if (!$GLOBALS['hide_billing_widget']) :\n                        $forceBillingExpandAlways = ($GLOBALS['force_billing_widget_open']) ? true : false;\n                        $patientbalance = get_patient_balance($pid, false);\n                        $insurancebalance = get_patient_balance($pid, true) - $patientbalance;\n                        $totalbalance = $patientbalance + $insurancebalance;\n                        $id = \"billing_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('billing'));\n                        $viewArgs = [\n                            'title' => xl('Billing'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'hideBtn' => true,\n                            'patientBalance' => $patientbalance,\n                            'insuranceBalance' => $insurancebalance,\n                            'totalBalance' => $totalbalance,\n                            'forceAlwaysOpen' => $forceBillingExpandAlways,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n\n                        if (!empty($result['billing_note'])) {\n                            $viewArgs['billingNote'] = $result['billing_note'];\n                        }\n\n                        if (!empty($result3['provider'])) {\n                            $viewArgs['provider'] = true;\n                            $viewArgs['insName'] = $insco_name;\n                            $viewArgs['copay'] = $result3['copay'];\n                            $viewArgs['effDate'] = $result3['effdate'];\n                        }\n\n                        echo $twig->getTwig()->render('patient/card/billing.html.twig', $viewArgs);\n                    endif; // End the hide_billing_widget\n\n                    // if anyone wants to render anything before the patient demographic list\n                    $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(RenderEvent::EVENT_SECTION_LIST_RENDER_BEFORE, new RenderEvent($pid), 10);\n\n                    if (AclMain::aclCheckCore('patients', 'demo')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('demographic'));\n                        // Render the Demographics box\n                        $viewArgs = [\n                            'title' => xl(\"Demographics\"),\n                            'id' => \"demographics_ps_expand\",\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"demographics_full.php\",\n                            'linkMethod' => \"html\",\n                            'auth' => ACLMain::aclCheckCore('patients', 'demo', '', 'write'),\n                            'requireRestore' => (!isset($_SESSION['patient_portal_onsite_two'])) ? true : false,\n                            'initiallyCollapsed' => getUserSetting(\"demographics_ps_expand\") == true ? true : false,\n                            'tabID' => \"DEM\",\n                            'result' => $result,\n                            'result2' => $result2,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/tab_base.html.twig', $viewArgs);\n\n                        // Insurance\n                        $insArr = [];\n                        $insInBinder = '?';\n                        for ($y = 1; count($insurance_array) > $y; $y++) {\n                            $insInBinder .= ',?';\n                        }\n                        $sql = \"SELECT * FROM insurance_data WHERE pid = ? AND type IN(\" . $insInBinder . \") ORDER BY type, date DESC\";\n                        $params[] = $pid;\n                        $params = array_merge($params, $insurance_array);\n                        $res = sqlStatement($sql, $params);\n                        $prior_ins_type = '';\n\n                        while ($row = sqlFetchArray($res)) {\n                            if ($row['provider']) {\n                                // since the query is sorted by DATE DESC can use prior ins type to identify\n                                $row['isOld'] = (strcmp($row['type'], $prior_ins_type) == 0) ? true : false;\n                                $icobj = new InsuranceCompany($row['provider']);\n                                $adobj = $icobj->get_address();\n                                $insco_name = trim($icobj->get_name());\n                                $row['insco'] = [\n                                    'name' => trim($icobj->get_name()),\n                                    'address' => [\n                                        'line1' => $adobj->get_line1(),\n                                        'line2' => $adobj->get_line2(),\n                                        'city' => $adobj->get_city(),\n                                        'state' => $adobj->get_state(),\n                                        'postal' => $adobj->get_zip(),\n                                        'country' => $adobj->get_country()\n                                    ],\n                                ];\n                                $row['policy_type'] = (!empty($row['policy_type'])) ? $policy_types[$row['policy_type']] : false;\n                                $row['dispFromDate'] = $row['date'] ? true : false;\n                                $mname = ($row['subscriber_mname'] != \"\") ? $row['subscriber_mname'] : \"\";\n                                $row['subscriber_full_name'] = str_replace(\"%mname%\", $mname, \"{$row['subscriber_fname']} %mname% {$row['subscriber_lname']}\");\n                                $insArr[] = $row;\n                                $prior_ins_type = $row['type'];\n                            }\n                        }\n\n                        if ($GLOBALS[\"enable_oa\"]) {\n                            if (($_POST['status_update'] ?? '') === 'true') {\n                                unset($_POST['status_update']);\n                                $showEligibility = true;\n                                $ok = EDI270::requestEligibleTransaction($pid);\n                                if ($ok === true) {\n                                    ob_start();\n                                    EDI270::showEligibilityInformation($pid, false);\n                                    $output = ob_get_contents();\n                                    ob_end_clean();\n                                } else {\n                                    $output = $ok;\n                                }\n                            } else {\n                                ob_start();\n                                EDI270::showEligibilityInformation($pid, true);\n                                $output = ob_get_contents();\n                                ob_end_clean();\n                            }\n                        } else {\n                            ob_start();\n                            EDI270::showEligibilityInformation($pid, true);\n                            $output = ob_get_contents();\n                            ob_end_clean();\n                        }\n\n                        $id = \"insurance_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('insurance'));\n                        $viewArgs = [\n                            'title' => xl(\"Insurance\"),\n                            'id' => $id,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"demographics_full.php\",\n                            'linkMethod' => 'html',\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'ins' => $insArr,\n                            'eligibility' => $output,\n                            'enable_oa' => $GLOBALS['enable_oa'],\n                            'auth' => AclMain::aclCheckCore('patients', 'demo', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n\n                        if (count($insArr) > 0) {\n                            echo $twig->getTwig()->render('patient/card/insurance.html.twig', $viewArgs);\n                        }\n                    endif;  // end if demographics authorized\n\n                    if (AclMain::aclCheckCore('patients', 'notes')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('note'));\n                        // Notes expand collapse widget\n                        $id = \"pnotes_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl(\"Messages\"),\n                            'id' => $id,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"pnotes_full.php?form_active=1\",\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'linkMethod' => \"html\",\n                            'bodyClass' => \"notab\",\n                            'auth' => AclMain::aclCheckCore('patients', 'notes', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end if notes authorized\n\n                    if (AclMain::aclCheckCore('patients', 'reminder') && $GLOBALS['enable_cdr'] && $GLOBALS['enable_cdr_prw']) :\n                        // patient reminders collapse widget\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('reminder'));\n                        $id = \"patient_reminders_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Patient Reminders'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => '../reminder/patient_reminders.php?mode=simple&patient_id=' . attr_url($pid),\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => AclMain::aclCheckCore('patients', 'reminder', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; //end if prw is activated\n\n                    if (AclMain::aclCheckCore('patients', 'disclosure')) :\n                        $authWriteDisclosure = AclMain::aclCheckCore('patients', 'disclosure', '', 'write');\n                        $authAddonlyDisclosure = AclMain::aclCheckCore('patients', 'disclosure', '', 'addonly');\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('disclosure'));\n                        // disclosures expand collapse widget\n                        $id = \"disclosures_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Disclosures'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => 'disclosure_full.php',\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => ($authWriteDisclosure || $authAddonlyDisclosure),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end if disclosures authorized\n\n                    if ($GLOBALS['amendments'] && AclMain::aclCheckCore('patients', 'amendment')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('amendment'));\n                        // Amendments widget\n                        $sql = \"SELECT * FROM amendments WHERE pid = ? ORDER BY amendment_date DESC\";\n                        $result = sqlStatement($sql, [$pid]);\n                        $amendments = [];\n                        while ($row = sqlFetchArray($result)) {\n                            $amendments[] = $row;\n                        }\n\n                        $id = \"amendments_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Amendments'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'btnLink' => $GLOBALS['webroot'] . \"/interface/patient_file/summary/list_amendments.php?id=\" . attr_url($pid),\n                            'btnCLass' => '',\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => AclMain::aclCheckCore('patients', 'amendment', '', ['write', 'addonly']),\n                            'amendments' => $amendments,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/amendments.html.twig', $viewArgs);\n                    endif; // end amendments authorized\n\n                    if (AclMain::aclCheckCore('patients', 'lab')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('lab'));\n                        // labdata expand collapse widget\n                        // check to see if any labdata exist\n                        $spruch = \"SELECT procedure_report.date_collected AS date\n                            FROM procedure_report\n                            JOIN procedure_order ON  procedure_report.procedure_order_id = procedure_order.procedure_order_id\n                            WHERE procedure_order.patient_id = ?\n                            ORDER BY procedure_report.date_collected DESC\";\n                        $existLabdata = sqlQuery($spruch, array($pid));\n                        $widgetAuth = ($existLabdata) ? true : false;\n\n                        $id = \"labdata_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Labs'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../summary/labdata.php\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end labs authorized\n\n                    if ($vitals_is_registered && AclMain::aclCheckCore('patients', 'med')) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('vital_sign'));\n                        // vitals expand collapse widget\n                        // check to see if any vitals exist\n                        $existVitals = sqlQuery(\"SELECT * FROM form_vitals WHERE pid=?\", array($pid));\n                        $widgetAuth = ($existVitals) ? true : false;\n\n                        $id = \"vitals_ps_expand\";\n                        $viewArgs = [\n                            'title' => xl('Vitals'),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../encounter/trend_form.php?formname=vitals\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endif; // end vitals\n\n                    // if anyone wants to render anything after the patient demographic list\n                    $GLOBALS[\"kernel\"]->getEventDispatcher()->dispatch(RenderEvent::EVENT_SECTION_LIST_RENDER_AFTER, new RenderEvent($pid), 10);\n\n                    // This generates a section similar to Vitals for each LBF form that\n                    // supports charting.  The form ID is used as the \"widget label\".\n                    $gfres = sqlStatement(\"SELECT grp_form_id AS option_id, grp_title AS title, grp_aco_spec\n                        FROM layout_group_properties\n                        WHERE grp_form_id LIKE 'LBF%'\n                        AND grp_group_id = ''\n                        AND grp_repeats > 0\n                        AND grp_activity = 1\n                        ORDER BY grp_seq, grp_title\");\n\n                    while ($gfrow = sqlFetchArray($gfres)) :\n                        // $jobj = json_decode($gfrow['notes'], true);\n                        $LBF_ACO = empty($gfrow['grp_aco_spec']) ? false : explode('|', $gfrow['grp_aco_spec']);\n                        if ($LBF_ACO && !AclMain::aclCheckCore($LBF_ACO[0], $LBF_ACO[1])) {\n                            continue;\n                        }\n\n                        // vitals expand collapse widget\n                        $widgetAuth = false;\n                        if (!$LBF_ACO || AclMain::aclCheckCore($LBF_ACO[0], $LBF_ACO[1], '', 'write')) {\n                            // check to see if any instances exist for this patient\n                            $existVitals = sqlQuery(\"SELECT * FROM forms WHERE pid = ? AND formdir = ? AND deleted = 0\", [$pid, $vitals_form_id]);\n                            $widgetAuth = $existVitals;\n                        }\n\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent($gfrow['title']));\n                        $viewArgs = [\n                            'title' => xl($gfrow['title']),\n                            'id' => $vitals_form_id,\n                            'initiallyCollapsed' => getUserSetting($vitals_form_id) == true ? true : false,\n                            'btnLabel' => 'Trend',\n                            'btnLink' => \"../encounter/trend_form.php?formname=vitals\",\n                            'linkMethod' => 'html',\n                            'bodyClass' => 'notab collapse show',\n                            'auth' => $widgetAuth,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    endwhile; // end while\n                    ?>\n                </div> <!-- end left column div -->\n                <div class=\"col-md-4\">\n                    <!-- start right column div -->\n                    <?php\n                    if ($GLOBALS['portal_onsite_two_enable']) :\n                        $portalCard = new PortalCard($GLOBALS);\n                    endif;\n\n                    $sectionRenderEvents = $ed->dispatch(SectionEvent::EVENT_HANDLE, new SectionEvent('secondary'));\n                    $sectionCards = $sectionRenderEvents->getCards();\n\n                    $t = $twig->getTwig();\n\n                    foreach ($sectionCards as $card) {\n                        $_auth = $card->getAcl();\n                        $auth = AclMain::aclCheckCore($_auth[0], $_auth[1]);\n                        if (!$auth) {\n                            continue;\n                        }\n\n                        $btnLabel = false;\n                        if ($card->canAdd()) {\n                            $btnLabel = 'Add';\n                        } elseif ($card->canEdit()) {\n                            $btnLabel = 'Edit';\n                        }\n\n                        $viewArgs = [\n                            'card' => $card,\n                            'title' => $card->getTitle(),\n                            'id' => $card->getIdentifier(),\n                            'auth' => $auth,\n                            'linkMethod' => 'html',\n                            'initiallyCollapsed' => !$card->isInitiallyCollapsed(),\n                            'card_bg_color' => $card->getBackgroundColorClass(),\n                            'card_text_color' => $card->getTextColorClass(),\n                            'forceAlwaysOpen' => !$card->canCollapse(),\n                            'btnLabel' => $btnLabel,\n                            'btnLink' => 'test',\n                        ];\n\n                        echo $t->render($card->getTemplateFile(), array_merge($card->getTemplateVariables(), $viewArgs));\n                    }\n\n                    if ($GLOBALS['erx_enable']) :\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('demographics'));\n                        echo $twig->getTwig()->render('patient/partials/erx.html.twig', [\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ]);\n                    endif;\n\n                    // If there is an ID Card or any Photos show the widget\n                    $photos = pic_array($pid, $GLOBALS['patient_photo_category_name']);\n                    if ($photos or $idcard_doc_id) {\n                        $id = \"photos_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('patient_photo'));\n                        $viewArgs = [\n                            'title' => xl(\"ID Card / Photos\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => 'Edit',\n                            'linkMethod' => \"javascript\",\n                            'bodyClass' => 'collapse show',\n                            'auth' => false,\n                            'patientIDCategoryID' => $GLOBALS['patient_id_category_name'],\n                            'patientPhotoCategoryName' => $GLOBALS['patient_photo_category_name'],\n                            'photos' => $photos,\n                            'idCardDocID' => $idcard_doc_id,\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/photo.html.twig', $viewArgs);\n                    }\n\n                    // Advance Directives\n                    if ($GLOBALS['advance_directives_warning']) {\n                        // advance directives expand collapse widget\n\n                        $counterFlag = false; //flag to record whether any categories contain ad records\n                        $query = \"SELECT id FROM categories WHERE name='Advance Directive'\";\n                        $myrow2 = sqlQuery($query);\n                        $advDirArr = [];\n                        if ($myrow2) {\n                            $parentId = $myrow2['id'];\n                            $query = \"SELECT id, name FROM categories WHERE parent=?\";\n                            $resNew1 = sqlStatement($query, array($parentId));\n                            while ($myrows3 = sqlFetchArray($resNew1)) {\n                                $categoryId = $myrows3['id'];\n                                $nameDoc = $myrows3['name'];\n                                $query = \"SELECT documents.date, documents.id\n                                    FROM documents\n                                    INNER JOIN categories_to_documents ON categories_to_documents.document_id=documents.id\n                                    WHERE categories_to_documents.category_id=?\n                                    AND documents.foreign_id=?\n                                    AND documents.deleted = 0\n                                    ORDER BY documents.date DESC\";\n                                $resNew2 = sqlStatement($query, array($categoryId, $pid));\n                                $limitCounter = 0; // limit to one entry per category\n                                while (($myrows4 = sqlFetchArray($resNew2)) && ($limitCounter == 0)) {\n                                    $dateTimeDoc = $myrows4['date'];\n                                    // remove time from datetime stamp\n                                    $tempParse = explode(\" \", $dateTimeDoc);\n                                    $dateDoc = $tempParse[0];\n                                    $idDoc = $myrows4['id'];\n                                    $tmp = [\n                                        'pid' => $pid,\n                                        'docID' => $idDoc,\n                                        'docName' => $nameDoc,\n                                        'docDate' => $dateDoc,\n                                    ];\n                                    $advDirArr[] = $tmp;\n                                    $limitCounter = $limitCounter + 1;\n                                    $counterFlag = true;\n                                }\n                            }\n\n                            $id = \"adv_directives_ps_expand\";\n\n                            $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('advance_directive'));\n                            $viewArgs = [\n                                'title' => xl(\"Advance Directives\"),\n                                'id' => $id,\n                                'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                                'btnLabel' => 'Edit',\n                                'linkMethod' => \"javascript\",\n                                'btnLink' => \"return advdirconfigure();\",\n                                'bodyClass' => 'collapse show',\n                                'auth' => true,\n                                'advDirArr' => $advDirArr,\n                                'counterFlag' => $counterFlag,\n                                'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                                'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                            ];\n                            echo $twig->getTwig()->render('patient/card/adv_dir.html.twig', $viewArgs);\n                        }\n                    }  // close advanced dir block\n\n                    // Show Clinical Reminders for any user that has rules that are permitted.\n                    $clin_rem_check = resolve_rules_sql('', '0', true, '', $_SESSION['authUser']);\n                    $cdr = $GLOBALS['enable_cdr'];\n                    $cdr_crw = $GLOBALS['enable_cdr_crw'];\n                    if (!empty($clin_rem_check) && $cdr && $cdr_crw && AclMain::aclCheckCore('patients', 'alert')) {\n                        // clinical summary expand collapse widget\n                        $id = \"clinical_reminders_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('clinical_reminders'));\n                        $viewArgs = [\n                            'title' => xl(\"Clinical Reminders\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLabel' => \"Edit\",\n                            'btnLink' => \"../reminder/clinical_reminders.php?patient_id=\" . attr_url($pid),\n                            'linkMethod' => \"html\",\n                            'auth' => AclMain::aclCheckCore('patients', 'alert', '', 'write'),\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ];\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', $viewArgs);\n                    } // end if crw\n\n                    $displayAppts = false;\n                    $displayRecurrAppts = false;\n                    $displayPastAppts = false;\n\n                    // Show current and upcoming appointments.\n                    // Recurring appointment support and Appointment Display Sets\n                    // added to Appointments by Ian Jardine ( epsdky ).\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayAppts = true;\n                        $current_date2 = date('Y-m-d');\n                        $events = array();\n                        $apptNum = (int) $GLOBALS['number_of_appts_to_show'];\n                        $apptNum2 = ($apptNum != 0) ? abs($apptNum) : 10;\n\n                        $mode1 = !$GLOBALS['appt_display_sets_option'];\n                        $colorSet1 = $GLOBALS['appt_display_sets_color_1'];\n                        $colorSet2 = $GLOBALS['appt_display_sets_color_2'];\n                        $colorSet3 = $GLOBALS['appt_display_sets_color_3'];\n                        $colorSet4 = $GLOBALS['appt_display_sets_color_4'];\n                        $extraAppts = ($mode1) ? 1 : 6;\n                        $extraApptDate = '';\n\n                        $past_appts = [];\n                        $recallArr = [];\n\n                        $events = fetchNextXAppts($current_date2, $pid, $apptNum2 + $extraAppts, true);\n\n                        if ($events) {\n                            $selectNum = 0;\n                            $apptNumber = count($events);\n                            //\n                            if ($apptNumber <= $apptNum2) {\n                                $extraApptDate = '';\n                                //\n                            } elseif ($mode1 && $apptNumber == $apptNum2 + 1) {\n                                $extraApptDate = $events[$apptNumber - 1]['pc_eventDate'];\n                                array_pop($events);\n                                --$apptNumber;\n                                $selectNum = 1;\n                                //\n                            } elseif ($apptNumber == $apptNum2 + 6) {\n                                $extraApptDate = $events[$apptNumber - 1]['pc_eventDate'];\n                                array_pop($events);\n                                --$apptNumber;\n                                $selectNum = 2;\n                                //\n                            } else { // mode 2 - $apptNum2 < $apptNumber < $apptNum2 + 6\n                                $extraApptDate = '';\n                                $selectNum = 2;\n                                //\n                            }\n\n                            $limitApptIndx = $apptNum2 - 1;\n                            $limitApptDate = $events[$limitApptIndx]['pc_eventDate'] ?? '';\n\n                            switch ($selectNum) {\n                                case 2:\n                                    $lastApptIndx = $apptNumber - 1;\n                                    $thisNumber = $lastApptIndx - $limitApptIndx;\n                                    for ($i = 1; $i <= $thisNumber; ++$i) {\n                                        if ($events[$limitApptIndx + $i]['pc_eventDate'] != $limitApptDate) {\n                                            $extraApptDate = $events[$limitApptIndx + $i]['pc_eventDate'];\n                                            $events = array_slice($events, 0, $limitApptIndx + $i);\n                                            break;\n                                        }\n                                    }\n                                    // Break in the loop to improve performance\n                                case 1:\n                                    $firstApptIndx = 0;\n                                    for ($i = 1; $i <= $limitApptIndx; ++$i) {\n                                        if ($events[$limitApptIndx - $i]['pc_eventDate'] != $limitApptDate) {\n                                            $firstApptIndx = $apptNum2 - $i;\n                                            break;\n                                        }\n                                    }\n                                    // Break in the loop to improve performance\n                            }\n\n                            if ($extraApptDate) {\n                                if ($extraApptDate != $limitApptDate) {\n                                    $apptStyle2 = \" style='background-color:\" . attr($colorSet3) . \";'\";\n                                } else {\n                                    $apptStyle2 = \" style='background-color:\" . attr($colorSet4) . \";'\";\n                                }\n                            }\n                        }\n\n                        $count = 0;\n                        $toggleSet = true;\n                        $priorDate = \"\";\n                        $therapyGroupCategories = array();\n                        $query = sqlStatement(\"SELECT pc_catid FROM openemr_postcalendar_categories WHERE pc_cattype = 3 AND pc_active = 1\");\n                        while ($result = sqlFetchArray($query)) {\n                            $therapyGroupCategories[] = $result['pc_catid'];\n                        }\n\n                        // Build the UI Loop\n                        $appts = [];\n                        foreach ($events as $row) {\n                            $count++;\n                            $dayname = date(\"D\", strtotime($row['pc_eventDate']));\n                            $displayMeridiem = ($GLOBALS['time_display_format'] == 0) ? \"\" : \"am\";\n                            $disphour = substr($row['pc_startTime'], 0, 2) + 0;\n                            $dispmin = substr($row['pc_startTime'], 3, 2);\n                            if ($disphour >= 12 && $GLOBALS['time_display_format'] == 1) {\n                                $displayMeridiem = \"pm\";\n                                if ($disphour > 12) {\n                                    $disphour -= 12;\n                                }\n                            }\n\n                            // Note the translaution occurs here instead of in teh Twig file for some specific concatenation needs\n                            $etitle = xl('(Click to edit)');\n                            if ($row['pc_hometext'] != \"\") {\n                                $etitle = xl('Comments') . \": \" . ($row['pc_hometext']) . \"\\r\\n\" . $etitle;\n                            }\n\n                            if ($extraApptDate && $count > $firstApptIndx) {\n                                $apptStyle = $apptStyle2;\n                            } else {\n                                if ($row['pc_eventDate'] != $priorDate) {\n                                    $priorDate = $row['pc_eventDate'];\n                                    $toggleSet = !$toggleSet;\n                                }\n\n                                $bgColor = ($toggleSet) ? $colorSet2 : $colorSet1;\n                            }\n\n                            $row['pc_eventTime'] = sprintf(\"%02d\", $disphour) . \":{$dispmin}\";\n                            $row['pc_status'] = generate_display_field(array('data_type' => '1', 'list_id' => 'apptstat'), $row['pc_apptstatus']);\n\n                            if (in_array($row['pc_catid'], $therapyGroupCategories)) {\n                                $row['groupName'] = getGroup($row['pc_gid'])['group_name'];\n                            }\n\n                            $row['uname'] = text($row['ufname'] . \" \" . $row['ulname']);\n                            $row['bgColor'] = $bgColor;\n                            $row['dayName'] = $dayname;\n                            $row['displayMeridiem'] = $displayMeridiem;\n                            $row['jsEvent'] = attr_js(preg_replace(\"/-/\", \"\", $row['pc_eventDate'])) . ', ' . attr_js($row['pc_eid']);\n                            $appts[] = $row;\n                        }\n\n                        if ($resNotNull) {\n                            // Show Recall if one exists\n                            $query = sqlStatement(\"SELECT * FROM medex_recalls WHERE r_pid = ?\", [$pid]);\n                            $recallArr = [];\n                            while ($result2 = sqlFetchArray($query)) {\n                                //tabYourIt('recall', 'main/messages/messages.php?go=' + choice);\n                                //parent.left_nav.loadFrame('1', tabNAME, url);\n                                $recallArr[] = [\n                                    'date' => $result2['r_eventDate'],\n                                    'reason' => $result2['r_reason'],\n                                ];\n                                $count2++;\n                            }\n                            $id = \"recall_ps_expand\";\n                            $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('recall'));\n                            echo $twig->getTwig()->render('patient/card/recall.html.twig', [\n                                'title' => xl('Recall'),\n                                'id' => $id,\n                                'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                                'recalls' => $recallArr,\n                                'recallsAvailable' => ($count < 1 && empty($count2)) ? false : true,\n                                'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                                'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                            ]);\n                        }\n                    } // End of Appointments Widget.\n\n                    /* Widget that shows recurrences for appointments. */\n                    $recurr = [];\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && $GLOBALS['appt_recurrences_widget'] && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayRecurrAppts = true;\n                        $count = 0;\n                        $toggleSet = true;\n                        $priorDate = \"\";\n\n                        //Fetch patient's recurrences. Function returns array with recurrence appointments' category, recurrence pattern (interpreted), and end date.\n                        $recurrences = fetchRecurrences($pid);\n                        if (!empty($recurrences)) {\n                            foreach ($recurrences as $row) {\n                                if (!recurrence_is_current($row['pc_endDate'])) {\n                                    continue;\n                                }\n\n                                if (ends_in_a_week($row['pc_endDate'])) {\n                                    $row['close_to_end'] = true;\n                                }\n                                $recurr[] = $row;\n                            }\n                        }\n                    }\n                    /* End of recurrence widget */\n\n                    // Show PAST appointments.\n                    // added by Terry Hill to allow reverse sorting of the appointments\n                    $direction = \"ASC\";\n                    if ($GLOBALS['num_past_appointments_to_show'] < 0) {\n                        $direction = \"DESC\";\n                        ($showpast = -1 * $GLOBALS['num_past_appointments_to_show']);\n                    } else {\n                        $showpast = $GLOBALS['num_past_appointments_to_show'];\n                    }\n\n                    if (isset($pid) && !$GLOBALS['disable_calendar'] && $showpast > 0 && AclMain::aclCheckCore('patients', 'appt')) {\n                        $displayPastAppts = true;\n                        $query = \"SELECT e.pc_eid, e.pc_aid, e.pc_title, e.pc_eventDate, e.pc_startTime, e.pc_hometext, u.fname, u.lname, u.mname, c.pc_catname, e.pc_apptstatus\n                            FROM openemr_postcalendar_events AS e,\n                                users AS u,\n                                openemr_postcalendar_categories AS c\n                            WHERE e.pc_pid = ?\n                                AND e.pc_eventDate < CURRENT_DATE\n                                AND u.id = e.pc_aid\n                                AND e.pc_catid = c.pc_catid\n                            ORDER BY e.pc_eventDate \" . escape_sort_order($direction) . \" , e.pc_startTime DESC LIMIT \" . escape_limit($showpast);\n\n                        $pres = sqlStatement($query, array($pid));\n\n                        $count = 0;\n\n                        while ($row = sqlFetchArray($pres)) {\n                            $count++;\n                            $dayname = date(\"D\", strtotime($row['pc_eventDate']));\n                            $displayMeridiem = \"am\";\n                            $disphour = substr($row['pc_startTime'], 0, 2) + 0;\n                            $dispmin = substr($row['pc_startTime'], 3, 2);\n                            if ($disphour >= 12) {\n                                $displayMeridiem = \"pm\";\n                                if ($disphour > 12 && $GLOBALS['time_display_format'] == 1) {\n                                    $disphour -= 12;\n                                }\n                            }\n\n                            $petitle = xl('(Click to edit)');\n                            if ($row['pc_hometext'] != \"\") {\n                                $petitle = xl('Comments') . \": \" . ($row['pc_hometext']) . \"\\r\\n\" . $petitle;\n                            }\n\n                            $row['pc_status'] = generate_display_field(array('data_type' => '1', 'list_id' => 'apptstat'), $row['pc_apptstatus']);\n                            $row['dayName'] = $dayname;\n                            $row['pc_eventTime'] = sprintf(\"%02d\", $disphour) . \":{$dispmin}\";\n                            $row['uname'] = text($row['fname'] . \" \" . $row['lname']);\n                            $row['jsEvent'] = attr_js(preg_replace(\"/-/\", \"\", $row['pc_eventDate'])) . ', ' . attr_js($row['pc_eid']);\n                            $past_appts[] = $row;\n                        }\n                    }\n                    // END of past appointments\n\n                    // Display the Appt card\n                    $id = \"appointments_ps_expand\";\n                    $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('appointment'));\n                    echo $twig->getTwig()->render('patient/card/appointments.html.twig', [\n                        'title' => xl(\"Appointments\"),\n                        'id' => $id,\n                        'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                        'btnLabel' => \"Add\",\n                        'btnLink' => \"return newEvt()\",\n                        'linkMethod' => \"javascript\",\n                        'appts' => $appts,\n                        'recurrAppts' => $recurr,\n                        'pastAppts' => $past_appts,\n                        'displayAppts' => $displayAppts,\n                        'displayRecurrAppts' => $displayRecurrAppts,\n                        'displayPastAppts' => $displayPastAppts,\n                        'extraApptDate' => $extraApptDate,\n                        'therapyGroupCategories' => $therapyGroupCategories,\n                        'auth' => $resNotNull && (AclMain::aclCheckCore('patients', 'appt', '', 'write') || AclMain::aclCheckCore('patients', 'appt', '', 'addonly')),\n                        'resNotNull' => $resNotNull,\n                        'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                        'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                    ]);\n\n                    echo \"<div id=\\\"stats_div\\\"></div>\";\n\n                    // TRACK ANYTHING\n                    // Determine if track_anything form is in use for this site.\n                    $tmp = sqlQuery(\"SELECT count(*) AS count FROM registry WHERE directory = 'track_anything' AND state = 1\");\n                    $track_is_registered = $tmp['count'];\n                    if ($track_is_registered) {\n                        $spruch = \"SELECT id FROM forms WHERE pid = ? AND formdir = ?\";\n                        $existTracks = sqlQuery($spruch, array($pid, \"track_anything\"));\n                        $id = \"track_anything_ps_expand\";\n                        $dispatchResult = $ed->dispatch(CardRenderEvent::EVENT_HANDLE, new CardRenderEvent('track_anything'));\n                        echo $twig->getTwig()->render('patient/card/loader.html.twig', [\n                            'title' => xl(\"Tracks\"),\n                            'id' => $id,\n                            'initiallyCollapsed' => (getUserSetting($id) == 0) ? false : true,\n                            'btnLink' => \"../../forms/track_anything/create.php\",\n                            'linkMethod' => \"html\",\n                            'prependedInjection' => $dispatchResult->getPrependedInjection(),\n                            'appendedInjection' => $dispatchResult->getAppendedInjection(),\n                        ]);\n                    }  // end track_anything\n\n                    if ($thisauth) :\n                        echo $twig->getTwig()->render('patient/partials/delete.html.twig', [\n                            'isAdmin' => AclMain::aclCheckCore('admin', 'super'),\n                            'allowPatientDelete' => $GLOBALS['allow_pat_delete'],\n                            'csrf' => CsrfUtils::collectCsrfToken(),\n                            'pid' => $pid\n                        ]);\n                    endif;\n                    ?>\n                </div> <!-- end right column div -->\n                </div> <!-- end div.main > row:first  -->\n            </div> <!-- end main content div -->\n        </div><!-- end container div -->\n        <?php $oemr_ui->oeBelowContainerDiv(); ?>\n        <script>\n            // Array of skip conditions for the checkSkipConditions() function.\n            var skipArray = [\n                <?php echo ($condition_str ?? ''); ?>\n            ];\n            checkSkipConditions();\n\n            var isPost = <?php echo js_escape($showEligibility ?? false); ?>;\n            var listId = '#' + <?php echo js_escape($list_id); ?>;\n            $(function() {\n                $(listId).addClass(\"active\");\n                if (isPost === true) {\n                    $(\"#eligibility\").click();\n                    $(\"#eligibility\").get(0).scrollIntoView();\n                }\n            });\n        </script>\n</body>\n\n</html>\n", "<?php\n\n/**\n * List Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Core\\Header;\n\n//ensure user has proper access\nif (!AclMain::aclCheckCore('patients', 'amendment')) {\n    echo (new TwigContainer(null, $GLOBALS['kernel']))->getTwig()->render('core/unauthorized.html.twig', ['pageTitle' => xl(\"Amendment List\")]);\n    exit;\n}\n?>\n\n<html>\n<head>\n\n<?php Header::setupHeader();\necho \"<title>\" . xlt('Amendment List') . \"</title>\";\n?>\n\n<script>\n    function checkForAmendments() {\n        var amendments = \"\";\n        $(\"#list_amendments input:checkbox:checked\").each(function() {\n                amendments += $(this).val() + \",\";\n        });\n\n        if ( amendments == '' ) {\n            alert(<?php echo xlj('Select amendments to print'); ?>);\n            return;\n        }\n\n        // Call the function to print\n        var url = \"print_amendments.php?ids=\" + encodeURIComponent(amendments);\n        window.open(url);\n    }\n\n    function checkUncheck(option) {\n        $(\"input[name='check_list[]']\").each( function () {\n            var optionFlag = ( option ) ? true : false;\n            $(this).prop('checked',optionFlag);\n        });\n    }\n    var AddAmendment = function () {\n        window.location.href = \"<?php echo $GLOBALS['webroot']?>/interface/patient_file/summary/add_edit_amendments.php\"\n    };\n    var ListAmendments = function () {\n        window.location.href = \"<?php echo $GLOBALS['webroot']?>/interface/patient_file/summary/list_amendments.php\"\n    };\n</script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h2><?php echo xlt('List'); ?></h2>\n            </div>\n            <div class=\"col-12\">\n                <form action=\"list_amendments.php\" name=\"list_amendments\" id=\"list_amendments\" method=\"post\" onsubmit='return top.restoreSession()'>\n                <?php\n                $query = \"SELECT * FROM amendments WHERE pid = ? ORDER BY amendment_date DESC\";\n                $resultSet = sqlStatement($query, array($pid));\n                if (sqlNumRows($resultSet)) { ?>\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <tr>\n                                <td>\n                                    <a href=\"javascript:AddAmendment();\" class=\"btn btn-primary btn-add\"><?php echo xlt(\"Add\"); ?></a>\n                                    <a href=\"javascript:checkForAmendments();\" class=\"btn btn-primary btn-print\"><?php echo xlt(\"Print Amendments\"); ?></a>\n                                    <a href=\"javascript:ListAmendments();\" class=\"btn btn-primary\"><?php echo xlt(\"List\"); ?></a>\n                                    <a href=\"demographics.php\" class=\"btn btn-secondary\"><?php echo xlt(\"Return Dashboard\"); ?></a>\n                                </td>\n                                <td class=\"text-right\">\n                                    <a href=\"#\" class=\"small\" onClick=\"checkUncheck(1);\"><?php echo xlt('Check All');?></a> |\n                                    <a href=\"#\" class=\"small\" onClick=\"checkUncheck(0);\"><?php echo xlt('Clear All');?></a>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div id=\"patient_stats\" class=\"table-responsive\">\n                        <br />\n                        <table class=\"table table-borderless mb-3\">\n                            <thead class=\"table-primary\">\n                                <tr>\n                                    <th></th>\n                                    <th><?php echo xlt('Requested Date'); ?></th>\n                                    <th><?php echo xlt('Request Description'); ?></th>\n                                    <th><?php echo xlt('Requested By'); ?></th>\n                                    <th><?php echo xlt('Request Status'); ?></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            <?php while ($row = sqlFetchArray($resultSet)) {\n                                $amendmentLink = \"<a href='add_edit_amendments.php?id=\" . attr_url($row['amendment_id']) . \"'>\" . text(oeFormatShortDate($row['amendment_date'])) . \"</a>\";\n                                ?>\n                                <tr class=\"amendmentrow\" id=\"<?php echo attr($row['amendment_id']); ?>\">\n                                    <td><input id=\"check_list[]\" name=\"check_list[]\" type=\"checkbox\" value=\"<?php echo attr($row['amendment_id']); ?>\"></td>\n                                    <td><?php echo $amendmentLink; ?> </td>\n                                    <td><?php echo text($row['amendment_desc']); ?> </td>\n                                    <td><?php echo generate_display_field(array('data_type' => '1','list_id' => 'amendment_from'), $row['amendment_by']); ?> </td>\n                                    <td><?php echo generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $row['amendment_status']); ?> </td>\n                                </tr>\n                            <?php } ?>\n                            </tbody>\n                        </table>\n                    </div>\n                <?php } else { ?>\n                    <div class=\"btn-group\">\n                        <a href=\"javascript:AddAmendment();\" class=\"btn btn-primary btn-add\"><?php echo xlt(\"Add\"); ?></a>\n                        <a href=\"javascript:ListAmendments();\" class=\"btn btn-primary\"><?php echo xlt(\"List\"); ?></a>\n                    </div>\n                    <p class=\"text-danger\">\n                        <?php echo xlt(\"No amendment requests available\"); ?>\n                    </p>\n                <?php } ?>\n                </form>\n            </div>\n        </div>\n    </div>\n</body>\n\n</html>\n", "<?php\n\n/**\n * Print Amendments\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Hema Bandaru <hemab@drcloudemr.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2014 Ensoftek\n * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../../globals.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Common\\Acl\\AclMain;\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Core\\Header;\n\n//ensure user has proper access\nif (!AclMain::aclCheckCore('patients', 'amendment')) {\n    echo (new TwigContainer(null, $GLOBALS['kernel']))->getTwig()->render('core/unauthorized.html.twig', ['pageTitle' => xl(\"Amendment Print\")]);\n    exit;\n}\n\n$amendments = $_REQUEST[\"ids\"];\n$amendments = rtrim($amendments, \",\");\n$amendmentsList = explode(\",\", $amendments);\n\n$patientDetails = getPatientData($pid, \"fname,lname\");\n$patientName = $patientDetails['lname'] . \", \" . $patientDetails['fname'];\n\nfunction printAmendment($amendmentID, $lastAmendment)\n{\n    $query = \"SELECT lo.title AS 'amendmentFrom', lo1.title AS 'amendmentStatus',a.* FROM amendments a\n\t\tLEFT JOIN list_options lo ON a.amendment_by = lo.option_id AND lo.list_id = 'amendment_from' AND lo.activity = 1\n\t\tLEFT JOIN list_options lo1 ON a.amendment_status = lo1.option_id AND lo1.list_id = 'amendment_status' AND lo1.activity = 1\n\t\tWHERE a.amendment_id = ?\";\n    $resultSet = sqlQuery($query, array($amendmentID));\n    echo \"<table>\";\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Requested Date\") . \":\"  . \"</td>\";\n    echo \"<td>\" . text(oeFormatShortDate($resultSet['amendment_date'])) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Requested By\") . \":\"  . \"</td>\";\n    echo \"<td>\" . generate_display_field(array('data_type' => '1','list_id' => 'amendment_from'), $resultSet['amendment_by']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Request Status\") . \":\"  . \"</td>\";\n    echo \"<td>\" . generate_display_field(array('data_type' => '1','list_id' => 'amendment_status'), $resultSet['amendment_status']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr class=text>\";\n    echo \"<td class=bold>\" . xlt(\"Request Description\") . \":\"  . \"</td>\";\n    echo \"<td>\" . text($resultSet['amendment_desc']) . \"</td>\";\n    echo \"</tr>\";\n\n    echo \"</table>\";\n\n    echo \"<hr>\";\n    echo \"<span class='bold'>\" . xlt(\"History\") . \"</span><br />\";\n    $pageBreak = ( $lastAmendment ) ? \"\" : \"page-break-after:always\";\n    echo \"<table border='1' cellspacing=0 cellpadding=3 style='width:75%;margin-top:10px;margin-bottom:20px;\" . $pageBreak . \"'>\";\n    echo \"<tr class='text bold'>\";\n    echo \"<th align=left style='width:10%'>\" . xlt(\"Date\") . \"</th>\";\n    echo \"<th align=left style='width:20%'>\" . xlt(\"By\") . \"</th>\";\n    echo \"<th align=left >\" . xlt(\"Comments\") . \"</th>\";\n    echo \"</tr>\";\n\n    $query = \"SELECT u.fname,u.lname,ah.* FROM amendments_history ah INNER JOIN users u ON ah.created_by = u.id WHERE ah.amendment_id = ?\";\n    $resultSet = sqlStatement($query, array($amendmentID));\n    while ($row = sqlFetchArray($resultSet)) {\n        echo \"<tr class=text>\";\n        $created_date = date('Y-m-d', strtotime($row['created_time']));\n        echo \"<td>\" . text(oeFormatShortDate($created_date)) . \"</td>\";\n        echo \"<td>\" . text($row['lname']) . \", \" . text($row['fname']) . \"</td>\";\n        echo \"<td>\" . text($row['amendment_note']) . \"</td>\";\n        echo \"</tr>\";\n    }\n\n    echo \"</table>\";\n}\n\n?>\n<html>\n<head>\n    <?php Header::setupHeader(); ?>\n</head>\n\n<body class=\"body_top\">\n    <span class='title'><?php echo xlt(\"Amendments for\") . \" \" . text($patientName); ?></span>\n    <p></p>\n\n    <?php\n    for ($i = 0; $i < count($amendmentsList); $i++) {\n        $lastAmendment = ( $i == count($amendmentsList) - 1 ) ? true : false;\n        printAmendment($amendmentsList[$i], $lastAmendment);\n    }\n    ?>\n\n<script>\n    opener.top.printLogPrint(window);\n</script>\n\n</body>\n\n</html>\n"], "filenames": ["interface/patient_file/summary/add_edit_amendments.php", "interface/patient_file/summary/demographics.php", "interface/patient_file/summary/list_amendments.php", "interface/patient_file/summary/print_amendments.php"], "buggy_code_start_loc": [19, 855, 17, 17], "buggy_code_end_loc": [111, 1222, 19, 18], "fixing_code_start_loc": [20, 855, 18, 18], "fixing_code_end_loc": [125, 1222, 27, 27], "type": "CWE-269", "message": "Improper Privilege Management in GitHub repository openemr/openemr prior to 7.0.0.1.", "other": {"cve": {"id": "CVE-2022-2732", "sourceIdentifier": "security@huntr.dev", "published": "2022-08-09T12:15:08.357", "lastModified": "2022-08-12T14:15:50.220", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Privilege Management in GitHub repository openemr/openemr prior to 7.0.0.1."}, {"lang": "es", "value": "Una Administraci\u00f3n inapropiada de Privilegios en el repositorio de GitHub openemr/openemr versiones anteriores a 7.0.0.1"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 8.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.5}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 8.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.5}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-269"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.0.1", "matchCriteriaId": "5BE76D51-2D38-44E8-9ED0-630F49F42168"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/2973592bc7b1f4996738a6fd27d1e277e33676b6", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/8773e0d1-5f1a-4e87-8998-f5ec45f6d533", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/2973592bc7b1f4996738a6fd27d1e277e33676b6"}}