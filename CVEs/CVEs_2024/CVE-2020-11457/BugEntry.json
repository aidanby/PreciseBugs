{"buggy_code": ["<?php\n/*\n * system_usermanager_addprivs.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2013 BSD Perimeter\n * Copyright (c) 2013-2016 Electric Sheep Fencing\n * Copyright (c) 2014-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2006 Daniel S. Haischt.\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-system-usermanager-addprivs\n##|*NAME=System: User Manager: Add Privileges\n##|*DESCR=Allow access to the 'System: User Manager: Add Privileges' page.\n##|*WARN=standard-warning-root\n##|*MATCH=system_usermanager_addprivs.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\n\n$logging_level = LOG_WARNING;\n$logging_prefix = gettext(\"Local User Database\");\n\nif (isset($_REQUEST['userid']) && is_numericint($_REQUEST['userid'])) {\n\t$userid = $_REQUEST['userid'];\n}\n\n$pgtitle = array(gettext(\"System\"), gettext(\"User Manager\"), gettext(\"Users\"), gettext(\"Edit\"), gettext(\"Add Privileges\"));\n$pglinks = array(\"\", \"system_usermanager.php\", \"system_usermanager.php\", \"system_usermanager.php?act=edit&userid=\" . $userid, \"@self\");\n\nif (!isset($config['system']['user'][$userid]) && !is_array($config['system']['user'][$userid])) {\n\tpfSenseHeader(\"system_usermanager.php\");\n\texit;\n}\n\n$a_user = & $config['system']['user'][$userid];\n\nif (!is_array($a_user['priv'])) {\n\t$a_user['priv'] = array();\n}\n\n// Make a local copy and sort it\n$spriv_list = $priv_list;\nuasort($spriv_list, \"compare_by_name\");\n\n/*\n * Check user privileges to test if the user is allowed to make changes.\n * Otherwise users can end up in an inconsistent state where some changes are\n * performed and others denied. See https://redmine.pfsense.org/issues/9259\n */\nphpsession_begin();\n$guiuser = getUserEntry($_SESSION['Username']);\n$read_only = (is_array($guiuser) && userHasPrivilege($guiuser, \"user-config-readonly\"));\nphpsession_end();\n\nif (!empty($_POST) && $read_only) {\n\t$input_errors = array(gettext(\"Insufficient privileges to make the requested change (read only).\"));\n}\n\nif ($_POST['save'] && !$read_only) {\n\tunset($input_errors);\n\t$pconfig = $_POST;\n\n\t/* input validation */\n\t$reqdfields = explode(\" \", \"sysprivs\");\n\t$reqdfieldsn = array(gettext(\"Selected privileges\"));\n\n\tdo_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);\n\n\tif (!$input_errors) {\n\n\t\tif (!is_array($pconfig['sysprivs'])) {\n\t\t\t$pconfig['sysprivs'] = array();\n\t\t}\n\n\t\tif (!count($a_user['priv'])) {\n\t\t\t$a_user['priv'] = $pconfig['sysprivs'];\n\t\t} else {\n\t\t\t$a_user['priv'] = array_merge($a_user['priv'], $pconfig['sysprivs']);\n\t\t}\n\n\t\t$a_user['priv'] = sort_user_privs($a_user['priv']);\n\t\tlocal_user_set($a_user);\n\n\t\t$savemsg = sprintf(gettext(\"Privileges changed for user: %s\"), $a_user['name']);\n\t\twrite_config($savemsg);\n\t\tsyslog($logging_level, \"{$logging_prefix}: {$savemsg}\");\n\n\t\tpost_redirect(\"system_usermanager.php\", array('act' => 'edit', 'userid' => $userid));\n\n\t\texit;\n\t}\n\n}\n\nfunction build_priv_list() {\n\tglobal $spriv_list, $a_user;\n\n\t$list = array();\n\n\tforeach ($spriv_list as $pname => $pdata) {\n\t\tif (in_array($pname, $a_user['priv'])) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$list[$pname] = $pdata['name'];\n\t}\n\n\treturn($list);\n}\n\nfunction get_root_priv_item_text() {\n\tglobal $priv_list;\n\n\t$priv_text = \"\";\n\n\tforeach ($priv_list as $pname => $pdata) {\n\t\tif (isset($pdata['warn']) && ($pdata['warn'] == 'standard-warning-root')) {\n\t\t\t$priv_text .= '<br/>' . $pdata['name'];\n\t\t}\n\t}\n\n\treturn($priv_text);\n}\n\ninclude(\"head.inc\");\n\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\n$tab_array = array();\n$tab_array[] = array(gettext(\"Users\"), true, \"system_usermanager.php\");\n$tab_array[] = array(gettext(\"Groups\"), false, \"system_groupmanager.php\");\n$tab_array[] = array(gettext(\"Settings\"), false, \"system_usermanager_settings.php\");\n$tab_array[] = array(gettext(\"Authentication Servers\"), false, \"system_authservers.php\");\ndisplay_top_tabs($tab_array);\n\n$form = new Form();\n\n$section = new Form_Section('User Privileges');\n\n$name_string = $a_user['name'];\nif (!empty($a_user['descr'])) {\n\t$name_string .= \" ({$a_user['descr']})\";\n}\n\n$section->addInput(new Form_StaticText(\n\t'User',\n\t$name_string\n));\n\n$section->addInput(new Form_Select(\n\t'sysprivs',\n\t'*Assigned privileges',\n\tnull,\n\tbuild_priv_list(),\n\ttrue\n))->addClass('multiselect')\n  ->setHelp('Hold down CTRL (PC)/COMMAND (Mac) key to select multiple items.');\n\n$section->addInput(new Form_Select(\n\t'shadow',\n\t'Shadow',\n\tnull,\n\tbuild_priv_list(),\n\ttrue\n))->addClass('shadowselect')\n  ->setHelp('Hold down CTRL (PC)/COMMAND (Mac) key to select multiple items.');\n\n$section->addInput(new Form_Input(\n\t'filtertxt',\n\t'Filter',\n\t'text',\n\tnull\n))->setHelp('Show only the choices containing this term');\n\n$section->addInput(new Form_StaticText(\n\tgettext('Privilege information'),\n\t'<span class=\"help-block\">'.\n\tgettext('The following privileges effectively give the user administrator-level access ' .\n\t\t' because the user gains access to execute general commands, edit system files, ' .\n\t\t' modify users, change passwords or similar:') .\n\t'<br/>' .\n\tget_root_priv_item_text() .\n\t'<br/><br/>' .\n\tgettext('Please take care when granting these privileges.') .\n\t'</span>'\n));\n\n$btnfilter = new Form_Button(\n\t'btnfilter',\n\t'Filter',\n\tnull,\n\t'fa-filter'\n);\n\n$btnfilter->setAttribute('type','button')->addClass('btn btn-info');\n\n$form->addGlobal($btnfilter);\n\n$btnclear = new Form_Button(\n\t'btnclear',\n\t'Clear',\n\tnull,\n\t'fa-times'\n);\n\n$btnclear->setAttribute('type','button')->addClass('btn btn-warning');\n\n$form->addGlobal($btnclear);\n\nif (isset($userid)) {\n\t$form->addGlobal(new Form_Input(\n\t'userid',\n\tnull,\n\t'hidden',\n\t$userid\n\t));\n}\n\n$form->add($section);\n\nprint($form);\n?>\n\n<div class=\"panel panel-body alert-info col-sm-10 col-sm-offset-2\" id=\"pdesc\"><?=gettext(\"Select a privilege from the list above for a description\")?></div>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n<?php\n\n\n\t// Build a list of privilege descriptions\n\tif (is_array($spriv_list)) {\n\t\t$id = 0;\n\n\t\t$jdescs = \"var descs = new Array();\\n\";\n\t\tforeach ($spriv_list as $pname => $pdata) {\n\t\t\tif (in_array($pname, $a_user['priv'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$desc = preg_replace(\"/pfSense/i\", $g['product_name'], $pdata['descr']);\n\t\t\tif (isset($pdata['warn']) && ($pdata['warn'] == 'standard-warning-root')) {\n\t\t\t\t$desc .= ' ' . gettext('(This privilege effectively gives administrator-level access to the user)');\n\t\t\t}\n\t\t\t$desc = addslashes($desc);\n\t\t\t$jdescs .= \"descs[{$id}] = '{$desc}';\\n\";\n\t\t\t$id++;\n\t\t}\n\n\t\techo $jdescs;\n\t}\n?>\n\n\t$('.shadowselect').parent().parent('div').addClass('hidden');\n\n\t// Set the number of options to display\n\t$('.multiselect').attr(\"size\",\"20\");\n\t$('.shadowselect').attr(\"size\",\"20\");\n\n\t// When the 'sysprivs\" selector is clicked, we display a description\n\t$('.multiselect').click(function() {\n\t\tvar targetoption = $(this).children('option:selected').val();\n\t\tvar idx =  $('.shadowselect option[value=\"' + targetoption + '\"]').index();\n\n\t\t$('#pdesc').html('<span class=\"text-info\">' + descs[idx] + '</span>');\n\n\t\t// and update the shadow list from the real list\n\t\t$(\".multiselect option\").each(function() {\n\t\t\tshadowoption = $('.shadowselect option').filter('[value=' + $(this).val() + ']');\n\n\t\t\tif ($(this).is(':selected')) {\n\t\t\t\tshadowoption.prop(\"selected\", true);\n\t\t\t} else {\n\t\t\t\tshadowoption.prop(\"selected\", false);\n\t\t\t}\n\t\t});\n\t});\n\n\t$('#btnfilter').click(function() {\n\t\tsearchterm = $('#filtertxt').val().toLowerCase();\n\t\tcopyselect(true);\n\n\t\t// Then filter\n\t\t$(\".multiselect > option\").each(function() {\n\t\t\tif (this.text.toLowerCase().indexOf(searchterm) == -1 ) {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t});\n\t});\n\n\t$('#btnclear').click(function() {\n\t\t// Copy all options from shadow to sysprivs\n\t\tcopyselect(true)\n\n\t\t$('#filtertxt').val('');\n\t});\n\n\t$('#filtertxt').keypress(function(e) {\n\t\tif (e.which == 13) {\n\t\t\te.preventDefault();\n\t\t\t$('#btnfilter').trigger('click');\n\t\t}\n\t});\n\n\t// On submit unhide all options (or else they will not submit)\n\t$('form').submit(function() {\n\n\t\t$(\".multiselect > option\").each(function() {\n\t\t\t$(this).show();\n\t\t});\n\n\t\t$('.shadowselect').remove();\n\t});\n\n\tfunction copyselect(selected) {\n\t\t// Copy all options from shadow to sysprivs\n\t\t$('.multiselect').html($('.shadowselect').html());\n\n\t\tif (selected) {\n\t\t\t// Update the shadow list from the real list\n\t\t\t$(\".shadowselect option\").each(function() {\n\t\t\t\tmultioption = $('.multiselect option').filter('[value=' + $(this).val() + ']');\n\t\t\t\tif ($(this).is(':selected')) {\n\t\t\t\t\tmultioption.prop(\"selected\", true);\n\t\t\t\t} else {\n\t\t\t\t\tmultioption.prop(\"selected\", false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t$('.multiselect').mouseup(function () {\n\t\t$('.multiselect').trigger('click');\n\t});\n});\n//]]>\n</script>\n\n<?php include(\"foot.inc\");\n"], "fixing_code": ["<?php\n/*\n * system_usermanager_addprivs.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2013 BSD Perimeter\n * Copyright (c) 2013-2016 Electric Sheep Fencing\n * Copyright (c) 2014-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2006 Daniel S. Haischt.\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-system-usermanager-addprivs\n##|*NAME=System: User Manager: Add Privileges\n##|*DESCR=Allow access to the 'System: User Manager: Add Privileges' page.\n##|*WARN=standard-warning-root\n##|*MATCH=system_usermanager_addprivs.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\n\n$logging_level = LOG_WARNING;\n$logging_prefix = gettext(\"Local User Database\");\n\nif (isset($_REQUEST['userid']) && is_numericint($_REQUEST['userid'])) {\n\t$userid = $_REQUEST['userid'];\n}\n\n$pgtitle = array(gettext(\"System\"), gettext(\"User Manager\"), gettext(\"Users\"), gettext(\"Edit\"), gettext(\"Add Privileges\"));\n$pglinks = array(\"\", \"system_usermanager.php\", \"system_usermanager.php\", \"system_usermanager.php?act=edit&userid=\" . $userid, \"@self\");\n\nif (!isset($config['system']['user'][$userid]) && !is_array($config['system']['user'][$userid])) {\n\tpfSenseHeader(\"system_usermanager.php\");\n\texit;\n}\n\n$a_user = & $config['system']['user'][$userid];\n\nif (!is_array($a_user['priv'])) {\n\t$a_user['priv'] = array();\n}\n\n// Make a local copy and sort it\n$spriv_list = $priv_list;\nuasort($spriv_list, \"compare_by_name\");\n\n/*\n * Check user privileges to test if the user is allowed to make changes.\n * Otherwise users can end up in an inconsistent state where some changes are\n * performed and others denied. See https://redmine.pfsense.org/issues/9259\n */\nphpsession_begin();\n$guiuser = getUserEntry($_SESSION['Username']);\n$read_only = (is_array($guiuser) && userHasPrivilege($guiuser, \"user-config-readonly\"));\nphpsession_end();\n\nif (!empty($_POST) && $read_only) {\n\t$input_errors = array(gettext(\"Insufficient privileges to make the requested change (read only).\"));\n}\n\nif ($_POST['save'] && !$read_only) {\n\tunset($input_errors);\n\t$pconfig = $_POST;\n\n\t/* input validation */\n\t$reqdfields = explode(\" \", \"sysprivs\");\n\t$reqdfieldsn = array(gettext(\"Selected privileges\"));\n\n\tdo_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);\n\n\tif (!$input_errors) {\n\n\t\tif (!is_array($pconfig['sysprivs'])) {\n\t\t\t$pconfig['sysprivs'] = array();\n\t\t}\n\n\t\tif (!count($a_user['priv'])) {\n\t\t\t$a_user['priv'] = $pconfig['sysprivs'];\n\t\t} else {\n\t\t\t$a_user['priv'] = array_merge($a_user['priv'], $pconfig['sysprivs']);\n\t\t}\n\n\t\t$a_user['priv'] = sort_user_privs($a_user['priv']);\n\t\tlocal_user_set($a_user);\n\n\t\t$savemsg = sprintf(gettext(\"Privileges changed for user: %s\"), $a_user['name']);\n\t\twrite_config($savemsg);\n\t\tsyslog($logging_level, \"{$logging_prefix}: {$savemsg}\");\n\n\t\tpost_redirect(\"system_usermanager.php\", array('act' => 'edit', 'userid' => $userid));\n\n\t\texit;\n\t}\n\n}\n\nfunction build_priv_list() {\n\tglobal $spriv_list, $a_user;\n\n\t$list = array();\n\n\tforeach ($spriv_list as $pname => $pdata) {\n\t\tif (in_array($pname, $a_user['priv'])) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$list[$pname] = $pdata['name'];\n\t}\n\n\treturn($list);\n}\n\nfunction get_root_priv_item_text() {\n\tglobal $priv_list;\n\n\t$priv_text = \"\";\n\n\tforeach ($priv_list as $pname => $pdata) {\n\t\tif (isset($pdata['warn']) && ($pdata['warn'] == 'standard-warning-root')) {\n\t\t\t$priv_text .= '<br/>' . $pdata['name'];\n\t\t}\n\t}\n\n\treturn($priv_text);\n}\n\ninclude(\"head.inc\");\n\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\n$tab_array = array();\n$tab_array[] = array(gettext(\"Users\"), true, \"system_usermanager.php\");\n$tab_array[] = array(gettext(\"Groups\"), false, \"system_groupmanager.php\");\n$tab_array[] = array(gettext(\"Settings\"), false, \"system_usermanager_settings.php\");\n$tab_array[] = array(gettext(\"Authentication Servers\"), false, \"system_authservers.php\");\ndisplay_top_tabs($tab_array);\n\n$form = new Form();\n\n$section = new Form_Section('User Privileges');\n\n$name_string = $a_user['name'];\nif (!empty($a_user['descr'])) {\n\t$name_string .= \" (\" . htmlspecialchars($a_user['descr']) . \")\";\n}\n\n$section->addInput(new Form_StaticText(\n\t'User',\n\t$name_string\n));\n\n$section->addInput(new Form_Select(\n\t'sysprivs',\n\t'*Assigned privileges',\n\tnull,\n\tbuild_priv_list(),\n\ttrue\n))->addClass('multiselect')\n  ->setHelp('Hold down CTRL (PC)/COMMAND (Mac) key to select multiple items.');\n\n$section->addInput(new Form_Select(\n\t'shadow',\n\t'Shadow',\n\tnull,\n\tbuild_priv_list(),\n\ttrue\n))->addClass('shadowselect')\n  ->setHelp('Hold down CTRL (PC)/COMMAND (Mac) key to select multiple items.');\n\n$section->addInput(new Form_Input(\n\t'filtertxt',\n\t'Filter',\n\t'text',\n\tnull\n))->setHelp('Show only the choices containing this term');\n\n$section->addInput(new Form_StaticText(\n\tgettext('Privilege information'),\n\t'<span class=\"help-block\">'.\n\tgettext('The following privileges effectively give the user administrator-level access ' .\n\t\t' because the user gains access to execute general commands, edit system files, ' .\n\t\t' modify users, change passwords or similar:') .\n\t'<br/>' .\n\tget_root_priv_item_text() .\n\t'<br/><br/>' .\n\tgettext('Please take care when granting these privileges.') .\n\t'</span>'\n));\n\n$btnfilter = new Form_Button(\n\t'btnfilter',\n\t'Filter',\n\tnull,\n\t'fa-filter'\n);\n\n$btnfilter->setAttribute('type','button')->addClass('btn btn-info');\n\n$form->addGlobal($btnfilter);\n\n$btnclear = new Form_Button(\n\t'btnclear',\n\t'Clear',\n\tnull,\n\t'fa-times'\n);\n\n$btnclear->setAttribute('type','button')->addClass('btn btn-warning');\n\n$form->addGlobal($btnclear);\n\nif (isset($userid)) {\n\t$form->addGlobal(new Form_Input(\n\t'userid',\n\tnull,\n\t'hidden',\n\t$userid\n\t));\n}\n\n$form->add($section);\n\nprint($form);\n?>\n\n<div class=\"panel panel-body alert-info col-sm-10 col-sm-offset-2\" id=\"pdesc\"><?=gettext(\"Select a privilege from the list above for a description\")?></div>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n<?php\n\n\n\t// Build a list of privilege descriptions\n\tif (is_array($spriv_list)) {\n\t\t$id = 0;\n\n\t\t$jdescs = \"var descs = new Array();\\n\";\n\t\tforeach ($spriv_list as $pname => $pdata) {\n\t\t\tif (in_array($pname, $a_user['priv'])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$desc = preg_replace(\"/pfSense/i\", $g['product_name'], $pdata['descr']);\n\t\t\tif (isset($pdata['warn']) && ($pdata['warn'] == 'standard-warning-root')) {\n\t\t\t\t$desc .= ' ' . gettext('(This privilege effectively gives administrator-level access to the user)');\n\t\t\t}\n\t\t\t$desc = addslashes($desc);\n\t\t\t$jdescs .= \"descs[{$id}] = '{$desc}';\\n\";\n\t\t\t$id++;\n\t\t}\n\n\t\techo $jdescs;\n\t}\n?>\n\n\t$('.shadowselect').parent().parent('div').addClass('hidden');\n\n\t// Set the number of options to display\n\t$('.multiselect').attr(\"size\",\"20\");\n\t$('.shadowselect').attr(\"size\",\"20\");\n\n\t// When the 'sysprivs\" selector is clicked, we display a description\n\t$('.multiselect').click(function() {\n\t\tvar targetoption = $(this).children('option:selected').val();\n\t\tvar idx =  $('.shadowselect option[value=\"' + targetoption + '\"]').index();\n\n\t\t$('#pdesc').html('<span class=\"text-info\">' + descs[idx] + '</span>');\n\n\t\t// and update the shadow list from the real list\n\t\t$(\".multiselect option\").each(function() {\n\t\t\tshadowoption = $('.shadowselect option').filter('[value=' + $(this).val() + ']');\n\n\t\t\tif ($(this).is(':selected')) {\n\t\t\t\tshadowoption.prop(\"selected\", true);\n\t\t\t} else {\n\t\t\t\tshadowoption.prop(\"selected\", false);\n\t\t\t}\n\t\t});\n\t});\n\n\t$('#btnfilter').click(function() {\n\t\tsearchterm = $('#filtertxt').val().toLowerCase();\n\t\tcopyselect(true);\n\n\t\t// Then filter\n\t\t$(\".multiselect > option\").each(function() {\n\t\t\tif (this.text.toLowerCase().indexOf(searchterm) == -1 ) {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t});\n\t});\n\n\t$('#btnclear').click(function() {\n\t\t// Copy all options from shadow to sysprivs\n\t\tcopyselect(true)\n\n\t\t$('#filtertxt').val('');\n\t});\n\n\t$('#filtertxt').keypress(function(e) {\n\t\tif (e.which == 13) {\n\t\t\te.preventDefault();\n\t\t\t$('#btnfilter').trigger('click');\n\t\t}\n\t});\n\n\t// On submit unhide all options (or else they will not submit)\n\t$('form').submit(function() {\n\n\t\t$(\".multiselect > option\").each(function() {\n\t\t\t$(this).show();\n\t\t});\n\n\t\t$('.shadowselect').remove();\n\t});\n\n\tfunction copyselect(selected) {\n\t\t// Copy all options from shadow to sysprivs\n\t\t$('.multiselect').html($('.shadowselect').html());\n\n\t\tif (selected) {\n\t\t\t// Update the shadow list from the real list\n\t\t\t$(\".shadowselect option\").each(function() {\n\t\t\t\tmultioption = $('.multiselect option').filter('[value=' + $(this).val() + ']');\n\t\t\t\tif ($(this).is(':selected')) {\n\t\t\t\t\tmultioption.prop(\"selected\", true);\n\t\t\t\t} else {\n\t\t\t\t\tmultioption.prop(\"selected\", false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t$('.multiselect').mouseup(function () {\n\t\t$('.multiselect').trigger('click');\n\t});\n});\n//]]>\n</script>\n\n<?php include(\"foot.inc\");\n"], "filenames": ["src/usr/local/www/system_usermanager_addprivs.php"], "buggy_code_start_loc": [160], "buggy_code_end_loc": [161], "fixing_code_start_loc": [160], "fixing_code_end_loc": [161], "type": "CWE-79", "message": "pfSense before 2.4.5 has stored XSS in system_usermanager_addprivs.php in the WebGUI via the descr parameter (aka full name) of a user.", "other": {"cve": {"id": "CVE-2020-11457", "sourceIdentifier": "cve@mitre.org", "published": "2020-04-01T16:15:27.530", "lastModified": "2020-04-06T21:15:13.437", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "pfSense before 2.4.5 has stored XSS in system_usermanager_addprivs.php in the WebGUI via the descr parameter (aka full name) of a user."}, {"lang": "es", "value": "pfSense versiones anteriores a 2.4.5, presenta una vulnerabilidad de tipo XSS almacenado en el archivo system_usermanager_addprivs.php en la WebGUI por medio del par\u00e1metro descr (tambi\u00e9n se conoce como full name) de un usuario."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.4.5", "matchCriteriaId": "D211001F-1AF6-453C-A997-D45C099B5895"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/157104/pfSense-2.4.4-P3-User-Manager-Cross-Site-Scripting.html", "source": "cve@mitre.org"}, {"url": "https://github.com/pfsense/pfsense/commit/3c1e53dabe966f27c9097a5a923e77f49ae5fffa", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/48300", "source": "cve@mitre.org"}, {"url": "https://www.netgate.com/assets/downloads/advisories/pfSense-SA-20_06.webgui.asc", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/pfsense/pfsense/commit/3c1e53dabe966f27c9097a5a923e77f49ae5fffa"}}