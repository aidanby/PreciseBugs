{"buggy_code": ["<?php\n/**\n * OpenMage\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * @category   Mage\n * @package    Mage_Core\n * @copyright  Copyright (c) 2006-2020 Magento, Inc. (https://www.magento.com)\n * @copyright  Copyright (c) 2019-2022 The OpenMage Contributors (https://www.openmage.org)\n * @license    https://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n/**\n * Filter for removing malicious code from HTML\n *\n * @category   Mage\n * @package    Mage_Core\n * @author     Magento Core Team <core@magentocommerce.com>\n */\nclass Mage_Core_Model_Input_Filter_MaliciousCode implements Zend_Filter_Interface\n{\n    /**\n     * Regular expressions for cutting malicious code\n     *\n     * @var array\n     */\n    protected $_expressions = [\n        //comments, must be first\n        '/(\\/\\*.*\\*\\/)/Us',\n        //tabs\n        '/(\\t)/',\n        //javasript prefix\n        '/(javascript\\s*:)/Usi',\n        //import styles\n        '/(@import)/Usi',\n        //js in the style attribute\n        '/style=[^<]*((expression\\s*?\\([^<]*?\\))|(behavior\\s*:))[^<]*(?=\\>)/Uis',\n        //js attributes\n        '/(ondblclick|onclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onload|onunload|onerror|onanimationstart|onfocus|onloadstart|ontoggle)\\s*=[^>]*(?=\\>)/Uis',\n        //tags\n        '/<\\/?(script|meta|link|frame|iframe|object).*>/Uis',\n        //base64 usage\n        '/src\\s*=[^<]*base64[^<]*(?=\\>)/Uis',\n        //data attribute\n        '/(data(\\\\\\\\x3a|:|%3A)(.+?(?=\")|.+?(?=\\')))/is',\n    ];\n\n    /**\n     * Filter value\n     *\n     * @param string|array $value\n     * @return string|array         Filtered value\n     */\n    public function filter($value)\n    {\n        $result = false;\n        do {\n            $subject = $result ? $result : $value;\n            $result = preg_replace($this->_expressions, '', $subject, -1, $count);\n        } while ($count !== 0);\n\n        return $result;\n    }\n\n    /**\n     * Add expression\n     *\n     * @param string $expression\n     * @return $this\n     */\n    public function addExpression($expression)\n    {\n        if (!in_array($expression, $this->_expressions)) {\n            $this->_expressions[] = $expression;\n        }\n        return $this;\n    }\n\n    /**\n     * Set expressions\n     *\n     * @param array $expressions\n     * @return $this\n     */\n    public function setExpressions(array $expressions)\n    {\n        $this->_expressions = $expressions;\n        return $this;\n    }\n\n    /**\n     * The filter adds safe attributes to the link\n     *\n     * @param string $html\n     * @param bool $removeWrapper flag for remove wrapper tags: Doctype, html, body\n     * @return string\n     * @throws Mage_Core_Exception\n     */\n    public function linkFilter($html, $removeWrapper = true)\n    {\n        if (stristr($html, '<a ') === false) {\n            return $html;\n        }\n\n        $libXmlErrorsState = libxml_use_internal_errors(true);\n        $dom = $this->_initDOMDocument();\n        if (!$dom->loadHTML($html)) {\n            Mage::throwException(Mage::helper('core')->__('HTML filtration has failed.'));\n        }\n\n        $relAttributeDefaultItems = ['noopener', 'noreferrer'];\n        /** @var DOMElement $linkItem */\n        foreach ($dom->getElementsByTagName('a') as $linkItem) {\n            $relAttributeItems = [];\n            $relAttributeCurrentValue = $linkItem->getAttribute('rel');\n            if (!empty($relAttributeCurrentValue)) {\n                $relAttributeItems = explode(' ', $relAttributeCurrentValue);\n            }\n            $relAttributeItems = array_unique(array_merge($relAttributeItems, $relAttributeDefaultItems));\n            $linkItem->setAttribute('rel', implode(' ', $relAttributeItems));\n            $linkItem->setAttribute('target', '_blank');\n        }\n\n        if (!$html = $dom->saveHTML()) {\n            Mage::throwException(Mage::helper('core')->__('HTML filtration has failed.'));\n        }\n\n        if ($removeWrapper) {\n            $html = preg_replace('/<(?:!DOCTYPE|\\/?(?:html|body))[^>]*>\\s*/i', '', $html);\n        }\n\n        libxml_use_internal_errors($libXmlErrorsState);\n\n        return $html;\n    }\n\n    /**\n     * Initialize built-in DOM parser instance\n     *\n     * @return DOMDocument\n     */\n    protected function _initDOMDocument()\n    {\n        $dom = new DOMDocument();\n        $dom->strictErrorChecking = false;\n        $dom->recover = false;\n\n        return $dom;\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * OpenMage\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * @category   Mage\n * @package    Mage_Core\n * @copyright  Copyright (c) 2006-2020 Magento, Inc. (https://www.magento.com)\n * @copyright  Copyright (c) 2019-2022 The OpenMage Contributors (https://www.openmage.org)\n * @license    https://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n/**\n * Filter for removing malicious code from HTML\n *\n * @category   Mage\n * @package    Mage_Core\n * @author     Magento Core Team <core@magentocommerce.com>\n */\nclass Mage_Core_Model_Input_Filter_MaliciousCode implements Zend_Filter_Interface\n{\n    /**\n     * Regular expressions for cutting malicious code\n     *\n     * @var array\n     */\n    protected $_expressions = [\n        //comments, must be first\n        '/(\\/\\*.*\\*\\/)/Us',\n        //tabs\n        '/(\\t)/',\n        //javasript prefix\n        '/(javascript\\s*:)/Usi',\n        //import styles\n        '/(@import)/Usi',\n        //js in the style attribute\n        '/style=[^<]*((expression\\s*?\\([^<]*?\\))|(behavior\\s*:))[^<]*(?=\\>)/Uis',\n        //js attributes\n        '/(ondblclick|onclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onload|onunload|onerror|onanimationstart|onfocus|onloadstart|ontoggle)\\s*=[^>]*(?=\\>)/Uis',\n        //tags\n        '/<\\/?(script|meta|link|frame|iframe|object).*>/Uis',\n        //base64 usage\n        '/src\\s*=[^<]*base64[^<]*(?=\\>)/Uis',\n        //data attribute\n        '/(data(\\\\\\\\x3a|:|%3A)(.+?(?=\")|.+?(?=\\')))/is',\n    ];\n\n    /**\n     * Filter value\n     *\n     * @param string|array $value\n     * @return string|array\n     */\n    public function filter($value)\n    {\n        do {\n            $value = preg_replace($this->_expressions, '', $value, -1, $count);\n        } while ($count !== 0);\n\n        return $value;\n    }\n\n    /**\n     * Add expression\n     *\n     * @param string $expression\n     * @return $this\n     */\n    public function addExpression($expression)\n    {\n        if (!in_array($expression, $this->_expressions)) {\n            $this->_expressions[] = $expression;\n        }\n        return $this;\n    }\n\n    /**\n     * Set expressions\n     *\n     * @param array $expressions\n     * @return $this\n     */\n    public function setExpressions(array $expressions)\n    {\n        $this->_expressions = $expressions;\n        return $this;\n    }\n\n    /**\n     * The filter adds safe attributes to the link\n     *\n     * @param string $html\n     * @param bool $removeWrapper flag for remove wrapper tags: Doctype, html, body\n     * @return string\n     * @throws Mage_Core_Exception\n     */\n    public function linkFilter($html, $removeWrapper = true)\n    {\n        if (stristr($html, '<a ') === false) {\n            return $html;\n        }\n\n        $libXmlErrorsState = libxml_use_internal_errors(true);\n        $dom = $this->_initDOMDocument();\n        if (!$dom->loadHTML($html)) {\n            Mage::throwException(Mage::helper('core')->__('HTML filtration has failed.'));\n        }\n\n        $relAttributeDefaultItems = ['noopener', 'noreferrer'];\n        /** @var DOMElement $linkItem */\n        foreach ($dom->getElementsByTagName('a') as $linkItem) {\n            $relAttributeItems = [];\n            $relAttributeCurrentValue = $linkItem->getAttribute('rel');\n            if (!empty($relAttributeCurrentValue)) {\n                $relAttributeItems = explode(' ', $relAttributeCurrentValue);\n            }\n            $relAttributeItems = array_unique(array_merge($relAttributeItems, $relAttributeDefaultItems));\n            $linkItem->setAttribute('rel', implode(' ', $relAttributeItems));\n            $linkItem->setAttribute('target', '_blank');\n        }\n\n        if (!$html = $dom->saveHTML()) {\n            Mage::throwException(Mage::helper('core')->__('HTML filtration has failed.'));\n        }\n\n        if ($removeWrapper) {\n            $html = preg_replace('/<(?:!DOCTYPE|\\/?(?:html|body))[^>]*>\\s*/i', '', $html);\n        }\n\n        libxml_use_internal_errors($libXmlErrorsState);\n\n        return $html;\n    }\n\n    /**\n     * Initialize built-in DOM parser instance\n     *\n     * @return DOMDocument\n     */\n    protected function _initDOMDocument()\n    {\n        $dom = new DOMDocument();\n        $dom->strictErrorChecking = false;\n        $dom->recover = false;\n\n        return $dom;\n    }\n}\n"], "filenames": ["app/code/core/Mage/Core/Model/Input/Filter/MaliciousCode.php"], "buggy_code_start_loc": [61], "buggy_code_end_loc": [72], "fixing_code_start_loc": [61], "fixing_code_end_loc": [70], "type": "CWE-835", "message": "OpenMage LTS is an e-commerce platform. Versions prior to 19.4.22 and 20.0.19 contain an infinite loop in malicious code filter in certain conditions. Versions 19.4.22 and 20.0.19 have a fix for this issue. There are no known workarounds.", "other": {"cve": {"id": "CVE-2023-23617", "sourceIdentifier": "security-advisories@github.com", "published": "2023-01-28T00:15:09.173", "lastModified": "2023-02-07T19:02:54.100", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "OpenMage LTS is an e-commerce platform. Versions prior to 19.4.22 and 20.0.19 contain an infinite loop in malicious code filter in certain conditions. Versions 19.4.22 and 20.0.19 have a fix for this issue. There are no known workarounds."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-835"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:openmage:magento:*:*:*:*:lts:*:*:*", "versionEndExcluding": "19.4.22", "matchCriteriaId": "B87F8CA0-6C21-4615-A520-39F1E9E737D5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:openmage:magento:*:*:*:*:lts:*:*:*", "versionStartIncluding": "20.0.0", "versionEndExcluding": "20.0.19", "matchCriteriaId": "15B9BC3F-BF81-4DF5-B57B-ECF7059A7991"}]}]}], "references": [{"url": "https://github.com/OpenMage/magento-lts/commit/494027785bdb7db53e60c11ef03c144b61cd3172", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/OpenMage/magento-lts/releases/tag/v19.4.22", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/OpenMage/magento-lts/releases/tag/v20.0.19", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/OpenMage/magento-lts/security/advisories/GHSA-3p73-mm7v-4f6m", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/OpenMage/magento-lts/commit/494027785bdb7db53e60c11ef03c144b61cd3172"}}