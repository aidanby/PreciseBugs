{"buggy_code": ["<?php\n\n/**\n * Shows the page with the FAQ record and - when available - the user comments.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at https://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Lars Tiedemann <larstiedemann@yahoo.de>\n * @copyright 2002-2023 phpMyFAQ Team\n * @license   https://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2002-08-27\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentException;\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Captcha\\Captcha;\nuse phpMyFAQ\\Captcha\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\Comments;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Entity\\CommentType;\nuse phpMyFAQ\\Faq\\FaqPermission;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Glossary;\nuse phpMyFAQ\\Helper\\AttachmentHelper;\nuse phpMyFAQ\\Helper\\FaqHelper as HelperFaq;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Helper\\SearchHelper;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\LinkVerifier;\nuse phpMyFAQ\\Rating;\nuse phpMyFAQ\\Relation;\nuse phpMyFAQ\\Search\\SearchResultSet;\nuse phpMyFAQ\\Services;\nuse phpMyFAQ\\Session\\Token;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Translation;\nuse phpMyFAQ\\User\\CurrentUser;\nuse phpMyFAQ\\Utils;\nuse phpMyFAQ\\Visits;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$glossary = new Glossary($faqConfig);\n$tagging = new Tags($faqConfig);\n$relation = new Relation($faqConfig);\n$rating = new Rating($faqConfig);\n$comment = new Comments($faqConfig);\n$markDown = new ParsedownExtra();\n$faqHelper = new HelperFaq($faqConfig);\n$faqPermission = new FaqPermission($faqConfig);\n$attachmentHelper = new AttachmentHelper();\n\nif (is_null($user)) {\n    $user = new CurrentUser($faqConfig);\n}\n\n$faqSearchResult = new SearchResultSet($user, $faqPermission, $faqConfig);\n\n$captcha = Captcha::getInstance($faqConfig);\n$captcha->setSessionId($sids);\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$currentCategory = $cat;\n\n$faqId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n$solutionId = Filter::filterInput(INPUT_GET, 'solution_id', FILTER_VALIDATE_INT);\n\n// Get all data from the FAQ record\nif (0 === (int)$solutionId) {\n    $faq->getRecord($faqId);\n} else {\n    $faq->getRecordBySolutionId($solutionId);\n}\n\nif (isset($faq->faqRecord['id'])) {\n    $faqId = $faq->faqRecord['id'];\n}\n\ntry {\n    $faqSession->userTracking('article_view', $faqId);\n} catch (Exception) {\n    // @todo handle the exception\n}\n\n$faqVisits = new Visits($faqConfig);\n$faqVisits->logViews((int) $faqId);\n\n$question = $faq->getRecordTitle($faqId);\n$question = Strings::htmlentities($question);\nif ($faqConfig->get('main.enableMarkdownEditor')) {\n    $answer = $markDown->text($faq->faqRecord['content']);\n} else {\n    $answer = $faqHelper->renderMarkupContent($faq->faqRecord['content']);\n}\n\n// Rewrite URL fragments\n$currentUrl = htmlspecialchars(\"//{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}\", ENT_QUOTES, 'UTF-8');\n$answer = $faqHelper->rewriteUrlFragments($answer, $currentUrl);\n\n// Add Glossary entries for answers only\n$answer = $glossary->insertItemsIntoContent($answer);\n\n// Set the path of the current category\n$categoryName = $category->getPath($currentCategory, ' &raquo; ', true);\n\n$highlight = Filter::filterInput(INPUT_GET, 'highlight', FILTER_SANITIZE_SPECIAL_CHARS);\nif (\n    !is_null($highlight) && $highlight != '/' && $highlight != '<' && $highlight != '>' && Strings::strlen(\n        $highlight\n    ) > 3\n) {\n    $highlight = str_replace(\"'\", '\u00b4', (string) $highlight);\n    $highlight = str_replace(['^', '.', '?', '*', '+', '{', '}', '(', ')', '[', ']'], '', $highlight);\n    $highlight = preg_quote($highlight, '/');\n    $searchItems = explode(' ', $highlight);\n\n    foreach ($searchItems as $item) {\n        if (Strings::strlen($item) > 2) {\n            $question = Utils::setHighlightedString($question, $item);\n            $answer = Utils::setHighlightedString($answer, $item);\n        }\n    }\n}\n\n$linkVerifier = new LinkVerifier($faqConfig);\n$linkArray = $linkVerifier->getUrlPool();\nif (isset($linkArray['href'])) {\n    foreach (array_unique($linkArray['href']) as $_url) {\n        $xpos = strpos((string) $_url, 'index.php?action=faq');\n        if (!($xpos === false)) {\n            // Get the FaqHelper link title\n            $matches = [];\n            preg_match('/id=([\\d]+)/ism', (string) $_url, $matches);\n            $_id = $matches[1];\n            $_title = $faq->getRecordTitle($_id);\n            $_link = substr((string) $_url, $xpos + 9);\n            if (!str_contains((string) $_url, '&amp;')) {\n                $_link = str_replace('&', '&amp;', $_link);\n            }\n            $oLink = new Link($faqConfig->getDefaultUrl() . $_link, $faqConfig);\n            $oLink->itemTitle = $oLink->tooltip = $_title;\n            $newFaqPath = $oLink->toString();\n            $answer = str_replace($_url, $newFaqPath, (string) $answer);\n        }\n    }\n}\n\n// List all faq attachments\nif ($faqConfig->get('records.disableAttachments') && 'yes' == $faq->faqRecord['active']) {\n    try {\n        $attList = AttachmentFactory::fetchByRecordId($faqConfig, $faqId);\n        $answer .= $attachmentHelper->renderAttachmentList($attList);\n    } catch (AttachmentException) {\n        // handle exception\n    }\n}\n\n// List all categories for this faq\n$renderedCategoryPath = '';\n$multiCategories = $category->getCategoriesFromFaq($faqId);\nif ((is_countable($multiCategories) ? count($multiCategories) : 0) > 1) {\n    foreach ($multiCategories as $multiCat) {\n        $path = $category->getPath($multiCat['id'], ' &raquo; ', true, 'breadcrumb-related-categories');\n        if ('' === trim($path)) {\n            continue;\n        }\n        $renderedCategoryPath .= $path;\n    }\n}\n\n// Related FAQs\ntry {\n    $faqSearchResult->reviewResultSet(\n        $relation->getAllRelatedByQuestion(\n            Strings::htmlentities($faq->faqRecord['title']),\n            Strings::htmlentities($faq->faqRecord['keywords'])\n        )\n    );\n} catch (Exception) {\n    // handle exception\n}\n\n$searchHelper = new SearchHelper($faqConfig);\n$relatedFaqs = $searchHelper->renderRelatedFaqs($faqSearchResult, $faqId);\n\n// Show link to edit the faq?\n$editThisEntry = '';\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq')) {\n    $editThisEntry = sprintf(\n        '<i aria-hidden=\"true\" class=\"fa fa-pencil\"></i> ' .\n        '<a class=\"text-decoration-none\" href=\"./admin/index.php?action=editentry&id=%d&lang=%s\">%s</a>',\n        $faqId,\n        $lang,\n        Translation::get('ad_entry_edit_1') . ' ' . Translation::get('ad_entry_edit_2')\n    );\n}\n\n// Is the faq expired?\n$expired = (date('YmdHis') > $faq->faqRecord['dateEnd']);\n\n// Number of comments\n$numComments = $comment->getNumberOfComments();\n\n// Does the user have the right to add a comment?\nif (\n    (-1 === $user->getUserId() && !$faqConfig->get('records.allowCommentsForGuests')) ||\n    ($faq->faqRecord['active'] === 'no') || ('n' === $faq->faqRecord['comment']) || $expired\n) {\n    $commentMessage = Translation::get('msgWriteNoComment');\n} else {\n    $commentMessage = sprintf(\n        '%s<a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#pmf-modal-add-comment\">%s</a>',\n        Translation::get('msgYouCan'),\n        Translation::get('msgWriteComment')\n    );\n    $template->parseBlock(\n        'mainPageContent',\n        'enableComments',\n        [\n            'numberOfComments' => sprintf('%d %s', $numComments[$faqId] ?? 0, Translation::get('ad_start_comments')),\n        ]\n    );\n}\n\n$translationUrl = sprintf(\n    str_replace(\n        '%',\n        '%%',\n        Link::getSystemRelativeUri('index.php')\n    ) . 'index.php?%saction=translate&amp;cat=%s&amp;id=%d&amp;srclang=%s',\n    $sids,\n    $currentCategory,\n    $faqId,\n    $lang\n);\n\n$availableLanguages = $faqConfig->getLanguage()->isLanguageAvailable($faq->faqRecord['id']);\n\nif (!empty($availableLanguages) && (is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1) {\n    $template->parseBlock(\n        'mainPageContent',\n        'switchLanguage',\n        [\n            'msgChangeLanguage' => Translation::get('msgLanguageSubmit'),\n        ]\n    );\n}\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'addtranslation') &&\n    !empty($availableLanguages) && (is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1\n) {\n    $template->parseBlock(\n        'mainPageContent',\n        'addTranslation',\n        [\n            'msgTranslate' => Translation::get('msgTranslate'),\n        ]\n    );\n}\n\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq') && !empty($faq->faqRecord['notes'])) {\n    $template->parseBlock(\n        'mainPageContent',\n        'privateNotes',\n        [\n            'notesHeader' => Translation::get('ad_admin_notes'),\n            'notes' => $faq->faqRecord['notes']\n        ]\n    );\n}\n\nif ('-' !== $tagging->getAllLinkTagsById($faqId)) {\n    $template->parseBlock(\n        'mainPageContent',\n        'tagsAvailable',\n        [\n            'renderTagsHeader' => Translation::get('msg_tags'),\n            'renderTags' =>  $tagging->getAllLinkTagsById($faqId),\n        ]\n    );\n}\n\nif ('' !== $renderedCategoryPath) {\n    $template->parseBlock(\n        'mainPageContent',\n        'relatedCategories',\n        [\n            'renderRelatedCategoriesHeader' => Translation::get('msgArticleCategories'),\n            'renderRelatedCategories' => $renderedCategoryPath,\n        ]\n    );\n}\n\nif ('' !== $relatedFaqs) {\n    $template->parseBlock(\n        'mainPageContent',\n        'relatedFaqs',\n        [\n            'renderRelatedArticlesHeader' => Translation::get('msg_related_articles'),\n            'renderRelatedArticles' => $relatedFaqs,\n        ]\n    );\n}\n\n$date = new Date($faqConfig);\n$captchaHelper = CaptchaHelper::getInstance($faqConfig);\n\n// We need some Links from social networks\n$faqServices = new Services($faqConfig);\n$faqServices->setCategoryId($cat);\n$faqServices->setFaqId($id);\n$faqServices->setLanguage($lang);\n$faqServices->setQuestion($faq->getRecordTitle($id));\n\n// Check if category ID and FAQ ID are linked together\nif (!$category->categoryHasLinkToFaq($faqId, $currentCategory)) {\n    $http->setStatus(404);\n}\n\n// Check if author name should be visible according to GDPR option\nif ($user->getUserVisibilityByEmail($faq->faqRecord['email'])) {\n    $author = $faq->faqRecord['author'];\n} else {\n    $author = 'n/a';\n}\n\n$template->parse(\n    'mainPageContent',\n    [\n        'baseHref' => $faqSystem->getSystemUri($faqConfig),\n        'solutionId' => $faq->faqRecord['solution_id'],\n        'solutionIdLink' => Link::getSystemRelativeUri() . '?solution_id=' . $faq->faqRecord['solution_id'],\n        'question' => $question,\n        'answer' => $answer,\n        'faqDate' => $date->format($faq->faqRecord['date']),\n        'faqAuthor' => Strings::htmlentities($author),\n        'editThisEntry' => $editThisEntry,\n        'msgPdf' => Translation::get('msgPDF'),\n        'msgPrintFaq' => Translation::get('msgPrintArticle'),\n        'sendToFriend' => $faqHelper->renderSendToFriend($faqServices->getSuggestLink()),\n        'shareOnTwitter' => $faqHelper->renderTwitterShareLink($faqServices->getShareOnTwitterLink()),\n        'linkToPdf' => $faqServices->getPdfLink(),\n        'translationUrl' => $translationUrl,\n        'languageSelection' => LanguageHelper::renderSelectLanguage(\n            $faqLangCode,\n            false,\n            $availableLanguages,\n            'translation'\n        ),\n        'msgTranslateSubmit' => Translation::get('msgTranslateSubmit'),\n        'saveVotingID' => $faqId,\n        'msgAverageVote' => Translation::get('msgAverageVote'),\n        'renderVotingResult' => $rating->getVotingResult($faqId),\n        'switchLanguage' => $faqHelper->renderChangeLanguageSelector($faq, $currentCategory),\n        'msgVoteUsability' => Translation::get('msgVoteUsability'),\n        'msgVoteBad' => Translation::get('msgVoteBad'),\n        'msgVoteGood' => Translation::get('msgVoteGood'),\n        'msgVoteSubmit' => Translation::get('msgVoteSubmit'),\n        'writeCommentMsg' => $commentMessage,\n        'msgWriteComment' => Translation::get('msgWriteComment'),\n        'id' => $faqId,\n        'lang' => $lang,\n        'msgCommentHeader' => Translation::get('msgCommentHeader'),\n        'msgNewContentName' => Translation::get('msgNewContentName'),\n        'msgNewContentMail' => Translation::get('msgNewContentMail'),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'msgYourComment' => Translation::get('msgYourComment'),\n        'msgCancel' => Translation::get('ad_gen_cancel'),\n        'msgNewContentSubmit' => Translation::get('msgNewContentSubmit'),\n        'csrfInput' => Token::getInstance()->getTokenInput('add-comment'),\n        'captchaFieldset' =>\n            $captchaHelper->renderCaptcha($captcha, 'writecomment', Translation::get('msgCaptcha'), $user->isLoggedIn()),\n        'renderComments' => $comment->getComments($faqId, CommentType::FAQ),\n        'msg_about_faq' => Translation::get('msg_about_faq'),\n    ]\n);\n\n$template->parseBlock(\n    'index',\n    'breadcrumb',\n    [\n        'breadcrumbHeadline' => $categoryName\n    ]\n);\n", "<?php\n\n/**\n * Helper class for phpMyFAQ FAQs.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at https://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\\Helper\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2010-2023 phpMyFAQ Team\n * @license   https://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2010-11-12\n */\n\nnamespace phpMyFAQ\\Helper;\n\nuse Exception;\nuse ParsedownExtra;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Configuration;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Helper;\nuse phpMyFAQ\\Language\\LanguageCodes;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Translation;\nuse phpMyFAQ\\Utils;\n\n/**\n * Class FaqHelper\n *\n * @package phpMyFAQ\\Helper\n */\nclass FaqHelper extends Helper\n{\n    /**\n     * Constructor.\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Rewrites the CSS class generated by TinyMCE for HighlightJS.\n     */\n    public function renderMarkupContent(string $answer): string\n    {\n        return str_replace('class=\"language-markup\"', 'class=\"language-html\"', $answer);\n    }\n\n    /**\n     * Extends URL fragments (e.g. <a href=\"#foo\">) with the full default URL.\n     */\n    public function rewriteUrlFragments(string $answer, string $currentUrl): string\n    {\n        return str_replace('href=\"#', 'href=\"' . $currentUrl . '#', $answer);\n    }\n\n    /**\n     * Renders a Share on Twitter link.\n     */\n    public function renderTwitterShareLink(string $url): string\n    {\n        if (empty($url) || $this->config->get('socialnetworks.disableAll')) {\n            return '';\n        }\n\n        return sprintf(\n            '<i aria-hidden=\"true\" class=\"fa fa-twitter\"></i>' .\n            '<a rel=\"nofollow\" href=\"%s\" target=\"_blank\" class=\"text-decoration-none\">Twitter</a>',\n            $url\n        );\n    }\n\n    /**\n     * Renders a \"Send to friend\" HTML snippet.\n     */\n    public function renderSendToFriend(string $url): string\n    {\n        if (empty($url) || !$this->config->get('main.enableSendToFriend')) {\n            return '';\n        }\n\n        return sprintf(\n            '<i aria-hidden=\"true\" class=\"fa fa-envelope\"></i>' .\n            '<a rel=\"nofollow\" href=\"%s\" class=\"text-decoration-none\">%s</a>',\n            $url,\n            Translation::get('msgSend2Friend')\n        );\n    }\n\n\n    /**\n     * Renders a select box with all translations of a FAQ.\n     */\n    public function renderChangeLanguageSelector(Faq $faq, int $categoryId): string\n    {\n        $html = '';\n        $faqUrl = sprintf(\n            '?action=faq&amp;cat=%d&amp;id=%d&amp;artlang=%%s',\n            $categoryId,\n            $faq->faqRecord['id']\n        );\n\n        $oLink = new Link($this->config->getDefaultUrl() . $faqUrl, $this->config);\n        $oLink->itemTitle = $faq->faqRecord['title'];\n        $availableLanguages = $this->config->getLanguage()->isLanguageAvailable($faq->faqRecord['id']);\n\n        if ((is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1) {\n            $html = '<form method=\"post\">';\n            $html .= '<select name=\"language\" onchange=\"top.location.href = this.options[this.selectedIndex].value;\">';\n\n            foreach ($availableLanguages as $language) {\n                $html .= sprintf('<option value=\"%s\"', sprintf($oLink->toString(), $language));\n                $html .= ($faq->faqRecord['lang'] === $language ? ' selected' : '');\n                $html .= sprintf('>%s</option>', LanguageCodes::get($language));\n            }\n\n            $html .= '</select></form>';\n        }\n\n        return $html;\n    }\n\n    /**\n     * Renders a preview of the answer.\n     *\n     * @throws Exception\n     */\n    public function renderAnswerPreview(string $answer, int $numWords): string\n    {\n        if ($this->config->get('main.enableMarkdownEditor')) {\n            $parseDown = new ParsedownExtra();\n            return Utils::chopString(strip_tags((string) $parseDown->text($answer)), $numWords);\n        } else {\n            return Utils::chopString(strip_tags($answer), $numWords);\n        }\n    }\n\n    /**\n     * Creates an overview with all categories with their FAQs.\n     *\n     * @throws Exception\n     */\n    public function createOverview(Category $category, Faq $faq, string $language = ''): string\n    {\n        $output = '';\n\n        // Initialize categories\n        $category->transform(0);\n\n        // Get all FAQs\n        $faq->getAllRecords(FAQ_SORTING_TYPE_CATID_FAQID, ['lang' => $language]);\n        $date = new Date($this->config);\n\n        if (count($faq->faqRecords)) {\n            $lastCategory = 0;\n            foreach ($faq->faqRecords as $data) {\n                if ($data['category_id'] !== $lastCategory) {\n                    $output .= sprintf('<h3>%s</h3>', $category->getPath($data['category_id'], ' &raquo; '));\n                }\n\n                $output .= sprintf('<h4>%s</h4>', Strings::htmlentities($data['title']));\n                $output .= sprintf('<article>%s</article>', $data['content']);\n                $output .= sprintf(\n                    '<p>%s: %s<br>%s',\n                    Translation::get('msgAuthor'),\n                    Strings::htmlentities($data['author']),\n                    Translation::get('msgLastUpdateArticle') . $date->format($data['updated'])\n                );\n                $output .= '<hr>';\n\n                $lastCategory = $data['category_id'];\n            }\n        }\n\n        return $output;\n    }\n\n    /**\n     * Creates a list of links with available languages to edit a FAQ\n     * in the admin backend.\n     */\n    public function createFaqTranslationLinkList(int $faqId, int $categoryId, string $faqLang): string\n    {\n        $output = '';\n\n        $availableLanguages = $this->config->getLanguage()->isLanguageAvailable($categoryId, 'faqcategories');\n        foreach ($availableLanguages as $languageCode) {\n            if ($languageCode !== $faqLang) {\n                $output .= sprintf(\n                    '<a class=\"dropdown-item\" href=\"?action=editentry&id=%d&cat=%d&translateTo=%s\">%s %s</a>',\n                    $faqId,\n                    $categoryId,\n                    $languageCode,\n                    'Translate to',\n                    LanguageCodes::get($languageCode)\n                );\n            } else {\n                $output .= '<a class=\"dropdown-item\">n/a</a>';\n            }\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns the URL for a given FAQ Entity and category ID.\n     * @param FaqEntity $faqEntity\n     * @param int       $categoryId\n     * @return string\n     */\n    public function createFaqUrl(FaqEntity $faqEntity, int $categoryId): string\n    {\n        return sprintf(\n            '%s?action=faq&cat=%d&id=%d&artlang=%s',\n            $this->config->getDefaultUrl() . 'index.php',\n            $categoryId,\n            $faqEntity->getId(),\n            $faqEntity->getLanguage()\n        );\n    }\n}\n", "<?php\n\nnamespace phpMyFAQ\\Helper;\n\nuse phpMyFAQ\\Configuration;\nuse phpMyFAQ\\Database\\Sqlite3;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\System;\nuse PHPUnit\\Framework\\TestCase;\n\nclass FaqHelperTest extends TestCase\n{\n    /** @var Configuration */\n    private Configuration $configuration;\n\n    /** @var FaqHelper*/\n    private FaqHelper $faqHelper;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $dbHandle = new Sqlite3();\n        $dbHandle->connect(PMF_TEST_DIR . '/test.db', '', '');\n        $this->configuration = new Configuration($dbHandle);\n        $this->configuration->set('main.currentVersion', System::getVersion());\n        $this->configuration->set('main.referenceURL', 'https://localhost:443/');\n\n        $this->faqHelper = new FaqHelper($this->configuration);\n    }\n\n    public function testRenderMarkupContent(): void\n    {\n        $this->assertEquals(\n            '<div class=\"language-html\">Foobar</div>',\n            $this->faqHelper->renderMarkupContent('<div class=\"language-markup\">Foobar</div>')\n        );\n    }\n\n    public function testRewriteUrlFragments(): void\n    {\n        $content = '<a href=\"#Foobar\">Hello, World</a>';\n        $result = $this->faqHelper->rewriteUrlFragments($content, 'https://localhost:443/');\n\n        $this->assertEquals(\n            '<a href=\"https://localhost:443/#Foobar\">Hello, World</a>',\n            $result\n        );\n    }\n    public function testCreateFaqUrl(): void\n    {\n        $faqEntity = new FaqEntity();\n        $faqEntity\n            ->setId(42)\n            ->setLanguage('de');\n\n        $this->assertEquals(\n            'https://localhost:443/index.php?action=faq&cat=1&id=42&artlang=de',\n            $this->faqHelper->createFaqUrl($faqEntity, 1)\n        );\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * Shows the page with the FAQ record and - when available - the user comments.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at https://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Lars Tiedemann <larstiedemann@yahoo.de>\n * @copyright 2002-2023 phpMyFAQ Team\n * @license   https://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2002-08-27\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentException;\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Captcha\\Captcha;\nuse phpMyFAQ\\Captcha\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\Comments;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Entity\\CommentType;\nuse phpMyFAQ\\Faq\\FaqPermission;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Glossary;\nuse phpMyFAQ\\Helper\\AttachmentHelper;\nuse phpMyFAQ\\Helper\\FaqHelper as HelperFaq;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Helper\\SearchHelper;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\LinkVerifier;\nuse phpMyFAQ\\Rating;\nuse phpMyFAQ\\Relation;\nuse phpMyFAQ\\Search\\SearchResultSet;\nuse phpMyFAQ\\Services;\nuse phpMyFAQ\\Session\\Token;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Translation;\nuse phpMyFAQ\\User\\CurrentUser;\nuse phpMyFAQ\\Utils;\nuse phpMyFAQ\\Visits;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$glossary = new Glossary($faqConfig);\n$tagging = new Tags($faqConfig);\n$relation = new Relation($faqConfig);\n$rating = new Rating($faqConfig);\n$comment = new Comments($faqConfig);\n$markDown = new ParsedownExtra();\n$faqHelper = new HelperFaq($faqConfig);\n$faqPermission = new FaqPermission($faqConfig);\n$attachmentHelper = new AttachmentHelper();\n\nif (is_null($user)) {\n    $user = new CurrentUser($faqConfig);\n}\n\n$faqSearchResult = new SearchResultSet($user, $faqPermission, $faqConfig);\n\n$captcha = Captcha::getInstance($faqConfig);\n$captcha->setSessionId($sids);\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$currentCategory = $cat;\n\n$faqId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n$solutionId = Filter::filterInput(INPUT_GET, 'solution_id', FILTER_VALIDATE_INT);\n\n// Get all data from the FAQ record\nif (0 === (int)$solutionId) {\n    $faq->getRecord($faqId);\n} else {\n    $faq->getRecordBySolutionId($solutionId);\n}\n\nif (isset($faq->faqRecord['id'])) {\n    $faqId = $faq->faqRecord['id'];\n}\n\ntry {\n    $faqSession->userTracking('article_view', $faqId);\n} catch (Exception) {\n    // @todo handle the exception\n}\n\n$faqVisits = new Visits($faqConfig);\n$faqVisits->logViews((int) $faqId);\n\n$question = $faq->getRecordTitle($faqId);\n$question = Strings::htmlentities($question);\nif ($faqConfig->get('main.enableMarkdownEditor')) {\n    $answer = $markDown->text($faq->faqRecord['content']);\n} else {\n    $answer = $faqHelper->renderMarkupContent($faq->faqRecord['content']);\n}\n\n$answer = $faqHelper->cleanUpContent($answer);\n\n// Rewrite URL fragments\n$currentUrl = htmlspecialchars(\"//{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}\", ENT_QUOTES, 'UTF-8');\n$answer = $faqHelper->rewriteUrlFragments($answer, $currentUrl);\n\n// Add Glossary entries for answers only\n$answer = $glossary->insertItemsIntoContent($answer);\n\n// Set the path of the current category\n$categoryName = $category->getPath($currentCategory, ' &raquo; ', true);\n\n$highlight = Filter::filterInput(INPUT_GET, 'highlight', FILTER_SANITIZE_SPECIAL_CHARS);\nif (\n    !is_null($highlight) && $highlight != '/' && $highlight != '<' && $highlight != '>' && Strings::strlen(\n        $highlight\n    ) > 3\n) {\n    $highlight = str_replace(\"'\", '\u00b4', (string) $highlight);\n    $highlight = str_replace(['^', '.', '?', '*', '+', '{', '}', '(', ')', '[', ']'], '', $highlight);\n    $highlight = preg_quote($highlight, '/');\n    $searchItems = explode(' ', $highlight);\n\n    foreach ($searchItems as $item) {\n        if (Strings::strlen($item) > 2) {\n            $question = Utils::setHighlightedString($question, $item);\n            $answer = Utils::setHighlightedString($answer, $item);\n        }\n    }\n}\n\n$linkVerifier = new LinkVerifier($faqConfig);\n$linkArray = $linkVerifier->getUrlPool();\nif (isset($linkArray['href'])) {\n    foreach (array_unique($linkArray['href']) as $_url) {\n        $xpos = strpos((string) $_url, 'index.php?action=faq');\n        if (!($xpos === false)) {\n            // Get the FaqHelper link title\n            $matches = [];\n            preg_match('/id=([\\d]+)/ism', (string) $_url, $matches);\n            $_id = $matches[1];\n            $_title = $faq->getRecordTitle($_id);\n            $_link = substr((string) $_url, $xpos + 9);\n            if (!str_contains((string) $_url, '&amp;')) {\n                $_link = str_replace('&', '&amp;', $_link);\n            }\n            $oLink = new Link($faqConfig->getDefaultUrl() . $_link, $faqConfig);\n            $oLink->itemTitle = $oLink->tooltip = $_title;\n            $newFaqPath = $oLink->toString();\n            $answer = str_replace($_url, $newFaqPath, (string) $answer);\n        }\n    }\n}\n\n// List all faq attachments\nif ($faqConfig->get('records.disableAttachments') && 'yes' == $faq->faqRecord['active']) {\n    try {\n        $attList = AttachmentFactory::fetchByRecordId($faqConfig, $faqId);\n        $answer .= $attachmentHelper->renderAttachmentList($attList);\n    } catch (AttachmentException) {\n        // handle exception\n    }\n}\n\n// List all categories for this faq\n$renderedCategoryPath = '';\n$multiCategories = $category->getCategoriesFromFaq($faqId);\nif ((is_countable($multiCategories) ? count($multiCategories) : 0) > 1) {\n    foreach ($multiCategories as $multiCat) {\n        $path = $category->getPath($multiCat['id'], ' &raquo; ', true, 'breadcrumb-related-categories');\n        if ('' === trim($path)) {\n            continue;\n        }\n        $renderedCategoryPath .= $path;\n    }\n}\n\n// Related FAQs\ntry {\n    $faqSearchResult->reviewResultSet(\n        $relation->getAllRelatedByQuestion(\n            Strings::htmlentities($faq->faqRecord['title']),\n            Strings::htmlentities($faq->faqRecord['keywords'])\n        )\n    );\n} catch (Exception) {\n    // handle exception\n}\n\n$searchHelper = new SearchHelper($faqConfig);\n$relatedFaqs = $searchHelper->renderRelatedFaqs($faqSearchResult, $faqId);\n\n// Show link to edit the faq?\n$editThisEntry = '';\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq')) {\n    $editThisEntry = sprintf(\n        '<i aria-hidden=\"true\" class=\"fa fa-pencil\"></i> ' .\n        '<a class=\"text-decoration-none\" href=\"./admin/index.php?action=editentry&id=%d&lang=%s\">%s</a>',\n        $faqId,\n        $lang,\n        Translation::get('ad_entry_edit_1') . ' ' . Translation::get('ad_entry_edit_2')\n    );\n}\n\n// Is the faq expired?\n$expired = (date('YmdHis') > $faq->faqRecord['dateEnd']);\n\n// Number of comments\n$numComments = $comment->getNumberOfComments();\n\n// Does the user have the right to add a comment?\nif (\n    (-1 === $user->getUserId() && !$faqConfig->get('records.allowCommentsForGuests')) ||\n    ($faq->faqRecord['active'] === 'no') || ('n' === $faq->faqRecord['comment']) || $expired\n) {\n    $commentMessage = Translation::get('msgWriteNoComment');\n} else {\n    $commentMessage = sprintf(\n        '%s<a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#pmf-modal-add-comment\">%s</a>',\n        Translation::get('msgYouCan'),\n        Translation::get('msgWriteComment')\n    );\n    $template->parseBlock(\n        'mainPageContent',\n        'enableComments',\n        [\n            'numberOfComments' => sprintf('%d %s', $numComments[$faqId] ?? 0, Translation::get('ad_start_comments')),\n        ]\n    );\n}\n\n$translationUrl = sprintf(\n    str_replace(\n        '%',\n        '%%',\n        Link::getSystemRelativeUri('index.php')\n    ) . 'index.php?%saction=translate&amp;cat=%s&amp;id=%d&amp;srclang=%s',\n    $sids,\n    $currentCategory,\n    $faqId,\n    $lang\n);\n\n$availableLanguages = $faqConfig->getLanguage()->isLanguageAvailable($faq->faqRecord['id']);\n\nif (!empty($availableLanguages) && (is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1) {\n    $template->parseBlock(\n        'mainPageContent',\n        'switchLanguage',\n        [\n            'msgChangeLanguage' => Translation::get('msgLanguageSubmit'),\n        ]\n    );\n}\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'addtranslation') &&\n    !empty($availableLanguages) && (is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1\n) {\n    $template->parseBlock(\n        'mainPageContent',\n        'addTranslation',\n        [\n            'msgTranslate' => Translation::get('msgTranslate'),\n        ]\n    );\n}\n\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq') && !empty($faq->faqRecord['notes'])) {\n    $template->parseBlock(\n        'mainPageContent',\n        'privateNotes',\n        [\n            'notesHeader' => Translation::get('ad_admin_notes'),\n            'notes' => $faq->faqRecord['notes']\n        ]\n    );\n}\n\nif ('-' !== $tagging->getAllLinkTagsById($faqId)) {\n    $template->parseBlock(\n        'mainPageContent',\n        'tagsAvailable',\n        [\n            'renderTagsHeader' => Translation::get('msg_tags'),\n            'renderTags' =>  $tagging->getAllLinkTagsById($faqId),\n        ]\n    );\n}\n\nif ('' !== $renderedCategoryPath) {\n    $template->parseBlock(\n        'mainPageContent',\n        'relatedCategories',\n        [\n            'renderRelatedCategoriesHeader' => Translation::get('msgArticleCategories'),\n            'renderRelatedCategories' => $renderedCategoryPath,\n        ]\n    );\n}\n\nif ('' !== $relatedFaqs) {\n    $template->parseBlock(\n        'mainPageContent',\n        'relatedFaqs',\n        [\n            'renderRelatedArticlesHeader' => Translation::get('msg_related_articles'),\n            'renderRelatedArticles' => $relatedFaqs,\n        ]\n    );\n}\n\n$date = new Date($faqConfig);\n$captchaHelper = CaptchaHelper::getInstance($faqConfig);\n\n// We need some Links from social networks\n$faqServices = new Services($faqConfig);\n$faqServices->setCategoryId($cat);\n$faqServices->setFaqId($id);\n$faqServices->setLanguage($lang);\n$faqServices->setQuestion($faq->getRecordTitle($id));\n\n// Check if category ID and FAQ ID are linked together\nif (!$category->categoryHasLinkToFaq($faqId, $currentCategory)) {\n    $http->setStatus(404);\n}\n\n// Check if author name should be visible according to GDPR option\nif ($user->getUserVisibilityByEmail($faq->faqRecord['email'])) {\n    $author = $faq->faqRecord['author'];\n} else {\n    $author = 'n/a';\n}\n\n$template->parse(\n    'mainPageContent',\n    [\n        'baseHref' => $faqSystem->getSystemUri($faqConfig),\n        'solutionId' => $faq->faqRecord['solution_id'],\n        'solutionIdLink' => Link::getSystemRelativeUri() . '?solution_id=' . $faq->faqRecord['solution_id'],\n        'question' => $question,\n        'answer' => $answer,\n        'faqDate' => $date->format($faq->faqRecord['date']),\n        'faqAuthor' => Strings::htmlentities($author),\n        'editThisEntry' => $editThisEntry,\n        'msgPdf' => Translation::get('msgPDF'),\n        'msgPrintFaq' => Translation::get('msgPrintArticle'),\n        'sendToFriend' => $faqHelper->renderSendToFriend($faqServices->getSuggestLink()),\n        'shareOnTwitter' => $faqHelper->renderTwitterShareLink($faqServices->getShareOnTwitterLink()),\n        'linkToPdf' => $faqServices->getPdfLink(),\n        'translationUrl' => $translationUrl,\n        'languageSelection' => LanguageHelper::renderSelectLanguage(\n            $faqLangCode,\n            false,\n            $availableLanguages,\n            'translation'\n        ),\n        'msgTranslateSubmit' => Translation::get('msgTranslateSubmit'),\n        'saveVotingID' => $faqId,\n        'msgAverageVote' => Translation::get('msgAverageVote'),\n        'renderVotingResult' => $rating->getVotingResult($faqId),\n        'switchLanguage' => $faqHelper->renderChangeLanguageSelector($faq, $currentCategory),\n        'msgVoteUsability' => Translation::get('msgVoteUsability'),\n        'msgVoteBad' => Translation::get('msgVoteBad'),\n        'msgVoteGood' => Translation::get('msgVoteGood'),\n        'msgVoteSubmit' => Translation::get('msgVoteSubmit'),\n        'writeCommentMsg' => $commentMessage,\n        'msgWriteComment' => Translation::get('msgWriteComment'),\n        'id' => $faqId,\n        'lang' => $lang,\n        'msgCommentHeader' => Translation::get('msgCommentHeader'),\n        'msgNewContentName' => Translation::get('msgNewContentName'),\n        'msgNewContentMail' => Translation::get('msgNewContentMail'),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'msgYourComment' => Translation::get('msgYourComment'),\n        'msgCancel' => Translation::get('ad_gen_cancel'),\n        'msgNewContentSubmit' => Translation::get('msgNewContentSubmit'),\n        'csrfInput' => Token::getInstance()->getTokenInput('add-comment'),\n        'captchaFieldset' =>\n            $captchaHelper->renderCaptcha($captcha, 'writecomment', Translation::get('msgCaptcha'), $user->isLoggedIn()),\n        'renderComments' => $comment->getComments($faqId, CommentType::FAQ),\n        'msg_about_faq' => Translation::get('msg_about_faq'),\n    ]\n);\n\n$template->parseBlock(\n    'index',\n    'breadcrumb',\n    [\n        'breadcrumbHeadline' => $categoryName\n    ]\n);\n", "<?php\n\n/**\n * Helper class for phpMyFAQ FAQs.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at https://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\\Helper\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2010-2023 phpMyFAQ Team\n * @license   https://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2010-11-12\n */\n\nnamespace phpMyFAQ\\Helper;\n\nuse DOMDocument;\nuse Exception;\nuse ParsedownExtra;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Configuration;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Helper;\nuse phpMyFAQ\\Language\\LanguageCodes;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Translation;\nuse phpMyFAQ\\Utils;\n\n/**\n * Class FaqHelper\n *\n * @package phpMyFAQ\\Helper\n */\nclass FaqHelper extends Helper\n{\n    /**\n     * Constructor.\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Rewrites the CSS class generated by TinyMCE for HighlightJS.\n     */\n    public function renderMarkupContent(string $answer): string\n    {\n        return str_replace('class=\"language-markup\"', 'class=\"language-html\"', $answer);\n    }\n\n    /**\n     * Extends URL fragments (e.g. <a href=\"#foo\">) with the full default URL.\n     */\n    public function rewriteUrlFragments(string $answer, string $currentUrl): string\n    {\n        return str_replace('href=\"#', 'href=\"' . $currentUrl . '#', $answer);\n    }\n\n    /**\n     * Renders a Share on Twitter link.\n     */\n    public function renderTwitterShareLink(string $url): string\n    {\n        if (empty($url) || $this->config->get('socialnetworks.disableAll')) {\n            return '';\n        }\n\n        return sprintf(\n            '<i aria-hidden=\"true\" class=\"fa fa-twitter\"></i>' .\n            '<a rel=\"nofollow\" href=\"%s\" target=\"_blank\" class=\"text-decoration-none\">Twitter</a>',\n            $url\n        );\n    }\n\n    /**\n     * Renders a \"Send to friend\" HTML snippet.\n     */\n    public function renderSendToFriend(string $url): string\n    {\n        if (empty($url) || !$this->config->get('main.enableSendToFriend')) {\n            return '';\n        }\n\n        return sprintf(\n            '<i aria-hidden=\"true\" class=\"fa fa-envelope\"></i>' .\n            '<a rel=\"nofollow\" href=\"%s\" class=\"text-decoration-none\">%s</a>',\n            $url,\n            Translation::get('msgSend2Friend')\n        );\n    }\n\n\n    /**\n     * Renders a select box with all translations of a FAQ.\n     */\n    public function renderChangeLanguageSelector(Faq $faq, int $categoryId): string\n    {\n        $html = '';\n        $faqUrl = sprintf(\n            '?action=faq&amp;cat=%d&amp;id=%d&amp;artlang=%%s',\n            $categoryId,\n            $faq->faqRecord['id']\n        );\n\n        $oLink = new Link($this->config->getDefaultUrl() . $faqUrl, $this->config);\n        $oLink->itemTitle = $faq->faqRecord['title'];\n        $availableLanguages = $this->config->getLanguage()->isLanguageAvailable($faq->faqRecord['id']);\n\n        if ((is_countable($availableLanguages) ? count($availableLanguages) : 0) > 1) {\n            $html = '<form method=\"post\">';\n            $html .= '<select name=\"language\" onchange=\"top.location.href = this.options[this.selectedIndex].value;\">';\n\n            foreach ($availableLanguages as $language) {\n                $html .= sprintf('<option value=\"%s\"', sprintf($oLink->toString(), $language));\n                $html .= ($faq->faqRecord['lang'] === $language ? ' selected' : '');\n                $html .= sprintf('>%s</option>', LanguageCodes::get($language));\n            }\n\n            $html .= '</select></form>';\n        }\n\n        return $html;\n    }\n\n    /**\n     * Renders a preview of the answer.\n     *\n     * @throws Exception\n     */\n    public function renderAnswerPreview(string $answer, int $numWords): string\n    {\n        if ($this->config->get('main.enableMarkdownEditor')) {\n            $parseDown = new ParsedownExtra();\n            return Utils::chopString(strip_tags((string) $parseDown->text($answer)), $numWords);\n        } else {\n            return Utils::chopString(strip_tags($answer), $numWords);\n        }\n    }\n\n    /**\n     * Creates an overview with all categories with their FAQs.\n     *\n     * @throws Exception\n     */\n    public function createOverview(Category $category, Faq $faq, string $language = ''): string\n    {\n        $output = '';\n\n        // Initialize categories\n        $category->transform(0);\n\n        // Get all FAQs\n        $faq->getAllRecords(FAQ_SORTING_TYPE_CATID_FAQID, ['lang' => $language]);\n        $date = new Date($this->config);\n\n        if (count($faq->faqRecords)) {\n            $lastCategory = 0;\n            foreach ($faq->faqRecords as $data) {\n                if ($data['category_id'] !== $lastCategory) {\n                    $output .= sprintf('<h3>%s</h3>', $category->getPath($data['category_id'], ' &raquo; '));\n                }\n\n                $output .= sprintf('<h4>%s</h4>', Strings::htmlentities($data['title']));\n                $output .= sprintf('<article>%s</article>', $data['content']);\n                $output .= sprintf(\n                    '<p>%s: %s<br>%s',\n                    Translation::get('msgAuthor'),\n                    Strings::htmlentities($data['author']),\n                    Translation::get('msgLastUpdateArticle') . $date->format($data['updated'])\n                );\n                $output .= '<hr>';\n\n                $lastCategory = $data['category_id'];\n            }\n        }\n\n        return $output;\n    }\n\n    /**\n     * Creates a list of links with available languages to edit a FAQ\n     * in the admin backend.\n     */\n    public function createFaqTranslationLinkList(int $faqId, int $categoryId, string $faqLang): string\n    {\n        $output = '';\n\n        $availableLanguages = $this->config->getLanguage()->isLanguageAvailable($categoryId, 'faqcategories');\n        foreach ($availableLanguages as $languageCode) {\n            if ($languageCode !== $faqLang) {\n                $output .= sprintf(\n                    '<a class=\"dropdown-item\" href=\"?action=editentry&id=%d&cat=%d&translateTo=%s\">%s %s</a>',\n                    $faqId,\n                    $categoryId,\n                    $languageCode,\n                    'Translate to',\n                    LanguageCodes::get($languageCode)\n                );\n            } else {\n                $output .= '<a class=\"dropdown-item\">n/a</a>';\n            }\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns the URL for a given FAQ Entity and category ID.\n     * @param FaqEntity $faqEntity\n     * @param int       $categoryId\n     * @return string\n     */\n    public function createFaqUrl(FaqEntity $faqEntity, int $categoryId): string\n    {\n        return sprintf(\n            '%s?action=faq&cat=%d&id=%d&artlang=%s',\n            $this->config->getDefaultUrl() . 'index.php',\n            $categoryId,\n            $faqEntity->getId(),\n            $faqEntity->getLanguage()\n        );\n    }\n\n    /**\n     * Remove <script> tags, we don't need them\n     *\n     * @param string $content\n     * @return string\n     */\n    public function cleanUpContent(string $content): string\n    {\n        $document = new DOMDocument();\n        $document->loadHTML($content, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);\n\n        $scriptTags = $document->getElementsByTagName('script');\n\n        for ($i = 0; $i < $scriptTags->length; $i++) {\n            $scriptTags->item($i)->parentNode->removeChild($scriptTags->item($i));\n        }\n\n        return preg_replace(['/\\r/', '/\\n/'], '', $document->saveHTML());\n    }\n}\n", "<?php\n\nnamespace phpMyFAQ\\Helper;\n\nuse phpMyFAQ\\Configuration;\nuse phpMyFAQ\\Database\\Sqlite3;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\System;\nuse PHPUnit\\Framework\\TestCase;\n\nclass FaqHelperTest extends TestCase\n{\n    /** @var Configuration */\n    private Configuration $configuration;\n\n    /** @var FaqHelper*/\n    private FaqHelper $faqHelper;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $dbHandle = new Sqlite3();\n        $dbHandle->connect(PMF_TEST_DIR . '/test.db', '', '');\n        $this->configuration = new Configuration($dbHandle);\n        $this->configuration->set('main.currentVersion', System::getVersion());\n        $this->configuration->set('main.referenceURL', 'https://localhost:443/');\n\n        $this->faqHelper = new FaqHelper($this->configuration);\n    }\n\n    public function testRenderMarkupContent(): void\n    {\n        $this->assertEquals(\n            '<div class=\"language-html\">Foobar</div>',\n            $this->faqHelper->renderMarkupContent('<div class=\"language-markup\">Foobar</div>')\n        );\n    }\n\n    public function testRewriteUrlFragments(): void\n    {\n        $content = '<a href=\"#Foobar\">Hello, World</a>';\n        $result = $this->faqHelper->rewriteUrlFragments($content, 'https://localhost:443/');\n\n        $this->assertEquals(\n            '<a href=\"https://localhost:443/#Foobar\">Hello, World</a>',\n            $result\n        );\n    }\n    public function testCreateFaqUrl(): void\n    {\n        $faqEntity = new FaqEntity();\n        $faqEntity\n            ->setId(42)\n            ->setLanguage('de');\n\n        $this->assertEquals(\n            'https://localhost:443/index.php?action=faq&cat=1&id=42&artlang=de',\n            $this->faqHelper->createFaqUrl($faqEntity, 1)\n        );\n    }\n\n    public function testCleanUpContent(): void\n    {\n        $content = '<p>Some text <script>alert(\"Hello, world!\");</script></p>';\n        $expectedOutput = '<p>Some text </p>';\n\n        $actualOutput = $this->faqHelper->cleanUpContent($content);\n\n        $this->assertEquals($expectedOutput, $actualOutput);\n    }\n}\n"], "filenames": ["phpmyfaq/faq.php", "phpmyfaq/src/phpMyFAQ/Helper/FaqHelper.php", "tests/phpMyFAQ/Helper/FaqHelperTest.php"], "buggy_code_start_loc": [106, 19, 61], "buggy_code_end_loc": [106, 228, 61], "fixing_code_start_loc": [107, 20, 62], "fixing_code_end_loc": [109, 250, 72], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.2.0-beta.", "other": {"cve": {"id": "CVE-2023-2752", "sourceIdentifier": "security@huntr.dev", "published": "2023-05-17T08:15:08.757", "lastModified": "2023-05-24T15:18:32.437", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.2.0-beta."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.2.0", "matchCriteriaId": "972DB9E1-96EB-4DEC-8A58-14DDF7B8A7E2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:3.2.0:alpha:*:*:*:*:*:*", "matchCriteriaId": "71D0A0BD-EC7D-47C7-8C0F-716EE0843E52"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/e7599d49b0ece7ceef3a4e8d334782cc3df98be8", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/efdf5b24-6d30-4d57-a5b0-13b253ba3ea4", "source": "security@huntr.dev", "tags": ["Broken Link"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/e7599d49b0ece7ceef3a4e8d334782cc3df98be8"}}