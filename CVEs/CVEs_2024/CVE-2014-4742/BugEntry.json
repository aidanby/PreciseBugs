{"buggy_code": ["<?php\n/*\"******************************************************************************************************\n*   (c) 2007-2014 by Kajona, www.kajona.de                                                              *\n*       Published under the GNU LGPL v2.1, see /system/licence_lgpl.txt                                 *\n*-------------------------------------------------------------------------------------------------------*\n*\t$Id$                                             *\n********************************************************************************************************/\n\n/**\n * Class to handle all link-generations, backend and portal.\n * Moved from functions.php to a central class in order to avoid duplicated code.\n * As a side-effect, the class may be overridden using the /project schema in order\n * to modify the link generation (if required).\n *\n * @package module_system\n * @author sidler@mulchprod.de\n * @since 4.3\n */\nclass class_link {\n\n    private static $intNrOfPortalLanguages = null;\n    private static $strPortalLanguage = null;\n\n\n    /**\n     * Generates a link using the content passed.\n     * The param $strLinkContent should contain all contents of the a-tag.\n     * The system renders <a $strLinkContent title... class...>($strText|$strImage)</a>\n     *\n     * @param string $strLinkContent\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param string $strImageId\n     * @param string $strLinkId\n     * @param bool $bitTooltip\n     * @param string $strCss\n     * @return string\n     */\n    public static function getLinkAdminManual($strLinkContent, $strText , $strAlt=\"\", $strImage=\"\", $strImageId = \"\", $strLinkId = \"\", $bitTooltip = true, $strCss = \"\") {\n        $strLink = \"\";\n\n        if($strImage != \"\") {\n            if(!$bitTooltip)\n                $strLink = \"<a \".$strLinkContent.\"  title=\\\"\".$strAlt.\"\\\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true, $strImageId).\"</a>\";\n            else\n                $strLink = \"<a \".$strLinkContent.\"  title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true, $strImageId).\"</a>\";\n        }\n        else if($strText != \"\") {\n            if($bitTooltip && (trim($strAlt) == \"\" || $strAlt == $strText)) {\n                $bitTooltip = false;\n                $strAlt = $strText;\n            }\n\n            $strLink = \"<a \".$strLinkContent.\" title=\\\"\".$strAlt.\"\\\" \".($strCss!= \"\" ? \" class=\\\"\".$strCss.\"\\\"\" : \"\").\" \".($bitTooltip!= \"\" ? \" rel=\\\"tooltip\\\"\" : \"\").\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".$strText.\"</a>\";\n        }\n\n        return $strLink;\n    }\n\n    /**\n     * Generates a link for the admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param bool $bitTooltip\n     * @param string $strCss\n     * @return string\n     */\n    public static function getLinkAdmin($strModule, $strAction, $strParams = \"\", $strText =\"\", $strAlt=\"\", $strImage=\"\", $bitTooltip = true, $strCss = \"\") {\n        $strHref = \"href=\\\"\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"\\\"\";\n        return self::getLinkAdminManual($strHref, $strText, $strAlt, $strImage, \"\", \"\", $bitTooltip, $strCss);\n    }\n\n\n\n\n\n    /**\n     * Generates a link for the admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param bool $bitEncodedAmpersand\n     * @return string\n     */\n    public static function getLinkAdminHref($strModule, $strAction = \"\", $strParams = \"\", $bitEncodedAmpersand = true) {\n\n        //systemid in params?\n        $strSystemid = \"\";\n        $arrParams = self::parseParamsString($strParams, $strSystemid);\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        //rewriting enabled?\n        if(_system_mod_rewrite_ == \"true\") {\n\n            //scheme: /admin/module.action.systemid\n            if($strModule != \"\" && $strAction == \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/admin/\".$strModule.\".html\";\n            else if($strModule != \"\" && $strAction != \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/admin/\".$strModule.\"/\".$strAction.\".html\";\n            else\n                $strLink = _webpath_.\"/admin/\".$strModule.\"/\".$strAction.\"/\".$strSystemid.\".html\";\n\n            if(count($arrParams) > 0)\n                $strLink .= \"?\".implode(\"&amp;\", $arrParams);\n\n        }\n        else {\n            $strLink = \"\"._indexpath_.\"?admin=1&amp;module=\".$strModule.\n                ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\").\n                ($strSystemid != \"\" ? \"&amp;systemid=\".$strSystemid : \"\");\n\n            if(count($arrParams) > 0)\n                $strLink .= \"&amp;\".(implode(\"&amp;\", $arrParams));\n        }\n\n        if(!$bitEncodedAmpersand)\n            $strLink = uniStrReplace(\"&amp;\", \"&\", $strLink);\n\n        return $strLink;\n    }\n\n    /**\n     * Generates an admin-url to trigger xml-requests. Takes care of url-rewriting\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param bool $bitEncodedAmpersand\n     *\n     * @return mixed|string\n     */\n    public static function getLinkAdminXml($strModule, $strAction = \"\", $strParams = \"\", $bitEncodedAmpersand = false) {\n\n        //systemid in params?\n        $strSystemid = \"\";\n        $arrParams = self::parseParamsString($strParams, $strSystemid);\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        //rewriting enabled?\n        if(_system_mod_rewrite_ == \"true\") {\n\n            //scheme: /admin/module.action.systemid\n            if($strModule != \"\" && $strAction == \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/xml/admin/\".$strModule;\n            else if($strModule != \"\" && $strAction != \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/xml/admin/\".$strModule.\"/\".$strAction;\n            else\n                $strLink = _webpath_.\"/xml/admin/\".$strModule.\"/\".$strAction.\"/\".$strSystemid;\n\n            if(count($arrParams) > 0)\n                $strLink .= \"?\".implode(\"&amp;\", $arrParams);\n\n        }\n        else {\n            $strLink = \"\"._webpath_.\"/xml.php?admin=1&amp;module=\".$strModule.\n                ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\" ).\n                ($strSystemid != \"\" ?  \"&amp;systemid=\".$strSystemid : \"\");\n\n            if(count($arrParams) > 0)\n                $strLink .= \"&amp;\".(implode(\"&amp;\", $arrParams));\n        }\n\n        if(!$bitEncodedAmpersand)\n            $strLink = uniStrReplace(\"&amp;\", \"&\", $strLink);\n\n        return $strLink;\n    }\n\n    /**\n     * Generates a link opening in a popup in admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param int|string $intWidth\n     * @param int|string $intHeight\n     * @param string $strTitle\n     * @param bool $bitTooltip\n     * @param bool $bitPortalEditor\n     *\n     * @return string\n     */\n    public static function getLinkAdminPopup($strModule, $strAction, $strParams = \"\", $strText = \"\", $strAlt = \"\", $strImage = \"\", $intWidth = \"500\", $intHeight = \"500\", $strTitle = \"\", $bitTooltip = true, $bitPortalEditor = false) {\n        $strLink = \"\";\n        //if($strParams != \"\")\n        //    $strParams = str_replace(\"&\", \"&amp;\", $strParams);\n        $strTitle = addslashes(uniStrReplace(array(\"\\n\", \"\\r\"), array(), strip_tags(nl2br($strTitle))));\n\n        if($bitPortalEditor && $intHeight == \"500\")\n            $intHeight = 690;\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        if($bitPortalEditor)\n            $strParams .= \"&pe=1\";\n\n        if($strImage != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strAction;\n\n            if(!$bitTooltip)\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\" \".\n                    \"title=\\\"\".$strAlt.\"\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n            else\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\" \".\n                    \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n        }\n\n        if($strImage == \"\" && $strText != \"\") {\n            $bitTooltip = $bitTooltip && $strAlt != \"\";\n\n            $strLink = \"<a href=\\\"#\\\" \".($bitPortalEditor ? \"class=\\\"pe_link\\\"\" : \"\").\" \".($bitTooltip ? \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \" : \"\").\" \".\n                \"onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\">\".$strText.\"</a>\";\n        }\n        return $strLink;\n    }\n\n    /**\n     * Generates a link opening in a dialog in admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param string $strTitle\n     * @param bool $bitTooltip\n     * @param bool $bitPortalEditor\n     * @param bool|string $strOnClick\n     * @param null|int $intWidth\n     * @param null|int $intHeight\n     * @return string\n     */\n    public static function getLinkAdminDialog($strModule, $strAction, $strParams = \"\", $strText = \"\", $strAlt=\"\", $strImage=\"\", $strTitle = \"\", $bitTooltip = true, $bitPortalEditor = false, $strOnClick = \"\", $intWidth = null, $intHeight = null) {\n        $strLink = \"\";\n        $strTitle = addslashes(uniStrReplace(array(\"\\n\", \"\\r\"), array(), strip_tags(nl2br($strTitle))));\n\n        if($bitPortalEditor)\n            $strParams .= \"&pe=1\";\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        if($strOnClick == \"\") {\n            if($intWidth !== null && $intHeight !== null)\n                $strOnClick = \"KAJONA.admin.folderview.dialog.setContentIFrame('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"'); KAJONA.admin.folderview.dialog.setTitle('\".$strTitle.\"'); \".\n                    \"KAJONA.admin.folderview.dialog.init('\".$intWidth.\"', '\".$intHeight.\"'); return false;\";\n            else\n                $strOnClick = \"KAJONA.admin.folderview.dialog.setContentIFrame('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"'); KAJONA.admin.folderview.dialog.setTitle('\".$strTitle.\"'); \".\n                    \"KAJONA.admin.folderview.dialog.init(); return false;\";\n        }\n\n\n\n        if($strImage != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strAction;\n\n            if(!$bitTooltip)\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"\".$strOnClick.\"\\\" title=\\\"\".$strAlt.\"\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n            else\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"\".$strOnClick.\"\\\" title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n        }\n\n        if($strImage == \"\" && $strText != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strText;\n            $strLink = \"<a href=\\\"#\\\" \".($bitPortalEditor ? \"class=\\\"pe_link\\\"\" : \"\").\" \".($bitTooltip ? \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \" : \"\" ).\" onclick=\\\"\".$strOnClick.\"\\\">\".$strText.\"</a>\";\n        }\n        return $strLink;\n    }\n\n\n\n\n    /**\n     * Creates a Link for the portal\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strTarget\n     * @param string $strText\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strCssClass\n     * @param string $strLanguage\n     * @param string $strSeoAddon\n     * @return string\n     */\n    public static function getLinkPortal($strPageI, $strPageE, $strTarget = \"_self\", $strText = \"\", $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strCssClass = \"\", $strLanguage = \"\", $strSeoAddon = \"\") {\n        $strReturn = \"\";\n\n        $strHref = class_link::getLinkPortalHref($strPageI, $strPageE, $strAction, $strParams, $strSystemid, $strLanguage, $strSeoAddon);\n\n        if($strTarget == \"\")\n            $strTarget = \"_self\";\n\n        $strReturn .=\"<a href=\\\"\".$strHref.\"\\\" target=\\\"\".$strTarget.\"\\\" \".($strCssClass != \"\" ? \" class=\\\"\".$strCssClass.\"\\\" \": \"\").\">\".$strText.\"</a>\";\n\n        return $strReturn;\n    }\n\n    /**\n     * Creates a raw Link for the portal (just the href)\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strLanguage\n     * @param string $strSeoAddon Only used if using mod_rewrite\n     * @return string\n     */\n    public static function getLinkPortalHref($strPageI, $strPageE = \"\", $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strLanguage = \"\", $strSeoAddon = \"\") {\n        $strReturn = \"\";\n        $bitInternal = true;\n\n        //return \"#\" if neither an internal nor an external page is set\n        if($strPageI == \"\" && $strPageE == \"\")\n            return \"#\";\n\n        //Internal links are more important than external links!\n        if($strPageI == \"\" && $strPageE != \"\")\n            $bitInternal = false;\n\n\n        //create an array out of the params\n        $strParsedSystemid = \"\";\n        $arrParams = self::parseParamsString($strParams, $strParsedSystemid);\n        if($strSystemid == \"\" && validateSystemid($strParsedSystemid))\n            $strSystemid = $strParsedSystemid;\n\n        // any anchors set to the page?\n        $strAnchor = \"\";\n        if(uniStrpos($strPageI, \"#\") !== false) {\n            //get anchor, remove anchor from link\n            $strAnchor = urlencode(uniSubstr($strPageI, uniStrpos($strPageI, \"#\")+1));\n            $strPageI = uniSubstr($strPageI, 0, uniStrpos($strPageI, \"#\"));\n        }\n\n        //urlencoding\n        $strPageI = urlencode($strPageI);\n        $strAction = urlencode($strAction);\n\n        //more than one language installed?\n        if($strLanguage == \"\" && self::getIntNumberOfPortalLanguages() > 1)\n            $strLanguage = self::getStrPortalLanguage();\n        else if($strLanguage != \"\" && self::getIntNumberOfPortalLanguages() <=1)\n            $strLanguage = \"\";\n\n        $strHref = \"\";\n        if($bitInternal) {\n            //check, if we could use mod_rewrite\n            $bitRegularLink = true;\n            if(_system_mod_rewrite_ == \"true\") {\n\n                $strAddKeys = \"\";\n\n                //used later to add seo-relevant keywords\n                $objPage = class_module_pages_page::getPageByName($strPageI);\n                if($objPage !== null) {\n                    if($strLanguage != \"\") {\n                        $objPage->setStrLanguage($strLanguage);\n                        $objPage->initObject();\n                    }\n\n                    $strAddKeys = $objPage->getStrSeostring().($strSeoAddon != \"\" && $objPage->getStrSeostring() != \"\" ? \"-\" : \"\").urlSafeString($strSeoAddon);\n                    if(uniStrlen($strAddKeys) > 0 && uniStrlen($strAddKeys) <=2 )\n                        $strAddKeys .= \"__\";\n\n                    //trim string\n                    $strAddKeys = uniStrTrim($strAddKeys, 100, \"\");\n\n                    if($strLanguage != \"\")\n                        $strHref .= $strLanguage.\"/\";\n\n                    $strPath = $objPage->getStrPath();\n                    if($strPath == \"\") {\n                        $objPage->updatePath();\n                        $strPath = $objPage->getStrPath();\n                        $objPage->updateObjectToDb();\n                    }\n                    if($strPath != \"\") {\n                        $strHref .= $strPath.\"/\";\n                    }\n\n                }\n\n                //ok, here we go. schema for rewrite_links: pagename.addKeywords.action.systemid.language.html\n                //but: special case: just pagename & language\n                if($strAction == \"\" && $strSystemid == \"\" && $strAddKeys == \"\")\n                    $strHref .= $strPageI.\".html\";\n                elseif($strAction == \"\" && $strSystemid == \"\")\n                    $strHref .= $strPageI.($strAddKeys == \"\" ? \"\" : \".\".$strAddKeys).\".html\";\n                elseif($strAction != \"\" && $strSystemid == \"\")\n                    $strHref .= $strPageI.\".\".$strAddKeys.\".\".$strAction .\".html\";\n                else\n                    $strHref .= $strPageI.\".\".$strAddKeys.\".\".$strAction .\".\".$strSystemid.\".html\";\n\n                //params?\n                if(count($arrParams) > 0)\n                    $strHref .= \"?\".implode(\"&amp;\", $arrParams);\n\n                // add anchor if given\n                if($strAnchor != \"\")\n                    $strHref .= \"#\".$strAnchor;\n\n                //plus the domain as a prefix\n                $strHref = \"_webpath_\".\"/\".$strHref;\n\n\n                $bitRegularLink = false;\n\n            }\n\n            if($bitRegularLink)\n                $strHref = \"_indexpath_\".\"?\".\n                    ($strPageI != \"\" ? \"page=\".$strPageI : \"\" ).\"\".\n                    ($strSystemid != \"\" ? \"&amp;systemid=\".$strSystemid : \"\" ).\n                    ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\").\n                    ($strLanguage != \"\" ? \"&amp;language=\".$strLanguage : \"\").\n                    (count($arrParams) > 0 ? \"&amp;\".implode(\"&amp;\", $arrParams) : \"\" ).\n                    ($strAnchor != \"\" ? \"#\".$strAnchor : \"\").\"\";\n        }\n        else {\n            $strHref = $strPageE;\n        }\n\n        $strReturn .= $strHref;\n\n        return $strReturn;\n    }\n\n    /**\n     * Generates a link opening in a popup in portal-area\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strTitle\n     * @param int|string $intWidth\n     * @param int|string $intHeight\n     *\n     * @return string\n     */\n    public static function getLinkPortalPopup($strPageI, $strPageE, $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strTitle = \"\", $intWidth = \"500\", $intHeight = \"500\") {\n        $strLink = class_link::getLinkPortalHref($strPageI, $strPageE, $strAction, $strParams, $strSystemid);\n        $strLink = \"<a href=\\\"$strLink\\\" onclick=\\\"return !window.open('\".$strLink.\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"')\\\" title=\\\"\".$strTitle.\"\\\">\".$strTitle.\"</a>\";\n        return $strLink;\n    }\n\n\n\n    /**\n     * Internal helper to transform the passed params string into an array.\n     * Extracts the systemid out of the string and updates the passed reference with the\n     * systemid.\n     *\n     * @param string $strParams\n     * @param string &$strSystemid\n     * @return array\n     */\n    private static function parseParamsString($strParams, &$strSystemid = \"\") {\n        $strParams = uniStrReplace(\"&amp;\", \"&\", $strParams);\n\n        //if given, remove first ampersand from params\n        if(substr($strParams, 0, 1) == \"&\")\n            $strParams = substr($strParams, 1);\n\n        $arrParams = explode(\"&\", $strParams);\n        foreach($arrParams as $strKey => &$strValue) {\n            $arrEntry = explode(\"=\", $strValue);\n\n            if(count($arrEntry) == 2 && $arrEntry[0] == \"systemid\") {\n                $strSystemid = $arrEntry[1];\n                unset($arrParams[$strKey]);\n            }\n            else if($strValue == \"\")\n                unset($arrParams[$strKey]);\n\n            if(count($arrEntry) == 2)\n                $arrEntry[1] = urlencode($arrEntry[1]);\n\n            $strValue = implode(\"=\", $arrEntry);\n        }\n\n        return $arrParams;\n    }\n\n    /**\n     * Helper to determin the number of portal languages only once.\n     * @return int\n     */\n    private static function getIntNumberOfPortalLanguages() {\n        if(self::$intNrOfPortalLanguages == null)\n            self::$intNrOfPortalLanguages = class_module_languages_language::getNumberOfLanguagesAvailable(true);\n\n        return self::$intNrOfPortalLanguages;\n    }\n\n\n    /**\n     * Helper to fetch the portal language\n     * @return null|string\n     */\n    private static function getStrPortalLanguage() {\n        if(self::$strPortalLanguage == null) {\n            $objLang = new class_module_languages_language();\n            self::$strPortalLanguage = $objLang->getStrPortalLanguage();\n        }\n\n        return self::$strPortalLanguage;\n    }\n\n\n}"], "fixing_code": ["<?php\n/*\"******************************************************************************************************\n*   (c) 2007-2014 by Kajona, www.kajona.de                                                              *\n*       Published under the GNU LGPL v2.1, see /system/licence_lgpl.txt                                 *\n*-------------------------------------------------------------------------------------------------------*\n*\t$Id$                                             *\n********************************************************************************************************/\n\n/**\n * Class to handle all link-generations, backend and portal.\n * Moved from functions.php to a central class in order to avoid duplicated code.\n * As a side-effect, the class may be overridden using the /project schema in order\n * to modify the link generation (if required).\n *\n * @package module_system\n * @author sidler@mulchprod.de\n * @since 4.3\n */\nclass class_link {\n\n    private static $intNrOfPortalLanguages = null;\n    private static $strPortalLanguage = null;\n\n\n    /**\n     * Generates a link using the content passed.\n     * The param $strLinkContent should contain all contents of the a-tag.\n     * The system renders <a $strLinkContent title... class...>($strText|$strImage)</a>\n     *\n     * @param string $strLinkContent\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param string $strImageId\n     * @param string $strLinkId\n     * @param bool $bitTooltip\n     * @param string $strCss\n     * @return string\n     */\n    public static function getLinkAdminManual($strLinkContent, $strText , $strAlt=\"\", $strImage=\"\", $strImageId = \"\", $strLinkId = \"\", $bitTooltip = true, $strCss = \"\") {\n        $strLink = \"\";\n\n        if($strImage != \"\") {\n            if(!$bitTooltip)\n                $strLink = \"<a \".$strLinkContent.\"  title=\\\"\".$strAlt.\"\\\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true, $strImageId).\"</a>\";\n            else\n                $strLink = \"<a \".$strLinkContent.\"  title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true, $strImageId).\"</a>\";\n        }\n        else if($strText != \"\") {\n            if($bitTooltip && (trim($strAlt) == \"\" || $strAlt == $strText)) {\n                $bitTooltip = false;\n                $strAlt = $strText;\n            }\n\n            $strLink = \"<a \".$strLinkContent.\" title=\\\"\".$strAlt.\"\\\" \".($strCss!= \"\" ? \" class=\\\"\".$strCss.\"\\\"\" : \"\").\" \".($bitTooltip!= \"\" ? \" rel=\\\"tooltip\\\"\" : \"\").\" \".($strLinkId != \"\" ? \"id=\\\"\".$strLinkId.\"\\\"\" : \"\").\" >\".$strText.\"</a>\";\n        }\n\n        return $strLink;\n    }\n\n    /**\n     * Generates a link for the admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param bool $bitTooltip\n     * @param string $strCss\n     * @return string\n     */\n    public static function getLinkAdmin($strModule, $strAction, $strParams = \"\", $strText =\"\", $strAlt=\"\", $strImage=\"\", $bitTooltip = true, $strCss = \"\") {\n        $strHref = \"href=\\\"\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"\\\"\";\n        return self::getLinkAdminManual($strHref, $strText, $strAlt, $strImage, \"\", \"\", $bitTooltip, $strCss);\n    }\n\n\n\n\n\n    /**\n     * Generates a link for the admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param bool $bitEncodedAmpersand\n     * @return string\n     */\n    public static function getLinkAdminHref($strModule, $strAction = \"\", $strParams = \"\", $bitEncodedAmpersand = true) {\n\n        //systemid in params?\n        $strSystemid = \"\";\n        $arrParams = self::parseParamsString($strParams, $strSystemid);\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        //rewriting enabled?\n        if(_system_mod_rewrite_ == \"true\") {\n\n            //scheme: /admin/module.action.systemid\n            if($strModule != \"\" && $strAction == \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/admin/\".$strModule.\".html\";\n            else if($strModule != \"\" && $strAction != \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/admin/\".$strModule.\"/\".$strAction.\".html\";\n            else\n                $strLink = _webpath_.\"/admin/\".$strModule.\"/\".$strAction.\"/\".$strSystemid.\".html\";\n\n            if(count($arrParams) > 0)\n                $strLink .= \"?\".implode(\"&amp;\", $arrParams);\n\n        }\n        else {\n            $strLink = \"\"._indexpath_.\"?admin=1&amp;module=\".$strModule.\n                ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\").\n                ($strSystemid != \"\" ? \"&amp;systemid=\".$strSystemid : \"\");\n\n            if(count($arrParams) > 0)\n                $strLink .= \"&amp;\".(implode(\"&amp;\", $arrParams));\n        }\n\n        if(!$bitEncodedAmpersand)\n            $strLink = uniStrReplace(\"&amp;\", \"&\", $strLink);\n\n        return $strLink;\n    }\n\n    /**\n     * Generates an admin-url to trigger xml-requests. Takes care of url-rewriting\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param bool $bitEncodedAmpersand\n     *\n     * @return mixed|string\n     */\n    public static function getLinkAdminXml($strModule, $strAction = \"\", $strParams = \"\", $bitEncodedAmpersand = false) {\n\n        //systemid in params?\n        $strSystemid = \"\";\n        $arrParams = self::parseParamsString($strParams, $strSystemid);\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        //rewriting enabled?\n        if(_system_mod_rewrite_ == \"true\") {\n\n            //scheme: /admin/module.action.systemid\n            if($strModule != \"\" && $strAction == \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/xml/admin/\".$strModule;\n            else if($strModule != \"\" && $strAction != \"\" && $strSystemid == \"\")\n                $strLink = _webpath_.\"/xml/admin/\".$strModule.\"/\".$strAction;\n            else\n                $strLink = _webpath_.\"/xml/admin/\".$strModule.\"/\".$strAction.\"/\".$strSystemid;\n\n            if(count($arrParams) > 0)\n                $strLink .= \"?\".implode(\"&amp;\", $arrParams);\n\n        }\n        else {\n            $strLink = \"\"._webpath_.\"/xml.php?admin=1&amp;module=\".$strModule.\n                ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\" ).\n                ($strSystemid != \"\" ?  \"&amp;systemid=\".$strSystemid : \"\");\n\n            if(count($arrParams) > 0)\n                $strLink .= \"&amp;\".(implode(\"&amp;\", $arrParams));\n        }\n\n        if(!$bitEncodedAmpersand)\n            $strLink = uniStrReplace(\"&amp;\", \"&\", $strLink);\n\n        return $strLink;\n    }\n\n    /**\n     * Generates a link opening in a popup in admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param int|string $intWidth\n     * @param int|string $intHeight\n     * @param string $strTitle\n     * @param bool $bitTooltip\n     * @param bool $bitPortalEditor\n     *\n     * @return string\n     */\n    public static function getLinkAdminPopup($strModule, $strAction, $strParams = \"\", $strText = \"\", $strAlt = \"\", $strImage = \"\", $intWidth = \"500\", $intHeight = \"500\", $strTitle = \"\", $bitTooltip = true, $bitPortalEditor = false) {\n        $strLink = \"\";\n        //if($strParams != \"\")\n        //    $strParams = str_replace(\"&\", \"&amp;\", $strParams);\n        $strTitle = addslashes(uniStrReplace(array(\"\\n\", \"\\r\"), array(), strip_tags(nl2br($strTitle))));\n\n        if($bitPortalEditor && $intHeight == \"500\")\n            $intHeight = 690;\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        if($bitPortalEditor)\n            $strParams .= \"&pe=1\";\n\n        if($strImage != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strAction;\n\n            if(!$bitTooltip)\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\" \".\n                    \"title=\\\"\".$strAlt.\"\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n            else\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\" \".\n                    \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n        }\n\n        if($strImage == \"\" && $strText != \"\") {\n            $bitTooltip = $bitTooltip && $strAlt != \"\";\n\n            $strLink = \"<a href=\\\"#\\\" \".($bitPortalEditor ? \"class=\\\"pe_link\\\"\" : \"\").\" \".($bitTooltip ? \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \" : \"\").\" \".\n                \"onclick=\\\"window.open('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"'); return false;\\\">\".$strText.\"</a>\";\n        }\n        return $strLink;\n    }\n\n    /**\n     * Generates a link opening in a dialog in admin-area\n     *\n     * @param string $strModule\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strText\n     * @param string $strAlt\n     * @param string $strImage\n     * @param string $strTitle\n     * @param bool $bitTooltip\n     * @param bool $bitPortalEditor\n     * @param bool|string $strOnClick\n     * @param null|int $intWidth\n     * @param null|int $intHeight\n     * @return string\n     */\n    public static function getLinkAdminDialog($strModule, $strAction, $strParams = \"\", $strText = \"\", $strAlt=\"\", $strImage=\"\", $strTitle = \"\", $bitTooltip = true, $bitPortalEditor = false, $strOnClick = \"\", $intWidth = null, $intHeight = null) {\n        $strLink = \"\";\n        $strTitle = addslashes(uniStrReplace(array(\"\\n\", \"\\r\"), array(), strip_tags(nl2br($strTitle))));\n\n        if($bitPortalEditor)\n            $strParams .= \"&pe=1\";\n\n        //urlencoding\n        $strModule = urlencode($strModule);\n        $strAction = urlencode($strAction);\n\n        if($strOnClick == \"\") {\n            if($intWidth !== null && $intHeight !== null)\n                $strOnClick = \"KAJONA.admin.folderview.dialog.setContentIFrame('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"'); KAJONA.admin.folderview.dialog.setTitle('\".$strTitle.\"'); \".\n                    \"KAJONA.admin.folderview.dialog.init('\".$intWidth.\"', '\".$intHeight.\"'); return false;\";\n            else\n                $strOnClick = \"KAJONA.admin.folderview.dialog.setContentIFrame('\".class_link::getLinkAdminHref($strModule, $strAction, $strParams).\"'); KAJONA.admin.folderview.dialog.setTitle('\".$strTitle.\"'); \".\n                    \"KAJONA.admin.folderview.dialog.init(); return false;\";\n        }\n\n\n\n        if($strImage != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strAction;\n\n            if(!$bitTooltip)\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"\".$strOnClick.\"\\\" title=\\\"\".$strAlt.\"\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n            else\n                $strLink = \"<a href=\\\"#\\\" onclick=\\\"\".$strOnClick.\"\\\" title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\">\".class_adminskin_helper::getAdminImage($strImage, $strAlt, true).\"</a>\";\n        }\n\n        if($strImage == \"\" && $strText != \"\") {\n            if($strAlt == \"\")\n                $strAlt = $strText;\n            $strLink = \"<a href=\\\"#\\\" \".($bitPortalEditor ? \"class=\\\"pe_link\\\"\" : \"\").\" \".($bitTooltip ? \"title=\\\"\".$strAlt.\"\\\" rel=\\\"tooltip\\\" \" : \"\" ).\" onclick=\\\"\".$strOnClick.\"\\\">\".$strText.\"</a>\";\n        }\n        return $strLink;\n    }\n\n\n\n\n    /**\n     * Creates a Link for the portal\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strTarget\n     * @param string $strText\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strCssClass\n     * @param string $strLanguage\n     * @param string $strSeoAddon\n     * @return string\n     */\n    public static function getLinkPortal($strPageI, $strPageE, $strTarget = \"_self\", $strText = \"\", $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strCssClass = \"\", $strLanguage = \"\", $strSeoAddon = \"\") {\n        $strReturn = \"\";\n\n        $strHref = class_link::getLinkPortalHref($strPageI, $strPageE, $strAction, $strParams, $strSystemid, $strLanguage, $strSeoAddon);\n\n        if($strTarget == \"\")\n            $strTarget = \"_self\";\n\n        $strReturn .=\"<a href=\\\"\".$strHref.\"\\\" target=\\\"\".$strTarget.\"\\\" \".($strCssClass != \"\" ? \" class=\\\"\".$strCssClass.\"\\\" \": \"\").\">\".$strText.\"</a>\";\n\n        return $strReturn;\n    }\n\n    /**\n     * Creates a raw Link for the portal (just the href)\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strLanguage\n     * @param string $strSeoAddon Only used if using mod_rewrite\n     * @return string\n     */\n    public static function getLinkPortalHref($strPageI, $strPageE = \"\", $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strLanguage = \"\", $strSeoAddon = \"\") {\n        $strReturn = \"\";\n        $bitInternal = true;\n\n        //return \"#\" if neither an internal nor an external page is set\n        if($strPageI == \"\" && $strPageE == \"\")\n            return \"#\";\n\n        //Internal links are more important than external links!\n        if($strPageI == \"\" && $strPageE != \"\")\n            $bitInternal = false;\n\n\n        //create an array out of the params\n        if($strSystemid != \"\") {\n            $strParams .= \"&systemid=\".$strSystemid;\n            $strSystemid = \"\";\n        }\n\n        $arrParams = self::parseParamsString($strParams, $strSystemid);\n\n        // any anchors set to the page?\n        $strAnchor = \"\";\n        if(uniStrpos($strPageI, \"#\") !== false) {\n            //get anchor, remove anchor from link\n            $strAnchor = urlencode(uniSubstr($strPageI, uniStrpos($strPageI, \"#\")+1));\n            $strPageI = uniSubstr($strPageI, 0, uniStrpos($strPageI, \"#\"));\n        }\n\n        //urlencoding\n        $strPageI = urlencode($strPageI);\n        $strAction = urlencode($strAction);\n\n        //more than one language installed?\n        if($strLanguage == \"\" && self::getIntNumberOfPortalLanguages() > 1)\n            $strLanguage = self::getStrPortalLanguage();\n        else if($strLanguage != \"\" && self::getIntNumberOfPortalLanguages() <=1)\n            $strLanguage = \"\";\n\n        $strHref = \"\";\n        if($bitInternal) {\n            //check, if we could use mod_rewrite\n            $bitRegularLink = true;\n            if(_system_mod_rewrite_ == \"true\") {\n\n                $strAddKeys = \"\";\n\n                //used later to add seo-relevant keywords\n                $objPage = class_module_pages_page::getPageByName($strPageI);\n                if($objPage !== null) {\n                    if($strLanguage != \"\") {\n                        $objPage->setStrLanguage($strLanguage);\n                        $objPage->initObject();\n                    }\n\n                    $strAddKeys = $objPage->getStrSeostring().($strSeoAddon != \"\" && $objPage->getStrSeostring() != \"\" ? \"-\" : \"\").urlSafeString($strSeoAddon);\n                    if(uniStrlen($strAddKeys) > 0 && uniStrlen($strAddKeys) <=2 )\n                        $strAddKeys .= \"__\";\n\n                    //trim string\n                    $strAddKeys = uniStrTrim($strAddKeys, 100, \"\");\n\n                    if($strLanguage != \"\")\n                        $strHref .= $strLanguage.\"/\";\n\n                    $strPath = $objPage->getStrPath();\n                    if($strPath == \"\") {\n                        $objPage->updatePath();\n                        $strPath = $objPage->getStrPath();\n                        $objPage->updateObjectToDb();\n                    }\n                    if($strPath != \"\") {\n                        $strHref .= $strPath.\"/\";\n                    }\n\n                }\n\n                //ok, here we go. schema for rewrite_links: pagename.addKeywords.action.systemid.language.html\n                //but: special case: just pagename & language\n                if($strAction == \"\" && $strSystemid == \"\" && $strAddKeys == \"\")\n                    $strHref .= $strPageI.\".html\";\n                elseif($strAction == \"\" && $strSystemid == \"\")\n                    $strHref .= $strPageI.($strAddKeys == \"\" ? \"\" : \".\".$strAddKeys).\".html\";\n                elseif($strAction != \"\" && $strSystemid == \"\")\n                    $strHref .= $strPageI.\".\".$strAddKeys.\".\".$strAction .\".html\";\n                else\n                    $strHref .= $strPageI.\".\".$strAddKeys.\".\".$strAction .\".\".$strSystemid.\".html\";\n\n                //params?\n                if(count($arrParams) > 0)\n                    $strHref .= \"?\".implode(\"&amp;\", $arrParams);\n\n                // add anchor if given\n                if($strAnchor != \"\")\n                    $strHref .= \"#\".$strAnchor;\n\n                //plus the domain as a prefix\n                $strHref = \"_webpath_\".\"/\".$strHref;\n\n\n                $bitRegularLink = false;\n\n            }\n\n            if($bitRegularLink)\n                $strHref = \"_indexpath_\".\"?\".\n                    ($strPageI != \"\" ? \"page=\".$strPageI : \"\" ).\"\".\n                    ($strSystemid != \"\" ? \"&amp;systemid=\".$strSystemid : \"\" ).\n                    ($strAction != \"\" ? \"&amp;action=\".$strAction : \"\").\n                    ($strLanguage != \"\" ? \"&amp;language=\".$strLanguage : \"\").\n                    (count($arrParams) > 0 ? \"&amp;\".implode(\"&amp;\", $arrParams) : \"\" ).\n                    ($strAnchor != \"\" ? \"#\".$strAnchor : \"\").\"\";\n        }\n        else {\n            $strHref = $strPageE;\n        }\n\n        $strReturn .= $strHref;\n\n        return $strReturn;\n    }\n\n    /**\n     * Generates a link opening in a popup in portal-area\n     *\n     * @param string $strPageI\n     * @param string $strPageE\n     * @param string $strAction\n     * @param string $strParams\n     * @param string $strSystemid\n     * @param string $strTitle\n     * @param int|string $intWidth\n     * @param int|string $intHeight\n     *\n     * @return string\n     */\n    public static function getLinkPortalPopup($strPageI, $strPageE, $strAction = \"\", $strParams = \"\", $strSystemid = \"\", $strTitle = \"\", $intWidth = \"500\", $intHeight = \"500\") {\n        $strLink = class_link::getLinkPortalHref($strPageI, $strPageE, $strAction, $strParams, $strSystemid);\n        $strLink = \"<a href=\\\"$strLink\\\" onclick=\\\"return !window.open('\".$strLink.\"','\".$strTitle.\"','scrollbars=yes,resizable=yes,width=\".$intWidth.\",height=\".$intHeight.\"')\\\" title=\\\"\".$strTitle.\"\\\">\".$strTitle.\"</a>\";\n        return $strLink;\n    }\n\n\n\n    /**\n     * Internal helper to transform the passed params string into an array.\n     * Extracts the systemid out of the string and updates the passed reference with the\n     * systemid.\n     *\n     * @param string $strParams\n     * @param string &$strSystemid\n     * @return array\n     */\n    private static function parseParamsString($strParams, &$strSystemid = \"\") {\n        $strParams = uniStrReplace(\"&amp;\", \"&\", $strParams);\n\n        //if given, remove first ampersand from params\n        if(substr($strParams, 0, 1) == \"&\")\n            $strParams = substr($strParams, 1);\n\n        $arrParams = explode(\"&\", $strParams);\n        foreach($arrParams as $strKey => &$strValue) {\n            $arrEntry = explode(\"=\", $strValue);\n\n            if(count($arrEntry) == 2 && $arrEntry[0] == \"systemid\") {\n                //encoded and sanitized systemid param TODO: add cve number or other identifier\n                $strSystemid = urlencode($arrEntry[1]);\n                if(!validateSystemid($strSystemid))\n                    $strSystemid = \"\";\n\n                unset($arrParams[$strKey]);\n            }\n            else if($strValue == \"\")\n                unset($arrParams[$strKey]);\n\n            if(count($arrEntry) == 2)\n                $arrEntry[1] = urlencode($arrEntry[1]);\n\n            $strValue = implode(\"=\", $arrEntry);\n        }\n\n        return $arrParams;\n    }\n\n    /**\n     * Helper to determin the number of portal languages only once.\n     * @return int\n     */\n    private static function getIntNumberOfPortalLanguages() {\n        if(self::$intNrOfPortalLanguages == null)\n            self::$intNrOfPortalLanguages = class_module_languages_language::getNumberOfLanguagesAvailable(true);\n\n        return self::$intNrOfPortalLanguages;\n    }\n\n\n    /**\n     * Helper to fetch the portal language\n     * @return null|string\n     */\n    private static function getStrPortalLanguage() {\n        if(self::$strPortalLanguage == null) {\n            $objLang = new class_module_languages_language();\n            self::$strPortalLanguage = $objLang->getStrPortalLanguage();\n        }\n\n        return self::$strPortalLanguage;\n    }\n\n\n}"], "filenames": ["module_system/system/class_link.php"], "buggy_code_start_loc": [350], "buggy_code_end_loc": [500], "fixing_code_start_loc": [350], "fixing_code_end_loc": [506], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in system/class_link.php in the System module (module_system) in Kajona before 4.5 allows remote attackers to inject arbitrary web script or HTML via the systemid parameter in a mediaFolder action to index.php.", "other": {"cve": {"id": "CVE-2014-4742", "sourceIdentifier": "cve@mitre.org", "published": "2014-07-09T14:55:04.247", "lastModified": "2014-07-10T14:05:00.237", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in system/class_link.php in the System module (module_system) in Kajona before 4.5 allows remote attackers to inject arbitrary web script or HTML via the systemid parameter in a mediaFolder action to index.php."}, {"lang": "es", "value": "Vulnerabilidad de XSS en system/class_link.php en el m\u00f3dulo System (module_system) en Kajona anterior a 4.5 permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s del par\u00e1metro systemid en una acci\u00f3n mediaFolder en index.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.4", "matchCriteriaId": "2DBDF7EA-55CC-4541-9A82-FCC8C75ECB85"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "AE6388BC-F077-4D3F-839D-33611EC25461"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "747EBA09-8276-4BFA-B832-04FD9AEE4F58"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "EE2C0E7E-3D1E-4206-84E2-D48ED54EDCC1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "A7BF706D-9ECB-4EE1-AF96-227CBE7FB906"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.3.0:*:*:*:*:*:*:*", "matchCriteriaId": "2B0F01B3-E14F-4D3D-9222-20F85CCF2905"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "48EBF205-450C-412C-8285-2A74C26EE74D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.4.0:*:*:*:*:*:*:*", "matchCriteriaId": "4C308CB9-A481-49F3-AED2-19F01BEE4688"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.4.1:*:*:*:*:*:*:*", "matchCriteriaId": "CCACF272-533E-4781-ACB1-0248563913ED"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:3.4.2:*:*:*:*:*:*:*", "matchCriteriaId": "7BDD4651-6A67-4BD0-B937-C0E34C1D5014"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:4.0:*:*:*:*:*:*:*", "matchCriteriaId": "540FB6A6-3B7E-4181-96E7-CBFE630845B9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:4.1:*:*:*:*:*:*:*", "matchCriteriaId": "1722EE1B-4A56-428A-A222-6B600D3F2ADB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:4.2:*:*:*:*:*:*:*", "matchCriteriaId": "8444FA4D-2138-402F-835E-DFF562F0062C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:kajona:kajona:4.3:*:*:*:*:*:*:*", "matchCriteriaId": "8B4CE679-AF09-4258-88BA-8095C7DB4A87"}]}]}], "references": [{"url": "http://www.kajona.de/en/Development/Changelog/Changelog-V4-5/changelog_45.html", "source": "cve@mitre.org"}, {"url": "https://github.com/kajona/kajonacms/commit/8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3", "source": "cve@mitre.org", "tags": ["Exploit", "Patch"]}, {"url": "https://www.netsparker.com/critical-xss-vulnerability-in-kajonacms", "source": "cve@mitre.org", "tags": ["Exploit"]}]}, "github_commit_url": "https://github.com/kajona/kajonacms/commit/8f1b18150cc2a8f27c96d9c4f94a81022fbb61e3"}}