{"buggy_code": ["<?php\r\n/*\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *\r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>. \r\n */\r\n\r\nrequire_once('../init.php');\r\n\r\n// Check if user is loggedin, if so no need to be here...\r\nif (LOGGEDIN == FALSE) { header('Location: ' . ROOT_URL . 'index.php'); }\r\n\r\n$error = array();\r\n$form_error = '';\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n    \r\n    // Check if number is given and if it is correct\r\n    if (empty($_POST['number'])) {\r\n        if (isset($_POST['color']) AND !empty($_POST['color'])) {\r\n            if ($_POST['color'] != 1) {\r\n                $error[] = 'Je hebt geen nummer opgegeven.';\r\n            }\r\n        } else {\r\n            $error[] = 'Je hebt geen nummer opgegeven.';\r\n        }\r\n    }\r\n    elseif ($_POST['number'] < 0 OR $_POST['number'] > 36) {\r\n        $error[] = 'Nummer wat er is ingegeven kan niet.';\r\n    }\r\n    \r\n    // check if gamble money has enterd and if the user has that money\r\n    if (!isset($_POST['gambleMoney']) OR empty($_POST['gambleMoney'])) {\r\n        $error[] = 'Je hebt geen inzet ingegeven.';\r\n    }\r\n    elseif(!ctype_digit($_POST['gambleMoney'])) {\r\n        $error[] = 'Je inzet is niet numeriek..';\r\n    } else {\r\n        $result = $dbCon->query('SELECT cash FROM users WHERE session_id = \"' . $userData['session_id'] . '\"');\r\n        $row = $result->fetch_assoc();\r\n        \r\n        if ($row['cash'] < $_POST['gambleMoney']) {\r\n            $error[] = 'Je inzet is hoger dan je nu in cash hebt.';\r\n        }\r\n    }\r\n    \r\n    // check if color is found\r\n    if (!isset($_POST['color']) OR empty($_POST['color'])) {\r\n        $error[] = 'Je hebt geen kleur ingegeven.';\r\n    }\r\n    elseif ($_POST['color'] < 0 OR $_POST['color'] > 3) {\r\n        $error[] = 'De kleur die er is opgegeven bestaat niet.';\r\n    }\r\n    \r\n    if (count($error) > 0) {\r\n        foreach ($error as $item) {\r\n            $form_error .= '- ' . $item . '<br />';\r\n        }\r\n        $tpl->assign('form_error', $form_error);\r\n    } else {\r\n        // We can play now\r\n        \r\n        $numberWon = rand(0,36);\r\n        \r\n        // Somone thought it would be fun that $_POST containing 0 is just empty...\r\n        if ($_POST['color'] == 1) {\r\n            $numberPlayer = 0;\r\n        } else {\r\n            $numberPlayer = $_POST['number'];\r\n        }\r\n\r\n        // user won\r\n        if ($numberWon == $numberPlayer) {\r\n            $dbCon->query('UPDATE users SET cash = (cash + \"' . (int) ($_POST['gambleMoney'] * 36) . '\") WHERE id = \"' . $userData['id'] . '\"');\r\n            $tpl->assign('success', 'Je hebt de roulette gewonnen je wint 36x je inzet!');\r\n        } else {\r\n            // user lost\r\n            $dbCon->query('UPDATE users SET cash = (cash - \"' . $_POST['gambleMoney'] . '\") WHERE id = \"' . $userData['id'] . '\"');\r\n            $tpl->assign('form_error', 'Helaas je hebt verloren, gelukkig heb je alleen je inzet verloren!');\r\n        }\r\n    }\r\n}\r\n\r\n$tpl->display('ingame/roulette.tpl');"], "fixing_code": ["<?php\r\n/*\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *\r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>. \r\n */\r\n\r\nrequire_once('../init.php');\r\n\r\n// Check if user is loggedin, if so no need to be here...\r\nif (LOGGEDIN == FALSE) { header('Location: ' . ROOT_URL . 'index.php'); }\r\n\r\n$error = array();\r\n$form_error = '';\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n    \r\n    // Check if number is given and if it is correct\r\n    if (empty($_POST['number'])) {\r\n        if (isset($_POST['color']) AND !empty($_POST['color'])) {\r\n            if ($_POST['color'] != 1) {\r\n                $error[] = 'Je hebt geen nummer opgegeven.';\r\n            }\r\n        } else {\r\n            $error[] = 'Je hebt geen nummer opgegeven.';\r\n        }\r\n    }\r\n    elseif ($_POST['number'] < 0 OR $_POST['number'] > 36) {\r\n        $error[] = 'Nummer wat er is ingegeven kan niet.';\r\n    }\r\n    \r\n    // check if gamble money has enterd and if the user has that money\r\n    if (!isset($_POST['gambleMoney']) OR empty($_POST['gambleMoney'])) {\r\n        $error[] = 'Je hebt geen inzet ingegeven.';\r\n    }\r\n    elseif(!ctype_digit($_POST['gambleMoney'])) {\r\n        $error[] = 'Je inzet is niet numeriek..';\r\n    } else {\r\n        $result = $dbCon->query('SELECT cash FROM users WHERE session_id = \"' . $userData['session_id'] . '\"');\r\n        $row = $result->fetch_assoc();\r\n        \r\n        if ($row['cash'] < $_POST['gambleMoney']) {\r\n            $error[] = 'Je inzet is hoger dan je nu in cash hebt.';\r\n        }\r\n    }\r\n    \r\n    // check if color is found\r\n    if (!isset($_POST['color']) OR empty($_POST['color'])) {\r\n        $error[] = 'Je hebt geen kleur ingegeven.';\r\n    }\r\n    elseif ($_POST['color'] < 0 OR $_POST['color'] > 3) {\r\n        $error[] = 'De kleur die er is opgegeven bestaat niet.';\r\n    }\r\n    \r\n    if (count($error) > 0) {\r\n        foreach ($error as $item) {\r\n            $form_error .= '- ' . $item . '<br />';\r\n        }\r\n        $tpl->assign('form_error', $form_error);\r\n    } else {\r\n        // We can play now\r\n        \r\n        $numberWon = rand(0,36);\r\n        \r\n        // Somone thought it would be fun that $_POST containing 0 is just empty...\r\n        if ($_POST['color'] == 1) {\r\n            $numberPlayer = 0;\r\n        } else {\r\n            $numberPlayer = $_POST['number'];\r\n        }\r\n\r\n        // user won\r\n        if ($numberWon == $numberPlayer) {\r\n            $dbCon->query('UPDATE users SET cash = (cash + \"' . (int) (addslashes($_POST['gambleMoney']) * 36) . '\") WHERE id = \"' . $userData['id'] . '\"');\r\n            $tpl->assign('success', 'Je hebt de roulette gewonnen je wint 36x je inzet!');\r\n        } else {\r\n            // user lost\r\n            $dbCon->query('UPDATE users SET cash = (cash - \"' . (int) addslashes($_POST['gambleMoney']) . '\") WHERE id = \"' . $userData['id'] . '\"');\r\n            $tpl->assign('form_error', 'Helaas je hebt verloren, gelukkig heb je alleen je inzet verloren!');\r\n        }\r\n    }\r\n}\r\n\r\n$tpl->display('ingame/roulette.tpl');"], "filenames": ["ingame/roulette.php"], "buggy_code_start_loc": [83], "buggy_code_end_loc": [88], "fixing_code_start_loc": [83], "fixing_code_end_loc": [88], "type": "CWE-89", "message": "A vulnerability was found in NoxxieNl Criminals. It has been classified as critical. Affected is an unknown function of the file ingame/roulette.php. The manipulation of the argument gambleMoney leads to sql injection. The name of the patch is 0a60b31271d4cbf8babe4be993d2a3a1617f0897. It is recommended to apply a patch to fix this issue. VDB-218022 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2014-125076", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-11T19:15:09.160", "lastModified": "2023-01-18T18:33:54.667", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in NoxxieNl Criminals. It has been classified as critical. Affected is an unknown function of the file ingame/roulette.php. The manipulation of the argument gambleMoney leads to sql injection. The name of the patch is 0a60b31271d4cbf8babe4be993d2a3a1617f0897. It is recommended to apply a patch to fix this issue. VDB-218022 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:criminals_project:criminals:-:*:*:*:*:*:*:*", "matchCriteriaId": "0F2945CD-A87D-4142-8394-7006146D928A"}]}]}], "references": [{"url": "https://github.com/NoxxieNl/Criminals/commit/0a60b31271d4cbf8babe4be993d2a3a1617f0897", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218022", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218022", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/NoxxieNl/Criminals/commit/0a60b31271d4cbf8babe4be993d2a3a1617f0897"}}