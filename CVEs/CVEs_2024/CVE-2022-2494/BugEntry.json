{"buggy_code": ["/**\n * View logic for Patient Data\n *\n * application logic specific to the Patient profile page\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2016-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\nvar page = {\n    patientData: new model.PatientCollection(),\n    collectionView: null,\n    patient: null,\n    portalpatient: null,\n    modelView: null,\n    isInitialized: false,\n    isInitializing: false,\n    fetchParams: {filter: '', orderBy: '', orderDesc: '', page: 1, patientId: cpid, lookupList: null},\n    fetchInProgress: false,\n    dialogIsOpen: false,\n    isEdited: false,\n\n    /**\n     *\n     */\n    init: function () {\n        // ensure initialization only occurs once\n        if (page.isInitialized || page.isInitializing) return;\n        page.isInitializing = true;\n        if (cuser < 1)\n            $('#savePatientButton').hide();\n\n        $(\"#donePatientButton\").hide();\n        $(\"#replaceAllButton\").hide();\n\n        if (!$.isReady && console) console.warn('page was initialized before dom is ready.  views may not render properly.');\n        // portal or audit\n        $(\"#formHelp\").click(function (e) {\n            e.preventDefault();\n            $('#profileHelp').toggle();\n        });\n\n        $(\"#savePatientButton\").click(function (e) {\n            e.preventDefault();\n            page.updateModel(1);\n        });\n        $(\"#donePatientButton\").click(function (e) {\n            e.preventDefault();\n            page.updateModel();\n        });\n        $(\"#replaceAllButton\").click(function (e) {\n            e.preventDefault();\n            page.revertAll();\n            $(\"#donePatientButton\").show();\n        });\n\n        // initialize the collection view\n        this.collectionView = new view.CollectionView({\n            el: $(\"#patientCollectionContainer\"),\n            templateEl: $(\"#patientCollectionTemplate\"),\n            collection: page.patientData\n        });\n\n        this.collectionView.on('rendered', function () {\n            if (!page.isInitialized) {\n                var m = page.patientData.first();\n                m = (m === undefined) ? \"\" : m;\n                if (m) {\n                    if (m.get('pid') < 1) {\n                        m = \"\";\n                    }\n                }\n                page.showDetailForm(m);\n            }\n            page.isInitialized = true;\n            page.isInitializing = false;\n        });\n\n        this.fetchPatientData({page: 1, patientId: cpid});\n\n        // initialize the model view\n        this.modelView = new view.ModelView({\n            el: $(\"#patientModelContainer\")\n        });\n\n        // tell the model view where it's template is located\n        this.modelView.templateEl = $(\"#patientModelTemplate\");\n\n        this.modelView.on('rendered', function () { // model rendered\n            $(function () {\n                $('.jquery-date-picker').datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datepicker_xlMonths,\n                            dayOfWeekShort: datepicker_xlDayofwkshort,\n                            dayOfWeek: datepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datepicker_yearStart,\n                    rtl: datepicker_rtl,\n                    format: datepicker_format,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: false\n                });\n                // listen for a submit request.\n                window.addEventListener(\"message\", (e) => {\n                    if (e.origin !== window.location.origin) {\n                        signerAlertMsg(\"Unauthorized! Request is not same origin!\", 15000);\n                        return false;\n                    }\n                    if (e.data.submitForm === true) {\n                        page.updateModel(1);\n                    }\n                });\n            });\n            // initialize any special controls\n            $(function () {\n                if (page.portalpatient) {\n                    if (page.portalpatient.get('pid')) {\n                        $(\"#replaceAllButton\").show();\n                        page.isEdited = true;\n                        $.each(page.portalpatient.attributes, function (key, value) {\n                            if (value != page.patient.get(key)) {\n                                if (($(\"input[name=\" + key + \"]\").attr('type') === 'radio' || $('#' + key).is('select')) && value == \"\") {\n                                    value = 'Unassigned';\n                                }\n                                $('#' + key + 'InputContainer span.help-inline').html(\n                                '<a class=\"editval text-primary\" onclick=\"page.toggleVal(this); return false;\" data-tstate=new data-id=\"'+key+'\">'+value+'</a>');\n                                $('#' + key + 'InputContainer span.help-inline').show();\n                            }\n                        });\n                    }\n                }\n                page.replaceAll();\n                $('form :input').on(\"change\", function () {\n                    $(\"#donePatientButton\").show();\n                    $('#savePatientButton').show();\n                });\n            });\n\n            $(\".controls .inline-inputs\").find(':input:checked').parent('.btn').addClass('active');\n\n            $(function () {\n                $('.jquery-date-time-picker').datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datetimepicker_xlMonths,\n                            dayOfWeekShort: datetimepicker_xlDayofwkshort,\n                            dayOfWeek: datetimepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datetimepicker_yearStart,\n                    rtl: datetimepicker_rtl,\n                    format: datetimepicker_format,\n                    step: datetimepicker_step,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: true\n                });\n                // hide excluded from view. from layout edit option 'Exclude in Portal'\n                if (typeof exclude !== 'undefined') {\n                    exclude.forEach(id => {\n                        let elHide = document.getElementById(id) ?? '';\n                        if (elHide) {\n                            elHide.style.display = \"none\";\n                        }\n                    });\n                }\n\n                $(\"#dob\").on('blur', function () {\n                    let bday = $(this).val() ?? '';\n                    let age = Math.round(Math.abs((new Date().getTime() - new Date(bday).getTime())));\n                    age = Math.round(age / 1000 / 60 / 60 / 24);\n                    // need to be at least 30 days old otherwise likely an error.\n                    if (age < 30) {\n                        let msg = xl(\"Invalid Date format or value! Type date as YYYY-MM-DD or use the calendar.\");\n                        $(this).val('');\n                        $(this).prop('placeholder', 'Invalid Date');\n                        alert(msg);\n                        return false;\n                    }\n                });\n\n                $(\"#ss\").on('blur', function () {\n                    let el = this;\n                    let numbers = el.value.replace(/[^0-9]/g, '');\n                    if (numbers.length === 9) {\n                        el.value = numbers.substr(0, 3) + '-' + numbers.substr(3, 2) + '-' + numbers.substr(5, 4);\n                    }\n                });\n            });\n            /* no idea why previous form inits were here! */\n            if (page.portalpatient) {\n                $('#note').val(_.escape(page.portalpatient.get('note')));\n            }\n\n            $(\"#dismissHelp\").click(function (e) {\n                e.preventDefault();\n                $('#profileHelp').toggle();\n            });\n            page.isInitialized = true;\n            page.isInitializing = false;\n        });\n    },\n    /**\n     * Replace field with edit\n     * @param element\n     */\n    replaceVal: function (el) {\n        var a = $(el).data('id');\n        if (!document.getElementById(a)) {\n\t\t\t$('input[name='+a+'][value=\"' +  _.escape(page.portalpatient.get(a)) + '\"'+']').prop('checked', true).closest('label').css({\"class\":\"text-primary\"});\n\t\t}\n\t\telse{\n            $('#' + a).prop('value', page.portalpatient.get(a))\n\t\t\t\t$('#'+a).css({\"class\":\"text-primary\",\"font-weight\":\"normal\"});\n        }\n        var v = _.escape(page.patient.get(a));\n        if (($(\"input[name=\" + a + \"]\").attr('type') == 'radio' || $('#' + a).is('select')) && v == \"\")\n            v = 'Unassigned';\n        $('#' + a + 'InputContainer span.help-inline').html('');\n\t\t$('#'+a+'InputContainer span.help-inline').html( '<a class=\"editval text-danger\" style=\"font-size: 16px\" onclick=\"page.revertVal(this); return false;\" data-tstate=chart data-id=\"'+a+'\">'+v+'</a>');\n        $('#' + a + 'InputContainer span.help-inline').show();\n    },\n    revertVal: function (el) {\n        var a = $(el).data('id');\n        if (!document.getElementById(a)) {\n\t\t\t$('input[name='+a+'][value=\"' +  _.escape(page.patient.get(a)) + '\"'+']').prop('checked', true).closest('label').css({\"class\":\"text-danger\"});\n\t\t}\n\t\telse{\n            $('#' + a).prop('value', page.patient.get(a))\n\t\t\t\t$('#'+a).css({\"class\":\"text-danger\",\"font-weight\":\"normal\"});\n        }\n        var v = _.escape(page.portalpatient.get(a));\n        if (($(\"input[name=\" + a + \"]\").attr('type') == 'radio' || $('#' + a).is('select')) && v == \"\")\n            v = 'Unassigned';\n        $('#' + a + 'InputContainer span.help-inline').html('');\n\t\t$('#'+a+'InputContainer span.help-inline').html( '<a class=\"editval text-primary\" style=\"font-size: 16px\" onclick=\"page.replaceVal(this); return false;\" data-tstate=\"new\" data-id=\"'+a+'\">'+v+'</a>');\n        $('#' + a + 'InputContainer span.help-inline').show();\n        if (!$(\"#donePatientButton\").is(\":visible\")) {\n            $(\"#donePatientButton\").show();\n        }\n        if (!$(\"#savePatientButton\").is(\":visible\")) {\n            $('#savePatientButton').show();\n        }\n    },\n\n    /**\n     * Replace all fields with edited ie mass replace\n     * @param none\n     */\n    replaceAll: function () {\n        $('.editval').each(function () {\n            page.replaceVal(this);\n        });\n    },\n    revertAll: function () {\n        $('.editval').each(function () {\n            page.revertVal(this);\n        });\n        $(\"#replaceAllButton\").hide();\n    },\n    /**\n     * Fetch the collection data from the server\n     * @param params\n     * @param hideLoader\n     */\n    fetchPatientData: function (params, hideLoader) {\n        // persist the params so that paging/sorting/filtering will play together nicely\n        page.fetchParams = params;\n\n        if (page.fetchInProgress) {\n            if (console) console.log('supressing fetch because it is already in progress');\n        }\n\n        page.fetchInProgress = true;\n\n        if (!hideLoader) app.showProgress('modelLoader');\n\n        page.patientData.fetch({\n            data: params,\n            success: function () {\n                if (page.patientData.collectionHasChanged) {\n                    // the sync event will trigger the view to re-render\n                }\n                app.hideProgress('modelLoader');\n                page.fetchInProgress = false;\n            },\n            error: function (m, r) {\n                app.appendAlert(app.getErrorMessage(r), 'alert-danger', 0, 'collectionAlert');\n                app.hideProgress('modelLoader');\n                page.fetchInProgress = false;\n            }\n        });\n    },\n\n    /**\n     * show the form for editing a model\n     * @param m\n     */\n    showDetailForm: function (m) {\n        page.patient = m ? m : new model.PatientModel();\n        page.modelView.model = page.patient;\n        if (page.patient.id == null || page.patient.id === '') {\n            page.renderModelView();\n            app.hideProgress('modelLoader');\n        } else {\n            app.showProgress('modelLoader');\n            page.patient.fetch({\n                data: {'patientId': cpid},\n                success: function () {\n                    var pm = page.portalpatient;\n                    page.getEditedPatient(pm)\n                },\n                error: function (m, r) {\n                    app.appendAlert(app.getErrorMessage(r), 'alert-danger', 0, 'modelAlert');\n                    app.hideProgress('modelLoader');\n                }\n            });\n        }\n    },\n    /**\n     * get edited from audit table if any\n     * @param m\n     */\n    getEditedPatient: function (m) {\n        page.portalpatient = m ? m : new model.PortalPatientModel();\n        page.portalpatient.set('id', page.patient.get('id'))\n        page.portalpatient.fetch({\n            data: {'patientId': cpid},\n            success: function () {\n                // audit profile data returned. render needs to be here due to chaining\n                page.renderModelView();\n                return true;\n            },\n            error: function (m, r) {\n                // still have to render live data even if no changes pending\n                page.renderModelView();\n                return false;\n            }\n        });\n    },\n    /**\n     * Render the model template in the popup\n     * @param bool show the delete button\n     */\n    renderModelView: function () {\n        page.modelView.render();\n        app.hideProgress('modelLoader');\n    },\n\n    /**\n     * update the model that is currently displayed in the dialog\n     */\n    updateModel: function (live = 0) {\n        // reset any previous errors\n        $('#modelAlert').html('');\n        $('.form-group').removeClass('error');\n        $('.help-inline').html('');\n\n        // if this is new then on success we need to add it to the collection\n        var isNew = page.patient.isNew();\n\n        app.showProgress('modelLoader');\n\n        if (live !== 1)\n            page.patient.urlRoot = 'api/portalpatient';\n\n        page.patient.save({\n            'title': $('select#title').val(),\n            'language': $('input#language').val(),\n            //'financial': $('input#financial').val(),\n            'fname': $('input#fname').val(),\n            'lname': $('input#lname').val(),\n            'mname': $('input#mname').val(),\n            'dob': $('input#dob').val(),\n            'street': $('input#street').val(),\n            'postalCode': $('input#postalCode').val(),\n            'city': $('input#city').val(),\n            'state': $('select#state').val(),\n            'countryCode': $('input#countryCode').val(),\n            'driversLicense': $('input#driversLicense').val(),\n            'ss': $('input#ss').val(),\n            'occupation': $('textarea#occupation').val(),\n            'phoneHome': $('input#phoneHome').val(),\n            'phoneBiz': $('input#phoneBiz').val(),\n            'phoneContact': $('input#phoneContact').val(),\n            'phoneCell': $('input#phoneCell').val(),\n            'pharmacyId': $('input#pharmacyId').val() || 0,\n            'status': $('select#status').val(),\n            'contactRelationship': $('input#contactRelationship').val(),\n            'date': $('input#date').val(),\n            'sex': $('select#sex').val(),\n            'referrer': $('input#referrer').val(),\n            'referrerid': $('input#referrerid').val(),\n            'providerid': $('select#providerid').val(),\n            'refProviderid': $('select#refProviderid').val() || 0,\n            'email': $('input#email').val(),\n            'emailDirect': $('input#emailDirect').val(),\n            'ethnoracial': $('input#ethnoracial').val(),\n            'race': $('select#race').val(),\n            'ethnicity': $('select#ethnicity').val(),\n            'religion': $('select#religion').val(),\n            //'interpretter': $('input#interpretter').val(),\n            //'migrantseasonal': $('input#migrantseasonal').val(),\n            'familySize': $('input#familySize').val(),\n            'monthlyIncome': $('input#monthlyIncome').val(),\n            //\t'billingNote': $('textarea#billingNote').val(),\n            //\t'homeless': $('input#homeless').val(),\n            //\t'financialReview': $('input#financialReview').val()+' '+$('input#financialReview-time').val(),\n            'pubpid': $('input#pubpid').val(),\n            'pid': $('input#pid').val(),\n            'hipaaMail': $('input[name=hipaaMail]:checked').val(),\n            'hipaaVoice': $('input[name=hipaaVoice]:checked').val(),\n            'hipaaNotice': $('input[name=hipaaNotice]:checked').val(),\n            'hipaaMessage': $('input#hipaaMessage').val(),\n            'hipaaAllowsms': $('input[name=hipaaAllowsms]:checked').val(),\n            'hipaaAllowemail': $('input[name=hipaaAllowemail]:checked').val(),\n            //'referralSource': $('select#referralSource').val(),\n            //'pricelevel': $('input#pricelevel').val(),\n            //'regdate': $('input#regdate').val(),\n            //'contrastart': $('input#contrastart').val(),\n            //'completedAd': $('input[name=completedAd]:checked').val(),\n            //'adReviewed': $('input#adReviewed').val(),\n            //'vfc': $('input#vfc').val(),\n            'mothersname': $('input#mothersname').val(),\n            'guardiansname': $('input#guardiansname').val(),\n            'allowImmRegUse': $('input[name=allowImmRegUse]:checked').val(),\n            'allowImmInfoShare': $('input[name=allowImmInfoShare]:checked').val(),\n            'allowHealthInfoEx': $('input[name=allowHealthInfoEx]:checked').val(),\n            'allowPatientPortal': $('input[name=allowPatientPortal]:checked').val(),\n            //'deceasedDate': $('input#deceasedDate').val()+' '+$('input#deceasedDate-time').val(),\n            //'deceasedReason': $('input#deceasedReason').val(),\n            //'soapImportStatus': $('input#soapImportStatus').val(),\n            //'cmsportalLogin': $('input#cmsportalLogin').val(),\n            'careTeam': $('select#careTeam').val() || 0,\n            'county': $('input#county').val(),\n            //'industry': $('textarea#industry').val(),\n            'note': $('textarea#note').val()\n        }, {\n            wait: true,\n            success: function () {\n                if (live !== 1) {\n                    setTimeout(\"app.appendAlert('Patient was successfully \" + (isNew ? \"inserted\" : \"updated\") + \"','alert-success',2000,'collectionAlert')\", 200);\n                    setTimeout(\"window.location.href ='\" + webRoot + \"/portal/home.php'\", 2500);\n                } else if (live === 1 && register !== '0') { // for testing\n                    //alert('Save Success');\n                } else {\n                    window.dlgCloseAjax();\n                }\n                app.hideProgress('modelLoader');\n                if (isNew) {\n                    page.renderModelView();\n                }\n                if (model.reloadCollectionOnModelUpdate) {\n                    // re-fetch and render the collection after the model has been updated\n                    //page.fetchPatientData(page.fetchParams,true);\n                }\n            },\n            error: function (model, response, scope) {\n                app.hideProgress('modelLoader');\n                app.appendAlert(app.getErrorMessage(response), 'alert-danger', 0, 'modelAlert');\n                try {\n                    var json = $.parseJSON(response.responseText);\n                    if (json.errors) {\n                        $.each(json.errors, function (key, value) {\n                            $('#' + key + 'InputContainer').addClass('error');\n                            $('#' + key + 'InputContainer span.help-inline').html(value);\n                            $('#' + key + 'InputContainer span.help-inline').show();\n                        });\n                    }\n                } catch (e2) {\n                    if (console) console.log('error parsing server response: ' + e2.message);\n                }\n            }\n        });\n\n    },\n\n    /**\n     * delete the model that is currently displayed in the dialog\n     */\n    deleteModel: function () {\n        // reset any previous errors\n        $('#modelAlert').html('');\n\n        app.showProgress('modelLoader');\n\n        page.patient.destroy({\n            wait: true,\n            success: function () {\n                $('#patientDetailDialog').modal('hide');\n                setTimeout(\"app.appendAlert('The Patient record was deleted','alert-success',3000,'collectionAlert')\", 500);\n                app.hideProgress('modelLoader');\n\n                if (model.reloadCollectionOnModelUpdate) {\n                    // re-fetch and render the collection after the model has been updated\n                    page.fetchPatientData(page.fetchParams, true);\n                }\n            },\n            error: function (model, response, scope) {\n                app.appendAlert(app.getErrorMessage(response), 'alert-danger', 0, 'modelAlert');\n                app.hideProgress('modelLoader');\n            }\n        });\n    }\n};\n"], "fixing_code": ["/**\n * View logic for Patient Data\n *\n * application logic specific to the Patient profile page\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2016-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\nvar page = {\n    patientData: new model.PatientCollection(),\n    collectionView: null,\n    patient: null,\n    portalpatient: null,\n    modelView: null,\n    isInitialized: false,\n    isInitializing: false,\n    fetchParams: {filter: '', orderBy: '', orderDesc: '', page: 1, patientId: cpid, lookupList: null},\n    fetchInProgress: false,\n    dialogIsOpen: false,\n    isEdited: false,\n\n    /**\n     *\n     */\n    init: function () {\n        // ensure initialization only occurs once\n        if (page.isInitialized || page.isInitializing) return;\n        page.isInitializing = true;\n        if (cuser < 1)\n            $('#savePatientButton').hide();\n\n        $(\"#donePatientButton\").hide();\n        $(\"#replaceAllButton\").hide();\n\n        if (!$.isReady && console) console.warn('page was initialized before dom is ready.  views may not render properly.');\n        // portal or audit\n        $(\"#formHelp\").click(function (e) {\n            e.preventDefault();\n            $('#profileHelp').toggle();\n        });\n\n        $(\"#savePatientButton\").click(function (e) {\n            e.preventDefault();\n            page.updateModel(1);\n        });\n        $(\"#donePatientButton\").click(function (e) {\n            e.preventDefault();\n            page.updateModel();\n        });\n        $(\"#replaceAllButton\").click(function (e) {\n            e.preventDefault();\n            page.revertAll();\n            $(\"#donePatientButton\").show();\n        });\n\n        // initialize the collection view\n        this.collectionView = new view.CollectionView({\n            el: $(\"#patientCollectionContainer\"),\n            templateEl: $(\"#patientCollectionTemplate\"),\n            collection: page.patientData\n        });\n\n        this.collectionView.on('rendered', function () {\n            if (!page.isInitialized) {\n                var m = page.patientData.first();\n                m = (m === undefined) ? \"\" : m;\n                if (m) {\n                    if (m.get('pid') < 1) {\n                        m = \"\";\n                    }\n                }\n                page.showDetailForm(m);\n            }\n            page.isInitialized = true;\n            page.isInitializing = false;\n        });\n\n        this.fetchPatientData({page: 1, patientId: cpid});\n\n        // initialize the model view\n        this.modelView = new view.ModelView({\n            el: $(\"#patientModelContainer\")\n        });\n\n        // tell the model view where it's template is located\n        this.modelView.templateEl = $(\"#patientModelTemplate\");\n\n        this.modelView.on('rendered', function () { // model rendered\n            $(function () {\n                $('.jquery-date-picker').datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datepicker_xlMonths,\n                            dayOfWeekShort: datepicker_xlDayofwkshort,\n                            dayOfWeek: datepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datepicker_yearStart,\n                    rtl: datepicker_rtl,\n                    format: datepicker_format,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: false\n                });\n                // listen for a submit request.\n                window.addEventListener(\"message\", (e) => {\n                    if (e.origin !== window.location.origin) {\n                        signerAlertMsg(\"Unauthorized! Request is not same origin!\", 15000);\n                        return false;\n                    }\n                    if (e.data.submitForm === true) {\n                        page.updateModel(1);\n                    }\n                });\n            });\n            // initialize any special controls\n            $(function () {\n                if (page.portalpatient) {\n                    if (page.portalpatient.get('pid')) {\n                        $(\"#replaceAllButton\").show();\n                        page.isEdited = true;\n                        $.each(page.portalpatient.attributes, function (key, value) {\n                            if (value != page.patient.get(key)) {\n                                if (($(\"input[name=\" + key + \"]\").attr('type') === 'radio' || $('#' + key).is('select')) && value == \"\") {\n                                    value = 'Unassigned';\n                                }\n                                $('#' + key + 'InputContainer span.help-inline').html(\n                                '<a class=\"editval text-primary\" onclick=\"page.toggleVal(this); return false;\" data-tstate=new data-id=\"' + _.escape(key) + '\">' + _.escape(value) + '</a>');\n                                $('#' + key + 'InputContainer span.help-inline').show();\n                            }\n                        });\n                    }\n                }\n                page.replaceAll();\n                $('form :input').on(\"change\", function () {\n                    $(\"#donePatientButton\").show();\n                    $('#savePatientButton').show();\n                });\n            });\n\n            $(\".controls .inline-inputs\").find(':input:checked').parent('.btn').addClass('active');\n\n            $(function () {\n                $('.jquery-date-time-picker').datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datetimepicker_xlMonths,\n                            dayOfWeekShort: datetimepicker_xlDayofwkshort,\n                            dayOfWeek: datetimepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datetimepicker_yearStart,\n                    rtl: datetimepicker_rtl,\n                    format: datetimepicker_format,\n                    step: datetimepicker_step,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: true\n                });\n                // hide excluded from view. from layout edit option 'Exclude in Portal'\n                if (typeof exclude !== 'undefined') {\n                    exclude.forEach(id => {\n                        let elHide = document.getElementById(id) ?? '';\n                        if (elHide) {\n                            elHide.style.display = \"none\";\n                        }\n                    });\n                }\n\n                $(\"#dob\").on('blur', function () {\n                    let bday = $(this).val() ?? '';\n                    let age = Math.round(Math.abs((new Date().getTime() - new Date(bday).getTime())));\n                    age = Math.round(age / 1000 / 60 / 60 / 24);\n                    // need to be at least 30 days old otherwise likely an error.\n                    if (age < 30) {\n                        let msg = xl(\"Invalid Date format or value! Type date as YYYY-MM-DD or use the calendar.\");\n                        $(this).val('');\n                        $(this).prop('placeholder', 'Invalid Date');\n                        alert(msg);\n                        return false;\n                    }\n                });\n\n                $(\"#ss\").on('blur', function () {\n                    let el = this;\n                    let numbers = el.value.replace(/[^0-9]/g, '');\n                    if (numbers.length === 9) {\n                        el.value = numbers.substr(0, 3) + '-' + numbers.substr(3, 2) + '-' + numbers.substr(5, 4);\n                    }\n                });\n            });\n            /* no idea why previous form inits were here! */\n            if (page.portalpatient) {\n                $('#note').val(_.escape(page.portalpatient.get('note')));\n            }\n\n            $(\"#dismissHelp\").click(function (e) {\n                e.preventDefault();\n                $('#profileHelp').toggle();\n            });\n            page.isInitialized = true;\n            page.isInitializing = false;\n        });\n    },\n    /**\n     * Replace field with edit\n     * @param element\n     */\n    replaceVal: function (el) {\n        var a = $(el).data('id');\n        if (!document.getElementById(a)) {\n\t\t\t$('input[name='+a+'][value=\"' +  _.escape(page.portalpatient.get(a)) + '\"'+']').prop('checked', true).closest('label').css({\"class\":\"text-primary\"});\n\t\t}\n\t\telse{\n            $('#' + a).prop('value', page.portalpatient.get(a))\n\t\t\t\t$('#'+a).css({\"class\":\"text-primary\",\"font-weight\":\"normal\"});\n        }\n        var v = _.escape(page.patient.get(a));\n        if (($(\"input[name=\" + a + \"]\").attr('type') == 'radio' || $('#' + a).is('select')) && v == \"\")\n            v = 'Unassigned';\n        $('#' + a + 'InputContainer span.help-inline').html('');\n\t\t$('#'+a+'InputContainer span.help-inline').html( '<a class=\"editval text-danger\" style=\"font-size: 16px\" onclick=\"page.revertVal(this); return false;\" data-tstate=chart data-id=\"'+a+'\">'+v+'</a>');\n        $('#' + a + 'InputContainer span.help-inline').show();\n    },\n    revertVal: function (el) {\n        var a = $(el).data('id');\n        if (!document.getElementById(a)) {\n\t\t\t$('input[name='+a+'][value=\"' +  _.escape(page.patient.get(a)) + '\"'+']').prop('checked', true).closest('label').css({\"class\":\"text-danger\"});\n\t\t}\n\t\telse{\n            $('#' + a).prop('value', page.patient.get(a))\n\t\t\t\t$('#'+a).css({\"class\":\"text-danger\",\"font-weight\":\"normal\"});\n        }\n        var v = _.escape(page.portalpatient.get(a));\n        if (($(\"input[name=\" + a + \"]\").attr('type') == 'radio' || $('#' + a).is('select')) && v == \"\")\n            v = 'Unassigned';\n        $('#' + a + 'InputContainer span.help-inline').html('');\n\t\t$('#'+a+'InputContainer span.help-inline').html( '<a class=\"editval text-primary\" style=\"font-size: 16px\" onclick=\"page.replaceVal(this); return false;\" data-tstate=\"new\" data-id=\"'+a+'\">'+v+'</a>');\n        $('#' + a + 'InputContainer span.help-inline').show();\n        if (!$(\"#donePatientButton\").is(\":visible\")) {\n            $(\"#donePatientButton\").show();\n        }\n        if (!$(\"#savePatientButton\").is(\":visible\")) {\n            $('#savePatientButton').show();\n        }\n    },\n\n    /**\n     * Replace all fields with edited ie mass replace\n     * @param none\n     */\n    replaceAll: function () {\n        $('.editval').each(function () {\n            page.replaceVal(this);\n        });\n    },\n    revertAll: function () {\n        $('.editval').each(function () {\n            page.revertVal(this);\n        });\n        $(\"#replaceAllButton\").hide();\n    },\n    /**\n     * Fetch the collection data from the server\n     * @param params\n     * @param hideLoader\n     */\n    fetchPatientData: function (params, hideLoader) {\n        // persist the params so that paging/sorting/filtering will play together nicely\n        page.fetchParams = params;\n\n        if (page.fetchInProgress) {\n            if (console) console.log('supressing fetch because it is already in progress');\n        }\n\n        page.fetchInProgress = true;\n\n        if (!hideLoader) app.showProgress('modelLoader');\n\n        page.patientData.fetch({\n            data: params,\n            success: function () {\n                if (page.patientData.collectionHasChanged) {\n                    // the sync event will trigger the view to re-render\n                }\n                app.hideProgress('modelLoader');\n                page.fetchInProgress = false;\n            },\n            error: function (m, r) {\n                app.appendAlert(app.getErrorMessage(r), 'alert-danger', 0, 'collectionAlert');\n                app.hideProgress('modelLoader');\n                page.fetchInProgress = false;\n            }\n        });\n    },\n\n    /**\n     * show the form for editing a model\n     * @param m\n     */\n    showDetailForm: function (m) {\n        page.patient = m ? m : new model.PatientModel();\n        page.modelView.model = page.patient;\n        if (page.patient.id == null || page.patient.id === '') {\n            page.renderModelView();\n            app.hideProgress('modelLoader');\n        } else {\n            app.showProgress('modelLoader');\n            page.patient.fetch({\n                data: {'patientId': cpid},\n                success: function () {\n                    var pm = page.portalpatient;\n                    page.getEditedPatient(pm)\n                },\n                error: function (m, r) {\n                    app.appendAlert(app.getErrorMessage(r), 'alert-danger', 0, 'modelAlert');\n                    app.hideProgress('modelLoader');\n                }\n            });\n        }\n    },\n    /**\n     * get edited from audit table if any\n     * @param m\n     */\n    getEditedPatient: function (m) {\n        page.portalpatient = m ? m : new model.PortalPatientModel();\n        page.portalpatient.set('id', page.patient.get('id'))\n        page.portalpatient.fetch({\n            data: {'patientId': cpid},\n            success: function () {\n                // audit profile data returned. render needs to be here due to chaining\n                page.renderModelView();\n                return true;\n            },\n            error: function (m, r) {\n                // still have to render live data even if no changes pending\n                page.renderModelView();\n                return false;\n            }\n        });\n    },\n    /**\n     * Render the model template in the popup\n     * @param bool show the delete button\n     */\n    renderModelView: function () {\n        page.modelView.render();\n        app.hideProgress('modelLoader');\n    },\n\n    /**\n     * update the model that is currently displayed in the dialog\n     */\n    updateModel: function (live = 0) {\n        // reset any previous errors\n        $('#modelAlert').html('');\n        $('.form-group').removeClass('error');\n        $('.help-inline').html('');\n\n        // if this is new then on success we need to add it to the collection\n        var isNew = page.patient.isNew();\n\n        app.showProgress('modelLoader');\n\n        if (live !== 1)\n            page.patient.urlRoot = 'api/portalpatient';\n\n        page.patient.save({\n            'title': $('select#title').val(),\n            'language': $('input#language').val(),\n            //'financial': $('input#financial').val(),\n            'fname': $('input#fname').val(),\n            'lname': $('input#lname').val(),\n            'mname': $('input#mname').val(),\n            'dob': $('input#dob').val(),\n            'street': $('input#street').val(),\n            'postalCode': $('input#postalCode').val(),\n            'city': $('input#city').val(),\n            'state': $('select#state').val(),\n            'countryCode': $('input#countryCode').val(),\n            'driversLicense': $('input#driversLicense').val(),\n            'ss': $('input#ss').val(),\n            'occupation': $('textarea#occupation').val(),\n            'phoneHome': $('input#phoneHome').val(),\n            'phoneBiz': $('input#phoneBiz').val(),\n            'phoneContact': $('input#phoneContact').val(),\n            'phoneCell': $('input#phoneCell').val(),\n            'pharmacyId': $('input#pharmacyId').val() || 0,\n            'status': $('select#status').val(),\n            'contactRelationship': $('input#contactRelationship').val(),\n            'date': $('input#date').val(),\n            'sex': $('select#sex').val(),\n            'referrer': $('input#referrer').val(),\n            'referrerid': $('input#referrerid').val(),\n            'providerid': $('select#providerid').val(),\n            'refProviderid': $('select#refProviderid').val() || 0,\n            'email': $('input#email').val(),\n            'emailDirect': $('input#emailDirect').val(),\n            'ethnoracial': $('input#ethnoracial').val(),\n            'race': $('select#race').val(),\n            'ethnicity': $('select#ethnicity').val(),\n            'religion': $('select#religion').val(),\n            //'interpretter': $('input#interpretter').val(),\n            //'migrantseasonal': $('input#migrantseasonal').val(),\n            'familySize': $('input#familySize').val(),\n            'monthlyIncome': $('input#monthlyIncome').val(),\n            //\t'billingNote': $('textarea#billingNote').val(),\n            //\t'homeless': $('input#homeless').val(),\n            //\t'financialReview': $('input#financialReview').val()+' '+$('input#financialReview-time').val(),\n            'pubpid': $('input#pubpid').val(),\n            'pid': $('input#pid').val(),\n            'hipaaMail': $('input[name=hipaaMail]:checked').val(),\n            'hipaaVoice': $('input[name=hipaaVoice]:checked').val(),\n            'hipaaNotice': $('input[name=hipaaNotice]:checked').val(),\n            'hipaaMessage': $('input#hipaaMessage').val(),\n            'hipaaAllowsms': $('input[name=hipaaAllowsms]:checked').val(),\n            'hipaaAllowemail': $('input[name=hipaaAllowemail]:checked').val(),\n            //'referralSource': $('select#referralSource').val(),\n            //'pricelevel': $('input#pricelevel').val(),\n            //'regdate': $('input#regdate').val(),\n            //'contrastart': $('input#contrastart').val(),\n            //'completedAd': $('input[name=completedAd]:checked').val(),\n            //'adReviewed': $('input#adReviewed').val(),\n            //'vfc': $('input#vfc').val(),\n            'mothersname': $('input#mothersname').val(),\n            'guardiansname': $('input#guardiansname').val(),\n            'allowImmRegUse': $('input[name=allowImmRegUse]:checked').val(),\n            'allowImmInfoShare': $('input[name=allowImmInfoShare]:checked').val(),\n            'allowHealthInfoEx': $('input[name=allowHealthInfoEx]:checked').val(),\n            'allowPatientPortal': $('input[name=allowPatientPortal]:checked').val(),\n            //'deceasedDate': $('input#deceasedDate').val()+' '+$('input#deceasedDate-time').val(),\n            //'deceasedReason': $('input#deceasedReason').val(),\n            //'soapImportStatus': $('input#soapImportStatus').val(),\n            //'cmsportalLogin': $('input#cmsportalLogin').val(),\n            'careTeam': $('select#careTeam').val() || 0,\n            'county': $('input#county').val(),\n            //'industry': $('textarea#industry').val(),\n            'note': $('textarea#note').val()\n        }, {\n            wait: true,\n            success: function () {\n                if (live !== 1) {\n                    setTimeout(\"app.appendAlert('Patient was successfully \" + (isNew ? \"inserted\" : \"updated\") + \"','alert-success',2000,'collectionAlert')\", 200);\n                    setTimeout(\"window.location.href ='\" + webRoot + \"/portal/home.php'\", 2500);\n                } else if (live === 1 && register !== '0') { // for testing\n                    //alert('Save Success');\n                } else {\n                    window.dlgCloseAjax();\n                }\n                app.hideProgress('modelLoader');\n                if (isNew) {\n                    page.renderModelView();\n                }\n                if (model.reloadCollectionOnModelUpdate) {\n                    // re-fetch and render the collection after the model has been updated\n                    //page.fetchPatientData(page.fetchParams,true);\n                }\n            },\n            error: function (model, response, scope) {\n                app.hideProgress('modelLoader');\n                app.appendAlert(app.getErrorMessage(response), 'alert-danger', 0, 'modelAlert');\n                try {\n                    var json = $.parseJSON(response.responseText);\n                    if (json.errors) {\n                        $.each(json.errors, function (key, value) {\n                            $('#' + key + 'InputContainer').addClass('error');\n                            $('#' + key + 'InputContainer span.help-inline').html(value);\n                            $('#' + key + 'InputContainer span.help-inline').show();\n                        });\n                    }\n                } catch (e2) {\n                    if (console) console.log('error parsing server response: ' + e2.message);\n                }\n            }\n        });\n\n    },\n\n    /**\n     * delete the model that is currently displayed in the dialog\n     */\n    deleteModel: function () {\n        // reset any previous errors\n        $('#modelAlert').html('');\n\n        app.showProgress('modelLoader');\n\n        page.patient.destroy({\n            wait: true,\n            success: function () {\n                $('#patientDetailDialog').modal('hide');\n                setTimeout(\"app.appendAlert('The Patient record was deleted','alert-success',3000,'collectionAlert')\", 500);\n                app.hideProgress('modelLoader');\n\n                if (model.reloadCollectionOnModelUpdate) {\n                    // re-fetch and render the collection after the model has been updated\n                    page.fetchPatientData(page.fetchParams, true);\n                }\n            },\n            error: function (model, response, scope) {\n                app.appendAlert(app.getErrorMessage(response), 'alert-danger', 0, 'modelAlert');\n                app.hideProgress('modelLoader');\n            }\n        });\n    }\n};\n"], "filenames": ["portal/patient/scripts/app/patientdata.js"], "buggy_code_start_loc": [131], "buggy_code_end_loc": [132], "fixing_code_start_loc": [131], "fixing_code_end_loc": [132], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository openemr/openemr prior to 7.0.0.", "other": {"cve": {"id": "CVE-2022-2494", "sourceIdentifier": "security@huntr.dev", "published": "2022-07-22T04:15:13.857", "lastModified": "2022-07-26T14:32:25.057", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository openemr/openemr prior to 7.0.0."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en el repositorio de GitHub openemr/openemr versiones anteriores a 7.0.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.0", "matchCriteriaId": "5398C0C8-ED2E-4F1C-96CD-F59E3097BD9D"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/152e551208e6de534ab194c87e9ffa4d56d294a8", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/74ddb017-c1fd-4e72-bd30-3b2033911472", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/152e551208e6de534ab194c87e9ffa4d56d294a8"}}