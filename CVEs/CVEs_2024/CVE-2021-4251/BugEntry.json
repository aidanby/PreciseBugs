{"buggy_code": ["<?php\n//always make sure we have a scriptNest variable (can be used to change default path for non-pathed modules\nif(!isset($scriptNest)) {\n\t$scriptNest = '';\n}\n?>\n\n<script>\n    if (typeof console === \"undefined\") {\n        console = {};\n        if(typeof console.log === \"undefined\") {\n            console.log = function() {};\n        }\n    }\n\n    window.AS_APP = '<?php echo AS_APP; ?>';\n\n    function getFullURL() {\n        return '<?php echo trim( getFullURL(), '/'); ?>';\n    }\n\n    function getBaseURL() {\n        return '<?php echo getBaseURL(); ?>';\n    }\n\n    function getThemeURL() {\n        return '<?php echo getThemeURL(); ?>';\n    }\n\n    function getCdnURL() {\n        return '<?php echo $_SESSION[AS_APP]['environment']['cdn']; ?>';\n    }\n\n\t<?php if($_SESSION[AS_APP]['localtesting']) { ?>\n    $_SESSION = <?php echo json_encode($_SESSION); ?>;\n\t<?php } ?>\n</script>\n\n<script src=\"<?php echo $_SESSION[AS_APP]['environment']['cdn']; ?>/require.js\"></script>\n\n<script>\n    //configure require js\n    requirejs.config({\n\t\t<?php //By default load any module IDs from js/lib ?>\n        baseUrl: getBaseURL()+'/script<?php echo $scriptNest; ?>',\n        paths: {\n\n            async: getCdnURL()+'/requirejs/async',\n            goog: getCdnURL()+'/requirejs/goog',\n            domReady: getCdnURL()+'/requirejs/domReady',\n\n            jquery: getCdnURL()+'/node_modules/jquery/dist/jquery.min',\n            jQuery: getCdnURL()+'/node_modules/jquery/dist/jquery.min',\n\n            moment: getCdnURL()+'/node_modules/moment/min/moment.min',\n\n            'es6-promise': getCdnURL()+'/node_modules/es6-promise/dist/es6-promise.min',\n            axios: getCdnURL()+'/node_modules/axios/dist/axios.min',\n\n\t        <?php if($_SESSION[AS_APP]['localtesting']) { ?>\n                vue: getCdnURL()+'/node_modules/vue/dist/vue',\n            <?php } else { ?>\n                vue: getCdnURL()+'/node_modules/vue/dist/vue.min',\n            <?php } ?>\n\n            semanticui: getBaseURL()+\"/dcfront/script/rlibs/plugins/sa/semanticui/semantic.min\",\n\n            script: getBaseURL()+'/script',\n\n            cdn: getCdnURL()\n        }\n    });\n\n\t<?php foreach($requireJSModules as $module) { ?>\n    requirejs(['<?php echo $module; ?>'], function( a ) {\n        if(typeof(a)=='function') {\n            a();\n        }\n    });\n\t<?php } ?>\n</script>"], "fixing_code": ["<?php\n//always make sure we have a scriptNest variable (can be used to change default path for non-pathed modules\nif(!isset($scriptNest)) {\n\t$scriptNest = '';\n}\n?>\n\n<script>\n    if (typeof console === \"undefined\") {\n        console = {};\n        if(typeof console.log === \"undefined\") {\n            console.log = function() {};\n        }\n    }\n\n    window.AS_APP = '<?php echo AS_APP; ?>';\n\n    function getFullURL() {\n        return '<?php echo trim( htmlspecialchars( getFullURL(), ENT_QUOTES ), '/'); ?>';\n    }\n\n    function getBaseURL() {\n        return '<?php echo getBaseURL(); ?>';\n    }\n\n    function getThemeURL() {\n        return '<?php echo getThemeURL(); ?>';\n    }\n\n    function getCdnURL() {\n        return '<?php echo $_SESSION[AS_APP]['environment']['cdn']; ?>';\n    }\n\n\t<?php if($_SESSION[AS_APP]['localtesting']) { ?>\n    $_SESSION = <?php echo json_encode($_SESSION); ?>;\n\t<?php } ?>\n</script>\n\n<script src=\"<?php echo $_SESSION[AS_APP]['environment']['cdn']; ?>/require.js\"></script>\n\n<script>\n    //configure require js\n    requirejs.config({\n\t\t<?php //By default load any module IDs from js/lib ?>\n        baseUrl: getBaseURL()+'/script<?php echo $scriptNest; ?>',\n        paths: {\n\n            async: getCdnURL()+'/requirejs/async',\n            goog: getCdnURL()+'/requirejs/goog',\n            domReady: getCdnURL()+'/requirejs/domReady',\n\n            jquery: getCdnURL()+'/node_modules/jquery/dist/jquery.min',\n            jQuery: getCdnURL()+'/node_modules/jquery/dist/jquery.min',\n\n            moment: getCdnURL()+'/node_modules/moment/min/moment.min',\n\n            'es6-promise': getCdnURL()+'/node_modules/es6-promise/dist/es6-promise.min',\n            axios: getCdnURL()+'/node_modules/axios/dist/axios.min',\n\n\t        <?php if($_SESSION[AS_APP]['localtesting']) { ?>\n                vue: getCdnURL()+'/node_modules/vue/dist/vue',\n            <?php } else { ?>\n                vue: getCdnURL()+'/node_modules/vue/dist/vue.min',\n            <?php } ?>\n\n            semanticui: getBaseURL()+\"/dcfront/script/rlibs/plugins/sa/semanticui/semantic.min\",\n\n            script: getBaseURL()+'/script',\n\n            cdn: getCdnURL()\n        }\n    });\n\n\t<?php foreach($requireJSModules as $module) { ?>\n    requirejs(['<?php echo $module; ?>'], function( a ) {\n        if(typeof(a)=='function') {\n            a();\n        }\n    });\n\t<?php } ?>\n</script>"], "filenames": ["include.cdn.php"], "buggy_code_start_loc": [19], "buggy_code_end_loc": [20], "fixing_code_start_loc": [19], "fixing_code_end_loc": [20], "type": "CWE-707", "message": "A vulnerability classified as problematic was found in as. This vulnerability affects the function getFullURL of the file include.cdn.php. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is 4acad1e3d2c34c017473ceea442fb3e3e078b2bd. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216208.", "other": {"cve": {"id": "CVE-2021-4251", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-18T22:15:10.167", "lastModified": "2022-12-22T19:14:47.833", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in as. This vulnerability affects the function getFullURL of the file include.cdn.php. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is 4acad1e3d2c34c017473ceea442fb3e3e078b2bd. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216208."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:as_project:as:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-11-03", "matchCriteriaId": "F248945C-5520-4F03-9245-2DA75C60C18A"}]}]}], "references": [{"url": "https://github.com/andrewsauder/as/commit/4acad1e3d2c34c017473ceea442fb3e3e078b2bd", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216208", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/andrewsauder/as/commit/4acad1e3d2c34c017473ceea442fb3e3e078b2bd"}}