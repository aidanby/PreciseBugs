{"buggy_code": ["![Rdiffweb Banner](https://gitlab.com/ikus-soft/rdiffweb/-/raw/master/doc/_static/banner.png)\n\n<p align=\"center\">\n<strong>\n<a href=\"https://www.rdiffweb.org\">website</a>\n\u2022 <a href=\"https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/\">docs</a>\n\u2022 <a href=\"https://groups.google.com/d/forum/rdiffweb\">community</a>\n\u2022 <a href=\"https://rdiffweb-demo.ikus-soft.com/\">demo</a>\n</strong>\n</p>\n\n<p align=\"center\">\n<a href=\"LICENSE\"><img alt=\"License\" src=\"https://img.shields.io/github/license/ikus060/rdiffweb\"></a>\n<a href=\"https://gitlab.com/ikus-soft/rdiffweb/pipelines\"><img alt=\"Build\" src=\"https://gitlab.com/ikus-soft/rdiffweb/badges/master/pipeline.svg\"></a>\n<a href=\"https://sonar.ikus-soft.com/dashboard?id=rdiffweb\"><img alt=\"Quality Gate Minarca Client\" src=\"https://sonar.ikus-soft.com/api/project_badges/measure?project=rdiffweb&metric=alert_status\"></a>\n<a href=\"https://sonar.ikus-soft.com/dashboard?id=rdiffweb\"><img alt=\"Coverage\" src=\"https://sonar.ikus-soft.com/api/project_badges/measure?project=rdiffweb&metric=coverage\"></a>\n<a href=\"https://bestpractices.coreinfrastructure.org/projects/6583\"><img src=\"https://bestpractices.coreinfrastructure.org/projects/6583/badge\"></a>\n</p>\n\n<h1 align=\"center\">\nWelcome to Rdiffweb\n</h1>\n\nRdiffweb is a web application that allows you to view repositories generated\nby [rdiff-backup](https://rdiff-backup.net/). The purpose of this\napplication is to ease the management of backups and quickly restore your data\nwith a rich and powerful web interface.\n\nRdiffweb is written in Python and is released as open source project under the \nGNU GENERAL PUBLIC LICENSE (GPL). All source code and documentation are\nCopyright Rdiffweb contributors.\n\nRdiffweb is actively developed by [IKUS Soft](https://www.ikus-soft.com/)\nsince November 2014.\n\nThe Rdiffweb source code is hosted on [Gitlab](https://gitlab.com/ikus-soft/rdiffweb)\nand mirrored to [Github](https://github.com/ikus060/rdiffweb).\n\nThe Rdiffweb website is https://rdiffweb.org/.\n\n## Features\n\nWith its rich web interface Rdiffweb provide a notable list of features:\n\n* Browse your backup\n* Restore single file or multiple files as an archived\n* Users authentication via local database and LDAP\n* Users authorization\n* Email notification when backup is not successful\n* Configurable repository encoding\n* Configurable retention period\n* Backup statistics visualization using graphs\n* SSH Keys management\n* Disk quota visualization\n* File and folder deletion\n\n## Demo\n\nIf you quickly want to check how Rdiffweb is behaving, you may try our demo server hosted on:\n\n[https://rdiffweb-demo.ikus-soft.com/](https://rdiffweb-demo.ikus-soft.com/)\n\nUse the following credential to login:\n\n* Username: admin\n* Password: admin123\n\n## Installation & Docker usage\n\nFor detailed installation steps, read the [Installation documentation](https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/installation.html).\n\n## Current Build Status\n\n[![Build Status](https://gitlab.com/ikus-soft/rdiffweb/badges/master/pipeline.svg)](https://gitlab.com/ikus-soft/rdiffweb/pipelines)\n\n## Download\n\nYou should read the [Documentation](https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/index.html) to properly install Rdiffweb in your environment.\n\n**Docker**\n\n    docker pull ikus060/rdiffweb\n\n**Debian**\n\n    curl -L https://www.ikus-soft.com/archive/rdiffweb/public.key | apt-key add - \n    echo \"deb https://nexus.ikus-soft.com/repository/apt-release-bullseye/ bullseye main\" > /etc/apt/sources.list.d/rdiffweb.list\n    apt update\n    apt install rdiffweb\n\n**Pypi**\n\n    pip install rdiffweb\n\n## Support\n\n### Mailing list\n\nRdiffweb users should use the [Rdiffweb mailing list](https://groups.google.com/forum/#!forum/rdiffweb).\n\n### Bug Reports\n\nBug reports should be reported on the Rdiffweb Gitlab at https://gitlab.com/ikus-soft/rdiffweb/-/issues\n\n### Professional support\n\nProfessional support for Rdiffweb is available by contacting [IKUS Soft](https://www.ikus-soft.com/en/support/#form).\n\n# Changelog\n\n## Next Release - 2.5.5\n\n* Fix loading of Charts in Status page\n* Ensure Gmail and other mail client doesn't create hyperlink automatically for any nodification sent by Rdiffweb to avoid phishing - credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Sent email notification to user when a new SSH Key get added - credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.5.4 (2022-12-19)\n\n* Discard `X-Forwarded-Host` headers credit to [Anishka Shukla](https://github.com/anishkashukla)\n* Create proper symbolic link of `chartkick.js` on Ubuntu Jammy to fix loading of Charts in web interface\n* Add CSRF verification on `/logout` credits to [reza.duty](https://rezaduty.me)\n\n## 2.5.3 (2022-12-05)\n\n* Add support for WTForms v3 to support Debian Bookworm\n* Fix strange behavior in access token management #247\n\n## 2.5.2 (2022-11-28)\n\n* Block repository access when user_root directory is empty or relative path [CVE-2022-4314](https://nvd.nist.gov/vuln/detail/CVE-2022-4314) credit to [neverjunior](https://github.com/neverjunior)\n* Replace admin password only when `--admin-password` option is provided #246\n* Invalidate browser cache for `logo`, `headerlogo` and `favicon` on restart #245\n\n## 2.5.1 (2022-11-11)\n\n* Add support for Ubuntu Kinetic #240\n* Disable filesize for deleted files to improve page loading #241\n\n## 2.5.0 (2022-11-09)\n\nThis next release focus on two-factor-authentication as a measure to increase security of user's account.\n\n* Store User's session information into database\n* Update ldap plugin to load additional attributes from LDAP server\n* Improve `/status` page error handling when `session_statistics` cannot be read\n* Add support for Ubuntu Jammy\n* Upgrade from Bootstrap v3 to v4 #204\n* Replace Fontello by Font-Awesome v4\n* Use CSS variables `var()` to customize themes using `--branding-X` options #239\n* Remove usage of Jquery.validate\n* Replace custom timsort by jquery DataTables #205\n* Add Active Session managements #203\n  * Active session should be visible in user's profiles\n  * Active session may be revoked by user\n  * Active session should be visible in administration view\n  * Action session may be revoke by administrator\n  * Show number of active users within the last 24 hours in dashboard\n* Handle migration of older Rdiffweb database by adding the missing `repos.Encoding`, `repos.keepdays` and `users.role` columns #185\n* Replace deprecated references of `disutils.spawn.find_executable()` by `shutil.which()` #208\n* Add two-factor authentication with email verification #201\n* Generate a new session on login and 2FA #220\n* Enforce permission on /etc/rdiffweb configuration folder\n* Enforce validation on fullname, username and email\n* Limit incorrect attempts to change the user's password to prevent brute force attacks #225 [CVE-2022-3273](https://nvd.nist.gov/vuln/detail/CVE-2022-3273) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce password policy new password cannot be set as new password [CVE-2022-3376](https://nvd.nist.gov/vuln/detail/CVE-2022-3376) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce better rate limit on login, mfa, password change and API [CVE-2022-3439](https://nvd.nist.gov/vuln/detail/CVE-2022-3439) [CVE-2022-3456](https://nvd.nist.gov/vuln/detail/CVE-2022-3456) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce 'Origin' validation [CVE-2022-3457](https://nvd.nist.gov/vuln/detail/CVE-2022-3457) credit to [Nithissh12](Nithissh12)\n* Define idle and absolute session timeout with agressive default to protect usage on public computer [CVE-2022-3327](https://nvd.nist.gov/vuln/detail/CVE-2022-3327) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Send email notification when enabling or disabling MFA [CVE-2022-3363](https://nvd.nist.gov/vuln/detail/CVE-2022-3363) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Use Argon2id to store password hash #231\n* Fixed plugin priorities to ensure that jobs are scheduled at each startup #232\n* Revoke previous user's sessions on password change [CVE-2022-3362](https://nvd.nist.gov/vuln/detail/CVE-2022-3362) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\nBreaking changes:\n\n* Drop Ubuntu Hirsute & Impish (End-of-life)\n* `session-dir` is deprecated and should be replace by `rate-limit-dir`. User's session are stored in database.\n* previous `.css` customization are not barkward compatible. Make usage of the `--branding-X` options.\n\n**Thanks to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172) with whom I collaborate to improve the security of this project.**\n\n## 2.4.10 (2022-10-03)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate path traversal vulnerability [CVE-2022-3389](https://nvd.nist.gov/vuln/detail/CVE-2022-3389) credit to [Hoang Van Hiep](https://www.linkedin.com/in/hiephv2410/)\n\n## 2.4.9 (2022-09-28)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Add `Cache-Control` and other security headers [CVE-2022-3292](https://nvd.nist.gov/vuln/detail/CVE-2022-3292) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce password policy using `password-score` based on [zxcvbn](https://github.com/dropbox/zxcvbn) [CVE-2022-3326](https://nvd.nist.gov/vuln/detail/CVE-2022-3326) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.4.8 (2022-09-26)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Clean-up invalid path on error page\n* Limit username field length [CVE-2022-3290](https://nvd.nist.gov/vuln/detail/CVE-2022-3290) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit user's email field length [CVE-2022-3272](https://nvd.nist.gov/vuln/detail/CVE-2022-3272) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit user's root directory field length [CVE-2022-3295](https://nvd.nist.gov/vuln/detail/CVE-2022-3295) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit SSH Key title field length [CVE-2022-3298](https://nvd.nist.gov/vuln/detail/CVE-2022-3298) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.4.7 (2002-09-21)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Generate a new session on login and 2FA #220 [CVE-2022-3269](https://nvd.nist.gov/vuln/detail/CVE-2022-3269) credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n* Mitigate CSRF on user's settings #221 [CVE-2022-3274](https://nvd.nist.gov/vuln/detail/CVE-2022-3274) credit to [irfansayyed](https://github.com/irfansayyed-github)\n\n## 2.4.6 (2022-09-20)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Support MarkupSafe<3 for Debian bookworm\n* Mitigate CSRF on user's notification settings #216 [CVE-2022-3233](https://nvd.nist.gov/vuln/detail/CVE-2022-3233) credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n* Mitigate CSRF on repository settings #217 [CVE-2022-3267](https://nvd.nist.gov/vuln/detail/CVE-2022-3267) credit to [irfansayyed](https://github.com/irfansayyed-github)\n* Use 'Secure' Attribute with Sensitive Cookie in HTTPS Session on HTTP Error #218 [CVE-2022-3174](https://nvd.nist.gov/vuln/detail/CVE-2022-3174) credit to [Chuu](https://github.com/uonghoangminhchau)\n\n## 2.4.5 (2002-09-16)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate CSRF on repository deletion and user deletion [CVE-2022-3232](https://nvd.nist.gov/vuln/detail/CVE-2022-3232) #214 #215 credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n\n## 2.4.4 (2002-09-15)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Use `X-Real-IP` to identify client IP address to mitigate Brute-Force attack #213\n\n## 2.4.3 (2022-09-14)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate CSRF in profile's SSH Keys [CVE-2022-3221](https://nvd.nist.gov/vuln/detail/CVE-2022-3221) #212 credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n\n## 2.4.2 (2022-09-12)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Use 'Secure' Attribute with Sensitive Cookie in HTTPS Session. [CVE-2022-3174](https://nvd.nist.gov/vuln/detail/CVE-2022-3174) #209 credit to [Chuu](https://github.com/uonghoangminhchau)\n* Avoid leakage of the stack trace in the default error page. [CVE-2022-3175](https://nvd.nist.gov/vuln/detail/CVE-2022-3175) #210 credit to [Chuu](https://github.com/uonghoangminhchau)\n* Enforce minimum and maximum password length [CVE-2022-3175](https://nvd.nist.gov/vuln/detail/CVE-2022-3179) #211 credit to [Chuu](https://github.com/uonghoangminhchau)\n\n## 2.4.1 (2022-09-08)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Add Clickjacking Defense [CVE-2022-3167](https://nvd.nist.gov/vuln/detail/CVE-2022-3167) credit to [tharunavula](https://github.com/tharunavula)\n* Drop Ubuntu Hirsute & Impish (End-of-life)\n\n## 2.4.0 (2022-06-21)\n\nThis new release brings a lot of improvement since the last version, multiple bug fixes\nto make the application stable. A couple of new features to improve the overall\nusability and a new security feature to block a brute force attack.\n\n* Add RateLimit to login page and API to mitigate robots attacks #167\n* Send email notification only if `email-sender` option is defined to avoid raising exception in logs #176\n* Support file restore cancellation without leaving `rdiffweb-restore` process in `<defunct>` state #174\n* Replace `python-ldap` by `ldap3` a pure python implementation to avoid dependencies on `sasl` and `ldap` binaries #186\n* Reffactor core module to allow better extendability and reusability #183\n* Add support for Debian Bookworm #180\n* Add support for Ubuntu Impish #175\n* Add rdiff-backup version to administration view\n* Run unit test during Debian build package\n* Refresh repository list automatically when required #188 #189\n* Fix error 500 displayed in status page #191\n* Improve repository browsing speed by minimizing the number of I/O call #192\n* Publish Docker image directly to DockerHub #144\n* Add REST API to manage sshkeys\n\nBreaking changes:\n\n* Ldap Password changes is not supported anymore.\n* Ldap Check Shadow expire config is not supported anymore. It should be replace by a custom filter.\n* Drop CentOS 7 and CentOS 8 support\n\n## 2.3.9 (2022-01-05)\n\nMaintenance release to fix minor issues\n\n* Improve date parsing for `backup.log` to avoid printing exception in logs #170\n* Return HTTP error 403 for invalid symlink to avoid returning a misleading HTTP 500 Server Error #168\n* Show a user friendly error message when trying to create a new user with an existing username #169\n* Handle repository without last-backup date during the notification process to ensure notifications are sent #171\n* Replace CherryPy `storage_type` by `storage_class` to avoid warning in logs\n* Update code to avoid deprecation warning where applicable\n* Add Flake8 validation to improve code quality\n* Remove Ubuntu Groovy support\n\n## 2.3.8 (2021-12-01)\n\n* Push all artefacts to nexus server including binaries and documentation\n* Fix `Chart.js` loading on Debian bullseye #164\n* Update installation steps documentation\n* Improve LDAP authentication to lookup entire directory\n* Fix usage of `--ldap-add-user-default-userroot` to avoid error related to wrong encoding\n* Improve authentication mechanics\n* Avoid raising an HTTP error 500 when login form receive invalid payload\n* Mitigate open redirect vulnerability in login form\n\n## 2.3.7 (2021-10-21)\n\n* To avoid backward compatibility issue, revert CSRF Token validation\n* Mitigate CSRF vulnerability using cookies with `SameSite=Lax`\n* Mitigate CSRF vulnerability by validating the `Origin` header when a form is submited\n* Improve usage of WTForm for all form validation\n* Update installation stepd for debian #162\n* Build Ubuntu packages and publish them to our APT repo\n\n## 2.3.6 (2021-10-20)\n\n* Broken build\n\n## 2.3.5 (2021-10-18)\n\n* Mitigate CSRF vulnerability to user, ssh and repo management with CSRF Token\n\n## 2.3.4 (2021-09-20)\n\n* Skip email notification if `email-host` configuration is not provided #157\n* Skip email notification when the new attribute value has the same value #159\n* USE LDAP `mail` attribute when creating new user from LDAP directory #156\n\n## 2.3.3 (2021-09-10)\n\n* Provide a new theme `blue` to match IKUS Soft colors #158\n\n## 2.3.2 (2021-09-07)\n\n* Automatically update user's repository list based on user's home directory\n\n## 2.3.1 (2021-07-14)\n\n* Update default `session-dir` location to `/var/lib/rdiffweb/session` to avoid using `/var/run` #148\n\n## 2.3.0 (2021-07-06)\n\n* Improve timezone handling to display date with local timezone using javascript #143\n* Improve charts by replacing d3js by chartkick #122\n* Replace the status view by something meaningful with chartkick #122\n* Provide Docker image with Rdiffweb `docker pull ikus060/rdiffweb` #55\n* Fix file and folder sorting #143\n\n## 2.2.0 (2021-05-11)\n\n* Debian package:\n  * Add rdiff-backup as dependencies to comply with Debian packaging rules\n  * Multiple other fixed to control files\n  * Use debhelper-compat (= 13)\n  * Use debhelper-compat (= 13)\n  * Run test during packaging\n  * Create default folder `/var/run/rdiffweb/sessions` to store user session\n* Use ConfigArgPare for configuration to support configuration file, environment variables and arguments to configure rdiffweb #114\n* Fix cache in localization module\n* Add `ldap-add-default-role` and `ldap-add-default-userroot` option to define default value for role and user root when creating user from LDAP #125\n* Support PostgreSQL database by replacing our storage layer by SQLAlchemy #126\n* Fix to retrieve user quota only for valid user_root #135\n* Add option `disable-ssh-keys` to disable SSH Key management\n* Use absolute URL everywhere\n* Add support for `X-Forwarded-For`, `X-Forwarded-proto` and other reverse proxy header when generating absolute URL\n* Drop Debian Stretch support\n* Implement a new background scheduler using apscheduler #82\n* Use background job to send email notification to avoid blocking web page loading #47\n* Use background job to delete repository to avoid blocking web page loading #48\n* Allow deleting a specific file or folder from the history using `rdiff-backup-delete` #128\n* Improve support for `session-dir` #131\n* Add option `admin-password` to define administrator password for better security\n* Improve performance of repository browsing\n* Add a new view to display logs of a specific repository\n* Allow downloading the log\n* Define a default limit to graph statistics to make it display faster\n* Fix `get-quota-cmd` option to properly return a value\n\n## 2.1.0 (2021-01-15)\n\n* Debian package: Remove dh-systemd from Debian build dependencies (https://bugs.debian.org/871312we)\n* Improve Quota management:\n  * `QuotaSetCmd`, `QuotaGetCmd` and `QuotaUsedCmd` options could be used to customize how to set the quota for your environment.\n  * Display user's quota in User View\n  * Display user's quota in Admin View\n  * Allow admin to update user quota from Admin View when `QuotaSetCmd` is defined.\n  * Allow admin to define user quota using human readable value (e.g.: GiB, TiB, etc.)\n  * Improve logging around quota management\n* Improve robustness when service is starting\n* Improve robustness when repository has wrong permission defined (e.g.: when some files not readable)\n* Add user id in Admin view\n* Replace `UserObject(1)` by the actual username in log file to improve debugging\n\n## 2.0.0 (2020-12-04)\n\n* Re-implement logic to update repositories views to remove duplicates and avoid nesting repo. #107\n* Handle elapsed time of days in the graph. Thanks [Nathaniel van Diepen](https://github.com/Eeems) contributions.\n* Rebrand all link to ikus-soft.com\n* Update documentation to install rdiffweb\n* Remove obsolete minify dependency\n* Drop support for python2\n* Provide null translation if translation catalogues are not found\n* Pass a LANG environment variable to rdiff-backup restore process to fix encoding issue #112\n* Remove obsolete python shebang\n* Remove execution bit (+x) on python modules\n* Provide `--help` and `--version` on `rdiffweb` executable\n* Improve cherrypy version detection\n* Do not update translation files (.mo) during build\n\n## 1.5.0 (2020-06-24)\n\nThis minor release introduce official support of rdiffweb on Debian Bullseye. It also includes some usability improvements.\n\n* Change formatting of Last Backup date for \"Updated 3 weeks ago\" to ease the readability\n* Add support for Debian Bullseye\n* Add support for Python 3.8 (#104)\n* Add warning in the users list view when a root directory is invalid (#30)\n* Add options to control search depthness (#1)\n* Print a warning in the log when the \"DefaultTheme\" value is not valid (#90)\n\n## 1.4.0 (2020-05-20)\n\nThanks to our sponsor, this release introduce a feature to have better control over the user's permission by defining 3 different levels of privilege: Admin, Maintainer and User. This addition allows you to have better control on what your users can or can't do.\n\n* Fix single repository discovery when a user's home is a rdiff-backup repository\n* [SPONSORED] Add a new setting at the user level to define the user's role. Admin,\n   Maintainer and User. Admin are allowed to do everything. Maintainer are\n   allow to browse and delete repo. Users are only allowed to browse. #94\n* Add \"Powered by\" in the web interface footer #91\n* Display a nice error message when trying to delete admin user #93\n* Introduce usage of wtforms and flash in admin users for better form validation. #96 #97\n* Update French translation\n\n## 1.3.2 (2020-04-23)\n\nThis minor releases fixed issues found while testing release 1.3.0.\n\n* Fix lookup of executable rdiff-backup and rdiffweb-restore to search in current virtualenv first\n* Fix repository view when multiple repo path are conflicting\n* Fix logging of rdiffweb-restore subprocess\n\n## 1.3.1 (2020-04-10)\n\nThis minor release enforces security of the password stored in rdiffweb database to make use of a better encryption using SSHA.\nOnly new passwords will make use of the SSHA scheme.\n\n* Enforce password encryption by using SSHA scheme #88\n\n## 1.3.0 (2020-04-07)\n\nThis release focuses on improving the restore of big archives. The download should be much faster to start. Major enhancement was made to offload the processing outside the web server. And all of this is still compatible with rdiff-backup v1.2.8 and the latest v2.0.0.\n\n* Restore file and folder in a subprocess to make the download start faster\n* Fix encoding of archive on Python3.6 (CentOS 7) by using PAX format\n* Add support to restore files and folders using rdiff-backup2\n* Remove obsolete dependencies `pysqlite2`\n* Fix issue creating duplicate entries of repository in the database\n\n## 1.2.2 (2020-03-05)\n\nThis release provides little improvement to the v1.2.x including official support of rdiff-backup v2.0.0.\n\n* Enhance the repository to invite users to refresh the repository when the view is empty.\n* Support rdiff-backup v2.0.0\n* Deprecate support for cherrypy 4, 5, 6 and 7\n* Improve loading of repository data (cache status and entries)\n* Restore compatibility with SQLite 3.7 (CentOS7)\n\nKnown issues:\n\n* Filename encoding in tar.gz and zip file might not be accurate if you are running Python 3.6 (CentOS7)\n\n## 1.2.1 (2020-02-08)\n\nLittle bug fix following the previous release\n\n* Fix 404 error when trying to access other users repo as admin\n* Fix logging format for cherrypy logs to matches rdiffweb format\n* Add log rotation by default\n\n## 1.2.0 (2020-01-30)\n\nThis release focus on improving the database layers for better extendability to add more type of data and to support more databases backend like postgresql in the near future.\n\n* Add explicit testing for Debian Stretch & Buster\n* Change the persistence layers\n  * Minimize number of SQL queries\n  * Add object lazy loading\n  * Add object data caching\n* Fix bugs with SQLite <= 3.16 (Debian Stretch)\n\n## 1.1.0 (2019-10-31)\n\nThis release focus on improving the admin area and building the fundation for repository access control list (ACL).\n\n* Update documentation from PDSL web site\n* Improve the navigation bar layout\n* Update the login page headline\n* Update jinja2 version to allow 2.10.x\n* Show server log in admin area\n* Reduce code smell\n* Add System information in admin area\n* Validate credential using local database before LDAP\n* Reffactoring templates macros\n* Enhance user's view search bar\n* Change repository URL to username/repopath\n* Add System information in admin area\n* Improve testcases\n* Clean-up obsolete code\n* Fix issue with captital case encoding name\n* Fix compilation of less files\n* Fix google font import\n\n## 1.0.3 (2019-10-04)\n\n* Removing the auto update repos\n\n## 1.0.2 (2019-10-01)\n\n* Create \"admin\" user if missing\n* Update french translation\n\n## 1.0.1 (2019-09-22)\n\n* Update installation documentation\n* Fix removal of SSH Key\n* Return meaningful error to the user trying to add an existing SSH key\n\n## 1.0.0 (2019-09-11)\n\n* Make repository removal more robust\n* Improve performance of librdiff\n* Add new RESTful api\n* Return the right HTTP 401 or 402 error code for authentication\n* Fix bug introduce by upgrade to Jinja2 + python3\n* Store ssh keys in database and disk\n* Add support for theme (default, orange)\n* Remove deprecated profiling code\n* Add disk usage support / quota\n* Add support of cherrypy v18\n* Drop support of cherrypy v3.2.2\n* Add wsgi entry point\n* Replace the plugins architecture to ease implementation\n* Numerous bug fixes\n\n## 0.10.9 (2019-05-22)\n\n* Better error handling when error.log file are not valid gzip file\n", "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nimport cherrypy\nfrom wtforms.fields import SelectField, StringField, SubmitField\nfrom wtforms.validators import ValidationError\nfrom wtforms.widgets import HiddenInput\n\nfrom rdiffweb.controller import Controller, flash\nfrom rdiffweb.controller.form import CherryForm\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import gettext_lazy as _\n\n\nclass AbstractMfaForm(CherryForm):\n    def __init__(self, obj, **kwargs):\n        assert obj\n        super().__init__(obj=obj, **kwargs)\n        # Keep only one of the enable or disable button\n        if obj.mfa:\n            self.enable_mfa.widget = HiddenInput()\n            self.enable_mfa.data = ''\n        else:\n            self.disable_mfa.widget = HiddenInput()\n            self.disable_mfa.data = ''\n\n\nclass MfaStatusForm(AbstractMfaForm):\n    mfa = SelectField(\n        _('Two-Factor Authentication (2FA) Status'),\n        coerce=int,\n        choices=[\n            (UserObject.DISABLED_MFA, _(\"Disabled\")),\n            (UserObject.ENABLED_MFA, _(\"Enabled\")),\n        ],\n        render_kw={'readonly': True, 'disabled': True, 'data-beta': '1'},\n    )\n    enable_mfa = SubmitField(_('Enable Two-Factor Authentication'), render_kw={\"class\": \"btn-success\"})\n    disable_mfa = SubmitField(_('Disable Two-Factor Authentication'), render_kw={\"class\": \"btn-warning\"})\n\n\nclass MfaToggleForm(AbstractMfaForm):\n    code = StringField(\n        _('Verification code'),\n        render_kw={\n            \"placeholder\": _('Enter verification code here'),\n            \"autocomplete\": \"off\",\n            \"autocorrect\": \"off\",\n            \"autofocus\": \"autofocus\",\n        },\n    )\n    enable_mfa = SubmitField(_('Enable Two-Factor Authentication'), render_kw={\"class\": \"btn-success\"})\n    disable_mfa = SubmitField(_('Disable Two-Factor Authentication'), render_kw={\"class\": \"btn-warning\"})\n    resend_code = SubmitField(\n        _('Resend code to my email'),\n        render_kw={\"class\": \"btn-link\"},\n    )\n\n    @property\n    def app(self):\n        return cherrypy.request.app\n\n    def populate_obj(self, userobj):\n        # Enable or disable MFA only when a code is provided.\n        try:\n            if self.enable_mfa.data:\n                userobj.mfa = UserObject.ENABLED_MFA\n                userobj.commit()\n                flash(_(\"Two-Factor authentication enabled successfully.\"), level='success')\n            elif self.disable_mfa.data:\n                userobj.mfa = UserObject.DISABLED_MFA\n                userobj.commit()\n                flash(_(\"Two-Factor authentication disabled successfully.\"), level='success')\n        except Exception as e:\n            userobj.rollback()\n            flash(str(e), level='warning')\n\n    def validate_code(self, field):\n        # Code is required for enable_mfa and disable_mfa\n        if self.enable_mfa.data or self.disable_mfa.data:\n            if not self.code.data:\n                raise ValidationError(_(\"Enter the verification code to continue.\"))\n            # Validate code\n            if not cherrypy.tools.auth_mfa.verify_code(self.code.data, False):\n                raise ValidationError(_(\"Invalid verification code.\"))\n\n    def validate(self, extra_validators=None):\n        if not (self.enable_mfa.data or self.disable_mfa.data or self.resend_code.data):\n            raise ValidationError(_('Invalid operation'))\n        return super().validate()\n\n\nclass PagePrefMfa(Controller):\n    @cherrypy.expose\n    def default(self, action=None, **kwargs):\n        form = MfaToggleForm(obj=self.app.currentuser)\n        if form.is_submitted():\n            if form.validate():\n                if form.resend_code.data:\n                    self.send_code()\n                elif form.enable_mfa.data or form.disable_mfa.data:\n                    form.populate_obj(self.app.currentuser)\n                    form = MfaStatusForm(obj=self.app.currentuser)\n            # Send verification code if previous code expired.\n            elif cherrypy.tools.auth_mfa.is_code_expired():\n                self.send_code()\n        else:\n            form = MfaStatusForm(obj=self.app.currentuser)\n        params = {\n            'form': form,\n        }\n        return self._compile_template(\"prefs_mfa.html\", **params)\n\n    def send_code(self):\n        userobj = self.app.currentuser\n        if not userobj.email:\n            flash(_(\"To continue, you must set up an email address for your account.\"), level='warning')\n            return\n        code = cherrypy.tools.auth_mfa.generate_code()\n        body = self.app.templates.compile_template(\n            \"email_verification_code.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'code': code}\n        )\n        cherrypy.engine.publish('queue_mail', to=userobj.email, subject=_(\"Your verification code\"), message=body)\n        flash(_(\"A new verification code has been sent to your email.\"))\n", "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport argparse\nimport logging\nimport re\nimport sys\nfrom collections import OrderedDict\n\nimport cherrypy\nimport configargparse\nimport pkg_resources\nfrom cherrypy import Application\n\n# Define the logger\nlogger = logging.getLogger(__name__)\n\n# Get rdiffweb version.\ntry:\n    VERSION = pkg_resources.get_distribution(\"rdiffweb\").version\nexcept pkg_resources.DistributionNotFound:\n    VERSION = \"DEV\"\n\n\ndef css_color(value):\n    if not re.match('^#?(?:[0-9a-fA-F]{3}){1,2}$', value):\n        raise argparse.ArgumentTypeError(\"invalid CSS Color\")\n    if value.startswith('#'):\n        return value\n    return '#' + value\n\n\ndef css_font(value):\n    if not re.match('^[a-zA-Z0-9 ]+$', value):\n        raise argparse.ArgumentTypeError(\"invalid CSS Font name\")\n    return value\n\n\ndef get_parser():\n    # Get global config argument parser\n    parser = configargparse.ArgumentParser(\n        prog='rdiffweb',\n        description='Web interface to browse and restore rdiff-backup repositories.',\n        default_config_files=['/etc/rdiffweb/rdw.conf', '/etc/rdiffweb/rdw.conf.d/*.conf'],\n        add_env_var_help=True,\n        auto_env_var_prefix='RDIFFWEB_',\n        config_file_parser_class=ConfigFileParser,\n        conflict_handler='resolve',\n    )\n\n    parser.add_argument(\n        '-f', '--config', is_config_file=True, metavar='FILE', help='location of Rdiffweb configuration file'\n    )\n\n    parser.add(\n        '--database-uri',\n        '--sqlitedb-file',\n        '--sqlitedbfile',\n        metavar='URI',\n        help=\"\"\"Location of the database used for persistence. SQLite and PostgreSQL\n            database are supported officially. To use a SQLite database you may\n            define the location using a file path or a URI.\n            e.g.: /srv/rdiffweb/file.db or sqlite:///srv/rdiffweb/file.db`.\n            To use PostgreSQL server you must provide\n            a URI similar to postgresql://user:pass@10.255.1.34/dbname and you\n            must install required dependencies.\n            By default, Rdiffweb uses a SQLite embedded database located at\n            /etc/rdiffweb/rdw.db.\"\"\",\n        default='/etc/rdiffweb/rdw.db',\n    )\n\n    parser.add_argument(\n        '-d',\n        '--debug',\n        action='store_true',\n        help='enable rdiffweb debug mode - change the log level to DEBUG, print exception stack trace to the web interface and show SQL query in logs',\n    )\n\n    parser.add_argument(\n        '--admin-user',\n        '--adminuser',\n        metavar='USERNAME',\n        help='administrator username. The administrator user get created on startup if the database is empty.',\n        default='admin',\n    )\n\n    parser.add_argument(\n        '--admin-password',\n        metavar='USERNAME',\n        help=\"\"\"administrator encrypted password as SSHA. Read online\n            documentation to know more about how to encrypt your password\n            into SSHA or use http://projects.marsching.org/weave4j/util/genpassword.php\n            When defined, administrator password cannot be updated using the web interface.\n            When undefined, default administrator password is `admin123` and\n            it can be updated using the web interface.\"\"\",\n    )\n\n    parser.add_argument(\n        '--default-theme',\n        '--defaulttheme',\n        help='define the default theme. Either: default, blue, orange or custom. Define a default set of colors and font for the web interface. Also read more about link-color, navbar-cloor and font-family.',\n        choices=['default', 'blue', 'orange', 'custom'],\n        default='default',\n    )\n\n    parser.add_argument(\n        '--environment',\n        choices=['development', 'production'],\n        help='define the type of environment: development, production. This is used to limit the information shown to the user when an error occur.',\n        default='production',\n    )\n\n    parser.add_argument(\n        '--email-encryption',\n        '--emailencryption',\n        choices=['none', 'ssl', 'starttls'],\n        help='type of encryption to be used when establishing communication with SMTP server. Default: none',\n        default='none',\n    )\n\n    parser.add_argument(\n        '--email-host',\n        '--emailhost',\n        metavar='HOST',\n        help='SMTP server used to send email in the form <host>:<port>. If the port is not provided, default to standard port 25 or 465 is used. e.g.: smtp.gmail.com:587',\n    )\n\n    parser.add_argument(\n        '--email-sender',\n        '--emailsender',\n        metavar='EMAIL',\n        help='email addres used for the `from:` field when sending email.',\n    )\n\n    parser.add_argument(\n        '--email-notification-time',\n        '--emailnotificationtime',\n        metavar='TIME',\n        help='time when the email notifcation should be sent for inactive backups. e.g.: 22:00 Default value: 23:00',\n        default='23:00',\n    )\n\n    parser.add_argument(\n        '--email-username',\n        '--emailusername',\n        metavar='USERNAME',\n        help='username used for authentication with the SMTP server.',\n    )\n\n    parser.add_argument(\n        '--email-password',\n        '--emailpassword',\n        metavar='PASSWORD',\n        help='password used for authentication with the SMTP server.',\n    )\n\n    parser.add_argument(\n        '--email-send-changed-notification',\n        '--emailsendchangednotification',\n        help='True to send notification when sensitive information get change in user profile.',\n        action='store_true',\n        default=True,\n    )\n\n    parser.add_argument(\n        '--brand-favicon',\n        '--favicon',\n        dest='favicon',\n        help='location of an icon to be used as a favicon displayed in web browser.',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--footer-name',\n        '--footername',\n        help=argparse.SUPPRESS,\n        default='rdiffweb',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--footer-url',\n        '--footerurl',\n        help=argparse.SUPPRESS,\n        default='https://rdiffweb.org/',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--brand-logo',\n        '--logo',\n        dest='logo',\n        help='location of an image (preferably a .svg) to be used as a replacement for the rdiffweb logo displayed in Login page.',\n    )\n\n    parser.add_argument(\n        '--brand-header-logo',\n        '--header-logo',\n        '--headerlogo',\n        dest='header_logo',\n        help='location of an image (preferably a .svg) to be used as a replacement for the rdiffweb header logo displayed in navigation bar.',\n    )\n\n    parser.add_argument(\n        '--brand-header-name',\n        '--header-name',\n        '--headername',\n        dest='header_name',\n        help='application name displayed in the title bar and header menu.',\n        default='Rdiffweb',\n    )\n\n    parser.add_argument(\n        '--brand-link-color',\n        '--link-color',\n        type=css_color,\n        dest='link_color',\n        help='define a CSS color to be used for link. e.g.: ff0000',\n    )\n\n    parser.add_argument(\n        '--brand-btn-bg-color',\n        '--btn-bg-color',\n        type=css_color,\n        dest='btn_bg_color',\n        help=\"define a CSS color to be used for button's background. Default to `link-color` if undefined\",\n    )\n\n    parser.add_argument(\n        '--brand-btn-fg-color',\n        '--btn-fg-color',\n        type=css_color,\n        dest='btn_fg_color',\n        help=\"define a CSS color to be used for button's text. Default to white if undefined\",\n    )\n\n    parser.add_argument(\n        '--brand-btn-rounded',\n        '--btn-rounded',\n        type=bool,\n        dest='btn_rounded',\n        help='define if the button should be rounded',\n    )\n\n    parser.add_argument(\n        '--brand-navbar-color',\n        '--navbar-color',\n        type=css_color,\n        dest='navbar_color',\n        help='define a CSS color to be used for navigation bar background e.g.: 00ff00',\n    )\n\n    parser.add_argument(\n        '--brand-font-family',\n        '--font-family',\n        type=css_font,\n        dest='font_family',\n        help='define a CSS font to be used as main font. e.g.: Roboto',\n    )\n\n    parser.add_argument(\n        '--ldap-add-missing-user',\n        '--addmissinguser',\n        action='store_true',\n        help='enable creation of users from LDAP when the credential are valid.',\n        default=False,\n    )\n\n    parser.add_argument(\n        '--ldap-add-user-default-role',\n        help='default role used when creating users from LDAP. This parameter is only useful when `--ldap-add-missing-user` is enabled.',\n        default='user',\n        choices=['admin', 'maintainer', 'user'],\n    )\n\n    parser.add_argument(\n        '--ldap-add-user-default-userroot',\n        help='default user root directory used when creating users from LDAP. LDAP attributes may be used to define the default location. e.g.: `/backups/{uid[0]}/`. This parameter is only useful when `--ldap-add-missing-user` is enabled.',\n        default='',\n    )\n\n    parser.add_argument(\n        '--ldap-uri',\n        '--ldapuri',\n        help='URL to the LDAP server used to validate user credentials. e.g.: ldap://localhost:389',\n    )\n\n    parser.add_argument(\n        '--ldap-base-dn',\n        '--ldapbasedn',\n        metavar='DN',\n        help='DN of the branch of the directory where all searches should start from. e.g.: dc=my,dc=domain',\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-scope',\n        '--ldapscope',\n        help='scope of the search. Can be either base, onelevel or subtree',\n        choices=['base', 'onelevel', 'subtree'],\n        default=\"subtree\",\n    )\n\n    parser.add_argument('--ldap-tls', '--ldaptls', action='store_true', help='enable TLS')\n\n    parser.add_argument(\n        '--ldap-username-attribute',\n        '--ldapattribute',\n        metavar='ATTRIBUTE',\n        help=\"The attribute to search username. If no attributes are provided, the default is to use `uid`. It's a good idea to choose an attribute that will be unique across all entries in the subtree you will be using.\",\n        default='uid',\n    )\n\n    parser.add_argument(\n        '--ldap-filter',\n        '--ldapfilter',\n        help=\"search filter to limit LDAP lookup. If not provided, defaults to (objectClass=*), which searches for all objects in the tree.\",\n        default='(objectClass=*)',\n    )\n\n    parser.add_argument(\n        '--ldap-required-group',\n        '--ldaprequiredgroup',\n        metavar='GROUPNAME',\n        help=\"name of the group of which the user must be a member to access rdiffweb. Should be used with ldap-group-attribute and ldap-group-attribute-is-dn.\",\n    )\n\n    parser.add_argument(\n        '--ldap-group-attribute',\n        '--ldapgroupattribute',\n        metavar='ATTRIBUTE',\n        help=\"name of the attribute defining the groups of which the user is a member. Should be used with ldap-required-group and ldap-group-attribute-is-dn.\",\n        default='member',\n    )\n\n    parser.add_argument(\n        '--ldap-group-attribute-is-dn',\n        '--ldapgroupattributeisdn',\n        help=\"True if the content of the attribute `ldap-group-attribute` is a DN.\",\n        action='store_true',\n    )\n\n    parser.add_argument(\n        '--ldap-bind-dn',\n        '--ldapbinddn',\n        metavar='DN',\n        help=\"optional DN used to bind to the server when searching for entries. If not provided, will use an anonymous bind.\",\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-bind-password',\n        '--ldapbindpassword',\n        metavar='PASSWORD',\n        help=\"password to use in conjunction with LdapBindDn. Note that the bind password is probably sensitive data, and should be properly protected. You should only use the LdapBindDn and LdapBindPassword if you absolutely need them to search the directory.\",\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-version',\n        '--ldapversion',\n        '--ldapprotocolversion',\n        help=\"version of LDAP in use either 2 or 3. Default to 3.\",\n        default=3,\n        type=int,\n        choices=[2, 3],\n    )\n\n    parser.add_argument(\n        '--ldap-network-timeout',\n        '--ldapnetworktimeout',\n        metavar='SECONDS',\n        help=\"timeout in seconds value used for LDAP connection\",\n        default=100,\n        type=int,\n    )\n\n    parser.add_argument(\n        '--ldap-timeout',\n        '--ldaptimeout',\n        metavar='SECONDS',\n        help=\"timeout in seconds value used for LDAP request\",\n        default=300,\n        type=int,\n    )\n\n    parser.add_argument(\n        '--ldap-encoding',\n        '--ldapencoding',\n        metavar='ENCODING',\n        help=\"encoding used by your LDAP server.\",\n        default=\"utf-8\",\n    )\n\n    parser.add_argument(\n        '--log-access-file', '--logaccessfile', metavar='FILE', help='location of Rdiffweb log access file.'\n    )\n\n    parser.add_argument(\n        '--log-file',\n        '--logfile',\n        metavar='FILE',\n        help='location of Rdiffweb log file. Print log to the console if not define in config file.',\n    )\n\n    parser.add_argument(\n        '--log-level',\n        '--loglevel',\n        help='Define the log level.',\n        choices=['ERROR', 'WARN', 'INFO', 'DEBUG'],\n        default='INFO',\n    )\n\n    parser.add_argument(\n        '--max-depth',\n        '--maxdepth',\n        metavar='DEPTH',\n        help=\"define the maximum folder depthness to search into the user's root directory to find repositories. This is commonly used if you repositories are organised with multiple sub-folder.\",\n        type=int,\n        default=3,\n    )\n\n    parser.add('--quota-set-cmd', '--quotasetcmd', metavar='COMMAND', help=\"command line to set the user's quota.\")\n\n    parser.add('--quota-get-cmd', '--quotagetcmd', metavar='COMMAND', help=\"command line to get the user's quota.\")\n\n    parser.add(\n        '--quota-used-cmd', '--quotausedcmd', metavar='COMMAND', help=\"Command line to get user's quota disk usage.\"\n    )\n\n    parser.add(\n        '--remove-older-time',\n        '--removeoldertime',\n        metavar='TIME',\n        help=\"Time when to execute the remove older scheduled job. e.g.: 22:30\",\n        default='23:00',\n    )\n\n    parser.add('--server-host', '--serverhost', metavar='IP', default='127.0.0.1', help='IP address to listen to')\n\n    parser.add(\n        '--server-port',\n        '--serverport',\n        metavar='PORT',\n        help='port to listen to for HTTP request',\n        default='8080',\n        type=int,\n    )\n\n    parser.add(\n        '--rate-limit-dir',\n        '--session-dir',\n        '--sessiondir',\n        metavar='FOLDER',\n        help='location where to store rate-limit information. When undefined, the data is kept in memory. `--session-dir` are deprecated and kept for backward compatibility.',\n    )\n\n    parser.add(\n        '--rate-limit',\n        metavar='LIMIT',\n        type=int,\n        default=20,\n        help='maximum number of requests per hour that can be made on sensitive endpoints. When this limit is reached, an HTTP 429 message is returned to the user or the user is logged out. This security measure is used to limit brute force attacks on the login page and the RESTful API.',\n    )\n\n    parser.add(\n        '--session-idle-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the amount of time a session will remain active in case there is no activity in the session. User Session will be revoke after this period of inactivity, unless the user selected \"remember me\". Default 5 minutes.',\n        default=5,\n    )\n\n    parser.add(\n        '--session-absolute-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the maximum amount of time a session can be active. After this period, user is forced to (re)authenticate, unless the user selected \"remember me\". Default 20 minutes.',\n        default=20,\n    )\n\n    parser.add(\n        '--session-persistent-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the maximum amount of time to remember and trust a user device. This timeout is used when user select \"remember me\". Default 30 days.',\n        default=43200,\n    )\n\n    parser.add(\n        '--ssl-certificate',\n        '--sslcertificate',\n        metavar='CERT',\n        help='location of the SSL Certification to enable HTTPS (not recommended)',\n    )\n\n    parser.add(\n        '--ssl-private-key',\n        '--sslprivatekey',\n        metavar='KEY',\n        help='location of the SSL Private Key to enable HTTPS (not recommended)',\n    )\n\n    parser.add(\n        '--tempdir',\n        metavar='FOLDER',\n        help='alternate temporary folder to be used when restoring files. Might be useful if the default location has limited disk space. Default to TEMPDIR environment or `/tmp`.',\n    )\n\n    parser.add(\n        '--disable-ssh-keys',\n        action='store_true',\n        help='used to hide SSH Key management to avoid users to add or remove SSH Key using the web application',\n        default=False,\n    )\n\n    parser.add(\n        '--password-min-length',\n        type=int,\n        help=\"Minimum length of the user's password\",\n        default=8,\n    )\n\n    parser.add(\n        '--password-max-length',\n        type=int,\n        help=\"Maximum length of the user's password\",\n        default=128,\n    )\n\n    parser.add(\n        '--password-score',\n        type=lambda x: max(1, min(int(x), 4)),\n        help=\"Minimum zxcvbn's score for password. Value from 1 to 4. Default value 2. Read more about it here: https://github.com/dropbox/zxcvbn\",\n        default=2,\n    )\n\n    parser.add_argument('--version', action='version', version='%(prog)s ' + VERSION)\n\n    # Here we append a list of arguments for each locale.\n    flags = ['--welcome-msg'] + ['--welcome-msg-' + i for i in ['ca', 'en', 'es', 'fr', 'ru']] + ['--welcomemsg']\n    parser.add_argument(\n        *flags,\n        metavar='HTML',\n        help='replace the welcome message displayed in the login page for default locale or for a specific locale',\n        action=LocaleAction\n    )\n    return parser\n\n\ndef parse_args(args=None, config_file_contents=None):\n    args = sys.argv[1:] if args is None else args\n    return get_parser().parse_args(args, config_file_contents=config_file_contents)\n\n\nclass LocaleAction(argparse.Action):\n    \"\"\"\n    Custom Action to support defining arguments with locale.\n    \"\"\"\n\n    def __init__(self, option_strings, dest, nargs=None, **kwargs):\n        super(LocaleAction, self).__init__(option_strings, dest, **kwargs)\n\n    def __call__(self, parser, namespace, value, option_string=None):\n        if option_string[-3] == '-':\n            # When using arguments, we can extract the locale from the argument key\n            locale = option_string[-2:]\n        elif value[2] == ':':\n            # When using config file, the locale could be extract from the value e.g. fr:message\n            locale = value[0:2]\n            value = value[3:]\n        else:\n            locale = ''\n        # Create a dictionary with locale.\n        items = getattr(namespace, self.dest) or {}\n        items[locale] = value\n        setattr(namespace, self.dest, items)\n\n\nclass ConfigFileParser(object):\n    \"\"\"\n    Custom config file parser to support rdiffweb config file format.\n    \"\"\"\n\n    def get_syntax_description(self):\n        msg = \"Configuration file syntax allows: key=value, flag=true.\"\n        return msg\n\n    def parse(self, stream):\n        \"\"\"\n        Used to read the rdiffweb config file as dict.\n        \"\"\"\n\n        result = OrderedDict()\n\n        for i, line in enumerate(stream):\n            line = re.compile(\"(.*?)#.*\").sub(r'\\1', line).strip()\n            if not line:\n                continue\n            if '=' not in line:\n                raise configargparse.ConfigFileParserException(\n                    \"Unexpected line {} in {}: {}\".format(i, getattr(stream, 'name', 'stream'), line)\n                )\n            split_line = line.partition('=')\n            if len(split_line) != 3:\n                raise configargparse.ConfigFileParserException(\n                    \"Unexpected line {} in {}: {}\".format(i, getattr(stream, 'name', 'stream'), line)\n                )\n\n            # Get key & value\n            key = split_line[0].lower().strip().replace('_', '-')\n            value = split_line[2].strip()\n\n            # Support welcome-msg locale for backward compatibility\n            m = re.match(\"welcome-?msg\\\\[(ca|en|es|fr|ru)\\\\]\", key.lower())\n            if m:\n                key = \"welcome-msg-\" + m.group(1)\n                value = m.group(1) + \":\" + value\n\n            result[key] = value\n\n        # This dictionary is read by cherrypy. So create appropriate structure.\n        return result\n\n\nclass Option(object):\n    def __init__(self, key):\n        assert key\n        self.key = key\n\n    def __get__(self, instance, owner):\n        \"\"\"\n        Return a property to wrap the given option.\n        \"\"\"\n        return self.get(instance)\n\n    def get(self, instance=None):\n        \"\"\"\n        Return the value of this options.\n        \"\"\"\n        if isinstance(instance, Application):\n            app = instance\n        else:\n            app = cherrypy.request.app or getattr(instance, 'app', None)\n        assert app, \"Option() can't get reference to app\"\n        assert app.cfg, \"Option() can't get reference to app.cfg\"\n        return getattr(app.cfg, self.key)\n", "# -*- coding: utf-8 -*-\n# udb, A web interface to manage IT network\n# Copyright (C) 2022 IKUS Software inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport os\nimport pickle\nimport threading\nimport time\nfrom collections import namedtuple\n\nimport cherrypy\n\nTracker = namedtuple('Tracker', ['token', 'hits', 'timeout'])\n\n\nclass _DataStore:\n    \"\"\"\n    Base class for rate limit data store\n    \"\"\"\n\n    def __init__(self, **kwargs):\n        self._locks = {}\n\n    def get_and_increment(self, token, delay, hit=1):\n        lock = self._locks.setdefault(token, threading.RLock())\n        with lock:\n            tracker = self._load(token)\n            if tracker is None or tracker.timeout < time.time():\n                tracker = Tracker(token=token, hits=0, timeout=int(time.time() + delay))\n            tracker = tracker._replace(hits=tracker.hits + hit)\n            self._save(tracker)\n        return tracker.hits\n\n    def _save(self, tracker):\n        raise NotImplementedError\n\n    def _load(self, token):\n        raise NotImplementedError\n\n\nclass RamRateLimit(_DataStore):\n    \"\"\"\n    Store rate limit information in memory.\n    \"\"\"\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self._data = {}\n\n    def _load(self, token):\n        return self._data.get(token, None)\n\n    def _save(self, tracker):\n        self._data[tracker.token] = tracker\n\n\nclass FileRateLimit(_DataStore):\n    \"\"\"\n    Store rate limit information in files.\n    \"\"\"\n\n    PREFIX = 'ratelimit-'\n    pickle_protocol = pickle.HIGHEST_PROTOCOL\n\n    def __init__(self, storage_path, **kwargs):\n        super().__init__(**kwargs)\n        # The 'storage_path' arg is required for file-based datastore.\n        assert (\n            storage_path\n        ), 'FileRateLimit required a storage_path `tools.ratelimit.storage_path = \"/home/site/ratelimit\"`'\n        self.storage_path = os.path.abspath(storage_path)\n\n    def _path(self, token):\n        assert token\n        f = os.path.join(self.storage_path, self.PREFIX + token.strip('/').replace('/', '-'))\n        if not os.path.abspath(f).startswith(self.storage_path):\n            raise ValueError('invalid token')\n        return f\n\n    def _load(self, token):\n        path = self._path(token)\n        try:\n            f = open(path, 'rb')\n            try:\n                return pickle.load(f)\n            finally:\n                f.close()\n        except Exception:\n            # Drop session data if invalid\n            pass\n        return None\n\n    def _save(self, tracker):\n        path = self._path(tracker.token)\n        f = open(path, 'wb')\n        try:\n            pickle.dump(tracker, f, self.pickle_protocol)\n        finally:\n            f.close()\n\n\ndef check_ratelimit(\n    delay=3600, limit=25, return_status=429, logout=False, scope=None, methods=None, debug=False, hit=1, **conf\n):\n    \"\"\"\n    Verify the ratelimit. By default return a 429 HTTP error code (Too Many Request). After 25 request within the same hour.\n\n    Arguments:\n        delay:         Time window for analysis in seconds. Default per hour (3600 seconds)\n        limit:         Number of request allowed for an entry point. Default 25\n        return_status: HTTP Error code to return.\n        logout:        True to logout user when limit is reached\n        scope:         if specify, define the scope of rate limit. Default to path_info.\n        methods:       if specify, only the methods in the list will be rate limited.\n    \"\"\"\n    assert delay > 0, 'invalid delay'\n\n    # Check if limit is enabled\n    if limit <= 0:\n        return\n\n    # Check if this 'method' should be rate limited\n    request = cherrypy.request\n    if methods is not None and request.method not in methods:\n        if debug:\n            cherrypy.log(\n                'skip rate limit for HTTP method %s' % (request.method,),\n                'TOOLS.RATELIMIT',\n            )\n        return\n\n    # If datastore is not pass as configuration, create it for the first time.\n    datastore = getattr(cherrypy.request.app, '_ratelimit_datastore', None)\n    if datastore is None:\n        # Create storage using storage class\n        storage_class = conf.get('storage_class', RamRateLimit)\n        datastore = storage_class(**conf)\n        cherrypy.request.app._ratelimit_datastore = datastore\n\n    # If user is authenticated, use the username else use the ip address\n    token = (request.login or request.remote.ip) + '.' + (scope or request.path_info)\n\n    # Get hits count using datastore.\n    hits = datastore.get_and_increment(token, delay, hit)\n    if debug:\n        cherrypy.log(\n            'check and increase rate limit for scope %s, limit %s, hits %s' % (token, limit, hits), 'TOOLS.RATELIMIT'\n        )\n\n    # Verify user has not exceeded rate limit\n    if limit <= hits:\n        if logout:\n            if hasattr(cherrypy.serving, 'session'):\n                cherrypy.serving.session.clear()\n            raise cherrypy.HTTPRedirect(\"/\")\n\n        raise cherrypy.HTTPError(return_status)\n\n\ndef hit(hit=1):\n    \"\"\"\n    May be called directly by handlers to add a hit for the given request.\n    \"\"\"\n    conf = cherrypy.tools.ratelimit._merged_args()\n    conf['hit'] = hit\n    cherrypy.tools.ratelimit.callable(**conf)\n\n\ncherrypy.tools.ratelimit = cherrypy.Tool('before_handler', check_ratelimit, priority=60)\n\n\ncherrypy.tools.ratelimit.hit = hit\n"], "fixing_code": ["![Rdiffweb Banner](https://gitlab.com/ikus-soft/rdiffweb/-/raw/master/doc/_static/banner.png)\n\n<p align=\"center\">\n<strong>\n<a href=\"https://www.rdiffweb.org\">website</a>\n\u2022 <a href=\"https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/\">docs</a>\n\u2022 <a href=\"https://groups.google.com/d/forum/rdiffweb\">community</a>\n\u2022 <a href=\"https://rdiffweb-demo.ikus-soft.com/\">demo</a>\n</strong>\n</p>\n\n<p align=\"center\">\n<a href=\"LICENSE\"><img alt=\"License\" src=\"https://img.shields.io/github/license/ikus060/rdiffweb\"></a>\n<a href=\"https://gitlab.com/ikus-soft/rdiffweb/pipelines\"><img alt=\"Build\" src=\"https://gitlab.com/ikus-soft/rdiffweb/badges/master/pipeline.svg\"></a>\n<a href=\"https://sonar.ikus-soft.com/dashboard?id=rdiffweb\"><img alt=\"Quality Gate Minarca Client\" src=\"https://sonar.ikus-soft.com/api/project_badges/measure?project=rdiffweb&metric=alert_status\"></a>\n<a href=\"https://sonar.ikus-soft.com/dashboard?id=rdiffweb\"><img alt=\"Coverage\" src=\"https://sonar.ikus-soft.com/api/project_badges/measure?project=rdiffweb&metric=coverage\"></a>\n<a href=\"https://bestpractices.coreinfrastructure.org/projects/6583\"><img src=\"https://bestpractices.coreinfrastructure.org/projects/6583/badge\"></a>\n</p>\n\n<h1 align=\"center\">\nWelcome to Rdiffweb\n</h1>\n\nRdiffweb is a web application that allows you to view repositories generated\nby [rdiff-backup](https://rdiff-backup.net/). The purpose of this\napplication is to ease the management of backups and quickly restore your data\nwith a rich and powerful web interface.\n\nRdiffweb is written in Python and is released as open source project under the \nGNU GENERAL PUBLIC LICENSE (GPL). All source code and documentation are\nCopyright Rdiffweb contributors.\n\nRdiffweb is actively developed by [IKUS Soft](https://www.ikus-soft.com/)\nsince November 2014.\n\nThe Rdiffweb source code is hosted on [Gitlab](https://gitlab.com/ikus-soft/rdiffweb)\nand mirrored to [Github](https://github.com/ikus060/rdiffweb).\n\nThe Rdiffweb website is https://rdiffweb.org/.\n\n## Features\n\nWith its rich web interface Rdiffweb provide a notable list of features:\n\n* Browse your backup\n* Restore single file or multiple files as an archived\n* Users authentication via local database and LDAP\n* Users authorization\n* Email notification when backup is not successful\n* Configurable repository encoding\n* Configurable retention period\n* Backup statistics visualization using graphs\n* SSH Keys management\n* Disk quota visualization\n* File and folder deletion\n\n## Demo\n\nIf you quickly want to check how Rdiffweb is behaving, you may try our demo server hosted on:\n\n[https://rdiffweb-demo.ikus-soft.com/](https://rdiffweb-demo.ikus-soft.com/)\n\nUse the following credential to login:\n\n* Username: admin\n* Password: admin123\n\n## Installation & Docker usage\n\nFor detailed installation steps, read the [Installation documentation](https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/installation.html).\n\n## Current Build Status\n\n[![Build Status](https://gitlab.com/ikus-soft/rdiffweb/badges/master/pipeline.svg)](https://gitlab.com/ikus-soft/rdiffweb/pipelines)\n\n## Download\n\nYou should read the [Documentation](https://www.ikus-soft.com/archive/rdiffweb/doc/latest/html/index.html) to properly install Rdiffweb in your environment.\n\n**Docker**\n\n    docker pull ikus060/rdiffweb\n\n**Debian**\n\n    curl -L https://www.ikus-soft.com/archive/rdiffweb/public.key | apt-key add - \n    echo \"deb https://nexus.ikus-soft.com/repository/apt-release-bullseye/ bullseye main\" > /etc/apt/sources.list.d/rdiffweb.list\n    apt update\n    apt install rdiffweb\n\n**Pypi**\n\n    pip install rdiffweb\n\n## Support\n\n### Mailing list\n\nRdiffweb users should use the [Rdiffweb mailing list](https://groups.google.com/forum/#!forum/rdiffweb).\n\n### Bug Reports\n\nBug reports should be reported on the Rdiffweb Gitlab at https://gitlab.com/ikus-soft/rdiffweb/-/issues\n\n### Professional support\n\nProfessional support for Rdiffweb is available by contacting [IKUS Soft](https://www.ikus-soft.com/en/support/#form).\n\n# Changelog\n\n## Next Release - 2.5.5\n\n* Fix loading of Charts in Status page\n* Ensure Gmail and other mail client doesn't create hyperlink automatically for any nodification sent by Rdiffweb to avoid phishing - credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Sent email notification to user when a new SSH Key get added - credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Ratelimit \"Resend code to my email\" in Two-Factor Authentication view - credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.5.4 (2022-12-19)\n\n* Discard `X-Forwarded-Host` headers credit to [Anishka Shukla](https://github.com/anishkashukla)\n* Create proper symbolic link of `chartkick.js` on Ubuntu Jammy to fix loading of Charts in web interface\n* Add CSRF verification on `/logout` credits to [reza.duty](https://rezaduty.me)\n\n## 2.5.3 (2022-12-05)\n\n* Add support for WTForms v3 to support Debian Bookworm\n* Fix strange behavior in access token management #247\n\n## 2.5.2 (2022-11-28)\n\n* Block repository access when user_root directory is empty or relative path [CVE-2022-4314](https://nvd.nist.gov/vuln/detail/CVE-2022-4314) credit to [neverjunior](https://github.com/neverjunior)\n* Replace admin password only when `--admin-password` option is provided #246\n* Invalidate browser cache for `logo`, `headerlogo` and `favicon` on restart #245\n\n## 2.5.1 (2022-11-11)\n\n* Add support for Ubuntu Kinetic #240\n* Disable filesize for deleted files to improve page loading #241\n\n## 2.5.0 (2022-11-09)\n\nThis next release focus on two-factor-authentication as a measure to increase security of user's account.\n\n* Store User's session information into database\n* Update ldap plugin to load additional attributes from LDAP server\n* Improve `/status` page error handling when `session_statistics` cannot be read\n* Add support for Ubuntu Jammy\n* Upgrade from Bootstrap v3 to v4 #204\n* Replace Fontello by Font-Awesome v4\n* Use CSS variables `var()` to customize themes using `--branding-X` options #239\n* Remove usage of Jquery.validate\n* Replace custom timsort by jquery DataTables #205\n* Add Active Session managements #203\n  * Active session should be visible in user's profiles\n  * Active session may be revoked by user\n  * Active session should be visible in administration view\n  * Action session may be revoke by administrator\n  * Show number of active users within the last 24 hours in dashboard\n* Handle migration of older Rdiffweb database by adding the missing `repos.Encoding`, `repos.keepdays` and `users.role` columns #185\n* Replace deprecated references of `disutils.spawn.find_executable()` by `shutil.which()` #208\n* Add two-factor authentication with email verification #201\n* Generate a new session on login and 2FA #220\n* Enforce permission on /etc/rdiffweb configuration folder\n* Enforce validation on fullname, username and email\n* Limit incorrect attempts to change the user's password to prevent brute force attacks #225 [CVE-2022-3273](https://nvd.nist.gov/vuln/detail/CVE-2022-3273) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce password policy new password cannot be set as new password [CVE-2022-3376](https://nvd.nist.gov/vuln/detail/CVE-2022-3376) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce better rate limit on login, mfa, password change and API [CVE-2022-3439](https://nvd.nist.gov/vuln/detail/CVE-2022-3439) [CVE-2022-3456](https://nvd.nist.gov/vuln/detail/CVE-2022-3456) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce 'Origin' validation [CVE-2022-3457](https://nvd.nist.gov/vuln/detail/CVE-2022-3457) credit to [Nithissh12](Nithissh12)\n* Define idle and absolute session timeout with agressive default to protect usage on public computer [CVE-2022-3327](https://nvd.nist.gov/vuln/detail/CVE-2022-3327) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Send email notification when enabling or disabling MFA [CVE-2022-3363](https://nvd.nist.gov/vuln/detail/CVE-2022-3363) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Use Argon2id to store password hash #231\n* Fixed plugin priorities to ensure that jobs are scheduled at each startup #232\n* Revoke previous user's sessions on password change [CVE-2022-3362](https://nvd.nist.gov/vuln/detail/CVE-2022-3362) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\nBreaking changes:\n\n* Drop Ubuntu Hirsute & Impish (End-of-life)\n* `session-dir` is deprecated and should be replace by `rate-limit-dir`. User's session are stored in database.\n* previous `.css` customization are not barkward compatible. Make usage of the `--branding-X` options.\n\n**Thanks to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172) with whom I collaborate to improve the security of this project.**\n\n## 2.4.10 (2022-10-03)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate path traversal vulnerability [CVE-2022-3389](https://nvd.nist.gov/vuln/detail/CVE-2022-3389) credit to [Hoang Van Hiep](https://www.linkedin.com/in/hiephv2410/)\n\n## 2.4.9 (2022-09-28)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Add `Cache-Control` and other security headers [CVE-2022-3292](https://nvd.nist.gov/vuln/detail/CVE-2022-3292) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Enforce password policy using `password-score` based on [zxcvbn](https://github.com/dropbox/zxcvbn) [CVE-2022-3326](https://nvd.nist.gov/vuln/detail/CVE-2022-3326) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.4.8 (2022-09-26)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Clean-up invalid path on error page\n* Limit username field length [CVE-2022-3290](https://nvd.nist.gov/vuln/detail/CVE-2022-3290) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit user's email field length [CVE-2022-3272](https://nvd.nist.gov/vuln/detail/CVE-2022-3272) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit user's root directory field length [CVE-2022-3295](https://nvd.nist.gov/vuln/detail/CVE-2022-3295) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n* Limit SSH Key title field length [CVE-2022-3298](https://nvd.nist.gov/vuln/detail/CVE-2022-3298) credit to [Nehal Pillai](https://www.linkedin.com/in/nehal-pillai-02a854172)\n\n## 2.4.7 (2002-09-21)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Generate a new session on login and 2FA #220 [CVE-2022-3269](https://nvd.nist.gov/vuln/detail/CVE-2022-3269) credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n* Mitigate CSRF on user's settings #221 [CVE-2022-3274](https://nvd.nist.gov/vuln/detail/CVE-2022-3274) credit to [irfansayyed](https://github.com/irfansayyed-github)\n\n## 2.4.6 (2022-09-20)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Support MarkupSafe<3 for Debian bookworm\n* Mitigate CSRF on user's notification settings #216 [CVE-2022-3233](https://nvd.nist.gov/vuln/detail/CVE-2022-3233) credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n* Mitigate CSRF on repository settings #217 [CVE-2022-3267](https://nvd.nist.gov/vuln/detail/CVE-2022-3267) credit to [irfansayyed](https://github.com/irfansayyed-github)\n* Use 'Secure' Attribute with Sensitive Cookie in HTTPS Session on HTTP Error #218 [CVE-2022-3174](https://nvd.nist.gov/vuln/detail/CVE-2022-3174) credit to [Chuu](https://github.com/uonghoangminhchau)\n\n## 2.4.5 (2002-09-16)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate CSRF on repository deletion and user deletion [CVE-2022-3232](https://nvd.nist.gov/vuln/detail/CVE-2022-3232) #214 #215 credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n\n## 2.4.4 (2002-09-15)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Use `X-Real-IP` to identify client IP address to mitigate Brute-Force attack #213\n\n## 2.4.3 (2022-09-14)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Mitigate CSRF in profile's SSH Keys [CVE-2022-3221](https://nvd.nist.gov/vuln/detail/CVE-2022-3221) #212 credit to [Ambadi MP](https://www.linkedin.com/in/ambadi-m-p-16a95217b/)\n\n## 2.4.2 (2022-09-12)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Use 'Secure' Attribute with Sensitive Cookie in HTTPS Session. [CVE-2022-3174](https://nvd.nist.gov/vuln/detail/CVE-2022-3174) #209 credit to [Chuu](https://github.com/uonghoangminhchau)\n* Avoid leakage of the stack trace in the default error page. [CVE-2022-3175](https://nvd.nist.gov/vuln/detail/CVE-2022-3175) #210 credit to [Chuu](https://github.com/uonghoangminhchau)\n* Enforce minimum and maximum password length [CVE-2022-3175](https://nvd.nist.gov/vuln/detail/CVE-2022-3179) #211 credit to [Chuu](https://github.com/uonghoangminhchau)\n\n## 2.4.1 (2022-09-08)\n\nThis releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n\n* Add Clickjacking Defense [CVE-2022-3167](https://nvd.nist.gov/vuln/detail/CVE-2022-3167) credit to [tharunavula](https://github.com/tharunavula)\n* Drop Ubuntu Hirsute & Impish (End-of-life)\n\n## 2.4.0 (2022-06-21)\n\nThis new release brings a lot of improvement since the last version, multiple bug fixes\nto make the application stable. A couple of new features to improve the overall\nusability and a new security feature to block a brute force attack.\n\n* Add RateLimit to login page and API to mitigate robots attacks #167\n* Send email notification only if `email-sender` option is defined to avoid raising exception in logs #176\n* Support file restore cancellation without leaving `rdiffweb-restore` process in `<defunct>` state #174\n* Replace `python-ldap` by `ldap3` a pure python implementation to avoid dependencies on `sasl` and `ldap` binaries #186\n* Reffactor core module to allow better extendability and reusability #183\n* Add support for Debian Bookworm #180\n* Add support for Ubuntu Impish #175\n* Add rdiff-backup version to administration view\n* Run unit test during Debian build package\n* Refresh repository list automatically when required #188 #189\n* Fix error 500 displayed in status page #191\n* Improve repository browsing speed by minimizing the number of I/O call #192\n* Publish Docker image directly to DockerHub #144\n* Add REST API to manage sshkeys\n\nBreaking changes:\n\n* Ldap Password changes is not supported anymore.\n* Ldap Check Shadow expire config is not supported anymore. It should be replace by a custom filter.\n* Drop CentOS 7 and CentOS 8 support\n\n## 2.3.9 (2022-01-05)\n\nMaintenance release to fix minor issues\n\n* Improve date parsing for `backup.log` to avoid printing exception in logs #170\n* Return HTTP error 403 for invalid symlink to avoid returning a misleading HTTP 500 Server Error #168\n* Show a user friendly error message when trying to create a new user with an existing username #169\n* Handle repository without last-backup date during the notification process to ensure notifications are sent #171\n* Replace CherryPy `storage_type` by `storage_class` to avoid warning in logs\n* Update code to avoid deprecation warning where applicable\n* Add Flake8 validation to improve code quality\n* Remove Ubuntu Groovy support\n\n## 2.3.8 (2021-12-01)\n\n* Push all artefacts to nexus server including binaries and documentation\n* Fix `Chart.js` loading on Debian bullseye #164\n* Update installation steps documentation\n* Improve LDAP authentication to lookup entire directory\n* Fix usage of `--ldap-add-user-default-userroot` to avoid error related to wrong encoding\n* Improve authentication mechanics\n* Avoid raising an HTTP error 500 when login form receive invalid payload\n* Mitigate open redirect vulnerability in login form\n\n## 2.3.7 (2021-10-21)\n\n* To avoid backward compatibility issue, revert CSRF Token validation\n* Mitigate CSRF vulnerability using cookies with `SameSite=Lax`\n* Mitigate CSRF vulnerability by validating the `Origin` header when a form is submited\n* Improve usage of WTForm for all form validation\n* Update installation stepd for debian #162\n* Build Ubuntu packages and publish them to our APT repo\n\n## 2.3.6 (2021-10-20)\n\n* Broken build\n\n## 2.3.5 (2021-10-18)\n\n* Mitigate CSRF vulnerability to user, ssh and repo management with CSRF Token\n\n## 2.3.4 (2021-09-20)\n\n* Skip email notification if `email-host` configuration is not provided #157\n* Skip email notification when the new attribute value has the same value #159\n* USE LDAP `mail` attribute when creating new user from LDAP directory #156\n\n## 2.3.3 (2021-09-10)\n\n* Provide a new theme `blue` to match IKUS Soft colors #158\n\n## 2.3.2 (2021-09-07)\n\n* Automatically update user's repository list based on user's home directory\n\n## 2.3.1 (2021-07-14)\n\n* Update default `session-dir` location to `/var/lib/rdiffweb/session` to avoid using `/var/run` #148\n\n## 2.3.0 (2021-07-06)\n\n* Improve timezone handling to display date with local timezone using javascript #143\n* Improve charts by replacing d3js by chartkick #122\n* Replace the status view by something meaningful with chartkick #122\n* Provide Docker image with Rdiffweb `docker pull ikus060/rdiffweb` #55\n* Fix file and folder sorting #143\n\n## 2.2.0 (2021-05-11)\n\n* Debian package:\n  * Add rdiff-backup as dependencies to comply with Debian packaging rules\n  * Multiple other fixed to control files\n  * Use debhelper-compat (= 13)\n  * Use debhelper-compat (= 13)\n  * Run test during packaging\n  * Create default folder `/var/run/rdiffweb/sessions` to store user session\n* Use ConfigArgPare for configuration to support configuration file, environment variables and arguments to configure rdiffweb #114\n* Fix cache in localization module\n* Add `ldap-add-default-role` and `ldap-add-default-userroot` option to define default value for role and user root when creating user from LDAP #125\n* Support PostgreSQL database by replacing our storage layer by SQLAlchemy #126\n* Fix to retrieve user quota only for valid user_root #135\n* Add option `disable-ssh-keys` to disable SSH Key management\n* Use absolute URL everywhere\n* Add support for `X-Forwarded-For`, `X-Forwarded-proto` and other reverse proxy header when generating absolute URL\n* Drop Debian Stretch support\n* Implement a new background scheduler using apscheduler #82\n* Use background job to send email notification to avoid blocking web page loading #47\n* Use background job to delete repository to avoid blocking web page loading #48\n* Allow deleting a specific file or folder from the history using `rdiff-backup-delete` #128\n* Improve support for `session-dir` #131\n* Add option `admin-password` to define administrator password for better security\n* Improve performance of repository browsing\n* Add a new view to display logs of a specific repository\n* Allow downloading the log\n* Define a default limit to graph statistics to make it display faster\n* Fix `get-quota-cmd` option to properly return a value\n\n## 2.1.0 (2021-01-15)\n\n* Debian package: Remove dh-systemd from Debian build dependencies (https://bugs.debian.org/871312we)\n* Improve Quota management:\n  * `QuotaSetCmd`, `QuotaGetCmd` and `QuotaUsedCmd` options could be used to customize how to set the quota for your environment.\n  * Display user's quota in User View\n  * Display user's quota in Admin View\n  * Allow admin to update user quota from Admin View when `QuotaSetCmd` is defined.\n  * Allow admin to define user quota using human readable value (e.g.: GiB, TiB, etc.)\n  * Improve logging around quota management\n* Improve robustness when service is starting\n* Improve robustness when repository has wrong permission defined (e.g.: when some files not readable)\n* Add user id in Admin view\n* Replace `UserObject(1)` by the actual username in log file to improve debugging\n\n## 2.0.0 (2020-12-04)\n\n* Re-implement logic to update repositories views to remove duplicates and avoid nesting repo. #107\n* Handle elapsed time of days in the graph. Thanks [Nathaniel van Diepen](https://github.com/Eeems) contributions.\n* Rebrand all link to ikus-soft.com\n* Update documentation to install rdiffweb\n* Remove obsolete minify dependency\n* Drop support for python2\n* Provide null translation if translation catalogues are not found\n* Pass a LANG environment variable to rdiff-backup restore process to fix encoding issue #112\n* Remove obsolete python shebang\n* Remove execution bit (+x) on python modules\n* Provide `--help` and `--version` on `rdiffweb` executable\n* Improve cherrypy version detection\n* Do not update translation files (.mo) during build\n\n## 1.5.0 (2020-06-24)\n\nThis minor release introduce official support of rdiffweb on Debian Bullseye. It also includes some usability improvements.\n\n* Change formatting of Last Backup date for \"Updated 3 weeks ago\" to ease the readability\n* Add support for Debian Bullseye\n* Add support for Python 3.8 (#104)\n* Add warning in the users list view when a root directory is invalid (#30)\n* Add options to control search depthness (#1)\n* Print a warning in the log when the \"DefaultTheme\" value is not valid (#90)\n\n## 1.4.0 (2020-05-20)\n\nThanks to our sponsor, this release introduce a feature to have better control over the user's permission by defining 3 different levels of privilege: Admin, Maintainer and User. This addition allows you to have better control on what your users can or can't do.\n\n* Fix single repository discovery when a user's home is a rdiff-backup repository\n* [SPONSORED] Add a new setting at the user level to define the user's role. Admin,\n   Maintainer and User. Admin are allowed to do everything. Maintainer are\n   allow to browse and delete repo. Users are only allowed to browse. #94\n* Add \"Powered by\" in the web interface footer #91\n* Display a nice error message when trying to delete admin user #93\n* Introduce usage of wtforms and flash in admin users for better form validation. #96 #97\n* Update French translation\n\n## 1.3.2 (2020-04-23)\n\nThis minor releases fixed issues found while testing release 1.3.0.\n\n* Fix lookup of executable rdiff-backup and rdiffweb-restore to search in current virtualenv first\n* Fix repository view when multiple repo path are conflicting\n* Fix logging of rdiffweb-restore subprocess\n\n## 1.3.1 (2020-04-10)\n\nThis minor release enforces security of the password stored in rdiffweb database to make use of a better encryption using SSHA.\nOnly new passwords will make use of the SSHA scheme.\n\n* Enforce password encryption by using SSHA scheme #88\n\n## 1.3.0 (2020-04-07)\n\nThis release focuses on improving the restore of big archives. The download should be much faster to start. Major enhancement was made to offload the processing outside the web server. And all of this is still compatible with rdiff-backup v1.2.8 and the latest v2.0.0.\n\n* Restore file and folder in a subprocess to make the download start faster\n* Fix encoding of archive on Python3.6 (CentOS 7) by using PAX format\n* Add support to restore files and folders using rdiff-backup2\n* Remove obsolete dependencies `pysqlite2`\n* Fix issue creating duplicate entries of repository in the database\n\n## 1.2.2 (2020-03-05)\n\nThis release provides little improvement to the v1.2.x including official support of rdiff-backup v2.0.0.\n\n* Enhance the repository to invite users to refresh the repository when the view is empty.\n* Support rdiff-backup v2.0.0\n* Deprecate support for cherrypy 4, 5, 6 and 7\n* Improve loading of repository data (cache status and entries)\n* Restore compatibility with SQLite 3.7 (CentOS7)\n\nKnown issues:\n\n* Filename encoding in tar.gz and zip file might not be accurate if you are running Python 3.6 (CentOS7)\n\n## 1.2.1 (2020-02-08)\n\nLittle bug fix following the previous release\n\n* Fix 404 error when trying to access other users repo as admin\n* Fix logging format for cherrypy logs to matches rdiffweb format\n* Add log rotation by default\n\n## 1.2.0 (2020-01-30)\n\nThis release focus on improving the database layers for better extendability to add more type of data and to support more databases backend like postgresql in the near future.\n\n* Add explicit testing for Debian Stretch & Buster\n* Change the persistence layers\n  * Minimize number of SQL queries\n  * Add object lazy loading\n  * Add object data caching\n* Fix bugs with SQLite <= 3.16 (Debian Stretch)\n\n## 1.1.0 (2019-10-31)\n\nThis release focus on improving the admin area and building the fundation for repository access control list (ACL).\n\n* Update documentation from PDSL web site\n* Improve the navigation bar layout\n* Update the login page headline\n* Update jinja2 version to allow 2.10.x\n* Show server log in admin area\n* Reduce code smell\n* Add System information in admin area\n* Validate credential using local database before LDAP\n* Reffactoring templates macros\n* Enhance user's view search bar\n* Change repository URL to username/repopath\n* Add System information in admin area\n* Improve testcases\n* Clean-up obsolete code\n* Fix issue with captital case encoding name\n* Fix compilation of less files\n* Fix google font import\n\n## 1.0.3 (2019-10-04)\n\n* Removing the auto update repos\n\n## 1.0.2 (2019-10-01)\n\n* Create \"admin\" user if missing\n* Update french translation\n\n## 1.0.1 (2019-09-22)\n\n* Update installation documentation\n* Fix removal of SSH Key\n* Return meaningful error to the user trying to add an existing SSH key\n\n## 1.0.0 (2019-09-11)\n\n* Make repository removal more robust\n* Improve performance of librdiff\n* Add new RESTful api\n* Return the right HTTP 401 or 402 error code for authentication\n* Fix bug introduce by upgrade to Jinja2 + python3\n* Store ssh keys in database and disk\n* Add support for theme (default, orange)\n* Remove deprecated profiling code\n* Add disk usage support / quota\n* Add support of cherrypy v18\n* Drop support of cherrypy v3.2.2\n* Add wsgi entry point\n* Replace the plugins architecture to ease implementation\n* Numerous bug fixes\n\n## 0.10.9 (2019-05-22)\n\n* Better error handling when error.log file are not valid gzip file\n", "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nimport cherrypy\nfrom wtforms.fields import SelectField, StringField, SubmitField\nfrom wtforms.validators import ValidationError\nfrom wtforms.widgets import HiddenInput\n\nfrom rdiffweb.controller import Controller, flash\nfrom rdiffweb.controller.form import CherryForm\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import gettext_lazy as _\n\n\nclass AbstractMfaForm(CherryForm):\n    def __init__(self, obj, **kwargs):\n        assert obj\n        super().__init__(obj=obj, **kwargs)\n        # Keep only one of the enable or disable button\n        if obj.mfa:\n            self.enable_mfa.widget = HiddenInput()\n            self.enable_mfa.data = ''\n        else:\n            self.disable_mfa.widget = HiddenInput()\n            self.disable_mfa.data = ''\n\n\nclass MfaStatusForm(AbstractMfaForm):\n    mfa = SelectField(\n        _('Two-Factor Authentication (2FA) Status'),\n        coerce=int,\n        choices=[\n            (UserObject.DISABLED_MFA, _(\"Disabled\")),\n            (UserObject.ENABLED_MFA, _(\"Enabled\")),\n        ],\n        render_kw={'readonly': True, 'disabled': True, 'data-beta': '1'},\n    )\n    enable_mfa = SubmitField(_('Enable Two-Factor Authentication'), render_kw={\"class\": \"btn-success\"})\n    disable_mfa = SubmitField(_('Disable Two-Factor Authentication'), render_kw={\"class\": \"btn-warning\"})\n\n\nclass MfaToggleForm(AbstractMfaForm):\n    code = StringField(\n        _('Verification code'),\n        render_kw={\n            \"placeholder\": _('Enter verification code here'),\n            \"autocomplete\": \"off\",\n            \"autocorrect\": \"off\",\n            \"autofocus\": \"autofocus\",\n        },\n    )\n    enable_mfa = SubmitField(_('Enable Two-Factor Authentication'), render_kw={\"class\": \"btn-success\"})\n    disable_mfa = SubmitField(_('Disable Two-Factor Authentication'), render_kw={\"class\": \"btn-warning\"})\n    resend_code = SubmitField(\n        _('Resend code to my email'),\n        render_kw={\"class\": \"btn-link\"},\n    )\n\n    @property\n    def app(self):\n        return cherrypy.request.app\n\n    def populate_obj(self, userobj):\n        # Enable or disable MFA only when a code is provided.\n        try:\n            if self.enable_mfa.data:\n                userobj.mfa = UserObject.ENABLED_MFA\n                userobj.commit()\n                flash(_(\"Two-Factor authentication enabled successfully.\"), level='success')\n            elif self.disable_mfa.data:\n                userobj.mfa = UserObject.DISABLED_MFA\n                userobj.commit()\n                flash(_(\"Two-Factor authentication disabled successfully.\"), level='success')\n        except Exception as e:\n            userobj.rollback()\n            flash(str(e), level='warning')\n\n    def validate_code(self, field):\n        # Code is required for enable_mfa and disable_mfa\n        if self.enable_mfa.data or self.disable_mfa.data:\n            if not self.code.data:\n                raise ValidationError(_(\"Enter the verification code to continue.\"))\n            # Validate code\n            if not cherrypy.tools.auth_mfa.verify_code(self.code.data, False):\n                raise ValidationError(_(\"Invalid verification code.\"))\n\n    def validate(self, extra_validators=None):\n        if not (self.enable_mfa.data or self.disable_mfa.data or self.resend_code.data):\n            raise ValidationError(_('Invalid operation'))\n        return super().validate()\n\n\nclass PagePrefMfa(Controller):\n    @cherrypy.expose\n    @cherrypy.tools.ratelimit(methods=['POST'])\n    def default(self, action=None, **kwargs):\n        form = MfaToggleForm(obj=self.app.currentuser)\n        if form.is_submitted():\n            if form.validate():\n                if form.resend_code.data:\n                    self.send_code()\n                elif form.enable_mfa.data or form.disable_mfa.data:\n                    form.populate_obj(self.app.currentuser)\n                    form = MfaStatusForm(obj=self.app.currentuser)\n            # Send verification code if previous code expired.\n            elif cherrypy.tools.auth_mfa.is_code_expired():\n                self.send_code()\n        else:\n            form = MfaStatusForm(obj=self.app.currentuser)\n        params = {\n            'form': form,\n        }\n        return self._compile_template(\"prefs_mfa.html\", **params)\n\n    def send_code(self):\n        userobj = self.app.currentuser\n        if not userobj.email:\n            flash(_(\"To continue, you must set up an email address for your account.\"), level='warning')\n            return\n        code = cherrypy.tools.auth_mfa.generate_code()\n        body = self.app.templates.compile_template(\n            \"email_verification_code.html\", **{\"header_name\": self.app.cfg.header_name, 'user': userobj, 'code': code}\n        )\n        cherrypy.engine.publish('queue_mail', to=userobj.email, subject=_(\"Your verification code\"), message=body)\n        flash(_(\"A new verification code has been sent to your email.\"))\n", "# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport argparse\nimport logging\nimport re\nimport sys\nfrom collections import OrderedDict\n\nimport cherrypy\nimport configargparse\nimport pkg_resources\nfrom cherrypy import Application\n\n# Define the logger\nlogger = logging.getLogger(__name__)\n\n# Get rdiffweb version.\ntry:\n    VERSION = pkg_resources.get_distribution(\"rdiffweb\").version\nexcept pkg_resources.DistributionNotFound:\n    VERSION = \"DEV\"\n\n\ndef css_color(value):\n    if not re.match('^#?(?:[0-9a-fA-F]{3}){1,2}$', value):\n        raise argparse.ArgumentTypeError(\"invalid CSS Color\")\n    if value.startswith('#'):\n        return value\n    return '#' + value\n\n\ndef css_font(value):\n    if not re.match('^[a-zA-Z0-9 ]+$', value):\n        raise argparse.ArgumentTypeError(\"invalid CSS Font name\")\n    return value\n\n\ndef get_parser():\n    # Get global config argument parser\n    parser = configargparse.ArgumentParser(\n        prog='rdiffweb',\n        description='Web interface to browse and restore rdiff-backup repositories.',\n        default_config_files=['/etc/rdiffweb/rdw.conf', '/etc/rdiffweb/rdw.conf.d/*.conf'],\n        add_env_var_help=True,\n        auto_env_var_prefix='RDIFFWEB_',\n        config_file_parser_class=ConfigFileParser,\n        conflict_handler='resolve',\n    )\n\n    parser.add_argument(\n        '-f', '--config', is_config_file=True, metavar='FILE', help='location of Rdiffweb configuration file'\n    )\n\n    parser.add(\n        '--database-uri',\n        '--sqlitedb-file',\n        '--sqlitedbfile',\n        metavar='URI',\n        help=\"\"\"Location of the database used for persistence. SQLite and PostgreSQL\n            database are supported officially. To use a SQLite database you may\n            define the location using a file path or a URI.\n            e.g.: /srv/rdiffweb/file.db or sqlite:///srv/rdiffweb/file.db`.\n            To use PostgreSQL server you must provide\n            a URI similar to postgresql://user:pass@10.255.1.34/dbname and you\n            must install required dependencies.\n            By default, Rdiffweb uses a SQLite embedded database located at\n            /etc/rdiffweb/rdw.db.\"\"\",\n        default='/etc/rdiffweb/rdw.db',\n    )\n\n    parser.add_argument(\n        '-d',\n        '--debug',\n        action='store_true',\n        help='enable rdiffweb debug mode - change the log level to DEBUG, print exception stack trace to the web interface and show SQL query in logs',\n    )\n\n    parser.add_argument(\n        '--admin-user',\n        '--adminuser',\n        metavar='USERNAME',\n        help='administrator username. The administrator user get created on startup if the database is empty.',\n        default='admin',\n    )\n\n    parser.add_argument(\n        '--admin-password',\n        metavar='USERNAME',\n        help=\"\"\"administrator encrypted password as SSHA. Read online\n            documentation to know more about how to encrypt your password\n            into SSHA or use http://projects.marsching.org/weave4j/util/genpassword.php\n            When defined, administrator password cannot be updated using the web interface.\n            When undefined, default administrator password is `admin123` and\n            it can be updated using the web interface.\"\"\",\n    )\n\n    parser.add_argument(\n        '--default-theme',\n        '--defaulttheme',\n        help='define the default theme. Either: default, blue, orange or custom. Define a default set of colors and font for the web interface. Also read more about link-color, navbar-cloor and font-family.',\n        choices=['default', 'blue', 'orange', 'custom'],\n        default='default',\n    )\n\n    parser.add_argument(\n        '--environment',\n        choices=['development', 'production'],\n        help='define the type of environment: development, production. This is used to limit the information shown to the user when an error occur.',\n        default='production',\n    )\n\n    parser.add_argument(\n        '--email-encryption',\n        '--emailencryption',\n        choices=['none', 'ssl', 'starttls'],\n        help='type of encryption to be used when establishing communication with SMTP server. Default: none',\n        default='none',\n    )\n\n    parser.add_argument(\n        '--email-host',\n        '--emailhost',\n        metavar='HOST',\n        help='SMTP server used to send email in the form <host>:<port>. If the port is not provided, default to standard port 25 or 465 is used. e.g.: smtp.gmail.com:587',\n    )\n\n    parser.add_argument(\n        '--email-sender',\n        '--emailsender',\n        metavar='EMAIL',\n        help='email addres used for the `from:` field when sending email.',\n    )\n\n    parser.add_argument(\n        '--email-notification-time',\n        '--emailnotificationtime',\n        metavar='TIME',\n        help='time when the email notifcation should be sent for inactive backups. e.g.: 22:00 Default value: 23:00',\n        default='23:00',\n    )\n\n    parser.add_argument(\n        '--email-username',\n        '--emailusername',\n        metavar='USERNAME',\n        help='username used for authentication with the SMTP server.',\n    )\n\n    parser.add_argument(\n        '--email-password',\n        '--emailpassword',\n        metavar='PASSWORD',\n        help='password used for authentication with the SMTP server.',\n    )\n\n    parser.add_argument(\n        '--email-send-changed-notification',\n        '--emailsendchangednotification',\n        help='True to send notification when sensitive information get change in user profile.',\n        action='store_true',\n        default=True,\n    )\n\n    parser.add_argument(\n        '--brand-favicon',\n        '--favicon',\n        dest='favicon',\n        help='location of an icon to be used as a favicon displayed in web browser.',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--footer-name',\n        '--footername',\n        help=argparse.SUPPRESS,\n        default='rdiffweb',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--footer-url',\n        '--footerurl',\n        help=argparse.SUPPRESS,\n        default='https://rdiffweb.org/',\n    )  # @UndefinedVariable\n\n    parser.add_argument(\n        '--brand-logo',\n        '--logo',\n        dest='logo',\n        help='location of an image (preferably a .svg) to be used as a replacement for the rdiffweb logo displayed in Login page.',\n    )\n\n    parser.add_argument(\n        '--brand-header-logo',\n        '--header-logo',\n        '--headerlogo',\n        dest='header_logo',\n        help='location of an image (preferably a .svg) to be used as a replacement for the rdiffweb header logo displayed in navigation bar.',\n    )\n\n    parser.add_argument(\n        '--brand-header-name',\n        '--header-name',\n        '--headername',\n        dest='header_name',\n        help='application name displayed in the title bar and header menu.',\n        default='Rdiffweb',\n    )\n\n    parser.add_argument(\n        '--brand-link-color',\n        '--link-color',\n        type=css_color,\n        dest='link_color',\n        help='define a CSS color to be used for link. e.g.: ff0000',\n    )\n\n    parser.add_argument(\n        '--brand-btn-bg-color',\n        '--btn-bg-color',\n        type=css_color,\n        dest='btn_bg_color',\n        help=\"define a CSS color to be used for button's background. Default to `link-color` if undefined\",\n    )\n\n    parser.add_argument(\n        '--brand-btn-fg-color',\n        '--btn-fg-color',\n        type=css_color,\n        dest='btn_fg_color',\n        help=\"define a CSS color to be used for button's text. Default to white if undefined\",\n    )\n\n    parser.add_argument(\n        '--brand-btn-rounded',\n        '--btn-rounded',\n        type=bool,\n        dest='btn_rounded',\n        help='define if the button should be rounded',\n    )\n\n    parser.add_argument(\n        '--brand-navbar-color',\n        '--navbar-color',\n        type=css_color,\n        dest='navbar_color',\n        help='define a CSS color to be used for navigation bar background e.g.: 00ff00',\n    )\n\n    parser.add_argument(\n        '--brand-font-family',\n        '--font-family',\n        type=css_font,\n        dest='font_family',\n        help='define a CSS font to be used as main font. e.g.: Roboto',\n    )\n\n    parser.add_argument(\n        '--ldap-add-missing-user',\n        '--addmissinguser',\n        action='store_true',\n        help='enable creation of users from LDAP when the credential are valid.',\n        default=False,\n    )\n\n    parser.add_argument(\n        '--ldap-add-user-default-role',\n        help='default role used when creating users from LDAP. This parameter is only useful when `--ldap-add-missing-user` is enabled.',\n        default='user',\n        choices=['admin', 'maintainer', 'user'],\n    )\n\n    parser.add_argument(\n        '--ldap-add-user-default-userroot',\n        help='default user root directory used when creating users from LDAP. LDAP attributes may be used to define the default location. e.g.: `/backups/{uid[0]}/`. This parameter is only useful when `--ldap-add-missing-user` is enabled.',\n        default='',\n    )\n\n    parser.add_argument(\n        '--ldap-uri',\n        '--ldapuri',\n        help='URL to the LDAP server used to validate user credentials. e.g.: ldap://localhost:389',\n    )\n\n    parser.add_argument(\n        '--ldap-base-dn',\n        '--ldapbasedn',\n        metavar='DN',\n        help='DN of the branch of the directory where all searches should start from. e.g.: dc=my,dc=domain',\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-scope',\n        '--ldapscope',\n        help='scope of the search. Can be either base, onelevel or subtree',\n        choices=['base', 'onelevel', 'subtree'],\n        default=\"subtree\",\n    )\n\n    parser.add_argument('--ldap-tls', '--ldaptls', action='store_true', help='enable TLS')\n\n    parser.add_argument(\n        '--ldap-username-attribute',\n        '--ldapattribute',\n        metavar='ATTRIBUTE',\n        help=\"The attribute to search username. If no attributes are provided, the default is to use `uid`. It's a good idea to choose an attribute that will be unique across all entries in the subtree you will be using.\",\n        default='uid',\n    )\n\n    parser.add_argument(\n        '--ldap-filter',\n        '--ldapfilter',\n        help=\"search filter to limit LDAP lookup. If not provided, defaults to (objectClass=*), which searches for all objects in the tree.\",\n        default='(objectClass=*)',\n    )\n\n    parser.add_argument(\n        '--ldap-required-group',\n        '--ldaprequiredgroup',\n        metavar='GROUPNAME',\n        help=\"name of the group of which the user must be a member to access rdiffweb. Should be used with ldap-group-attribute and ldap-group-attribute-is-dn.\",\n    )\n\n    parser.add_argument(\n        '--ldap-group-attribute',\n        '--ldapgroupattribute',\n        metavar='ATTRIBUTE',\n        help=\"name of the attribute defining the groups of which the user is a member. Should be used with ldap-required-group and ldap-group-attribute-is-dn.\",\n        default='member',\n    )\n\n    parser.add_argument(\n        '--ldap-group-attribute-is-dn',\n        '--ldapgroupattributeisdn',\n        help=\"True if the content of the attribute `ldap-group-attribute` is a DN.\",\n        action='store_true',\n    )\n\n    parser.add_argument(\n        '--ldap-bind-dn',\n        '--ldapbinddn',\n        metavar='DN',\n        help=\"optional DN used to bind to the server when searching for entries. If not provided, will use an anonymous bind.\",\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-bind-password',\n        '--ldapbindpassword',\n        metavar='PASSWORD',\n        help=\"password to use in conjunction with LdapBindDn. Note that the bind password is probably sensitive data, and should be properly protected. You should only use the LdapBindDn and LdapBindPassword if you absolutely need them to search the directory.\",\n        default=\"\",\n    )\n\n    parser.add_argument(\n        '--ldap-version',\n        '--ldapversion',\n        '--ldapprotocolversion',\n        help=\"version of LDAP in use either 2 or 3. Default to 3.\",\n        default=3,\n        type=int,\n        choices=[2, 3],\n    )\n\n    parser.add_argument(\n        '--ldap-network-timeout',\n        '--ldapnetworktimeout',\n        metavar='SECONDS',\n        help=\"timeout in seconds value used for LDAP connection\",\n        default=100,\n        type=int,\n    )\n\n    parser.add_argument(\n        '--ldap-timeout',\n        '--ldaptimeout',\n        metavar='SECONDS',\n        help=\"timeout in seconds value used for LDAP request\",\n        default=300,\n        type=int,\n    )\n\n    parser.add_argument(\n        '--ldap-encoding',\n        '--ldapencoding',\n        metavar='ENCODING',\n        help=\"encoding used by your LDAP server.\",\n        default=\"utf-8\",\n    )\n\n    parser.add_argument(\n        '--log-access-file', '--logaccessfile', metavar='FILE', help='location of Rdiffweb log access file.'\n    )\n\n    parser.add_argument(\n        '--log-file',\n        '--logfile',\n        metavar='FILE',\n        help='location of Rdiffweb log file. Print log to the console if not define in config file.',\n    )\n\n    parser.add_argument(\n        '--log-level',\n        '--loglevel',\n        help='Define the log level.',\n        choices=['ERROR', 'WARN', 'INFO', 'DEBUG'],\n        default='INFO',\n    )\n\n    parser.add_argument(\n        '--max-depth',\n        '--maxdepth',\n        metavar='DEPTH',\n        help=\"define the maximum folder depthness to search into the user's root directory to find repositories. This is commonly used if you repositories are organised with multiple sub-folder.\",\n        type=int,\n        default=3,\n    )\n\n    parser.add('--quota-set-cmd', '--quotasetcmd', metavar='COMMAND', help=\"command line to set the user's quota.\")\n\n    parser.add('--quota-get-cmd', '--quotagetcmd', metavar='COMMAND', help=\"command line to get the user's quota.\")\n\n    parser.add(\n        '--quota-used-cmd', '--quotausedcmd', metavar='COMMAND', help=\"Command line to get user's quota disk usage.\"\n    )\n\n    parser.add(\n        '--remove-older-time',\n        '--removeoldertime',\n        metavar='TIME',\n        help=\"Time when to execute the remove older scheduled job. e.g.: 22:30\",\n        default='23:00',\n    )\n\n    parser.add('--server-host', '--serverhost', metavar='IP', default='127.0.0.1', help='IP address to listen to')\n\n    parser.add(\n        '--server-port',\n        '--serverport',\n        metavar='PORT',\n        help='port to listen to for HTTP request',\n        default='8080',\n        type=int,\n    )\n\n    parser.add(\n        '--rate-limit-dir',\n        '--session-dir',\n        '--sessiondir',\n        metavar='FOLDER',\n        help='location where to store rate-limit information. When undefined, the data is kept in memory. `--session-dir` are deprecated and kept for backward compatibility.',\n    )\n\n    parser.add(\n        '--rate-limit',\n        metavar='LIMIT',\n        type=int,\n        default=20,\n        help='maximum number of requests per hour that can be made on sensitive endpoints. When this limit is reached, an HTTP 429 message is returned to the user or the user is logged out. This security measure is used to limit brute force attacks on the login page and the RESTful API. default: 20 requests / hour',\n    )\n\n    parser.add(\n        '--session-idle-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the amount of time a session will remain active in case there is no activity in the session. User Session will be revoke after this period of inactivity, unless the user selected \"remember me\". Default 5 minutes.',\n        default=5,\n    )\n\n    parser.add(\n        '--session-absolute-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the maximum amount of time a session can be active. After this period, user is forced to (re)authenticate, unless the user selected \"remember me\". Default 20 minutes.',\n        default=20,\n    )\n\n    parser.add(\n        '--session-persistent-timeout',\n        metavar='MINUTES',\n        help='This timeout defines the maximum amount of time to remember and trust a user device. This timeout is used when user select \"remember me\". Default 30 days.',\n        default=43200,\n    )\n\n    parser.add(\n        '--ssl-certificate',\n        '--sslcertificate',\n        metavar='CERT',\n        help='location of the SSL Certification to enable HTTPS (not recommended)',\n    )\n\n    parser.add(\n        '--ssl-private-key',\n        '--sslprivatekey',\n        metavar='KEY',\n        help='location of the SSL Private Key to enable HTTPS (not recommended)',\n    )\n\n    parser.add(\n        '--tempdir',\n        metavar='FOLDER',\n        help='alternate temporary folder to be used when restoring files. Might be useful if the default location has limited disk space. Default to TEMPDIR environment or `/tmp`.',\n    )\n\n    parser.add(\n        '--disable-ssh-keys',\n        action='store_true',\n        help='used to hide SSH Key management to avoid users to add or remove SSH Key using the web application',\n        default=False,\n    )\n\n    parser.add(\n        '--password-min-length',\n        type=int,\n        help=\"Minimum length of the user's password\",\n        default=8,\n    )\n\n    parser.add(\n        '--password-max-length',\n        type=int,\n        help=\"Maximum length of the user's password\",\n        default=128,\n    )\n\n    parser.add(\n        '--password-score',\n        type=lambda x: max(1, min(int(x), 4)),\n        help=\"Minimum zxcvbn's score for password. Value from 1 to 4. Default value 2. Read more about it here: https://github.com/dropbox/zxcvbn\",\n        default=2,\n    )\n\n    parser.add_argument('--version', action='version', version='%(prog)s ' + VERSION)\n\n    # Here we append a list of arguments for each locale.\n    flags = ['--welcome-msg'] + ['--welcome-msg-' + i for i in ['ca', 'en', 'es', 'fr', 'ru']] + ['--welcomemsg']\n    parser.add_argument(\n        *flags,\n        metavar='HTML',\n        help='replace the welcome message displayed in the login page for default locale or for a specific locale',\n        action=LocaleAction\n    )\n    return parser\n\n\ndef parse_args(args=None, config_file_contents=None):\n    args = sys.argv[1:] if args is None else args\n    return get_parser().parse_args(args, config_file_contents=config_file_contents)\n\n\nclass LocaleAction(argparse.Action):\n    \"\"\"\n    Custom Action to support defining arguments with locale.\n    \"\"\"\n\n    def __init__(self, option_strings, dest, nargs=None, **kwargs):\n        super(LocaleAction, self).__init__(option_strings, dest, **kwargs)\n\n    def __call__(self, parser, namespace, value, option_string=None):\n        if option_string[-3] == '-':\n            # When using arguments, we can extract the locale from the argument key\n            locale = option_string[-2:]\n        elif value[2] == ':':\n            # When using config file, the locale could be extract from the value e.g. fr:message\n            locale = value[0:2]\n            value = value[3:]\n        else:\n            locale = ''\n        # Create a dictionary with locale.\n        items = getattr(namespace, self.dest) or {}\n        items[locale] = value\n        setattr(namespace, self.dest, items)\n\n\nclass ConfigFileParser(object):\n    \"\"\"\n    Custom config file parser to support rdiffweb config file format.\n    \"\"\"\n\n    def get_syntax_description(self):\n        msg = \"Configuration file syntax allows: key=value, flag=true.\"\n        return msg\n\n    def parse(self, stream):\n        \"\"\"\n        Used to read the rdiffweb config file as dict.\n        \"\"\"\n\n        result = OrderedDict()\n\n        for i, line in enumerate(stream):\n            line = re.compile(\"(.*?)#.*\").sub(r'\\1', line).strip()\n            if not line:\n                continue\n            if '=' not in line:\n                raise configargparse.ConfigFileParserException(\n                    \"Unexpected line {} in {}: {}\".format(i, getattr(stream, 'name', 'stream'), line)\n                )\n            split_line = line.partition('=')\n            if len(split_line) != 3:\n                raise configargparse.ConfigFileParserException(\n                    \"Unexpected line {} in {}: {}\".format(i, getattr(stream, 'name', 'stream'), line)\n                )\n\n            # Get key & value\n            key = split_line[0].lower().strip().replace('_', '-')\n            value = split_line[2].strip()\n\n            # Support welcome-msg locale for backward compatibility\n            m = re.match(\"welcome-?msg\\\\[(ca|en|es|fr|ru)\\\\]\", key.lower())\n            if m:\n                key = \"welcome-msg-\" + m.group(1)\n                value = m.group(1) + \":\" + value\n\n            result[key] = value\n\n        # This dictionary is read by cherrypy. So create appropriate structure.\n        return result\n\n\nclass Option(object):\n    def __init__(self, key):\n        assert key\n        self.key = key\n\n    def __get__(self, instance, owner):\n        \"\"\"\n        Return a property to wrap the given option.\n        \"\"\"\n        return self.get(instance)\n\n    def get(self, instance=None):\n        \"\"\"\n        Return the value of this options.\n        \"\"\"\n        if isinstance(instance, Application):\n            app = instance\n        else:\n            app = cherrypy.request.app or getattr(instance, 'app', None)\n        assert app, \"Option() can't get reference to app\"\n        assert app.cfg, \"Option() can't get reference to app.cfg\"\n        return getattr(app.cfg, self.key)\n", "# -*- coding: utf-8 -*-\n# udb, A web interface to manage IT network\n# Copyright (C) 2022 IKUS Software inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport os\nimport pickle\nimport threading\nimport time\nfrom collections import namedtuple\n\nimport cherrypy\n\nTracker = namedtuple('Tracker', ['token', 'hits', 'timeout'])\n\n\nclass _DataStore:\n    \"\"\"\n    Base class for rate limit data store\n    \"\"\"\n\n    def __init__(self, **kwargs):\n        self._locks = {}\n\n    def get_and_increment(self, token, delay, hit=1):\n        lock = self._locks.setdefault(token, threading.RLock())\n        with lock:\n            tracker = self._load(token)\n            if tracker is None or tracker.timeout < time.time():\n                tracker = Tracker(token=token, hits=0, timeout=int(time.time() + delay))\n            tracker = tracker._replace(hits=tracker.hits + hit)\n            self._save(tracker)\n        return tracker.hits\n\n    def _save(self, tracker):\n        raise NotImplementedError\n\n    def _load(self, token):\n        raise NotImplementedError\n\n\nclass RamRateLimit(_DataStore):\n    \"\"\"\n    Store rate limit information in memory.\n    \"\"\"\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self._data = {}\n\n    def _load(self, token):\n        return self._data.get(token, None)\n\n    def _save(self, tracker):\n        self._data[tracker.token] = tracker\n\n\nclass FileRateLimit(_DataStore):\n    \"\"\"\n    Store rate limit information in files.\n    \"\"\"\n\n    PREFIX = 'ratelimit-'\n    pickle_protocol = pickle.HIGHEST_PROTOCOL\n\n    def __init__(self, storage_path, **kwargs):\n        super().__init__(**kwargs)\n        # The 'storage_path' arg is required for file-based datastore.\n        assert (\n            storage_path\n        ), 'FileRateLimit required a storage_path `tools.ratelimit.storage_path = \"/home/site/ratelimit\"`'\n        self.storage_path = os.path.abspath(storage_path)\n\n    def _path(self, token):\n        assert token\n        f = os.path.join(self.storage_path, self.PREFIX + token.strip('/').replace('/', '-'))\n        if not os.path.abspath(f).startswith(self.storage_path):\n            raise ValueError('invalid token')\n        return f\n\n    def _load(self, token):\n        path = self._path(token)\n        try:\n            f = open(path, 'rb')\n            try:\n                return pickle.load(f)\n            finally:\n                f.close()\n        except Exception:\n            # Drop session data if invalid\n            pass\n        return None\n\n    def _save(self, tracker):\n        path = self._path(tracker.token)\n        f = open(path, 'wb')\n        try:\n            pickle.dump(tracker, f, self.pickle_protocol)\n        finally:\n            f.close()\n\n\ndef check_ratelimit(\n    delay=3600, limit=25, return_status=429, logout=False, scope=None, methods=None, debug=False, hit=1, **conf\n):\n    \"\"\"\n    Verify the ratelimit. By default return a 429 HTTP error code (Too Many Request). After 25 request within the same hour.\n\n    Arguments:\n        delay:         Time window for analysis in seconds. Default per hour (3600 seconds)\n        limit:         Number of request allowed for an entry point. Default 25\n        return_status: HTTP Error code to return.\n        logout:        True to logout user when limit is reached\n        scope:         if specify, define the scope of rate limit. Default to path_info.\n        methods:       if specify, only the methods in the list will be rate limited.\n    \"\"\"\n    assert delay > 0, 'invalid delay'\n\n    # Check if limit is enabled\n    if limit <= 0:\n        return\n\n    # Check if this 'method' should be rate limited\n    request = cherrypy.request\n    if methods is not None and request.method not in methods:\n        if debug:\n            cherrypy.log(\n                'skip rate limit for HTTP method %s' % (request.method,),\n                'TOOLS.RATELIMIT',\n            )\n        return\n\n    # If datastore is not pass as configuration, create it for the first time.\n    datastore = getattr(cherrypy.request.app, '_ratelimit_datastore', None)\n    if datastore is None:\n        # Create storage using storage class\n        storage_class = conf.get('storage_class', RamRateLimit)\n        datastore = storage_class(**conf)\n        cherrypy.request.app._ratelimit_datastore = datastore\n\n    # If user is authenticated, use the username else use the ip address\n    identifier = request.remote.ip\n    if hasattr(cherrypy.serving, 'session') and cherrypy.serving.session.get('_cp_username', None):\n        identifier = cherrypy.serving.session.get('_cp_username', None)\n    token = identifier + '.' + (scope or request.path_info)\n\n    # Get hits count using datastore.\n    hits = datastore.get_and_increment(token, delay, hit)\n    if debug:\n        cherrypy.log(\n            'check and increase rate limit for scope %s, limit %s, hits %s' % (token, limit, hits), 'TOOLS.RATELIMIT'\n        )\n\n    # Verify user has not exceeded rate limit\n    if limit <= hits:\n        if logout:\n            if hasattr(cherrypy.serving, 'session'):\n                cherrypy.serving.session.clear()\n            raise cherrypy.HTTPRedirect(\"/\")\n\n        raise cherrypy.HTTPError(return_status)\n\n\ndef hit(hit=1):\n    \"\"\"\n    May be called directly by handlers to add a hit for the given request.\n    \"\"\"\n    conf = cherrypy.tools.ratelimit._merged_args()\n    conf['hit'] = hit\n    cherrypy.tools.ratelimit.callable(**conf)\n\n\ncherrypy.tools.ratelimit = cherrypy.Tool('before_handler', check_ratelimit, priority=60)\n\n\ncherrypy.tools.ratelimit.hit = hit\n"], "filenames": ["README.md", "rdiffweb/controller/page_pref_mfa.py", "rdiffweb/core/config.py", "rdiffweb/tools/ratelimit.py"], "buggy_code_start_loc": [115, 109, 474, 153], "buggy_code_end_loc": [115, 109, 475, 154], "fixing_code_start_loc": [116, 110, 474, 153], "fixing_code_end_loc": [117, 111, 475, 157], "type": "CWE-770", "message": "Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.5.", "other": {"cve": {"id": "CVE-2022-4723", "sourceIdentifier": "security@huntr.dev", "published": "2022-12-27T15:15:11.977", "lastModified": "2023-01-05T14:37:27.907", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.5."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.8, "impactScore": 5.5}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-770"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ikus-soft:rdiffweb:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.5.5", "matchCriteriaId": "16348FC3-32AD-4A89-937B-E3A5249CE371"}]}]}], "references": [{"url": "https://github.com/ikus060/rdiffweb/commit/6e9ee210548f6d3210704cac302cfc7cdb239765", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/9369681b-8bfc-4146-a54c-c5108442d92c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ikus060/rdiffweb/commit/6e9ee210548f6d3210704cac302cfc7cdb239765"}}