{"buggy_code": ["/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2020 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.netmgt.config;\n\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.StringWriter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Optional;\nimport java.util.TreeMap;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReadWriteLock;\nimport java.util.concurrent.locks.ReentrantReadWriteLock;\n\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.lang.StringUtils;\nimport org.jasypt.util.password.PasswordEncryptor;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport org.opennms.core.xml.JaxbUtils;\nimport org.opennms.netmgt.config.api.UserConfig;\nimport org.opennms.netmgt.config.users.Contact;\nimport org.opennms.netmgt.config.users.DutySchedule;\nimport org.opennms.netmgt.config.users.Header;\nimport org.opennms.netmgt.config.users.Password;\nimport org.opennms.netmgt.config.users.User;\nimport org.opennms.netmgt.config.users.Userinfo;\nimport org.opennms.netmgt.events.api.EventConstants;\nimport org.opennms.netmgt.model.OnmsUser;\nimport org.opennms.netmgt.model.OnmsUserList;\n\n/**\n * <p>Abstract UserManager class.</p>\n *\n * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n * @author <a href=\"mailto:brozow@opennms.org\">Matt Brozowski</a>\n * @author <a href=\"mailto:ranger@opennms.org\">Benjamin Reed</a>\n * @author <a href=\"mailto:jeffg@opennms.org\">Jeff Gehlbach</a>\n */\npublic abstract class UserManager implements UserConfig {\n\tpublic static final String ALLOW_UNSALTED_PROPERTY = \"org.opennms.users.allowUnsalted\";\n    private final boolean m_allowUnsalted;\n\n    private static final char[] HEX = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n\n    private static final PasswordEncryptor s_passwordEncryptor = new StrongPasswordEncryptor();\n\n    private final ReadWriteLock m_readWriteLock = new ReentrantReadWriteLock();\n    private final Lock m_readLock = m_readWriteLock.readLock();\n    private final Lock m_writeLock = m_readWriteLock.writeLock();\n\n    protected GroupManager m_groupManager;\n    /**\n     * A mapping of user IDs to the User objects\n     */\n    protected Map<String, User> m_users;\n    /**\n     * The duty schedules for each user\n     */\n    protected Map<String, List<DutySchedule>> m_dutySchedules;\n    private Header oldHeader;\n\n    /**\n     * <p>Constructor for UserManager.</p>\n     *\n     * @param groupManager a {@link org.opennms.netmgt.config.GroupManager} object.\n     */\n    protected UserManager(final GroupManager groupManager) {\n        m_groupManager = groupManager;\n        m_allowUnsalted = Boolean.parseBoolean(System.getProperty(ALLOW_UNSALTED_PROPERTY, \"true\"));\n    }\n    \n    /**\n     * <p>parseXML</p>\n     *\n     * @param in a {@link java.io.InputStream} object.\n     */\n    public void parseXML(final InputStream in) {\n        m_writeLock.lock();\n\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(in);\n            final Userinfo userinfo = JaxbUtils.unmarshal(Userinfo.class, isr);\n            oldHeader = userinfo.getHeader();\n            m_users = new TreeMap<String, User>();\n        \n            for (final User curUser : userinfo.getUsers()) {\n                m_users.put(curUser.getUserId(), curUser);\n            }\n        \n            _buildDutySchedules(m_users);\n        } finally {\n            IOUtils.closeQuietly(isr);\n            m_writeLock.unlock();\n        }\n    }\n\n\n    /**\n     * Adds a new user and overwrites the \"users.xml\"\n     *\n     * @param name a {@link java.lang.String} object.\n     * @param details a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void saveUser(final String name, final User details) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            _writeUser(name, details);\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    private void _assertSaltAcceptable(final User details) throws Exception {\n        if (!m_allowUnsalted) {\n            final Password p = details.getPassword();\n            if (p != null) {\n                if (!p.getSalt()) {\n                    throw new IllegalStateException(\"org.opennms.users.allowUnsaltedPasswords=false, but \" + details.getUserId() + \" contains an unsalted password.\");\n                }\n            }\n        }\n    }\n\n    private void _writeUser(final String name, final User details) throws Exception {\n        if (name == null || details == null) {\n            throw new Exception(\"UserFactory:saveUser  null\");\n        } else {\n            _assertSaltAcceptable(details);\n            m_users.put(name, details);\n        }\n      \n        _saveCurrent();\n    }\n    \n    public void save(final OnmsUser onmsUser) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            User xmlUser = _getUser(onmsUser.getUsername());\n            if (xmlUser == null) {\n                xmlUser = new User();\n                xmlUser.setUserId(onmsUser.getUsername());\n            }\n            xmlUser.setFullName(onmsUser.getFullName());\n            xmlUser.setUserComments(onmsUser.getComments());\n\n            // Contact info\n            _setContact(xmlUser, ContactType.email, onmsUser.getEmail());\n            \n            final Password pass = new Password();\n            pass.setEncryptedPassword(onmsUser.getPassword());\n            pass.setSalt(onmsUser.getPasswordSalted());\n            xmlUser.setPassword(pass);\n    \n            if (onmsUser.getDutySchedule() != null) {\n                xmlUser.setDutySchedules(new ArrayList<String>(onmsUser.getDutySchedule()));\n            }\n            if (onmsUser.getRoles() != null) {\n                xmlUser.setRoles(new ArrayList<String>(onmsUser.getRoles()));\n            }\n            _writeUser(onmsUser.getUsername(), xmlUser);\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Builds a mapping between user IDs and duty schedules. These are used by\n     * Notifd when determining to send a notice to a given user. This helps\n     * speed up the decision process.\n     * \n     * @param users\n     *            the map of users parsed from the XML configuration file\n     */\n    private void _buildDutySchedules(final Map<String,User> users) {\n        m_dutySchedules = new HashMap<String,List<DutySchedule>>();\n        \n        for (final Entry<String,User> entry : users.entrySet()) {\n            final String key = entry.getKey();\n            final User curUser = entry.getValue();\n    \n            if (curUser.getDutySchedules().size() > 0) {\n                final List<DutySchedule> dutyList = new ArrayList<DutySchedule>();\n                for (final String duty : curUser.getDutySchedules()) {\n                \tdutyList.add(new DutySchedule(duty));\n                }\n    \n                m_dutySchedules.put(key, dutyList);\n            }\n        }\n    }\n\n    /**\n     * Determines if a user is on duty at a given time. If a user has no duty\n     * schedules listed in the configuration file, that user is assumed to always be on\n     * duty.\n     *\n     * @param user\n     *            the user id\n     * @param time\n     *            the time to check for a duty schedule\n     * @return boolean, true if the user is on duty, false otherwise.\n     * @throws java.io.IOException if any.\n     */\n    public boolean isUserOnDuty(final String user, final Calendar time) throws IOException {\n        update();\n    \n        m_readLock.lock();\n        try {\n            // if the user has no duty schedules then he is on duty\n            if (!m_dutySchedules.containsKey(user))\n                return true;\n    \n            for (final DutySchedule curSchedule : m_dutySchedules.get(user)) {\n            \tif (curSchedule.isInSchedule(time)) {\n            \t\treturn true;\n            \t}\n            }\n        } finally {\n            m_readLock.unlock();\n        }\n\n        return false;\n    }\n\n    /**\n     * Return a <code>Map</code> of usernames to user instances.\n     *\n     * @return a {@link java.util.Map} object.\n     * @throws java.io.IOException if any.\n     */\n    public Map<String, User> getUsers() throws IOException {\n        update();\n    \n        m_readLock.lock();\n        try {\n            return Collections.unmodifiableMap(m_users);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public OnmsUserList getOnmsUserList() throws IOException {\n        update();\n\n        final OnmsUserList list = new OnmsUserList();\n\n        m_readLock.lock();\n        \n        try {\n            for (final String username : _getUserNames()) {\n                list.add(_getOnmsUser(username));\n            }\n            list.setTotalCount(list.getCount());\n    \n            return list;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    public OnmsUser getOnmsUser(final String username) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getOnmsUser(username);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private OnmsUser _getOnmsUser(final String username) throws IOException {\n        final User xmlUser = _getUser(username);\n        if (xmlUser == null) return null;\n\n        final OnmsUser user = new OnmsUser(username);\n        user.setFullName(trim(xmlUser.getFullName()));\n        user.setComments(trim(xmlUser.getUserComments()));\n        user.setPassword(xmlUser.getPassword().getEncryptedPassword());\n        user.setPasswordSalted(Boolean.valueOf(xmlUser.getPassword().getSalt()));\n        user.setDutySchedule(xmlUser.getDutySchedules());\n        user.setRoles(xmlUser.getRoles());\n        user.setEmail(_getContactInfo(xmlUser, ContactType.email));\n        return user;\n    }\n    \n    private String trim(final Optional<String> text) {\n        return (text == null || !text.isPresent())? null : text.get().trim();\n    }\n\n    private Contact _getContact(final String userId, final ContactType contactType) {\n    \tUser user = _getUser(userId);\n    \tif (user != null && contactType != null) {\n    \t\tfor (Contact eachContact : user.getContacts()) {\n    \t\t\tif (contactType.name().equals(eachContact.getType())) {\n    \t\t\t\treturn eachContact;\n    \t\t\t}\n    \t\t}\n    \t}\n    \treturn null;\n    }\n    \n    /**\n     * Returns a boolean indicating if the user name appears in the XML file\n     *\n     * @return true if the user exists in the XML file, false otherwise\n     * @param userName a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public boolean hasUser(final String userName) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return m_users.containsKey(userName);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    /**\n     * <p>getUserNames</p>\n     *\n     * @return a {@link java.util.List} object.\n     * @throws java.io.IOException if any.\n     */\n    public List<String> getUserNames() throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUserNames();\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private List<String> _getUserNames() {\n        final List<String> userNames = new ArrayList<String>();\n        userNames.addAll(m_users.keySet());\n        return userNames;\n    }\n\n    /**\n     * Get a user by name\n     *\n     * @param name\n     *            the name of the user to return\n     * @return the user specified by name\n     * @throws java.io.IOException if any.\n     */\n    public User getUser(final String name) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUser(name);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private User _getUser(final String name) {\n        return m_users.get(name);\n    }\n    \n    /**\n     * Get a user's telephone PIN by name\n     *\n     * @param name\n     *            the name of the user to return\n     * @return the telephone PIN of the user specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getTuiPin(final String name) throws IOException {\n    \n        update();\n\n        m_readLock.lock();\n        try {\n            return m_users.get(name).getTuiPin().orElse(null);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * Get a user's telephone PIN by User object\n     *\n     * @return the telephone PIN of the user specified by user\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTuiPin(final User user) throws IOException {\n    \n        update();\n    \n        m_readLock.lock();\n        try {\n            return m_users.get(user.getUserId()).getTuiPin().orElse(null);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * Get a user's microblog username by username\n     *\n     * @param name\n     *            the username of the user whose microblog username should be returned\n     * @return the microblog username of the specified user\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    public String getMicroblogName(final String name) throws FileNotFoundException, IOException {\n        return getContactInfo(name, ContactType.microblog.toString());\n    }\n\n    /**\n     * Get a user's microblog username by User\n     *\n     * @param user\n     *            the user object of the user whose microblog username should be returned\n     * @return the microblog username of the specified user\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    public String getMicroblogName(final User user) throws FileNotFoundException, IOException {\n        return getContactInfo(user, ContactType.microblog.toString());\n    }\n    \n    public void setContactInfo(final String userId, final ContactType contactType, final String contactValue) throws Exception {\n    \t update();\n         m_writeLock.lock();\n         \n         try {\n             final User user = _getUser(userId);\n             if (user != null) {\n            \t _setContact(user, contactType, contactValue);\n             }\n             _saveCurrent();\n         } finally {\n             m_writeLock.unlock();\n         }\n\t}\n    \n    private void _setContact(final User user, final ContactType contactType, final String value) {\n        if (user != null && !StringUtils.isEmpty(value)) {\n        \tContact contact = _getContact(user.getUserId(), contactType);\n        \tif (contact == null) {\n        \t\tcontact = new Contact();\n        \t\tuser.addContact(contact);\n        \t}\n        \tcontact.setInfo(value);\n    \t\tcontact.setType(contactType.name());\n        }\n    }\n\n    /**\n     * @see {@link #getContactInfo(String, String)} \n     */\n    public String getContactInfo(final String userId, final ContactType contactType) throws IOException {\n    \tif (userId == null || contactType == null) return null;\n    \treturn getContactInfo(userId, contactType.name());\n\t}\n    \n    /**\n     * Get the contact info given a command string\n     *\n     * @param userID\n     *            the name of the user\n     * @param command\n     *            the command to look up the contact info for\n     * @return the contact information\n     * @throws java.io.IOException if any.\n     */\n    public String getContactInfo(final String userID, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getContactInfo(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getContactInfo</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param command a {@link java.lang.String} object.\n     * @return a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getContactInfo(final User user, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        \n        try {\n            return _getContactInfo(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getContactInfo(final User user, final ContactType contactType) {\n    \treturn _getContactInfo(user, contactType.name());\n    }\n    \n    private String _getContactInfo(final User user, final String command) {\n        if (user == null) return \"\";\n        \n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(command)) {\n        \t\treturn contact.getInfo().orElse(\"\");\n        \t}\n        }\n        return \"\";\n    }\n\n    /**\n     * Get the contact service provider, given a command string\n     *\n     * @param userID\n     *            the name of the user\n     * @param command\n     *            the command to look up the contact info for\n     * @return the contact information\n     * @throws java.io.IOException if any.\n     */\n    public String getContactServiceProvider(final String userID, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getContactServiceProvider(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getContactServiceProvider</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param command a {@link java.lang.String} object.\n     * @return a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getContactServiceProvider(final User user, final String command) throws IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            return _getContactServiceProvider(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getContactServiceProvider(final User user, final String command) {\n        if (user == null) return \"\";\n\n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(command)) {\n        \t\treturn contact.getServiceProvider().orElse(\"\");\n        \t}\n        }\n        \n        return \"\";\n    }\n\n    /**\n     * Get a email by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the email specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getEmail(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.email.toString());\n    }\n    \n    /**\n     * Get a email by user\n     *\n     * @param user the user to find the email for\n     * @return String the email specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getEmail(final User user) throws IOException {\n        return getContactInfo(user, ContactType.email.toString());\n    }\n\n    /**\n     * Get a pager email by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the pager email\n     * @throws java.io.IOException if any.\n     */\n    public String getPagerEmail(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.pagerEmail.toString());\n    }\n\n    /**\n     * Get a pager email by user\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @return String the pager email\n     * @throws java.io.IOException if any.\n     */\n    public String getPagerEmail(final User user) throws IOException {\n        return getContactInfo(user, ContactType.pagerEmail.toString());\n    }\n\n    /**\n     * Get a numeric pin\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the numeric pin\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPin(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get a numeric pin\n     *\n     * @return String the numeric pin\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPin(final User user) throws IOException {\n        return getContactInfo(user, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get an XMPP address by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the XMPP address\n     * @throws java.io.IOException if any.\n     */\n    public String getXMPPAddress(final String userID) throws IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getXMPPAddress(user);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    /**\n     * Get an XMPP address by name\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @return String the XMPP address\n     * @throws java.io.IOException if any.\n     */\n    public String getXMPPAddress(final User user) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getXMPPAddress(user);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getXMPPAddress(final User user) {\n        if (user == null)\n            return \"\";\n        \n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(ContactType.xmppAddress.toString())) {\n        \t\treturn contact.getInfo().orElse(\"\");\n        \t}\n        }\n        \n        return \"\";\n    }\n\n    /**\n     * Get a numeric service provider\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the service provider\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPage(final String userID) throws IOException {\n        return getContactServiceProvider(userID, ContactType.numericPage.toString());\n    }\n    \n    /**\n     * Get a numeric service provider\n     *\n     * @return String the service provider\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPage(final User user) throws IOException {\n        return getContactServiceProvider(user, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get a text pin\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the text pin\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPin(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a text pin\n     *\n     * @return String the text pin\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPin(final User user) throws IOException {\n        return getContactInfo(user, ContactType.textPage.toString());\n    }\n\n    /**\n     * Get a Text Page Service Provider\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the text page service provider.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPage(final String userID) throws IOException {\n        return getContactServiceProvider(userID, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a Text Page Service Provider\n     *\n     * @return String the text page service provider.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPage(final User user) throws IOException {\n        return getContactServiceProvider(user, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a work phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the work phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getWorkPhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.workPhone.toString());\n    }\n    \n    /**\n     * Get a work phone number\n     *\n     * @return String the work phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getWorkPhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.workPhone.toString());\n    }\n\n    /**\n     * Get a mobile phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the mobile phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getMobilePhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.mobilePhone.toString());\n    }\n    \n    /**\n     * Get a mobile phone number\n     *\n     * @return String the mobile phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getMobilePhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.mobilePhone.toString());\n    }\n\n    /**\n     * Get a home phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the home phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getHomePhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.homePhone.toString());\n    }\n    \n    /**\n     * Get a home phone number\n     *\n     * @return String the home phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getHomePhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.homePhone.toString());\n    }\n\n    /**\n     * <p>saveUsers</p>\n     *\n     * @param usersList a {@link java.util.Collection} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void saveUsers(final Collection<User> usersList) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            if (!m_allowUnsalted) {\n                for (final User details : usersList) {\n                    _assertSaltAcceptable(details);\n                }\n            }\n\n            // clear out the internal structure and reload it\n            m_users.clear();\n\n            for (final User curUser : usersList) {\n            \tm_users.put(curUser.getUserId(), curUser);\n            }\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Removes the user from the list of users. Then overwrites to the\n     * \"users.xml\"\n     *\n     * @param name a {@link java.lang.String} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void deleteUser(final String name) throws Exception {\n        m_writeLock.lock();\n        \n        try {\n            // Check if the user exists\n            if (m_users.containsKey(name)) {\n                // Delete the user in the user map.\n                m_users.remove(name);\n        \n                // Refresh the groups config first\n                m_groupManager.update();\n                \n                // Delete the user in the group.\n                m_groupManager.deleteUser(name);\n        \n                // Delete the user in the view.\n                // viewFactory.deleteUser(name);\n            } else {\n                throw new Exception(\"UserFactory:delete The old user name \" + name + \" is not found\");\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Saves into \"users.xml\" file\n     */\n    private void _saveCurrent() throws Exception {\n        final List<User> users = new ArrayList<>(m_users.values());\n    \n        final Userinfo userinfo = new Userinfo();\n        userinfo.setUsers(users);\n\n        final Header header = oldHeader;\n        if (header != null) {\n            header.setCreated(EventConstants.formatToString(new Date()));\n            userinfo.setHeader(header);\n        }\n        oldHeader = header;\n    \n        // marshal to a string first, then write the string to the file. This\n        // way the original configuration\n        // isn't lost if the XML from the marshal is hosed.\n        final StringWriter stringWriter = new StringWriter();\n        JaxbUtils.marshal(userinfo, stringWriter);\n        final String writerString = stringWriter.toString();\n        saveXML(writerString);\n    }\n\n    /**\n     * <p>saveXML</p>\n     *\n     * @param writerString a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    protected abstract void saveXML(final String writerString) throws IOException ;\n\n    /**\n     * When this method is called users name is changed, so also is the username\n     * belonging to the group and the view. Also overwrites the \"users.xml\" file\n     *\n     * @param oldName a {@link java.lang.String} object.\n     * @param newName a {@link java.lang.String} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void renameUser(final String oldName, final String newName) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            // Get the old data\n            if (m_users.containsKey(oldName)) {\n                final User data = m_users.get(oldName);\n                if (data == null) {\n                    m_users.remove(oldName);\n                    throw new Exception(\"UserFactory:rename the data contained for old user \" + oldName + \" is null\");\n                } else {\n                    // Rename the user in the user map.\n                    m_users.remove(oldName);\n                    data.setUserId(newName);\n                    m_users.put(newName, data);\n        \n                    // Refresh the groups config first\n                    m_groupManager.update();\n                    \n                    // Rename the user in the group.\n                    m_groupManager.renameUser(oldName, newName);\n        \n                    // Rename the user in the view.\n                    // viewFactory.renameUser(oldName, newName);\n                }\n            } else {\n                throw new Exception(\"UserFactory:rename the old user name \" + oldName + \" is not found\");\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Sets the password for this user, assuming that the value passed in is\n     * already encrypted properly\n     *\n     * @param userID\n     *            the user ID to change the password for\n     * @param aPassword\n     *            the encrypted password\n     * @throws java.lang.Exception if any.\n     */\n    public void setEncryptedPassword(final String userID, final String aPassword, final boolean salted) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            final User user = m_users.get(userID);\n            if (user != null) {\n                final Password pass = new Password();\n                pass.setEncryptedPassword(aPassword);\n                pass.setSalt(salted);\n                user.setPassword(pass);\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Sets the password for this user, first encrypting it\n     *\n     * @param userID\n     *            the user ID to change the password for\n     * @param aPassword\n     *            the password\n     * @throws java.lang.Exception if any.\n     */\n    public void setUnencryptedPassword(final String userID, final String aPassword) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            final User user =  m_users.get(userID);\n            if (user != null) {\n                final Password pass = new Password();\n                pass.setEncryptedPassword(encryptedPassword(aPassword, true));\n                pass.setSalt(true);\n                user.setPassword(pass);\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * <p>encryptedPassword</p>\n     *\n     * @param aPassword a {@link java.lang.String} object.\n     * @param useSalt TODO\n     * @return a {@link java.lang.String} object.\n     */\n    public String encryptedPassword(final String aPassword, final boolean useSalt) {\n        String encryptedPassword = null;\n\n        if (useSalt) {\n            encryptedPassword = s_passwordEncryptor.encryptPassword(aPassword);\n        } else {\n            // old crappy algorithm\n            try {\n                final MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n        \n                // build the digest, get the bytes, convert to hexadecimal string\n                // and return\n                encryptedPassword = hexToString(digest.digest(aPassword.getBytes()));\n            } catch (final NoSuchAlgorithmException e) {\n                throw new IllegalStateException(e.toString());\n            }\n        }\n\n        return encryptedPassword;\n    }\n\n    /**\n     * @param data\n     * @return\n     */\n    private String hexToString(final byte[] data) {\n        // check to see if the byte array has an even number of elements\n        if ((data.length % 2) != 0) return null;\n    \n        // there will be two hexadecimal characters for each byte element\n        final char[] buffer = new char[data.length * 2];\n    \n        for (int i = 0; i < data.length; i++) {\n            final int low = (int) (data[i] & 0x0f);\n            final int high = (int) ((data[i] & 0xf0) >> 4);\n            buffer[i * 2] = HEX[high];\n            buffer[i * 2 + 1] = HEX[low];\n        }\n    \n        return new String(buffer);\n    }\n\n    /**\n     * This method compares two encrypted strings for equality.\n     *\n     * @param userID\n     *            the user ID to check against.\n     * @param aPassword\n     *            the password to check for equality\n     * @return true if the two passwords are equal (after encryption), false\n     *         otherwise\n     */\n    public boolean comparePasswords(final String userID, final String aPassword) {\n        m_readLock.lock();\n        \n        try {\n            final User user = m_users.get(userID);\n            if (user == null) return false;\n\n            final String password = user.getPassword().getEncryptedPassword().trim();\n            final boolean isSalted = Boolean.valueOf(user.getPassword().getSalt());\n            if (isSalted) {\n                return checkSaltedPassword(aPassword, password);\n            } else {\n                return password.equals(encryptedPassword(aPassword, false));\n            }\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public boolean checkSaltedPassword(final String raw, final String encrypted) {\n        return s_passwordEncryptor.checkPassword(raw, encrypted);\n    }\n    \n    /**\n     * <p>update</p>\n     *\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    protected abstract void doUpdate() throws IOException, FileNotFoundException;\n\n    public final void update() throws IOException, FileNotFoundException {\n        m_writeLock.lock();\n        try {\n            doUpdate();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getUsersWithRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return an array of {@link java.lang.String} objects.\n     * @throws java.io.IOException if any.\n     */\n    public String[] getUsersWithRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUsersWithRole(roleid);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String[] _getUsersWithRole(final String roleid) throws IOException {\n        final List<String> usersWithRole = new ArrayList<String>();\n   \n        for (final User user : m_users.values()) {\n            if (_userHasRole(user, roleid)) {\n                usersWithRole.add(user.getUserId());\n            }\n        }\n        \n        return usersWithRole.toArray(new String[usersWithRole.size()]);\n    }\n    \n    /**\n     * <p>userHasRole</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param roleid a {@link java.lang.String} object.\n     * @return a boolean.\n     * @throws java.io.FileNotFoundException if any.\n     * @throws java.io.IOException if any.\n     */\n    public boolean userHasRole(final User user, final String roleid) throws FileNotFoundException, IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _userHasRole(user, roleid);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private boolean _userHasRole(final User user, final String roleid) throws IOException {\n        if (roleid == null) throw new NullPointerException(\"roleid is null\");\n        return m_groupManager.userHasRole(user.getUserId(), roleid);\n    }\n\n    /**\n     * <p>isUserScheduledForRole</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param roleid a {@link java.lang.String} object.\n     * @param time a {@link java.util.Date} object.\n     * @return a boolean.\n     * @throws java.io.FileNotFoundException if any.\n     * @throws java.io.IOException if any.\n     */\n    public boolean isUserScheduledForRole(final User user, final String roleid, final Date time) throws FileNotFoundException, IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            return _isUserScheduledForRole(user, roleid, time);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private boolean _isUserScheduledForRole(final User user, final String roleid, final Date time) throws IOException {\n        if (roleid == null) throw new NullPointerException(\"roleid is null\");\n        return m_groupManager.isUserScheduledForRole(user.getUserId(), roleid, time);\n    }\n\n    /**\n     * <p>getUsersScheduledForRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @param time a {@link java.util.Date} object.\n     * @return an array of {@link java.lang.String} objects.\n     * @throws java.io.IOException if any.\n     */\n    public String[] getUsersScheduledForRole(final String roleid, final Date time) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final List<String> usersScheduledForRole = new ArrayList<String>();\n            \n            for (final User user : m_users.values()) {\n                if (_isUserScheduledForRole(user, roleid, time)) {\n                    usersScheduledForRole.add(user.getUserId());\n                }\n            }\n            \n            return usersScheduledForRole.toArray(new String[usersScheduledForRole.size()]);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>hasOnCallRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return a boolean.\n     * @throws java.io.IOException if any.\n     */\n    public boolean hasOnCallRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return m_groupManager.getRole(roleid) != null;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>countUsersWithRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return a int.\n     * @throws java.io.IOException if any.\n     */\n    public int countUsersWithRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final String[] users = _getUsersWithRole(roleid);\n            if (users == null) return 0;\n            return users.length;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public abstract boolean isUpdateNeeded();\n    public abstract long getLastModified();\n    public abstract long getFileSize();\n    public abstract void reload() throws IOException, FileNotFoundException;\n}\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans:beans xmlns=\"http://www.springframework.org/schema/security\"\n  xmlns:beans=\"http://www.springframework.org/schema/beans\"\n  xmlns:onmsgi=\"http://xmlns.opennms.org/xsd/spring/onms-osgi\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd\n              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd\n              http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd\">\n  \n  <!-- Only use BASIC auth for the RESTful APIs -->\n  <http pattern=\"/rest/**\" realm=\"OpenNMS Realm\" create-session=\"never\">\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/rest/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- Calls to health/overview are always accepted -->\n    <intercept-url pattern=\"/rest/health/probe\" method=\"GET\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- ack/unack/escalate/clear alarms -->\n    <intercept-url pattern=\"/rest/alarms/**\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n\n    <!-- set/unset maintenance mode on services -->\n    <intercept-url pattern=\"/rest/nodes/**\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n    <!-- set/unset maintenance mode on nodes -->\n    <intercept-url pattern=\"/rest/ifservices\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n\n    <!-- Provisioning-related stuff is all allowed as long as you're in the provision, rest, or admin roles. -->\n    <intercept-url pattern=\"/rest/foreignSources/**\" access=\"ROLE_PROVISION,ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/requisitions/**\" access=\"ROLE_PROVISION,ROLE_REST,ROLE_ADMIN\"/>\n\n    <!-- Restrict access to SNMP configuration to ROLE_REST and ROLE_ADMIN only -->\n    <intercept-url pattern=\"/rest/snmpConfig/**\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <!-- Allow users to POST to the Measurements API, which is read-only -->\n    <intercept-url pattern=\"/rest/measurements\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <!-- Allow Minions to access the configuration endpoints -->\n    <intercept-url pattern=\"/rest/config/**\" method=\"GET\" access=\"ROLE_MINION,ROLE_REST,ROLE_ADMIN\"/>\n    <!-- Allow Minions to access the server info -->\n    <intercept-url pattern=\"/rest/info\" method=\"GET\" access=\"ROLE_MINION,ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- Allow certain actions for the REPORT_DESIGNER role -->\n    <intercept-url pattern=\"/rest/reports/scheduled/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/persisted/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER,ROLE_USER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n\n    <!-- Allow certain actions for the ROLE_FLOW_MANAGER role -->\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/rest/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- read-write calls should be allowed for the REST and ADMIN roles -->\n    <intercept-url pattern=\"/rest/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <http pattern=\"/nrt/**\" realm=\"OpenNMS Realm\">\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/nrt/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/nrt/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/nrt/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <http-basic />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <!-- Only use BASIC auth for the RESTful API v2 -->\n  <http pattern=\"/api/v2/**\" realm=\"OpenNMS Realm\" create-session=\"never\">\n\n    <!-- Allow users to POST to the Geolocation API, which is read-only -->\n    <intercept-url pattern=\"/api/v2/geolocation\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n    <!-- Allow users to POST to the Graph API, which is read-only -->\n    <intercept-url pattern=\"/api/v2/graphs/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- read-write calls should be allowed for the REST and ADMIN roles -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <!-- Only use BASIC auth for the RSS URL -->\n  <http pattern=\"/rss.jsp*\" access-denied-page=\"/accessDenied.jsp\" realm=\"OpenNMS Realm\">\n    <intercept-url pattern=\"/rss.jsp*\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <http-basic />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n  \n  <!-- Allow anonymous access to the webstart portion of the app -->\n  <http pattern=\"/webstart/**\" security=\"none\"/>\n\n  <!-- Only one <http> section can match the implicit '/**' pattern -->\n  <http pattern=\"/**\" use-expressions=\"true\" access-denied-page=\"/accessDenied.jsp\" realm=\"OpenNMS Realm\" auto-config=\"false\" entry-point-ref=\"loginUrlAuthenticationEntryPoint\">\n    <intercept-url pattern=\"/\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon.ico\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/apple-touch-icon.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon-32x32.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon-16x16.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/site.webmanifest\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/safari-pinned-tab.svg\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/logoff.jsp\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/login.jsp*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/accessDenied.jsp*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/css/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/svg/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/lib/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/images/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/assets/load-assets.jsp*\" access=\"denyAll\" /><!-- only used as include, shouldn't be accessible directly -->\n    <intercept-url pattern=\"/assets/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n\n    <intercept-url pattern=\"/admin/ng-requisitions/**\" access=\"hasAnyRole('ROLE_PROVISION','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/admin/classification/index.jsp\" access=\"hasAnyRole('ROLE_FLOW_MANAGER','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/rest/snmpConfig/**\" access=\"hasAnyRole('ROLE_PROVISION','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/admin/**\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/**/mib-compiler\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/**/admin-*\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/rtc/post/**\" access=\"hasAnyRole('ROLE_RTC')\" />\n    <intercept-url pattern=\"/element/rescan.jsp\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    \n    <intercept-url pattern=\"/frontpage.htm\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/dashboard.jsp\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/VAADIN/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/gwt.js\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/surveillanceservice.gwt\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/graph/graph.png\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/dashboard/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/coreweb/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    \n    <!-- DO NOT ALLOW ACCESS TO /osgi -->\n    <intercept-url pattern=\"/osgi/**\" access=\"denyAll\" />\n\n    <!-- Exclude jsp includes other than bootstrap, they shouldn't be accessible by themself -->\n    <intercept-url pattern=\"/includes/bootstrap.jsp\" access=\"permitAll\" />\n    <intercept-url pattern=\"/includes/*.jsp\" access=\"denyAll\" />\n\n    <intercept-url pattern=\"/**\" access=\"hasAnyRole('ROLE_USER')\" />\n    \n    <!-- NrtCollection -->\n    <intercept-url pattern=\"/amq/*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n\n    <!--Commented out for custom authentication filter<form-login login-page=\"/login.jsp\" authentication-failure-url=\"/login.jsp?login_error=1\" />-->\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n    <logout logout-success-url=\"/\" />\n\n      <!-- added for custom authentication filter -->\n    <custom-filter position=\"FORM_LOGIN_FILTER\" ref=\"onmsUsernamePasswordAuthenticationFilter\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n  \n  <!--  This filter is used to setup the Hibernate query filtering to authorized nodes only -->\n  <beans:bean id=\"authFilterEnabler\" class=\"org.opennms.web.springframework.security.AuthFilterEnabler\">\n    <beans:property name=\"filterManager\" ref=\"filterManager\" />\n    <beans:property name=\"groupDao\" ref=\"groupDao\" />\n  </beans:bean>\n\n  <!-- Custom Authentication Filter -->\n  <beans:bean id=\"onmsUsernamePasswordAuthenticationFilter\" class=\"org.opennms.web.springframework.security.OnmsUsernamePasswordAuthenticationFilter\">\n        <beans:property name=\"authenticationManager\" ref=\"authenticationManager\"/>\n        <beans:property name=\"authenticationFailureHandler\" ref=\"failureHandler\"/>\n        <beans:property name=\"authenticationSuccessHandler\" ref=\"successHandler\"/>\n        <beans:property name=\"postOnly\" value=\"false\"/>\n  </beans:bean>\n\n    <beans:bean id=\"successHandler\" class=\"org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler\">\n        <beans:property name=\"defaultTargetUrl\" value=\"/index.jsp\"/>\n    </beans:bean>\n    <beans:bean id=\"failureHandler\" class=\"org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler\">\n        <beans:property name=\"defaultFailureUrl\" value=\"/login.jsp?login_error=1\"/>\n    </beans:bean>\n\n    <beans:bean id=\"loginUrlAuthenticationEntryPoint\"\n                class=\"org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint\">\n        <beans:property name=\"loginFormUrl\" value=\"/login.jsp\" />\n    </beans:bean>\n    <!-- END CUSTOM AUthentication Filter -->\n\n  <!-- If a user is pre-authenticated, this will provide user details for the pre-authenticated user -->\n  <beans:bean id=\"preauthAuthProvider\" class=\"org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider\">\n    <beans:property name=\"preAuthenticatedUserDetailsService\">\n      <beans:bean id=\"userDetailsServiceWrapper\" class=\"org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper\">\n        <beans:property name=\"userDetailsService\" ref=\"openNMSUserDetailsService\"/>\n      </beans:bean>\n    </beans:property>\n  </beans:bean>\n\n  <!-- use our custom authentication provider; to use RADIUS instead, change this to \"radiusAuthenticationProvider\" and uncomment below -->\n  <authentication-manager alias=\"authenticationManager\">\n    <!-- If a user is pre-authenticated, make sure their user details are populated correctly. -->\n    <authentication-provider ref=\"preauthAuthProvider\" />\n    <!-- Use our custom authentication provider -->\n    <authentication-provider ref=\"hybridAuthenticationProvider\" />\n    <!-- To enable external (e.g. LDAP, RADIUS) authentication, uncomment the following.\n         You must also rename and customize exactly ONE of the example files in the\n         spring-security.d subdirectory. -->\n    <!-- <authentication-provider ref=\"externalAuthenticationProvider\" /> -->\n  </authentication-manager>\n\n  <!-- ===================== USER DAO AUTHENTICATION ==================== -->\n  <beans:bean id=\"userDao\" class=\"org.opennms.web.springframework.security.SpringSecurityUserDaoImpl\">\n    <beans:property name=\"usersConfigurationFile\" value=\"${opennms.home}/etc/users.xml\" />\n    <beans:property name=\"userManager\" ref=\"userManager\" />\n  </beans:bean>\n  <onmsgi:service id=\"springSecurityUserDaoService\" ref=\"userDao\" interface=\"org.opennms.web.springframework.security.SpringSecurityUserDao\" />\n\n  <!-- Supercedes the Karaf container's OSGi Configuration implementation to hard-code the \"opennms\" realm. -->\n  <beans:bean id=\"config\"\n      class=\"org.opennms.web.springframework.security.OpenNMSConfiguration\"\n      init-method=\"init\"\n      destroy-method=\"close\" />\n\n  <beans:bean id=\"loginModuleUserConfigInitializer\" class=\"org.springframework.beans.factory.config.MethodInvokingBean\">\n      <beans:property name=\"staticMethod\">\n          <beans:value>org.opennms.web.springframework.security.OpenNMSLoginModule.setUserConfig</beans:value>\n      </beans:property>\n      <beans:property name=\"arguments\">\n          <beans:list>\n              <beans:ref bean=\"userManager\" />\n          </beans:list>\n      </beans:property>\n  </beans:bean>\n\n  <beans:bean id=\"loginModuleSpringSecurityUserDaoInitializer\" class=\"org.springframework.beans.factory.config.MethodInvokingBean\">\n      <beans:property name=\"staticMethod\">\n          <beans:value>org.opennms.web.springframework.security.OpenNMSLoginModule.setSpringSecurityUserDao</beans:value>\n      </beans:property>\n      <beans:property name=\"arguments\">\n          <beans:list>\n              <beans:ref bean=\"userDao\" />\n          </beans:list>\n      </beans:property>\n  </beans:bean>\n\n  <beans:bean id=\"openNMSUserDetailsService\" class=\"org.opennms.web.springframework.security.OpenNMSUserDetailsService\">\n    <beans:property name=\"userDao\" ref=\"userDao\" />\n  </beans:bean>\n\n  <beans:bean id=\"hybridAuthenticationProvider\" class=\"org.opennms.web.springframework.security.HybridOpenNMSUserAuthenticationProvider\">\n    <beans:property name=\"userDao\" ref=\"userDao\" />\n    <beans:property name=\"userManager\" ref=\"userManager\" />\n  </beans:bean>\n\n  <!--  this is used to send events on login success and failure -->\n  <beans:bean class=\"org.opennms.web.springframework.security.SecurityAuthenticationEventOnmsEventBuilder\">\n    <beans:property name=\"eventProxy\" ref=\"eventProxy\"/>\n  </beans:bean>\n\n  <beans:bean id=\"xRequestedWithAwareBasicAuthEntryPoint\" class=\"org.opennms.web.springframework.security.XRequestedWithAwareBasicAuthEntryPoint\">\n    <beans:property name=\"realmName\" value=\"OpenNMS Realm\" />\n  </beans:bean>\n\n</beans:beans>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Group Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Group List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    function addNewGroup()\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"create\";\n        document.allGroups.submit();\n    }\n    \n    function detailGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"show\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function deleteGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"delete\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function modifyGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"edit\"\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n\n    function renameGroup(groupName)\n    {\n        var newName = prompt(\"Enter new name for group.\", groupName);\n\n        if (newName != null && newName != \"\")\n        {\n          document.allGroups.newName.value = newName;\n          document.allGroups.groupName.value=groupName;\n          document.allGroups.operation.value=\"rename\";\n          document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n          document.allGroups.submit();\n        }\n    }\n</script>\n\n<p>\n  Click on the <i>Group Name</i> link to view detailed information about a group.\n</p>\n\n<p>\n  <a href=\"javascript:addNewGroup()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new group\n  </a>\n</p>\n\n<form method=\"post\" name=\"allGroups\">\n  <input type=\"hidden\" name=\"operation\"/>\n  <input type=\"hidden\" name=\"groupName\"/>\n  <input type=\"hidden\" name=\"newName\"/>\n\n  <div class=\"card\">\n    <table class=\"table table-sm table-bordered\">\n         <tr>\n          <th>Delete</th>\n          <th>Modify</th>\n          <th>Rename</th>\n          <th>Group Name</th>\n          <th>Comments</th>\n        </tr>\n         <c:forEach var=\"group\" varStatus=\"groupStatus\" items=\"${groups}\">\n         <tr class=\"divider ${groupStatus.index % 2 == 0 ?  'even' : 'odd'}\" id=\"group-${group.name}\">\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <a id=\"${group.name}.doDelete\" href=\"javascript:deleteGroup('${group.name}')\" onclick=\"return confirm('Are you sure you want to delete the group ${group.name}?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a>              \n              </c:when>\n              <c:otherwise>\n                <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the ${group.name} group cannot be deleted.')\"></i>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <a id=\"${group.name}.doModify\" href=\"javascript:modifyGroup('${group.name}')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"renameGroup('${group.name}')\">Rename</button>\n              </c:when>\n              <c:otherwise>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"alert('Sorry, the Admin group cannot be renamed.')\">Rename</button>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td>\n            <a href=\"javascript:detailGroup('${group.name}')\">${group.name}</a>\n          </td>\n            <td>\n              <c:choose>\n                <c:when test=\"${group.comments.isPresent()}\">\n                  ${group.comments.get()}\n                </c:when>\n                \n                <c:otherwise>\n                  No Comments\n                </c:otherwise>\n              </c:choose>\n            </td>\n          </tr>\n        </c:forEach>\n     </table>\n   </div>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"\n\t\tjava.util.*,\n\t\tjava.text.*,\n\t\torg.opennms.netmgt.config.users.*\n\t\"\n%>\n<%@page import=\"org.opennms.web.group.WebGroup\"%>\n\n<%\n  \tWebGroup group = (WebGroup)session.getAttribute(\"group.modifyGroup.jsp\");\n    if (group == null) {\n        throw new ServletException(\"Could not get session attribute group\");\n    }\n    String[] allCategories = (String[])session.getAttribute(\"allCategories.modifyGroup.jsp\");\n    String[] allUsers = (String[])session.getAttribute(\"allUsers.modifyGroup.jsp\");\n\tString[] categoryListInGroup = group.getAuthorizedCategories().toArray(new String[0]);\n    String[] categoryListNotInGroup = group.getUnauthorizedCategories(Arrays.asList(allCategories)).toArray(new String[0]);\n    String[] selectedUsers = group.getUsers().toArray(new String[0]);\n    String[] availableUsers = group.getRemainingUsers(Arrays.asList(allUsers)).toArray(new String[0]);\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Modify Group\" />\n  <jsp:param name=\"headTitle\" value=\"Modify\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Modify Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    \n    function validate()\n    {\n        for (var c = 0; c < document.modifyGroup.dutySchedules.value; c++)\n        {\n            var beginName= \"duty\" + c + \"Begin\";\n            var endName  = \"duty\" + c + \"End\";\n\n            var beginValue = new Number(document.modifyGroup.elements[beginName].value);\n            var endValue = new Number(document.modifyGroup.elements[endName].value);\n\n            if (!document.modifyGroup.elements[\"deleteDuty\"+c].checked)\n            {\n                if (isNaN(beginValue))\n                {\n                    alert(\"The begin time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                    return false;\n                }\n                if (isNaN(endValue))\n                {\n                    alert(\"The end time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                    return false;\n                }\n                if (beginValue > endValue)\n                {\n                    alert(\"The begin value for duty schedule \" + (c+1) + \" must be less than the end value.\");\n                    return false;\n                }\n                if (beginValue < 0 || beginValue > 2359)\n                {\n                    alert(\"The begin value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                    return false;\n                }\n                if (endValue < 0 || endValue > 2359)\n                {\n                    alert(\"The end value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    \n    function addUsers() \n    {\n        m1len = m1.length ;\n        for ( i=0; i<m1len ; i++)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m2len = m2.length;\n                m2.options[m2len]= new Option(m1.options[i].text);\n            }\n        }\n        \n        for ( i = (m1len -1); i>=0; i--)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m1.options[i] = null;\n            }\n        }\n    }\n    \n    function removeUsers() \n    {\n        m2len = m2.length ;\n        for ( i=0; i<m2len ; i++)\n        {\n            if (m2.options[i].selected == true ) \n            {\n                m1len = m1.length;\n                m1.options[m1len]= new Option(m2.options[i].text);\n            }\n        }\n        for ( i=(m2len-1); i>=0; i--) \n        {\n            if (m2.options[i].selected == true ) \n            {\n                m2.options[i] = null;\n            }\n        }\n    }\n    \n    function selectAllAvailable()\n    {\n        for (i=0; i < m1.length; i++) \n        {\n            m1.options[i].selected = true;\n        }\n    }\n    \n    function selectAllSelected()\n    {\n        for (i=0; i < m2.length; i++) \n        {\n            m2.options[i].selected = true;\n        }\n    }\n    \n    function move(incr)\n    {\n        var i = m2.selectedIndex;   // current selection\n        if( i < 0 ) return;\n        var j = i + incr;       // where it will move to\n        if( j < 0 || j >= m2.length ) return;\n        var temp = m2.options[i].text;  // swap them\n        m2.options[i].text = m2.options[j].text;\n        m2.options[j].text = temp;\n        m2.selectedIndex = j;       // make new location selected\n    }\n\n    function moveCat(incr)\n    {\n        var i = m4.selectedIndex;   // current selection\n        if( i < 0 ) return;\n        var j = i + incr;       // where it will move to\n        if( j < 0 || j >= m4.length ) return;\n        var temp = m4.options[i].text;  // swap them\n        m4.options[i].text = m4.options[j].text;\n        m4.options[j].text = temp;\n        m4.selectedIndex = j;       // make new location selected\n    }\n\n    function addGroupDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"addDutySchedules\";\n            document.modifyGroup.submit();\n        }\n    }\n\n    function removeGroupDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"removeDutySchedules\";\n            document.modifyGroup.submit();\n        }\n    }\n    \n    function saveGroup()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            //we need to select all the users in the selectedUsers select list so the\n            //request object will have all the users\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"save\";\n            document.modifyGroup.submit();\n        }\n    }\n    \n    function cancelGroup()\n    {\n        document.modifyGroup.operation.value=\"cancel\";\n        document.modifyGroup.submit();\n    }\n\n    //Group functions\n    function addCategories(){\n    \tm3len = m3.length ;\n        for ( i=0; i<m3len ; i++)\n        {\n            if (m3.options[i].selected == true ) \n            {\n                m4len = m4.length;\n                m4.options[m4len]= new Option(m3.options[i].text);\n            }\n        }\n        \n        for ( i = (m3len -1); i>=0; i--)\n        {\n            if (m3.options[i].selected == true ) \n            {\n                m3.options[i] = null;\n            }\n        }\n    }\n\n    function removeCategories(){\n    \tm4len = m4.length ;\n        for ( i=0; i<m4len ; i++)\n        {\n            if (m4.options[i].selected == true ) \n            {\n                m3len = m3.length;\n                m3.options[m3len]= new Option(m4.options[i].text);\n            }\n        }\n        for ( i=(m4len-1); i>=0; i--) \n        {\n            if (m4.options[i].selected == true ) \n            {\n                m4.options[i] = null;\n            }\n        }\n    }\n\n    function selectAllAvailableCategories(){\n    \tfor (i=0; i < m3.length; i++){\n            m3.options[i].selected = true;\n        }\n    }\n\n    function selectAllSelectedCategories(){\n    \tfor (i=0; i < m4.length; i++){\n            m4.options[i].selected = true;\n        }\n    }\n</script>\n\n<form role=\"form\" class=\"form\" method=\"post\" id=\"modifyGroup\" name=\"modifyGroup\">\n  <input type=\"hidden\" name=\"groupName\" value=\"<%=group.getName()%>\"/>\n  <input type=\"hidden\" name=\"operation\"/>\n\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <span>Assignments</span>\n        </div>\n        <div class=\"card-body\">\n            <p>Assign and unassign users to the group using the select lists below. Also, change the ordering of the selected users by highlighting a user in the \"Currently in Group\" list and click the \"Move Up\" and \"Move Down\" buttons. The ordering of the users in the group will affect the order that the users are notified if this group is used in a notification.</p>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <table class=\"table table-sm\" id=\"modifyGroupUsers\">\n                        <tr>\n                            <th colspan=\"3\" align=\"center\">\n                                <span>Assign/Unassign Users</span>\n                            </th>\n                        </tr>\n                        <tr>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Available Users</label>\n                                <%=createSelectList(\"availableUsers\", availableUsers)%><br/>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"availableAll\" onClick=\"javascript:selectAllAvailable()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"users.doAdd\" onClick=\"javascript:addUsers()\">&nbsp;&#155;&#155;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Currently in Group</label>\n                                <%=createSelectList(\"selectedUsers\", selectedUsers)%><br/>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"selectedAll\" onClick=\"javascript:selectAllSelected()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"users.doRemove\" onClick=\"javascript:removeUsers()\">&nbsp;&#139;&#139;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\">\n                                <div>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:move(-1)\" title=\"Move Up\"><i class=\"fa fa-arrow-up\"></i></button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:move(1)\" title=\"Move Down\"><i class=\"fa fa-arrow-down\"></i></button>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div> <!-- column -->\n                <div class=\"col-md-6\">\n                    <table class=\"table\" id=\"modifyGroupCategories\">\n                        <tr>\n                            <th colspan=\"3\" align=\"center\">\n                                <span>Assign/Unassign Categories</span>\n                            </th>\n                        </tr>\n                        <tr>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Available Categories</label>\n                                <%=createSelectList(\"availableCategories\", categoryListNotInGroup)%>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"availableAll\" onClick=\"javascript:selectAllAvailableCategories()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"categories.doAdd\" onClick=\"javascript:addCategories()\">&nbsp;&#155;&#155;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Currently in Group</label>\n                                <%=createSelectList(\"selectedCategories\", categoryListInGroup)%>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"categories.doRemove\" onClick=\"javascript:removeCategories()\">&nbsp;&#139;&#139;&nbsp;</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"selectedAll\" onClick=\"javascript:selectAllSelectedCategories()\">Select All</button>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\">\n                                <div>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:moveCat(-1)\" title=\"Move Up\"><i class=\"fa fa-arrow-up\"></i></button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:moveCat(1)\" title=\"Move Down\"><i class=\"fa fa-arrow-down\"></i></button>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div> <!-- column -->\n            </div> <!-- row -->\n        </div> <!-- card-body -->\n    </div> <!-- panel -->\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Duty Schedules</span>\n      </div>\n      <div class=\"card-body\">\n      <table class=\"table table-sm table-striped\">\n            <tr>\n              <th>#</th>\n              <th>Delete</th>\n              <th>Mo</th>\n              <th>Tu</th>\n              <th>We</th>\n              <th>Th</th>\n              <th>Fr</th>\n              <th>Sa</th>\n              <th>Su</th>\n              <th>Begin Time</th>\n              <th>End Time</th>\n            </tr>\n                <%\n                           int i = 0;\n                           for(String dutySchedSpec : group.getDutySchedules()) {\n                               DutySchedule tmp = new DutySchedule(dutySchedSpec);\n                               Vector<Object> curSched = tmp.getAsVector();\n                        %>\n                        <tr>\n                          <td width=\"1%\"><%=(i+1)%></td>\n                          <td width=\"1%\">\n                            <input type=\"checkbox\" name=\"deleteDuty<%=i%>\"/>\n                          </td>\n                          <% ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n                             for (int j = 0; j < 7; j++)\n                             {\n                                Boolean curDay = (Boolean)curSched.get(j);\n                          %>\n                          <td width=\"5%\">\n                            <input type=\"checkbox\" name=\"duty<%=i+days.format(j)%>\" <%= (curDay.booleanValue() ? \"checked\" : \"\")%>/>\n                          </td>\n                          <% } %>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>Begin\" value=\"<%=curSched.get(7)%>\"/>\n                          </td>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>End\" value=\"<%=curSched.get(8)%>\"/>\n                          </td>\n                        </tr>\n                        <% i++; } %>\n      </table>\n\n      <div class=\"form-row mb-2\">\n          <button type=\"button\" name=\"addSchedule\" class=\"btn btn-secondary\" onclick=\"removeGroupDutySchedules()\">Remove Checked Schedules</button>\n      </div>\n\n      <div class=\"form-row\">\n          <input type=\"hidden\" name=\"dutySchedules\" value=\"<%=group.getDutySchedules().size()%>\"/>\n          <select name=\"numSchedules\" class=\"form-control custom-select col-xs-6 col-sm-2 col-md-1 mr-2\">\n            <option value=\"1\" selected=\"selected\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n          </select>\n          <button id=\"addSchedule\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"addGroupDutySchedules()\" title=\"Add This Many Schedules\"><i class=\"fa fa-plus\"></i> New Schedules</button>\n      </div>\n      </div> <!-- card-body -->\n    </div> <!-- card -->\n\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-secondary\" name=\"finish\" onclick=\"saveGroup()\">Finish</button>\n    <button type=\"button\" class=\"btn btn-secondary\" name=\"cancel\" onclick=\"cancelGroup()\">Cancel</button>\n  </div>\n\n</form>\n\n<script type=\"text/javascript\">\n  // shorthand for refering to menus\n  // must run after document has been created\n  // you can also change the name of the select menus and\n  // you would only need to change them in one spot, here\n  var m1 = document.modifyGroup.availableUsers;\n  var m2 = document.modifyGroup.selectedUsers;\n  var m3 = document.modifyGroup.availableCategories;\n  var m4 = document.modifyGroup.selectedCategories;\n</script>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n\n<%!\n    private String createSelectList(String name, String[] categories) {\n        StringBuffer buffer = new StringBuffer(\"<select class=\\\"form-control custom-select\\\" multiple=\\\"multiple\\\" name=\\\"\"+name+\"\\\" size=\\\"10\\\">\");\n        for(String category : categories){\n            buffer.append(\"<option>\" + category + \"</option>\");\n        }\n        buffer.append(\"</select>\");\n        \n        return buffer.toString();\n    }\n    \n%>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New Group\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Groups\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newGroupForm.groupName.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The group ID '\" + document.newGroupForm.groupName.value + \"' cannot be used. It may be confused with the administration group ID 'Admin'.\");\n        return false;\n    }\n    \n    document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n    document.newGroupForm.operation.value=\"addGroup\";\n    return true;\n  }    \n  function cancelGroup()\n  {\n      document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n      document.newGroupForm.operation.value=\"cancel\";\n      document.newGroupForm.submit();\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The group <%=request.getParameter(\"groupName\")%> already exists.\n        Please type in a different group ID.</span>\n    <%} else { %>\n      <span>Please enter a group ID below.</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" id=\"newGroupForm\" method=\"post\" name=\"newGroupForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"operation\" />\n\n      <div class=\"form-group\">\n        <label for=\"groupName\" class=\"\">Group Name</label>\n      <input class=\"form-control\" id=\"groupName\" type=\"text\" name=\"groupName\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"groupComment\" class=\"\">Comment</label>\n      <input class=\"form-control\" id=\"groupComment\" type=\"text\" name=\"groupComment\"/>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary mr-2\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelGroup()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"Edit\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Edit On-Call Role\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n\tfunction changeDisplay() {\n\t\tdocument.displayForm.submit();\n\t}\n\t\n\tfunction prevMonth() {\n\t\tdocument.prevMonthForm.submit();\n\t}\n\t\n\tfunction nextMonth() {\n\t\tdocument.nextMonthForm.submit();\n\t}\n\n</script>\n\n<div class=\"card pane-default\">\n  <div class=\"card-header\">\n    <span>Edit On-Call Role</span>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editForm\">\n      <input type=\"hidden\" name=\"operation\" value=\"saveDetails\"/>\n      <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleName\" class=\"col-sm-2 col-form-label\">Name</label>\n        <div class=\"col-sm-10\">\n          <input class=\"form-control\" name=\"roleName\" id=\"input_roleName\" type=\"text\" value=\"${fn:escapeXml(role.name)}\"/>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2 col-form-label\"><strong>Currently On Call</strong></label>\n        <div class=\"col-sm-10\">\n          <ul>\n            <c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n              <li>${scheduledUser}</li>\n            </c:forEach>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleUser\" class=\"col-sm-2 col-form-label\">Supervisor</label>\n        <div class=\"col-sm-10\">\n          <select class=\"form-control custom-select\" id=\"input_roleUser\" name=\"roleUser\">\n            <c:forEach var=\"user\" items=\"${userManager.users}\">\n              <c:choose>\n                <c:when test=\"${user == role.defaultUser}\">\n                  <option selected>${user}</option>\n                </c:when>\n                <c:otherwise>\n                  <option>${user}</option>\n                </c:otherwise>\n              </c:choose>\n            </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleGroup\" class=\"col-sm-2 col-form-label\">Membership Group</label>\n        <div class=\"col-sm-10\">\n          <select class=\"form-control custom-select\" id=\"input_roleGroup\" name=\"roleGroup\">\n            <c:forEach var=\"group\" items=\"${groupManager.groups}\">\n              <c:choose>\n                <c:when test=\"${group == role.membershipGroup}\">\n                  <option selected>${group}</option>\n                </c:when>\n                <c:otherwise>\n                  <option>${group}</option>\n                </c:otherwise>\n              </c:choose>\n            </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleDescr\" class=\"col-sm-2 col-form-label\">Description</label>\n        <div class=\"col-sm-10\">\n          <input class=\"form-control\" name=\"roleDescr\" id=\"input_roleDescr\" type=\"text\" value=\"${fn:escapeXml(role.description)}\"/>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"save\">Save</button>\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"cancel\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"Edit Schedule\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Edit Entry\" />\n</jsp:include>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>Edit Schedule Entry</span>\n  </div>\n  <div class=\"card-body\">\n    <p class=\"alert alert-danger\">${error}</p>\n    <form role=\"form\" class=\"form\" action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"saveEntryForm\">\n      <input type=\"hidden\" name=\"operation\" value=\"saveEntry\"/>\n      <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n      <input type=\"hidden\" name=\"schedIndex\" value=\"${schedIndex}\"/>\n      <input type=\"hidden\" name=\"timeIndex\" value=\"${timeIndex}\" /> \n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">On-Call Role</label>\n        <div class=\"col-sm-4\">\n          <p class=\"form-control-static\"><c:out value=\"${role.name}\"/></p>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleUser\" class=\"col-sm-2\">User</label>\n        <div class=\"col-sm-4\">\n          <select class=\"form-control custom-select\" id=\"input_roleUser\" name=\"roleUser\">\n          <c:forEach var=\"user\" items=\"${role.membershipGroup.users}\">\n            <c:choose>\n              <c:when test=\"${user == scheduledUser}\"><option selected>${user}</option></c:when>\n              <c:otherwise><option>${user}</option></c:otherwise>\n            </c:choose>\n          </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">Start Date</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/dateControl.jsp\">\n            <c:param name=\"prefix\" value=\"start\"/>\n            <c:param name=\"date\"><fmt:formatDate value=\"${start}\" pattern=\"dd-MM-yyyy\"/></c:param>\n          </c:import>\n        </div>\n        <label class=\"col-sm-2\">Start Time</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/timeControl.jsp\">\n            <c:param name=\"prefix\" value=\"start\"/>\n            <c:param name=\"time\"><fmt:formatDate value=\"${start}\" pattern=\"HH:mm:ss\"/></c:param>\n          </c:import>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">End Date</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/dateControl.jsp\">\n            <c:param name=\"prefix\" value=\"end\"/>\n            <c:param name=\"date\"><fmt:formatDate value=\"${end}\" pattern=\"dd-MM-yyyy\"/></c:param>\n          </c:import>\n        </div>\n        <label class=\"col-sm-2\">End Time</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/timeControl.jsp\">\n            <c:param name=\"prefix\" value=\"end\"/>\n            <c:param name=\"time\"><fmt:formatDate value=\"${end}\" pattern=\"HH:mm:ss\"/></c:param>\n          </c:import>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"save\">Save</button>\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"cancel\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"org.opennms.netmgt.config.users.*,\n\t        org.opennms.netmgt.config.*,\n\t\tjava.util.*\"\n%>\n\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\tHashMap<String, String> usersHash = new HashMap<String, String>();\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n\n\tfor (User curUser : users.values()) {\n\t\tusersHash.put(curUser.getUserId(), curUser.getFullName().orElse(null));\n\t}\n\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"https://www.owasp.org/index.php/OWASP_Java_Encoder_Project\" prefix=\"e\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"List\" />\n\t<jsp:param name=\"headTitle\" value=\"Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Role List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n\tfunction doOperation(op, role) {\n\t\tdocument.roleForm.operation.value=op;\n\t\tdocument.roleForm.role.value=role;\n\t\tdocument.roleForm.submit();\n\t}\n\t\n\tfunction doDelete(role) {\n\t\tdoOperation(\"delete\", role);\n\t}\n\t\n\tfunction doView(role) {\n\t\tdoOperation(\"view\", role);\n\t}\n\n</script>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"roleForm\">\n\t<input type=\"hidden\" name=\"operation\" />\n\t<input type=\"hidden\" name=\"role\" />\n</form>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>On-Call Role Configuration</span>\n  </div>\n  <table class=\"table table-sm\">\n        <tr>\n          <th>Delete</th>\n          <th>Name</th>\n          <th>Supervisor</th>\n          <th>Currently On Call</th>\n          <th>Membership Group</th>\n          <th>Description</th>\n        </tr>\n        \n        <c:choose>\n          <c:when test=\"${empty roleManager.roles}\">\n            <tr>\n              <td colspan=\"6\">No roles defined.  Use the \"Add new role\" link\n                to add roles.</td>\n            </tr>\n\t \t  </c:when>\n\t \t  \n\t \t  <c:otherwise>\n\t\t\t<c:forEach var=\"role\" items=\"${roleManager.roles}\">\n\t\t\t\t<c:set var=\"deleteUrl\" value=\"javascript:doDelete('${e:forJavaScript(role.name)}')\" />\n\t\t\t\t<c:set var=\"viewUrl\" value=\"javascript:doView('${e:forJavaScript(role.name)}')\" />\n\t\t\t\t<c:set var=\"confirmScript\" value=\"return confirm('Are you sure you want to delete the role ${e:forJavaScript(role.name)}?')\"/>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t<td><a href=\"${deleteUrl}\" onclick=\"${confirmScript}\"><i class=\"fa fa-trash-o fa-2x\"></i></a></td>\n\t\t\t\t<td><a href=\"${viewUrl}\">${role.name}</a></td>\n\t\t\t\t<td>\n\t\t\t\t  <c:set var=\"supervisorUser\">${role.defaultUser}</c:set>\n\t\t\t\t  <c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"supervisorUser\").toString()) %></c:set>\n\t\t\t\t  <span title=\"${fullName}\">${role.defaultUser}</span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n\t\t\t\t\t\t<c:set var=\"curUserName\">${scheduledUser}</c:set>\n\t\t\t\t\t\t<c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"curUserName\").toString()) %></c:set>\n\t\t\t\t\t\t<span title=\"${fullName}\">${scheduledUser}</span>\n\t\t\t\t\t</c:forEach>\t\n\t\t\t\t</td>\n\t\t\t\t<td>${role.membershipGroup}</td>\n\t\t\t\t<td><c:out value=\"${role.description}\"/></td>\n\t\t\t\t</tr>\n\t\t\t</c:forEach>\n\t \t  </c:otherwise>\n\t \t</c:choose>\n  </table>\n</div> <!-- panel -->\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"newForm\">\n  <input name=\"operation\" type=\"hidden\" value=\"new\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Add New On-Call Role</button>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"org.opennms.netmgt.config.users.*,\n\t        org.opennms.netmgt.config.*,\n\t\tjava.util.*\"\n%>\n\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\tHashMap<String,String> usersHash = new HashMap<String,String>();\n\tString curUserName = null;\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n\n\tfor (User curUser : users.values()) {\n\t\tusersHash.put(curUser.getUserId(), curUser.getFullName().orElse(null));\n\t}\n\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"View\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"View On-Call Role\" />\n</jsp:include>\n\n\n<!--  swiped this and images/new.gif from webcalendar.sf.net -->\n<style type=\"text/css\">\n\n.new {\n  border-width: 0px;\n  float: right;\n}\n\n.date {\n  border-width: 0px;\n  float: left;\n}\n\n</style>\n\n<script type=\"text/javascript\" >\n\n\tfunction changeDisplay() {\n\t\tdocument.displayForm.submit();\n\t}\n\t\n\tfunction prevMonth() {\n\t\tdocument.prevMonthForm.submit();\n\t}\n\t\n\tfunction nextMonth() {\n\t\tdocument.nextMonthForm.submit();\n\t}\n\t\n\tfunction addEntry(date) {\n\t\tdocument.addEntryForm.date.value = date;\n\t\tdocument.addEntryForm.submit();\n\t\t\n\t}\n\t\n\tfunction editEntry(schedIndex, timeIndex) {\n\t\tdocument.editEntryForm.schedIndex.value = schedIndex;\n\t\tdocument.editEntryForm.timeIndex.value = timeIndex;\n\t\tdocument.editEntryForm.submit();\n\t}\n\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>View On-Call Role</span>\n  </div>\n  <table class=\"table table-sm\">\n    <tr>\n      <th>Name</th>\n        <td><c:out value=\"${role.name}\"/></td>\n      <th>Currently On Call</th>\n  \t<td>\n  \t  <c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n  \t\t<c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"scheduledUser\").toString()) %></c:set>\n  \t\t<span title=\"${fullName}\">${scheduledUser}</span>\n  \t  </c:forEach>\n  \t</td>\n    </tr>\n\n    <tr>\n      <th>Supervisor</th>\n  \t<td>\n  \t  <c:set var=\"supervisorUser\">${role.defaultUser}</c:set>\n  \t  <c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"supervisorUser\").toString()) %></c:set>\n  \t  <span title=\"${fullName}\">${role.defaultUser}</span></td>\n      <th>Membership Group</th>\n  \t<td>${role.membershipGroup}</td>\n    </tr>\n\n    <tr>\n      <th>Description</th>\n  \t<td colspan=\"3\"><c:out value=\"${role.description}\"/></td>\n    </tr>\n  </table>\n</div> <!-- panel -->\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editForm\">\n  <input type=\"hidden\" name=\"operation\" value=\"editDetails\"/>\n  <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Value Details</button>\n</form>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"doneForm\" class=\"my-4\">\n  <button type=\"submit\" class=\"btn btn-secondary\">Done</button>\n</form>\n\n<div class=\"card top-buffer\">\n  <div class=\"card-header\">\n    <span>On-Call Role Schedule</span>\n  </div>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"prevMonthForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"view\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"month\" value=\"<fmt:formatDate value='${calendar.previousMonth}' type='date' pattern='MM-yyyy'/>\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"nextMonthForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"view\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"month\" value=\"<fmt:formatDate value='${calendar.nextMonth}' type='date' pattern='MM-yyyy'/>\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"addEntryForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"addEntry\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"date\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editEntryForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"editEntry\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"schedIndex\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"timeIndex\"/>\n\t\t\t\t</form>\n\t\t\t<table class=\"table table-bordered\">\n\t\t\t  <caption class=\"text-center\">\n\t\t\t\t<a href=\"javascript:prevMonth()\">&#139;&#139;&#139;</a>&nbsp;\n\t\t\t\t<b>${calendar.monthAndYear}</b>&nbsp;\n\t\t\t\t<a href=\"javascript:nextMonth()\">&#155;&#155;&#155;</a>\n\t\t\t  </caption>\n\t\t\t\t<tr>\n\t\t\t\t  <c:forEach var=\"day\" items=\"${calendar.weeks[0].days}\">\n\t\t\t\t    <th>${day.dayOfWeek}</th>\n\t\t\t\t  </c:forEach>\n\t\t\t\t</tr>\n\t\t\t\t<c:forEach var=\"week\" items=\"${calendar.weeks}\">\n\t\t\t\t  <tr>\n\t\t\t\t\t<c:forEach var=\"day\" items=\"${week.days}\">\n\t\t\t\t\t  <td>\n\t\t\t\t\t    <c:if test=\"${calendar.month == day.month}\">\n\t\t\t\t\t\t  <c:set var=\"newHref\">javascript:addEntry('<fmt:formatDate value='${day.date}' type='date' pattern='MM-dd-yyyy'/>')</c:set>\n\t\t\t\t\t\t  <b class=\"date\"><c:out value=\"${day.dayOfMonth}\"/></b><a class=\"new\" href=\"<c:out value='${newHref}' escapeXml='false'/>\"><img border=0 src=\"images/new.gif\"/></a>\n\t\t\t\t\t\t  <br/>\n\t\t\t\t\t\t  <c:forEach var=\"entry\" items=\"${day.entries}\">\n\t\t\t\t\t\t\t<fmt:formatDate value=\"${entry.startTime}\" type=\"time\" pattern=\"HH:mm\"/>:<c:forEach var=\"owner\" items=\"${entry.labels}\"><c:set var=\"curUserName\"><c:out value=\"${owner.user}\"/></c:set><c:set var=\"fullName\"><%= usersHash.get((String)pageContext.getAttribute(\"curUserName\")) %></c:set><c:set var=\"editHref\">javascript:editEntry(<c:out value=\"${owner.schedIndex}\"/>,<c:out value=\"${owner.timeIndex}\"/>)</c:set>&nbsp;<c:choose><c:when test=\"${owner.supervisor}\">unscheduled</c:when><c:otherwise><a href=\"<c:out value='${editHref}' escapeXml='false'/>\" title=\"<c:out value='${fullName}'/>\"><c:out value=\"${owner.user}\"/></a></c:otherwise></c:choose></c:forEach><br/>\n\t\t\t\t\t\t  </c:forEach>\n\t\t\t\t\t    </c:if>\n\t\t\t\t\t  </td>\n\t\t\t\t\t</c:forEach>\n\t\t\t\t  </tr>\n\t\t\t\t</c:forEach>\n\t\t\t</table>\n</div>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"doneForm\" class=\"mb-4\">\n  <button type=\"submit\" class=\"btn btn-secondary\">Done</button>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n<%@page import=\"java.util.*\" %>\n<%@page import=\"org.opennms.netmgt.config.*\" %>\n<%@page import=\"org.opennms.netmgt.config.users.*\" %>\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"User Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"User List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n    function addNewUser()\n    {\n        document.allUsers.action=\"admin/userGroupView/users/newUser.jsp?action=new\";\n        document.allUsers.submit();\n        \n    }\n    \n    function detailUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/userDetail.jsp?userID=\" + userID;\n        document.allUsers.submit();\n    }\n    \n    function deleteUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/deleteUser\";\n        document.allUsers.userID.value=userID;\n        document.allUsers.submit();\n    }\n    \n    function modifyUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/modifyUser\";\n        document.allUsers.userID.value=userID;\n        document.allUsers.submit();\n    }\n    \n    function renameUser(userID)\n    {\n        document.allUsers.userID.value=userID;\n        var newID = prompt(\"Enter new name for user.\", userID);\n        \n        if (newID != null && newID != \"\")\n        {\n          document.allUsers.newID.value = newID;\n          document.allUsers.action=\"admin/userGroupView/users/renameUser\";\n          document.allUsers.submit();\n        }\n    }\n    \n</script>\n\n\n<form method=\"post\" name=\"allUsers\">\n<input type=\"hidden\" name=\"redirect\"/>\n<input type=\"hidden\" name=\"userID\"/>\n<input type=\"hidden\" name=\"newID\"/>\n<input type=\"hidden\" name=\"password\"/>\n\n<p>\n  Click on the <i>User ID</i> link to view detailed information about a\n  user.\n</p>\n\n<p>\n  <a id=\"doNewUser\" href=\"javascript:addNewUser()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new user\n  </a>\n</p>\n\n   <div class=\"card\">\n     <table class=\"table table-sm table-bordered\">\n        <thead>\n          <tr>\n          <th width=\"5%\">Delete</th>\n          <th width=\"5%\">Modify</th>\n          <th width=\"5%\">Rename</th>\n          <th width=\"5%\">User ID</th>\n          <th width=\"15%\">Full Name</th>\n          <th width=\"15%\">Email</th>\n          <th width=\"15%\">Pager Email</th>\n          <th width=\"15%\">XMPP Address</th>\n          </tr>\n        </thead>\n        <tbody>\n        <% \n           int row = 0;\n           for (User curUser : users.values()) {\n\t      String userid = curUser.getUserId();\n\t      String email = userFactory.getEmail(userid);\n\t      String pagerEmail = userFactory.getPagerEmail(userid);\n\t      String xmppAddress = userFactory.getXMPPAddress(userid);\n\t      String numericService = userFactory.getNumericPage(userid);\n\t      String textService = userFactory.getTextPage(userid);\n\t      String numericPin = userFactory.getNumericPin(userid);\n\t      String textPin = userFactory.getTextPin(userid);\n         %>\n         <tr id=\"user-<%= userid %>\">\n          <% if (!curUser.getUserId().equals(\"admin\") && !curUser.getUserId().equals(\"rtc\")) { %>\n          <td rowspan=\"2\" class=\"text-center\"> \n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doDelete\" %>\" href=\"javascript:deleteUser('<%=curUser.getUserId()%>')\" onclick=\"return confirm('Are you sure you want to delete the user <%=curUser.getUserId()%>?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a> \n          </td>\n          <% } else { %>\n          <td rowspan=\"2\" class=\"text-center\">\n            <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the admin user cannot be deleted.')\"></i>\n          </td>\n          <% } %>\n          <td rowspan=\"2\" class=\"text-center\">\n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doModify\" %>\" href=\"javascript:modifyUser('<%=curUser.getUserId()%>')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td rowspan=\"2\" class=\"text-center\">\n            <% if ( !curUser.getUserId().equals(\"admin\")) { %>\n                <button id=\"<%= \"users(\"+curUser.getUserId()+\").doRename\" %>\" class=\"btn btn-secondary\"  name=\"rename\" onclick=\"renameUser('<%=curUser.getUserId()%>')\">Rename</button>\n              <% } else { %>\n                <button id=\"<%= \"users(\"+curUser.getUserId()+\").doRename\" %>\" class=\"btn btn-secondary\"  name=\"rename\" onclick=\"alert('Sorry, the admin user cannot be renamed.')\">Rename</button>\n              <% } %>\n          </td>\n          <td>\n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doDetails\" %>\" href=\"javascript:detailUser('<%=curUser.getUserId()%>')\"><%=curUser.getUserId()%></a>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").fullName\" %>\">\n\t\t    <%= (curUser.getFullName().orElse(\"\")) %>\n\t      </div>\n          </td>\n          <td>\n            <div id=\"<%= \"users(\"+curUser.getUserId()+\").email\" %>\">\n            <%= ((email == null || email.equals(\"\")) ? \"&nbsp;\" : email) %>\n            </div>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").pagerEmail\" %>\">\n            <%= ((pagerEmail == null || pagerEmail.equals(\"\")) ? \"&nbsp;\" : pagerEmail) %>\n            </div>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").xmppAddress\" %>\">\n            <%= ((xmppAddress == null || xmppAddress.equals(\"\")) ? \"&nbsp;\" : xmppAddress) %>\n           </div>\n          </td>\n          </tr>\n          <tr>\n            <td colspan=\"5\">\n             <div id=\"<%= \"users(\"+curUser.getUserId()+\").userComments\" %>\">\n             <%= (curUser.getUserComments().orElse(\"No Comments\")) %>\n\t        </div>\n            </td>\n          </tr>\n         <% row++;\n            } %>\n       </tbody>\n     </table>\n  </div> <!-- panel -->\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n<%@page import=\"java.util.*\"%>\n<%@page import=\"java.text.*\"%>\n<%@page import=\"java.time.ZoneId\"%>\n<%@page import=\"org.opennms.netmgt.config.*\"%>\n<%@page import=\"org.opennms.netmgt.config.users.*\"%>\n<%@page import=\"org.opennms.web.api.Util\"%>\n<%@page import=\"org.opennms.web.api.Authentication\"%>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n\n<%!\n    private String createSelectList(String name, List<String> elements) {\n        StringBuffer buffer = new StringBuffer(\"<select class=\\\"form-control\\\" multiple=\\\"multiple\\\" name=\\\"\"+name+\"\\\" size=\\\"10\\\">\");\n        for(String element : elements){\n            buffer.append(\"<option>\" + element + \"</option>\");\n        }\n        buffer.append(\"</select>\");\n\n        return buffer.toString();\n    }\n%>\n\n<%\n        final HttpSession userSession = request.getSession(false);\n        User user = null;\n        String userid = \"\";\n        UserManager userFactory;\n        try {\n            UserFactory.init();\n            userFactory = UserFactory.getInstance();\n        } catch (Throwable e) {\n            throw new ServletException(\"UserFactory:modify() \" + e);\n        }\n\n        if (userSession != null) {\n            user = (User) userSession.getAttribute(\"user.modifyUser.jsp\");\n            userid = user.getUserId();\n        }\n%>\n<c:set var=\"baseHref\" value=\"<%=Util.calculateUrlBase(request)%>\"/>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Modify User\" />\n  <jsp:param name=\"headTitle\" value=\"Modify\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/userGroupView/users/list.jsp'>User List</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Modify User\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n    function addRoles() \n    {\n        m1len = m1.length ;\n        for ( i=0; i<m1len ; i++)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m2len = m2.length;\n                m2.options[m2len]= new Option(m1.options[i].text);\n            }\n        }\n        for ( i = (m1len -1); i>=0; i--)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m1.options[i] = null;\n            }\n        }\n    }\n\n    function removeRoles() \n    {\n        m2len = m2.length ;\n        for ( i=0; i<m2len ; i++)\n        {\n            if (m2.options[i].selected == true ) \n            {\n                m1len = m1.length;\n                m1.options[m1len]= new Option(m2.options[i].text);\n            }\n        }\n        for ( i=(m2len-1); i>=0; i--) \n        {\n            if (m2.options[i].selected == true ) \n            {\n                m2.options[i] = null;\n            }\n        }\n    }\n\n    function selectAllAvailable()\n    {\n        for (i=0; i < m1.length; i++) \n        {\n            m1.options[i].selected = true;\n        }\n    }\n    \n    function selectAllSelected()\n    {\n        for (i=0; i < m2.length; i++) \n        {\n            m2.options[i].selected = true;\n        }\n    }\n\n    function validate()\n    {\n        var minDurationMinsWarning = 5;\n        var warnMinDuration = true;\n\n        for (var c = 0; c < document.modifyUser.dutySchedules.value; c++)\n        {\n            var beginName= \"duty\" + c + \"Begin\";\n            var endName  = \"duty\" + c + \"End\";\n            \n            var beginValue = new Number(document.modifyUser.elements[beginName].value);\n            var endValue = new Number(document.modifyUser.elements[endName].value);\n\n            var beginHour = Math.floor(beginValue / 100);\n            var endHour = Math.floor(endValue / 100);\n            var beginMin = beginValue % 100, endMin = endValue % 100\n            var duration = ((endHour * 60) + endMin) - ((beginHour * 60) + beginMin);\n\n            if (!document.modifyUser.elements[\"deleteDuty\"+c].checked)\n            {\n            if (isNaN(beginValue))\n            {\n                alert(\"The begin time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                return false;\n            }\n            if (isNaN(endValue))\n            {\n                alert(\"The end time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                return false;\n            }\n            if (beginValue > endValue)\n            {\n                alert(\"The begin value for duty schedule \" + (c+1) + \" must be less than the end value.\");\n                return false;\n            }\n            if (beginValue < 0 || beginValue > 2359)\n            {\n                alert(\"The begin value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                return false;\n            }\n            if (endValue < 0 || endValue > 2359)\n            {\n                alert(\"The end value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                return false;\n            }\n            if ((duration <= minDurationMinsWarning) && warnMinDuration)\n            {\n                if (!(confirm(\"Warning: One or more duty schedules are unusually short in duration (\" + minDurationMinsWarning + \" minutes or less)\\n\\nSave these schedules?\")))\n                    return false;\n                else\n                    warnMinDuration = false;    // only once\n            }\n            }\n        }\n        return true;\n    }\n\n    function resetPassword()\n    {\n        newUserWin = window.open(\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/newPassword.jsp\") %>\", \"\", \"fullscreen=no,toolbar=no,status=no,menubar=no,scrollbars=yes,resizable=yes,directories=no,location=no,width=500,height=450\");\n    }\n\n    function addDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/addDutySchedules\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n    }\n    \n    function removeDutySchedules()\n    {\n        var ok = validate();\n        \n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/modifyUser.jsp\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n    }\n    \n    function saveUser()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/saveUser\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n        else\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/modifyUser.jsp\";\n    }\n    \n    function cancelUser()\n    {\n        document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/list.jsp\") %>\";\n        document.modifyUser.submit();\n    }\n</script>\n\n<form role=\"form\" class=\"form-horizontal\" id=\"modifyUser\" method=\"post\" name=\"modifyUser\">\n<input id=\"userID\" type=\"hidden\" name=\"userID\" value=\"<%=user.getUserId()%>\"/>\n<input id=\"password\" type=\"hidden\" name=\"password\"/>\n<input id=\"redirect\" type=\"hidden\" name=\"redirect\"/>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Modify User: <%=userid%></span>\n      </div>\n      <div class=\"card-body\">\n        <h3>User Password</h3>\n          <div class=\"form-group\">\n            <button type=\"button\" class=\"btn btn-secondary\" onClick=\"resetPassword()\">Reset Password</button>\n          </div>\n\n        <h3>User Information</h3>\n\t<%\n        String email = null;\n        String pagerEmail = null;\n        String xmppAddress = null;\n        String numericPage = null;\n        String numericPin = null;\n        String textPage = null;\n        String textPin = null;\n        String workPhone = null;\n        String mobilePhone = null;\n        String homePhone = null;\n        String microblog = null;\n        String fullName = null;\n        String comments = null;\n        String tuiPin = null;\n        ZoneId timeZoneId = null;\n        List<String> availableRoles = new ArrayList<String>(Authentication.getAvailableRoles());\n        Collections.sort(availableRoles);\n        List<String> configuredRoles = new ArrayList<>();\n            User usertemp = userFactory.getUser(userid);\n            if (usertemp != null) {\n                    email = userFactory.getEmail(userid);\n                    pagerEmail = userFactory.getPagerEmail(userid);\n                    xmppAddress = userFactory.getXMPPAddress(userid);\n                    numericPage = userFactory.getNumericPage(userid);\n                    numericPin = userFactory.getNumericPin(userid);\n                    textPage = userFactory.getTextPage(userid);\n                    textPin = userFactory.getTextPin(userid);\n                    workPhone = userFactory.getWorkPhone(userid);\n                    mobilePhone = userFactory.getMobilePhone(userid);\n                    homePhone = userFactory.getHomePhone(userid);\n                    microblog = userFactory.getMicroblogName(userid);\n            } else {\n                    List<Contact> contacts = user.getContacts();\n                    for (int i = 0; i < contacts.size(); i++) {\n                            if (contacts.get(i).getType().equals(\"email\")) {\n                                    email = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"pagerEmail\")) {\n                                    pagerEmail = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"xmppAddress\")) {\n                                    xmppAddress = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"numericPage\")) {\n                                    numericPage = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"textPage\")) {\n                                    textPage = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"workPhone\")) {\n                                    workPhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"mobilePhone\")) {\n                                    mobilePhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"homePhone\")) {\n                                    homePhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"microblog\")) {\n                            \t\tmicroblog = contacts.get(i).getInfo().orElse(null);\n                            }\n                    }\n            }\n            fullName = user.getFullName().orElse(null);\n            comments = user.getUserComments().orElse(null);\n            tuiPin = user.getTuiPin().orElse(null);\n            timeZoneId = user.getTimeZoneId().orElse(null);\n\n            configuredRoles = user.getRoles();\n            for (String role : configuredRoles) {\n                if (availableRoles.contains(role)) {\n                    availableRoles.remove(role);\n                }\n            }\n\n        %>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"fullName\" class=\"col-sm-2 col-form-label\">Full Name</label>\n          <div class=\"col-sm-10\">\n            <input id=\"fullName\" type=\"text\" class=\"form-control\" size=\"35\" name=\"fullName\" value=\"<%= (fullName == null? \"\" : fullName) %>\" />\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"userComments\" class=\"col-sm-2 col-form-label\">Comments</label>\n          <div class=\"col-sm-10\">\n            <textarea class=\"form-control\" rows=\"5\" id=\"userComments\" name=\"userComments\"><%= (comments == null? \"\" : comments) %></textarea>\n          </div>\n        </div>\n\n\n\t<div class=\"form-group\">\n        <h3>Security Roles</h3>\n        <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <label class=\"col-form-label\">Available Roles</label>\n                  <%=createSelectList(\"availableRoles\", availableRoles)%><br/>\n                  <button type=\"button\" class=\"btn btn-secondary\" id=\"roles.doAdd\" onClick=\"javascript:addRoles()\">Add &nbsp;&#155;&#155;&nbsp;</button>\n              </div>\n              <div class=\"col-sm-6\">\n                  <label class=\"col-form-label\">Currently in User</label>\n                  <%=createSelectList(\"configuredRoles\", configuredRoles)%><br/>\n                  <button type=\"button\" class=\"btn btn-secondary\" id=\"roles.doRemove\" onClick=\"javascript:removeRoles()\">&nbsp;&#139;&#139;&nbsp; Remove</button>\n              </div>\n        </div>\n    </div>\n\n        <h3>Notification Information</h3>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"email\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" id=\"email\" type=\"text\" name=\"email\" value='<%= (email == null ? \"\":email) %>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"pemail\" class=\"col-sm-2 col-form-label\">Pager Email</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"pemail\" name=\"pemail\" value='<%=(pagerEmail == null ? \"\":pagerEmail)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"xmppAddress\" class=\"col-sm-2 col-form-label\">XMPP Address</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" id=\"xmppAddress\" type=\"text\" name=\"xmppAddress\" value='<%=(xmppAddress == null ? \"\":xmppAddress)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"microblog\" class=\"col-sm-2 col-form-label\">Microblog Username</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"microblog\" name=\"microblog\" value='<%=(microblog == null ? \"\":microblog)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"numericalService\" class=\"col-sm-2 col-form-label\">Numeric Service</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"numericalService\" name=\"numericalService\" value='<%=(numericPage == null ? \"\":numericPage) %>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"numericalPin\" class=\"col-sm-2 col-form-label\">Numeric PIN</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"numericalPin\" name=\"numericalPin\" value='<%= (numericPin == null ? \"\":numericPin)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"textService\" class=\"col-sm-2 col-form-label\">Text Service</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"textService\" name=\"textService\" value='<%= (textPage == null ? \"\":textPage)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"textPin\" class=\"col-sm-2 col-form-label\">Text PIN</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"textPin\" name=\"textPin\" value='<%=(textPin == null ? \"\":textPin)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"workPhone\" class=\"col-sm-2 col-form-label\">Work Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"workPhone\" name=\"workPhone\" value='<%=(workPhone == null ? \"\":workPhone)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"mobilePhone\" class=\"col-sm-2 col-form-label\">Mobile Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"mobilePhone\" name=\"mobilePhone\" value='<%=(mobilePhone == null ? \"\":mobilePhone)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"homePhone\" class=\"col-sm-2 col-form-label\">Home Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"homePhone\" name=\"homePhone\" value='<%=(homePhone == null ? \"\":homePhone)%>'/>\n          </div>\n        </div>\n\n    <div class=\"form-row form-group\">\n          <label for=\"tuiPin\" class=\"col-sm-2 col-form-label\">Telephone PIN</label>\n          <div class=\"col-sm-10\">\n              <input class=\"form-control\" id=\"tuiPin\" type=\"text\" name=\"tuiPin\" value=\"<%= (tuiPin == null? \"\" : tuiPin) %>\" />\n          </div>\n    </div>\n\n    <h3>Date/Time Preferences</h3>\n    <div class=\"form-row form-group\">\n          <label for=\"timeZoneId\" class=\"col-sm-2 col-form-label\">Time Zone</label>\n          <div class=\"col-sm-10\">\n            <select class=\"form-control custom-select\" id=\"timeZoneId\" name=\"timeZoneId\">\n<%\n              List<String> zones = new ArrayList<>();\n              zones.add(\"\");\n              zones.addAll(ZoneId.getAvailableZoneIds());\n              Collections.sort(zones);\n              for(String element : zones){\n                out.append(\"<option\");\n                if(timeZoneId!=null && element.equals(timeZoneId.getId())){\n                    out.append(\" selected\");\n                }\n                out.append(\">\");\n                out.append(element).append(\"</option>\");\n              }\n%>\n            </select>\n          </div>\n    </div>\n\n      </div> <!-- card-body -->\n    </div> <!-- panel -->\n  </div> <!-- column -->\n\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>User Properties</span>\n      </div>\n      <div class=\"card-body\">\n        <p>\n          This panel allows you to modify information for each user, including\n          their name, notification information, and duty schedules.\n        </p>\n\n        <p>\n          <b>Notification Information</b> provides the ability for you to configure\n          contact information for each user, including any of <em>email</em>\n          address, <em>pager email</em> (in the case that the pager can be reached\n          as an email destination), <em>XMPP address</em> (for instant messages\n          using the Jabber XMPP protocol), <em>numeric service</em> (for pagers\n          that cannot display text messages), <em>text service</em> (for\n          alphanumeric pagers), and <em>work phone</em>, <em>mobile phone</em>, and\n          <em>home phone</em> for notifications by telephone. The <em>Telephone\n          PIN</em> is an optional numeric field used to authenticate called users.\n        </p>\n\n        <p>\n          <b>Duty Schedules</b> allow you to flexibility to determine when users\n          should receive notifications.  A duty schedule consists of a list of\n          days for which the time will apply and a time range, presented in\n          military time with no punctuation.  Using this standard, days run from\n          <em>0000</em> to <em>2359</em>.\n        </p>\n\n        <p>\n          If your duty schedules span midnight, or if your users work multiple,\n          non-contiguous time periods, you will need to configure multiple duty\n          schedules.  To do so, select the number of duty schedules to add from\n          the drop-down box next to <b>[Add This Many Schedules]</b>, and click\n          the button.  Then, using the duty schedule fields you've just added,\n          create a duty schedule from the start time to 2359 on one day, and\n          enter a second duty schedule which begins at 0000 and ends at the end\n          of that users coverage.\n        </p>\n\n        <p>\n          To remove configured duty schedules, put a check in the <em>Delete</em>\n          column and click <b>[Remove Checked Schedules]</b>.\n        </p>\n\n        <p>\n         To save your configuration, click on <b>[Finish]</b>.\n        </p>\n      </div> <!-- card-body -->\n    </div> <!-- panel -->\n  </div> <!-- column -->\n</div> <!-- row -->\n\n<%\nCollection<String> dutySchedules = user.getDutySchedules();\n%>\n<input type=\"hidden\" name=\"dutySchedules\" value=\"<%=user.getDutySchedules().size()%>\"/>\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Duty Schedule</span>\n      </div>\n      <div class=\"card-body\">\n      <table class=\"table table-sm table-striped\">\n        <thead>\n          <tr>\n          <th>#</th>\n          <th>Delete</th>\n          <th>Mo</th>\n          <th>Tu</th>\n          <th>We</th>\n          <th>Th</th>\n          <th>Fr</th>\n          <th>Sa</th>\n          <th>Su</th>\n          <th>Begin Time</th>\n          <th>End Time</th>\n          </tr>\n        </thead>\n        <%\n        int i = 0;\n        for (String dutySchedule : dutySchedules) {\n            DutySchedule tmp = new DutySchedule(dutySchedule);\n            Vector<Object> curSched = tmp.getAsVector();\n            %>\n        <tbody>\n                        <tr>\n                          <td width=\"1%\"><%=(i + 1)%></td>\n                          <td width=\"1%\">\n                            <input type=\"checkbox\" name=\"deleteDuty<%=i%>\"/>\n                          </td>\n                          <%ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n            for (int j = 0; j < 7; j++) {\n                Boolean curDay = (Boolean) curSched.get(j);\n\n                %>\n                          <td width=\"5%\">\n                            <input type=\"checkbox\" name=\"duty<%=i+days.format(j)%>\" <%= (curDay.booleanValue() ? \"checked=\\\"true\\\"\" : \"\")%>/>\n                          </td>\n                          <%}\n            %>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>Begin\" value=\"<%=curSched.get(7)%>\"/>\n                          </td>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>End\" value=\"<%=curSched.get(8)%>\"/>\n                          </td>\n                        </tr>\n                        <%i++;\n        }\n        %>\n         </tbody>\n       </table>\n\n        <div class=\"form-row mt-2\">\n            <button id=\"removeSchedulesButton\" type=\"button\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"removeDutySchedules()\">Remove Checked Schedules</button>\n        </div>\n\n       <div class=\"form-row mt-2\">\n           <select name=\"numSchedules\" class=\"form-control custom-select col-xs-6 col-sm-2 col-md-1 mr-2\" value=\"3\">\n                 <option value=\"1\">1</option>\n                 <option value=\"2\">2</option>\n                 <option value=\"3\">3</option>\n                 <option value=\"4\">4</option>\n                 <option value=\"5\">5</option>\n                 <option value=\"6\">6</option>\n                 <option value=\"7\">7</option>\n           </select>\n           <button id=\"addSchedulesButton\" type=\"button\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"addDutySchedules()\" title=\"Add This Many Schedules\"><i class=\"fa fa-plus\"></i> Add Schedules</button>\n       </div>\n\n   </div>\n   </div> <!-- card -->\n\n    <div class=\"form-group\">\n        <button id=\"saveUserButton\" type=\"submit\" class=\"btn btn-secondary\" name=\"finish\" onclick=\"saveUser()\">Finish</button>\n        <button id=\"cancelButton\" type=\"button\" class=\"btn btn-secondary\" name=\"cancel\" onclick=\"cancelUser()\">Cancel</button>\n    </div>\n</form>\n\n<script type=\"text/javascript\" >\n    var m1 = document.modifyUser.availableRoles;\n    var m2 = document.modifyUser.configuredRoles;\n</script>\n \n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"New Password\" />\n  <jsp:param name=\"headTitle\" value=\"New Password\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"quiet\" value=\"true\" />\n  <jsp:param name=\"nobreadcrumbs\" value=\"true\" />\n</jsp:include>\n\n\n<script type=\"text/javascript\">\n  function verifyGoForm() \n  {\n    if (document.goForm.pass1.value == document.goForm.pass2.value) \n    {\n      window.opener.document.modifyUser.password.value=document.goForm.pass1.value;\n      \n      window.close();\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n    }\n}\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>Please enter a new password and confirm</span>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" method=\"post\" name=\"goForm\">\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"pass1\" name=\"pass1\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"pass2\" name=\"pass2\">\n      </div>\n\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"verifyGoForm()\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"window.close()\">Cancel</button>\n    </form>\n    <p class=\"alert alert-warning mt-2\">\n      Note: Be sure to click \"Finish\" at the bottom of the user page to save\n      changes.\n    </p>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" >\n  <jsp:param name=\"quiet\" value=\"true\" />\n</jsp:include>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New User\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Users\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/users/list.jsp'>User List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New User\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newUserForm.userID.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The user ID '\" + document.newUserForm.userID.value + \"' cannot be used. It may be confused with the administration user ID 'admin'.\");\n        return false;\n    }\n    \n    if (document.newUserForm.pass1.value == document.newUserForm.pass2.value) \n    {\n      document.newUserForm.action=\"admin/userGroupView/users/addNewUser\";\n      return true;\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n      document.newUserForm.pass1.value = \"\";\n      document.newUserForm.pass2.value = \"\";\n      return false;\n    }\n  }    \n  function cancelUser()\n  {\n      window.location.href = \"admin/userGroupView/users/list.jsp\";\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The user <%=request.getParameter(\"userID\")%> already exists.\n        Please type in a different user ID.</span>\n    <%} else { %>\n      <span>Please enter a user ID and password below</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"form\" role=\"form\" id=\"newUserForm\" method=\"post\" name=\"newUserForm\" onsubmit=\"return validateFormInput();\">\n      <div class=\"form-group\">\n        <label for=\"userID\" class=\"\">User ID</label>\n        <input id=\"userID\" type=\"text\" name=\"userID\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input id=\"pass1\" type=\"password\" name=\"pass1\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input id=\"pass2\" type=\"password\" name=\"pass2\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelUser()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2011-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.smoketest;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.openqa.selenium.Alert;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class UserIT extends OpenNMSSeleniumIT {\n    private static final Logger LOG = LoggerFactory.getLogger(UserIT.class);\n\n    @Before\n    public void setUp() throws Exception {\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/index.jsp\");\n    }\n\n    @Test\n    public void testExpectedTextAndLinksArePresent() throws Exception {\n        final List<WebElement> headers = driver.findElements(By.xpath(\"//div[@class='card-header']/span\"));\n        assertEquals(\"Account page should have 2 panels\", 2, headers.size());\n        assertEquals(\"Account page should have \\\"User Account Self-Service\\\" panel\", \"User Account Self-Service\", headers.get(0).getText());\n        assertEquals(\"Account page should have \\\"User Account Self-Service Options\\\" panel\", \"Account Self-Service Options\", headers.get(1).getText());\n    }\n\n    @Test\n    public void testSubmitWithWrongPassword() throws InterruptedException {\n        driver.findElement(By.linkText(\"Change Password\")).click();\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"12345\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"23456\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"34567\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n\n        try {\n            final Alert alert = wait.until(ExpectedConditions.alertIsPresent());\n            alert.dismiss();\n        } catch (final Exception e) {\n            LOG.debug(\"Got an exception waiting for a 'wrong password' alert.\", e);\n            throw e;\n        }\n    }\n\n    @Test\n    public void testUsersAndGroups() throws Exception {\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementByLink(\"Add new user\").click();\n\n        enterText(By.id(\"userID\"), USER_NAME);\n        enterText(By.id(\"pass1\"), \"SmokeTestPassword\");\n        enterText(By.id(\"pass2\"), \"SmokeTestPassword\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        findElementById(\"saveUserButton\").click();\n        findElementById(\"users(\" + USER_NAME + \").doDetails\");\n\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Groups\").click();\n        findElementByLink(\"Add new group\").click();\n\n        enterText(By.id(\"groupName\"), GROUP_NAME);\n        enterText(By.id(\"groupComment\"), \"Test\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        final Select select = new Select(findElementByName(\"availableUsers\"));\n        select.selectByVisibleText(USER_NAME);\n        findElementById(\"users.doAdd\").click();\n\n        findElementByName(\"finish\").click();\n\n        findElementByLink(GROUP_NAME).click();\n        driver.findElement(By.xpath(\"//div[@class='card-header']/span[text()='Details for Group: \" + GROUP_NAME + \"']\"));\n\n        findElementByLink(\"Group List\").click();\n        findElementById(GROUP_NAME + \".doDelete\").click();\n        handleAlert(\"Are you sure you want to delete the group \" + GROUP_NAME + \"?\");\n        assertElementDoesNotExist(By.id(GROUP_NAME));\n\n        findElementByLink(\"Users and Groups\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementById(\"user-\" + USER_NAME);\n        findElementById(\"users(\" + USER_NAME + \").doDelete\").click();\n        handleAlert(\"Are you sure you want to delete the user \" + USER_NAME + \"?\");\n        assertElementDoesNotExist(By.id(USER_NAME));\n    }\n\n    @Test\n    public void testChangeAdminPasswordWithDifferentPasswords() throws Exception {\n\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"OpenNM\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        try {\n            final Alert alert = wait.until(ExpectedConditions.alertIsPresent());\n            alert.dismiss();\n        } catch (final Exception e) {\n            LOG.debug(\"Got an exception waiting for a 'wrong password' alert.\", e);\n            throw e;\n        }\n    }\n\n    @Test\n    public void testChangeAdminPassword() throws Exception {\n\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"OpenNMS\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        assertTrue(wait.until(pageContainsText(\"Password successfully changed\")));\n\n        // Change password back to admin\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"admin\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        assertTrue(wait.until(pageContainsText(\"Password successfully changed\")));\n    }\n\n}\n"], "fixing_code": ["/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2020 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.netmgt.config;\n\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.StringWriter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Optional;\nimport java.util.TreeMap;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReadWriteLock;\nimport java.util.concurrent.locks.ReentrantReadWriteLock;\n\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.lang.StringUtils;\nimport org.jasypt.util.password.PasswordEncryptor;\nimport org.jasypt.util.password.StrongPasswordEncryptor;\nimport org.opennms.core.xml.JaxbUtils;\nimport org.opennms.netmgt.config.api.UserConfig;\nimport org.opennms.netmgt.config.users.Contact;\nimport org.opennms.netmgt.config.users.DutySchedule;\nimport org.opennms.netmgt.config.users.Header;\nimport org.opennms.netmgt.config.users.Password;\nimport org.opennms.netmgt.config.users.User;\nimport org.opennms.netmgt.config.users.Userinfo;\nimport org.opennms.netmgt.events.api.EventConstants;\nimport org.opennms.netmgt.model.OnmsUser;\nimport org.opennms.netmgt.model.OnmsUserList;\n\n/**\n * <p>Abstract UserManager class.</p>\n *\n * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n * @author <a href=\"mailto:brozow@opennms.org\">Matt Brozowski</a>\n * @author <a href=\"mailto:ranger@opennms.org\">Benjamin Reed</a>\n * @author <a href=\"mailto:jeffg@opennms.org\">Jeff Gehlbach</a>\n */\npublic abstract class UserManager implements UserConfig {\n\tpublic static final String ALLOW_UNSALTED_PROPERTY = \"org.opennms.users.allowUnsalted\";\n    private final boolean m_allowUnsalted;\n\n    private static final char[] HEX = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\n\n    private static final PasswordEncryptor s_passwordEncryptor = new StrongPasswordEncryptor();\n\n    private final ReadWriteLock m_readWriteLock = new ReentrantReadWriteLock();\n    private final Lock m_readLock = m_readWriteLock.readLock();\n    private final Lock m_writeLock = m_readWriteLock.writeLock();\n\n    protected GroupManager m_groupManager;\n    /**\n     * A mapping of user IDs to the User objects\n     */\n    protected Map<String, User> m_users;\n    /**\n     * The duty schedules for each user\n     */\n    protected Map<String, List<DutySchedule>> m_dutySchedules;\n    private Header oldHeader;\n\n    /**\n     * <p>Constructor for UserManager.</p>\n     *\n     * @param groupManager a {@link org.opennms.netmgt.config.GroupManager} object.\n     */\n    protected UserManager(final GroupManager groupManager) {\n        m_groupManager = groupManager;\n        m_allowUnsalted = Boolean.parseBoolean(System.getProperty(ALLOW_UNSALTED_PROPERTY, \"true\"));\n    }\n    \n    /**\n     * <p>parseXML</p>\n     *\n     * @param in a {@link java.io.InputStream} object.\n     */\n    public void parseXML(final InputStream in) {\n        m_writeLock.lock();\n\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(in);\n            final Userinfo userinfo = JaxbUtils.unmarshal(Userinfo.class, isr);\n            oldHeader = userinfo.getHeader();\n            m_users = new TreeMap<String, User>();\n        \n            for (final User curUser : userinfo.getUsers()) {\n                m_users.put(curUser.getUserId(), curUser);\n            }\n        \n            _buildDutySchedules(m_users);\n        } finally {\n            IOUtils.closeQuietly(isr);\n            m_writeLock.unlock();\n        }\n    }\n\n\n    /**\n     * Adds a new user and overwrites the \"users.xml\"\n     *\n     * @param name a {@link java.lang.String} object.\n     * @param details a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void saveUser(final String name, final User details) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            _writeUser(name, details);\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    private void _assertSaltAcceptable(final User details) throws Exception {\n        if (!m_allowUnsalted) {\n            final Password p = details.getPassword();\n            if (p != null) {\n                if (!p.getSalt()) {\n                    throw new IllegalStateException(\"org.opennms.users.allowUnsaltedPasswords=false, but \" + details.getUserId() + \" contains an unsalted password.\");\n                }\n            }\n        }\n    }\n\n    private void _writeUser(final String name, final User details) throws Exception {\n        if (name == null || details == null) {\n            throw new Exception(\"UserFactory:saveUser  null\");\n        } else {\n            _assertSaltAcceptable(details);\n            m_users.put(name, details);\n        }\n      \n        _saveCurrent();\n    }\n    \n    public void save(final OnmsUser onmsUser) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            User xmlUser = _getUser(onmsUser.getUsername());\n            if (xmlUser == null) {\n                xmlUser = new User();\n                xmlUser.setUserId(onmsUser.getUsername());\n            }\n            xmlUser.setFullName(onmsUser.getFullName());\n            xmlUser.setUserComments(onmsUser.getComments());\n\n            // Contact info\n            _setContact(xmlUser, ContactType.email, onmsUser.getEmail());\n            \n            final Password pass = new Password();\n            pass.setEncryptedPassword(onmsUser.getPassword());\n            pass.setSalt(onmsUser.getPasswordSalted());\n            xmlUser.setPassword(pass);\n    \n            if (onmsUser.getDutySchedule() != null) {\n                xmlUser.setDutySchedules(new ArrayList<String>(onmsUser.getDutySchedule()));\n            }\n            if (onmsUser.getRoles() != null) {\n                xmlUser.setRoles(new ArrayList<String>(onmsUser.getRoles()));\n            }\n            _writeUser(onmsUser.getUsername(), xmlUser);\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Builds a mapping between user IDs and duty schedules. These are used by\n     * Notifd when determining to send a notice to a given user. This helps\n     * speed up the decision process.\n     * \n     * @param users\n     *            the map of users parsed from the XML configuration file\n     */\n    private void _buildDutySchedules(final Map<String,User> users) {\n        m_dutySchedules = new HashMap<String,List<DutySchedule>>();\n        \n        for (final Entry<String,User> entry : users.entrySet()) {\n            final String key = entry.getKey();\n            final User curUser = entry.getValue();\n    \n            if (curUser.getDutySchedules().size() > 0) {\n                final List<DutySchedule> dutyList = new ArrayList<DutySchedule>();\n                for (final String duty : curUser.getDutySchedules()) {\n                \tdutyList.add(new DutySchedule(duty));\n                }\n    \n                m_dutySchedules.put(key, dutyList);\n            }\n        }\n    }\n\n    /**\n     * Determines if a user is on duty at a given time. If a user has no duty\n     * schedules listed in the configuration file, that user is assumed to always be on\n     * duty.\n     *\n     * @param user\n     *            the user id\n     * @param time\n     *            the time to check for a duty schedule\n     * @return boolean, true if the user is on duty, false otherwise.\n     * @throws java.io.IOException if any.\n     */\n    public boolean isUserOnDuty(final String user, final Calendar time) throws IOException {\n        update();\n    \n        m_readLock.lock();\n        try {\n            // if the user has no duty schedules then he is on duty\n            if (!m_dutySchedules.containsKey(user))\n                return true;\n    \n            for (final DutySchedule curSchedule : m_dutySchedules.get(user)) {\n            \tif (curSchedule.isInSchedule(time)) {\n            \t\treturn true;\n            \t}\n            }\n        } finally {\n            m_readLock.unlock();\n        }\n\n        return false;\n    }\n\n    /**\n     * Return a <code>Map</code> of usernames to user instances.\n     *\n     * @return a {@link java.util.Map} object.\n     * @throws java.io.IOException if any.\n     */\n    public Map<String, User> getUsers() throws IOException {\n        update();\n    \n        m_readLock.lock();\n        try {\n            return Collections.unmodifiableMap(m_users);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public OnmsUserList getOnmsUserList() throws IOException {\n        update();\n\n        final OnmsUserList list = new OnmsUserList();\n\n        m_readLock.lock();\n        \n        try {\n            for (final String username : _getUserNames()) {\n                list.add(_getOnmsUser(username));\n            }\n            list.setTotalCount(list.getCount());\n    \n            return list;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    public OnmsUser getOnmsUser(final String username) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getOnmsUser(username);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private OnmsUser _getOnmsUser(final String username) throws IOException {\n        final User xmlUser = _getUser(username);\n        if (xmlUser == null) return null;\n\n        final OnmsUser user = new OnmsUser(username);\n        user.setFullName(trim(xmlUser.getFullName()));\n        user.setComments(trim(xmlUser.getUserComments()));\n        user.setPassword(xmlUser.getPassword().getEncryptedPassword());\n        user.setPasswordSalted(Boolean.valueOf(xmlUser.getPassword().getSalt()));\n        user.setDutySchedule(xmlUser.getDutySchedules());\n        user.setRoles(xmlUser.getRoles());\n        user.setEmail(_getContactInfo(xmlUser, ContactType.email));\n        return user;\n    }\n    \n    private String trim(final Optional<String> text) {\n        return (text == null || !text.isPresent())? null : text.get().trim();\n    }\n\n    private Contact _getContact(final String userId, final ContactType contactType) {\n    \tUser user = _getUser(userId);\n    \tif (user != null && contactType != null) {\n    \t\tfor (Contact eachContact : user.getContacts()) {\n    \t\t\tif (contactType.name().equals(eachContact.getType())) {\n    \t\t\t\treturn eachContact;\n    \t\t\t}\n    \t\t}\n    \t}\n    \treturn null;\n    }\n    \n    /**\n     * Returns a boolean indicating if the user name appears in the XML file\n     *\n     * @return true if the user exists in the XML file, false otherwise\n     * @param userName a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public boolean hasUser(final String userName) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return m_users.containsKey(userName);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    /**\n     * <p>getUserNames</p>\n     *\n     * @return a {@link java.util.List} object.\n     * @throws java.io.IOException if any.\n     */\n    public List<String> getUserNames() throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUserNames();\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private List<String> _getUserNames() {\n        final List<String> userNames = new ArrayList<String>();\n        userNames.addAll(m_users.keySet());\n        return userNames;\n    }\n\n    /**\n     * Get a user by name\n     *\n     * @param name\n     *            the name of the user to return\n     * @return the user specified by name\n     * @throws java.io.IOException if any.\n     */\n    public User getUser(final String name) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUser(name);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private User _getUser(final String name) {\n        return m_users.get(name);\n    }\n    \n    /**\n     * Get a user's telephone PIN by name\n     *\n     * @param name\n     *            the name of the user to return\n     * @return the telephone PIN of the user specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getTuiPin(final String name) throws IOException {\n    \n        update();\n\n        m_readLock.lock();\n        try {\n            return m_users.get(name).getTuiPin().orElse(null);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * Get a user's telephone PIN by User object\n     *\n     * @return the telephone PIN of the user specified by user\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTuiPin(final User user) throws IOException {\n    \n        update();\n    \n        m_readLock.lock();\n        try {\n            return m_users.get(user.getUserId()).getTuiPin().orElse(null);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * Get a user's microblog username by username\n     *\n     * @param name\n     *            the username of the user whose microblog username should be returned\n     * @return the microblog username of the specified user\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    public String getMicroblogName(final String name) throws FileNotFoundException, IOException {\n        return getContactInfo(name, ContactType.microblog.toString());\n    }\n\n    /**\n     * Get a user's microblog username by User\n     *\n     * @param user\n     *            the user object of the user whose microblog username should be returned\n     * @return the microblog username of the specified user\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    public String getMicroblogName(final User user) throws FileNotFoundException, IOException {\n        return getContactInfo(user, ContactType.microblog.toString());\n    }\n    \n    public void setContactInfo(final String userId, final ContactType contactType, final String contactValue) throws Exception {\n    \t update();\n         m_writeLock.lock();\n         \n         try {\n             final User user = _getUser(userId);\n             if (user != null) {\n            \t _setContact(user, contactType, contactValue);\n             }\n             _saveCurrent();\n         } finally {\n             m_writeLock.unlock();\n         }\n\t}\n    \n    private void _setContact(final User user, final ContactType contactType, final String value) {\n        if (user != null && !StringUtils.isEmpty(value)) {\n        \tContact contact = _getContact(user.getUserId(), contactType);\n        \tif (contact == null) {\n        \t\tcontact = new Contact();\n        \t\tuser.addContact(contact);\n        \t}\n        \tcontact.setInfo(value);\n    \t\tcontact.setType(contactType.name());\n        }\n    }\n\n    /**\n     * @see {@link #getContactInfo(String, String)} \n     */\n    public String getContactInfo(final String userId, final ContactType contactType) throws IOException {\n    \tif (userId == null || contactType == null) return null;\n    \treturn getContactInfo(userId, contactType.name());\n\t}\n    \n    /**\n     * Get the contact info given a command string\n     *\n     * @param userID\n     *            the name of the user\n     * @param command\n     *            the command to look up the contact info for\n     * @return the contact information\n     * @throws java.io.IOException if any.\n     */\n    public String getContactInfo(final String userID, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getContactInfo(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getContactInfo</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param command a {@link java.lang.String} object.\n     * @return a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getContactInfo(final User user, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        \n        try {\n            return _getContactInfo(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getContactInfo(final User user, final ContactType contactType) {\n    \treturn _getContactInfo(user, contactType.name());\n    }\n    \n    private String _getContactInfo(final User user, final String command) {\n        if (user == null) return \"\";\n        \n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(command)) {\n        \t\treturn contact.getInfo().orElse(\"\");\n        \t}\n        }\n        return \"\";\n    }\n\n    /**\n     * Get the contact service provider, given a command string\n     *\n     * @param userID\n     *            the name of the user\n     * @param command\n     *            the command to look up the contact info for\n     * @return the contact information\n     * @throws java.io.IOException if any.\n     */\n    public String getContactServiceProvider(final String userID, final String command) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getContactServiceProvider(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getContactServiceProvider</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param command a {@link java.lang.String} object.\n     * @return a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getContactServiceProvider(final User user, final String command) throws IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            return _getContactServiceProvider(user, command);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getContactServiceProvider(final User user, final String command) {\n        if (user == null) return \"\";\n\n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(command)) {\n        \t\treturn contact.getServiceProvider().orElse(\"\");\n        \t}\n        }\n        \n        return \"\";\n    }\n\n    /**\n     * Get a email by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the email specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getEmail(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.email.toString());\n    }\n    \n    /**\n     * Get a email by user\n     *\n     * @param user the user to find the email for\n     * @return String the email specified by name\n     * @throws java.io.IOException if any.\n     */\n    public String getEmail(final User user) throws IOException {\n        return getContactInfo(user, ContactType.email.toString());\n    }\n\n    /**\n     * Get a pager email by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the pager email\n     * @throws java.io.IOException if any.\n     */\n    public String getPagerEmail(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.pagerEmail.toString());\n    }\n\n    /**\n     * Get a pager email by user\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @return String the pager email\n     * @throws java.io.IOException if any.\n     */\n    public String getPagerEmail(final User user) throws IOException {\n        return getContactInfo(user, ContactType.pagerEmail.toString());\n    }\n\n    /**\n     * Get a numeric pin\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the numeric pin\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPin(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get a numeric pin\n     *\n     * @return String the numeric pin\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPin(final User user) throws IOException {\n        return getContactInfo(user, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get an XMPP address by name\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the XMPP address\n     * @throws java.io.IOException if any.\n     */\n    public String getXMPPAddress(final String userID) throws IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            final User user = m_users.get(userID);\n            return _getXMPPAddress(user);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    /**\n     * Get an XMPP address by name\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @return String the XMPP address\n     * @throws java.io.IOException if any.\n     */\n    public String getXMPPAddress(final User user) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getXMPPAddress(user);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String _getXMPPAddress(final User user) {\n        if (user == null)\n            return \"\";\n        \n        for (final Contact contact : user.getContacts()) {\n        \tif (contact != null && contact.getType().equals(ContactType.xmppAddress.toString())) {\n        \t\treturn contact.getInfo().orElse(\"\");\n        \t}\n        }\n        \n        return \"\";\n    }\n\n    /**\n     * Get a numeric service provider\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the service provider\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPage(final String userID) throws IOException {\n        return getContactServiceProvider(userID, ContactType.numericPage.toString());\n    }\n    \n    /**\n     * Get a numeric service provider\n     *\n     * @return String the service provider\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getNumericPage(final User user) throws IOException {\n        return getContactServiceProvider(user, ContactType.numericPage.toString());\n    }\n\n    /**\n     * Get a text pin\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the text pin\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPin(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a text pin\n     *\n     * @return String the text pin\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPin(final User user) throws IOException {\n        return getContactInfo(user, ContactType.textPage.toString());\n    }\n\n    /**\n     * Get a Text Page Service Provider\n     *\n     * @param userID\n     *            the user ID of the user to return\n     * @return String the text page service provider.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPage(final String userID) throws IOException {\n        return getContactServiceProvider(userID, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a Text Page Service Provider\n     *\n     * @return String the text page service provider.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @throws java.io.IOException if any.\n     */\n    public String getTextPage(final User user) throws IOException {\n        return getContactServiceProvider(user, ContactType.textPage.toString());\n    }\n    \n    /**\n     * Get a work phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the work phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getWorkPhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.workPhone.toString());\n    }\n    \n    /**\n     * Get a work phone number\n     *\n     * @return String the work phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getWorkPhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.workPhone.toString());\n    }\n\n    /**\n     * Get a mobile phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the mobile phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getMobilePhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.mobilePhone.toString());\n    }\n    \n    /**\n     * Get a mobile phone number\n     *\n     * @return String the mobile phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getMobilePhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.mobilePhone.toString());\n    }\n\n    /**\n     * Get a home phone number\n     *\n     * @param userID\n     *             the user ID of the user to return\n     * @return String the home phone number\n     * @throws java.io.IOException if any.\n     */\n    public String getHomePhone(final String userID) throws IOException {\n        return getContactInfo(userID, ContactType.homePhone.toString());\n    }\n    \n    /**\n     * Get a home phone number\n     *\n     * @return String the home phone number\n     * @throws java.io.IOException if any.\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     */\n    public String getHomePhone(final User user) throws IOException {\n        return getContactInfo(user, ContactType.homePhone.toString());\n    }\n\n    /**\n     * <p>saveUsers</p>\n     *\n     * @param usersList a {@link java.util.Collection} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void saveUsers(final Collection<User> usersList) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            if (!m_allowUnsalted) {\n                for (final User details : usersList) {\n                    _assertSaltAcceptable(details);\n                }\n            }\n\n            // clear out the internal structure and reload it\n            m_users.clear();\n\n            for (final User curUser : usersList) {\n            \tm_users.put(curUser.getUserId(), curUser);\n            }\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Removes the user from the list of users. Then overwrites to the\n     * \"users.xml\"\n     *\n     * @param name a {@link java.lang.String} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void deleteUser(final String name) throws Exception {\n        m_writeLock.lock();\n        \n        try {\n            // Check if the user exists\n            if (m_users.containsKey(name)) {\n                // Delete the user in the user map.\n                m_users.remove(name);\n        \n                // Refresh the groups config first\n                m_groupManager.update();\n                \n                // Delete the user in the group.\n                m_groupManager.deleteUser(name);\n        \n                // Delete the user in the view.\n                // viewFactory.deleteUser(name);\n            } else {\n                throw new Exception(\"UserFactory:delete The old user name \" + name + \" is not found\");\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Saves into \"users.xml\" file\n     */\n    private void _saveCurrent() throws Exception {\n        final List<User> users = new ArrayList<>(m_users.values());\n    \n        final Userinfo userinfo = new Userinfo();\n        userinfo.setUsers(users);\n\n        final Header header = oldHeader;\n        if (header != null) {\n            header.setCreated(EventConstants.formatToString(new Date()));\n            userinfo.setHeader(header);\n        }\n        oldHeader = header;\n    \n        // marshal to a string first, then write the string to the file. This\n        // way the original configuration\n        // isn't lost if the XML from the marshal is hosed.\n        final StringWriter stringWriter = new StringWriter();\n        JaxbUtils.marshal(userinfo, stringWriter);\n        final String writerString = stringWriter.toString();\n        saveXML(writerString);\n    }\n\n    /**\n     * <p>saveXML</p>\n     *\n     * @param writerString a {@link java.lang.String} object.\n     * @throws java.io.IOException if any.\n     */\n    protected abstract void saveXML(final String writerString) throws IOException ;\n\n    /**\n     * When this method is called users name is changed, so also is the username\n     * belonging to the group and the view. Also overwrites the \"users.xml\" file\n     *\n     * @param oldName a {@link java.lang.String} object.\n     * @param newName a {@link java.lang.String} object.\n     * @throws java.lang.Exception if any.\n     */\n    public void renameUser(final String oldName, final String newName) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            // Get the old data\n            if (m_users.containsKey(oldName)) {\n                final User data = m_users.get(oldName);\n                if (data == null) {\n                    m_users.remove(oldName);\n                    throw new Exception(\"UserFactory:rename the data contained for old user \" + oldName + \" is null\");\n                } else {\n                    if (m_users.containsKey(newName)) {\n                        throw new Exception(\"UserFactory: cannot rename user \" + oldName + \". An user with the given name \" + newName + \" already exists\");\n                    }\n\n                    // Rename the user in the user map.\n                    m_users.remove(oldName);\n                    data.setUserId(newName);\n                    m_users.put(newName, data);\n        \n                    // Refresh the groups config first\n                    m_groupManager.update();\n                    \n                    // Rename the user in the group.\n                    m_groupManager.renameUser(oldName, newName);\n        \n                    // Rename the user in the view.\n                    // viewFactory.renameUser(oldName, newName);\n                }\n            } else {\n                throw new Exception(\"UserFactory:rename the old user name \" + oldName + \" is not found\");\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Sets the password for this user, assuming that the value passed in is\n     * already encrypted properly\n     *\n     * @param userID\n     *            the user ID to change the password for\n     * @param aPassword\n     *            the encrypted password\n     * @throws java.lang.Exception if any.\n     */\n    public void setEncryptedPassword(final String userID, final String aPassword, final boolean salted) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            final User user = m_users.get(userID);\n            if (user != null) {\n                final Password pass = new Password();\n                pass.setEncryptedPassword(aPassword);\n                pass.setSalt(salted);\n                user.setPassword(pass);\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * Sets the password for this user, first encrypting it\n     *\n     * @param userID\n     *            the user ID to change the password for\n     * @param aPassword\n     *            the password\n     * @throws java.lang.Exception if any.\n     */\n    public void setUnencryptedPassword(final String userID, final String aPassword) throws Exception {\n        update();\n\n        m_writeLock.lock();\n        \n        try {\n            final User user =  m_users.get(userID);\n            if (user != null) {\n                final Password pass = new Password();\n                pass.setEncryptedPassword(encryptedPassword(aPassword, true));\n                pass.setSalt(true);\n                user.setPassword(pass);\n            }\n        \n            _saveCurrent();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n\n    /**\n     * <p>encryptedPassword</p>\n     *\n     * @param aPassword a {@link java.lang.String} object.\n     * @param useSalt TODO\n     * @return a {@link java.lang.String} object.\n     */\n    public String encryptedPassword(final String aPassword, final boolean useSalt) {\n        String encryptedPassword = null;\n\n        if (useSalt) {\n            encryptedPassword = s_passwordEncryptor.encryptPassword(aPassword);\n        } else {\n            // old crappy algorithm\n            try {\n                final MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n        \n                // build the digest, get the bytes, convert to hexadecimal string\n                // and return\n                encryptedPassword = hexToString(digest.digest(aPassword.getBytes()));\n            } catch (final NoSuchAlgorithmException e) {\n                throw new IllegalStateException(e.toString());\n            }\n        }\n\n        return encryptedPassword;\n    }\n\n    /**\n     * @param data\n     * @return\n     */\n    private String hexToString(final byte[] data) {\n        // check to see if the byte array has an even number of elements\n        if ((data.length % 2) != 0) return null;\n    \n        // there will be two hexadecimal characters for each byte element\n        final char[] buffer = new char[data.length * 2];\n    \n        for (int i = 0; i < data.length; i++) {\n            final int low = (int) (data[i] & 0x0f);\n            final int high = (int) ((data[i] & 0xf0) >> 4);\n            buffer[i * 2] = HEX[high];\n            buffer[i * 2 + 1] = HEX[low];\n        }\n    \n        return new String(buffer);\n    }\n\n    /**\n     * This method compares two encrypted strings for equality.\n     *\n     * @param userID\n     *            the user ID to check against.\n     * @param aPassword\n     *            the password to check for equality\n     * @return true if the two passwords are equal (after encryption), false\n     *         otherwise\n     */\n    public boolean comparePasswords(final String userID, final String aPassword) {\n        m_readLock.lock();\n        \n        try {\n            final User user = m_users.get(userID);\n            if (user == null) return false;\n\n            final String password = user.getPassword().getEncryptedPassword().trim();\n            final boolean isSalted = Boolean.valueOf(user.getPassword().getSalt());\n            if (isSalted) {\n                return checkSaltedPassword(aPassword, password);\n            } else {\n                return password.equals(encryptedPassword(aPassword, false));\n            }\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public boolean checkSaltedPassword(final String raw, final String encrypted) {\n        return s_passwordEncryptor.checkPassword(raw, encrypted);\n    }\n    \n    /**\n     * <p>update</p>\n     *\n     * @throws java.io.IOException if any.\n     * @throws java.io.FileNotFoundException if any.\n     */\n    protected abstract void doUpdate() throws IOException, FileNotFoundException;\n\n    public final void update() throws IOException, FileNotFoundException {\n        m_writeLock.lock();\n        try {\n            doUpdate();\n        } finally {\n            m_writeLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>getUsersWithRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return an array of {@link java.lang.String} objects.\n     * @throws java.io.IOException if any.\n     */\n    public String[] getUsersWithRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _getUsersWithRole(roleid);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private String[] _getUsersWithRole(final String roleid) throws IOException {\n        final List<String> usersWithRole = new ArrayList<String>();\n   \n        for (final User user : m_users.values()) {\n            if (_userHasRole(user, roleid)) {\n                usersWithRole.add(user.getUserId());\n            }\n        }\n        \n        return usersWithRole.toArray(new String[usersWithRole.size()]);\n    }\n    \n    /**\n     * <p>userHasRole</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param roleid a {@link java.lang.String} object.\n     * @return a boolean.\n     * @throws java.io.FileNotFoundException if any.\n     * @throws java.io.IOException if any.\n     */\n    public boolean userHasRole(final User user, final String roleid) throws FileNotFoundException, IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return _userHasRole(user, roleid);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private boolean _userHasRole(final User user, final String roleid) throws IOException {\n        if (roleid == null) throw new NullPointerException(\"roleid is null\");\n        return m_groupManager.userHasRole(user.getUserId(), roleid);\n    }\n\n    /**\n     * <p>isUserScheduledForRole</p>\n     *\n     * @param user a {@link org.opennms.netmgt.config.users.User} object.\n     * @param roleid a {@link java.lang.String} object.\n     * @param time a {@link java.util.Date} object.\n     * @return a boolean.\n     * @throws java.io.FileNotFoundException if any.\n     * @throws java.io.IOException if any.\n     */\n    public boolean isUserScheduledForRole(final User user, final String roleid, final Date time) throws FileNotFoundException, IOException {\n        update();\n        \n        m_readLock.lock();\n        try {\n            return _isUserScheduledForRole(user, roleid, time);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    private boolean _isUserScheduledForRole(final User user, final String roleid, final Date time) throws IOException {\n        if (roleid == null) throw new NullPointerException(\"roleid is null\");\n        return m_groupManager.isUserScheduledForRole(user.getUserId(), roleid, time);\n    }\n\n    /**\n     * <p>getUsersScheduledForRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @param time a {@link java.util.Date} object.\n     * @return an array of {@link java.lang.String} objects.\n     * @throws java.io.IOException if any.\n     */\n    public String[] getUsersScheduledForRole(final String roleid, final Date time) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final List<String> usersScheduledForRole = new ArrayList<String>();\n            \n            for (final User user : m_users.values()) {\n                if (_isUserScheduledForRole(user, roleid, time)) {\n                    usersScheduledForRole.add(user.getUserId());\n                }\n            }\n            \n            return usersScheduledForRole.toArray(new String[usersScheduledForRole.size()]);\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>hasOnCallRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return a boolean.\n     * @throws java.io.IOException if any.\n     */\n    public boolean hasOnCallRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            return m_groupManager.getRole(roleid) != null;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n    \n    /**\n     * <p>countUsersWithRole</p>\n     *\n     * @param roleid a {@link java.lang.String} object.\n     * @return a int.\n     * @throws java.io.IOException if any.\n     */\n    public int countUsersWithRole(final String roleid) throws IOException {\n        update();\n\n        m_readLock.lock();\n        try {\n            final String[] users = _getUsersWithRole(roleid);\n            if (users == null) return 0;\n            return users.length;\n        } finally {\n            m_readLock.unlock();\n        }\n    }\n\n    public abstract boolean isUpdateNeeded();\n    public abstract long getLastModified();\n    public abstract long getFileSize();\n    public abstract void reload() throws IOException, FileNotFoundException;\n}\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans:beans xmlns=\"http://www.springframework.org/schema/security\"\n  xmlns:beans=\"http://www.springframework.org/schema/beans\"\n  xmlns:onmsgi=\"http://xmlns.opennms.org/xsd/spring/onms-osgi\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd\n              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd\n              http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd\">\n  \n  <!-- Only use BASIC auth for the RESTful APIs -->\n  <http pattern=\"/rest/**\" realm=\"OpenNMS Realm\" create-session=\"never\">\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/rest/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- Calls to health/overview are always accepted -->\n    <intercept-url pattern=\"/rest/health/probe\" method=\"GET\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- ack/unack/escalate/clear alarms -->\n    <intercept-url pattern=\"/rest/alarms/**\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n\n    <!-- set/unset maintenance mode on services -->\n    <intercept-url pattern=\"/rest/nodes/**\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n    <!-- set/unset maintenance mode on nodes -->\n    <intercept-url pattern=\"/rest/ifservices\" method=\"PUT\" access=\"ROLE_MOBILE,ROLE_REST,ROLE_ADMIN\" />\n\n    <!-- Provisioning-related stuff is all allowed as long as you're in the provision, rest, or admin roles. -->\n    <intercept-url pattern=\"/rest/foreignSources/**\" access=\"ROLE_PROVISION,ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/requisitions/**\" access=\"ROLE_PROVISION,ROLE_REST,ROLE_ADMIN\"/>\n\n    <!-- Restrict access to SNMP configuration to ROLE_REST and ROLE_ADMIN only -->\n    <intercept-url pattern=\"/rest/snmpConfig/**\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <!-- Allow users to POST to the Measurements API, which is read-only -->\n    <intercept-url pattern=\"/rest/measurements\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <!-- Allow Minions to access the configuration endpoints -->\n    <intercept-url pattern=\"/rest/config/**\" method=\"GET\" access=\"ROLE_MINION,ROLE_REST,ROLE_ADMIN\"/>\n    <!-- Allow Minions to access the server info -->\n    <intercept-url pattern=\"/rest/info\" method=\"GET\" access=\"ROLE_MINION,ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- Allow certain actions for the REPORT_DESIGNER role -->\n    <intercept-url pattern=\"/rest/reports/scheduled/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/persisted/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER,ROLE_USER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n    <intercept-url pattern=\"/rest/reports/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_REPORT_DESIGNER\"/>\n\n    <!-- Allow certain actions for the ROLE_FLOW_MANAGER role -->\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n    <intercept-url pattern=\"/rest/classifications/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_FLOW_MANAGER\" />\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/rest/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- read-write calls should be allowed for the REST and ADMIN roles -->\n    <intercept-url pattern=\"/rest/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/rest/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <http pattern=\"/nrt/**\" realm=\"OpenNMS Realm\">\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/nrt/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/nrt/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/nrt/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <http-basic />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <!-- Only use BASIC auth for the RESTful API v2 -->\n  <http pattern=\"/api/v2/**\" realm=\"OpenNMS Realm\" create-session=\"never\">\n\n    <!-- Allow users to POST to the Geolocation API, which is read-only -->\n    <intercept-url pattern=\"/api/v2/geolocation\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n    <!-- Allow users to POST to the Graph API, which is read-only -->\n    <intercept-url pattern=\"/api/v2/graphs/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <!-- OPTIONS pre-flight requests should always be accepted -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"OPTIONS\" access=\"ROLE_ANONYMOUS,ROLE_REST,ROLE_ADMIN,ROLE_USER,ROLE_MOBILE\"/>\n\n    <!-- read-only calls should be allowed for any user -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"GET\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"HEAD\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_MOBILE,ROLE_USER\"/>\n\n    <!-- read-write calls should be allowed for the REST and ADMIN roles -->\n    <intercept-url pattern=\"/api/v2/**\" method=\"DELETE\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"POST\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n    <intercept-url pattern=\"/api/v2/**\" method=\"PUT\" access=\"ROLE_REST,ROLE_ADMIN\"/>\n\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <!-- Only use BASIC auth for the RSS URL -->\n  <http pattern=\"/rss.jsp*\" access-denied-page=\"/accessDenied.jsp\" realm=\"OpenNMS Realm\">\n    <intercept-url pattern=\"/rss.jsp*\" access=\"ROLE_REST,ROLE_ADMIN,ROLE_USER\"/>\n\n    <http-basic />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n  \n  <!-- Allow anonymous access to the webstart portion of the app -->\n  <http pattern=\"/webstart/**\" security=\"none\"/>\n\n  <http pattern=\"/admin/userGroupView/**\" use-expressions=\"true\" access-denied-page=\"/accessDenied.jsp\" realm=\"OpenNMS Realm\" auto-config=\"false\" entry-point-ref=\"loginUrlAuthenticationEntryPoint\">\n    <!-- see NMS-13124 -->\n    <csrf />\n    <intercept-url pattern=\"/admin/userGroupView/**\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n    <logout logout-success-url=\"/\" />\n    <custom-filter position=\"FORM_LOGIN_FILTER\" ref=\"onmsUsernamePasswordAuthenticationFilter\" />\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n\n  <!-- Only one <http> section can match the implicit '/**' pattern -->\n  <http pattern=\"/**\" use-expressions=\"true\" access-denied-page=\"/accessDenied.jsp\" realm=\"OpenNMS Realm\" auto-config=\"false\" entry-point-ref=\"loginUrlAuthenticationEntryPoint\">\n    <intercept-url pattern=\"/\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon.ico\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/apple-touch-icon.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon-32x32.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/favicon-16x16.png\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/site.webmanifest\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/safari-pinned-tab.svg\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/logoff.jsp\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/login.jsp*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/accessDenied.jsp*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/css/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/svg/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/lib/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/images/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/assets/load-assets.jsp*\" access=\"denyAll\" /><!-- only used as include, shouldn't be accessible directly -->\n    <intercept-url pattern=\"/assets/**\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n\n    <intercept-url pattern=\"/admin/ng-requisitions/**\" access=\"hasAnyRole('ROLE_PROVISION','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/admin/classification/index.jsp\" access=\"hasAnyRole('ROLE_FLOW_MANAGER','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/rest/snmpConfig/**\" access=\"hasAnyRole('ROLE_PROVISION','ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/admin/**\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/**/mib-compiler\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/**/admin-*\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    <intercept-url pattern=\"/rtc/post/**\" access=\"hasAnyRole('ROLE_RTC')\" />\n    <intercept-url pattern=\"/element/rescan.jsp\" access=\"hasAnyRole('ROLE_ADMIN')\" />\n    \n    <intercept-url pattern=\"/frontpage.htm\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/dashboard.jsp\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/VAADIN/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/gwt.js\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/surveillanceservice.gwt\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/graph/graph.png\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/dashboard/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n    <intercept-url pattern=\"/coreweb/**\" access=\"hasAnyRole('ROLE_USER','ROLE_DASHBOARD')\" />\n\n    <!-- DO NOT ALLOW ACCESS TO /osgi -->\n    <intercept-url pattern=\"/osgi/**\" access=\"denyAll\" />\n\n    <!-- Exclude jsp includes other than bootstrap, they shouldn't be accessible by themself -->\n    <intercept-url pattern=\"/includes/bootstrap.jsp\" access=\"permitAll\" />\n    <intercept-url pattern=\"/includes/*.jsp\" access=\"denyAll\" />\n\n    <intercept-url pattern=\"/**\" access=\"hasAnyRole('ROLE_USER')\" />\n    \n    <!-- NrtCollection -->\n    <intercept-url pattern=\"/amq/*\" access=\"hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_DASHBOARD')\" />\n\n    <!--Commented out for custom authentication filter<form-login login-page=\"/login.jsp\" authentication-failure-url=\"/login.jsp?login_error=1\" />-->\n    <http-basic entry-point-ref=\"xRequestedWithAwareBasicAuthEntryPoint\" />\n    <logout logout-success-url=\"/\" />\n\n      <!-- added for custom authentication filter -->\n    <custom-filter position=\"FORM_LOGIN_FILTER\" ref=\"onmsUsernamePasswordAuthenticationFilter\" />\n\n    <custom-filter position=\"PRE_AUTH_FILTER\" ref=\"attributePreAuthFilter\"/>\n    <custom-filter after=\"PRE_AUTH_FILTER\" ref=\"headerPreAuthFilter\"/>\n    <custom-filter position=\"LAST\" ref=\"authFilterEnabler\"/>\n  </http>\n  \n  <!--  This filter is used to setup the Hibernate query filtering to authorized nodes only -->\n  <beans:bean id=\"authFilterEnabler\" class=\"org.opennms.web.springframework.security.AuthFilterEnabler\">\n    <beans:property name=\"filterManager\" ref=\"filterManager\" />\n    <beans:property name=\"groupDao\" ref=\"groupDao\" />\n  </beans:bean>\n\n  <!-- Custom Authentication Filter -->\n  <beans:bean id=\"onmsUsernamePasswordAuthenticationFilter\" class=\"org.opennms.web.springframework.security.OnmsUsernamePasswordAuthenticationFilter\">\n        <beans:property name=\"authenticationManager\" ref=\"authenticationManager\"/>\n        <beans:property name=\"authenticationFailureHandler\" ref=\"failureHandler\"/>\n        <beans:property name=\"authenticationSuccessHandler\" ref=\"successHandler\"/>\n        <beans:property name=\"postOnly\" value=\"false\"/>\n  </beans:bean>\n\n    <beans:bean id=\"successHandler\" class=\"org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler\">\n        <beans:property name=\"defaultTargetUrl\" value=\"/index.jsp\"/>\n    </beans:bean>\n    <beans:bean id=\"failureHandler\" class=\"org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler\">\n        <beans:property name=\"defaultFailureUrl\" value=\"/login.jsp?login_error=1\"/>\n    </beans:bean>\n\n    <beans:bean id=\"loginUrlAuthenticationEntryPoint\"\n                class=\"org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint\">\n        <beans:property name=\"loginFormUrl\" value=\"/login.jsp\" />\n    </beans:bean>\n    <!-- END CUSTOM AUthentication Filter -->\n\n  <!-- If a user is pre-authenticated, this will provide user details for the pre-authenticated user -->\n  <beans:bean id=\"preauthAuthProvider\" class=\"org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider\">\n    <beans:property name=\"preAuthenticatedUserDetailsService\">\n      <beans:bean id=\"userDetailsServiceWrapper\" class=\"org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper\">\n        <beans:property name=\"userDetailsService\" ref=\"openNMSUserDetailsService\"/>\n      </beans:bean>\n    </beans:property>\n  </beans:bean>\n\n  <!-- use our custom authentication provider; to use RADIUS instead, change this to \"radiusAuthenticationProvider\" and uncomment below -->\n  <authentication-manager alias=\"authenticationManager\">\n    <!-- If a user is pre-authenticated, make sure their user details are populated correctly. -->\n    <authentication-provider ref=\"preauthAuthProvider\" />\n    <!-- Use our custom authentication provider -->\n    <authentication-provider ref=\"hybridAuthenticationProvider\" />\n    <!-- To enable external (e.g. LDAP, RADIUS) authentication, uncomment the following.\n         You must also rename and customize exactly ONE of the example files in the\n         spring-security.d subdirectory. -->\n    <!-- <authentication-provider ref=\"externalAuthenticationProvider\" /> -->\n  </authentication-manager>\n\n  <!-- ===================== USER DAO AUTHENTICATION ==================== -->\n  <beans:bean id=\"userDao\" class=\"org.opennms.web.springframework.security.SpringSecurityUserDaoImpl\">\n    <beans:property name=\"usersConfigurationFile\" value=\"${opennms.home}/etc/users.xml\" />\n    <beans:property name=\"userManager\" ref=\"userManager\" />\n  </beans:bean>\n  <onmsgi:service id=\"springSecurityUserDaoService\" ref=\"userDao\" interface=\"org.opennms.web.springframework.security.SpringSecurityUserDao\" />\n\n  <!-- Supercedes the Karaf container's OSGi Configuration implementation to hard-code the \"opennms\" realm. -->\n  <beans:bean id=\"config\"\n      class=\"org.opennms.web.springframework.security.OpenNMSConfiguration\"\n      init-method=\"init\"\n      destroy-method=\"close\" />\n\n  <beans:bean id=\"loginModuleUserConfigInitializer\" class=\"org.springframework.beans.factory.config.MethodInvokingBean\">\n      <beans:property name=\"staticMethod\">\n          <beans:value>org.opennms.web.springframework.security.OpenNMSLoginModule.setUserConfig</beans:value>\n      </beans:property>\n      <beans:property name=\"arguments\">\n          <beans:list>\n              <beans:ref bean=\"userManager\" />\n          </beans:list>\n      </beans:property>\n  </beans:bean>\n\n  <beans:bean id=\"loginModuleSpringSecurityUserDaoInitializer\" class=\"org.springframework.beans.factory.config.MethodInvokingBean\">\n      <beans:property name=\"staticMethod\">\n          <beans:value>org.opennms.web.springframework.security.OpenNMSLoginModule.setSpringSecurityUserDao</beans:value>\n      </beans:property>\n      <beans:property name=\"arguments\">\n          <beans:list>\n              <beans:ref bean=\"userDao\" />\n          </beans:list>\n      </beans:property>\n  </beans:bean>\n\n  <beans:bean id=\"openNMSUserDetailsService\" class=\"org.opennms.web.springframework.security.OpenNMSUserDetailsService\">\n    <beans:property name=\"userDao\" ref=\"userDao\" />\n  </beans:bean>\n\n  <beans:bean id=\"hybridAuthenticationProvider\" class=\"org.opennms.web.springframework.security.HybridOpenNMSUserAuthenticationProvider\">\n    <beans:property name=\"userDao\" ref=\"userDao\" />\n    <beans:property name=\"userManager\" ref=\"userManager\" />\n  </beans:bean>\n\n  <!--  this is used to send events on login success and failure -->\n  <beans:bean class=\"org.opennms.web.springframework.security.SecurityAuthenticationEventOnmsEventBuilder\">\n    <beans:property name=\"eventProxy\" ref=\"eventProxy\"/>\n  </beans:bean>\n\n  <beans:bean id=\"xRequestedWithAwareBasicAuthEntryPoint\" class=\"org.opennms.web.springframework.security.XRequestedWithAwareBasicAuthEntryPoint\">\n    <beans:property name=\"realmName\" value=\"OpenNMS Realm\" />\n  </beans:bean>\n\n</beans:beans>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Group Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Group List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    function addNewGroup()\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"create\";\n        document.allGroups.submit();\n    }\n    \n    function detailGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"show\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function deleteGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"delete\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function modifyGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"edit\"\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n\n    function renameGroup(groupName)\n    {\n        var newName = prompt(\"Enter new name for group.\", groupName);\n\n        if (newName != null && newName != \"\")\n        {\n          document.allGroups.newName.value = newName;\n          document.allGroups.groupName.value=groupName;\n          document.allGroups.operation.value=\"rename\";\n          document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n          document.allGroups.submit();\n        }\n    }\n</script>\n\n<p>\n  Click on the <i>Group Name</i> link to view detailed information about a group.\n</p>\n\n<p>\n  <a href=\"javascript:addNewGroup()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new group\n  </a>\n</p>\n\n<form method=\"post\" name=\"allGroups\">\n  <input type=\"hidden\" name=\"operation\"/>\n  <input type=\"hidden\" name=\"groupName\"/>\n  <input type=\"hidden\" name=\"newName\"/>\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n  <div class=\"card\">\n    <table class=\"table table-sm table-bordered\">\n         <tr>\n          <th>Delete</th>\n          <th>Modify</th>\n          <th>Rename</th>\n          <th>Group Name</th>\n          <th>Comments</th>\n        </tr>\n         <c:forEach var=\"group\" varStatus=\"groupStatus\" items=\"${groups}\">\n         <tr class=\"divider ${groupStatus.index % 2 == 0 ?  'even' : 'odd'}\" id=\"group-${group.name}\">\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <a id=\"${group.name}.doDelete\" href=\"javascript:deleteGroup('${group.name}')\" onclick=\"return confirm('Are you sure you want to delete the group ${group.name}?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a>              \n              </c:when>\n              <c:otherwise>\n                <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the ${group.name} group cannot be deleted.')\"></i>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <a id=\"${group.name}.doModify\" href=\"javascript:modifyGroup('${group.name}')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"renameGroup('${group.name}')\">Rename</button>\n              </c:when>\n              <c:otherwise>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"alert('Sorry, the Admin group cannot be renamed.')\">Rename</button>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td>\n            <a href=\"javascript:detailGroup('${group.name}')\">${group.name}</a>\n          </td>\n            <td>\n              <c:choose>\n                <c:when test=\"${group.comments.isPresent()}\">\n                  ${group.comments.get()}\n                </c:when>\n                \n                <c:otherwise>\n                  No Comments\n                </c:otherwise>\n              </c:choose>\n            </td>\n          </tr>\n        </c:forEach>\n     </table>\n   </div>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"\n\t\tjava.util.*,\n\t\tjava.text.*,\n\t\torg.opennms.netmgt.config.users.*\n\t\"\n%>\n<%@page import=\"org.opennms.web.group.WebGroup\"%>\n\n<%\n  \tWebGroup group = (WebGroup)session.getAttribute(\"group.modifyGroup.jsp\");\n    if (group == null) {\n        throw new ServletException(\"Could not get session attribute group\");\n    }\n    String[] allCategories = (String[])session.getAttribute(\"allCategories.modifyGroup.jsp\");\n    String[] allUsers = (String[])session.getAttribute(\"allUsers.modifyGroup.jsp\");\n\tString[] categoryListInGroup = group.getAuthorizedCategories().toArray(new String[0]);\n    String[] categoryListNotInGroup = group.getUnauthorizedCategories(Arrays.asList(allCategories)).toArray(new String[0]);\n    String[] selectedUsers = group.getUsers().toArray(new String[0]);\n    String[] availableUsers = group.getRemainingUsers(Arrays.asList(allUsers)).toArray(new String[0]);\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Modify Group\" />\n  <jsp:param name=\"headTitle\" value=\"Modify\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Modify Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    \n    function validate()\n    {\n        for (var c = 0; c < document.modifyGroup.dutySchedules.value; c++)\n        {\n            var beginName= \"duty\" + c + \"Begin\";\n            var endName  = \"duty\" + c + \"End\";\n\n            var beginValue = new Number(document.modifyGroup.elements[beginName].value);\n            var endValue = new Number(document.modifyGroup.elements[endName].value);\n\n            if (!document.modifyGroup.elements[\"deleteDuty\"+c].checked)\n            {\n                if (isNaN(beginValue))\n                {\n                    alert(\"The begin time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                    return false;\n                }\n                if (isNaN(endValue))\n                {\n                    alert(\"The end time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                    return false;\n                }\n                if (beginValue > endValue)\n                {\n                    alert(\"The begin value for duty schedule \" + (c+1) + \" must be less than the end value.\");\n                    return false;\n                }\n                if (beginValue < 0 || beginValue > 2359)\n                {\n                    alert(\"The begin value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                    return false;\n                }\n                if (endValue < 0 || endValue > 2359)\n                {\n                    alert(\"The end value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    \n    function addUsers() \n    {\n        m1len = m1.length ;\n        for ( i=0; i<m1len ; i++)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m2len = m2.length;\n                m2.options[m2len]= new Option(m1.options[i].text);\n            }\n        }\n        \n        for ( i = (m1len -1); i>=0; i--)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m1.options[i] = null;\n            }\n        }\n    }\n    \n    function removeUsers() \n    {\n        m2len = m2.length ;\n        for ( i=0; i<m2len ; i++)\n        {\n            if (m2.options[i].selected == true ) \n            {\n                m1len = m1.length;\n                m1.options[m1len]= new Option(m2.options[i].text);\n            }\n        }\n        for ( i=(m2len-1); i>=0; i--) \n        {\n            if (m2.options[i].selected == true ) \n            {\n                m2.options[i] = null;\n            }\n        }\n    }\n    \n    function selectAllAvailable()\n    {\n        for (i=0; i < m1.length; i++) \n        {\n            m1.options[i].selected = true;\n        }\n    }\n    \n    function selectAllSelected()\n    {\n        for (i=0; i < m2.length; i++) \n        {\n            m2.options[i].selected = true;\n        }\n    }\n    \n    function move(incr)\n    {\n        var i = m2.selectedIndex;   // current selection\n        if( i < 0 ) return;\n        var j = i + incr;       // where it will move to\n        if( j < 0 || j >= m2.length ) return;\n        var temp = m2.options[i].text;  // swap them\n        m2.options[i].text = m2.options[j].text;\n        m2.options[j].text = temp;\n        m2.selectedIndex = j;       // make new location selected\n    }\n\n    function moveCat(incr)\n    {\n        var i = m4.selectedIndex;   // current selection\n        if( i < 0 ) return;\n        var j = i + incr;       // where it will move to\n        if( j < 0 || j >= m4.length ) return;\n        var temp = m4.options[i].text;  // swap them\n        m4.options[i].text = m4.options[j].text;\n        m4.options[j].text = temp;\n        m4.selectedIndex = j;       // make new location selected\n    }\n\n    function addGroupDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"addDutySchedules\";\n            document.modifyGroup.submit();\n        }\n    }\n\n    function removeGroupDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"removeDutySchedules\";\n            document.modifyGroup.submit();\n        }\n    }\n    \n    function saveGroup()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n            //we need to select all the users in the selectedUsers select list so the\n            //request object will have all the users\n            selectAllSelected();\n            selectAllSelectedCategories();\n            document.modifyGroup.operation.value=\"save\";\n            document.modifyGroup.submit();\n        }\n    }\n    \n    function cancelGroup()\n    {\n        document.modifyGroup.operation.value=\"cancel\";\n        document.modifyGroup.submit();\n    }\n\n    //Group functions\n    function addCategories(){\n    \tm3len = m3.length ;\n        for ( i=0; i<m3len ; i++)\n        {\n            if (m3.options[i].selected == true ) \n            {\n                m4len = m4.length;\n                m4.options[m4len]= new Option(m3.options[i].text);\n            }\n        }\n        \n        for ( i = (m3len -1); i>=0; i--)\n        {\n            if (m3.options[i].selected == true ) \n            {\n                m3.options[i] = null;\n            }\n        }\n    }\n\n    function removeCategories(){\n    \tm4len = m4.length ;\n        for ( i=0; i<m4len ; i++)\n        {\n            if (m4.options[i].selected == true ) \n            {\n                m3len = m3.length;\n                m3.options[m3len]= new Option(m4.options[i].text);\n            }\n        }\n        for ( i=(m4len-1); i>=0; i--) \n        {\n            if (m4.options[i].selected == true ) \n            {\n                m4.options[i] = null;\n            }\n        }\n    }\n\n    function selectAllAvailableCategories(){\n    \tfor (i=0; i < m3.length; i++){\n            m3.options[i].selected = true;\n        }\n    }\n\n    function selectAllSelectedCategories(){\n    \tfor (i=0; i < m4.length; i++){\n            m4.options[i].selected = true;\n        }\n    }\n</script>\n\n<form role=\"form\" class=\"form\" method=\"post\" id=\"modifyGroup\" name=\"modifyGroup\">\n  <input type=\"hidden\" name=\"groupName\" value=\"<%=group.getName()%>\"/>\n  <input type=\"hidden\" name=\"operation\"/>\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <span>Assignments</span>\n        </div>\n        <div class=\"card-body\">\n            <p>Assign and unassign users to the group using the select lists below. Also, change the ordering of the selected users by highlighting a user in the \"Currently in Group\" list and click the \"Move Up\" and \"Move Down\" buttons. The ordering of the users in the group will affect the order that the users are notified if this group is used in a notification.</p>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <table class=\"table table-sm\" id=\"modifyGroupUsers\">\n                        <tr>\n                            <th colspan=\"3\" align=\"center\">\n                                <span>Assign/Unassign Users</span>\n                            </th>\n                        </tr>\n                        <tr>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Available Users</label>\n                                <%=createSelectList(\"availableUsers\", availableUsers)%><br/>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"availableAll\" onClick=\"javascript:selectAllAvailable()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"users.doAdd\" onClick=\"javascript:addUsers()\">&nbsp;&#155;&#155;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Currently in Group</label>\n                                <%=createSelectList(\"selectedUsers\", selectedUsers)%><br/>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"selectedAll\" onClick=\"javascript:selectAllSelected()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"users.doRemove\" onClick=\"javascript:removeUsers()\">&nbsp;&#139;&#139;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\">\n                                <div>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:move(-1)\" title=\"Move Up\"><i class=\"fa fa-arrow-up\"></i></button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:move(1)\" title=\"Move Down\"><i class=\"fa fa-arrow-down\"></i></button>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div> <!-- column -->\n                <div class=\"col-md-6\">\n                    <table class=\"table\" id=\"modifyGroupCategories\">\n                        <tr>\n                            <th colspan=\"3\" align=\"center\">\n                                <span>Assign/Unassign Categories</span>\n                            </th>\n                        </tr>\n                        <tr>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Available Categories</label>\n                                <%=createSelectList(\"availableCategories\", categoryListNotInGroup)%>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"availableAll\" onClick=\"javascript:selectAllAvailableCategories()\">Select All</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"categories.doAdd\" onClick=\"javascript:addCategories()\">&nbsp;&#155;&#155;&nbsp;</button>\n                                </div>\n                            </td>\n                            <td align=\"center\">\n                                <label class=\"col-form-label\">Currently in Group</label>\n                                <%=createSelectList(\"selectedCategories\", categoryListInGroup)%>\n                                <div class=\"mt-2\" align=\"center\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" id=\"categories.doRemove\" onClick=\"javascript:removeCategories()\">&nbsp;&#139;&#139;&nbsp;</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" name=\"selectedAll\" onClick=\"javascript:selectAllSelectedCategories()\">Select All</button>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\">\n                                <div>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:moveCat(-1)\" title=\"Move Up\"><i class=\"fa fa-arrow-up\"></i></button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" onClick=\"javascript:moveCat(1)\" title=\"Move Down\"><i class=\"fa fa-arrow-down\"></i></button>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div> <!-- column -->\n            </div> <!-- row -->\n        </div> <!-- card-body -->\n    </div> <!-- panel -->\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Duty Schedules</span>\n      </div>\n      <div class=\"card-body\">\n      <table class=\"table table-sm table-striped\">\n            <tr>\n              <th>#</th>\n              <th>Delete</th>\n              <th>Mo</th>\n              <th>Tu</th>\n              <th>We</th>\n              <th>Th</th>\n              <th>Fr</th>\n              <th>Sa</th>\n              <th>Su</th>\n              <th>Begin Time</th>\n              <th>End Time</th>\n            </tr>\n                <%\n                           int i = 0;\n                           for(String dutySchedSpec : group.getDutySchedules()) {\n                               DutySchedule tmp = new DutySchedule(dutySchedSpec);\n                               Vector<Object> curSched = tmp.getAsVector();\n                        %>\n                        <tr>\n                          <td width=\"1%\"><%=(i+1)%></td>\n                          <td width=\"1%\">\n                            <input type=\"checkbox\" name=\"deleteDuty<%=i%>\"/>\n                          </td>\n                          <% ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n                             for (int j = 0; j < 7; j++)\n                             {\n                                Boolean curDay = (Boolean)curSched.get(j);\n                          %>\n                          <td width=\"5%\">\n                            <input type=\"checkbox\" name=\"duty<%=i+days.format(j)%>\" <%= (curDay.booleanValue() ? \"checked\" : \"\")%>/>\n                          </td>\n                          <% } %>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>Begin\" value=\"<%=curSched.get(7)%>\"/>\n                          </td>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>End\" value=\"<%=curSched.get(8)%>\"/>\n                          </td>\n                        </tr>\n                        <% i++; } %>\n      </table>\n\n      <div class=\"form-row mb-2\">\n          <button type=\"button\" name=\"addSchedule\" class=\"btn btn-secondary\" onclick=\"removeGroupDutySchedules()\">Remove Checked Schedules</button>\n      </div>\n\n      <div class=\"form-row\">\n          <input type=\"hidden\" name=\"dutySchedules\" value=\"<%=group.getDutySchedules().size()%>\"/>\n          <select name=\"numSchedules\" class=\"form-control custom-select col-xs-6 col-sm-2 col-md-1 mr-2\">\n            <option value=\"1\" selected=\"selected\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n          </select>\n          <button id=\"addSchedule\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"addGroupDutySchedules()\" title=\"Add This Many Schedules\"><i class=\"fa fa-plus\"></i> New Schedules</button>\n      </div>\n      </div> <!-- card-body -->\n    </div> <!-- card -->\n\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-secondary\" name=\"finish\" onclick=\"saveGroup()\">Finish</button>\n    <button type=\"button\" class=\"btn btn-secondary\" name=\"cancel\" onclick=\"cancelGroup()\">Cancel</button>\n  </div>\n\n</form>\n\n<script type=\"text/javascript\">\n  // shorthand for refering to menus\n  // must run after document has been created\n  // you can also change the name of the select menus and\n  // you would only need to change them in one spot, here\n  var m1 = document.modifyGroup.availableUsers;\n  var m2 = document.modifyGroup.selectedUsers;\n  var m3 = document.modifyGroup.availableCategories;\n  var m4 = document.modifyGroup.selectedCategories;\n</script>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n\n<%!\n    private String createSelectList(String name, String[] categories) {\n        StringBuffer buffer = new StringBuffer(\"<select class=\\\"form-control custom-select\\\" multiple=\\\"multiple\\\" name=\\\"\"+name+\"\\\" size=\\\"10\\\">\");\n        for(String category : categories){\n            buffer.append(\"<option>\" + category + \"</option>\");\n        }\n        buffer.append(\"</select>\");\n        \n        return buffer.toString();\n    }\n    \n%>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New Group\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Groups\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newGroupForm.groupName.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The group ID '\" + document.newGroupForm.groupName.value + \"' cannot be used. It may be confused with the administration group ID 'Admin'.\");\n        return false;\n    }\n    \n    document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n    document.newGroupForm.operation.value=\"addGroup\";\n    return true;\n  }    \n  function cancelGroup()\n  {\n      document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n      document.newGroupForm.operation.value=\"cancel\";\n      document.newGroupForm.submit();\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The group <%=request.getParameter(\"groupName\")%> already exists.\n        Please type in a different group ID.</span>\n    <%} else { %>\n      <span>Please enter a group ID below.</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" id=\"newGroupForm\" method=\"post\" name=\"newGroupForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"operation\" />\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n      <div class=\"form-group\">\n        <label for=\"groupName\" class=\"\">Group Name</label>\n      <input class=\"form-control\" id=\"groupName\" type=\"text\" name=\"groupName\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"groupComment\" class=\"\">Comment</label>\n      <input class=\"form-control\" id=\"groupComment\" type=\"text\" name=\"groupComment\"/>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary mr-2\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelGroup()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"Edit\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Edit On-Call Role\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n\tfunction changeDisplay() {\n\t\tdocument.displayForm.submit();\n\t}\n\t\n\tfunction prevMonth() {\n\t\tdocument.prevMonthForm.submit();\n\t}\n\t\n\tfunction nextMonth() {\n\t\tdocument.nextMonthForm.submit();\n\t}\n\n</script>\n\n<div class=\"card pane-default\">\n  <div class=\"card-header\">\n    <span>Edit On-Call Role</span>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editForm\">\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n      <input type=\"hidden\" name=\"operation\" value=\"saveDetails\"/>\n      <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleName\" class=\"col-sm-2 col-form-label\">Name</label>\n        <div class=\"col-sm-10\">\n          <input class=\"form-control\" name=\"roleName\" id=\"input_roleName\" type=\"text\" value=\"${fn:escapeXml(role.name)}\"/>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2 col-form-label\"><strong>Currently On Call</strong></label>\n        <div class=\"col-sm-10\">\n          <ul>\n            <c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n              <li>${scheduledUser}</li>\n            </c:forEach>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleUser\" class=\"col-sm-2 col-form-label\">Supervisor</label>\n        <div class=\"col-sm-10\">\n          <select class=\"form-control custom-select\" id=\"input_roleUser\" name=\"roleUser\">\n            <c:forEach var=\"user\" items=\"${userManager.users}\">\n              <c:choose>\n                <c:when test=\"${user == role.defaultUser}\">\n                  <option selected>${user}</option>\n                </c:when>\n                <c:otherwise>\n                  <option>${user}</option>\n                </c:otherwise>\n              </c:choose>\n            </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleGroup\" class=\"col-sm-2 col-form-label\">Membership Group</label>\n        <div class=\"col-sm-10\">\n          <select class=\"form-control custom-select\" id=\"input_roleGroup\" name=\"roleGroup\">\n            <c:forEach var=\"group\" items=\"${groupManager.groups}\">\n              <c:choose>\n                <c:when test=\"${group == role.membershipGroup}\">\n                  <option selected>${group}</option>\n                </c:when>\n                <c:otherwise>\n                  <option>${group}</option>\n                </c:otherwise>\n              </c:choose>\n            </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleDescr\" class=\"col-sm-2 col-form-label\">Description</label>\n        <div class=\"col-sm-10\">\n          <input class=\"form-control\" name=\"roleDescr\" id=\"input_roleDescr\" type=\"text\" value=\"${fn:escapeXml(role.description)}\"/>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"save\">Save</button>\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"cancel\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"Edit Schedule\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Edit Entry\" />\n</jsp:include>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>Edit Schedule Entry</span>\n  </div>\n  <div class=\"card-body\">\n    <p class=\"alert alert-danger\">${error}</p>\n    <form role=\"form\" class=\"form\" action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"saveEntryForm\">\n      <input type=\"hidden\" name=\"operation\" value=\"saveEntry\"/>\n      <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n      <input type=\"hidden\" name=\"schedIndex\" value=\"${schedIndex}\"/>\n      <input type=\"hidden\" name=\"timeIndex\" value=\"${timeIndex}\" />\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">On-Call Role</label>\n        <div class=\"col-sm-4\">\n          <p class=\"form-control-static\"><c:out value=\"${role.name}\"/></p>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"input_roleUser\" class=\"col-sm-2\">User</label>\n        <div class=\"col-sm-4\">\n          <select class=\"form-control custom-select\" id=\"input_roleUser\" name=\"roleUser\">\n          <c:forEach var=\"user\" items=\"${role.membershipGroup.users}\">\n            <c:choose>\n              <c:when test=\"${user == scheduledUser}\"><option selected>${user}</option></c:when>\n              <c:otherwise><option>${user}</option></c:otherwise>\n            </c:choose>\n          </c:forEach>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">Start Date</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/dateControl.jsp\">\n            <c:param name=\"prefix\" value=\"start\"/>\n            <c:param name=\"date\"><fmt:formatDate value=\"${start}\" pattern=\"dd-MM-yyyy\"/></c:param>\n          </c:import>\n        </div>\n        <label class=\"col-sm-2\">Start Time</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/timeControl.jsp\">\n            <c:param name=\"prefix\" value=\"start\"/>\n            <c:param name=\"time\"><fmt:formatDate value=\"${start}\" pattern=\"HH:mm:ss\"/></c:param>\n          </c:import>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label class=\"col-sm-2\">End Date</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/dateControl.jsp\">\n            <c:param name=\"prefix\" value=\"end\"/>\n            <c:param name=\"date\"><fmt:formatDate value=\"${end}\" pattern=\"dd-MM-yyyy\"/></c:param>\n          </c:import>\n        </div>\n        <label class=\"col-sm-2\">End Time</label>\n        <div class=\"col-sm-4\">\n          <c:import url=\"/includes/timeControl.jsp\">\n            <c:param name=\"prefix\" value=\"end\"/>\n            <c:param name=\"time\"><fmt:formatDate value=\"${end}\" pattern=\"HH:mm:ss\"/></c:param>\n          </c:import>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"save\">Save</button>\n      <button type=\"submit\" class=\"btn btn-secondary\" name=\"cancel\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"org.opennms.netmgt.config.users.*,\n\t        org.opennms.netmgt.config.*,\n\t\tjava.util.*\"\n%>\n\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\tHashMap<String, String> usersHash = new HashMap<String, String>();\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n\n\tfor (User curUser : users.values()) {\n\t\tusersHash.put(curUser.getUserId(), curUser.getFullName().orElse(null));\n\t}\n\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"https://www.owasp.org/index.php/OWASP_Java_Encoder_Project\" prefix=\"e\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"List\" />\n\t<jsp:param name=\"headTitle\" value=\"Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"Role List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n\tfunction doOperation(op, role) {\n\t\tdocument.roleForm.operation.value=op;\n\t\tdocument.roleForm.role.value=role;\n\t\tdocument.roleForm.submit();\n\t}\n\t\n\tfunction doDelete(role) {\n\t\tdoOperation(\"delete\", role);\n\t}\n\t\n\tfunction doView(role) {\n\t\tdoOperation(\"view\", role);\n\t}\n\n</script>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"roleForm\">\n\t<input type=\"hidden\" name=\"operation\" />\n\t<input type=\"hidden\" name=\"role\" />\n\t<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n</form>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>On-Call Role Configuration</span>\n  </div>\n  <table class=\"table table-sm\">\n        <tr>\n          <th>Delete</th>\n          <th>Name</th>\n          <th>Supervisor</th>\n          <th>Currently On Call</th>\n          <th>Membership Group</th>\n          <th>Description</th>\n        </tr>\n        \n        <c:choose>\n          <c:when test=\"${empty roleManager.roles}\">\n            <tr>\n              <td colspan=\"6\">No roles defined.  Use the \"Add new role\" link\n                to add roles.</td>\n            </tr>\n\t \t  </c:when>\n\t \t  \n\t \t  <c:otherwise>\n\t\t\t<c:forEach var=\"role\" items=\"${roleManager.roles}\">\n\t\t\t\t<c:set var=\"deleteUrl\" value=\"javascript:doDelete('${e:forJavaScript(role.name)}')\" />\n\t\t\t\t<c:set var=\"viewUrl\" value=\"javascript:doView('${e:forJavaScript(role.name)}')\" />\n\t\t\t\t<c:set var=\"confirmScript\" value=\"return confirm('Are you sure you want to delete the role ${e:forJavaScript(role.name)}?')\"/>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t<td><a href=\"${deleteUrl}\" onclick=\"${confirmScript}\"><i class=\"fa fa-trash-o fa-2x\"></i></a></td>\n\t\t\t\t<td><a href=\"${viewUrl}\">${role.name}</a></td>\n\t\t\t\t<td>\n\t\t\t\t  <c:set var=\"supervisorUser\">${role.defaultUser}</c:set>\n\t\t\t\t  <c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"supervisorUser\").toString()) %></c:set>\n\t\t\t\t  <span title=\"${fullName}\">${role.defaultUser}</span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n\t\t\t\t\t\t<c:set var=\"curUserName\">${scheduledUser}</c:set>\n\t\t\t\t\t\t<c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"curUserName\").toString()) %></c:set>\n\t\t\t\t\t\t<span title=\"${fullName}\">${scheduledUser}</span>\n\t\t\t\t\t</c:forEach>\t\n\t\t\t\t</td>\n\t\t\t\t<td>${role.membershipGroup}</td>\n\t\t\t\t<td><c:out value=\"${role.description}\"/></td>\n\t\t\t\t</tr>\n\t\t\t</c:forEach>\n\t \t  </c:otherwise>\n\t \t</c:choose>\n  </table>\n</div> <!-- panel -->\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"newForm\">\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n  <input name=\"operation\" type=\"hidden\" value=\"new\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Add New On-Call Role</button>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n\timport=\"org.opennms.netmgt.config.users.*,\n\t        org.opennms.netmgt.config.*,\n\t\tjava.util.*\"\n%>\n\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\tHashMap<String,String> usersHash = new HashMap<String,String>();\n\tString curUserName = null;\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n\n\tfor (User curUser : users.values()) {\n\t\tusersHash.put(curUser.getUserId(), curUser.getFullName().orElse(null));\n\t}\n\n%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\n\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"On-Call Role Configuration\" />\n\t<jsp:param name=\"headTitle\" value=\"View\" />\n\t<jsp:param name=\"headTitle\" value=\"On-Call Roles\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users, Groups and On-Call Roles</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/roles'>On-Call Role List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"View On-Call Role\" />\n</jsp:include>\n\n\n<!--  swiped this and images/new.gif from webcalendar.sf.net -->\n<style type=\"text/css\">\n\n.new {\n  border-width: 0px;\n  float: right;\n}\n\n.date {\n  border-width: 0px;\n  float: left;\n}\n\n</style>\n\n<script type=\"text/javascript\" >\n\n\tfunction changeDisplay() {\n\t\tdocument.displayForm.submit();\n\t}\n\t\n\tfunction prevMonth() {\n\t\tdocument.prevMonthForm.submit();\n\t}\n\t\n\tfunction nextMonth() {\n\t\tdocument.nextMonthForm.submit();\n\t}\n\t\n\tfunction addEntry(date) {\n\t\tdocument.addEntryForm.date.value = date;\n\t\tdocument.addEntryForm.submit();\n\t\t\n\t}\n\t\n\tfunction editEntry(schedIndex, timeIndex) {\n\t\tdocument.editEntryForm.schedIndex.value = schedIndex;\n\t\tdocument.editEntryForm.timeIndex.value = timeIndex;\n\t\tdocument.editEntryForm.submit();\n\t}\n\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>View On-Call Role</span>\n  </div>\n  <table class=\"table table-sm\">\n    <tr>\n      <th>Name</th>\n        <td><c:out value=\"${role.name}\"/></td>\n      <th>Currently On Call</th>\n  \t<td>\n  \t  <c:forEach var=\"scheduledUser\" items=\"${role.currentUsers}\">\n  \t\t<c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"scheduledUser\").toString()) %></c:set>\n  \t\t<span title=\"${fullName}\">${scheduledUser}</span>\n  \t  </c:forEach>\n  \t</td>\n    </tr>\n\n    <tr>\n      <th>Supervisor</th>\n  \t<td>\n  \t  <c:set var=\"supervisorUser\">${role.defaultUser}</c:set>\n  \t  <c:set var=\"fullName\"><%= usersHash.get(pageContext.getAttribute(\"supervisorUser\").toString()) %></c:set>\n  \t  <span title=\"${fullName}\">${role.defaultUser}</span></td>\n      <th>Membership Group</th>\n  \t<td>${role.membershipGroup}</td>\n    </tr>\n\n    <tr>\n      <th>Description</th>\n  \t<td colspan=\"3\"><c:out value=\"${role.description}\"/></td>\n    </tr>\n  </table>\n</div> <!-- panel -->\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editForm\">\n  <input type=\"hidden\" name=\"operation\" value=\"editDetails\"/>\n  <input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Value Details</button>\n</form>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"doneForm\" class=\"my-4\">\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Done</button>\n</form>\n\n<div class=\"card top-buffer\">\n  <div class=\"card-header\">\n    <span>On-Call Role Schedule</span>\n  </div>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"prevMonthForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"view\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"month\" value=\"<fmt:formatDate value='${calendar.previousMonth}' type='date' pattern='MM-yyyy'/>\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"nextMonthForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"view\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"month\" value=\"<fmt:formatDate value='${calendar.nextMonth}' type='date' pattern='MM-yyyy'/>\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"addEntryForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"addEntry\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"date\"/>\n\t\t\t\t</form>\n\t\t\t\t<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"editEntryForm\">\n\t\t\t\t\t<input type=\"hidden\" name=\"operation\" value=\"editEntry\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"role\" value=\"${fn:escapeXml(role.name)}\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"schedIndex\"/>\n\t\t\t\t\t<input type=\"hidden\" name=\"timeIndex\"/>\n\t\t\t\t</form>\n\t\t\t<table class=\"table table-bordered\">\n\t\t\t  <caption class=\"text-center\">\n\t\t\t\t<a href=\"javascript:prevMonth()\">&#139;&#139;&#139;</a>&nbsp;\n\t\t\t\t<b>${calendar.monthAndYear}</b>&nbsp;\n\t\t\t\t<a href=\"javascript:nextMonth()\">&#155;&#155;&#155;</a>\n\t\t\t  </caption>\n\t\t\t\t<tr>\n\t\t\t\t  <c:forEach var=\"day\" items=\"${calendar.weeks[0].days}\">\n\t\t\t\t    <th>${day.dayOfWeek}</th>\n\t\t\t\t  </c:forEach>\n\t\t\t\t</tr>\n\t\t\t\t<c:forEach var=\"week\" items=\"${calendar.weeks}\">\n\t\t\t\t  <tr>\n\t\t\t\t\t<c:forEach var=\"day\" items=\"${week.days}\">\n\t\t\t\t\t  <td>\n\t\t\t\t\t    <c:if test=\"${calendar.month == day.month}\">\n\t\t\t\t\t\t  <c:set var=\"newHref\">javascript:addEntry('<fmt:formatDate value='${day.date}' type='date' pattern='MM-dd-yyyy'/>')</c:set>\n\t\t\t\t\t\t  <b class=\"date\"><c:out value=\"${day.dayOfMonth}\"/></b><a class=\"new\" href=\"<c:out value='${newHref}' escapeXml='false'/>\"><img border=0 src=\"images/new.gif\"/></a>\n\t\t\t\t\t\t  <br/>\n\t\t\t\t\t\t  <c:forEach var=\"entry\" items=\"${day.entries}\">\n\t\t\t\t\t\t\t<fmt:formatDate value=\"${entry.startTime}\" type=\"time\" pattern=\"HH:mm\"/>:<c:forEach var=\"owner\" items=\"${entry.labels}\"><c:set var=\"curUserName\"><c:out value=\"${owner.user}\"/></c:set><c:set var=\"fullName\"><%= usersHash.get((String)pageContext.getAttribute(\"curUserName\")) %></c:set><c:set var=\"editHref\">javascript:editEntry(<c:out value=\"${owner.schedIndex}\"/>,<c:out value=\"${owner.timeIndex}\"/>)</c:set>&nbsp;<c:choose><c:when test=\"${owner.supervisor}\">unscheduled</c:when><c:otherwise><a href=\"<c:out value='${editHref}' escapeXml='false'/>\" title=\"<c:out value='${fullName}'/>\"><c:out value=\"${owner.user}\"/></a></c:otherwise></c:choose></c:forEach><br/>\n\t\t\t\t\t\t  </c:forEach>\n\t\t\t\t\t    </c:if>\n\t\t\t\t\t  </td>\n\t\t\t\t\t</c:forEach>\n\t\t\t\t  </tr>\n\t\t\t\t</c:forEach>\n\t\t\t</table>\n</div>\n\n<form action=\"<c:url value='${reqUrl}'/>\" method=\"post\" name=\"doneForm\" class=\"mb-4\">\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n  <button type=\"submit\" class=\"btn btn-secondary\">Done</button>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n<%@page import=\"java.util.*\" %>\n<%@page import=\"org.opennms.netmgt.config.*\" %>\n<%@page import=\"org.opennms.netmgt.config.users.*\" %>\n<%\n\tUserManager userFactory;\n  \tMap<String,User> users = null;\n\t\n\ttry\n    \t{\n\t\tUserFactory.init();\n\t\tuserFactory = UserFactory.getInstance();\n      \t\tusers = userFactory.getUsers();\n\t}\n\tcatch(Throwable e)\n\t{\n\t\tthrow new ServletException(\"User:list \" + e.getMessage());\n\t}\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"User Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"User List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n    function addNewUser()\n    {\n        document.allUsers.action=\"admin/userGroupView/users/newUser.jsp?action=new\";\n        document.allUsers.submit();\n        \n    }\n    \n    function detailUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/userDetail.jsp?userID=\" + userID;\n        document.allUsers.submit();\n    }\n    \n    function deleteUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/deleteUser\";\n        document.allUsers.userID.value=userID;\n        document.allUsers.submit();\n    }\n    \n    function modifyUser(userID)\n    {\n        document.allUsers.action=\"admin/userGroupView/users/modifyUser\";\n        document.allUsers.userID.value=userID;\n        document.allUsers.submit();\n    }\n    \n    function renameUser(userID)\n    {\n        document.allUsers.userID.value=userID;\n        var newID = prompt(\"Enter new name for user.\", userID);\n\n        if (newID != null && newID != \"\") {\n          if (/.*[&<>\"`']+.*/.test(newID)) {\n            alert(\"The user ID must not contain any HTML markup.\");\n            return;\n          }\n\n          var element =  document.getElementById('users(' + _.escape(newID) + ').doModify');\n          if (typeof(element) != 'undefined' && element != null) {\n            alert(\"A user with this ID already exist.\");\n            return;\n          }\n\n          document.allUsers.newID.value = newID;\n          document.allUsers.action=\"admin/userGroupView/users/renameUser\";\n          document.allUsers.submit();\n        }\n    }\n    \n</script>\n\n\n<form method=\"post\" name=\"allUsers\">\n<input type=\"hidden\" name=\"redirect\"/>\n<input type=\"hidden\" name=\"userID\"/>\n<input type=\"hidden\" name=\"newID\"/>\n<input type=\"hidden\" name=\"password\"/>\n<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n<p>\n  Click on the <i>User ID</i> link to view detailed information about a\n  user.\n</p>\n\n<p>\n  <a id=\"doNewUser\" href=\"javascript:addNewUser()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new user\n  </a>\n</p>\n\n   <div class=\"card\">\n     <table class=\"table table-sm table-bordered\">\n        <thead>\n          <tr>\n          <th width=\"5%\">Delete</th>\n          <th width=\"5%\">Modify</th>\n          <th width=\"5%\">Rename</th>\n          <th width=\"5%\">User ID</th>\n          <th width=\"15%\">Full Name</th>\n          <th width=\"15%\">Email</th>\n          <th width=\"15%\">Pager Email</th>\n          <th width=\"15%\">XMPP Address</th>\n          </tr>\n        </thead>\n        <tbody>\n        <% \n           int row = 0;\n           for (User curUser : users.values()) {\n\t      String userid = curUser.getUserId();\n\t      String email = userFactory.getEmail(userid);\n\t      String pagerEmail = userFactory.getPagerEmail(userid);\n\t      String xmppAddress = userFactory.getXMPPAddress(userid);\n\t      String numericService = userFactory.getNumericPage(userid);\n\t      String textService = userFactory.getTextPage(userid);\n\t      String numericPin = userFactory.getNumericPin(userid);\n\t      String textPin = userFactory.getTextPin(userid);\n         %>\n         <tr id=\"user-<%= userid %>\">\n          <% if (!curUser.getUserId().equals(\"admin\") && !curUser.getUserId().equals(\"rtc\")) { %>\n          <td rowspan=\"2\" class=\"text-center\"> \n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doDelete\" %>\" href=\"javascript:deleteUser('<%=curUser.getUserId()%>')\" onclick=\"return confirm('Are you sure you want to delete the user <%=curUser.getUserId()%>?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a> \n          </td>\n          <% } else { %>\n          <td rowspan=\"2\" class=\"text-center\">\n            <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the admin user cannot be deleted.')\"></i>\n          </td>\n          <% } %>\n          <td rowspan=\"2\" class=\"text-center\">\n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doModify\" %>\" href=\"javascript:modifyUser('<%=curUser.getUserId()%>')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td rowspan=\"2\" class=\"text-center\">\n            <% if ( !curUser.getUserId().equals(\"admin\")) { %>\n                <button id=\"<%= \"users(\"+curUser.getUserId()+\").doRename\" %>\" class=\"btn btn-secondary\"  name=\"rename\" onclick=\"renameUser('<%=curUser.getUserId()%>')\">Rename</button>\n              <% } else { %>\n                <button id=\"<%= \"users(\"+curUser.getUserId()+\").doRename\" %>\" class=\"btn btn-secondary\"  name=\"rename\" onclick=\"alert('Sorry, the admin user cannot be renamed.')\">Rename</button>\n              <% } %>\n          </td>\n          <td>\n            <a id=\"<%= \"users(\"+curUser.getUserId()+\").doDetails\" %>\" href=\"javascript:detailUser('<%=curUser.getUserId()%>')\"><%=curUser.getUserId()%></a>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").fullName\" %>\">\n\t\t    <%= (curUser.getFullName().orElse(\"\")) %>\n\t      </div>\n          </td>\n          <td>\n            <div id=\"<%= \"users(\"+curUser.getUserId()+\").email\" %>\">\n            <%= ((email == null || email.equals(\"\")) ? \"&nbsp;\" : email) %>\n            </div>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").pagerEmail\" %>\">\n            <%= ((pagerEmail == null || pagerEmail.equals(\"\")) ? \"&nbsp;\" : pagerEmail) %>\n            </div>\n          </td>\n          <td>\n           <div id=\"<%= \"users(\"+curUser.getUserId()+\").xmppAddress\" %>\">\n            <%= ((xmppAddress == null || xmppAddress.equals(\"\")) ? \"&nbsp;\" : xmppAddress) %>\n           </div>\n          </td>\n          </tr>\n          <tr>\n            <td colspan=\"5\">\n             <div id=\"<%= \"users(\"+curUser.getUserId()+\").userComments\" %>\">\n             <%= (curUser.getUserComments().orElse(\"No Comments\")) %>\n\t        </div>\n            </td>\n          </tr>\n         <% row++;\n            } %>\n       </tbody>\n     </table>\n  </div> <!-- panel -->\n</form>\n\n<jsp:include page=\"/assets/load-assets.jsp\" flush=\"false\">\n    <jsp:param name=\"asset\" value=\"underscore-js\" />\n</jsp:include>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n<%@page import=\"java.util.*\"%>\n<%@page import=\"java.text.*\"%>\n<%@page import=\"java.time.ZoneId\"%>\n<%@page import=\"org.opennms.netmgt.config.*\"%>\n<%@page import=\"org.opennms.netmgt.config.users.*\"%>\n<%@page import=\"org.opennms.web.api.Util\"%>\n<%@page import=\"org.opennms.web.api.Authentication\"%>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n\n<%!\n    private String createSelectList(String name, List<String> elements) {\n        StringBuffer buffer = new StringBuffer(\"<select class=\\\"form-control\\\" multiple=\\\"multiple\\\" name=\\\"\"+name+\"\\\" size=\\\"10\\\">\");\n        for(String element : elements){\n            buffer.append(\"<option>\" + element + \"</option>\");\n        }\n        buffer.append(\"</select>\");\n\n        return buffer.toString();\n    }\n%>\n\n<%\n        final HttpSession userSession = request.getSession(false);\n        User user = null;\n        String userid = \"\";\n        UserManager userFactory;\n        try {\n            UserFactory.init();\n            userFactory = UserFactory.getInstance();\n        } catch (Throwable e) {\n            throw new ServletException(\"UserFactory:modify() \" + e);\n        }\n\n        if (userSession != null) {\n            user = (User) userSession.getAttribute(\"user.modifyUser.jsp\");\n            userid = user.getUserId();\n        }\n%>\n<c:set var=\"baseHref\" value=\"<%=Util.calculateUrlBase(request)%>\"/>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Modify User\" />\n  <jsp:param name=\"headTitle\" value=\"Modify\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='${baseHref}admin/userGroupView/users/list.jsp'>User List</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Modify User\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n\n    function addRoles() \n    {\n        m1len = m1.length ;\n        for ( i=0; i<m1len ; i++)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m2len = m2.length;\n                m2.options[m2len]= new Option(m1.options[i].text);\n            }\n        }\n        for ( i = (m1len -1); i>=0; i--)\n        {\n            if (m1.options[i].selected == true ) \n            {\n                m1.options[i] = null;\n            }\n        }\n    }\n\n    function removeRoles() \n    {\n        m2len = m2.length ;\n        for ( i=0; i<m2len ; i++)\n        {\n            if (m2.options[i].selected == true ) \n            {\n                m1len = m1.length;\n                m1.options[m1len]= new Option(m2.options[i].text);\n            }\n        }\n        for ( i=(m2len-1); i>=0; i--) \n        {\n            if (m2.options[i].selected == true ) \n            {\n                m2.options[i] = null;\n            }\n        }\n    }\n\n    function selectAllAvailable()\n    {\n        for (i=0; i < m1.length; i++) \n        {\n            m1.options[i].selected = true;\n        }\n    }\n    \n    function selectAllSelected()\n    {\n        for (i=0; i < m2.length; i++) \n        {\n            m2.options[i].selected = true;\n        }\n    }\n\n    function validate()\n    {\n        var minDurationMinsWarning = 5;\n        var warnMinDuration = true;\n\n        for (var c = 0; c < document.modifyUser.dutySchedules.value; c++)\n        {\n            var beginName= \"duty\" + c + \"Begin\";\n            var endName  = \"duty\" + c + \"End\";\n            \n            var beginValue = new Number(document.modifyUser.elements[beginName].value);\n            var endValue = new Number(document.modifyUser.elements[endName].value);\n\n            var beginHour = Math.floor(beginValue / 100);\n            var endHour = Math.floor(endValue / 100);\n            var beginMin = beginValue % 100, endMin = endValue % 100\n            var duration = ((endHour * 60) + endMin) - ((beginHour * 60) + beginMin);\n\n            if (!document.modifyUser.elements[\"deleteDuty\"+c].checked)\n            {\n            if (isNaN(beginValue))\n            {\n                alert(\"The begin time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                return false;\n            }\n            if (isNaN(endValue))\n            {\n                alert(\"The end time of duty schedule \" + (c+1) + \" must be expressed in military time with no other characters, such as 800, not 8:00\");\n                return false;\n            }\n            if (beginValue > endValue)\n            {\n                alert(\"The begin value for duty schedule \" + (c+1) + \" must be less than the end value.\");\n                return false;\n            }\n            if (beginValue < 0 || beginValue > 2359)\n            {\n                alert(\"The begin value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                return false;\n            }\n            if (endValue < 0 || endValue > 2359)\n            {\n                alert(\"The end value for duty schedule \" + (c+1) + \" must be greater than 0 and less than 2400\");\n                return false;\n            }\n            if ((duration <= minDurationMinsWarning) && warnMinDuration)\n            {\n                if (!(confirm(\"Warning: One or more duty schedules are unusually short in duration (\" + minDurationMinsWarning + \" minutes or less)\\n\\nSave these schedules?\")))\n                    return false;\n                else\n                    warnMinDuration = false;    // only once\n            }\n            }\n        }\n        return true;\n    }\n\n    function resetPassword()\n    {\n        newUserWin = window.open(\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/newPassword.jsp\") %>\", \"\", \"fullscreen=no,toolbar=no,status=no,menubar=no,scrollbars=yes,resizable=yes,directories=no,location=no,width=500,height=450\");\n    }\n\n    function addDutySchedules()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/addDutySchedules\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n    }\n    \n    function removeDutySchedules()\n    {\n        var ok = validate();\n        \n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/modifyUser.jsp\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n    }\n    \n    function saveUser()\n    {\n        var ok = validate();\n\n        if(ok)\n        {\n          selectAllSelected();\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/saveUser\";\n          document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/updateUser\") %>\";\n          document.modifyUser.submit();\n        }\n        else\n          document.modifyUser.redirect.value=\"/admin/userGroupView/users/modifyUser.jsp\";\n    }\n    \n    function cancelUser()\n    {\n        document.modifyUser.action=\"<%= Util.calculateUrlBase(request, \"admin/userGroupView/users/list.jsp\") %>\";\n        document.modifyUser.submit();\n    }\n</script>\n\n<form role=\"form\" class=\"form-horizontal\" id=\"modifyUser\" method=\"post\" name=\"modifyUser\">\n<input id=\"userID\" type=\"hidden\" name=\"userID\" value=\"<%=user.getUserId()%>\"/>\n<input id=\"password\" type=\"hidden\" name=\"password\"/>\n<input id=\"redirect\" type=\"hidden\" name=\"redirect\"/>\n<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Modify User: <%=userid%></span>\n      </div>\n      <div class=\"card-body\">\n        <h3>User Password</h3>\n          <div class=\"form-group\">\n            <button type=\"button\" class=\"btn btn-secondary\" onClick=\"resetPassword()\">Reset Password</button>\n          </div>\n\n        <h3>User Information</h3>\n\t<%\n        String email = null;\n        String pagerEmail = null;\n        String xmppAddress = null;\n        String numericPage = null;\n        String numericPin = null;\n        String textPage = null;\n        String textPin = null;\n        String workPhone = null;\n        String mobilePhone = null;\n        String homePhone = null;\n        String microblog = null;\n        String fullName = null;\n        String comments = null;\n        String tuiPin = null;\n        ZoneId timeZoneId = null;\n        List<String> availableRoles = new ArrayList<String>(Authentication.getAvailableRoles());\n        Collections.sort(availableRoles);\n        List<String> configuredRoles = new ArrayList<>();\n            User usertemp = userFactory.getUser(userid);\n            if (usertemp != null) {\n                    email = userFactory.getEmail(userid);\n                    pagerEmail = userFactory.getPagerEmail(userid);\n                    xmppAddress = userFactory.getXMPPAddress(userid);\n                    numericPage = userFactory.getNumericPage(userid);\n                    numericPin = userFactory.getNumericPin(userid);\n                    textPage = userFactory.getTextPage(userid);\n                    textPin = userFactory.getTextPin(userid);\n                    workPhone = userFactory.getWorkPhone(userid);\n                    mobilePhone = userFactory.getMobilePhone(userid);\n                    homePhone = userFactory.getHomePhone(userid);\n                    microblog = userFactory.getMicroblogName(userid);\n            } else {\n                    List<Contact> contacts = user.getContacts();\n                    for (int i = 0; i < contacts.size(); i++) {\n                            if (contacts.get(i).getType().equals(\"email\")) {\n                                    email = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"pagerEmail\")) {\n                                    pagerEmail = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"xmppAddress\")) {\n                                    xmppAddress = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"numericPage\")) {\n                                    numericPage = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"textPage\")) {\n                                    textPage = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"workPhone\")) {\n                                    workPhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"mobilePhone\")) {\n                                    mobilePhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"homePhone\")) {\n                                    homePhone = contacts.get(i).getInfo().orElse(null);\n                            } else if (contacts.get(i).getType().equals(\"microblog\")) {\n                            \t\tmicroblog = contacts.get(i).getInfo().orElse(null);\n                            }\n                    }\n            }\n            fullName = user.getFullName().orElse(null);\n            comments = user.getUserComments().orElse(null);\n            tuiPin = user.getTuiPin().orElse(null);\n            timeZoneId = user.getTimeZoneId().orElse(null);\n\n            configuredRoles = user.getRoles();\n            for (String role : configuredRoles) {\n                if (availableRoles.contains(role)) {\n                    availableRoles.remove(role);\n                }\n            }\n\n        %>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"fullName\" class=\"col-sm-2 col-form-label\">Full Name</label>\n          <div class=\"col-sm-10\">\n            <input id=\"fullName\" type=\"text\" class=\"form-control\" size=\"35\" name=\"fullName\" value=\"<%= (fullName == null? \"\" : fullName) %>\" />\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"userComments\" class=\"col-sm-2 col-form-label\">Comments</label>\n          <div class=\"col-sm-10\">\n            <textarea class=\"form-control\" rows=\"5\" id=\"userComments\" name=\"userComments\"><%= (comments == null? \"\" : comments) %></textarea>\n          </div>\n        </div>\n\n\n\t<div class=\"form-group\">\n        <h3>Security Roles</h3>\n        <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <label class=\"col-form-label\">Available Roles</label>\n                  <%=createSelectList(\"availableRoles\", availableRoles)%><br/>\n                  <button type=\"button\" class=\"btn btn-secondary\" id=\"roles.doAdd\" onClick=\"javascript:addRoles()\">Add &nbsp;&#155;&#155;&nbsp;</button>\n              </div>\n              <div class=\"col-sm-6\">\n                  <label class=\"col-form-label\">Currently in User</label>\n                  <%=createSelectList(\"configuredRoles\", configuredRoles)%><br/>\n                  <button type=\"button\" class=\"btn btn-secondary\" id=\"roles.doRemove\" onClick=\"javascript:removeRoles()\">&nbsp;&#139;&#139;&nbsp; Remove</button>\n              </div>\n        </div>\n    </div>\n\n        <h3>Notification Information</h3>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"email\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" id=\"email\" type=\"text\" name=\"email\" value='<%= (email == null ? \"\":email) %>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"pemail\" class=\"col-sm-2 col-form-label\">Pager Email</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"pemail\" name=\"pemail\" value='<%=(pagerEmail == null ? \"\":pagerEmail)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"xmppAddress\" class=\"col-sm-2 col-form-label\">XMPP Address</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" id=\"xmppAddress\" type=\"text\" name=\"xmppAddress\" value='<%=(xmppAddress == null ? \"\":xmppAddress)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"microblog\" class=\"col-sm-2 col-form-label\">Microblog Username</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"microblog\" name=\"microblog\" value='<%=(microblog == null ? \"\":microblog)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"numericalService\" class=\"col-sm-2 col-form-label\">Numeric Service</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"numericalService\" name=\"numericalService\" value='<%=(numericPage == null ? \"\":numericPage) %>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"numericalPin\" class=\"col-sm-2 col-form-label\">Numeric PIN</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"numericalPin\" name=\"numericalPin\" value='<%= (numericPin == null ? \"\":numericPin)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"textService\" class=\"col-sm-2 col-form-label\">Text Service</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"textService\" name=\"textService\" value='<%= (textPage == null ? \"\":textPage)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"textPin\" class=\"col-sm-2 col-form-label\">Text PIN</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"textPin\" name=\"textPin\" value='<%=(textPin == null ? \"\":textPin)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"workPhone\" class=\"col-sm-2 col-form-label\">Work Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"workPhone\" name=\"workPhone\" value='<%=(workPhone == null ? \"\":workPhone)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"mobilePhone\" class=\"col-sm-2 col-form-label\">Mobile Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"mobilePhone\" name=\"mobilePhone\" value='<%=(mobilePhone == null ? \"\":mobilePhone)%>'/>\n          </div>\n        </div>\n\n\t<div class=\"form-row form-group\">\n          <label for=\"homePhone\" class=\"col-sm-2 col-form-label\">Home Phone</label>\n          <div class=\"col-sm-10\">\n            <input class=\"form-control\" type=\"text\" id=\"homePhone\" name=\"homePhone\" value='<%=(homePhone == null ? \"\":homePhone)%>'/>\n          </div>\n        </div>\n\n    <div class=\"form-row form-group\">\n          <label for=\"tuiPin\" class=\"col-sm-2 col-form-label\">Telephone PIN</label>\n          <div class=\"col-sm-10\">\n              <input class=\"form-control\" id=\"tuiPin\" type=\"text\" name=\"tuiPin\" value=\"<%= (tuiPin == null? \"\" : tuiPin) %>\" />\n          </div>\n    </div>\n\n    <h3>Date/Time Preferences</h3>\n    <div class=\"form-row form-group\">\n          <label for=\"timeZoneId\" class=\"col-sm-2 col-form-label\">Time Zone</label>\n          <div class=\"col-sm-10\">\n            <select class=\"form-control custom-select\" id=\"timeZoneId\" name=\"timeZoneId\">\n<%\n              List<String> zones = new ArrayList<>();\n              zones.add(\"\");\n              zones.addAll(ZoneId.getAvailableZoneIds());\n              Collections.sort(zones);\n              for(String element : zones){\n                out.append(\"<option\");\n                if(timeZoneId!=null && element.equals(timeZoneId.getId())){\n                    out.append(\" selected\");\n                }\n                out.append(\">\");\n                out.append(element).append(\"</option>\");\n              }\n%>\n            </select>\n          </div>\n    </div>\n\n      </div> <!-- card-body -->\n    </div> <!-- panel -->\n  </div> <!-- column -->\n\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>User Properties</span>\n      </div>\n      <div class=\"card-body\">\n        <p>\n          This panel allows you to modify information for each user, including\n          their name, notification information, and duty schedules.\n        </p>\n\n        <p>\n          <b>Notification Information</b> provides the ability for you to configure\n          contact information for each user, including any of <em>email</em>\n          address, <em>pager email</em> (in the case that the pager can be reached\n          as an email destination), <em>XMPP address</em> (for instant messages\n          using the Jabber XMPP protocol), <em>numeric service</em> (for pagers\n          that cannot display text messages), <em>text service</em> (for\n          alphanumeric pagers), and <em>work phone</em>, <em>mobile phone</em>, and\n          <em>home phone</em> for notifications by telephone. The <em>Telephone\n          PIN</em> is an optional numeric field used to authenticate called users.\n        </p>\n\n        <p>\n          <b>Duty Schedules</b> allow you to flexibility to determine when users\n          should receive notifications.  A duty schedule consists of a list of\n          days for which the time will apply and a time range, presented in\n          military time with no punctuation.  Using this standard, days run from\n          <em>0000</em> to <em>2359</em>.\n        </p>\n\n        <p>\n          If your duty schedules span midnight, or if your users work multiple,\n          non-contiguous time periods, you will need to configure multiple duty\n          schedules.  To do so, select the number of duty schedules to add from\n          the drop-down box next to <b>[Add This Many Schedules]</b>, and click\n          the button.  Then, using the duty schedule fields you've just added,\n          create a duty schedule from the start time to 2359 on one day, and\n          enter a second duty schedule which begins at 0000 and ends at the end\n          of that users coverage.\n        </p>\n\n        <p>\n          To remove configured duty schedules, put a check in the <em>Delete</em>\n          column and click <b>[Remove Checked Schedules]</b>.\n        </p>\n\n        <p>\n         To save your configuration, click on <b>[Finish]</b>.\n        </p>\n      </div> <!-- card-body -->\n    </div> <!-- panel -->\n  </div> <!-- column -->\n</div> <!-- row -->\n\n<%\nCollection<String> dutySchedules = user.getDutySchedules();\n%>\n<input type=\"hidden\" name=\"dutySchedules\" value=\"<%=user.getDutySchedules().size()%>\"/>\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Duty Schedule</span>\n      </div>\n      <div class=\"card-body\">\n      <table class=\"table table-sm table-striped\">\n        <thead>\n          <tr>\n          <th>#</th>\n          <th>Delete</th>\n          <th>Mo</th>\n          <th>Tu</th>\n          <th>We</th>\n          <th>Th</th>\n          <th>Fr</th>\n          <th>Sa</th>\n          <th>Su</th>\n          <th>Begin Time</th>\n          <th>End Time</th>\n          </tr>\n        </thead>\n        <%\n        int i = 0;\n        for (String dutySchedule : dutySchedules) {\n            DutySchedule tmp = new DutySchedule(dutySchedule);\n            Vector<Object> curSched = tmp.getAsVector();\n            %>\n        <tbody>\n                        <tr>\n                          <td width=\"1%\"><%=(i + 1)%></td>\n                          <td width=\"1%\">\n                            <input type=\"checkbox\" name=\"deleteDuty<%=i%>\"/>\n                          </td>\n                          <%ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n            for (int j = 0; j < 7; j++) {\n                Boolean curDay = (Boolean) curSched.get(j);\n\n                %>\n                          <td width=\"5%\">\n                            <input type=\"checkbox\" name=\"duty<%=i+days.format(j)%>\" <%= (curDay.booleanValue() ? \"checked=\\\"true\\\"\" : \"\")%>/>\n                          </td>\n                          <%}\n            %>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>Begin\" value=\"<%=curSched.get(7)%>\"/>\n                          </td>\n                          <td width=\"5%\">\n                            <input type=\"text\" class=\"form-control\" size=\"4\" name=\"duty<%=i%>End\" value=\"<%=curSched.get(8)%>\"/>\n                          </td>\n                        </tr>\n                        <%i++;\n        }\n        %>\n         </tbody>\n       </table>\n\n        <div class=\"form-row mt-2\">\n            <button id=\"removeSchedulesButton\" type=\"button\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"removeDutySchedules()\">Remove Checked Schedules</button>\n        </div>\n\n       <div class=\"form-row mt-2\">\n           <select name=\"numSchedules\" class=\"form-control custom-select col-xs-6 col-sm-2 col-md-1 mr-2\" value=\"3\">\n                 <option value=\"1\">1</option>\n                 <option value=\"2\">2</option>\n                 <option value=\"3\">3</option>\n                 <option value=\"4\">4</option>\n                 <option value=\"5\">5</option>\n                 <option value=\"6\">6</option>\n                 <option value=\"7\">7</option>\n           </select>\n           <button id=\"addSchedulesButton\" type=\"button\" class=\"btn btn-secondary\" name=\"addSchedule\" onclick=\"addDutySchedules()\" title=\"Add This Many Schedules\"><i class=\"fa fa-plus\"></i> Add Schedules</button>\n       </div>\n\n   </div>\n   </div> <!-- card -->\n\n    <div class=\"form-group\">\n        <button id=\"saveUserButton\" type=\"submit\" class=\"btn btn-secondary\" name=\"finish\" onclick=\"saveUser()\">Finish</button>\n        <button id=\"cancelButton\" type=\"button\" class=\"btn btn-secondary\" name=\"cancel\" onclick=\"cancelUser()\">Cancel</button>\n    </div>\n</form>\n\n<script type=\"text/javascript\" >\n    var m1 = document.modifyUser.availableRoles;\n    var m2 = document.modifyUser.configuredRoles;\n</script>\n \n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\"\n\tcontentType=\"text/html\"\n\tsession=\"true\"\n%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"New Password\" />\n  <jsp:param name=\"headTitle\" value=\"New Password\" />\n  <jsp:param name=\"headTitle\" value=\"Users\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"quiet\" value=\"true\" />\n  <jsp:param name=\"nobreadcrumbs\" value=\"true\" />\n</jsp:include>\n\n\n<script type=\"text/javascript\">\n  function verifyGoForm() \n  {\n    if (document.goForm.pass1.value == document.goForm.pass2.value) \n    {\n      window.opener.document.modifyUser.password.value=document.goForm.pass1.value;\n      \n      window.close();\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n    }\n}\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <span>Please enter a new password and confirm</span>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" method=\"post\" name=\"goForm\">\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"pass1\" name=\"pass1\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"pass2\" name=\"pass2\">\n      </div>\n\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"verifyGoForm()\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"window.close()\">Cancel</button>\n    </form>\n    <p class=\"alert alert-warning mt-2\">\n      Note: Be sure to click \"Finish\" at the bottom of the user page to save\n      changes.\n    </p>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" >\n  <jsp:param name=\"quiet\" value=\"true\" />\n</jsp:include>\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New User\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Users\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/users/list.jsp'>User List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New User\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newUserForm.userID.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The user ID '\" + document.newUserForm.userID.value + \"' cannot be used. It may be confused with the administration user ID 'admin'.\");\n        return false;\n    }\n    \n    if (document.newUserForm.pass1.value == document.newUserForm.pass2.value) \n    {\n      document.newUserForm.action=\"admin/userGroupView/users/addNewUser\";\n      return true;\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n      document.newUserForm.pass1.value = \"\";\n      document.newUserForm.pass2.value = \"\";\n      return false;\n    }\n  }    \n  function cancelUser()\n  {\n      window.location.href = \"admin/userGroupView/users/list.jsp\";\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The user <%=request.getParameter(\"userID\")%> already exists.\n        Please type in a different user ID.</span>\n    <%} else { %>\n      <span>Please enter a user ID and password below</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"form\" role=\"form\" id=\"newUserForm\" method=\"post\" name=\"newUserForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n      <div class=\"form-group\">\n        <label for=\"userID\" class=\"\">User ID</label>\n        <input id=\"userID\" type=\"text\" name=\"userID\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input id=\"pass1\" type=\"password\" name=\"pass1\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input id=\"pass2\" type=\"password\" name=\"pass2\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelUser()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2011-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.smoketest;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.time.Duration;\nimport java.time.temporal.ChronoUnit;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.openqa.selenium.Alert;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class UserIT extends OpenNMSSeleniumIT {\n    private static final Logger LOG = LoggerFactory.getLogger(UserIT.class);\n\n    @Before\n    public void setUp() throws Exception {\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/index.jsp\");\n    }\n\n    @Test\n    public void testExpectedTextAndLinksArePresent() throws Exception {\n        final List<WebElement> headers = driver.findElements(By.xpath(\"//div[@class='card-header']/span\"));\n        assertEquals(\"Account page should have 2 panels\", 2, headers.size());\n        assertEquals(\"Account page should have \\\"User Account Self-Service\\\" panel\", \"User Account Self-Service\", headers.get(0).getText());\n        assertEquals(\"Account page should have \\\"User Account Self-Service Options\\\" panel\", \"Account Self-Service Options\", headers.get(1).getText());\n    }\n\n    @Test\n    public void testSubmitWithWrongPassword() throws InterruptedException {\n        driver.findElement(By.linkText(\"Change Password\")).click();\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"12345\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"23456\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"34567\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n\n        try {\n            final Alert alert = wait.until(ExpectedConditions.alertIsPresent());\n            alert.dismiss();\n        } catch (final Exception e) {\n            LOG.debug(\"Got an exception waiting for a 'wrong password' alert.\", e);\n            throw e;\n        }\n    }\n\n    @Test\n    public void testUsersAndGroups() throws Exception {\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementByLink(\"Add new user\").click();\n\n        enterText(By.id(\"userID\"), USER_NAME);\n        enterText(By.id(\"pass1\"), \"SmokeTestPassword\");\n        enterText(By.id(\"pass2\"), \"SmokeTestPassword\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        findElementById(\"saveUserButton\").click();\n        findElementById(\"users(\" + USER_NAME + \").doDetails\");\n\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Groups\").click();\n        findElementByLink(\"Add new group\").click();\n\n        enterText(By.id(\"groupName\"), GROUP_NAME);\n        enterText(By.id(\"groupComment\"), \"Test\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        final Select select = new Select(findElementByName(\"availableUsers\"));\n        select.selectByVisibleText(USER_NAME);\n        findElementById(\"users.doAdd\").click();\n\n        findElementByName(\"finish\").click();\n\n        findElementByLink(GROUP_NAME).click();\n        driver.findElement(By.xpath(\"//div[@class='card-header']/span[text()='Details for Group: \" + GROUP_NAME + \"']\"));\n\n        findElementByLink(\"Group List\").click();\n        findElementById(GROUP_NAME + \".doDelete\").click();\n        handleAlert(\"Are you sure you want to delete the group \" + GROUP_NAME + \"?\");\n        assertElementDoesNotExist(By.id(GROUP_NAME));\n\n        findElementByLink(\"Users and Groups\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementById(\"user-\" + USER_NAME);\n        findElementById(\"users(\" + USER_NAME + \").doDelete\").click();\n        handleAlert(\"Are you sure you want to delete the user \" + USER_NAME + \"?\");\n        assertElementDoesNotExist(By.id(USER_NAME));\n    }\n\n    @Test\n    public void testChangeAdminPasswordWithDifferentPasswords() throws Exception {\n\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"OpenNM\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        try {\n            final Alert alert = wait.until(ExpectedConditions.alertIsPresent());\n            alert.dismiss();\n        } catch (final Exception e) {\n            LOG.debug(\"Got an exception waiting for a 'wrong password' alert.\", e);\n            throw e;\n        }\n    }\n\n    @Test\n    public void testChangeAdminPassword() throws Exception {\n\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"OpenNMS\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        assertTrue(wait.until(pageContainsText(\"Password successfully changed\")));\n\n        // Change password back to admin\n        driver.get(getBaseUrlInternal() + \"opennms/account/selfService/newPasswordEntry\");\n        enterText(By.cssSelector(\"input[type=password][name=oldpass]\"), \"OpenNMS\");\n        enterText(By.cssSelector(\"input[type=password][name=pass1]\"), \"admin\");\n        enterText(By.cssSelector(\"input[type=password][name=pass2]\"), \"admin\");\n        driver.findElement(By.cssSelector(\"button[type=submit]\")).click();\n        assertTrue(wait.until(pageContainsText(\"Password successfully changed\")));\n    }\n\n    @Test\n    public void testInvalidUserIds() {\n        testInvalidUserId(\"John<b>Doe</b>\",true);\n        testInvalidUserId(\"Jane'Doe'\",true);\n        testInvalidUserId(\"John&Doe\",true);\n        testInvalidUserId(\"Jane\\\"\\\"Doe\",true);\n    }\n\n    @Test\n    public void testValidUserIds() {\n        testInvalidUserId(\"John-Doe\",false);\n        testInvalidUserId(\"Jane/Doe\",false);\n        testInvalidUserId(\"John.Doe\",false);\n        testInvalidUserId(\"Jane#Doe\", false);\n        testInvalidUserId(\"John@D\u00f6e.com\", false);\n        testInvalidUserId(\"JohnDo\u00e9\", false);\n    }\n\n    @Test\n    public void testInvalidGroupIds() {\n        testInvalidGroupId(\"John<b>Doe</b>\",true);\n        testInvalidGroupId(\"Jane'Doe'\",true);\n        testInvalidGroupId(\"John&Doe\",true);\n        testInvalidGroupId(\"Jane\\\"\\\"Doe\",true);\n    }\n\n    @Test\n    public void testValidGroupIds() {\n        testInvalidGroupId(\"John-Doe\",false);\n        testInvalidGroupId(\"Jane/Doe\",false);\n        testInvalidGroupId(\"John.Doe\",false);\n        testInvalidGroupId(\"Jane#Doe\", false);\n        testInvalidGroupId(\"John@D\u00f6e.com\", false);\n        testInvalidGroupId(\"JohnDo\u00e9\", false);\n    }\n\n    public void testInvalidUserId(final String userId, final boolean mustFail) {\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementByLink(\"Add new user\").click();\n\n        enterText(By.id(\"userID\"), userId);\n        enterText(By.id(\"pass1\"), \"SmokeTestPassword\");\n        enterText(By.id(\"pass2\"), \"SmokeTestPassword\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        if (mustFail) {\n            try {\n                final Alert alert = wait.withTimeout(Duration.of(5, ChronoUnit.SECONDS)).until(ExpectedConditions.alertIsPresent());\n                alert.dismiss();\n            } catch (final Exception e) {\n                LOG.debug(\"Got an exception waiting for a 'invalid user ID' alert.\", e);\n                throw e;\n            }\n        } else {\n            wait.until(ExpectedConditions.elementToBeClickable(By.name(\"finish\")));\n        }\n    }\n\n    public void testInvalidGroupId(final String groupId, final boolean mustFail) {\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Groups\").click();\n        findElementByLink(\"Add new group\").click();\n\n        enterText(By.id(\"groupName\"), groupId);\n        enterText(By.id(\"groupComment\"), \"SmokeTestComment\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        if (mustFail) {\n            try {\n                final Alert alert = wait.withTimeout(Duration.of(5, ChronoUnit.SECONDS)).until(ExpectedConditions.alertIsPresent());\n                alert.dismiss();\n            } catch (final Exception e) {\n                LOG.debug(\"Got an exception waiting for a 'invalid group ID' alert.\", e);\n                throw e;\n            }\n        } else {\n            wait.until(ExpectedConditions.elementToBeClickable(By.name(\"finish\")));\n        }\n    }\n\n    /**\n     * see NMS-13124\n     */\n    @Test\n    public void testCsrfPrivilegeEscalation() {\n        // visit the admin's user page\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementByLink(\"Add new user\").click();\n\n        // add a new user 'user'\n        enterText(By.id(\"userID\"), \"user\");\n        enterText(By.id(\"pass1\"), \"pass\");\n        enterText(By.id(\"pass2\"), \"pass\");\n        findElementByXpath(\"//button[@type='submit' and text()='OK']\").click();\n\n        // assign just the ROLE_USER\n        final Select select = new Select(driver.findElement(By.name(\"availableRoles\")));\n        select.selectByValue(\"ROLE_USER\");\n        findElementById(\"roles.doAdd\").click();\n        findElementById(\"saveUserButton\").click();\n\n        // assert that this is correctly set\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementById(\"users(user).doDetails\").click();\n\n        assertTrue(wait.until(pageContainsText(\"ROLE_USER\")));\n\n        // now construct an exploit to set ROLE_ADMIN for user 'user'\n        final String html = \"<form action='\" + stack.opennms().getBaseUrlInternal() + \"opennms/admin/userGroupView/users/updateUser' method='POST' enctype='application/x-www-form-urlencoded'>\" +\n                \"<input type='hidden' name='userID' value='user' />\" +\n                \"<input type='hidden' name='password' value=' ' />\" +\n                \"<input type='hidden' name='redirect' value='/admin/userGroupView/users/saveUser' /> <input type='hidden' name='fullName' value=' ' />\" +\n                \"<input type='hidden' name='userComments' value=' ' />\" +\n                \"<input type='hidden' name='configuredRoles' value='ROLE_ADMIN' />\" +\n                \"<input type='hidden' name='email' value=' ' />\" +\n                \"<input type='hidden' name='pemail' value=' ' />\" +\n                \"<input type='hidden' name='xmppAddress' value=' ' />\" +\n                \"<input type='hidden' name='microblog' value=' ' />\" +\n                \"<input type='hidden' name='numericalService' value=' ' />\" +\n                \"<input type='hidden' name='numericalPin' value=' ' />\" +\n                \"<input type='hidden' name='textService' value=' ' />\" +\n                \"<input type='hidden' name='textPin' value=' ' />\" +\n                \"<input type='hidden' name='workPhone' value=' ' />\" +\n                \"<input type='hidden' name='mobilePhone' value=' ' />\" +\n                \"<input type='hidden' name='homePhone' value=' ' />\" +\n                \"<input type='hidden' name='tuiPin' value=' ' />\" +\n                \"<input type='hidden' name='timeZoneId' value=' ' />\" +\n                \"<input type='hidden' name='dutySchedules' value='0' />\" +\n                \"<input type='hidden' name='numSchedules' value='1' />\" +\n                \"<input type='submit' id='submitIt' />\" +\n                \"</form>\";\n        String script = \"var foo = document.createElement('div'); \" +\n                \"foo.innerHTML=\\\"\" + html + \"\\\"; \" +\n                \"document.body.appendChild(foo)\";\n\n        // ...and execute it\n        driver.executeScript(script);\n        findElementById(\"submitIt\").click();\n\n        // this should be denied due to CSRF protection\n        assertTrue(wait.until(pageContainsText(\"Access denied\")));\n\n        // assure that the user's role is still ROLE_USER\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n        findElementById(\"users(user).doDetails\").click();\n        assertTrue(wait.until(pageContainsText(\"ROLE_USER\")));\n\n        // delete the user\n        adminPage();\n        findElementByLink(\"Configure Users, Groups and On-Call Roles\").click();\n        findElementByLink(\"Configure Users\").click();\n\n        findElementById(\"users(user).doDelete\").click();\n        handleAlert(\"Are you sure you want to delete the user user?\");\n    }\n}\n"], "filenames": ["opennms-config/src/main/java/org/opennms/netmgt/config/UserManager.java", "opennms-webapp/src/main/webapp/WEB-INF/applicationContext-spring-security.xml", "opennms-webapp/src/main/webapp/WEB-INF/jsp/admin/userGroupView/groups/list.jsp", "opennms-webapp/src/main/webapp/WEB-INF/jsp/admin/userGroupView/groups/modifyGroup.jsp", "opennms-webapp/src/main/webapp/WEB-INF/jsp/admin/userGroupView/groups/newGroup.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/roles/editDetails.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/roles/editSpecific.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/roles/list.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/roles/view.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/users/list.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/users/modifyUser.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/users/newPassword.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/users/newUser.jsp", "smoke-test/src/test/java/org/opennms/smoketest/UserIT.java"], "buggy_code_start_loc": [997, 123, 104, 294, 78, 72, 62, 95, 159, 98, 258, 68, 84, 33], "buggy_code_end_loc": [997, 162, 104, 294, 78, 72, 63, 150, 222, 211, 258, 68, 84, 160], "fixing_code_start_loc": [998, 124, 105, 295, 79, 73, 62, 96, 160, 98, 259, 69, 85, 34], "fixing_code_end_loc": [1002, 174, 106, 296, 80, 74, 64, 153, 226, 227, 260, 71, 86, 327], "type": "CWE-352", "message": "In OpenNMS Horizon, versions opennms-1-0-stable through opennms-27.1.0-1; OpenNMS Meridian, versions meridian-foundation-2015.1.0-1 through meridian-foundation-2019.1.18-1; meridian-foundation-2020.1.0-1 through meridian-foundation-2020.1.6-1 are vulnerable to CSRF, due to no CSRF protection, and since there is no validation of an existing user name while renaming a user. As a result, privileges of the renamed user are being overwritten by the old user and the old user is being deleted from the user list.", "other": {"cve": {"id": "CVE-2021-25930", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2021-05-20T14:15:07.737", "lastModified": "2021-05-26T20:30:38.603", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In OpenNMS Horizon, versions opennms-1-0-stable through opennms-27.1.0-1; OpenNMS Meridian, versions meridian-foundation-2015.1.0-1 through meridian-foundation-2019.1.18-1; meridian-foundation-2020.1.0-1 through meridian-foundation-2020.1.6-1 are vulnerable to CSRF, due to no CSRF protection, and since there is no validation of an existing user name while renaming a user. As a result, privileges of the renamed user are being overwritten by the old user and the old user is being deleted from the user list."}, {"lang": "es", "value": "En OpenNMS Horizon, versiones opennms-1-0-stable hasta opennms-27.1.0-1;&#xa0;OpenNMS Meridian, versiones meridian-foundation-2015.1.0-1 hasta meridian-foundation-2019.1.18-1;&#xa0;versiones meridian-foundation-2020.1.0-1 hasta meridian-foundation-2020.1.6-1, son vulnerables a ataques de tipo CSRF, debido a que no presentan protecci\u00f3n de tipo CSRF, y dado que no presenta comprobaci\u00f3n de un nombre de usuario existente al cambiar el nombre de un usuario.&#xa0;Como resultado, los privilegios del usuario renombrado est\u00e1n siendo sobrescritos por el usuario anterior y el usuario anterior est\u00e1 siendo eliminado de la lista de usuarios"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opennms:horizon:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.0", "versionEndExcluding": "27.1.1", "matchCriteriaId": "B38D9FCC-AF2B-46B6-9573-04EE36A2BAEB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:opennms:meridian:*:*:*:*:*:*:*:*", "versionStartIncluding": "2015.1.0", "versionEndExcluding": "2019.1.19", "matchCriteriaId": "CBFB1241-8D42-4F61-B855-210D963B4B4E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:opennms:meridian:*:*:*:*:*:*:*:*", "versionStartIncluding": "2020.1.0", "versionEndExcluding": "2020.1.7", "matchCriteriaId": "492F27E1-43CF-4823-B132-DC2730CB8CEA"}]}]}], "references": [{"url": "https://github.com/OpenNMS/opennms/commit/607151ea8f90212a3fb37c977fa57c7d58d26a84", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/OpenNMS/opennms/commit/eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25930", "source": "vulnerabilitylab@mend.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/OpenNMS/opennms/commit/607151ea8f90212a3fb37c977fa57c7d58d26a84"}}