{"buggy_code": ["<?php\n// +-----------------------------------------------------------------------+\n// | Piwigo - a PHP based photo gallery                                    |\n// +-----------------------------------------------------------------------+\n// | Copyright(C) 2008-2016 Piwigo Team                  http://piwigo.org |\n// | Copyright(C) 2003-2008 PhpWebGallery Team    http://phpwebgallery.net |\n// | Copyright(C) 2002-2003 Pierrick LE GALL   http://le-gall.net/pierrick |\n// +-----------------------------------------------------------------------+\n// | This program is free software; you can redistribute it and/or modify  |\n// | it under the terms of the GNU General Public License as published by  |\n// | the Free Software Foundation                                          |\n// |                                                                       |\n// | This program is distributed in the hope that it will be useful, but   |\n// | WITHOUT ANY WARRANTY; without even the implied warranty of            |\n// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU      |\n// | General Public License for more details.                              |\n// |                                                                       |\n// | You should have received a copy of the GNU General Public License     |\n// | along with this program; if not, write to the Free Software           |\n// | Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, |\n// | USA.                                                                  |\n// +-----------------------------------------------------------------------+\n\n/**\n * Management of elements set. Elements can belong to a category or to the\n * user caddie.\n *\n */\n\nif (!defined('PHPWG_ROOT_PATH'))\n{\n  die('Hacking attempt!');\n}\n\ninclude_once(PHPWG_ROOT_PATH.'admin/include/functions.php');\n\n// +-----------------------------------------------------------------------+\n// | Check Access and exit when user status is not ok                      |\n// +-----------------------------------------------------------------------+\ncheck_status(ACCESS_ADMINISTRATOR);\n\ntrigger_notify('loc_begin_element_set_unit');\n\n// +-----------------------------------------------------------------------+\n// |                        unit mode form submission                      |\n// +-----------------------------------------------------------------------+\n\nif (isset($_POST['submit']))\n{\n  $collection = explode(',', $_POST['element_ids']);\n\n  $datas = array();\n\n  $query = '\nSELECT id, date_creation\n  FROM '.IMAGES_TABLE.'\n  WHERE id IN ('.implode(',', $collection).')\n;';\n  $result = pwg_query($query);\n\n  while ($row = pwg_db_fetch_assoc($result))\n  {\n    $data = array();\n\n    $data['id'] = $row['id'];\n    $data['name'] = $_POST['name-'.$row['id']];\n    $data['author'] = $_POST['author-'.$row['id']];\n    $data['level'] = $_POST['level-'.$row['id']];\n\n    if ($conf['allow_html_descriptions'])\n    {\n      $data['comment'] = @$_POST['description-'.$row['id']];\n    }\n    else\n    {\n      $data['comment'] = strip_tags(@$_POST['description-'.$row['id']]);\n    }\n\n    if (!empty($_POST['date_creation-'.$row['id']]))\n    {\n      $data['date_creation'] = $_POST['date_creation-'.$row['id']];\n    }\n    else\n    {\n      $data['date_creation'] = null;\n    }\n\n    $datas[] = $data;\n\n    // tags management\n    $tag_ids = array();\n    if (!empty($_POST[ 'tags-'.$row['id'] ]))\n    {\n      $tag_ids = get_tag_ids($_POST[ 'tags-'.$row['id'] ]);\n    }\n    set_tags($tag_ids, $row['id']);\n  }\n\n  mass_updates(\n    IMAGES_TABLE,\n    array(\n      'primary' => array('id'),\n      'update' => array('name','author','level','comment','date_creation')\n      ),\n    $datas\n    );\n\n  $page['infos'][] = l10n('Photo informations updated');\n  invalidate_user_cache();\n}\n\n// +-----------------------------------------------------------------------+\n// |                             template init                             |\n// +-----------------------------------------------------------------------+\n\n$template->set_filenames(\n  array('batch_manager_unit' => 'batch_manager_unit.tpl'));\n\n$base_url = PHPWG_ROOT_PATH.'admin.php';\n\n$template->assign(\n  array(\n    'U_ELEMENTS_PAGE' => $base_url.get_query_string_diff(array('display','start')),\n    'F_ACTION' => $base_url.get_query_string_diff(array()),\n    'level_options' => get_privacy_level_options(),\n    )\n  );\n\n// +-----------------------------------------------------------------------+\n// |                        global mode thumbnails                         |\n// +-----------------------------------------------------------------------+\n\n// how many items to display on this page\nif (!empty($_GET['display']))\n{\n  $page['nb_images'] = intval($_GET['display']);\n}\nelseif (in_array($conf['batch_manager_images_per_page_unit'], array(5, 10, 50)))\n{\n  $page['nb_images'] = $conf['batch_manager_images_per_page_unit'];\n}\nelse\n{\n  $page['nb_images'] = 5;\n}\n\n\n\nif (count($page['cat_elements_id']) > 0)\n{\n  $nav_bar = create_navigation_bar(\n    $base_url.get_query_string_diff(array('start')),\n    count($page['cat_elements_id']),\n    $page['start'],\n    $page['nb_images']\n    );\n  $template->assign(array('navbar' => $nav_bar));\n\n  $element_ids = array();\n\n  $is_category = false;\n  if (isset($_SESSION['bulk_manager_filter']['category'])\n      and !isset($_SESSION['bulk_manager_filter']['category_recursive']))\n  {\n    $is_category = true;\n  }\n\n  if (isset($_SESSION['bulk_manager_filter']['prefilter'])\n      and 'duplicates' == $_SESSION['bulk_manager_filter']['prefilter'])\n  {\n    $conf['order_by'] = ' ORDER BY file, id';\n  }\n\n\n  $query = '\nSELECT *\n  FROM '.IMAGES_TABLE;\n\n  if ($is_category)\n  {\n    $category_info = get_cat_info($_SESSION['bulk_manager_filter']['category']);\n\n    $conf['order_by'] = $conf['order_by_inside_category'];\n    if (!empty($category_info['image_order']))\n    {\n      $conf['order_by'] = ' ORDER BY '.$category_info['image_order'];\n    }\n\n    $query.= '\n    JOIN '.IMAGE_CATEGORY_TABLE.' ON id = image_id';\n  }\n\n  $query.= '\n  WHERE id IN ('.implode(',', $page['cat_elements_id']).')';\n\n  if ($is_category)\n  {\n    $query.= '\n    AND category_id = '.$_SESSION['bulk_manager_filter']['category'];\n  }\n\n  $query.= '\n  '.$conf['order_by'].'\n  LIMIT '.$page['nb_images'].' OFFSET '.$page['start'].'\n;';\n  $result = pwg_query($query);\n\n  while ($row = pwg_db_fetch_assoc($result))\n  {\n    $element_ids[] = $row['id'];\n\n    $src_image = new SrcImage($row);\n\n    $query = '\nSELECT\n    id,\n    name\n  FROM '.IMAGE_TAG_TABLE.' AS it\n    JOIN '.TAGS_TABLE.' AS t ON t.id = it.tag_id\n  WHERE image_id = '.$row['id'].'\n;';\n    $tag_selection = get_taglist($query);\n\n    $legend = render_element_name($row);\n    if ($legend != get_name_from_file($row['file']))\n    {\n      $legend.= ' ('.$row['file'].')';\n    }\n\n    $template->append(\n      'elements', array_merge($row,\n      array(\n        'ID' => $row['id'],\n        'TN_SRC' => DerivativeImage::url(IMG_THUMB, $src_image),\n        'FILE_SRC' => DerivativeImage::url(IMG_LARGE, $src_image),\n        'LEGEND' => $legend,\n        'U_EDIT' => get_root_url().'admin.php?page=photo-'.$row['id'],\n        'NAME' => htmlspecialchars(@$row['name']),\n        'AUTHOR' => htmlspecialchars(@$row['author']),\n        'LEVEL' => !empty($row['level'])?$row['level']:'0',\n        'DESCRIPTION' => htmlspecialchars(@$row['comment']),\n        'DATE_CREATION' => $row['date_creation'],\n        'TAGS' => $tag_selection,\n        )\n      ));\n  }\n\n  $template->assign(array(\n    'ELEMENT_IDS' => implode(',', $element_ids),\n    'CACHE_KEYS' => get_admin_client_cache_keys(array('tags')),\n    ));\n}\n\ntrigger_notify('loc_end_element_set_unit');\n\n// +-----------------------------------------------------------------------+\n// |                           sending html code                           |\n// +-----------------------------------------------------------------------+\n\n$template->assign_var_from_handle('ADMIN_CONTENT', 'batch_manager_unit');\n?>\n"], "fixing_code": ["<?php\n// +-----------------------------------------------------------------------+\n// | Piwigo - a PHP based photo gallery                                    |\n// +-----------------------------------------------------------------------+\n// | Copyright(C) 2008-2016 Piwigo Team                  http://piwigo.org |\n// | Copyright(C) 2003-2008 PhpWebGallery Team    http://phpwebgallery.net |\n// | Copyright(C) 2002-2003 Pierrick LE GALL   http://le-gall.net/pierrick |\n// +-----------------------------------------------------------------------+\n// | This program is free software; you can redistribute it and/or modify  |\n// | it under the terms of the GNU General Public License as published by  |\n// | the Free Software Foundation                                          |\n// |                                                                       |\n// | This program is distributed in the hope that it will be useful, but   |\n// | WITHOUT ANY WARRANTY; without even the implied warranty of            |\n// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU      |\n// | General Public License for more details.                              |\n// |                                                                       |\n// | You should have received a copy of the GNU General Public License     |\n// | along with this program; if not, write to the Free Software           |\n// | Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, |\n// | USA.                                                                  |\n// +-----------------------------------------------------------------------+\n\n/**\n * Management of elements set. Elements can belong to a category or to the\n * user caddie.\n *\n */\n\nif (!defined('PHPWG_ROOT_PATH'))\n{\n  die('Hacking attempt!');\n}\n\ninclude_once(PHPWG_ROOT_PATH.'admin/include/functions.php');\n\n// +-----------------------------------------------------------------------+\n// | Check Access and exit when user status is not ok                      |\n// +-----------------------------------------------------------------------+\ncheck_status(ACCESS_ADMINISTRATOR);\n\ntrigger_notify('loc_begin_element_set_unit');\n\n// +-----------------------------------------------------------------------+\n// |                        unit mode form submission                      |\n// +-----------------------------------------------------------------------+\n\nif (isset($_POST['submit']))\n{\n  check_input_parameter('element_ids', $_POST, false, '/^\\d+(,\\d+)*$/');\n  $collection = explode(',', $_POST['element_ids']);\n\n  $datas = array();\n\n  $query = '\nSELECT id, date_creation\n  FROM '.IMAGES_TABLE.'\n  WHERE id IN ('.implode(',', $collection).')\n;';\n  $result = pwg_query($query);\n\n  while ($row = pwg_db_fetch_assoc($result))\n  {\n    $data = array();\n\n    $data['id'] = $row['id'];\n    $data['name'] = $_POST['name-'.$row['id']];\n    $data['author'] = $_POST['author-'.$row['id']];\n    $data['level'] = $_POST['level-'.$row['id']];\n\n    if ($conf['allow_html_descriptions'])\n    {\n      $data['comment'] = @$_POST['description-'.$row['id']];\n    }\n    else\n    {\n      $data['comment'] = strip_tags(@$_POST['description-'.$row['id']]);\n    }\n\n    if (!empty($_POST['date_creation-'.$row['id']]))\n    {\n      $data['date_creation'] = $_POST['date_creation-'.$row['id']];\n    }\n    else\n    {\n      $data['date_creation'] = null;\n    }\n\n    $datas[] = $data;\n\n    // tags management\n    $tag_ids = array();\n    if (!empty($_POST[ 'tags-'.$row['id'] ]))\n    {\n      $tag_ids = get_tag_ids($_POST[ 'tags-'.$row['id'] ]);\n    }\n    set_tags($tag_ids, $row['id']);\n  }\n\n  mass_updates(\n    IMAGES_TABLE,\n    array(\n      'primary' => array('id'),\n      'update' => array('name','author','level','comment','date_creation')\n      ),\n    $datas\n    );\n\n  $page['infos'][] = l10n('Photo informations updated');\n  invalidate_user_cache();\n}\n\n// +-----------------------------------------------------------------------+\n// |                             template init                             |\n// +-----------------------------------------------------------------------+\n\n$template->set_filenames(\n  array('batch_manager_unit' => 'batch_manager_unit.tpl'));\n\n$base_url = PHPWG_ROOT_PATH.'admin.php';\n\n$template->assign(\n  array(\n    'U_ELEMENTS_PAGE' => $base_url.get_query_string_diff(array('display','start')),\n    'F_ACTION' => $base_url.get_query_string_diff(array()),\n    'level_options' => get_privacy_level_options(),\n    )\n  );\n\n// +-----------------------------------------------------------------------+\n// |                        global mode thumbnails                         |\n// +-----------------------------------------------------------------------+\n\n// how many items to display on this page\nif (!empty($_GET['display']))\n{\n  $page['nb_images'] = intval($_GET['display']);\n}\nelseif (in_array($conf['batch_manager_images_per_page_unit'], array(5, 10, 50)))\n{\n  $page['nb_images'] = $conf['batch_manager_images_per_page_unit'];\n}\nelse\n{\n  $page['nb_images'] = 5;\n}\n\n\n\nif (count($page['cat_elements_id']) > 0)\n{\n  $nav_bar = create_navigation_bar(\n    $base_url.get_query_string_diff(array('start')),\n    count($page['cat_elements_id']),\n    $page['start'],\n    $page['nb_images']\n    );\n  $template->assign(array('navbar' => $nav_bar));\n\n  $element_ids = array();\n\n  $is_category = false;\n  if (isset($_SESSION['bulk_manager_filter']['category'])\n      and !isset($_SESSION['bulk_manager_filter']['category_recursive']))\n  {\n    $is_category = true;\n  }\n\n  if (isset($_SESSION['bulk_manager_filter']['prefilter'])\n      and 'duplicates' == $_SESSION['bulk_manager_filter']['prefilter'])\n  {\n    $conf['order_by'] = ' ORDER BY file, id';\n  }\n\n\n  $query = '\nSELECT *\n  FROM '.IMAGES_TABLE;\n\n  if ($is_category)\n  {\n    $category_info = get_cat_info($_SESSION['bulk_manager_filter']['category']);\n\n    $conf['order_by'] = $conf['order_by_inside_category'];\n    if (!empty($category_info['image_order']))\n    {\n      $conf['order_by'] = ' ORDER BY '.$category_info['image_order'];\n    }\n\n    $query.= '\n    JOIN '.IMAGE_CATEGORY_TABLE.' ON id = image_id';\n  }\n\n  $query.= '\n  WHERE id IN ('.implode(',', $page['cat_elements_id']).')';\n\n  if ($is_category)\n  {\n    $query.= '\n    AND category_id = '.$_SESSION['bulk_manager_filter']['category'];\n  }\n\n  $query.= '\n  '.$conf['order_by'].'\n  LIMIT '.$page['nb_images'].' OFFSET '.$page['start'].'\n;';\n  $result = pwg_query($query);\n\n  while ($row = pwg_db_fetch_assoc($result))\n  {\n    $element_ids[] = $row['id'];\n\n    $src_image = new SrcImage($row);\n\n    $query = '\nSELECT\n    id,\n    name\n  FROM '.IMAGE_TAG_TABLE.' AS it\n    JOIN '.TAGS_TABLE.' AS t ON t.id = it.tag_id\n  WHERE image_id = '.$row['id'].'\n;';\n    $tag_selection = get_taglist($query);\n\n    $legend = render_element_name($row);\n    if ($legend != get_name_from_file($row['file']))\n    {\n      $legend.= ' ('.$row['file'].')';\n    }\n\n    $template->append(\n      'elements', array_merge($row,\n      array(\n        'ID' => $row['id'],\n        'TN_SRC' => DerivativeImage::url(IMG_THUMB, $src_image),\n        'FILE_SRC' => DerivativeImage::url(IMG_LARGE, $src_image),\n        'LEGEND' => $legend,\n        'U_EDIT' => get_root_url().'admin.php?page=photo-'.$row['id'],\n        'NAME' => htmlspecialchars(@$row['name']),\n        'AUTHOR' => htmlspecialchars(@$row['author']),\n        'LEVEL' => !empty($row['level'])?$row['level']:'0',\n        'DESCRIPTION' => htmlspecialchars(@$row['comment']),\n        'DATE_CREATION' => $row['date_creation'],\n        'TAGS' => $tag_selection,\n        )\n      ));\n  }\n\n  $template->assign(array(\n    'ELEMENT_IDS' => implode(',', $element_ids),\n    'CACHE_KEYS' => get_admin_client_cache_keys(array('tags')),\n    ));\n}\n\ntrigger_notify('loc_end_element_set_unit');\n\n// +-----------------------------------------------------------------------+\n// |                           sending html code                           |\n// +-----------------------------------------------------------------------+\n\n$template->assign_var_from_handle('ADMIN_CONTENT', 'batch_manager_unit');\n?>\n"], "filenames": ["admin/batch_manager_unit.php"], "buggy_code_start_loc": [49], "buggy_code_end_loc": [49], "fixing_code_start_loc": [50], "fixing_code_end_loc": [51], "type": "CWE-89", "message": "The Batch Manager component of Piwigo 2.9.2 is vulnerable to SQL Injection via the admin/batch_manager_unit.php element_ids parameter in unit mode. An attacker can exploit this to gain access to the data in a connected MySQL database.", "other": {"cve": {"id": "CVE-2017-17824", "sourceIdentifier": "cve@mitre.org", "published": "2017-12-21T04:29:00.353", "lastModified": "2018-01-03T16:53:52.683", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The Batch Manager component of Piwigo 2.9.2 is vulnerable to SQL Injection via the admin/batch_manager_unit.php element_ids parameter in unit mode. An attacker can exploit this to gain access to the data in a connected MySQL database."}, {"lang": "es", "value": "El componente Batch Manager de Piwigo 2.9.2 es vulnerable a inyecci\u00f3n SQL mediante el par\u00e1metro element_ids en admin/batch_manager_unit.php en modo unit. Un atacante puede explotarlo para obtener acceso a los datos en una base de datos MySQL conectada."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:piwigo:piwigo:2.9.2:*:*:*:*:*:*:*", "matchCriteriaId": "BB83CB5C-D31C-42B7-B011-72AE25409448"}]}]}], "references": [{"url": "https://github.com/Piwigo/Piwigo/commit/f7c8e0a947a857ff5d31dafd03842df41959b84c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Piwigo/Piwigo/issues/825", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/sahildhar/sahildhar.github.io/blob/master/research/reports/Piwigo_2.9.2/Multiple%20SQL%20Injection%20Vulnerabilities%20in%20Piwigo%202.9.2.md", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Piwigo/Piwigo/commit/f7c8e0a947a857ff5d31dafd03842df41959b84c"}}