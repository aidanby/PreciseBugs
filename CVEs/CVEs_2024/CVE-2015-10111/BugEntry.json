{"buggy_code": ["<?php\nfunction watu_exams() {\n\tglobal $wpdb;\n\t\n\tif( isset($_REQUEST['message']) && $_REQUEST['message'] == 'updated') print '<div id=\"message\" class=\"updated fade\"><p>' . __('Test updated', 'watu') . '</p></div>';\n\tif(isset($_REQUEST['message']) && $_REQUEST['message'] == 'fail') print '<div id=\"message\" class=\"updated error\"><p>' . __('Error occured', 'watu') . '</p></div>';\n\tif( isset($_REQUEST['grade']) )  print '<div id=\"message\" class=\"updated fade\"><p>' . $_REQUEST['grade']. '</p></div>';\n\t\n\tif(!empty($_GET['action']) and $_GET['action'] == 'delete') {\n\t\t$wpdb->get_results(\"DELETE FROM \".WATU_EXAMS.\" WHERE ID='$_REQUEST[quiz]'\");\n\t\t$wpdb->get_results(\"DELETE FROM \".WATU_ANSWERS.\" WHERE question_id IN (SELECT ID FROM \".WATU_QUESTIONS.\" WHERE exam_id='$_REQUEST[quiz]')\");\n\t\t$wpdb->get_results(\"DELETE FROM \".WATU_QUESTIONS.\" WHERE exam_id='$_REQUEST[quiz]'\");\n\t\tprint '<div id=\"message\" class=\"updated fade\"><p>' . __('Test deleted', 'watu') . '</p></div>';\n\t}\n\t\n\t// Retrieve the quizzes\n\t\t$exams = $wpdb->get_results(\"SELECT Q.ID,Q.name,Q.added_on,\n\t\t\t(SELECT COUNT(ID) FROM \".WATU_QUESTIONS.\" WHERE exam_id=Q.ID) AS question_count,\n\t\t\t(SELECT COUNT(ID) FROM \".WATU_TAKINGS.\" WHERE exam_id=Q.ID) AS taken\n\t\t\tFROM `\".WATU_EXAMS.\"` AS Q \");\n\t\t\n\t\t// now select all posts that have watu shortcode in them\n\t\t$posts=$wpdb->get_results(\"SELECT * FROM {$wpdb->prefix}posts \n\t\tWHERE post_content LIKE '%[WATU %]%' \n\t\tAND post_status='publish' AND post_title!=''\n\t\tORDER BY post_date DESC\");\t\n\t\t\n\t\t// match posts to exams\n\t\tforeach($exams as $cnt=>$exam) {\n\t\t\tforeach($posts as $post) {\n\t\t\t\tif(strstr($post->post_content,\"[WATU \".$exam->ID.\"]\")) {\n\t\t\t\t\t$exams[$cnt]->post=$post;\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tif(@file_exists(get_stylesheet_directory().'/watu/exams.html.php')) include get_stylesheet_directory().'/watu/exams.html.php';\n\telse include(WATU_PATH . '/views/exams.html.php');\n} \n\nfunction watu_exam() {\n\tglobal $wpdb, $user_ID;\n\t$answer_display = get_option('watu_show_answers');\n\t\n\tif(isset($_POST['submit'])) {\n\t\t// use email output?\n\t\t$_POST['email_output'] = empty($_POST['different_email_output']) ? '' : $_POST['email_output'];\t\t\n\t\t\n\t\tif($_REQUEST['action'] == 'edit') { //Update goes here\n\t\t\t$exam_id = $_REQUEST['quiz'];\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".WATU_EXAMS.\"\n\t\t\t\tSET name=%s, description=%s,final_screen=%s, randomize=%d, single_page=%d, \n\t\t\t\tshow_answers=%d, require_login=%d, notify_admin=%d, randomize_answers=%d,\n\t\t\t\tpull_random=%d, dont_store_data=%d, show_prev_button=%d, \n\t\t\t\tdont_display_question_numbers=%d, require_text_captcha=%d, email_output=%s,\n\t\t\t\tnotify_user=%d, notify_email=%s, take_again=%d, times_to_take=%d   \n\t\t\t\tWHERE ID=%d\", $_POST['name'], $_POST['description'], $_POST['content'], \n\t\t\t\t@$_POST['randomize'], @$_POST['single_page'], @$_POST['show_answers'], \n\t\t\t\t@$_POST['require_login'], @$_POST['notify_admin'], @$_POST['randomize_answers'],\n\t\t\t\t$_POST['pull_random'], @$_POST['dont_store_data'], @$_POST['show_prev_button'], \n\t\t\t\t@$_POST['dont_display_question_numbers'], @$_POST['require_text_captcha'], \n\t\t\t\t$_POST['email_output'], @$_POST['notify_user'], $_POST['notify_email'], \n\t\t\t\t@$_POST['take_again'], $_POST['times_to_take'], $_POST['quiz']));\n\t\t\t\n\t\t\tif(!empty($_POST['auto_publish'])) watu_auto_publish($exam_id);\n\t\t\t$wp_redirect = 'tools.php?page=watu_exams&message=updated';\n\t\t\n\t\t} else {\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO \".WATU_EXAMS.\" \n\t\t\t\t(name, description, final_screen,  added_on, randomize, single_page, show_answers, require_login, \n\t\t\t\tnotify_admin, randomize_answers, pull_random, dont_store_data, show_prev_button, \n\t\t\t\tdont_display_question_numbers, require_text_captcha, email_output, notify_user, \n\t\t\t\tnotify_email, take_again, times_to_take) \n\t\t\t\tVALUES(%s, %s, %s, NOW(), %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %s, %d, %s, %d, %d)\", \n\t\t\t\t$_POST['name'], $_POST['description'], $_POST['content'], @$_POST['randomize'], @$_POST['single_page'], \n\t\t\t\t@$_POST['show_answers'], @$_POST['require_login'], @$_POST['notify_admin'], \n\t\t\t\t@$_POST['randomize_answers'], $_POST['pull_random'], @$_POST['dont_store_data'], \n\t\t\t\t@$_POST['show_prev_button'], @$_POST['dont_display_question_numbers'], \n\t\t\t\t@$_POST['require_text_captcha'], $_POST['email_output'], @$_POST['notify_user'], \n\t\t\t\t$_POST['notify_email'], @$_POST['take_again'], $_POST['times_to_take']));\n\t\t\t$exam_id = $wpdb->insert_id;\n\t\t\tif(!empty($_POST['auto_publish'])) watu_auto_publish($exam_id);\n\t\t\tif($exam_id == 0 ) $wp_redirect = 'tools.php?page=watu_exams&message=fail';\n\t\t\t$wp_redirect = 'admin.php?page=watu_questions&message=new_quiz&quiz='.$exam_id;\n\t\t}\n\t\t\t\t\n\t\t$wp_redirect = admin_url($wp_redirect);\n\t\t\n\t\tdo_action('watu_exam_saved', $exam_id);\n\t\t\n\t\techo \"<meta http-equiv='refresh' content='0;url=$wp_redirect' />\"; \n\t\texit;\n\t}\n\n\t\t\n\t$action = 'new';\n\tif($_REQUEST['action'] == 'edit') $action = 'edit';\n\t\n\t$dquiz = array();\n\t$grades = array();\n\tif($action == 'edit') {\n\t\t$dquiz = $wpdb->get_row($wpdb->prepare(\"SELECT * FROM \".WATU_EXAMS.\" WHERE ID=%d\", $_REQUEST['quiz']));\n\t\t$grades = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_GRADES.\" WHERE  exam_id=%d order by ID \", $_REQUEST['quiz']) );\n\t\t$final_screen = stripslashes($dquiz->final_screen);\n\t} else {\n\t\t$final_screen = __(\"<p>Congratulations - you have completed %%QUIZ_NAME%%.</p>\\n\\n<p>You scored %%POINTS%% points out of %%MAX-POINTS%% points total.</p>\\n\\n<p>Your obtained grade is <b>%%GRADE-TITLE%%</b></p><p>%%GRADE-DESCRIPTION%%</p>\\n\\n<p>Your answers are shown below:<p>%%ANSWERS%%\", 'watu');\n\t}\n\t\n\t// see what is the show_answers to this exam\n\tif(!isset($dquiz->show_answers) or $dquiz->show_answers == 100) $answer_display = $answer_display; // assign the default\n\telse $answer_display = $dquiz->show_answers;\n\t\n\tif(!empty($_GET['quiz'])) {\n\t\t$quiz_id = intval($_GET['quiz']);\n\t\t$is_published = $wpdb->get_var(\"SELECT ID FROM {$wpdb->posts} WHERE post_content LIKE '%[watu \".$quiz_id.\"]%' \n\t\t\t\tAND post_status='publish' AND post_title!=''\");\n\t} \n\telse $is_published = false;\n\t\n\tif(@file_exists(get_stylesheet_directory().'/watu/exam_form.php')) include get_stylesheet_directory().'/watu/exam_form.php';\n\telse include(WATU_PATH . '/views/exam_form.php');\n}\n\n// auto publish quiz in post\n// some data comes directly from the $_POST to save unnecessary DB query\nfunction watu_auto_publish($quiz_id) {\t\n\t$post = array('post_content' => '[WATU '.$quiz_id.']', 'post_name'=> $_POST['name'], \n\t\t'post_title'=>$_POST['name'], 'post_status'=>'publish');\n\twp_insert_post($post);\n}", "<?php\nif(isset($_REQUEST['do']) and $_REQUEST['do']=='show_exam_result' ) $exam_id = $_REQUEST['quiz_id'];\n\nif(!is_singular() and isset($GLOBALS['watu_client_includes_loaded'])) { #If this is in the listing page - and a quiz is already shown, don't show another.\n\tprintf(__(\"Please go to <a href='%s'>%s</a> to view the test\", 'watu'), get_permalink(), get_the_title());\n\treturn false;\n} \n\nglobal $wpdb, $user_ID, $post;\n\n// select exam\n$exam = $wpdb->get_row($wpdb->prepare(\"SELECT * FROM \".WATU_EXAMS.\" WHERE ID=%d\", $exam_id));\nif(empty($exam->ID)) return __('Quiz not found.', 'watu');\n\n// requires login?\nif(!empty($exam->require_login) and !is_user_logged_in()) {\n\t echo \"<p><b>\".sprintf(__('You need to be registered and logged in to take this %s.', 'watu'), __('quiz', 'watu')). \n\t\t      \t\" <a href='\".site_url(\"/wp-login.php?redirect_to=\".urlencode(get_permalink( $post->ID ))).\"'>\".__('Log in', 'watu').\"</a>\";\n\t\t      if(get_option(\"users_can_register\")) {\n\t\t\t\t\t\techo \" \".__('or', 'watu').\" <a href='\".site_url(\"/wp-login.php?watu_register=1&action=register&redirect_to=\".urlencode(get_permalink( $post->ID ))).\"'>\".__('Register', 'watu').\"</a></b>\";        \n\t\t\t\t\t}\n\t\t\t\t\techo \"</p>\";\n\treturn false;\n}\n\n// can re-take?\nif(!empty($exam->require_login) and (empty($exam->take_again) or !empty($exam->times_to_take))) {\n\t$cnt_takings=$wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE exam_id=%d AND user_id=%d\", $exam->ID, $user_ID)); \n\t\t\t\t\n\tif(empty($exam->take_again) and $cnt_takings > 0) {\n\t\tprintf(__(\"Sorry, you can take this %s only once!\", 'watu'), __('quiz', 'watu'));\n\t\treturn false;\n\t}\n\t\n\t// multiple times allowed, but number is specified\t\n\tif($exam->times_to_take and $cnt_takings >= $exam->times_to_take) {\n\t\techo \"<p><b>\";\n\t\tprintf(__(\"Sorry, you can take this quiz only %d times.\", 'watu'), $exam->times_to_take);\n\t\techo \"</b></p>\";\n\t\treturn false;\n\t}\t\t\t\n}\n\n$answer_display = get_option('watu_show_answers');\nif(!isset($exam->show_answers) or $exam->show_answers == 100) $answer_display = $answer_display; // assign the default\nelse $answer_display = $exam->show_answers;\n\n$order_sql = ($exam->randomize or $exam->pull_random) ? \"ORDER BY RAND()\" : \"ORDER BY sort_order, ID\";\n$limit_sql = $exam->pull_random ? $wpdb->prepare(\"LIMIT %d\", $exam->pull_random) : \"\";\n\n$questions = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_QUESTIONS.\" \n\t\tWHERE exam_id=%d $order_sql $limit_sql\", $exam_id));\n$num_questions = sizeof($questions);\t\t\n\n$all_questions = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_QUESTIONS.\" WHERE exam_id=%d \", $exam_id));\n\t\t\nif($questions) {\n\tif(!isset($GLOBALS['watu_client_includes_loaded']) and !isset($_REQUEST['do']) ) {\n\t\t$GLOBALS['watu_client_includes_loaded'] = true; // Make sure that this code is not loaded more than once.\n   }\n\n// text captcha?\nif(!empty($exam->require_text_captcha)) {\t\n\t$text_captcha_html = WatuTextCaptcha :: generate();\n\t$textcaptca_style = $exam->single_page==1?\"\":\"style='display:none;'\";\n\t$text_captcha_html = \"<div id='WatuTextCaptcha' $textcaptca_style>\".$text_captcha_html.\"</div>\";\t\n\t// verify captcha\n\tif(!empty($_POST['do'])) {\n\t\tif(!WatuTextCaptcha :: verify($_POST['watu_text_captcha_question'], $_POST['watu_text_captcha_answer'])) die('WATU_CAPTCHA:::'.__('Wrong answer to the verification question.', 'watu'));\t\n\t}\n}\n\nif(isset($_REQUEST['do']) and $_REQUEST['do']) { // Quiz Reuslts.\n\t$achieved = $max_points = $num_correct = 0;\n\t$result = '';\n\t\n\t// we should reorder the questions in the same way they came from POST because exam might be randomized\t\n\t$_exam = new WatuExam();\n\t$questions = $_exam->reorder_questions($all_questions, $_POST['question_id']);\n\n\tforeach ($questions as $qct => $ques) {\n\t\t$qnum = $qct+1;\n\t\t$question_number = empty($exam->dont_display_question_numbers) ? \"<span class='watu_num'>$qnum. </span>\"  : '';\n\t\t\n\t\t$result .= \"<div class='show-question'>\";\n\t\t$result .= \"<div class='show-question-content'>\". wpautop($question_number . stripslashes($ques->question), false) . \"</div>\";\n\t\t$all_answers = $ques->answers;\n\t\t$correct = false;\n\t\t$class = $textarea_class = 'answer';\n\t\t$result .= \"<ul>\";\n\t\t$ansArr = is_array( @$_REQUEST[\"answer-\" . $ques->ID] )? $_POST[\"answer-\" . $ques->ID] : array();\n\t\tforeach ($all_answers as $ans) {\n\t\t\t$class = 'answer';\n\t\t\t\n\t\t\tlist($points, $correct, $class) = WatuQuestion :: calculate($ques, $ans, $ansArr, $correct, $class);\t\t\n\t\t\tif(strstr($class, 'correct-answer')) $textarea_class = $class;\t\n\t\t\t\n\t\t\t$achieved += $points;\n\t\t\tif($ques->answer_type != 'textarea') $result .= wpautop(\"<li class='$class'><span class='answer'><!--WATUEMAIL\".$class.\"WATUEMAIL-->\" . stripslashes($ans->answer) . \"</span></li>\");\n\t\t}\n\n\t\t// textareas\n\t\tif($ques->answer_type=='textarea' and !empty($_POST[\"answer-\" . $ques->ID][0])) {\n\t\t\tif(!sizeof($all_answers)) $textarea_class = 'correct-answer';\n\t\t\t$result .= wpautop(\"<li class='user-answer $textarea_class'><span class='answer'><!--WATUEMAIL\".$class.\"WATUEMAIL-->\".esc_html(stripslashes($_POST[\"answer-\" . $ques->ID][0])).\"</span></li>\");\n\t\t}\t\t\n\t\t\n\t\t$result .= \"</ul>\";\n\t\tif(($ques->answer_type == 'textarea' and empty($_POST[\"answer-\" . $ques->ID][0])) \n\t\t\tor ($ques->answer_type != 'textarea' and empty($_POST[\"answer-\" . $ques->ID])) ) \n\t\t\t{ $result .= \"<p class='unanswered'>\" . __('Question was not answered', 'watu') . \"</p>\";}\n\t\t\t\n\t\t// answer explanation?\n\t\tif(!empty($ques->feedback)) {\n\t\t\t$result .= \"<div class='show-question-feedback'>\".wpautop(stripslashes($ques->feedback)).\"</div>\";\n\t\t}\t\n\n\t\t$result .= \"</div>\";\n\t\n\t\tif($correct) $num_correct++;\n\t\t$max_points += WatuQuestion :: max_points($ques, $all_answers);\n\t}\n\t\n\t// Find scoring details\n\tif($max_points == 0) $percent = 0;\n\telse $percent = number_format($achieved / $max_points * 100, 2);\n\t\t\t\t\t\t//0-9\t\t\t10-19%,\t \t20-29%, \t30-39%\t\t\t40-49%\n\t$all_rating = array(__('Failed', 'watu'), __('Failed', 'watu'), __('Failed', 'watu'), __('Failed', 'watu'), __('Just Passed', 'watu'),\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100%\t\t\tMore than 100%?!\n\t\t\t\t\t__('Satisfactory', 'watu'), __('Competent', 'watu'), __('Good', 'watu'), __('Very Good', 'watu'), __('Excellent', 'watu'), __('Unbeatable', 'watu'), __('Cheater', 'watu'));\n\t$rate = intval($percent / 10);\n\tif($percent == 100) $rate = 9;\n\tif($achieved == $max_points) $rate = 10;\n\tif($percent>100) $rate = 11;\n\t$rating = @$all_rating[$rate];\n\t\n\t$grade = __('None', 'watu');\n\t$gtitle = $gdescription=\"\";\n\t$g_id = 0;\n\t$allGrades = $wpdb->get_results(\" SELECT * FROM `\".WATU_GRADES.\"` WHERE exam_id=$exam_id \");\n\tif( count($allGrades) ){\n\t\tforeach($allGrades as $grow ) {\n\n\t\t\tif( $grow->gfrom <= $achieved and $achieved <= $grow->gto ) {\n\t\t\t\t$grade = $gtitle = $grow->gtitle;\n\t\t\t\t$gdescription = wpautop(stripslashes($grow->gdescription));\n\t\t\t\t$g_id = $grow->ID;\n\t\t\t\tif(!empty($grow->gdescription)) $grade .= wpautop(stripslashes($grow->gdescription));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t####################### VARIOUS AVERAGE CALCULATIONS (think about placing them in function / method #######################\n\t// calculate averages\n\t$avg_points = $avg_percent = '';\n\tif(strstr($exam->final_screen, '%%AVG-POINTS%%')) {\n\t\t$all_point_rows = $wpdb->get_results($wpdb->prepare(\"SELECT points FROM \".WATU_TAKINGS.\" \n\t\t\tWHERE exam_id=%d\", $exam->ID));\n\t\t$all_points = 0;\n\t\tforeach($all_point_rows as $r) $all_points += $r->points;\t\n\t\t$all_points += $achieved;\t\t\t\n\t\t$avg_points = round($all_points / ($wpdb->num_rows + 1), 1);\n\t}\n\t\n\t// better than what %?\n\t$better_than = '';\n\tif(strstr($exam->final_screen, '%%BETTER-THAN%%')) {\n\t\t// select total completed quizzes\n\t\t$total_takings = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\tWHERE exam_id=%d\", $exam->ID));\t\n\t\t\n\t\t$num_lower = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE exam_id=%d AND points < %f\", $exam->ID, $achieved));\n\t\t\n\t\t$better_than = $total_takings ? round($num_lower * 100 / $total_takings) : 0;\n\t}\n\t####################### END VARIOUS AVERAGE CALCULATIONS #######################\n\t\n\t\n\t$quiz_details = $wpdb->get_row($wpdb->prepare(\"SELECT name,final_screen, description FROM {$wpdb->prefix}watu_master WHERE ID=%d\", $exam_id));\n\n\t$quiz_details->final_screen = str_replace('%%TOTAL%%', '%%MAX-POINTS%%', $quiz_details->final_screen);\n\t$replace_these\t= array('%%SCORE%%', '%%MAX-POINTS%%', '%%PERCENTAGE%%', '%%GRADE%%', '%%RATING%%', '%%CORRECT%%', '%%WRONG_ANSWERS%%', '%%QUIZ_NAME%%',\t'%%DESCRIPTION%%', '%%GRADE-TITLE%%', '%%GRADE-DESCRIPTION%%', '%%POINTS%%', '%%AVG-POINTS%%', '%%BETTER-THAN%%');\n\t$with_these\t\t= array($achieved,\t\t $max_points,\t  $percent,\t\t\t$grade,\t\t $rating,\t\t$num_correct,\t\t\t\t\t$num_questions-$num_correct,\t   stripslashes($quiz_details->name), wpautop(stripslashes($quiz_details->description)), $gtitle, $gdescription, $achieved, $avg_points, $better_than);\n\t\n\t// insert taking\n\t$uid = $user_ID ? $user_ID : 0;\n\tif(empty($exam->dont_store_data)) {\n\t\tif($exam->no_ajax) {\n\t\t\t$taking_id = $wpdb->get_var($wpdb->prepare(\"SELECT ID FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE ip=%s AND user_id=%d AND exam_id=%d AND points=%d AND grade_id=%d AND start_time=%s\",\n\t\t\t\t$_SERVER['REMOTE_ADDR'], $user_ID, $exam->ID, $achieved, $g_id, $_POST['start_time']));\t\t\t\t\n\t\t}\t\t\n\t\tif(empty($taking_id)) {\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO \".WATU_TAKINGS.\" SET exam_id=%d, user_id=%d, ip=%s, date=CURDATE(), \n\t\t\t\tpoints=%d, grade_id=%d, result=%s, snapshot='', start_time=%s\", \n\t\t\t\t$exam_id, $uid, $_SERVER['REMOTE_ADDR'], $achieved, $g_id, $grade, $_POST['start_time']));\n\t\t\t$taking_id = $wpdb->insert_id;\n\t\t}\n\t}\n\telse $taking_id = 0;\t\n\t$GLOBALS['watu_taking_id'] = $taking_id;\n\n\t// Show the results\n\t$output = str_replace($replace_these, $with_these, wpautop(stripslashes($quiz_details->final_screen)));\n\tif(strstr($output, '%%ANSWERS%%')) {\t\t\n\t\t$output = str_replace('%%ANSWERS%%', $result, $output);\n\t}\n\t$final_output = apply_filters(WATU_CONTENT_FILTER, $output);\n\t\n\techo $final_output;\n\t\t\n\t// update snapshot\n\t$wpdb->query($wpdb->prepare(\"UPDATE \".WATU_TAKINGS.\" SET snapshot=%s WHERE ID=%d\", $final_output, $taking_id)); \n\t\n\t// notify admin\t\n\tif(!empty($exam->email_output)) {\n\t\t$email_output = wpautop(stripslashes($exam->email_output));\n\t\t$email_output = str_replace($replace_these, $with_these, $email_output);\n\t\tif(strstr($email_output, '%%ANSWERS%%')) {\t\t\n\t\t\t$email_output = str_replace('%%ANSWERS%%', $result, $email_output);\n\t\t}\n\t\t$email_output = apply_filters(WATU_CONTENT_FILTER, $email_output);\n\t} \n\telse $email_output = $final_output;\n\tif(!empty($exam->notify_admin)) watu_notify($exam, $uid, $email_output);\n\tif(!empty($exam->notify_user)) watu_notify($exam, $uid, $email_output, 'user');\n\t\n\tdo_action('watu_exam_submitted', $taking_id);\n\tif(empty($exam->no_ajax)) exit;// Exit due to ajax call\n\n} else { // Show The Test\n\t$single_page = $exam->single_page;\n\tif(@file_exists(get_stylesheet_directory().'/watu/show_exam.html.php')) include get_stylesheet_directory().'/watu/show_exam.html.php';\n\telse include(WATU_PATH . '/views/show_exam.html.php');\n }\n} // end if $questions", "=== Watu ===\nContributors: prasunsen\nTags: exam, test, quiz, survey, wpmu, multisite, touch, mobile\nRequires at least: 3.3\nTested up to: 4.3.1\nStable tag: trunk\nLicense: GPLv2 or later\n\nCreates exams and quizzes with unlimited number of questions and answers. Assigns grade after the quiz is taken. Moible / touch - friendly.\n\n== License ==\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n== Description ==\n\nCreate exams and quizzes and display the result immediately after the user takes the exam. You can assign grades and point levels for every grade in the exam / quiz. Then assign points to every answer to a question and Watu will figure out the grade based on the total number of points collected.\n\nWatu for WordPress is a light version of <a href=\"http://calendarscripts.info/watupro/\" target=\"_blank\">Watu PRO</a>. Check it if you want to run fully featured exams with data exports, student logins, categories etc.\n\n**This plugin is mobile / touch - friendly.** The quizzes will work on mobile devices and phones. \n\n**Please go to Tools -&gt; Watu Quizzes to start creating quizzes and exams.**\n\n### Features ###\n\n* Creates quizzes and exams\n* Use shortcodes to embed quizzes in posts or pages\n* Single-choice questions\n* Multiple-choice questions\n* Open-end questions (essays)\n* Required questions\n* Grades\n* Shows answers at the end of the quiz or immediately after selection\n* List of users who took exam along with their results\n* Ajax-based loading of the quiz results.\n* Facebook sharing\n* Mobile / touch - friendly\n* Notify admin when someone takes a quiz\n\n### Attention  WordPress Network (Multi Site) Users ###\n\nWhen activating the plugin do it as blog admin and not as network admin.\n\n### Online Demo ###\n\nFeel free to check the [live demo here](http://demo.pimteam.net/wp/?p=12 \"Live demo\"). It should answer most \"pre-download\" questions.\nIf you have more doubts just download the plugin and check out if it works for you. It's free and takes a few seconds to install and activate.\n\n### Troubleshooting ###\n\n**When opening a support thread please provide URL (link) where we can see your problem.**\n\nA very common problem is not being able to submit the quiz, or the quiz does not displays at all. This is usually a fatal javascript error caused by other plugins or your them. If you are technical you can easily find the error yourself by checking the JavaScript error console in Chrome or Firefox. Disable the offending plugin and everything will start working normally.\n\n### Developers API ###\n\nIn order to allow other plugins to integrate better to Watu we have started working on developers API.\nThe following action calls are currently available:\n\n= do_action('watu_exam_submitted', $taking_id)  \nCalled when exam is submitted, passes the taken exam ID \n\n= do_action('watu_exam_saved', $exam_id)\nCalled when you add or edit exam (after submitting the changes). Passes the changed exam ID. \n\n\n== Installation ==\n\nThis section describes how to install the plugin and get it working.\n\n1. Upload the entire folder `watu` to the `/wp-content/plugins/` directory\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Go to \"Watu Settings\" to change the default settings (optional)\n1. Go to \"Watu Quizzes\" under \"Tools\" menu to create your exams, add questions, answers and grades. On the \"manage questions\" page of the created exam page, above the questions table you will see a green text. It shows you the code you need to enter in a post content where you want the exam to appear.\n\n== Frequently Asked Questions ==\n\n= How are grades calculated? =\n\nWatu computes the number of points in total collected by the answers given by the visitor. Then it finds the grade. For example: If you have 2 questions and the correct answers in them give 5 points each, the visitor will collect either 0, or 5 or 10 points at the end. You may decide to define grades \"Failed\" for 0 to 4 points and \"Passed\" for those who collected more than 4 points. In reality you are going to have more questions and answers and some answers may be partly correct which gives you full flexibility in assigning points and managing the grades.\n\n= Can I assign negative points? =\n\nYes. It's even highly recommended for answers to questions that allow multuple answers. If you just assign 0 points to the wrong answers in such question the visitor could check all the checkboxes and collect all the points to that question.\n\n= How do I show the quiz to the visitors of my blog? =\n\nYou need to create a post and embed the exam code. The exam code is shown in the green text above the questions table in \"Manage questions\" page for that exam.\n\n**Please do not place more than one code in one post or page. Only one exam will be shown at a time. If you wish more exams to be displayed, please give links to them!**\n\n= How does it handle user accounts? =\n\nWatu uses the WordPress user registration / login system. So if you want to allow users to register for quizzes simply select \"Require user login\" in the Edit Quiz page and make sure \"Anyone can register\" is selected in your WordPress Settings page.\n\n= Is it compatible with BuddyPress or membership plugins? =\n\nSince it uses the standard WordPress user login system, it is compatible with BuddyPress and all membership plugins that we know about. Of course, some odd membership plugin that uses its own user login system might be incompatible with Watu.\n\n= How to translate the plugin interface in my language =\n\nYou can use the standard WordPress way of translating plugins (via Poedit and .po / .mo files) or use plugin like Loco Translate.\nIf using Poedit, your file names should start with \"watu-\". For example: watu-de_DE.po / watu-de_DE.mo. They should be placed in wp-content/languages/plugins folder.\n\n= Can I override the templates / views without modifying the plugin code? (For advanced users) =\n\nYes. You can create a folder called \"watu\" under your active WP theme folder. Then create a copy of the view file you want to modify, keep the original name, and place it in the \"watu\" folder there. (Do not create \"views\" folder). Then the copy of the template will be used instead of the original one.\n\n== Screenshots ==\n\n1. List of your exams with shortcodes for embedding in posts or pages\n2. The form for creating and editing an exam/test\n3. You can add unlimited number of questions in each exam, and each question can of single-answer, multiple-answer, or open-end type. \n\n== Changelog ==\n\n= Changes in 2.6.7 =\n- Added option to limit the number of logged in user attempts for quizzes that require login.\n- You can specify one or more email addresses that will receive user's results (instead of just using the admin email from your WP Settings page)\n- You can now specify different content for the email sent to you when someone takes a quiz\n- New option lets you to send email to user with their results. If user is not logged in this will generate a required field to enter email on the quiz page.\n- You can specify different email contents of the email sent to user than the contents of the email sent to admin\n- All views /  templates can now be overriden by placing their copy under a folder called \"watu\" in your theme folder.\n- Added option to switch off Ajax submitting for certain quizzes. This is useful if you are embedding javascript via shortcodes from other plugins in the final screen of the quiz as some javascripts won't work when loaded by Ajax.\n\n= Changes in 2.6 =\n- Added optional text-based \"captcha\" to prevent spam bot submissions on quizzes which do not require user login\n- Option to reoder the questions. Of course this takes effect only when you have not chosen \"Randomize questions\" in the quiz settings.\n- Removed the hardcoded text \"your answers are shown below\" and the setting \"display answers at the end of the quiz\". Instead of this use the variable %%ANSWERS%% which gives far more flexibility.\n- Added option to not store takings in the database. Will be useful to save DB space when you have a quiz whose resutls you don't need to know.\n- Added two new variables - %%AVG-POINTS%% and %%BETTER-THAN%% to compare your results to others who completed the quiz\n- Added option to enable previous button\n- Added option to automatically publish the quiz in a post at the time of saving\n- Added question numbers + option to not display them (old quizzes default to it for consistency with the previous behavior)\n- Added social sharing option. Currently supports Facebook sharing. You'll need Facebook app ID.\n- Added Twitter sharing option. As above, use the shortcode [watushare-buttons] to enable all sharing buttons accordingly to your sharing options.\n\n= Changes in 2.5 =\n- Added optional answer explanation / feedback that can be shown along with the correct answers on the quiz \n- Added filter / search on the \"view results\" page\n- Added feature to andomize the answers to the questions. Works together or independent from the question randomization.\n- Added compatibility with WP QuickLaTeX\n- You can now be notified by email when someone takes a quiz\n- Made the quiz more user-friendly by auto-generating a demo quiz for the new users\n- Improvements to open end quesitons: now any special characters are handled and matching is case INSENSITIVE\n- Moved the grades management out of the main quiz form for better user interface, data integrity and rich text editor for the grade descriptions\n- Added \"grade\" filter in the \"View results\" page\n- Added option to pull number of random questions from the quiz \n- Fixed number of wpautop() issues. Now the filter is applied manually only where it's needed\n- Fixed bug with calculating points on open-end question (the bug was caused by the latest \"randomize answers\" feature)\n\n= Changes in 2.4 =\n- Quizzes can now require user login. Depending on whether \"Anyone can register\" is selected in your main settings page, a register link will also be shown when non-logged in user tries to access such quiz\n- You can now use \"the_content\" filter instead of \"watu_content\" to handle nasty problems with plugins like qTranslate. It's not recommended to use this setting unless you have experienced such problems.\n- The full details of the user answers are now recorded and can be seen via popup in the list of results page\n- Added uninstall script and changed the settings regarding deleting data. Now you have to double confirm deleting your exam. This is to avoid accidential data loss.\n- Removed wpframe and other obsolete code\n- Made small change to the display of radio and checkbox questions to allow easier formatting on one line with CSS\n- Fixed for compatibility with 3.8\n- Quiz description, if entered, shows up on top of the quiz\n- Option to delete single taking and delete all submitted data on a quiz\n- Changed current_user_can('administrator') to current_user_can('manage_options') so you can allow a non-administrator role to use the quizzes\n- Open-end questions can also have answers and be matched to them\n- Replaced wpautop in favor of nl2br to avoid adding <p> tags in unexpected places like hidden fields\n- Did some small styling adjustments\n- Fixed the %%MAX_POINTS%% calculation to take into account the quesiton type\n\n= Changes in 2.3 =\n- Export quiz results as CSV file (semicolon delimited)\n- The exam shortcode is now easier to copy \n- Animate back to top when submitting exam, and when clicking \"next\" after long question. This prevents confusion when user has to see the next screen.\n- Fixed bug with \"Question X of Y total\" showing even for single-page quizzes\n- Each exam / quiz has its own setting about how the answers will be shown\n- As many themes started showing the choices under radio buttons or checkboxes, added explicit CSS to keep them on the same line\n- Fixed new bug with missing answers when adding question\n- Fixed bug with skipping \"0\" answers\n- Changed %%TOTAL%% to %%MAX-POINTS%% for clarify and consistency. The old tag will keep working. \n- Further code improvements \n- Tested in multisite\n- Fixed \"headers already sent\" message caused by premature update statement\n\n= Changes in 2.2 = \n- Replaced 'the_content' filter with custom filter to avoid issues with membership plugins\n- Cleanup the root folder from show_exam.php\n- Another method added to the API, see the new docs\n- The answers field changed to TEXT so you can now add long choices/answers to the questions\n- Fixed bug in the list of taken exams\n- Fixed issues with correct/wrong answer calculation\n- Added %%CORRECT%% answers variable to display number of correct answers\n- Watu scripts and CSS are now loaded only when you have exams on the page avoiding unnecessary page overload \n- Other code fixes and improvements\n\n= Changes in 2.1 =\n- Displaying \"Question X of Y\" so the user knows where they are\n- Fixing incompatibility with Paid Membership PRO\n- Shortcodes on the final screen\n- Starting API (Not yet documented)\n- Code fixes and improvements\n\n= Changes in 2.0 =\n- Required questions (optional)\n- A list of users who took an exam along with their results\n- Localization of the strings in the javascript\n- More flexible function to add new DB fields on update\n- Code fixes and improvements\n\n= Changes in 1.9 =\n- Grade title and description are now separated\n- Shortcodes will be executed in questions and final screen\n- Code fixes and improvements\n- Localization issues fixed\n\n= Changes in 1.8 =\n- the exam title links to the post with this exam if exam is already published\n- \"show all questions on single page\" is now configurable for every exam\n- Improving code continued (more to come)\n\n= Changes in 1.7 =\n\n- You can now randomize the questions in a quiz\n- Fixed issues with the DB tables during upgrade\n- Removed more obsolete code, fixed code issues. More on this to come.\n\n= Changes in 1.6 =\n\n- Removed obsolete rich text editor and replaced with wp_editor call\n- Added \"Essay\" (open-end) question \n- Resolved possible Javascript conflicts\n- Internationalization ready - find the .pot file in langs/ folder", "// wrap in object to avoid polluting the javascript namespace\nvar Watu={};\n\nWatu.current_question = 1;\nWatu.total_questions = 0;\nWatu.mode = \"show\";\n\nWatu.isAnswered = function() {\n\tif(jQuery('#questionType' + Watu.current_question).val() == 'textarea') {\n\t\tif(jQuery('.watu-textarea-'+Watu.current_question).val()!='') return true;\n\t\telse return false;\n\t}\n\t\n\tvar answered = false;\n\t\n\tjQuery(\"#question-\" + Watu.current_question + \" .answer\").each(function(i) {\n\t\t\tif(this.checked) {\n\t\t\t\tanswered = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t});\n\t\n\treturn answered;\t\n}\n\nWatu.isRequired = function() {\n\tif(jQuery('#questionType'+ Watu.current_question).attr('class') == 'required') return true;\n\t\n\treturn false;\n}\n\nWatu.checkAnswer = function(e) {\n\tif(!Watu.isAnswered()) {\n\t\tif(Watu.isRequired()) {\n\t\t\talert(watu_i18n.missed_required_question);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// not required, so ask\n\t\tif(!confirm(watu_i18n.nothing_selected)) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nWatu.nextQuestion = function(e, dir) {\n\tdir = dir || 'next'; // next or previous\n\tif(dir == 'next' && !Watu.checkAnswer(e)) return;\n\t\n\t// change the displayed question number\n\tvar numQ = jQuery('#numQ').html();\n\tif(dir == 'next') numQ++;\n\telse numQ--;\t\n\tjQuery('#numQ').html(numQ);\n\n\tjQuery(\"#question-\" + Watu.current_question).hide();\n\tif(dir == 'next') Watu.current_question++;\n\telse Watu.current_question--;\n\tjQuery(\"#question-\" + Watu.current_question).show();\n\t\n\tif(Watu.total_questions <= Watu.current_question) {\n\t\tjQuery(\"#next-question\").hide();\n\t\tjQuery(\"#action-button\").show();\n\t\tif(jQuery('#WatuTextCaptcha').length) jQuery('#WatuTextCaptcha').show();\n\t}\n\telse {\n\t\tjQuery(\"#next-question\").show();\n\t\tif(jQuery('#WatuTextCaptcha').length) jQuery('#WatuTextCaptcha').hide();\n\t}\n\n\t// show / hide prev button if any\n\tif(jQuery('#prev-question').length) {\n\t\tif(Watu.current_question <= 1) jQuery('#prev-question').hide();\n\t\telse jQuery('#prev-question').show();\n\t}\n\t\n\tif(jQuery('body').scrollTop() > 250) {\t\n\t\tjQuery('html, body').animate({\n\t   \t\tscrollTop: jQuery('#watu_quiz').offset().top -100\n\t   }, 100);   \n\t}   \n\n}\n\n// This part is used only if the answers are show on a per question basis.\nWatu.showAnswer = function(e) {\n\tif(!Watu.checkAnswer(e)) return;\n\n\tif(Watu.mode == \"next\") {\n\t\tWatu.mode = \"show\";\n\n\t\tjQuery(\"#question-\" + Watu.current_question).hide();\n\t\tWatu.current_question++;\n\t\tjQuery(\"#question-\" + Watu.current_question).show();\n\n\t\tjQuery(\"#show-answer\").val(watu_i18n.show_answer);\n\t\treturn;\n\t}\n\n\tWatu.mode = \"next\";\n\n\tjQuery(\".php-answer-label.label-\"+Watu.current_question).addClass(\"correct-answer\");\n\tjQuery(\".answer-\"+Watu.current_question).each(function(i) {\n\t\tif(this.checked && this.className.match(/wrong\\-answer/)) {\n\t\t\tvar number = this.id.toString().replace(/\\D/g,\"\");\n\t\t\tif(number) {\n\t\t\t\tjQuery(\"#answer-label-\"+number).addClass(\"user-answer\");\n\t\t\t}\n\t\t}\n\t});\n\n\tif(Watu.total_questions <= Watu.current_question) {\n\t\tjQuery(\"#show-answer\").hide();\n\t\tjQuery(\"#action-button\").show();\n\t} else {\n\t\tjQuery(\"#show-answer\").val(\"Next >\");\n\t}\n}\n\nWatu.submitResult = function(e) {\n\tvar answer_ids = [];\n\tjQuery('#quiz-' + this.exam_id + ' .watu-answer-ids').each(function(index, value){\n\t\tanswer_ids.push(this.value);\n\t});\n\t\n\t// if text captcha is there we have to make sure it's shown\n\tif(jQuery('#WatuTextCaptcha').length && !jQuery('#WatuTextCaptcha').is(':visible')) {\n\t\talert(watu_i18n.complete_text_captcha);\n\t\tjQuery('#WatuTextCaptcha').show();\n\t\treturn false;\n\t}\n \n\tvar data = {action:'watu_submit', 'do': 'show_exam_result', quiz_id: exam_id, \n\t'question_id[]': Watu.qArr, 'answer_ids[]' : answer_ids };\n\t\n\tif(jQuery('#watuTakerEmail').length) {\n\t\tvar emailVal = jQuery('#watuTakerEmail').val();\n\t\tif(emailVal == '' || emailVal.indexOf('@') < 0 || emailVal.indexOf('.') < 1) {\n\t\t\talert(watu_i18n.email_required);\n\t\t\tjQuery('#watuTakerEmail').focus();\n\t\t\treturn false;\n\t\t} \n\t\tdata['watu_taker_email'] = emailVal;\n\t}\n\t\n\tfor(x=0; x<Watu.qArr.length; x++) {\n\t\tif(Watu.singlePage) {\n\t\t\t Watu.current_question = x+1;\n\t\t\t \n\t\t\t if(!Watu.isAnswered() && Watu.isRequired()) {\n\t\t\t \t\talert(watu_i18n.missed_required_question);\n\t\t\t \t\treturn false;\n\t\t\t }\n\t\t}\t\t\n\t\t\n    // qArr[x] is the question ID\n\t\tvar ansgroup = '.answerof-'+Watu.qArr[x];\n\t\tvar fieldName = 'answer-'+Watu.qArr[x];\n\t\tvar ansvalues= Array();\n\t\tvar i=0;\n        \n\t    if(jQuery('#textarea_q_'+Watu.qArr[x]).length>0) {\n\t        // open end question\n\t        ansvalues[0]=jQuery('#textarea_q_'+Watu.qArr[x]).val();\n\t    } \n\t    else {\n\t        jQuery(ansgroup).each(function(){\n\t\t\t\t\t\tif( jQuery(this).is(':checked') ) {\n\t\t\t\t\t\t\tansvalues[i] = this.value;\n\t\t\t\t\t\t\ti++;\n\t  \t\t\t}\n\t  \t\t});    \n\t    }\n\t\t\n\t\tdata[fieldName+'[]'] = ansvalues;\n\t}\n\t\n\tdata['post_id'] = Watu.post_id;\n\t\n\t// no ajax? In this case only return true to allow submitting the form\t\n\tif(e && e.no_ajax && e.no_ajax.value == 1) return true;\t\n\t\n\t// if question captcha is available, add to data\n\tif(jQuery('#WatuTextCaptcha').length>0) {\n\t\tjQuery('#quiz-'+Watu.exam_id).show();\n\t\tdata['watu_text_captcha_answer'] = jQuery('#quiz-' + Watu.exam_id + ' input[name=watu_text_captcha_answer]').val();\n\t\tdata['watu_text_captcha_question'] = jQuery('#quiz-' + Watu.exam_id + ' input[name=watu_text_captcha_question]').val();\n\t}\n\t\n\tjQuery('html, body').animate({\n   \t\tscrollTop: jQuery('#watu_quiz').offset().top - 50\n   \t}, 1000); \n\t\n\t//jQuery('#watu_quiz').html(\"<p>Loading...</p>\");\n    \n\t//var v=''; for(a in data) v+=data[a]+'\\n'; alert(v);\n\t// don't do ajax call if no_ajax\n\tif(!e || !e.no_ajax || e.no_ajax.value != 1) {\n\t\ttry{\n\t\t\tjQuery.ajax({ type: 'POST', url: watuURL, data: data, success: Watu.success, error: Watu.error  });\n\t\t} catch(e) { alert(e) }\n\t}\n}\n\nWatu.takingDetails = function(id, adminURL) {\n\tadminURL = adminURL || \"\";\n\ttb_show(\"Taking Details\", adminURL + \"admin-ajax.php?action=watu_taking_details&id=\"+id, adminURL + \"admin-ajax.php\");\n}\n\nWatu.success = function(r){\n\t// first check for recaptcha error, if yes, do not replace the HTML\n\t // but display the error in alert and return false;\n\t if(r.indexOf('WATU_CAPTCHA:::')>-1) {\n\t \t\tparts = r.split(\":::\");\n\t \t\talert(parts[1]);\n\t \t\tjQuery(\"#action-button\").val(watu_i18n.try_again);\n\t\t\tjQuery(\"#action-button\").removeAttr(\"disabled\");\n\t \t\treturn false;\n\t } \n\tjQuery('#watu_quiz').html(r);\n}\nWatu.error = function(){ jQuery('#watu_quiz').html('Error Occured');}\n\nWatu.initWatu = function() {\n\tjQuery(\"#question-1\").show();\n\tWatu.total_questions = jQuery(\".watu-question\").length;\n\n\tif(Watu.total_questions == 1) {\n\t\tjQuery(\"#action-button\").show();\n\t\tjQuery(\"#next-question\").hide();\n\t\tjQuery(\"#show-answer\").hide();\n\n\t} else {\n\t\tjQuery(\"#next-question\").click(Watu.nextQuestion);\n\t\tjQuery(\"#show-answer\").click(Watu.showAnswer);\n\t}\n\tif(!Watu.singlePage) jQuery(\"#action-button\").click(Watu.nextQuestion);\n}\n\njQuery(document).ready(Watu.initWatu);\n", "<div id=\"watu_quiz\" class=\"quiz-area <?php if($single_page) echo 'single-page-quiz'; ?>\">\n<?php if(!empty($exam->description)):?><p><?php echo apply_filters(WATU_CONTENT_FILTER,wpautop(stripslashes($exam->description)));?></p><?php endif;?>\n<form action=\"\" method=\"post\" class=\"quiz-form\" id=\"quiz-<?php echo $exam_id?>\" <?php if(!empty($exam->no_ajax)):?>onsubmit=\"return Watu.submitResult(this)\"<?php endif;?>>\n<?php\nif(!empty($exam->notify_user) and empty($user_ID)):?>\n\t<p class=\"watu_taker_email\"><?php _e('Please enter your email:', 'watu')?> <input type=\"text\" name=\"watu_taker_email\" id=\"watuTakerEmail\"></p>\n<?php\nendif; // end showing enter email field\n$question_count = 1;\n$question_ids = '';\n$output = $answer_class = '';\n$answers_orderby = empty($exam->randomize_answers) ? 'sort_order, ID' : 'RAND()';\nforeach ($questions as $qct => $ques) {\n\t$qnum = $qct+1;\n\t$question_number = empty($exam->dont_display_question_numbers) ? \"<span class='watu_num'>$qnum. </span>\"  : '';\n\t\t\n\t$output .= \"<div class='watu-question' id='question-$question_count'>\";\n\t$output .= \"<div class='question-content'>\". wpautop($question_number .  stripslashes($ques->question)) . \"</div>\";\n\t$output .= \"<input type='hidden' name='question_id[]' value='{$ques->ID}' />\";\n\t$question_ids .= $ques->ID.',';\n\t$dans = $wpdb->get_results(\"SELECT ID,answer,correct FROM \".WATU_ANSWERS.\" \n\t\tWHERE question_id={$ques->ID} ORDER BY $answers_orderby\");\n\t$ans_type = $ques->answer_type;\n\t\n\t// display textarea\n\tif($ans_type=='textarea') {\n\t\t$output .= \"<textarea name='answer-{$ques->ID}[]' rows='5' cols='40' id='textarea_q_{$ques->ID}' class='watu-textarea-$question_count'></textarea>\"; \n\t}\t\n\t\n\tforeach ($dans as $ans) {\n\t\t// add this to track the order\t\t\n\t\t$output .= \"<input type='hidden' name='answer_ids[]' class='watu-answer-ids' value='{$ans->ID}' />\";\n\t\t\n\t\tif($ques->answer_type == 'textarea') continue;\n\t\t\n\t\tif($answer_display == 2) {\n\t\t\t$answer_class = 'js-answer-label';\n\t\t\tif($ans->correct) $answer_class = 'php-answer-label';\n\t\t}\n\t\t$output .= wpautop(\"<div><input type='$ans_type' name='answer-{$ques->ID}[]' id='answer-id-{$ans->ID}' class='answer answer-$question_count $answer_class answerof-{$ques->ID}' value='{$ans->ID}' />&nbsp;<label for='answer-id-{$ans->ID}' id='answer-label-{$ans->ID}' class='$answer_class answer label-$question_count'><span>\" . stripslashes($ans->answer) . \"</span></label></div>\");\n\t}\n\n\t$output .= \"<input type='hidden' id='questionType\".$question_count.\"' value='{$ques->answer_type}' class='\".($ques->is_required?'required':'').\"'>\";\n\t$output .= \"</div>\";\n\t$question_count++;\n}\n$output .= \"<div style='display:none' id='question-$question_count'>\";\n$output .= \"<br /><div class='question-content'><img src=\\\"\".plugins_url('watu/loading.gif').\"\\\" width=\\\"16\\\" height=\\\"16\\\" alt=\\\"\".__('Loading', 'watu').\" ...\\\" title=\\\"\".__('Loading', 'watu').\" ...\\\" />&nbsp;\".__('Loading', 'watu').\" ...</div>\";\n$output .= \"</div>\";\necho apply_filters(WATU_CONTENT_FILTER,$output);\n$question_ids = preg_replace('/,$/', '', $question_ids );\necho @$text_captcha_html;\n?><br />\n<?php \nif($answer_display == 2 and $single_page != 1) : ?>\n<input type=\"button\" id=\"show-answer\" value=\"<?php _e('Show Answer', 'watu') ?>\"  /><br />\n<?php endif;\nif($single_page != 1 and $answer_display!=2): ?>\n\t<p><?php _e('Question', 'watu')?> <span id='numQ'>1</span> <?php _e('of', 'watu')?> <?php echo $num_questions;?></p>\n\t<?php if($exam->show_prev_button):?>\n\t\t<input type=\"button\" id=\"prev-question\" value=\"&lt; <?php _e('Previous', 'watu') ?>\" onclick=\"Watu.nextQuestion(event, 'prev');\" style=\"display:none;\" />\n\t<?php endif;?>\n\t<input type=\"button\" id=\"next-question\" value=\"<?php _e('Next', 'watu') ?> &gt;\"  />\n<?php endif; ?>\n<?php if(empty($exam->no_ajax)):?><input type=\"button\" name=\"action\" onclick=\"Watu.submitResult()\" id=\"action-button\" value=\"<?php _e('Show Results', 'watu') ?>\"  />\n<?php else:?>\n\t<input type=\"submit\" name=\"submit_no_ajax\" id=\"action-button\" value=\"<?php _e('Submit', 'watu') ?>\" />\n<?php endif;?>\n<input type=\"hidden\" name=\"no_ajax\" value=\"<?php echo $exam->no_ajax?>\"><?php if(!empty($exam->no_ajax)):?>\n<input type=\"hidden\" name=\"do\" value=\"show_exam_result\">\n<input type=\"hidden\" name=\"post_id\" value=\"<?php echo $post->ID?>\">\n<?php endif; // end if(!empty($exam->no_ajax))?>\n<input type=\"hidden\" name=\"quiz_id\" value=\"<?php echo $exam_id ?>\" />\n<input type=\"hidden\" name=\"start_time\" value=\"<?php echo current_time('mysql'); ?>\" />\n</form>\n</div>\n<script type=\"text/javascript\">\nvar exam_id=0;\nvar question_ids='';\nvar watuURL='';\njQuery(function($){\nquestion_ids = \"<?php print $question_ids ?>\";\nexam_id = <?php print $exam_id ?>;\nWatu.exam_id = exam_id;\nWatu.qArr = question_ids.split(',');\nWatu.post_id = <?php echo $post->ID ?>;\nWatu.singlePage = '<?php echo $exam->single_page?>';\nwatuURL = \"<?php echo admin_url( 'admin-ajax.php' ); ?>\";\n});\n</script>", "<?php\r\n/*\r\nPlugin Name: Watu\r\nPlugin URI: http://calendarscripts.info/watu-wordpress.html\r\nDescription: Create exams and quizzes and display the result immediately after the user takes the exam. Watu for Wordpress is a light version of <a href=\"http://calendarscripts.info/watupro/\" target=\"_blank\">WatuPRO</a>. Check it if you want to run fully featured exams with data exports, student logins, timers, random questions and more. Free support and upgrades are available. Go to <a href=\"options-general.php?page=watu.php\">Watu Settings</a> or <a href=\"tools.php?page=watu_exams\">Manage Your Exams</a> \r\n\r\nVersion: 2.6.7\r\nAuthor: Kiboko Labs\r\nLicense: GPLv2 or later\r\n\r\nThis program is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU General Public License\r\nas published by the Free Software Foundation; either version 2\r\nof the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\ndefine( 'WATU_PATH', dirname( __FILE__ ) );\ndefine( 'WATU_URL', plugin_dir_url( __FILE__ ));\r\ninclude( WATU_PATH.'/controllers/exam.php');\r\ninclude( WATU_PATH.'/controllers/questions.php');\r\ninclude( WATU_PATH.'/controllers/takings.php');\r\ninclude( WATU_PATH.'/controllers/ajax.php');\ninclude( WATU_PATH.'/controllers/grades.php');\ninclude( WATU_PATH.'/controllers/social-sharing.php');\ninclude( WATU_PATH.'/models/question.php');\ninclude( WATU_PATH.'/lib/functions.php');\ninclude( WATU_PATH.'/lib/text-captcha.php');\ninclude( WATU_PATH.\"/models/exam.php\");\r\n\r\nfunction watu_init() {\r\n\tglobal $wpdb;\r\n\tload_plugin_textdomain('watu', false, dirname( plugin_basename( __FILE__ )).'/langs/' );\n\t\n\t$version = get_bloginfo('version');\n\tif($version <= 3.3) add_action('wp_enqueue_scripts', 'watu_vc_scripts');\r\n\tadd_action('admin_enqueue_scripts', 'watu_vc_scripts');\n\tadd_action('wp_enqueue_scripts', 'watu_vc_jquery');\t\n\t\n\tadd_shortcode( 'WATU', 'watu_shortcode' );\n\tadd_shortcode( 'watu', 'watu_shortcode' );\n\tadd_shortcode( 'watushare-buttons', array('WatuSharing', 'display') );\r\n\t\r\n\t// table names as constants\r\n\tdefine('WATU_EXAMS', $wpdb->prefix.'watu_master');\t\r\n\tdefine('WATU_QUESTIONS', $wpdb->prefix.'watu_question');\r\n\tdefine('WATU_ANSWERS', $wpdb->prefix.'watu_answer');\r\n\tdefine('WATU_GRADES', $wpdb->prefix.'watu_grading');\r\n\tdefine('WATU_TAKINGS', $wpdb->prefix.'watu_takings');\n\t\n\t// which filter to use\n\t$content_filter = get_option('watu_use_the_content') ? 'the_content' : 'watu_content';\n\tdefine('WATU_CONTENT_FILTER', $content_filter);\r\n\t\r\n\t// add_filter( 'watu_content', 'watu_autop' );\t\r\n\tadd_filter( 'watu_content', 'wptexturize' );\r\n\tadd_filter( 'watu_content', 'convert_smilies' );\r\n\tadd_filter( 'watu_content', 'convert_chars' );\r\n\tadd_filter( 'watu_content', 'shortcode_unautop' );\r\n\tadd_filter( 'watu_content', 'do_shortcode' );\t\n\t\n\t// Compatibility with specific plugins\n\t// qTranslate\n\tif(function_exists('qtrans_useCurrentLanguageIfNotFoundUseDefaultLanguage')) add_filter('watu_content', 'qtrans_useCurrentLanguageIfNotFoundUseDefaultLanguage');\t\n\t// WP QuickLaTeX\n\tif(function_exists('quicklatex_parser')) add_filter( 'watu_content',  'quicklatex_parser', 7);\n\t\n\t$version = get_option('watu_version');\n\tif($version != '2.58') watu_activate(true);\n\t\n\tadd_action('admin_notices', 'watu_admin_notice');\r\n}\r\n\r\nfunction watu_autop($content) {\r\n\t//return wpautop($content, false);\n\treturn nl2br($content);\r\n}\r\n\r\n/**\r\n * Add a new menu under Manage, visible for all users with template viewing level.\r\n */\r\nadd_action( 'admin_menu', 'watu_add_menu_links' );\r\nadd_action ( 'watu_exam', 'watu_exam' );\r\nfunction watu_add_menu_links() {\r\n\tglobal $wp_version, $_registered_pages;\r\n\t$view_level= 'manage_options';\r\n\t$page = 'tools.php';\r\n\t//add_menu_page('Watu Settings Page', 'Watu Settings', $view_level, 'watu', 'watu_options');\t$page = 'watu';\r\n\t\r\n\tadd_submenu_page($page, __('Manage Quizzes', 'watu'), __('Watu Quizzes', 'watu'), $view_level , 'watu_exams', 'watu_exams');\r\n\t\r\n\t// hidden pages\r\n\tadd_submenu_page(NULL, __('Manage Quizzes', 'watu'), __('Watu Quizzes', 'watu'), $view_level , 'watu_exam', 'watu_exam');\r\n\tadd_submenu_page(NULL, __('Manage Questions', 'watu'), __('Manage Questions', 'watu'), $view_level , 'watu_questions', 'watu_questions');\n\tadd_submenu_page(NULL, __('Add/Edit Question', 'watu'), __('Add/Edit Question', 'watu'), $view_level , 'watu_question', 'watu_question');\n\tadd_submenu_page(NULL, __('Manage Grades', 'watu'), __('Manage Grades', 'watu'), $view_level , 'watu_grades', 'watu_grades');\n\tadd_submenu_page(NULL, __('Social Sharing', 'watu'), __('Social Sharing', 'watu'), $view_level , 'watu_social_sharing', array('WatuSharing', 'options'));\r\n\t\r\n\t$code_pages = array('question_form.php');\r\n\tforeach($code_pages as $code_page) {\r\n\t\t$hookname = get_plugin_page_hookname(\"watu/$code_page\", '' );\r\n\t\t$_registered_pages[$hookname] = true;\r\n\t}\r\n}\r\n\r\n/// Add an option page for watu\r\nadd_action('admin_menu', 'watu_option_page');\r\nfunction watu_option_page() {\r\n\tadd_options_page(__('Watu Settings', 'watu'), __('Watu Settings', 'watu'), 'administrator', basename(__FILE__), 'watu_options');\r\n\t\r\n\tadd_submenu_page(NULL, __('Exam submissions', 'watu'), __('Exam submissions', 'watu'), 'manage_options', 'watu_takings', 'watu_takings'); \r\n}\r\n\r\nfunction watu_options() {\r\n\tif ( function_exists('current_user_can') && !current_user_can('manage_options') ) die(__(\"Your are not allowed to to perform this operation\", 'watu'));\r\n\tif (! user_can_access_admin_page()) wp_die( __('You do not have sufficient permissions to access this page', 'watu') );\r\n\r\n\trequire(ABSPATH. '/wp-content/plugins/watu/options.php');\r\n}\r\n\r\n/**\r\n * This will scan all the content pages that wordpress outputs for our special code. If the code is found, it will replace the requested quiz.\r\n */\r\nfunction watu_shortcode( $attr ) {\r\n\t$exam_id = $attr[0];\r\n\r\n\t$contents = '';\r\n\tif(!is_numeric($exam_id)) return $contents;\n\t\n\twatu_vc_scripts();\n\t\n\t// submitting without ajax?\t\n\tif(!empty($_POST['no_ajax']) and !empty($exam->no_ajax)) {\t\t\n\t\trequire(WATU_PATH.\"/show_exam.php\");\n\t\t$contents = ob_get_clean();\n\t\t$contents = apply_filters('watu_content', $contents);\n\t\treturn $contents;\n\t}\t\n\t\r\n\tob_start();\r\n\tinclude(WATU_PATH . '/controllers/show_exam.php');\r\n\t$contents = ob_get_contents();\r\n\tob_end_clean();\r\n\t\r\n\treturn $contents;\r\n}\r\n\r\nadd_action('activate_watu/watu.php','watu_activate');\r\nfunction watu_activate($update = false) {\r\n\tglobal $wpdb;\n\t\n\t$wpdb-> show_errors();\n\t$version = get_option('watu_version');\n\tif(!$update) watu_init();\r\n\t\r\n\t// Initial options.\r\n\tupdate_option('watu_show_answers', 1);\r\n\tupdate_option('watu_single_page', 0);\r\n\tupdate_option('watu_answer_type', 'radio');\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_EXAMS.\"'\") != WATU_EXAMS) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_EXAMS.\"`(\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\tname varchar(50) NOT NULL DEFAULT '',\r\n\t\t\t\t\tdescription mediumtext NOT NULL,\r\n\t\t\t\t\tfinal_screen mediumtext NOT NULL,\r\n\t\t\t\t\tadded_on datetime NOT NULL DEFAULT '1900-01-01',\r\n\t\t\t\t\tPRIMARY KEY  (ID)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8 \";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_QUESTIONS.\"'\") != WATU_QUESTIONS) {\r\n\t\t$sql = \"CREATE TABLE \".WATU_QUESTIONS.\" (\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\texam_id int(11) unsigned NOT NULL DEFAULT 0,\r\n\t\t\t\t\tquestion mediumtext NOT NULL,\r\n\t\t\t\t\tanswer_type char(15)  NOT NULL DEFAULT '',\r\n\t\t\t\t\tsort_order int(3) NOT NULL default 0,\r\n\t\t\t\t\tPRIMARY KEY  (ID),\r\n\t\t\t\t\tKEY quiz_id (exam_id)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_ANSWERS.\"'\") != WATU_ANSWERS) {\r\n\t\t$sql = \"CREATE TABLE \".WATU_ANSWERS.\" (\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\tquestion_id int(11) unsigned NOT NULL,\r\n\t\t\t\t\tanswer TEXT,\r\n\t\t\t\t\tcorrect enum('0','1') NOT NULL default '0',\r\n\t\t\t\t\tpoint int(11) NOT NULL,\r\n\t\t\t\t\tsort_order int(3) NOT NULL default 0,\r\n\t\t\t\t\tPRIMARY KEY  (ID)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\t\t\t\r\n\t\t\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_GRADES.\"'\") != WATU_GRADES) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_GRADES.\"` (\r\n\t\t\t\t `ID` int(11) NOT NULL AUTO_INCREMENT,\r\n\t\t\t\t `exam_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `gtitle` varchar (255) NOT NULL DEFAULT '',\r\n\t\t\t\t `gdescription` mediumtext NOT NULL,\r\n\t\t\t\t `gfrom` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `gto` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t PRIMARY KEY (`ID`)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\t\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_TAKINGS.\"'\") != WATU_TAKINGS) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_TAKINGS.\"` (\r\n\t\t\t\t `ID` int(11) NOT NULL AUTO_INCREMENT,\r\n\t\t\t\t `exam_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `user_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `ip` varchar(20) NOT NULL DEFAULT '',\r\n\t\t\t\t `date` DATE NOT NULL DEFAULT '1900-01-01',\r\n\t\t\t\t `points` INT NOT NULL DEFAULT 0,\r\n\t\t\t\t `grade_id` INT UNSIGNED NOT NULL DEFAULT 0,\r\n\t\t\t\t PRIMARY KEY (`ID`)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"randomize\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\t\t\r\n\t\tarray(\"name\"=>\"single_page\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"show_answers\", \"type\"=>\"TINYINT NOT NULL DEFAULT 100\"),\n\t\tarray(\"name\"=>\"require_login\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"notify_admin\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"randomize_answers\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"pull_random\", \"type\"=>\"INT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"dont_store_data\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"show_prev_button\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"dont_display_question_numbers\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"require_text_captcha\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"email_output\", \"type\"=>\"TEXT\"),\n\t\tarray(\"name\"=>\"notify_user\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"notify_email\", \"type\"=>\"VARCHAR(255) NOT NULL DEFAULT ''\"),\n\t\tarray(\"name\"=>\"take_again\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"times_to_take\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"no_ajax\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"), /* don't use Ajax when submitting this quiz */\r\n\t), WATU_EXAMS);\t\n\t\n\t\r\n\t// db updates in 1.8\r\n\tif(empty($version) or $version < 1.8) {\r\n\t\t // let all existing exams follow the default option\r\n\t\t $sql = \"UPDATE \".WATU_EXAMS.\" SET single_page = '\".get_option('watu_single_page').\"'\";\r\n\t\t $wpdb->query($sql);\r\n\t}\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"is_required\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"feedback\", \"type\"=>\"TEXT\")\t\r\n\t), WATU_QUESTIONS);\t\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"result\", \"type\"=>\"TEXT\"),\n\t\tarray(\"name\"=>\"snapshot\", \"type\"=>\"MEDIUMTEXT\"),\n\t\tarray(\"name\"=>\"start_time\", \"type\"=>\"DATETIME\")\r\n\t), WATU_TAKINGS);\t\t\t\n\t\n\t// let's change choice and answer fields to TEXT instead of VARCHAR - 2.1.3\t\n\tif(empty($version) or $version < 2.1) {\r\n\t\t // let all existing exams follow the default option\r\n\t\t $sql = \"ALTER TABLE \".WATU_ANSWERS.\" CHANGE answer answer TEXT\";\r\n\t\t $wpdb->query($sql);\r\n\t}\t\n\t\n\t$demo_quiz_created = get_option('watu_demo_quiz_created');\n\tif($demo_quiz_created != '1') WatuExam :: create_demo();\n\t\n\t// versions before 2.44 had the following text hard-coded. We need to make sure thta the quizzes which were showing results\n\t// now have it in the \"final screen\"\n\tif(!empty($version) and $version < 2.45) {\n\t\t$answers_text = \"<p>\" . __('All the questions in the quiz along with their answers are shown below. Your answers are bolded. The correct answers have a green background while the incorrect ones have a red background.', 'watu') . \"</p> %%ANSWERS%%\";\n\t\t$wpdb->query(\"UPDATE \".WATU_EXAMS.\" SET final_screen = CONCAT(final_screen, '$answers_text') WHERE show_answers=1\");\n\t}\n\t\n\t// let all quizzes prior to DB version 2.49 have dont_display_question_numbers = 1 because this is how it was\n\tif(!empty($version) and $version < 2.49) {\n\t\t$wpdb->query(\"UPDATE \".WATU_EXAMS.\" SET dont_display_question_numbers=1\");\n\t}\n\t\n\t// let's make all \"require_login\" quizzes created previously to have take_again=1 to avoid sudden change\n\tif(!empty($version) and $version  < 2.56)  {\n\t\t$wpdb->query(\"UPDATE \".WATU_MASTER.\" SET take_again=1 WHERE require_login=1\");\n\t}\r\n\t\t\t\t\t\t\r\n\tupdate_option( \"watu_delete_db\", '' );\t\n\tupdate_option( \"watu_version\", '2.58' );\n\t\n\tupdate_option('watu_admin_notice', __('<h2>Thank you for activating Watu!</h2> <p>Please go to your <a href=\"tools.php?page=watu_exams\">Quizzes page</a> to get started! If this is the first time you have activated the plugin there will be a small demo quiz automatically created for you. Feel free to explore it to get better idea how things work.</p>', 'watu'));\r\n}\n\nfunction watu_admin_notice() {\n\t\t$notice = get_option('watu_admin_notice');\n\t\tif(!empty($notice)) {\n\t\t\techo \"<div class='updated'>\".stripslashes($notice).\"</div>\";\n\t\t}\n\t\t// once shown, cleanup\n\t\tupdate_option('watu_admin_notice', '');\n}\n\r\nfunction watu_vc_scripts() {\r\n     wp_enqueue_script('jquery');\t\r\n\t\t  \r\n      wp_enqueue_style(\r\n\t\t\t'watu-style',\r\n\t\t\tWATU_URL.'style.css',\r\n\t\t\tarray(),\r\n\t\t\t'2.2.0'\r\n\t\t);\r\n\t\t\r\n\t\twp_enqueue_script(\r\n\t\t\t'watu-script',\r\n\t\t\tWATU_URL.'script.js',\r\n\t\t\tarray(),\r\n\t\t\t'2.3.2'\r\n\t\t);\r\n\t\t\r\n\t\t$translation_array = array(\r\n\t\t\t'missed_required_question' => __('You have missed to answer a required question', 'watu'),\r\n\t\t\t'nothing_selected' => __('You did not select any answer. Are you sure you want to continue?', 'watu'),\r\n\t\t\t'show_answer' => __('Show Answer', 'watu'),\n\t\t\t'complete_text_captcha' => __('You need to answer the verification question', 'watu'),\n\t\t\t'try_again' => __('Try again', 'watu'),\n\t\t\t'email_required' => __('Valid email address is required.', 'watu'),\r\n\t\t\t);\t\r\n\t\twp_localize_script( 'watu-script', 'watu_i18n', $translation_array );\t\r\n}\n\nfunction watu_vc_jquery() {\n\twp_enqueue_script('jquery');\n}\r\n\r\n// function to conditionally add DB fields\r\nfunction watu_add_db_fields($fields, $table) {\r\n\t\tglobal $wpdb;\r\n\t\t\r\n\t\t// check fields\r\n\t\t$table_fields = $wpdb->get_results(\"SHOW COLUMNS FROM `$table`\");\r\n\t\t$table_field_names = array();\r\n\t\tforeach($table_fields as $f) $table_field_names[] = $f->Field;\t\t\r\n\t\t$fields_to_add=array();\r\n\t\t\r\n\t\tforeach($fields as $field) {\r\n\t\t\t if(!in_array($field['name'], $table_field_names)) {\r\n\t\t\t \t  $fields_to_add[] = $field;\r\n\t\t\t } \r\n\t\t}\r\n\t\t\r\n\t\t// now if there are fields to add, run the query\r\n\t\tif(!empty($fields_to_add)) {\r\n\t\t\t $sql = \"ALTER TABLE `$table` \";\r\n\t\t\t \r\n\t\t\t foreach($fields_to_add as $cnt => $field) {\r\n\t\t\t \t if($cnt > 0) $sql .= \", \";\r\n\t\t\t \t $sql .= \"ADD $field[name] $field[type]\";\r\n\t\t\t } \r\n\t\t\t \r\n\t\t\t $wpdb->query($sql);\r\n\t\t}\r\n}\r\n\nadd_action('init', 'watu_init');\r\nadd_action('wp_ajax_watu_submit', 'watu_submit');\r\nadd_action('wp_ajax_nopriv_watu_submit', 'watu_submit');\nadd_action('wp_ajax_watu_taking_details', 'watu_taking_details');"], "fixing_code": ["<?php\nfunction watu_exams() {\n\tglobal $wpdb;\n\t\n\tif( isset($_REQUEST['message']) && $_REQUEST['message'] == 'updated') print '<div id=\"message\" class=\"updated fade\"><p>' . __('Test updated', 'watu') . '</p></div>';\n\tif(isset($_REQUEST['message']) && $_REQUEST['message'] == 'fail') print '<div id=\"message\" class=\"updated error\"><p>' . __('Error occured', 'watu') . '</p></div>';\n\tif( isset($_REQUEST['grade']) )  print '<div id=\"message\" class=\"updated fade\"><p>' . $_REQUEST['grade']. '</p></div>';\n\t\n\tif(!empty($_GET['action']) and $_GET['action'] == 'delete') {\n\t\t$wpdb->get_results($wpdb->prepare(\"DELETE FROM \".WATU_EXAMS.\" WHERE ID=%d\", $_REQUEST['quiz']));\n\t\t$wpdb->get_results($wpdb->prepare(\"DELETE FROM \".WATU_ANSWERS.\" WHERE question_id IN (SELECT ID FROM \".WATU_QUESTIONS.\" WHERE exam_id=%d\", $_REQUEST['quiz']));\n\t\t$wpdb->get_results($wpdb->prepare(\"DELETE FROM \".WATU_QUESTIONS.\" WHERE exam_id=%d\", $_REQUEST['quiz']));\n\t\tprint '<div id=\"message\" class=\"updated fade\"><p>' . __('Test deleted', 'watu') . '</p></div>';\n\t}\n\t\n\t// Retrieve the quizzes\n\t\t$exams = $wpdb->get_results(\"SELECT Q.ID,Q.name,Q.added_on,\n\t\t\t(SELECT COUNT(ID) FROM \".WATU_QUESTIONS.\" WHERE exam_id=Q.ID) AS question_count,\n\t\t\t(SELECT COUNT(ID) FROM \".WATU_TAKINGS.\" WHERE exam_id=Q.ID) AS taken\n\t\t\tFROM `\".WATU_EXAMS.\"` AS Q \");\n\t\t\n\t\t// now select all posts that have watu shortcode in them\n\t\t$posts=$wpdb->get_results(\"SELECT * FROM {$wpdb->prefix}posts \n\t\tWHERE post_content LIKE '%[WATU %]%' \n\t\tAND post_status='publish' AND post_title!=''\n\t\tORDER BY post_date DESC\");\t\n\t\t\n\t\t// match posts to exams\n\t\tforeach($exams as $cnt=>$exam) {\n\t\t\tforeach($posts as $post) {\n\t\t\t\tif(strstr($post->post_content,\"[WATU \".$exam->ID.\"]\")) {\n\t\t\t\t\t$exams[$cnt]->post=$post;\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tif(@file_exists(get_stylesheet_directory().'/watu/exams.html.php')) include get_stylesheet_directory().'/watu/exams.html.php';\n\telse include(WATU_PATH . '/views/exams.html.php');\n} \n\nfunction watu_exam() {\n\tglobal $wpdb, $user_ID;\n\t$answer_display = get_option('watu_show_answers');\n\t\n\tif(isset($_POST['submit'])) {\n\t\t// use email output?\n\t\t$_POST['email_output'] = empty($_POST['different_email_output']) ? '' : $_POST['email_output'];\t\t\n\t\t\n\t\tif($_REQUEST['action'] == 'edit') { //Update goes here\n\t\t\t$exam_id = $_REQUEST['quiz'];\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".WATU_EXAMS.\"\n\t\t\t\tSET name=%s, description=%s,final_screen=%s, randomize=%d, single_page=%d, \n\t\t\t\tshow_answers=%d, require_login=%d, notify_admin=%d, randomize_answers=%d,\n\t\t\t\tpull_random=%d, dont_store_data=%d, show_prev_button=%d, \n\t\t\t\tdont_display_question_numbers=%d, require_text_captcha=%d, email_output=%s,\n\t\t\t\tnotify_user=%d, notify_email=%s, take_again=%d, times_to_take=%d   \n\t\t\t\tWHERE ID=%d\", $_POST['name'], $_POST['description'], $_POST['content'], \n\t\t\t\t@$_POST['randomize'], @$_POST['single_page'], @$_POST['show_answers'], \n\t\t\t\t@$_POST['require_login'], @$_POST['notify_admin'], @$_POST['randomize_answers'],\n\t\t\t\t$_POST['pull_random'], @$_POST['dont_store_data'], @$_POST['show_prev_button'], \n\t\t\t\t@$_POST['dont_display_question_numbers'], @$_POST['require_text_captcha'], \n\t\t\t\t$_POST['email_output'], @$_POST['notify_user'], $_POST['notify_email'], \n\t\t\t\t@$_POST['take_again'], $_POST['times_to_take'], $_POST['quiz']));\n\t\t\t\n\t\t\tif(!empty($_POST['auto_publish'])) watu_auto_publish($exam_id);\n\t\t\t$wp_redirect = 'tools.php?page=watu_exams&message=updated';\n\t\t\n\t\t} else {\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO \".WATU_EXAMS.\" \n\t\t\t\t(name, description, final_screen,  added_on, randomize, single_page, show_answers, require_login, \n\t\t\t\tnotify_admin, randomize_answers, pull_random, dont_store_data, show_prev_button, \n\t\t\t\tdont_display_question_numbers, require_text_captcha, email_output, notify_user, \n\t\t\t\tnotify_email, take_again, times_to_take) \n\t\t\t\tVALUES(%s, %s, %s, NOW(), %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %s, %d, %s, %d, %d)\", \n\t\t\t\t$_POST['name'], $_POST['description'], $_POST['content'], @$_POST['randomize'], @$_POST['single_page'], \n\t\t\t\t@$_POST['show_answers'], @$_POST['require_login'], @$_POST['notify_admin'], \n\t\t\t\t@$_POST['randomize_answers'], $_POST['pull_random'], @$_POST['dont_store_data'], \n\t\t\t\t@$_POST['show_prev_button'], @$_POST['dont_display_question_numbers'], \n\t\t\t\t@$_POST['require_text_captcha'], $_POST['email_output'], @$_POST['notify_user'], \n\t\t\t\t$_POST['notify_email'], @$_POST['take_again'], $_POST['times_to_take']));\n\t\t\t$exam_id = $wpdb->insert_id;\n\t\t\tif(!empty($_POST['auto_publish'])) watu_auto_publish($exam_id);\n\t\t\tif($exam_id == 0 ) $wp_redirect = 'tools.php?page=watu_exams&message=fail';\n\t\t\t$wp_redirect = 'admin.php?page=watu_questions&message=new_quiz&quiz='.$exam_id;\n\t\t}\n\t\t\t\t\n\t\t$wp_redirect = admin_url($wp_redirect);\n\t\t\n\t\tdo_action('watu_exam_saved', $exam_id);\n\t\t\n\t\techo \"<meta http-equiv='refresh' content='0;url=$wp_redirect' />\"; \n\t\texit;\n\t}\n\n\t\t\n\t$action = 'new';\n\tif($_REQUEST['action'] == 'edit') $action = 'edit';\n\t\n\t$dquiz = array();\n\t$grades = array();\n\tif($action == 'edit') {\n\t\t$dquiz = $wpdb->get_row($wpdb->prepare(\"SELECT * FROM \".WATU_EXAMS.\" WHERE ID=%d\", $_REQUEST['quiz']));\n\t\t$grades = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_GRADES.\" WHERE  exam_id=%d order by ID \", $_REQUEST['quiz']) );\n\t\t$final_screen = stripslashes($dquiz->final_screen);\n\t} else {\n\t\t$final_screen = __(\"<p>Congratulations - you have completed %%QUIZ_NAME%%.</p>\\n\\n<p>You scored %%POINTS%% points out of %%MAX-POINTS%% points total.</p>\\n\\n<p>Your obtained grade is <b>%%GRADE-TITLE%%</b></p><p>%%GRADE-DESCRIPTION%%</p>\\n\\n<p>Your answers are shown below:<p>%%ANSWERS%%\", 'watu');\n\t}\n\t\n\t// see what is the show_answers to this exam\n\tif(!isset($dquiz->show_answers) or $dquiz->show_answers == 100) $answer_display = $answer_display; // assign the default\n\telse $answer_display = $dquiz->show_answers;\n\t\n\tif(!empty($_GET['quiz'])) {\n\t\t$quiz_id = intval($_GET['quiz']);\n\t\t$is_published = $wpdb->get_var(\"SELECT ID FROM {$wpdb->posts} WHERE post_content LIKE '%[watu \".$quiz_id.\"]%' \n\t\t\t\tAND post_status='publish' AND post_title!=''\");\n\t} \n\telse $is_published = false;\n\t\n\tif(@file_exists(get_stylesheet_directory().'/watu/exam_form.php')) include get_stylesheet_directory().'/watu/exam_form.php';\n\telse include(WATU_PATH . '/views/exam_form.php');\n}\n\n// auto publish quiz in post\n// some data comes directly from the $_POST to save unnecessary DB query\nfunction watu_auto_publish($quiz_id) {\t\n\t$post = array('post_content' => '[WATU '.$quiz_id.']', 'post_name'=> $_POST['name'], \n\t\t'post_title'=>$_POST['name'], 'post_status'=>'publish');\n\twp_insert_post($post);\n}", "<?php\nif(isset($_REQUEST['do']) and $_REQUEST['do']=='show_exam_result' ) $exam_id = $_REQUEST['quiz_id'];\n\nif(!is_singular() and isset($GLOBALS['watu_client_includes_loaded'])) { #If this is in the listing page - and a quiz is already shown, don't show another.\n\tprintf(__(\"Please go to <a href='%s'>%s</a> to view the test\", 'watu'), get_permalink(), get_the_title());\n\treturn false;\n} \n\nglobal $wpdb, $user_ID, $post;\n\n// select exam\n$exam = $wpdb->get_row($wpdb->prepare(\"SELECT * FROM \".WATU_EXAMS.\" WHERE ID=%d\", $exam_id));\nif(empty($exam->ID)) return __('Quiz not found.', 'watu');\n\n// requires login?\nif(!empty($exam->require_login) and !is_user_logged_in()) {\n\t echo \"<p><b>\".sprintf(__('You need to be registered and logged in to take this %s.', 'watu'), __('quiz', 'watu')). \n\t\t      \t\" <a href='\".site_url(\"/wp-login.php?redirect_to=\".urlencode(get_permalink( $post->ID ))).\"'>\".__('Log in', 'watu').\"</a>\";\n\t\t      if(get_option(\"users_can_register\")) {\n\t\t\t\t\t\techo \" \".__('or', 'watu').\" <a href='\".site_url(\"/wp-login.php?watu_register=1&action=register&redirect_to=\".urlencode(get_permalink( $post->ID ))).\"'>\".__('Register', 'watu').\"</a></b>\";        \n\t\t\t\t\t}\n\t\t\t\t\techo \"</p>\";\n\treturn false;\n}\n\n// can re-take?\nif(!empty($exam->require_login) and (empty($exam->take_again) or !empty($exam->times_to_take))) {\n\t$cnt_takings=$wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE exam_id=%d AND user_id=%d\", $exam->ID, $user_ID)); \n\t\t\t\t\n\tif(empty($exam->take_again) and $cnt_takings > 0) {\n\t\tprintf(__(\"Sorry, you can take this %s only once!\", 'watu'), __('quiz', 'watu'));\n\t\treturn false;\n\t}\n\t\n\t// multiple times allowed, but number is specified\t\n\tif($exam->times_to_take and $cnt_takings >= $exam->times_to_take) {\n\t\techo \"<p><b>\";\n\t\tprintf(__(\"Sorry, you can take this quiz only %d times.\", 'watu'), $exam->times_to_take);\n\t\techo \"</b></p>\";\n\t\treturn false;\n\t}\t\t\t\n}\n\n$answer_display = get_option('watu_show_answers');\nif(!isset($exam->show_answers) or $exam->show_answers == 100) $answer_display = $answer_display; // assign the default\nelse $answer_display = $exam->show_answers;\n\n$order_sql = ($exam->randomize or $exam->pull_random) ? \"ORDER BY RAND()\" : \"ORDER BY sort_order, ID\";\n$limit_sql = $exam->pull_random ? $wpdb->prepare(\"LIMIT %d\", $exam->pull_random) : \"\";\n\n$questions = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_QUESTIONS.\" \n\t\tWHERE exam_id=%d $order_sql $limit_sql\", $exam_id));\n$num_questions = sizeof($questions);\t\t\n\n$all_questions = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".WATU_QUESTIONS.\" WHERE exam_id=%d \", $exam_id));\n\t\t\nif($questions) {\n\tif(!isset($GLOBALS['watu_client_includes_loaded']) and !isset($_REQUEST['do']) ) {\n\t\t$GLOBALS['watu_client_includes_loaded'] = true; // Make sure that this code is not loaded more than once.\n   }\n\n// text captcha?\nif(!empty($exam->require_text_captcha)) {\t\n\t$text_captcha_html = WatuTextCaptcha :: generate();\n\t$textcaptca_style = $exam->single_page==1?\"\":\"style='display:none;'\";\n\t$text_captcha_html = \"<div id='WatuTextCaptcha' $textcaptca_style>\".$text_captcha_html.\"</div>\";\t\n\t// verify captcha\n\tif(!empty($_POST['do'])) {\n\t\tif(!WatuTextCaptcha :: verify($_POST['watu_text_captcha_question'], $_POST['watu_text_captcha_answer'])) die('WATU_CAPTCHA:::'.__('Wrong answer to the verification question.', 'watu'));\t\n\t}\n}\n\nif(isset($_REQUEST['do']) and $_REQUEST['do']) { // Quiz Reuslts.\n\t$achieved = $max_points = $num_correct = 0;\n\t$result = '';\n\t\n\t// we should reorder the questions in the same way they came from POST because exam might be randomized\t\n\t$_exam = new WatuExam();\n\t$questions = $_exam->reorder_questions($all_questions, $_POST['question_id']);\n\n\tforeach ($questions as $qct => $ques) {\n\t\t$qnum = $qct+1;\n\t\t$question_number = empty($exam->dont_display_question_numbers) ? \"<span class='watu_num'>$qnum. </span>\"  : '';\n\t\t\n\t\t$result .= \"<div class='show-question'>\";\n\t\t$result .= \"<div class='show-question-content'>\". wpautop($question_number . stripslashes($ques->question), false) . \"</div>\";\n\t\t$all_answers = $ques->answers;\n\t\t$correct = false;\n\t\t$class = $textarea_class = 'answer';\n\t\t$result .= \"<ul>\";\n\t\t$ansArr = is_array( @$_REQUEST[\"answer-\" . $ques->ID] )? $_POST[\"answer-\" . $ques->ID] : array();\n\t\tforeach ($all_answers as $ans) {\n\t\t\t$class = 'answer';\n\t\t\t\n\t\t\tlist($points, $correct, $class) = WatuQuestion :: calculate($ques, $ans, $ansArr, $correct, $class);\t\t\n\t\t\tif(strstr($class, 'correct-answer')) $textarea_class = $class;\t\n\t\t\t\n\t\t\t$achieved += $points;\n\t\t\tif($ques->answer_type != 'textarea') $result .= wpautop(\"<li class='$class'><span class='answer'><!--WATUEMAIL\".$class.\"WATUEMAIL-->\" . stripslashes($ans->answer) . \"</span></li>\");\n\t\t}\n\n\t\t// textareas\n\t\tif($ques->answer_type=='textarea' and !empty($_POST[\"answer-\" . $ques->ID][0])) {\n\t\t\tif(!sizeof($all_answers)) $textarea_class = 'correct-answer';\n\t\t\t$result .= wpautop(\"<li class='user-answer $textarea_class'><span class='answer'><!--WATUEMAIL\".$class.\"WATUEMAIL-->\".esc_html(stripslashes($_POST[\"answer-\" . $ques->ID][0])).\"</span></li>\");\n\t\t}\t\t\n\t\t\n\t\t$result .= \"</ul>\";\n\t\tif(($ques->answer_type == 'textarea' and empty($_POST[\"answer-\" . $ques->ID][0])) \n\t\t\tor ($ques->answer_type != 'textarea' and empty($_POST[\"answer-\" . $ques->ID])) ) \n\t\t\t{ $result .= \"<p class='unanswered'>\" . __('Question was not answered', 'watu') . \"</p>\";}\n\t\t\t\n\t\t// answer explanation?\n\t\tif(!empty($ques->feedback)) {\n\t\t\t$result .= \"<div class='show-question-feedback'>\".wpautop(stripslashes($ques->feedback)).\"</div>\";\n\t\t}\t\n\n\t\t$result .= \"</div>\";\n\t\n\t\tif($correct) $num_correct++;\n\t\t$max_points += WatuQuestion :: max_points($ques, $all_answers);\n\t}\n\t\n\t// Find scoring details\n\tif($max_points == 0) $percent = 0;\n\telse $percent = number_format($achieved / $max_points * 100, 2);\n\t\t\t\t\t\t//0-9\t\t\t10-19%,\t \t20-29%, \t30-39%\t\t\t40-49%\n\t$all_rating = array(__('Failed', 'watu'), __('Failed', 'watu'), __('Failed', 'watu'), __('Failed', 'watu'), __('Just Passed', 'watu'),\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100%\t\t\tMore than 100%?!\n\t\t\t\t\t__('Satisfactory', 'watu'), __('Competent', 'watu'), __('Good', 'watu'), __('Very Good', 'watu'), __('Excellent', 'watu'), __('Unbeatable', 'watu'), __('Cheater', 'watu'));\n\t$rate = intval($percent / 10);\n\tif($percent == 100) $rate = 9;\n\tif($achieved == $max_points) $rate = 10;\n\tif($percent>100) $rate = 11;\n\t$rating = @$all_rating[$rate];\n\t\n\t$grade = __('None', 'watu');\n\t$gtitle = $gdescription=\"\";\n\t$g_id = 0;\n\t$allGrades = $wpdb->get_results(\" SELECT * FROM `\".WATU_GRADES.\"` WHERE exam_id=$exam_id \");\n\tif( count($allGrades) ){\n\t\tforeach($allGrades as $grow ) {\n\n\t\t\tif( $grow->gfrom <= $achieved and $achieved <= $grow->gto ) {\n\t\t\t\t$grade = $gtitle = $grow->gtitle;\n\t\t\t\t$gdescription = wpautop(stripslashes($grow->gdescription));\n\t\t\t\t$g_id = $grow->ID;\n\t\t\t\tif(!empty($grow->gdescription)) $grade .= wpautop(stripslashes($grow->gdescription));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t####################### VARIOUS AVERAGE CALCULATIONS (think about placing them in function / method #######################\n\t// calculate averages\n\t$avg_points = $avg_percent = '';\n\tif(strstr($exam->final_screen, '%%AVG-POINTS%%')) {\n\t\t$all_point_rows = $wpdb->get_results($wpdb->prepare(\"SELECT points FROM \".WATU_TAKINGS.\" \n\t\t\tWHERE exam_id=%d\", $exam->ID));\n\t\t$all_points = 0;\n\t\tforeach($all_point_rows as $r) $all_points += $r->points;\t\n\t\t$all_points += $achieved;\t\t\t\n\t\t$avg_points = round($all_points / ($wpdb->num_rows + 1), 1);\n\t}\n\t\n\t// better than what %?\n\t$better_than = '';\n\tif(strstr($exam->final_screen, '%%BETTER-THAN%%')) {\n\t\t// select total completed quizzes\n\t\t$total_takings = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\tWHERE exam_id=%d\", $exam->ID));\t\n\t\t\n\t\t$num_lower = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE exam_id=%d AND points < %f\", $exam->ID, $achieved));\n\t\t\n\t\t$better_than = $total_takings ? round($num_lower * 100 / $total_takings) : 0;\n\t}\n\t####################### END VARIOUS AVERAGE CALCULATIONS #######################\n\t\n\t\n\t$quiz_details = $wpdb->get_row($wpdb->prepare(\"SELECT name,final_screen, description FROM {$wpdb->prefix}watu_master WHERE ID=%d\", $exam_id));\n\n\t$quiz_details->final_screen = str_replace('%%TOTAL%%', '%%MAX-POINTS%%', $quiz_details->final_screen);\n\t$replace_these\t= array('%%SCORE%%', '%%MAX-POINTS%%', '%%PERCENTAGE%%', '%%GRADE%%', '%%RATING%%', '%%CORRECT%%', '%%WRONG_ANSWERS%%', '%%QUIZ_NAME%%',\t'%%DESCRIPTION%%', '%%GRADE-TITLE%%', '%%GRADE-DESCRIPTION%%', '%%POINTS%%', '%%AVG-POINTS%%', '%%BETTER-THAN%%');\n\t$with_these\t\t= array($achieved,\t\t $max_points,\t  $percent,\t\t\t$grade,\t\t $rating,\t\t$num_correct,\t\t\t\t\t$num_questions-$num_correct,\t   stripslashes($quiz_details->name), wpautop(stripslashes($quiz_details->description)), $gtitle, $gdescription, $achieved, $avg_points, $better_than);\n\t\n\t// insert taking\n\t$uid = $user_ID ? $user_ID : 0;\n\tif(empty($exam->dont_store_data)) {\n\t\tif($exam->no_ajax) {\n\t\t\t$taking_id = $wpdb->get_var($wpdb->prepare(\"SELECT ID FROM \".WATU_TAKINGS.\"\n\t\t\t\tWHERE ip=%s AND user_id=%d AND exam_id=%d AND points=%d AND grade_id=%d AND start_time=%s\",\n\t\t\t\t$_SERVER['REMOTE_ADDR'], $user_ID, $exam->ID, $achieved, $g_id, $_POST['start_time']));\t\t\t\t\n\t\t}\t\t\n\t\tif(empty($taking_id)) {\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO \".WATU_TAKINGS.\" SET exam_id=%d, user_id=%d, ip=%s, date=CURDATE(), \n\t\t\t\tpoints=%d, grade_id=%d, result=%s, snapshot='', start_time=%s\", \n\t\t\t\t$exam_id, $uid, $_SERVER['REMOTE_ADDR'], $achieved, $g_id, $grade, @$_POST['start_time']));\n\t\t\t$taking_id = $wpdb->insert_id;\n\t\t}\n\t}\n\telse $taking_id = 0;\t\n\t$GLOBALS['watu_taking_id'] = $taking_id;\n\n\t// Show the results\n\t$output = str_replace($replace_these, $with_these, wpautop(stripslashes($quiz_details->final_screen)));\n\tif(strstr($output, '%%ANSWERS%%')) {\t\t\n\t\t$output = str_replace('%%ANSWERS%%', $result, $output);\n\t}\n\t$final_output = apply_filters(WATU_CONTENT_FILTER, $output);\n\t\n\techo $final_output;\n\t\t\n\t// update snapshot\n\t$wpdb->query($wpdb->prepare(\"UPDATE \".WATU_TAKINGS.\" SET snapshot=%s WHERE ID=%d\", $final_output, $taking_id)); \n\t\n\t// notify admin\t\n\tif(!empty($exam->email_output)) {\n\t\t$email_output = wpautop(stripslashes($exam->email_output));\n\t\t$email_output = str_replace($replace_these, $with_these, $email_output);\n\t\tif(strstr($email_output, '%%ANSWERS%%')) {\t\t\n\t\t\t$email_output = str_replace('%%ANSWERS%%', $result, $email_output);\n\t\t}\n\t\t$email_output = apply_filters(WATU_CONTENT_FILTER, $email_output);\n\t} \n\telse $email_output = $final_output;\n\tif(!empty($exam->notify_admin)) watu_notify($exam, $uid, $email_output);\n\tif(!empty($exam->notify_user)) watu_notify($exam, $uid, $email_output, 'user');\n\t\n\tdo_action('watu_exam_submitted', $taking_id);\n\tif(empty($exam->no_ajax)) exit;// Exit due to ajax call\n\n} else { // Show The Test\n\t$single_page = $exam->single_page;\n\tif(@file_exists(get_stylesheet_directory().'/watu/show_exam.html.php')) include get_stylesheet_directory().'/watu/show_exam.html.php';\n\telse include(WATU_PATH . '/views/show_exam.html.php');\n }\n} // end if $questions", "=== Watu ===\nContributors: prasunsen\nTags: exam, test, quiz, survey, wpmu, multisite, touch, mobile\nRequires at least: 3.3\nTested up to: 4.3.1\nStable tag: trunk\nLicense: GPLv2 or later\n\nCreates exams and quizzes with unlimited number of questions and answers. Assigns grade after the quiz is taken. Moible / touch - friendly.\n\n== License ==\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n== Description ==\n\nCreate exams and quizzes and display the result immediately after the user takes the exam. You can assign grades and point levels for every grade in the exam / quiz. Then assign points to every answer to a question and Watu will figure out the grade based on the total number of points collected.\n\nWatu for WordPress is a light version of <a href=\"http://calendarscripts.info/watupro/\" target=\"_blank\">Watu PRO</a>. Check it if you want to run fully featured exams with data exports, student logins, categories etc.\n\n**This plugin is mobile / touch - friendly.** The quizzes will work on mobile devices and phones. \n\n**Please go to Tools -&gt; Watu Quizzes to start creating quizzes and exams.**\n\n### Features ###\n\n* Creates quizzes and exams\n* Use shortcodes to embed quizzes in posts or pages\n* Single-choice questions\n* Multiple-choice questions\n* Open-end questions (essays)\n* Required questions\n* Grades\n* Shows answers at the end of the quiz or immediately after selection\n* List of users who took exam along with their results\n* Ajax-based loading of the quiz results.\n* Facebook sharing\n* Mobile / touch - friendly\n* Notify admin when someone takes a quiz\n\n### Attention  WordPress Network (Multi Site) Users ###\n\nWhen activating the plugin do it as blog admin and not as network admin.\n\n### Online Demo ###\n\nFeel free to check the [live demo here](http://demo.pimteam.net/wp/?p=12 \"Live demo\"). It should answer most \"pre-download\" questions.\nIf you have more doubts just download the plugin and check out if it works for you. It's free and takes a few seconds to install and activate.\n\n### Troubleshooting ###\n\n**When opening a support thread please provide URL (link) where we can see your problem.**\n\nA very common problem is not being able to submit the quiz, or the quiz does not displays at all. This is usually a fatal javascript error caused by other plugins or your them. If you are technical you can easily find the error yourself by checking the JavaScript error console in Chrome or Firefox. Disable the offending plugin and everything will start working normally.\n\n### Developers API ###\n\nIn order to allow other plugins to integrate better to Watu we have started working on developers API.\nThe following action calls are currently available:\n\n= do_action('watu_exam_submitted', $taking_id)  \nCalled when exam is submitted, passes the taken exam ID \n\n= do_action('watu_exam_saved', $exam_id)\nCalled when you add or edit exam (after submitting the changes). Passes the changed exam ID. \n\n\n== Installation ==\n\nThis section describes how to install the plugin and get it working.\n\n1. Upload the entire folder `watu` to the `/wp-content/plugins/` directory\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Go to \"Watu Settings\" to change the default settings (optional)\n1. Go to \"Watu Quizzes\" under \"Tools\" menu to create your exams, add questions, answers and grades. On the \"manage questions\" page of the created exam page, above the questions table you will see a green text. It shows you the code you need to enter in a post content where you want the exam to appear.\n\n== Frequently Asked Questions ==\n\n= How are grades calculated? =\n\nWatu computes the number of points in total collected by the answers given by the visitor. Then it finds the grade. For example: If you have 2 questions and the correct answers in them give 5 points each, the visitor will collect either 0, or 5 or 10 points at the end. You may decide to define grades \"Failed\" for 0 to 4 points and \"Passed\" for those who collected more than 4 points. In reality you are going to have more questions and answers and some answers may be partly correct which gives you full flexibility in assigning points and managing the grades.\n\n= Can I assign negative points? =\n\nYes. It's even highly recommended for answers to questions that allow multuple answers. If you just assign 0 points to the wrong answers in such question the visitor could check all the checkboxes and collect all the points to that question.\n\n= How do I show the quiz to the visitors of my blog? =\n\nYou need to create a post and embed the exam code. The exam code is shown in the green text above the questions table in \"Manage questions\" page for that exam.\n\n**Please do not place more than one code in one post or page. Only one exam will be shown at a time. If you wish more exams to be displayed, please give links to them!**\n\n= How does it handle user accounts? =\n\nWatu uses the WordPress user registration / login system. So if you want to allow users to register for quizzes simply select \"Require user login\" in the Edit Quiz page and make sure \"Anyone can register\" is selected in your WordPress Settings page.\n\n= Is it compatible with BuddyPress or membership plugins? =\n\nSince it uses the standard WordPress user login system, it is compatible with BuddyPress and all membership plugins that we know about. Of course, some odd membership plugin that uses its own user login system might be incompatible with Watu.\n\n= How to translate the plugin interface in my language =\n\nYou can use the standard WordPress way of translating plugins (via Poedit and .po / .mo files) or use plugin like Loco Translate.\nIf using Poedit, your file names should start with \"watu-\". For example: watu-de_DE.po / watu-de_DE.mo. They should be placed in wp-content/languages/plugins folder.\n\n= Can I override the templates / views without modifying the plugin code? (For advanced users) =\n\nYes. You can create a folder called \"watu\" under your active WP theme folder. Then create a copy of the view file you want to modify, keep the original name, and place it in the \"watu\" folder there. (Do not create \"views\" folder). Then the copy of the template will be used instead of the original one.\n\n== Screenshots ==\n\n1. List of your exams with shortcodes for embedding in posts or pages\n2. The form for creating and editing an exam/test\n3. You can add unlimited number of questions in each exam, and each question can of single-answer, multiple-answer, or open-end type. \n\n== Changelog ==\n\n= Changes in 2.6.8 =\n- Added option to limit the number of logged in user attempts for quizzes that require login.\n- You can specify one or more email addresses that will receive user's results (instead of just using the admin email from your WP Settings page)\n- You can now specify different content for the email sent to you when someone takes a quiz\n- New option lets you to send email to user with their results. If user is not logged in this will generate a required field to enter email on the quiz page.\n- You can specify different email contents of the email sent to user than the contents of the email sent to admin\n- All views /  templates can now be overriden by placing their copy under a folder called \"watu\" in your theme folder.\n- Added option to switch off Ajax submitting for certain quizzes. This is useful if you are embedding javascript via shortcodes from other plugins in the final screen of the quiz as some javascripts won't work when loaded by Ajax.\n- Fixed security exploit\n\n= Changes in 2.6 =\n- Added optional text-based \"captcha\" to prevent spam bot submissions on quizzes which do not require user login\n- Option to reoder the questions. Of course this takes effect only when you have not chosen \"Randomize questions\" in the quiz settings.\n- Removed the hardcoded text \"your answers are shown below\" and the setting \"display answers at the end of the quiz\". Instead of this use the variable %%ANSWERS%% which gives far more flexibility.\n- Added option to not store takings in the database. Will be useful to save DB space when you have a quiz whose resutls you don't need to know.\n- Added two new variables - %%AVG-POINTS%% and %%BETTER-THAN%% to compare your results to others who completed the quiz\n- Added option to enable previous button\n- Added option to automatically publish the quiz in a post at the time of saving\n- Added question numbers + option to not display them (old quizzes default to it for consistency with the previous behavior)\n- Added social sharing option. Currently supports Facebook sharing. You'll need Facebook app ID.\n- Added Twitter sharing option. As above, use the shortcode [watushare-buttons] to enable all sharing buttons accordingly to your sharing options.\n\n= Changes in 2.5 =\n- Added optional answer explanation / feedback that can be shown along with the correct answers on the quiz \n- Added filter / search on the \"view results\" page\n- Added feature to andomize the answers to the questions. Works together or independent from the question randomization.\n- Added compatibility with WP QuickLaTeX\n- You can now be notified by email when someone takes a quiz\n- Made the quiz more user-friendly by auto-generating a demo quiz for the new users\n- Improvements to open end quesitons: now any special characters are handled and matching is case INSENSITIVE\n- Moved the grades management out of the main quiz form for better user interface, data integrity and rich text editor for the grade descriptions\n- Added \"grade\" filter in the \"View results\" page\n- Added option to pull number of random questions from the quiz \n- Fixed number of wpautop() issues. Now the filter is applied manually only where it's needed\n- Fixed bug with calculating points on open-end question (the bug was caused by the latest \"randomize answers\" feature)\n\n= Changes in 2.4 =\n- Quizzes can now require user login. Depending on whether \"Anyone can register\" is selected in your main settings page, a register link will also be shown when non-logged in user tries to access such quiz\n- You can now use \"the_content\" filter instead of \"watu_content\" to handle nasty problems with plugins like qTranslate. It's not recommended to use this setting unless you have experienced such problems.\n- The full details of the user answers are now recorded and can be seen via popup in the list of results page\n- Added uninstall script and changed the settings regarding deleting data. Now you have to double confirm deleting your exam. This is to avoid accidential data loss.\n- Removed wpframe and other obsolete code\n- Made small change to the display of radio and checkbox questions to allow easier formatting on one line with CSS\n- Fixed for compatibility with 3.8\n- Quiz description, if entered, shows up on top of the quiz\n- Option to delete single taking and delete all submitted data on a quiz\n- Changed current_user_can('administrator') to current_user_can('manage_options') so you can allow a non-administrator role to use the quizzes\n- Open-end questions can also have answers and be matched to them\n- Replaced wpautop in favor of nl2br to avoid adding <p> tags in unexpected places like hidden fields\n- Did some small styling adjustments\n- Fixed the %%MAX_POINTS%% calculation to take into account the quesiton type\n\n= Changes in 2.3 =\n- Export quiz results as CSV file (semicolon delimited)\n- The exam shortcode is now easier to copy \n- Animate back to top when submitting exam, and when clicking \"next\" after long question. This prevents confusion when user has to see the next screen.\n- Fixed bug with \"Question X of Y total\" showing even for single-page quizzes\n- Each exam / quiz has its own setting about how the answers will be shown\n- As many themes started showing the choices under radio buttons or checkboxes, added explicit CSS to keep them on the same line\n- Fixed new bug with missing answers when adding question\n- Fixed bug with skipping \"0\" answers\n- Changed %%TOTAL%% to %%MAX-POINTS%% for clarify and consistency. The old tag will keep working. \n- Further code improvements \n- Tested in multisite\n- Fixed \"headers already sent\" message caused by premature update statement\n\n= Changes in 2.2 = \n- Replaced 'the_content' filter with custom filter to avoid issues with membership plugins\n- Cleanup the root folder from show_exam.php\n- Another method added to the API, see the new docs\n- The answers field changed to TEXT so you can now add long choices/answers to the questions\n- Fixed bug in the list of taken exams\n- Fixed issues with correct/wrong answer calculation\n- Added %%CORRECT%% answers variable to display number of correct answers\n- Watu scripts and CSS are now loaded only when you have exams on the page avoiding unnecessary page overload \n- Other code fixes and improvements\n\n= Changes in 2.1 =\n- Displaying \"Question X of Y\" so the user knows where they are\n- Fixing incompatibility with Paid Membership PRO\n- Shortcodes on the final screen\n- Starting API (Not yet documented)\n- Code fixes and improvements\n\n= Changes in 2.0 =\n- Required questions (optional)\n- A list of users who took an exam along with their results\n- Localization of the strings in the javascript\n- More flexible function to add new DB fields on update\n- Code fixes and improvements\n\n= Changes in 1.9 =\n- Grade title and description are now separated\n- Shortcodes will be executed in questions and final screen\n- Code fixes and improvements\n- Localization issues fixed\n\n= Changes in 1.8 =\n- the exam title links to the post with this exam if exam is already published\n- \"show all questions on single page\" is now configurable for every exam\n- Improving code continued (more to come)\n\n= Changes in 1.7 =\n\n- You can now randomize the questions in a quiz\n- Fixed issues with the DB tables during upgrade\n- Removed more obsolete code, fixed code issues. More on this to come.\n\n= Changes in 1.6 =\n\n- Removed obsolete rich text editor and replaced with wp_editor call\n- Added \"Essay\" (open-end) question \n- Resolved possible Javascript conflicts\n- Internationalization ready - find the .pot file in langs/ folder", "// wrap in object to avoid polluting the javascript namespace\nvar Watu={};\n\nWatu.current_question = 1;\nWatu.total_questions = 0;\nWatu.mode = \"show\";\n\nWatu.isAnswered = function() {\n\tif(jQuery('#questionType' + Watu.current_question).val() == 'textarea') {\n\t\tif(jQuery('.watu-textarea-'+Watu.current_question).val()!='') return true;\n\t\telse return false;\n\t}\n\t\n\tvar answered = false;\n\t\n\tjQuery(\"#question-\" + Watu.current_question + \" .answer\").each(function(i) {\n\t\t\tif(this.checked) {\n\t\t\t\tanswered = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t});\n\t\n\treturn answered;\t\n}\n\nWatu.isRequired = function() {\n\tif(jQuery('#questionType'+ Watu.current_question).attr('class') == 'required') return true;\n\t\n\treturn false;\n}\n\nWatu.checkAnswer = function(e) {\n\tif(!Watu.isAnswered()) {\n\t\tif(Watu.isRequired()) {\n\t\t\talert(watu_i18n.missed_required_question);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// not required, so ask\n\t\tif(!confirm(watu_i18n.nothing_selected)) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nWatu.nextQuestion = function(e, dir) {\n\tdir = dir || 'next'; // next or previous\n\tif(dir == 'next' && !Watu.checkAnswer(e)) return;\n\t\n\t// change the displayed question number\n\tvar numQ = jQuery('#numQ').html();\n\tif(dir == 'next') numQ++;\n\telse numQ--;\t\n\tjQuery('#numQ').html(numQ);\n\n\tjQuery(\"#question-\" + Watu.current_question).hide();\n\tif(dir == 'next') Watu.current_question++;\n\telse Watu.current_question--;\n\tjQuery(\"#question-\" + Watu.current_question).show();\n\t\n\tif(Watu.total_questions <= Watu.current_question) {\n\t\tjQuery(\"#next-question\").hide();\n\t\tjQuery(\"#action-button\").show();\n\t\tif(jQuery('#WatuTextCaptcha').length) jQuery('#WatuTextCaptcha').show();\n\t}\n\telse {\n\t\tjQuery(\"#next-question\").show();\n\t\tif(jQuery('#WatuTextCaptcha').length) jQuery('#WatuTextCaptcha').hide();\n\t}\n\n\t// show / hide prev button if any\n\tif(jQuery('#prev-question').length) {\n\t\tif(Watu.current_question <= 1) jQuery('#prev-question').hide();\n\t\telse jQuery('#prev-question').show();\n\t}\n\t\n\tif(jQuery('body').scrollTop() > 250) {\t\n\t\tjQuery('html, body').animate({\n\t   \t\tscrollTop: jQuery('#watu_quiz').offset().top -100\n\t   }, 100);   \n\t}   \n\n}\n\n// This part is used only if the answers are show on a per question basis.\nWatu.showAnswer = function(e) {\n\tif(!Watu.checkAnswer(e)) return;\n\n\tif(Watu.mode == \"next\") {\n\t\tWatu.mode = \"show\";\n\n\t\tjQuery(\"#question-\" + Watu.current_question).hide();\n\t\tWatu.current_question++;\n\t\tjQuery(\"#question-\" + Watu.current_question).show();\n\n\t\tjQuery(\"#show-answer\").val(watu_i18n.show_answer);\n\t\treturn;\n\t}\n\n\tWatu.mode = \"next\";\n\n\tjQuery(\".php-answer-label.label-\"+Watu.current_question).addClass(\"correct-answer\");\n\tjQuery(\".answer-\"+Watu.current_question).each(function(i) {\n\t\tif(this.checked && this.className.match(/wrong\\-answer/)) {\n\t\t\tvar number = this.id.toString().replace(/\\D/g,\"\");\n\t\t\tif(number) {\n\t\t\t\tjQuery(\"#answer-label-\"+number).addClass(\"user-answer\");\n\t\t\t}\n\t\t}\n\t});\n\n\tif(Watu.total_questions <= Watu.current_question) {\n\t\tjQuery(\"#show-answer\").hide();\n\t\tjQuery(\"#action-button\").show();\n\t} else {\n\t\tjQuery(\"#show-answer\").val(\"Next >\");\n\t}\n}\n\nWatu.submitResult = function(e) {\n\tvar answer_ids = [];\n\tjQuery('#quiz-' + this.exam_id + ' .watu-answer-ids').each(function(index, value){\n\t\tanswer_ids.push(this.value);\n\t});\n\t\n\t// if text captcha is there we have to make sure it's shown\n\tif(jQuery('#WatuTextCaptcha').length && !jQuery('#WatuTextCaptcha').is(':visible')) {\n\t\talert(watu_i18n.complete_text_captcha);\n\t\tjQuery('#WatuTextCaptcha').show();\n\t\treturn false;\n\t}\n \n\tvar data = {action:'watu_submit', 'do': 'show_exam_result', quiz_id: exam_id, \n\t'question_id[]': Watu.qArr, 'answer_ids[]' : answer_ids };\n\t\n\tif(jQuery('#watuTakerEmail').length) {\n\t\tvar emailVal = jQuery('#watuTakerEmail').val();\n\t\tif(emailVal == '' || emailVal.indexOf('@') < 0 || emailVal.indexOf('.') < 1) {\n\t\t\talert(watu_i18n.email_required);\n\t\t\tjQuery('#watuTakerEmail').focus();\n\t\t\treturn false;\n\t\t} \n\t\tdata['watu_taker_email'] = emailVal;\n\t}\n\t\n\tfor(x=0; x<Watu.qArr.length; x++) {\n\t\tif(Watu.singlePage) {\n\t\t\t Watu.current_question = x+1;\n\t\t\t \n\t\t\t if(!Watu.isAnswered() && Watu.isRequired()) {\n\t\t\t \t\talert(watu_i18n.missed_required_question);\n\t\t\t \t\treturn false;\n\t\t\t }\n\t\t}\t\t\n\t\t\n    // qArr[x] is the question ID\n\t\tvar ansgroup = '.answerof-'+Watu.qArr[x];\n\t\tvar fieldName = 'answer-'+Watu.qArr[x];\n\t\tvar ansvalues= Array();\n\t\tvar i=0;\n        \n\t    if(jQuery('#textarea_q_'+Watu.qArr[x]).length>0) {\n\t        // open end question\n\t        ansvalues[0]=jQuery('#textarea_q_'+Watu.qArr[x]).val();\n\t    } \n\t    else {\n\t        jQuery(ansgroup).each(function(){\n\t\t\t\t\t\tif( jQuery(this).is(':checked') ) {\n\t\t\t\t\t\t\tansvalues[i] = this.value;\n\t\t\t\t\t\t\ti++;\n\t  \t\t\t}\n\t  \t\t});    \n\t    }\n\t\t\n\t\tdata[fieldName+'[]'] = ansvalues;\n\t}\n\t\n\tdata['post_id'] = Watu.post_id;\n\tdata['start_time'] = jQuery('#watuStartTime').val();\n\t\n\t// no ajax? In this case only return true to allow submitting the form\t\n\tif(e && e.no_ajax && e.no_ajax.value == 1) return true;\t\n\t\n\t// if question captcha is available, add to data\n\tif(jQuery('#WatuTextCaptcha').length>0) {\n\t\tjQuery('#quiz-'+Watu.exam_id).show();\n\t\tdata['watu_text_captcha_answer'] = jQuery('#quiz-' + Watu.exam_id + ' input[name=watu_text_captcha_answer]').val();\n\t\tdata['watu_text_captcha_question'] = jQuery('#quiz-' + Watu.exam_id + ' input[name=watu_text_captcha_question]').val();\n\t}\n\t\n\tjQuery('html, body').animate({\n   \t\tscrollTop: jQuery('#watu_quiz').offset().top - 50\n   \t}, 1000); \n\t\n\t//jQuery('#watu_quiz').html(\"<p>Loading...</p>\");\n    \n\t//var v=''; for(a in data) v+=data[a]+'\\n'; alert(v);\n\t// don't do ajax call if no_ajax\n\tif(!e || !e.no_ajax || e.no_ajax.value != 1) {\n\t\ttry{\n\t\t\tjQuery.ajax({ type: 'POST', url: watuURL, data: data, success: Watu.success, error: Watu.error  });\n\t\t} catch(e) { alert(e) }\n\t}\n}\n\nWatu.takingDetails = function(id, adminURL) {\n\tadminURL = adminURL || \"\";\n\ttb_show(\"Taking Details\", adminURL + \"admin-ajax.php?action=watu_taking_details&id=\"+id, adminURL + \"admin-ajax.php\");\n}\n\nWatu.success = function(r){\n\t// first check for recaptcha error, if yes, do not replace the HTML\n\t // but display the error in alert and return false;\n\t if(r.indexOf('WATU_CAPTCHA:::')>-1) {\n\t \t\tparts = r.split(\":::\");\n\t \t\talert(parts[1]);\n\t \t\tjQuery(\"#action-button\").val(watu_i18n.try_again);\n\t\t\tjQuery(\"#action-button\").removeAttr(\"disabled\");\n\t \t\treturn false;\n\t } \n\tjQuery('#watu_quiz').html(r);\n}\nWatu.error = function(){ jQuery('#watu_quiz').html('Error Occured');}\n\nWatu.initWatu = function() {\n\tjQuery(\"#question-1\").show();\n\tWatu.total_questions = jQuery(\".watu-question\").length;\n\n\tif(Watu.total_questions == 1) {\n\t\tjQuery(\"#action-button\").show();\n\t\tjQuery(\"#next-question\").hide();\n\t\tjQuery(\"#show-answer\").hide();\n\n\t} else {\n\t\tjQuery(\"#next-question\").click(Watu.nextQuestion);\n\t\tjQuery(\"#show-answer\").click(Watu.showAnswer);\n\t}\n\tif(!Watu.singlePage) jQuery(\"#action-button\").click(Watu.nextQuestion);\n}\n\njQuery(document).ready(Watu.initWatu);\n", "<div id=\"watu_quiz\" class=\"quiz-area <?php if($single_page) echo 'single-page-quiz'; ?>\">\n<?php if(!empty($exam->description)):?><p><?php echo apply_filters(WATU_CONTENT_FILTER,wpautop(stripslashes($exam->description)));?></p><?php endif;?>\n<form action=\"\" method=\"post\" class=\"quiz-form\" id=\"quiz-<?php echo $exam_id?>\" <?php if(!empty($exam->no_ajax)):?>onsubmit=\"return Watu.submitResult(this)\"<?php endif;?>>\n<?php\nif(!empty($exam->notify_user) and empty($user_ID)):?>\n\t<p class=\"watu_taker_email\"><?php _e('Please enter your email:', 'watu')?> <input type=\"text\" name=\"watu_taker_email\" id=\"watuTakerEmail\"></p>\n<?php\nendif; // end showing enter email field\n$question_count = 1;\n$question_ids = '';\n$output = $answer_class = '';\n$answers_orderby = empty($exam->randomize_answers) ? 'sort_order, ID' : 'RAND()';\nforeach ($questions as $qct => $ques) {\n\t$qnum = $qct+1;\n\t$question_number = empty($exam->dont_display_question_numbers) ? \"<span class='watu_num'>$qnum. </span>\"  : '';\n\t\t\n\t$output .= \"<div class='watu-question' id='question-$question_count'>\";\n\t$output .= \"<div class='question-content'>\". wpautop($question_number .  stripslashes($ques->question)) . \"</div>\";\n\t$output .= \"<input type='hidden' name='question_id[]' value='{$ques->ID}' />\";\n\t$question_ids .= $ques->ID.',';\n\t$dans = $wpdb->get_results(\"SELECT ID,answer,correct FROM \".WATU_ANSWERS.\" \n\t\tWHERE question_id={$ques->ID} ORDER BY $answers_orderby\");\n\t$ans_type = $ques->answer_type;\n\t\n\t// display textarea\n\tif($ans_type=='textarea') {\n\t\t$output .= \"<textarea name='answer-{$ques->ID}[]' rows='5' cols='40' id='textarea_q_{$ques->ID}' class='watu-textarea-$question_count'></textarea>\"; \n\t}\t\n\t\n\tforeach ($dans as $ans) {\n\t\t// add this to track the order\t\t\n\t\t$output .= \"<input type='hidden' name='answer_ids[]' class='watu-answer-ids' value='{$ans->ID}' />\";\n\t\t\n\t\tif($ques->answer_type == 'textarea') continue;\n\t\t\n\t\tif($answer_display == 2) {\n\t\t\t$answer_class = 'js-answer-label';\n\t\t\tif($ans->correct) $answer_class = 'php-answer-label';\n\t\t}\n\t\t$output .= wpautop(\"<div><input type='$ans_type' name='answer-{$ques->ID}[]' id='answer-id-{$ans->ID}' class='answer answer-$question_count $answer_class answerof-{$ques->ID}' value='{$ans->ID}' />&nbsp;<label for='answer-id-{$ans->ID}' id='answer-label-{$ans->ID}' class='$answer_class answer label-$question_count'><span>\" . stripslashes($ans->answer) . \"</span></label></div>\");\n\t}\n\n\t$output .= \"<input type='hidden' id='questionType\".$question_count.\"' value='{$ques->answer_type}' class='\".($ques->is_required?'required':'').\"'>\";\n\t$output .= \"</div>\";\n\t$question_count++;\n}\n$output .= \"<div style='display:none' id='question-$question_count'>\";\n$output .= \"<br /><div class='question-content'><img src=\\\"\".plugins_url('watu/loading.gif').\"\\\" width=\\\"16\\\" height=\\\"16\\\" alt=\\\"\".__('Loading', 'watu').\" ...\\\" title=\\\"\".__('Loading', 'watu').\" ...\\\" />&nbsp;\".__('Loading', 'watu').\" ...</div>\";\n$output .= \"</div>\";\necho apply_filters(WATU_CONTENT_FILTER,$output);\n$question_ids = preg_replace('/,$/', '', $question_ids );\necho @$text_captcha_html;\n?><br />\n<?php \nif($answer_display == 2 and $single_page != 1) : ?>\n<input type=\"button\" id=\"show-answer\" value=\"<?php _e('Show Answer', 'watu') ?>\"  /><br />\n<?php endif;\nif($single_page != 1 and $answer_display!=2): ?>\n\t<p><?php _e('Question', 'watu')?> <span id='numQ'>1</span> <?php _e('of', 'watu')?> <?php echo $num_questions;?></p>\n\t<?php if($exam->show_prev_button):?>\n\t\t<input type=\"button\" id=\"prev-question\" value=\"&lt; <?php _e('Previous', 'watu') ?>\" onclick=\"Watu.nextQuestion(event, 'prev');\" style=\"display:none;\" />\n\t<?php endif;?>\n\t<input type=\"button\" id=\"next-question\" value=\"<?php _e('Next', 'watu') ?> &gt;\"  />\n<?php endif; ?>\n<?php if(empty($exam->no_ajax)):?><input type=\"button\" name=\"action\" onclick=\"Watu.submitResult()\" id=\"action-button\" value=\"<?php _e('Show Results', 'watu') ?>\"  />\n<?php else:?>\n\t<input type=\"submit\" name=\"submit_no_ajax\" id=\"action-button\" value=\"<?php _e('Submit', 'watu') ?>\" />\n<?php endif;?>\n<input type=\"hidden\" name=\"no_ajax\" value=\"<?php echo $exam->no_ajax?>\"><?php if(!empty($exam->no_ajax)):?>\n<input type=\"hidden\" name=\"do\" value=\"show_exam_result\">\n<input type=\"hidden\" name=\"post_id\" value=\"<?php echo $post->ID?>\">\n<?php endif; // end if(!empty($exam->no_ajax))?>\n<input type=\"hidden\" name=\"quiz_id\" value=\"<?php echo $exam_id ?>\" />\n<input type=\"hidden\" id=\"watuStartTime\" name=\"start_time\" value=\"<?php echo current_time('mysql'); ?>\" />\n</form>\n</div>\n<script type=\"text/javascript\">\nvar exam_id=0;\nvar question_ids='';\nvar watuURL='';\njQuery(function($){\nquestion_ids = \"<?php print $question_ids ?>\";\nexam_id = <?php print $exam_id ?>;\nWatu.exam_id = exam_id;\nWatu.qArr = question_ids.split(',');\nWatu.post_id = <?php echo $post->ID ?>;\nWatu.singlePage = '<?php echo $exam->single_page?>';\nwatuURL = \"<?php echo admin_url( 'admin-ajax.php' ); ?>\";\n});\n</script>", "<?php\r\n/*\r\nPlugin Name: Watu\r\nPlugin URI: http://calendarscripts.info/watu-wordpress.html\r\nDescription: Create exams and quizzes and display the result immediately after the user takes the exam. Watu for Wordpress is a light version of <a href=\"http://calendarscripts.info/watupro/\" target=\"_blank\">WatuPRO</a>. Check it if you want to run fully featured exams with data exports, student logins, timers, random questions and more. Free support and upgrades are available. Go to <a href=\"options-general.php?page=watu.php\">Watu Settings</a> or <a href=\"tools.php?page=watu_exams\">Manage Your Exams</a> \r\n\r\nVersion: 2.6.8\r\nAuthor: Kiboko Labs\r\nLicense: GPLv2 or later\r\n\r\nThis program is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU General Public License\r\nas published by the Free Software Foundation; either version 2\r\nof the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\ndefine( 'WATU_PATH', dirname( __FILE__ ) );\ndefine( 'WATU_URL', plugin_dir_url( __FILE__ ));\r\ninclude( WATU_PATH.'/controllers/exam.php');\r\ninclude( WATU_PATH.'/controllers/questions.php');\r\ninclude( WATU_PATH.'/controllers/takings.php');\r\ninclude( WATU_PATH.'/controllers/ajax.php');\ninclude( WATU_PATH.'/controllers/grades.php');\ninclude( WATU_PATH.'/controllers/social-sharing.php');\ninclude( WATU_PATH.'/models/question.php');\ninclude( WATU_PATH.'/lib/functions.php');\ninclude( WATU_PATH.'/lib/text-captcha.php');\ninclude( WATU_PATH.\"/models/exam.php\");\r\n\r\nfunction watu_init() {\r\n\tglobal $wpdb;\r\n\tload_plugin_textdomain('watu', false, dirname( plugin_basename( __FILE__ )).'/langs/' );\n\t\n\t$version = get_bloginfo('version');\n\tif($version <= 3.3) add_action('wp_enqueue_scripts', 'watu_vc_scripts');\r\n\tadd_action('admin_enqueue_scripts', 'watu_vc_scripts');\n\tadd_action('wp_enqueue_scripts', 'watu_vc_jquery');\t\n\t\n\tadd_shortcode( 'WATU', 'watu_shortcode' );\n\tadd_shortcode( 'watu', 'watu_shortcode' );\n\tadd_shortcode( 'watushare-buttons', array('WatuSharing', 'display') );\r\n\t\r\n\t// table names as constants\r\n\tdefine('WATU_EXAMS', $wpdb->prefix.'watu_master');\t\r\n\tdefine('WATU_QUESTIONS', $wpdb->prefix.'watu_question');\r\n\tdefine('WATU_ANSWERS', $wpdb->prefix.'watu_answer');\r\n\tdefine('WATU_GRADES', $wpdb->prefix.'watu_grading');\r\n\tdefine('WATU_TAKINGS', $wpdb->prefix.'watu_takings');\n\t\n\t// which filter to use\n\t$content_filter = get_option('watu_use_the_content') ? 'the_content' : 'watu_content';\n\tdefine('WATU_CONTENT_FILTER', $content_filter);\r\n\t\r\n\t// add_filter( 'watu_content', 'watu_autop' );\t\r\n\tadd_filter( 'watu_content', 'wptexturize' );\r\n\tadd_filter( 'watu_content', 'convert_smilies' );\r\n\tadd_filter( 'watu_content', 'convert_chars' );\r\n\tadd_filter( 'watu_content', 'shortcode_unautop' );\r\n\tadd_filter( 'watu_content', 'do_shortcode' );\t\n\t\n\t// Compatibility with specific plugins\n\t// qTranslate\n\tif(function_exists('qtrans_useCurrentLanguageIfNotFoundUseDefaultLanguage')) add_filter('watu_content', 'qtrans_useCurrentLanguageIfNotFoundUseDefaultLanguage');\t\n\t// WP QuickLaTeX\n\tif(function_exists('quicklatex_parser')) add_filter( 'watu_content',  'quicklatex_parser', 7);\n\t\n\t$version = get_option('watu_version');\n\tif($version != '2.58') watu_activate(true);\n\t\n\tadd_action('admin_notices', 'watu_admin_notice');\r\n}\r\n\r\nfunction watu_autop($content) {\r\n\t//return wpautop($content, false);\n\treturn nl2br($content);\r\n}\r\n\r\n/**\r\n * Add a new menu under Manage, visible for all users with template viewing level.\r\n */\r\nadd_action( 'admin_menu', 'watu_add_menu_links' );\r\nadd_action ( 'watu_exam', 'watu_exam' );\r\nfunction watu_add_menu_links() {\r\n\tglobal $wp_version, $_registered_pages;\r\n\t$view_level= 'manage_options';\r\n\t$page = 'tools.php';\r\n\t//add_menu_page('Watu Settings Page', 'Watu Settings', $view_level, 'watu', 'watu_options');\t$page = 'watu';\r\n\t\r\n\tadd_submenu_page($page, __('Manage Quizzes', 'watu'), __('Watu Quizzes', 'watu'), $view_level , 'watu_exams', 'watu_exams');\r\n\t\r\n\t// hidden pages\r\n\tadd_submenu_page(NULL, __('Manage Quizzes', 'watu'), __('Watu Quizzes', 'watu'), $view_level , 'watu_exam', 'watu_exam');\r\n\tadd_submenu_page(NULL, __('Manage Questions', 'watu'), __('Manage Questions', 'watu'), $view_level , 'watu_questions', 'watu_questions');\n\tadd_submenu_page(NULL, __('Add/Edit Question', 'watu'), __('Add/Edit Question', 'watu'), $view_level , 'watu_question', 'watu_question');\n\tadd_submenu_page(NULL, __('Manage Grades', 'watu'), __('Manage Grades', 'watu'), $view_level , 'watu_grades', 'watu_grades');\n\tadd_submenu_page(NULL, __('Social Sharing', 'watu'), __('Social Sharing', 'watu'), $view_level , 'watu_social_sharing', array('WatuSharing', 'options'));\r\n\t\r\n\t$code_pages = array('question_form.php');\r\n\tforeach($code_pages as $code_page) {\r\n\t\t$hookname = get_plugin_page_hookname(\"watu/$code_page\", '' );\r\n\t\t$_registered_pages[$hookname] = true;\r\n\t}\r\n}\r\n\r\n/// Add an option page for watu\r\nadd_action('admin_menu', 'watu_option_page');\r\nfunction watu_option_page() {\r\n\tadd_options_page(__('Watu Settings', 'watu'), __('Watu Settings', 'watu'), 'administrator', basename(__FILE__), 'watu_options');\r\n\t\r\n\tadd_submenu_page(NULL, __('Exam submissions', 'watu'), __('Exam submissions', 'watu'), 'manage_options', 'watu_takings', 'watu_takings'); \r\n}\r\n\r\nfunction watu_options() {\r\n\tif ( function_exists('current_user_can') && !current_user_can('manage_options') ) die(__(\"Your are not allowed to to perform this operation\", 'watu'));\r\n\tif (! user_can_access_admin_page()) wp_die( __('You do not have sufficient permissions to access this page', 'watu') );\r\n\r\n\trequire(ABSPATH. '/wp-content/plugins/watu/options.php');\r\n}\r\n\r\n/**\r\n * This will scan all the content pages that wordpress outputs for our special code. If the code is found, it will replace the requested quiz.\r\n */\r\nfunction watu_shortcode( $attr ) {\r\n\t$exam_id = $attr[0];\r\n\r\n\t$contents = '';\r\n\tif(!is_numeric($exam_id)) return $contents;\n\t\n\twatu_vc_scripts();\n\t\n\t// submitting without ajax?\t\n\tif(!empty($_POST['no_ajax']) and !empty($exam->no_ajax)) {\t\t\n\t\trequire(WATU_PATH.\"/show_exam.php\");\n\t\t$contents = ob_get_clean();\n\t\t$contents = apply_filters('watu_content', $contents);\n\t\treturn $contents;\n\t}\t\n\t\r\n\tob_start();\r\n\tinclude(WATU_PATH . '/controllers/show_exam.php');\r\n\t$contents = ob_get_contents();\r\n\tob_end_clean();\r\n\t\r\n\treturn $contents;\r\n}\r\n\r\nadd_action('activate_watu/watu.php','watu_activate');\r\nfunction watu_activate($update = false) {\r\n\tglobal $wpdb;\n\t\n\t$wpdb-> show_errors();\n\t$version = get_option('watu_version');\n\tif(!$update) watu_init();\r\n\t\r\n\t// Initial options.\r\n\tupdate_option('watu_show_answers', 1);\r\n\tupdate_option('watu_single_page', 0);\r\n\tupdate_option('watu_answer_type', 'radio');\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_EXAMS.\"'\") != WATU_EXAMS) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_EXAMS.\"`(\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\tname varchar(50) NOT NULL DEFAULT '',\r\n\t\t\t\t\tdescription mediumtext NOT NULL,\r\n\t\t\t\t\tfinal_screen mediumtext NOT NULL,\r\n\t\t\t\t\tadded_on datetime NOT NULL DEFAULT '1900-01-01',\r\n\t\t\t\t\tPRIMARY KEY  (ID)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8 \";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_QUESTIONS.\"'\") != WATU_QUESTIONS) {\r\n\t\t$sql = \"CREATE TABLE \".WATU_QUESTIONS.\" (\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\texam_id int(11) unsigned NOT NULL DEFAULT 0,\r\n\t\t\t\t\tquestion mediumtext NOT NULL,\r\n\t\t\t\t\tanswer_type char(15)  NOT NULL DEFAULT '',\r\n\t\t\t\t\tsort_order int(3) NOT NULL default 0,\r\n\t\t\t\t\tPRIMARY KEY  (ID),\r\n\t\t\t\t\tKEY quiz_id (exam_id)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_ANSWERS.\"'\") != WATU_ANSWERS) {\r\n\t\t$sql = \"CREATE TABLE \".WATU_ANSWERS.\" (\r\n\t\t\t\t\tID int(11) unsigned NOT NULL auto_increment,\r\n\t\t\t\t\tquestion_id int(11) unsigned NOT NULL,\r\n\t\t\t\t\tanswer TEXT,\r\n\t\t\t\t\tcorrect enum('0','1') NOT NULL default '0',\r\n\t\t\t\t\tpoint int(11) NOT NULL,\r\n\t\t\t\t\tsort_order int(3) NOT NULL default 0,\r\n\t\t\t\t\tPRIMARY KEY  (ID)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\t\t\t\r\n\t\t\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_GRADES.\"'\") != WATU_GRADES) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_GRADES.\"` (\r\n\t\t\t\t `ID` int(11) NOT NULL AUTO_INCREMENT,\r\n\t\t\t\t `exam_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `gtitle` varchar (255) NOT NULL DEFAULT '',\r\n\t\t\t\t `gdescription` mediumtext NOT NULL,\r\n\t\t\t\t `gfrom` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `gto` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t PRIMARY KEY (`ID`)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\t\t\t\t\r\n\t\r\n\tif($wpdb->get_var(\"SHOW TABLES LIKE '\".WATU_TAKINGS.\"'\") != WATU_TAKINGS) {\r\n\t\t$sql = \"CREATE TABLE `\".WATU_TAKINGS.\"` (\r\n\t\t\t\t `ID` int(11) NOT NULL AUTO_INCREMENT,\r\n\t\t\t\t `exam_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `user_id` int(11) NOT NULL DEFAULT 0,\r\n\t\t\t\t `ip` varchar(20) NOT NULL DEFAULT '',\r\n\t\t\t\t `date` DATE NOT NULL DEFAULT '1900-01-01',\r\n\t\t\t\t `points` INT NOT NULL DEFAULT 0,\r\n\t\t\t\t `grade_id` INT UNSIGNED NOT NULL DEFAULT 0,\r\n\t\t\t\t PRIMARY KEY (`ID`)\r\n\t\t\t\t) ENGINE=MyISAM DEFAULT CHARSET=utf8\";\r\n\t\t$wpdb->query($sql);\r\n\t}\t\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"randomize\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\t\t\r\n\t\tarray(\"name\"=>\"single_page\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"show_answers\", \"type\"=>\"TINYINT NOT NULL DEFAULT 100\"),\n\t\tarray(\"name\"=>\"require_login\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"notify_admin\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"randomize_answers\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"pull_random\", \"type\"=>\"INT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"dont_store_data\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"show_prev_button\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"dont_display_question_numbers\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"require_text_captcha\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"email_output\", \"type\"=>\"TEXT\"),\n\t\tarray(\"name\"=>\"notify_user\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"notify_email\", \"type\"=>\"VARCHAR(255) NOT NULL DEFAULT ''\"),\n\t\tarray(\"name\"=>\"take_again\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"times_to_take\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"no_ajax\", \"type\"=>\"TINYINT NOT NULL DEFAULT 0\"), /* don't use Ajax when submitting this quiz */\r\n\t), WATU_EXAMS);\t\n\t\n\t\r\n\t// db updates in 1.8\r\n\tif(empty($version) or $version < 1.8) {\r\n\t\t // let all existing exams follow the default option\r\n\t\t $sql = \"UPDATE \".WATU_EXAMS.\" SET single_page = '\".get_option('watu_single_page').\"'\";\r\n\t\t $wpdb->query($sql);\r\n\t}\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"is_required\", \"type\"=>\"TINYINT UNSIGNED NOT NULL DEFAULT 0\"),\n\t\tarray(\"name\"=>\"feedback\", \"type\"=>\"TEXT\")\t\r\n\t), WATU_QUESTIONS);\t\r\n\t\r\n\twatu_add_db_fields(array(\r\n\t\tarray(\"name\"=>\"result\", \"type\"=>\"TEXT\"),\n\t\tarray(\"name\"=>\"snapshot\", \"type\"=>\"MEDIUMTEXT\"),\n\t\tarray(\"name\"=>\"start_time\", \"type\"=>\"DATETIME\")\r\n\t), WATU_TAKINGS);\t\t\t\n\t\n\t// let's change choice and answer fields to TEXT instead of VARCHAR - 2.1.3\t\n\tif(empty($version) or $version < 2.1) {\r\n\t\t // let all existing exams follow the default option\r\n\t\t $sql = \"ALTER TABLE \".WATU_ANSWERS.\" CHANGE answer answer TEXT\";\r\n\t\t $wpdb->query($sql);\r\n\t}\t\n\t\n\t$demo_quiz_created = get_option('watu_demo_quiz_created');\n\tif($demo_quiz_created != '1') WatuExam :: create_demo();\n\t\n\t// versions before 2.44 had the following text hard-coded. We need to make sure thta the quizzes which were showing results\n\t// now have it in the \"final screen\"\n\tif(!empty($version) and $version < 2.45) {\n\t\t$answers_text = \"<p>\" . __('All the questions in the quiz along with their answers are shown below. Your answers are bolded. The correct answers have a green background while the incorrect ones have a red background.', 'watu') . \"</p> %%ANSWERS%%\";\n\t\t$wpdb->query(\"UPDATE \".WATU_EXAMS.\" SET final_screen = CONCAT(final_screen, '$answers_text') WHERE show_answers=1\");\n\t}\n\t\n\t// let all quizzes prior to DB version 2.49 have dont_display_question_numbers = 1 because this is how it was\n\tif(!empty($version) and $version < 2.49) {\n\t\t$wpdb->query(\"UPDATE \".WATU_EXAMS.\" SET dont_display_question_numbers=1\");\n\t}\n\t\n\t// let's make all \"require_login\" quizzes created previously to have take_again=1 to avoid sudden change\n\tif(!empty($version) and $version  < 2.56)  {\n\t\t$wpdb->query(\"UPDATE \".WATU_MASTER.\" SET take_again=1 WHERE require_login=1\");\n\t}\r\n\t\t\t\t\t\t\r\n\tupdate_option( \"watu_delete_db\", '' );\t\n\tupdate_option( \"watu_version\", '2.58' );\n\t\n\tupdate_option('watu_admin_notice', __('<h2>Thank you for activating Watu!</h2> <p>Please go to your <a href=\"tools.php?page=watu_exams\">Quizzes page</a> to get started! If this is the first time you have activated the plugin there will be a small demo quiz automatically created for you. Feel free to explore it to get better idea how things work.</p>', 'watu'));\r\n}\n\nfunction watu_admin_notice() {\n\t\t$notice = get_option('watu_admin_notice');\n\t\tif(!empty($notice)) {\n\t\t\techo \"<div class='updated'>\".stripslashes($notice).\"</div>\";\n\t\t}\n\t\t// once shown, cleanup\n\t\tupdate_option('watu_admin_notice', '');\n}\n\r\nfunction watu_vc_scripts() {\r\n     wp_enqueue_script('jquery');\t\r\n\t\t  \r\n      wp_enqueue_style(\r\n\t\t\t'watu-style',\r\n\t\t\tWATU_URL.'style.css',\r\n\t\t\tarray(),\r\n\t\t\t'2.2.0'\r\n\t\t);\r\n\t\t\r\n\t\twp_enqueue_script(\r\n\t\t\t'watu-script',\r\n\t\t\tWATU_URL.'script.js',\r\n\t\t\tarray(),\r\n\t\t\t'2.3.3'\r\n\t\t);\r\n\t\t\r\n\t\t$translation_array = array(\r\n\t\t\t'missed_required_question' => __('You have missed to answer a required question', 'watu'),\r\n\t\t\t'nothing_selected' => __('You did not select any answer. Are you sure you want to continue?', 'watu'),\r\n\t\t\t'show_answer' => __('Show Answer', 'watu'),\n\t\t\t'complete_text_captcha' => __('You need to answer the verification question', 'watu'),\n\t\t\t'try_again' => __('Try again', 'watu'),\n\t\t\t'email_required' => __('Valid email address is required.', 'watu'),\r\n\t\t\t);\t\r\n\t\twp_localize_script( 'watu-script', 'watu_i18n', $translation_array );\t\r\n}\n\nfunction watu_vc_jquery() {\n\twp_enqueue_script('jquery');\n}\r\n\r\n// function to conditionally add DB fields\r\nfunction watu_add_db_fields($fields, $table) {\r\n\t\tglobal $wpdb;\r\n\t\t\r\n\t\t// check fields\r\n\t\t$table_fields = $wpdb->get_results(\"SHOW COLUMNS FROM `$table`\");\r\n\t\t$table_field_names = array();\r\n\t\tforeach($table_fields as $f) $table_field_names[] = $f->Field;\t\t\r\n\t\t$fields_to_add=array();\r\n\t\t\r\n\t\tforeach($fields as $field) {\r\n\t\t\t if(!in_array($field['name'], $table_field_names)) {\r\n\t\t\t \t  $fields_to_add[] = $field;\r\n\t\t\t } \r\n\t\t}\r\n\t\t\r\n\t\t// now if there are fields to add, run the query\r\n\t\tif(!empty($fields_to_add)) {\r\n\t\t\t $sql = \"ALTER TABLE `$table` \";\r\n\t\t\t \r\n\t\t\t foreach($fields_to_add as $cnt => $field) {\r\n\t\t\t \t if($cnt > 0) $sql .= \", \";\r\n\t\t\t \t $sql .= \"ADD $field[name] $field[type]\";\r\n\t\t\t } \r\n\t\t\t \r\n\t\t\t $wpdb->query($sql);\r\n\t\t}\r\n}\r\n\nadd_action('init', 'watu_init');\r\nadd_action('wp_ajax_watu_submit', 'watu_submit');\r\nadd_action('wp_ajax_nopriv_watu_submit', 'watu_submit');\nadd_action('wp_ajax_watu_taking_details', 'watu_taking_details');"], "filenames": ["controllers/exam.php", "controllers/show_exam.php", "readme.txt", "script.js", "views/show_exam.html.php", "watu.php"], "buggy_code_start_loc": [10, 199, 129, 181, 74, 7], "buggy_code_end_loc": [13, 200, 136, 181, 75, 330], "fixing_code_start_loc": [10, 199, 129, 182, 74, 7], "fixing_code_end_loc": [13, 200, 138, 183, 75, 330], "type": "CWE-89", "message": "A vulnerability was found in Watu Quiz Plugin up to 2.6.7 on WordPress. It has been rated as critical. This issue affects the function watu_exams of the file controllers/exam.php of the component Exam Handler. The manipulation of the argument quiz leads to sql injection. The attack may be initiated remotely. Upgrading to version 2.6.8 is able to address this issue. The name of the patch is bf42e7cfd819a3e76cf3e1465697e89f4830590c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-230651.", "other": {"cve": {"id": "CVE-2015-10111", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-04T12:15:09.237", "lastModified": "2023-06-09T19:13:00.523", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Watu Quiz Plugin up to 2.6.7 on WordPress. It has been rated as critical. This issue affects the function watu_exams of the file controllers/exam.php of the component Exam Handler. The manipulation of the argument quiz leads to sql injection. The attack may be initiated remotely. Upgrading to version 2.6.8 is able to address this issue. The name of the patch is bf42e7cfd819a3e76cf3e1465697e89f4830590c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-230651."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kibokolabs:watu_quiz:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "2.6.8", "matchCriteriaId": "112F437A-B997-4B3F-924B-67BFA19201F6"}]}]}], "references": [{"url": "https://github.com/wp-plugins/watu/commit/bf42e7cfd819a3e76cf3e1465697e89f4830590c", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.230651", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.230651", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/wp-plugins/watu/commit/bf42e7cfd819a3e76cf3e1465697e89f4830590c"}}