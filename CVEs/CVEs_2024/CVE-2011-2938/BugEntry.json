{"buggy_code": ["<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package CoreAPI\n * @subpackage FilterAPI\n * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n */\n\n/**\n * requires current_user_api\n */\nrequire_once( 'current_user_api.php' );\n/**\n * requires user_api\n */\nrequire_once( 'user_api.php' );\n/**\n * requires bug_api\n */\nrequire_once( 'bug_api.php' );\n/**\n * requires collapse_api\n */\nrequire_once( 'collapse_api.php' );\n/**\n * requires relationship_api\n */\nrequire_once( 'relationship_api.php' );\n/**\n * requires tag_api\n */\nrequire_once( 'tag_api.php' );\n/**\n * requires config_filter_defaults_inc\n */\nrequire_once( $g_absolute_path . 'config_filter_defaults_inc.php' );\n\n/**\n * Allow plugins to define a set of class-based filters, and register/load\n * them here to be used by the rest of filter_api.\n * @return array Mapping of field name to filter object\n */\nfunction filter_get_plugin_filters() {\n\tstatic $s_field_array = null;\n\n\tif ( is_null( $s_field_array ) ) {\n\t\t$s_field_array = array();\n\n\t\t$t_all_plugin_filters = event_signal( 'EVENT_FILTER_FIELDS' );\n\t\tforeach( $t_all_plugin_filters as $t_plugin => $t_plugin_filters ) {\n\t\t\tforeach( $t_plugin_filters as $t_callback => $t_plugin_filter_array ) {\n\t\t\t\tif ( is_array( $t_plugin_filter_array ) ) {\n\t\t\t\t\tforeach( $t_plugin_filter_array as $t_filter_class ) {\n\t\t\t\t\t\tif ( class_exists( $t_filter_class ) && is_subclass_of( $t_filter_class, 'MantisFilter' ) ) {\n\t\t\t\t\t\t\t$t_filter_object = new $t_filter_class();\n\t\t\t\t\t\t\t$t_field_name = $t_plugin . '_' . $t_filter_object->field;\n\t\t\t\t\t\t\t$s_field_array[ $t_field_name ] = $t_filter_object;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $s_field_array;\n}\n/**\n *  Get a permalink for the current active filter.  The results of using these fields by other users\n *  can be inconsistent with the original results due to fields like \"Myself\", \"Current Project\",\n *  and due to access level.\n * @param array $p_custom_filter\n * @return string the search.php?xxxx or an empty string if no criteria applied.\n */\nfunction filter_get_url( $p_custom_filter ) {\n\t$t_query = array();\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t$t_project_id = $p_custom_filter[FILTER_PROPERTY_PROJECT_ID];\n\n\t\tif( count( $t_project_id ) == 1 && $t_project_id[0] == META_FILTER_CURRENT ) {\n\t\t\t$t_project_id = array(\n\t\t\t\thelper_get_current_project(),\n\t\t\t);\n\t\t}\n\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PROJECT_ID, $t_project_id );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FREE_TEXT, $p_custom_filter[FILTER_PROPERTY_FREE_TEXT] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_CATEGORY] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_CATEGORY, $p_custom_filter[FILTER_PROPERTY_CATEGORY] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_REPORTER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_REPORTER_ID, $p_custom_filter[FILTER_PROPERTY_REPORTER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_STATUS_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_STATUS_ID, $p_custom_filter[FILTER_PROPERTY_STATUS_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_MONITOR_USER_ID, $p_custom_filter[FILTER_PROPERTY_MONITOR_USER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HANDLER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HANDLER_ID, $p_custom_filter[FILTER_PROPERTY_HANDLER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_NOTE_USER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_NOTE_USER_ID, $p_custom_filter[FILTER_PROPERTY_NOTE_USER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SEVERITY_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SEVERITY_ID, $p_custom_filter[FILTER_PROPERTY_SEVERITY_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RESOLUTION_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RESOLUTION_ID, $p_custom_filter[FILTER_PROPERTY_RESOLUTION_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRIORITY_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRIORITY_ID, $p_custom_filter[FILTER_PROPERTY_PRIORITY_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_VIEW_STATE_ID, $p_custom_filter[FILTER_PROPERTY_VIEW_STATE_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SHOW_STICKY_ISSUES, $p_custom_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRODUCT_VERSION, $p_custom_filter[FILTER_PROPERTY_PRODUCT_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRODUCT_BUILD, $p_custom_filter[FILTER_PROPERTY_PRODUCT_BUILD] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FIXED_IN_VERSION, $p_custom_filter[FILTER_PROPERTY_FIXED_IN_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TARGET_VERSION, $p_custom_filter[FILTER_PROPERTY_TARGET_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SORT_FIELD_NAME, $p_custom_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SORT_DIRECTION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SORT_DIRECTION, $p_custom_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] ) ) {\n\t\tif( $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] != config_get( 'default_limit_view' ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_PROPERTY_ISSUES_PER_PAGE, $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] ) ) {\n\t\tif( $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] != config_get( 'default_show_changed' ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HIGHLIGHT_CHANGED, $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HIDE_STATUS_ID, $p_custom_filter[FILTER_PROPERTY_HIDE_STATUS_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_NOT_ASSIGNED] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_NOT_ASSIGNED, $p_custom_filter[FILTER_PROPERTY_NOT_ASSIGNED] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FILTER_BY_DATE, $p_custom_filter[FILTER_PROPERTY_FILTER_BY_DATE] );\n\n\t\t# The start and end dates are only applicable if filter by date is set.\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_DAY] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_DAY, $p_custom_filter[FILTER_PROPERTY_START_DAY] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_DAY] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_DAY, $p_custom_filter[FILTER_PROPERTY_END_DAY] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_MONTH] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_MONTH, $p_custom_filter[FILTER_PROPERTY_START_MONTH] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_MONTH] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_MONTH, $p_custom_filter[FILTER_PROPERTY_END_MONTH] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_YEAR] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_YEAR, $p_custom_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_YEAR] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_YEAR, $p_custom_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] ) ) {\n\t\tif( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] != -1 ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RELATIONSHIP_TYPE, $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_BUG] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RELATIONSHIP_BUG, $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_BUG] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PLATFORM, $p_custom_filter[FILTER_PROPERTY_PLATFORM] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_OS] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_OS, $p_custom_filter[FILTER_PROPERTY_OS] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_OS_BUILD, $p_custom_filter[FILTER_PROPERTY_OS_BUILD] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TAG_STRING] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TAG_STRING, $p_custom_filter[FILTER_PROPERTY_TAG_STRING] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TAG_SELECT, $p_custom_filter[FILTER_PROPERTY_TAG_SELECT] );\n\t}\n\n\tif( isset( $p_custom_filter['custom_fields'] ) ) {\n\t\tforeach( $p_custom_filter['custom_fields'] as $t_custom_field_id => $t_custom_field_values ) {\n\t\t\tif( !filter_field_is_any( $t_custom_field_values ) ) {\n\t\t\t\t$t_query[] = filter_encode_field_and_value( 'custom_field_' . $t_custom_field_id, $t_custom_field_values );\n\t\t\t}\n\t\t}\n\t}\n\n\t# Allow plugins to add filter fields\n\t$t_plugin_filter_array = filter_get_plugin_filters();\n\tforeach( $t_plugin_filter_array as $t_field_name => $t_filter_object ) {\n\t\tif( !filter_field_is_any( $p_custom_filter[ $t_field_name ] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( $t_field_name, $p_custom_filter[ $t_field_name ], $t_filter_object->type );\n\t\t}\n\t}\n\n\tif( count( $t_query ) > 0 ) {\n\t\t$t_query_str = implode( $t_query, '&' );\n\t\t$t_url = config_get( 'path' ) . 'search.php?' . $t_query_str;\n\t} else {\n\t\t$t_url = '';\n\t}\n\n\treturn $t_url;\n}\n\n/**\n *  Encodes a field and it's value for the filter URL.  This handles the URL encoding\n *  and arrays.\n * @param string $p_field_name The field name.\n * @param string $p_field_value The field value (can be an array)\n * @return string url encoded string\n */\nfunction filter_encode_field_and_value( $p_field_name, $p_field_value, $p_field_type=null ) {\n\t$t_query_array = array();\n\tif( is_array( $p_field_value ) ) {\n\t\t$t_count = count( $p_field_value );\n\t\tif( $t_count > 1 || $p_field_type == FILTER_TYPE_MULTI_STRING || $p_field_type == FILTER_TYPE_MULTI_INT ) {\n\t\t\tforeach( $p_field_value as $t_value ) {\n\t\t\t\t$t_query_array[] = urlencode( $p_field_name . '[]' ) . '=' . urlencode( $t_value );\n\t\t\t}\n\t\t}\n\t\telse if( $t_count == 1 ) {\n\t\t\t$t_query_array[] = urlencode( $p_field_name ) . '=' . urlencode( $p_field_value[0] );\n\t\t}\n\t} else {\n\t\t$t_query_array[] = urlencode( $p_field_name ) . '=' . urlencode( $p_field_value );\n\t}\n\n\treturn implode( $t_query_array, '&' );\n}\n\n# ==========================================================================\n# GENERAL FUNCTIONS                            \t\t\t\t\t\t      =\n# ==========================================================================\n/**\n *  Checks the supplied value to see if it is an ANY value.\n * @param string $p_field_value - The value to check.\n * @return bool true for \"ANY\" values and false for others.  \"ANY\" means filter criteria not active.\n */\nfunction filter_field_is_any( $p_field_value ) {\n\tif( is_array( $p_field_value ) ) {\n\t\tif( count( $p_field_value ) == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tforeach( $p_field_value as $t_value ) {\n\t\t\tif(( META_FILTER_ANY == $t_value ) && ( is_numeric( $t_value ) ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif( is_string( $p_field_value ) && is_blank( $p_field_value ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif( is_bool( $p_field_value ) && !$p_field_value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif(( META_FILTER_ANY == $p_field_value ) && ( is_numeric( $p_field_value ) ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n     *  Checks the supplied value to see if it is a NONE value.\n     * @param string $p_field_value - The value to check.\n     * @return bool true for \"NONE\" values and false for others.\n * @todo is a check for these necessary?  if ( ( $t_filter_value === 'none' ) || ( $t_filter_value === '[none]' ) )\n     */\nfunction filter_field_is_none( $p_field_value ) {\n\tif( is_array( $p_field_value ) ) {\n\t\tforeach( $p_field_value as $t_value ) {\n\t\t\tif(( META_FILTER_NONE == $t_value ) && ( is_numeric( $t_value ) ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif( is_string( $p_field_value ) && is_blank( $p_field_value ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif(( META_FILTER_NONE == $p_field_value ) && ( is_numeric( $p_field_value ) ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n *  Checks the supplied value to see if it is a MYSELF value.\n * @param string $p_field_value - The value to check.\n * @return bool true for \"MYSELF\" values and false for others.\n */\nfunction filter_field_is_myself( $p_field_value ) {\n\treturn( META_FILTER_MYSELF == $p_field_value ? TRUE : FALSE );\n}\n\n/**\n     * @param $p_count\n     * @param $p_per_page\n     * @return int\n     */\nfunction filter_per_page( $p_filter, $p_count, $p_per_page ) {\n\t$p_per_page = (( NULL == $p_per_page ) ? (int) $p_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] : $p_per_page );\n\t$p_per_page = (( 0 == $p_per_page || -1 == $p_per_page ) ? $p_count : $p_per_page );\n\n\treturn (int) abs( $p_per_page );\n}\n\n/**\n     *  Use $p_count and $p_per_page to determine how many pages to split this list up into.\n     *  For the sake of consistency have at least one page, even if it is empty.\n     * @param $p_count\n     * @param $p_per_page\n     * @return $t_page_count\n     */\nfunction filter_page_count( $p_count, $p_per_page ) {\n\t$t_page_count = ceil( $p_count / $p_per_page );\n\tif( $t_page_count < 1 ) {\n\t\t$t_page_count = 1;\n\t}\n\treturn $t_page_count;\n}\n\n/**\n     *  Checks to make sure $p_page_number isn't past the last page.\n     *  and that $p_page_number isn't before the first page\n     *   @param $p_page_number\n     *   @param $p_page_count\n     */\nfunction filter_valid_page_number( $p_page_number, $p_page_count ) {\n\tif( $p_page_number > $p_page_count ) {\n\t\t$p_page_number = $p_page_count;\n\t}\n\n\tif( $p_page_number < 1 ) {\n\t\t$p_page_number = 1;\n\t}\n\treturn $p_page_number;\n}\n\n/**\n     *  Figure out the offset into the db query, offset is which record to start querying from\n     * @param int $p_page_number\n     * @param int $p_per_page\n     * @return int\n     */\nfunction filter_offset( $p_page_number, $p_per_page ) {\n\treturn(( (int) $p_page_number -1 ) * (int) $p_per_page );\n}\n\n/**\n *  Make sure that our filters are entirely correct and complete (it is possible that they are not).\n *  We need to do this to cover cases where we don't have complete control over the filters given.s\n * @param array $p_filter_arr\n * @return mixed\n * @todo function needs to be abstracted\n */\nfunction filter_ensure_valid_filter( $p_filter_arr ) {\n\n\t# extend current filter to add information passed via POST\n\tif( !isset( $p_filter_arr['_version'] ) ) {\n\t\t$p_filter_arr['_version'] = config_get( 'cookie_version' );\n\t}\n\t$t_cookie_vers = (int) utf8_substr( $p_filter_arr['_version'], 1 );\n\tif( utf8_substr( config_get( 'cookie_version' ), 1 ) > $t_cookie_vers ) {\n\n\t\t# if the version is old, update it\n\t\t$p_filter_arr['_version'] = config_get( 'cookie_version' );\n\t}\n\tif( !isset( $p_filter_arr['_view_type'] ) ) {\n\t\t$p_filter_arr['_view_type'] = gpc_get_string( 'view_type', 'simple' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] = gpc_get_int( FILTER_PROPERTY_ISSUES_PER_PAGE, config_get( 'default_limit_view' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_HIGHLIGHT_CHANGED] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_HIGHLIGHT_CHANGED] = config_get( 'default_show_changed' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SHOW_STICKY_ISSUES] = gpc_string_to_bool( config_get( 'show_sticky_issues' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SORT_FIELD_NAME] = \"last_updated\";\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SORT_DIRECTION] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SORT_DIRECTION] = \"DESC\";\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_PLATFORM] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_OS] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_OS] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_OS_BUILD] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_PROJECT_ID] = array(\n\t\t\t0 => META_FILTER_CURRENT,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_MONTH] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_MONTH] = gpc_get_string( FILTER_PROPERTY_START_MONTH, date( 'm' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_DAY] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_DAY] = gpc_get_string( FILTER_PROPERTY_START_DAY, 1 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_YEAR] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_YEAR] = gpc_get_string( FILTER_PROPERTY_START_YEAR, date( 'Y' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_MONTH] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_MONTH] = gpc_get_string( FILTER_PROPERTY_END_MONTH, date( 'm' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_DAY] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_DAY] = gpc_get_string( FILTER_PROPERTY_END_DAY, date( 'd' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_YEAR] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_YEAR] = gpc_get_string( FILTER_PROPERTY_END_YEAR, date( 'Y' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_FREE_TEXT] = '';\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_NOT_ASSIGNED] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_NOT_ASSIGNED] = gpc_get_bool( FILTER_PROPERTY_NOT_ASSIGNED, false );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_FILTER_BY_DATE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_FILTER_BY_DATE] = gpc_get_bool( FILTER_PROPERTY_FILTER_BY_DATE, false );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] = gpc_get( FILTER_PROPERTY_VIEW_STATE_ID, '' );\n\t}\n\telse if( filter_field_is_any( $p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] = META_FILTER_ANY;\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_TYPE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_TYPE] = gpc_get_int( FILTER_PROPERTY_RELATIONSHIP_TYPE, -1 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_BUG] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_BUG] = gpc_get_int( FILTER_PROPERTY_RELATIONSHIP_BUG, 0 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TARGET_VERSION] = META_FILTER_ANY;\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TAG_STRING] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TAG_STRING] = gpc_get_string( FILTER_PROPERTY_TAG_STRING, '' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TAG_SELECT] = gpc_get_string( FILTER_PROPERTY_TAG_SELECT, '' );\n\t}\n\n\t# initialize plugin filters\n\t$t_plugin_filters = filter_get_plugin_filters();\n\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\tif( !isset( $p_filter_arr[ $t_field_name ] ) ) {\n\t\t\tswitch( $t_filter_object->type ) {\n\t\t\t\tcase FILTER_TYPE_STRING:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_string( $t_field_name, $t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_INT:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_int( $t_field_name, (int)$t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_bool( $t_field_name, (bool)$t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_string_array( $t_field_name, array( 0 => META_FILTER_ANY ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_int_array( $t_field_name, array( 0 => META_FILTER_ANY ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = META_FILTER_ANY;\n\t\t\t}\n\t\t}\n\n\t\tif ( ! $t_filter_object->validate( $p_filter_arr[ $t_field_name ] ) ) {\n\t\t\t$p_filter_arr[ $t_field_name ] = $t_filter_object->default;\n\t\t}\n\t}\n\n\t$t_custom_fields = custom_field_get_ids();\n\n\t# @@@ (thraxisp) This should really be the linked ids, but we don't know the project\n\t$f_custom_fields_data = array();\n\tif( is_array( $t_custom_fields ) && ( count( $t_custom_fields ) > 0 ) ) {\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\tif( is_array( gpc_get( 'custom_field_' . $t_cfid, null ) ) ) {\n\t\t\t\t$f_custom_fields_data[$t_cfid] = gpc_get_string_array( 'custom_field_' . $t_cfid, META_FILTER_ANY );\n\t\t\t} else {\n\t\t\t\t$f_custom_fields_data[$t_cfid] = gpc_get_string( 'custom_field_' . $t_cfid, META_FILTER_ANY );\n\t\t\t\t$f_custom_fields_data[$t_cfid] = array(\n\t\t\t\t\t$f_custom_fields_data[$t_cfid],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t# validate sorting\n\t$t_fields = helper_get_columns_to_view();\n\t$t_n_fields = count( $t_fields );\n\tfor( $i = 0;$i < $t_n_fields;$i++ ) {\n\t\tif( isset( $t_fields[$i] ) && in_array( $t_fields[$i], array( 'selection', 'edit', 'bugnotes_count', 'attachment' ) ) ) {\n\t\t\tunset( $t_fields[$i] );\n\t\t}\n\t}\n\t$t_sort_fields = explode( ',', $p_filter_arr['sort'] );\n\t$t_dir_fields = explode( ',', $p_filter_arr['dir'] );\n\tfor( $i = 0;$i < 2;$i++ ) {\n\t\tif( isset( $t_sort_fields[$i] ) ) {\n\t\t\t$t_drop = false;\n\t\t\t$t_sort = $t_sort_fields[$i];\n\t\t\tif( strpos( $t_sort, 'custom_' ) === 0 ) {\n\t\t\t\tif( false === custom_field_get_id_from_name( utf8_substr( $t_sort, utf8_strlen( 'custom_' ) ) ) ) {\n\t\t\t\t\t$t_drop = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !in_array( $t_sort, $t_fields ) ) {\n\t\t\t\t\t$t_drop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( !in_array( $t_dir_fields[$i], array( \"ASC\", \"DESC\" ) ) ) {\n\t\t\t\t$t_drop = true;\n\t\t\t}\n\t\t\tif( $t_drop ) {\n\t\t\t\tunset( $t_sort_fields[$i] );\n\t\t\t\tunset( $t_dir_fields[$i] );\n\t\t\t}\n\t\t}\n\t}\n\tif( count( $t_sort_fields ) > 0 ) {\n\t\t$p_filter_arr['sort'] = implode( ',', $t_sort_fields );\n\t\t$p_filter_arr['dir'] = implode( ',', $t_dir_fields );\n\t} else {\n\t\t$p_filter_arr['sort'] = \"last_updated\";\n\t\t$p_filter_arr['dir'] = \"DESC\";\n\t}\n\n\t# validate or filter junk from other fields\n\t$t_multi_select_list = array(\n\t\tFILTER_PROPERTY_CATEGORY => 'string',\n\t\tFILTER_PROPERTY_SEVERITY_ID => 'int',\n\t\tFILTER_PROPERTY_STATUS_ID => 'int',\n\t\tFILTER_PROPERTY_REPORTER_ID => 'int',\n\t\tFILTER_PROPERTY_HANDLER_ID => 'int',\n\t\tFILTER_PROPERTY_NOTE_USER_ID => 'int',\n\t\tFILTER_PROPERTY_RESOLUTION_ID => 'int',\n\t\tFILTER_PROPERTY_PRIORITY_ID => 'int',\n\t\tFILTER_PROPERTY_PRODUCT_BUILD => 'string',\n\t\tFILTER_PROPERTY_PRODUCT_VERSION => 'string',\n\t\tFILTER_PROPERTY_HIDE_STATUS_ID => 'int',\n\t\tFILTER_PROPERTY_FIXED_IN_VERSION => 'string',\n\t\tFILTER_PROPERTY_TARGET_VERSION => 'string',\n\t\tFILTER_PROPERTY_MONITOR_USER_ID => 'int',\n\t\t'show_profile' => 'int',\n\t);\n\tforeach( $t_multi_select_list as $t_multi_field_name => $t_multi_field_type ) {\n\t\tif( !isset( $p_filter_arr[$t_multi_field_name] ) ) {\n\t\t\tif( FILTER_PROPERTY_HIDE_STATUS_ID == $t_multi_field_name ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\tconfig_get( 'hide_status_default' ),\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if( 'custom_fields' == $t_multi_field_name ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\t$f_custom_fields_data,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\tMETA_FILTER_ANY,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif( !is_array( $p_filter_arr[$t_multi_field_name] ) ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\t$p_filter_arr[$t_multi_field_name],\n\t\t\t\t);\n\t\t\t}\n\t\t\t$t_checked_array = array();\n\t\t\tforeach( $p_filter_arr[$t_multi_field_name] as $t_filter_value ) {\n\t\t\t\t$t_filter_value = stripslashes( $t_filter_value );\n\t\t\t\tif(( $t_filter_value === 'any' ) || ( $t_filter_value === '[any]' ) ) {\n\t\t\t\t\t$t_filter_value = META_FILTER_ANY;\n\t\t\t\t}\n\t\t\t\tif(( $t_filter_value === 'none' ) || ( $t_filter_value === '[none]' ) ) {\n\t\t\t\t\t$t_filter_value = META_FILTER_NONE;\n\t\t\t\t}\n\t\t\t\tif( 'string' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = db_prepare_string( $t_filter_value );\n\t\t\t\t}\n\t\t\t\telse if( 'int' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = db_prepare_int( $t_filter_value );\n\t\t\t\t}\n\t\t\t\telse if( 'array' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = $t_filter_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$p_filter_arr[$t_multi_field_name] = $t_checked_array;\n\t\t}\n\t}\n\n\tif( is_array( $t_custom_fields ) && ( count( $t_custom_fields ) > 0 ) ) {\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\tif( !isset( $p_filter_arr['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = array(\n\t\t\t\t\tMETA_FILTER_ANY,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif( !is_array( $p_filter_arr['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = array(\n\t\t\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t$t_checked_array = array();\n\t\t\t\tforeach( $p_filter_arr['custom_fields'][$t_cfid] as $t_filter_value ) {\n\t\t\t\t\t$t_filter_value = stripslashes( $t_filter_value );\n\t\t\t\t\tif(( $t_filter_value === 'any' ) || ( $t_filter_value === '[any]' ) ) {\n\t\t\t\t\t\t$t_filter_value = META_FILTER_ANY;\n\t\t\t\t\t}\n\t\t\t\t\t$t_checked_array[] = db_prepare_string( $t_filter_value );\n\t\t\t\t}\n\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = $t_checked_array;\n\t\t\t}\n\t\t}\n\t}\n\n\t# all of our filter values are now guaranteed to be there, and correct.\n\treturn $p_filter_arr;\n}\n\n/**\n *  Get the standard filter that is to be used when no filter was previously saved.\n *  When creating specific filters, this can be used as a basis for the filter, where\n *  specific entries can be overridden.\n * @return mixed\n */\nfunction filter_get_default() {\n\t$t_hide_status_default = config_get( 'hide_status_default' );\n\t$t_default_show_changed = config_get( 'default_show_changed' );\n\n\t$t_filter = array(\n\t\tFILTER_PROPERTY_CATEGORY => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_SEVERITY_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_STATUS_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HIGHLIGHT_CHANGED => $t_default_show_changed,\n\t\tFILTER_PROPERTY_REPORTER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HANDLER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PROJECT_ID => Array(\n\t\t\t'0' => META_FILTER_CURRENT,\n\t\t),\n\t\tFILTER_PROPERTY_RESOLUTION_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PRODUCT_BUILD => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PRODUCT_VERSION => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HIDE_STATUS_ID => Array(\n\t\t\t'0' => $t_hide_status_default,\n\t\t),\n\t\tFILTER_PROPERTY_MONITOR_USER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_SORT_FIELD_NAME => 'last_updated',\n\t\tFILTER_PROPERTY_SORT_DIRECTION => 'DESC',\n\t\tFILTER_PROPERTY_ISSUES_PER_PAGE => config_get( 'default_limit_view' ),\n\t);\n\n\treturn filter_ensure_valid_filter( $t_filter );\n}\n\n/**\n *  Deserialize filter string\n * @param string $p_serialized_filter\n * @return mixed $t_filter array\n * @see filter_ensure_valid_filter\n */\nfunction filter_deserialize( $p_serialized_filter ) {\n\tif( is_blank( $p_serialized_filter ) ) {\n\t\treturn false;\n\t}\n\n\t# check to see if new cookie is needed\n\t$t_setting_arr = explode( '#', $p_serialized_filter, 2 );\n\tif(( $t_setting_arr[0] == 'v1' ) || ( $t_setting_arr[0] == 'v2' ) || ( $t_setting_arr[0] == 'v3' ) || ( $t_setting_arr[0] == 'v4' ) ) {\n\n\t\t# these versions can't be salvaged, they are too old to update\n\t\treturn false;\n\t}\n\n\t# We shouldn't need to do this anymore, as filters from v5 onwards should cope with changing\n\t# filter indices dynamically\n\t$t_filter_array = array();\n\tif( isset( $t_setting_arr[1] ) ) {\n\t\t$t_filter_array = unserialize( $t_setting_arr[1] );\n\t} else {\n\t\treturn false;\n\t}\n\tif( $t_filter_array['_version'] != config_get( 'cookie_version' ) ) {\n\n\t\t# if the version is not new enough, update it using defaults\n\t\treturn filter_ensure_valid_filter( $t_filter_array );\n\t}\n\n\treturn $t_filter_array;\n}\n\n/**\n *  Check if the filter cookie exists and is of the correct version.\n * @return bool\n */\nfunction filter_is_cookie_valid() {\n\t$t_view_all_cookie_id = gpc_get_cookie( config_get( 'view_all_cookie' ), '' );\n\t$t_view_all_cookie = filter_db_get_filter( $t_view_all_cookie_id );\n\n\t# check to see if the cookie does not exist\n\tif( is_blank( $t_view_all_cookie ) ) {\n\t\treturn false;\n\t}\n\n\t# check to see if new cookie is needed\n\t$t_setting_arr = explode( '#', $t_view_all_cookie, 2 );\n\tif(( $t_setting_arr[0] == 'v1' ) || ( $t_setting_arr[0] == 'v2' ) || ( $t_setting_arr[0] == 'v3' ) || ( $t_setting_arr[0] == 'v4' ) ) {\n\t\treturn false;\n\t}\n\n\t# We shouldn't need to do this anymore, as filters from v5 onwards should cope with changing\n\t# filter indices dynamically\n\t$t_filter_cookie_arr = array();\n\tif( isset( $t_setting_arr[1] ) ) {\n\t\t$t_filter_cookie_arr = unserialize( $t_setting_arr[1] );\n\t} else {\n\t\treturn false;\n\t}\n\tif( $t_filter_cookie_arr['_version'] != config_get( 'cookie_version' ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n *  Get the array fields specified by $p_filter_id\n *  using the cached row if it's available\n * @param int $p_filter_id\n * @return mixed a filter row\n */\nfunction filter_get_row( $p_filter_id ) {\n\treturn filter_cache_row( $p_filter_id );\n}\n\n/**\n *  Get the value of the filter field specified by filter id and field name\n * @param int $p_filter_id\n * @param string $p_field_name\n * @return string\n */\nfunction filter_get_field( $p_filter_id, $p_field_name ) {\n\t$row = filter_get_row( $p_filter_id );\n\n\tif( isset( $row[$p_field_name] ) ) {\n\t\treturn $row[$p_field_name];\n\t} else {\n\t\terror_parameters( $p_field_name );\n\t\ttrigger_error( ERROR_DB_FIELD_NOT_FOUND, WARNING );\n\t\treturn '';\n\t}\n}\n\n/**\n *  Add sort parameters to the query clauses\n * @param array $p_filter\n * @param bool $p_show_sticky\n * @param array $p_query_clauses\n * @return array $p_query_clauses\n */\nfunction filter_get_query_sort_data( &$p_filter, $p_show_sticky, $p_query_clauses ) {\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$t_custom_field_string_table = db_get_table( 'mantis_custom_field_string_table' );\n\n\t# if sort is blank then default the sort and direction.  This is to fix the\n\t# symptoms of #3953.  Note that even if the main problem is fixed, we may\n\t# have to keep this code for a while to handle filters saved with this blank field.\n\tif( is_blank( $p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] = 'last_updated';\n\t\t$p_filter[FILTER_PROPERTY_SORT_DIRECTION] = 'DESC';\n\t}\n\n\t$p_query_clauses['order'] = array();\n\t$t_sort_fields = explode( ',', $p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t$t_dir_fields = explode( ',', $p_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\n\t$t_plugin_columns = columns_get_plugin_columns();\n\n\tif ( gpc_string_to_bool( $p_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) && ( NULL !== $p_show_sticky ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.sticky DESC\";\n\t}\n\n\t$t_count = count( $t_sort_fields );\n\tfor( $i = 0;$i < $t_count;$i++ ) {\n\t\t$c_sort = db_prepare_string( $t_sort_fields[$i] );\n\t\t$c_dir = 'DESC' == $t_dir_fields[$i] ? 'DESC' : 'ASC';\n\n\t\tif( !in_array( $t_sort_fields[$i], array_slice( $t_sort_fields, $i + 1 ) ) ) {\n\n\t\t\t# if sorting by a custom field\n\t\t\tif( strpos( $c_sort, 'custom_' ) === 0 ) {\n\t\t\t\t$t_custom_field = utf8_substr( $c_sort, utf8_strlen( 'custom_' ) );\n\t\t\t\t$t_custom_field_id = custom_field_get_id_from_name( $t_custom_field );\n\n\t\t\t\t$c_cf_alias = str_replace( ' ', '_', $t_custom_field );\n\t\t\t\t$t_cf_table_alias = $t_custom_field_string_table . '_' . $t_custom_field_id;\n\t\t\t\t$t_cf_select = \"$t_cf_table_alias.value $c_cf_alias\";\n\n\t\t\t\t# check to be sure this field wasn't already added to the query.\n\t\t\t\tif( !in_array( $t_cf_select, $p_query_clauses['select'] ) ) {\n\t\t\t\t\t$p_query_clauses['select'][] = $t_cf_select;\n\t\t\t\t\t$p_query_clauses['join'][] = \"LEFT JOIN $t_custom_field_string_table $t_cf_table_alias ON $t_bug_table.id = $t_cf_table_alias.bug_id AND $t_cf_table_alias.field_id = $t_custom_field_id\";\n\t\t\t\t}\n\n\t\t\t\t$p_query_clauses['order'][] = \"$c_cf_alias $c_dir\";\n\n\t\t\t# if sorting by plugin columns\n\t\t\t} else if ( isset( $t_plugin_columns[ $t_sort_fields[$i] ] ) ) {\n\t\t\t\t$t_column_object = $t_plugin_columns[ $t_sort_fields[$i] ];\n\n\t\t\t\tif ( $t_column_object->sortable ) {\n\t\t\t\t\t$t_clauses = $t_column_object->sortquery( $c_dir );\n\n\t\t\t\t\tif ( is_array( $t_clauses ) ) {\n\t\t\t\t\t\tif ( isset( $t_clauses['join'] ) ) {\n\t\t\t\t\t\t\t$p_query_clauses['join'][] = $t_clauses['join'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( isset( $t_clauses['order'] ) ) {\n\t\t\t\t\t\t\t$p_query_clauses['order'][] = $t_clauses['order'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t# standard column\n\t\t\t} else {\n\t\t\t\tif ( 'last_updated' == $c_sort ) {\n\t\t\t\t\t$c_sort = \"last_updated\";\n\t\t\t\t}\n\t\t\t\t$p_query_clauses['order'][] = \"$t_bug_table.$c_sort $c_dir\";\n\t\t\t}\n\t\t}\n\t}\n\n\t# add basic sorting if necessary\n\tif( !in_array( 'last_updated', $t_sort_fields ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.last_updated DESC\";\n\t}\n\tif( !in_array( 'date_submitted', $t_sort_fields ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.date_submitted DESC\";\n\t}\n\n\treturn $p_query_clauses;\n}\n\n/**\n     *  Remove any duplicate values in certain elements of query_clauses\n     *  Do not loop over query clauses as some keys may contain valid duplicate values.\n     *  We basically want unique values for just the base query elements select, from, and join\n     *  'where' and 'where_values' key should not have duplicates as that is handled earlier and applying\n     *  array_unique here could cause problems with the query.\n     * @param $p_query_clauses\n     * @return $p_query_clauses\n     */\nfunction filter_unique_query_clauses( $p_query_clauses ) {\n\t$p_query_clauses['select'] = array_unique( $p_query_clauses['select'] );\n\t$p_query_clauses['from'] = array_unique( $p_query_clauses['from'] );\n\t$p_query_clauses['join'] = array_unique( $p_query_clauses['join'] );\n\treturn $p_query_clauses;\n}\n\n/**\n     *  Build a query with the query clauses array, query for bug count and return the result\n     * @param array $p_query_clauses\n     * @return int\n     */\nfunction filter_get_bug_count( $p_query_clauses ) {\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$p_query_clauses = filter_unique_query_clauses( $p_query_clauses );\n\t$t_select_string = \"SELECT Count( DISTINCT $t_bug_table.id ) as idcnt \";\n\t$t_from_string = \" FROM \" . implode( ', ', $p_query_clauses['from'] );\n\t$t_join_string = (( count( $p_query_clauses['join'] ) > 0 ) ? implode( ' ', $p_query_clauses['join'] ) : '' );\n\t$t_where_string = (( count( $p_query_clauses['where'] ) > 0 ) ? 'WHERE ' . implode( ' AND ', $p_query_clauses['where'] ) : '' );\n\t$t_result = db_query_bound( \"$t_select_string $t_from_string $t_join_string $t_where_string\", $p_query_clauses['where_values'] );\n\treturn db_result( $t_result );\n}\n\n/**\n * @todo Had to make all these parameters required because we can't use\n *  call-time pass by reference anymore.  I really preferred not having\n *  to pass all the params in if you didn't want to, but I wanted to get\n *  rid of the errors for now.  If we can think of a better way later\n *  (maybe return an object) that would be great.\n *\n * @param int $p_page_number the page you want to see (set to the actual page on return)\n * @param int $p_per_page the number of bugs to see per page (set to actual on return)\n *      -1   indicates you want to see all bugs\n *      null indicates you want to use the value specified in the filter\n * @param int $p_page_count you don't need to give a value here, the number of pages will be stored here on return\n * @param int $p_bug_count you don't need to give a value here, the number of bugs will be stored here on return\n * @param mixed $p_custom_filter Filter to use.\n * @param int $p_project_id project id to use in filtering.\n * @param int $p_user_id user id to use as current user when filtering.\n * @param bool $p_show_sticky get sticky issues only.\n */\nfunction filter_get_bug_rows( &$p_page_number, &$p_per_page, &$p_page_count, &$p_bug_count, $p_custom_filter = null, $p_project_id = null, $p_user_id = null, $p_show_sticky = null ) {\n\tlog_event( LOG_FILTERING, 'START NEW FILTER QUERY' );\n\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$t_bug_text_table = db_get_table( 'mantis_bug_text_table' );\n\t$t_bugnote_table = db_get_table( 'mantis_bugnote_table' );\n\t$t_category_table = db_get_table( 'mantis_category_table' );\n\t$t_custom_field_string_table = db_get_table( 'mantis_custom_field_string_table' );\n\t$t_bugnote_text_table = db_get_table( 'mantis_bugnote_text_table' );\n\t$t_project_table = db_get_table( 'mantis_project_table' );\n\t$t_bug_monitor_table = db_get_table( 'mantis_bug_monitor_table' );\n\t$t_limit_reporters = config_get( 'limit_reporters' );\n\t$t_bug_relationship_table = db_get_table( 'mantis_bug_relationship_table' );\n\t$t_report_bug_threshold = config_get( 'report_bug_threshold' );\n\t$t_where_param_count = 0;\n\n\t$t_current_user_id = auth_get_current_user_id();\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = $t_current_user_id;\n\t} else {\n\t\t$t_user_id = $p_user_id;\n\t}\n\n\t$c_user_id = db_prepare_int( $t_user_id );\n\n\tif( null === $p_project_id ) {\n\n\t\t# @@@ If project_id is not specified, then use the project id(s) in the filter if set, otherwise, use current project.\n\t\t$t_project_id = helper_get_current_project();\n\t} else {\n\t\t$t_project_id = $p_project_id;\n\t}\n\n\tif( $p_custom_filter === null ) {\n\n\t\t# Prefer current_user_get_bug_filter() over user_get_filter() when applicable since it supports\n\t\t# cookies set by previous version of the code.\n\t\tif( $t_user_id == $t_current_user_id ) {\n\t\t\t$t_filter = current_user_get_bug_filter();\n\t\t} else {\n\t\t\t$t_filter = user_get_bug_filter( $t_user_id, $t_project_id );\n\t\t}\n\t} else {\n\t\t$t_filter = $p_custom_filter;\n\t}\n\n\t$t_filter = filter_ensure_valid_filter( $t_filter );\n\n\tif( false === $t_filter ) {\n\t\treturn false;\n\n\t\t# signify a need to create a cookie\n\t\t# @@@ error instead?\n\t}\n\n\t$t_view_type = $t_filter['_view_type'];\n\t$t_where_clauses = array(\n\t\t\"$t_project_table.enabled = \" . db_param(),\n\t\t\"$t_project_table.id = $t_bug_table.project_id\",\n\t);\n\t$t_where_params = array(\n\t\t1,\n\t);\n\t$t_select_clauses = array(\n\t\t\"$t_bug_table.*\",\n\t);\n\n\t$t_join_clauses = array();\n\t$t_from_clauses = array();\n\n\t// normalize the project filtering into an array $t_project_ids\n\tif( 'simple' == $t_view_type ) {\n\t\tlog_event( LOG_FILTERING, 'Simple Filter' );\n\t\t$t_project_ids = array(\n\t\t\t$t_project_id,\n\t\t);\n\t\t$t_include_sub_projects = true;\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'Advanced Filter' );\n\t\tif( !is_array( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t\t$t_project_ids = array(\n\t\t\t\tdb_prepare_int( $t_filter[FILTER_PROPERTY_PROJECT_ID] ),\n\t\t\t);\n\t\t} else {\n\t\t\t$t_project_ids = array_map( 'db_prepare_int', $t_filter[FILTER_PROPERTY_PROJECT_ID] );\n\t\t}\n\n\t\t$t_include_sub_projects = (( count( $t_project_ids ) == 1 ) && ( ( $t_project_ids[0] == META_FILTER_CURRENT ) || ( $t_project_ids[0] == ALL_PROJECTS ) ) );\n\t}\n\n\tlog_event( LOG_FILTERING, 'project_ids = @P' . implode( ', @P', $t_project_ids ) );\n\tlog_event( LOG_FILTERING, 'include sub-projects = ' . ( $t_include_sub_projects ? '1' : '0' ) );\n\n\t// if the array has ALL_PROJECTS, then reset the array to only contain ALL_PROJECTS.\n\t// replace META_FILTER_CURRENT with the actualy current project id.\n\t$t_all_projects_found = false;\n\t$t_new_project_ids = array();\n\tforeach( $t_project_ids as $t_pid ) {\n\t\tif( $t_pid == META_FILTER_CURRENT ) {\n\t\t\t$t_pid = $t_project_id;\n\t\t}\n\n\t\tif( $t_pid == ALL_PROJECTS ) {\n\t\t\t$t_all_projects_found = true;\n\t\t\tlog_event( LOG_FILTERING, 'all projects selected' );\n\t\t\tbreak;\n\t\t}\n\n\t\t// filter out inaccessible projects.\n\t\tif( !access_has_project_level( VIEWER, $t_pid, $t_user_id ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$t_new_project_ids[] = $t_pid;\n\t}\n\n\t$t_projects_query_required = true;\n\tif( $t_all_projects_found ) {\n\t\tif( user_is_administrator( $t_user_id ) ) {\n\t\t\tlog_event( LOG_FILTERING, 'all projects + administrator, hence no project filter.' );\n\t\t\t$t_projects_query_required = false;\n\t\t} else {\n\t\t\t$t_project_ids = user_get_accessible_projects( $t_user_id );\n\t\t}\n\t} else {\n\t\t$t_project_ids = $t_new_project_ids;\n\t}\n\n\tif( $t_projects_query_required ) {\n\n\t\t// expand project ids to include sub-projects\n\t\tif( $t_include_sub_projects ) {\n\t\t\t$t_top_project_ids = $t_project_ids;\n\n\t\t\tforeach( $t_top_project_ids as $t_pid ) {\n\t\t\t\tlog_event( LOG_FILTERING, 'Getting sub-projects for project id @P' . $t_pid );\n\t\t\t\t$t_subproject_ids = user_get_all_accessible_subprojects( $t_user_id, $t_pid );\n\t\t\t\tif (!$t_subproject_ids) continue;\n\t\t\t\t$t_project_ids = array_merge( $t_project_ids, $t_subproject_ids );\n\t\t\t}\n\n\t\t\t$t_project_ids = array_unique( $t_project_ids );\n\t\t}\n\n\t\t// if no projects are accessible, then return an empty array.\n\t\tif( count( $t_project_ids ) == 0 ) {\n\t\t\tlog_event( LOG_FILTERING, 'no accessible projects' );\n\t\t\treturn array();\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project_ids after including sub-projects = @P' . implode( ', @P', $t_project_ids ) );\n\n\t\t// this array is to be populated with project ids for which we only want to show public issues.  This is due to the limited\n\t\t// access of the current user.\n\t\t$t_public_only_project_ids = array();\n\n\t\t// this array is populated with project ids that the current user has full access to.\n\t\t$t_private_and_public_project_ids = array();\n\n\t\t$t_access_required_to_view_private_bugs = config_get( 'private_bug_threshold' );\n\t\tforeach( $t_project_ids as $t_pid ) {\n\t\t\tif( access_has_project_level( $t_access_required_to_view_private_bugs, $t_pid, $t_user_id ) ) {\n\t\t\t\t$t_private_and_public_project_ids[] = $t_pid;\n\t\t\t} else {\n\t\t\t\t$t_public_only_project_ids[] = $t_pid;\n\t\t\t}\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project_ids (with public/private access) = @P' . implode( ', @P', $t_private_and_public_project_ids ) );\n\t\tlog_event( LOG_FILTERING, 'project_ids (with public access) = @P' . implode( ', @P', $t_public_only_project_ids ) );\n\n\t\t$t_count_private_and_public_project_ids = count( $t_private_and_public_project_ids );\n\t\tif( $t_count_private_and_public_project_ids == 1 ) {\n\t\t\t$t_private_and_public_query = \"( $t_bug_table.project_id = \" . $t_private_and_public_project_ids[0] . \" )\";\n\t\t}\n\t\telse if( $t_count_private_and_public_project_ids > 1 ) {\n\t\t\t$t_private_and_public_query = \"( $t_bug_table.project_id in (\" . implode( ', ', $t_private_and_public_project_ids ) . \") )\";\n\t\t} else {\n\t\t\t$t_private_and_public_query = null;\n\t\t}\n\n\t\t$t_count_public_only_project_ids = count( $t_public_only_project_ids );\n\t\t$t_public_view_state_check = \"( ( $t_bug_table.view_state = \" . VS_PUBLIC . \" ) OR ( $t_bug_table.reporter_id = $t_user_id ) )\";\n\t\tif( $t_count_public_only_project_ids == 1 ) {\n\t\t\t$t_public_only_query = \"( ( $t_bug_table.project_id = \" . $t_public_only_project_ids[0] . \" ) AND $t_public_view_state_check )\";\n\t\t}\n\t\telse if( $t_count_public_only_project_ids > 1 ) {\n\t\t\t$t_public_only_query = \"( ( $t_bug_table.project_id in (\" . implode( ', ', $t_public_only_project_ids ) . \") ) AND $t_public_view_state_check )\";\n\t\t} else {\n\t\t\t$t_public_only_query = null;\n\t\t}\n\n\t\t// both queries can't be null, so we either have one of them or both.\n\n\t\tif( $t_private_and_public_query === null ) {\n\t\t\t$t_project_query = $t_public_only_query;\n\t\t} else if( $t_public_only_query === null ) {\n\t\t\t$t_project_query = $t_private_and_public_query;\n\t\t} else {\n\t\t\t$t_project_query = \"( $t_public_only_query OR $t_private_and_public_query )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project query = ' . $t_project_query );\n\t\tarray_push( $t_where_clauses, $t_project_query );\n\t}\n\n\t# view state\n\t$t_view_state = db_prepare_int( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] );\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$t_view_state_query = \"($t_bug_table.view_state=\" . db_param() . ')';\n\t\tlog_event( LOG_FILTERING, 'view_state query = ' . $t_view_state_query );\n\t\t$t_where_params[] = $t_view_state;\n\t\tarray_push( $t_where_clauses, $t_view_state_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no view_state query' );\n\t}\n\n\t# reporter\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_REPORTER_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_REPORTER_ID] as $t_filter_member ) {\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, \"0\" );\n\t\t\t} else {\n\t\t\t\t$c_reporter_id = db_prepare_int( $t_filter_member );\n\t\t\t\tif( filter_field_is_myself( $c_reporter_id ) ) {\n\t\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t\t} else {\n\t\t\t\t\tarray_push( $t_clauses, $c_reporter_id );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_reporter_query = \"( $t_bug_table.reporter_id in (\" . implode( ', ', $t_clauses ) . \") )\";\n\t\t} else {\n\t\t\t$t_reporter_query = \"( $t_bug_table.reporter_id=$t_clauses[0] )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'reporter query = ' . $t_reporter_query );\n\t\tarray_push( $t_where_clauses, $t_reporter_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no reporter query' );\n\t}\n\n\t# limit reporter\n\t# @@@ thraxisp - access_has_project_level checks greater than or equal to,\n\t#   this assumed that there aren't any holes above REPORTER where the limit would apply\n\t#\n\tif(( ON === $t_limit_reporters ) && ( !access_has_project_level( REPORTER + 1, $t_project_id, $t_user_id ) ) ) {\n\t\t$c_reporter_id = $c_user_id;\n\t\t$t_where_params[] = $c_reporter_id;\n\t\tarray_push( $t_where_clauses, \"($t_bug_table.reporter_id=\" . db_param() . ')' );\n\t}\n\n\t# handler\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_HANDLER_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_HANDLER_ID] as $t_filter_member ) {\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, 0 );\n\t\t\t} else {\n\t\t\t\t$c_handler_id = db_prepare_int( $t_filter_member );\n\t\t\t\tif( filter_field_is_myself( $c_handler_id ) ) {\n\t\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t\t} else {\n\t\t\t\t\tarray_push( $t_clauses, $c_handler_id );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_handler_query = \"( $t_bug_table.handler_id in (\" . implode( ', ', $t_clauses ) . \") )\";\n\t\t} else {\n\t\t\t$t_handler_query = \"( $t_bug_table.handler_id=$t_clauses[0] )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'handler query = ' . $t_handler_query );\n\t\tarray_push( $t_where_clauses, $t_handler_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no handler query' );\n\t}\n\n\t# category\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_CATEGORY] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_CATEGORY] as $t_filter_member ) {\n\t\t\tif( !filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, $t_filter_member );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.category_id in ( SELECT id FROM $t_category_table WHERE name in (\" . implode( ', ', $t_where_tmp ) . \") ) )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.category_id in ( SELECT id FROM $t_category_table WHERE name=\" . db_param() . \") )\" );\n\t\t}\n\t}\n\n\t# severity\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_SEVERITY_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_SEVERITY_ID] as $t_filter_member ) {\n\t\t\t$c_show_severity = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_severity );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.severity in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.severity=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# show / hide status\n\t# take a list of all available statuses then remove the ones that we want hidden, then make sure\n\t# the ones we want shown are still available\n\t$t_desired_statuses = array();\n\t$t_available_statuses = MantisEnum::getValues( config_get( 'status_enum_string' ) );\n\n\tif( 'simple' == $t_filter['_view_type'] ) {\n\n\t\t# simple filtering: if showing any, restrict by the hide status value, otherwise ignore the hide\n\t\t$t_any_found = false;\n\t\t$t_this_status = $t_filter[FILTER_PROPERTY_STATUS_ID][0];\n\t\t$t_this_hide_status = $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID][0];\n\n\t\tif( filter_field_is_any( $t_this_status ) ) {\n\t\t\tforeach( $t_available_statuses as $t_this_available_status ) {\n\t\t\t\tif( $t_this_hide_status > $t_this_available_status ) {\n\t\t\t\t\t$t_desired_statuses[] = $t_this_available_status;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$t_desired_statuses[] = $t_this_status;\n\t\t}\n\t} else {\n\t\t# advanced filtering: ignore the hide\n\t\tif( filter_field_is_any( $t_filter[FILTER_PROPERTY_STATUS_ID] ) ) {\n\t\t\t$t_desired_statuses = array();\n\t\t} else {\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_STATUS_ID] as $t_this_status ) {\n\t\t\t\t$t_desired_statuses[] = $t_this_status;\n\t\t\t}\n\t\t}\n\t}\n\n\tif( count( $t_desired_statuses ) > 0 ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_desired_statuses as $t_filter_member ) {\n\t\t\t$c_show_status = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_status );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.status in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.status=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# resolution\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] as $t_filter_member ) {\n\t\t\t$c_show_resolution = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_resolution );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.resolution in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.resolution=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# priority\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRIORITY_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRIORITY_ID] as $t_filter_member ) {\n\t\t\t$c_show_priority = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_priority );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.priority in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.priority=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# product build\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_show_build = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_show_build );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.build in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.build=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# product version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_show_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_show_version );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# profile\n\tif( !filter_field_is_any( $t_filter['show_profile'] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter['show_profile'] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, \"0\" );\n\t\t\t} else {\n\t\t\t\t$c_show_profile = db_prepare_int( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, \"$c_show_profile\" );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.profile_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.profile_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# platform\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PLATFORM] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_platform = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_platform );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.platform in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.platform = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# os\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_OS] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_OS] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_os = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_os );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# os_build\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_OS_BUILD] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_os_build = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_os_build );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os_build in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os_build = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# date filter\n\tif(( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_MONTH] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_DAY] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_YEAR] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_MONTH] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_DAY] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_YEAR] ) ) {\n\n\t\t$t_start_string = $t_filter[FILTER_PROPERTY_START_YEAR] . \"-\" . $t_filter[FILTER_PROPERTY_START_MONTH] . \"-\" . $t_filter[FILTER_PROPERTY_START_DAY] . \" 00:00:00\";\n\t\t$t_end_string = $t_filter[FILTER_PROPERTY_END_YEAR] . \"-\" . $t_filter[FILTER_PROPERTY_END_MONTH] . \"-\" . $t_filter[FILTER_PROPERTY_END_DAY] . \" 23:59:59\";\n\n\t\t$t_where_params[] = strtotime( $t_start_string );\n\t\t$t_where_params[] = strtotime( $t_end_string );\n\t\tarray_push( $t_where_clauses, \"($t_bug_table.date_submitted BETWEEN \" . db_param() . \" AND \" . db_param() . \" )\" );\n\t}\n\n\t# fixed in version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_fixed_in_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_fixed_in_version );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.fixed_in_version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.fixed_in_version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# target version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_TARGET_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_target_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_target_version );\n\t\t\t}\n\t\t}\n\n\t\t# echo var_dump( $t_clauses ); exit;\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.target_version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.target_version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# users monitoring a bug\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) ) {\n\t\t$t_clauses = array();\n\t\t$t_table_name = 'user_monitor';\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_monitor_table $t_table_name ON $t_table_name.bug_id = $t_bug_table.id\" );\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] as $t_filter_member ) {\n\t\t\t$c_user_monitor = db_prepare_int( $t_filter_member );\n\t\t\tif( filter_field_is_myself( $c_user_monitor ) ) {\n\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t} else {\n\t\t\t\tarray_push( $t_clauses, $c_user_monitor );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_table_name.user_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_table_name.user_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# bug relationship\n\t$t_any_found = false;\n\t$c_rel_type = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\t$c_rel_bug = $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG];\n\tif( -1 == $c_rel_type || 0 == $c_rel_bug ) {\n\t\t$t_any_found = true;\n\t}\n\tif( !$t_any_found ) {\n\t\t# use the complementary type\n\t\t$t_comp_type = relationship_get_complementary_type( $c_rel_type );\n\t\t$t_clauses = array();\n\t\t$t_table_name = 'relationship';\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_relationship_table $t_table_name ON $t_table_name.destination_bug_id = $t_bug_table.id\" );\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_relationship_table ${t_table_name}2 ON ${t_table_name}2.source_bug_id = $t_bug_table.id\" );\n\n\t\t// get reverse relationships\n\t\t$t_where_params[] = $t_comp_type;\n\t\t$t_where_params[] = $c_rel_bug;\n\t\t$t_where_params[] = $c_rel_type;\n\t\t$t_where_params[] = $c_rel_bug;\n\t\tarray_push( $t_clauses, \"($t_table_name.relationship_type=\" . db_param() . \" AND $t_table_name.source_bug_id=\" . db_param() . ')' );\n\t\tarray_push( $t_clauses, \"($t_table_name\" . \"2.relationship_type=\" . db_param() . \" AND $t_table_name\" . \"2.destination_bug_id=\" . db_param() . ')' );\n\t\tarray_push( $t_where_clauses, '(' . implode( ' OR ', $t_clauses ) . ')' );\n\t}\n\n\t# tags\n\t$c_tag_string = trim( $t_filter[FILTER_PROPERTY_TAG_STRING] );\n\t$c_tag_select = trim( $t_filter[FILTER_PROPERTY_TAG_SELECT] );\n\tif( is_blank( $c_tag_string ) && !is_blank( $c_tag_select ) && $c_tag_select != 0 ) {\n\t\t$t_tag = tag_get( $c_tag_select );\n\t\t$c_tag_string = $t_tag['name'];\n\t}\n\n\tif( !is_blank( $c_tag_string ) ) {\n\t\t$t_tags = tag_parse_filters( $c_tag_string );\n\n\t\tif( count( $t_tags ) ) {\n\n\t\t\t$t_tags_all = array();\n\t\t\t$t_tags_any = array();\n\t\t\t$t_tags_none = array();\n\n\t\t\tforeach( $t_tags as $t_tag_row ) {\n\t\t\t\tswitch( $t_tag_row['filter'] ) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$t_tags_all[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$t_tags_any[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\t$t_tags_none[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( 0 < $t_filter[FILTER_PROPERTY_TAG_SELECT] && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t\t\t$t_tags_any[] = tag_get( $t_filter[FILTER_PROPERTY_TAG_SELECT] );\n\t\t\t}\n\n\t\t\t$t_bug_tag_table = db_get_table( 'mantis_bug_tag_table' );\n\n\t\t\tif( count( $t_tags_all ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_all as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_table.id IN ( SELECT bug_id FROM $t_bug_tag_table WHERE $t_bug_tag_table.tag_id = $t_tag_row[id] )\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, '(' . implode( ' AND ', $t_clauses ) . ')' );\n\t\t\t}\n\n\t\t\tif( count( $t_tags_any ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_any as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_tag_table.tag_id = $t_tag_row[id]\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, \"$t_bug_table.id IN ( SELECT bug_id FROM $t_bug_tag_table WHERE ( \" . implode( ' OR ', $t_clauses ) . ') )' );\n\t\t\t}\n\n\t\t\tif( count( $t_tags_none ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_none as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_tag_table.tag_id = $t_tag_row[id]\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, \"$t_bug_table.id NOT IN ( SELECT bug_id FROM $t_bug_tag_table WHERE ( \" . implode( ' OR ', $t_clauses ) . ') )' );\n\t\t\t}\n\t\t}\n\t}\n\n\t# note user id\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] ) ) {\n\t\t$t_bugnote_table_alias = 'mbnt';\n\t\t$t_clauses = array();\n\t\tarray_push( $t_from_clauses, \"$t_bugnote_table  $t_bugnote_table_alias\" );\n\t\tarray_push( $t_where_clauses, \"( $t_bug_table.id = $t_bugnote_table_alias.bug_id )\" );\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] as $t_filter_member ) {\n\t\t\t$c_note_user_id = db_prepare_int( $t_filter_member );\n\t\t\tif( filter_field_is_myself( $c_note_user_id ) ) {\n\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t} else {\n\t\t\t\tarray_push( $t_clauses, $c_note_user_id );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bugnote_table_alias.reporter_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bugnote_table_alias.reporter_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# plugin filters\n\t$t_plugin_filters = filter_get_plugin_filters();\n\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\tif ( !filter_field_is_any( $t_filter[ $t_field_name ] ) || $t_filter_object->type == FILTER_TYPE_BOOLEAN ) {\n\t\t\t$t_filter_query = $t_filter_object->query( $t_filter[ $t_field_name ] );\n\t\t\tif ( is_array( $t_filter_query ) ) {\n\t\t\t\tif ( isset( $t_filter_query['join'] ) ) {\n\t\t\t\t\tarray_push( $t_join_clauses, $t_filter_query['join'] );\n\t\t\t\t}\n\t\t\t\tif ( isset( $t_filter_query['where'] ) ) {\n\t\t\t\t\tarray_push( $t_where_clauses, $t_filter_query['where'] );\n\t\t\t\t}\n\t\t\t\tif ( isset( $t_filter_query['params'] ) && is_array( $t_filter_query['params'] ) ) {\n\t\t\t\t\t$t_where_params = array_merge( $t_where_params, $t_filter_query['params'] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t# custom field filters\n\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\n\t\t# custom field filtering\n\t\t# @@@ At the moment this gets the linked fields relating to the current project\n\t\t#     It should get the ones relating to the project in the filter or all projects\n\t\t#     if multiple projects.\n\t\t$t_custom_fields = custom_field_get_linked_ids( $t_project_id );\n\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\t$t_field_info = custom_field_cache_row( $t_cfid, true );\n\t\t\tif( !$t_field_info['filter_by'] ) {\n\t\t\t\tcontinue;\n\n\t\t\t\t# skip this custom field it shouldn't be filterable\n\t\t\t}\n\n\t\t\t$t_custom_where_clause = '';\n\n\t\t\t# Ignore all custom filters that are not set, or that are set to '' or \"any\"\n\t\t\tif( !filter_field_is_any( $t_filter['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t$t_def = custom_field_get_definition( $t_cfid );\n\t\t\t\t$t_table_name = $t_custom_field_string_table . '_' . $t_cfid;\n\n\t\t\t\t# We need to filter each joined table or the result query will explode in dimensions\n\t\t\t\t# Each custom field will result in a exponential growth like Number_of_Issues^Number_of_Custom_Fields\n\t\t\t\t# and only after this process ends (if it is able to) the result query will be filtered\n\t\t\t\t# by the WHERE clause and by the DISTINCT clause\n\t\t\t\t$t_cf_join_clause = \"LEFT JOIN $t_custom_field_string_table $t_table_name ON $t_bug_table.id = $t_table_name.bug_id AND $t_table_name.field_id = $t_cfid\";\n\n\t\t\t\tif( $t_def['type'] == CUSTOM_FIELD_TYPE_DATE ) {\n\t\t\t\t\tswitch( $t_filter['custom_fields'][$t_cfid][0] ) {\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '(( ' . $t_table_name . '.bug_id is null) OR ( ' . $t_table_name . '.value = 0)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '(( ' . $t_table_name . '.value != 0 AND (' . $t_table_name . '.value+0) < ' . ( $t_filter['custom_fields'][$t_cfid][2] ) . ')';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '( (' . $t_table_name . '.value+0) > ' . ( $t_filter['custom_fields'][$t_cfid][1] + 1 );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '( (' . $t_table_name . '.value+0) BETWEEN ' . $t_filter['custom_fields'][$t_cfid][1] . ' AND ' . $t_filter['custom_fields'][$t_cfid][2];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\n\t\t\t\t\t$t_filter_array = array();\n\t\t\t\t\tforeach( $t_filter['custom_fields'][$t_cfid] as $t_filter_member ) {\n\t\t\t\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\t\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\n\t\t\t\t\t\t\t# coerce filter value if selecting META_FILTER_NONE so it will match empty fields\n\t\t\t\t\t\t\t$t_filter_member = '';\n\n\t\t\t\t\t\t\t# but also add those _not_ present in the custom field string table\n\t\t\t\t\t\t\tarray_push( $t_filter_array, \"$t_bug_table.id NOT IN (SELECT bug_id FROM $t_custom_field_string_table WHERE field_id=$t_cfid)\" );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch( $t_def['type'] ) {\n\t\t\t\t\t\t\tcase CUSTOM_FIELD_TYPE_CHECKBOX:\n\t\t\t\t\t\t\tcase CUSTOM_FIELD_TYPE_MULTILIST:\n\t\t\t\t\t\t\t\tif( $t_filter_member != '' ) {\n\t\t\t\t\t\t\t\t\t$t_filter_member = '%|' . $t_filter_member . '|%';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$t_where_params[] = $t_filter_member;\n\t\t\t\t\t\t\t\tarray_push( $t_filter_array, db_helper_like( \"$t_table_name.value\" ) );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$t_where_params[] = $t_filter_member;\n\t\t\t\t\t\t\t\tarray_push( $t_filter_array, \"$t_table_name.value = \" . db_param() );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$t_custom_where_clause .= '(' . implode( ' OR ', $t_filter_array );\n\t\t\t\t}\n\t\t\t\tif( !is_blank( $t_custom_where_clause ) ) {\n\t\t\t\t\tarray_push( $t_where_clauses, $t_custom_where_clause . ')' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t# Text search\n\tif( !is_blank( $t_filter[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\n\t\t# break up search terms by spacing or quoting\n\t\tpreg_match_all( \"/-?([^'\\\"\\s]+|\\\"[^\\\"]+\\\"|'[^']+')/\", $t_filter[FILTER_PROPERTY_FREE_TEXT], $t_matches, PREG_SET_ORDER );\n\n\t\t# organize terms without quoting, paying attention to negation\n\t\t$t_search_terms = array();\n\t\tforeach( $t_matches as $t_match ) {\n\t\t\t$t_search_terms[ trim( $t_match[1], \"\\'\\\"\" ) ] = ( $t_match[0][0] == '-' );\n\t\t}\n\n\t\t# build a big where-clause and param list for all search terms, including negations\n\t\t$t_first = true;\n\t\t$t_textsearch_where_clause = \"( \";\n\t\tforeach( $t_search_terms as $t_search_term => $t_negate ) {\n\t\t\tif ( !$t_first ) {\n\t\t\t\t$t_textsearch_where_clause .= ' AND ';\n\t\t\t}\n\n\t\t\tif ( $t_negate ) {\n\t\t\t\t$t_textsearch_where_clause .= 'NOT ';\n\t\t\t}\n\n\t\t\t$c_search = '%' . $t_search_term . '%';\n\t\t\t$t_textsearch_where_clause .= '( ' . db_helper_like( 'summary' ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.description\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.steps_to_reproduce\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.additional_information\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bugnote_text_table.note\" );\n\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\n\t\t\tif( is_numeric( $t_search_term ) ) {\n\t\t\t\t$c_search_int = (int) $t_search_term;\n\t\t\t\t$t_textsearch_where_clause .= \" OR $t_bug_table.id = \" . db_param();\n\t\t\t\t$t_textsearch_where_clause .= \" OR $t_bugnote_table.id = \" . db_param();\n\t\t\t\t$t_where_params[] = $c_search_int;\n\t\t\t\t$t_where_params[] = $c_search_int;\n\t\t\t}\n\n\t\t\t$t_textsearch_where_clause .= ' )';\n\t\t\t$t_first = false;\n\t\t}\n\t\t$t_textsearch_where_clause .= ' )';\n\n\t\t# add text query elements to arrays\n\t\tif ( !$t_first ) {\n\t\t\t$t_from_clauses[] = \"$t_bug_text_table\";\n\t\t\t$t_where_clauses[] = \"$t_bug_table.bug_text_id = $t_bug_text_table.id\";\n\t\t\t$t_where_clauses[] = $t_textsearch_where_clause;\n\t\t\t$t_join_clauses[] = \" LEFT JOIN $t_bugnote_table ON $t_bug_table.id = $t_bugnote_table.bug_id\";\n\t\t\t$t_join_clauses[] = \" LEFT JOIN $t_bugnote_text_table ON $t_bugnote_table.bugnote_text_id = $t_bugnote_text_table.id\";\n\t\t}\n\t}\n\n\t# End text search\n\n\t$t_from_clauses[] = $t_project_table;\n\t$t_from_clauses[] = $t_bug_table;\n\n\t$t_query_clauses['select'] = $t_select_clauses;\n\t$t_query_clauses['from'] = $t_from_clauses;\n\t$t_query_clauses['join'] = $t_join_clauses;\n\t$t_query_clauses['where'] = $t_where_clauses;\n\t$t_query_clauses['where_values'] = $t_where_params;\n\t$t_query_clauses = filter_get_query_sort_data( $t_filter, $p_show_sticky, $t_query_clauses );\n\n\t# assigning to $p_* for this function writes the values back in case the caller wants to know\n\t# Get the total number of bugs that meet the criteria.\n\t$p_bug_count = filter_get_bug_count( $t_query_clauses );\n\tif( 0 == $p_bug_count ) {\n\t\treturn array();\n\t}\n\t$p_per_page = filter_per_page( $t_filter, $p_bug_count, $p_per_page );\n\t$p_page_count = filter_page_count( $p_bug_count, $p_per_page );\n\t$p_page_number = filter_valid_page_number( $p_page_number, $p_page_count );\n\t$t_offset = filter_offset( $p_page_number, $p_per_page );\n\t$t_query_clauses = filter_unique_query_clauses( $t_query_clauses );\n\t$t_select_string = \"SELECT DISTINCT \" . implode( ', ', $t_query_clauses['select'] );\n\t$t_from_string = \" FROM \" . implode( ', ', $t_query_clauses['from'] );\n\t$t_order_string = \" ORDER BY \" . implode( ', ', $t_query_clauses['order'] );\n\t$t_join_string = count( $t_query_clauses['join'] ) > 0 ? implode( ' ', $t_query_clauses['join'] ) : '';\n\t$t_where_string = count( $t_query_clauses['where'] ) > 0 ? 'WHERE ' . implode( ' AND ', $t_query_clauses['where'] ) : '';\n\t$t_result = db_query_bound( \"$t_select_string $t_from_string $t_join_string $t_where_string $t_order_string\", $t_query_clauses['where_values'], $p_per_page, $t_offset );\n\t$t_row_count = db_num_rows( $t_result );\n\n\t$t_id_array_lastmod = array();\n\tfor( $i = 0;$i < $t_row_count;$i++ ) {\n\t\t$t_row = db_fetch_array( $t_result );\n\t\t$t_id_array_lastmod[] = (int) $t_row['id'];\n\t\t$t_rows[] = $t_row;\n\t}\n\n\treturn filter_cache_result( $t_rows, $t_id_array_lastmod );\n}\n\n/**\n *  Cache the filter results with bugnote stats for later use\n * @param array $p_rows results of the filter query\n * @param array $p_id_array_lastmod array of bug ids\n * @return array\n */\nfunction filter_cache_result( $p_rows, $p_id_array_lastmod ) {\n\t$t_bugnote_table = db_get_table( 'mantis_bugnote_table' );\n\n\t$t_id_array_lastmod = array_unique( $p_id_array_lastmod );\n\t$t_where_string = \"WHERE $t_bugnote_table.bug_id in (\" . implode( \", \", $t_id_array_lastmod ) . ')';\n\t$t_query = \"SELECT DISTINCT bug_id,MAX(last_modified) as last_modified, COUNT(last_modified) as count FROM $t_bugnote_table $t_where_string GROUP BY bug_id\";\n\n\t# perform query\n\t$t_result = db_query_bound( $t_query );\n\t$t_row_count = db_num_rows( $t_result );\n\tfor( $i = 0;$i < $t_row_count;$i++ ) {\n\t\t$t_row = db_fetch_array( $t_result );\n\t\t$t_stats[$t_row['bug_id']] = $t_row;\n\t}\n\n\t$t_rows = array();\n\tforeach( $p_rows as $t_row ) {\n\t\tif( !isset( $t_stats[$t_row['id']] ) ) {\n\t\t\t$t_rows[] = bug_row_to_object( bug_cache_database_result( $t_row, false ) );\n\t\t} else {\n\t\t\t$t_rows[] = bug_row_to_object( bug_cache_database_result( $t_row, $t_stats[ $t_row['id'] ] ) );\n\t\t}\n\t}\n\treturn $t_rows;\n}\n\n/**\n *  Mainly based on filter_draw_selection_area2() but adds the support for the collapsible\n *  filter display.\n * @param int $p_page_number\n * @param bool $p_for_screen\n * @see filter_draw_selection_area2\n */\nfunction filter_draw_selection_area( $p_page_number, $p_for_screen = true ) {\n\tcollapse_open( 'filter' );\n\tfilter_draw_selection_area2( $p_page_number, $p_for_screen, true );\n\tcollapse_closed( 'filter' );\n\tfilter_draw_selection_area2( $p_page_number, $p_for_screen, false );\n\tcollapse_end( 'filter' );\n}\n\n/**\n *  Prints the filter selection area for both the bug list view screen and\n *  the bug list print screen. This function was an attempt to make it easier to\n *  add new filters and rearrange them on screen for both pages.\n * @param int $p_page_number\n * @param bool $p_for_screen\n * @param bool $p_expanded\n */\nfunction filter_draw_selection_area2( $p_page_number, $p_for_screen = true, $p_expanded = true ) {\n\t$t_form_name_suffix = $p_expanded ? '_open' : '_closed';\n\n\t$t_filter = current_user_get_bug_filter();\n\t$t_filter = filter_ensure_valid_filter( $t_filter );\n\t$t_project_id = helper_get_current_project();\n\t$t_page_number = (int) $p_page_number;\n\n\t$t_view_type = $t_filter['_view_type'];\n\n\t$t_tdclass = 'small-caption';\n\t$t_trclass = 'row-category2';\n\t$t_action = 'view_all_set.php?f=3';\n\n\tif( $p_for_screen == false ) {\n\t\t$t_tdclass = 'print';\n\t\t$t_trclass = '';\n\t\t$t_action = 'view_all_set.php';\n\t}\n\t?>\n\n\t\t<br />\n\t\t<form method=\"post\" name=\"filters<?php echo $t_form_name_suffix?>\" id=\"filters_form<?php echo $t_form_name_suffix?>\" action=\"<?php echo $t_action;?>\">\n\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t<input type=\"hidden\" name=\"type\" value=\"1\" />\n\t\t<?php\n\t\t\tif( $p_for_screen == false ) {\n\t\techo '<input type=\"hidden\" name=\"print\" value=\"1\" />';\n\t\techo '<input type=\"hidden\" name=\"offset\" value=\"0\" />';\n\t}\n\t?>\n\t\t<input type=\"hidden\" name=\"page_number\" value=\"<?php echo $t_page_number?>\" />\n\t\t<input type=\"hidden\" name=\"view_type\" value=\"<?php echo $t_view_type?>\" />\n\t\t<table class=\"width100\" cellspacing=\"1\">\n\n\t\t<?php\n\t\t$t_filter_cols = config_get( 'filter_custom_fields_per_row' );\n\tif( $p_expanded ) {\n\t\t$t_custom_cols = $t_filter_cols;\n\n\t\t$t_current_user_access_level = current_user_get_access_level();\n\t\t$t_accessible_custom_fields_ids = array();\n\t\t$t_accessible_custom_fields_names = array();\n\t\t$t_accessible_custom_fields_values = array();\n\t\t$t_num_custom_rows = 0;\n\t\t$t_per_row = 0;\n\n\t\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\t\t\t$t_custom_fields = custom_field_get_linked_ids( $t_project_id );\n\n\t\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\t\t$t_field_info = custom_field_cache_row( $t_cfid, true );\n\t\t\t\tif( $t_field_info['access_level_r'] <= $t_current_user_access_level && $t_field_info['filter_by'] ) {\n\t\t\t\t\t$t_accessible_custom_fields_ids[] = $t_cfid;\n\t\t\t\t\t$t_accessible_custom_fields_names[] = $t_field_info['name'];\n\t\t\t\t\t$t_accessible_custom_fields_types[] = $t_field_info['type'];\n\t\t\t\t\t$t_accessible_custom_fields_values[] = custom_field_distinct_values( $t_field_info );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( count( $t_accessible_custom_fields_ids ) > 0 ) {\n\t\t\t\t$t_per_row = config_get( 'filter_custom_fields_per_row' );\n\t\t\t\t$t_num_custom_rows = ceil( count( $t_accessible_custom_fields_ids ) / $t_per_row );\n\t\t\t}\n\t\t}\n\n\t\t$t_filters_url = 'view_filters_page.php?for_screen=' . $p_for_screen;\n\t\tif( 'advanced' == $t_view_type ) {\n\t\t\t$t_filters_url = $t_filters_url . '&amp;view_type=advanced';\n\t\t}\n\t\t$t_filters_url = $t_filters_url . '&amp;target_field=';\n\n\t\t$t_show_product_version =  version_should_show_product_version( $t_project_id );\n\t\t$t_show_build = $t_show_product_version && ( config_get( 'enable_product_build' ) == ON );\n\n\t\t# overload handler_id setting if user isn't supposed to see them (ref #6189)\n\t\tif( !access_has_project_level( config_get( 'view_handler_threshold' ), $t_project_id ) ) {\n\t\t\t$t_filter[FILTER_PROPERTY_HANDLER_ID] = array(\n\t\t\t\tMETA_FILTER_ANY,\n\t\t\t);\n\t\t}\n\t\t?>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_REPORTER_ID . '[]';?>\" id=\"reporter_id_filter\"><?php echo lang_get( 'reporter' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_MONITOR_USER_ID . '[]';?>\" id=\"user_monitor_filter\"><?php echo lang_get( 'monitored_by' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HANDLER_ID . '[]';?>\" id=\"handler_id_filter\"><?php echo lang_get( 'assigned_to' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_CATEGORY . '[]';?>\" id=\"show_category_filter\"><?php echo lang_get( 'category' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_SEVERITY_ID . '[]';?>\" id=\"show_severity_filter\"><?php echo lang_get( 'severity' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_RESOLUTION_ID . '[]';?>\" id=\"show_resolution_filter\"><?php echo lang_get( 'resolution' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . 'show_profile[]';?>\" id=\"show_profile_filter\"><?php echo lang_get( 'profile' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"reporter_id_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_REPORTER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_REPORTER_ID] as $t_current ) {\n\t\t\t\t$t_this_name = '';\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_REPORTER_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t}\n\t\t\t\telse if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_name;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"user_monitor_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_MONITOR_USER_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t}\n\t\t\t\telse if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'monitor_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_name;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"handler_id_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_HANDLER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_HANDLER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HANDLER_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else if( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_name;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\" id=\"show_category_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_CATEGORY] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_CATEGORY] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_CATEGORY, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_severity_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_SEVERITY_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_SEVERITY_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SEVERITY_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'severity', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_resolution_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] as $t_current ) {\n\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"show_resolution[]\" value=\"<?php echo $t_current;?>\" />\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'resolution', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_profile_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter['show_profile'] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter['show_profile'] as $t_current ) {\n\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"show_profile[]\" value=\"<?php echo $t_current;?>\" />\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_profile = profile_get_row_direct( $t_current );\n\n\t\t\t\t\t$t_this_string = \"${t_profile['platform']} ${t_profile['os']} ${t_profile['os_build']}\";\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else { ?>\n\t\t\t\t<td></td>\n\t\t\t<?php }\n\t\t\t\t  if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t\t</tr>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_STATUS_ID . '[]';?>\" id=\"show_status_filter\"><?php echo lang_get( 'status' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( 'simple' == $t_view_type ) {?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HIDE_STATUS_ID . '[]';?>\" id=\"hide_status_filter\"><?php echo lang_get( 'hide_status' )?>:</a>\n\t\t\t\t<?php\n\t\t}?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t<?php if ( $t_show_build ) { ?>\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRODUCT_BUILD . '[]';?>\" id=\"show_build_filter\"><?php echo lang_get( 'product_build' )?>:</a>\n\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_show_product_version ) {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRODUCT_VERSION . '[]';?>\" id=\"show_version_filter\"><?php echo lang_get( 'product_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_FIXED_IN_VERSION . '[]';?>\" id=\"show_fixed_in_version_filter\"><?php echo lang_get( 'fixed_in_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_TARGET_VERSION . '[]';?>\" id=\"show_target_version_filter\"><?php echo lang_get( 'target_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php\n\t\t} else {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<?php\n\t\t}?>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRIORITY_ID . '[]';?>\" id=\"show_priority_filter\"><?php echo lang_get( 'priority' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 7 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_status_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_STATUS_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_STATUS_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_STATUS_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'status', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"hide_status_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif( 'simple' == $t_view_type ) {\n\t\t\t$t_output = '';\n\t\t\t$t_none_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) == 0 ) {\n\t\t\t\techo lang_get( 'none' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] as $t_current ) {\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HIDE_STATUS_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_none_found = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = get_enum_element( 'status', $t_current );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t\t}\n\t\t\t\t$t_hide_status_post = '';\n\t\t\t\tif( count( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) == 1 ) {\n\t\t\t\t\t$t_hide_status_post = ' (' . lang_get( 'and_above' ) . ')';\n\t\t\t\t}\n\t\t\t\tif( true == $t_none_found ) {\n\t\t\t\t\techo lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output . $t_hide_status_post;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if ( $t_show_build ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_build_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] as $t_current ) {\n\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRODUCT_BUILD, '[]\" value=\"', string_display( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\"></td>\n\t\t\t<?php }\n\t\t\t\tif( $t_show_product_version ) {\n\t\t\t?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\" id=\"show_version_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRODUCT_VERSION, '[]\" value=\"', string_display( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_fixed_in_version_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_FIXED_IN_VERSION, '[]\" value=\"', string_display( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_target_version_filter_target\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_TARGET_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_TARGET_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_TARGET_VERSION, '[]\" value=\"', string_display( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t\t</td>\n\t\t\t<?php\n\t\t} else {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<?php\n\t\t}?>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_priority_filter_target\">\n              <?php\n\t\t\t\t\t\t\t  $t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_PRIORITY_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRIORITY_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRIORITY_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'priority', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t    \t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 7 ) . '\">&#160;</td>';\n\t\t}?>\n\n\t\t</tr>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_ISSUES_PER_PAGE;?>\" id=\"per_page_filter\"><?php echo lang_get( 'show' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_VIEW_STATE_ID;?>\" id=\"view_state_filter\"><?php echo lang_get( 'view_status' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_SHOW_STICKY_ISSUES;?>\" id=\"sticky_issues_filter\"><?php echo lang_get( 'sticky' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HIGHLIGHT_CHANGED;?>\" id=\"highlight_changed_filter\"><?php echo lang_get( 'changed' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" >\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_FILTER_BY_DATE;?>\" id=\"do_filter_by_date_filter\"><?php echo lang_get( 'use_date_filters' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_RELATIONSHIP_TYPE;?>\" id=\"relationship_type_filter\"><?php echo lang_get( 'bug_relationships' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"per_page_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\techo( $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] == 0 ) ? lang_get( 'all' ) : $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE];\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_ISSUES_PER_PAGE, '\" value=\"', $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE], '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"view_state_filter_target\">\n\t\t\t\t<?php\n\t\t\t\tif( VS_PUBLIC === $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) {\n\t\t\techo lang_get( 'public' );\n\t\t} else if( VS_PRIVATE === $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) {\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo lang_get( 'any' );\n\t\t\t$t_filter[FILTER_PROPERTY_VIEW_STATE_ID] = META_FILTER_ANY;\n\t\t}\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_VIEW_STATE_ID, '\" value=\"', $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"sticky_issues_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_sticky_filter_state = gpc_string_to_bool( $t_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] );\n\t\tprint( $t_sticky_filter_state ? lang_get( 'yes' ) : lang_get( 'no' ) );\n\t\t?>\n\t\t\t\t<input type=\"hidden\" name=\"sticky_issues\" value=\"<?php echo $t_sticky_filter_state ? 'on' : 'off';?>\" />\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\" id=\"highlight_changed_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\techo $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED];\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HIGHLIGHT_CHANGED, '\" value=\"', $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED], '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\"  id=\"do_filter_by_date_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif(( ON == config_get( 'dhtml_filters' ) ) && ( ON == config_get( 'use_javascript' ) ) ) {\n\t\t\t?>\n\t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t<!--\n\t\t\tfunction SwitchDateFields() {\n\t\t    \t// All fields need to be enabled to go back to the script\n\t\t\t\tdocument.filters_open.start_month.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.start_day.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.start_year.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_month.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_day.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_year.disabled = ! document.filters_open.do_filter_by_date.checked;\n\n\t\t   \t\treturn true;\n\t\t\t}\n\t\t// -->\n\t\t</script>\n\t\t\t\t\t\t\t<?php\n\t\t}\n\n\t\t# end if dhtml_filters\n\t\tif( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) {\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_FILTER_BY_DATE, '\" value=\"', $t_filter[FILTER_PROPERTY_FILTER_BY_DATE], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_MONTH, '\" value=\"', $t_filter[FILTER_PROPERTY_START_MONTH], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_DAY, '\" value=\"', $t_filter[FILTER_PROPERTY_START_DAY], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_YEAR, '\" value=\"', $t_filter[FILTER_PROPERTY_START_YEAR], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_MONTH, '\" value=\"', $t_filter[FILTER_PROPERTY_END_MONTH], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_DAY, '\" value=\"', $t_filter[FILTER_PROPERTY_END_DAY], '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_YEAR, '\" value=\"', $t_filter[FILTER_PROPERTY_END_YEAR], '\" />';\n\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\t\t\t$t_time = mktime( 0, 0, 0, $t_filter[FILTER_PROPERTY_START_MONTH], $t_filter[FILTER_PROPERTY_START_DAY], $t_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t\tforeach( $t_chars as $t_char ) {\n\t\t\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'F', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'd', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'Y', $t_time );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo ' - ';\n\n\t\t\t$t_time = mktime( 0, 0, 0, $t_filter[FILTER_PROPERTY_END_MONTH], $t_filter[FILTER_PROPERTY_END_DAY], $t_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t\tforeach( $t_chars as $t_char ) {\n\t\t\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'F', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'd', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'Y', $t_time );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\techo lang_get( 'no' );\n\t\t}\n\t\t?>\n\t\t\t</td>\n\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\" id=\"relationship_type_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_RELATIONSHIP_TYPE, '\" value=\"', $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE], '\" />';\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_RELATIONSHIP_BUG, '\" value=\"', $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG], '\" />';\n\t\t$c_rel_type = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\t\t$c_rel_bug = $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG];\n\t\tif( -1 == $c_rel_type || 0 == $c_rel_bug ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\techo relationship_get_description_for_history( $c_rel_type ) . ' ' . $c_rel_bug;\n\t\t}\n\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PLATFORM;?>\" id=\"platform_filter\"><?php echo lang_get( 'platform' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_OS;?>\" id=\"os_filter\"><?php echo lang_get( 'os' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_OS_BUILD;?>\" id=\"os_build_filter\"><?php echo lang_get( 'os_version' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"5\">\n\t\t\t\t<?php if ( access_has_global_level( config_get( 'tag_view_threshold' ) ) ) { ?>\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_TAG_STRING;?>\" id=\"tag_string_filter\"><?php echo lang_get( 'tags' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr class=\"row-1\">\n\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"platform_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_PLATFORM, $t_filter[FILTER_PROPERTY_PLATFORM] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"os_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_OS, $t_filter[FILTER_PROPERTY_OS] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"os_build_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_OS_BUILD, $t_filter[FILTER_PROPERTY_OS_BUILD] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else {?>\n\t\t\t\t<td colspan=\"3\">&#160;</td>\n\t\t\t<?php } ?>\n\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"tag_string_filter_target\" colspan=\"5\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_tag_string = $t_filter[FILTER_PROPERTY_TAG_STRING];\n\t\tif( $t_filter[FILTER_PROPERTY_TAG_SELECT] != 0 && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t\t$t_tag_string .= ( is_blank( $t_tag_string ) ? '' : config_get( 'tag_separator' ) );\n\t\t\t$t_tag_string .= tag_get_field( $t_filter[FILTER_PROPERTY_TAG_SELECT], 'name' );\n\t\t}\n\t\techo string_html_entities( $t_tag_string );\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_TAG_STRING, '\" value=\"', string_attribute( $t_tag_string ), '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\t# get plugin filters\n\t\t$t_plugin_filters = filter_get_plugin_filters();\n\t\t$t_column = 0;\n\t\t$t_fields = '';\n\t\t$t_values = '';\n\n\t\t# output a filter form element for each plugin filter\n\t\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\t\t$t_fields .= '<td class=\"small-caption\" valign=\"top\"> <a href=\"' . $t_filters_url . $t_field_name .\n\t\t\t\t'\" id=\"' . $t_field_name . '_filter\">' . string_display_line( $t_filter_object->title ) . '</a> </td>';\n\n\t\t\t$t_values .= '<td class=\"small-caption\" valign=\"top\" id=\"' . $t_field_name . '_filter_target\"> ';\n\n\t\t\tif ( !isset( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\tswitch( $t_filter_object->type ) {\n\t\t\t\t\tcase FILTER_TYPE_STRING:\n\t\t\t\t\tcase FILTER_TYPE_INT:\n\t\t\t\t\t\tif ( filter_field_is_any( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_values .= string_display( $t_filter[ $t_field_name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '\" value=\"' . string_attribute( $t_filter[ $t_field_name ] ) . '\"/>';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\t\t\t\t$t_values .= string_display( $t_filter_object->display( (bool)$t_filter[ $t_field_name ] ) );\n\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '\" value=\"' . (bool)$t_filter[ $t_field_name ] . '\"/>';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\t\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\t\t\t\t$t_first = true;\n\t\t\t\t\t\t$t_output = '';\n\n\t\t\t\t\t\tif ( !is_array( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t\t\t\t$t_filter[ $t_field_name ] = array( $t_filter[ $t_field_name ] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tforeach( $t_filter[ $t_field_name ] as $t_current ) {\n\t\t\t\t\t\t\tif ( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t\t\t$t_output .= lang_get( 'any' );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$t_output .= ( $t_first ? '' : '<br />' ) . string_display( $t_filter_object->display( $t_current ) );\n\t\t\t\t\t\t\t\t$t_first = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '[]\" value=\"' . string_attribute( $t_current ) . '\"/>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t_values .= $t_output;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$t_values .= '</td>';\n\n\t\t\t$t_column++;\n\n\t\t\t# wrap at the appropriate column\n\t\t\tif ( $t_column >= $t_filter_cols ) {\n\t\t\t\techo '<tr class=\"', $t_trclass, '\">', $t_fields, '</tr>';\n\t\t\t\techo '<tr class=\"row-1\">', $t_values, '</tr>';\n\n\t\t\t\t$t_fields = '';\n\t\t\t\t$t_values = '';\n\t\t\t\t$t_column = 0;\n\t\t\t}\n\t\t}\n\n\t\t# output any remaining plugin filters\n\t\tif ( $t_column > 0 ) {\n\t\t\tif ( $t_column < $t_filter_cols ) {\n\t\t\t\t$t_fields .= '<td class=\"small-caption\" colspan=\"' . ( $t_filter_cols - $t_column ) . '\">&#160;</td>';\n\t\t\t\t$t_values .= '<td class=\"small-caption\" colspan=\"' . ( $t_filter_cols - $t_column ) . '\">&#160;</td>';\n\t\t\t}\n\n\t\t\techo '<tr class=\"', $t_trclass, '\">', $t_fields, '</tr>';\n\t\t\techo '<tr class=\"row-1\">', $t_values, '</tr>';\n\t\t}\n\n\t\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\n\t\t\t# -- Custom Field Searching --\n\n\t\t\tif( count( $t_accessible_custom_fields_ids ) > 0 ) {\n\t\t\t\t$t_per_row = config_get( 'filter_custom_fields_per_row' );\n\t\t\t\t$t_num_fields = count( $t_accessible_custom_fields_ids );\n\t\t\t\t$t_row_idx = 0;\n\t\t\t\t$t_col_idx = 0;\n\n\t\t\t\t$t_fields = '';\n\t\t\t\t$t_values = '';\n\n\t\t\t\tfor( $i = 0;$i < $t_num_fields;$i++ ) {\n\t\t\t\t\tif( $t_col_idx == 0 ) {\n\t\t\t\t\t\t$t_fields = '<tr class=\"' . $t_trclass . '\">';\n\t\t\t\t\t\t$t_values = '<tr class=\"row-1\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif( isset( $t_accessible_custom_fields_names[$i] ) ) {\n\t\t\t\t\t\t$t_fields .= '<td class=\"small-caption\" valign=\"top\"> ';\n\t\t\t\t\t\t$t_fields .= '<a href=\"' . $t_filters_url . 'custom_field_' . $t_accessible_custom_fields_ids[$i] . '[]\" id=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '_filter\">';\n\t\t\t\t\t\t$t_fields .= string_display( lang_get_defaulted( $t_accessible_custom_fields_names[$i] ) );\n\t\t\t\t\t\t$t_fields .= '</a> </td> ';\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = '';\n\t\t\t\t\t$t_any_found = false;\n\n\t\t\t\t\t$t_values .= '<td class=\"small-caption\" valign=\"top\" id=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '_filter_target\"> ';\n\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]] ) ) {\n\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( $t_accessible_custom_fields_types[$i] == CUSTOM_FIELD_TYPE_DATE ) {\n\n\t\t\t\t\t\t\t/** @todo moved embedded javascript here from print_filter_custom_field_date\n\t\t\t\t\t\t\t *  it appears not to load properly on Firefox and other browsers if loaded through the httpxmlreq\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t$t_field_id = $t_accessible_custom_fields_ids[$i];\n\t\t\t\t\t\t\t$t_js_toggle_func = \"toggle_custom_date_field_\" . $t_field_id . \"_controls\";\n\t\t\t\t\t\t\tif(( ON == config_get( 'dhtml_filters' ) ) && ( ON == config_get( 'use_javascript' ) ) ) {\n\t\t\t\t\t\t\t\t?>\n\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t<!--\n\tfunction <?php echo $t_js_toggle_func . \"_start\";?>(disable) {\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_year.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_month.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_day.disabled = disable ;\n\t} ;\n\n\tfunction <?php echo $t_js_toggle_func . \"_end\";?>(disable) {\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_year.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_month.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_day.disabled = disable ;\n\t} ;\n\n\tfunction <?php echo $t_js_toggle_func;?>() {\n\t\tswitch (document.filters_open.custom_field_<?php echo $t_field_id;?>_control.selectedIndex) {\n\t\tcase <?php echo CUSTOM_FIELD_DATE_ANY;?>:\n\t\tcase <?php echo CUSTOM_FIELD_DATE_NONE;?>:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(true) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(true) ;\n\t\t\tbreak ;\n\t\tcase <?php echo CUSTOM_FIELD_DATE_BETWEEN;?>:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(false) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(false) ;\n\t\t\tbreak ;\n\t\tdefault:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(false) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(true) ;\n\t\t\tbreak ;\n\t\t}\n\t}\n\t// -->\n\t</script>\n<?php\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t# end if dhtml_filters\n\t\t\t\t\t\t\t$t_short_date_format = config_get( 'short_date_format' );\n\t\t\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] ) ) {\n\t\t\t\t\t\t\t\t$t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_start = date( $t_short_date_format, $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] );\n\n\t\t\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] ) ) {\n\t\t\t\t\t\t\t\t$t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_end = date( $t_short_date_format, $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] );\n\t\t\t\t\t\t\tswitch( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][0] ) {\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'none' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BETWEEN:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'between_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start . '<br />' . $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ONORBEFORE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_or_before_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'before_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ON:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'after_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ONORAFTER:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_or_after_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_first_flag = true;\n\t\t\t\t\t\t\tforeach( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]] as $t_current ) {\n\t\t\t\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$t_output = $t_output . $t_this_string;\n\t\t\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '[]\" value=\"' . string_display( $t_current ) . '\" />';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_values .= $t_output;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$t_values .= ' </td>';\n\n\t\t\t\t\t$t_col_idx++;\n\n\t\t\t\t\tif( $t_col_idx == $t_per_row ) {\n\t\t\t\t\t\tif( $t_filter_cols > $t_per_row ) {\n\t\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t_fields .= '</tr>' . \"\\n\";\n\t\t\t\t\t\t$t_values .= '</tr>' . \"\\n\";\n\n\t\t\t\t\t\techo $t_fields;\n\t\t\t\t\t\techo $t_values;\n\n\t\t\t\t\t\t$t_col_idx = 0;\n\t\t\t\t\t\t$t_row_idx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( $t_col_idx > 0 ) {\n\t\t\t\t\tif( $t_col_idx < $t_per_row ) {\n\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_per_row - $t_col_idx ) . '\">&#160;</td> ';\n\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_per_row - $t_col_idx ) . '\">&#160;</td> ';\n\t\t\t\t\t}\n\n\t\t\t\t\tif( $t_filter_cols > $t_per_row ) {\n\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t}\n\n\t\t\t\t\t$t_fields .= '</tr>' . \"\\n\";\n\t\t\t\t\t$t_values .= '</tr>' . \"\\n\";\n\n\t\t\t\t\techo $t_fields;\n\t\t\t\t\techo $t_values;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption category2\" valign=\"top\">\n                <a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_NOTE_USER_ID;?>\" id=\"note_user_id_filter\"><?php echo lang_get( 'note_user_id' )?>:</a>\n            </td>\n            <td class=\"small-caption\" valign=\"top\" id=\"note_user_id_filter_target\">\n                <?php\n                    $t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_NOTE_USER_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else if( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . $t_this_name;\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n            </td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . 'show_sort';?>\" id=\"show_sort_filter\"><?php echo lang_get( 'sort' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_sort_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_sort_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t\t$t_dir_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\n\t\tfor( $i = 0;$i < 2;$i++ ) {\n\t\t\tif( isset( $t_sort_fields[$i] ) ) {\n\t\t\t\tif( 0 < $i ) {\n\t\t\t\t\techo ', ';\n\t\t\t\t}\n\t\t\t\t$t_sort = $t_sort_fields[$i];\n\t\t\t\tif( strpos( $t_sort, 'custom_' ) === 0 ) {\n\t\t\t\t\t$t_field_name = string_display( lang_get_defaulted( utf8_substr( $t_sort, utf8_strlen( 'custom_' ) ) ) );\n\t\t\t\t} else {\n\t\t\t\t\t$t_field_name = string_get_field_name( $t_sort );\n\t\t\t\t}\n\n\t\t\t\techo $t_field_name . ' ' . lang_get( 'bugnote_order_' . utf8_strtolower( $t_dir_fields[$i] ) );\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_', $i, '\" value=\"', $t_sort_fields[$i], '\" />';\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_', $i, '\" value=\"', $t_dir_fields[$i], '\" />';\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php\n\t\t\t\tif( 'advanced' == $t_view_type ) {\n\t\t\t?>\n\t\t\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PROJECT_ID;?>\" id=\"project_id_filter\"><?php echo lang_get( 'email_project' )?>:</a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"small-caption\" valign=\"top\"  id=\"project_id_filter_target\">\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$t_output = '';\n\t\t\tif( !is_array( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t\t\t$t_filter[FILTER_PROPERTY_PROJECT_ID] = Array(\n\t\t\t\t\t$t_filter[FILTER_PROPERTY_PROJECT_ID],\n\t\t\t\t);\n\t\t\t}\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) == 0 ) {\n\t\t\t\techo lang_get( 'current' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_PROJECT_ID] as $t_current ) {\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PROJECT_ID, '[]\" value=\"', $t_current, '\" />';\n\t\t\t\t\t$t_this_name = '';\n\t\t\t\t\tif( META_FILTER_CURRENT == $t_current ) {\n\t\t\t\t\t\t$t_this_name = lang_get( 'current' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_name = project_get_name( $t_current, false );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t\t}\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php\n\t\t\t\t\tif( $t_filter_cols > 6 ) {\n\t\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 5 ) . '\">&#160;</td>';\n\t\t\t}\n\t\t} else {\n\t\t\tif( $t_filter_cols > 3 ) {\n\t\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 2 ) . '\">&#160;</td>';\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t</tr>\n\t\t<?php\n\t}\n\n\t// expanded\n\t?>\n\t\t<tr>\n\t\t\t<td colspan=\"2\">\n\t\t\t\t<?php\n\t\t\t\t\tcollapse_icon( 'filter' );\n\techo lang_get( 'search' ) . '&#160;';\n\techo '<input type=\"text\" size=\"16\" name=\"', FILTER_PROPERTY_FREE_TEXT, '\" value=\"', string_html_specialchars( $t_filter[FILTER_PROPERTY_FREE_TEXT] ), '\" />';\n\t?>\n\n\t\t\t\t<input type=\"submit\" name=\"filter\" class=\"button-small\" value=\"<?php echo lang_get( 'filter_button' )?>\" />\n\t\t\t</td>\n\t\t\t</form>\n\t\t\t<td class=\"center\" colspan=\"<?php echo( $t_filter_cols - 6 )?>\"> <!-- use this label for padding -->\n\t\t\t\t<?php\n\t\t\t\t\tif( ON == config_get( 'dhtml_filters' ) ) {\n\t\t$f_switch_view_link = 'view_all_set.php?type=6&view_type=';\n\t} else {\n\t\t$f_switch_view_link = 'view_filters_page.php?view_type=';\n\t}\n\n\t$t_view_filters = config_get( 'view_filters' );\n\tif(( SIMPLE_ONLY != $t_view_filters ) && ( ADVANCED_ONLY != $t_view_filters ) ) {\n\t\tif( 'advanced' == $t_view_type ) {\n\t\t\tprint_bracket_link( $f_switch_view_link . 'simple', lang_get( 'simple_filters' ) );\n\t\t} else {\n\t\t\tprint_bracket_link( $f_switch_view_link . 'advanced', lang_get( 'advanced_filters' ) );\n\t\t}\n\t}\n\n\tif( access_has_project_level( config_get( 'create_permalink_threshold' ) ) ) {\n\t\tprint_bracket_link( 'permalink_page.php?url=' . urlencode( filter_get_url( $t_filter ) ), lang_get( 'create_filter_link' ),\n\n\t\t/* new window = */\n\t\ttrue );\n\t}\n\t?>\n\t\t\t</td>\n\t\t\t<td class=\"right\" colspan=\"4\">\n\t\t\t<?php\n\t\t\t$t_stored_queries_arr = array();\n\t$t_stored_queries_arr = filter_db_get_available_queries();\n\n\tif( count( $t_stored_queries_arr ) > 0 ) {\n\t\t?>\n\t\t\t\t\t<form method=\"get\" name=\"list_queries<?php echo $t_form_name_suffix;?>\" action=\"view_all_set.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"hidden\" name=\"type\" value=\"3\" />\n\t\t\t\t\t<?php\n\t\t\t\t\tif( ON == config_get( 'use_javascript' ) ) {\n\t\t\techo \"<select name=\\\"source_query_id\\\" onchange=\\\"document.forms.list_queries$t_form_name_suffix.submit();\\\">\";\n\t\t} else {\n\t\t\techo '<select name=\"source_query_id\">';\n\t\t}\n\t\t?>\n\t\t\t\t\t<option value=\"-1\"><?php echo '[' . lang_get( 'reset_query' ) . ']'?></option>\n\t\t\t\t\t<option value=\"-1\"></option>\n\t\t\t\t\t<?php\n\t\t\t\t\tforeach( $t_stored_queries_arr as $t_query_id => $t_query_name ) {\n\t\t\techo '<option value=\"' . $t_query_id . '\">' . $t_query_name . '</option>';\n\t\t}\n\t\t?>\n\t\t\t\t\t</select>\n\t\t\t\t\t<input type=\"submit\" name=\"switch_to_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'use_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t\t<form method=\"post\" name=\"open_queries\" action=\"query_view_page.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"submit\" name=\"switch_to_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'open_queries' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t<?php\n\t} else {\n\t\t?>\n\t\t\t\t\t<form method=\"get\" name=\"reset_query\" action=\"view_all_set.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"hidden\" name=\"type\" value=\"3\" />\n\t\t\t\t\t<input type=\"hidden\" name=\"source_query_id\" value=\"-1\" />\n\t\t\t\t\t<input type=\"submit\" name=\"reset_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'reset_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t<?php\n\t}\n\n\tif( access_has_project_level( config_get( 'stored_query_create_threshold' ) ) ) {\n\t\t?>\n\t\t\t\t\t<form method=\"post\" name=\"save_query\" action=\"query_store_page.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"submit\" name=\"save_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'save_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t<?php\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t</table>\n<?php\n}\n\n/**\n \t * @internal The following functions each print out filter field inputs.\n *      They are derived from view_filters_page.php\n *      The functions follow a strict naming convention:\n *\n * \t\tprint_filter_[filter_name]\n *\n *      Where [filter_name] is the same as the \"name\" of the form element for\n *      that filter. This naming convention is depended upon by the controller\n *      at the end of the script.\n *\n * @todo print functions should be abstracted.  Many of these functions\n *      are virtually identical except for the property name.\n *      Perhaps this code could be made simpler by refactoring into a\n *      class so as to avoid all those calls to global(which are pretty ugly)\n *      These functions could also be shared by view_filters_page.php\n */\n\n/**\n *  Print the reporter field\n */\nfunction print_filter_reporter_id() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t\t<select <?php echo $t_select_modifier;?> name=\"reporter_id[]\">\n\t\t<?php\n\t# if current user is a reporter, and limited reports set to ON, only display that name\n\t# @@@ thraxisp - access_has_project_level checks greater than or equal to,\n\t#   this assumed that there aren't any holes above REPORTER where the limit would apply\n\t#\n\tif(( ON === config_get( 'limit_reporters' ) ) && ( !access_has_project_level( REPORTER + 1 ) ) ) {\n\t\t$t_id = auth_get_current_user_id();\n\t\t$t_username = user_get_field( $t_id, 'username' );\n\t\t$t_realname = user_get_field( $t_id, 'realname' );\n\t\t$t_display_name = string_attribute( $t_username );\n\t\tif(( isset( $t_realname ) ) && ( $t_realname > '' ) && ( ON == config_get( 'show_realname' ) ) ) {\n\t\t\t$t_display_name = string_attribute( $t_realname );\n\t\t}\n\t\techo '<option value=\"' . $t_id . '\" selected=\"selected\">' . $t_display_name . '</option>';\n\t} else {\n\t\t?>\n\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_REPORTER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t<?php\n\t\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_REPORTER_ID], META_FILTER_MYSELF );\n\t\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t\t}\n\t\tprint_reporter_option_list( $t_filter[FILTER_PROPERTY_REPORTER_ID] );\n\t}?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  Print the user monitor field\n */\nfunction print_filter_user_monitor() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t<!-- Monitored by -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"user_monitor[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php\n\t\t\t\tif( access_has_project_level( config_get( 'monitor_bug_threshold' ) ) ) {\n\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\tcheck_selected( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID], META_FILTER_MYSELF );\n\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t}\n\t$t_threshold = config_get( 'show_monitor_list_threshold' );\n\t$t_has_project_level = access_has_project_level( $t_threshold );\n\n\tif( $t_has_project_level ) {\n\t\tprint_reporter_option_list( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] );\n\t}\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the handler field\n */\nfunction print_filter_handler_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n\t\t<!-- Handler -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"handler_id[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php if( access_has_project_level( config_get( 'view_handler_threshold' ) ) ) {?>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php\n\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_MYSELF );\n\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t}\n\n\t\tprint_assign_to_option_list( $t_filter[FILTER_PROPERTY_HANDLER_ID] );\n\t}?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the category field\n */\nfunction print_filter_show_category() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t\t<!-- Category -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_CATEGORY;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_CATEGORY], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_category_filter_option_list( $t_filter[FILTER_PROPERTY_CATEGORY] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the platform field\n */\nfunction print_filter_platform() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- Platform -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PLATFORM;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PLATFORM], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php\n\t\t\t\tlog_event( LOG_FILTERING, 'Platform = ' . var_export( $t_filter[FILTER_PROPERTY_PLATFORM], true ) );\n\tprint_platform_option_list( $t_filter[FILTER_PROPERTY_PLATFORM] );\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the os field\n */\nfunction print_filter_os() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- OS -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_OS;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_OS], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_os_option_list( $t_filter[FILTER_PROPERTY_OS] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the os build field\n */\nfunction print_filter_os_build() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- OS Build -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_OS_BUILD;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_OS_BUILD], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_os_build_option_list( $t_filter[FILTER_PROPERTY_OS_BUILD] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the severity field\n */\nfunction print_filter_show_severity() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Severity -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_SEVERITY_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_SEVERITY_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'severity', $t_filter[FILTER_PROPERTY_SEVERITY_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print resolution field\n */\nfunction print_filter_show_resolution() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Resolution -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_RESOLUTION_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_RESOLUTION_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'resolution', $t_filter[FILTER_PROPERTY_RESOLUTION_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print status field\n */\nfunction print_filter_show_status() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\t<!-- Status -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_STATUS_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_STATUS_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'status', $t_filter[FILTER_PROPERTY_STATUS_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print hide status field\n */\nfunction print_filter_hide_status() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Hide Status -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_HIDE_STATUS_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\">[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'status', $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print build field\n */\nfunction print_filter_show_build() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Build -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRODUCT_BUILD;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_build_option_list( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print version field\n */\nfunction print_filter_show_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRODUCT_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n * print fixed in version field\n */\nfunction print_filter_show_fixed_in_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Fixed in Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_FIXED_IN_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print target version field\n */\nfunction print_filter_show_target_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Fixed in Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_TARGET_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_TARGET_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_TARGET_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_TARGET_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print priority field\n */\nfunction print_filter_show_priority() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Priority -->\n    <select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRIORITY_ID;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRIORITY_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_enum_string_option_list( 'priority', $t_filter[FILTER_PROPERTY_PRIORITY_ID] )?>\n    </select>\n\t\t<?php\n}\n\n/**\n *  print profile field\n */\nfunction print_filter_show_profile() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Profile -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"show_profile[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter['show_profile'], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_profile_option_list_for_project( helper_get_current_project(), $t_filter['show_profile'] );?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print issues per page field\n */\nfunction print_filter_per_page() {\n\tglobal $t_filter;\n\t?><!-- Number of bugs per page -->\n\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_ISSUES_PER_PAGE;?>\" size=\"3\" maxlength=\"7\" value=\"<?php echo $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE]?>\" />\n\t\t<?php\n}\n\n/**\n *  print view state field\n */\nfunction print_filter_view_state() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- View Status -->\n\t\t<select name=\"<?php echo FILTER_PROPERTY_VIEW_STATE_ID;?>\">\n\t\t\t<?php\n\t\t\techo '<option value=\"' . META_FILTER_ANY . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], META_FILTER_ANY );\n\techo '>[' . lang_get( 'any' ) . ']</option>';\n\techo '<option value=\"' . VS_PUBLIC . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], VS_PUBLIC );\n\techo '>' . lang_get( 'public' ) . '</option>';\n\techo '<option value=\"' . VS_PRIVATE . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], VS_PRIVATE );\n\techo '>' . lang_get( 'private' ) . '</option>';\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print sticky issues field\n */\nfunction print_filter_sticky_issues() {\n\tglobal $t_filter;\n\t?><!-- Show or hide sticky bugs -->\n\t\t\t<input type=\"checkbox\" name=\"<?php echo FILTER_PROPERTY_SHOW_STICKY_ISSUES;?>\" <?php check_checked( gpc_string_to_bool( $t_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ), true );?> />\n\t\t<?php\n}\n\n/**\n *  print highlight changed field\n */\nfunction print_filter_highlight_changed() {\n\tglobal $t_filter;\n\t?><!-- Highlight changed bugs -->\n\t\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_HIGHLIGHT_CHANGED;?>\" size=\"3\" maxlength=\"7\" value=\"<?php echo $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED]?>\" />\n\t\t<?php\n}\n\n/**\n *  print filter by date fields with javascript\n * @todo Javascript should be removed and added dynamically\n *      via external script\n */\nfunction print_filter_do_filter_by_date( $p_hide_checkbox = false ) {\n\tglobal $t_filter;\n\t?>\n\t\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<?php if( !$p_hide_checkbox ) {\n\t\t?>\n\t\t<tr><td colspan=\"2\">\n\t\t\t<input type=\"checkbox\" name=\"<?php echo FILTER_PROPERTY_FILTER_BY_DATE;?>\" <?php\n\t\t\t\tcheck_checked( $t_filter[FILTER_PROPERTY_FILTER_BY_DATE], 'on' );\n\t\tif( ON == config_get( 'use_javascript' ) ) {\n\t\t\tprint \"onclick=\\\"SwitchDateFields();\\\"\";\n\t\t}?> />\n\t\t\t<?php echo lang_get( 'use_date_filters' )?>\n\t\t</td></tr>\n\t\t<?php\n\t}\n\t$t_menu_disabled = ( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) ? '' : ' disabled ';\n\t?>\n\n\t\t<!-- Start date -->\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<?php echo lang_get( 'start_date' )?>:\n\t\t\t</td>\n\t\t\t<td nowrap=\"nowrap\">\n\t\t\t<?php\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\tforeach( $t_chars as $t_char ) {\n\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_MONTH, '\"', $t_menu_disabled, '>';\n\t\t\tprint_month_option_list( $t_filter[FILTER_PROPERTY_START_MONTH] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_DAY, '\"', $t_menu_disabled, '>';\n\t\t\tprint_day_option_list( $t_filter[FILTER_PROPERTY_START_DAY] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_YEAR, '\"', $t_menu_disabled, '>';\n\t\t\tprint_year_option_list( $t_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<!-- End date -->\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<?php echo lang_get( 'end_date' )?>:\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t<?php\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\tforeach( $t_chars as $t_char ) {\n\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_MONTH, '\"', $t_menu_disabled, '>';\n\t\t\tprint_month_option_list( $t_filter[FILTER_PROPERTY_END_MONTH] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_DAY, '\"', $t_menu_disabled, '>';\n\t\t\tprint_day_option_list( $t_filter[FILTER_PROPERTY_END_DAY] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_YEAR, '\"', $t_menu_disabled, '>';\n\t\t\tprint_year_option_list( $t_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t</table>\n\t\t<?php\n}\n\n/**\n *  print relationship fields\n */\nfunction print_filter_relationship_type() {\n\tglobal $t_filter;\n\t$c_reltype_value = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\tif( !$c_reltype_value ) {\n\t\t$c_reltype_value = -1;\n\t}\n\trelationship_list_box( $c_reltype_value, \"relationship_type\", true );\n\techo '<input type=\"text\" name=\"', FILTER_PROPERTY_RELATIONSHIP_BUG, '\" size=\"5\" maxlength=\"10\" value=\"', $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG], '\" />';\n}\n\n/**\n *  print tag fields\n */\nfunction print_filter_tag_string() {\n\tif ( !access_has_global_level( config_get( 'tag_view_threshold' ) ) ) {\n\t\treturn;\n\t}\n\n\tglobal $t_filter;\n\t$t_tag_string = $t_filter[FILTER_PROPERTY_TAG_STRING];\n\tif( $t_filter[FILTER_PROPERTY_TAG_SELECT] != 0 && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$t_tag_string .= ( is_blank( $t_tag_string ) ? '' : config_get( 'tag_separator' ) );\n\t\t$t_tag_string .= tag_get_field( $t_filter[FILTER_PROPERTY_TAG_SELECT], 'name' );\n\t}\n\t?>\n\t\t<input type=\"hidden\" id=\"tag_separator\" value=\"<?php echo config_get( 'tag_separator' )?>\" />\n\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_TAG_STRING;?>\" id=\"<?php echo FILTER_PROPERTY_TAG_STRING;?>\" size=\"40\" value=\"<?php echo string_attribute( $t_tag_string )?>\" />\n\t\t<select <?php echo helper_get_tab_index()?> name=\"<?php echo FILTER_PROPERTY_TAG_SELECT;?>\" id=\"<?php echo FILTER_PROPERTY_TAG_SELECT;?>\">\n\t\t\t<?php print_tag_option_list();?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print note reporter field\n */\nfunction print_filter_note_user_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n        <!-- BUGNOTE REPORTER -->\n        <select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_NOTE_USER_ID;?>[]\">\n            <option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n            <?php if( access_has_project_level( config_get( 'view_handler_threshold' ) ) ) {?>\n            <option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n            <?php\n                if( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_MYSELF );\n\t\t\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t\t\t}\n\n\t\t\t\tprint_assign_to_option_list( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] );\n\t\t\t}\n\t\t?>\n        </select>\n        <?php\n}\n\n\n/**\n * Print plugin filter fields as defined by MantisFilter objects.\n * @param string Field name\n * @param object Filter object\n */\nfunction print_filter_plugin_field( $p_field_name, $p_filter_object ) {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\n\t$t_size = (int)$p_filter_object->size;\n\n\tswitch( $p_filter_object->type ) {\n\t\tcase FILTER_TYPE_STRING:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' value=\"',\n\t\t\t\tstring_attribute( $t_filter[ $p_field_name ] ), '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_INT:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' value=\"',\n\t\t\t\t(int) $t_filter[ $p_field_name ], '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\" type=\"checkbox\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), check_checked( (bool) $t_filter[ $p_field_name ] ) , '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\techo '<select ', $t_select_modifier, ( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' name=\"',\n\t\t\t\tstring_attribute( $p_field_name ), '[]\">', '<option value=\"', META_FILTER_ANY, '\" ',\n\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], META_FILTER_ANY ), '>[', lang_get( 'any' ), ']</option>';\n\n\t\t\tforeach( $p_filter_object->options() as $t_option_value => $t_option_name ) {\n\t\t\t\techo '<option value=\"', string_attribute( $t_option_value ), '\" ',\n\t\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], $t_option_value ), '>',\n\t\t\t\t\tstring_display_line( $t_option_name ), '</option>';\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\techo '<select ', $t_select_modifier, ( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' name=\"',\n\t\t\t\tstring_attribute( $p_field_name ), '[]\">', '<option value=\"', META_FILTER_ANY, '\" ',\n\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], META_FILTER_ANY ), '>[', lang_get( 'any' ), ']</option>';\n\n\t\t\tforeach( $p_filter_object->options() as $t_option_value => $t_option_name ) {\n\t\t\t\techo '<option value=\"', (int)$t_option_value, '\" ',\n\t\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], (int)$t_option_value ), '>',\n\t\t\t\t\tstring_display_line( $t_option_name ), '</option>';\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t\tbreak;\n\n\t}\n}\n\n/**\n *  print custom fields\n * @param int $p_field_id\n */\nfunction print_filter_custom_field( $p_field_id ) {\n\tglobal $t_filter, $t_accessible_custom_fields_names, $t_accessible_custom_fields_types, $t_accessible_custom_fields_values, $t_accessible_custom_fields_ids, $t_select_modifier;\n\n\t$j = array_search( $p_field_id, $t_accessible_custom_fields_ids );\n\tif( $j === null || $j === false ) {\n\n\t\t# Note: Prior to PHP 4.2.0, array_search() returns NULL on failure instead of FALSE.\n\t\t?>\n\t\t\t<span style=\"color:red;weight:bold;\">\n\t\t\t\tunknown custom filter (custom <?php $p_field_id;?>)\n\t\t\t</span>\n\t\t\t<?php\n\t} else if( isset( $t_accessible_custom_fields_names[$j] ) ) {\n\t\tif( $t_accessible_custom_fields_types[$j] == CUSTOM_FIELD_TYPE_DATE ) {\n\t\t\tprint_filter_custom_field_date( $j, $p_field_id );\n\t\t} else {\n\t\t\techo '<select ' . $t_select_modifier . ' name=\"custom_field_' . $p_field_id . '[]\">';\n\t\t\techo '<option value=\"' . META_FILTER_ANY . '\" ';\n\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], META_FILTER_ANY );\n\t\t\techo '>[' . lang_get( 'any' ) . ']</option>';\n\n\t\t\t# don't show META_FILTER_NONE for enumerated types as it's not possible for them to be blank\n\t\t\tif( !in_array( $t_accessible_custom_fields_types[$j], array( CUSTOM_FIELD_TYPE_ENUM, CUSTOM_FIELD_TYPE_LIST, CUSTOM_FIELD_TYPE_MULTILIST ) ) ) {\n\t\t\t\techo '<option value=\"' . META_FILTER_NONE . '\" ';\n\t\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], META_FILTER_NONE );\n\t\t\t\techo '>[' . lang_get( 'none' ) . ']</option>';\n\t\t\t}\n\t\t\tif( is_array( $t_accessible_custom_fields_values[$j] ) ) {\n\t\t\t\t$t_max_length = config_get( 'max_dropdown_length' );\n\t\t\t\tforeach( $t_accessible_custom_fields_values[$j] as $t_item ) {\n\t\t\t\t\tif(( utf8_strtolower( $t_item ) !== META_FILTER_ANY ) && ( utf8_strtolower( $t_item ) !== META_FILTER_NONE ) ) {\n\t\t\t\t\t\techo '<option value=\"' . string_attribute( $t_item ) . '\" ';\n\t\t\t\t\t\tif( isset( $t_filter['custom_fields'][$p_field_id] ) ) {\n\t\t\t\t\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], $t_item );\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo '>' . string_attribute( string_shorten( $t_item, $t_max_length ) ) . '</option>' . \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\techo '</select>';\n\t\t}\n\t}\n}\n\n/**\n *  print sort fields\n */\nfunction print_filter_show_sort() {\n\tglobal $t_filter;\n\n\t# get all of the displayed fields for sort, then drop ones that\n\t#  are not appropriate and translate the rest\n\t$t_fields = helper_get_columns_to_view();\n\t$t_n_fields = count( $t_fields );\n\t$t_shown_fields[''] = '';\n\tfor( $i = 0;$i < $t_n_fields;$i++ ) {\n\t\tif( !in_array( $t_fields[$i], array( 'selection', 'edit', 'bugnotes_count', 'attachment' ) ) ) {\n\t\t\tif( strpos( $t_fields[$i], 'custom_' ) === 0 ) {\n\t\t\t\t$t_field_name = string_display( lang_get_defaulted( utf8_substr( $t_fields[$i], utf8_strlen( 'custom_' ) ) ) );\n\t\t\t} else {\n\t\t\t\t$t_field_name = string_get_field_name( $t_fields[$i] );\n\t\t\t}\n\t\t\t$t_shown_fields[$t_fields[$i]] = $t_field_name;\n\t\t}\n\t}\n\t$t_shown_dirs[''] = '';\n\t$t_shown_dirs['ASC'] = lang_get( 'bugnote_order_asc' );\n\t$t_shown_dirs['DESC'] = lang_get( 'bugnote_order_desc' );\n\n\t# get default values from filter structure\n\t$t_sort_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t$t_dir_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\tif( !isset( $t_sort_fields[1] ) ) {\n\t\t$t_sort_fields[1] = '';\n\t\t$t_dir_fields[1] = '';\n\t}\n\n\t# if there are fields to display, show the dropdowns\n\tif( count( $t_fields ) > 0 ) {\n\t\t# display a primary and secondary sort fields\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_0\">';\n\t\tforeach( $t_shown_fields as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_sort_fields[0] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_0\">';\n\t\tforeach( $t_shown_dirs as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_dir_fields[0] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\techo ', ';\n\n\t\t# for secondary sort\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_1\">';\n\t\tforeach( $t_shown_fields as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_sort_fields[1] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_1\">';\n\t\tforeach( $t_shown_dirs as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_dir_fields[1] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\t} else {\n\t\techo lang_get_defaulted( 'last_updated' ) . lang_get( 'bugnote_order_desc' );\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_1\" value=\"last_updated\" />';\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_1\" value=\"DESC\" />';\n\t}\n}\n\n/**\n *  print custom field date fields\n * @param int $p_field_num\n * @param int $p_field_id\n */\nfunction print_filter_custom_field_date( $p_field_num, $p_field_id ) {\n\tglobal $t_filter, $t_accessible_custom_fields_names, $t_accessible_custom_fields_types, $t_accessible_custom_fields_values, $t_accessible_custom_fields_ids, $t_select_modifier;\n\n\t$t_js_toggle_func = 'toggle_custom_date_field_' . $p_field_id . '_controls';\n\n\t# Resort the values so there ordered numerically, they are sorted as strings otherwise which\n\t# may be wrong for dates before early 2001.\n\tif( is_array( $t_accessible_custom_fields_values[$p_field_num] ) ) {\n\t\tarray_multisort( $t_accessible_custom_fields_values[$p_field_num], SORT_NUMERIC, SORT_ASC );\n\t}\n\n\tif( isset( $t_accessible_custom_fields_values[$p_field_num][0] ) ) {\n\t\t$t_sel_start_year = date( 'Y', $t_accessible_custom_fields_values[$p_field_num][0] );\n\t}\n\t$t_count = count( $t_accessible_custom_fields_values[$p_field_num] );\n\tif( isset( $t_accessible_custom_fields_values[$p_field_num][$t_count - 1] ) ) {\n\t\t$t_sel_end_year = date( 'Y', $t_accessible_custom_fields_values[$p_field_num][$t_count - 1] );\n\t}\n\n\t$t_start = date( 'U' );\n\n\t# Default to today in filters..\n\t$t_end = $t_start;\n\n\tif( isset( $t_filter['custom_fields'][$p_field_id][1] ) ) {\n\t\t$t_start_time = $t_filter['custom_fields'][$p_field_id][1];\n\t} else {\n\t\t$t_start_time = 0;\n\t}\n\n\tif( isset( $t_filter['custom_fields'][$p_field_id][2] ) ) {\n\t\t$t_end_time = $t_filter['custom_fields'][$p_field_id][2];\n\t} else {\n\t\t$t_end_time = 0;\n\t}\n\n\t$t_start_disable = true;\n\t$t_end_disable = true;\n\n\t// if $t_filter['custom_fields'][$p_field_id][0] is not set (ie no filter), we will drop through the\n\t// following switch and use the default values above, so no need to check if stuff is set or not.\n\tswitch( $t_filter['custom_fields'][$p_field_id][0] ) {\n\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_BETWEEN:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_end_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\t$t_end = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ONORBEFORE:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ON:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ONORAFTER:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t}\n\n\techo \"\\n<table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"><tr><td>\\n\";\n\techo \"<select size=\\\"1\\\" name=\\\"custom_field_\" . $p_field_id . \"_control\\\" OnChange=\\\"\" . $t_js_toggle_func . \"();\\\">\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ANY . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ANY );\n\techo '>' . lang_get( 'any' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_NONE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_NONE );\n\techo '>' . lang_get( 'none' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_BETWEEN . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_BETWEEN );\n\techo '>' . lang_get( 'between_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ONORBEFORE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ONORBEFORE );\n\techo '>' . lang_get( 'on_or_before_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_BEFORE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_BEFORE );\n\techo '>' . lang_get( 'before_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ON . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ON );\n\techo '>' . lang_get( 'on_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_AFTER . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_AFTER );\n\techo '>' . lang_get( 'after_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ONORAFTER . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ONORAFTER );\n\techo '>' . lang_get( 'on_or_after_date' ) . '</option>' . \"\\n\";\n\techo '</select>' . \"\\n\";\n\n\techo \"</td></tr>\\n<tr><td>\";\n\n\tprint_date_selection_set( 'custom_field_' . $p_field_id . '_start', config_get( 'short_date_format' ), $t_start, $t_start_disable, false, $t_sel_start_year, $t_sel_end_year );\n\tprint \"</td></tr>\\n<tr><td>\";\n\tprint_date_selection_set( 'custom_field_' . $p_field_id . '_end', config_get( 'short_date_format' ), $t_end, $t_end_disable, false, $t_sel_start_year, $t_sel_end_year );\n\tprint \"</td></tr>\\n</table>\";\n}\n\n/**\n *  print project field\n */\nfunction print_filter_project_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n\t\t<!-- Project -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PROJECT_ID;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_CURRENT?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PROJECT_ID], META_FILTER_CURRENT );?>>[<?php echo lang_get( 'current' )?>]</option>\n\t\t\t<?php print_project_option_list( $t_filter[FILTER_PROPERTY_PROJECT_ID] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  Prints a multi-value filter field.\n * @param  string $p_field_name\n * @param mixed $p_field_value\n */\nfunction print_multivalue_field( $p_field_name, $p_field_value ) {\n\t$t_output = '';\n\t$t_any_found = false;\n\n\tif( count( $p_field_value ) == 0 ) {\n\t\techo lang_get( 'any' );\n\t} else {\n\t\t$t_first_flag = true;\n\n\t\t$t_field_value = is_array( $p_field_value ) ? $p_field_value : array( $p_field_value );\n\n\t\tforeach( $t_field_value as $t_current ) {\n\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t?>\n\t\t\t\t<input type=\"hidden\" name=\"<?php echo $p_field_name?>[]\" value=\"<?php echo string_display( $t_current );?>\" />\n\t\t\t\t<?php\n\t\t\t\t$t_this_string = '';\n\n\t\t\tif((( $t_current == META_FILTER_ANY ) && ( is_numeric( $t_current ) ) ) || ( is_blank( $t_current ) ) ) {\n\t\t\t\t$t_any_found = true;\n\t\t\t} else {\n\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t}\n\n\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t$t_output .= '<br />';\n\t\t\t} else {\n\t\t\t\t$t_first_flag = false;\n\t\t\t}\n\n\t\t\t$t_output .= $t_this_string;\n\t\t}\n\n\t\tif( true == $t_any_found ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\techo $t_output;\n\t\t}\n\t}\n}\n\n# ==========================================================================\n# CACHING\n# ==========================================================================\n/**\n * @internal SECURITY NOTE: cache globals are initialized here to prevent them\n *      being spoofed if register_globals is turned on.\n * \tWe cache filter requests to reduce the number of SQL queries\n * @global mixed $g_cache_filter\n * @global mixed $g_cache_filter_db_filters\n */\n$g_cache_filter = array();\n$g_cache_filter_db_filters = array();\n\n/**\n *  Cache a filter row if necessary and return the cached copy\n *  If the second parameter is true (default), trigger an error\n *  if the filter can't be found.  If the second parameter is\n *  false, return false if the filter can't be found.\n * @param int $p_filter_id\n * @param bool $p_trigger_errors\n * @return mixed\n */\nfunction filter_cache_row( $p_filter_id, $p_trigger_errors = true ) {\n\tglobal $g_cache_filter;\n\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\n\tif( isset( $g_cache_filter[$c_filter_id] ) ) {\n\t\treturn $g_cache_filter[$c_filter_id];\n\t}\n\n\t$query = 'SELECT *\n\t\t\t\t  FROM ' . $t_filters_table . '\n\t\t\t\t  WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( 0 == db_num_rows( $result ) ) {\n\t\tif( $p_trigger_errors ) {\n\t\t\terror_parameters( $p_filter_id );\n\t\t\ttrigger_error( ERROR_FILTER_NOT_FOUND, ERROR );\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$row = db_fetch_array( $result );\n\n\t$g_cache_filter[$c_filter_id] = $row;\n\n\treturn $row;\n}\n\n/**\n *  Clear the filter cache (or just the given id if specified)\n * @param int $p_filter_id\n * @return bool\n */\nfunction filter_clear_cache( $p_filter_id = null ) {\n\tglobal $g_cache_filter;\n\n\tif( null === $p_filter_id ) {\n\t\t$g_cache_filter = array();\n\t} else {\n\t\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t\tunset( $g_cache_filter[$c_filter_id] );\n\t}\n\n\treturn true;\n}\n\n# ==========================================================================\n# FILTER DB FUNCTIONS\n# ==========================================================================\n/**\n *  Add a filter to the database for the current user\n * @param int $p_project_id\n * @param bool $p_is_public\n * @param string $p_name\n * @param string $p_filter_string\n * @return int\n */\nfunction filter_db_set_for_current_user( $p_project_id, $p_is_public, $p_name, $p_filter_string ) {\n\t$t_user_id = auth_get_current_user_id();\n\t$c_project_id = db_prepare_int( $p_project_id );\n\t$c_is_public = db_prepare_bool( $p_is_public, false );\n\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\n\t# check that the user can save non current filters (if required)\n\tif(( ALL_PROJECTS <= $c_project_id ) && ( !is_blank( $p_name ) ) && ( !access_has_project_level( config_get( 'stored_query_create_threshold' ) ) ) ) {\n\t\treturn -1;\n\t}\n\n\t# ensure that we're not making this filter public if we're not allowed\n\tif( !access_has_project_level( config_get( 'stored_query_create_shared_threshold' ) ) ) {\n\t\t$c_is_public = db_prepare_bool( false );\n\t}\n\n\t# Do I need to update or insert this value?\n\t$query = \"SELECT id FROM $t_filters_table\n\t\t\t\t\tWHERE user_id=\" . db_param() . \"\n\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $t_user_id, $c_project_id, $p_name ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\t$query = \"UPDATE $t_filters_table\n\t\t\t\t\t  SET is_public=\" . db_param() . \",\n\t\t\t\t\t\tfilter_string=\" . db_param() . \"\n\t\t\t\t\t  WHERE id=\" . db_param();\n\t\tdb_query_bound( $query, Array( $c_is_public, $p_filter_string, $row['id'] ) );\n\n\t\treturn $row['id'];\n\t} else {\n\t\t$query = \"INSERT INTO $t_filters_table\n\t\t\t\t\t\t( user_id, project_id, is_public, name, filter_string )\n\t\t\t\t\t  VALUES\n\t\t\t\t\t\t( \" . db_param() . ', ' . db_param() . ', ' . db_param() . ', ' . db_param() . ', ' . db_param() . ' )';\n\t\tdb_query_bound( $query, Array( $t_user_id, $c_project_id, $c_is_public, $p_name, $p_filter_string ) );\n\n\t\t# Recall the query, we want the filter ID\n\t\t$query = \"SELECT id\n\t\t\t\t\t\tFROM $t_filters_table\n\t\t\t\t\t\tWHERE user_id=\" . db_param() . \"\n\t\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\t\tAND name=\" . db_param();\n\t\t$result = db_query_bound( $query, Array( $t_user_id, $c_project_id, $p_name ) );\n\n\t\tif( db_num_rows( $result ) > 0 ) {\n\t\t\t$row = db_fetch_array( $result );\n\t\t\treturn $row['id'];\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\n/**\n *  This function returns the filter string that is\n *  tied to the unique id parameter. If the user doesn't\n *  have permission to see this filter, the function\n *  returns null\n * @param int $p_filter_id\n * @param int $p_user_id\n * @return mixed\n */\nfunction filter_db_get_filter( $p_filter_id, $p_user_id = null ) {\n\tglobal $g_cache_filter_db_filters;\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\tif( isset( $g_cache_filter_db_filters[$p_filter_id] ) ) {\n\t\tif( $g_cache_filter_db_filters[$p_filter_id] === false ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn $g_cache_filter_db_filters[$p_filter_id];\n\t}\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$t_user_id = $p_user_id;\n\t}\n\n\t$query = 'SELECT * FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\tif( $row['user_id'] != $t_user_id ) {\n\t\t\tif( $row['is_public'] != true ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t# check that the user has access to non current filters\n\t\tif(( ALL_PROJECTS <= $row['project_id'] ) && ( !is_blank( $row['name'] ) ) && ( !access_has_project_level( config_get( 'stored_query_use_threshold', $row['project_id'], $t_user_id ) ) ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$g_cache_filter_db_filters[$p_filter_id] = $row['filter_string'];\n\t\treturn $row['filter_string'];\n\t} else {\n\t\t$g_cache_filter_db_filters[$p_filter_id] = false;\n\t\treturn false;\n\t}\n}\n\n/**\n * @param int $p_project_id\n * @param int $p_user_id\n * @return int\n */\nfunction filter_db_get_project_current( $p_project_id, $p_user_id = null ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_project_id = db_prepare_int( $p_project_id );\n\t$c_project_id = $c_project_id * -1;\n\n\tif( null === $p_user_id ) {\n\t\t$c_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$c_user_id = db_prepare_int( $p_user_id );\n\t}\n\n\t# we store current filters for each project with a special project index\n\t$query = \"SELECT *\n\t\t\t\t  FROM $t_filters_table\n\t\t\t\t  WHERE user_id=\" . db_param() . \"\n\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $c_user_id, $c_project_id, '' ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\t\treturn $row['id'];\n\t}\n\n\treturn null;\n}\n\n/**\n *  Query for the filter name using the filter id\n * @param int $p_filter_id\n * @return string\n */\nfunction filter_db_get_name( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\t$query = 'SELECT * FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\tif( $row['user_id'] != auth_get_current_user_id() ) {\n\t\t\tif( $row['is_public'] != true ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn $row['name'];\n\t}\n\n\treturn null;\n}\n\n/**\n *  Check if the current user has permissions to delete the stored query\n * @param $p_filter_id\n * @return bool\n */\nfunction filter_db_can_delete_filter( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t$t_user_id = auth_get_current_user_id();\n\n\t# Administrators can delete any filter\n\tif( user_is_administrator( $t_user_id ) ) {\n\t\treturn true;\n\t}\n\n\t$query = \"SELECT id\n\t\t\t\t  FROM $t_filters_table\n\t\t\t\t  WHERE id=\" . db_param() . \"\n\t\t\t\t  AND user_id=\" . db_param() . \"\n\t\t\t\t  AND project_id!=\" . db_param();\n\n\t$result = db_query_bound( $query, Array( $c_filter_id, $t_user_id, -1 ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *  Delete the filter specified by $p_filter_id\n * @param $p_filter_id\n * @return bool\n */\nfunction filter_db_delete_filter( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t$t_user_id = auth_get_current_user_id();\n\n\tif( !filter_db_can_delete_filter( $c_filter_id ) ) {\n\t\treturn false;\n\t}\n\n\t$query = 'DELETE FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_affected_rows( $result ) > 0 ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *  Delete all the unnamed filters\n */\nfunction filter_db_delete_current_filters() {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$t_all_id = ALL_PROJECTS;\n\n\t$query = \"DELETE FROM $t_filters_table\n\t\t\t\t\tWHERE project_id<=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $t_all_id, '' ) );\n}\n\n/**\n * @param int $p_project_id\n * @param int $p_user_id\n * @return mixed\n */\nfunction filter_db_get_available_queries( $p_project_id = null, $p_user_id = null ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$t_overall_query_arr = array();\n\n\tif( null === $p_project_id ) {\n\t\t$t_project_id = helper_get_current_project();\n\t} else {\n\t\t$t_project_id = db_prepare_int( $p_project_id );\n\t}\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$t_user_id = db_prepare_int( $p_user_id );\n\t}\n\n\t# If the user doesn't have access rights to stored queries, just return\n\tif( !access_has_project_level( config_get( 'stored_query_use_threshold' ) ) ) {\n\t\treturn $t_overall_query_arr;\n\t}\n\n\t# Get the list of available queries. By sorting such that public queries are\n\t# first, we can override any query that has the same name as a private query\n\t# with that private one\n\t$query = \"SELECT * FROM $t_filters_table\n\t\t\t\t\tWHERE (project_id=\" . db_param() . \"\n\t\t\t\t\tOR project_id=0)\n\t\t\t\t\tAND name!=''\n\t\t\t\t\tORDER BY is_public DESC, name ASC\";\n\t$result = db_query_bound( $query, Array( $t_project_id ) );\n\t$query_count = db_num_rows( $result );\n\n\tfor( $i = 0;$i < $query_count;$i++ ) {\n\t\t$row = db_fetch_array( $result );\n\t\tif(( $row['user_id'] == $t_user_id ) || db_prepare_bool( $row['is_public'] ) ) {\n\t\t\t$t_overall_query_arr[$row['id']] = $row['name'];\n\t\t}\n\t}\n\n\t$t_overall_query_arr = array_unique( $t_overall_query_arr );\n\tasort( $t_overall_query_arr );\n\n\treturn $t_overall_query_arr;\n}\n\n/**\n * @param str $p_name\n * @return bool true when under max_length (64) and false when over\n */\nfunction filter_name_valid_length( $p_name ) {\n\tif( utf8_strlen( $p_name ) > 64 ) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n"], "fixing_code": ["<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package CoreAPI\n * @subpackage FilterAPI\n * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n */\n\n/**\n * requires current_user_api\n */\nrequire_once( 'current_user_api.php' );\n/**\n * requires user_api\n */\nrequire_once( 'user_api.php' );\n/**\n * requires bug_api\n */\nrequire_once( 'bug_api.php' );\n/**\n * requires collapse_api\n */\nrequire_once( 'collapse_api.php' );\n/**\n * requires relationship_api\n */\nrequire_once( 'relationship_api.php' );\n/**\n * requires tag_api\n */\nrequire_once( 'tag_api.php' );\n/**\n * requires config_filter_defaults_inc\n */\nrequire_once( $g_absolute_path . 'config_filter_defaults_inc.php' );\n\n/**\n * Allow plugins to define a set of class-based filters, and register/load\n * them here to be used by the rest of filter_api.\n * @return array Mapping of field name to filter object\n */\nfunction filter_get_plugin_filters() {\n\tstatic $s_field_array = null;\n\n\tif ( is_null( $s_field_array ) ) {\n\t\t$s_field_array = array();\n\n\t\t$t_all_plugin_filters = event_signal( 'EVENT_FILTER_FIELDS' );\n\t\tforeach( $t_all_plugin_filters as $t_plugin => $t_plugin_filters ) {\n\t\t\tforeach( $t_plugin_filters as $t_callback => $t_plugin_filter_array ) {\n\t\t\t\tif ( is_array( $t_plugin_filter_array ) ) {\n\t\t\t\t\tforeach( $t_plugin_filter_array as $t_filter_class ) {\n\t\t\t\t\t\tif ( class_exists( $t_filter_class ) && is_subclass_of( $t_filter_class, 'MantisFilter' ) ) {\n\t\t\t\t\t\t\t$t_filter_object = new $t_filter_class();\n\t\t\t\t\t\t\t$t_field_name = $t_plugin . '_' . $t_filter_object->field;\n\t\t\t\t\t\t\t$s_field_array[ $t_field_name ] = $t_filter_object;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $s_field_array;\n}\n/**\n *  Get a permalink for the current active filter.  The results of using these fields by other users\n *  can be inconsistent with the original results due to fields like \"Myself\", \"Current Project\",\n *  and due to access level.\n * @param array $p_custom_filter\n * @return string the search.php?xxxx or an empty string if no criteria applied.\n */\nfunction filter_get_url( $p_custom_filter ) {\n\t$t_query = array();\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t$t_project_id = $p_custom_filter[FILTER_PROPERTY_PROJECT_ID];\n\n\t\tif( count( $t_project_id ) == 1 && $t_project_id[0] == META_FILTER_CURRENT ) {\n\t\t\t$t_project_id = array(\n\t\t\t\thelper_get_current_project(),\n\t\t\t);\n\t\t}\n\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PROJECT_ID, $t_project_id );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FREE_TEXT, $p_custom_filter[FILTER_PROPERTY_FREE_TEXT] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_CATEGORY] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_CATEGORY, $p_custom_filter[FILTER_PROPERTY_CATEGORY] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_REPORTER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_REPORTER_ID, $p_custom_filter[FILTER_PROPERTY_REPORTER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_STATUS_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_STATUS_ID, $p_custom_filter[FILTER_PROPERTY_STATUS_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_MONITOR_USER_ID, $p_custom_filter[FILTER_PROPERTY_MONITOR_USER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HANDLER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HANDLER_ID, $p_custom_filter[FILTER_PROPERTY_HANDLER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_NOTE_USER_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_NOTE_USER_ID, $p_custom_filter[FILTER_PROPERTY_NOTE_USER_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SEVERITY_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SEVERITY_ID, $p_custom_filter[FILTER_PROPERTY_SEVERITY_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RESOLUTION_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RESOLUTION_ID, $p_custom_filter[FILTER_PROPERTY_RESOLUTION_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRIORITY_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRIORITY_ID, $p_custom_filter[FILTER_PROPERTY_PRIORITY_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_VIEW_STATE_ID, $p_custom_filter[FILTER_PROPERTY_VIEW_STATE_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SHOW_STICKY_ISSUES, $p_custom_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRODUCT_VERSION, $p_custom_filter[FILTER_PROPERTY_PRODUCT_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PRODUCT_BUILD, $p_custom_filter[FILTER_PROPERTY_PRODUCT_BUILD] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FIXED_IN_VERSION, $p_custom_filter[FILTER_PROPERTY_FIXED_IN_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TARGET_VERSION, $p_custom_filter[FILTER_PROPERTY_TARGET_VERSION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SORT_FIELD_NAME, $p_custom_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_SORT_DIRECTION] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_SORT_DIRECTION, $p_custom_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] ) ) {\n\t\tif( $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] != config_get( 'default_limit_view' ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_PROPERTY_ISSUES_PER_PAGE, $p_custom_filter[FILTER_SEARCH_ISSUES_PER_PAGE] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] ) ) {\n\t\tif( $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] != config_get( 'default_show_changed' ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HIGHLIGHT_CHANGED, $p_custom_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_HIDE_STATUS_ID, $p_custom_filter[FILTER_PROPERTY_HIDE_STATUS_ID] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_NOT_ASSIGNED] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_NOT_ASSIGNED, $p_custom_filter[FILTER_PROPERTY_NOT_ASSIGNED] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_FILTER_BY_DATE, $p_custom_filter[FILTER_PROPERTY_FILTER_BY_DATE] );\n\n\t\t# The start and end dates are only applicable if filter by date is set.\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_DAY] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_DAY, $p_custom_filter[FILTER_PROPERTY_START_DAY] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_DAY] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_DAY, $p_custom_filter[FILTER_PROPERTY_END_DAY] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_MONTH] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_MONTH, $p_custom_filter[FILTER_PROPERTY_START_MONTH] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_MONTH] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_MONTH, $p_custom_filter[FILTER_PROPERTY_END_MONTH] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_START_YEAR] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_START_YEAR, $p_custom_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t}\n\n\t\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_END_YEAR] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_END_YEAR, $p_custom_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] ) ) {\n\t\tif( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] != -1 ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RELATIONSHIP_TYPE, $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE] );\n\t\t}\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_BUG] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_RELATIONSHIP_BUG, $p_custom_filter[FILTER_PROPERTY_RELATIONSHIP_BUG] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_PLATFORM, $p_custom_filter[FILTER_PROPERTY_PLATFORM] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_OS] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_OS, $p_custom_filter[FILTER_PROPERTY_OS] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_OS_BUILD, $p_custom_filter[FILTER_PROPERTY_OS_BUILD] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TAG_STRING] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TAG_STRING, $p_custom_filter[FILTER_PROPERTY_TAG_STRING] );\n\t}\n\n\tif( !filter_field_is_any( $p_custom_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$t_query[] = filter_encode_field_and_value( FILTER_SEARCH_TAG_SELECT, $p_custom_filter[FILTER_PROPERTY_TAG_SELECT] );\n\t}\n\n\tif( isset( $p_custom_filter['custom_fields'] ) ) {\n\t\tforeach( $p_custom_filter['custom_fields'] as $t_custom_field_id => $t_custom_field_values ) {\n\t\t\tif( !filter_field_is_any( $t_custom_field_values ) ) {\n\t\t\t\t$t_query[] = filter_encode_field_and_value( 'custom_field_' . $t_custom_field_id, $t_custom_field_values );\n\t\t\t}\n\t\t}\n\t}\n\n\t# Allow plugins to add filter fields\n\t$t_plugin_filter_array = filter_get_plugin_filters();\n\tforeach( $t_plugin_filter_array as $t_field_name => $t_filter_object ) {\n\t\tif( !filter_field_is_any( $p_custom_filter[ $t_field_name ] ) ) {\n\t\t\t$t_query[] = filter_encode_field_and_value( $t_field_name, $p_custom_filter[ $t_field_name ], $t_filter_object->type );\n\t\t}\n\t}\n\n\tif( count( $t_query ) > 0 ) {\n\t\t$t_query_str = implode( $t_query, '&' );\n\t\t$t_url = config_get( 'path' ) . 'search.php?' . $t_query_str;\n\t} else {\n\t\t$t_url = '';\n\t}\n\n\treturn $t_url;\n}\n\n/**\n *  Encodes a field and it's value for the filter URL.  This handles the URL encoding\n *  and arrays.\n * @param string $p_field_name The field name.\n * @param string $p_field_value The field value (can be an array)\n * @return string url encoded string\n */\nfunction filter_encode_field_and_value( $p_field_name, $p_field_value, $p_field_type=null ) {\n\t$t_query_array = array();\n\tif( is_array( $p_field_value ) ) {\n\t\t$t_count = count( $p_field_value );\n\t\tif( $t_count > 1 || $p_field_type == FILTER_TYPE_MULTI_STRING || $p_field_type == FILTER_TYPE_MULTI_INT ) {\n\t\t\tforeach( $p_field_value as $t_value ) {\n\t\t\t\t$t_query_array[] = urlencode( $p_field_name . '[]' ) . '=' . urlencode( $t_value );\n\t\t\t}\n\t\t}\n\t\telse if( $t_count == 1 ) {\n\t\t\t$t_query_array[] = urlencode( $p_field_name ) . '=' . urlencode( $p_field_value[0] );\n\t\t}\n\t} else {\n\t\t$t_query_array[] = urlencode( $p_field_name ) . '=' . urlencode( $p_field_value );\n\t}\n\n\treturn implode( $t_query_array, '&' );\n}\n\n# ==========================================================================\n# GENERAL FUNCTIONS                            \t\t\t\t\t\t      =\n# ==========================================================================\n/**\n *  Checks the supplied value to see if it is an ANY value.\n * @param string $p_field_value - The value to check.\n * @return bool true for \"ANY\" values and false for others.  \"ANY\" means filter criteria not active.\n */\nfunction filter_field_is_any( $p_field_value ) {\n\tif( is_array( $p_field_value ) ) {\n\t\tif( count( $p_field_value ) == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tforeach( $p_field_value as $t_value ) {\n\t\t\tif(( META_FILTER_ANY == $t_value ) && ( is_numeric( $t_value ) ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif( is_string( $p_field_value ) && is_blank( $p_field_value ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif( is_bool( $p_field_value ) && !$p_field_value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif(( META_FILTER_ANY == $p_field_value ) && ( is_numeric( $p_field_value ) ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n     *  Checks the supplied value to see if it is a NONE value.\n     * @param string $p_field_value - The value to check.\n     * @return bool true for \"NONE\" values and false for others.\n * @todo is a check for these necessary?  if ( ( $t_filter_value === 'none' ) || ( $t_filter_value === '[none]' ) )\n     */\nfunction filter_field_is_none( $p_field_value ) {\n\tif( is_array( $p_field_value ) ) {\n\t\tforeach( $p_field_value as $t_value ) {\n\t\t\tif(( META_FILTER_NONE == $t_value ) && ( is_numeric( $t_value ) ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif( is_string( $p_field_value ) && is_blank( $p_field_value ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif(( META_FILTER_NONE == $p_field_value ) && ( is_numeric( $p_field_value ) ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n *  Checks the supplied value to see if it is a MYSELF value.\n * @param string $p_field_value - The value to check.\n * @return bool true for \"MYSELF\" values and false for others.\n */\nfunction filter_field_is_myself( $p_field_value ) {\n\treturn( META_FILTER_MYSELF == $p_field_value ? TRUE : FALSE );\n}\n\n/**\n     * @param $p_count\n     * @param $p_per_page\n     * @return int\n     */\nfunction filter_per_page( $p_filter, $p_count, $p_per_page ) {\n\t$p_per_page = (( NULL == $p_per_page ) ? (int) $p_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] : $p_per_page );\n\t$p_per_page = (( 0 == $p_per_page || -1 == $p_per_page ) ? $p_count : $p_per_page );\n\n\treturn (int) abs( $p_per_page );\n}\n\n/**\n     *  Use $p_count and $p_per_page to determine how many pages to split this list up into.\n     *  For the sake of consistency have at least one page, even if it is empty.\n     * @param $p_count\n     * @param $p_per_page\n     * @return $t_page_count\n     */\nfunction filter_page_count( $p_count, $p_per_page ) {\n\t$t_page_count = ceil( $p_count / $p_per_page );\n\tif( $t_page_count < 1 ) {\n\t\t$t_page_count = 1;\n\t}\n\treturn $t_page_count;\n}\n\n/**\n     *  Checks to make sure $p_page_number isn't past the last page.\n     *  and that $p_page_number isn't before the first page\n     *   @param $p_page_number\n     *   @param $p_page_count\n     */\nfunction filter_valid_page_number( $p_page_number, $p_page_count ) {\n\tif( $p_page_number > $p_page_count ) {\n\t\t$p_page_number = $p_page_count;\n\t}\n\n\tif( $p_page_number < 1 ) {\n\t\t$p_page_number = 1;\n\t}\n\treturn $p_page_number;\n}\n\n/**\n     *  Figure out the offset into the db query, offset is which record to start querying from\n     * @param int $p_page_number\n     * @param int $p_per_page\n     * @return int\n     */\nfunction filter_offset( $p_page_number, $p_per_page ) {\n\treturn(( (int) $p_page_number -1 ) * (int) $p_per_page );\n}\n\n/**\n *  Make sure that our filters are entirely correct and complete (it is possible that they are not).\n *  We need to do this to cover cases where we don't have complete control over the filters given.s\n * @param array $p_filter_arr\n * @return mixed\n * @todo function needs to be abstracted\n */\nfunction filter_ensure_valid_filter( $p_filter_arr ) {\n\n\t# extend current filter to add information passed via POST\n\tif( !isset( $p_filter_arr['_version'] ) ) {\n\t\t$p_filter_arr['_version'] = config_get( 'cookie_version' );\n\t}\n\t$t_cookie_vers = (int) utf8_substr( $p_filter_arr['_version'], 1 );\n\tif( utf8_substr( config_get( 'cookie_version' ), 1 ) > $t_cookie_vers ) {\n\n\t\t# if the version is old, update it\n\t\t$p_filter_arr['_version'] = config_get( 'cookie_version' );\n\t}\n\tif( !isset( $p_filter_arr['_view_type'] ) ) {\n\t\t$p_filter_arr['_view_type'] = gpc_get_string( 'view_type', 'simple' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] = gpc_get_int( FILTER_PROPERTY_ISSUES_PER_PAGE, config_get( 'default_limit_view' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_HIGHLIGHT_CHANGED] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_HIGHLIGHT_CHANGED] = config_get( 'default_show_changed' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SHOW_STICKY_ISSUES] = gpc_string_to_bool( config_get( 'show_sticky_issues' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SORT_FIELD_NAME] = \"last_updated\";\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_SORT_DIRECTION] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_SORT_DIRECTION] = \"DESC\";\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_PLATFORM] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_OS] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_OS] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_OS_BUILD] = array(\n\t\t\t0 => META_FILTER_ANY,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_PROJECT_ID] = array(\n\t\t\t0 => META_FILTER_CURRENT,\n\t\t);\n\t}\n\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_MONTH] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_MONTH] = gpc_get_string( FILTER_PROPERTY_START_MONTH, date( 'm' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_DAY] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_DAY] = gpc_get_string( FILTER_PROPERTY_START_DAY, 1 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_START_YEAR] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_START_YEAR] = gpc_get_string( FILTER_PROPERTY_START_YEAR, date( 'Y' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_MONTH] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_MONTH] = gpc_get_string( FILTER_PROPERTY_END_MONTH, date( 'm' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_DAY] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_DAY] = gpc_get_string( FILTER_PROPERTY_END_DAY, date( 'd' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_END_YEAR] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_END_YEAR] = gpc_get_string( FILTER_PROPERTY_END_YEAR, date( 'Y' ) );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_FREE_TEXT] = '';\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_NOT_ASSIGNED] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_NOT_ASSIGNED] = gpc_get_bool( FILTER_PROPERTY_NOT_ASSIGNED, false );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_FILTER_BY_DATE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_FILTER_BY_DATE] = gpc_get_bool( FILTER_PROPERTY_FILTER_BY_DATE, false );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] = gpc_get( FILTER_PROPERTY_VIEW_STATE_ID, '' );\n\t}\n\telse if( filter_field_is_any( $p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_VIEW_STATE_ID] = META_FILTER_ANY;\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_TYPE] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_TYPE] = gpc_get_int( FILTER_PROPERTY_RELATIONSHIP_TYPE, -1 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_BUG] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_RELATIONSHIP_BUG] = gpc_get_int( FILTER_PROPERTY_RELATIONSHIP_BUG, 0 );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TARGET_VERSION] = META_FILTER_ANY;\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TAG_STRING] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TAG_STRING] = gpc_get_string( FILTER_PROPERTY_TAG_STRING, '' );\n\t}\n\tif( !isset( $p_filter_arr[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$p_filter_arr[FILTER_PROPERTY_TAG_SELECT] = gpc_get_string( FILTER_PROPERTY_TAG_SELECT, '' );\n\t}\n\n\t# initialize plugin filters\n\t$t_plugin_filters = filter_get_plugin_filters();\n\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\tif( !isset( $p_filter_arr[ $t_field_name ] ) ) {\n\t\t\tswitch( $t_filter_object->type ) {\n\t\t\t\tcase FILTER_TYPE_STRING:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_string( $t_field_name, $t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_INT:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_int( $t_field_name, (int)$t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_bool( $t_field_name, (bool)$t_filter_object->default );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_string_array( $t_field_name, array( 0 => META_FILTER_ANY ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = gpc_get_int_array( $t_field_name, array( 0 => META_FILTER_ANY ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$p_filter_arr[ $t_field_name ] = META_FILTER_ANY;\n\t\t\t}\n\t\t}\n\n\t\tif ( ! $t_filter_object->validate( $p_filter_arr[ $t_field_name ] ) ) {\n\t\t\t$p_filter_arr[ $t_field_name ] = $t_filter_object->default;\n\t\t}\n\t}\n\n\t$t_custom_fields = custom_field_get_ids();\n\n\t# @@@ (thraxisp) This should really be the linked ids, but we don't know the project\n\t$f_custom_fields_data = array();\n\tif( is_array( $t_custom_fields ) && ( count( $t_custom_fields ) > 0 ) ) {\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\tif( is_array( gpc_get( 'custom_field_' . $t_cfid, null ) ) ) {\n\t\t\t\t$f_custom_fields_data[$t_cfid] = gpc_get_string_array( 'custom_field_' . $t_cfid, META_FILTER_ANY );\n\t\t\t} else {\n\t\t\t\t$f_custom_fields_data[$t_cfid] = gpc_get_string( 'custom_field_' . $t_cfid, META_FILTER_ANY );\n\t\t\t\t$f_custom_fields_data[$t_cfid] = array(\n\t\t\t\t\t$f_custom_fields_data[$t_cfid],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t# validate sorting\n\t$t_fields = helper_get_columns_to_view();\n\t$t_n_fields = count( $t_fields );\n\tfor( $i = 0;$i < $t_n_fields;$i++ ) {\n\t\tif( isset( $t_fields[$i] ) && in_array( $t_fields[$i], array( 'selection', 'edit', 'bugnotes_count', 'attachment' ) ) ) {\n\t\t\tunset( $t_fields[$i] );\n\t\t}\n\t}\n\t$t_sort_fields = explode( ',', $p_filter_arr['sort'] );\n\t$t_dir_fields = explode( ',', $p_filter_arr['dir'] );\n\tfor( $i = 0;$i < 2;$i++ ) {\n\t\tif( isset( $t_sort_fields[$i] ) ) {\n\t\t\t$t_drop = false;\n\t\t\t$t_sort = $t_sort_fields[$i];\n\t\t\tif( strpos( $t_sort, 'custom_' ) === 0 ) {\n\t\t\t\tif( false === custom_field_get_id_from_name( utf8_substr( $t_sort, utf8_strlen( 'custom_' ) ) ) ) {\n\t\t\t\t\t$t_drop = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif( !in_array( $t_sort, $t_fields ) ) {\n\t\t\t\t\t$t_drop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( !in_array( $t_dir_fields[$i], array( \"ASC\", \"DESC\" ) ) ) {\n\t\t\t\t$t_drop = true;\n\t\t\t}\n\t\t\tif( $t_drop ) {\n\t\t\t\tunset( $t_sort_fields[$i] );\n\t\t\t\tunset( $t_dir_fields[$i] );\n\t\t\t}\n\t\t}\n\t}\n\tif( count( $t_sort_fields ) > 0 ) {\n\t\t$p_filter_arr['sort'] = implode( ',', $t_sort_fields );\n\t\t$p_filter_arr['dir'] = implode( ',', $t_dir_fields );\n\t} else {\n\t\t$p_filter_arr['sort'] = \"last_updated\";\n\t\t$p_filter_arr['dir'] = \"DESC\";\n\t}\n\n\t# validate or filter junk from other fields\n\t$t_multi_select_list = array(\n\t\tFILTER_PROPERTY_CATEGORY => 'string',\n\t\tFILTER_PROPERTY_SEVERITY_ID => 'int',\n\t\tFILTER_PROPERTY_STATUS_ID => 'int',\n\t\tFILTER_PROPERTY_REPORTER_ID => 'int',\n\t\tFILTER_PROPERTY_HANDLER_ID => 'int',\n\t\tFILTER_PROPERTY_NOTE_USER_ID => 'int',\n\t\tFILTER_PROPERTY_RESOLUTION_ID => 'int',\n\t\tFILTER_PROPERTY_PRIORITY_ID => 'int',\n\t\tFILTER_PROPERTY_PRODUCT_BUILD => 'string',\n\t\tFILTER_PROPERTY_PRODUCT_VERSION => 'string',\n\t\tFILTER_PROPERTY_HIDE_STATUS_ID => 'int',\n\t\tFILTER_PROPERTY_FIXED_IN_VERSION => 'string',\n\t\tFILTER_PROPERTY_TARGET_VERSION => 'string',\n\t\tFILTER_PROPERTY_MONITOR_USER_ID => 'int',\n\t\t'show_profile' => 'int',\n\t);\n\tforeach( $t_multi_select_list as $t_multi_field_name => $t_multi_field_type ) {\n\t\tif( !isset( $p_filter_arr[$t_multi_field_name] ) ) {\n\t\t\tif( FILTER_PROPERTY_HIDE_STATUS_ID == $t_multi_field_name ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\tconfig_get( 'hide_status_default' ),\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if( 'custom_fields' == $t_multi_field_name ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\t$f_custom_fields_data,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\tMETA_FILTER_ANY,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif( !is_array( $p_filter_arr[$t_multi_field_name] ) ) {\n\t\t\t\t$p_filter_arr[$t_multi_field_name] = array(\n\t\t\t\t\t$p_filter_arr[$t_multi_field_name],\n\t\t\t\t);\n\t\t\t}\n\t\t\t$t_checked_array = array();\n\t\t\tforeach( $p_filter_arr[$t_multi_field_name] as $t_filter_value ) {\n\t\t\t\t$t_filter_value = stripslashes( $t_filter_value );\n\t\t\t\tif(( $t_filter_value === 'any' ) || ( $t_filter_value === '[any]' ) ) {\n\t\t\t\t\t$t_filter_value = META_FILTER_ANY;\n\t\t\t\t}\n\t\t\t\tif(( $t_filter_value === 'none' ) || ( $t_filter_value === '[none]' ) ) {\n\t\t\t\t\t$t_filter_value = META_FILTER_NONE;\n\t\t\t\t}\n\t\t\t\tif( 'string' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = db_prepare_string( $t_filter_value );\n\t\t\t\t}\n\t\t\t\telse if( 'int' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = db_prepare_int( $t_filter_value );\n\t\t\t\t}\n\t\t\t\telse if( 'array' == $t_multi_field_type ) {\n\t\t\t\t\t$t_checked_array[] = $t_filter_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$p_filter_arr[$t_multi_field_name] = $t_checked_array;\n\t\t}\n\t}\n\n\tif( is_array( $t_custom_fields ) && ( count( $t_custom_fields ) > 0 ) ) {\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\tif( !isset( $p_filter_arr['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = array(\n\t\t\t\t\tMETA_FILTER_ANY,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif( !is_array( $p_filter_arr['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = array(\n\t\t\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t$t_checked_array = array();\n\t\t\t\tforeach( $p_filter_arr['custom_fields'][$t_cfid] as $t_filter_value ) {\n\t\t\t\t\t$t_filter_value = stripslashes( $t_filter_value );\n\t\t\t\t\tif(( $t_filter_value === 'any' ) || ( $t_filter_value === '[any]' ) ) {\n\t\t\t\t\t\t$t_filter_value = META_FILTER_ANY;\n\t\t\t\t\t}\n\t\t\t\t\t$t_checked_array[] = db_prepare_string( $t_filter_value );\n\t\t\t\t}\n\t\t\t\t$p_filter_arr['custom_fields'][$t_cfid] = $t_checked_array;\n\t\t\t}\n\t\t}\n\t}\n\n\t# all of our filter values are now guaranteed to be there, and correct.\n\treturn $p_filter_arr;\n}\n\n/**\n *  Get the standard filter that is to be used when no filter was previously saved.\n *  When creating specific filters, this can be used as a basis for the filter, where\n *  specific entries can be overridden.\n * @return mixed\n */\nfunction filter_get_default() {\n\t$t_hide_status_default = config_get( 'hide_status_default' );\n\t$t_default_show_changed = config_get( 'default_show_changed' );\n\n\t$t_filter = array(\n\t\tFILTER_PROPERTY_CATEGORY => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_SEVERITY_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_STATUS_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HIGHLIGHT_CHANGED => $t_default_show_changed,\n\t\tFILTER_PROPERTY_REPORTER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HANDLER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PROJECT_ID => Array(\n\t\t\t'0' => META_FILTER_CURRENT,\n\t\t),\n\t\tFILTER_PROPERTY_RESOLUTION_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PRODUCT_BUILD => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_PRODUCT_VERSION => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_HIDE_STATUS_ID => Array(\n\t\t\t'0' => $t_hide_status_default,\n\t\t),\n\t\tFILTER_PROPERTY_MONITOR_USER_ID => Array(\n\t\t\t'0' => META_FILTER_ANY,\n\t\t),\n\t\tFILTER_PROPERTY_SORT_FIELD_NAME => 'last_updated',\n\t\tFILTER_PROPERTY_SORT_DIRECTION => 'DESC',\n\t\tFILTER_PROPERTY_ISSUES_PER_PAGE => config_get( 'default_limit_view' ),\n\t);\n\n\treturn filter_ensure_valid_filter( $t_filter );\n}\n\n/**\n *  Deserialize filter string\n * @param string $p_serialized_filter\n * @return mixed $t_filter array\n * @see filter_ensure_valid_filter\n */\nfunction filter_deserialize( $p_serialized_filter ) {\n\tif( is_blank( $p_serialized_filter ) ) {\n\t\treturn false;\n\t}\n\n\t# check to see if new cookie is needed\n\t$t_setting_arr = explode( '#', $p_serialized_filter, 2 );\n\tif(( $t_setting_arr[0] == 'v1' ) || ( $t_setting_arr[0] == 'v2' ) || ( $t_setting_arr[0] == 'v3' ) || ( $t_setting_arr[0] == 'v4' ) ) {\n\n\t\t# these versions can't be salvaged, they are too old to update\n\t\treturn false;\n\t}\n\n\t# We shouldn't need to do this anymore, as filters from v5 onwards should cope with changing\n\t# filter indices dynamically\n\t$t_filter_array = array();\n\tif( isset( $t_setting_arr[1] ) ) {\n\t\t$t_filter_array = unserialize( $t_setting_arr[1] );\n\t} else {\n\t\treturn false;\n\t}\n\tif( $t_filter_array['_version'] != config_get( 'cookie_version' ) ) {\n\n\t\t# if the version is not new enough, update it using defaults\n\t\treturn filter_ensure_valid_filter( $t_filter_array );\n\t}\n\n\treturn $t_filter_array;\n}\n\n/**\n *  Check if the filter cookie exists and is of the correct version.\n * @return bool\n */\nfunction filter_is_cookie_valid() {\n\t$t_view_all_cookie_id = gpc_get_cookie( config_get( 'view_all_cookie' ), '' );\n\t$t_view_all_cookie = filter_db_get_filter( $t_view_all_cookie_id );\n\n\t# check to see if the cookie does not exist\n\tif( is_blank( $t_view_all_cookie ) ) {\n\t\treturn false;\n\t}\n\n\t# check to see if new cookie is needed\n\t$t_setting_arr = explode( '#', $t_view_all_cookie, 2 );\n\tif(( $t_setting_arr[0] == 'v1' ) || ( $t_setting_arr[0] == 'v2' ) || ( $t_setting_arr[0] == 'v3' ) || ( $t_setting_arr[0] == 'v4' ) ) {\n\t\treturn false;\n\t}\n\n\t# We shouldn't need to do this anymore, as filters from v5 onwards should cope with changing\n\t# filter indices dynamically\n\t$t_filter_cookie_arr = array();\n\tif( isset( $t_setting_arr[1] ) ) {\n\t\t$t_filter_cookie_arr = unserialize( $t_setting_arr[1] );\n\t} else {\n\t\treturn false;\n\t}\n\tif( $t_filter_cookie_arr['_version'] != config_get( 'cookie_version' ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n *  Get the array fields specified by $p_filter_id\n *  using the cached row if it's available\n * @param int $p_filter_id\n * @return mixed a filter row\n */\nfunction filter_get_row( $p_filter_id ) {\n\treturn filter_cache_row( $p_filter_id );\n}\n\n/**\n *  Get the value of the filter field specified by filter id and field name\n * @param int $p_filter_id\n * @param string $p_field_name\n * @return string\n */\nfunction filter_get_field( $p_filter_id, $p_field_name ) {\n\t$row = filter_get_row( $p_filter_id );\n\n\tif( isset( $row[$p_field_name] ) ) {\n\t\treturn $row[$p_field_name];\n\t} else {\n\t\terror_parameters( $p_field_name );\n\t\ttrigger_error( ERROR_DB_FIELD_NOT_FOUND, WARNING );\n\t\treturn '';\n\t}\n}\n\n/**\n *  Add sort parameters to the query clauses\n * @param array $p_filter\n * @param bool $p_show_sticky\n * @param array $p_query_clauses\n * @return array $p_query_clauses\n */\nfunction filter_get_query_sort_data( &$p_filter, $p_show_sticky, $p_query_clauses ) {\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$t_custom_field_string_table = db_get_table( 'mantis_custom_field_string_table' );\n\n\t# if sort is blank then default the sort and direction.  This is to fix the\n\t# symptoms of #3953.  Note that even if the main problem is fixed, we may\n\t# have to keep this code for a while to handle filters saved with this blank field.\n\tif( is_blank( $p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] ) ) {\n\t\t$p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] = 'last_updated';\n\t\t$p_filter[FILTER_PROPERTY_SORT_DIRECTION] = 'DESC';\n\t}\n\n\t$p_query_clauses['order'] = array();\n\t$t_sort_fields = explode( ',', $p_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t$t_dir_fields = explode( ',', $p_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\n\t$t_plugin_columns = columns_get_plugin_columns();\n\n\tif ( gpc_string_to_bool( $p_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ) && ( NULL !== $p_show_sticky ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.sticky DESC\";\n\t}\n\n\t$t_count = count( $t_sort_fields );\n\tfor( $i = 0;$i < $t_count;$i++ ) {\n\t\t$c_sort = db_prepare_string( $t_sort_fields[$i] );\n\t\t$c_dir = 'DESC' == $t_dir_fields[$i] ? 'DESC' : 'ASC';\n\n\t\tif( !in_array( $t_sort_fields[$i], array_slice( $t_sort_fields, $i + 1 ) ) ) {\n\n\t\t\t# if sorting by a custom field\n\t\t\tif( strpos( $c_sort, 'custom_' ) === 0 ) {\n\t\t\t\t$t_custom_field = utf8_substr( $c_sort, utf8_strlen( 'custom_' ) );\n\t\t\t\t$t_custom_field_id = custom_field_get_id_from_name( $t_custom_field );\n\n\t\t\t\t$c_cf_alias = str_replace( ' ', '_', $t_custom_field );\n\t\t\t\t$t_cf_table_alias = $t_custom_field_string_table . '_' . $t_custom_field_id;\n\t\t\t\t$t_cf_select = \"$t_cf_table_alias.value $c_cf_alias\";\n\n\t\t\t\t# check to be sure this field wasn't already added to the query.\n\t\t\t\tif( !in_array( $t_cf_select, $p_query_clauses['select'] ) ) {\n\t\t\t\t\t$p_query_clauses['select'][] = $t_cf_select;\n\t\t\t\t\t$p_query_clauses['join'][] = \"LEFT JOIN $t_custom_field_string_table $t_cf_table_alias ON $t_bug_table.id = $t_cf_table_alias.bug_id AND $t_cf_table_alias.field_id = $t_custom_field_id\";\n\t\t\t\t}\n\n\t\t\t\t$p_query_clauses['order'][] = \"$c_cf_alias $c_dir\";\n\n\t\t\t# if sorting by plugin columns\n\t\t\t} else if ( isset( $t_plugin_columns[ $t_sort_fields[$i] ] ) ) {\n\t\t\t\t$t_column_object = $t_plugin_columns[ $t_sort_fields[$i] ];\n\n\t\t\t\tif ( $t_column_object->sortable ) {\n\t\t\t\t\t$t_clauses = $t_column_object->sortquery( $c_dir );\n\n\t\t\t\t\tif ( is_array( $t_clauses ) ) {\n\t\t\t\t\t\tif ( isset( $t_clauses['join'] ) ) {\n\t\t\t\t\t\t\t$p_query_clauses['join'][] = $t_clauses['join'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( isset( $t_clauses['order'] ) ) {\n\t\t\t\t\t\t\t$p_query_clauses['order'][] = $t_clauses['order'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t# standard column\n\t\t\t} else {\n\t\t\t\tif ( 'last_updated' == $c_sort ) {\n\t\t\t\t\t$c_sort = \"last_updated\";\n\t\t\t\t}\n\t\t\t\t$p_query_clauses['order'][] = \"$t_bug_table.$c_sort $c_dir\";\n\t\t\t}\n\t\t}\n\t}\n\n\t# add basic sorting if necessary\n\tif( !in_array( 'last_updated', $t_sort_fields ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.last_updated DESC\";\n\t}\n\tif( !in_array( 'date_submitted', $t_sort_fields ) ) {\n\t\t$p_query_clauses['order'][] = \"$t_bug_table.date_submitted DESC\";\n\t}\n\n\treturn $p_query_clauses;\n}\n\n/**\n     *  Remove any duplicate values in certain elements of query_clauses\n     *  Do not loop over query clauses as some keys may contain valid duplicate values.\n     *  We basically want unique values for just the base query elements select, from, and join\n     *  'where' and 'where_values' key should not have duplicates as that is handled earlier and applying\n     *  array_unique here could cause problems with the query.\n     * @param $p_query_clauses\n     * @return $p_query_clauses\n     */\nfunction filter_unique_query_clauses( $p_query_clauses ) {\n\t$p_query_clauses['select'] = array_unique( $p_query_clauses['select'] );\n\t$p_query_clauses['from'] = array_unique( $p_query_clauses['from'] );\n\t$p_query_clauses['join'] = array_unique( $p_query_clauses['join'] );\n\treturn $p_query_clauses;\n}\n\n/**\n     *  Build a query with the query clauses array, query for bug count and return the result\n     * @param array $p_query_clauses\n     * @return int\n     */\nfunction filter_get_bug_count( $p_query_clauses ) {\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$p_query_clauses = filter_unique_query_clauses( $p_query_clauses );\n\t$t_select_string = \"SELECT Count( DISTINCT $t_bug_table.id ) as idcnt \";\n\t$t_from_string = \" FROM \" . implode( ', ', $p_query_clauses['from'] );\n\t$t_join_string = (( count( $p_query_clauses['join'] ) > 0 ) ? implode( ' ', $p_query_clauses['join'] ) : '' );\n\t$t_where_string = (( count( $p_query_clauses['where'] ) > 0 ) ? 'WHERE ' . implode( ' AND ', $p_query_clauses['where'] ) : '' );\n\t$t_result = db_query_bound( \"$t_select_string $t_from_string $t_join_string $t_where_string\", $p_query_clauses['where_values'] );\n\treturn db_result( $t_result );\n}\n\n/**\n * @todo Had to make all these parameters required because we can't use\n *  call-time pass by reference anymore.  I really preferred not having\n *  to pass all the params in if you didn't want to, but I wanted to get\n *  rid of the errors for now.  If we can think of a better way later\n *  (maybe return an object) that would be great.\n *\n * @param int $p_page_number the page you want to see (set to the actual page on return)\n * @param int $p_per_page the number of bugs to see per page (set to actual on return)\n *      -1   indicates you want to see all bugs\n *      null indicates you want to use the value specified in the filter\n * @param int $p_page_count you don't need to give a value here, the number of pages will be stored here on return\n * @param int $p_bug_count you don't need to give a value here, the number of bugs will be stored here on return\n * @param mixed $p_custom_filter Filter to use.\n * @param int $p_project_id project id to use in filtering.\n * @param int $p_user_id user id to use as current user when filtering.\n * @param bool $p_show_sticky get sticky issues only.\n */\nfunction filter_get_bug_rows( &$p_page_number, &$p_per_page, &$p_page_count, &$p_bug_count, $p_custom_filter = null, $p_project_id = null, $p_user_id = null, $p_show_sticky = null ) {\n\tlog_event( LOG_FILTERING, 'START NEW FILTER QUERY' );\n\n\t$t_bug_table = db_get_table( 'mantis_bug_table' );\n\t$t_bug_text_table = db_get_table( 'mantis_bug_text_table' );\n\t$t_bugnote_table = db_get_table( 'mantis_bugnote_table' );\n\t$t_category_table = db_get_table( 'mantis_category_table' );\n\t$t_custom_field_string_table = db_get_table( 'mantis_custom_field_string_table' );\n\t$t_bugnote_text_table = db_get_table( 'mantis_bugnote_text_table' );\n\t$t_project_table = db_get_table( 'mantis_project_table' );\n\t$t_bug_monitor_table = db_get_table( 'mantis_bug_monitor_table' );\n\t$t_limit_reporters = config_get( 'limit_reporters' );\n\t$t_bug_relationship_table = db_get_table( 'mantis_bug_relationship_table' );\n\t$t_report_bug_threshold = config_get( 'report_bug_threshold' );\n\t$t_where_param_count = 0;\n\n\t$t_current_user_id = auth_get_current_user_id();\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = $t_current_user_id;\n\t} else {\n\t\t$t_user_id = $p_user_id;\n\t}\n\n\t$c_user_id = db_prepare_int( $t_user_id );\n\n\tif( null === $p_project_id ) {\n\n\t\t# @@@ If project_id is not specified, then use the project id(s) in the filter if set, otherwise, use current project.\n\t\t$t_project_id = helper_get_current_project();\n\t} else {\n\t\t$t_project_id = $p_project_id;\n\t}\n\n\tif( $p_custom_filter === null ) {\n\n\t\t# Prefer current_user_get_bug_filter() over user_get_filter() when applicable since it supports\n\t\t# cookies set by previous version of the code.\n\t\tif( $t_user_id == $t_current_user_id ) {\n\t\t\t$t_filter = current_user_get_bug_filter();\n\t\t} else {\n\t\t\t$t_filter = user_get_bug_filter( $t_user_id, $t_project_id );\n\t\t}\n\t} else {\n\t\t$t_filter = $p_custom_filter;\n\t}\n\n\t$t_filter = filter_ensure_valid_filter( $t_filter );\n\n\tif( false === $t_filter ) {\n\t\treturn false;\n\n\t\t# signify a need to create a cookie\n\t\t# @@@ error instead?\n\t}\n\n\t$t_view_type = $t_filter['_view_type'];\n\t$t_where_clauses = array(\n\t\t\"$t_project_table.enabled = \" . db_param(),\n\t\t\"$t_project_table.id = $t_bug_table.project_id\",\n\t);\n\t$t_where_params = array(\n\t\t1,\n\t);\n\t$t_select_clauses = array(\n\t\t\"$t_bug_table.*\",\n\t);\n\n\t$t_join_clauses = array();\n\t$t_from_clauses = array();\n\n\t// normalize the project filtering into an array $t_project_ids\n\tif( 'simple' == $t_view_type ) {\n\t\tlog_event( LOG_FILTERING, 'Simple Filter' );\n\t\t$t_project_ids = array(\n\t\t\t$t_project_id,\n\t\t);\n\t\t$t_include_sub_projects = true;\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'Advanced Filter' );\n\t\tif( !is_array( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t\t$t_project_ids = array(\n\t\t\t\tdb_prepare_int( $t_filter[FILTER_PROPERTY_PROJECT_ID] ),\n\t\t\t);\n\t\t} else {\n\t\t\t$t_project_ids = array_map( 'db_prepare_int', $t_filter[FILTER_PROPERTY_PROJECT_ID] );\n\t\t}\n\n\t\t$t_include_sub_projects = (( count( $t_project_ids ) == 1 ) && ( ( $t_project_ids[0] == META_FILTER_CURRENT ) || ( $t_project_ids[0] == ALL_PROJECTS ) ) );\n\t}\n\n\tlog_event( LOG_FILTERING, 'project_ids = @P' . implode( ', @P', $t_project_ids ) );\n\tlog_event( LOG_FILTERING, 'include sub-projects = ' . ( $t_include_sub_projects ? '1' : '0' ) );\n\n\t// if the array has ALL_PROJECTS, then reset the array to only contain ALL_PROJECTS.\n\t// replace META_FILTER_CURRENT with the actualy current project id.\n\t$t_all_projects_found = false;\n\t$t_new_project_ids = array();\n\tforeach( $t_project_ids as $t_pid ) {\n\t\tif( $t_pid == META_FILTER_CURRENT ) {\n\t\t\t$t_pid = $t_project_id;\n\t\t}\n\n\t\tif( $t_pid == ALL_PROJECTS ) {\n\t\t\t$t_all_projects_found = true;\n\t\t\tlog_event( LOG_FILTERING, 'all projects selected' );\n\t\t\tbreak;\n\t\t}\n\n\t\t// filter out inaccessible projects.\n\t\tif( !access_has_project_level( VIEWER, $t_pid, $t_user_id ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$t_new_project_ids[] = $t_pid;\n\t}\n\n\t$t_projects_query_required = true;\n\tif( $t_all_projects_found ) {\n\t\tif( user_is_administrator( $t_user_id ) ) {\n\t\t\tlog_event( LOG_FILTERING, 'all projects + administrator, hence no project filter.' );\n\t\t\t$t_projects_query_required = false;\n\t\t} else {\n\t\t\t$t_project_ids = user_get_accessible_projects( $t_user_id );\n\t\t}\n\t} else {\n\t\t$t_project_ids = $t_new_project_ids;\n\t}\n\n\tif( $t_projects_query_required ) {\n\n\t\t// expand project ids to include sub-projects\n\t\tif( $t_include_sub_projects ) {\n\t\t\t$t_top_project_ids = $t_project_ids;\n\n\t\t\tforeach( $t_top_project_ids as $t_pid ) {\n\t\t\t\tlog_event( LOG_FILTERING, 'Getting sub-projects for project id @P' . $t_pid );\n\t\t\t\t$t_subproject_ids = user_get_all_accessible_subprojects( $t_user_id, $t_pid );\n\t\t\t\tif (!$t_subproject_ids) continue;\n\t\t\t\t$t_project_ids = array_merge( $t_project_ids, $t_subproject_ids );\n\t\t\t}\n\n\t\t\t$t_project_ids = array_unique( $t_project_ids );\n\t\t}\n\n\t\t// if no projects are accessible, then return an empty array.\n\t\tif( count( $t_project_ids ) == 0 ) {\n\t\t\tlog_event( LOG_FILTERING, 'no accessible projects' );\n\t\t\treturn array();\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project_ids after including sub-projects = @P' . implode( ', @P', $t_project_ids ) );\n\n\t\t// this array is to be populated with project ids for which we only want to show public issues.  This is due to the limited\n\t\t// access of the current user.\n\t\t$t_public_only_project_ids = array();\n\n\t\t// this array is populated with project ids that the current user has full access to.\n\t\t$t_private_and_public_project_ids = array();\n\n\t\t$t_access_required_to_view_private_bugs = config_get( 'private_bug_threshold' );\n\t\tforeach( $t_project_ids as $t_pid ) {\n\t\t\tif( access_has_project_level( $t_access_required_to_view_private_bugs, $t_pid, $t_user_id ) ) {\n\t\t\t\t$t_private_and_public_project_ids[] = $t_pid;\n\t\t\t} else {\n\t\t\t\t$t_public_only_project_ids[] = $t_pid;\n\t\t\t}\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project_ids (with public/private access) = @P' . implode( ', @P', $t_private_and_public_project_ids ) );\n\t\tlog_event( LOG_FILTERING, 'project_ids (with public access) = @P' . implode( ', @P', $t_public_only_project_ids ) );\n\n\t\t$t_count_private_and_public_project_ids = count( $t_private_and_public_project_ids );\n\t\tif( $t_count_private_and_public_project_ids == 1 ) {\n\t\t\t$t_private_and_public_query = \"( $t_bug_table.project_id = \" . $t_private_and_public_project_ids[0] . \" )\";\n\t\t}\n\t\telse if( $t_count_private_and_public_project_ids > 1 ) {\n\t\t\t$t_private_and_public_query = \"( $t_bug_table.project_id in (\" . implode( ', ', $t_private_and_public_project_ids ) . \") )\";\n\t\t} else {\n\t\t\t$t_private_and_public_query = null;\n\t\t}\n\n\t\t$t_count_public_only_project_ids = count( $t_public_only_project_ids );\n\t\t$t_public_view_state_check = \"( ( $t_bug_table.view_state = \" . VS_PUBLIC . \" ) OR ( $t_bug_table.reporter_id = $t_user_id ) )\";\n\t\tif( $t_count_public_only_project_ids == 1 ) {\n\t\t\t$t_public_only_query = \"( ( $t_bug_table.project_id = \" . $t_public_only_project_ids[0] . \" ) AND $t_public_view_state_check )\";\n\t\t}\n\t\telse if( $t_count_public_only_project_ids > 1 ) {\n\t\t\t$t_public_only_query = \"( ( $t_bug_table.project_id in (\" . implode( ', ', $t_public_only_project_ids ) . \") ) AND $t_public_view_state_check )\";\n\t\t} else {\n\t\t\t$t_public_only_query = null;\n\t\t}\n\n\t\t// both queries can't be null, so we either have one of them or both.\n\n\t\tif( $t_private_and_public_query === null ) {\n\t\t\t$t_project_query = $t_public_only_query;\n\t\t} else if( $t_public_only_query === null ) {\n\t\t\t$t_project_query = $t_private_and_public_query;\n\t\t} else {\n\t\t\t$t_project_query = \"( $t_public_only_query OR $t_private_and_public_query )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'project query = ' . $t_project_query );\n\t\tarray_push( $t_where_clauses, $t_project_query );\n\t}\n\n\t# view state\n\t$t_view_state = db_prepare_int( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] );\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) ) {\n\t\t$t_view_state_query = \"($t_bug_table.view_state=\" . db_param() . ')';\n\t\tlog_event( LOG_FILTERING, 'view_state query = ' . $t_view_state_query );\n\t\t$t_where_params[] = $t_view_state;\n\t\tarray_push( $t_where_clauses, $t_view_state_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no view_state query' );\n\t}\n\n\t# reporter\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_REPORTER_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_REPORTER_ID] as $t_filter_member ) {\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, \"0\" );\n\t\t\t} else {\n\t\t\t\t$c_reporter_id = db_prepare_int( $t_filter_member );\n\t\t\t\tif( filter_field_is_myself( $c_reporter_id ) ) {\n\t\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t\t} else {\n\t\t\t\t\tarray_push( $t_clauses, $c_reporter_id );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_reporter_query = \"( $t_bug_table.reporter_id in (\" . implode( ', ', $t_clauses ) . \") )\";\n\t\t} else {\n\t\t\t$t_reporter_query = \"( $t_bug_table.reporter_id=$t_clauses[0] )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'reporter query = ' . $t_reporter_query );\n\t\tarray_push( $t_where_clauses, $t_reporter_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no reporter query' );\n\t}\n\n\t# limit reporter\n\t# @@@ thraxisp - access_has_project_level checks greater than or equal to,\n\t#   this assumed that there aren't any holes above REPORTER where the limit would apply\n\t#\n\tif(( ON === $t_limit_reporters ) && ( !access_has_project_level( REPORTER + 1, $t_project_id, $t_user_id ) ) ) {\n\t\t$c_reporter_id = $c_user_id;\n\t\t$t_where_params[] = $c_reporter_id;\n\t\tarray_push( $t_where_clauses, \"($t_bug_table.reporter_id=\" . db_param() . ')' );\n\t}\n\n\t# handler\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_HANDLER_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_HANDLER_ID] as $t_filter_member ) {\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, 0 );\n\t\t\t} else {\n\t\t\t\t$c_handler_id = db_prepare_int( $t_filter_member );\n\t\t\t\tif( filter_field_is_myself( $c_handler_id ) ) {\n\t\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t\t} else {\n\t\t\t\t\tarray_push( $t_clauses, $c_handler_id );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_handler_query = \"( $t_bug_table.handler_id in (\" . implode( ', ', $t_clauses ) . \") )\";\n\t\t} else {\n\t\t\t$t_handler_query = \"( $t_bug_table.handler_id=$t_clauses[0] )\";\n\t\t}\n\n\t\tlog_event( LOG_FILTERING, 'handler query = ' . $t_handler_query );\n\t\tarray_push( $t_where_clauses, $t_handler_query );\n\t} else {\n\t\tlog_event( LOG_FILTERING, 'no handler query' );\n\t}\n\n\t# category\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_CATEGORY] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_CATEGORY] as $t_filter_member ) {\n\t\t\tif( !filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, $t_filter_member );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.category_id in ( SELECT id FROM $t_category_table WHERE name in (\" . implode( ', ', $t_where_tmp ) . \") ) )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.category_id in ( SELECT id FROM $t_category_table WHERE name=\" . db_param() . \") )\" );\n\t\t}\n\t}\n\n\t# severity\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_SEVERITY_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_SEVERITY_ID] as $t_filter_member ) {\n\t\t\t$c_show_severity = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_severity );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.severity in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.severity=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# show / hide status\n\t# take a list of all available statuses then remove the ones that we want hidden, then make sure\n\t# the ones we want shown are still available\n\t$t_desired_statuses = array();\n\t$t_available_statuses = MantisEnum::getValues( config_get( 'status_enum_string' ) );\n\n\tif( 'simple' == $t_filter['_view_type'] ) {\n\n\t\t# simple filtering: if showing any, restrict by the hide status value, otherwise ignore the hide\n\t\t$t_any_found = false;\n\t\t$t_this_status = $t_filter[FILTER_PROPERTY_STATUS_ID][0];\n\t\t$t_this_hide_status = $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID][0];\n\n\t\tif( filter_field_is_any( $t_this_status ) ) {\n\t\t\tforeach( $t_available_statuses as $t_this_available_status ) {\n\t\t\t\tif( $t_this_hide_status > $t_this_available_status ) {\n\t\t\t\t\t$t_desired_statuses[] = $t_this_available_status;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$t_desired_statuses[] = $t_this_status;\n\t\t}\n\t} else {\n\t\t# advanced filtering: ignore the hide\n\t\tif( filter_field_is_any( $t_filter[FILTER_PROPERTY_STATUS_ID] ) ) {\n\t\t\t$t_desired_statuses = array();\n\t\t} else {\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_STATUS_ID] as $t_this_status ) {\n\t\t\t\t$t_desired_statuses[] = $t_this_status;\n\t\t\t}\n\t\t}\n\t}\n\n\tif( count( $t_desired_statuses ) > 0 ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_desired_statuses as $t_filter_member ) {\n\t\t\t$c_show_status = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_status );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.status in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.status=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# resolution\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] as $t_filter_member ) {\n\t\t\t$c_show_resolution = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_resolution );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.resolution in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.resolution=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# priority\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRIORITY_ID] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRIORITY_ID] as $t_filter_member ) {\n\t\t\t$c_show_priority = db_prepare_int( $t_filter_member );\n\t\t\tarray_push( $t_clauses, $c_show_priority );\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.priority in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.priority=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# product build\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_show_build = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_show_build );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.build in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.build=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# product version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_show_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_show_version );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# profile\n\tif( !filter_field_is_any( $t_filter['show_profile'] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter['show_profile'] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, \"0\" );\n\t\t\t} else {\n\t\t\t\t$c_show_profile = db_prepare_int( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, \"$c_show_profile\" );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.profile_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.profile_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# platform\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_PLATFORM] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_PLATFORM] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_platform = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_platform );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.platform in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.platform = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# os\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_OS] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_OS] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_os = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_os );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# os_build\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_OS_BUILD] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_OS_BUILD] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_os_build = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_os_build );\n\t\t\t}\n\t\t}\n\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os_build in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.os_build = \" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# date filter\n\tif(( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_MONTH] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_DAY] ) && is_numeric( $t_filter[FILTER_PROPERTY_START_YEAR] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_MONTH] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_DAY] ) && is_numeric( $t_filter[FILTER_PROPERTY_END_YEAR] ) ) {\n\n\t\t$t_start_string = $t_filter[FILTER_PROPERTY_START_YEAR] . \"-\" . $t_filter[FILTER_PROPERTY_START_MONTH] . \"-\" . $t_filter[FILTER_PROPERTY_START_DAY] . \" 00:00:00\";\n\t\t$t_end_string = $t_filter[FILTER_PROPERTY_END_YEAR] . \"-\" . $t_filter[FILTER_PROPERTY_END_MONTH] . \"-\" . $t_filter[FILTER_PROPERTY_END_DAY] . \" 23:59:59\";\n\n\t\t$t_where_params[] = strtotime( $t_start_string );\n\t\t$t_where_params[] = strtotime( $t_end_string );\n\t\tarray_push( $t_where_clauses, \"($t_bug_table.date_submitted BETWEEN \" . db_param() . \" AND \" . db_param() . \" )\" );\n\t}\n\n\t# fixed in version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_fixed_in_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_fixed_in_version );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.fixed_in_version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.fixed_in_version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# target version\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_TARGET_VERSION] ) ) {\n\t\t$t_clauses = array();\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_TARGET_VERSION] as $t_filter_member ) {\n\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\t\t\t\tarray_push( $t_clauses, '' );\n\t\t\t} else {\n\t\t\t\t$c_target_version = db_prepare_string( $t_filter_member );\n\t\t\t\tarray_push( $t_clauses, $c_target_version );\n\t\t\t}\n\t\t}\n\n\t\t# echo var_dump( $t_clauses ); exit;\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.target_version in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bug_table.target_version=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# users monitoring a bug\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) ) {\n\t\t$t_clauses = array();\n\t\t$t_table_name = 'user_monitor';\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_monitor_table $t_table_name ON $t_table_name.bug_id = $t_bug_table.id\" );\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] as $t_filter_member ) {\n\t\t\t$c_user_monitor = db_prepare_int( $t_filter_member );\n\t\t\tif( filter_field_is_myself( $c_user_monitor ) ) {\n\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t} else {\n\t\t\t\tarray_push( $t_clauses, $c_user_monitor );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_table_name.user_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_table_name.user_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# bug relationship\n\t$t_any_found = false;\n\t$c_rel_type = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\t$c_rel_bug = $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG];\n\tif( -1 == $c_rel_type || 0 == $c_rel_bug ) {\n\t\t$t_any_found = true;\n\t}\n\tif( !$t_any_found ) {\n\t\t# use the complementary type\n\t\t$t_comp_type = relationship_get_complementary_type( $c_rel_type );\n\t\t$t_clauses = array();\n\t\t$t_table_name = 'relationship';\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_relationship_table $t_table_name ON $t_table_name.destination_bug_id = $t_bug_table.id\" );\n\t\tarray_push( $t_join_clauses, \"LEFT JOIN $t_bug_relationship_table ${t_table_name}2 ON ${t_table_name}2.source_bug_id = $t_bug_table.id\" );\n\n\t\t// get reverse relationships\n\t\t$t_where_params[] = $t_comp_type;\n\t\t$t_where_params[] = $c_rel_bug;\n\t\t$t_where_params[] = $c_rel_type;\n\t\t$t_where_params[] = $c_rel_bug;\n\t\tarray_push( $t_clauses, \"($t_table_name.relationship_type=\" . db_param() . \" AND $t_table_name.source_bug_id=\" . db_param() . ')' );\n\t\tarray_push( $t_clauses, \"($t_table_name\" . \"2.relationship_type=\" . db_param() . \" AND $t_table_name\" . \"2.destination_bug_id=\" . db_param() . ')' );\n\t\tarray_push( $t_where_clauses, '(' . implode( ' OR ', $t_clauses ) . ')' );\n\t}\n\n\t# tags\n\t$c_tag_string = trim( $t_filter[FILTER_PROPERTY_TAG_STRING] );\n\t$c_tag_select = trim( $t_filter[FILTER_PROPERTY_TAG_SELECT] );\n\tif( is_blank( $c_tag_string ) && !is_blank( $c_tag_select ) && $c_tag_select != 0 ) {\n\t\t$t_tag = tag_get( $c_tag_select );\n\t\t$c_tag_string = $t_tag['name'];\n\t}\n\n\tif( !is_blank( $c_tag_string ) ) {\n\t\t$t_tags = tag_parse_filters( $c_tag_string );\n\n\t\tif( count( $t_tags ) ) {\n\n\t\t\t$t_tags_all = array();\n\t\t\t$t_tags_any = array();\n\t\t\t$t_tags_none = array();\n\n\t\t\tforeach( $t_tags as $t_tag_row ) {\n\t\t\t\tswitch( $t_tag_row['filter'] ) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$t_tags_all[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$t_tags_any[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\t$t_tags_none[] = $t_tag_row;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( 0 < $t_filter[FILTER_PROPERTY_TAG_SELECT] && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t\t\t$t_tags_any[] = tag_get( $t_filter[FILTER_PROPERTY_TAG_SELECT] );\n\t\t\t}\n\n\t\t\t$t_bug_tag_table = db_get_table( 'mantis_bug_tag_table' );\n\n\t\t\tif( count( $t_tags_all ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_all as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_table.id IN ( SELECT bug_id FROM $t_bug_tag_table WHERE $t_bug_tag_table.tag_id = $t_tag_row[id] )\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, '(' . implode( ' AND ', $t_clauses ) . ')' );\n\t\t\t}\n\n\t\t\tif( count( $t_tags_any ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_any as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_tag_table.tag_id = $t_tag_row[id]\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, \"$t_bug_table.id IN ( SELECT bug_id FROM $t_bug_tag_table WHERE ( \" . implode( ' OR ', $t_clauses ) . ') )' );\n\t\t\t}\n\n\t\t\tif( count( $t_tags_none ) ) {\n\t\t\t\t$t_clauses = array();\n\t\t\t\tforeach( $t_tags_none as $t_tag_row ) {\n\t\t\t\t\tarray_push( $t_clauses, \"$t_bug_tag_table.tag_id = $t_tag_row[id]\" );\n\t\t\t\t}\n\t\t\t\tarray_push( $t_where_clauses, \"$t_bug_table.id NOT IN ( SELECT bug_id FROM $t_bug_tag_table WHERE ( \" . implode( ' OR ', $t_clauses ) . ') )' );\n\t\t\t}\n\t\t}\n\t}\n\n\t# note user id\n\tif( !filter_field_is_any( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] ) ) {\n\t\t$t_bugnote_table_alias = 'mbnt';\n\t\t$t_clauses = array();\n\t\tarray_push( $t_from_clauses, \"$t_bugnote_table  $t_bugnote_table_alias\" );\n\t\tarray_push( $t_where_clauses, \"( $t_bug_table.id = $t_bugnote_table_alias.bug_id )\" );\n\n\t\tforeach( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] as $t_filter_member ) {\n\t\t\t$c_note_user_id = db_prepare_int( $t_filter_member );\n\t\t\tif( filter_field_is_myself( $c_note_user_id ) ) {\n\t\t\t\tarray_push( $t_clauses, $c_user_id );\n\t\t\t} else {\n\t\t\t\tarray_push( $t_clauses, $c_note_user_id );\n\t\t\t}\n\t\t}\n\t\tif( 1 < count( $t_clauses ) ) {\n\t\t\t$t_where_tmp = array();\n\t\t\tforeach( $t_clauses as $t_clause ) {\n\t\t\t\t$t_where_tmp[] = db_param();\n\t\t\t\t$t_where_params[] = $t_clause;\n\t\t\t}\n\t\t\tarray_push( $t_where_clauses, \"( $t_bugnote_table_alias.reporter_id in (\" . implode( ', ', $t_where_tmp ) . \") )\" );\n\t\t} else {\n\t\t\t$t_where_params[] = $t_clauses[0];\n\t\t\tarray_push( $t_where_clauses, \"( $t_bugnote_table_alias.reporter_id=\" . db_param() . \" )\" );\n\t\t}\n\t}\n\n\t# plugin filters\n\t$t_plugin_filters = filter_get_plugin_filters();\n\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\tif ( !filter_field_is_any( $t_filter[ $t_field_name ] ) || $t_filter_object->type == FILTER_TYPE_BOOLEAN ) {\n\t\t\t$t_filter_query = $t_filter_object->query( $t_filter[ $t_field_name ] );\n\t\t\tif ( is_array( $t_filter_query ) ) {\n\t\t\t\tif ( isset( $t_filter_query['join'] ) ) {\n\t\t\t\t\tarray_push( $t_join_clauses, $t_filter_query['join'] );\n\t\t\t\t}\n\t\t\t\tif ( isset( $t_filter_query['where'] ) ) {\n\t\t\t\t\tarray_push( $t_where_clauses, $t_filter_query['where'] );\n\t\t\t\t}\n\t\t\t\tif ( isset( $t_filter_query['params'] ) && is_array( $t_filter_query['params'] ) ) {\n\t\t\t\t\t$t_where_params = array_merge( $t_where_params, $t_filter_query['params'] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t# custom field filters\n\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\n\t\t# custom field filtering\n\t\t# @@@ At the moment this gets the linked fields relating to the current project\n\t\t#     It should get the ones relating to the project in the filter or all projects\n\t\t#     if multiple projects.\n\t\t$t_custom_fields = custom_field_get_linked_ids( $t_project_id );\n\n\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\t$t_field_info = custom_field_cache_row( $t_cfid, true );\n\t\t\tif( !$t_field_info['filter_by'] ) {\n\t\t\t\tcontinue;\n\n\t\t\t\t# skip this custom field it shouldn't be filterable\n\t\t\t}\n\n\t\t\t$t_custom_where_clause = '';\n\n\t\t\t# Ignore all custom filters that are not set, or that are set to '' or \"any\"\n\t\t\tif( !filter_field_is_any( $t_filter['custom_fields'][$t_cfid] ) ) {\n\t\t\t\t$t_def = custom_field_get_definition( $t_cfid );\n\t\t\t\t$t_table_name = $t_custom_field_string_table . '_' . $t_cfid;\n\n\t\t\t\t# We need to filter each joined table or the result query will explode in dimensions\n\t\t\t\t# Each custom field will result in a exponential growth like Number_of_Issues^Number_of_Custom_Fields\n\t\t\t\t# and only after this process ends (if it is able to) the result query will be filtered\n\t\t\t\t# by the WHERE clause and by the DISTINCT clause\n\t\t\t\t$t_cf_join_clause = \"LEFT JOIN $t_custom_field_string_table $t_table_name ON $t_bug_table.id = $t_table_name.bug_id AND $t_table_name.field_id = $t_cfid\";\n\n\t\t\t\tif( $t_def['type'] == CUSTOM_FIELD_TYPE_DATE ) {\n\t\t\t\t\tswitch( $t_filter['custom_fields'][$t_cfid][0] ) {\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '(( ' . $t_table_name . '.bug_id is null) OR ( ' . $t_table_name . '.value = 0)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '(( ' . $t_table_name . '.value != 0 AND (' . $t_table_name . '.value+0) < ' . ( $t_filter['custom_fields'][$t_cfid][2] ) . ')';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '( (' . $t_table_name . '.value+0) > ' . ( $t_filter['custom_fields'][$t_cfid][1] + 1 );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\t\t\t\t\t\t\t$t_custom_where_clause = '( (' . $t_table_name . '.value+0) BETWEEN ' . $t_filter['custom_fields'][$t_cfid][1] . ' AND ' . $t_filter['custom_fields'][$t_cfid][2];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tarray_push( $t_join_clauses, $t_cf_join_clause );\n\n\t\t\t\t\t$t_filter_array = array();\n\t\t\t\t\tforeach( $t_filter['custom_fields'][$t_cfid] as $t_filter_member ) {\n\t\t\t\t\t\t$t_filter_member = stripslashes( $t_filter_member );\n\t\t\t\t\t\tif( filter_field_is_none( $t_filter_member ) ) {\n\n\t\t\t\t\t\t\t# coerce filter value if selecting META_FILTER_NONE so it will match empty fields\n\t\t\t\t\t\t\t$t_filter_member = '';\n\n\t\t\t\t\t\t\t# but also add those _not_ present in the custom field string table\n\t\t\t\t\t\t\tarray_push( $t_filter_array, \"$t_bug_table.id NOT IN (SELECT bug_id FROM $t_custom_field_string_table WHERE field_id=$t_cfid)\" );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch( $t_def['type'] ) {\n\t\t\t\t\t\t\tcase CUSTOM_FIELD_TYPE_CHECKBOX:\n\t\t\t\t\t\t\tcase CUSTOM_FIELD_TYPE_MULTILIST:\n\t\t\t\t\t\t\t\tif( $t_filter_member != '' ) {\n\t\t\t\t\t\t\t\t\t$t_filter_member = '%|' . $t_filter_member . '|%';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$t_where_params[] = $t_filter_member;\n\t\t\t\t\t\t\t\tarray_push( $t_filter_array, db_helper_like( \"$t_table_name.value\" ) );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$t_where_params[] = $t_filter_member;\n\t\t\t\t\t\t\t\tarray_push( $t_filter_array, \"$t_table_name.value = \" . db_param() );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$t_custom_where_clause .= '(' . implode( ' OR ', $t_filter_array );\n\t\t\t\t}\n\t\t\t\tif( !is_blank( $t_custom_where_clause ) ) {\n\t\t\t\t\tarray_push( $t_where_clauses, $t_custom_where_clause . ')' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t# Text search\n\tif( !is_blank( $t_filter[FILTER_PROPERTY_FREE_TEXT] ) ) {\n\n\t\t# break up search terms by spacing or quoting\n\t\tpreg_match_all( \"/-?([^'\\\"\\s]+|\\\"[^\\\"]+\\\"|'[^']+')/\", $t_filter[FILTER_PROPERTY_FREE_TEXT], $t_matches, PREG_SET_ORDER );\n\n\t\t# organize terms without quoting, paying attention to negation\n\t\t$t_search_terms = array();\n\t\tforeach( $t_matches as $t_match ) {\n\t\t\t$t_search_terms[ trim( $t_match[1], \"\\'\\\"\" ) ] = ( $t_match[0][0] == '-' );\n\t\t}\n\n\t\t# build a big where-clause and param list for all search terms, including negations\n\t\t$t_first = true;\n\t\t$t_textsearch_where_clause = \"( \";\n\t\tforeach( $t_search_terms as $t_search_term => $t_negate ) {\n\t\t\tif ( !$t_first ) {\n\t\t\t\t$t_textsearch_where_clause .= ' AND ';\n\t\t\t}\n\n\t\t\tif ( $t_negate ) {\n\t\t\t\t$t_textsearch_where_clause .= 'NOT ';\n\t\t\t}\n\n\t\t\t$c_search = '%' . $t_search_term . '%';\n\t\t\t$t_textsearch_where_clause .= '( ' . db_helper_like( 'summary' ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.description\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.steps_to_reproduce\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bug_text_table.additional_information\" ) .\n\t\t\t\t' OR ' . db_helper_like( \"$t_bugnote_text_table.note\" );\n\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\t\t\t$t_where_params[] = $c_search;\n\n\t\t\tif( is_numeric( $t_search_term ) ) {\n\t\t\t\t$c_search_int = (int) $t_search_term;\n\t\t\t\t$t_textsearch_where_clause .= \" OR $t_bug_table.id = \" . db_param();\n\t\t\t\t$t_textsearch_where_clause .= \" OR $t_bugnote_table.id = \" . db_param();\n\t\t\t\t$t_where_params[] = $c_search_int;\n\t\t\t\t$t_where_params[] = $c_search_int;\n\t\t\t}\n\n\t\t\t$t_textsearch_where_clause .= ' )';\n\t\t\t$t_first = false;\n\t\t}\n\t\t$t_textsearch_where_clause .= ' )';\n\n\t\t# add text query elements to arrays\n\t\tif ( !$t_first ) {\n\t\t\t$t_from_clauses[] = \"$t_bug_text_table\";\n\t\t\t$t_where_clauses[] = \"$t_bug_table.bug_text_id = $t_bug_text_table.id\";\n\t\t\t$t_where_clauses[] = $t_textsearch_where_clause;\n\t\t\t$t_join_clauses[] = \" LEFT JOIN $t_bugnote_table ON $t_bug_table.id = $t_bugnote_table.bug_id\";\n\t\t\t$t_join_clauses[] = \" LEFT JOIN $t_bugnote_text_table ON $t_bugnote_table.bugnote_text_id = $t_bugnote_text_table.id\";\n\t\t}\n\t}\n\n\t# End text search\n\n\t$t_from_clauses[] = $t_project_table;\n\t$t_from_clauses[] = $t_bug_table;\n\n\t$t_query_clauses['select'] = $t_select_clauses;\n\t$t_query_clauses['from'] = $t_from_clauses;\n\t$t_query_clauses['join'] = $t_join_clauses;\n\t$t_query_clauses['where'] = $t_where_clauses;\n\t$t_query_clauses['where_values'] = $t_where_params;\n\t$t_query_clauses = filter_get_query_sort_data( $t_filter, $p_show_sticky, $t_query_clauses );\n\n\t# assigning to $p_* for this function writes the values back in case the caller wants to know\n\t# Get the total number of bugs that meet the criteria.\n\t$p_bug_count = filter_get_bug_count( $t_query_clauses );\n\tif( 0 == $p_bug_count ) {\n\t\treturn array();\n\t}\n\t$p_per_page = filter_per_page( $t_filter, $p_bug_count, $p_per_page );\n\t$p_page_count = filter_page_count( $p_bug_count, $p_per_page );\n\t$p_page_number = filter_valid_page_number( $p_page_number, $p_page_count );\n\t$t_offset = filter_offset( $p_page_number, $p_per_page );\n\t$t_query_clauses = filter_unique_query_clauses( $t_query_clauses );\n\t$t_select_string = \"SELECT DISTINCT \" . implode( ', ', $t_query_clauses['select'] );\n\t$t_from_string = \" FROM \" . implode( ', ', $t_query_clauses['from'] );\n\t$t_order_string = \" ORDER BY \" . implode( ', ', $t_query_clauses['order'] );\n\t$t_join_string = count( $t_query_clauses['join'] ) > 0 ? implode( ' ', $t_query_clauses['join'] ) : '';\n\t$t_where_string = count( $t_query_clauses['where'] ) > 0 ? 'WHERE ' . implode( ' AND ', $t_query_clauses['where'] ) : '';\n\t$t_result = db_query_bound( \"$t_select_string $t_from_string $t_join_string $t_where_string $t_order_string\", $t_query_clauses['where_values'], $p_per_page, $t_offset );\n\t$t_row_count = db_num_rows( $t_result );\n\n\t$t_id_array_lastmod = array();\n\tfor( $i = 0;$i < $t_row_count;$i++ ) {\n\t\t$t_row = db_fetch_array( $t_result );\n\t\t$t_id_array_lastmod[] = (int) $t_row['id'];\n\t\t$t_rows[] = $t_row;\n\t}\n\n\treturn filter_cache_result( $t_rows, $t_id_array_lastmod );\n}\n\n/**\n *  Cache the filter results with bugnote stats for later use\n * @param array $p_rows results of the filter query\n * @param array $p_id_array_lastmod array of bug ids\n * @return array\n */\nfunction filter_cache_result( $p_rows, $p_id_array_lastmod ) {\n\t$t_bugnote_table = db_get_table( 'mantis_bugnote_table' );\n\n\t$t_id_array_lastmod = array_unique( $p_id_array_lastmod );\n\t$t_where_string = \"WHERE $t_bugnote_table.bug_id in (\" . implode( \", \", $t_id_array_lastmod ) . ')';\n\t$t_query = \"SELECT DISTINCT bug_id,MAX(last_modified) as last_modified, COUNT(last_modified) as count FROM $t_bugnote_table $t_where_string GROUP BY bug_id\";\n\n\t# perform query\n\t$t_result = db_query_bound( $t_query );\n\t$t_row_count = db_num_rows( $t_result );\n\tfor( $i = 0;$i < $t_row_count;$i++ ) {\n\t\t$t_row = db_fetch_array( $t_result );\n\t\t$t_stats[$t_row['bug_id']] = $t_row;\n\t}\n\n\t$t_rows = array();\n\tforeach( $p_rows as $t_row ) {\n\t\tif( !isset( $t_stats[$t_row['id']] ) ) {\n\t\t\t$t_rows[] = bug_row_to_object( bug_cache_database_result( $t_row, false ) );\n\t\t} else {\n\t\t\t$t_rows[] = bug_row_to_object( bug_cache_database_result( $t_row, $t_stats[ $t_row['id'] ] ) );\n\t\t}\n\t}\n\treturn $t_rows;\n}\n\n/**\n *  Mainly based on filter_draw_selection_area2() but adds the support for the collapsible\n *  filter display.\n * @param int $p_page_number\n * @param bool $p_for_screen\n * @see filter_draw_selection_area2\n */\nfunction filter_draw_selection_area( $p_page_number, $p_for_screen = true ) {\n\tcollapse_open( 'filter' );\n\tfilter_draw_selection_area2( $p_page_number, $p_for_screen, true );\n\tcollapse_closed( 'filter' );\n\tfilter_draw_selection_area2( $p_page_number, $p_for_screen, false );\n\tcollapse_end( 'filter' );\n}\n\n/**\n *  Prints the filter selection area for both the bug list view screen and\n *  the bug list print screen. This function was an attempt to make it easier to\n *  add new filters and rearrange them on screen for both pages.\n * @param int $p_page_number\n * @param bool $p_for_screen\n * @param bool $p_expanded\n */\nfunction filter_draw_selection_area2( $p_page_number, $p_for_screen = true, $p_expanded = true ) {\n\t$t_form_name_suffix = $p_expanded ? '_open' : '_closed';\n\n\t$t_filter = current_user_get_bug_filter();\n\t$t_filter = filter_ensure_valid_filter( $t_filter );\n\t$t_project_id = helper_get_current_project();\n\t$t_page_number = (int) $p_page_number;\n\n\t$t_view_type = $t_filter['_view_type'];\n\n\t$t_tdclass = 'small-caption';\n\t$t_trclass = 'row-category2';\n\t$t_action = 'view_all_set.php?f=3';\n\n\tif( $p_for_screen == false ) {\n\t\t$t_tdclass = 'print';\n\t\t$t_trclass = '';\n\t\t$t_action = 'view_all_set.php';\n\t}\n\t?>\n\n\t\t<br />\n\t\t<form method=\"post\" name=\"filters<?php echo $t_form_name_suffix?>\" id=\"filters_form<?php echo $t_form_name_suffix?>\" action=\"<?php echo $t_action;?>\">\n\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t<input type=\"hidden\" name=\"type\" value=\"1\" />\n\t\t<?php\n\t\t\tif( $p_for_screen == false ) {\n\t\techo '<input type=\"hidden\" name=\"print\" value=\"1\" />';\n\t\techo '<input type=\"hidden\" name=\"offset\" value=\"0\" />';\n\t}\n\t?>\n\t\t<input type=\"hidden\" name=\"page_number\" value=\"<?php echo $t_page_number?>\" />\n\t\t<input type=\"hidden\" name=\"view_type\" value=\"<?php echo $t_view_type?>\" />\n\t\t<table class=\"width100\" cellspacing=\"1\">\n\n\t\t<?php\n\t\t$t_filter_cols = config_get( 'filter_custom_fields_per_row' );\n\tif( $p_expanded ) {\n\t\t$t_custom_cols = $t_filter_cols;\n\n\t\t$t_current_user_access_level = current_user_get_access_level();\n\t\t$t_accessible_custom_fields_ids = array();\n\t\t$t_accessible_custom_fields_names = array();\n\t\t$t_accessible_custom_fields_values = array();\n\t\t$t_num_custom_rows = 0;\n\t\t$t_per_row = 0;\n\n\t\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\t\t\t$t_custom_fields = custom_field_get_linked_ids( $t_project_id );\n\n\t\t\tforeach( $t_custom_fields as $t_cfid ) {\n\t\t\t\t$t_field_info = custom_field_cache_row( $t_cfid, true );\n\t\t\t\tif( $t_field_info['access_level_r'] <= $t_current_user_access_level && $t_field_info['filter_by'] ) {\n\t\t\t\t\t$t_accessible_custom_fields_ids[] = $t_cfid;\n\t\t\t\t\t$t_accessible_custom_fields_names[] = $t_field_info['name'];\n\t\t\t\t\t$t_accessible_custom_fields_types[] = $t_field_info['type'];\n\t\t\t\t\t$t_accessible_custom_fields_values[] = custom_field_distinct_values( $t_field_info );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( count( $t_accessible_custom_fields_ids ) > 0 ) {\n\t\t\t\t$t_per_row = config_get( 'filter_custom_fields_per_row' );\n\t\t\t\t$t_num_custom_rows = ceil( count( $t_accessible_custom_fields_ids ) / $t_per_row );\n\t\t\t}\n\t\t}\n\n\t\t$t_filters_url = 'view_filters_page.php?for_screen=' . $p_for_screen;\n\t\tif( 'advanced' == $t_view_type ) {\n\t\t\t$t_filters_url = $t_filters_url . '&amp;view_type=advanced';\n\t\t}\n\t\t$t_filters_url = $t_filters_url . '&amp;target_field=';\n\n\t\t$t_show_product_version =  version_should_show_product_version( $t_project_id );\n\t\t$t_show_build = $t_show_product_version && ( config_get( 'enable_product_build' ) == ON );\n\n\t\t# overload handler_id setting if user isn't supposed to see them (ref #6189)\n\t\tif( !access_has_project_level( config_get( 'view_handler_threshold' ), $t_project_id ) ) {\n\t\t\t$t_filter[FILTER_PROPERTY_HANDLER_ID] = array(\n\t\t\t\tMETA_FILTER_ANY,\n\t\t\t);\n\t\t}\n\t\t?>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_REPORTER_ID . '[]';?>\" id=\"reporter_id_filter\"><?php echo lang_get( 'reporter' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_MONITOR_USER_ID . '[]';?>\" id=\"user_monitor_filter\"><?php echo lang_get( 'monitored_by' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HANDLER_ID . '[]';?>\" id=\"handler_id_filter\"><?php echo lang_get( 'assigned_to' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_CATEGORY . '[]';?>\" id=\"show_category_filter\"><?php echo lang_get( 'category' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_SEVERITY_ID . '[]';?>\" id=\"show_severity_filter\"><?php echo lang_get( 'severity' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_RESOLUTION_ID . '[]';?>\" id=\"show_resolution_filter\"><?php echo lang_get( 'resolution' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . 'show_profile[]';?>\" id=\"show_profile_filter\"><?php echo lang_get( 'profile' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"reporter_id_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_REPORTER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_REPORTER_ID] as $t_current ) {\n\t\t\t\t$t_this_name = '';\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_REPORTER_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t}\n\t\t\t\telse if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"user_monitor_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_MONITOR_USER_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t}\n\t\t\t\telse if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'monitor_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"handler_id_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_HANDLER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_HANDLER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HANDLER_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else if( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo string_display( $t_output );\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\" id=\"show_category_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_CATEGORY] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_CATEGORY] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_CATEGORY, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_severity_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_SEVERITY_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_SEVERITY_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SEVERITY_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'severity', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_resolution_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_RESOLUTION_ID] as $t_current ) {\n\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"show_resolution[]\" value=\"<?php echo string_attribute( $t_current );?>\" />\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'resolution', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_profile_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter['show_profile'] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter['show_profile'] as $t_current ) {\n\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"show_profile[]\" value=\"<?php echo string_attribute( $t_current );?>\" />\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_profile = profile_get_row_direct( $t_current );\n\n\t\t\t\t\t$t_this_string = \"${t_profile['platform']} ${t_profile['os']} ${t_profile['os_build']}\";\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else { ?>\n\t\t\t\t<td></td>\n\t\t\t<?php }\n\t\t\t\t  if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t\t</tr>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_STATUS_ID . '[]';?>\" id=\"show_status_filter\"><?php echo lang_get( 'status' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( 'simple' == $t_view_type ) {?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HIDE_STATUS_ID . '[]';?>\" id=\"hide_status_filter\"><?php echo lang_get( 'hide_status' )?>:</a>\n\t\t\t\t<?php\n\t\t}?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t<?php if ( $t_show_build ) { ?>\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRODUCT_BUILD . '[]';?>\" id=\"show_build_filter\"><?php echo lang_get( 'product_build' )?>:</a>\n\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_show_product_version ) {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRODUCT_VERSION . '[]';?>\" id=\"show_version_filter\"><?php echo lang_get( 'product_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_FIXED_IN_VERSION . '[]';?>\" id=\"show_fixed_in_version_filter\"><?php echo lang_get( 'fixed_in_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_TARGET_VERSION . '[]';?>\" id=\"show_target_version_filter\"><?php echo lang_get( 'target_version' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php\n\t\t} else {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<?php\n\t\t}?>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PRIORITY_ID . '[]';?>\" id=\"show_priority_filter\"><?php echo lang_get( 'priority' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 7 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_status_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_STATUS_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_STATUS_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_STATUS_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'status', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"hide_status_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif( 'simple' == $t_view_type ) {\n\t\t\t$t_output = '';\n\t\t\t$t_none_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) == 0 ) {\n\t\t\t\techo lang_get( 'none' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] as $t_current ) {\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HIDE_STATUS_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_none_found = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = get_enum_element( 'status', $t_current );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t\t}\n\t\t\t\t$t_hide_status_post = '';\n\t\t\t\tif( count( $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] ) == 1 ) {\n\t\t\t\t\t$t_hide_status_post = ' (' . lang_get( 'and_above' ) . ')';\n\t\t\t\t}\n\t\t\t\tif( true == $t_none_found ) {\n\t\t\t\t\techo lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output . string_display_line( $t_hide_status_post );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if ( $t_show_build ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_build_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] as $t_current ) {\n\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRODUCT_BUILD, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\"></td>\n\t\t\t<?php }\n\t\t\t\tif( $t_show_product_version ) {\n\t\t\t?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\" id=\"show_version_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRODUCT_VERSION, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_fixed_in_version_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_FIXED_IN_VERSION, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_target_version_filter_target\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t$t_output = '';\n\t\t\t$t_any_found = false;\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_TARGET_VERSION] ) == 0 ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_TARGET_VERSION] as $t_current ) {\n\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_TARGET_VERSION, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t\t}\n\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\techo lang_get( 'any' );\n\t\t\t\t} else {\n\t\t\t\t\techo $t_output;\n\t\t\t\t}\n\t\t\t}\n\t\t\t?>\n\t\t\t\t</td>\n\t\t\t<?php\n\t\t} else {?>\n\t\t\t<td colspan=\"2\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&#160;\n\t\t\t</td>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\">\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<?php\n\t\t}?>\n\t\t\t<td colspan=\"1\" class=\"small-caption\" valign=\"top\" id=\"show_priority_filter_target\">\n              <?php\n\t\t\t\t\t\t\t  $t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_PRIORITY_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_PRIORITY_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PRIORITY_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_string = '';\n\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_string = get_enum_element( 'priority', $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n\t    \t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 7 ) . '\">&#160;</td>';\n\t\t}?>\n\n\t\t</tr>\n\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_ISSUES_PER_PAGE;?>\" id=\"per_page_filter\"><?php echo lang_get( 'show' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_VIEW_STATE_ID;?>\" id=\"view_state_filter\"><?php echo lang_get( 'view_status' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_SHOW_STICKY_ISSUES;?>\" id=\"sticky_issues_filter\"><?php echo lang_get( 'sticky' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_HIGHLIGHT_CHANGED;?>\" id=\"highlight_changed_filter\"><?php echo lang_get( 'changed' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" >\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_FILTER_BY_DATE;?>\" id=\"do_filter_by_date_filter\"><?php echo lang_get( 'use_date_filters' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_RELATIONSHIP_TYPE;?>\" id=\"relationship_type_filter\"><?php echo lang_get( 'bug_relationships' )?>:</a>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"per_page_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\techo( $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] == 0 ) ? lang_get( 'all' ) : string_display_line( $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] );\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_ISSUES_PER_PAGE, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE] ), '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"view_state_filter_target\">\n\t\t\t\t<?php\n\t\t\t\tif( VS_PUBLIC === $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) {\n\t\t\techo lang_get( 'public' );\n\t\t} else if( VS_PRIVATE === $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ) {\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo lang_get( 'any' );\n\t\t\t$t_filter[FILTER_PROPERTY_VIEW_STATE_ID] = META_FILTER_ANY;\n\t\t}\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_VIEW_STATE_ID, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID] ), '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"sticky_issues_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_sticky_filter_state = gpc_string_to_bool( $t_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] );\n\t\tprint( $t_sticky_filter_state ? lang_get( 'yes' ) : lang_get( 'no' ) );\n\t\t?>\n\t\t\t\t<input type=\"hidden\" name=\"sticky_issues\" value=\"<?php echo $t_sticky_filter_state ? 'on' : 'off';?>\" />\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\" id=\"highlight_changed_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\techo $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED];\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_HIGHLIGHT_CHANGED, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED] ), '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\"  id=\"do_filter_by_date_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif(( ON == config_get( 'dhtml_filters' ) ) && ( ON == config_get( 'use_javascript' ) ) ) {\n\t\t\t?>\n\t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t<!--\n\t\t\tfunction SwitchDateFields() {\n\t\t    \t// All fields need to be enabled to go back to the script\n\t\t\t\tdocument.filters_open.start_month.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.start_day.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.start_year.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_month.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_day.disabled = ! document.filters_open.do_filter_by_date.checked;\n\t\t\t\tdocument.filters_open.end_year.disabled = ! document.filters_open.do_filter_by_date.checked;\n\n\t\t   \t\treturn true;\n\t\t\t}\n\t\t// -->\n\t\t</script>\n\t\t\t\t\t\t\t<?php\n\t\t}\n\n\t\t# end if dhtml_filters\n\t\tif( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) {\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_FILTER_BY_DATE, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_MONTH, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_START_MONTH] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_DAY, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_START_DAY] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_START_YEAR, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_START_YEAR] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_MONTH, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_END_MONTH] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_DAY, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_END_DAY] ), '\" />';\n\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_END_YEAR, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_END_YEAR] ), '\" />';\n\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\t\t\t$t_time = mktime( 0, 0, 0, $t_filter[FILTER_PROPERTY_START_MONTH], $t_filter[FILTER_PROPERTY_START_DAY], $t_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t\tforeach( $t_chars as $t_char ) {\n\t\t\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'F', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'd', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'Y', $t_time );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo ' - ';\n\n\t\t\t$t_time = mktime( 0, 0, 0, $t_filter[FILTER_PROPERTY_END_MONTH], $t_filter[FILTER_PROPERTY_END_DAY], $t_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t\tforeach( $t_chars as $t_char ) {\n\t\t\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'F', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'd', $t_time );\n\t\t\t\t}\n\t\t\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\t\t\techo ' ';\n\t\t\t\t\techo date( 'Y', $t_time );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\techo lang_get( 'no' );\n\t\t}\n\t\t?>\n\t\t\t</td>\n\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\" id=\"relationship_type_filter_target\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_RELATIONSHIP_TYPE, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE]), '\" />';\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_RELATIONSHIP_BUG, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG] ), '\" />';\n\t\t$c_rel_type = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\t\t$c_rel_bug = $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG];\n\t\tif( -1 == $c_rel_type || 0 == $c_rel_bug ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\techo relationship_get_description_for_history( $c_rel_type ) . ' ' . $c_rel_bug;\n\t\t}\n\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr <?php echo \"class=\\\"\" . $t_trclass . \"\\\"\";?>>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PLATFORM;?>\" id=\"platform_filter\"><?php echo lang_get( 'platform' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_OS;?>\" id=\"os_filter\"><?php echo lang_get( 'os' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_OS_BUILD;?>\" id=\"os_build_filter\"><?php echo lang_get( 'os_version' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"5\">\n\t\t\t\t<?php if ( access_has_global_level( config_get( 'tag_view_threshold' ) ) ) { ?>\n\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_TAG_STRING;?>\" id=\"tag_string_filter\"><?php echo lang_get( 'tags' )?>:</a>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<?php if( $t_filter_cols > 8 ) {\n\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 8 ) . '\">&#160;</td>';\n\t\t}?>\n\t\t</tr>\n\t\t<tr class=\"row-1\">\n\t\t\t<?php if( ON == config_get( 'enable_profiles' ) ) { ?>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"platform_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_PLATFORM, $t_filter[FILTER_PROPERTY_PLATFORM] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"os_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_OS, $t_filter[FILTER_PROPERTY_OS] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"os_build_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\tprint_multivalue_field( FILTER_PROPERTY_OS_BUILD, $t_filter[FILTER_PROPERTY_OS_BUILD] );\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php } else {?>\n\t\t\t\t<td colspan=\"3\">&#160;</td>\n\t\t\t<?php } ?>\n\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"tag_string_filter_target\" colspan=\"5\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_tag_string = $t_filter[FILTER_PROPERTY_TAG_STRING];\n\t\tif( $t_filter[FILTER_PROPERTY_TAG_SELECT] != 0 && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t\t$t_tag_string .= ( is_blank( $t_tag_string ) ? '' : config_get( 'tag_separator' ) );\n\t\t\t$t_tag_string .= tag_get_field( $t_filter[FILTER_PROPERTY_TAG_SELECT], 'name' );\n\t\t}\n\t\techo string_html_entities( $t_tag_string );\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_TAG_STRING, '\" value=\"', string_attribute( $t_tag_string ), '\" />';\n\t\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\t# get plugin filters\n\t\t$t_plugin_filters = filter_get_plugin_filters();\n\t\t$t_column = 0;\n\t\t$t_fields = '';\n\t\t$t_values = '';\n\n\t\t# output a filter form element for each plugin filter\n\t\tforeach( $t_plugin_filters as $t_field_name => $t_filter_object ) {\n\t\t\t$t_fields .= '<td class=\"small-caption\" valign=\"top\"> <a href=\"' . $t_filters_url . string_attribute( $t_field_name ) .\n\t\t\t\t'\" id=\"' . string_attribute( $t_field_name ) . '_filter\">' . string_display_line( $t_filter_object->title ) . '</a> </td>';\n\n\t\t\t$t_values .= '<td class=\"small-caption\" valign=\"top\" id=\"' . string_attribute( $t_field_name ) . '_filter_target\"> ';\n\n\t\t\tif ( !isset( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\tswitch( $t_filter_object->type ) {\n\t\t\t\t\tcase FILTER_TYPE_STRING:\n\t\t\t\t\tcase FILTER_TYPE_INT:\n\t\t\t\t\t\tif ( filter_field_is_any( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_values .= string_display_line( $t_filter[ $t_field_name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '\" value=\"' . string_attribute( $t_filter[ $t_field_name ] ) . '\"/>';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\t\t\t\t$t_values .= string_display_line( $t_filter_object->display( (bool)$t_filter[ $t_field_name ] ) );\n\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '\" value=\"' . (bool)$t_filter[ $t_field_name ] . '\"/>';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\t\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\t\t\t\t$t_first = true;\n\t\t\t\t\t\t$t_output = '';\n\n\t\t\t\t\t\tif ( !is_array( $t_filter[ $t_field_name ] ) ) {\n\t\t\t\t\t\t\t$t_filter[ $t_field_name ] = array( $t_filter[ $t_field_name ] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tforeach( $t_filter[ $t_field_name ] as $t_current ) {\n\t\t\t\t\t\t\tif ( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t\t\t$t_output .= lang_get( 'any' );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$t_output .= ( $t_first ? '' : '<br />' ) . string_display_line( $t_filter_object->display( $t_current ) );\n\t\t\t\t\t\t\t\t$t_first = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"' . string_attribute( $t_field_name ) . '[]\" value=\"' . string_attribute( $t_current ) . '\"/>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t_values .= $t_output;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$t_values .= '</td>';\n\n\t\t\t$t_column++;\n\n\t\t\t# wrap at the appropriate column\n\t\t\tif ( $t_column >= $t_filter_cols ) {\n\t\t\t\techo '<tr class=\"', $t_trclass, '\">', $t_fields, '</tr>';\n\t\t\t\techo '<tr class=\"row-1\">', $t_values, '</tr>';\n\n\t\t\t\t$t_fields = '';\n\t\t\t\t$t_values = '';\n\t\t\t\t$t_column = 0;\n\t\t\t}\n\t\t}\n\n\t\t# output any remaining plugin filters\n\t\tif ( $t_column > 0 ) {\n\t\t\tif ( $t_column < $t_filter_cols ) {\n\t\t\t\t$t_fields .= '<td class=\"small-caption\" colspan=\"' . ( $t_filter_cols - $t_column ) . '\">&#160;</td>';\n\t\t\t\t$t_values .= '<td class=\"small-caption\" colspan=\"' . ( $t_filter_cols - $t_column ) . '\">&#160;</td>';\n\t\t\t}\n\n\t\t\techo '<tr class=\"', $t_trclass, '\">', $t_fields, '</tr>';\n\t\t\techo '<tr class=\"row-1\">', $t_values, '</tr>';\n\t\t}\n\n\t\tif( ON == config_get( 'filter_by_custom_fields' ) ) {\n\n\t\t\t# -- Custom Field Searching --\n\n\t\t\tif( count( $t_accessible_custom_fields_ids ) > 0 ) {\n\t\t\t\t$t_per_row = config_get( 'filter_custom_fields_per_row' );\n\t\t\t\t$t_num_fields = count( $t_accessible_custom_fields_ids );\n\t\t\t\t$t_row_idx = 0;\n\t\t\t\t$t_col_idx = 0;\n\n\t\t\t\t$t_fields = '';\n\t\t\t\t$t_values = '';\n\n\t\t\t\tfor( $i = 0;$i < $t_num_fields;$i++ ) {\n\t\t\t\t\tif( $t_col_idx == 0 ) {\n\t\t\t\t\t\t$t_fields = '<tr class=\"' . $t_trclass . '\">';\n\t\t\t\t\t\t$t_values = '<tr class=\"row-1\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif( isset( $t_accessible_custom_fields_names[$i] ) ) {\n\t\t\t\t\t\t$t_fields .= '<td class=\"small-caption\" valign=\"top\"> ';\n\t\t\t\t\t\t$t_fields .= '<a href=\"' . $t_filters_url . 'custom_field_' . $t_accessible_custom_fields_ids[$i] . '[]\" id=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '_filter\">';\n\t\t\t\t\t\t$t_fields .= string_display_line( lang_get_defaulted( $t_accessible_custom_fields_names[$i] ) );\n\t\t\t\t\t\t$t_fields .= '</a> </td> ';\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = '';\n\t\t\t\t\t$t_any_found = false;\n\n\t\t\t\t\t$t_values .= '<td class=\"small-caption\" valign=\"top\" id=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '_filter_target\"> ';\n\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]] ) ) {\n\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( $t_accessible_custom_fields_types[$i] == CUSTOM_FIELD_TYPE_DATE ) {\n\n\t\t\t\t\t\t\t/** @todo moved embedded javascript here from print_filter_custom_field_date\n\t\t\t\t\t\t\t *  it appears not to load properly on Firefox and other browsers if loaded through the httpxmlreq\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t$t_field_id = $t_accessible_custom_fields_ids[$i];\n\t\t\t\t\t\t\t$t_js_toggle_func = \"toggle_custom_date_field_\" . $t_field_id . \"_controls\";\n\t\t\t\t\t\t\tif(( ON == config_get( 'dhtml_filters' ) ) && ( ON == config_get( 'use_javascript' ) ) ) {\n\t\t\t\t\t\t\t\t?>\n\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t<!--\n\tfunction <?php echo $t_js_toggle_func . \"_start\";?>(disable) {\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_year.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_month.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_start_day.disabled = disable ;\n\t} ;\n\n\tfunction <?php echo $t_js_toggle_func . \"_end\";?>(disable) {\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_year.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_month.disabled = disable ;\n\t\t\tdocument.filters_open.custom_field_<?php echo $t_field_id;?>_end_day.disabled = disable ;\n\t} ;\n\n\tfunction <?php echo $t_js_toggle_func;?>() {\n\t\tswitch (document.filters_open.custom_field_<?php echo $t_field_id;?>_control.selectedIndex) {\n\t\tcase <?php echo CUSTOM_FIELD_DATE_ANY;?>:\n\t\tcase <?php echo CUSTOM_FIELD_DATE_NONE;?>:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(true) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(true) ;\n\t\t\tbreak ;\n\t\tcase <?php echo CUSTOM_FIELD_DATE_BETWEEN;?>:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(false) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(false) ;\n\t\t\tbreak ;\n\t\tdefault:\n\t\t\t<?php echo $t_js_toggle_func . \"_start\";?>(false) ;\n\t\t\t<?php echo $t_js_toggle_func . \"_end\";?>(true) ;\n\t\t\tbreak ;\n\t\t}\n\t}\n\t// -->\n\t</script>\n<?php\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t# end if dhtml_filters\n\t\t\t\t\t\t\t$t_short_date_format = config_get( 'short_date_format' );\n\t\t\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] ) ) {\n\t\t\t\t\t\t\t\t$t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_start = date( $t_short_date_format, $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][1] );\n\n\t\t\t\t\t\t\tif( !isset( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] ) ) {\n\t\t\t\t\t\t\t\t$t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$t_end = date( $t_short_date_format, $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][2] );\n\t\t\t\t\t\t\tswitch( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]][0] ) {\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'none' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BETWEEN:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'between_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start . '<br />' . $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ONORBEFORE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_or_before_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'before_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_end;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ON:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'after_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase CUSTOM_FIELD_DATE_ONORAFTER:\n\t\t\t\t\t\t\t\t\t$t_values .= lang_get( 'on_or_after_date' ) . '<br />';\n\t\t\t\t\t\t\t\t\t$t_values .= $t_start;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_first_flag = true;\n\t\t\t\t\t\t\tforeach( $t_filter['custom_fields'][$t_accessible_custom_fields_ids[$i]] as $t_current ) {\n\t\t\t\t\t\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t\t\t\t\t\t$t_this_string = '';\n\t\t\t\t\t\t\t\tif( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t\t\t\t} else if( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t\t\t\t\t$t_this_string = lang_get( 'none' );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$t_this_string = $t_current;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_string );\n\t\t\t\t\t\t\t\t$t_values .= '<input type=\"hidden\" name=\"custom_field_' . $t_accessible_custom_fields_ids[$i] . '[]\" value=\"' . string_attribute( $t_current ) . '\" />';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( true == $t_any_found ) {\n\t\t\t\t\t\t\t$t_values .= lang_get( 'any' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$t_values .= $t_output;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$t_values .= ' </td>';\n\n\t\t\t\t\t$t_col_idx++;\n\n\t\t\t\t\tif( $t_col_idx == $t_per_row ) {\n\t\t\t\t\t\tif( $t_filter_cols > $t_per_row ) {\n\t\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t_fields .= '</tr>' . \"\\n\";\n\t\t\t\t\t\t$t_values .= '</tr>' . \"\\n\";\n\n\t\t\t\t\t\techo $t_fields;\n\t\t\t\t\t\techo $t_values;\n\n\t\t\t\t\t\t$t_col_idx = 0;\n\t\t\t\t\t\t$t_row_idx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( $t_col_idx > 0 ) {\n\t\t\t\t\tif( $t_col_idx < $t_per_row ) {\n\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_per_row - $t_col_idx ) . '\">&#160;</td> ';\n\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_per_row - $t_col_idx ) . '\">&#160;</td> ';\n\t\t\t\t\t}\n\n\t\t\t\t\tif( $t_filter_cols > $t_per_row ) {\n\t\t\t\t\t\t$t_fields .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t\t$t_values .= '<td colspan=\"' . ( $t_filter_cols - $t_per_row ) . '\">&#160;</td> ';\n\t\t\t\t\t}\n\n\t\t\t\t\t$t_fields .= '</tr>' . \"\\n\";\n\t\t\t\t\t$t_values .= '</tr>' . \"\\n\";\n\n\t\t\t\t\techo $t_fields;\n\t\t\t\t\techo $t_values;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t<tr class=\"row-1\">\n\t\t\t<td class=\"small-caption category2\" valign=\"top\">\n                <a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_NOTE_USER_ID;?>\" id=\"note_user_id_filter\"><?php echo lang_get( 'note_user_id' )?>:</a>\n            </td>\n            <td class=\"small-caption\" valign=\"top\" id=\"note_user_id_filter_target\">\n                <?php\n                    $t_output = '';\n\t\t$t_any_found = false;\n\t\tif( count( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] ) == 0 ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\t$t_first_flag = true;\n\t\t\tforeach( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] as $t_current ) {\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_NOTE_USER_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t$t_this_name = '';\n\t\t\t\tif( filter_field_is_none( $t_current ) ) {\n\t\t\t\t\t$t_this_name = lang_get( 'none' );\n\t\t\t\t} else if( filter_field_is_any( $t_current ) ) {\n\t\t\t\t\t$t_any_found = true;\n\t\t\t\t} else if( filter_field_is_myself( $t_current ) ) {\n\t\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\t\t$t_this_name = '[' . lang_get( 'myself' ) . ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_any_found = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$t_this_name = user_get_name( $t_current );\n\t\t\t\t}\n\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t} else {\n\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t}\n\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t}\n\t\t\tif( true == $t_any_found ) {\n\t\t\t\techo lang_get( 'any' );\n\t\t\t} else {\n\t\t\t\t$t_output;\n\t\t\t}\n\t\t}\n\t\t?>\n            </td>\n\t\t\t<td class=\"small-caption\" valign=\"top\">\n\t\t\t\t<a href=\"<?php echo $t_filters_url . 'show_sort';?>\" id=\"show_sort_filter\"><?php echo lang_get( 'sort' )?>:</a>\n\t\t\t</td>\n\t\t\t<td class=\"small-caption\" valign=\"top\" id=\"show_sort_filter_target\">\n\t\t\t\t<?php\n\t\t\t\t\t$t_sort_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t\t$t_dir_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\n\t\tfor( $i = 0;$i < 2;$i++ ) {\n\t\t\tif( isset( $t_sort_fields[$i] ) ) {\n\t\t\t\tif( 0 < $i ) {\n\t\t\t\t\techo ', ';\n\t\t\t\t}\n\t\t\t\t$t_sort = $t_sort_fields[$i];\n\t\t\t\tif( strpos( $t_sort, 'custom_' ) === 0 ) {\n\t\t\t\t\t$t_field_name = string_display( lang_get_defaulted( utf8_substr( $t_sort, utf8_strlen( 'custom_' ) ) ) );\n\t\t\t\t} else {\n\t\t\t\t\t$t_field_name = string_get_field_name( $t_sort );\n\t\t\t\t}\n\n\t\t\t\techo $t_field_name . ' ' . lang_get( 'bugnote_order_' . utf8_strtolower( $t_dir_fields[$i] ) );\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_', $i, '\" value=\"', string_attribute( $t_sort_fields[$i] ), '\" />';\n\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_', $i, '\" value=\"', string_attribute( $t_dir_fields[$i] ), '\" />';\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t\t</td>\n\t\t\t<?php\n\t\t\t\tif( 'advanced' == $t_view_type ) {\n\t\t\t?>\n\t\t\t\t\t<td class=\"small-caption\" valign=\"top\" colspan=\"2\">\n\t\t\t\t\t\t<a href=\"<?php echo $t_filters_url . FILTER_PROPERTY_PROJECT_ID;?>\" id=\"project_id_filter\"><?php echo lang_get( 'email_project' )?>:</a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"small-caption\" valign=\"top\"  id=\"project_id_filter_target\">\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$t_output = '';\n\t\t\tif( !is_array( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) ) {\n\t\t\t\t$t_filter[FILTER_PROPERTY_PROJECT_ID] = Array(\n\t\t\t\t\t$t_filter[FILTER_PROPERTY_PROJECT_ID],\n\t\t\t\t);\n\t\t\t}\n\t\t\tif( count( $t_filter[FILTER_PROPERTY_PROJECT_ID] ) == 0 ) {\n\t\t\t\techo lang_get( 'current' );\n\t\t\t} else {\n\t\t\t\t$t_first_flag = true;\n\t\t\t\tforeach( $t_filter[FILTER_PROPERTY_PROJECT_ID] as $t_current ) {\n\t\t\t\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_PROJECT_ID, '[]\" value=\"', string_attribute( $t_current ), '\" />';\n\t\t\t\t\t$t_this_name = '';\n\t\t\t\t\tif( META_FILTER_CURRENT == $t_current ) {\n\t\t\t\t\t\t$t_this_name = lang_get( 'current' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_this_name = project_get_name( $t_current, false );\n\t\t\t\t\t}\n\t\t\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t\t\t$t_output = $t_output . '<br />';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$t_first_flag = false;\n\t\t\t\t\t}\n\t\t\t\t\t$t_output = $t_output . string_display_line( $t_this_name );\n\t\t\t\t}\n\t\t\t\techo $t_output;\n\t\t\t}\n\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php\n\t\t\t\t\tif( $t_filter_cols > 6 ) {\n\t\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 5 ) . '\">&#160;</td>';\n\t\t\t}\n\t\t} else {\n\t\t\tif( $t_filter_cols > 3 ) {\n\t\t\t\techo '<td class=\"small-caption\" valign=\"top\" colspan=\"' . ( $t_filter_cols - 2 ) . '\">&#160;</td>';\n\t\t\t}\n\t\t}\n\t\t?>\n\t\t</tr>\n\t\t<?php\n\t}\n\n\t// expanded\n\t?>\n\t\t<tr>\n\t\t\t<td colspan=\"2\">\n\t\t\t\t<?php\n\t\t\t\t\tcollapse_icon( 'filter' );\n\techo lang_get( 'search' ) . '&#160;';\n\techo '<input type=\"text\" size=\"16\" name=\"', FILTER_PROPERTY_FREE_TEXT, '\" value=\"', string_attribute( $t_filter[FILTER_PROPERTY_FREE_TEXT] ), '\" />';\n\t?>\n\n\t\t\t\t<input type=\"submit\" name=\"filter\" class=\"button-small\" value=\"<?php echo lang_get( 'filter_button' )?>\" />\n\t\t\t</td>\n\t\t\t</form>\n\t\t\t<td class=\"center\" colspan=\"<?php echo( $t_filter_cols - 6 )?>\"> <!-- use this label for padding -->\n\t\t\t\t<?php\n\t\t\t\t\tif( ON == config_get( 'dhtml_filters' ) ) {\n\t\t$f_switch_view_link = 'view_all_set.php?type=6&view_type=';\n\t} else {\n\t\t$f_switch_view_link = 'view_filters_page.php?view_type=';\n\t}\n\n\t$t_view_filters = config_get( 'view_filters' );\n\tif(( SIMPLE_ONLY != $t_view_filters ) && ( ADVANCED_ONLY != $t_view_filters ) ) {\n\t\tif( 'advanced' == $t_view_type ) {\n\t\t\tprint_bracket_link( $f_switch_view_link . 'simple', lang_get( 'simple_filters' ) );\n\t\t} else {\n\t\t\tprint_bracket_link( $f_switch_view_link . 'advanced', lang_get( 'advanced_filters' ) );\n\t\t}\n\t}\n\n\tif( access_has_project_level( config_get( 'create_permalink_threshold' ) ) ) {\n\t\tprint_bracket_link( 'permalink_page.php?url=' . urlencode( filter_get_url( $t_filter ) ), lang_get( 'create_filter_link' ),\n\n\t\t/* new window = */\n\t\ttrue );\n\t}\n\t?>\n\t\t\t</td>\n\t\t\t<td class=\"right\" colspan=\"4\">\n\t\t\t<?php\n\t\t\t$t_stored_queries_arr = array();\n\t$t_stored_queries_arr = filter_db_get_available_queries();\n\n\tif( count( $t_stored_queries_arr ) > 0 ) {\n\t\t?>\n\t\t\t\t\t<form method=\"get\" name=\"list_queries<?php echo $t_form_name_suffix;?>\" action=\"view_all_set.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"hidden\" name=\"type\" value=\"3\" />\n\t\t\t\t\t<?php\n\t\t\t\t\tif( ON == config_get( 'use_javascript' ) ) {\n\t\t\techo \"<select name=\\\"source_query_id\\\" onchange=\\\"document.forms.list_queries$t_form_name_suffix.submit();\\\">\";\n\t\t} else {\n\t\t\techo '<select name=\"source_query_id\">';\n\t\t}\n\t\t?>\n\t\t\t\t\t<option value=\"-1\"><?php echo '[' . lang_get( 'reset_query' ) . ']'?></option>\n\t\t\t\t\t<option value=\"-1\"></option>\n\t\t\t\t\t<?php\n\t\t\t\t\tforeach( $t_stored_queries_arr as $t_query_id => $t_query_name ) {\n\t\t\techo '<option value=\"' . string_attribute( $t_query_id ) . '\">' . string_display_line( $t_query_name ) . '</option>';\n\t\t}\n\t\t?>\n\t\t\t\t\t</select>\n\t\t\t\t\t<input type=\"submit\" name=\"switch_to_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'use_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t\t<form method=\"post\" name=\"open_queries\" action=\"query_view_page.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"submit\" name=\"switch_to_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'open_queries' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t<?php\n\t} else {\n\t\t?>\n\t\t\t\t\t<form method=\"get\" name=\"reset_query\" action=\"view_all_set.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"hidden\" name=\"type\" value=\"3\" />\n\t\t\t\t\t<input type=\"hidden\" name=\"source_query_id\" value=\"-1\" />\n\t\t\t\t\t<input type=\"submit\" name=\"reset_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'reset_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t\t<?php\n\t}\n\n\tif( access_has_project_level( config_get( 'stored_query_create_threshold' ) ) ) {\n\t\t?>\n\t\t\t\t\t<form method=\"post\" name=\"save_query\" action=\"query_store_page.php\">\n\t\t\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t\t\t<input type=\"submit\" name=\"save_query_button\" class=\"button-small\" value=\"<?php echo lang_get( 'save_query' )?>\" />\n\t\t\t\t\t</form>\n\t\t\t<?php\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t</table>\n<?php\n}\n\n/**\n \t * @internal The following functions each print out filter field inputs.\n *      They are derived from view_filters_page.php\n *      The functions follow a strict naming convention:\n *\n * \t\tprint_filter_[filter_name]\n *\n *      Where [filter_name] is the same as the \"name\" of the form element for\n *      that filter. This naming convention is depended upon by the controller\n *      at the end of the script.\n *\n * @todo print functions should be abstracted.  Many of these functions\n *      are virtually identical except for the property name.\n *      Perhaps this code could be made simpler by refactoring into a\n *      class so as to avoid all those calls to global(which are pretty ugly)\n *      These functions could also be shared by view_filters_page.php\n */\n\n/**\n *  Print the reporter field\n */\nfunction print_filter_reporter_id() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t\t<select <?php echo $t_select_modifier;?> name=\"reporter_id[]\">\n\t\t<?php\n\t# if current user is a reporter, and limited reports set to ON, only display that name\n\t# @@@ thraxisp - access_has_project_level checks greater than or equal to,\n\t#   this assumed that there aren't any holes above REPORTER where the limit would apply\n\t#\n\tif(( ON === config_get( 'limit_reporters' ) ) && ( !access_has_project_level( REPORTER + 1 ) ) ) {\n\t\t$t_id = auth_get_current_user_id();\n\t\t$t_username = user_get_field( $t_id, 'username' );\n\t\t$t_realname = user_get_field( $t_id, 'realname' );\n\t\t$t_display_name = string_attribute( $t_username );\n\t\tif(( isset( $t_realname ) ) && ( $t_realname > '' ) && ( ON == config_get( 'show_realname' ) ) ) {\n\t\t\t$t_display_name = string_attribute( $t_realname );\n\t\t}\n\t\techo '<option value=\"' . $t_id . '\" selected=\"selected\">' . $t_display_name . '</option>';\n\t} else {\n\t\t?>\n\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_REPORTER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t<?php\n\t\t\tif( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {\n\t\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_REPORTER_ID], META_FILTER_MYSELF );\n\t\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t\t}\n\t\tprint_reporter_option_list( $t_filter[FILTER_PROPERTY_REPORTER_ID] );\n\t}?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  Print the user monitor field\n */\nfunction print_filter_user_monitor() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t<!-- Monitored by -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"user_monitor[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php\n\t\t\t\tif( access_has_project_level( config_get( 'monitor_bug_threshold' ) ) ) {\n\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\tcheck_selected( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID], META_FILTER_MYSELF );\n\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t}\n\t$t_threshold = config_get( 'show_monitor_list_threshold' );\n\t$t_has_project_level = access_has_project_level( $t_threshold );\n\n\tif( $t_has_project_level ) {\n\t\tprint_reporter_option_list( $t_filter[FILTER_PROPERTY_MONITOR_USER_ID] );\n\t}\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the handler field\n */\nfunction print_filter_handler_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n\t\t<!-- Handler -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"handler_id[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php if( access_has_project_level( config_get( 'view_handler_threshold' ) ) ) {?>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php\n\t\t\t\tif( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_HANDLER_ID], META_FILTER_MYSELF );\n\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t}\n\n\t\tprint_assign_to_option_list( $t_filter[FILTER_PROPERTY_HANDLER_ID] );\n\t}?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the category field\n */\nfunction print_filter_show_category() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\n\t\t<!-- Category -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_CATEGORY;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_CATEGORY], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_category_filter_option_list( $t_filter[FILTER_PROPERTY_CATEGORY] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the platform field\n */\nfunction print_filter_platform() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- Platform -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PLATFORM;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PLATFORM], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php\n\t\t\t\tlog_event( LOG_FILTERING, 'Platform = ' . var_export( $t_filter[FILTER_PROPERTY_PLATFORM], true ) );\n\tprint_platform_option_list( $t_filter[FILTER_PROPERTY_PLATFORM] );\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the os field\n */\nfunction print_filter_os() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- OS -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_OS;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_OS], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_os_option_list( $t_filter[FILTER_PROPERTY_OS] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the os build field\n */\nfunction print_filter_os_build() {\n\tglobal $t_select_modifier, $t_filter;\n\n\t?>\n\t\t<!-- OS Build -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_OS_BUILD;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_OS_BUILD], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_os_build_option_list( $t_filter[FILTER_PROPERTY_OS_BUILD] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print the severity field\n */\nfunction print_filter_show_severity() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Severity -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_SEVERITY_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_SEVERITY_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'severity', $t_filter[FILTER_PROPERTY_SEVERITY_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print resolution field\n */\nfunction print_filter_show_resolution() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Resolution -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_RESOLUTION_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_RESOLUTION_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'resolution', $t_filter[FILTER_PROPERTY_RESOLUTION_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print status field\n */\nfunction print_filter_show_status() {\n\tglobal $t_select_modifier, $t_filter;\n\t?>\t<!-- Status -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_STATUS_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_STATUS_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'status', $t_filter[FILTER_PROPERTY_STATUS_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print hide status field\n */\nfunction print_filter_hide_status() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Hide Status -->\n\t\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_HIDE_STATUS_ID;?>[]\">\n\t\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\">[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t\t<?php print_enum_string_option_list( 'status', $t_filter[FILTER_PROPERTY_HIDE_STATUS_ID] )?>\n\t\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print build field\n */\nfunction print_filter_show_build() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Build -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRODUCT_BUILD;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_build_option_list( $t_filter[FILTER_PROPERTY_PRODUCT_BUILD] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print version field\n */\nfunction print_filter_show_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRODUCT_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_PRODUCT_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n * print fixed in version field\n */\nfunction print_filter_show_fixed_in_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Fixed in Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_FIXED_IN_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_FIXED_IN_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print target version field\n */\nfunction print_filter_show_target_version() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Fixed in Version -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_TARGET_VERSION;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_TARGET_VERSION], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_TARGET_VERSION], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n\t\t\t<?php print_version_option_list( $t_filter[FILTER_PROPERTY_TARGET_VERSION], /* projectId */ null, /* released */ VERSION_ALL, /* leadingBlank */ false, /* withSubs */ true )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print priority field\n */\nfunction print_filter_show_priority() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Priority -->\n    <select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PRIORITY_ID;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PRIORITY_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_enum_string_option_list( 'priority', $t_filter[FILTER_PROPERTY_PRIORITY_ID] )?>\n    </select>\n\t\t<?php\n}\n\n/**\n *  print profile field\n */\nfunction print_filter_show_profile() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- Profile -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"show_profile[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter['show_profile'], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n\t\t\t<?php print_profile_option_list_for_project( helper_get_current_project(), $t_filter['show_profile'] );?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print issues per page field\n */\nfunction print_filter_per_page() {\n\tglobal $t_filter;\n\t?><!-- Number of bugs per page -->\n\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_ISSUES_PER_PAGE;?>\" size=\"3\" maxlength=\"7\" value=\"<?php echo $t_filter[FILTER_PROPERTY_ISSUES_PER_PAGE]?>\" />\n\t\t<?php\n}\n\n/**\n *  print view state field\n */\nfunction print_filter_view_state() {\n\tglobal $t_select_modifier, $t_filter;\n\t?><!-- View Status -->\n\t\t<select name=\"<?php echo FILTER_PROPERTY_VIEW_STATE_ID;?>\">\n\t\t\t<?php\n\t\t\techo '<option value=\"' . META_FILTER_ANY . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], META_FILTER_ANY );\n\techo '>[' . lang_get( 'any' ) . ']</option>';\n\techo '<option value=\"' . VS_PUBLIC . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], VS_PUBLIC );\n\techo '>' . lang_get( 'public' ) . '</option>';\n\techo '<option value=\"' . VS_PRIVATE . '\" ';\n\tcheck_selected( $t_filter[FILTER_PROPERTY_VIEW_STATE_ID], VS_PRIVATE );\n\techo '>' . lang_get( 'private' ) . '</option>';\n\t?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print sticky issues field\n */\nfunction print_filter_sticky_issues() {\n\tglobal $t_filter;\n\t?><!-- Show or hide sticky bugs -->\n\t\t\t<input type=\"checkbox\" name=\"<?php echo FILTER_PROPERTY_SHOW_STICKY_ISSUES;?>\" <?php check_checked( gpc_string_to_bool( $t_filter[FILTER_PROPERTY_SHOW_STICKY_ISSUES] ), true );?> />\n\t\t<?php\n}\n\n/**\n *  print highlight changed field\n */\nfunction print_filter_highlight_changed() {\n\tglobal $t_filter;\n\t?><!-- Highlight changed bugs -->\n\t\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_HIGHLIGHT_CHANGED;?>\" size=\"3\" maxlength=\"7\" value=\"<?php echo $t_filter[FILTER_PROPERTY_HIGHLIGHT_CHANGED]?>\" />\n\t\t<?php\n}\n\n/**\n *  print filter by date fields with javascript\n * @todo Javascript should be removed and added dynamically\n *      via external script\n */\nfunction print_filter_do_filter_by_date( $p_hide_checkbox = false ) {\n\tglobal $t_filter;\n\t?>\n\t\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<?php if( !$p_hide_checkbox ) {\n\t\t?>\n\t\t<tr><td colspan=\"2\">\n\t\t\t<input type=\"checkbox\" name=\"<?php echo FILTER_PROPERTY_FILTER_BY_DATE;?>\" <?php\n\t\t\t\tcheck_checked( $t_filter[FILTER_PROPERTY_FILTER_BY_DATE], 'on' );\n\t\tif( ON == config_get( 'use_javascript' ) ) {\n\t\t\tprint \"onclick=\\\"SwitchDateFields();\\\"\";\n\t\t}?> />\n\t\t\t<?php echo lang_get( 'use_date_filters' )?>\n\t\t</td></tr>\n\t\t<?php\n\t}\n\t$t_menu_disabled = ( 'on' == $t_filter[FILTER_PROPERTY_FILTER_BY_DATE] ) ? '' : ' disabled ';\n\t?>\n\n\t\t<!-- Start date -->\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<?php echo lang_get( 'start_date' )?>:\n\t\t\t</td>\n\t\t\t<td nowrap=\"nowrap\">\n\t\t\t<?php\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\tforeach( $t_chars as $t_char ) {\n\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_MONTH, '\"', $t_menu_disabled, '>';\n\t\t\tprint_month_option_list( $t_filter[FILTER_PROPERTY_START_MONTH] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_DAY, '\"', $t_menu_disabled, '>';\n\t\t\tprint_day_option_list( $t_filter[FILTER_PROPERTY_START_DAY] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_START_YEAR, '\"', $t_menu_disabled, '>';\n\t\t\tprint_year_option_list( $t_filter[FILTER_PROPERTY_START_YEAR] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<!-- End date -->\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<?php echo lang_get( 'end_date' )?>:\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t<?php\n\t\t\t$t_chars = preg_split( '//', config_get( 'short_date_format' ), -1, PREG_SPLIT_NO_EMPTY );\n\tforeach( $t_chars as $t_char ) {\n\t\tif( strcasecmp( $t_char, \"M\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_MONTH, '\"', $t_menu_disabled, '>';\n\t\t\tprint_month_option_list( $t_filter[FILTER_PROPERTY_END_MONTH] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"D\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_DAY, '\"', $t_menu_disabled, '>';\n\t\t\tprint_day_option_list( $t_filter[FILTER_PROPERTY_END_DAY] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t\tif( strcasecmp( $t_char, \"Y\" ) == 0 ) {\n\t\t\techo '<select name=\"', FILTER_PROPERTY_END_YEAR, '\"', $t_menu_disabled, '>';\n\t\t\tprint_year_option_list( $t_filter[FILTER_PROPERTY_END_YEAR] );\n\t\t\tprint \"</select>\\n\";\n\t\t}\n\t}\n\t?>\n\t\t\t</td>\n\t\t</tr>\n\t\t</table>\n\t\t<?php\n}\n\n/**\n *  print relationship fields\n */\nfunction print_filter_relationship_type() {\n\tglobal $t_filter;\n\t$c_reltype_value = $t_filter[FILTER_PROPERTY_RELATIONSHIP_TYPE];\n\tif( !$c_reltype_value ) {\n\t\t$c_reltype_value = -1;\n\t}\n\trelationship_list_box( $c_reltype_value, \"relationship_type\", true );\n\techo '<input type=\"text\" name=\"', FILTER_PROPERTY_RELATIONSHIP_BUG, '\" size=\"5\" maxlength=\"10\" value=\"', $t_filter[FILTER_PROPERTY_RELATIONSHIP_BUG], '\" />';\n}\n\n/**\n *  print tag fields\n */\nfunction print_filter_tag_string() {\n\tif ( !access_has_global_level( config_get( 'tag_view_threshold' ) ) ) {\n\t\treturn;\n\t}\n\n\tglobal $t_filter;\n\t$t_tag_string = $t_filter[FILTER_PROPERTY_TAG_STRING];\n\tif( $t_filter[FILTER_PROPERTY_TAG_SELECT] != 0 && tag_exists( $t_filter[FILTER_PROPERTY_TAG_SELECT] ) ) {\n\t\t$t_tag_string .= ( is_blank( $t_tag_string ) ? '' : config_get( 'tag_separator' ) );\n\t\t$t_tag_string .= tag_get_field( $t_filter[FILTER_PROPERTY_TAG_SELECT], 'name' );\n\t}\n\t?>\n\t\t<input type=\"hidden\" id=\"tag_separator\" value=\"<?php echo config_get( 'tag_separator' )?>\" />\n\t\t<input type=\"text\" name=\"<?php echo FILTER_PROPERTY_TAG_STRING;?>\" id=\"<?php echo FILTER_PROPERTY_TAG_STRING;?>\" size=\"40\" value=\"<?php echo string_attribute( $t_tag_string )?>\" />\n\t\t<select <?php echo helper_get_tab_index()?> name=\"<?php echo FILTER_PROPERTY_TAG_SELECT;?>\" id=\"<?php echo FILTER_PROPERTY_TAG_SELECT;?>\">\n\t\t\t<?php print_tag_option_list();?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  print note reporter field\n */\nfunction print_filter_note_user_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n        <!-- BUGNOTE REPORTER -->\n        <select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_NOTE_USER_ID;?>[]\">\n            <option value=\"<?php echo META_FILTER_ANY?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_ANY );?>>[<?php echo lang_get( 'any' )?>]</option>\n            <?php if( access_has_project_level( config_get( 'view_handler_threshold' ) ) ) {?>\n            <option value=\"<?php echo META_FILTER_NONE?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_NONE );?>>[<?php echo lang_get( 'none' )?>]</option>\n            <?php\n                if( access_has_project_level( config_get( 'handle_bug_threshold' ) ) ) {\n\t\t\t\t\techo '<option value=\"' . META_FILTER_MYSELF . '\" ';\n\t\t\t\t\tcheck_selected( $t_filter[FILTER_PROPERTY_NOTE_USER_ID], META_FILTER_MYSELF );\n\t\t\t\t\techo '>[' . lang_get( 'myself' ) . ']</option>';\n\t\t\t\t}\n\n\t\t\t\tprint_assign_to_option_list( $t_filter[FILTER_PROPERTY_NOTE_USER_ID] );\n\t\t\t}\n\t\t?>\n        </select>\n        <?php\n}\n\n\n/**\n * Print plugin filter fields as defined by MantisFilter objects.\n * @param string Field name\n * @param object Filter object\n */\nfunction print_filter_plugin_field( $p_field_name, $p_filter_object ) {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\n\t$t_size = (int)$p_filter_object->size;\n\n\tswitch( $p_filter_object->type ) {\n\t\tcase FILTER_TYPE_STRING:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' value=\"',\n\t\t\t\tstring_attribute( $t_filter[ $p_field_name ] ), '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_INT:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' value=\"',\n\t\t\t\t(int) $t_filter[ $p_field_name ], '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_BOOLEAN:\n\t\t\techo '<input name=\"', string_attribute( $p_field_name ), '\" type=\"checkbox\"',\n\t\t\t\t( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), check_checked( (bool) $t_filter[ $p_field_name ] ) , '\"/>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_MULTI_STRING:\n\t\t\techo '<select ', $t_select_modifier, ( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' name=\"',\n\t\t\t\tstring_attribute( $p_field_name ), '[]\">', '<option value=\"', META_FILTER_ANY, '\" ',\n\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], META_FILTER_ANY ), '>[', lang_get( 'any' ), ']</option>';\n\n\t\t\tforeach( $p_filter_object->options() as $t_option_value => $t_option_name ) {\n\t\t\t\techo '<option value=\"', string_attribute( $t_option_value ), '\" ',\n\t\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], $t_option_value ), '>',\n\t\t\t\t\tstring_display_line( $t_option_name ), '</option>';\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t\tbreak;\n\n\t\tcase FILTER_TYPE_MULTI_INT:\n\t\t\techo '<select ', $t_select_modifier, ( $t_size > 0 ? \" size=\\\"$t_size\\\"\" : '' ), ' name=\"',\n\t\t\t\tstring_attribute( $p_field_name ), '[]\">', '<option value=\"', META_FILTER_ANY, '\" ',\n\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], META_FILTER_ANY ), '>[', lang_get( 'any' ), ']</option>';\n\n\t\t\tforeach( $p_filter_object->options() as $t_option_value => $t_option_name ) {\n\t\t\t\techo '<option value=\"', (int)$t_option_value, '\" ',\n\t\t\t\t\tcheck_selected( $t_filter[ $p_field_name ], (int)$t_option_value ), '>',\n\t\t\t\t\tstring_display_line( $t_option_name ), '</option>';\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t\tbreak;\n\n\t}\n}\n\n/**\n *  print custom fields\n * @param int $p_field_id\n */\nfunction print_filter_custom_field( $p_field_id ) {\n\tglobal $t_filter, $t_accessible_custom_fields_names, $t_accessible_custom_fields_types, $t_accessible_custom_fields_values, $t_accessible_custom_fields_ids, $t_select_modifier;\n\n\t$j = array_search( $p_field_id, $t_accessible_custom_fields_ids );\n\tif( $j === null || $j === false ) {\n\n\t\t# Note: Prior to PHP 4.2.0, array_search() returns NULL on failure instead of FALSE.\n\t\t?>\n\t\t\t<span style=\"color:red;weight:bold;\">\n\t\t\t\tunknown custom filter (custom <?php $p_field_id;?>)\n\t\t\t</span>\n\t\t\t<?php\n\t} else if( isset( $t_accessible_custom_fields_names[$j] ) ) {\n\t\tif( $t_accessible_custom_fields_types[$j] == CUSTOM_FIELD_TYPE_DATE ) {\n\t\t\tprint_filter_custom_field_date( $j, $p_field_id );\n\t\t} else {\n\t\t\techo '<select ' . $t_select_modifier . ' name=\"custom_field_' . $p_field_id . '[]\">';\n\t\t\techo '<option value=\"' . META_FILTER_ANY . '\" ';\n\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], META_FILTER_ANY );\n\t\t\techo '>[' . lang_get( 'any' ) . ']</option>';\n\n\t\t\t# don't show META_FILTER_NONE for enumerated types as it's not possible for them to be blank\n\t\t\tif( !in_array( $t_accessible_custom_fields_types[$j], array( CUSTOM_FIELD_TYPE_ENUM, CUSTOM_FIELD_TYPE_LIST, CUSTOM_FIELD_TYPE_MULTILIST ) ) ) {\n\t\t\t\techo '<option value=\"' . META_FILTER_NONE . '\" ';\n\t\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], META_FILTER_NONE );\n\t\t\t\techo '>[' . lang_get( 'none' ) . ']</option>';\n\t\t\t}\n\t\t\tif( is_array( $t_accessible_custom_fields_values[$j] ) ) {\n\t\t\t\t$t_max_length = config_get( 'max_dropdown_length' );\n\t\t\t\tforeach( $t_accessible_custom_fields_values[$j] as $t_item ) {\n\t\t\t\t\tif(( utf8_strtolower( $t_item ) !== META_FILTER_ANY ) && ( utf8_strtolower( $t_item ) !== META_FILTER_NONE ) ) {\n\t\t\t\t\t\techo '<option value=\"' . string_attribute( $t_item ) . '\" ';\n\t\t\t\t\t\tif( isset( $t_filter['custom_fields'][$p_field_id] ) ) {\n\t\t\t\t\t\t\tcheck_selected( $t_filter['custom_fields'][$p_field_id], $t_item );\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo '>' . string_attribute( string_shorten( $t_item, $t_max_length ) ) . '</option>' . \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\techo '</select>';\n\t\t}\n\t}\n}\n\n/**\n *  print sort fields\n */\nfunction print_filter_show_sort() {\n\tglobal $t_filter;\n\n\t# get all of the displayed fields for sort, then drop ones that\n\t#  are not appropriate and translate the rest\n\t$t_fields = helper_get_columns_to_view();\n\t$t_n_fields = count( $t_fields );\n\t$t_shown_fields[''] = '';\n\tfor( $i = 0;$i < $t_n_fields;$i++ ) {\n\t\tif( !in_array( $t_fields[$i], array( 'selection', 'edit', 'bugnotes_count', 'attachment' ) ) ) {\n\t\t\tif( strpos( $t_fields[$i], 'custom_' ) === 0 ) {\n\t\t\t\t$t_field_name = string_display( lang_get_defaulted( utf8_substr( $t_fields[$i], utf8_strlen( 'custom_' ) ) ) );\n\t\t\t} else {\n\t\t\t\t$t_field_name = string_get_field_name( $t_fields[$i] );\n\t\t\t}\n\t\t\t$t_shown_fields[$t_fields[$i]] = $t_field_name;\n\t\t}\n\t}\n\t$t_shown_dirs[''] = '';\n\t$t_shown_dirs['ASC'] = lang_get( 'bugnote_order_asc' );\n\t$t_shown_dirs['DESC'] = lang_get( 'bugnote_order_desc' );\n\n\t# get default values from filter structure\n\t$t_sort_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_FIELD_NAME] );\n\t$t_dir_fields = explode( ',', $t_filter[FILTER_PROPERTY_SORT_DIRECTION] );\n\tif( !isset( $t_sort_fields[1] ) ) {\n\t\t$t_sort_fields[1] = '';\n\t\t$t_dir_fields[1] = '';\n\t}\n\n\t# if there are fields to display, show the dropdowns\n\tif( count( $t_fields ) > 0 ) {\n\t\t# display a primary and secondary sort fields\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_0\">';\n\t\tforeach( $t_shown_fields as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_sort_fields[0] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_0\">';\n\t\tforeach( $t_shown_dirs as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_dir_fields[0] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\n\t\techo ', ';\n\n\t\t# for secondary sort\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_1\">';\n\t\tforeach( $t_shown_fields as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_sort_fields[1] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\t\techo '<select name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_1\">';\n\t\tforeach( $t_shown_dirs as $key => $val ) {\n\t\t\techo '<option value=\"' . $key . '\"';\n\t\t\tcheck_selected( $key, $t_dir_fields[1] );\n\t\t\techo '>' . $val . '</option>';\n\t\t}\n\t\techo '</select>';\n\t} else {\n\t\techo lang_get_defaulted( 'last_updated' ) . lang_get( 'bugnote_order_desc' );\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_FIELD_NAME, '_1\" value=\"last_updated\" />';\n\t\techo '<input type=\"hidden\" name=\"', FILTER_PROPERTY_SORT_DIRECTION, '_1\" value=\"DESC\" />';\n\t}\n}\n\n/**\n *  print custom field date fields\n * @param int $p_field_num\n * @param int $p_field_id\n */\nfunction print_filter_custom_field_date( $p_field_num, $p_field_id ) {\n\tglobal $t_filter, $t_accessible_custom_fields_names, $t_accessible_custom_fields_types, $t_accessible_custom_fields_values, $t_accessible_custom_fields_ids, $t_select_modifier;\n\n\t$t_js_toggle_func = 'toggle_custom_date_field_' . $p_field_id . '_controls';\n\n\t# Resort the values so there ordered numerically, they are sorted as strings otherwise which\n\t# may be wrong for dates before early 2001.\n\tif( is_array( $t_accessible_custom_fields_values[$p_field_num] ) ) {\n\t\tarray_multisort( $t_accessible_custom_fields_values[$p_field_num], SORT_NUMERIC, SORT_ASC );\n\t}\n\n\tif( isset( $t_accessible_custom_fields_values[$p_field_num][0] ) ) {\n\t\t$t_sel_start_year = date( 'Y', $t_accessible_custom_fields_values[$p_field_num][0] );\n\t}\n\t$t_count = count( $t_accessible_custom_fields_values[$p_field_num] );\n\tif( isset( $t_accessible_custom_fields_values[$p_field_num][$t_count - 1] ) ) {\n\t\t$t_sel_end_year = date( 'Y', $t_accessible_custom_fields_values[$p_field_num][$t_count - 1] );\n\t}\n\n\t$t_start = date( 'U' );\n\n\t# Default to today in filters..\n\t$t_end = $t_start;\n\n\tif( isset( $t_filter['custom_fields'][$p_field_id][1] ) ) {\n\t\t$t_start_time = $t_filter['custom_fields'][$p_field_id][1];\n\t} else {\n\t\t$t_start_time = 0;\n\t}\n\n\tif( isset( $t_filter['custom_fields'][$p_field_id][2] ) ) {\n\t\t$t_end_time = $t_filter['custom_fields'][$p_field_id][2];\n\t} else {\n\t\t$t_end_time = 0;\n\t}\n\n\t$t_start_disable = true;\n\t$t_end_disable = true;\n\n\t// if $t_filter['custom_fields'][$p_field_id][0] is not set (ie no filter), we will drop through the\n\t// following switch and use the default values above, so no need to check if stuff is set or not.\n\tswitch( $t_filter['custom_fields'][$p_field_id][0] ) {\n\t\tcase CUSTOM_FIELD_DATE_ANY:\n\t\tcase CUSTOM_FIELD_DATE_NONE:\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_BETWEEN:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_end_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\t$t_end = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ONORBEFORE:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_BEFORE:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_end_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ON:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_AFTER:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t\tcase CUSTOM_FIELD_DATE_ONORAFTER:\n\t\t\t$t_start_disable = false;\n\t\t\t$t_start = $t_start_time;\n\t\t\tbreak;\n\t}\n\n\techo \"\\n<table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"><tr><td>\\n\";\n\techo \"<select size=\\\"1\\\" name=\\\"custom_field_\" . $p_field_id . \"_control\\\" OnChange=\\\"\" . $t_js_toggle_func . \"();\\\">\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ANY . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ANY );\n\techo '>' . lang_get( 'any' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_NONE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_NONE );\n\techo '>' . lang_get( 'none' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_BETWEEN . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_BETWEEN );\n\techo '>' . lang_get( 'between_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ONORBEFORE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ONORBEFORE );\n\techo '>' . lang_get( 'on_or_before_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_BEFORE . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_BEFORE );\n\techo '>' . lang_get( 'before_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ON . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ON );\n\techo '>' . lang_get( 'on_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_AFTER . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_AFTER );\n\techo '>' . lang_get( 'after_date' ) . '</option>' . \"\\n\";\n\techo '<option value=\"' . CUSTOM_FIELD_DATE_ONORAFTER . '\"';\n\tcheck_selected( $t_filter['custom_fields'][$p_field_id][0], CUSTOM_FIELD_DATE_ONORAFTER );\n\techo '>' . lang_get( 'on_or_after_date' ) . '</option>' . \"\\n\";\n\techo '</select>' . \"\\n\";\n\n\techo \"</td></tr>\\n<tr><td>\";\n\n\tprint_date_selection_set( 'custom_field_' . $p_field_id . '_start', config_get( 'short_date_format' ), $t_start, $t_start_disable, false, $t_sel_start_year, $t_sel_end_year );\n\tprint \"</td></tr>\\n<tr><td>\";\n\tprint_date_selection_set( 'custom_field_' . $p_field_id . '_end', config_get( 'short_date_format' ), $t_end, $t_end_disable, false, $t_sel_start_year, $t_sel_end_year );\n\tprint \"</td></tr>\\n</table>\";\n}\n\n/**\n *  print project field\n */\nfunction print_filter_project_id() {\n\tglobal $t_select_modifier, $t_filter, $f_view_type;\n\t?>\n\t\t<!-- Project -->\n\t\t<select <?php echo $t_select_modifier;?> name=\"<?php echo FILTER_PROPERTY_PROJECT_ID;?>[]\">\n\t\t\t<option value=\"<?php echo META_FILTER_CURRENT?>\" <?php check_selected( $t_filter[FILTER_PROPERTY_PROJECT_ID], META_FILTER_CURRENT );?>>[<?php echo lang_get( 'current' )?>]</option>\n\t\t\t<?php print_project_option_list( $t_filter[FILTER_PROPERTY_PROJECT_ID] )?>\n\t\t</select>\n\t\t<?php\n}\n\n/**\n *  Prints a multi-value filter field.\n * @param  string $p_field_name\n * @param mixed $p_field_value\n */\nfunction print_multivalue_field( $p_field_name, $p_field_value ) {\n\t$t_output = '';\n\t$t_any_found = false;\n\n\tif( count( $p_field_value ) == 0 ) {\n\t\techo lang_get( 'any' );\n\t} else {\n\t\t$t_first_flag = true;\n\n\t\t$t_field_value = is_array( $p_field_value ) ? $p_field_value : array( $p_field_value );\n\n\t\tforeach( $t_field_value as $t_current ) {\n\t\t\t$t_current = stripslashes( $t_current );\n\t\t\t?>\n\t\t\t\t<input type=\"hidden\" name=\"<?php echo string_attribute( $p_field_name )?>[]\" value=\"<?php echo string_attribute( $t_current );?>\" />\n\t\t\t\t<?php\n\t\t\t\t$t_this_string = '';\n\n\t\t\tif((( $t_current == META_FILTER_ANY ) && ( is_numeric( $t_current ) ) ) || ( is_blank( $t_current ) ) ) {\n\t\t\t\t$t_any_found = true;\n\t\t\t} else {\n\t\t\t\t$t_this_string = string_display( $t_current );\n\t\t\t}\n\n\t\t\tif( $t_first_flag != true ) {\n\t\t\t\t$t_output .= '<br />';\n\t\t\t} else {\n\t\t\t\t$t_first_flag = false;\n\t\t\t}\n\n\t\t\t$t_output .= $t_this_string;\n\t\t}\n\n\t\tif( true == $t_any_found ) {\n\t\t\techo lang_get( 'any' );\n\t\t} else {\n\t\t\techo $t_output;\n\t\t}\n\t}\n}\n\n# ==========================================================================\n# CACHING\n# ==========================================================================\n/**\n * @internal SECURITY NOTE: cache globals are initialized here to prevent them\n *      being spoofed if register_globals is turned on.\n * \tWe cache filter requests to reduce the number of SQL queries\n * @global mixed $g_cache_filter\n * @global mixed $g_cache_filter_db_filters\n */\n$g_cache_filter = array();\n$g_cache_filter_db_filters = array();\n\n/**\n *  Cache a filter row if necessary and return the cached copy\n *  If the second parameter is true (default), trigger an error\n *  if the filter can't be found.  If the second parameter is\n *  false, return false if the filter can't be found.\n * @param int $p_filter_id\n * @param bool $p_trigger_errors\n * @return mixed\n */\nfunction filter_cache_row( $p_filter_id, $p_trigger_errors = true ) {\n\tglobal $g_cache_filter;\n\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\n\tif( isset( $g_cache_filter[$c_filter_id] ) ) {\n\t\treturn $g_cache_filter[$c_filter_id];\n\t}\n\n\t$query = 'SELECT *\n\t\t\t\t  FROM ' . $t_filters_table . '\n\t\t\t\t  WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( 0 == db_num_rows( $result ) ) {\n\t\tif( $p_trigger_errors ) {\n\t\t\terror_parameters( $p_filter_id );\n\t\t\ttrigger_error( ERROR_FILTER_NOT_FOUND, ERROR );\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$row = db_fetch_array( $result );\n\n\t$g_cache_filter[$c_filter_id] = $row;\n\n\treturn $row;\n}\n\n/**\n *  Clear the filter cache (or just the given id if specified)\n * @param int $p_filter_id\n * @return bool\n */\nfunction filter_clear_cache( $p_filter_id = null ) {\n\tglobal $g_cache_filter;\n\n\tif( null === $p_filter_id ) {\n\t\t$g_cache_filter = array();\n\t} else {\n\t\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t\tunset( $g_cache_filter[$c_filter_id] );\n\t}\n\n\treturn true;\n}\n\n# ==========================================================================\n# FILTER DB FUNCTIONS\n# ==========================================================================\n/**\n *  Add a filter to the database for the current user\n * @param int $p_project_id\n * @param bool $p_is_public\n * @param string $p_name\n * @param string $p_filter_string\n * @return int\n */\nfunction filter_db_set_for_current_user( $p_project_id, $p_is_public, $p_name, $p_filter_string ) {\n\t$t_user_id = auth_get_current_user_id();\n\t$c_project_id = db_prepare_int( $p_project_id );\n\t$c_is_public = db_prepare_bool( $p_is_public, false );\n\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\n\t# check that the user can save non current filters (if required)\n\tif(( ALL_PROJECTS <= $c_project_id ) && ( !is_blank( $p_name ) ) && ( !access_has_project_level( config_get( 'stored_query_create_threshold' ) ) ) ) {\n\t\treturn -1;\n\t}\n\n\t# ensure that we're not making this filter public if we're not allowed\n\tif( !access_has_project_level( config_get( 'stored_query_create_shared_threshold' ) ) ) {\n\t\t$c_is_public = db_prepare_bool( false );\n\t}\n\n\t# Do I need to update or insert this value?\n\t$query = \"SELECT id FROM $t_filters_table\n\t\t\t\t\tWHERE user_id=\" . db_param() . \"\n\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $t_user_id, $c_project_id, $p_name ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\t$query = \"UPDATE $t_filters_table\n\t\t\t\t\t  SET is_public=\" . db_param() . \",\n\t\t\t\t\t\tfilter_string=\" . db_param() . \"\n\t\t\t\t\t  WHERE id=\" . db_param();\n\t\tdb_query_bound( $query, Array( $c_is_public, $p_filter_string, $row['id'] ) );\n\n\t\treturn $row['id'];\n\t} else {\n\t\t$query = \"INSERT INTO $t_filters_table\n\t\t\t\t\t\t( user_id, project_id, is_public, name, filter_string )\n\t\t\t\t\t  VALUES\n\t\t\t\t\t\t( \" . db_param() . ', ' . db_param() . ', ' . db_param() . ', ' . db_param() . ', ' . db_param() . ' )';\n\t\tdb_query_bound( $query, Array( $t_user_id, $c_project_id, $c_is_public, $p_name, $p_filter_string ) );\n\n\t\t# Recall the query, we want the filter ID\n\t\t$query = \"SELECT id\n\t\t\t\t\t\tFROM $t_filters_table\n\t\t\t\t\t\tWHERE user_id=\" . db_param() . \"\n\t\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\t\tAND name=\" . db_param();\n\t\t$result = db_query_bound( $query, Array( $t_user_id, $c_project_id, $p_name ) );\n\n\t\tif( db_num_rows( $result ) > 0 ) {\n\t\t\t$row = db_fetch_array( $result );\n\t\t\treturn $row['id'];\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\n/**\n *  This function returns the filter string that is\n *  tied to the unique id parameter. If the user doesn't\n *  have permission to see this filter, the function\n *  returns null\n * @param int $p_filter_id\n * @param int $p_user_id\n * @return mixed\n */\nfunction filter_db_get_filter( $p_filter_id, $p_user_id = null ) {\n\tglobal $g_cache_filter_db_filters;\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\tif( isset( $g_cache_filter_db_filters[$p_filter_id] ) ) {\n\t\tif( $g_cache_filter_db_filters[$p_filter_id] === false ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn $g_cache_filter_db_filters[$p_filter_id];\n\t}\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$t_user_id = $p_user_id;\n\t}\n\n\t$query = 'SELECT * FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\tif( $row['user_id'] != $t_user_id ) {\n\t\t\tif( $row['is_public'] != true ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t# check that the user has access to non current filters\n\t\tif(( ALL_PROJECTS <= $row['project_id'] ) && ( !is_blank( $row['name'] ) ) && ( !access_has_project_level( config_get( 'stored_query_use_threshold', $row['project_id'], $t_user_id ) ) ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$g_cache_filter_db_filters[$p_filter_id] = $row['filter_string'];\n\t\treturn $row['filter_string'];\n\t} else {\n\t\t$g_cache_filter_db_filters[$p_filter_id] = false;\n\t\treturn false;\n\t}\n}\n\n/**\n * @param int $p_project_id\n * @param int $p_user_id\n * @return int\n */\nfunction filter_db_get_project_current( $p_project_id, $p_user_id = null ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_project_id = db_prepare_int( $p_project_id );\n\t$c_project_id = $c_project_id * -1;\n\n\tif( null === $p_user_id ) {\n\t\t$c_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$c_user_id = db_prepare_int( $p_user_id );\n\t}\n\n\t# we store current filters for each project with a special project index\n\t$query = \"SELECT *\n\t\t\t\t  FROM $t_filters_table\n\t\t\t\t  WHERE user_id=\" . db_param() . \"\n\t\t\t\t\tAND project_id=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $c_user_id, $c_project_id, '' ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\t\treturn $row['id'];\n\t}\n\n\treturn null;\n}\n\n/**\n *  Query for the filter name using the filter id\n * @param int $p_filter_id\n * @return string\n */\nfunction filter_db_get_name( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\n\t$query = 'SELECT * FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\t$row = db_fetch_array( $result );\n\n\t\tif( $row['user_id'] != auth_get_current_user_id() ) {\n\t\t\tif( $row['is_public'] != true ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn $row['name'];\n\t}\n\n\treturn null;\n}\n\n/**\n *  Check if the current user has permissions to delete the stored query\n * @param $p_filter_id\n * @return bool\n */\nfunction filter_db_can_delete_filter( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t$t_user_id = auth_get_current_user_id();\n\n\t# Administrators can delete any filter\n\tif( user_is_administrator( $t_user_id ) ) {\n\t\treturn true;\n\t}\n\n\t$query = \"SELECT id\n\t\t\t\t  FROM $t_filters_table\n\t\t\t\t  WHERE id=\" . db_param() . \"\n\t\t\t\t  AND user_id=\" . db_param() . \"\n\t\t\t\t  AND project_id!=\" . db_param();\n\n\t$result = db_query_bound( $query, Array( $c_filter_id, $t_user_id, -1 ) );\n\n\tif( db_num_rows( $result ) > 0 ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *  Delete the filter specified by $p_filter_id\n * @param $p_filter_id\n * @return bool\n */\nfunction filter_db_delete_filter( $p_filter_id ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$c_filter_id = db_prepare_int( $p_filter_id );\n\t$t_user_id = auth_get_current_user_id();\n\n\tif( !filter_db_can_delete_filter( $c_filter_id ) ) {\n\t\treturn false;\n\t}\n\n\t$query = 'DELETE FROM ' . $t_filters_table . ' WHERE id=' . db_param();\n\t$result = db_query_bound( $query, Array( $c_filter_id ) );\n\n\tif( db_affected_rows( $result ) > 0 ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *  Delete all the unnamed filters\n */\nfunction filter_db_delete_current_filters() {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$t_all_id = ALL_PROJECTS;\n\n\t$query = \"DELETE FROM $t_filters_table\n\t\t\t\t\tWHERE project_id<=\" . db_param() . \"\n\t\t\t\t\tAND name=\" . db_param();\n\t$result = db_query_bound( $query, Array( $t_all_id, '' ) );\n}\n\n/**\n * @param int $p_project_id\n * @param int $p_user_id\n * @return mixed\n */\nfunction filter_db_get_available_queries( $p_project_id = null, $p_user_id = null ) {\n\t$t_filters_table = db_get_table( 'mantis_filters_table' );\n\t$t_overall_query_arr = array();\n\n\tif( null === $p_project_id ) {\n\t\t$t_project_id = helper_get_current_project();\n\t} else {\n\t\t$t_project_id = db_prepare_int( $p_project_id );\n\t}\n\n\tif( null === $p_user_id ) {\n\t\t$t_user_id = auth_get_current_user_id();\n\t} else {\n\t\t$t_user_id = db_prepare_int( $p_user_id );\n\t}\n\n\t# If the user doesn't have access rights to stored queries, just return\n\tif( !access_has_project_level( config_get( 'stored_query_use_threshold' ) ) ) {\n\t\treturn $t_overall_query_arr;\n\t}\n\n\t# Get the list of available queries. By sorting such that public queries are\n\t# first, we can override any query that has the same name as a private query\n\t# with that private one\n\t$query = \"SELECT * FROM $t_filters_table\n\t\t\t\t\tWHERE (project_id=\" . db_param() . \"\n\t\t\t\t\tOR project_id=0)\n\t\t\t\t\tAND name!=''\n\t\t\t\t\tORDER BY is_public DESC, name ASC\";\n\t$result = db_query_bound( $query, Array( $t_project_id ) );\n\t$query_count = db_num_rows( $result );\n\n\tfor( $i = 0;$i < $query_count;$i++ ) {\n\t\t$row = db_fetch_array( $result );\n\t\tif(( $row['user_id'] == $t_user_id ) || db_prepare_bool( $row['is_public'] ) ) {\n\t\t\t$t_overall_query_arr[$row['id']] = $row['name'];\n\t\t}\n\t}\n\n\t$t_overall_query_arr = array_unique( $t_overall_query_arr );\n\tasort( $t_overall_query_arr );\n\n\treturn $t_overall_query_arr;\n}\n\n/**\n * @param str $p_name\n * @return bool true when under max_length (64) and false when over\n */\nfunction filter_name_valid_length( $p_name ) {\n\tif( utf8_strlen( $p_name ) > 64 ) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n"], "filenames": ["core/filter_api.php"], "buggy_code_start_loc": [2201], "buggy_code_end_loc": [4280], "fixing_code_start_loc": [2201], "fixing_code_end_loc": [4280], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in filter_api.php in MantisBT before 1.2.7 allow remote attackers to inject arbitrary web script or HTML via a parameter, as demonstrated by the project_id parameter to search.php.", "other": {"cve": {"id": "CVE-2011-2938", "sourceIdentifier": "secalert@redhat.com", "published": "2011-09-21T16:55:04.100", "lastModified": "2013-08-27T03:15:44.177", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in filter_api.php in MantisBT before 1.2.7 allow remote attackers to inject arbitrary web script or HTML via a parameter, as demonstrated by the project_id parameter to search.php."}, {"lang": "es", "value": "Varias vulnerabilidades de ejecuci\u00f3n de comandos en sitios cruzados (XSS) en filter_api.php en MantisBT antes de la versi\u00f3n v1.2.7 permite a atacantes remotos inyectar secuencias de comandos web o HTML a trav\u00e9s de un par\u00e1metro, tal y como se demuestra por el par\u00e1metro project_id a search.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.6", "matchCriteriaId": "BE0A36B6-B2BE-45C0-91CE-3E264CECAF9D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:0.19.3:*:*:*:*:*:*:*", "matchCriteriaId": "85A3FBD5-163C-4990-B809-A5C9C81A3C6C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:0.19.4:*:*:*:*:*:*:*", "matchCriteriaId": "D3FDF456-9648-4A7C-B15A-2828A32D4962"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "6B2602F7-2D93-4E1E-9425-4EDD23752029"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "86DE3BE3-D6C9-4905-9E61-B70776460604"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "F128A2E2-D509-4B50-95C2-1A31C5B3B31F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "140D5F68-1CAB-458C-BC8B-4F726D657FE8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "0D25F4F5-7678-41C1-93CB-305883A08527"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.5:*:*:*:*:*:*:*", "matchCriteriaId": "D1A1316D-314B-4740-A836-D5E6319F4B28"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.6:*:*:*:*:*:*:*", "matchCriteriaId": "DBD27CCE-28C4-43CC-8CBD-D7FFB46171AC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "97298C43-B881-4C11-ADB6-17A8E43EB84E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.8:*:*:*:*:*:*:*", "matchCriteriaId": "7257ADD7-C9B7-4F85-AA13-615DD033FD5C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "02FE950B-5E29-4FAA-9BE5-79F38B4C38F7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "D6F2BA78-D054-4E49-ABCA-637922898BF7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.2:*:*:*:*:*:*:*", "matchCriteriaId": "4595B1E3-25AB-489E-A847-FDBF2554DD6D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.4:*:*:*:*:*:*:*", "matchCriteriaId": "C11A8F17-5253-475B-89FF-A26EA7531E13"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.5:*:*:*:*:*:*:*", "matchCriteriaId": "4A88B09D-CDCF-45FD-B004-13B597DA4F48"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.6:*:*:*:*:*:*:*", "matchCriteriaId": "49583BE8-B832-4E9F-B154-47A26C72489D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.7:*:*:*:*:*:*:*", "matchCriteriaId": "E2501F40-3630-4528-BE0A-61D4BB6EC7FE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.8:*:*:*:*:*:*:*", "matchCriteriaId": "9223DAF7-D03E-4A4E-8AB5-5CEB87DFF2C3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "CFF77ABF-0A03-437A-B241-1EF2BBB83D24"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "5F096CD6-534E-4ABF-B2DF-D4B55B8C5F6A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.2:*:*:*:*:*:*:*", "matchCriteriaId": "A66AB537-6FBA-4A51-B10C-BF61F54BC01B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.3:*:*:*:*:*:*:*", "matchCriteriaId": "A50835BF-D28B-47FF-81F0-C34D95D6F2E9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.4:*:*:*:*:*:*:*", "matchCriteriaId": "BA0EB9A6-1DFD-4C17-A002-0899DA252A56"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.5:*:*:*:*:*:*:*", "matchCriteriaId": "BBA33285-3EE7-43FD-8347-E7D9A18DC134"}]}]}], "references": [{"url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-September/066061.html", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://packetstormsecurity.org/files/104149", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://security.gentoo.org/glsa/glsa-201211-01.xml", "source": "secalert@redhat.com"}, {"url": "http://securityreason.com/securityalert/8391", "source": "secalert@redhat.com"}, {"url": "http://www.mantisbt.org/bugs/view.php?id=13245", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.openwall.com/lists/oss-security/2011/08/18/7", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://www.openwall.com/lists/oss-security/2011/08/19/16", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://www.securityfocus.com/bid/49235", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "https://bugs.gentoo.org/show_bug.cgi?id=379739", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://bugs.launchpad.net/ubuntu/+source/mantis/+bug/828857", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=731777", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/317f3db3a3c68775de3acf3b15f55b1e3c18f93b", "source": "secalert@redhat.com", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/mantisbt/mantisbt/commit/317f3db3a3c68775de3acf3b15f55b1e3c18f93b"}}