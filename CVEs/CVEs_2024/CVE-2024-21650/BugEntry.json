{"buggy_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.administration.test.ui;\n\nimport java.util.List;\nimport java.util.stream.Stream;\n\nimport org.junit.jupiter.api.Order;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.Arguments;\nimport org.junit.jupiter.params.provider.MethodSource;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebElement;\nimport org.xwiki.administration.test.po.RegistrationModal;\nimport org.xwiki.test.docker.junit5.UITest;\nimport org.xwiki.test.ui.TestUtils;\nimport org.xwiki.test.ui.po.AbstractRegistrationPage;\nimport org.xwiki.test.ui.po.RegistrationPage;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Test the user registration feature.\n * <p>\n * The tests in this class are parametrized with the values:\n * <ul>\n *   <li><b>useLiveValidation:</b> when {@code true} activates the client side validation of the registration form</li>\n *   <li>\n *     <b>isModal:</b> when {@code true} the user creation modal from the administration is used, otherwise the guest\n *     user registration form is used\n *   </li>\n * </ul>\n * <p>\n * Three combinations of these parameters are tested:\n * <ul>\n *   <li>useLiveValidation + !isModal</li>\n *   <li>!useLiveValidation + !isModal</li>\n *   <li>useLiveValidation + isModal</li>\n * </ul>\n *\n * @version $Id$\n * @since 13.4RC1\n * @since 12.10.8\n */\n@UITest\nclass RegisterIT\n{\n    /**\n     * Returns a stream of combinations of parameters to test. The first value is {@code useLiveValidation} and the\n     * second {@code isModal}.\n     *\n     * @return the tested combination of {@code useLiveValidation} and {@code isModal}\n     */\n    private static Stream<Arguments> testsParameters()\n    {\n        return Stream.of(\n            Arguments.of(true, false),\n            Arguments.of(false, false),\n            Arguments.of(true, true)\n        );\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(1)\n    void registerJohnSmith(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        assertTrue(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        tryToLoginAsJohnSmith(testUtils, registrationPage);\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(2)\n    void registerExistingUser(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n\n        // Uses the empty string instead of the null value to empty the form fields (the null value just keep the value filled from the previously run test).\n        registrationPage.fillRegisterForm(\"\", \"\", \"Admin\", \"password\", \"password\", \"\");\n        // Can't use validateAndRegister here because user existence is not checked by LiveValidation.\n        assertFalse(tryToRegister(testUtils, registrationPage, isModal));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"User already exists.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(3)\n    void registerPasswordTooShort(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, \"short\", \"short\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(\n            registrationPage.validationFailureMessagesInclude(\"Your new password must be at least 6 characters long.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(4)\n    void registerDifferentPasswords(boolean useLiveValidation, boolean isModal, TestUtils testUtils)\n        throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, null, \"DifferentPassword\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"The two passwords do not match.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(5)\n    void registerEmptyPassword(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, \"\", \"\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"This field is required.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(6)\n    void registerEmptyUserName(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        // A piece of javascript fills in the username with the first and last names so we will empty them.\n        registrationPage.fillRegisterForm(\"\", \"\", \"\", null, null, null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"This field is required.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(7)\n    void registerInvalidEmail(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, null, null, \"not an email address\");\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"Please enter a valid email address.\"));\n    }\n\n    private AbstractRegistrationPage setUp(TestUtils testUtils, boolean useLiveValidation, boolean isModal)\n        throws Exception\n    {\n        // We create the admin user because it is expected to exist when testing the registration of an existing user.\n        testUtils.loginAsSuperAdmin();\n        testUtils.createAdminUser();\n        deleteJohnSmith(testUtils);\n        testUtils.updateObject(\"XWiki\", \"RegistrationConfig\", \"XWiki.Registration\", 0, \"liveValidation_enabled\",\n            useLiveValidation);\n        switchUser(testUtils, isModal);\n        testUtils.recacheSecretToken();\n        AbstractRegistrationPage registrationPage = this.getRegistrationPage(isModal);\n        // The prepareName javascript function is the cause of endless flickering since it tries to suggest a username\n        // every time the field is focused.\n        testUtils.getDriver().executeJavascript(\"document.getElementById('xwikiname').onfocus = null;\");\n        registrationPage.fillInJohnSmithValues();\n        return registrationPage;\n    }\n\n    /**\n     * Become the user needed for the test. Superadmin when testing the user creation from the administration modal,\n     * guest when testing the user registration page.\n     */\n    private void switchUser(TestUtils testUtils, boolean isModal)\n    {\n        // The test of the standard registration for must be done with the guest user.\n        // The test of the user creation in a modal from the administration must be done with an user that \n        // has admin rights.\n        if (!isModal) {\n            // Fast Logout.\n            testUtils.forceGuestUser();\n        } else {\n            testUtils.loginAsSuperAdmin();\n        }\n    }\n\n    private AbstractRegistrationPage getRegistrationPage(boolean isModal)\n    {\n        // When testing the modal, we go the the user section of the administration.\n        // Otherwise, we test the guest user registration form.\n        if (isModal) {\n            return RegistrationModal.gotoPage();\n        } else {\n            return RegistrationPage.gotoPage();\n        }\n    }\n\n    /**\n     * If LiveValidation is enabled then it will check that there are no failures with that. If no failures then hits\n     * register button, it then asserts that hitting the register button did not reveal any failures not caught by\n     * LiveValidation. If LiveValidation is disabled then just hits the register button.\n     */\n    private boolean validateAndRegister(TestUtils testUtils, boolean useLiveValidation, boolean isModal,\n        AbstractRegistrationPage registrationPage)\n    {\n        if (useLiveValidation) {\n            registrationPage.triggerLiveValidation();\n            if (!registrationPage.getValidationFailureMessages().isEmpty()) {\n                return false;\n            }\n            boolean result = tryToRegister(testUtils, registrationPage, isModal);\n\n            assertTrue(registrationPage.getValidationFailureMessages().isEmpty(),\n                \"LiveValidation did not show a failure message but clicking on the register button did.\");\n\n            return result;\n        }\n        return tryToRegister(testUtils, registrationPage, isModal);\n    }\n\n    private boolean tryToRegister(TestUtils testUtils, AbstractRegistrationPage registrationPage, boolean isModal)\n    {\n        if (isModal) {\n            return administrationModalUserCreation(testUtils, registrationPage);\n        } else {\n            return guestUserRegistration(testUtils, registrationPage);\n        }\n    }\n\n    private boolean administrationModalUserCreation(TestUtils testUtils, AbstractRegistrationPage registrationPage)\n    {\n        registrationPage.clickRegister();\n\n        // Wait until one of the following happens:\n        testUtils.getDriver().waitUntilElementsAreVisible(new By[] {\n            // A live validation error message appears.\n            By.cssSelector(\"dd > span.LV_validation_message.LV_invalid\"),\n            // The operation fails on the server.\n            By.cssSelector(\".xnotification-error\"),\n            // The operation succeeds.\n            By.cssSelector(\".xnotification-done\")\n        }, false);\n\n        try {\n            // Try to hide the success message by clicking on it.\n            testUtils.getDriver().findElementWithoutWaiting(\n                By.xpath(\"//div[contains(@class,'xnotification-done') and contains(., 'User created')]\")).click();\n            // If we get here it means the registration was successful.\n            return true;\n        } catch (NoSuchElementException e) {\n            return false;\n        }\n    }\n\n    private boolean guestUserRegistration(TestUtils testUtils, AbstractRegistrationPage registrationPage)\n    {\n        registrationPage.clickRegister();\n\n        List<WebElement> infos = testUtils.getDriver().findElements(By.className(\"infomessage\"));\n        for (WebElement info : infos) {\n            if (info.getText().contains(\"Registration successful.\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private void tryToLoginAsJohnSmith(TestUtils testUtils, AbstractRegistrationPage registrationPage)\n    {\n        // Fast logout.\n        testUtils.forceGuestUser();\n        testUtils.getDriver().get(testUtils.getURLToLoginAs(\"JohnSmith\", \"WeakPassword\"));\n        assertTrue(registrationPage.isAuthenticated());\n        testUtils.recacheSecretToken();\n        testUtils.setDefaultCredentials(\"JohnSmith\", \"WeakPassword\");\n    }\n\n    /**\n     * Deletes JohnSmith if it exists, leaves the driver on undefined page.\n     */\n    private void deleteJohnSmith(TestUtils testUtils) throws Exception\n    {\n        testUtils.loginAsSuperAdmin();\n        testUtils.rest().deletePage(\"XWiki\", \"JohnSmith\");\n    }\n}\n", "<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.4\" reference=\"XWiki.RegistrationConfig\" locale=\"\">\n  <web>XWiki</web>\n  <name>RegistrationConfig</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>XWiki.WebHome</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>Registration Configuration</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.0</syntaxId>\n  <hidden>true</hidden>\n  <content>{{info}}This page contains a configuration object for [[XWiki.Registration&gt;&gt;XWiki.Registration]], You can configure [[XWiki.Registration&gt;&gt;XWiki.Registration]] from the [[registration section of the administration application&gt;&gt;XWiki.XWikiPreferences?section=Registration&amp;editor=globaladmin]].{{/info}}</content>\n  <object>\n    <name>XWiki.RegistrationConfig</name>\n    <number>0</number>\n    <className>XWiki.ConfigurableClass</className>\n    <guid>d045822c-8279-4176-a382-1f153512898d</guid>\n    <class>\n      <name>XWiki.ConfigurableClass</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <categoryIcon>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>categoryIcon</name>\n        <number>11</number>\n        <picker>0</picker>\n        <prettyName>categoryIcon</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </categoryIcon>\n      <codeToExecute>\n        <contenttype>VelocityWiki</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>---</editor>\n        <hint/>\n        <name>codeToExecute</name>\n        <number>7</number>\n        <picker>0</picker>\n        <prettyName>codeToExecute</prettyName>\n        <rows>5</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </codeToExecute>\n      <configurationClass>\n        <cache>0</cache>\n        <classname/>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>input</displayType>\n        <freeText/>\n        <hint/>\n        <idField/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>0</multiSelect>\n        <name>configurationClass</name>\n        <number>3</number>\n        <picker>1</picker>\n        <prettyName>configurationClass</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators/>\n        <size>30</size>\n        <sort>none</sort>\n        <sql/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <valueField/>\n        <classType>com.xpn.xwiki.objects.classes.PageClass</classType>\n      </configurationClass>\n      <displayBeforeCategory>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayBeforeCategory</name>\n        <number>10</number>\n        <picker>0</picker>\n        <prettyName>displayBeforeCategory</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayBeforeCategory>\n      <displayInCategory>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayInCategory</name>\n        <number>9</number>\n        <picker>0</picker>\n        <prettyName>displayInCategory</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayInCategory>\n      <displayInSection>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayInSection</name>\n        <number>1</number>\n        <picker>0</picker>\n        <prettyName>displayInSection</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayInSection>\n      <heading>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>heading</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>heading</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </heading>\n      <iconAttachment>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>iconAttachment</name>\n        <number>8</number>\n        <picker>0</picker>\n        <prettyName>iconAttachment</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </iconAttachment>\n      <linkPrefix>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>linkPrefix</name>\n        <number>5</number>\n        <picker>0</picker>\n        <prettyName>linkPrefix</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </linkPrefix>\n      <propertiesToShow>\n        <cache>0</cache>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>input</displayType>\n        <freeText/>\n        <hint/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>1</multiSelect>\n        <name>propertiesToShow</name>\n        <number>6</number>\n        <picker>0</picker>\n        <prettyName>propertiesToShow</prettyName>\n        <relationalStorage>1</relationalStorage>\n        <separator> </separator>\n        <separators> ,|</separators>\n        <size>20</size>\n        <sort>none</sort>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <values/>\n        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>\n      </propertiesToShow>\n      <scope>\n        <cache>0</cache>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>select</displayType>\n        <freeText/>\n        <hint/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>0</multiSelect>\n        <name>scope</name>\n        <number>12</number>\n        <picker>1</picker>\n        <prettyName>scope</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators>|, </separators>\n        <size>1</size>\n        <sort/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <values>WIKI|SPACE|ALL_SPACES|WIKI+ALL_SPACES</values>\n        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>\n      </scope>\n      <sectionOrder>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>sectionOrder</name>\n        <number>12</number>\n        <numberType>integer</numberType>\n        <prettyName>sectionOrder</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </sectionOrder>\n    </class>\n    <property>\n      <categoryIcon/>\n    </property>\n    <property>\n      <codeToExecute/>\n    </property>\n    <property>\n      <configurationClass>XWiki.Registration</configurationClass>\n    </property>\n    <property>\n      <displayBeforeCategory/>\n    </property>\n    <property>\n      <displayInCategory/>\n    </property>\n    <property>\n      <displayInSection>Registration</displayInSection>\n    </property>\n    <property>\n      <heading/>\n    </property>\n    <property>\n      <iconAttachment/>\n    </property>\n    <property>\n      <linkPrefix/>\n    </property>\n    <property>\n      <propertiesToShow/>\n    </property>\n    <property>\n      <scope>WIKI</scope>\n    </property>\n    <property>\n      <sectionOrder/>\n    </property>\n  </object>\n  <object>\n    <name>XWiki.RegistrationConfig</name>\n    <number>0</number>\n    <className>XWiki.Registration</className>\n    <guid>1a0c3cf7-de63-4f07-8a74-5c30bf880641</guid>\n    <class>\n      <name>XWiki.Registration</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <defaultRedirect>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>defaultRedirect</name>\n        <number>7</number>\n        <picker>0</picker>\n        <prettyName>Redirect here after registration</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </defaultRedirect>\n      <heading>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>heading</name>\n        <number>1</number>\n        <picker>0</picker>\n        <prettyName>Registration page heading</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </heading>\n      <liveValidation_defaultFieldOkMessage>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>liveValidation_defaultFieldOkMessage</name>\n        <number>4</number>\n        <picker>0</picker>\n        <prettyName>Default field okay message</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </liveValidation_defaultFieldOkMessage>\n      <liveValidation_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>liveValidation_enabled</name>\n        <number>3</number>\n        <prettyName>Enable Javascript field validation</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </liveValidation_enabled>\n      <loginButton_autoLogin_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>loginButton_autoLogin_enabled</name>\n        <number>6</number>\n        <prettyName>Enable automatic login</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </loginButton_autoLogin_enabled>\n      <loginButton_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>loginButton_enabled</name>\n        <number>5</number>\n        <prettyName>Enable login button</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </loginButton_enabled>\n      <passwordLength>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>passwordLength</name>\n        <number>10</number>\n        <numberType>integer</numberType>\n        <prettyName>Require a password with the given length</prettyName>\n        <size>10</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </passwordLength>\n      <passwordRuleOneLowerCaseEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneLowerCaseEnabled</name>\n        <number>11</number>\n        <prettyName>Require at least one lower case character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneLowerCaseEnabled>\n      <passwordRuleOneNumberEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneNumberEnabled</name>\n        <number>13</number>\n        <prettyName>Require at least one number in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneNumberEnabled>\n      <passwordRuleOneSymbolEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneSymbolEnabled</name>\n        <number>14</number>\n        <prettyName>Require at least one symbol character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneSymbolEnabled>\n      <passwordRuleOneUpperCaseEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneUpperCaseEnabled</name>\n        <number>12</number>\n        <prettyName>Require at least one upper case character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneUpperCaseEnabled>\n      <registrationSuccessMessage>\n        <contenttype>---</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>PureText</editor>\n        <hint/>\n        <name>registrationSuccessMessage</name>\n        <number>9</number>\n        <picker>0</picker>\n        <prettyName>Registration Successful Message</prettyName>\n        <rows>12</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </registrationSuccessMessage>\n      <requireCaptcha>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>requireCaptcha</name>\n        <number>8</number>\n        <prettyName>Require CAPTCHA to register</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </requireCaptcha>\n      <welcomeMessage>\n        <contenttype>---</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>PureText</editor>\n        <hint/>\n        <name>welcomeMessage</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Welcome message</prettyName>\n        <rows>12</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </welcomeMessage>\n    </class>\n    <property>\n      <defaultRedirect>$xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI')))</defaultRedirect>\n    </property>\n    <property>\n      <heading>$services.localization.render('core.register.title')</heading>\n    </property>\n    <property>\n      <liveValidation_defaultFieldOkMessage>$services.localization.render('core.validation.valid.message')</liveValidation_defaultFieldOkMessage>\n    </property>\n    <property>\n      <liveValidation_enabled>1</liveValidation_enabled>\n    </property>\n    <property>\n      <loginButton_autoLogin_enabled>0</loginButton_autoLogin_enabled>\n    </property>\n    <property>\n      <loginButton_enabled>1</loginButton_enabled>\n    </property>\n    <property>\n      <passwordLength>6</passwordLength>\n    </property>\n    <property>\n      <passwordRuleOneLowerCaseEnabled>0</passwordRuleOneLowerCaseEnabled>\n    </property>\n    <property>\n      <passwordRuleOneNumberEnabled>0</passwordRuleOneNumberEnabled>\n    </property>\n    <property>\n      <passwordRuleOneSymbolEnabled>0</passwordRuleOneSymbolEnabled>\n    </property>\n    <property>\n      <passwordRuleOneUpperCaseEnabled>0</passwordRuleOneUpperCaseEnabled>\n    </property>\n    <property>\n      <registrationSuccessMessage>#set($fullName = \"$request.get('register_first_name') $request.get('register_last_name')\")\n{{info}}$services.localization.render('core.register.successful', [\"[[$fullName&gt;&gt;$userSpace$userName]]\", $userName]){{/info}}</registrationSuccessMessage>\n    </property>\n    <property>\n      <requireCaptcha>0</requireCaptcha>\n    </property>\n    <property>\n      <welcomeMessage>{{translation key=\"core.register.welcome\"/}}</welcomeMessage>\n    </property>\n  </object>\n</xwikidoc>\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.test.ui.po;\n\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.FindBy;\n\n/**\n * Represents the actions possible on the Registration Page\n * \n * @version $Id$\n * @since 3.2M3\n */\npublic class RegistrationPage extends AbstractRegistrationPage\n{\n    @FindBy(css = \"form#register input[type='submit']\")\n    private WebElement submitButton;\n\n    /**\n     * To put the registration page someplace else, subclass this class and change this method.\n     */\n    public static RegistrationPage gotoPage()\n    {\n        getUtil().gotoPage(\"XWiki\", \"Register\", \"register\");\n        return new RegistrationPage();\n    }\n\n    @Override\n    public void clickRegister()\n    {\n        this.submitButton.click();\n    }\n}\n"], "fixing_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.administration.test.ui;\n\nimport java.util.stream.Stream;\n\nimport org.junit.jupiter.api.Order;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.Arguments;\nimport org.junit.jupiter.params.provider.MethodSource;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.xwiki.administration.test.po.RegistrationModal;\nimport org.xwiki.test.docker.junit5.UITest;\nimport org.xwiki.test.ui.TestUtils;\nimport org.xwiki.test.ui.po.AbstractRegistrationPage;\nimport org.xwiki.test.ui.po.RegistrationPage;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n * Test the user registration feature.\n * <p>\n * The tests in this class are parametrized with the values:\n * <ul>\n *   <li><b>useLiveValidation:</b> when {@code true} activates the client side validation of the registration form</li>\n *   <li>\n *     <b>isModal:</b> when {@code true} the user creation modal from the administration is used, otherwise the guest\n *     user registration form is used\n *   </li>\n * </ul>\n * <p>\n * Three combinations of these parameters are tested:\n * <ul>\n *   <li>useLiveValidation + !isModal</li>\n *   <li>!useLiveValidation + !isModal</li>\n *   <li>useLiveValidation + isModal</li>\n * </ul>\n *\n * @version $Id$\n * @since 13.4RC1\n * @since 12.10.8\n */\n@UITest\nclass RegisterIT\n{\n    /**\n     * Returns a stream of combinations of parameters to test. The first value is {@code useLiveValidation} and the\n     * second {@code isModal}.\n     *\n     * @return the tested combination of {@code useLiveValidation} and {@code isModal}\n     */\n    private static Stream<Arguments> testsParameters()\n    {\n        return Stream.of(\n            Arguments.of(true, false),\n            Arguments.of(false, false),\n            Arguments.of(true, true)\n        );\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(1)\n    void registerJohnSmith(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        assertTrue(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        tryToLoginAsJohnSmith(testUtils, registrationPage);\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(2)\n    void registerExistingUser(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n\n        // Uses the empty string instead of the null value to empty the form fields (the null value just keep the value filled from the previously run test).\n        registrationPage.fillRegisterForm(\"\", \"\", \"Admin\", \"password\", \"password\", \"\");\n        // Can't use validateAndRegister here because user existence is not checked by LiveValidation.\n        assertFalse(tryToRegister(testUtils, registrationPage, isModal));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"User already exists.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(3)\n    void registerPasswordTooShort(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, \"short\", \"short\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(\n            registrationPage.validationFailureMessagesInclude(\"Your new password must be at least 6 characters long.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(4)\n    void registerDifferentPasswords(boolean useLiveValidation, boolean isModal, TestUtils testUtils)\n        throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, null, \"DifferentPassword\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"The two passwords do not match.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(5)\n    void registerEmptyPassword(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, \"\", \"\", null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"This field is required.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(6)\n    void registerEmptyUserName(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        // A piece of javascript fills in the username with the first and last names so we will empty them.\n        registrationPage.fillRegisterForm(\"\", \"\", \"\", null, null, null);\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"This field is required.\"));\n    }\n\n    @ParameterizedTest\n    @MethodSource(\"testsParameters\")\n    @Order(7)\n    void registerInvalidEmail(boolean useLiveValidation, boolean isModal, TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, useLiveValidation, isModal);\n        registrationPage.fillRegisterForm(null, null, null, null, null, \"not an email address\");\n        assertFalse(validateAndRegister(testUtils, useLiveValidation, isModal, registrationPage));\n        assertTrue(registrationPage.validationFailureMessagesInclude(\"Please enter a valid email address.\"));\n    }\n\n    @Test\n    @Order(8)\n    void registerWikiSyntaxName(TestUtils testUtils) throws Exception\n    {\n        AbstractRegistrationPage registrationPage = setUp(testUtils, false, false);\n        String password = \"SomePassword\";\n        String firstName = \"]]{{/html}}{{html clean=false}}HT&amp;ML\";\n        String lastName = \"]]{{/html}}\";\n        String username = \"WikiSyntaxName\";\n        registrationPage.fillRegisterForm(firstName, lastName, username, password, password, \"wiki@example.com\");\n        assertTrue(validateAndRegister(testUtils, false, false, registrationPage));\n\n        assertEquals(String.format(\"%s %s (%s): Registration successful.\", firstName, lastName, username),\n            ((RegistrationPage) registrationPage).getRegistrationSuccessMessage().orElseThrow());\n    }\n\n    private AbstractRegistrationPage setUp(TestUtils testUtils, boolean useLiveValidation, boolean isModal)\n        throws Exception\n    {\n        // We create the admin user because it is expected to exist when testing the registration of an existing user.\n        testUtils.loginAsSuperAdmin();\n        testUtils.createAdminUser();\n        deleteJohnSmith(testUtils);\n        testUtils.updateObject(\"XWiki\", \"RegistrationConfig\", \"XWiki.Registration\", 0, \"liveValidation_enabled\",\n            useLiveValidation);\n        switchUser(testUtils, isModal);\n        testUtils.recacheSecretToken();\n        AbstractRegistrationPage registrationPage = this.getRegistrationPage(isModal);\n        // The prepareName javascript function is the cause of endless flickering since it tries to suggest a username\n        // every time the field is focused.\n        testUtils.getDriver().executeJavascript(\"document.getElementById('xwikiname').onfocus = null;\");\n        registrationPage.fillInJohnSmithValues();\n        return registrationPage;\n    }\n\n    /**\n     * Become the user needed for the test. Superadmin when testing the user creation from the administration modal,\n     * guest when testing the user registration page.\n     */\n    private void switchUser(TestUtils testUtils, boolean isModal)\n    {\n        // The test of the standard registration for must be done with the guest user.\n        // The test of the user creation in a modal from the administration must be done with an user that \n        // has admin rights.\n        if (!isModal) {\n            // Fast Logout.\n            testUtils.forceGuestUser();\n        } else {\n            testUtils.loginAsSuperAdmin();\n        }\n    }\n\n    private AbstractRegistrationPage getRegistrationPage(boolean isModal)\n    {\n        // When testing the modal, we go the the user section of the administration.\n        // Otherwise, we test the guest user registration form.\n        if (isModal) {\n            return RegistrationModal.gotoPage();\n        } else {\n            return RegistrationPage.gotoPage();\n        }\n    }\n\n    /**\n     * If LiveValidation is enabled then it will check that there are no failures with that. If no failures then hits\n     * register button, it then asserts that hitting the register button did not reveal any failures not caught by\n     * LiveValidation. If LiveValidation is disabled then just hits the register button.\n     */\n    private boolean validateAndRegister(TestUtils testUtils, boolean useLiveValidation, boolean isModal,\n        AbstractRegistrationPage registrationPage)\n    {\n        if (useLiveValidation) {\n            registrationPage.triggerLiveValidation();\n            if (!registrationPage.getValidationFailureMessages().isEmpty()) {\n                return false;\n            }\n            boolean result = tryToRegister(testUtils, registrationPage, isModal);\n\n            assertTrue(registrationPage.getValidationFailureMessages().isEmpty(),\n                \"LiveValidation did not show a failure message but clicking on the register button did.\");\n\n            return result;\n        }\n        return tryToRegister(testUtils, registrationPage, isModal);\n    }\n\n    private boolean tryToRegister(TestUtils testUtils, AbstractRegistrationPage registrationPage, boolean isModal)\n    {\n        if (isModal) {\n            return administrationModalUserCreation(testUtils, registrationPage);\n        } else {\n            return guestUserRegistration(registrationPage);\n        }\n    }\n\n    private boolean administrationModalUserCreation(TestUtils testUtils, AbstractRegistrationPage registrationPage)\n    {\n        registrationPage.clickRegister();\n\n        // Wait until one of the following happens:\n        testUtils.getDriver().waitUntilElementsAreVisible(new By[] {\n            // A live validation error message appears.\n            By.cssSelector(\"dd > span.LV_validation_message.LV_invalid\"),\n            // The operation fails on the server.\n            By.cssSelector(\".xnotification-error\"),\n            // The operation succeeds.\n            By.cssSelector(\".xnotification-done\")\n        }, false);\n\n        try {\n            // Try to hide the success message by clicking on it.\n            testUtils.getDriver().findElementWithoutWaiting(\n                By.xpath(\"//div[contains(@class,'xnotification-done') and contains(., 'User created')]\")).click();\n            // If we get here it means the registration was successful.\n            return true;\n        } catch (NoSuchElementException e) {\n            return false;\n        }\n    }\n\n    private boolean guestUserRegistration(AbstractRegistrationPage registrationPage)\n    {\n        registrationPage.clickRegister();\n\n        return ((RegistrationPage) registrationPage).getRegistrationSuccessMessage().isPresent();\n    }\n\n    private void tryToLoginAsJohnSmith(TestUtils testUtils, AbstractRegistrationPage registrationPage)\n    {\n        // Fast logout.\n        testUtils.forceGuestUser();\n        testUtils.getDriver().get(testUtils.getURLToLoginAs(\"JohnSmith\", \"WeakPassword\"));\n        assertTrue(registrationPage.isAuthenticated());\n        testUtils.recacheSecretToken();\n        testUtils.setDefaultCredentials(\"JohnSmith\", \"WeakPassword\");\n    }\n\n    /**\n     * Deletes JohnSmith if it exists, leaves the driver on undefined page.\n     */\n    private void deleteJohnSmith(TestUtils testUtils) throws Exception\n    {\n        testUtils.loginAsSuperAdmin();\n        testUtils.rest().deletePage(\"XWiki\", \"JohnSmith\");\n    }\n}\n", "<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.4\" reference=\"XWiki.RegistrationConfig\" locale=\"\">\n  <web>XWiki</web>\n  <name>RegistrationConfig</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>XWiki.WebHome</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>Registration Configuration</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.0</syntaxId>\n  <hidden>true</hidden>\n  <content>{{info}}This page contains a configuration object for [[XWiki.Registration&gt;&gt;XWiki.Registration]], You can configure [[XWiki.Registration&gt;&gt;XWiki.Registration]] from the [[registration section of the administration application&gt;&gt;XWiki.XWikiPreferences?section=Registration&amp;editor=globaladmin]].{{/info}}</content>\n  <object>\n    <name>XWiki.RegistrationConfig</name>\n    <number>0</number>\n    <className>XWiki.ConfigurableClass</className>\n    <guid>d045822c-8279-4176-a382-1f153512898d</guid>\n    <class>\n      <name>XWiki.ConfigurableClass</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <categoryIcon>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>categoryIcon</name>\n        <number>11</number>\n        <picker>0</picker>\n        <prettyName>categoryIcon</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </categoryIcon>\n      <codeToExecute>\n        <contenttype>VelocityWiki</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>---</editor>\n        <hint/>\n        <name>codeToExecute</name>\n        <number>7</number>\n        <picker>0</picker>\n        <prettyName>codeToExecute</prettyName>\n        <rows>5</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </codeToExecute>\n      <configurationClass>\n        <cache>0</cache>\n        <classname/>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>input</displayType>\n        <freeText/>\n        <hint/>\n        <idField/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>0</multiSelect>\n        <name>configurationClass</name>\n        <number>3</number>\n        <picker>1</picker>\n        <prettyName>configurationClass</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators/>\n        <size>30</size>\n        <sort>none</sort>\n        <sql/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <valueField/>\n        <classType>com.xpn.xwiki.objects.classes.PageClass</classType>\n      </configurationClass>\n      <displayBeforeCategory>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayBeforeCategory</name>\n        <number>10</number>\n        <picker>0</picker>\n        <prettyName>displayBeforeCategory</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayBeforeCategory>\n      <displayInCategory>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayInCategory</name>\n        <number>9</number>\n        <picker>0</picker>\n        <prettyName>displayInCategory</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayInCategory>\n      <displayInSection>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>displayInSection</name>\n        <number>1</number>\n        <picker>0</picker>\n        <prettyName>displayInSection</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </displayInSection>\n      <heading>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>heading</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>heading</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </heading>\n      <iconAttachment>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>iconAttachment</name>\n        <number>8</number>\n        <picker>0</picker>\n        <prettyName>iconAttachment</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </iconAttachment>\n      <linkPrefix>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>linkPrefix</name>\n        <number>5</number>\n        <picker>0</picker>\n        <prettyName>linkPrefix</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </linkPrefix>\n      <propertiesToShow>\n        <cache>0</cache>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>input</displayType>\n        <freeText/>\n        <hint/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>1</multiSelect>\n        <name>propertiesToShow</name>\n        <number>6</number>\n        <picker>0</picker>\n        <prettyName>propertiesToShow</prettyName>\n        <relationalStorage>1</relationalStorage>\n        <separator> </separator>\n        <separators> ,|</separators>\n        <size>20</size>\n        <sort>none</sort>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <values/>\n        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>\n      </propertiesToShow>\n      <scope>\n        <cache>0</cache>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayType>select</displayType>\n        <freeText/>\n        <hint/>\n        <largeStorage>0</largeStorage>\n        <multiSelect>0</multiSelect>\n        <name>scope</name>\n        <number>12</number>\n        <picker>1</picker>\n        <prettyName>scope</prettyName>\n        <relationalStorage>0</relationalStorage>\n        <separator> </separator>\n        <separators>|, </separators>\n        <size>1</size>\n        <sort/>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <values>WIKI|SPACE|ALL_SPACES|WIKI+ALL_SPACES</values>\n        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>\n      </scope>\n      <sectionOrder>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>sectionOrder</name>\n        <number>12</number>\n        <numberType>integer</numberType>\n        <prettyName>sectionOrder</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </sectionOrder>\n    </class>\n    <property>\n      <categoryIcon/>\n    </property>\n    <property>\n      <codeToExecute/>\n    </property>\n    <property>\n      <configurationClass>XWiki.Registration</configurationClass>\n    </property>\n    <property>\n      <displayBeforeCategory/>\n    </property>\n    <property>\n      <displayInCategory/>\n    </property>\n    <property>\n      <displayInSection>Registration</displayInSection>\n    </property>\n    <property>\n      <heading/>\n    </property>\n    <property>\n      <iconAttachment/>\n    </property>\n    <property>\n      <linkPrefix/>\n    </property>\n    <property>\n      <propertiesToShow/>\n    </property>\n    <property>\n      <scope>WIKI</scope>\n    </property>\n    <property>\n      <sectionOrder/>\n    </property>\n  </object>\n  <object>\n    <name>XWiki.RegistrationConfig</name>\n    <number>0</number>\n    <className>XWiki.Registration</className>\n    <guid>1a0c3cf7-de63-4f07-8a74-5c30bf880641</guid>\n    <class>\n      <name>XWiki.Registration</name>\n      <customClass/>\n      <customMapping/>\n      <defaultViewSheet/>\n      <defaultEditSheet/>\n      <defaultWeb/>\n      <nameField/>\n      <validationScript/>\n      <defaultRedirect>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>defaultRedirect</name>\n        <number>7</number>\n        <picker>0</picker>\n        <prettyName>Redirect here after registration</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </defaultRedirect>\n      <heading>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>heading</name>\n        <number>1</number>\n        <picker>0</picker>\n        <prettyName>Registration page heading</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </heading>\n      <liveValidation_defaultFieldOkMessage>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>liveValidation_defaultFieldOkMessage</name>\n        <number>4</number>\n        <picker>0</picker>\n        <prettyName>Default field okay message</prettyName>\n        <size>30</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>\n      </liveValidation_defaultFieldOkMessage>\n      <liveValidation_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>liveValidation_enabled</name>\n        <number>3</number>\n        <prettyName>Enable Javascript field validation</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </liveValidation_enabled>\n      <loginButton_autoLogin_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>loginButton_autoLogin_enabled</name>\n        <number>6</number>\n        <prettyName>Enable automatic login</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </loginButton_autoLogin_enabled>\n      <loginButton_enabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>loginButton_enabled</name>\n        <number>5</number>\n        <prettyName>Enable login button</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </loginButton_enabled>\n      <passwordLength>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <hint/>\n        <name>passwordLength</name>\n        <number>10</number>\n        <numberType>integer</numberType>\n        <prettyName>Require a password with the given length</prettyName>\n        <size>10</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>\n      </passwordLength>\n      <passwordRuleOneLowerCaseEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneLowerCaseEnabled</name>\n        <number>11</number>\n        <prettyName>Require at least one lower case character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneLowerCaseEnabled>\n      <passwordRuleOneNumberEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneNumberEnabled</name>\n        <number>13</number>\n        <prettyName>Require at least one number in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneNumberEnabled>\n      <passwordRuleOneSymbolEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneSymbolEnabled</name>\n        <number>14</number>\n        <prettyName>Require at least one symbol character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneSymbolEnabled>\n      <passwordRuleOneUpperCaseEnabled>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>passwordRuleOneUpperCaseEnabled</name>\n        <number>12</number>\n        <prettyName>Require at least one upper case character in the password</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </passwordRuleOneUpperCaseEnabled>\n      <registrationSuccessMessage>\n        <contenttype>---</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>PureText</editor>\n        <hint/>\n        <name>registrationSuccessMessage</name>\n        <number>9</number>\n        <picker>0</picker>\n        <prettyName>Registration Successful Message</prettyName>\n        <rows>12</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </registrationSuccessMessage>\n      <requireCaptcha>\n        <customDisplay/>\n        <defaultValue/>\n        <disabled>0</disabled>\n        <displayFormType>checkbox</displayFormType>\n        <displayType/>\n        <hint/>\n        <name>requireCaptcha</name>\n        <number>8</number>\n        <prettyName>Require CAPTCHA to register</prettyName>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>\n      </requireCaptcha>\n      <welcomeMessage>\n        <contenttype>---</contenttype>\n        <customDisplay/>\n        <disabled>0</disabled>\n        <editor>PureText</editor>\n        <hint/>\n        <name>welcomeMessage</name>\n        <number>2</number>\n        <picker>0</picker>\n        <prettyName>Welcome message</prettyName>\n        <rows>12</rows>\n        <size>40</size>\n        <unmodifiable>0</unmodifiable>\n        <validationMessage/>\n        <validationRegExp/>\n        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>\n      </welcomeMessage>\n    </class>\n    <property>\n      <defaultRedirect>$xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI')))</defaultRedirect>\n    </property>\n    <property>\n      <heading>$services.localization.render('core.register.title')</heading>\n    </property>\n    <property>\n      <liveValidation_defaultFieldOkMessage>$services.localization.render('core.validation.valid.message')</liveValidation_defaultFieldOkMessage>\n    </property>\n    <property>\n      <liveValidation_enabled>1</liveValidation_enabled>\n    </property>\n    <property>\n      <loginButton_autoLogin_enabled>0</loginButton_autoLogin_enabled>\n    </property>\n    <property>\n      <loginButton_enabled>1</loginButton_enabled>\n    </property>\n    <property>\n      <passwordLength>6</passwordLength>\n    </property>\n    <property>\n      <passwordRuleOneLowerCaseEnabled>0</passwordRuleOneLowerCaseEnabled>\n    </property>\n    <property>\n      <passwordRuleOneNumberEnabled>0</passwordRuleOneNumberEnabled>\n    </property>\n    <property>\n      <passwordRuleOneSymbolEnabled>0</passwordRuleOneSymbolEnabled>\n    </property>\n    <property>\n      <passwordRuleOneUpperCaseEnabled>0</passwordRuleOneUpperCaseEnabled>\n    </property>\n    <property>\n      <registrationSuccessMessage>#set($message = $services.localization.render('core.register.successful', 'xwiki/2.1', ['USERLINK', $userName]))\n#set($userLink = $xwiki.getUserName(\"$userSpace$userName\"))\n{{info}}$message.replace('USERLINK', \"{{html clean=false}}$userLink{{/html}}\"){{/info}}</registrationSuccessMessage>\n    </property>\n    <property>\n      <requireCaptcha>0</requireCaptcha>\n    </property>\n    <property>\n      <welcomeMessage>{{translation key=\"core.register.welcome\"/}}</welcomeMessage>\n    </property>\n  </object>\n</xwikidoc>\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.test.ui.po;\n\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.FindBy;\n\n/**\n * Represents the actions possible on the Registration Page\n * \n * @version $Id$\n * @since 3.2M3\n */\npublic class RegistrationPage extends AbstractRegistrationPage\n{\n    @FindBy(css = \"form#register input[type='submit']\")\n    private WebElement submitButton;\n\n    /**\n     * To put the registration page someplace else, subclass this class and change this method.\n     */\n    public static RegistrationPage gotoPage()\n    {\n        getUtil().gotoPage(\"XWiki\", \"Register\", \"register\");\n        return new RegistrationPage();\n    }\n\n    @Override\n    public void clickRegister()\n    {\n        this.submitButton.click();\n    }\n\n    /**\n     * @since 14.10.17\n     * @since 15.5.3\n     * @since 15.8RC1\n     *\n     * @return the registration success message if present after submitting the registration form\n     */\n    public Optional<String> getRegistrationSuccessMessage()\n    {\n        List<WebElement> infos = getDriver().findElements(By.className(\"infomessage\"));\n        for (WebElement info : infos) {\n            if (info.getText().contains(\"Registration successful.\")) {\n                return Optional.of(info.getText());\n            }\n        }\n\n        return Optional.empty();\n    }\n}\n"], "filenames": ["xwiki-platform-core/xwiki-platform-administration/xwiki-platform-administration-test/xwiki-platform-administration-test-docker/src/test/it/org/xwiki/administration/test/ui/RegisterIT.java", "xwiki-platform-core/xwiki-platform-administration/xwiki-platform-administration-ui/src/main/resources/XWiki/RegistrationConfig.xml", "xwiki-platform-core/xwiki-platform-test/xwiki-platform-test-ui/src/main/java/org/xwiki/test/ui/po/RegistrationPage.java"], "buggy_code_start_loc": [22, 558, 21], "buggy_code_end_loc": [279, 560, 49], "fixing_code_start_loc": [21, 558, 22], "fixing_code_end_loc": [289, 561, 73], "type": "CWE-94", "message": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. XWiki is vulnerable to a remote code execution (RCE) attack through its user registration feature. This issue allows an attacker to execute arbitrary code by crafting malicious payloads in the \"first name\" or \"last name\" fields during user registration. This impacts all installations that have user registration enabled for guests. This vulnerability has been patched in XWiki 14.10.17, 15.5.3 and 15.8 RC1.", "other": {"cve": {"id": "CVE-2024-21650", "sourceIdentifier": "security-advisories@github.com", "published": "2024-01-08T16:15:46.903", "lastModified": "2024-01-11T18:46:08.260", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. XWiki is vulnerable to a remote code execution (RCE) attack through its user registration feature. This issue allows an attacker to execute arbitrary code by crafting malicious payloads in the \"first name\" or \"last name\" fields during user registration. This impacts all installations that have user registration enabled for guests. This vulnerability has been patched in XWiki 14.10.17, 15.5.3 and 15.8 RC1."}, {"lang": "es", "value": "XWiki Platform es una plataforma wiki gen\u00e9rica que ofrece servicios de ejecuci\u00f3n para aplicaciones creadas sobre ella. XWiki es vulnerable a un ataque de ejecuci\u00f3n remota de c\u00f3digo (RCE) a trav\u00e9s de su funci\u00f3n de registro de usuarios. Este problema permite a un atacante ejecutar c\u00f3digo arbitrario creando payloads maliciosos en los campos \"nombre\" o \"apellido\" durante el registro del usuario. Esto afecta a todas las instalaciones que tienen habilitado el registro de usuarios para invitados. Esta vulnerabilidad ha sido parcheada en XWiki 14.10.17, 15.5.3 y 15.8 RC1."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-95"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionEndExcluding": "14.10.17", "matchCriteriaId": "6129830D-3417-42C1-BBA7-0B7AA4930D1F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "15.0", "versionEndExcluding": "15.5.3", "matchCriteriaId": "71957800-CD2C-4FA4-8EB3-3F8F879ECFFC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "15.6", "versionEndIncluding": "15.7", "matchCriteriaId": "560CFF2F-148F-4C56-9E16-C43F77BF5B88"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/b290bfd573c6f7db6cc15a88dd4111d9fcad0d31", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rj7p-xjv7-7229", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-21173", "source": "security-advisories@github.com", "tags": ["Exploit", "Issue Tracking", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/b290bfd573c6f7db6cc15a88dd4111d9fcad0d31"}}