{"buggy_code": ["                                                         -*- coding: utf-8 -*-\n\nChanges with Apache 2.4.11\n  \n  *) SECURITY: CVE-2014-3583 (cve.mitre.org)\n     mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with \n     response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]\n\n  *) SECURITY: CVE-2014-3581 (cve.mitre.org)\n     mod_cache: Avoid a crash when Content-Type has an empty value.\n     PR 56924.  [Mark Montague <mark catseye.org>, Jan Kaluza]\n\n  *) SECURITY: CVE-2013-5704 (cve.mitre.org)\n     core: HTTP trailers could be used to replace HTTP headers\n     late during request processing, potentially undoing or\n     otherwise confusing modules that examined or modified\n     request headers earlier.  Adds \"MergeTrailers\" directive to restore\n     legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]\n\n  *) mod_proxy_fcgi, mod_authnz_fcgi: stop reading the response and issue an\n     error when parsing or forwarding the response fails. [Yann Ylavic]\n\n  *) mod_ssl: Fix a memory leak in case of graceful restarts with OpenSSL >= 0.9.8e\n     PR 53435 [tadanori <tadanori2007 yahoo.com>, Sebastian Wiedenroth <wiedi frubar.net>]\n\n  *) mod_proxy_connect: Don't issue AH02447 on sockets hangups, let the read\n     determine whether it is a normal close or a real error. PR 57168. [Yann\n     Ylavic]\n\n  *) mod_proxy_wstunnel: abort backend connection on polling error to avoid\n     further processing.  [Yann Ylavic]\n\n  *) core: Support custom ErrorDocuments for HTTP 501 and 414 status codes.\n     PR 57167 [Edward Lu <Chaosed0 gmail.com>]\n\n  *) mod_proxy_connect: Fix ProxyRemote to https:// backends on EBCDIC \n     systems. PR 57092 [Edward Lu <Chaosed0 gmail.com>]\n\n  *) mod_cache: Avoid a 304 response to an unconditional requst when an AH00752\n     CacheLock error occurs during cache revalidation. [Eric Covener]\n \n  *) mod_ssl: Move OCSP stapling information from a per-certificate store to\n     a per-server hash. PR 54357, PR 56919. [Alex Bligh <alex alex.org.uk>,\n     Yann Ylavic, Kaspar Brand]\n\n  *) mod_cache_socache: Change average object size hint from 32 bytes to\n     2048 bytes.  [Rainer Jung]\n\n  *) mod_cache_socache: Add cache status to server-status.  [Rainer Jung]\n\n  *) event: Fix worker-listener deadlock in graceful restart.\n     PR 56960.\n\n  *) Concat strings at compile time when possible. PR 53741.\n\n  *) mod_substitute: Restrict configuration in .htaccess to\n     FileInfo as documented.  [Rainer Jung]\n\n  *) mod_substitute: Make maximum line length configurable.  [Rainer Jung]\n\n  *) mod_substitute: Fix line length limitation in case of regexp plus flatten.\n     [Rainer Jung]\n  \n  *) mod_proxy: Truncated character worker names are no longer fatal\n     errors. PR53218. [Jim Jagielski]\n\n  *) mod_dav: Set r->status_line in dav_error_response. PR 55426.\n\n  *) mod_proxy_http, mod_cache: Avoid (unlikely) accesses to freed memory.\n     [Yann Ylavic, Christophe Jaillet]\n\n  *) http_protocol: fix logic in ap_method_list_(add|remove) in order:\n       - to correctly reset bits\n       - not to modify the 'method_mask' bitfield unnecessarily\n     [Christophe Jaillet]\n\n  *) mod_slotmem_shm: Increase log level for some originally debug messages.\n     [Jim Jagielski]\n\n  *) mod_ldap: In 2.4.10, some LDAP searches or comparisons might be done with\n     the wrong credentials when a backend connection is reused.\n     [Eric Covener]\n\n  *) mod_macro: Add missing APLOGNO for some Warning log messages.\n     [Christophe Jaillet]\n\n  *) mod_cache: Avoid sending 304 responses during failed revalidations\n     PR56881. [Eric Covener]\n\n  *) mod_status: Honor client IP address using mod_remoteip. PR 55886.\n     [Jim Jagielski]\n\n  *) cmake-based build for Windows: Fix incompatibility with cmake 2.8.12\n     and later.  PR 56615.  [Chuck Liu <cliu81 gmail.com>, Jeff Trawick]\n\n  *) mod_ratelimit: Drop severity of AH01455 and AH01457 (ap_pass_brigade\n     failed) messages from ERROR to TRACE1.  Other filters do not bother \n     re-reporting failures from lower level filters.  PR56832.  [Eric Covener]\n\n  *) core: Avoid useless warning message when parsing a section guarded by\n     <IfDefine foo> if $(foo) is used within the section.\n     PR 56503 [Christophe Jaillet]\n\n  *) mod_proxy_fcgi: Fix faulty logging of large amounts of stderr from the\n     application.  PR 56858.  [Manuel Mausz <manuel-asf mausz.at>]\n\n  *) mod_proxy_http: Proxy responses with error status and\n     \"ProxyErrorOverride On\" hang until proxy timeout.\n     PR53420 [Rainer Jung]\n\n  *) mod_log_config: Allow three character log formats to be registered. For\n     backwards compatibility, the first character of a three-character format\n     must be the '^' (caret) character.  [Eric Covener]\n\n  *) mod_lua: Don't quote Expires and Path values. PR 56734.\n     [Keith Mashinter, <kmashint yahoo com>]\n\n  *) mod_authz_core: Allow <AuthzProviderAlias>'es to be seen from auth\n     stanzas under virtual hosts. PR 56870. [Eric Covener]\n\nChanges with Apache 2.4.10\n\n  *) SECURITY: CVE-2014-0117 (cve.mitre.org)\n     mod_proxy: Fix crash in Connection header handling which allowed a denial\n     of service attack against a reverse proxy with a threaded MPM.\n     [Ben Reser]\n\n  *) SECURITY: CVE-2014-3523 (cve.mitre.org)\n     Fix a memory consumption denial of service in the WinNT MPM, used in all\n     Windows installations. Workaround: AcceptFilter <protocol> {none|connect}\n     [Jeff Trawick]\n\n  *) SECURITY: CVE-2014-0226 (cve.mitre.org)\n     Fix a race condition in scoreboard handling, which could lead to\n     a heap buffer overflow.  [Joe Orton, Eric Covener]\n\n  *) SECURITY: CVE-2014-0118 (cve.mitre.org)\n     mod_deflate: The DEFLATE input filter (inflates request bodies) now\n     limits the length and compression ratio of inflated request bodies to\n     avoid denial of service via highly compressed bodies.  See directives\n     DeflateInflateLimitRequestBody, DeflateInflateRatioLimit,\n     and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]\n\n  *) SECURITY: CVE-2014-0231 (cve.mitre.org)\n     mod_cgid: Fix a denial of service against CGI scripts that do\n     not consume stdin that could lead to lingering HTTPD child processes\n     filling up the scoreboard and eventually hanging the server.  By\n     default, the client I/O timeout (Timeout directive) now applies to\n     communication with scripts.  The CGIDScriptTimeout directive can be\n     used to set a different timeout for communication with scripts.\n     [Rainer Jung, Eric Covener, Yann Ylavic]\n\n  *) mod_ssl: Extend the scope of SSLSessionCacheTimeout to sessions\n     resumed by TLS session resumption (RFC 5077). [Rainer Jung]\n\n  *) mod_deflate: Don't fail when flushing inflated data to the user-agent\n     and that coincides with the end of stream (\"Zlib error flushing inflate\n     buffer\"). PR 56196. [Christoph Fausak <christoph fausak glueckkanja.com>]\n\n  *) mod_proxy_ajp: Forward local IP address as a custom request attribute\n     like we already do for the remote port. [Rainer Jung]\n\n  *) core: Include any error notes set by modules in the canned error\n     response for 403 errors.  [Jeff Trawick]\n\n  *) mod_ssl: Set an error note for requests rejected due to\n     SSLStrictSNIVHostCheck.  [Jeff Trawick]\n\n  *) mod_ssl: Fix issue with redirects to error documents when handling\n     SNI errors.  [Jeff Trawick]\n\n  *) mod_ssl: Fix tmp DH parameter leak, adjust selection to prefer\n     larger keys and support up to 8192-bit keys.  [Ruediger Pluem,\n     Joe Orton]\n\n  *) mod_dav: Fix improper encoding in PROPFIND responses.  PR 56480.\n     [Ben Reser]\n\n  *) WinNT MPM: Improve error handling for termination events in child.\n     [Jeff Trawick]\n\n  *) mod_proxy: When ping/pong is configured for a worker, don't send or\n     forward \"100 Continue\" (interim) response to the client if it does\n     not expect one. [Yann Ylavic]\n\n  *) mod_ldap: Be more conservative with the last-used time for\n     LDAPConnectionPoolTTL. PR54587 [Eric Covener]\n\n  *) mod_ldap: LDAP connections used for authn were not respecting\n     LDAPConnectionPoolTTL. PR54587 [Eric Covener]\n\n  *) mod_proxy_fcgi: Fix occasional high CPU when handling request bodies.\n     [Jeff Trawick]\n\n  *) event MPM: Fix possible crashes (third-party modules accessing c->sbh) \n     or occasional missed mod_status updates under load. PR 56639.\n     [Edward Lu <Chaosed0 gmail com>]\n\n  *) mod_authnz_ldap: Support primitive LDAP servers do not accept\n     filters, such as \"SDBM-backed LDAP\" on z/OS, by allowing a special\n     filter \"none\" to be specified in AuthLDAPURL. [Eric Covener]\n\n  *) mod_deflate: Fix inflation of files larger than 4GB. PR 56062.\n     [Lukas Bezdicka <social v3.sk>]\n\n  *) mod_deflate: Handle Zlib header and validation bytes received in multiple\n     chunks. PR 46146. [Yann Ylavic]\n\n  *) mod_proxy: Allow reverse-proxy to be set via explicit handler.\n     [ryo takatsuki <ryotakatsuki gmail com>]\n\n  *) ab: support custom HTTP method with -m argument. PR 56604.\n     [Roman Jurkov <winfinit gmail.com>]\n\n  *) mod_proxy_balancer: Correctly encode user provided data in management\n     interface. PR 56532 [Maksymilian, <max cert.cx>]\n\n  *) mod_proxy_fcgi: Support iobuffersize parameter.  [Jeff Trawick]\n\n  *) mod_auth_form: Add a debug message when the fields on a form are not\n     recognised. [Graham Leggett]\n\n  *) mod_cache: Preserve non-cacheable headers forwarded from an origin 304\n     response. PR 55547.  [Yann Ylavic]\n\n  *) mod_proxy_wstunnel: Fix the use of SSL connections with the \"wss:\"\n     scheme. PR55320. [Alex Liu <alex.leo.ca gmail.com>]\n\n  *) mod_socache_shmcb: Correct counting of expirations for status display.\n     Expirations happening during retrieval were not counted. [Rainer Jung]\n\n  *) mod_cache: Retry unconditional request with the full URL (including the\n     query-string) when the origin server's 304 response does not match the\n     conditions used to revalidate the stale entry.  [Yann Ylavic].\n\n  *) mod_alias: Stop setting CONTEXT_PREFIX and CONTEXT_DOCUMENT environment\n     variables as a result of AliasMatch. [Eric Covener]\n \n  *) mod_cache: Don't add cached/revalidated entity headers to a 304 response.\n     PR 55547.  [Yann Ylavic]\n\n  *) mod_proxy_scgi: Support Unix sockets.  ap_proxy_port_of_scheme():\n     Support default SCGI port (4000).  [Jeff Trawick]\n\n  *) mod_cache: Fix AH00784 errors on Windows when the the CacheLock directive\n     is enabled.  [Eric Covener]\n\n  *) mod_expires: don't add Expires header to error responses (4xx/5xx),\n     be they generated or forwarded. PR 55669.  [Yann Ylavic]\n\n  *) mod_proxy_fcgi: Don't segfault when failing to connect to the backend.\n     (regression in 2.4.9 release) [Jeff Trawick]\n\n  *) mod_authn_socache: Fix crash at startup in certain configurations.\n     PR 56371. (regression in 2.4.7) [Jan Kaluza]\n\n  *) mod_ssl: restore argument structure for \"exec\"-type SSLPassPhraseDialog\n     programs to the form used in releases up to 2.4.7, and emulate\n     a backwards-compatible behavior for existing setups. [Kaspar Brand]\n\n  *) mod_ssl: Add SSLOCSPUseRequestNonce directive to control whether or not\n     OCSP requests should use a nonce to be checked against the responder's\n     one. PR 56233. [Yann Ylavic, Kaspar Brand]\n\n  *) mod_ssl: \"SSLEngine off\" will now override a Listen-based default\n     and does disable mod_ssl for the vhost.  [Joe Orton]\n\n  *) mod_lua: Enforce the max post size allowed via r:parsebody()\n     [Daniel Gruno]\n\n  *) mod_lua: Use binary comparison to find boundaries for multipart \n     objects, as to not terminate our search prematurely when hitting\n     a NULL byte. [Daniel Gruno]\n\n  *) mod_ssl: add workaround for SSLCertificateFile when using OpenSSL\n     versions before 0.9.8h and not specifying an SSLCertificateChainFile\n     (regression introduced with 2.4.8). PR 56410. [Kaspar Brand]\n\n  *) mod_ssl: bring SNI behavior into better conformance with RFC 6066:\n     no longer send warning-level unrecognized_name(112) alerts,\n     and limit startup warnings to cases where an OpenSSL version\n     without TLS extension support is used. PR 56241. [Kaspar Brand]\n\n  *) mod_proxy_html: Avoid some possible memory access violation in case of\n     specially crafted files, when the ProxyHTMLMeta directive is turned on.\n     Follow up of PR 56287 [Christophe Jaillet]\n\n  *) mod_auth_form: Make sure the optional functions are loaded even when\n     the AuthFormProvider isn't specified. [Graham Leggett]\n\n  *) mod_ssl: avoid processing bogus SSLCertificateKeyFile values\n     (and logging garbled file names). PR 56306. [Kaspar Brand]\n\n  *) mod_ssl: fix merging of global and vhost-level settings with the\n     SSLCertificateFile, SSLCertificateKeyFile, and SSLOpenSSLConfCmd\n     directives. PR 56353. [Kaspar Brand]\n\n  *) mod_headers: Allow the \"value\" parameter of Header and RequestHeader to \n     contain an ap_expr expression if prefixed with \"expr=\". [Eric Covener]\n\n  *) rotatelogs: Avoid creation of zombie processes when -p is used on\n     Unix platforms.  [Joe Orton]\n\n  *) mod_authnz_fcgi: New module to enable FastCGI authorizer\n     applications to authenticate and/or authorize clients.\n     [Jeff Trawick]\n\n  *) mod_proxy: Do not try to parse the regular expressions passed by\n     ProxyPassMatch as URL as they do not follow their syntax.\n     PR 56074. [Ruediger Pluem]\n\n  *) mod_reqtimeout: Resolve unexpected timeouts on keepalive requests \n     under the Event MPM. PR56216.  [Frank Meier <frank meier ergon ch>]\n\n  *) mod_proxy_fcgi: Fix sending of response without some HTTP headers\n     that might be set by filters.  [Jim Riggs <jim riggs.me>]\n\n  *) mod_proxy_html: Do not delete the wrong data from HTML code when a\n     \"http-equiv\" meta tag specifies a Content-Type behind any other\n     \"http-equiv\" meta tag. PR 56287 [Micha Lenk <micha lenk info>]\n\n  *) mod_proxy: Don't reuse a SSL backend connection whose requested SNI\n     differs. PR 55782.  [Yann Ylavic]\n\n  *) Add suspend_connection and resume_connection hooks to notify modules\n     when the thread/connection relationship changes.  (Should be implemented\n     for any third-party async MPMs.)  [Jeff Trawick]\n\n  *) mod_proxy_wstunnel: Don't issue AH02447 and log a 500 on routine \n     hangups from websockets origin servers. PR 56299\n     [Yann Ylavic, Edward Lu <Chaosed0 gmail com>, Eric Covener] \n\n  *) mod_proxy_wstunnel: Don't pool backend websockets connections,\n     because we need to handshake every time. PR 55890.\n     [Eric Covener]\n\n  *) mod_lua: Redesign how request record table access behaves,\n     in order to utilize the request record from within these tables.\n     [Daniel Gruno]\n\n  *) mod_lua: Add r:wspeek for peeking at WebSocket frames. [Daniel Gruno]\n \n  *) mod_lua: Log an error when the initial parsing of a Lua file fails.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Reformat and escape script error output.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: URL-escape cookie keys/values to prevent tainted cookie data\n     from causing response splitting.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Disallow newlines in table values inside the request_rec, \n     to prevent HTTP Response Splitting via tainted headers.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Remove the non-working early/late arguments for \n     LuaHookCheckUserID. [Daniel Gruno]\n\n  *) mod_lua: Change IVM storage to use shm [Daniel Gruno]\n\n  *) mod_lua: More verbose error logging when a handler function cannot be\n     found. [Daniel Gruno]\n\nChanges with Apache 2.4.9\n\n  *) mod_ssl: Work around a bug in some older versions of OpenSSL that\n     would cause a crash in SSL_get_certificate for servers where the\n     certificate hadn't been sent. [Stephen Henson]\n\n  *) mod_lua: Add a fixups hook that checks if the original request is intended \n     for LuaMapHandler. This fixes a bug where FallbackResource invalidates the \n     LuaMapHandler directive in certain cases by changing the URI before the map \n     handler code executes [Daniel Gruno, Daniel Ferradal <dferradal gmail com>].\n\nChanges with Apache 2.4.8\n\n  *) SECURITY: CVE-2014-0098 (cve.mitre.org)\n     Clean up cookie logging with fewer redundant string parsing passes.\n     Log only cookies with a value assignment. Prevents segfaults when\n     logging truncated cookies.\n     [William Rowe, Ruediger Pluem, Jim Jagielski]\n\n  *) SECURITY: CVE-2013-6438 (cve.mitre.org)\n     mod_dav: Keep track of length of cdata properly when removing\n     leading spaces. Eliminates a potential denial of service from\n     specifically crafted DAV WRITE requests\n     [Amin Tora <Amin.Tora neustar.biz>]\n\n  *) core: Support named groups and backreferences within the LocationMatch,\n     DirectoryMatch, FilesMatch and ProxyMatch directives. (Requires\n     non-ancient PCRE library) [Graham Leggett]\n\n  *) core: draft-ietf-httpbis-p1-messaging-23 corrections regarding\n     TE/CL conflicts. [Yann Ylavic, Jim Jagielski]\n\n  *) core: Detect incomplete request and response bodies, log an error and\n     forward it to the underlying filters. PR 55475 [Yann Ylavic]\n\n  *) mod_dir: Add DirectoryCheckHandler to allow a 2.2-like behavior, skipping \n     execution when a handler is already set. PR53929. [Eric Covener]\n\n  *) mod_ssl: Do not perform SNI / Host header comparison in case of a\n     forward proxy request. [Ruediger Pluem]\n\n  *) mod_ssl: Remove the hardcoded algorithm-type dependency for the\n     SSLCertificateFile and SSLCertificateKeyFile directives, to enable\n     future algorithm agility, and deprecate the SSLCertificateChainFile\n     directive (obsoleted by SSLCertificateFile). [Kaspar Brand]\n\n  *) mod_rewrite: Add RewriteOptions InheritDown, InheritDownBefore, \n     and IgnoreInherit to allow RewriteRules to be pushed from parent scopes\n     to child scopes without explicitly configuring each child scope.\n     PR56153.  [Edward Lu <Chaosed0 gmail com>] \n\n  *) prefork: Fix long delays when doing a graceful restart.\n     PR 54852 [Jim Jagielski, Arkadiusz Miskiewicz <arekm maven pl>]\n\n  *) FreeBSD: Disable IPv4-mapped listening sockets by default for versions\n     5+ instead of just for FreeBSD 5. PR 53824. [Jeff Trawick]\n\n  *) mod_proxy_wstunnel: Avoid busy loop on client errors, drop message\n     IDs 02445, 02446, and 02448 to TRACE1 from DEBUG. PR 56145.\n     [Joffroy Christen <joffroy.christen solvaxis com>, Eric Covener]\n\n  *) mod_remoteip: Correct the trusted proxy match test. PR 54651.\n     [Yoshinori Ehara <yoshinori ehara gmail com>, Eugene L <eugenel amazon com>]\n\n  *) mod_proxy_fcgi: Fix error message when an unexpected protocol version\n     number is received from the application.  PR 56110.  [Jeff Trawick]\n\n  *) mod_remoteip: Use the correct IP addresses to populate the proxy_ips field.\n     PR 55972. [Mike Rumph]\n\n  *) mod_lua: Update r:setcookie() to accept a table of options and add domain,\n     path and httponly to the list of options available to set.\n     PR 56128 [Edward Lu <Chaosed0 gmail com>, Daniel Gruno]\n     \n  *) mod_lua: Fix r:setcookie() to add, rather than replace,\n     the Set-Cookie header. PR56105\n     [Kevin J Walters <kjw ms com>, Edward Lu <Chaosed0 gmail com>]\n\n  *) mod_lua: Allow for database results to be returned as a hash with \n     row-name/value pairs instead of just row-number/value. [Daniel Gruno]\n\n  *) mod_rewrite: Add %{CONN_REMOTE_ADDR} as the non-useragent counterpart to\n     %{REMOTE_ADDR}. PR 56094. [Edward Lu <Chaosed0 gmail com>]\n\n  *) WinNT MPM: If ap_run_pre_connection() fails or sets c->aborted, don't\n     save the socket for reuse by the next worker as if it were an \n     APR_SO_DISCONNECTED socket. Restores 2.2 behavior. [Eric Covener]\n\n  *) mod_dir: Don't search for a DirectoryIndex or DirectorySlash on a URL\n     that was just rewritten by mod_rewrite. PR53929. [Eric Covener]\n\n  *) mod_session: When we have a session we were unable to decode,\n     behave as if there was no session at all. [Thomas Eckert\n     <thomas.r.w.eckert gmail com>]\n\n  *) mod_session: Fix problems interpreting the SessionInclude and\n     SessionExclude configuration. PR 56038. [Erik Pearson\n     <erik adaptations.com>]\n\n  *) mod_authn_core: Allow <AuthnProviderAlias>'es to be seen from auth\n     stanzas under virtual hosts. PR 55622. [Eric Covener]\n\n  *) mod_proxy_fcgi: Use apr_socket_timeout_get instead of hard-coded\n     30 seconds timeout. [Jan Kaluza]\n\n  *) build: only search for modules (config*.m4) in known subdirectories, see\n     build/config-stubs. [Stefan Fritsch]\n\n  *) mod_cache_disk: Fix potential hangs on Windows when using mod_cache_disk. \n     PR 55833. [Eric Covener]\n\n  *) mod_ssl: Add support for OpenSSL configuration commands by introducing\n     the SSLOpenSSLConfCmd directive. [Stephen Henson, Kaspar Brand]\n\n  *) mod_proxy: Remove (never documented) <Proxy ~ wildcard-url> syntax which\n     is equivalent to <ProxyMatch wildcard-url>. [Christophe Jaillet]\n\n  *) mod_authz_user, mod_authz_host, mod_authz_groupfile, mod_authz_dbm,\n     mod_authz_dbd, mod_authnz_ldap: Support the expression parser within the\n     require directives. [Graham Leggett]\n\n  *) mod_proxy_http: Core dumped under high load. PR 50335.\n     [Jan Kaluza <jkaluza redhat.com>]\n\n  *) mod_socache_shmcb.c: Remove arbitrary restriction on shared memory size\n     previously limited to 64MB. [Jens L\u00e5\u00e5s <jelaas gmail.com>]\n\n  *) mod_lua: Use binary copy when dealing with uploads through r:parsebody() \n     to prevent truncating files. [Daniel Gruno]\n\nChanges with Apache 2.4.7\n\n  *) SECURITY: CVE-2013-4352 (cve.mitre.org)\n     mod_cache: Fix a NULL pointer deference which allowed untrusted\n     origin servers to crash mod_cache in a forward proxy\n     configuration.  [Graham Leggett]\n\n  *) APR 1.5.0 or later is now required for the event MPM.\n  \n  *) slotmem_shm: Error detection. [Jim Jagielski]\n\n  *) event: Use skiplist data structure. [Jim Jagielski]\n\n  *) event: Fail at startup with message AP02405 if the APR atomic\n     implementation is not compatible with the MPM.  [Jim Jagielski]\n\n  *) mpm_unix: Add ap_mpm_podx_* implementation to avoid code duplication\n     and align w/ trunk. [Jim Jagielski]\n\n  *) Fix potential rejection of valid MaxMemFree and ThreadStackSize\n     directives.  [Mike Rumph <mike.rumph oracle.com>]\n\n  *) mod_proxy_fcgi: Remove 64K limit on encoded length of all envvars.\n     An individual envvar with an encoded length of more than 16K will be\n     omitted.  [Jeff Trawick]\n  \n  *) mod_proxy_fcgi: Handle reading protocol data that is split between\n     packets.  [Jeff Trawick]\n\n  *) mod_ssl: Improve handling of ephemeral DH and ECDH keys by\n     allowing custom parameters to be configured via SSLCertificateFile,\n     and by adding standardized DH parameters for 1024/2048/3072/4096 bits.\n     Unless custom parameters are configured, the standardized parameters\n     are applied based on the certificate's RSA/DSA key size. [Kaspar Brand]\n\n  *) mod_ssl, configure: Require OpenSSL 0.9.8a or later. [Kaspar Brand]\n\n  *) mod_ssl: drop support for export-grade ciphers with ephemeral RSA\n     keys, and unconditionally disable aNULL, eNULL and EXP ciphers\n     (not overridable via SSLCipherSuite). [Kaspar Brand]\n\n  *) mod_proxy: Added support for unix domain sockets as the\n     backend server endpoint [Jim Jagielski, Blaise Tarr\n     <blaise tarr gmail com>]\n\n  *) Add experimental cmake-based build system for Windows.  [Jeff Trawick,\n     Tom Donovan]\n\n  *) event MPM: Fix possible crashes (third party modules accessing c->sbh) \n     or occasional missed mod_status updates for some keepalive requests \n     under load. [Eric Covener]\n\n  *) mod_authn_socache: Support optional initialization arguments for\n     socache providers.  [Chris Darroch]\n\n  *) mod_session: Reset the max-age on session save. PR 47476. [Alexey\n     Varlamov <alexey.v.varlamov gmail com>]\n\n  *) mod_session: After parsing the value of the header specified by the\n     SessionHeader directive, remove the value from the response. PR 55279.\n     [Graham Leggett]\n\n  *) mod_headers: Allow for format specifiers in the substitution string\n     when using Header edit. [Daniel Ruggeri]\n\n  *) mod_dav: dav_resource->uri is treated as unencoded. This was an\n     unnecessary ABI changed introduced in 2.4.6. PR 55397.\n\n  *) mod_dav: Don't require lock tokens for COPY source. PR 55306.\n\n  *) core: Don't truncate output when sending is interrupted by a signal,\n     such as from an exiting CGI process. PR 55643. [Jeff Trawick]\n\n  *) WinNT MPM: Exit the child if the parent process crashes or is terminated.\n     [Oracle Corporation]\n\n  *) Windows: Correct failure to discard stderr in some error log\n     configurations.  (Error message AH00093)  [Jeff Trawick]\n\n  *) mod_session_crypto: Allow using exec: calls to obtain session\n     encryption key.  [Daniel Ruggeri]\n\n  *) core: Add missing Reason-Phrase in HTTP response headers.\n     PR 54946. [Rainer Jung]\n\n  *) mod_rewrite: Make rewrite websocket-aware to allow proxying.\n     PR 55598. [Chris Harris <chris.harris kitware com>]\n\n  *) mod_ldap: When looking up sub-groups, use an implicit objectClass=*\n     instead of an explicit cn=* filter. [David Hawes <dhawes vt.edu>]\n\n  *) ab: Add wait time, fix processing time, and output write errors only if\n     they occured. [Christophe Jaillet]\n\n  *) worker MPM: Don't forcibly kill worker threads if the child process is\n     exiting gracefully.  [Oracle Corporation]\n\n  *) core: apachectl -S prints wildcard name-based virtual hosts twice. \n     PR54948 [Eric Covener]\n\n  *) mod_auth_basic: Add AuthBasicUseDigestAlgorithm directive to\n     allow migration of passwords from digest to basic authentication.\n     [Chris Darroch]\n\n  *) ab: Add a new -l parameter in order not to check the length of the responses.\n     This can be usefull with dynamic pages.\n     PR9945, PR27888, PR42040 [<ccikrs1 cranbrook edu>]\n     \n  *) Suppress formatting of startup messages written to the console when\n     ErrorLogFormat is used.  [Jeff Trawick]\n\n  *) mod_auth_digest: Be more specific when the realm mismatches because the\n     realm has not been specified. [Graham Leggett]\n\n  *) mod_proxy: Add a note in the balancer manager stating whether changes\n     will or will not be persisted and whether settings are inherited.\n     [Daniel Ruggeri, Jim Jagielski]\n\n  *) core: Add util_fcgi.h and associated definitions and support\n     routines for FastCGI, based largely on mod_proxy_fcgi.\n     [Jeff Trawick]\n\n  *) mod_headers: Add 'Header note header-name note-name' for copying a response\n     headers value into a note. [Eric Covener]\n\n  *) mod_headers: Add 'setifempty' command to Header and RequestHeader.\n     [Eric Covener]\n\n  *) mod_logio: new format-specifier %S (sum) which is the sum of received\n     and sent byte counts.\n     PR54015 [Christophe Jaillet]\n\n  *) mod_deflate: Improve error detection when decompressing request bodies\n     with trailing garbage: handle case where trailing bytes are in\n     the same bucket. [Rainer Jung]\n\n  *) mod_authz_groupfile, mod_authz_user: Reduce severity of AH01671 and AH01663\n     from ERROR to DEBUG, since these modules do not know what mod_authz_core\n     is doing with their AUTHZ_DENIED return value. [Eric Covener]\n\n  *) mod_ldap: add TRACE5 for LDAP retries. [Eric Covener]\n\n  *) mod_ldap: retry on an LDAP timeout during authn. [Eric Covener]\n\n  *) mod_ldap: Change \"LDAPReferrals off\" to actually set the underlying LDAP \n     SDK option to OFF, and introduce \"LDAPReferrals default\" to take the SDK \n     default, sans rebind authentication callback.\n     [Jan Kaluza <kaluze AT redhat.com>]\n\n  *) core: Log a message at TRACE1 when the client aborts a connection.\n     [Eric Covener]\n\n  *) WinNT MPM: Don't crash during child process initialization if the\n     Listen protocol is unrecognized.  [Jeff Trawick]\n\n  *) modules: Fix some compiler warnings. [Guenter Knauf]\n\n  *) Sync 2.4 and trunk\n       - Avoid some memory allocation and work when TRACE1 is not activated\n       - fix typo in include guard\n       - indent\n       - No need to lower the string before removing the path, it is just \n         a waste of time...\n       - Save a few cycles\n     [Christophe Jaillet <christophe.jaillet wanadoo.fr>]\n\n  *) mod_filter: Add \"change=no\" as a proto-flag to FilterProtocol\n     to remove a providers initial flags set at registration time.\n     [Eric Covener]\n\n  *) core, mod_ssl: Enable the ability for a module to reverse the sense of\n     a poll event from a read to a write or vice versa. This is a step on\n     the way to allow mod_ssl taking full advantage of the event MPM.\n     [Graham Leggett]\n\n  *) Makefile.win: Install proper pcre DLL file during debug build install.\n     PR 55235.  [Ben Reser <ben reser org>]\n\n  *) mod_ldap: Fix a potential memory leak or corruption.  PR 54936.\n     [Zhenbo Xu <zhenbo1987 gmail com>]\n\n  *) ab: Fix potential buffer overflows when processing the T and X\n     command-line options.  PR 55360.\n     [Mike Rumph <mike.rumph oracle.com>]\n\n  *) fcgistarter: Specify SO_REUSEADDR to allow starting a server\n     with old connections in TIME_WAIT.  [Jeff Trawick]\n\n  *) core: Add open_htaccess hook which, in conjunction with dirwalk_stat\n     and post_perdir_config (introduced in 2.4.5), allows mpm-itk to be \n     used without patches to httpd core. [Stefan Fritsch]\n\n  *) support/htdbm: fix processing of -t command line switch. Regression\n     introduced in 2.4.4\n     PR 55264 [Jo Rhett <jrhett netconsonance com>]\n\n  *) mod_lua: add websocket support via r:wsupgrade, r:wswrite, r:wsread \n     and r:wsping. [Daniel Gruno]\n\n  *) mod_lua: add support for writing/reading cookies via r:getcookie and \n     r:setcookie. [Daniel Gruno]\n\n  *) mod_lua: If the first yield() of a LuaOutputFilter returns a string, it should\n     be prefixed to the response as documented. [Eric Covener] \n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Remove ETAG, Content-Length, and Content-MD5 when a LuaOutputFilter\n     is configured without mod_filter. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Register LuaOutputFilter scripts as changing the content and\n     content-length by default, when run my mod_filter.  Previously,\n     growing or shrinking a response that started with Content-Length set\n     would require mod_filter and FilterProtocol change=yes. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Return a 500 error if a LuaHook* script doesn't return a\n     numeric return code. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\nChanges with Apache 2.4.6\n\n  *) Revert a broken fix for PR54948 that was applied to 2.4.5 (which was\n     not released) and found post-2.4.5 tagging.\n\nChanges with Apache 2.4.5\n\n  *) SECURITY: CVE-2013-1896 (cve.mitre.org)\n     mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with\n     the source href (sent as part of the request body as XML) pointing to a\n     URI that is not configured for DAV will trigger a segfault. [Ben Reser\n     <ben reser.org>]\n\n  *) SECURITY: CVE-2013-2249 (cve.mitre.org)\n     mod_session_dbd: Make sure that dirty flag is respected when saving\n     sessions, and ensure the session ID is changed each time the session\n     changes. This changes the format of the updatesession SQL statement.\n     Existing configurations must be changed.\n     [Takashi Sato, Graham Leggett]\n\n  *) mod_auth_basic: Add a generic mechanism to fake basic authentication\n     using the ap_expr parser. AuthBasicFake allows the administrator to \n     construct their own username and password for basic authentication based \n     on their needs. [Graham Leggett]\n\n  *) mpm_event: Check that AsyncRequestWorkerFactor is not negative. PR 54254.\n     [Jackie Zhang <jackie qq zhang gmail com>]\n\n  *) mod_proxy: Ensure we don't attempt to amend a table we are iterating\n     through, ensuring that all headers listed by Connection are removed.\n     [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_proxy_http: Make the proxy-interim-response environment variable\n     effective by formally overriding origin server behaviour. [Graham\n     Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_proxy: Fix seg-faults when using the global pool on threaded\n     MPMs [Thomas Eckert <thomas.r.w.eckert gmail.com>, Graham Leggett,\n     Jim Jagielski]\n\n  *) mod_deflate: Remove assumptions as to when an EOS bucket might arrive.\n     Gracefully step aside if the body size is zero. [Graham Leggett]\n\n  *) mod_ssl: Fix possible truncation of OCSP responses when reading from the\n     server.  [Joe Orton]\n\n  *) core: Support the SINGLE_LISTEN_UNSERIALIZED_ACCEPT optimization\n     on Linux kernel versions 3.x and above.  PR 55121.  [Bradley Heilbrun\n     <apache heilbrun.org>]\n\n  *) mod_cache_socache: Make sure the CacheSocacheMaxSize directive is merged\n     correctly. [Jens L\u00e5\u00e5s <jelaas gmail.com>]\n\n  *) rotatelogs: add -n number-of-files option to rotate through a number\n     of fixed-name logfiles. [Eric Covener]\n\n  *) mod_proxy: Support web-socket tunnels via mod_proxy_wstunnel.\n     [Jim Jagielski]\n\n  *) mod_cache_socache: Use the name of the socache implementation when performing\n     a lookup rather than using the raw arguments. [Martin Ksellmann\n     <martin@ksellmann.de>]\n\n  *) core: Add dirwalk_stat hook.  [Jeff Trawick]\n\n  *) core: Add post_perdir_config hook.\n     [Steinar Gunderson <sgunderson bigfoot.com>]\n\n  *) proxy_util: NULL terminate the right buffer in 'send_http_connect'.\n     [Christophe Jaillet]\n\n  *) mod_remoteip: close file in error path. [Christophe Jaillet]\n\n  *) core: make the \"default\" parameter of the \"ErrorDocument\" option case\n     insensitive. PR 54419 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_proxy_html: make the \"ProxyHTMLFixups\" options case insensitive.\n     PR 54420 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_cache: Make option \"CacheDisable\" in mod_cache case insensitive.\n     PR 54462 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_cache: If a 304 response indicates an entity not currently cached, then\n     the cache MUST disregard the response and repeat the request without the\n     conditional. [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: Ensure that we don't attempt to replace a cached response\n     with an older response as per RFC2616 13.12. [Graham Leggett, Co-Advisor\n     <coad measurement-factory.com>]\n\n  *) core, mod_cache: Ensure RFC2616 compliance in ap_meets_conditions()\n     with weak validation combined with If-Range and Range headers. Break\n     out explicit conditional header checks to be useable elsewhere in the\n     server. Ensure weak validation RFC compliance in the byteranges filter.\n     Ensure RFC validation compliance when serving cached entities. PR 16142\n     [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) core: Add the ability to do explicit matching on weak and strong ETags\n     as per RFC2616 Section 13.3.3. [Graham Leggett, Co-Advisor\n     <coad measurement-factory.com>]\n\n  *) mod_cache: Ensure that updated responses to HEAD requests don't get\n     mistakenly paired with a previously cached body. Ensure that any existing\n     body is removed when a HEAD request is cached. [Graham Leggett,\n     Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: Honour Cache-Control: no-store in a request. [Graham Leggett]\n\n  *) mod_cache: Make sure that contradictory entity headers present in a 304\n     Not Modified response are caught and cause the entity to be removed.\n     [Graham Leggett]\n\n  *) mod_cache: Make sure Vary processing handles multivalued Vary headers and\n     multivalued headers referred to via Vary. [Graham Leggett]\n\n  *) mod_cache: When serving from cache, only the last header of a multivalued\n     header was taken into account. Fixed. Ensure that Warning headers are\n     correctly handled as per RFC2616. [Graham Leggett]\n\n  *) mod_cache: Ignore response headers specified by no-cache=header and\n     private=header as specified by RFC2616 14.9.1 What is Cacheable. Ensure\n     that these headers are still processed when multiple Cache-Control\n     headers are present in the response. PR 54706 [Graham Leggett,\n     Yann Ylavic <ylavic.dev gmail.com>]\n\n  *) mod_cache: Invalidate cached entities in response to RFC2616 Section\n     13.10 Invalidation After Updates or Deletions. PR 15868 [Graham\n     Leggett]\n\n  *) mod_dav: Improve error handling in dav_method_put(), add new\n     dav_join_error() function.  PR 54145.  [Ben Reser <ben reser.org>]\n\n  *) mod_dav: Do not fail PROPPATCH when prop namespace is not known.\n     PR 52559 [Diego Santa Cruz <diego.santaCruz spinetix.com>]\n\n  *) mod_dav: When a PROPPATCH attempts to remove a non-existent dead\n     property on a resource for which there is no dead property in the same\n     namespace httpd segfaults. PR 52559 [Diego Santa Cruz\n     <diego.santaCruz spinetix.com>]\n\n  *) mod_dav: Sending an If or If-Match header with an invalid ETag doesn't\n     result in a 412 Precondition Failed for a COPY operation. PR54610\n     [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_dav: Make sure that when we prepare an If URL for Etag comparison,\n     we compare unencoded paths. PR 53910 [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_deflate: Remove assumptions as to when an EOS bucket might arrive.\n     Gracefully step aside if the body size is zero. [Graham Leggett]\n\n  *) 'AuthGroupFile' and 'AuthUserFile' do not accept anymore the optional\n     'standard' keyword . It was unused and not documented.\n     PR54463 [Tianyin Xu <tixu cs.ucsd.edu> and Christophe Jaillet]\n\n  *) core: Do not over allocate memory within 'ap_rgetline_core' for\n     the common case. [Christophe Jaillet]\n\n  *) core: speed up (for common cases) and reduce memory usage of\n     ap_escape_logitem(). This should save 70-100 bytes in the request\n     pool for a default config. [Christophe Jaillet]\n\n  *) mod_dav: Ensure URI is correctly uriencoded on return. PR 54611\n     [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_proxy: Reject invalid values for Max-Forwards. [Graham Leggett,\n     Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: RFC2616 14.9.3 The s-maxage directive also implies the\n     semantics of the proxy-revalidate directive. [Graham Leggett]\n\n  *) mod_ssl: add support for subjectAltName-based host name checking\n     in proxy mode (SSLProxyCheckPeerName). PR 54030. [Kaspar Brand]\n\n  *) core: Use the proper macro for HTTP/1.1. [Graham Leggett]\n\n  *) event MPM: Provide error handling for ThreadStackSize. PR 54311\n     [Tianyin Xu <tixu cs.ucsd.edu>, Christophe Jaillet]\n\n  *) mod_dav: Do not segfault on PROPFIND with a zero length DBM.\n     PR 52559 [Diego Santa Cruz <diego.santaCruz spinetix.com>]\n\n  *) core: Improve error message where client's request-line exceeds\n     LimitRequestLine. PR 54384 [Christophe Jaillet]\n\n  *) mod_macro: New module that provides macros within configuration files.\n     [Fabien Coelho]\n\n  *) mod_cache_socache: New cache implementation backed by mod_socache\n     that replaces mod_mem_cache known from httpd 2.2. [Graham\n     Leggett]\n\n  *) htpasswd: Add -v option to verify a password. [Stefan Fritsch]\n\n  *) mod_proxy: Add BalancerInherit and ProxyPassInherit to control\n     whether Proxy Balancers and Workers are inherited by vhosts\n     (default is On). [Jim Jagielski]\n\n  *) mod_authnz_ldap: Allow using exec: calls to obtain LDAP bind\n     password.  [Daniel Ruggeri]\n\n  *) Added balancer parameter failontimeout to allow server admin\n     to configure an IO timeout as an error in the balancer.\n     [Daniel Ruggeri]\n\n  *) mod_auth_digest: Fix crashes if shm initialization failed. [Stefan\n     Fritsch]\n\n  *) htpasswd, htdbm: Fix password generation. PR 54735. [Stefan Fritsch]\n\n  *) core: Add workaround for gcc bug on sparc/64bit. PR 52900.\n     [Stefan Fritsch]\n\n  *) mod_setenvif: Fix crash in case SetEnvif and SetEnvIfExpr are used\n     together. PR 54881. [Ruediger Pluem]\n\n  *) htdigest: Fix buffer overflow when reading digest password file\n     with very long lines. PR 54893. [Rainer Jung]\n\n  *) ap_expr: Add the ability to base64 encode and base64 decode\n     strings and to generate their SHA1 and MD5 hash.\n     [Graham Leggett, Stefan Fritsch]\n\n  *) mod_log_config: Fix crash when logging request end time for a failed\n     request.  PR 54828 [Rainer Jung]\n\n  *) mod_ssl: Catch missing, mismatched or encrypted client cert/key pairs\n     with SSLProxyMachineCertificateFile/Path directives. PR 52212, PR 54698.\n     [Keith Burdis <keith burdis.org>, Joe Orton, Kaspar Brand]\n\n  *) mod_ssl: Quiet FIPS mode weak keys disabled and FIPS not selected emits\n     in the error log to debug level.  [William Rowe]\n\n  *) mod_cache_disk: CacheMinFileSize and CacheMaxFileSize were always\n     using compiled in defaults of 1000000/1 respectively. [Eric Covener]\n\n  *) mod_lbmethod_heartbeat, mod_heartmonitor: Respect DefaultRuntimeDir/\n     DEFAULT_REL_RUNTIMEDIR for the heartbeat storage file.  [Jeff Trawick]\n\n  *) mod_include: Use new ap_expr for 'elif', like 'if', \n     if legacy parser is not specified.  PR 54548 [Tom Donovan]\n\n  *) mod_lua: Add some new functions: r:htpassword(), r:mkdir(), r:mkrdir(),\n     r:rmdir(), r:touch(), r:get_direntries(), r.date_parse_rfc().\n     [Guenter Knauf]\n\n  *) mod_lua: Add multipart form data handling. [Daniel Gruno]\n\n  *) mod_lua: If a LuaMapHandler doesn't return any value, log a warning\n     and treat it as apache2.OK. [Eric Covener]\n\n  *) mod_lua: Add bindings for apr_dbd/mod_dbd database access\n     [Daniel Gruno]\n\n  *) mod_lua: Add LuaInputFilter/LuaOutputFilter for creating content\n     filters in Lua [Daniel Gruno]\n\n  *) mod_lua: Allow scripts handled by the lua-script handler to return\n     a status code to the client (such as a 302 or a 500) [Daniel Gruno]\n\n  *) mod_lua: Decline handling 'lua-script' if the file doesn't exist,\n     rather than throwing an internal server error. [Daniel Gruno]\n\n  *) mod_lua: Add functions r:flush and r:sendfile as well as additional\n     request information to the request_rec structure. [Daniel Gruno]\n\n  *) mod_lua: Add a server scope for Lua states, which creates a pool of\n     states with managable minimum and maximum size. [Daniel Gruno]\n\n  *) mod_lua: Add new directive, LuaMapHandler, for dynamically mapping\n     URIs to Lua scripts and functions using regular expressions.\n     [Daniel Gruno]\n\n  *) mod_lua: Add new directive LuaCodeCache for controlling in-memory\n     caching of lua scripts. [Daniel Gruno]\n\nChanges with Apache 2.4.4\n\n  *) SECURITY: CVE-2012-3499 (cve.mitre.org)\n     Various XSS flaws due to unescaped hostnames and URIs HTML output in\n     mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.\n     [Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]\n\n  *) SECURITY: CVE-2012-4558 (cve.mitre.org)\n     XSS in mod_proxy_balancer manager interface. [Jim Jagielski,\n     Niels Heinen <heinenn google com>]\n\n  *) mod_dir: Add support for the value 'disabled' in FallbackResource.\n     [Vincent Deffontaines]\n\n  *) mod_proxy_connect: Don't keepalive the connection to the client if the\n     backend closes the connection. PR 54474. [Pavel Mateja <pavel netsafe cz>]\n\n  *) mod_lua: Add bindings for mod_dbd/apr_dbd database access.\n     [Daniel Gruno]\n\n  *) mod_proxy: Allow for persistence of local changes made via the\n     balancer-manager between graceful/normal restarts and power\n     cycles. [Jim Jagielski]\n\n  *) mod_proxy: Fix startup crash with mis-defined balancers.\n     PR 52402. [Jim Jagielski]\n\n  *) --with-module: Fix failure to integrate them into some existing\n     module directories.  PR 40097.  [Jeff Trawick]\n\n  *) htcacheclean: Fix potential segfault if \"-p\" is omitted.  [Joe Orton]\n\n  *) mod_proxy_http: Honour special value 0 (unlimited) of LimitRequestBody\n     PR 54435.  [Pavel Mateja <pavel netsafe.cz>]\n\n  *) mod_proxy_ajp: Support unknown HTTP methods. PR 54416.\n     [Rainer Jung]\n\n  *) htcacheclean: Fix list options \"-a\" and \"-A\".\n     [Rainer Jung]\n\n  *) mod_slotmem_shm: Fix mistaken reset of num_free for restored shm.\n     [Jim Jagielski]\n\n  *) mod_proxy: non-existance of byrequests is not an immediate error.\n     [Jim Jagielski]\n\n  *) mod_proxy_balancer: Improve output of balancer-manager (re: Drn,\n     Dis, Ign, Stby). PR 52478 [Danijel <dt-ng rbfh de>]\n  \n  *) configure: Fix processing of --disable-FEATURE for various features.\n     [Jeff Trawick]\n\n  *) mod_dialup/mod_http: Prevent a crash in mod_dialup in case of internal\n     redirect. PR 52230.\n\n  *) various modules, rotatelogs: Replace use of apr_file_write() with\n     apr_file_write_full() to prevent incomplete writes. PR 53131.\n     [Nicolas Viennot <apache viennot biz>, Stefan Fritsch]\n\n  *) ab: Support socket timeout (-s timeout).\n     [Guido Serra <zeph fsfe org>]\n\n  *) httxt2dbm: Correct length computation for the 'value' stored in the\n     DBM file. PR 47650 [jon buckybox com]\n\n  *) core: Be more correct about rejecting directives that cannot work in <If>\n     sections. [Stefan Fritsch]\n\n  *) core: Fix directives like LogLevel that need to know if they are invoked\n     at virtual host context or in Directory/Files/Location/If sections to\n     work properly in If sections that are not in a Directory/Files/Location.\n     [Stefan Fritsch]\n\n  *) mod_xml2enc: Fix problems with charset conversion altering the\n     Content-Length. [Micha Lenk <micha lenk info>]\n\n  *) ap_expr: Add req_novary function that allows HTTP header lookups\n     without adding the name to the Vary header. [Stefan Fritsch]\n\n  *) mod_slotmem_*: Add in new fgrab() function which forces a grab and\n     slot allocation on a specified slot. Allow for clearing of inuse\n     array. [Jim Jagielski]\n\n  *) mod_proxy_ftp: Fix segfaults on IPv4 requests to hosts with DNS\n     AAAA records. PR  40841. [Andrew Rucker Jones <arjones simultan\n     dyndns org>, <ast domdv de>, Jim Jagielski]\n\n  *) mod_auth_form: Make sure that get_notes_auth() sets the user as does\n     get_form_auth() and get_session_auth(). Makes sure that REMOTE_USER\n     does not vanish during mod_include driven subrequests. [Graham\n     Leggett]\n\n  *) mod_cache_disk: Resolve errors while revalidating disk-cached files on\n     Windows (\"...rename tempfile to datafile failed...\"). PR 38827\n     [Eric Covener]\n\n  *) mod_proxy_balancer: Bring XML output up to date. [Jim Jagielski]\n\n  *) htpasswd, htdbm: Optionally read passwords from stdin, as more\n     secure alternative to -b.  PR 40243. [Adomas Paltanavicius <adomas\n     paltanavicius gmail com>, Stefan Fritsch]\n\n  *) htpasswd, htdbm: Add support for bcrypt algorithm (requires\n     apr-util 1.5 or higher). PR 49288. [Stefan Fritsch]\n\n  *) htpasswd, htdbm: Put full 48bit of entropy into salt, improve\n     error handling. Add some of htpasswd's improvements to htdbm,\n     e.g. warn if password is truncated by crypt(). [Stefan Fritsch]\n\n  *) mod_auth_form: Support the expr parser in the\n     AuthFormLoginRequiredLocation, AuthFormLoginSuccessLocation and\n     AuthFormLogoutLocation directives. [Graham Leggett]\n\n  *) mod_ssl: Add support for TLS-SRP (Secure Remote Password key exchange\n     for TLS, RFC 5054). PR 51075. [Quinn Slack <sqs cs stanford edu>,\n     Christophe Renou, Peter Sylvester]\n\n  *) mod_rewrite: Stop mergeing RewriteBase down to subdirectories\n     unless new option 'RewriteOptions MergeBase' is configured.\n     PR 53963. [Eric Covener]\n\n  *) mod_header: Allow for exposure of loadavg and server load using new \n     format specifiers %l, %i, %b [Jim Jagielski]\n  \n  *) core: Make ap_regcomp() return AP_REG_ESPACE if out of memory.  Make\n     ap_pregcomp() abort if out of memory. This raises the minimum PCRE\n     requirement to version 6.0. [Stefan Fritsch]\n\n  *) mod_proxy: Add ability to configure the sticky session separator.\n     PR 53893. [<inu inusasha de>, Jim Jagielski]\n\n  *) mod_dumpio: Correctly log large messages\n     PR 54179 [Marek Wianecki <mieszek2 interia pl>]\n\n  *) core: Don't fail at startup with AH00554 when Include points to \n     a directory without any wildcard character. [Eric Covener]\n\n  *) core: Fail startup if the argument to ServerTokens is unrecognized.\n     [Jackie Zhang  <jackie.qq.zhang gmail.com>]\n\n  *) mod_log_forensic: Don't log a spurious \"-\" if a request has been rejected\n     before mod_log_forensic could attach its id to it. [Stefan Fritsch]\n\n  *) rotatelogs: Omit the second argument for the first invocation of\n     a post-rotate program when -p is used, per the documentation.\n     [Joe Orton]\n\n  *) mod_session_dbd: fix a segmentation fault in the function dbd_remove.\n     PR 53452. [<rebanerebane gmail com>, Reimo Rebane]\n\n  *) core: Functions to provide server load values: ap_get_sload() and\n     ap_get_loadavg(). [Jim Jagielski, Jan Kaluza <jkaluza redhat.com>,\n     Jeff Trawick]\n\n  *) mod_ldap: Fix regression in handling \"server unavailable\" errors on \n     Windows.  PR 54140.  [Eric Covener]\n \n  *) syslog logging: Remove stray \", referer\" at the end of some messages.\n     [Jeff Trawick]\n\n  *) \"Iterate\" directives: Report an error if no arguments are provided.\n     [Jeff Trawick]\n\n  *) mod_ssl: Change default for SSLCompression to off, as compression\n     causes security issues in most setups. (The so called \"CRIME\" attack).\n     [Stefan Fritsch]\n\n  *) ab: add TLS1.1/TLS1.2 options to -f switch, and adapt output\n     to more accurately report the negotiated protocol. PR 53916.\n     [Nicol\u00e1s Pernas Maradei <nico emutex com>, Kaspar Brand]\n\n  *) core: ErrorDocument now works for requests without a Host header.\n     PR 48357.  [Jeff Trawick]\n\n  *) prefork: Avoid logging harmless errors during graceful stop.\n     [Joe Orton, Jeff Trawick]\n\n  *) mod_proxy: When concatting for PPR, avoid cases where we\n     concat \".../\" and \"/...\" to create \"...//...\" [Jim Jagielski]\n\n  *) mod_cache: Wrong content type and character set when\n     mod_cache serves stale content because of a proxy error. \n     PR 53539.  [Rainer Jung, Ruediger Pluem]\n\n  *) mod_proxy_ajp: Fix crash in packet dump code when logging\n     with LogLevel trace7 or trace8.  PR 53730.  [Rainer Jung]\n\n  *) httpd.conf: Removed the configuration directives setting a bad_DNT\n     environment introduced in 2.4.3. The actual directives are commented\n     out in the default conf file.\n\n  *) core: Apply length limit when logging Status header values.\n     [Jeff Trawick, Chris Darroch]\n\n  *) mod_proxy_balancer: The nonce is only derived from the UUID iff\n     not set via the 'nonce' balancer param. [Jim Jagielski]\n\n  *) mod_ssl: Match wildcard SSL certificate names in proxy mode.  \n     PR 53006.  [Joe Orton]\n\n  *) Windows: Fix output of -M, -L, and similar command-line options\n     which display information about the server configuration.\n     [Jeff Trawick]\n\nChanges with Apache 2.4.3\n\n  *) SECURITY: CVE-2012-3502  (cve.mitre.org)\n     mod_proxy_ajp, mod_proxy_http: Fix an issue in back end\n     connection closing which could lead to privacy issues due\n     to a response mixup. PR 53727. [Rainer Jung]\n\n  *) SECURITY: CVE-2012-2687 (cve.mitre.org)\n     mod_negotiation: Escape filenames in variant list to prevent a\n     possible XSS for a site where untrusted users can upload files to\n     a location with MultiViews enabled. [Niels Heinen <heinenn google.com>]\n\n  *) mod_authnz_ldap: Don't try a potentially expensive nested groups\n     search before exhausting all AuthLDAPGroupAttribute checks on the\n     current group. PR 52464 [Eric Covener]\n\n  *) mod_lua: Add new directive LuaAuthzProvider to allow implementing an\n     authorization provider in lua. [Stefan Fritsch]\n\n  *) core: Be less strict when checking whether Content-Type is set to \n     \"application/x-www-form-urlencoded\" when parsing POST data, \n     or we risk losing data with an appended charset. PR 53698\n     [Petter Berntsen <petterb gmail.com>]\n\n  *) httpd.conf: Added configuration directives to set a bad_DNT environment\n     variable based on User-Agent and to remove the DNT header field from\n     incoming requests when a match occurs. This currently has the effect of\n     removing DNT from requests by MSIE 10.0 because it deliberately violates\n     the current specification of DNT semantics for HTTP. [Roy T. Fielding]\n\n  *) mod_socache_shmcb: Fix bus error due to a misalignment\n     in some 32 bit builds, especially on Solaris Sparc.\n     PR 53040.  [Rainer Jung]\n\n  *) mod_cache: Set content type in case we return stale content.\n     [Ruediger Pluem]\n\n  *) Windows: Fix SSL failures on windows with AcceptFilter https none.\n     PR 52476.  [Jeff Trawick]\n\n  *) ab: Fix read failure when targeting SSL server.  [Jeff Trawick]\n\n  *) The following now respect DefaultRuntimeDir/DEFAULT_REL_RUNTIMEDIR:\n     - mod_auth_digest: shared memory file\n     [Jeff Trawick]\n\n  *) htpasswd: Use correct file mode for checking if file is writable.\n     PR 45923. [Stefan Fritsch]\n\n  *) mod_rewrite: Fix crash with dbd RewriteMaps. PR 53663. [Mikhail T.\n     <mi apache aldan algebra com>]\n\n  *) mod_ssl: Add new directive SSLCompression to disable TLS-level\n     compression. PR 53219. [Bj\u00f6rn Jacke <bjoern j3e de>, Stefan Fritsch]\n\n  *) mod_lua: Add a few missing request_rec fields. Rename remote_ip to\n     client_ip to match conn_rec. [Stefan Fritsch]\n\n  *) mod_lua: Change prototype of vm_construct, to work around gcc bug which\n     causes a segfault. PR 52779. [Dick Snippe <Dick Snippe tech omroep nl>]\n\n  *) mpm_event: Don't count connections in lingering close state when\n     calculating how many additional connections may be accepted.\n     [Stefan Fritsch]\n\n  *) mod_ssl: If exiting during initialization because of a fatal error,\n     log a message to the main error log pointing to the appropriate\n     virtual host error log. [Stefan Fritsch]\n\n  *) mod_proxy_ajp: Reduce memory usage in case of many keep-alive requests on\n     one connection. PR 52275. [Naohiro Ooiwa <naohiro ooiwa miraclelinux com>]\n\n  *) mod_proxy_balancer: Restore balancing after a failed worker has\n     recovered when using lbmethod_bybusyness.  PR 48735.  [Jeff Trawick]\n\n  *) mod_setenvif: Compile some global regex only once during startup.\n     This should save some memory, especially with .htaccess.\n     [Stefan Fritsch]\n\n  *) core: Add the port number to the vhost's name in the scoreboard.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Fix ProxyPassReverse for balancer configurations.\n     PR 45434.  [Joe Orton]\n\n  *) mod_lua: Add the parsebody function for parsing POST data. PR 53064.\n     [Daniel Gruno]\n\n  *) apxs: Use LDFLAGS from config_vars.mk in addition to CFLAGS and CPPFLAGS.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Fix memory leak or possible corruption in ProxyBlock\n     implementation.  [Ruediger Pluem, Joe Orton]\n\n  *) mod_proxy: Check hostname from request URI against ProxyBlock list,\n     not forward proxy, if ProxyRemote* is configured.  [Joe Orton]\n\n  *) mod_proxy_connect: Avoid DNS lookup on hostname from request URI \n     if ProxyRemote* is configured.  PR 43697.  [Joe Orton]\n\n  *) mpm_event, mpm_worker: Remain active amidst prevalent child process\n     resource shortages.  [Jeff Trawick]\n\n  *) Add \"strict\" and \"warnings\" pragmas to Perl scripts.  [Rich Bowen]\n\n  *) The following now respect DefaultRuntimeDir/DEFAULT_REL_RUNTIMEDIR:\n     - core: the scoreboard (ScoreBoardFile), pid file (PidFile), and\n       mutexes (Mutex)\n     [Jim Jagielski]\n\n  *) ab: Fix bind() errors.  [Joe Orton]\n\n  *) mpm_event: Don't do a blocking write when starting a lingering close\n     from the listener thread. PR 52229. [Stefan Fritsch]\n\n  *) mod_so: If a filename without slashes is specified for LoadFile or\n     LoadModule and the file cannot be found in the server root directory,\n     try to use the standard dlopen() search path. [Stefan Fritsch]\n\n  *) mpm_event, mpm_worker: Fix cases where the spawn rate wasn't reduced\n     after child process resource shortages.  [Jeff Trawick]\n\n  *) mpm_prefork: Reduce spawn rate after a child process exits due to\n     unexpected poll or accept failure.  [Jeff Trawick]\n\n  *) core: Log value of Status header line in script responses rather\n     than the fixed header name.  [Chris Darroch]\n\n  *) mod_ssl: Fix handling of empty response from OCSP server.\n     [Jim Meyering <meyering redhat.com>, Joe Orton]\n\n  *) mpm_event: Fix handling of MaxConnectionsPerChild. [Stefan Fritsch]\n\n  *) mod_authz_core: If an expression in \"Require expr\" returns denied and\n     references %{REMOTE_USER}, trigger authentication and retry. PR 52892.\n     [Stefan Fritsch]\n\n  *) core: Always log if LimitRequestFieldSize triggers.  [Stefan Fritsch]\n\n  *) mod_deflate: Skip compression if compression is enabled at SSL level.\n     [Stefan Fritsch]\n\n  *) core: Add missing HTTP status codes registered with IANA.\n     [Julian Reschke <julian.reschke gmx.de>, Rainer Jung]\n\n  *) mod_ldap: Treat the \"server unavailable\" condition as a transient\n     error with all LDAP SDKs.  [Filip Valder <filip.valder vsb.cz>]\n\n  *) core: Fix spurious \"not allowed here\" error returned when the Options \n     directive is used in .htaccess and \"AllowOverride Options\" (with no \n     specific options restricted) is configured.  PR 53444. [Eric Covener]\n\n  *) mod_authz_core: Fix parsing of Require arguments in <AuthzProviderAlias>.\n     PR 53048. [Stefan Fritsch]\n\n  *) mod_log_config: Fix %{abc}C truncating cookie values at first \"=\".\n     PR 53104. [Greg Ames]\n\n  *) mod_ext_filter: Fix error_log spam when input filters are configured.  \n     [Joe Orton]\n\n  *) mod_rewrite: Add \"AllowAnyURI\" option. PR 52774. [Joe Orton]\n\n  *) htdbm, htpasswd: Don't crash if crypt() fails (e.g. with FIPS enabled). \n     [Paul Wouters <pwouters redhat.com>, Joe Orton]\n\n  *) core: Use a TLS 1.0 close_notify alert for internal dummy connection if\n     the chosen listener is configured for https. [Joe Orton]\n\n  *) mod_proxy: Use the the same hostname for SNI as for the HTTP request when\n     forwarding to SSL backends. PR 53134.\n     [Michael Weiser <michael weiser.dinsnail.net>, Ruediger Pluem]\n\n  *) mod_info: Display all registered providers. [Stefan Fritsch]\n\n  *) mod_ssl: Send the error message for speaking http to an https port using\n     HTTP/1.0 instead of HTTP/0.9, and omit the link that may be wrong when\n     using SNI. PR 50823. [Stefan Fritsch]\n\n  *) core: Fix segfault in logging if r->useragent_addr or c->client_addr is\n     unset. PR 53265. [Stefan Fritsch]\n\n  *) log_server_status: Bring Perl style forward to the present, use\n     standard modules, update for new format of server-status output.\n     PR 45424. [Richard Bowen, Dave Brondsema, and others]\n\n  *) mod_sed, mod_log_debug, mod_rewrite: Symbol namespace cleanups. \n     [Joe Orton, Andr\u00e9 Malo]\n\n  *) core: Prevent \"httpd -k restart\" from killing server in presence of\n     config error. [Joe Orton]\n\n  *) mod_proxy_fcgi: If there is an error reading the headers from the\n     backend, send an error to the client. PR 52879. [Stefan Fritsch]\n\nChanges with Apache 2.4.2\n\n  *) SECURITY: CVE-2012-0883 (cve.mitre.org)\n     envvars: Fix insecure handling of LD_LIBRARY_PATH that could lead to the\n     current working directory to be searched for DSOs. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Honor DefaultRuntimeDir [Jim Jagielski]\n\n  *) mod_ssl: Fix crash with threaded MPMs due to race condition when\n     initializing EC temporary keys. [Stefan Fritsch]\n\n  *) mod_rewrite: Fix RewriteCond integer checks to be parsed correctly.\n     PR 53023. [Axel Reinhold <apache freakout.de>, Andr\u00e9 Malo]\n\n  *) mod_proxy: Add the forcerecovery balancer parameter that determines if\n     recovery for balancer workers is enforced. [Ruediger Pluem]\n\n  *) Fix MPM DSO load failure on AIX.  [Jeff Trawick]\n\n  *) mod_proxy: Correctly set up reverse proxy worker. PR 52935.\n     [Petter Berntsen <petterb gmail.com>]\n\n  *) mod_sed: Don't define PATH_MAX to a potentially undefined value, causing\n     compile problems on GNU hurd. [Stefan Fritsch]\n\n  *) core: Add ap_runtime_dir_relative() and DefaultRuntimeDir.\n     [Jeff Trawick]\n\n  *) core: Fix breakage of Listen directives with MPMs that use a\n     per-directory config. PR 52904. [Stefan Fritsch]\n\n  *) core: Disallow directives in AllowOverrideList which are only allowed\n     in VirtualHost or server context. These are usually not prepared to be\n     called in .htaccess files. [Stefan Fritsch]\n\n  *) core: In AllowOverrideList, do not allow 'None' together with other\n     directives. PR 52823. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Support DEFAULT_REL_RUNTIMEDIR for file-based shm.\n     [Jim Jagielski]\n\n  *) core: Fix merging of AllowOverrideList and ContentDigest.\n     [Stefan Fritsch]\n\n  *) mod_request: Fix validation of the KeptBodySize argument so it\n     doesn't always throw a configuration error. PR 52981 [Eric Covener]\n\n  *) core: Add filesystem paths to access denied / access failed messages\n     AH00035 and AH00036. [Eric Covener]\n\n  *) mod_dumpio: Properly handle errors from subsequent input filters.\n     PR 52914. [Stefan Fritsch]\n\n  *) Unix MPMs: Fix small memory leak in parent process if connect()\n     failed when waking up children.  [Joe Orton]\n\n  *) \"DirectoryIndex disabled\" now undoes DirectoryIndex settings in\n     the current configuration section, not just previous config sections.\n     PR 52845. [Eric Covener]\n\n  *) mod_xml2enc: Fix broken handling of EOS buckets which could lead to\n     response headers not being sent. PR 52766. [Stefan Fritsch]\n\n  *) mod_ssl: Properly free the GENERAL_NAMEs. PR 32652. [Kaspar Brand]\n\n  *) core: Check during config test that directories for the access\n     logs actually exist. PR 29941. [Stefan Fritsch]\n\n  *) mod_xml2enc, mod_proxy_html: Enable per-module loglevels.\n     [Stefan Fritsch]\n\n  *) mod_filter: Fix segfault with AddOutputFilterByType. PR 52755.\n     [Stefan Fritsch]\n\n  *) mod_session: Sessions are encoded as application/x-www-form-urlencoded\n     strings, however we do not handle the encoding of spaces properly.\n     Fixed. [Graham Leggett]\n\n  *) Configuration: Example in comment should use a path consistent\n     with the default configuration. PR 52715.\n     [Rich Bowen, Jens Schleusener, Rainer Jung]\n\n  *) Configuration: Switch documentation links from trunk to 2.4.\n     [Rainer Jung]\n\n  *) configure: Fix out of tree build using apr and apr-util in srclib.\n     [Rainer Jung]\n\nChanges with Apache 2.4.1\n\n  *) SECURITY: CVE-2012-0053 (cve.mitre.org)\n     Fix an issue in error responses that could expose \"httpOnly\" cookies\n     when no custom ErrorDocument is specified for status code 400.  \n     [Eric Covener]\n\n  *) mod_proxy_balancer: Fix crash on Windows. PR 52402 [Mladen Turk]\n\n  *) core: Check during configtest that the directories for error logs exist.\n     PR 29941 [Stefan Fritsch]\n\n  *) Core configuration: add AllowOverride option to treat syntax\n     errors in .htaccess as non-fatal. PR 52439 [Nick Kew, Jim Jagielski]\n\n  *) core: Fix memory consumption in core output filter with streaming\n     bucket types like CGI or PIPE.  [Joe Orton, Stefan Fritsch]\n\n  *) configure: Disable modules at configure time if a prerequisite module\n     is not enabled. PR 52487. [Stefan Fritsch]\n\n  *) Rewrite and proxy now decline what they don't support rather\n     than fail the request. [Joe Orton]\n\n  *) Fix building against external apr plus apr-util if apr is not installed\n     in a system default path. [Rainer Jung]\n\n  *) Doxygen fixes and improvements. [Joe Orton, Igor Gali\u0107]\n\n  *) core: Fix building against PCRE 8.30 by switching from the obsolete\n     pcre_info() to pcre_fullinfo(). PR 52623 [Ruediger Pluem, Rainer Jung]\n\nChanges with Apache 2.4.0\n\n  *) SECURITY: CVE-2012-0031 (cve.mitre.org)\n     Fix scoreboard issue which could allow an unprivileged child process\n     to cause the parent to crash at shutdown rather than terminate\n     cleanly.  [Joe Orton]\n\n  *) mod_ssl: Fix compilation with xlc on AIX. PR 52394. [Stefan Fritsch]\n\n  *) SECURITY: CVE-2012-0021 (cve.mitre.org)\n     mod_log_config: Fix segfault (crash) when the '%{cookiename}C' log format\n     string is in use and a client sends a nameless, valueless cookie, causing\n     a denial of service. The issue existed since version 2.2.17 and 2.3.3.\n     PR 52256.  [Rainer Canavan <rainer-apache 7val com>]\n\n  *) mod_ssl: when compiled against OpenSSL 1.0.1 or later, allow explicit\n     control of TLSv1.1 and TLSv1.2 through the SSLProtocol directive.\n     [Kaspar Brand]\n\n  *) mod_ssl: set OPENSSL_NO_SSL_INTERN when compiling against OpenSSL 1.0.1\n     or later, to improve binary compatibility with future OpenSSL releases.\n     [Kaspar Brand]\n\n  *) mod_mime: Don't arbitrarily bypass AddOutputFilter during a ProxyPass,\n     but then allow AddOutputFilter during a RewriteRule [P]. Make mod_mime\n     behave identically in both cases. PR52342. [Graham Leggett]\n\n  *) Move ab, logresolve, httxt2dbm and apxs to bin from sbin, along with\n     corresponding man pages. [Graham Leggett]\n\n  *) Distinguish properly between the bindir and sbindir directories when\n     installing binaries. Previously all binaries were silently installed to\n     sbindir, whether they were system administration commands or not.\n     [Graham Leggett]\n\nChanges with Apache 2.3.16\n\n  *) SECURITY: CVE-2011-4317 (cve.mitre.org)\n     Resolve additional cases of URL rewriting with ProxyPassMatch or\n     RewriteRule, where particular request-URIs could result in undesired\n     backend network exposure in some configurations.\n     [Joe Orton]\n\n  *) core: Limit line length in .htaccess to 8K like in 2.2.x, to avoid\n     additional DoS potential. [Stefan Fritsch]\n\n  *) core, all modules: Add unique tag to most error log messages. [Stefan\n     Fritsch]\n\n  *) mod_socache_memcache: Change provider name from \"mc\" to \"memcache\" to\n     match module name. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Change provider name from \"shared\" to \"shm\" to match\n     module name. [Stefan Fritsch]\n\n  *) mod_ldap: Fix segfault with Solaris LDAP when enabling ldaps. This\n     requires an apr-util fix in which is available in apr-util >= 1.4.0.\n     PR 42682. [Stefan Fritsch]\n\n  *) mod_rewrite: Add the AllowNoSlash RewriteOption, which makes it possible\n     for RewriteRules to be placed in .htaccess files that match the directory\n     with no trailing slash. PR 48304.\n     [Matthew Byng-Maddick <matthew byng-maddick bbc.co.uk>]\n\n  *) mod_session_crypto: Add a SessionCryptoPassphraseFile directive so that\n     the administrator can hide the keys from the configuration. [Graham\n     Leggett]\n\n  *) Introduce a per request version of the remote IP address, which can be\n     optionally modified by a module when the effective IP of the client\n     is not the same as the real IP of the client (such as a load balancer).\n     Introduce a per connection \"peer_ip\" and a per request \"client_ip\" to\n     distinguish between the raw IP address of the connection and the effective\n     IP address of the request. [Graham Leggett]\n\n  *) ap_pass_brigade_fchk() function added. [Jim Jagielski]\n\n  *) core: Pass ap_errorlog_info struct to error log hook. [Stefan Fritsch]\n\n  *) mod_cache_disk: Make sure we check return codes on all writes and\n     attempts to close, and clean up after ourselves in these cases.\n     PR43589. [Graham Leggett]\n\n  *) mod_cache_disk: Remove the unnecessary intermediate brigade while\n     writing to disk. Fixes a problem where mod_disk_cache was leaving\n     buckets in the intermediate brigade and not passing them to out on\n     exit. [Florian S. <f_los_ch yahoo.com>, Graham Leggett]\n\n  *) mod_ssl: use a shorter setting for SSLCipherSuite in the default\n     default configuration file, and add some more information about\n     configuring a speed-optimized alternative.\n     [Kaspar Brand]\n\n  *) mod_ssl: drop support for the SSLv2 protocol. [Kaspar Brand]\n\n  *) mod_lua: Stop losing track of all but the most specific LuaHook* directives\n     when multiple per-directory config sections are used.  Adds LuaInherit \n     directive to control how parent sections are merged.  [Eric Covener]\n\n  *) Server directive display (-L): Include directives of DSOs.\n     [Jeff Trawick]\n\n  *) mod_cache: Make sure we merge headers correctly when we handle a\n     non cacheable conditional response. PR52120. [Graham Leggett]\n\n  *) Pre GA removal of components that will not be included:\n     - mod_noloris was superseded by mod_reqtimeout\n     - mod_serf\n     - mpm_simple\n     [Rainer Jung]\n\n  *) core: Set MaxMemFree 2048 by default. [Stefan Fritsch]\n\n  *) mpm_event: Fix assertion failure during very high load. [Stefan Fritsch]\n\n  *) configure: Additional modules loaded by default: mod_headers.\n     Modules moved from module set \"few\" to \"most\" and no longer loaded\n     by default: mod_actions, mod_allowmethods, mod_auth_form, mod_buffer,\n     mod_cgi(d), mod_include, mod_negotiation, mod_ratelimit, mod_request,\n     mod_userdir. [Rainer Jung]\n\n  *) mod_lua: Use the right lua scope when used as a hook. [Rainer Jung]\n\n  *) configure: Only load the really imporant modules (i.e. those enabled by\n     the 'few' selection) by default. Don't handle modules enabled with\n     --enable-foo specially. [Stefan Fritsch]\n\n  *) end-generation hook: Fix false notification of end-of-generation for\n     temporary intervals with no active MPM children.  [Jeff Trawick]\n\n  *) mod_ssl: Add support for configuring persistent TLS session ticket\n     encryption/decryption keys (useful for clustered environments).\n     [Paul Querna, Kaspar Brand]\n\n  *) mod_usertrack: Use random value instead of remote IP address.\n     [Stefan Fritsch]\n\nChanges with Apache 2.3.15\n\n  *) SECURITY: CVE-2011-3348 (cve.mitre.org)\n     mod_proxy_ajp: Respond with HTTP_NOT_IMPLEMENTED when the method is not\n     recognized.  [Jean-Frederic Clere]\n\n  *) SECURITY: CVE-2011-3192 (cve.mitre.org)\n     core: Fix handling of byte-range requests to use less memory, to avoid\n     denial of service. If the sum of all ranges in a request is larger than\n     the original file, ignore the ranges and send the complete file.\n     PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener,\n     <lowprio20 gmail.com>]\n\n  *) SECURITY: CVE-2011-3607 (cve.mitre.org)\n     core: Fix integer overflow in ap_pregsub. This can be triggered e.g.\n     with mod_setenvif via a malicious .htaccess. [Stefan Fritsch]\n\n  *) SECURITY: CVE-2011-3368 (cve.mitre.org)\n     Reject requests where the request-URI does not match the HTTP\n     specification, preventing unexpected expansion of target URLs in\n     some reverse proxy configurations.  [Joe Orton]\n\n  *) configure: Load all modules in the generated default configuration\n     when using --enable-load-all-modules. [Rainer Jung]\n\n  *) mod_reqtimeout: Change the default to set some reasonable timeout\n     values. [Stefan Fritsch]\n\n  *) core, mod_dav_fs: Change default ETag to be \"size mtime\", i.e. remove\n     the inode. PR 49623. [Stefan Fritsch]\n\n  *) mod_lua: Expose SSL variables via r:ssl_var_lookup().  [Eric Covener]\n\n  *) mod_lua: LuaHook{AccessChecker,AuthChecker,CheckUserID,TranslateName}\n     can now additionally be run as \"early\" or \"late\" relative to other modules.\n     [Eric Covener]\n\n  *) configure: By default, only load those modules that are either required\n     or explicitly selected by a configure --enable-foo argument. The\n     LoadModule statements for modules enabled by --enable-mods-shared=most\n     and friends will be commented out. [Stefan Fritsch]\n\n  *) mod_lua: Prevent early Lua hooks (LuaHookTranslateName and \n     LuaHookQuickHandler) from being configured in <Directory>, <Files>, \n     and htaccess where the configuration would have been ignored.\n     [Eric Covener]\n\n  *) mod_lua: Resolve \"attempt to index local 'r' (a userdata value)\" errors\n     in LuaMapHandler scripts [Eric Covener]\n\n  *) mod_log_debug: Rename optional argument from if= to expr=, to be more\n     in line with other config directives. [Stefan Fritsch]\n\n  *) mod_headers: Require an expression to be specified with expr=, to be more\n     in line with other config directives. [Stefan Fritsch]\n\n  *) mod_substitute: To prevent overboarding memory usage, limit line length\n     to 1MB. [Stefan Fritsch]\n\n  *) mod_lua: Make the query string (r.args) writable. [Eric Covener]\n\n  *) mod_include: Add support for application/x-www-form-urlencoded encoding\n     and decoding. [Graham Leggett]\n\n  *) rotatelogs: Add -c option to force logfile creation in every rotation \n     interval, even if empty.  [Jan Kalu\u017ea <jkaluza redhat.com>]\n \n  *) core: Limit ap_pregsub() to 64K, add ap_pregsub_ex() for longer strings.\n     [Stefan Fritsch]\n\n  *) mod_session_crypto: Refactor to support the new apr_crypto API.\n     [Graham Leggett]\n\n  *) http: Add missing Location header if local URL-path is used as\n     ErrorDocument for 30x. [Stefan Fritsch]\n\n  *) mod_buffer: Make sure we step down for subrequests, but not for internal\n     redirects triggered by mod_rewrite. [Graham Leggett]\n\n  *) mod_lua: add r:construct_url as a wrapper for ap_construct_url.\n     [Eric Covener]\n \n  *) mod_remote_ip: Fix configuration of internal proxies. PR 49272.\n     [Jim Riggs <jim riggs me>]\n\n  *) mpm_winnt: Handle AcceptFilter 'none' mode correctly; resolve specific\n     server IP endpoint and remote client IP upon connection.  [William Rowe]\n\n  *) mod_setenvif: Remove OID match which is obsoleted by SetEnvIfExpr with\n     PeerExtList(). [Stefan Fritsch]\n\n  *) mpm_prefork, mpm_worker, mpm_event: If a child is created just before\n     graceful restart and then exits because of a missing lock file, don't\n     shutdown the whole server. PR 39311. [Shawn Michael\n     <smichael rightnow com>]\n\n  *) mpm_event: Check the return value from ap_run_create_connection.\n     PR: 41194. [Davi Arnaut]\n\n  *) mod_mime_magic: Add signatures for PNG and SWF to the example config.\n     PR: 48352. [Jeremy Wagner-Kaiser <jwagner-kaiser adknowledge com>]\n\n  *) core, unixd: Add -D DUMP_RUN_CFG option to dump some configuration items\n     from the parsed (or default) config. This is useful for init scripts that\n     need to setup temporary directories and permissions. [Stefan Fritsch]\n\n  *) core, mod_actions, mod_asis: Downgrade error log messages which accompany\n     a 404 request status from loglevel error to info. PR: 35768. [Stefan\n     Fritsch]\n\n  *) core: Fix hook sorting with Perl modules. PR: 45076. [Torsten Foertsch\n     <torsten foertsch gmx net>]\n\n  *) core: Enforce LimitRequestFieldSize after multiple headers with the same\n     name have been merged. [Stefan Fritsch]\n\n  *) mod_ssl: If MaxMemFree is set, ask OpenSSL >= 1.0.0 to reduce memory\n     usage.  PR 51618. [Cristian Rodr\u00edguez <crrodriguez opensuse org>,\n     Stefan Fritsch]\n\n  *) mod_ssl: At startup, when checking a server certificate whether it\n     matches the configured ServerName, also take dNSName entries in the\n     subjectAltName extension into account. PR 32652, PR 47051. [Kaspar Brand]\n\n  *) mod_substitute: Reduce memory usage and copying of data. PR 50559.\n     [Stefan Fritsch]\n\n  *) mod_ssl/proxy: enable the SNI extension for backend TLS connections\n     [Kaspar Brand]\n\n  *) Add wrappers for malloc, calloc, realloc that check for out of memory\n     situations and use them in many places. PR 51568, PR 51569, PR 51571.\n     [Stefan Fritsch]\n\n  *) Fix cross-compilation of mod_cgi/mod_cgid when APR_HAVE_STRUCT_RLIMIT is \n     false but RLIMIT_* are defined.  PR51371. [Eric Covener]\n\n  *) core: Correctly obey ServerName / ServerAlias if the Host header from the\n     request matches the VirtualHost address.\n     PR 51709. [Micha Lenk <micha lenk.info>]\n\n  *) mod_unique_id: Use random number generator to initialize counter.\n     PR 45110. [Stefan Fritsch]\n\n  *) core: Add convenience API for apr_random. [Stefan Fritsch]\n\n  *) core: Add MaxRangeOverlaps and MaxRangeReversals directives to control\n     the number of overlapping and reversing ranges (respectively) permitted\n     before returning the entire resource, with a default limit of 20.\n     [Jim Jagielski]\n\n  *) mod_ldap: Optional function uldap_ssl_supported(r) always returned false\n     if called from a virtual host with mod_ldap directives in it.  Did not\n     affect mod_authnz_ldap's usage of mod_ldap.  [Eric Covener]\n\n  *) mod_filter: Instead of dropping the Accept-Ranges header when a filter\n     registered with AP_FILTER_PROTO_NO_BYTERANGE is present,\n     set the header value to \"none\". [Eric Covener, Ruediger Pluem]\n\n  *) core: Allow MaxRanges none|unlimited|default and set 'Accept-Ranges: none'\n     in the case Ranges are being ignored with MaxRanges none.\n     [Eric Covener]\n\n  *) mod_ssl: revamp CRL-based revocation checking when validating\n     certificates of clients or proxied servers. Completely delegate\n     CRL processing to OpenSSL, and add a new [Proxy]CARevocationCheck\n     directive for controlling the revocation checking mode. [Kaspar Brand]\n\n  *) core: Add MaxRanges directive to control the number of ranges permitted\n     before returning the entire resource, with a default limit of 200.\n     [Eric Covener]\n\n  *) mod_cache: Ensure that CacheDisable can correctly appear within\n     a LocationMatch. [Graham Leggett]\n\n  *) mod_cache: Fix the moving of the CACHE filter, which erroneously\n     stood down if the original filter was not added by configuration.\n     [Graham Leggett]\n\n  *) mod_ssl: improve certificate error logging. PR 47408. [Kaspar Brand]\n\n  *) mod_authz_groupfile: Increase length limit of lines in the group file to\n     16MB. PR 43084. [Stefan Fritsch]\n\n  *) core: Increase length limit of lines in the configuration file to 16MB.\n     PR 45888. PR 50824. [Stefan Fritsch]\n\n  *) core: Add API for resizable buffers. [Stefan Fritsch]\n\n  *) mod_ldap: Enable LDAPConnectionTimeout for LDAP toolkits that have\n     LDAP_OPT_CONNECT_TIMEOUT instead of LDAP_OPT_NETWORK_TIMEOUT, such\n     as Tivoli Directory Server 6.3 and later. [Eric Covener]\n\n  *) mod_ldap: Change default number of retries from 10 to 3, and add\n     an LDAPRetries and LDAPRetryDelay directives. [Eric Covener]\n\n  *) mod_authnz_ldap: Don't retry during authentication, because this just\n     multiplies the ample retries already being done by mod_ldap. [Eric Covener]\n\n  *) configure: Allow to explicitly disable modules even with module selection\n     'reallyall'. [Stefan Fritsch]\n\n  *) mod_rewrite: Check validity of each internal (int:) RewriteMap even if the\n     RewriteEngine is disabled in server context, avoiding a crash while\n     referencing the invalid int: map at runtime. PR 50994.\n     [Ben Noordhuis <info noordhuis nl>]\n\n  *) mod_ssl, configure: require OpenSSL 0.9.7 or later. [Kaspar Brand]\n\n  *) mod_ssl: remove ssl_toolkit_compat layer. [Kaspar Brand]\n\n  *) mod_ssl, configure, ab: drop support for RSA BSAFE SSL-C toolkit.\n     [Kaspar Brand]\n\n  *) mod_usertrack: Run mod_usertrack earlier in the fixups hook to ensure the\n     cookie is set when modules such as mod_rewrite trigger a redirect. Also\n     use r->err_headers_out for the cookie, for the same reason.  PR29755.\n     [Sami J. M\u00e4kinen <sjm almamedia fi>, Eric Covener]\n\n  *) mod_proxy_http, mod_proxy_connect: Add 'proxy-status' and\n     'proxy-source-port' request notes for logging. PR 30195. [Stefan Fritsch]\n\n  *) configure: Enable ldap modules in 'all' and 'most' selections if ldap\n     is compiled into apr-util. [Stefan Fritsch]\n\n  *) core: Add ap_check_cmd_context()-check if a command is executed in\n     .htaccess file. [Stefan Fritsch]\n\n  *) mod_deflate: Fix endless loop if first bucket is metadata. PR 51590.\n     [Torsten Foertsch <torsten foertsch gmx net>]\n\n  *) mod_authn_socache: Fix to work in .htaccess if not configured anywhere\n     in httpd.conf, and introduce an AuthnCacheEnable directive.\n     PR 51991 [Nick Kew]\n\n  *) mod_xml2enc: new (formerly third-party) module supporting\n     internationalisation for filters via smart charset sniffing\n     and conversion. [Nick Kew]\n\n  *) mod_proxy_html: new (formerly third-party) module to fix up\n     HTML links in a reverse proxy situation, where a backend\n     generates URLs that are not resolvable by Clients. [Nick Kew]\n\nChanges with Apache 2.3.14\n\n  *) mod_proxy_ajp: Improve trace logging.  [Rainer Jung]\n\n  *) mod_proxy_ajp: Respect \"reuse\" flag in END_REPONSE packets.\n     [Rainer Jung]\n\n  *) mod_proxy: enable absolute URLs to be rewritten with ProxyPassReverse,\n     e.g. to reverse proxy \"Location: https://other-internal-server/login\"\n     [Nick Kew]\n\n  *) prefork, worker, event: Make sure crashes are logged to the error log if\n     httpd has already detached from the console. [Stefan Fritsch]\n\n  *) prefork, worker, event: Reduce period during startup/restart where a\n     successive signal may be lost. PR 43696. [Arun Bhalla <arun shme net>]\n\n  *) mod_allowmethods: Correct Merging of \"reset\" and do not allow an\n     empty parameter list for the AllowMethods directive. [Rainer Jung]\n\n  *) configure: Update selection of modules for 'all' and 'most'. 'all' will\n     now enable all modules except for example and test modules. Make the\n     selection for 'most' more useful (including ssl and proxy). Both 'all'\n     and 'most' will now disable modules if dependencies are missing instead\n     of aborting. If a specific module is requested with --enable-XXX=yes,\n     missing dependencies will still cause configure to exit with an error.\n     [Stefan Fritsch]\n\n  *) mod_ldap: Revert the integration of apr-ldap as ap_ldap which was done\n     in 2.3.13. [Stefan Fritsch]\n\n  *) core: For '*' or '_default_' vhosts, use a wildcard address of any\n     address family, rather than IPv4 only.  [Joe Orton]\n\n  *) core, mod_rewrite, mod_ssl, mod_nw_ssl: Make the SERVER_NAME variable\n     include [ ] for literal IPv6 addresses, as mandated by RFC 3875.\n     PR 26005. [Stefan Fritsch]\n\n  *) mod_negotiation: Fix parsing of Content-Length in type maps. PR 42203.\n     [Nagae Hidetake <nagae eagan jp>]\n\n  *) core: Add more logging to ap_scan_script_header_err* functions. Add\n     ap_scan_script_header_err*_ex functions that take a module index for\n     logging.\n     mod_cgi, mod_cgid, mod_proxy_fcgi, mod_proxy_scgi, mod_isapi: Use the\n     new functions in order to make logging configurable per-module.\n     [Stefan Fritsch]\n\n  *) mod_dir: Add DirectoryIndexRedirect to send an external redirect to\n     the proper index.  [Eric Covener]\n\n  *) mod_deflate: Don't try to compress requests with a zero sized body.\n     PR 51350. [Stefan Fritsch]\n\n  *) core: Fix startup on IPv6-only systems. PR 50592. [Joe Orton,\n     <root linkage white-void net>]\n\n  *) suexec: Add environment variables CONTEXT_DOCUMENT_ROOT, CONTEXT_PREFIX,\n     REDIRECT_ERROR_NOTES, REDIRECT_SCRIPT_FILENAME, REQUEST_SCHEME to the\n     whitelist in suexec. PR 51499. [Graham Laverty <graham reg ca>,\n     Stefan Fritsch]\n\n  *) mod_rewrite: Fix regexp RewriteCond with NoCase. [Stefan Fritsch]\n\n  *) mod_log_debug: New module that allows to log custom messages at various\n     phases in the request processing. [Stefan Fritsch]\n\n  *) mod_ssl: Add some debug logging when loading server certificates.\n     PR 37912. [Nick Burch <nick burch alfresco com>]\n\n  *) configure: Support reallyall option also for --enable-mods-static.\n     [Rainer Jung]\n\n  *) mod_socache_dc: add --with-distcache to configure for choosing\n     the distcache installation directory. [Rainer Jung]\n\n  *) mod_socache_dc: use correct build variable MOD_SOCACHE_DC_LDADD\n     instead of MOD_SOCACHE_LDADD in build macro. [Rainer Jung]\n\n  *) mod_lua, mod_deflate: respect platform specific runpath linker\n     flag. [Rainer Jung]\n\n  *) configure: Only link the httpd binary against PCRE. No other support\n     binary needs PCRE. [Rainer Jung]\n\n  *) configure: tolerate dependency checking failures for modules if\n     they have been enabled implicitely. [Rainer Jung]\n\n  *) configure: Allow to specify module specific custom linker flags via\n     the MOD_XXX_LDADD variables. [Rainer Jung]\n\nChanges with Apache 2.3.13\n\n  *) ab: Support specifying the local address to use. PR 48930.\n     [Peter Schuller <scode spotify com>]\n\n  *) core: Add support to ErrorLogFormat for logging the system unique\n     thread id under Linux. [Stefan Fritsch]\n\n  *) event: New AsyncRequestWorkerFactor directive to influence how many\n     connections will be accepted per process. [Stefan Fritsch]\n\n  *) prefork, worker, event: Rename MaxClients to MaxRequestWorkers which\n     describes more accurately what it does. [Stefan Fritsch]\n\n  *) rotatelogs: Add -p argument to specify custom program to invoke\n     after a log rotation.  PR 51285. [Sven Ulland <sveniu ifi.uio.no>,\n     Joe Orton]\n\n  *) mod_ssl: Don't do OCSP checks for valid self-issued certs. [Kaspar Brand]\n\n  *) mod_ssl: Avoid unnecessary renegotiations with SSLVerifyDepth 0.\n     PR 48215. [Kaspar Brand]\n\n  *) mod_status: Display information about asynchronous connections in the\n     server-status. PR 44377. [Stefan Fritsch]\n\n  *) mpm_event: If the number of connections of a process is very high, or if\n     all workers are busy, don't accept new connections in that process.\n     [Stefan Fritsch]\n\n  *) mpm_event: Process lingering close asynchronously instead of tying up\n     worker threads. [Jeff Trawick, Stefan Fritsch]\n\n  *) mpm_event: If MaxMemFree is set, limit the number of pools that is kept\n     around. [Stefan Fritsch]\n\n  *) mpm_event: Fix graceful restart aborting connections. PR 43359.\n     [Takashi Sato <takashi lans-tv com>]\n\n  *) mod_ssl: Disable AECDH ciphers in example config. PR 51363.\n     [Rob Stradling <rob comodo com>]\n\n  *) core: Introduce new function ap_get_conn_socket() to access the socket of\n     a connection. [Stefan Fritsch]\n\n  *) mod_data: Introduce a filter to support RFC2397 data URLs. [Graham\n     Leggett]\n\n  *) mod_userdir/mod_alias/mod_vhost_alias: Correctly set DOCUMENT_ROOT,\n     CONTEXT_DOCUMENT_ROOT, CONTEXT_PREFIX. PR 26052. PR 46198.\n     [Stefan Fritsch]\n\n  *) core: Allow to override document_root on a per-request basis. Introduce\n     new context_document_root and context_prefix which provide information\n     about non-global URI-to-directory mappings (from e.g. mod_userdir or\n     mod_alias) to scripts. PR 49705. [Stefan Fritsch]\n\n  *) core: Add <ElseIf> and <Else> to complement <If> sections.\n     [Stefan Fritsch]\n\n  *) mod_ext_filter: Remove DebugLevel option in favor of per-module loglevel.\n     [Stefan Fritsch]\n\n  *) mod_include: Make the \"#if expr\" element use the new \"ap_expr\" expression\n     parser. The old parser can still be used by setting the new directive\n     SSILegacyExprParser. [Stefan Fritsch]\n\n  *) core: Add some features to ap_expr for use by mod_include: a restricted\n     mode that does not allow to bypass request access restrictions; new\n     variables DOCUMENT_URI (alias for REQUEST_URI), LAST_MODIFIED; -A as an\n     alias for -U; an additional data entry in ap_expr_eval_ctx_t for use by\n     the consumer; an extensible ap_expr_exec_ctx() API that allows to use that\n     data entry. [Stefan Fritsch]\n\n  *) mod_include: Merge directory configs instead of one SSI* config directive\n     causing all other per-directory SSI* config directives to be reset.\n     [Stefan Fritsch]\n\n  *) mod_charset_lite: Remove DebugLevel option in favour of per-module\n     loglevel. [Stefan Fritsch]\n\n  *) core: Add ap_regexec_len() function that works with non-null-terminated\n     strings. PR 51231. [Yehezkel Horowitz <horowity checkpoint com>]\n\n  *) mod_authnz_ldap: If the LDAP server returns constraint violation,\n     don't treat this as an error but as \"auth denied\". [Stefan Fritsch]\n\n  *) mod_proxy_fcgi|scgi: Add support for \"best guess\" of PATH_INFO\n     for SCGI/FCGI. PR 50880, 50851. [Mark Montague <mark catseye.org>,\n     Jim Jagielski]\n\n  *) mod_cache: When content is served stale, and there is no means to\n     revalidate the content using ETag or Last-Modified, and we have\n     mandated no stale-on-error behaviour, stand down and don't cache.\n     Saves a cache write that will never be read.\n     [Graham Leggett]\n\n  *) mod_reqtimeout: Fix a timed out connection going into the keep-alive\n     state after a timeout when discarding a request body. PR 51103.\n     [Stefan Fritsch]\n\n  *) core: Add various file existance test operators to ap_expr.\n     [Stefan Fritsch]\n\n  *) mod_proxy_express: New mass reverse-proxy switch extension for\n     mod_proxy. [Jim Jagielski]\n\n  *) configure: Fix script error when configuring module set \"reallyall\".\n     [Rainer Jung]\n\nChanges with Apache 2.3.12\n\n  *) configure, core: Provide easier support for APR's hook probe\n     capability. [Jim Jagielski, Jeff Trawick]\n\n  *) Silence autoconf 2.68 warnings.  [Rainer Jung]\n\n  *) mod_authnz_ldap: Resolve crash when LDAP is used for authorization only\n     [Scott Hill <shill genscape.com>]\n\n  *) support: Make sure check_forensic works with mod_unique_id loaded\n     [Joe Schaefer]\n\n  *) Add child_status hook for tracking creation/termination of MPM child\n     processes.  Add end_generation hook for notification when the last\n     MPM child of a generation exits. [Jeff Trawick]\n\n  *) mod_ldap: Make LDAPSharedCacheSize 0 create a non-shared-memory cache per\n     process as opposed to disabling caching completely. This allows to use\n     the non-shared-memory cache as a workaround for the shared memory cache\n     not being available during graceful restarts. PR 48958. [Stefan Fritsch]\n\n  *) Add new ap_reserve_module_slots/ap_reserve_module_slots_directive API,\n     necessary if a module (like mod_perl) registers additional modules late\n     in the startup phase. [Stefan Fritsch]\n\n  *) core: Prevent segfault if DYNAMIC_MODULE_LIMIT is reached. PR 51072.\n     [Torsten F\u00f6rtsch <torsten foertsch gmx net>]\n\n  *) WinNT MPM: Improve robustness under heavy load.  [Jeff Trawick]\n\n  *) MinGW build improvements.  PR 49535.  [John Vandenberg\n     <jayvdb gmail.com>, Jeff Trawick]\n\n  *) core: Support module names with colons in loglevel configuration.\n     [Torsten F\u00f6rtsch <torsten foertsch gmx net>]\n\n  *) mod_ssl, ab: Support OpenSSL compiled without SSLv2 support.\n     [Stefan Fritsch]\n\n  *) core: Abort if the MPM is changed across restart.  [Jeff Trawick]\n\n  *) mod_proxy_ajp: Add support for 'ProxyErrorOverride on'. PR 50945.\n     [Peter Pramberger <peter pramberger.at>, Jim Jagielski]\n\n  *) mod_proxy_fcgi: Add support for 'ProxyErrorOverride on'. PR 50913.\n     [Mark Montague <mark catseye.org>, Jim Jagielski]\n\n  *) core: Change the APIs of ap_cfg_getline() and ap_cfg_getc() to return an\n     error code. Abort with a nice error message if a config line is too long.\n     Partial fix for PR 50824. [Stefan Fritsch]\n\n  *) mod_info: Dump config to stdout during startup if -DDUMP_CONFIG is\n     specified. PR 31956. [Stefan Fritsch]\n\n  *) Restore visibility of DEFAULT_PIDLOG to core and modules.  MPM\n     helper function ap_remove_pid() added.  [Jeff Trawick]\n\n  *) Enable DEFAULT_REL_RUNTIMEDIR on Windows and NetWare.  [various]\n\n  *) Correct C++ incompatibility with http_log.h.  [Stefan Fritsch, Jeff\n     Trawick]\n\n  *) mod_log_config: Prevent segfault. PR 50861. [Torsten F\u00f6rtsch\n     <torsten.foertsch gmx.net>]\n\n  *) core: AllowEncodedSlashes new option NoDecode to allow encoded slashes\n     in request URL path info but not decode them. Change behavior of option\n     \"On\" to decode the encoded slashes as 2.0 and 2.2 do.  PR 35256,\n     PR 46830.  [Dan Poirier]\n\n  *) mod_ssl: Check SNI hostname against Host header case-insensitively.\n     PR 49491.  [Mayank Agrawal <magrawal.08 gmail.com>]\n\n  *) mod_ldap: Add LDAPConnectionPoolTTL to give control over lifetime\n     of bound backend LDAP connections.  PR47634 [Eric Covener]\n\n  *) mod_cache: Make CacheEnable and CacheDisable configurable per\n     directory in addition to per server, making them work from within\n     a LocationMatch. [Graham Leggett]\n\n  *) worker, event, prefork: Correct several issues when built as\n     DSOs; most notably, the scoreboard was reinitialized during graceful\n     restart, such that processes of the previous generation were not\n     observable.  [Jeff Trawick]\n\nChanges with Apache 2.3.11\n\n  *) mod_win32: Added shebang check for '! so that .vbs scripts work as CGI.\n     Win32's cscript interpreter can only use a single quote as comment char.\n     [Guenter Knauf]\n\n  *) mod_proxy: balancer-manager now uses POST instead of GET.\n     [Jim Jagielski]\n\n  *) core: new util function: ap_parse_form_data(). Previously,\n     this capability was tucked away in mod_request. [Jim Jagielski]\n\n  *) core: new hook: ap_run_pre_read_request. [Jim Jagielski]\n\n  *) modules: Fix many modules that were not correctly initializing if they\n     were not active during server startup but got enabled later during a\n     graceful restart. [Stefan Fritsch]\n\n  *) core: Create new ap_state_query function that allows modules to determine\n     if the current configuration run is the initial one at server startup,\n     and if the server is started for testing/config dumping only.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Runtime configuration of many parameters for existing\n     balancers via the balancer-manager. [Jim Jagielski]\n\n  *) mod_proxy: Runtime addition of new workers (BalancerMember) for existing\n     balancers via the balancer-manager. [Jim Jagielski]\n\n  *) mod_cache: When a bad Expires date is present, we need to behave as if\n     the Expires is in the past, not as if the Expires is missing. PR 16521.\n     [Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: We must ignore quoted-string values that appear in a\n     Cache-Control header. PR 50199. [Graham Leggett]\n\n  *) mod_dav: Revert change to send 501 error if unknown Content-* header is\n    received for a PUT request. PR 42978. [Stefan Fritsch]\n\n  *) mod_cache: Respect s-maxage as described by RFC2616 14.9.3, which must\n     take precedence if present. PR 35247. [Graham Leggett]\n\n  *) mod_ssl: Fix a possible startup failure if multiple SSL vhosts\n     are configured with the same ServerName and private key file.\n     [Masahiro Matsuya <mmatsuya redhat.com>, Joe Orton]\n\n  *) mod_socache_dc: Make module compile by fixing some typos.\n     PR 50735 [Mark Montague <mark catseye.org>]\n\n  *) prefork: Update MPM state in children during a graceful stop or\n     restart.  PR 41743.  [Andrew Punch <andrew.punch 247realmedia.com>]\n\n  *) mod_mime: Ignore leading dots when looking for mime extensions.\n     PR 50434 [Stefan Fritsch]\n\n  *) core: Add support to set variables with the 'Define' directive. The\n     variables that can then be used in the config using the ${VAR} syntax\n     known from envvar interpolation. [Stefan Fritsch]\n\n  *) mod_proxy_http: make adding of X-Forwarded-* headers configurable.\n     ProxyAddHeaders defaults to On. [Vincent Deffontaines]\n\n  *) mod_slotmem_shm: Increase memory alignment for slotmem data.\n     [Rainer Jung]\n\n  *) mod_ssl: Add config options for OCSP: SSLOCSPResponderTimeout,\n     SSLOCSPResponseMaxAge, SSLOCSPResponseTimeSkew.\n     [Kaspar Brand <httpd-dev.2011 velox.ch>]\n\n  *) mod_ssl: Revamp output buffering to reduce network overhead for\n     output fragmented into many buckets, such as chunked HTTP responses.\n     [Joe Orton]\n\n  *) core: Apply <If> sections to all requests, not only to file base requests.\n     Allow to use <If> inside <Directory>, <Location>, and <Files> sections.\n     The merging of <If> sections now happens after the merging of <Location>\n     sections, even if an <If> section is embedded inside a <Directory> or\n     <Files> section.  [Stefan Fritsch]\n\n  *) mod_proxy: Refactor usage of shared data by dropping the scoreboard\n     and using slotmem. Create foundation for dynamic growth/changes of\n     members within a balancer. Remove BalancerNonce in favor of a\n     per-balancer 'nonce' parameter. [Jim Jagielski]\n\n  *) mod_status: Don't show slots which are disabled by MaxClients as open.\n     PR: 47022 [Jordi Prats <jordi prats gmail com>, Stefan Fritsch]\n\n  *) mpm_prefork: Fix ap_mpm_query results for AP_MPMQ_MAX_DAEMONS and\n     AP_MPMQ_MAX_THREADS.\n\n  *) mod_authz_core: Fix bug in merging logic if user-based and non-user-based\n     authorization directives were mixed. [Stefan Fritsch]\n\n  *) mod_authn_socache: change directive name from AuthnCacheProvider\n     to AuthnCacheProvideFor.  The term \"provider\" is overloaded in\n     this module, and we should avoid confusion between the provider\n     of a backend (AuthnCacheSOCache) and the authn provider(s) for\n     which this module provides cacheing (AuthnCacheProvideFor).\n     [Nick Kew]\n\n  *) mod_proxy_http: Allocate the fake backend request from a child pool\n     of the backend connection, instead of misusing the pool of the frontend\n     request. Fixes a thread safety issue where buckets set aside in the\n     backend connection leak into other threads, and then disappear when\n     the frontend request is cleaned up, in turn causing corrupted buckets\n     to make other threads spin. [Graham Leggett]\n\n  *) mod_ssl: Change the format of the SSL_{CLIENT,SERVER}_{I,S}_DN variables\n     to be RFC 2253 compatible, convert non-ASCII characters to UTF8, and\n     escape other special characters with backslashes. The old format can\n     still be used with the LegacyDNStringFormat argument to SSLOptions.\n\n  *) core, mod_rewrite: Make the REQUEST_SCHEME variable available to\n     scripts and mod_rewrite. [Stefan Fritsch]\n\n  *) mod_rewrite: Allow to use arbitrary boolean expressions (ap_expr) in\n     RewriteCond. [Stefan Fritsch]\n\n  *) mod_rewrite: Allow to unset environment variables using E=!VAR.\n     PR 49512. [Mark Drayton <mark markdrayton info>, Stefan Fritsch]\n\n  *) mod_headers: Restore the 2.3.8 and earlier default for the first\n     argument of the Header directive (\"onsuccess\").  [Eric Covener]\n\n  *) core: Disallow the mixing of relative and absolute Options PR 33708.\n     [S\u00f6nke Tesch <st kino-fahrplan.de>]\n\n  *) core: When exporting request headers to HTTP_* environment variables,\n     drop variables whose names contain invalid characters. Describe in the\n     docs how to restore the old behaviour. [Malte S. Stretz <mss apache org>]\n\n  *) core: When selecting an IP-based virtual host, favor an exact match for\n     the port over a wildcard (or omitted) port instead of favoring the one\n     that came first in the configuration file. [Eric Covener]\n\n  *) core: Overlapping virtual host address/port combinations  now implicitly\n     enable name-based virtual hosting for that address.  The NameVirtualHost\n     directive has no effect, and _default_ is interpreted the same as \"*\".\n     [Eric Covener]\n\n  *) core: In the absence of any Options directives, the default is now\n     \"FollowSymlinks\" instead of \"All\".  [Igor Gali\u0107]\n\n  *) rotatelogs: Add -e option to write logs through to stdout for optional\n     further processing. [Graham Leggett]\n\n  *) mod_ssl: Correctly read full lines in input filter when the line is\n     incomplete during first read. PR 50481. [Ruediger Pluem]\n\n  *) mod_authz_core: Add AuthzSendForbiddenOnFailure directive to allow\n     sending '403 FORBIDDEN' instead of '401 UNAUTHORIZED' if authorization\n     fails for an authenticated user. PR 40721. [Stefan Fritsch]\n\nChanges with Apache 2.3.10\n\n  *) mod_rewrite: Don't implicitly URL-escape the original query string\n     when no substitution has changed it. PR 50447. [Eric Covener]\n\n  *) core: Honor 'AcceptPathInfo OFF' during internal redirects,\n     such as per-directory mod_rewrite substitutions.  PR 50349.\n     [Eric Covener]\n\n  *) mod_rewrite: Add 'RewriteOptions InheritBefore' to put the base\n     rules/conditions before the overridden rules/conditions.  PR 39313.\n     [J\u00e9r\u00f4me Grandjanny <jerome.grandjanny cea.fr>]\n\n  *) mod_autoindex: add IndexIgnoreReset to reset the list of IndexIgnored\n     filenames in higher precedence configuration sections.  PR 24243.\n     [Eric Covener]\n\n  *) mod_cgid: RLimit* directive support for mod_cgid.  PR 42135\n     [Eric Covener]\n\n  *) core: Fail startup when the argument to ServerName looks like a glob\n     or a regular expression instead of a hostname (*?[]).  PR 39863\n     [Rahul Nair <rahul.g.nair gmail.com>]\n\n  *) mod_userdir: Add merging of enable, disable, and filename arguments\n     to UserDir directive, leaving enable/disable of userlists unmerged.\n     PR 44076 [Eric Covener]\n\n  *) httpd: When no -k option is provided on the httpd command line, the server\n     was starting without checking for an existing pidfile.  PR 50350\n     [Eric Covener]\n\n  *) mod_proxy: Put the worker in error state if the SSL handshake with the\n     backend fails. PR 50332.\n     [Daniel Ruggeri <DRuggeri primary.net>, Ruediger Pluem]\n\n  *) mod_cache_disk: Fix Windows build which was broken after renaming\n     the module. [Gregg L. Smith]\n\nChanges with Apache 2.3.9\n\n  *) SECURITY: CVE-2010-1623 (cve.mitre.org)\n     Fix a denial of service attack against mod_reqtimeout.\n     [Stefan Fritsch]\n\n  *) mod_headers: Change default first argument of Header directive\n     from \"onsuccess\" to \"always\". [Eric Covener]\n\n  *) mod_include: Add the onerror attribute to the include element,\n     allowing an URL to be specified to include on error. [Graham\n     Leggett]\n\n  *) mod_cache_disk: mod_disk_cache renamed to mod_cache_disk, to be\n     consistent with the naming of other modules. [Graham Leggett]\n\n  *) mod_setenvif: Add SetEnvIfExpr directive to set env var depending on\n     expression. [Stefan Fritsch]\n\n  *) mod_proxy: Fix ProxyPassInterpolateEnv directive. PR 50292.\n     [Stefan Fritsch]\n\n  *) suEXEC: Add Suexec directive to disable suEXEC without renaming the\n     binary (Suexec Off), or force startup failure if suEXEC is required\n     but not supported (Suexec On).  Change SuexecUserGroup to fail\n     startup instead of just printing a warning if suEXEC is disabled.\n     [Jeff Trawick]\n\n  *) core: Add Error directive for aborting startup or htaccess processing\n     with a specified error message.  [Jeff Trawick]\n\n  *) mod_rewrite: Fix the RewriteEngine directive to work within a\n     location. Previously, once RewriteEngine was switched on globally,\n     it was impossible to switch off. [Graham Leggett]\n\n  *) core, mod_include, mod_ssl: Move the expression parser derived from\n     mod_include back into mod_include. Replace ap_expr with a parser\n     derived from mod_ssl's parser. Make mod_ssl use the new parser. Rework\n     ap_expr's public interface and provide hooks for modules to add variables\n     and functions. [Stefan Fritsch]\n\n  *) core: Do the hook sorting earlier so that the hooks are properly sorted\n     for the pre_config hook and during parsing the config. [Stefan Fritsch]\n\n  *) core: In the absence of any AllowOverride directives, the default is now\n     \"None\" instead of \"All\".  PR49823 [Eric Covener]\n\n  *) mod_proxy: Don't allow ProxyPass or ProxyPassReverse in\n     <Directory> or <Files>. PR47765 [Eric Covener]\n\n  *) prefork/worker/event MPMS: default value (when no directive is present)\n     of MaxConnectionsPerChild/MaxRequestsPerChild is changed to 0 from 10000\n     to match default configuration and manual. PR47782 [Eric Covener]\n\n  *) proxy_connect: Don't give up in the middle of a CONNECT tunnel\n     when the child process is starting to exit.  PR50220. [Eric Covener]\n\n  *) mod_autoindex: Fix inheritance of mod_autoindex directives into\n     contexts that don't have any mod_autoindex directives. PR47766.\n     [Eric Covener]\n\n  *) mod_rewrite: Add END flag for RewriteRule to prevent further rounds\n     of rewrite processing when a per-directory substitution occurs.\n     [Eric Covener]\n\n  *) mod_ssl: Make sure to always log an error if loading of CA certificates\n     fails. PR 40312. [Paul Tiemann <issues apache org ourdetour com>]\n\n  *) mod_dav: Send 501 error if unknown Content-* header is received for a PUT\n     request (RFC 2616 9.6). PR 42978. [Stefan Fritsch]\n\n  *) mod_dav: Send 400 error if malformed Content-Range header is received for\n     a put request (RFC 2616 14.16). PR 49825. [Stefan Fritsch]\n\n  *) mod_proxy: Release the backend connection as soon as EOS is detected,\n     so the backend isn't forced to wait for the client to eventually\n     acknowledge the data. [Graham Leggett]\n\n  *) mod_proxy: Optimise ProxyPass within a Location so that it is stored\n     per-directory, and chosen during the location walk. Make ProxyPass\n     work correctly from within a LocationMatch. [Graham Leggett]\n\n  *) core: Fix segfault if per-module LogLevel is on virtual host\n     scope. PR 50117. [Stefan Fritsch]\n\n  *) mod_proxy: Move the ProxyErrorOverride directive to have per\n     directory scope. [Graham Leggett]\n\n  *) mod_allowmethods: New module to deny certain HTTP methods without\n     interfering with authentication/authorization. [Paul Querna,\n     Igor Gali\u0107, Stefan Fritsch]\n\n  *) mod_ssl: Log certificate information and improve error message if client\n     cert verification fails. PR 50093, PR 50094. [Lassi Tuura <lat cern ch>,\n     Stefan Fritsch]\n\n  *) htcacheclean: Teach htcacheclean to limit cache size by number of\n     inodes in addition to size of files. Prevents a cache disk from\n     running out of space when many small files are cached.\n     [Graham Leggett]\n\n  *) core: Rename MaxRequestsPerChild to MaxConnectionsPerChild, which\n     describes more accurately what the directive does. The old name\n     still works but logs a warning. [Stefan Fritsch]\n\n  *) mod_cache: Optionally serve stale data when a revalidation returns a\n     5xx response, controlled by the CacheStaleOnError directive.\n     [Graham Leggett]\n\n  *) htcacheclean: Allow the listing of valid URLs within the cache, with\n     the option to list entry metadata such as sizes and times. [Graham\n     Leggett]\n\n  *) mod_cache: correctly parse quoted strings in cache headers.\n     PR 50199 [Nick Kew]\n\n  *) mod_cache: Allow control over the base URL of reverse proxied requests\n     using the CacheKeyBaseURL directive, so that the cache key can be\n     calculated from the endpoint URL instead of the server URL. [Graham\n     Leggett]\n\n  *) mod_cache: CacheLastModifiedFactor, CacheStoreNoStore, CacheStorePrivate,\n     CacheStoreExpired, CacheIgnoreNoLastMod, CacheDefaultExpire,\n     CacheMinExpire and CacheMaxExpire can be set per directory/location.\n     [Graham Leggett]\n\n  *) mod_disk_cache: CacheMaxFileSize, CacheMinFileSize, CacheReadSize and\n     CacheReadTime can be set per directory/location. [Graham Leggett]\n\n  *) core: Speed up config parsing if using a very large number of config\n     files. PR 50002 [andrew cloudaccess net]\n\n  *) mod_cache: Support the caching of HEAD requests. [Graham Leggett]\n\n  *) htcacheclean: Allow the option to round up file sizes to a given\n     block size, improving the accuracy of disk usage. [Graham Leggett]\n\n  *) mod_ssl: Add authz providers for use with mod_authz_core and its\n     RequireAny/RequireAll containers: 'ssl' (equivalent to SSLRequireSSL),\n     'ssl-verify-client' (for use with 'SSLVerifyClient optional'), and\n     'ssl-require' (expressions with same syntax as SSLRequire).\n     [Stefan Fritsch]\n\n  *) mod_ssl: Make the ssl expression parser thread-safe. It now requires\n     bison instead of yacc. [Stefan Fritsch]\n\n  *) mod_disk_cache: Change on-disk header file format to support the\n     link of the device/inode of the data file to the matching header\n     file, and to support the option of not writing a data file when\n     the data file is empty. [Graham Leggett]\n\n  *) core/mod_unique_id: Add generate_log_id hook to allow to use\n     the ID generated by mod_unique_id as error log ID for requests.\n     [Stefan Fritsch]\n\n  *) mod_cache: Make sure that we never allow a 304 Not Modified response\n     that we asked for to leak to the client should the 304 response be\n     uncacheable. PR45341 [Graham Leggett]\n\n  *) mod_cache: Add the cache_status hook to register the final cache\n     decision hit/miss/revalidate. Add optional support for an X-Cache\n     and/or an X-Cache-Detail header to add the cache status to the\n     response. PR48241 [Graham Leggett]\n\n  *) mod_authz_host: Add 'local' provider that matches connections originating\n     on the local host. PR 19938. [Stefan Fritsch]\n\n  *) Event MPM: Fix crash accessing pollset on worker thread when child\n     process is exiting.  [Jeff Trawick]\n\n  *) core: For process invocation (cgi, fcgid, piped loggers and so forth)\n     pass the system library path (LD_LIBRARY_PATH or platform-specific\n     variables) along with the system PATH, by default.  Both should be\n     overridden together as desired using PassEnv etc; see mod_env.\n     [William Rowe]\n\n  *) mod_cache: Introduce CacheStoreExpired, to allow administrators to\n     capture a stale backend response, perform If-Modified-Since requests\n     against the backend, and serving from the cache all 304 responses.\n     This restores pre-2.2.4 cache behavior.  [William Rowe]\n\n  *) mod_rewrite: Introduce <=, >= string comparison operators, and integer\n     comparators -lt, -le, -eq, -ge, and -gt.  To help bash users and drop\n     the ambiguity of the symlink test \"-ltest\", introduce -h or -L as\n     symlink test operators.  [William Rowe]\n\n  *) mod_cache: Give the cache provider the opportunity to choose to cache\n     or not cache based on the buckets present in the brigade, such as the\n     presence of a FILE bucket.\n     [Graham Leggett]\n\n  *) mod_authz_core: Allow authz providers to check args while reading the\n     config and allow to cache parsed args. Move 'all' and 'env' authz\n     providers from mod_authz_host to mod_authz_core. Add 'method' authz\n     provider depending on the HTTP method.  [Stefan Fritsch]\n\n  *) mod_include: Move the request_rec within mod_include to be\n     exposed within include_ctx_t. [Graham Leggett]\n\n  *) mod_include: Reinstate support for UTF-8 character sets by allowing a\n     variable being echoed or set to be decoded and then encoded as separate\n     steps. PR47686 [Graham Leggett]\n\n  *) mod_cache: Add a discrete commit_entity() provider function within the\n     mod_cache provider interface which is called to indicate to the\n     provider that caching is complete, giving the provider the opportunity\n     to commit temporary files permanently to the cache in an atomic\n     fashion. Replace the inconsistent use of error cleanups with a formal\n     set of pool cleanups attached to a subpool, which is destroyed on error.\n     [Graham Leggett]\n\n  *) mod_cache: Change the signature of the store_body() provider function\n     within the mod_cache provider interface to support an \"in\" brigade\n     and an \"out\" brigade instead of just a single input brigade. This\n     gives a cache provider the option to consume only part of the brigade\n     passed to it, rather than the whole brigade as was required before.\n     This fixes an out of memory and a request timeout condition that would\n     occur when the original document was a large file. Introduce\n     CacheReadSize and CacheReadTime directives to mod_disk_cache to control\n     the amount of data to attempt to cache at a time. [Graham Leggett]\n\n  *) core: Add ErrorLogFormat to allow configuring error log format, including\n     additional information that is logged once per connection or request. Add\n     error log IDs for connections and request to allow correlating error log\n     lines and the corresponding access log entry. [Stefan Fritsch]\n\n  *) core: Disable sendfile by default. [Stefan Fritsch]\n\n  *) mod_cache: Check the request to determine whether we are allowed\n     to return cached content at all, and respect a \"Cache-Control:\n     no-cache\" header from a client. Previously, \"no-cache\" would\n     behave like \"max-age=0\". [Graham Leggett]\n\n  *) mod_cache: Use a proper filter context to hold filter data instead\n     of misusing the per-request configuration. Fixes a segfault on trunk\n     when the normal handler is used. [Graham Leggett]\n\n  *) mod_cgid: Log a warning if the ScriptSock path is truncated because\n     it is too long. PR 49388.  [Stefan Fritsch]\n\n  *) vhosts: Do not allow _default_ in NameVirtualHost, or mixing *\n     and non-* ports on NameVirtualHost, or multiple NameVirtualHost\n     directives for the same address:port, or NameVirtualHost\n     directives with no matching VirtualHosts, or multiple ip-based\n     VirtualHost sections for the same address:port.  These were\n     previously accepted with a warning, but the behavior was\n     undefined.  [Dan Poirier]\n\n  *) mod_remoteip: Fix a segfault when using mod_remoteip in conjunction with\n     Allow/Deny. PR 49838.  [Andrew Skalski <voltara gmail.com>]\n\n  *) core: DirectoryMatch can now match on the end of line character ($),\n     and sub-directories of matched directories are no longer implicitly\n     matched.  PR49809 [Eric Covener]\n\n  *) Regexps: introduce new higher-level regexp utility including parsing\n     and executing perl-style regexp ops (e.g s/foo/bar/i) and regexp memory\n     [Nick Kew]\n\n  *) Proxy: support setting source address.  PR 29404\n     [Multiple contributors iterating through bugzilla,\n      Aron Ujvari <xanco nikhok.hu>, Aleksey Midenkov <asm uezku.kemsu.ru>,\n      <dan listening-station.net; trunk version Nick Kew]\n\n  *) HTTP protocol: return 400 not 503 if we have to abort due to malformed\n     chunked encoding. [Nick Kew]\n\nChanges with Apache 2.3.8\n\n  *) suexec: Support large log files. PR 45856. [Stefan Fritsch]\n\n  *) core: Abort with sensible error message if no or more than one MPM is\n     loaded. [Stefan Fritsch]\n\n  *) mod_proxy: Rename erroronstatus to failonstatus.\n     [Daniel Ruggeri <DRuggeri primary.net>]\n\n  *) mod_dav_fs: Fix broken \"creationdate\" property.\n     Regression in version 2.3.7. [Rainer Jung]\n\nChanges with Apache 2.3.7\n\n  *) SECURITY: CVE-2010-1452 (cve.mitre.org)\n     mod_dav, mod_cache, mod_session: Fix Handling of requests without a path\n     segment. PR: 49246 [Mark Drayton, Jeff Trawick]\n\n  *) mod_ldap: Properly check the result returned by apr_ldap_init. PR 46076.\n     [Stefan Fritsch]\n\n  *) mod_rewrite: Log errors if rewrite map files cannot be opened. PR 49639.\n     [Stefan Fritsch]\n\n  *) mod_proxy_http: Support the 'ping' property for backend HTTP/1.1 servers\n     via leveraging 100-Continue as the initial \"request\".\n     [Jim Jagielski]\n\n  *) core/mod_authz_core: Introduce new access_checker_ex hook that enables\n     mod_authz_core to bypass authentication if access should be allowed by\n     IP address/env var/... [Stefan Fritsch]\n\n  *) core: Introduce note_auth_failure hook to allow modules to add support\n     for additional auth types. This makes ap_note_auth_failure() work with\n     mod_auth_digest again. PR 48807. [Stefan Fritsch]\n\n  *) socache modules: return APR_NOTFOUND when a lookup is not found [Nick Kew]\n\n  *) mod_authn_socache: new module [Nick Kew]\n\n  *) configure: Add reallyall option for --enable-mods-shared. [Stefan Fritsch]\n\n  *) Fix Windows build when using VC6. [Gregg L. Smith <lists glewis com>]\n\n  *) mod_rewrite: Allow to set environment variables without explicitly\n     giving a value. [Rainer Jung]\n\n  *) mod_rewrite: Remove superfluous EOL from rewrite logging. [Rainer Jung]\n\n  *) mod_include: recognise \"text/html; parameters\" as text/html\n     PR 49616 [Andrey Chernov <ache nagual.pp.ru>]\n\n  *) CGI vars: allow PATH to be set by SetEnv, consistent with LD_LIBRARY_PATH\n     PR 43906 [Nick Kew]\n\n  *) Core: Extra robustness: don't try authz and segfault if authn\n     fails to set r->user.  Log bug and return 500 instead.\n     PR 42995 [Nick Kew]\n\n  *) HTTP protocol filter: fix handling of longer chunk extensions\n     PR 49474 [<tee.bee gmx.de>]\n\n  *) Update SSL cipher suite and add example for SSLHonorCipherOrder.\n     [Lars Eilebrecht, Rainer Jung]\n\n  *) move AddOutputFilterByType from core to mod_filter.  This should\n     fix nasty side-effects that happen when content_type is set\n     more than once in processing a request, and make it fully\n     compatible with dynamic and proxied contents. [Nick Kew]\n\n  *) mod_log_config: Implement logging for sub second timestamps and\n     request end time.  [Rainer Jung]\n\nChanges with Apache 2.3.6\n\n  *) SECURITY: CVE-2009-3555 (cve.mitre.org)\n     mod_ssl: Comprehensive fix of the TLS renegotiation prefix injection\n     attack when compiled against OpenSSL version 0.9.8m or later. Introduces\n     the 'SSLInsecureRenegotiation' directive to reopen this vulnerability\n     and offer unsafe legacy renegotiation with clients which do not yet\n     support the new secure renegotiation protocol, RFC 5746.\n     [Joe Orton, and with thanks to the OpenSSL Team]\n\n  *) SECURITY: CVE-2009-3555 (cve.mitre.org)\n     mod_ssl: A partial fix for the TLS renegotiation prefix injection attack\n     by rejecting any client-initiated renegotiations. Forcibly disable\n     keepalive for the connection if there is any buffered data readable. Any\n     configuration which requires renegotiation for per-directory/location\n     access control is still vulnerable, unless using OpenSSL >= 0.9.8l.\n     [Joe Orton, Ruediger Pluem, Hartmut Keil <Hartmut.Keil adnovum.ch>]\n\n  *) SECURITY: CVE-2010-0408 (cve.mitre.org)\n     mod_proxy_ajp: Respond with HTTP_BAD_REQUEST when the body is not sent\n     when request headers indicate a request body is incoming; not a case of\n     HTTP_INTERNAL_SERVER_ERROR.  [Niku Toivola <niku.toivola sulake.com>]\n\n  *) SECURITY: CVE-2010-0425 (cve.mitre.org)\n     mod_isapi: Do not unload an isapi .dll module until the request\n     processing is completed, avoiding orphaned callback pointers.\n     [Brett Gervasoni <brettg senseofsecurity.com>, Jeff Trawick]\n\n  *) core: Filter init functions are now run strictly once per request\n     before handler invocation.  The init functions are no longer run\n     for connection filters.  PR 49328.  [Joe Orton]\n\n  *) core: Adjust the output filter chain correctly in an internal\n     redirect from a subrequest, preserving filters from the main\n     request as necessary.  PR 17629.  [Joe Orton]\n\n  *) mod_cache: Explicitly allow cache implementations to cache a 206 Partial\n     Response if they so choose to do so. Previously an attempt to cache a 206\n     was arbitrarily allowed if the response contained an Expires or\n     Cache-Control header, and arbitrarily denied if both headers were missing.\n     [Graham Leggett]\n\n  *) core: Add microsecond timestamp fractions, process id and thread id\n     to the error log. [Rainer Jung]\n\n  *) configure: The \"most\" module set gets build by default.  [Rainer Jung]\n\n  *) configure: Building dynamic modules (DSO) by default.  [Rainer Jung]\n\n  *) configure: Fix broken VPATH build when using included APR.\n     [Rainer Jung]\n\n  *) mod_session_crypto: Fix configure problem when building\n     with APR 2 and for VPATH builds with included APR.\n     [Rainer Jung]\n\n  *) mod_session_crypto: API compatibility with APR 2 crypto and\n     APR Util 1.x crypto. [Rainer Jung]\n\n  *) ab: Fix memory leak with -v2 and SSL. PR 49383.\n     [Pavel Kankovsky <peak argo troja mff cuni cz>]\n\n  *) core: Add per-module and per-directory loglevel configuration.\n           Add some more trace logging.\n     mod_rewrite: Replace RewriteLog/RewriteLogLevel with trace log levels.\n     mod_ssl: Replace LogLevelDebugDump with trace log levels.\n     mod_ssl/mod_proxy*: Adjust loglevels to be less verbose at levels info\n           and debug.\n     mod_dumpio:  Replace DumpIOLogLevel with trace log levels.\n     [Stefan Fritsch]\n\n  *) mod_ldap: LDAP caching was suppressed (and ldap-status handler returns\n     title page only) when any mod_ldap directives were used in VirtualHost\n     context.  [Eric Covener]\n\n  *) mod_disk_cache: Decline the opportunity to cache if the response is\n     a 206 Partial Content. This stops a reverse proxied partial response\n     from becoming cached, and then being served in subsequent responses.\n     [Graham Leggett]\n\n  *) mod_deflate: avoid the risk of forwarding data before headers are set.\n     PR 49369 [Matthew Steele <mdsteele google.com>]\n\n  *) mod_authnz_ldap: Ensure nested groups are checked when the\n     top-level group doesn't have any direct non-group members\n     of attributes in AuthLDAPGroupAttribute. [Eric Covener]\n\n  *) mod_authnz_ldap: Search or Comparison during authorization phase\n     can use the credentials from the authentication phase\n     (AuthLDAPSearchAsUSer,AuthLDAPCompareAsUser).\n     PR 48340 [Domenico Rotiroti, Eric Covener]\n\n  *) mod_authnz_ldap: Allow the initial DN search during authentication\n     to use the HTTP username/pass instead of an anonymous or hard-coded\n     LDAP id (AuthLDAPInitialBindAsUser, AuthLDAPInitialBindPattern).\n     [Eric Covener]\n\n  *) mod_authnz_ldap: Publish requested LDAP data with an AUTHORIZE_ prefix\n     when this module is used for authorization. See AuthLDAPAuthorizePrefix.\n     PR 45584 [Eric Covener]\n\n  *) apxs -q: Stop filtering out ':' characters from the reported values.\n     PR 45343.  [Bill Cole]\n\n  *) prefork MPM: Work around possible crashes on child exit in APR reslist\n     cleanup code.  PR 43857.  [Tom Donovan]\n\n  *) ab: fix number of requests sent by ab when keepalive is enabled.  PR 48497.\n     [Bryn Dole <dole blekko.com>]\n\n  *) Log an error for failures to read a chunk-size, and return 408 instead of\n     413 when this is due to a read timeout.  This change also fixes some cases\n     of two error documents being sent in the response for the same scenario.\n     [Eric Covener] PR49167\n\n  *) mod_proxy_balancer: Add new directive BalancerNonce to allow admin\n     to control/set the nonce used in the balancer-manager application.\n     [Jim Jagielski]\n\n  *) mod_proxy_connect: Support port ranges in AllowConnect. PR 23673.\n     [Stefan Fritsch]\n\n  *) Proxy balancer: support setting error status according to HTTP response\n     code from a backend.  PR 48939.  [Daniel Ruggeri <DRuggeri primary.net>]\n\n  *) htcacheclean: Introduce the ability to clean specific URLs from the\n     cache, if provided as an optional parameter on the command line.\n     [Graham Leggett]\n\n  *) core: Introduce the IncludeStrict directive, which explicitly fails\n     server startup if no files or directories match a wildcard path.\n     [Graham Leggett]\n\n  *) htcacheclean: Report additional statistics about entries deleted.\n     PR 48944. [Mark Drayton mark markdrayton.info]\n\n  *) Introduce SSLFIPS directive to support OpenSSL FIPS_mode; permits all\n     builds of mod_ssl to use 'SSLFIPS off' for portability, but the proper\n     build of openssl is required for 'SSLFIPS on'.  PR 46270.\n     [Dr Stephen Henson <steve openssl.org>, William Rowe]\n\n  *) mod_proxy_http: Log the port of the remote server in various messages.\n     PR 48812. [Igor Gali\u0107 <i galic brainsware org>]\n\n  *) mod_reqtimeout: Do not wrongly enforce timeouts for mod_proxy's backend\n     connections and other protocol handlers (like mod_ftp). [Stefan Fritsch]\n\n  *) mod_proxy_ajp: Really regard the operation a success, when the client\n     aborted the connection. In addition adjust the log message if the client\n     aborted the connection. [Ruediger Pluem]\n\n  *) mod_ssl: Add the 'SSLInsecureRenegotiation' directive, which\n     allows insecure renegotiation with clients which do not yet\n     support the secure renegotiation protocol.  [Joe Orton]\n\n  *) mod_ssl: Fix a potential I/O hang if a long list of trusted CAs\n     is configured for client cert auth. PR 46952.  [Joe Orton]\n\n  *) core: Only log a 408 if it is no keepalive timeout. PR 39785\n     [Ruediger Pluem,  Mark Montague <markmont umich.edu>]\n\n  *) support/rotatelogs: Add -L option to create a link to the current\n     log file.  PR 48761 [<lyndon orthanc.ca>, Dan Poirier]\n\n  *) mod_ldap: Update LDAPTrustedClientCert to consistently be a per-directory\n     setting only, matching most of the documentation and examples.\n     PR 46541 [Paul Reder, Eric Covener]\n\n  *) mod_ldap: LDAPTrustedClientCert now accepts CA_DER/CA_BASE64 argument\n     types previously allowed only in LDAPTrustedGlobalCert. [Eric Covener]\n\n  *) mod_negotiation: Preserve query string over multiviews negotiation.\n     This buglet was fixed for type maps in 2.2.6, but the same issue\n     affected multiviews and was overlooked.\n     PR 33112 [Joergen Thomsen <apache jth.net>]\n\n  *) mod_ldap: Eliminate a potential crash with multiple LDAPTrustedClientCert\n     when some are not password-protected. [Eric Covener]\n\n  *) Fix startup segfault when the Mutex directive is used but no loaded\n     modules use httpd mutexes.  PR 48787.  [Jeff Trawick]\n\n  *) Proxy: get the headers right in a HEAD request with\n     ProxyErrorOverride, by checking for an overridden error\n     before not after going into a catch-all code path.\n     PR 41646.  [Nick Kew, Stuart Children]\n\n  *) support/rotatelogs: Support the simplest log rotation case, log\n     truncation. Useful when the log is being processed in real time\n     using a command like tail. [Graham Leggett]\n\n  *) support/htcacheclean: Teach it how to write a pid file (modelled on\n     httpd's writing of a pid file) so that it becomes possible to run\n     more than one instance of htcacheclean on the same machine.\n     [Graham Leggett]\n\n  *) Log command line on startup, so there's a record of command line\n     arguments like -f.  PR 48752.  [Dan Poirier]\n\n  *) Introduce mod_reflector, a handler capable of reflecting POSTed\n     request bodies back within the response through the output filter\n     stack. Can be used to turn an output filter into a web service.\n     [Graham Leggett]\n\n  *) mod_proxy_http: Make sure that when an ErrorDocument is served\n     from a reverse proxied URL, that the subrequest respects the status\n     of the original request. This brings the behaviour of proxy_handler\n     in line with default_handler. PR 47106. [Graham Leggett]\n\n  *) Support wildcards in both the directory and file components of\n     the path specified by the Include directive. [Graham Leggett]\n\n  *) mod_proxy, mod_proxy_http: Support remote https proxies\n     by using HTTP CONNECT.  PR 19188.\n     [Philippe Dutrueux <lilas evidian.com>, Rainer Jung]\n\n  *) apxs: Fix -A and -a options to ignore whitespace in httpd.conf\n     [Philip M. Gollucci]\n\n  *) worker: Don't report server has reached MaxClients until it has.\n     Add message when server gets within MinSpareThreads of MaxClients.\n     PR 46996.  [Dan Poirier]\n\n  *) mod_session: Session expiry was being initialised, but not updated\n     on each session save, resulting in timed out sessions when there\n     should not have been. Fixed. [Graham Leggett]\n\n  *) mod_log_config: Add the R option to log the handler used within the\n     request. [Christian Folini <christian.folini netnea com>]\n\n  *) mod_include: Allow fine control over the removal of Last-Modified and\n     ETag headers within the INCLUDES filter, making it possible to cache\n     responses if desired. Fix the default value of the SSIAccessEnable\n     directive.  [Graham Leggett]\n\n  *) Add new UnDefine directive to undefine a variable. PR 35350.\n     [Stefan Fritsch]\n\n  *) Make ap_pregsub(), used by AliasMatch and friends, use the same syntax\n     for regex backreferences as mod_rewrite and mod_include: Remove the use\n     of '&' as an alias for '$0' and allow to escape any character with a\n     backslash. PR 48351. [Stefan Fritsch]\n\n  *) mod_authnz_ldap: If AuthLDAPCharsetConfig is set, also convert the\n     password to UTF-8. PR 45318.\n     [Johannes M\u00fcller <joh_m gmx.de>, Stefan Fritsch]\n\n  *) ab: Fix calculation of requests per second in HTML output. PR 48594.\n     [Stefan Fritsch]\n\n  *) mod_authnz_ldap: Failures to map a username to a DN, or to check a user\n     password now result in an informational level log entry instead of\n     warning level.  [Eric Covener]\n\nChanges with Apache 2.3.5\n\n  *) SECURITY: CVE-2010-0434 (cve.mitre.org)\n     Ensure each subrequest has a shallow copy of headers_in so that the\n     parent request headers are not corrupted.  Eliminates a problematic\n     optimization in the case of no request body.  PR 48359\n     [Jake Scott, William Rowe, Ruediger Pluem]\n\n  *) Turn static function get_server_name_for_url() into public\n     ap_get_server_name_for_url() and use it where appropriate. This\n     fixes mod_rewrite generating invalid URLs for redirects to IPv6\n     literal addresses. [Stefan Fritsch]\n\n  *) mod_ldap: Introduce new config option LDAPTimeout to set the timeout\n     for LDAP operations like bind and search. [Stefan Fritsch]\n\n  *) mod_proxy, mod_proxy_ftp: Move ProxyFtpDirCharset from mod_proxy to\n     mod_proxy_ftp. [Takashi Sato]\n\n  *) mod_proxy, mod_proxy_connect: Move AllowCONNECT from mod_proxy to\n     mod_proxy_connect. [Takashi Sato]\n\n  *) mod_cache: Do an exact match of the keys defined by\n     CacheIgnoreURLSessionIdentifiers against the querystring instead of\n     a partial match.  PR 48401.\n     [Dodou Wang <wangdong.08 gmail.com>, Ruediger Pluem]\n\n  *) mod_proxy_balancer: Fix crash in balancer-manager. [Rainer Jung]\n\n  *) Core HTTP: disable keepalive when the Client has sent\n     Expect: 100-continue\n     but we respond directly with a non-100 response.\n     Keepalive here led to data from clients continuing being treated as\n     a new request.\n     PR 47087 [Nick Kew]\n\n  *) Core: reject NULLs in request line or request headers.\n     PR 43039 [Nick Kew]\n\n  *) Core: (re)-introduce -T commandline option to suppress documentroot\n     check at startup.\n     PR 41887 [Jan van den Berg <janvdberg gmail.com>]\n\n  *) mod_autoindex: support XHTML as equivalent to HTML in IndexOptions,\n                    ScanHTMLTitles, ReadmeName, HeaderName\n     PR 48416 [Dmitry Bakshaev <dab18 izhnet.ru>, Nick Kew]\n\n  *) Proxy: Fix ProxyPassReverse with relative URL\n     Derived (slightly erroneously) from PR 38864 [Nick Kew]\n\n  *) mod_headers: align Header Edit with Header Set when used on Content-Type\n     PR 48422 [Cyril Bont\u00e9 <cyril.bonte free.fr>, Nick Kew>]\n\n  *) mod_headers: Enable multi-match-and-replace edit option\n     PR 46594 [Nick Kew]\n\n  *) mod_filter: enable it to act on non-200 responses.\n     PR 48377 [Nick Kew]\n\nChanges with Apache 2.3.4\n\n  *) Replace AcceptMutex, LockFile, RewriteLock, SSLMutex, SSLStaplingMutex,\n     and WatchdogMutexPath with a single Mutex directive.  Add APIs to\n     simplify setup and user customization of APR proc and global mutexes.\n     (See util_mutex.h.)  Build-time setting DEFAULT_LOCKFILE is no longer\n     respected; set DEFAULT_REL_RUNTIMEDIR instead.  [Jeff Trawick]\n\n  *) http_core: KeepAlive no longer accepts other than On|Off.\n     [Takashi Sato]\n\n  *) mod_dav: Remove errno from dav_error interface.  Calls to dav_new_error()\n     and dav_new_error_tag() must be adjusted to add an apr_status_t parameter.\n     [Jeff Trawick]\n\n  *) mod_authnz_ldap: Add AuthLDAPBindAuthoritative to allow Authentication to\n     try other providers in the case of an LDAP bind failure.\n     PR 46608 [Justin Erenkrantz, Joe Schaefer, Tony Stevenson]\n\n  *) Build: fix --with-module to work as documented\n     PR 43881 [Gez Saunders <gez.saunders virgin.net>]\n\nChanges with Apache 2.3.3\n\n  *) SECURITY: CVE-2009-3095 (cve.mitre.org)\n     mod_proxy_ftp: sanity check authn credentials.\n     [Stefan Fritsch <sf fritsch.de>, Joe Orton]\n\n  *) SECURITY: CVE-2009-3094 (cve.mitre.org)\n     mod_proxy_ftp: NULL pointer dereference on error paths.\n     [Stefan Fritsch <sf fritsch.de>, Joe Orton]\n\n  *) mod_ssl: enable support for ECC keys and ECDH ciphers.  Tested against\n     OpenSSL 1.0.0b3.  [Vipul Gupta <vipul.gupta sun.com>, Sander Temme]\n\n  *) mod_dav: Include uri when logging a PUT error due to connection abort.\n     PR 38149. [Stefan Fritsch]\n\n  *) mod_dav: Return 409 instead of 500 for a LOCK request if the parent\n     resource does not exist or is not a collection. PR 43465. [Stefan Fritsch]\n\n  *) mod_dav_fs: Return 409 instead of 500 for Litmus test case copy_nodestcoll\n     (a COPY request where the parent of the destination resource does not\n     exist). PR 39299. [Stefan Fritsch]\n\n  *) mod_dav_fs: Don't delete the whole file if a PUT with content-range failed.\n     PR 42896. [Stefan Fritsch]\n\n  *) mod_dav_fs: Make PUT create files atomically and no longer destroy the\n     old file if the transfer aborted. PR 39815. [Paul Querna, Stefan Fritsch]\n\n  *) mod_dav_fs: Remove inode keyed locking as this conflicts with atomically\n     creating files. On systems with inode numbers, this is a format change of\n     the DavLockDB. The old DavLockDB must be deleted on upgrade.\n     [Stefan Fritsch]\n\n  *) mod_log_config: Make ${cookie}C correctly match whole cookie names\n     instead of substrings. PR 28037. [Dan Franklin <dan dan-franklin.com>,\n     Stefan Fritsch]\n\n  *) vhost: A purely-numeric Host: header should not be treated as a port.\n     PR 44979 [Nick Kew]\n\n  *) mod_ldap: Avoid 500 errors with \"Unable to set LDAP_OPT_REFHOPLIMIT option to 5\"\n     when built against openldap by using SDK LDAP_OPT_REFHOPLIMIT defaults unless\n     LDAPReferralHopLimit is explicitly configured.\n     [Eric Covener]\n\n  *) mod_charset_lite: Honor 'CharsetOptions NoImplicitAdd'.\n     [Eric Covener]\n\n  *) mod_ssl: Add support for OCSP Stapling.  PR 43822.\n     [Dr Stephen Henson <shenson oss-institute.org>]\n\n  *) mod_socache_shmcb: Allow parens in file name if cache size is given.\n     Fixes SSLSessionCache directive mis-parsing parens in pathname.\n     PR 47945. [Stefan Fritsch]\n\n  *) htpasswd: Improve out of disk space handling. PR 30877. [Stefan Fritsch]\n\n  *) htpasswd: Use MD5 hash by default on all platforms. [Stefan Fritsch]\n\n  *) mod_sed: Reduce memory consumption when processing very long lines.\n     PR 48024 [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) ab: Fix segfault in case the argument for -n is a very large number.\n     PR 47178. [Philipp Hagemeister <oss phihag.de>]\n\n  *) Allow ProxyPreserveHost to work in <Proxy> sections. PR 34901.\n     [Stefan Fritsch]\n\n  *) configure: Fix THREADED_MPMS so that mod_cgid is enabled again\n     for worker MPM. [Takashi Sato]\n\n  *) mod_dav: Provide a mechanism to obtain the request_rec and pathname\n     from the dav_resource. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) Build: Use install instead of cp if available on installing\n     modules to avoid segmentation fault. PR 47951. [hirose31 gmail.com]\n\n  *) mod_cache: correctly consider s-maxage in cacheability\n     decisions.  [Dan Poirier]\n\n  *) mod_logio/core: Report more accurate byte counts in mod_status if\n     mod_logio is loaded. PR 25656. [Stefan Fritsch]\n\n  *) mod_ldap: If LDAPSharedCacheSize is too small, try harder to purge\n     some cache entries and log a warning. Also increase the default\n     LDAPSharedCacheSize to 500000. This is a more realistic size suitable\n     for the default values of 1024 for LdapCacheEntries/LdapOpCacheEntries.\n     PR 46749. [Stefan Fritsch]\n\n  *) mod_rewrite: Make sure that a hostname:port isn't fully qualified if\n     the request is a CONNECT request. [Bill Zajac <billz consultla.com>]\n\n  *) mod_cache: Teach CacheEnable and CacheDisable to work from within a\n     Location section, in line with how ProxyPass works. [Graham Leggett]\n\n  *) mod_reqtimeout: New module to set timeouts and minimum data rates for\n     receiving requests from the client. [Stefan Fritsch]\n\n  *) core: Fix potential memory leaks by making sure to not destroy\n     bucket brigades that have been created by earlier filters.\n     [Stefan Fritsch]\n\n  *) core, mod_deflate, mod_sed: Reduce memory usage by reusing bucket\n     brigades in several places. [Stefan Fritsch]\n\n  *) mod_cache: Fix uri_meets_conditions() so that CacheEnable will\n     match by scheme, or by a wildcarded hostname. PR 40169\n     [Peter Grandi <pg_asf asf.for.sabi.co.uk>, Graham Leggett]\n\n  *) suxec: Allow to log an error if exec fails by setting FD_CLOEXEC\n     on the log file instead of closing it. PR 10744. [Nicolas Rachinsky]\n\n  *) mod_mime: Make RemoveType override the info from TypesConfig.\n     PR 38330. [Stefan Fritsch]\n\n  *) mod_cache: Introduce the option to run the cache from within the\n     normal request handler, and to allow fine grained control over\n     where in the filter chain content is cached. Adds CacheQuickHandler\n     directive.  [Graham Leggett]\n\n  *) core: Treat timeout reading request as 408 error, not 400.\n     Log 408 errors in access log as was done in Apache 1.3.x.\n     PR 39785 [Nobutaka Mantani <nobutaka nobutaka.org>,\n     Stefan Fritsch <sf fritsch.de>, Dan Poirier]\n\n  *) mod_ssl: Reintroduce SSL_CLIENT_S_DN, SSL_CLIENT_I_DN, SSL_SERVER_S_DN,\n     SSL_SERVER_I_DN back to the environment variables to be set by mod_ssl.\n     [Peter Sylvester <peter.sylvester edelweb.fr>]\n\n  *) mod_disk_cache: don't cache incomplete responses, per RFC 2616, 13.8.\n     PR15866.  [Dan Poirier]\n\n  *) ab: ab segfaults in verbose mode on https sites\n     PR46393.  [Ryan Niebur]\n\n  *) mod_dav: Allow other modules to become providers and add resource types\n     to the DAV response. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) mod_dav: Allow other modules to add things to the DAV or Allow headers\n     of an OPTIONS request. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) core: Lower memory usage of core output filter.\n     [Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_mime: Detect invalid use of MultiviewsMatch inside Location and\n     LocationMatch sections.  PR47754. [Dan Poirier]\n\n  *) mod_request: Make sure the KeptBodySize directive rejects values\n     that aren't valid numbers. [Graham Leggett]\n\n  *) mod_session_crypto: Sanity check should the potentially encrypted\n     session cookie be too short. [Graham Leggett]\n\n  *) mod_session.c: Prevent a segfault when session is added but not\n     configured. [Graham Leggett]\n\n  *) htcacheclean: 19 ways to fail, 1 error message. Fixed. [Graham Leggett]\n\n  *) mod_auth_digest: Fail server start when nonce count checking\n     is configured without shared memory, or md5-sess algorithm is\n     configured. [Dan Poirier]\n\n  *) mod_proxy_connect: The connect method doesn't work if the client is\n     connecting to the apache proxy through an ssl socket. Fixed.\n     PR29744. [Brad Boyer, Mark Cave-Ayland, Julian Gilbey, Fabrice Durand,\n     David Gence, Tim Dodge, Per Gunnar Hans, Emmanuel Elango,\n     Kevin Croft, Rudolf Cardinal]\n\n  *) mod_ssl: The error message when SSLCertificateFile is missing should\n     at least give the name or position of the problematic virtual host\n     definition. [Stefan Fritsch sf sfritsch.de]\n\n  *) mod_auth_digest: Fix null pointer when qop=none. [Dan Poirier]\n\n  *) Add support for HTTP PUT to ab. [Jeff Barnes <jbarnesweb yahoo.com>]\n\n  *) mod_headers: generalise the envclause to support expression\n     evaluation with ap_expr parser [Nick Kew]\n\n  *) mod_cache: Introduce the thundering herd lock, a mechanism to keep\n     the flood of requests at bay that strike a backend webserver as\n     a cached entity goes stale. [Graham Leggett]\n\n  *) mod_auth_digest: Fix usage of shared memory and re-enable it.\n     PR 16057 [Dan Poirier]\n\n  *) Preserve Port information over internal redirects\n     PR 35999 [Jonas Ringh <jonas.ringh cixit.se>]\n\n  *) Proxy: unable to connect to a backend is SERVICE_UNAVAILABLE,\n     rather than BAD_GATEWAY or (especially) NOT_FOUND.\n     PR 46971 [evanc nortel.com]\n\n  *) Various modules: Do better checking of pollset operations in order to\n     avoid segmentation faults if they fail. PR 46467\n     [Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_autoindex: Correctly create an empty cell if the description\n     for a file is missing. PR 47682 [Peter Poeml <poeml suse.de>]\n\n  *) ab: Fix broken error messages after resolver or connect() failures.\n     [Jeff Trawick]\n\n  *) SECURITY: CVE-2009-1890 (cve.mitre.org)\n     Fix a potential Denial-of-Service attack against mod_proxy in a\n     reverse proxy configuration, where a remote attacker can force a\n     proxy process to consume CPU time indefinitely.  [Nick Kew, Joe Orton]\n\n  *) SECURITY: CVE-2009-1191 (cve.mitre.org)\n     mod_proxy_ajp: Avoid delivering content from a previous request which\n     failed to send a request body. PR 46949 [Ruediger Pluem]\n\n  *) htdbm: Fix possible buffer overflow if dbm database has very\n     long values.  PR 30586 [Dan Poirier]\n\n  *) core: Return APR_EOF if request body is shorter than the length announced\n     by the client. PR 33098 [ Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_suexec: correctly set suexec_enabled when httpd is run by a\n     non-root user and may have insufficient permissions.\n     PR 42175 [Jim Radford <radford blackbean.org>]\n\n  *) mod_ssl: Fix SSL_*_DN_UID variables to use the 'userID' attribute\n     type.  PR 45107.  [Michael Str\u00f6der <michael stroeder.com>,\n     Peter Sylvester <peter.sylvester edelweb.fr>]\n\n  *) mod_proxy_http: fix case sensitivity checking transfer encoding\n     PR 47383 [Ryuzo Yamamoto <ryuzo.yamamoto gmail.com>]\n\n  *) mod_alias: ensure Redirect issues a valid URL.\n     PR 44020 [H\u00e5kon Stordahl <hakon stordahl.org>]\n\n  *) mod_dir: add FallbackResource directive, to enable admin to specify\n     an action to happen when a URL maps to no file, without resorting\n     to ErrorDocument or mod_rewrite.  PR 47184 [Nick Kew]\n\n  *) mod_cgid: Do not leak the listening Unix socket file descriptor to the\n     CGI process. PR 47335 [Korn\u00e9l P\u00e1l <kornelpal gmail.com>]\n\n  *) mod_rewrite: Remove locking for writing to the rewritelog.\n     PR 46942 [Dan Poirier <poirier pobox.com>]\n\n  *) mod_alias: check sanity in Redirect arguments.\n     PR 44729 [S\u00f6nke Tesch <st kino-fahrplan.de>, Jim Jagielski]\n\n  *) mod_proxy_http: fix Host: header for literal IPv6 addresses.\n     PR 47177 [Carlos Garcia Braschi <cgbraschi gmail.com>]\n\n  *) mod_cache: Add CacheIgnoreURLSessionIdentifiers directive to ignore\n     defined session identifiers encoded in the URL when caching.\n     [Ruediger Pluem]\n\n  *) mod_rewrite: Fix the error string returned by RewriteRule.\n     RewriteRule returned \"RewriteCond: bad flag delimiters\" when the 3rd\n     argument of RewriteRule was not started with \"[\" or not ended with \"]\".\n     PR 45082 [Vitaly Polonetsky <m_vitaly topixoft.com>]\n\n  *) Windows: Fix usage message.\n     [Rainer Jung]\n\n  *) apachectl: When passing through arguments to httpd in\n     non-SysV mode, use the \"$@\" syntax to preserve arguments.\n     [Eric Covener]\n\n  *) mod_dbd: add DBDInitSQL directive to enable SQL statements to\n     be run when a connection is opened.  PR 46827\n     [Marko Kevac <mkevac gmail.com>]\n\n  *) mod_cgid: Improve handling of long AF_UNIX socket names (ScriptSock).\n     PR 47037.  [Jeff Trawick]\n\n  *) mod_proxy_ajp: Check more strictly that the backend follows the AJP\n     protocol. [Mladen Turk]\n\n  *) mod_proxy_ajp: Forward remote port information by default.\n     [Rainer Jung]\n\n  *) Allow MPMs to be loaded dynamically, as with most other modules.  Use\n     --enable-mpms-shared={list|\"all\"} to enable.  This required changes to\n     the MPM interfaces.  Removed: mpm.h, mpm_default.h (as an installed\n     header), APACHE_MPM_DIR, MPM_NAME, ap_threads_per_child,\n     ap_max_daemons_limit, ap_my_generation, etc.  ap_mpm_query() can't be\n     called until after the register-hooks phase.  [Jeff Trawick]\n\n  *) mod_ssl: Add SSLProxyCheckPeerExpire and SSLProxyCheckPeerCN directives\n     to enable stricter checking of remote server certificates.\n     [Ruediger Pluem]\n\n  *) ab: Fix a 100% CPU loop on platforms where a failed non-blocking connect\n     returns EINPROGRESS and a subsequent poll() returns only POLLERR.\n     Observed on HP-UX.  [Eric Covener]\n\n  *) Remove broken support for BeOS, TPF, and even older platforms such\n     as A/UX, Next, and Tandem.  [Jeff Trawick]\n\n  *) mod_proxy_ftp: Add ProxyFtpListOnWildcard directive to allow files with\n     globbing characters to be retrieved instead of converted into a\n     directory listing.  PR 46789 [Dan Poirier <poirier pobox.com>]\n\n  *) Provide ap_retained_data_create()/ap_retained_data_get() for preservation\n     of module state across unload/load.  [Jeff Trawick]\n\n  *) mod_substitute: Fix a memory leak. PR 44948\n     [Dan Poirier <poirier pobox.com>]\n\nChanges with Apache 2.3.2\n\n  *) mod_mime_magic: Fix detection of compressed content. [Rainer Jung]\n\n  *) mod_negotiation: Escape pathes of filenames in 406 responses to avoid\n     HTML injections and HTTP response splitting.  PR 46837.\n     [Geoff Keating <geoffk apple.com>]\n\n  *) mod_ssl: add support for type-safe STACK constructs in OpenSSL\n     development HEAD.  PR 45521.  [Kaspar Brand, Sander Temme]\n\n  *) ab: Fix maintenance of the pollset to resolve EALREADY errors\n     with kqueue (BSD/OS X) and excessive CPU with event ports (Solaris).\n     PR 44584.  Use APR_POLLSET_NOCOPY for better performance with some\n     pollset implementations.  [Jeff Trawick]\n\n  *) mod_disk_cache: The module now turns off sendfile support if\n     'EnableSendfile off' is defined globally. [Lars Eilebrecht]\n\n  *) mod_deflate: Adjust content metadata before bailing out on 304\n     responses so that the metadata does not differ from 200 response.\n     [Roy T. Fielding]\n\n  *) mod_deflate: Fix creation of invalid Etag headers. We now make sure\n     that the Etag value is properly quoted when adding the gzip marker.\n     PR 39727, 45023. [Lars Eilebrecht, Roy T. Fielding]\n\n  *) Added 20x22 icons for ODF, SVG, and XML documents.  PR 37185.\n     [Peter Harlow]\n\n  *) Disabled DefaultType directive and removed ap_default_type()\n     from core.  We now exclude Content-Type from responses for which\n     a media type has not been configured via mime.types, AddType,\n     ForceType, or some other mechanism. PR 13986. [Roy T. Fielding]\n\n  *) mod_rewrite: Add IPV6 variable to RewriteCond\n     [Ryan Phillips <ryan-apache trolocsis.com>]\n\n  *) core: Enhance KeepAliveTimeout to support a value in milliseconds.\n     PR 46275. [Takashi Sato]\n\n  *) rotatelogs: Allow size units B, K, M, G and combination of\n     time and size based rotation. [Rainer Jung]\n\n  *) rotatelogs: Add flag for verbose (debug) output. [Rainer Jung]\n\n  *) mod_ssl: Fix merging of SSLRenegBufferSize directive. PR 46508\n     [<tlhackque yahoo.com>]\n\n  *) core: Translate the the status line to ASCII on EBCDIC platforms in\n     ap_send_interim_response() and for locally generated \"100 Continue\"\n     responses.  [Eric Covener]\n\n  *) prefork: Fix child process hang during graceful restart/stop in\n     configurations with multiple listening sockets.  PR 42829.  [Joe Orton,\n     Jeff Trawick]\n\n  *) mod_session_crypto: Ensure that SessionCryptoDriver can only be\n     set in the global scope. [Graham Leggett]\n\n  *) mod_ext_filter: We need to detect failure to startup the filter\n     program (a mangled response is not acceptable).  Fix to detect\n     failure, and offer configuration option either to abort or\n     to remove the filter and continue.\n     PR 41120 [Nick Kew]\n\n  *) mod_session_crypto: Rewrite the session_crypto module against the\n     apr_crypto API. [Graham Leggett]\n\n  *) mod_auth_form: Fix a pool lifetime issue, don't remove the subrequest\n     until the main request is cleaned up. [Graham Leggett]\n\nChanges with Apache 2.3.1\n\n  *) ap_slotmem: Add in new slot-based memory access API impl., including\n     2 providers (mod_sharedmem and mod_plainmem) [Jim Jagielski,\n     Jean-Frederic Clere, Brian Akins <brian.akins turner.com>]\n\n  *) mod_include: support generating non-ASCII characters as entities in SSI\n     PR 25202 [Nick Kew]\n\n  *) core/utils: Enhance ap_escape_html API to support escaping non-ASCII chars\n     PR 25202 [Nick Kew]\n\n  *) mod_rewrite: fix \"B\" flag breakage by reverting r5589343\n    PR 45529 [Bob Ionescu <bobsiegen googlemail.com>]\n\n  *) CGI: return 504 (Gateway timeout) rather than 500 when a script\n     times out before returning status line/headers.\n     PR 42190 [Nick Kew]\n\n  *) mod_cgid: fix segfault problem on solaris.\n     PR 39332 [Masaoki Kobayashi <masaoki techfirm.co.jp>]\n\n  *) mod_proxy_scgi: Added. [Andr\u00e9 Malo]\n\n  *) mod_cache: Introduce 'no-cache' per-request environment variable\n     to prevent the saving of an otherwise cacheable response.\n     [Eric Covener]\n\n  *) mod_rewrite: Introduce DiscardPathInfo|DPI flag to stop the troublesome\n     way that per-directory rewrites append the previous notion of PATH_INFO\n     to each substitution before evaluating subsequent rules.\n     PR 38642 [Eric Covener]\n\n  *) mod_cgid: Do not add an empty argument when calling the CGI script.\n     PR 46380 [Ruediger Pluem]\n\n  *) scoreboard: Remove unused sb_type from process_score.\n     [Torsten Foertsch <torsten.foertsch gmx.net>, Chris Darroch]\n\n  *) mod_ssl: Add SSLRenegBufferSize directive to allow changing the\n     size of the buffer used for the request-body where necessary\n     during a per-dir renegotiation.  PR 39243.  [Joe Orton]\n\n  *) mod_proxy_fdpass: New module to pass a client connection over to a separate\n     process that is reading from a unix daemon socket.\n\n  *) mod_ssl: Improve environment variable extraction to be more\n     efficient and to correctly handle DNs with duplicate tags.\n     PR 45975.  [Joe Orton]\n\n  *) Remove the obsolete serial attribute from the RPM spec file. Compile\n     against the external pcre. Add missing binaries fcgistarter, and\n     mod_socache* and mod_session*. [Graham Leggett]\n\nChanges with Apache 2.3.0\n\n  *) mod_ratelimit: New module to do bandwidth rate limiting. [Paul Querna]\n\n  *) Remove X-Pad header which was added as a work around to a bug in\n     Netscape 2.x to 4.0b2. [Takashi Sato <takashi lans-tv.com>]\n\n  *) Add DTrace Statically Defined Tracing (SDT) probes.\n    [Theo Schlossnagle <jesus omniti.com>, Paul Querna]\n\n  *) mod_proxy_balancer: Move all load balancing implementations\n     as individual, self-contained mod_proxy submodules under\n     modules/proxy/balancers [Jim Jagielski]\n\n  *) Rename APIs to include ap_ prefix:\n        find_child_by_pid -> ap_find_child_by_pid\n        suck_in_APR -> ap_suck_in_APR\n        sys_privileges_handlers -> ap_sys_privileges_handlers\n        unixd_accept -> ap_unixd_accept\n        unixd_config -> ap_unixd_config\n        unixd_killpg -> ap_unixd_killpg\n        unixd_set_global_mutex_perms -> ap_unixd_set_global_mutex_perms\n        unixd_set_proc_mutex_perms -> ap_unixd_set_proc_mutex_perms\n        unixd_set_rlimit -> ap_unixd_set_rlimit\n     [Paul Querna]\n\n  *) mod_lbmethod_heartbeat: New module to load balance mod_proxy workers\n     based on heartbeats. [Paul Querna]\n\n  *) mod_heartmonitor: New module to collect heartbeats, and write out a file\n     so that other modules can load balance traffic as needed. [Paul Querna]\n\n  *) mod_heartbeat: New module to generate multicast heartbeats to know if a\n     server is online. [Paul Querna]\n\n  *) mod_buffer: Honour the flush bucket and flush the buffer in the\n     input filter. Make sure that metadata buckets are written to\n     the buffer, not to the final brigade. [Graham Leggett]\n\n  *) mod_buffer: Optimise the buffering of heap buckets when the heap\n     buckets stay exactly APR_BUCKET_BUFF_SIZE long. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) mod_buffer: Optional support for buffering of the input and output\n     filter stacks. Can collapse many small buckets into fewer larger\n     buckets, and prevents excessively small chunks being sent over\n     the wire. [Graham Leggett]\n\n  *) mod_privileges: new module to make httpd on Solaris privileges-aware\n     and to enable different virtualhosts to run with different\n     privileges and Unix user/group IDs [Nick Kew]\n\n  *) mod_mem_cache: this module has been removed. [William Rowe]\n\n  *) authn/z: Remove mod_authn_default and mod_authz_default.\n     [Chris Darroch]\n\n  *) authz: Fix handling of authz configurations, make default authz\n     logic replicate 2.2.x authz logic, and replace <Satisfy*>, Reject,\n     and AuthzMergeRules directives with Match, <Match*>, and AuthzMerge\n     directives.  [Chris Darroch]\n\n  *) mod_authn_core: Prevent crash when provider alias created to\n     provider which is not yet registered.  [Chris Darroch]\n\n  *) mod_authn_core: Add AuthType of None to support disabling\n     authentication.  [Chris Darroch]\n\n  *) core: Allow <Limit> and <LimitExcept> directives to nest, and\n     constrain their use to conform with that of other access control\n     and authorization directives.  [Chris Darroch]\n\n  *) unixd: turn existing code into a module, and turn the set user/group\n     and chroot into a child_init function. [Nick Kew]\n\n  *) mod_dir: Support \"DirectoryIndex disabled\"\n     Suggested By Andr\u00e9 Warnier <aw ice-sa.com> [Eric Covener]\n\n  *) mod_ssl: Send Content-Type application/ocsp-request for POST requests to\n     OSCP responders. PR 46014 [Dr Stephen Henson <steve openssl.org>]\n\n  *) mod_authnz_ldap: don't return NULL-valued environment variables to\n     other modules.  PR 39045 [Francois Pesce <francois.pesce gmail.com>]\n\n  *) Don't adjust case in pathname components that are not of interest\n     to mod_mime.  Fixes mod_negotiation's use of such components.\n     PR 43250 [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) Be tolerant in what you accept - accept slightly broken\n     status lines from a backend provided they include a valid status code.\n     PR 44995 [Rainer Jung <rainer.jung kippdata.de>]\n\n  *) New module mod_sed: filter Request/Response bodies through sed\n     [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) mod_auth_form: Make sure that basic authentication is correctly\n     faked directly after login. [Graham Leggett]\n\n  *) mod_session_cookie, mod_session_dbd: Make sure cookies are set both\n     within the output headers and error output headers, so that the\n     session is maintained across redirects. [Graham Leggett]\n\n  *) mod_auth_form: Make sure the logged in user is populated correctly\n     after a form login. Fixes a missing REMOTE_USER variable directly\n     following a login. [Graham Leggett]\n\n  *) mod_session_cookie: Make sure that cookie attributes are correctly\n     included in the blank cookie when cookies are removed. This fixes an\n     inability to log out when using mod_auth_form. [Graham Leggett]\n\n  *) mod_session: Prevent a segfault when a CGI script sets a cookie with a\n     null value. [David Shane Holden <dpejesh apache.org>]\n\n  *) core, authn/z: Determine registered authn/z providers directly in\n     ap_setup_auth_internal(), which allows optional functions that just\n     wrapped ap_list_provider_names() to be removed from authn/z modules.\n     [Chris Darroch]\n\n  *) authn/z: Convert common provider version strings to macros.\n     [Chris Darroch]\n\n  *) core: When testing for slash-terminated configuration paths in\n     ap_location_walk(), don't look past the start of an empty string\n     such as that created by a <Location \"\"> directive.\n     [Chris Darroch]\n\n  *) core, mod_proxy: If a kept_body is present, it becomes safe for\n     subrequests to support message bodies. Make sure that safety\n     checks within the core and within the proxy are not triggered\n     when kept_body is present. This makes it possible to embed\n     proxied POST requests within mod_include. [Graham Leggett]\n\n  *) mod_auth_form: Make sure the input filter stack is properly set\n     up before reading the login form. Make sure the kept body filter\n     is correctly inserted to ensure the body can be read a second\n     time safely should the authn be successful. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) mod_request: Insert the KEPT_BODY filter via the insert_filter\n     hook instead of during fixups. Add a safety check to ensure the\n     filters cannot be inserted more than once. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) ap_cache_cacheable_headers_out() will (now) always\n     merge an error headers _before_ clearing them and _before_\n     merging in the actual entity headers and doing normal\n     hop-by-hop cleansing. [Dirk-Willem van Gulik].\n\n  *) cache: retire ap_cache_cacheable_hdrs_out() which was used\n     for both in- and out-put headers; and replace it by a single\n     ap_cache_cacheable_headers() wrapped in a in- and out-put\n     specific ap_cache_cacheable_headers_in()/out(). The latter\n     which will also merge error and ensure content-type. To keep\n     cache modules consistent with ease. This API change bumps\n     up the minor MM by one [Dirk-Willem van Gulik].\n\n  *) Move the KeptBodySize directive, kept_body filters and the\n     ap_parse_request_body function out of the http module and into a\n     new module called mod_request, reducing the size of the core.\n     [Graham Leggett]\n\n  *) mod_dbd: Handle integer configuration directive parameters with a\n     dedicated function.\n\n  *) Change the directives within the mod_session* modules to be valid\n     both inside and outside the location/directory sections, as\n     suggested by wrowe. [Graham Leggett]\n\n  *) mod_auth_form: Add a module capable of allowing end users to log\n     in using an HTML form, storing the credentials within mod_session.\n     [Graham Leggett]\n\n  *) Add a function to the http filters that is able to parse an HTML\n     form request with the type of application/x-www-form-urlencoded.\n     [Graham Leggett]\n\n  *) mod_session_crypto: Initialise SSL in the post config hook.\n     [Ruediger Pluem, Graham Leggett]\n\n  *) mod_session_dbd: Add a session implementation capable of storing\n     session information in a SQL database via the dbd interface. Useful\n     for sites where session privacy is important. [Graham Leggett]\n\n  *) mod_session_crypto: Add a session encoding implementation capable\n     of encrypting and decrypting sessions wherever they may be stored.\n     Introduces a level of privacy when sessions are stored on the\n     browser. [Graham Leggett]\n\n  *) mod_session_cookie: Add a session implementation capable of storing\n     session information within cookies on the browser. Useful for high\n     volume sites where server bound sessions are too resource intensive.\n     [Graham Leggett]\n\n  *) mod_session: Add a generic session interface to unify the different\n     attempts at saving persistent sessions across requests.\n     [Graham Leggett]\n\n  *) core, authn/z: Avoid calling access control hooks for internal requests\n     with configurations which match those of initial request.  Revert to\n     original behaviour (call access control hooks for internal requests\n     with URIs different from initial request) if any access control hooks or\n     providers are not registered as permitting this optimization.\n     Introduce wrappers for access control hook and provider registration\n     which can accept additional mode and flag data.  [Chris Darroch]\n\n  *) Introduced ap_expr API for expression evaluation.\n     This is adapted from mod_include, which is the first module\n     to use the new API.\n     [Nick Kew]\n\n  *) mod_authz_dbd: When redirecting after successful login/logout per\n     AuthzDBDRedirectQuery, do not report authorization failure, and use\n     first row returned by database query instead of last row.\n     [Chris Darroch]\n\n  *) mod_ldap: Correctly return all requested attribute values\n     when some attributes have a null value.\n     PR 44560 [Anders Kaseorg <anders kaseorg.com>]\n\n  *) core: check symlink ownership if both FollowSymlinks and\n     SymlinksIfOwnerMatch are set [Nick Kew]\n\n  *) core: fix origin checking in SymlinksIfOwnerMatch\n     PR 36783 [Robert L Mathews <rob-apache.org.bugs tigertech.net>]\n\n  *) Activate mod_cache, mod_file_cache and mod_disk_cache as part of the\n     'most' set for '--enable-modules' and '--enable-shared-mods'. Include\n     mod_mem_cache in 'all' as well. [Dirk-Willem van Gulik]\n\n  *) Also install mod_so.h, mod_rewrite.h and mod_cache.h; as these\n     contain public function declarations which are useful for\n     third party module authors. PR 42431 [Dirk-Willem van Gulik].\n\n  *) mod_dir, mod_negotiation: pass the output filter information\n     to newly created sub requests; as these are later on used\n     as true requests with an internal redirect. This allows for\n     mod_cache et.al. to trap the results of the redirect.\n     [Dirk-Willem van Gulik, Ruediger Pluem]\n\n  *) mod_ldap: Add support (taking advantage of the new APR capability)\n     for ldap rebind callback while chasing referrals. This allows direct\n     searches on LDAP servers (in particular MS Active Directory 2003+)\n     using referrals without the use of the global catalog.\n     PRs 26538, 40268, and 42557 [Paul J. Reder]\n\n  *) ApacheMonitor.exe: Introduce --kill argument for use by the\n     installer.  This will permit the installation tool to remove\n     all running instances before attempting to remove the .exe.\n     [William Rowe]\n\n  *) mod_ssl: Add support for OCSP validation of client certificates.\n     PR 41123.  [Marc Stern <marc.stern approach.be>, Joe Orton]\n\n  *) mod_serf: New module for Reverse Proxying. [Paul Querna]\n\n  *) core: Add the option to keep aside a request body up to a certain\n     size that would otherwise be discarded, to be consumed by filters\n     such as mod_include. When enabled for a directory, POST requests\n     to shtml files can be passed through to embedded scripts as POST\n     requests, rather being downgraded to GET requests. [Graham Leggett]\n\n  *) mod_ssl: Fix TLS upgrade (RFC 2817) support.  PR 41231.  [Joe Orton]\n\n  *) scoreboard: Correctly declare ap_time_process_request.\n     PR 43789 [Tom Donovan <Tom.Donovan acm.org>]\n\n  *) core; scoreboard: ap_get_scoreboard_worker(sbh) now takes the sbh member\n     from the connection rec, ap_get_scoreboard_worker(proc, thread) will now\n     provide the unusual legacy lookup.  [William Rowe]\n\n  *) mpm winnt: fix null pointer dereference\n     PR 42572 [Davi Arnaut]\n\n  *) mod_authnz_ldap, mod_authn_dbd: Tidy up the code to expose authn\n     parameters to the environment. Improve portability to\n     EBCDIC machines by using apr_toupper(). [Martin Kraemer]\n\n  *) mod_ldap, mod_authnz_ldap: Add support for nested groups (i.e. the ability\n     to authorize an authenticated user via a \"require ldap-group X\" directive\n     where the user is not in group X, but is in a subgroup contained in X.\n     PR 42891 [Paul J. Reder]\n\n  *) mod_ssl: Add support for caching SSL Sessions in memcached. [Paul Querna]\n\n  *) apxs: Enhance -q flag to print all known variables and their values\n     when invoked without variable name(s).\n     [William Rowe, Sander Temme]\n\n  *) apxs: Eliminate run-time check for mod_so.  PR 40653.\n     [David M. Lee <dmlee crossroads.com>]\n\n  *) beos MPM: Create pmain pool and run modules' child_init hooks when\n     entering ap_mpm_run(), then destroy pmain when exiting ap_mpm_run().\n     [Chris Darroch]\n\n  *) netware MPM: Destroy pmain pool when exiting ap_mpm_run() so that\n     cleanups registered in modules' child_init hooks are performed.\n     [Chris Darroch]\n\n  *) Fix issue which could cause error messages to be written to access logs\n     on Win32.  PR 40476.  [Tom Donovan <Tom.Donovan acm.org>]\n\n  *) The LockFile directive, which specifies the location of\n     the accept() mutex lockfile, is deprecated. Instead, the\n     AcceptMutex directive now takes an optional lockfile\n     location parameter, ala SSLMutex. [Jim Jagielski]\n\n  *) mod_authn_dbd: Export any additional columns queried in the SQL select\n     into the environment with the name AUTHENTICATE_<COLUMN>. This brings\n     mod_authn_dbd behaviour in line with mod_authnz_ldap. [Graham Leggett]\n\n  *) mod_dbd: Key the storage of prepared statements on the hex string\n     value of server_rec, rather than the server name, as the server name\n     may change (eg when the server name is set) at any time, causing\n     weird behaviour in modules dependent on mod_dbd. [Graham Leggett]\n\n  *) mod_proxy_fcgi: Added win32 build. [Mladen Turk]\n\n  *) sendfile_nonblocking() takes the _brigade_ as an argument, gets\n     the first bucket from the brigade, finds it not to be a FILE\n     bucket and barfs. The fix is to pass a bucket rather than a brigade.\n     [Niklas Edmundsson <nikke acc.umu.se>]\n\n  *) mod_rewrite: support rewritemap by SQL query [Nick Kew]\n\n  *) ap_get_server_version() has been removed.  Third-party modules must\n     now use ap_get_server_banner() or ap_get_server_description().\n     [Jeff Trawick]\n\n  *) All MPMs: Introduce a check_config phase between pre_config and\n     open_logs, to allow modules to review interdependent configuration\n     directive values and adjust them while messages can still be logged\n     to the console.  Handle relevant MPM directives during this phase\n     and format messages for both the console and the error log, as\n     appropriate.  [Chris Darroch]\n\n  *) core: Do not allow internal redirects like the DirectoryIndex of mod_dir\n     to circumvent the symbolic link checks imposed by FollowSymLinks and\n     SymLinksIfOwnerMatch. [Nick Kew, Ruediger Pluem, William Rowe]\n\n  *) New SSLLogLevelDebugDump [ None (default) | IO (not bytes) | Bytes ]\n     configures the I/O Dump of SSL traffic, when LogLevel is set to Debug.\n     The default is none as this is far greater debugging resolution than\n     the typical administrator is prepared to untangle.  [William Rowe]\n\n  *) mod_disk_cache: If possible, check if the size of an object to cache is\n     within the configured boundaries before actually saving data.\n     [Niklas Edmundsson <nikke acc.umu.se>]\n\n  *) Worker and event MPMs: Remove improper scoreboard updates which were\n     performed in the event of a fork() failure.  [Chris Darroch]\n\n  *) Add support for fcgi:// proxies to mod_rewrite.\n     [Markus Schiegl <ms schiegl.com>]\n\n  *) Remove incorrect comments from scoreboard.h regarding conditional\n     loading of worker_score structure with mod_status, and remove unused\n     definitions relating to old life_status field.\n     [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) Remove allocation of memory for unused array of lb_score pointers\n     in ap_init_scoreboard().  [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) Add mod_proxy_fcgi, a FastCGI back end for mod_proxy.\n     [Garrett Rooney, Jim Jagielski, Paul Querna]\n\n  *) Event MPM: Fill in the scoreboard's tid field. PR 38736.\n     [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) mod_charset_lite: Remove Content-Length when output filter can\n     invalidate it.  Warn when input filter can invalidate it.\n     [Jeff Trawick]\n\n  *) Authz: Add the new module mod_authn_core that will provide common\n     authn directives such as 'AuthType', 'AuthName'.  Move the directives\n     'AuthType' and 'AuthName' out of the core module and merge mod_authz_alias\n     into mod_authn_core. [Brad Nicholes]\n\n  *) Authz: Move the directives 'Order', 'Allow', 'Deny' and 'Satisfy'\n     into the new module mod_access_compat which can be loaded to provide\n     support for these directives.\n     [Brad Nicholes]\n\n  *) Authz: Move the 'Require' directive from the core module as well as\n     add the directives '<SatisfyAll>', '<SatisfyOne>', '<RequireAlias>'\n     and 'Reject' to mod_authz_core. The new directives introduce 'AND/OR'\n     logic into the authorization processing. [Brad Nicholes]\n\n  *) Authz: Add the new module mod_authz_core which acts as the\n     authorization provider vector and contains common authz\n     directives. [Brad Nicholes]\n\n  *) Authz: Renamed mod_authz_dbm authz providers from 'group' and\n     'file-group' to 'dbm-group' and 'dbm-file-group'. [Brad Nicholes]\n\n  *) Authz: Added the new authz providers 'env', 'ip', 'host', 'all' to handle\n     host-based access control provided by mod_authz_host and invoked\n     through the 'Require' directive. [Brad Nicholes]\n\n  *) Authz: Convert all of the authz modules from hook based to\n     provider based. [Brad Nicholes]\n\n  *) mod_cache: Add CacheMinExpire directive to set the minimum time in\n     seconds to cache a document.\n     [Brian Akins <brian.akins turner.com>, Ruediger Pluem]\n\n  *) mod_authz_dbd: SQL authz with Login/Session support [Nick Kew]\n\n  *) Fix typo in ProxyStatus syntax error message.\n     [Christophe Jaillet <christophe.jaillet wanadoo.fr>]\n\n  *) Asynchronous write completion for the Event MPM.  [Brian Pane]\n\n  *) Added an End-Of-Request bucket type.  The logging of a request and\n     the freeing of its pool are now done when the EOR bucket is destroyed.\n     This has the effect of delaying the logging until right after the last\n     of the response is sent; ap_core_output_filter() calls the access logger\n     indirectly when it destroys the EOR bucket.  [Brian Pane]\n\n  *) Rewrite of logresolve support utility: IPv6 addresses are now supported\n     and the format of statistical output has changed. [Colm MacCarthaigh]\n\n  *) Rewrite of ap_coreoutput_filter to do nonblocking writes  [Brian Pane]\n\n  *) Added new connection states for handler and write completion\n     [Brian Pane]\n\n  *) mod_cgid: Refuse to work on Solaris 10 due to OS bugs.  PR 34264.\n     [Justin Erenkrantz]\n\n  *) Teach mod_ssl to use arbitrary OIDs in an SSLRequire directive,\n     allowing string-valued client certificate attributes to be used for\n     access control, as in: SSLRequire \"value\" in OID(\"1.3.6.1.4.1.18060.1\")\n     [Martin Kraemer, David Reid]\n\n  [Apache 2.3.0-dev includes those bug fixes and changes with the\n   Apache 2.2.xx tree as documented, and except as noted, below.]\n\nChanges with Apache 2.2.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/CHANGES?view=markup\n\nChanges with Apache 2.0.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.0.x/CHANGES?view=markup\n\n", "APACHE 2.4 STATUS:                        -*- mode: text; coding: utf-8 -*-\nLast modified at [$Date$]\n\nThe current version of this file can be found at:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/STATUS\n\nDocumentation status is maintained separately and can be found at:\n\n  * docs/STATUS in this source tree, or\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/docs/STATUS\n\nThe current development branch of this software can be found at:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/trunk\n\nConsult the following STATUS files for information on related projects:\n\n  * http://svn.apache.org/repos/asf/apr/apr/trunk/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr/branches/1.4.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr-util/branches/1.4.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr/branches/1.5.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr-util/branches/1.5.x/STATUS\n\nPatches considered for backport are noted in their branches' STATUS:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.0.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.2.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/STATUS\n\n\n\nRelease history:\n    [NOTE that x.{odd}.z versions are strictly Alpha/Beta releases,\n          while x.{even}.z versions are Stable/GA releases.]\n\n    2.4.11  : In development.\n    2.4.10  : Tagged on July 15, 2014. Released July 21, 2014\n    2.4.9   : Tagged on March 13, 2014. Released on March 17, 2014\n    2.4.8   : Tagged on March 11, 2014. Not released.\n    2.4.7   : Tagged on November 19, 2013. Released on Nov 25, 2013\n    2.4.6   : Tagged on July 15, 2013. Released July, 22, 2013\n    2.4.5   : Tagged on July 11, 2013, not released.\n    2.4.4   : Tagged on February 18, 2013. Released Feb 25, 2013\n    2.4.3   : Tagged on August 17, 2012. Released Aug 18, 2012\n    2.4.2   : Tagged on April 5, 2012. Released Apr 17, 2012.\n    2.4.1   : Tagged on February 13, 2012. Released Feb 21, 2012.\n    2.4.0   : Tagged on January 16, 2012, not released.\n    2.3.16  : Tagged on December 15, 2011.\n    2.3.15  : Tagged on November 8, 2011. Released Nov. 15, 2011.\n    2.3.14  : Tagged on August 1, 2011. Released Aug. 9, 2011.\n    2.3.13  : Tagged on June 28, 2011, not released.\n    2.3.12  : Tagged on May 11, 2011. Released May 23, 2011.\n    2.3.11  : Released as Beta on March 7, 2011.\n    2.3.10  : Tagged on December 13, 2010. Released Dec 21, 2010.\n    2.3.9   : Tagged on November 23, 2010, not released.\n    2.3.8   : Tagged on August 24, 2010.\n    2.3.7   : Tagged on August 19, 2010, not released.\n    2.3.6   : Released on June 21, 2010.\n    2.3.5   : Released on January 26, 2010.\n    2.3.4   : Released on December 8, 2009.\n    2.3.3   : Tagged on November 11, 2009, not released.\n    2.3.2   : Tagged on March 23, 2009, not released.\n    2.3.1   : Tagged on January 2, 2009, not released.\n    2.3.0   : Tagged on December 6, 2008, not released.\n\nContributors looking for a mission:\n\n  * Just do an egrep on \"TODO\" or \"XXX\" in the source.\n\n  * Review the bug database at: http://issues.apache.org/bugzilla/\n\n  * Review the \"PatchAvailable\" bugs in the bug database:\n\n    https://issues.apache.org/bugzilla/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&product=Apache+httpd-2&keywords=PatchAvailable\n\n    After testing, you can append a comment saying \"Reviewed and tested\".\n\n  * Open bugs in the bug database.\n\n  * See also the STATUS file in the docs/ directory, which lists documentation-specific TODO items.\n\n\nCURRENT RELEASE NOTES:\n\n  * Forward binary compatibility is expected of Apache 2.4.x releases, such\n    that no MMN major number changes will occur after 2.4.1.  Such changes can\n    only be made in the trunk.\n\n  * All commits to branches/2.4.x must be reflected in SVN trunk,\n    as well, if they apply.  Logical progression is commit to trunk\n    then merge into branches/2.4.x, as applicable.\n\n  * Current exceptions for RTC for this branch:\n    . mod_lua\n    . documentation\n    . non-Unix build\n    . non-Unix, single-platform code\n\nRELEASE SHOWSTOPPERS:\n\n\n\nPATCHES ACCEPTED TO BACKPORT FROM TRUNK:\n  [ start all new proposals below, under PATCHES PROPOSED. ]\n\n  *) SECURITY: CVE-2014-8109 (cve.mitre.org)\n     mod_lua: Fix handling of the Require line when a LuaAuthzProvider is\n              used in multiple Require directives with different arguments.\n              PR57204. \n     trunk patch: http://svn.apache.org/r1642499\n     2.4.x patch: trunk works:\n     +1 covener, ylavic, jim\n\n\nPATCHES PROPOSED TO BACKPORT FROM TRUNK:\n  [ New proposals should be added at the end of the list ]\n\n   * mod_proxy: Preserve original request headers even if they differ\n                from the ones to be forwarded to the backend. PR 45387.\n     trunk patch: http://svn.apache.org/r1588527\n     2.4.x patch: trunk works (modulo CHANGES)\n     +1: ylavic, rjung\n\n   * mod_proxy: Don't limit the size of the connectable Unix Domain Socket paths.\n                [Graham Dumpleton, Christophe Jaillet, Yann Ylavic]\n     trunk patch: http://svn.apache.org/r1598946\n                  http://svn.apache.org/r1602989\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-ap_proxy_connect_uds.patch\n                  (modulo CHANGES/MMN)\n     +1: ylavic, jim\n\n   * mod_ssl, event: Ensure that the SSL close notify alert is flushed to the client.\n                     PR54998.\n     trunk patch: http://svn.apache.org/r1601184\n                  http://svn.apache.org/r1601274\n                  http://svn.apache.org/r1601185\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-SSL-shutdown.patch\n                  (modulo CHANGES/MMN)\n     +1: ylavic, rjung\n\n   * mod_proxy: Shutdown (eg. SSL close notify) the backend connection before closing.\n     trunk patch: http://svn.apache.org/r1601291\n                  http://svn.apache.org/r1601630\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-proxy-SSL-shutdown.patch\n                  (modulo CHANGES)\n     note: depends on ap_shutdown_conn() from r1601185 above.\n     +1: ylavic, rjung\n\n   * mpm_winnt service.c: Normalize all error and status messages, clean up\n     source formatting, and accept utf-8 service names/descriptions for i18n.\n     trunk patches: http://svn.apache.org/r1611165\n                    http://svn.apache.org/r1611169\n                    http://svn.apache.org/r1611244\n     2.4.x patches: trunk works\n     +1: wrowe, gsmith\n\n   * mod_systemd: New module, for integration with systemd on Linux.\n     trunk patch: http://svn.apache.org/r1393976\n                  http://svn.apache.org/r1393997\n                  http://svn.apache.org/r1484554\n                  http://svn.apache.org/r1528032\n                  http://svn.apache.org/r1528034\n                  http://svn.apache.org/r1614821\n                  http://svn.apache.org/r1618579\n                  http://svn.apache.org/r1618588\n     2.4.x patch: http://people.apache.org/~jkaluza/patches/mod_systemd/httpd-2.4.x-mod_systemd.patch\n     +1: jkaluza\n\n   * core: Add support for systemd socket activation.\n     trunk patch: http://svn.apache.org/r1511033\n                  http://svn.apache.org/r1608686\n                  http://svn.apache.org/r1608694\n                  http://svn.apache.org/r1608703\n                  http://svn.apache.org/r1608721\n                  http://svn.apache.org/r1608744\n     2.4.x patch: http://people.apache.org/~jkaluza/patches/mod_systemd/httpd-2.4.x-socket-activation.patch\n     +1: jkaluza\n\n   * mod_buffer: Forward flushed input data immediately and avoid (unlikely)\n                 access to freed memory.\n     trunk patch: http://svn.apache.org/r1632742\n                  http://svn.apache.org/r1634836 (CHANGES entry)\n     2.4.x patches: trunk works (modulo CHANGES).\n     +1: ylavic\n\n   * mod_cgi: Log CGI script stderr to ScriptLog, use APLOGNO for\n     log_scripterror errors.\n     trunk patch: http://svn.apache.org/r1626978\n     2.4.x patch: trunk works\n     +1 jkaluza\n     ylavic: shouldn't we also (still) log on ErrorLog, at least on 2.4.x?\n             The log_script_err() line may somewhere be expected in error_log.\n             The new AH* in script_log could also cause parsing issues, but I'm\n             fine with this personnaly.\n\n   * mod_proxy_fcgi: Ignore body data from backend for 304 responses. PR 57198.\n     trunk patch: http://svn.apache.org/r1640495\n     2.4.x patch: trunk works\n     +1 jkaluza, covener\n     ylavic: Shouldn't we handle more cases here to ignore the body?\n             Please see my comment on dev@ as a reply to commit e-mail.\n\n   * mod_proxy: Add ap_proxy_define_match_worker() and use it for ProxyPassMatch\n     and ProxyMatch section to distinguish between normal workers and workers\n     with regex substitutions in the name. Implement handling of such workers\n     in ap_proxy_get_worker(). Fixes the bug when regex workers were not\n     matched and used for request. PR 43513.\n     trunk patch: http://svn.apache.org/r1609680\n                  http://svn.apache.org/r1641381\n     2.4.x patch: trunk works\n     +1: jkaluza, ylavic\n\n   * mod_rewrite: use the context info API to alleviate the need to specify\n                  a RewriteBase in some situations\n     trunk patch: http://svn.apache.org/r1642484\n     2.4.x patch: trunk works\n     +1 covener\n\nOTHER PROPOSALS\n\n   * A list of further possible backports can be found at: \n     http://people.apache.org/~rjung/patches/possible-backports-httpd-trunk-2_4.txt\n     If you want to propose one of those, please add them above.\n\n\nPATCHES/ISSUES THAT ARE BEING WORKED\n\n\nPATCHES/ISSUES THAT ARE STALLED\n\n  * core: Stop the HTTP_IN filter from attempting to write error buckets\n    to the output filters\n    trunk patch: https://svn.apache.org/viewvc?view=revision&revision=1482522\n                 https://svn.apache.org/viewvc?view=revision&revision=1482918\n    2.4.x patch: /* working on it */\n    +1:  jim\n\n  * mod_proxy: Ensure network errors detected by the proxy are returned as\n    504 Gateway Timout as opposed to 502 Bad Gateway\n    trunk patch: https://svn.apache.org/viewvc?view=revision&revision=1480058\n    2.4.x patch: trunk patch works modulo CHANGES\n    +1:\n    -1: rpluem: This change is still disputed. See\n        http://mail-archives.apache.org/mod_mbox/httpd-dev/201305.mbox/%3C1B16B9E3-87BA-4EEF-939C-7C7313B54714%40gbiv.com%3E\n\n  * cross-compile: allow to provide CC_FOR_BUILD so that gen_test_char will be\n    compiled by the build compiler instead of the host compiler.\n    Also set CC_FOR_BUILD to 'cc' when cross-compilation is detected.\n    Trunk patches: http://svn.apache.org/viewvc?view=revision&revision=1327907\n                   http://svn.apache.org/viewvc?view=revision&revision=1328390\n                   http://svn.apache.org/viewvc?view=revision&revision=1328714\n    2.4 patch: http://people.apache.org/~fuankg/diffs/httpd-2.4.x-cross_compile.diff\n    fuankg: on hold until we agree for a better and more simple solution ...\n\n   * mod_ssl: Add support for Next Protocol Negotiation.\n     Trunk patch:\n       http://svn.apache.org/viewvc?view=revision&revision=1332643\n     2.4.x patch:\n       Trunk patch works.\n     +1: ben\n     sf says: Needs r1345599, too.\n              And wrowe's comment about the 2.2 patch is also valid for 2.4:\n              http://svn.apache.org/viewvc?view=revision&revision=1354823\n\n   * Makefile.win: Added copying of .vbs / .wsf CGIs to Windows install target.\n                   Moved fixing of shebang to separate target so that it is\n                   no longer executed by default and all CGIs remain inactive.\n     trunk patch: http://svn.apache.org/viewvc?view=revision&revision=1387984\n                  http://svn.apache.org/viewvc?view=revision&revision=1421203\n                  http://svn.apache.org/viewvc?view=revision&revision=1421591\n     2.4.x patch: http://people.apache.org/~fuankg/diffs/httpd-2.4.x-Makefile.win.diff\n     +1 fuankg, gsmith\n     -.8: trawick\n          This commit is essentially deciding that an httpd install on\n          Windows now has printenv/testcgi written in 2 more languages.\n          To the extent that the usefulness is that it shows how to make scripts\n          of these types executable by httpd, I believe that the documentation\n          is the proper place to solve that.  To the extent that the usefullness\n          is to show how to implement a CGI in these particular languages, I believe\n          that the httpd distribution and documentation in general is not the\n          place for that.  Historically these types of scripts have caused problems\n          for downstream vendorsas well as newbies (and sometimes the intersection\n          of those two groups) who don't understand that these are information leaks\n          once they are enabled, and the subtlety of the way they are disabled (\"Apache\n          messed up the first line; let me fix that\") contributes to that.\n     fuankg notes: I've just added a big warning to all CGI scripts which should now\n          make absolutely clear that these CGIs are for testing purpose only - so those\n          who enable those scripts with inserting the right shebang should be 100% aware\n          of any risks (this should cover your last point).\n     jim: trawick, does the above address your concerns?\n     trawick: to some extent (somebody reading the script gets an idea)\n          Why isn't the configuration requirement documented instead\n          of described indirectly in a sample?\n          Why are these new samples added to the install without three\n          votes?  (I didn't veto it; put your name next to the two\n          existing ones and I'll be satisified that enough people\n          considered this addition as an appropriate solution for a\n          real httpd usability problem.)\n     wrowe: I'd agree with trawick, and suggest that these scripts can begin\n            their life somewhere in the manual/ tree.  This really seems like\n            the place where /usr/share/httpd/examples/ would be useful, but\n            there isn't an ordinary directory for that.  Since we want none\n            of the scripts to function 'out of the box', what about a new\n            cgi-examples/ dir alongside cgi-bin/? Otherwise manual/cgi/examples\n            might work?\n\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include \"mod_lua.h\"\n#include <string.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <apr_thread_mutex.h>\n#include <apr_pools.h>\n#include \"lua_apr.h\"\n#include \"lua_config.h\"\n#include \"apr_optional.h\"\n#include \"mod_ssl.h\"\n#include \"mod_auth.h\"\n#include \"util_mutex.h\"\n\n\n#ifdef APR_HAS_THREADS\n#include \"apr_thread_proc.h\"\n#endif\n\n/* getpid for *NIX */\n#if APR_HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n#if APR_HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n/* getpid for Windows */\n#if APR_HAVE_PROCESS_H\n#include <process.h>\n#endif\n\nAPR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap_lua, AP_LUA, int, lua_open,\n                                    (lua_State *L, apr_pool_t *p),\n                                    (L, p), OK, DECLINED)\n\nAPR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap_lua, AP_LUA, int, lua_request,\n                                    (lua_State *L, request_rec *r),\n                                    (L, r), OK, DECLINED)\nstatic APR_OPTIONAL_FN_TYPE(ssl_var_lookup) *lua_ssl_val = NULL;\nstatic APR_OPTIONAL_FN_TYPE(ssl_is_https) *lua_ssl_is_https = NULL;\n\nmodule AP_MODULE_DECLARE_DATA lua_module;\n\n#define AP_LUA_HOOK_FIRST (APR_HOOK_FIRST - 1)\n#define AP_LUA_HOOK_LAST  (APR_HOOK_LAST  + 1)\n\ntypedef struct {\n    const char *name;\n    const char *file_name;\n    const char *function_name;\n    ap_lua_vm_spec *spec;\n    apr_array_header_t *args;\n} lua_authz_provider_spec;\n\napr_hash_t *lua_authz_providers;\n\ntypedef struct\n{\n    apr_bucket_brigade *tmpBucket;\n    lua_State *L;\n    ap_lua_vm_spec *spec;\n    int broken;\n} lua_filter_ctx;\n\napr_global_mutex_t *lua_ivm_mutex;\napr_shm_t *lua_ivm_shm;\nchar *lua_ivm_shmfile;\n\nstatic apr_status_t shm_cleanup_wrapper(void *unused) {\n    if (lua_ivm_shm) {\n        return apr_shm_destroy(lua_ivm_shm);\n    }\n    return OK;\n}\n\n/**\n * error reporting if lua has an error.\n * Extracts the error from lua stack and prints\n */\nstatic void report_lua_error(lua_State *L, request_rec *r)\n{\n    const char *lua_response;\n    r->status = HTTP_INTERNAL_SERVER_ERROR;\n    r->content_type = \"text/html\";\n    ap_rputs(\"<h3>Error!</h3>\\n\", r);\n    ap_rputs(\"<pre>\", r);\n    lua_response = lua_tostring(L, -1);\n    ap_rputs(ap_escape_html(r->pool, lua_response), r);\n    ap_rputs(\"</pre>\\n\", r);\n\n    ap_log_perror(APLOG_MARK, APLOG_WARNING, 0, r->pool, APLOGNO(01471) \"Lua error: %s\",\n                  lua_response);\n}\n\nstatic void lua_open_callback(lua_State *L, apr_pool_t *p, void *ctx)\n{\n    ap_lua_init(L, p);\n    ap_lua_load_apache2_lmodule(L);\n    ap_lua_load_request_lmodule(L, p);\n    ap_lua_load_config_lmodule(L);\n}\n\nstatic int lua_open_hook(lua_State *L, apr_pool_t *p)\n{\n    lua_open_callback(L, p, NULL);\n    return OK;\n}\n\nstatic const char *scope_to_string(unsigned int scope)\n{\n    switch (scope) {\n    case AP_LUA_SCOPE_ONCE:\n    case AP_LUA_SCOPE_UNSET:\n        return \"once\";\n    case AP_LUA_SCOPE_REQUEST:\n        return \"request\";\n    case AP_LUA_SCOPE_CONN:\n        return \"conn\";\n#if APR_HAS_THREADS\n    case AP_LUA_SCOPE_THREAD:\n        return \"thread\";\n    case AP_LUA_SCOPE_SERVER:\n        return \"server\";\n#endif\n    default:\n        ap_assert(0);\n        return 0;\n    }\n}\n\nstatic void ap_lua_release_state(lua_State* L, ap_lua_vm_spec* spec, request_rec* r) {\n    char *hash;\n    apr_reslist_t* reslist = NULL;\n    if (spec->scope == AP_LUA_SCOPE_SERVER) {\n        ap_lua_server_spec* sspec = NULL;\n        lua_settop(L, 0);\n        lua_getfield(L, LUA_REGISTRYINDEX, \"Apache2.Lua.server_spec\");\n        sspec = (ap_lua_server_spec*) lua_touserdata(L, 1);\n        hash = apr_psprintf(r->pool, \"reslist:%s\", spec->file);\n        if (apr_pool_userdata_get((void **)&reslist, hash,\n                                r->server->process->pool) == APR_SUCCESS) {\n            AP_DEBUG_ASSERT(sspec != NULL);\n            if (reslist != NULL) {\n                apr_reslist_release(reslist, sspec);\n            }\n        }\n    }\n}\n\nstatic ap_lua_vm_spec *create_vm_spec(apr_pool_t **lifecycle_pool,\n                                      request_rec *r,\n                                      const ap_lua_dir_cfg *cfg,\n                                      const ap_lua_server_cfg *server_cfg,\n                                      const char *filename,\n                                      const char *bytecode,\n                                      apr_size_t bytecode_len,\n                                      const char *function,\n                                      const char *what)\n{\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec = apr_pcalloc(r->pool, sizeof(ap_lua_vm_spec));\n\n    spec->scope = cfg->vm_scope;\n    spec->pool = r->pool;\n    spec->package_paths = cfg->package_paths;\n    spec->package_cpaths = cfg->package_cpaths;\n    spec->cb = &lua_open_callback;\n    spec->cb_arg = NULL;\n    spec->bytecode = bytecode;\n    spec->bytecode_len = bytecode_len;\n    spec->codecache = (cfg->codecache == AP_LUA_CACHE_UNSET) ? AP_LUA_CACHE_STAT : cfg->codecache;\n    spec->vm_min = cfg->vm_min ? cfg->vm_min : 1;\n    spec->vm_max = cfg->vm_max ? cfg->vm_max : 1;\n    \n    if (filename) {\n        char *file;\n        apr_filepath_merge(&file, server_cfg->root_path,\n                           filename, APR_FILEPATH_NOTRELATIVE, r->pool);\n        spec->file = file;\n    }\n    else {\n        spec->file = r->filename;\n    }\n    ap_log_rerror(APLOG_MARK, APLOG_TRACE2, 0, r, APLOGNO(02313)\n                  \"%s details: scope: %s, file: %s, func: %s\",\n                  what, scope_to_string(spec->scope), spec->file,\n                  function ? function : \"-\");\n\n    switch (spec->scope) {\n    case AP_LUA_SCOPE_ONCE:\n    case AP_LUA_SCOPE_UNSET:\n        apr_pool_create(&pool, r->pool);\n        break;\n    case AP_LUA_SCOPE_REQUEST:\n        pool = r->pool;\n        break;\n    case AP_LUA_SCOPE_CONN:\n        pool = r->connection->pool;\n        break;\n#if APR_HAS_THREADS\n    case AP_LUA_SCOPE_THREAD:\n        pool = apr_thread_pool_get(r->connection->current_thread);\n        break;\n    case AP_LUA_SCOPE_SERVER:\n        pool = r->server->process->pool;\n        break;\n#endif\n    default:\n        ap_assert(0);\n    }\n\n    *lifecycle_pool = pool;\n    return spec;\n}\n\nstatic const char* ap_lua_interpolate_string(apr_pool_t* pool, const char* string, const char** values)\n{\n    char *stringBetween;\n    const char* ret;\n    int srclen,x,y;\n    srclen = strlen(string);\n    ret = \"\";\n    y = 0;\n    for (x=0; x < srclen; x++) {\n        if (string[x] == '$' && x != srclen-1 && string[x+1] >= '0' && string[x+1] <= '9') {\n            int v = *(string+x+1) - '0';\n            if (x-y > 0) {\n                stringBetween = apr_pstrndup(pool, string+y, x-y);\n            }\n            else {\n                stringBetween = \"\";\n            }\n            ret = apr_pstrcat(pool, ret, stringBetween, values[v], NULL);\n            y = ++x+1;\n        }\n    }\n    \n    if (x-y > 0 && y > 0) {\n        stringBetween = apr_pstrndup(pool, string+y, x-y);\n        ret = apr_pstrcat(pool, ret, stringBetween, NULL);\n    }\n    /* If no replacement was made, just return the original string */\n    else if (y == 0) {\n        return string;\n    }\n    return ret;\n}\n\n\n\n/**\n * \"main\"\n */\nstatic int lua_handler(request_rec *r)\n{\n    int rc = OK;\n    if (strcmp(r->handler, \"lua-script\")) {\n        return DECLINED;\n    }\n    /* Decline the request if the script does not exist (or is a directory),\n     * rather than just returning internal server error */\n    if (\n            (r->finfo.filetype == APR_NOFILE)\n            || (r->finfo.filetype & APR_DIR)\n        ) {\n        return DECLINED;\n    }\n    ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r, APLOGNO(01472)\n                  \"handling [%s] in mod_lua\", r->filename);\n\n    /* XXX: This seems wrong because it may generate wrong headers for HEAD requests */\n    if (!r->header_only) {\n        lua_State *L;\n        apr_pool_t *pool;\n        const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                         &lua_module);\n        ap_lua_vm_spec *spec = create_vm_spec(&pool, r, cfg, NULL, NULL, NULL,\n                                              0, \"handle\", \"request handler\");\n\n        L = ap_lua_get_lua_state(pool, spec, r);\n        if (!L) {\n            /* TODO annotate spec with failure reason */\n            r->status = HTTP_INTERNAL_SERVER_ERROR;\n            ap_rputs(\"Unable to compile VM, see logs\", r);\n            ap_lua_release_state(L, spec, r);\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r, APLOGNO(01474) \"got a vm!\");\n        lua_getglobal(L, \"handle\");\n        if (!lua_isfunction(L, -1)) {\n            ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01475)\n                          \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                          \"handle\",\n                          spec->file);\n            ap_lua_release_state(L, spec, r);\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        ap_lua_run_lua_request(L, r);\n        if (lua_pcall(L, 1, 1, 0)) {\n            report_lua_error(L, r);\n        }\n        if (lua_isnumber(L, -1)) {\n            rc = lua_tointeger(L, -1);\n        }\n        ap_lua_release_state(L, spec, r);\n    }\n    return rc;\n}\n\n\n/* ------------------- Input/output content filters ------------------- */\n\n\nstatic apr_status_t lua_setup_filter_ctx(ap_filter_t* f, request_rec* r, lua_filter_ctx** c) {\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec;\n    int n, rc;\n    lua_State *L;\n    lua_filter_ctx *ctx;    \n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                        &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                    &lua_module);\n    \n    ctx = apr_pcalloc(r->pool, sizeof(lua_filter_ctx));\n    ctx->broken = 0;\n    *c = ctx;\n    /* Find the filter that was called.\n     * XXX: If we were wired with mod_filter, the filter (mod_filters name)\n     *      and the provider (our underlying filters name) need to have matched.\n     */\n    for (n = 0; n < cfg->mapped_filters->nelts; n++) {\n        ap_lua_filter_handler_spec *hook_spec =\n            ((ap_lua_filter_handler_spec **) cfg->mapped_filters->elts)[n];\n\n        if (hook_spec == NULL) {\n            continue;\n        }\n        if (!strcasecmp(hook_spec->filter_name, f->frec->name)) {\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                    hook_spec->file_name,\n                                    NULL,\n                                    0,\n                                    hook_spec->function_name,\n                                    \"filter\");\n            L = ap_lua_get_lua_state(pool, spec, r);\n            if (L) {\n                L = lua_newthread(L);\n            }\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02328)\n                                \"lua: Failed to obtain lua interpreter for %s %s\",\n                                hook_spec->function_name, hook_spec->file_name);\n                ap_lua_release_state(L, spec, r);\n                return APR_EGENERAL;\n            }\n            if (hook_spec->function_name != NULL) {\n                lua_getglobal(L, hook_spec->function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02329)\n                                \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                    hook_spec->function_name,\n                                    hook_spec->file_name);\n                    ap_lua_release_state(L, spec, r);\n                    return APR_EGENERAL;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n            ctx->L = L;\n            ctx->spec = spec;\n            \n            /* If a Lua filter is interested in filtering a request, it must first do a yield, \n             * otherwise we'll assume that it's not interested and pretend we didn't find it.\n             */\n            rc = lua_resume(L, 1);\n            if (rc == LUA_YIELD) {\n                if (f->frec->providers == NULL) { \n                    /* Not wired by mod_filter */\n                    apr_table_unset(r->headers_out, \"Content-Length\");\n                    apr_table_unset(r->headers_out, \"Content-MD5\");\n                    apr_table_unset(r->headers_out, \"ETAG\");\n                }\n                return OK;\n            }\n            else {\n                ap_lua_release_state(L, spec, r);\n                return APR_ENOENT;\n            }\n        }\n    }\n    return APR_ENOENT;\n}\n\nstatic apr_status_t lua_output_filter_handle(ap_filter_t *f, apr_bucket_brigade *pbbIn) {\n    request_rec *r = f->r;\n    int rc;\n    lua_State *L;\n    lua_filter_ctx* ctx;\n    conn_rec *c = r->connection;\n    apr_bucket *pbktIn;\n    apr_status_t rv;\n    \n    /* Set up the initial filter context and acquire the function.\n     * The corresponding Lua function should yield here.\n     */\n    if (!f->ctx) {\n        rc = lua_setup_filter_ctx(f,r,&ctx);\n        if (rc == APR_EGENERAL) {\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        if (rc == APR_ENOENT) {\n            /* No filter entry found (or the script declined to filter), just pass on the buckets */\n            ap_remove_output_filter(f);\n            return ap_pass_brigade(f->next,pbbIn);\n        }\n        else { \n            /* We've got a willing lua filter, setup and check for a prefix */\n            size_t olen;\n            apr_bucket *pbktOut;\n            const char* output = lua_tolstring(ctx->L, 1, &olen);\n\n            f->ctx = ctx;\n            ctx->tmpBucket = apr_brigade_create(r->pool, c->bucket_alloc);\n\n            if (olen > 0) { \n                pbktOut = apr_bucket_heap_create(output, olen, NULL, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n                apr_brigade_cleanup(ctx->tmpBucket);\n                if (rv != APR_SUCCESS) {\n                    return rv;\n                }\n            }\n        }\n    }\n    ctx = (lua_filter_ctx*) f->ctx;\n    L = ctx->L;\n    /* While the Lua function is still yielding, pass in buckets to the coroutine */\n    if (!ctx->broken) {\n        for (pbktIn = APR_BRIGADE_FIRST(pbbIn);\n            pbktIn != APR_BRIGADE_SENTINEL(pbbIn);\n            pbktIn = APR_BUCKET_NEXT(pbktIn))\n            {\n            const char *data;\n            apr_size_t len;\n            apr_bucket *pbktOut;\n\n            /* read the bucket */\n            apr_bucket_read(pbktIn,&data,&len,APR_BLOCK_READ);\n\n            /* Push the bucket onto the Lua stack as a global var */\n            lua_pushlstring(L, data, len);\n            lua_setglobal(L, \"bucket\");\n            \n            /* If Lua yielded, it means we have something to pass on */\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                if (olen > 0) { \n                    pbktOut = apr_bucket_heap_create(output, olen, NULL,\n                                            c->bucket_alloc);\n                    APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                    rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n                    apr_brigade_cleanup(ctx->tmpBucket);\n                    if (rv != APR_SUCCESS) {\n                        return rv;\n                    }\n                }\n            }\n            else {\n                ctx->broken = 1;\n                ap_lua_release_state(L, ctx->spec, r);\n                ap_remove_output_filter(f);\n                apr_brigade_cleanup(pbbIn);\n                apr_brigade_cleanup(ctx->tmpBucket);\n                ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02663)\n                              \"lua: Error while executing filter: %s\",\n                              lua_tostring(L, -1));\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n        }\n        /* If we've safely reached the end, do a final call to Lua to allow for any \n        finishing moves by the script, such as appending a tail. */\n        if (APR_BUCKET_IS_EOS(APR_BRIGADE_LAST(pbbIn))) {\n            apr_bucket *pbktEOS;\n            lua_pushnil(L);\n            lua_setglobal(L, \"bucket\");\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                apr_bucket *pbktOut;\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                if (olen > 0) { \n                    pbktOut = apr_bucket_heap_create(output, olen, NULL,\n                            c->bucket_alloc);\n                    APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                }\n            }\n            pbktEOS = apr_bucket_eos_create(c->bucket_alloc);\n            APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktEOS);\n            ap_lua_release_state(L, ctx->spec, r);\n            rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n            apr_brigade_cleanup(ctx->tmpBucket);\n            if (rv != APR_SUCCESS) {\n                return rv;\n            }\n        }\n    }\n    /* Clean up */\n    apr_brigade_cleanup(pbbIn);\n    return APR_SUCCESS;    \n}\n\n\n\nstatic apr_status_t lua_input_filter_handle(ap_filter_t *f,\n                                       apr_bucket_brigade *pbbOut,\n                                       ap_input_mode_t eMode,\n                                       apr_read_type_e eBlock,\n                                       apr_off_t nBytes) \n{\n    request_rec *r = f->r;\n    int rc, lastCall = 0;\n    lua_State *L;\n    lua_filter_ctx* ctx;\n    conn_rec *c = r->connection;\n    apr_status_t ret;\n    \n    /* Set up the initial filter context and acquire the function.\n     * The corresponding Lua function should yield here.\n     */\n    if (!f->ctx) {\n        rc = lua_setup_filter_ctx(f,r,&ctx);\n        f->ctx = ctx;\n        if (rc == APR_EGENERAL) {\n            ctx->broken = 1;\n            ap_remove_input_filter(f); \n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        if (rc == APR_ENOENT ) {\n            ap_remove_input_filter(f);\n            ctx->broken = 1;\n        }\n        if (rc == APR_SUCCESS) {\n            ctx->tmpBucket = apr_brigade_create(r->pool, c->bucket_alloc);\n        }\n    }\n    ctx = (lua_filter_ctx*) f->ctx;\n    L = ctx->L;\n    /* If the Lua script broke or denied serving the request, just pass the buckets through */\n    if (ctx->broken) {\n        return ap_get_brigade(f->next, pbbOut, eMode, eBlock, nBytes);\n    }\n    \n    if (APR_BRIGADE_EMPTY(ctx->tmpBucket)) {\n        ret = ap_get_brigade(f->next, ctx->tmpBucket, eMode, eBlock, nBytes);\n        if (eMode == AP_MODE_EATCRLF || ret != APR_SUCCESS)\n            return ret;\n    }\n    \n    /* While the Lua function is still yielding, pass buckets to the coroutine */\n    if (!ctx->broken) {\n        lastCall = 0;\n        while(!APR_BRIGADE_EMPTY(ctx->tmpBucket)) {\n            apr_bucket *pbktIn = APR_BRIGADE_FIRST(ctx->tmpBucket);\n            apr_bucket *pbktOut;\n            const char *data;\n            apr_size_t len;\n            \n            if (APR_BUCKET_IS_EOS(pbktIn)) {\n                APR_BUCKET_REMOVE(pbktIn);\n                break;\n            }\n\n            /* read the bucket */\n            ret = apr_bucket_read(pbktIn, &data, &len, eBlock);\n            if (ret != APR_SUCCESS)\n                return ret;\n\n            /* Push the bucket onto the Lua stack as a global var */\n            lastCall++;\n            lua_pushlstring(L, data, len);\n            lua_setglobal(L, \"bucket\");\n            \n            /* If Lua yielded, it means we have something to pass on */\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                pbktOut = apr_bucket_heap_create(output, olen, 0, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(pbbOut, pbktOut);\n                apr_bucket_delete(pbktIn);\n                return APR_SUCCESS;\n            }\n            else {\n                ctx->broken = 1;\n                ap_lua_release_state(L, ctx->spec, r);\n                ap_remove_input_filter(f); \n                apr_bucket_delete(pbktIn);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n        }\n        /* If we've safely reached the end, do a final call to Lua to allow for any \n        finishing moves by the script, such as appending a tail. */\n        if (lastCall == 0) {\n            apr_bucket *pbktEOS = apr_bucket_eos_create(c->bucket_alloc);\n            lua_pushnil(L);\n            lua_setglobal(L, \"bucket\");\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                apr_bucket *pbktOut;\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                pbktOut = apr_bucket_heap_create(output, olen, 0, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(pbbOut, pbktOut);\n            }\n            APR_BRIGADE_INSERT_TAIL(pbbOut,pbktEOS);\n            ap_lua_release_state(L, ctx->spec, r);\n        }\n    }\n    return APR_SUCCESS;\n}\n\n\n/* ---------------- Configury stuff --------------- */\n\n/** harnesses for magic hooks **/\n\nstatic int lua_request_rec_hook_harness(request_rec *r, const char *name, int apr_hook_when)\n{\n    int rc;\n    apr_pool_t *pool;\n    lua_State *L;\n    ap_lua_vm_spec *spec;\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    const char *key = apr_psprintf(r->pool, \"%s_%d\", name, apr_hook_when);\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n    if (hook_specs) {\n        int i;\n        for (i = 0; i < hook_specs->nelts; i++) {\n            ap_lua_mapped_handler_spec *hook_spec =\n                ((ap_lua_mapped_handler_spec **) hook_specs->elts)[i];\n\n            if (hook_spec == NULL) {\n                continue;\n            }\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                  hook_spec->file_name,\n                                  hook_spec->bytecode,\n                                  hook_spec->bytecode_len,\n                                  hook_spec->function_name,\n                                  \"request hook\");\n\n            L = ap_lua_get_lua_state(pool, spec, r);\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01477)\n                    \"lua: Failed to obtain lua interpreter for entry function '%s' in %s\",\n                              hook_spec->function_name, hook_spec->file_name);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n\n            if (hook_spec->function_name != NULL) {\n                lua_getglobal(L, hook_spec->function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01478)\n                               \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                  hook_spec->function_name,\n                                  hook_spec->file_name);\n                    ap_lua_release_state(L, spec, r);\n                    return HTTP_INTERNAL_SERVER_ERROR;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n\n            if (lua_pcall(L, 1, 1, 0)) {\n                report_lua_error(L, r);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            rc = DECLINED;\n            if (lua_isnumber(L, -1)) {\n                rc = lua_tointeger(L, -1);\n                ap_log_rerror(APLOG_MARK, APLOG_TRACE4, 0, r, \"Lua hook %s:%s for phase %s returned %d\", \n                              hook_spec->file_name, hook_spec->function_name, name, rc);\n            }\n            else { \n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, \"Lua hook %s:%s for phase %s did not return a numeric value\", \n                              hook_spec->file_name, hook_spec->function_name, name);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            if (rc != DECLINED) {\n                ap_lua_release_state(L, spec, r);\n                return rc;\n            }\n            ap_lua_release_state(L, spec, r);\n        }\n    }\n    return DECLINED;\n}\n\n\n/* Fix for making sure that LuaMapHandler works when FallbackResource is set */\nstatic int lua_map_handler_fixups(request_rec *r)\n{\n    /* If there is no handler set yet, this might be a LuaMapHandler request */\n    if (r->handler == NULL) {\n        int n = 0;\n        ap_regmatch_t match[10];\n        const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n        for (n = 0; n < cfg->mapped_handlers->nelts; n++) {\n            ap_lua_mapped_handler_spec *hook_spec =\n            ((ap_lua_mapped_handler_spec **) cfg->mapped_handlers->elts)[n];\n\n            if (hook_spec == NULL) {\n                continue;\n            }\n            if (!ap_regexec(hook_spec->uri_pattern, r->uri, 10, match, 0)) {\n                r->handler = apr_pstrdup(r->pool, \"lua-map-handler\");\n                return OK;\n            }\n        }\n    }\n    return DECLINED;\n}\n\n\nstatic int lua_map_handler(request_rec *r)\n{\n    int rc, n = 0;\n    apr_pool_t *pool;\n    lua_State *L;\n    const char *filename, *function_name;\n    const char *values[10];\n    ap_lua_vm_spec *spec;\n    ap_regmatch_t match[10];\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    for (n = 0; n < cfg->mapped_handlers->nelts; n++) {\n        ap_lua_mapped_handler_spec *hook_spec =\n            ((ap_lua_mapped_handler_spec **) cfg->mapped_handlers->elts)[n];\n\n        if (hook_spec == NULL) {\n            continue;\n        }\n        if (!ap_regexec(hook_spec->uri_pattern, r->uri, 10, match, 0)) {\n            int i;\n            for (i=0 ; i < 10; i++) {\n                if (match[i].rm_eo >= 0) {\n                    values[i] = apr_pstrndup(r->pool, r->uri+match[i].rm_so, match[i].rm_eo - match[i].rm_so);\n                }\n                else values[i] = \"\";\n            }\n            filename = ap_lua_interpolate_string(r->pool, hook_spec->file_name, values);\n            function_name = ap_lua_interpolate_string(r->pool, hook_spec->function_name, values);\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                    filename,\n                                    hook_spec->bytecode,\n                                    hook_spec->bytecode_len,\n                                    function_name,\n                                    \"mapped handler\");\n            L = ap_lua_get_lua_state(pool, spec, r);\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02330)\n                                \"lua: Failed to obtain Lua interpreter for entry function '%s' in %s\",\n                                function_name, filename);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n\n            if (function_name != NULL) {\n                lua_getglobal(L, function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02331)\n                                    \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                    function_name,\n                                    filename);\n                    ap_lua_release_state(L, spec, r);\n                    return HTTP_INTERNAL_SERVER_ERROR;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n\n            if (lua_pcall(L, 1, 1, 0)) {\n                report_lua_error(L, r);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            rc = DECLINED;\n            if (lua_isnumber(L, -1)) {\n                rc = lua_tointeger(L, -1);\n            }\n            else { \n                ap_log_rerror(APLOG_MARK, APLOG_WARNING, 0, r, APLOGNO(02483)\n                              \"lua: Lua handler %s in %s did not return a value, assuming apache2.OK\",\n                              function_name,\n                              filename);\n                rc = OK;\n            }\n            ap_lua_release_state(L, spec, r);\n            if (rc != DECLINED) {\n                return rc;\n            }\n        }\n    }\n    return DECLINED;\n}\n\n\nstatic apr_size_t config_getstr(ap_configfile_t *cfg, char *buf,\n                                size_t bufsiz)\n{\n    apr_size_t i = 0;\n\n    if (cfg->getstr) {\n        apr_status_t rc = (cfg->getstr) (buf, bufsiz, cfg->param);\n        if (rc == APR_SUCCESS) {\n            i = strlen(buf);\n            if (i && buf[i - 1] == '\\n')\n                ++cfg->line_number;\n        }\n        else {\n            buf[0] = '\\0';\n            i = 0;\n        }\n    }\n    else {\n        while (i < bufsiz) {\n            char ch;\n            apr_status_t rc = (cfg->getch) (&ch, cfg->param);\n            if (rc != APR_SUCCESS)\n                break;\n            buf[i++] = ch;\n            if (ch == '\\n') {\n                ++cfg->line_number;\n                break;\n            }\n        }\n    }\n    return i;\n}\n\ntypedef struct cr_ctx\n{\n    cmd_parms *cmd;\n    ap_configfile_t *cfp;\n    size_t startline;\n    const char *endstr;\n    char buf[HUGE_STRING_LEN];\n} cr_ctx;\n\n\n/* Okay, this deserves a little explaination -- in order for the errors that lua\n * generates to be 'accuarate', including line numbers, we basically inject\n * N line number new lines into the 'top' of the chunk reader.....\n *\n * be happy. this is cool.\n *\n */\nstatic const char *lf =\n    \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n#define N_LF 32\n\nstatic const char *direct_chunkreader(lua_State *lvm, void *udata,\n                                      size_t *plen)\n{\n    const char *p;\n    struct cr_ctx *ctx = udata;\n\n    if (ctx->startline) {\n        *plen = ctx->startline > N_LF ? N_LF : ctx->startline;\n        ctx->startline -= *plen;\n        return lf;\n    }\n    *plen = config_getstr(ctx->cfp, ctx->buf, HUGE_STRING_LEN);\n\n    for (p = ctx->buf; isspace(*p); ++p);\n    if (p[0] == '<' && p[1] == '/') {\n        apr_size_t i = 0;\n        while (i < strlen(ctx->endstr)) {\n            if (tolower(p[i + 2]) != ctx->endstr[i])\n                return ctx->buf;\n            ++i;\n        }\n        *plen = 0;\n        return NULL;\n    }\n    /*fprintf(stderr, \"buf read: %s\\n\", ctx->buf); */\n    return ctx->buf;\n}\n\nstatic int ldump_writer(lua_State *L, const void *b, size_t size, void *B)\n{\n    (void) L;\n    luaL_addlstring((luaL_Buffer *) B, (const char *) b, size);\n    return 0;\n}\n\ntypedef struct hack_section_baton\n{\n    const char *name;\n    ap_lua_mapped_handler_spec *spec;\n    int apr_hook_when;\n} hack_section_baton;\n\n/* You can be unhappy now.\n *\n * This is uncool.\n *\n * When you create a <Section handler in httpd, the only 'easy' way to create\n * a directory context is to parse the section, and convert it into a 'normal'\n * Configureation option, and then collapse the entire section, in memory,\n * back into the parent section -- from which you can then get the new directive\n * invoked.... anyways. evil. Rici taught me how to do this hack :-)\n */\nstatic const char *hack_section_handler(cmd_parms *cmd, void *_cfg,\n                                        const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    ap_directive_t *directive = cmd->directive;\n    hack_section_baton *baton = directive->data;\n    const char *key = apr_psprintf(cmd->pool, \"%s_%d\", baton->name, baton->apr_hook_when);\n\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n    if (!hook_specs) {\n        hook_specs = apr_array_make(cmd->pool, 2,\n                                    sizeof(ap_lua_mapped_handler_spec *));\n        apr_hash_set(cfg->hooks, key,\n                     APR_HASH_KEY_STRING, hook_specs);\n    }\n\n    baton->spec->scope = cfg->vm_scope;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(hook_specs) = baton->spec;\n\n    return NULL;\n}\n\nstatic const char *register_named_block_function_hook(const char *name,\n                                                      cmd_parms *cmd,\n                                                      void *mconfig,\n                                                      const char *line)\n{\n    const char *function = NULL;\n    ap_lua_mapped_handler_spec *spec;\n    int when = APR_HOOK_MIDDLE;\n    const char *endp = ap_strrchr_c(line, '>');\n\n    if (endp == NULL) {\n        return apr_pstrcat(cmd->pool, cmd->cmd->name,\n                           \"> directive missing closing '>'\", NULL);\n    }\n\n    line = apr_pstrndup(cmd->temp_pool, line, endp - line);\n\n    if (line[0]) { \n        const char *word;\n        word = ap_getword_conf(cmd->temp_pool, &line);\n        if (*word) {\n            function = apr_pstrdup(cmd->pool, word);\n        }\n        word = ap_getword_conf(cmd->temp_pool, &line);\n        if (*word) {\n            if (!strcasecmp(\"early\", word)) { \n                when = AP_LUA_HOOK_FIRST;\n            }\n            else if (!strcasecmp(\"late\", word)) {\n                when = AP_LUA_HOOK_LAST;\n            }\n            else { \n                return apr_pstrcat(cmd->pool, cmd->cmd->name,\n                                   \"> 2nd argument must be 'early' or 'late'\", NULL);\n            }\n        }\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n\n    {\n        cr_ctx ctx;\n        lua_State *lvm;\n        char *tmp;\n        int rv;\n        ap_directive_t **current;\n        hack_section_baton *baton;\n\n        spec->file_name = apr_psprintf(cmd->pool, \"%s:%u\",\n                                       cmd->config_file->name,\n                                       cmd->config_file->line_number);\n        if (function) {\n            spec->function_name = (char *) function;\n        }\n        else {\n            function = NULL;\n        }\n\n        ctx.cmd = cmd;\n        tmp = apr_pstrdup(cmd->pool, cmd->err_directive->directive + 1);\n        ap_str_tolower(tmp);\n        ctx.endstr = tmp;\n        ctx.cfp = cmd->config_file;\n        ctx.startline = cmd->config_file->line_number;\n\n        /* This lua State is used only to compile the input strings -> bytecode, so we don't need anything extra. */\n        lvm = luaL_newstate();\n\n        lua_settop(lvm, 0);\n\n        rv = lua_load(lvm, direct_chunkreader, &ctx, spec->file_name);\n\n        if (rv != 0) {\n            const char *errstr = apr_pstrcat(cmd->pool, \"Lua Error:\",\n                                             lua_tostring(lvm, -1), NULL);\n            lua_close(lvm);\n            return errstr;\n        }\n        else {\n            luaL_Buffer b;\n            luaL_buffinit(lvm, &b);\n            lua_dump(lvm, ldump_writer, &b);\n            luaL_pushresult(&b);\n            spec->bytecode_len = lua_strlen(lvm, -1);\n            spec->bytecode = apr_pstrmemdup(cmd->pool, lua_tostring(lvm, -1),\n                                            spec->bytecode_len);\n            lua_close(lvm);\n        }\n\n        current = mconfig;\n\n        /* Here, we have to replace our current config node for the next pass */\n        if (!*current) {\n            *current = apr_pcalloc(cmd->pool, sizeof(**current));\n        }\n\n        baton = apr_pcalloc(cmd->pool, sizeof(hack_section_baton));\n        baton->name = name;\n        baton->spec = spec;\n        baton->apr_hook_when = when;\n\n        (*current)->filename = cmd->config_file->name;\n        (*current)->line_num = cmd->config_file->line_number;\n        (*current)->directive = apr_pstrdup(cmd->pool, \"Lua_____ByteCodeHack\");\n        (*current)->args = NULL;\n        (*current)->data = baton;\n    }\n\n    return NULL;\n}\n\nstatic const char *register_named_file_function_hook(const char *name,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function,\n                                                     int apr_hook_when)\n{\n    ap_lua_mapped_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    const char *key = apr_psprintf(cmd->pool, \"%s_%d\", name, apr_hook_when);\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n\n    if (!hook_specs) {\n        hook_specs = apr_array_make(cmd->pool, 2,\n                                    sizeof(ap_lua_mapped_handler_spec *));\n        apr_hash_set(cfg->hooks, key, APR_HASH_KEY_STRING, hook_specs);\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->scope = cfg->vm_scope;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(hook_specs) = spec;\n    return NULL;\n}\nstatic const char *register_mapped_file_function_hook(const char *pattern,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function)\n{\n    ap_lua_mapped_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    ap_regex_t *regex = apr_pcalloc(cmd->pool, sizeof(ap_regex_t));\n    if (ap_regcomp(regex, pattern,0)) {\n        return \"Invalid regex pattern!\";\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->scope = cfg->vm_scope;\n    spec->uri_pattern = regex;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(cfg->mapped_handlers) = spec;\n    return NULL;\n}\nstatic const char *register_filter_function_hook(const char *filter,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function,\n                                                     int direction)\n{\n    ap_lua_filter_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n   \n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_filter_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->filter_name = filter;\n\n    *(ap_lua_filter_handler_spec **) apr_array_push(cfg->mapped_filters) = spec;\n    /* TODO: Make it work on other types than just AP_FTYPE_RESOURCE? */\n    if (direction == AP_LUA_FILTER_OUTPUT) {\n        spec->direction = AP_LUA_FILTER_OUTPUT;\n        ap_register_output_filter_protocol(filter, lua_output_filter_handle, NULL, AP_FTYPE_RESOURCE,\n                                            AP_FILTER_PROTO_CHANGE|AP_FILTER_PROTO_CHANGE_LENGTH);\n    }\n    else {\n        spec->direction = AP_LUA_FILTER_INPUT;\n        ap_register_input_filter(filter, lua_input_filter_handle, NULL, AP_FTYPE_RESOURCE);\n    }\n    return NULL;\n}\n/* disabled (see reference below)\nstatic int lua_check_user_id_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", AP_LUA_HOOK_FIRST);\n}\n*/\nstatic int lua_check_user_id_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", APR_HOOK_MIDDLE);\n}\n/* disabled (see reference below)\nstatic int lua_check_user_id_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", AP_LUA_HOOK_LAST);\n}\n*/\n\nstatic int lua_translate_name_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_translate_name_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", APR_HOOK_MIDDLE);\n}\nstatic int lua_translate_name_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", AP_LUA_HOOK_LAST);\n}\n\nstatic int lua_fixup_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"fixups\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_map_to_storage_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"map_to_storage\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_type_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"type_checker\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_access_checker_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_access_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", APR_HOOK_MIDDLE);\n}\nstatic int lua_access_checker_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", AP_LUA_HOOK_LAST);\n}\n\nstatic int lua_auth_checker_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_auth_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", APR_HOOK_MIDDLE);\n}\nstatic int lua_auth_checker_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", AP_LUA_HOOK_LAST);\n}\nstatic void lua_insert_filter_harness(request_rec *r)\n{\n    /* ap_log_rerror(APLOG_MARK, APLOG_WARNING, 0, r, \"LuaHookInsertFilter not yet implemented\"); */\n}\n\nstatic int lua_log_transaction_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"log_transaction\", APR_HOOK_FIRST);\n}\n\nstatic int lua_quick_harness(request_rec *r, int lookup)\n{\n    if (lookup) {\n        return DECLINED;\n    }\n    return lua_request_rec_hook_harness(r, \"quick\", APR_HOOK_MIDDLE);\n}\n\nstatic const char *register_translate_name_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function,\n                                                const char *when)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                           NOT_IN_HTACCESS);\n    int apr_hook_when = APR_HOOK_MIDDLE;\n    if (err) {\n        return err;\n    }\n    \n    if (when) { \n        if (!strcasecmp(when, \"early\")) { \n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        } \n        else if (!strcasecmp(when, \"late\")) { \n            apr_hook_when = AP_LUA_HOOK_LAST;\n        } \n        else { \n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"translate_name\", cmd, _cfg,\n                                             file, function, apr_hook_when);\n}\n\nstatic const char *register_translate_name_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n    return register_named_block_function_hook(\"translate_name\", cmd, _cfg,\n                                              line);\n}\n\n\nstatic const char *register_fixups_hook(cmd_parms *cmd, void *_cfg,\n                                        const char *file,\n                                        const char *function)\n{\n    return register_named_file_function_hook(\"fixups\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_fixups_block(cmd_parms *cmd, void *_cfg,\n                                         const char *line)\n{\n    return register_named_block_function_hook(\"fixups\", cmd, _cfg, line);\n}\n\nstatic const char *register_map_to_storage_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function)\n{\n    return register_named_file_function_hook(\"map_to_storage\", cmd, _cfg,\n                                             file, function, APR_HOOK_MIDDLE);\n}\n\nstatic const char *register_log_transaction_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function)\n{\n    return register_named_file_function_hook(\"log_transaction\", cmd, _cfg,\n                                             file, function, APR_HOOK_FIRST);\n}\n\nstatic const char *register_map_to_storage_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n    return register_named_block_function_hook(\"map_to_storage\", cmd, _cfg,\n                                              line);\n}\n\n\nstatic const char *register_check_user_id_hook(cmd_parms *cmd, void *_cfg,\n                                               const char *file,\n                                               const char *function,\n                                               const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n/* XXX: This does not currently work!!\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n*/\n    return register_named_file_function_hook(\"check_user_id\", cmd, _cfg, file,\n                                             function, apr_hook_when);\n}\nstatic const char *register_check_user_id_block(cmd_parms *cmd, void *_cfg,\n                                                const char *line)\n{\n    return register_named_block_function_hook(\"check_user_id\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_type_checker_hook(cmd_parms *cmd, void *_cfg,\n                                              const char *file,\n                                              const char *function)\n{\n    return register_named_file_function_hook(\"type_checker\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_type_checker_block(cmd_parms *cmd, void *_cfg,\n                                               const char *line)\n{\n    return register_named_block_function_hook(\"type_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_access_checker_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function,\n                                                const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"access_checker\", cmd, _cfg,\n                                             file, function, apr_hook_when);\n}\nstatic const char *register_access_checker_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n\n    return register_named_block_function_hook(\"access_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_auth_checker_hook(cmd_parms *cmd, void *_cfg,\n                                              const char *file,\n                                              const char *function,\n                                              const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"auth_checker\", cmd, _cfg, file,\n                                             function, apr_hook_when);\n}\nstatic const char *register_auth_checker_block(cmd_parms *cmd, void *_cfg,\n                                               const char *line)\n{\n    return register_named_block_function_hook(\"auth_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_insert_filter_hook(cmd_parms *cmd, void *_cfg,\n                                               const char *file,\n                                               const char *function)\n{\n    return \"LuaHookInsertFilter not yet implemented\";\n}\n\nstatic const char *register_quick_hook(cmd_parms *cmd, void *_cfg,\n                                       const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    return register_named_file_function_hook(\"quick\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_map_handler(cmd_parms *cmd, void *_cfg,\n                                       const char* match, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_mapped_file_function_hook(match, cmd, _cfg, file,\n                                             function);\n}\nstatic const char *register_output_filter(cmd_parms *cmd, void *_cfg,\n                                       const char* filter, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_filter_function_hook(filter, cmd, _cfg, file,\n                                             function, AP_LUA_FILTER_OUTPUT);\n}\nstatic const char *register_input_filter(cmd_parms *cmd, void *_cfg,\n                                       const char* filter, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_filter_function_hook(filter, cmd, _cfg, file,\n                                             function, AP_LUA_FILTER_INPUT);\n}\nstatic const char *register_quick_block(cmd_parms *cmd, void *_cfg,\n                                        const char *line)\n{\n    return register_named_block_function_hook(\"quick\", cmd, _cfg,\n                                              line);\n}\n\n\n\nstatic const char *register_package_helper(cmd_parms *cmd, \n                                           const char *arg,\n                                           apr_array_header_t *dir_array)\n{\n    apr_status_t rv;\n\n    ap_lua_server_cfg *server_cfg =\n        ap_get_module_config(cmd->server->module_config, &lua_module);\n\n    char *fixed_filename;\n    rv = apr_filepath_merge(&fixed_filename, \n                            server_cfg->root_path, \n                            arg,\n                            APR_FILEPATH_NOTRELATIVE, \n                            cmd->pool);\n\n    if (rv != APR_SUCCESS) {\n        return apr_psprintf(cmd->pool,\n                            \"Unable to build full path to file, %s\", arg);\n    }\n\n    *(const char **) apr_array_push(dir_array) = fixed_filename;\n    return NULL;\n}\n\n\n/**\n * Called for config directive which looks like\n * LuaPackagePath /lua/package/path/mapped/thing/like/this/?.lua\n */\nstatic const char *register_package_dir(cmd_parms *cmd, void *_cfg,\n                                        const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n\n    return register_package_helper(cmd, arg, cfg->package_paths);\n}\n\n/**\n * Called for config directive which looks like\n * LuaPackageCPath /lua/package/path/mapped/thing/like/this/?.so\n */\nstatic const char *register_package_cdir(cmd_parms *cmd, \n                                         void *_cfg,\n                                         const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n\n    return register_package_helper(cmd, arg, cfg->package_cpaths);\n}\n\nstatic const char *register_lua_inherit(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    \n    if (strcasecmp(\"none\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_NONE;\n    }\n    else if (strcasecmp(\"parent-first\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_PARENT_FIRST;\n    }\n    else if (strcasecmp(\"parent-last\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_PARENT_LAST;\n    }\n    else { \n        return apr_psprintf(cmd->pool,\n                            \"LuaInherit type of '%s' not recognized, valid \"\n                            \"options are 'none', 'parent-first', and 'parent-last'\", \n                            arg);\n    }\n    return NULL;\n}\nstatic const char *register_lua_codecache(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    \n    if (strcasecmp(\"never\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_NEVER;\n    }\n    else if (strcasecmp(\"stat\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_STAT;\n    }\n    else if (strcasecmp(\"forever\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_FOREVER;\n    }\n    else { \n        return apr_psprintf(cmd->pool,\n                            \"LuaCodeCache type of '%s' not recognized, valid \"\n                            \"options are 'never', 'stat', and 'forever'\", \n                            arg);\n    }\n    return NULL;\n}\nstatic const char *register_lua_scope(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *scope, \n                                      const char *min,\n                                      const char *max)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    if (strcmp(\"once\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_ONCE;\n    }\n    else if (strcmp(\"request\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_REQUEST;\n    }\n    else if (strcmp(\"conn\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_CONN;\n    }\n    else if (strcmp(\"thread\", scope) == 0) {\n#if !APR_HAS_THREADS\n        return apr_psprintf(cmd->pool,\n                            \"Scope type of '%s' cannot be used because this \"\n                            \"server does not have threading support \"\n                            \"(APR_HAS_THREADS)\" \n                            scope);\n#endif\n        cfg->vm_scope = AP_LUA_SCOPE_THREAD;\n    }\n    else if (strcmp(\"server\", scope) == 0) {\n        unsigned int vmin, vmax;\n#if !APR_HAS_THREADS\n        return apr_psprintf(cmd->pool,\n                            \"Scope type of '%s' cannot be used because this \"\n                            \"server does not have threading support \"\n                            \"(APR_HAS_THREADS)\" \n                            scope);\n#endif\n        cfg->vm_scope = AP_LUA_SCOPE_SERVER;\n        vmin = min ? atoi(min) : 1;\n        vmax = max ? atoi(max) : 1;\n        if (vmin == 0) {\n            vmin = 1;\n        }\n        if (vmax < vmin) {\n            vmax = vmin;\n        }\n        cfg->vm_min = vmin;\n        cfg->vm_max = vmax;\n    }\n    else {\n        return apr_psprintf(cmd->pool,\n                            \"Invalid value for LuaScope, '%s', acceptable \"\n                            \"values are: 'once', 'request', 'conn'\"\n#if APR_HAS_THREADS\n                            \", 'thread', 'server'\"\n#endif\n                            ,scope);\n    }\n\n    return NULL;\n}\n\n\n\nstatic const char *register_lua_root(cmd_parms *cmd, void *_cfg,\n                                     const char *root)\n{\n    /* ap_lua_dir_cfg* cfg = (ap_lua_dir_cfg*)_cfg; */\n    ap_lua_server_cfg *cfg = ap_get_module_config(cmd->server->module_config,\n                                                  &lua_module);\n\n    cfg->root_path = root;\n    return NULL;\n}\n\nconst char *ap_lua_ssl_val(apr_pool_t *p, server_rec *s, conn_rec *c,\n                           request_rec *r, const char *var)\n{\n    if (lua_ssl_val) { \n        return (const char *)lua_ssl_val(p, s, c, r, (char *)var);\n    }\n    return NULL;\n}\n\nint ap_lua_ssl_is_https(conn_rec *c)\n{\n    return lua_ssl_is_https ? lua_ssl_is_https(c) : 0;\n}\n\n/*******************************/\n\nstatic const char *lua_authz_parse(cmd_parms *cmd, const char *require_line,\n                                   const void **parsed_require_line)\n{\n    const char *provider_name;\n    lua_authz_provider_spec *spec;\n\n    apr_pool_userdata_get((void**)&provider_name, AUTHZ_PROVIDER_NAME_NOTE,\n                          cmd->temp_pool);\n    ap_assert(provider_name != NULL);\n\n    spec = apr_hash_get(lua_authz_providers, provider_name, APR_HASH_KEY_STRING);\n    ap_assert(spec != NULL);\n\n    if (require_line && *require_line) {\n        const char *arg;\n        spec->args = apr_array_make(cmd->pool, 2, sizeof(const char *));\n        while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg) {\n            APR_ARRAY_PUSH(spec->args, const char *) = arg;\n        }\n    }\n\n    *parsed_require_line = spec;\n    return NULL;\n}\n\nstatic authz_status lua_authz_check(request_rec *r, const char *require_line,\n                                    const void *parsed_require_line)\n{\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec;\n    lua_State *L;\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    const lua_authz_provider_spec *prov_spec = parsed_require_line;\n    int result;\n    int nargs = 0;\n\n    spec = create_vm_spec(&pool, r, cfg, server_cfg, prov_spec->file_name,\n                          NULL, 0, prov_spec->function_name, \"authz provider\");\n\n    L = ap_lua_get_lua_state(pool, spec, r);\n    if (L == NULL) {\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02314)\n                      \"Unable to compile VM for authz provider %s\", prov_spec->name);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    lua_getglobal(L, prov_spec->function_name);\n    if (!lua_isfunction(L, -1)) {\n        ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02319)\n                      \"Unable to find entry function '%s' in %s (not a valid function)\",\n                      prov_spec->function_name, prov_spec->file_name);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    ap_lua_run_lua_request(L, r);\n    if (prov_spec->args) {\n        int i;\n        if (!lua_checkstack(L, prov_spec->args->nelts)) {\n            ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02315)\n                          \"Error: authz provider %s: too many arguments\", prov_spec->name);\n            ap_lua_release_state(L, spec, r);\n            return AUTHZ_GENERAL_ERROR;\n        }\n        for (i = 0; i < prov_spec->args->nelts; i++) {\n            const char *arg = APR_ARRAY_IDX(prov_spec->args, i, const char *);\n            lua_pushstring(L, arg);\n        }\n        nargs = prov_spec->args->nelts;\n    }\n    if (lua_pcall(L, 1 + nargs, 1, 0)) {\n        const char *err = lua_tostring(L, -1);\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02316)\n                      \"Error executing authz provider %s: %s\", prov_spec->name, err);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    if (!lua_isnumber(L, -1)) {\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02317)\n                      \"Error: authz provider %s did not return integer\", prov_spec->name);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    result = lua_tointeger(L, -1);\n    ap_lua_release_state(L, spec, r);\n    switch (result) {\n        case AUTHZ_DENIED:\n        case AUTHZ_GRANTED:\n        case AUTHZ_NEUTRAL:\n        case AUTHZ_GENERAL_ERROR:\n        case AUTHZ_DENIED_NO_USER:\n            return result;\n        default:\n            ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02318)\n                          \"Error: authz provider %s: invalid return value %d\",\n                          prov_spec->name, result);\n    }\n    return AUTHZ_GENERAL_ERROR;\n}\n\nstatic const authz_provider lua_authz_provider =\n{\n    &lua_authz_check,\n    &lua_authz_parse,\n};\n\nstatic const char *register_authz_provider(cmd_parms *cmd, void *_cfg,\n                                           const char *name, const char *file,\n                                           const char *function)\n{\n    lua_authz_provider_spec *spec;\n    const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);\n    if (err)\n        return err;\n\n    spec = apr_pcalloc(cmd->pool, sizeof(*spec));\n    spec->name = name;\n    spec->file_name = file;\n    spec->function_name = function;\n\n    apr_hash_set(lua_authz_providers, name, APR_HASH_KEY_STRING, spec);\n    ap_register_auth_provider(cmd->pool, AUTHZ_PROVIDER_GROUP, name,\n                              AUTHZ_PROVIDER_VERSION,\n                              &lua_authz_provider,\n                              AP_AUTH_INTERNAL_PER_CONF);\n    return NULL;\n}\n\n\ncommand_rec lua_commands[] = {\n\n    AP_INIT_TAKE1(\"LuaRoot\", register_lua_root, NULL, OR_ALL,\n                  \"Specify the base path for resolving relative paths for mod_lua directives\"),\n\n    AP_INIT_TAKE1(\"LuaPackagePath\", register_package_dir, NULL, OR_ALL,\n                  \"Add a directory to lua's package.path\"),\n\n    AP_INIT_TAKE1(\"LuaPackageCPath\", register_package_cdir, NULL, OR_ALL,\n                  \"Add a directory to lua's package.cpath\"),\n\n    AP_INIT_TAKE3(\"LuaAuthzProvider\", register_authz_provider, NULL, RSRC_CONF|EXEC_ON_READ,\n                  \"Provide an authorization provider\"),\n\n    AP_INIT_TAKE23(\"LuaHookTranslateName\", register_translate_name_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the translate name phase of request processing\"),\n\n    AP_INIT_RAW_ARGS(\"<LuaHookTranslateName\", register_translate_name_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the translate name phase of request processing\"),\n\n    AP_INIT_TAKE2(\"LuaHookFixups\", register_fixups_hook, NULL, OR_ALL,\n                  \"Provide a hook for the fixups phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookFixups\", register_fixups_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a inline hook for the fixups phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookMapToStorage\", register_map_to_storage_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the map_to_storage phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookMapToStorage\", register_map_to_storage_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the map_to_storage phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookCheckUserID\", register_check_user_id_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the check_user_id phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookCheckUserID\", register_check_user_id_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the check_user_id phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookTypeChecker\", register_type_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the type_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookTypeChecker\", register_type_checker_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the type_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookAccessChecker\", register_access_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the access_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookAccessChecker\", register_access_checker_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the access_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookAuthChecker\", register_auth_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the auth_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookAuthChecker\", register_auth_checker_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the auth_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookInsertFilter\", register_insert_filter_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the insert_filter phase of request processing\"),\n    \n    AP_INIT_TAKE2(\"LuaHookLog\", register_log_transaction_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the logging phase of request processing\"),\n\n    AP_INIT_TAKE123(\"LuaScope\", register_lua_scope, NULL, OR_ALL,\n                    \"One of once, request, conn, server -- default is once\"),\n\n    AP_INIT_TAKE1(\"LuaInherit\", register_lua_inherit, NULL, OR_ALL,\n     \"Controls how Lua scripts in parent contexts are merged with the current \" \n     \" context: none|parent-last|parent-first (default: parent-first) \"),\n    \n    AP_INIT_TAKE1(\"LuaCodeCache\", register_lua_codecache, NULL, OR_ALL,\n     \"Controls the behavior of the in-memory code cache \" \n     \" context: stat|forever|never (default: stat) \"),\n\n    AP_INIT_TAKE2(\"LuaQuickHandler\", register_quick_hook, NULL, OR_ALL,\n                  \"Provide a hook for the quick handler of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaQuickHandler\", register_quick_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the quick handler of request processing\"),\n    AP_INIT_RAW_ARGS(\"Lua_____ByteCodeHack\", hack_section_handler, NULL,\n                     OR_ALL,\n                     \"(internal) Byte code handler\"),\n    AP_INIT_TAKE23(\"LuaMapHandler\", register_map_handler, NULL, OR_ALL,\n                  \"Maps a path to a lua handler\"),\n    AP_INIT_TAKE3(\"LuaOutputFilter\", register_output_filter, NULL, OR_ALL,\n                  \"Registers a Lua function as an output filter\"),\n    AP_INIT_TAKE3(\"LuaInputFilter\", register_input_filter, NULL, OR_ALL,\n                  \"Registers a Lua function as an input filter\"),\n    {NULL}\n};\n\n\nstatic void *create_dir_config(apr_pool_t *p, char *dir)\n{\n    ap_lua_dir_cfg *cfg = apr_pcalloc(p, sizeof(ap_lua_dir_cfg));\n    cfg->package_paths = apr_array_make(p, 2, sizeof(char *));\n    cfg->package_cpaths = apr_array_make(p, 2, sizeof(char *));\n    cfg->mapped_handlers =\n        apr_array_make(p, 1, sizeof(ap_lua_mapped_handler_spec *));\n    cfg->mapped_filters =\n        apr_array_make(p, 1, sizeof(ap_lua_filter_handler_spec *));\n    cfg->pool = p;\n    cfg->hooks = apr_hash_make(p);\n    cfg->dir = apr_pstrdup(p, dir);\n    cfg->vm_scope = AP_LUA_SCOPE_UNSET;\n    cfg->codecache = AP_LUA_CACHE_UNSET;\n    cfg->vm_min = 0;\n    cfg->vm_max = 0;\n\n    return cfg;\n}\n\nstatic int create_request_config(request_rec *r)\n{\n    ap_lua_request_cfg *cfg = apr_palloc(r->pool, sizeof(ap_lua_request_cfg));\n    cfg->mapped_request_details = NULL;\n    cfg->request_scoped_vms = apr_hash_make(r->pool);\n    ap_set_module_config(r->request_config, &lua_module, cfg);\n    return OK;\n}\n\nstatic void *create_server_config(apr_pool_t *p, server_rec *s)\n{\n\n    ap_lua_server_cfg *cfg = apr_pcalloc(p, sizeof(ap_lua_server_cfg));\n    cfg->vm_reslists = apr_hash_make(p);\n    apr_thread_rwlock_create(&cfg->vm_reslists_lock, p);\n    cfg->root_path = NULL;\n\n    return cfg;\n}\n\nstatic int lua_request_hook(lua_State *L, request_rec *r)\n{\n    ap_lua_push_request(L, r);\n    return OK;\n}\n\nstatic int lua_pre_config(apr_pool_t *pconf, apr_pool_t *plog,\n                            apr_pool_t *ptemp)\n{\n    ap_mutex_register(pconf, \"lua-ivm-shm\", NULL, APR_LOCK_DEFAULT, 0);\n    return OK;\n}\n\nstatic int lua_post_config(apr_pool_t *pconf, apr_pool_t *plog,\n                             apr_pool_t *ptemp, server_rec *s)\n{\n    apr_pool_t **pool;\n    const char *tempdir;\n    apr_status_t rs;\n\n    lua_ssl_val = APR_RETRIEVE_OPTIONAL_FN(ssl_var_lookup);\n    lua_ssl_is_https = APR_RETRIEVE_OPTIONAL_FN(ssl_is_https);\n    \n    if (ap_state_query(AP_SQ_MAIN_STATE) == AP_SQ_MS_CREATE_PRE_CONFIG)\n        return OK;\n\n    /* Create ivm mutex */\n    rs = ap_global_mutex_create(&lua_ivm_mutex, NULL, \"lua-ivm-shm\", NULL,\n                            s, pconf, 0);\n    if (APR_SUCCESS != rs) {\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n\n    /* Create shared memory space */\n    rs = apr_temp_dir_get(&tempdir, pconf);\n    if (rs != APR_SUCCESS) {\n        ap_log_error(APLOG_MARK, APLOG_ERR, rs, s, APLOGNO(02664)\n                 \"mod_lua IVM: Failed to find temporary directory\");\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n    lua_ivm_shmfile = apr_psprintf(pconf, \"%s/httpd_lua_shm.%ld\", tempdir,\n                           (long int)getpid());\n    rs = apr_shm_create(&lua_ivm_shm, sizeof(apr_pool_t**),\n                    (const char *) lua_ivm_shmfile, pconf);\n    if (rs != APR_SUCCESS) {\n        ap_log_error(APLOG_MARK, APLOG_ERR, rs, s, APLOGNO(02665)\n            \"mod_lua: Failed to create shared memory segment on file %s\",\n                     lua_ivm_shmfile);\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n    pool = (apr_pool_t **)apr_shm_baseaddr_get(lua_ivm_shm);\n    apr_pool_create(pool, pconf);\n    apr_pool_cleanup_register(pconf, NULL, shm_cleanup_wrapper,\n                          apr_pool_cleanup_null);\n    return OK;\n}\nstatic void *overlay_hook_specs(apr_pool_t *p,\n                                        const void *key,\n                                        apr_ssize_t klen,\n                                        const void *overlay_val,\n                                        const void *base_val,\n                                        const void *data)\n{\n    const apr_array_header_t *overlay_info = (const apr_array_header_t*)overlay_val;\n    const apr_array_header_t *base_info = (const apr_array_header_t*)base_val;\n    return apr_array_append(p, base_info, overlay_info);\n}\n\nstatic void *merge_dir_config(apr_pool_t *p, void *basev, void *overridesv)\n{\n    ap_lua_dir_cfg *a, *base, *overrides;\n\n    a         = (ap_lua_dir_cfg *)apr_pcalloc(p, sizeof(ap_lua_dir_cfg));\n    base      = (ap_lua_dir_cfg*)basev;\n    overrides = (ap_lua_dir_cfg*)overridesv;\n\n    a->pool = overrides->pool;\n    a->dir = apr_pstrdup(p, overrides->dir);\n\n    a->vm_scope = (overrides->vm_scope == AP_LUA_SCOPE_UNSET) ? base->vm_scope: overrides->vm_scope;\n    a->inherit = (overrides->inherit == AP_LUA_INHERIT_UNSET) ? base->inherit : overrides->inherit;\n    a->codecache = (overrides->codecache == AP_LUA_CACHE_UNSET) ? base->codecache : overrides->codecache;\n    \n    a->vm_min = (overrides->vm_min == 0) ? base->vm_min : overrides->vm_min;\n    a->vm_max = (overrides->vm_max == 0) ? base->vm_max : overrides->vm_max;\n\n    if (a->inherit == AP_LUA_INHERIT_UNSET || a->inherit == AP_LUA_INHERIT_PARENT_FIRST) { \n        a->package_paths = apr_array_append(p, base->package_paths, overrides->package_paths);\n        a->package_cpaths = apr_array_append(p, base->package_cpaths, overrides->package_cpaths);\n        a->mapped_handlers = apr_array_append(p, base->mapped_handlers, overrides->mapped_handlers);\n        a->mapped_filters = apr_array_append(p, base->mapped_filters, overrides->mapped_filters);\n        a->hooks = apr_hash_merge(p, overrides->hooks, base->hooks, overlay_hook_specs, NULL);\n    }\n    else if (a->inherit == AP_LUA_INHERIT_PARENT_LAST) { \n        a->package_paths = apr_array_append(p, overrides->package_paths, base->package_paths);\n        a->package_cpaths = apr_array_append(p, overrides->package_cpaths, base->package_cpaths);\n        a->mapped_handlers = apr_array_append(p, overrides->mapped_handlers, base->mapped_handlers);\n        a->mapped_filters = apr_array_append(p, overrides->mapped_filters, base->mapped_filters);\n        a->hooks = apr_hash_merge(p, base->hooks, overrides->hooks, overlay_hook_specs, NULL);\n    }\n    else { \n        a->package_paths = overrides->package_paths;\n        a->package_cpaths = overrides->package_cpaths;\n        a->mapped_handlers= overrides->mapped_handlers;\n        a->mapped_filters= overrides->mapped_filters;\n        a->hooks= overrides->hooks;\n    }\n\n    return a;\n}\n\nstatic void lua_register_hooks(apr_pool_t *p)\n{\n    /* ap_register_output_filter(\"luahood\", luahood, NULL, AP_FTYPE_RESOURCE); */\n    ap_hook_handler(lua_handler, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_create_request(create_request_config, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n\n    /* http_request.h hooks */\n    ap_hook_translate_name(lua_translate_name_harness_first, NULL, NULL,\n                           AP_LUA_HOOK_FIRST);\n    ap_hook_translate_name(lua_translate_name_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n    ap_hook_translate_name(lua_translate_name_harness_last, NULL, NULL,\n                           AP_LUA_HOOK_LAST);\n\n    ap_hook_fixups(lua_fixup_harness, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_map_to_storage(lua_map_to_storage_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n\n/*  XXX: Does not work :(  \n *  ap_hook_check_user_id(lua_check_user_id_harness_first, NULL, NULL,\n                          AP_LUA_HOOK_FIRST);\n */\n    ap_hook_check_user_id(lua_check_user_id_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n/*  XXX: Does not work :(\n * ap_hook_check_user_id(lua_check_user_id_harness_last, NULL, NULL,\n                          AP_LUA_HOOK_LAST);\n*/\n    ap_hook_type_checker(lua_type_checker_harness, NULL, NULL,\n                         APR_HOOK_MIDDLE);\n\n    ap_hook_access_checker(lua_access_checker_harness_first, NULL, NULL,\n                           AP_LUA_HOOK_FIRST);\n    ap_hook_access_checker(lua_access_checker_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n    ap_hook_access_checker(lua_access_checker_harness_last, NULL, NULL,\n                           AP_LUA_HOOK_LAST);\n    ap_hook_auth_checker(lua_auth_checker_harness_first, NULL, NULL,\n                         AP_LUA_HOOK_FIRST);\n    ap_hook_auth_checker(lua_auth_checker_harness, NULL, NULL,\n                         APR_HOOK_MIDDLE);\n    ap_hook_auth_checker(lua_auth_checker_harness_last, NULL, NULL,\n                         AP_LUA_HOOK_LAST);\n\n    ap_hook_insert_filter(lua_insert_filter_harness, NULL, NULL,\n                          APR_HOOK_MIDDLE);\n    ap_hook_quick_handler(lua_quick_harness, NULL, NULL, APR_HOOK_FIRST);\n\n    ap_hook_post_config(lua_post_config, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_pre_config(lua_pre_config, NULL, NULL, APR_HOOK_MIDDLE);\n\n    APR_OPTIONAL_HOOK(ap_lua, lua_open, lua_open_hook, NULL, NULL,\n                      APR_HOOK_REALLY_FIRST);\n\n    APR_OPTIONAL_HOOK(ap_lua, lua_request, lua_request_hook, NULL, NULL,\n                      APR_HOOK_REALLY_FIRST);\n    ap_hook_handler(lua_map_handler, NULL, NULL, AP_LUA_HOOK_FIRST);\n    \n    /* Hook this right before FallbackResource kicks in */\n    ap_hook_fixups(lua_map_handler_fixups, NULL, NULL, AP_LUA_HOOK_LAST-2);\n#if APR_HAS_THREADS\n    ap_hook_child_init(ap_lua_init_mutex, NULL, NULL, APR_HOOK_MIDDLE);\n#endif\n    /* providers */\n    lua_authz_providers = apr_hash_make(p);\n    \n    /* Logging catcher */\n    ap_hook_log_transaction(lua_log_transaction_harness,NULL,NULL,\n                            APR_HOOK_FIRST);\n}\n\nAP_DECLARE_MODULE(lua) = {\n    STANDARD20_MODULE_STUFF,\n    create_dir_config,          /* create per-dir    config structures */\n    merge_dir_config,           /* merge  per-dir    config structures */\n    create_server_config,       /* create per-server config structures */\n    NULL,                       /* merge  per-server config structures */\n    lua_commands,               /* table of config file commands       */\n    lua_register_hooks          /* register hooks                      */\n};\n"], "fixing_code": ["                                                         -*- coding: utf-8 -*-\n\nChanges with Apache 2.4.11\n  \n  *) SECURITY: CVE-2014-3583 (cve.mitre.org)\n     mod_proxy_fcgi: Fix a potential crash due to buffer over-read, with \n     response headers' size above 8K.  [Yann Ylavic, Jeff Trawick]\n\n  *) SECURITY: CVE-2014-3581 (cve.mitre.org)\n     mod_cache: Avoid a crash when Content-Type has an empty value.\n     PR 56924.  [Mark Montague <mark catseye.org>, Jan Kaluza]\n\n  *) SECURITY: CVE-2014-8109 (cve.mitre.org)\n     mod_lua: Fix handling of the Require line when a LuaAuthzProvider is\n     used in multiple Require directives with different arguments.\n     PR57204 [Edward Lu <Chaosed0 gmail.com>]\n\n  *) SECURITY: CVE-2013-5704 (cve.mitre.org)\n     core: HTTP trailers could be used to replace HTTP headers\n     late during request processing, potentially undoing or\n     otherwise confusing modules that examined or modified\n     request headers earlier.  Adds \"MergeTrailers\" directive to restore\n     legacy behavior.  [Edward Lu, Yann Ylavic, Joe Orton, Eric Covener]\n\n  *) mod_proxy_fcgi, mod_authnz_fcgi: stop reading the response and issue an\n     error when parsing or forwarding the response fails. [Yann Ylavic]\n\n  *) mod_ssl: Fix a memory leak in case of graceful restarts with OpenSSL >= 0.9.8e\n     PR 53435 [tadanori <tadanori2007 yahoo.com>, Sebastian Wiedenroth <wiedi frubar.net>]\n\n  *) mod_proxy_connect: Don't issue AH02447 on sockets hangups, let the read\n     determine whether it is a normal close or a real error. PR 57168. [Yann\n     Ylavic]\n\n  *) mod_proxy_wstunnel: abort backend connection on polling error to avoid\n     further processing.  [Yann Ylavic]\n\n  *) core: Support custom ErrorDocuments for HTTP 501 and 414 status codes.\n     PR 57167 [Edward Lu <Chaosed0 gmail.com>]\n\n  *) mod_proxy_connect: Fix ProxyRemote to https:// backends on EBCDIC \n     systems. PR 57092 [Edward Lu <Chaosed0 gmail.com>]\n\n  *) mod_cache: Avoid a 304 response to an unconditional requst when an AH00752\n     CacheLock error occurs during cache revalidation. [Eric Covener]\n \n  *) mod_ssl: Move OCSP stapling information from a per-certificate store to\n     a per-server hash. PR 54357, PR 56919. [Alex Bligh <alex alex.org.uk>,\n     Yann Ylavic, Kaspar Brand]\n\n  *) mod_cache_socache: Change average object size hint from 32 bytes to\n     2048 bytes.  [Rainer Jung]\n\n  *) mod_cache_socache: Add cache status to server-status.  [Rainer Jung]\n\n  *) event: Fix worker-listener deadlock in graceful restart.\n     PR 56960.\n\n  *) Concat strings at compile time when possible. PR 53741.\n\n  *) mod_substitute: Restrict configuration in .htaccess to\n     FileInfo as documented.  [Rainer Jung]\n\n  *) mod_substitute: Make maximum line length configurable.  [Rainer Jung]\n\n  *) mod_substitute: Fix line length limitation in case of regexp plus flatten.\n     [Rainer Jung]\n  \n  *) mod_proxy: Truncated character worker names are no longer fatal\n     errors. PR53218. [Jim Jagielski]\n\n  *) mod_dav: Set r->status_line in dav_error_response. PR 55426.\n\n  *) mod_proxy_http, mod_cache: Avoid (unlikely) accesses to freed memory.\n     [Yann Ylavic, Christophe Jaillet]\n\n  *) http_protocol: fix logic in ap_method_list_(add|remove) in order:\n       - to correctly reset bits\n       - not to modify the 'method_mask' bitfield unnecessarily\n     [Christophe Jaillet]\n\n  *) mod_slotmem_shm: Increase log level for some originally debug messages.\n     [Jim Jagielski]\n\n  *) mod_ldap: In 2.4.10, some LDAP searches or comparisons might be done with\n     the wrong credentials when a backend connection is reused.\n     [Eric Covener]\n\n  *) mod_macro: Add missing APLOGNO for some Warning log messages.\n     [Christophe Jaillet]\n\n  *) mod_cache: Avoid sending 304 responses during failed revalidations\n     PR56881. [Eric Covener]\n\n  *) mod_status: Honor client IP address using mod_remoteip. PR 55886.\n     [Jim Jagielski]\n\n  *) cmake-based build for Windows: Fix incompatibility with cmake 2.8.12\n     and later.  PR 56615.  [Chuck Liu <cliu81 gmail.com>, Jeff Trawick]\n\n  *) mod_ratelimit: Drop severity of AH01455 and AH01457 (ap_pass_brigade\n     failed) messages from ERROR to TRACE1.  Other filters do not bother \n     re-reporting failures from lower level filters.  PR56832.  [Eric Covener]\n\n  *) core: Avoid useless warning message when parsing a section guarded by\n     <IfDefine foo> if $(foo) is used within the section.\n     PR 56503 [Christophe Jaillet]\n\n  *) mod_proxy_fcgi: Fix faulty logging of large amounts of stderr from the\n     application.  PR 56858.  [Manuel Mausz <manuel-asf mausz.at>]\n\n  *) mod_proxy_http: Proxy responses with error status and\n     \"ProxyErrorOverride On\" hang until proxy timeout.\n     PR53420 [Rainer Jung]\n\n  *) mod_log_config: Allow three character log formats to be registered. For\n     backwards compatibility, the first character of a three-character format\n     must be the '^' (caret) character.  [Eric Covener]\n\n  *) mod_lua: Don't quote Expires and Path values. PR 56734.\n     [Keith Mashinter, <kmashint yahoo com>]\n\n  *) mod_authz_core: Allow <AuthzProviderAlias>'es to be seen from auth\n     stanzas under virtual hosts. PR 56870. [Eric Covener]\n\nChanges with Apache 2.4.10\n\n  *) SECURITY: CVE-2014-0117 (cve.mitre.org)\n     mod_proxy: Fix crash in Connection header handling which allowed a denial\n     of service attack against a reverse proxy with a threaded MPM.\n     [Ben Reser]\n\n  *) SECURITY: CVE-2014-3523 (cve.mitre.org)\n     Fix a memory consumption denial of service in the WinNT MPM, used in all\n     Windows installations. Workaround: AcceptFilter <protocol> {none|connect}\n     [Jeff Trawick]\n\n  *) SECURITY: CVE-2014-0226 (cve.mitre.org)\n     Fix a race condition in scoreboard handling, which could lead to\n     a heap buffer overflow.  [Joe Orton, Eric Covener]\n\n  *) SECURITY: CVE-2014-0118 (cve.mitre.org)\n     mod_deflate: The DEFLATE input filter (inflates request bodies) now\n     limits the length and compression ratio of inflated request bodies to\n     avoid denial of service via highly compressed bodies.  See directives\n     DeflateInflateLimitRequestBody, DeflateInflateRatioLimit,\n     and DeflateInflateRatioBurst. [Yann Ylavic, Eric Covener]\n\n  *) SECURITY: CVE-2014-0231 (cve.mitre.org)\n     mod_cgid: Fix a denial of service against CGI scripts that do\n     not consume stdin that could lead to lingering HTTPD child processes\n     filling up the scoreboard and eventually hanging the server.  By\n     default, the client I/O timeout (Timeout directive) now applies to\n     communication with scripts.  The CGIDScriptTimeout directive can be\n     used to set a different timeout for communication with scripts.\n     [Rainer Jung, Eric Covener, Yann Ylavic]\n\n  *) mod_ssl: Extend the scope of SSLSessionCacheTimeout to sessions\n     resumed by TLS session resumption (RFC 5077). [Rainer Jung]\n\n  *) mod_deflate: Don't fail when flushing inflated data to the user-agent\n     and that coincides with the end of stream (\"Zlib error flushing inflate\n     buffer\"). PR 56196. [Christoph Fausak <christoph fausak glueckkanja.com>]\n\n  *) mod_proxy_ajp: Forward local IP address as a custom request attribute\n     like we already do for the remote port. [Rainer Jung]\n\n  *) core: Include any error notes set by modules in the canned error\n     response for 403 errors.  [Jeff Trawick]\n\n  *) mod_ssl: Set an error note for requests rejected due to\n     SSLStrictSNIVHostCheck.  [Jeff Trawick]\n\n  *) mod_ssl: Fix issue with redirects to error documents when handling\n     SNI errors.  [Jeff Trawick]\n\n  *) mod_ssl: Fix tmp DH parameter leak, adjust selection to prefer\n     larger keys and support up to 8192-bit keys.  [Ruediger Pluem,\n     Joe Orton]\n\n  *) mod_dav: Fix improper encoding in PROPFIND responses.  PR 56480.\n     [Ben Reser]\n\n  *) WinNT MPM: Improve error handling for termination events in child.\n     [Jeff Trawick]\n\n  *) mod_proxy: When ping/pong is configured for a worker, don't send or\n     forward \"100 Continue\" (interim) response to the client if it does\n     not expect one. [Yann Ylavic]\n\n  *) mod_ldap: Be more conservative with the last-used time for\n     LDAPConnectionPoolTTL. PR54587 [Eric Covener]\n\n  *) mod_ldap: LDAP connections used for authn were not respecting\n     LDAPConnectionPoolTTL. PR54587 [Eric Covener]\n\n  *) mod_proxy_fcgi: Fix occasional high CPU when handling request bodies.\n     [Jeff Trawick]\n\n  *) event MPM: Fix possible crashes (third-party modules accessing c->sbh) \n     or occasional missed mod_status updates under load. PR 56639.\n     [Edward Lu <Chaosed0 gmail com>]\n\n  *) mod_authnz_ldap: Support primitive LDAP servers do not accept\n     filters, such as \"SDBM-backed LDAP\" on z/OS, by allowing a special\n     filter \"none\" to be specified in AuthLDAPURL. [Eric Covener]\n\n  *) mod_deflate: Fix inflation of files larger than 4GB. PR 56062.\n     [Lukas Bezdicka <social v3.sk>]\n\n  *) mod_deflate: Handle Zlib header and validation bytes received in multiple\n     chunks. PR 46146. [Yann Ylavic]\n\n  *) mod_proxy: Allow reverse-proxy to be set via explicit handler.\n     [ryo takatsuki <ryotakatsuki gmail com>]\n\n  *) ab: support custom HTTP method with -m argument. PR 56604.\n     [Roman Jurkov <winfinit gmail.com>]\n\n  *) mod_proxy_balancer: Correctly encode user provided data in management\n     interface. PR 56532 [Maksymilian, <max cert.cx>]\n\n  *) mod_proxy_fcgi: Support iobuffersize parameter.  [Jeff Trawick]\n\n  *) mod_auth_form: Add a debug message when the fields on a form are not\n     recognised. [Graham Leggett]\n\n  *) mod_cache: Preserve non-cacheable headers forwarded from an origin 304\n     response. PR 55547.  [Yann Ylavic]\n\n  *) mod_proxy_wstunnel: Fix the use of SSL connections with the \"wss:\"\n     scheme. PR55320. [Alex Liu <alex.leo.ca gmail.com>]\n\n  *) mod_socache_shmcb: Correct counting of expirations for status display.\n     Expirations happening during retrieval were not counted. [Rainer Jung]\n\n  *) mod_cache: Retry unconditional request with the full URL (including the\n     query-string) when the origin server's 304 response does not match the\n     conditions used to revalidate the stale entry.  [Yann Ylavic].\n\n  *) mod_alias: Stop setting CONTEXT_PREFIX and CONTEXT_DOCUMENT environment\n     variables as a result of AliasMatch. [Eric Covener]\n \n  *) mod_cache: Don't add cached/revalidated entity headers to a 304 response.\n     PR 55547.  [Yann Ylavic]\n\n  *) mod_proxy_scgi: Support Unix sockets.  ap_proxy_port_of_scheme():\n     Support default SCGI port (4000).  [Jeff Trawick]\n\n  *) mod_cache: Fix AH00784 errors on Windows when the the CacheLock directive\n     is enabled.  [Eric Covener]\n\n  *) mod_expires: don't add Expires header to error responses (4xx/5xx),\n     be they generated or forwarded. PR 55669.  [Yann Ylavic]\n\n  *) mod_proxy_fcgi: Don't segfault when failing to connect to the backend.\n     (regression in 2.4.9 release) [Jeff Trawick]\n\n  *) mod_authn_socache: Fix crash at startup in certain configurations.\n     PR 56371. (regression in 2.4.7) [Jan Kaluza]\n\n  *) mod_ssl: restore argument structure for \"exec\"-type SSLPassPhraseDialog\n     programs to the form used in releases up to 2.4.7, and emulate\n     a backwards-compatible behavior for existing setups. [Kaspar Brand]\n\n  *) mod_ssl: Add SSLOCSPUseRequestNonce directive to control whether or not\n     OCSP requests should use a nonce to be checked against the responder's\n     one. PR 56233. [Yann Ylavic, Kaspar Brand]\n\n  *) mod_ssl: \"SSLEngine off\" will now override a Listen-based default\n     and does disable mod_ssl for the vhost.  [Joe Orton]\n\n  *) mod_lua: Enforce the max post size allowed via r:parsebody()\n     [Daniel Gruno]\n\n  *) mod_lua: Use binary comparison to find boundaries for multipart \n     objects, as to not terminate our search prematurely when hitting\n     a NULL byte. [Daniel Gruno]\n\n  *) mod_ssl: add workaround for SSLCertificateFile when using OpenSSL\n     versions before 0.9.8h and not specifying an SSLCertificateChainFile\n     (regression introduced with 2.4.8). PR 56410. [Kaspar Brand]\n\n  *) mod_ssl: bring SNI behavior into better conformance with RFC 6066:\n     no longer send warning-level unrecognized_name(112) alerts,\n     and limit startup warnings to cases where an OpenSSL version\n     without TLS extension support is used. PR 56241. [Kaspar Brand]\n\n  *) mod_proxy_html: Avoid some possible memory access violation in case of\n     specially crafted files, when the ProxyHTMLMeta directive is turned on.\n     Follow up of PR 56287 [Christophe Jaillet]\n\n  *) mod_auth_form: Make sure the optional functions are loaded even when\n     the AuthFormProvider isn't specified. [Graham Leggett]\n\n  *) mod_ssl: avoid processing bogus SSLCertificateKeyFile values\n     (and logging garbled file names). PR 56306. [Kaspar Brand]\n\n  *) mod_ssl: fix merging of global and vhost-level settings with the\n     SSLCertificateFile, SSLCertificateKeyFile, and SSLOpenSSLConfCmd\n     directives. PR 56353. [Kaspar Brand]\n\n  *) mod_headers: Allow the \"value\" parameter of Header and RequestHeader to \n     contain an ap_expr expression if prefixed with \"expr=\". [Eric Covener]\n\n  *) rotatelogs: Avoid creation of zombie processes when -p is used on\n     Unix platforms.  [Joe Orton]\n\n  *) mod_authnz_fcgi: New module to enable FastCGI authorizer\n     applications to authenticate and/or authorize clients.\n     [Jeff Trawick]\n\n  *) mod_proxy: Do not try to parse the regular expressions passed by\n     ProxyPassMatch as URL as they do not follow their syntax.\n     PR 56074. [Ruediger Pluem]\n\n  *) mod_reqtimeout: Resolve unexpected timeouts on keepalive requests \n     under the Event MPM. PR56216.  [Frank Meier <frank meier ergon ch>]\n\n  *) mod_proxy_fcgi: Fix sending of response without some HTTP headers\n     that might be set by filters.  [Jim Riggs <jim riggs.me>]\n\n  *) mod_proxy_html: Do not delete the wrong data from HTML code when a\n     \"http-equiv\" meta tag specifies a Content-Type behind any other\n     \"http-equiv\" meta tag. PR 56287 [Micha Lenk <micha lenk info>]\n\n  *) mod_proxy: Don't reuse a SSL backend connection whose requested SNI\n     differs. PR 55782.  [Yann Ylavic]\n\n  *) Add suspend_connection and resume_connection hooks to notify modules\n     when the thread/connection relationship changes.  (Should be implemented\n     for any third-party async MPMs.)  [Jeff Trawick]\n\n  *) mod_proxy_wstunnel: Don't issue AH02447 and log a 500 on routine \n     hangups from websockets origin servers. PR 56299\n     [Yann Ylavic, Edward Lu <Chaosed0 gmail com>, Eric Covener] \n\n  *) mod_proxy_wstunnel: Don't pool backend websockets connections,\n     because we need to handshake every time. PR 55890.\n     [Eric Covener]\n\n  *) mod_lua: Redesign how request record table access behaves,\n     in order to utilize the request record from within these tables.\n     [Daniel Gruno]\n\n  *) mod_lua: Add r:wspeek for peeking at WebSocket frames. [Daniel Gruno]\n \n  *) mod_lua: Log an error when the initial parsing of a Lua file fails.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Reformat and escape script error output.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: URL-escape cookie keys/values to prevent tainted cookie data\n     from causing response splitting.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Disallow newlines in table values inside the request_rec, \n     to prevent HTTP Response Splitting via tainted headers.\n     [Daniel Gruno, Felipe Daragon <filipe syhunt com>]\n\n  *) mod_lua: Remove the non-working early/late arguments for \n     LuaHookCheckUserID. [Daniel Gruno]\n\n  *) mod_lua: Change IVM storage to use shm [Daniel Gruno]\n\n  *) mod_lua: More verbose error logging when a handler function cannot be\n     found. [Daniel Gruno]\n\nChanges with Apache 2.4.9\n\n  *) mod_ssl: Work around a bug in some older versions of OpenSSL that\n     would cause a crash in SSL_get_certificate for servers where the\n     certificate hadn't been sent. [Stephen Henson]\n\n  *) mod_lua: Add a fixups hook that checks if the original request is intended \n     for LuaMapHandler. This fixes a bug where FallbackResource invalidates the \n     LuaMapHandler directive in certain cases by changing the URI before the map \n     handler code executes [Daniel Gruno, Daniel Ferradal <dferradal gmail com>].\n\nChanges with Apache 2.4.8\n\n  *) SECURITY: CVE-2014-0098 (cve.mitre.org)\n     Clean up cookie logging with fewer redundant string parsing passes.\n     Log only cookies with a value assignment. Prevents segfaults when\n     logging truncated cookies.\n     [William Rowe, Ruediger Pluem, Jim Jagielski]\n\n  *) SECURITY: CVE-2013-6438 (cve.mitre.org)\n     mod_dav: Keep track of length of cdata properly when removing\n     leading spaces. Eliminates a potential denial of service from\n     specifically crafted DAV WRITE requests\n     [Amin Tora <Amin.Tora neustar.biz>]\n\n  *) core: Support named groups and backreferences within the LocationMatch,\n     DirectoryMatch, FilesMatch and ProxyMatch directives. (Requires\n     non-ancient PCRE library) [Graham Leggett]\n\n  *) core: draft-ietf-httpbis-p1-messaging-23 corrections regarding\n     TE/CL conflicts. [Yann Ylavic, Jim Jagielski]\n\n  *) core: Detect incomplete request and response bodies, log an error and\n     forward it to the underlying filters. PR 55475 [Yann Ylavic]\n\n  *) mod_dir: Add DirectoryCheckHandler to allow a 2.2-like behavior, skipping \n     execution when a handler is already set. PR53929. [Eric Covener]\n\n  *) mod_ssl: Do not perform SNI / Host header comparison in case of a\n     forward proxy request. [Ruediger Pluem]\n\n  *) mod_ssl: Remove the hardcoded algorithm-type dependency for the\n     SSLCertificateFile and SSLCertificateKeyFile directives, to enable\n     future algorithm agility, and deprecate the SSLCertificateChainFile\n     directive (obsoleted by SSLCertificateFile). [Kaspar Brand]\n\n  *) mod_rewrite: Add RewriteOptions InheritDown, InheritDownBefore, \n     and IgnoreInherit to allow RewriteRules to be pushed from parent scopes\n     to child scopes without explicitly configuring each child scope.\n     PR56153.  [Edward Lu <Chaosed0 gmail com>] \n\n  *) prefork: Fix long delays when doing a graceful restart.\n     PR 54852 [Jim Jagielski, Arkadiusz Miskiewicz <arekm maven pl>]\n\n  *) FreeBSD: Disable IPv4-mapped listening sockets by default for versions\n     5+ instead of just for FreeBSD 5. PR 53824. [Jeff Trawick]\n\n  *) mod_proxy_wstunnel: Avoid busy loop on client errors, drop message\n     IDs 02445, 02446, and 02448 to TRACE1 from DEBUG. PR 56145.\n     [Joffroy Christen <joffroy.christen solvaxis com>, Eric Covener]\n\n  *) mod_remoteip: Correct the trusted proxy match test. PR 54651.\n     [Yoshinori Ehara <yoshinori ehara gmail com>, Eugene L <eugenel amazon com>]\n\n  *) mod_proxy_fcgi: Fix error message when an unexpected protocol version\n     number is received from the application.  PR 56110.  [Jeff Trawick]\n\n  *) mod_remoteip: Use the correct IP addresses to populate the proxy_ips field.\n     PR 55972. [Mike Rumph]\n\n  *) mod_lua: Update r:setcookie() to accept a table of options and add domain,\n     path and httponly to the list of options available to set.\n     PR 56128 [Edward Lu <Chaosed0 gmail com>, Daniel Gruno]\n     \n  *) mod_lua: Fix r:setcookie() to add, rather than replace,\n     the Set-Cookie header. PR56105\n     [Kevin J Walters <kjw ms com>, Edward Lu <Chaosed0 gmail com>]\n\n  *) mod_lua: Allow for database results to be returned as a hash with \n     row-name/value pairs instead of just row-number/value. [Daniel Gruno]\n\n  *) mod_rewrite: Add %{CONN_REMOTE_ADDR} as the non-useragent counterpart to\n     %{REMOTE_ADDR}. PR 56094. [Edward Lu <Chaosed0 gmail com>]\n\n  *) WinNT MPM: If ap_run_pre_connection() fails or sets c->aborted, don't\n     save the socket for reuse by the next worker as if it were an \n     APR_SO_DISCONNECTED socket. Restores 2.2 behavior. [Eric Covener]\n\n  *) mod_dir: Don't search for a DirectoryIndex or DirectorySlash on a URL\n     that was just rewritten by mod_rewrite. PR53929. [Eric Covener]\n\n  *) mod_session: When we have a session we were unable to decode,\n     behave as if there was no session at all. [Thomas Eckert\n     <thomas.r.w.eckert gmail com>]\n\n  *) mod_session: Fix problems interpreting the SessionInclude and\n     SessionExclude configuration. PR 56038. [Erik Pearson\n     <erik adaptations.com>]\n\n  *) mod_authn_core: Allow <AuthnProviderAlias>'es to be seen from auth\n     stanzas under virtual hosts. PR 55622. [Eric Covener]\n\n  *) mod_proxy_fcgi: Use apr_socket_timeout_get instead of hard-coded\n     30 seconds timeout. [Jan Kaluza]\n\n  *) build: only search for modules (config*.m4) in known subdirectories, see\n     build/config-stubs. [Stefan Fritsch]\n\n  *) mod_cache_disk: Fix potential hangs on Windows when using mod_cache_disk. \n     PR 55833. [Eric Covener]\n\n  *) mod_ssl: Add support for OpenSSL configuration commands by introducing\n     the SSLOpenSSLConfCmd directive. [Stephen Henson, Kaspar Brand]\n\n  *) mod_proxy: Remove (never documented) <Proxy ~ wildcard-url> syntax which\n     is equivalent to <ProxyMatch wildcard-url>. [Christophe Jaillet]\n\n  *) mod_authz_user, mod_authz_host, mod_authz_groupfile, mod_authz_dbm,\n     mod_authz_dbd, mod_authnz_ldap: Support the expression parser within the\n     require directives. [Graham Leggett]\n\n  *) mod_proxy_http: Core dumped under high load. PR 50335.\n     [Jan Kaluza <jkaluza redhat.com>]\n\n  *) mod_socache_shmcb.c: Remove arbitrary restriction on shared memory size\n     previously limited to 64MB. [Jens L\u00e5\u00e5s <jelaas gmail.com>]\n\n  *) mod_lua: Use binary copy when dealing with uploads through r:parsebody() \n     to prevent truncating files. [Daniel Gruno]\n\nChanges with Apache 2.4.7\n\n  *) SECURITY: CVE-2013-4352 (cve.mitre.org)\n     mod_cache: Fix a NULL pointer deference which allowed untrusted\n     origin servers to crash mod_cache in a forward proxy\n     configuration.  [Graham Leggett]\n\n  *) APR 1.5.0 or later is now required for the event MPM.\n  \n  *) slotmem_shm: Error detection. [Jim Jagielski]\n\n  *) event: Use skiplist data structure. [Jim Jagielski]\n\n  *) event: Fail at startup with message AP02405 if the APR atomic\n     implementation is not compatible with the MPM.  [Jim Jagielski]\n\n  *) mpm_unix: Add ap_mpm_podx_* implementation to avoid code duplication\n     and align w/ trunk. [Jim Jagielski]\n\n  *) Fix potential rejection of valid MaxMemFree and ThreadStackSize\n     directives.  [Mike Rumph <mike.rumph oracle.com>]\n\n  *) mod_proxy_fcgi: Remove 64K limit on encoded length of all envvars.\n     An individual envvar with an encoded length of more than 16K will be\n     omitted.  [Jeff Trawick]\n  \n  *) mod_proxy_fcgi: Handle reading protocol data that is split between\n     packets.  [Jeff Trawick]\n\n  *) mod_ssl: Improve handling of ephemeral DH and ECDH keys by\n     allowing custom parameters to be configured via SSLCertificateFile,\n     and by adding standardized DH parameters for 1024/2048/3072/4096 bits.\n     Unless custom parameters are configured, the standardized parameters\n     are applied based on the certificate's RSA/DSA key size. [Kaspar Brand]\n\n  *) mod_ssl, configure: Require OpenSSL 0.9.8a or later. [Kaspar Brand]\n\n  *) mod_ssl: drop support for export-grade ciphers with ephemeral RSA\n     keys, and unconditionally disable aNULL, eNULL and EXP ciphers\n     (not overridable via SSLCipherSuite). [Kaspar Brand]\n\n  *) mod_proxy: Added support for unix domain sockets as the\n     backend server endpoint [Jim Jagielski, Blaise Tarr\n     <blaise tarr gmail com>]\n\n  *) Add experimental cmake-based build system for Windows.  [Jeff Trawick,\n     Tom Donovan]\n\n  *) event MPM: Fix possible crashes (third party modules accessing c->sbh) \n     or occasional missed mod_status updates for some keepalive requests \n     under load. [Eric Covener]\n\n  *) mod_authn_socache: Support optional initialization arguments for\n     socache providers.  [Chris Darroch]\n\n  *) mod_session: Reset the max-age on session save. PR 47476. [Alexey\n     Varlamov <alexey.v.varlamov gmail com>]\n\n  *) mod_session: After parsing the value of the header specified by the\n     SessionHeader directive, remove the value from the response. PR 55279.\n     [Graham Leggett]\n\n  *) mod_headers: Allow for format specifiers in the substitution string\n     when using Header edit. [Daniel Ruggeri]\n\n  *) mod_dav: dav_resource->uri is treated as unencoded. This was an\n     unnecessary ABI changed introduced in 2.4.6. PR 55397.\n\n  *) mod_dav: Don't require lock tokens for COPY source. PR 55306.\n\n  *) core: Don't truncate output when sending is interrupted by a signal,\n     such as from an exiting CGI process. PR 55643. [Jeff Trawick]\n\n  *) WinNT MPM: Exit the child if the parent process crashes or is terminated.\n     [Oracle Corporation]\n\n  *) Windows: Correct failure to discard stderr in some error log\n     configurations.  (Error message AH00093)  [Jeff Trawick]\n\n  *) mod_session_crypto: Allow using exec: calls to obtain session\n     encryption key.  [Daniel Ruggeri]\n\n  *) core: Add missing Reason-Phrase in HTTP response headers.\n     PR 54946. [Rainer Jung]\n\n  *) mod_rewrite: Make rewrite websocket-aware to allow proxying.\n     PR 55598. [Chris Harris <chris.harris kitware com>]\n\n  *) mod_ldap: When looking up sub-groups, use an implicit objectClass=*\n     instead of an explicit cn=* filter. [David Hawes <dhawes vt.edu>]\n\n  *) ab: Add wait time, fix processing time, and output write errors only if\n     they occured. [Christophe Jaillet]\n\n  *) worker MPM: Don't forcibly kill worker threads if the child process is\n     exiting gracefully.  [Oracle Corporation]\n\n  *) core: apachectl -S prints wildcard name-based virtual hosts twice. \n     PR54948 [Eric Covener]\n\n  *) mod_auth_basic: Add AuthBasicUseDigestAlgorithm directive to\n     allow migration of passwords from digest to basic authentication.\n     [Chris Darroch]\n\n  *) ab: Add a new -l parameter in order not to check the length of the responses.\n     This can be usefull with dynamic pages.\n     PR9945, PR27888, PR42040 [<ccikrs1 cranbrook edu>]\n     \n  *) Suppress formatting of startup messages written to the console when\n     ErrorLogFormat is used.  [Jeff Trawick]\n\n  *) mod_auth_digest: Be more specific when the realm mismatches because the\n     realm has not been specified. [Graham Leggett]\n\n  *) mod_proxy: Add a note in the balancer manager stating whether changes\n     will or will not be persisted and whether settings are inherited.\n     [Daniel Ruggeri, Jim Jagielski]\n\n  *) core: Add util_fcgi.h and associated definitions and support\n     routines for FastCGI, based largely on mod_proxy_fcgi.\n     [Jeff Trawick]\n\n  *) mod_headers: Add 'Header note header-name note-name' for copying a response\n     headers value into a note. [Eric Covener]\n\n  *) mod_headers: Add 'setifempty' command to Header and RequestHeader.\n     [Eric Covener]\n\n  *) mod_logio: new format-specifier %S (sum) which is the sum of received\n     and sent byte counts.\n     PR54015 [Christophe Jaillet]\n\n  *) mod_deflate: Improve error detection when decompressing request bodies\n     with trailing garbage: handle case where trailing bytes are in\n     the same bucket. [Rainer Jung]\n\n  *) mod_authz_groupfile, mod_authz_user: Reduce severity of AH01671 and AH01663\n     from ERROR to DEBUG, since these modules do not know what mod_authz_core\n     is doing with their AUTHZ_DENIED return value. [Eric Covener]\n\n  *) mod_ldap: add TRACE5 for LDAP retries. [Eric Covener]\n\n  *) mod_ldap: retry on an LDAP timeout during authn. [Eric Covener]\n\n  *) mod_ldap: Change \"LDAPReferrals off\" to actually set the underlying LDAP \n     SDK option to OFF, and introduce \"LDAPReferrals default\" to take the SDK \n     default, sans rebind authentication callback.\n     [Jan Kaluza <kaluze AT redhat.com>]\n\n  *) core: Log a message at TRACE1 when the client aborts a connection.\n     [Eric Covener]\n\n  *) WinNT MPM: Don't crash during child process initialization if the\n     Listen protocol is unrecognized.  [Jeff Trawick]\n\n  *) modules: Fix some compiler warnings. [Guenter Knauf]\n\n  *) Sync 2.4 and trunk\n       - Avoid some memory allocation and work when TRACE1 is not activated\n       - fix typo in include guard\n       - indent\n       - No need to lower the string before removing the path, it is just \n         a waste of time...\n       - Save a few cycles\n     [Christophe Jaillet <christophe.jaillet wanadoo.fr>]\n\n  *) mod_filter: Add \"change=no\" as a proto-flag to FilterProtocol\n     to remove a providers initial flags set at registration time.\n     [Eric Covener]\n\n  *) core, mod_ssl: Enable the ability for a module to reverse the sense of\n     a poll event from a read to a write or vice versa. This is a step on\n     the way to allow mod_ssl taking full advantage of the event MPM.\n     [Graham Leggett]\n\n  *) Makefile.win: Install proper pcre DLL file during debug build install.\n     PR 55235.  [Ben Reser <ben reser org>]\n\n  *) mod_ldap: Fix a potential memory leak or corruption.  PR 54936.\n     [Zhenbo Xu <zhenbo1987 gmail com>]\n\n  *) ab: Fix potential buffer overflows when processing the T and X\n     command-line options.  PR 55360.\n     [Mike Rumph <mike.rumph oracle.com>]\n\n  *) fcgistarter: Specify SO_REUSEADDR to allow starting a server\n     with old connections in TIME_WAIT.  [Jeff Trawick]\n\n  *) core: Add open_htaccess hook which, in conjunction with dirwalk_stat\n     and post_perdir_config (introduced in 2.4.5), allows mpm-itk to be \n     used without patches to httpd core. [Stefan Fritsch]\n\n  *) support/htdbm: fix processing of -t command line switch. Regression\n     introduced in 2.4.4\n     PR 55264 [Jo Rhett <jrhett netconsonance com>]\n\n  *) mod_lua: add websocket support via r:wsupgrade, r:wswrite, r:wsread \n     and r:wsping. [Daniel Gruno]\n\n  *) mod_lua: add support for writing/reading cookies via r:getcookie and \n     r:setcookie. [Daniel Gruno]\n\n  *) mod_lua: If the first yield() of a LuaOutputFilter returns a string, it should\n     be prefixed to the response as documented. [Eric Covener] \n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Remove ETAG, Content-Length, and Content-MD5 when a LuaOutputFilter\n     is configured without mod_filter. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Register LuaOutputFilter scripts as changing the content and\n     content-length by default, when run my mod_filter.  Previously,\n     growing or shrinking a response that started with Content-Length set\n     would require mod_filter and FilterProtocol change=yes. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\n  *) mod_lua: Return a 500 error if a LuaHook* script doesn't return a\n     numeric return code. [Eric Covener]\n     Note: Not present in 2.4.7 CHANGES\n\nChanges with Apache 2.4.6\n\n  *) Revert a broken fix for PR54948 that was applied to 2.4.5 (which was\n     not released) and found post-2.4.5 tagging.\n\nChanges with Apache 2.4.5\n\n  *) SECURITY: CVE-2013-1896 (cve.mitre.org)\n     mod_dav: Sending a MERGE request against a URI handled by mod_dav_svn with\n     the source href (sent as part of the request body as XML) pointing to a\n     URI that is not configured for DAV will trigger a segfault. [Ben Reser\n     <ben reser.org>]\n\n  *) SECURITY: CVE-2013-2249 (cve.mitre.org)\n     mod_session_dbd: Make sure that dirty flag is respected when saving\n     sessions, and ensure the session ID is changed each time the session\n     changes. This changes the format of the updatesession SQL statement.\n     Existing configurations must be changed.\n     [Takashi Sato, Graham Leggett]\n\n  *) mod_auth_basic: Add a generic mechanism to fake basic authentication\n     using the ap_expr parser. AuthBasicFake allows the administrator to \n     construct their own username and password for basic authentication based \n     on their needs. [Graham Leggett]\n\n  *) mpm_event: Check that AsyncRequestWorkerFactor is not negative. PR 54254.\n     [Jackie Zhang <jackie qq zhang gmail com>]\n\n  *) mod_proxy: Ensure we don't attempt to amend a table we are iterating\n     through, ensuring that all headers listed by Connection are removed.\n     [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_proxy_http: Make the proxy-interim-response environment variable\n     effective by formally overriding origin server behaviour. [Graham\n     Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_proxy: Fix seg-faults when using the global pool on threaded\n     MPMs [Thomas Eckert <thomas.r.w.eckert gmail.com>, Graham Leggett,\n     Jim Jagielski]\n\n  *) mod_deflate: Remove assumptions as to when an EOS bucket might arrive.\n     Gracefully step aside if the body size is zero. [Graham Leggett]\n\n  *) mod_ssl: Fix possible truncation of OCSP responses when reading from the\n     server.  [Joe Orton]\n\n  *) core: Support the SINGLE_LISTEN_UNSERIALIZED_ACCEPT optimization\n     on Linux kernel versions 3.x and above.  PR 55121.  [Bradley Heilbrun\n     <apache heilbrun.org>]\n\n  *) mod_cache_socache: Make sure the CacheSocacheMaxSize directive is merged\n     correctly. [Jens L\u00e5\u00e5s <jelaas gmail.com>]\n\n  *) rotatelogs: add -n number-of-files option to rotate through a number\n     of fixed-name logfiles. [Eric Covener]\n\n  *) mod_proxy: Support web-socket tunnels via mod_proxy_wstunnel.\n     [Jim Jagielski]\n\n  *) mod_cache_socache: Use the name of the socache implementation when performing\n     a lookup rather than using the raw arguments. [Martin Ksellmann\n     <martin@ksellmann.de>]\n\n  *) core: Add dirwalk_stat hook.  [Jeff Trawick]\n\n  *) core: Add post_perdir_config hook.\n     [Steinar Gunderson <sgunderson bigfoot.com>]\n\n  *) proxy_util: NULL terminate the right buffer in 'send_http_connect'.\n     [Christophe Jaillet]\n\n  *) mod_remoteip: close file in error path. [Christophe Jaillet]\n\n  *) core: make the \"default\" parameter of the \"ErrorDocument\" option case\n     insensitive. PR 54419 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_proxy_html: make the \"ProxyHTMLFixups\" options case insensitive.\n     PR 54420 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_cache: Make option \"CacheDisable\" in mod_cache case insensitive.\n     PR 54462 [Tianyin Xu <tixu cs ucsd edu>]\n\n  *) mod_cache: If a 304 response indicates an entity not currently cached, then\n     the cache MUST disregard the response and repeat the request without the\n     conditional. [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: Ensure that we don't attempt to replace a cached response\n     with an older response as per RFC2616 13.12. [Graham Leggett, Co-Advisor\n     <coad measurement-factory.com>]\n\n  *) core, mod_cache: Ensure RFC2616 compliance in ap_meets_conditions()\n     with weak validation combined with If-Range and Range headers. Break\n     out explicit conditional header checks to be useable elsewhere in the\n     server. Ensure weak validation RFC compliance in the byteranges filter.\n     Ensure RFC validation compliance when serving cached entities. PR 16142\n     [Graham Leggett, Co-Advisor <coad measurement-factory.com>]\n\n  *) core: Add the ability to do explicit matching on weak and strong ETags\n     as per RFC2616 Section 13.3.3. [Graham Leggett, Co-Advisor\n     <coad measurement-factory.com>]\n\n  *) mod_cache: Ensure that updated responses to HEAD requests don't get\n     mistakenly paired with a previously cached body. Ensure that any existing\n     body is removed when a HEAD request is cached. [Graham Leggett,\n     Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: Honour Cache-Control: no-store in a request. [Graham Leggett]\n\n  *) mod_cache: Make sure that contradictory entity headers present in a 304\n     Not Modified response are caught and cause the entity to be removed.\n     [Graham Leggett]\n\n  *) mod_cache: Make sure Vary processing handles multivalued Vary headers and\n     multivalued headers referred to via Vary. [Graham Leggett]\n\n  *) mod_cache: When serving from cache, only the last header of a multivalued\n     header was taken into account. Fixed. Ensure that Warning headers are\n     correctly handled as per RFC2616. [Graham Leggett]\n\n  *) mod_cache: Ignore response headers specified by no-cache=header and\n     private=header as specified by RFC2616 14.9.1 What is Cacheable. Ensure\n     that these headers are still processed when multiple Cache-Control\n     headers are present in the response. PR 54706 [Graham Leggett,\n     Yann Ylavic <ylavic.dev gmail.com>]\n\n  *) mod_cache: Invalidate cached entities in response to RFC2616 Section\n     13.10 Invalidation After Updates or Deletions. PR 15868 [Graham\n     Leggett]\n\n  *) mod_dav: Improve error handling in dav_method_put(), add new\n     dav_join_error() function.  PR 54145.  [Ben Reser <ben reser.org>]\n\n  *) mod_dav: Do not fail PROPPATCH when prop namespace is not known.\n     PR 52559 [Diego Santa Cruz <diego.santaCruz spinetix.com>]\n\n  *) mod_dav: When a PROPPATCH attempts to remove a non-existent dead\n     property on a resource for which there is no dead property in the same\n     namespace httpd segfaults. PR 52559 [Diego Santa Cruz\n     <diego.santaCruz spinetix.com>]\n\n  *) mod_dav: Sending an If or If-Match header with an invalid ETag doesn't\n     result in a 412 Precondition Failed for a COPY operation. PR54610\n     [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_dav: Make sure that when we prepare an If URL for Etag comparison,\n     we compare unencoded paths. PR 53910 [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_deflate: Remove assumptions as to when an EOS bucket might arrive.\n     Gracefully step aside if the body size is zero. [Graham Leggett]\n\n  *) 'AuthGroupFile' and 'AuthUserFile' do not accept anymore the optional\n     'standard' keyword . It was unused and not documented.\n     PR54463 [Tianyin Xu <tixu cs.ucsd.edu> and Christophe Jaillet]\n\n  *) core: Do not over allocate memory within 'ap_rgetline_core' for\n     the common case. [Christophe Jaillet]\n\n  *) core: speed up (for common cases) and reduce memory usage of\n     ap_escape_logitem(). This should save 70-100 bytes in the request\n     pool for a default config. [Christophe Jaillet]\n\n  *) mod_dav: Ensure URI is correctly uriencoded on return. PR 54611\n     [Timothy Wood <tjw omnigroup.com>]\n\n  *) mod_proxy: Reject invalid values for Max-Forwards. [Graham Leggett,\n     Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: RFC2616 14.9.3 The s-maxage directive also implies the\n     semantics of the proxy-revalidate directive. [Graham Leggett]\n\n  *) mod_ssl: add support for subjectAltName-based host name checking\n     in proxy mode (SSLProxyCheckPeerName). PR 54030. [Kaspar Brand]\n\n  *) core: Use the proper macro for HTTP/1.1. [Graham Leggett]\n\n  *) event MPM: Provide error handling for ThreadStackSize. PR 54311\n     [Tianyin Xu <tixu cs.ucsd.edu>, Christophe Jaillet]\n\n  *) mod_dav: Do not segfault on PROPFIND with a zero length DBM.\n     PR 52559 [Diego Santa Cruz <diego.santaCruz spinetix.com>]\n\n  *) core: Improve error message where client's request-line exceeds\n     LimitRequestLine. PR 54384 [Christophe Jaillet]\n\n  *) mod_macro: New module that provides macros within configuration files.\n     [Fabien Coelho]\n\n  *) mod_cache_socache: New cache implementation backed by mod_socache\n     that replaces mod_mem_cache known from httpd 2.2. [Graham\n     Leggett]\n\n  *) htpasswd: Add -v option to verify a password. [Stefan Fritsch]\n\n  *) mod_proxy: Add BalancerInherit and ProxyPassInherit to control\n     whether Proxy Balancers and Workers are inherited by vhosts\n     (default is On). [Jim Jagielski]\n\n  *) mod_authnz_ldap: Allow using exec: calls to obtain LDAP bind\n     password.  [Daniel Ruggeri]\n\n  *) Added balancer parameter failontimeout to allow server admin\n     to configure an IO timeout as an error in the balancer.\n     [Daniel Ruggeri]\n\n  *) mod_auth_digest: Fix crashes if shm initialization failed. [Stefan\n     Fritsch]\n\n  *) htpasswd, htdbm: Fix password generation. PR 54735. [Stefan Fritsch]\n\n  *) core: Add workaround for gcc bug on sparc/64bit. PR 52900.\n     [Stefan Fritsch]\n\n  *) mod_setenvif: Fix crash in case SetEnvif and SetEnvIfExpr are used\n     together. PR 54881. [Ruediger Pluem]\n\n  *) htdigest: Fix buffer overflow when reading digest password file\n     with very long lines. PR 54893. [Rainer Jung]\n\n  *) ap_expr: Add the ability to base64 encode and base64 decode\n     strings and to generate their SHA1 and MD5 hash.\n     [Graham Leggett, Stefan Fritsch]\n\n  *) mod_log_config: Fix crash when logging request end time for a failed\n     request.  PR 54828 [Rainer Jung]\n\n  *) mod_ssl: Catch missing, mismatched or encrypted client cert/key pairs\n     with SSLProxyMachineCertificateFile/Path directives. PR 52212, PR 54698.\n     [Keith Burdis <keith burdis.org>, Joe Orton, Kaspar Brand]\n\n  *) mod_ssl: Quiet FIPS mode weak keys disabled and FIPS not selected emits\n     in the error log to debug level.  [William Rowe]\n\n  *) mod_cache_disk: CacheMinFileSize and CacheMaxFileSize were always\n     using compiled in defaults of 1000000/1 respectively. [Eric Covener]\n\n  *) mod_lbmethod_heartbeat, mod_heartmonitor: Respect DefaultRuntimeDir/\n     DEFAULT_REL_RUNTIMEDIR for the heartbeat storage file.  [Jeff Trawick]\n\n  *) mod_include: Use new ap_expr for 'elif', like 'if', \n     if legacy parser is not specified.  PR 54548 [Tom Donovan]\n\n  *) mod_lua: Add some new functions: r:htpassword(), r:mkdir(), r:mkrdir(),\n     r:rmdir(), r:touch(), r:get_direntries(), r.date_parse_rfc().\n     [Guenter Knauf]\n\n  *) mod_lua: Add multipart form data handling. [Daniel Gruno]\n\n  *) mod_lua: If a LuaMapHandler doesn't return any value, log a warning\n     and treat it as apache2.OK. [Eric Covener]\n\n  *) mod_lua: Add bindings for apr_dbd/mod_dbd database access\n     [Daniel Gruno]\n\n  *) mod_lua: Add LuaInputFilter/LuaOutputFilter for creating content\n     filters in Lua [Daniel Gruno]\n\n  *) mod_lua: Allow scripts handled by the lua-script handler to return\n     a status code to the client (such as a 302 or a 500) [Daniel Gruno]\n\n  *) mod_lua: Decline handling 'lua-script' if the file doesn't exist,\n     rather than throwing an internal server error. [Daniel Gruno]\n\n  *) mod_lua: Add functions r:flush and r:sendfile as well as additional\n     request information to the request_rec structure. [Daniel Gruno]\n\n  *) mod_lua: Add a server scope for Lua states, which creates a pool of\n     states with managable minimum and maximum size. [Daniel Gruno]\n\n  *) mod_lua: Add new directive, LuaMapHandler, for dynamically mapping\n     URIs to Lua scripts and functions using regular expressions.\n     [Daniel Gruno]\n\n  *) mod_lua: Add new directive LuaCodeCache for controlling in-memory\n     caching of lua scripts. [Daniel Gruno]\n\nChanges with Apache 2.4.4\n\n  *) SECURITY: CVE-2012-3499 (cve.mitre.org)\n     Various XSS flaws due to unescaped hostnames and URIs HTML output in\n     mod_info, mod_status, mod_imagemap, mod_ldap, and mod_proxy_ftp.\n     [Jim Jagielski, Stefan Fritsch, Niels Heinen <heinenn google com>]\n\n  *) SECURITY: CVE-2012-4558 (cve.mitre.org)\n     XSS in mod_proxy_balancer manager interface. [Jim Jagielski,\n     Niels Heinen <heinenn google com>]\n\n  *) mod_dir: Add support for the value 'disabled' in FallbackResource.\n     [Vincent Deffontaines]\n\n  *) mod_proxy_connect: Don't keepalive the connection to the client if the\n     backend closes the connection. PR 54474. [Pavel Mateja <pavel netsafe cz>]\n\n  *) mod_lua: Add bindings for mod_dbd/apr_dbd database access.\n     [Daniel Gruno]\n\n  *) mod_proxy: Allow for persistence of local changes made via the\n     balancer-manager between graceful/normal restarts and power\n     cycles. [Jim Jagielski]\n\n  *) mod_proxy: Fix startup crash with mis-defined balancers.\n     PR 52402. [Jim Jagielski]\n\n  *) --with-module: Fix failure to integrate them into some existing\n     module directories.  PR 40097.  [Jeff Trawick]\n\n  *) htcacheclean: Fix potential segfault if \"-p\" is omitted.  [Joe Orton]\n\n  *) mod_proxy_http: Honour special value 0 (unlimited) of LimitRequestBody\n     PR 54435.  [Pavel Mateja <pavel netsafe.cz>]\n\n  *) mod_proxy_ajp: Support unknown HTTP methods. PR 54416.\n     [Rainer Jung]\n\n  *) htcacheclean: Fix list options \"-a\" and \"-A\".\n     [Rainer Jung]\n\n  *) mod_slotmem_shm: Fix mistaken reset of num_free for restored shm.\n     [Jim Jagielski]\n\n  *) mod_proxy: non-existance of byrequests is not an immediate error.\n     [Jim Jagielski]\n\n  *) mod_proxy_balancer: Improve output of balancer-manager (re: Drn,\n     Dis, Ign, Stby). PR 52478 [Danijel <dt-ng rbfh de>]\n  \n  *) configure: Fix processing of --disable-FEATURE for various features.\n     [Jeff Trawick]\n\n  *) mod_dialup/mod_http: Prevent a crash in mod_dialup in case of internal\n     redirect. PR 52230.\n\n  *) various modules, rotatelogs: Replace use of apr_file_write() with\n     apr_file_write_full() to prevent incomplete writes. PR 53131.\n     [Nicolas Viennot <apache viennot biz>, Stefan Fritsch]\n\n  *) ab: Support socket timeout (-s timeout).\n     [Guido Serra <zeph fsfe org>]\n\n  *) httxt2dbm: Correct length computation for the 'value' stored in the\n     DBM file. PR 47650 [jon buckybox com]\n\n  *) core: Be more correct about rejecting directives that cannot work in <If>\n     sections. [Stefan Fritsch]\n\n  *) core: Fix directives like LogLevel that need to know if they are invoked\n     at virtual host context or in Directory/Files/Location/If sections to\n     work properly in If sections that are not in a Directory/Files/Location.\n     [Stefan Fritsch]\n\n  *) mod_xml2enc: Fix problems with charset conversion altering the\n     Content-Length. [Micha Lenk <micha lenk info>]\n\n  *) ap_expr: Add req_novary function that allows HTTP header lookups\n     without adding the name to the Vary header. [Stefan Fritsch]\n\n  *) mod_slotmem_*: Add in new fgrab() function which forces a grab and\n     slot allocation on a specified slot. Allow for clearing of inuse\n     array. [Jim Jagielski]\n\n  *) mod_proxy_ftp: Fix segfaults on IPv4 requests to hosts with DNS\n     AAAA records. PR  40841. [Andrew Rucker Jones <arjones simultan\n     dyndns org>, <ast domdv de>, Jim Jagielski]\n\n  *) mod_auth_form: Make sure that get_notes_auth() sets the user as does\n     get_form_auth() and get_session_auth(). Makes sure that REMOTE_USER\n     does not vanish during mod_include driven subrequests. [Graham\n     Leggett]\n\n  *) mod_cache_disk: Resolve errors while revalidating disk-cached files on\n     Windows (\"...rename tempfile to datafile failed...\"). PR 38827\n     [Eric Covener]\n\n  *) mod_proxy_balancer: Bring XML output up to date. [Jim Jagielski]\n\n  *) htpasswd, htdbm: Optionally read passwords from stdin, as more\n     secure alternative to -b.  PR 40243. [Adomas Paltanavicius <adomas\n     paltanavicius gmail com>, Stefan Fritsch]\n\n  *) htpasswd, htdbm: Add support for bcrypt algorithm (requires\n     apr-util 1.5 or higher). PR 49288. [Stefan Fritsch]\n\n  *) htpasswd, htdbm: Put full 48bit of entropy into salt, improve\n     error handling. Add some of htpasswd's improvements to htdbm,\n     e.g. warn if password is truncated by crypt(). [Stefan Fritsch]\n\n  *) mod_auth_form: Support the expr parser in the\n     AuthFormLoginRequiredLocation, AuthFormLoginSuccessLocation and\n     AuthFormLogoutLocation directives. [Graham Leggett]\n\n  *) mod_ssl: Add support for TLS-SRP (Secure Remote Password key exchange\n     for TLS, RFC 5054). PR 51075. [Quinn Slack <sqs cs stanford edu>,\n     Christophe Renou, Peter Sylvester]\n\n  *) mod_rewrite: Stop mergeing RewriteBase down to subdirectories\n     unless new option 'RewriteOptions MergeBase' is configured.\n     PR 53963. [Eric Covener]\n\n  *) mod_header: Allow for exposure of loadavg and server load using new \n     format specifiers %l, %i, %b [Jim Jagielski]\n  \n  *) core: Make ap_regcomp() return AP_REG_ESPACE if out of memory.  Make\n     ap_pregcomp() abort if out of memory. This raises the minimum PCRE\n     requirement to version 6.0. [Stefan Fritsch]\n\n  *) mod_proxy: Add ability to configure the sticky session separator.\n     PR 53893. [<inu inusasha de>, Jim Jagielski]\n\n  *) mod_dumpio: Correctly log large messages\n     PR 54179 [Marek Wianecki <mieszek2 interia pl>]\n\n  *) core: Don't fail at startup with AH00554 when Include points to \n     a directory without any wildcard character. [Eric Covener]\n\n  *) core: Fail startup if the argument to ServerTokens is unrecognized.\n     [Jackie Zhang  <jackie.qq.zhang gmail.com>]\n\n  *) mod_log_forensic: Don't log a spurious \"-\" if a request has been rejected\n     before mod_log_forensic could attach its id to it. [Stefan Fritsch]\n\n  *) rotatelogs: Omit the second argument for the first invocation of\n     a post-rotate program when -p is used, per the documentation.\n     [Joe Orton]\n\n  *) mod_session_dbd: fix a segmentation fault in the function dbd_remove.\n     PR 53452. [<rebanerebane gmail com>, Reimo Rebane]\n\n  *) core: Functions to provide server load values: ap_get_sload() and\n     ap_get_loadavg(). [Jim Jagielski, Jan Kaluza <jkaluza redhat.com>,\n     Jeff Trawick]\n\n  *) mod_ldap: Fix regression in handling \"server unavailable\" errors on \n     Windows.  PR 54140.  [Eric Covener]\n \n  *) syslog logging: Remove stray \", referer\" at the end of some messages.\n     [Jeff Trawick]\n\n  *) \"Iterate\" directives: Report an error if no arguments are provided.\n     [Jeff Trawick]\n\n  *) mod_ssl: Change default for SSLCompression to off, as compression\n     causes security issues in most setups. (The so called \"CRIME\" attack).\n     [Stefan Fritsch]\n\n  *) ab: add TLS1.1/TLS1.2 options to -f switch, and adapt output\n     to more accurately report the negotiated protocol. PR 53916.\n     [Nicol\u00e1s Pernas Maradei <nico emutex com>, Kaspar Brand]\n\n  *) core: ErrorDocument now works for requests without a Host header.\n     PR 48357.  [Jeff Trawick]\n\n  *) prefork: Avoid logging harmless errors during graceful stop.\n     [Joe Orton, Jeff Trawick]\n\n  *) mod_proxy: When concatting for PPR, avoid cases where we\n     concat \".../\" and \"/...\" to create \"...//...\" [Jim Jagielski]\n\n  *) mod_cache: Wrong content type and character set when\n     mod_cache serves stale content because of a proxy error. \n     PR 53539.  [Rainer Jung, Ruediger Pluem]\n\n  *) mod_proxy_ajp: Fix crash in packet dump code when logging\n     with LogLevel trace7 or trace8.  PR 53730.  [Rainer Jung]\n\n  *) httpd.conf: Removed the configuration directives setting a bad_DNT\n     environment introduced in 2.4.3. The actual directives are commented\n     out in the default conf file.\n\n  *) core: Apply length limit when logging Status header values.\n     [Jeff Trawick, Chris Darroch]\n\n  *) mod_proxy_balancer: The nonce is only derived from the UUID iff\n     not set via the 'nonce' balancer param. [Jim Jagielski]\n\n  *) mod_ssl: Match wildcard SSL certificate names in proxy mode.  \n     PR 53006.  [Joe Orton]\n\n  *) Windows: Fix output of -M, -L, and similar command-line options\n     which display information about the server configuration.\n     [Jeff Trawick]\n\nChanges with Apache 2.4.3\n\n  *) SECURITY: CVE-2012-3502  (cve.mitre.org)\n     mod_proxy_ajp, mod_proxy_http: Fix an issue in back end\n     connection closing which could lead to privacy issues due\n     to a response mixup. PR 53727. [Rainer Jung]\n\n  *) SECURITY: CVE-2012-2687 (cve.mitre.org)\n     mod_negotiation: Escape filenames in variant list to prevent a\n     possible XSS for a site where untrusted users can upload files to\n     a location with MultiViews enabled. [Niels Heinen <heinenn google.com>]\n\n  *) mod_authnz_ldap: Don't try a potentially expensive nested groups\n     search before exhausting all AuthLDAPGroupAttribute checks on the\n     current group. PR 52464 [Eric Covener]\n\n  *) mod_lua: Add new directive LuaAuthzProvider to allow implementing an\n     authorization provider in lua. [Stefan Fritsch]\n\n  *) core: Be less strict when checking whether Content-Type is set to \n     \"application/x-www-form-urlencoded\" when parsing POST data, \n     or we risk losing data with an appended charset. PR 53698\n     [Petter Berntsen <petterb gmail.com>]\n\n  *) httpd.conf: Added configuration directives to set a bad_DNT environment\n     variable based on User-Agent and to remove the DNT header field from\n     incoming requests when a match occurs. This currently has the effect of\n     removing DNT from requests by MSIE 10.0 because it deliberately violates\n     the current specification of DNT semantics for HTTP. [Roy T. Fielding]\n\n  *) mod_socache_shmcb: Fix bus error due to a misalignment\n     in some 32 bit builds, especially on Solaris Sparc.\n     PR 53040.  [Rainer Jung]\n\n  *) mod_cache: Set content type in case we return stale content.\n     [Ruediger Pluem]\n\n  *) Windows: Fix SSL failures on windows with AcceptFilter https none.\n     PR 52476.  [Jeff Trawick]\n\n  *) ab: Fix read failure when targeting SSL server.  [Jeff Trawick]\n\n  *) The following now respect DefaultRuntimeDir/DEFAULT_REL_RUNTIMEDIR:\n     - mod_auth_digest: shared memory file\n     [Jeff Trawick]\n\n  *) htpasswd: Use correct file mode for checking if file is writable.\n     PR 45923. [Stefan Fritsch]\n\n  *) mod_rewrite: Fix crash with dbd RewriteMaps. PR 53663. [Mikhail T.\n     <mi apache aldan algebra com>]\n\n  *) mod_ssl: Add new directive SSLCompression to disable TLS-level\n     compression. PR 53219. [Bj\u00f6rn Jacke <bjoern j3e de>, Stefan Fritsch]\n\n  *) mod_lua: Add a few missing request_rec fields. Rename remote_ip to\n     client_ip to match conn_rec. [Stefan Fritsch]\n\n  *) mod_lua: Change prototype of vm_construct, to work around gcc bug which\n     causes a segfault. PR 52779. [Dick Snippe <Dick Snippe tech omroep nl>]\n\n  *) mpm_event: Don't count connections in lingering close state when\n     calculating how many additional connections may be accepted.\n     [Stefan Fritsch]\n\n  *) mod_ssl: If exiting during initialization because of a fatal error,\n     log a message to the main error log pointing to the appropriate\n     virtual host error log. [Stefan Fritsch]\n\n  *) mod_proxy_ajp: Reduce memory usage in case of many keep-alive requests on\n     one connection. PR 52275. [Naohiro Ooiwa <naohiro ooiwa miraclelinux com>]\n\n  *) mod_proxy_balancer: Restore balancing after a failed worker has\n     recovered when using lbmethod_bybusyness.  PR 48735.  [Jeff Trawick]\n\n  *) mod_setenvif: Compile some global regex only once during startup.\n     This should save some memory, especially with .htaccess.\n     [Stefan Fritsch]\n\n  *) core: Add the port number to the vhost's name in the scoreboard.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Fix ProxyPassReverse for balancer configurations.\n     PR 45434.  [Joe Orton]\n\n  *) mod_lua: Add the parsebody function for parsing POST data. PR 53064.\n     [Daniel Gruno]\n\n  *) apxs: Use LDFLAGS from config_vars.mk in addition to CFLAGS and CPPFLAGS.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Fix memory leak or possible corruption in ProxyBlock\n     implementation.  [Ruediger Pluem, Joe Orton]\n\n  *) mod_proxy: Check hostname from request URI against ProxyBlock list,\n     not forward proxy, if ProxyRemote* is configured.  [Joe Orton]\n\n  *) mod_proxy_connect: Avoid DNS lookup on hostname from request URI \n     if ProxyRemote* is configured.  PR 43697.  [Joe Orton]\n\n  *) mpm_event, mpm_worker: Remain active amidst prevalent child process\n     resource shortages.  [Jeff Trawick]\n\n  *) Add \"strict\" and \"warnings\" pragmas to Perl scripts.  [Rich Bowen]\n\n  *) The following now respect DefaultRuntimeDir/DEFAULT_REL_RUNTIMEDIR:\n     - core: the scoreboard (ScoreBoardFile), pid file (PidFile), and\n       mutexes (Mutex)\n     [Jim Jagielski]\n\n  *) ab: Fix bind() errors.  [Joe Orton]\n\n  *) mpm_event: Don't do a blocking write when starting a lingering close\n     from the listener thread. PR 52229. [Stefan Fritsch]\n\n  *) mod_so: If a filename without slashes is specified for LoadFile or\n     LoadModule and the file cannot be found in the server root directory,\n     try to use the standard dlopen() search path. [Stefan Fritsch]\n\n  *) mpm_event, mpm_worker: Fix cases where the spawn rate wasn't reduced\n     after child process resource shortages.  [Jeff Trawick]\n\n  *) mpm_prefork: Reduce spawn rate after a child process exits due to\n     unexpected poll or accept failure.  [Jeff Trawick]\n\n  *) core: Log value of Status header line in script responses rather\n     than the fixed header name.  [Chris Darroch]\n\n  *) mod_ssl: Fix handling of empty response from OCSP server.\n     [Jim Meyering <meyering redhat.com>, Joe Orton]\n\n  *) mpm_event: Fix handling of MaxConnectionsPerChild. [Stefan Fritsch]\n\n  *) mod_authz_core: If an expression in \"Require expr\" returns denied and\n     references %{REMOTE_USER}, trigger authentication and retry. PR 52892.\n     [Stefan Fritsch]\n\n  *) core: Always log if LimitRequestFieldSize triggers.  [Stefan Fritsch]\n\n  *) mod_deflate: Skip compression if compression is enabled at SSL level.\n     [Stefan Fritsch]\n\n  *) core: Add missing HTTP status codes registered with IANA.\n     [Julian Reschke <julian.reschke gmx.de>, Rainer Jung]\n\n  *) mod_ldap: Treat the \"server unavailable\" condition as a transient\n     error with all LDAP SDKs.  [Filip Valder <filip.valder vsb.cz>]\n\n  *) core: Fix spurious \"not allowed here\" error returned when the Options \n     directive is used in .htaccess and \"AllowOverride Options\" (with no \n     specific options restricted) is configured.  PR 53444. [Eric Covener]\n\n  *) mod_authz_core: Fix parsing of Require arguments in <AuthzProviderAlias>.\n     PR 53048. [Stefan Fritsch]\n\n  *) mod_log_config: Fix %{abc}C truncating cookie values at first \"=\".\n     PR 53104. [Greg Ames]\n\n  *) mod_ext_filter: Fix error_log spam when input filters are configured.  \n     [Joe Orton]\n\n  *) mod_rewrite: Add \"AllowAnyURI\" option. PR 52774. [Joe Orton]\n\n  *) htdbm, htpasswd: Don't crash if crypt() fails (e.g. with FIPS enabled). \n     [Paul Wouters <pwouters redhat.com>, Joe Orton]\n\n  *) core: Use a TLS 1.0 close_notify alert for internal dummy connection if\n     the chosen listener is configured for https. [Joe Orton]\n\n  *) mod_proxy: Use the the same hostname for SNI as for the HTTP request when\n     forwarding to SSL backends. PR 53134.\n     [Michael Weiser <michael weiser.dinsnail.net>, Ruediger Pluem]\n\n  *) mod_info: Display all registered providers. [Stefan Fritsch]\n\n  *) mod_ssl: Send the error message for speaking http to an https port using\n     HTTP/1.0 instead of HTTP/0.9, and omit the link that may be wrong when\n     using SNI. PR 50823. [Stefan Fritsch]\n\n  *) core: Fix segfault in logging if r->useragent_addr or c->client_addr is\n     unset. PR 53265. [Stefan Fritsch]\n\n  *) log_server_status: Bring Perl style forward to the present, use\n     standard modules, update for new format of server-status output.\n     PR 45424. [Richard Bowen, Dave Brondsema, and others]\n\n  *) mod_sed, mod_log_debug, mod_rewrite: Symbol namespace cleanups. \n     [Joe Orton, Andr\u00e9 Malo]\n\n  *) core: Prevent \"httpd -k restart\" from killing server in presence of\n     config error. [Joe Orton]\n\n  *) mod_proxy_fcgi: If there is an error reading the headers from the\n     backend, send an error to the client. PR 52879. [Stefan Fritsch]\n\nChanges with Apache 2.4.2\n\n  *) SECURITY: CVE-2012-0883 (cve.mitre.org)\n     envvars: Fix insecure handling of LD_LIBRARY_PATH that could lead to the\n     current working directory to be searched for DSOs. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Honor DefaultRuntimeDir [Jim Jagielski]\n\n  *) mod_ssl: Fix crash with threaded MPMs due to race condition when\n     initializing EC temporary keys. [Stefan Fritsch]\n\n  *) mod_rewrite: Fix RewriteCond integer checks to be parsed correctly.\n     PR 53023. [Axel Reinhold <apache freakout.de>, Andr\u00e9 Malo]\n\n  *) mod_proxy: Add the forcerecovery balancer parameter that determines if\n     recovery for balancer workers is enforced. [Ruediger Pluem]\n\n  *) Fix MPM DSO load failure on AIX.  [Jeff Trawick]\n\n  *) mod_proxy: Correctly set up reverse proxy worker. PR 52935.\n     [Petter Berntsen <petterb gmail.com>]\n\n  *) mod_sed: Don't define PATH_MAX to a potentially undefined value, causing\n     compile problems on GNU hurd. [Stefan Fritsch]\n\n  *) core: Add ap_runtime_dir_relative() and DefaultRuntimeDir.\n     [Jeff Trawick]\n\n  *) core: Fix breakage of Listen directives with MPMs that use a\n     per-directory config. PR 52904. [Stefan Fritsch]\n\n  *) core: Disallow directives in AllowOverrideList which are only allowed\n     in VirtualHost or server context. These are usually not prepared to be\n     called in .htaccess files. [Stefan Fritsch]\n\n  *) core: In AllowOverrideList, do not allow 'None' together with other\n     directives. PR 52823. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Support DEFAULT_REL_RUNTIMEDIR for file-based shm.\n     [Jim Jagielski]\n\n  *) core: Fix merging of AllowOverrideList and ContentDigest.\n     [Stefan Fritsch]\n\n  *) mod_request: Fix validation of the KeptBodySize argument so it\n     doesn't always throw a configuration error. PR 52981 [Eric Covener]\n\n  *) core: Add filesystem paths to access denied / access failed messages\n     AH00035 and AH00036. [Eric Covener]\n\n  *) mod_dumpio: Properly handle errors from subsequent input filters.\n     PR 52914. [Stefan Fritsch]\n\n  *) Unix MPMs: Fix small memory leak in parent process if connect()\n     failed when waking up children.  [Joe Orton]\n\n  *) \"DirectoryIndex disabled\" now undoes DirectoryIndex settings in\n     the current configuration section, not just previous config sections.\n     PR 52845. [Eric Covener]\n\n  *) mod_xml2enc: Fix broken handling of EOS buckets which could lead to\n     response headers not being sent. PR 52766. [Stefan Fritsch]\n\n  *) mod_ssl: Properly free the GENERAL_NAMEs. PR 32652. [Kaspar Brand]\n\n  *) core: Check during config test that directories for the access\n     logs actually exist. PR 29941. [Stefan Fritsch]\n\n  *) mod_xml2enc, mod_proxy_html: Enable per-module loglevels.\n     [Stefan Fritsch]\n\n  *) mod_filter: Fix segfault with AddOutputFilterByType. PR 52755.\n     [Stefan Fritsch]\n\n  *) mod_session: Sessions are encoded as application/x-www-form-urlencoded\n     strings, however we do not handle the encoding of spaces properly.\n     Fixed. [Graham Leggett]\n\n  *) Configuration: Example in comment should use a path consistent\n     with the default configuration. PR 52715.\n     [Rich Bowen, Jens Schleusener, Rainer Jung]\n\n  *) Configuration: Switch documentation links from trunk to 2.4.\n     [Rainer Jung]\n\n  *) configure: Fix out of tree build using apr and apr-util in srclib.\n     [Rainer Jung]\n\nChanges with Apache 2.4.1\n\n  *) SECURITY: CVE-2012-0053 (cve.mitre.org)\n     Fix an issue in error responses that could expose \"httpOnly\" cookies\n     when no custom ErrorDocument is specified for status code 400.  \n     [Eric Covener]\n\n  *) mod_proxy_balancer: Fix crash on Windows. PR 52402 [Mladen Turk]\n\n  *) core: Check during configtest that the directories for error logs exist.\n     PR 29941 [Stefan Fritsch]\n\n  *) Core configuration: add AllowOverride option to treat syntax\n     errors in .htaccess as non-fatal. PR 52439 [Nick Kew, Jim Jagielski]\n\n  *) core: Fix memory consumption in core output filter with streaming\n     bucket types like CGI or PIPE.  [Joe Orton, Stefan Fritsch]\n\n  *) configure: Disable modules at configure time if a prerequisite module\n     is not enabled. PR 52487. [Stefan Fritsch]\n\n  *) Rewrite and proxy now decline what they don't support rather\n     than fail the request. [Joe Orton]\n\n  *) Fix building against external apr plus apr-util if apr is not installed\n     in a system default path. [Rainer Jung]\n\n  *) Doxygen fixes and improvements. [Joe Orton, Igor Gali\u0107]\n\n  *) core: Fix building against PCRE 8.30 by switching from the obsolete\n     pcre_info() to pcre_fullinfo(). PR 52623 [Ruediger Pluem, Rainer Jung]\n\nChanges with Apache 2.4.0\n\n  *) SECURITY: CVE-2012-0031 (cve.mitre.org)\n     Fix scoreboard issue which could allow an unprivileged child process\n     to cause the parent to crash at shutdown rather than terminate\n     cleanly.  [Joe Orton]\n\n  *) mod_ssl: Fix compilation with xlc on AIX. PR 52394. [Stefan Fritsch]\n\n  *) SECURITY: CVE-2012-0021 (cve.mitre.org)\n     mod_log_config: Fix segfault (crash) when the '%{cookiename}C' log format\n     string is in use and a client sends a nameless, valueless cookie, causing\n     a denial of service. The issue existed since version 2.2.17 and 2.3.3.\n     PR 52256.  [Rainer Canavan <rainer-apache 7val com>]\n\n  *) mod_ssl: when compiled against OpenSSL 1.0.1 or later, allow explicit\n     control of TLSv1.1 and TLSv1.2 through the SSLProtocol directive.\n     [Kaspar Brand]\n\n  *) mod_ssl: set OPENSSL_NO_SSL_INTERN when compiling against OpenSSL 1.0.1\n     or later, to improve binary compatibility with future OpenSSL releases.\n     [Kaspar Brand]\n\n  *) mod_mime: Don't arbitrarily bypass AddOutputFilter during a ProxyPass,\n     but then allow AddOutputFilter during a RewriteRule [P]. Make mod_mime\n     behave identically in both cases. PR52342. [Graham Leggett]\n\n  *) Move ab, logresolve, httxt2dbm and apxs to bin from sbin, along with\n     corresponding man pages. [Graham Leggett]\n\n  *) Distinguish properly between the bindir and sbindir directories when\n     installing binaries. Previously all binaries were silently installed to\n     sbindir, whether they were system administration commands or not.\n     [Graham Leggett]\n\nChanges with Apache 2.3.16\n\n  *) SECURITY: CVE-2011-4317 (cve.mitre.org)\n     Resolve additional cases of URL rewriting with ProxyPassMatch or\n     RewriteRule, where particular request-URIs could result in undesired\n     backend network exposure in some configurations.\n     [Joe Orton]\n\n  *) core: Limit line length in .htaccess to 8K like in 2.2.x, to avoid\n     additional DoS potential. [Stefan Fritsch]\n\n  *) core, all modules: Add unique tag to most error log messages. [Stefan\n     Fritsch]\n\n  *) mod_socache_memcache: Change provider name from \"mc\" to \"memcache\" to\n     match module name. [Stefan Fritsch]\n\n  *) mod_slotmem_shm: Change provider name from \"shared\" to \"shm\" to match\n     module name. [Stefan Fritsch]\n\n  *) mod_ldap: Fix segfault with Solaris LDAP when enabling ldaps. This\n     requires an apr-util fix in which is available in apr-util >= 1.4.0.\n     PR 42682. [Stefan Fritsch]\n\n  *) mod_rewrite: Add the AllowNoSlash RewriteOption, which makes it possible\n     for RewriteRules to be placed in .htaccess files that match the directory\n     with no trailing slash. PR 48304.\n     [Matthew Byng-Maddick <matthew byng-maddick bbc.co.uk>]\n\n  *) mod_session_crypto: Add a SessionCryptoPassphraseFile directive so that\n     the administrator can hide the keys from the configuration. [Graham\n     Leggett]\n\n  *) Introduce a per request version of the remote IP address, which can be\n     optionally modified by a module when the effective IP of the client\n     is not the same as the real IP of the client (such as a load balancer).\n     Introduce a per connection \"peer_ip\" and a per request \"client_ip\" to\n     distinguish between the raw IP address of the connection and the effective\n     IP address of the request. [Graham Leggett]\n\n  *) ap_pass_brigade_fchk() function added. [Jim Jagielski]\n\n  *) core: Pass ap_errorlog_info struct to error log hook. [Stefan Fritsch]\n\n  *) mod_cache_disk: Make sure we check return codes on all writes and\n     attempts to close, and clean up after ourselves in these cases.\n     PR43589. [Graham Leggett]\n\n  *) mod_cache_disk: Remove the unnecessary intermediate brigade while\n     writing to disk. Fixes a problem where mod_disk_cache was leaving\n     buckets in the intermediate brigade and not passing them to out on\n     exit. [Florian S. <f_los_ch yahoo.com>, Graham Leggett]\n\n  *) mod_ssl: use a shorter setting for SSLCipherSuite in the default\n     default configuration file, and add some more information about\n     configuring a speed-optimized alternative.\n     [Kaspar Brand]\n\n  *) mod_ssl: drop support for the SSLv2 protocol. [Kaspar Brand]\n\n  *) mod_lua: Stop losing track of all but the most specific LuaHook* directives\n     when multiple per-directory config sections are used.  Adds LuaInherit \n     directive to control how parent sections are merged.  [Eric Covener]\n\n  *) Server directive display (-L): Include directives of DSOs.\n     [Jeff Trawick]\n\n  *) mod_cache: Make sure we merge headers correctly when we handle a\n     non cacheable conditional response. PR52120. [Graham Leggett]\n\n  *) Pre GA removal of components that will not be included:\n     - mod_noloris was superseded by mod_reqtimeout\n     - mod_serf\n     - mpm_simple\n     [Rainer Jung]\n\n  *) core: Set MaxMemFree 2048 by default. [Stefan Fritsch]\n\n  *) mpm_event: Fix assertion failure during very high load. [Stefan Fritsch]\n\n  *) configure: Additional modules loaded by default: mod_headers.\n     Modules moved from module set \"few\" to \"most\" and no longer loaded\n     by default: mod_actions, mod_allowmethods, mod_auth_form, mod_buffer,\n     mod_cgi(d), mod_include, mod_negotiation, mod_ratelimit, mod_request,\n     mod_userdir. [Rainer Jung]\n\n  *) mod_lua: Use the right lua scope when used as a hook. [Rainer Jung]\n\n  *) configure: Only load the really imporant modules (i.e. those enabled by\n     the 'few' selection) by default. Don't handle modules enabled with\n     --enable-foo specially. [Stefan Fritsch]\n\n  *) end-generation hook: Fix false notification of end-of-generation for\n     temporary intervals with no active MPM children.  [Jeff Trawick]\n\n  *) mod_ssl: Add support for configuring persistent TLS session ticket\n     encryption/decryption keys (useful for clustered environments).\n     [Paul Querna, Kaspar Brand]\n\n  *) mod_usertrack: Use random value instead of remote IP address.\n     [Stefan Fritsch]\n\nChanges with Apache 2.3.15\n\n  *) SECURITY: CVE-2011-3348 (cve.mitre.org)\n     mod_proxy_ajp: Respond with HTTP_NOT_IMPLEMENTED when the method is not\n     recognized.  [Jean-Frederic Clere]\n\n  *) SECURITY: CVE-2011-3192 (cve.mitre.org)\n     core: Fix handling of byte-range requests to use less memory, to avoid\n     denial of service. If the sum of all ranges in a request is larger than\n     the original file, ignore the ranges and send the complete file.\n     PR 51714. [Stefan Fritsch, Jim Jagielski, Ruediger Pluem, Eric Covener,\n     <lowprio20 gmail.com>]\n\n  *) SECURITY: CVE-2011-3607 (cve.mitre.org)\n     core: Fix integer overflow in ap_pregsub. This can be triggered e.g.\n     with mod_setenvif via a malicious .htaccess. [Stefan Fritsch]\n\n  *) SECURITY: CVE-2011-3368 (cve.mitre.org)\n     Reject requests where the request-URI does not match the HTTP\n     specification, preventing unexpected expansion of target URLs in\n     some reverse proxy configurations.  [Joe Orton]\n\n  *) configure: Load all modules in the generated default configuration\n     when using --enable-load-all-modules. [Rainer Jung]\n\n  *) mod_reqtimeout: Change the default to set some reasonable timeout\n     values. [Stefan Fritsch]\n\n  *) core, mod_dav_fs: Change default ETag to be \"size mtime\", i.e. remove\n     the inode. PR 49623. [Stefan Fritsch]\n\n  *) mod_lua: Expose SSL variables via r:ssl_var_lookup().  [Eric Covener]\n\n  *) mod_lua: LuaHook{AccessChecker,AuthChecker,CheckUserID,TranslateName}\n     can now additionally be run as \"early\" or \"late\" relative to other modules.\n     [Eric Covener]\n\n  *) configure: By default, only load those modules that are either required\n     or explicitly selected by a configure --enable-foo argument. The\n     LoadModule statements for modules enabled by --enable-mods-shared=most\n     and friends will be commented out. [Stefan Fritsch]\n\n  *) mod_lua: Prevent early Lua hooks (LuaHookTranslateName and \n     LuaHookQuickHandler) from being configured in <Directory>, <Files>, \n     and htaccess where the configuration would have been ignored.\n     [Eric Covener]\n\n  *) mod_lua: Resolve \"attempt to index local 'r' (a userdata value)\" errors\n     in LuaMapHandler scripts [Eric Covener]\n\n  *) mod_log_debug: Rename optional argument from if= to expr=, to be more\n     in line with other config directives. [Stefan Fritsch]\n\n  *) mod_headers: Require an expression to be specified with expr=, to be more\n     in line with other config directives. [Stefan Fritsch]\n\n  *) mod_substitute: To prevent overboarding memory usage, limit line length\n     to 1MB. [Stefan Fritsch]\n\n  *) mod_lua: Make the query string (r.args) writable. [Eric Covener]\n\n  *) mod_include: Add support for application/x-www-form-urlencoded encoding\n     and decoding. [Graham Leggett]\n\n  *) rotatelogs: Add -c option to force logfile creation in every rotation \n     interval, even if empty.  [Jan Kalu\u017ea <jkaluza redhat.com>]\n \n  *) core: Limit ap_pregsub() to 64K, add ap_pregsub_ex() for longer strings.\n     [Stefan Fritsch]\n\n  *) mod_session_crypto: Refactor to support the new apr_crypto API.\n     [Graham Leggett]\n\n  *) http: Add missing Location header if local URL-path is used as\n     ErrorDocument for 30x. [Stefan Fritsch]\n\n  *) mod_buffer: Make sure we step down for subrequests, but not for internal\n     redirects triggered by mod_rewrite. [Graham Leggett]\n\n  *) mod_lua: add r:construct_url as a wrapper for ap_construct_url.\n     [Eric Covener]\n \n  *) mod_remote_ip: Fix configuration of internal proxies. PR 49272.\n     [Jim Riggs <jim riggs me>]\n\n  *) mpm_winnt: Handle AcceptFilter 'none' mode correctly; resolve specific\n     server IP endpoint and remote client IP upon connection.  [William Rowe]\n\n  *) mod_setenvif: Remove OID match which is obsoleted by SetEnvIfExpr with\n     PeerExtList(). [Stefan Fritsch]\n\n  *) mpm_prefork, mpm_worker, mpm_event: If a child is created just before\n     graceful restart and then exits because of a missing lock file, don't\n     shutdown the whole server. PR 39311. [Shawn Michael\n     <smichael rightnow com>]\n\n  *) mpm_event: Check the return value from ap_run_create_connection.\n     PR: 41194. [Davi Arnaut]\n\n  *) mod_mime_magic: Add signatures for PNG and SWF to the example config.\n     PR: 48352. [Jeremy Wagner-Kaiser <jwagner-kaiser adknowledge com>]\n\n  *) core, unixd: Add -D DUMP_RUN_CFG option to dump some configuration items\n     from the parsed (or default) config. This is useful for init scripts that\n     need to setup temporary directories and permissions. [Stefan Fritsch]\n\n  *) core, mod_actions, mod_asis: Downgrade error log messages which accompany\n     a 404 request status from loglevel error to info. PR: 35768. [Stefan\n     Fritsch]\n\n  *) core: Fix hook sorting with Perl modules. PR: 45076. [Torsten Foertsch\n     <torsten foertsch gmx net>]\n\n  *) core: Enforce LimitRequestFieldSize after multiple headers with the same\n     name have been merged. [Stefan Fritsch]\n\n  *) mod_ssl: If MaxMemFree is set, ask OpenSSL >= 1.0.0 to reduce memory\n     usage.  PR 51618. [Cristian Rodr\u00edguez <crrodriguez opensuse org>,\n     Stefan Fritsch]\n\n  *) mod_ssl: At startup, when checking a server certificate whether it\n     matches the configured ServerName, also take dNSName entries in the\n     subjectAltName extension into account. PR 32652, PR 47051. [Kaspar Brand]\n\n  *) mod_substitute: Reduce memory usage and copying of data. PR 50559.\n     [Stefan Fritsch]\n\n  *) mod_ssl/proxy: enable the SNI extension for backend TLS connections\n     [Kaspar Brand]\n\n  *) Add wrappers for malloc, calloc, realloc that check for out of memory\n     situations and use them in many places. PR 51568, PR 51569, PR 51571.\n     [Stefan Fritsch]\n\n  *) Fix cross-compilation of mod_cgi/mod_cgid when APR_HAVE_STRUCT_RLIMIT is \n     false but RLIMIT_* are defined.  PR51371. [Eric Covener]\n\n  *) core: Correctly obey ServerName / ServerAlias if the Host header from the\n     request matches the VirtualHost address.\n     PR 51709. [Micha Lenk <micha lenk.info>]\n\n  *) mod_unique_id: Use random number generator to initialize counter.\n     PR 45110. [Stefan Fritsch]\n\n  *) core: Add convenience API for apr_random. [Stefan Fritsch]\n\n  *) core: Add MaxRangeOverlaps and MaxRangeReversals directives to control\n     the number of overlapping and reversing ranges (respectively) permitted\n     before returning the entire resource, with a default limit of 20.\n     [Jim Jagielski]\n\n  *) mod_ldap: Optional function uldap_ssl_supported(r) always returned false\n     if called from a virtual host with mod_ldap directives in it.  Did not\n     affect mod_authnz_ldap's usage of mod_ldap.  [Eric Covener]\n\n  *) mod_filter: Instead of dropping the Accept-Ranges header when a filter\n     registered with AP_FILTER_PROTO_NO_BYTERANGE is present,\n     set the header value to \"none\". [Eric Covener, Ruediger Pluem]\n\n  *) core: Allow MaxRanges none|unlimited|default and set 'Accept-Ranges: none'\n     in the case Ranges are being ignored with MaxRanges none.\n     [Eric Covener]\n\n  *) mod_ssl: revamp CRL-based revocation checking when validating\n     certificates of clients or proxied servers. Completely delegate\n     CRL processing to OpenSSL, and add a new [Proxy]CARevocationCheck\n     directive for controlling the revocation checking mode. [Kaspar Brand]\n\n  *) core: Add MaxRanges directive to control the number of ranges permitted\n     before returning the entire resource, with a default limit of 200.\n     [Eric Covener]\n\n  *) mod_cache: Ensure that CacheDisable can correctly appear within\n     a LocationMatch. [Graham Leggett]\n\n  *) mod_cache: Fix the moving of the CACHE filter, which erroneously\n     stood down if the original filter was not added by configuration.\n     [Graham Leggett]\n\n  *) mod_ssl: improve certificate error logging. PR 47408. [Kaspar Brand]\n\n  *) mod_authz_groupfile: Increase length limit of lines in the group file to\n     16MB. PR 43084. [Stefan Fritsch]\n\n  *) core: Increase length limit of lines in the configuration file to 16MB.\n     PR 45888. PR 50824. [Stefan Fritsch]\n\n  *) core: Add API for resizable buffers. [Stefan Fritsch]\n\n  *) mod_ldap: Enable LDAPConnectionTimeout for LDAP toolkits that have\n     LDAP_OPT_CONNECT_TIMEOUT instead of LDAP_OPT_NETWORK_TIMEOUT, such\n     as Tivoli Directory Server 6.3 and later. [Eric Covener]\n\n  *) mod_ldap: Change default number of retries from 10 to 3, and add\n     an LDAPRetries and LDAPRetryDelay directives. [Eric Covener]\n\n  *) mod_authnz_ldap: Don't retry during authentication, because this just\n     multiplies the ample retries already being done by mod_ldap. [Eric Covener]\n\n  *) configure: Allow to explicitly disable modules even with module selection\n     'reallyall'. [Stefan Fritsch]\n\n  *) mod_rewrite: Check validity of each internal (int:) RewriteMap even if the\n     RewriteEngine is disabled in server context, avoiding a crash while\n     referencing the invalid int: map at runtime. PR 50994.\n     [Ben Noordhuis <info noordhuis nl>]\n\n  *) mod_ssl, configure: require OpenSSL 0.9.7 or later. [Kaspar Brand]\n\n  *) mod_ssl: remove ssl_toolkit_compat layer. [Kaspar Brand]\n\n  *) mod_ssl, configure, ab: drop support for RSA BSAFE SSL-C toolkit.\n     [Kaspar Brand]\n\n  *) mod_usertrack: Run mod_usertrack earlier in the fixups hook to ensure the\n     cookie is set when modules such as mod_rewrite trigger a redirect. Also\n     use r->err_headers_out for the cookie, for the same reason.  PR29755.\n     [Sami J. M\u00e4kinen <sjm almamedia fi>, Eric Covener]\n\n  *) mod_proxy_http, mod_proxy_connect: Add 'proxy-status' and\n     'proxy-source-port' request notes for logging. PR 30195. [Stefan Fritsch]\n\n  *) configure: Enable ldap modules in 'all' and 'most' selections if ldap\n     is compiled into apr-util. [Stefan Fritsch]\n\n  *) core: Add ap_check_cmd_context()-check if a command is executed in\n     .htaccess file. [Stefan Fritsch]\n\n  *) mod_deflate: Fix endless loop if first bucket is metadata. PR 51590.\n     [Torsten Foertsch <torsten foertsch gmx net>]\n\n  *) mod_authn_socache: Fix to work in .htaccess if not configured anywhere\n     in httpd.conf, and introduce an AuthnCacheEnable directive.\n     PR 51991 [Nick Kew]\n\n  *) mod_xml2enc: new (formerly third-party) module supporting\n     internationalisation for filters via smart charset sniffing\n     and conversion. [Nick Kew]\n\n  *) mod_proxy_html: new (formerly third-party) module to fix up\n     HTML links in a reverse proxy situation, where a backend\n     generates URLs that are not resolvable by Clients. [Nick Kew]\n\nChanges with Apache 2.3.14\n\n  *) mod_proxy_ajp: Improve trace logging.  [Rainer Jung]\n\n  *) mod_proxy_ajp: Respect \"reuse\" flag in END_REPONSE packets.\n     [Rainer Jung]\n\n  *) mod_proxy: enable absolute URLs to be rewritten with ProxyPassReverse,\n     e.g. to reverse proxy \"Location: https://other-internal-server/login\"\n     [Nick Kew]\n\n  *) prefork, worker, event: Make sure crashes are logged to the error log if\n     httpd has already detached from the console. [Stefan Fritsch]\n\n  *) prefork, worker, event: Reduce period during startup/restart where a\n     successive signal may be lost. PR 43696. [Arun Bhalla <arun shme net>]\n\n  *) mod_allowmethods: Correct Merging of \"reset\" and do not allow an\n     empty parameter list for the AllowMethods directive. [Rainer Jung]\n\n  *) configure: Update selection of modules for 'all' and 'most'. 'all' will\n     now enable all modules except for example and test modules. Make the\n     selection for 'most' more useful (including ssl and proxy). Both 'all'\n     and 'most' will now disable modules if dependencies are missing instead\n     of aborting. If a specific module is requested with --enable-XXX=yes,\n     missing dependencies will still cause configure to exit with an error.\n     [Stefan Fritsch]\n\n  *) mod_ldap: Revert the integration of apr-ldap as ap_ldap which was done\n     in 2.3.13. [Stefan Fritsch]\n\n  *) core: For '*' or '_default_' vhosts, use a wildcard address of any\n     address family, rather than IPv4 only.  [Joe Orton]\n\n  *) core, mod_rewrite, mod_ssl, mod_nw_ssl: Make the SERVER_NAME variable\n     include [ ] for literal IPv6 addresses, as mandated by RFC 3875.\n     PR 26005. [Stefan Fritsch]\n\n  *) mod_negotiation: Fix parsing of Content-Length in type maps. PR 42203.\n     [Nagae Hidetake <nagae eagan jp>]\n\n  *) core: Add more logging to ap_scan_script_header_err* functions. Add\n     ap_scan_script_header_err*_ex functions that take a module index for\n     logging.\n     mod_cgi, mod_cgid, mod_proxy_fcgi, mod_proxy_scgi, mod_isapi: Use the\n     new functions in order to make logging configurable per-module.\n     [Stefan Fritsch]\n\n  *) mod_dir: Add DirectoryIndexRedirect to send an external redirect to\n     the proper index.  [Eric Covener]\n\n  *) mod_deflate: Don't try to compress requests with a zero sized body.\n     PR 51350. [Stefan Fritsch]\n\n  *) core: Fix startup on IPv6-only systems. PR 50592. [Joe Orton,\n     <root linkage white-void net>]\n\n  *) suexec: Add environment variables CONTEXT_DOCUMENT_ROOT, CONTEXT_PREFIX,\n     REDIRECT_ERROR_NOTES, REDIRECT_SCRIPT_FILENAME, REQUEST_SCHEME to the\n     whitelist in suexec. PR 51499. [Graham Laverty <graham reg ca>,\n     Stefan Fritsch]\n\n  *) mod_rewrite: Fix regexp RewriteCond with NoCase. [Stefan Fritsch]\n\n  *) mod_log_debug: New module that allows to log custom messages at various\n     phases in the request processing. [Stefan Fritsch]\n\n  *) mod_ssl: Add some debug logging when loading server certificates.\n     PR 37912. [Nick Burch <nick burch alfresco com>]\n\n  *) configure: Support reallyall option also for --enable-mods-static.\n     [Rainer Jung]\n\n  *) mod_socache_dc: add --with-distcache to configure for choosing\n     the distcache installation directory. [Rainer Jung]\n\n  *) mod_socache_dc: use correct build variable MOD_SOCACHE_DC_LDADD\n     instead of MOD_SOCACHE_LDADD in build macro. [Rainer Jung]\n\n  *) mod_lua, mod_deflate: respect platform specific runpath linker\n     flag. [Rainer Jung]\n\n  *) configure: Only link the httpd binary against PCRE. No other support\n     binary needs PCRE. [Rainer Jung]\n\n  *) configure: tolerate dependency checking failures for modules if\n     they have been enabled implicitely. [Rainer Jung]\n\n  *) configure: Allow to specify module specific custom linker flags via\n     the MOD_XXX_LDADD variables. [Rainer Jung]\n\nChanges with Apache 2.3.13\n\n  *) ab: Support specifying the local address to use. PR 48930.\n     [Peter Schuller <scode spotify com>]\n\n  *) core: Add support to ErrorLogFormat for logging the system unique\n     thread id under Linux. [Stefan Fritsch]\n\n  *) event: New AsyncRequestWorkerFactor directive to influence how many\n     connections will be accepted per process. [Stefan Fritsch]\n\n  *) prefork, worker, event: Rename MaxClients to MaxRequestWorkers which\n     describes more accurately what it does. [Stefan Fritsch]\n\n  *) rotatelogs: Add -p argument to specify custom program to invoke\n     after a log rotation.  PR 51285. [Sven Ulland <sveniu ifi.uio.no>,\n     Joe Orton]\n\n  *) mod_ssl: Don't do OCSP checks for valid self-issued certs. [Kaspar Brand]\n\n  *) mod_ssl: Avoid unnecessary renegotiations with SSLVerifyDepth 0.\n     PR 48215. [Kaspar Brand]\n\n  *) mod_status: Display information about asynchronous connections in the\n     server-status. PR 44377. [Stefan Fritsch]\n\n  *) mpm_event: If the number of connections of a process is very high, or if\n     all workers are busy, don't accept new connections in that process.\n     [Stefan Fritsch]\n\n  *) mpm_event: Process lingering close asynchronously instead of tying up\n     worker threads. [Jeff Trawick, Stefan Fritsch]\n\n  *) mpm_event: If MaxMemFree is set, limit the number of pools that is kept\n     around. [Stefan Fritsch]\n\n  *) mpm_event: Fix graceful restart aborting connections. PR 43359.\n     [Takashi Sato <takashi lans-tv com>]\n\n  *) mod_ssl: Disable AECDH ciphers in example config. PR 51363.\n     [Rob Stradling <rob comodo com>]\n\n  *) core: Introduce new function ap_get_conn_socket() to access the socket of\n     a connection. [Stefan Fritsch]\n\n  *) mod_data: Introduce a filter to support RFC2397 data URLs. [Graham\n     Leggett]\n\n  *) mod_userdir/mod_alias/mod_vhost_alias: Correctly set DOCUMENT_ROOT,\n     CONTEXT_DOCUMENT_ROOT, CONTEXT_PREFIX. PR 26052. PR 46198.\n     [Stefan Fritsch]\n\n  *) core: Allow to override document_root on a per-request basis. Introduce\n     new context_document_root and context_prefix which provide information\n     about non-global URI-to-directory mappings (from e.g. mod_userdir or\n     mod_alias) to scripts. PR 49705. [Stefan Fritsch]\n\n  *) core: Add <ElseIf> and <Else> to complement <If> sections.\n     [Stefan Fritsch]\n\n  *) mod_ext_filter: Remove DebugLevel option in favor of per-module loglevel.\n     [Stefan Fritsch]\n\n  *) mod_include: Make the \"#if expr\" element use the new \"ap_expr\" expression\n     parser. The old parser can still be used by setting the new directive\n     SSILegacyExprParser. [Stefan Fritsch]\n\n  *) core: Add some features to ap_expr for use by mod_include: a restricted\n     mode that does not allow to bypass request access restrictions; new\n     variables DOCUMENT_URI (alias for REQUEST_URI), LAST_MODIFIED; -A as an\n     alias for -U; an additional data entry in ap_expr_eval_ctx_t for use by\n     the consumer; an extensible ap_expr_exec_ctx() API that allows to use that\n     data entry. [Stefan Fritsch]\n\n  *) mod_include: Merge directory configs instead of one SSI* config directive\n     causing all other per-directory SSI* config directives to be reset.\n     [Stefan Fritsch]\n\n  *) mod_charset_lite: Remove DebugLevel option in favour of per-module\n     loglevel. [Stefan Fritsch]\n\n  *) core: Add ap_regexec_len() function that works with non-null-terminated\n     strings. PR 51231. [Yehezkel Horowitz <horowity checkpoint com>]\n\n  *) mod_authnz_ldap: If the LDAP server returns constraint violation,\n     don't treat this as an error but as \"auth denied\". [Stefan Fritsch]\n\n  *) mod_proxy_fcgi|scgi: Add support for \"best guess\" of PATH_INFO\n     for SCGI/FCGI. PR 50880, 50851. [Mark Montague <mark catseye.org>,\n     Jim Jagielski]\n\n  *) mod_cache: When content is served stale, and there is no means to\n     revalidate the content using ETag or Last-Modified, and we have\n     mandated no stale-on-error behaviour, stand down and don't cache.\n     Saves a cache write that will never be read.\n     [Graham Leggett]\n\n  *) mod_reqtimeout: Fix a timed out connection going into the keep-alive\n     state after a timeout when discarding a request body. PR 51103.\n     [Stefan Fritsch]\n\n  *) core: Add various file existance test operators to ap_expr.\n     [Stefan Fritsch]\n\n  *) mod_proxy_express: New mass reverse-proxy switch extension for\n     mod_proxy. [Jim Jagielski]\n\n  *) configure: Fix script error when configuring module set \"reallyall\".\n     [Rainer Jung]\n\nChanges with Apache 2.3.12\n\n  *) configure, core: Provide easier support for APR's hook probe\n     capability. [Jim Jagielski, Jeff Trawick]\n\n  *) Silence autoconf 2.68 warnings.  [Rainer Jung]\n\n  *) mod_authnz_ldap: Resolve crash when LDAP is used for authorization only\n     [Scott Hill <shill genscape.com>]\n\n  *) support: Make sure check_forensic works with mod_unique_id loaded\n     [Joe Schaefer]\n\n  *) Add child_status hook for tracking creation/termination of MPM child\n     processes.  Add end_generation hook for notification when the last\n     MPM child of a generation exits. [Jeff Trawick]\n\n  *) mod_ldap: Make LDAPSharedCacheSize 0 create a non-shared-memory cache per\n     process as opposed to disabling caching completely. This allows to use\n     the non-shared-memory cache as a workaround for the shared memory cache\n     not being available during graceful restarts. PR 48958. [Stefan Fritsch]\n\n  *) Add new ap_reserve_module_slots/ap_reserve_module_slots_directive API,\n     necessary if a module (like mod_perl) registers additional modules late\n     in the startup phase. [Stefan Fritsch]\n\n  *) core: Prevent segfault if DYNAMIC_MODULE_LIMIT is reached. PR 51072.\n     [Torsten F\u00f6rtsch <torsten foertsch gmx net>]\n\n  *) WinNT MPM: Improve robustness under heavy load.  [Jeff Trawick]\n\n  *) MinGW build improvements.  PR 49535.  [John Vandenberg\n     <jayvdb gmail.com>, Jeff Trawick]\n\n  *) core: Support module names with colons in loglevel configuration.\n     [Torsten F\u00f6rtsch <torsten foertsch gmx net>]\n\n  *) mod_ssl, ab: Support OpenSSL compiled without SSLv2 support.\n     [Stefan Fritsch]\n\n  *) core: Abort if the MPM is changed across restart.  [Jeff Trawick]\n\n  *) mod_proxy_ajp: Add support for 'ProxyErrorOverride on'. PR 50945.\n     [Peter Pramberger <peter pramberger.at>, Jim Jagielski]\n\n  *) mod_proxy_fcgi: Add support for 'ProxyErrorOverride on'. PR 50913.\n     [Mark Montague <mark catseye.org>, Jim Jagielski]\n\n  *) core: Change the APIs of ap_cfg_getline() and ap_cfg_getc() to return an\n     error code. Abort with a nice error message if a config line is too long.\n     Partial fix for PR 50824. [Stefan Fritsch]\n\n  *) mod_info: Dump config to stdout during startup if -DDUMP_CONFIG is\n     specified. PR 31956. [Stefan Fritsch]\n\n  *) Restore visibility of DEFAULT_PIDLOG to core and modules.  MPM\n     helper function ap_remove_pid() added.  [Jeff Trawick]\n\n  *) Enable DEFAULT_REL_RUNTIMEDIR on Windows and NetWare.  [various]\n\n  *) Correct C++ incompatibility with http_log.h.  [Stefan Fritsch, Jeff\n     Trawick]\n\n  *) mod_log_config: Prevent segfault. PR 50861. [Torsten F\u00f6rtsch\n     <torsten.foertsch gmx.net>]\n\n  *) core: AllowEncodedSlashes new option NoDecode to allow encoded slashes\n     in request URL path info but not decode them. Change behavior of option\n     \"On\" to decode the encoded slashes as 2.0 and 2.2 do.  PR 35256,\n     PR 46830.  [Dan Poirier]\n\n  *) mod_ssl: Check SNI hostname against Host header case-insensitively.\n     PR 49491.  [Mayank Agrawal <magrawal.08 gmail.com>]\n\n  *) mod_ldap: Add LDAPConnectionPoolTTL to give control over lifetime\n     of bound backend LDAP connections.  PR47634 [Eric Covener]\n\n  *) mod_cache: Make CacheEnable and CacheDisable configurable per\n     directory in addition to per server, making them work from within\n     a LocationMatch. [Graham Leggett]\n\n  *) worker, event, prefork: Correct several issues when built as\n     DSOs; most notably, the scoreboard was reinitialized during graceful\n     restart, such that processes of the previous generation were not\n     observable.  [Jeff Trawick]\n\nChanges with Apache 2.3.11\n\n  *) mod_win32: Added shebang check for '! so that .vbs scripts work as CGI.\n     Win32's cscript interpreter can only use a single quote as comment char.\n     [Guenter Knauf]\n\n  *) mod_proxy: balancer-manager now uses POST instead of GET.\n     [Jim Jagielski]\n\n  *) core: new util function: ap_parse_form_data(). Previously,\n     this capability was tucked away in mod_request. [Jim Jagielski]\n\n  *) core: new hook: ap_run_pre_read_request. [Jim Jagielski]\n\n  *) modules: Fix many modules that were not correctly initializing if they\n     were not active during server startup but got enabled later during a\n     graceful restart. [Stefan Fritsch]\n\n  *) core: Create new ap_state_query function that allows modules to determine\n     if the current configuration run is the initial one at server startup,\n     and if the server is started for testing/config dumping only.\n     [Stefan Fritsch]\n\n  *) mod_proxy: Runtime configuration of many parameters for existing\n     balancers via the balancer-manager. [Jim Jagielski]\n\n  *) mod_proxy: Runtime addition of new workers (BalancerMember) for existing\n     balancers via the balancer-manager. [Jim Jagielski]\n\n  *) mod_cache: When a bad Expires date is present, we need to behave as if\n     the Expires is in the past, not as if the Expires is missing. PR 16521.\n     [Co-Advisor <coad measurement-factory.com>]\n\n  *) mod_cache: We must ignore quoted-string values that appear in a\n     Cache-Control header. PR 50199. [Graham Leggett]\n\n  *) mod_dav: Revert change to send 501 error if unknown Content-* header is\n    received for a PUT request. PR 42978. [Stefan Fritsch]\n\n  *) mod_cache: Respect s-maxage as described by RFC2616 14.9.3, which must\n     take precedence if present. PR 35247. [Graham Leggett]\n\n  *) mod_ssl: Fix a possible startup failure if multiple SSL vhosts\n     are configured with the same ServerName and private key file.\n     [Masahiro Matsuya <mmatsuya redhat.com>, Joe Orton]\n\n  *) mod_socache_dc: Make module compile by fixing some typos.\n     PR 50735 [Mark Montague <mark catseye.org>]\n\n  *) prefork: Update MPM state in children during a graceful stop or\n     restart.  PR 41743.  [Andrew Punch <andrew.punch 247realmedia.com>]\n\n  *) mod_mime: Ignore leading dots when looking for mime extensions.\n     PR 50434 [Stefan Fritsch]\n\n  *) core: Add support to set variables with the 'Define' directive. The\n     variables that can then be used in the config using the ${VAR} syntax\n     known from envvar interpolation. [Stefan Fritsch]\n\n  *) mod_proxy_http: make adding of X-Forwarded-* headers configurable.\n     ProxyAddHeaders defaults to On. [Vincent Deffontaines]\n\n  *) mod_slotmem_shm: Increase memory alignment for slotmem data.\n     [Rainer Jung]\n\n  *) mod_ssl: Add config options for OCSP: SSLOCSPResponderTimeout,\n     SSLOCSPResponseMaxAge, SSLOCSPResponseTimeSkew.\n     [Kaspar Brand <httpd-dev.2011 velox.ch>]\n\n  *) mod_ssl: Revamp output buffering to reduce network overhead for\n     output fragmented into many buckets, such as chunked HTTP responses.\n     [Joe Orton]\n\n  *) core: Apply <If> sections to all requests, not only to file base requests.\n     Allow to use <If> inside <Directory>, <Location>, and <Files> sections.\n     The merging of <If> sections now happens after the merging of <Location>\n     sections, even if an <If> section is embedded inside a <Directory> or\n     <Files> section.  [Stefan Fritsch]\n\n  *) mod_proxy: Refactor usage of shared data by dropping the scoreboard\n     and using slotmem. Create foundation for dynamic growth/changes of\n     members within a balancer. Remove BalancerNonce in favor of a\n     per-balancer 'nonce' parameter. [Jim Jagielski]\n\n  *) mod_status: Don't show slots which are disabled by MaxClients as open.\n     PR: 47022 [Jordi Prats <jordi prats gmail com>, Stefan Fritsch]\n\n  *) mpm_prefork: Fix ap_mpm_query results for AP_MPMQ_MAX_DAEMONS and\n     AP_MPMQ_MAX_THREADS.\n\n  *) mod_authz_core: Fix bug in merging logic if user-based and non-user-based\n     authorization directives were mixed. [Stefan Fritsch]\n\n  *) mod_authn_socache: change directive name from AuthnCacheProvider\n     to AuthnCacheProvideFor.  The term \"provider\" is overloaded in\n     this module, and we should avoid confusion between the provider\n     of a backend (AuthnCacheSOCache) and the authn provider(s) for\n     which this module provides cacheing (AuthnCacheProvideFor).\n     [Nick Kew]\n\n  *) mod_proxy_http: Allocate the fake backend request from a child pool\n     of the backend connection, instead of misusing the pool of the frontend\n     request. Fixes a thread safety issue where buckets set aside in the\n     backend connection leak into other threads, and then disappear when\n     the frontend request is cleaned up, in turn causing corrupted buckets\n     to make other threads spin. [Graham Leggett]\n\n  *) mod_ssl: Change the format of the SSL_{CLIENT,SERVER}_{I,S}_DN variables\n     to be RFC 2253 compatible, convert non-ASCII characters to UTF8, and\n     escape other special characters with backslashes. The old format can\n     still be used with the LegacyDNStringFormat argument to SSLOptions.\n\n  *) core, mod_rewrite: Make the REQUEST_SCHEME variable available to\n     scripts and mod_rewrite. [Stefan Fritsch]\n\n  *) mod_rewrite: Allow to use arbitrary boolean expressions (ap_expr) in\n     RewriteCond. [Stefan Fritsch]\n\n  *) mod_rewrite: Allow to unset environment variables using E=!VAR.\n     PR 49512. [Mark Drayton <mark markdrayton info>, Stefan Fritsch]\n\n  *) mod_headers: Restore the 2.3.8 and earlier default for the first\n     argument of the Header directive (\"onsuccess\").  [Eric Covener]\n\n  *) core: Disallow the mixing of relative and absolute Options PR 33708.\n     [S\u00f6nke Tesch <st kino-fahrplan.de>]\n\n  *) core: When exporting request headers to HTTP_* environment variables,\n     drop variables whose names contain invalid characters. Describe in the\n     docs how to restore the old behaviour. [Malte S. Stretz <mss apache org>]\n\n  *) core: When selecting an IP-based virtual host, favor an exact match for\n     the port over a wildcard (or omitted) port instead of favoring the one\n     that came first in the configuration file. [Eric Covener]\n\n  *) core: Overlapping virtual host address/port combinations  now implicitly\n     enable name-based virtual hosting for that address.  The NameVirtualHost\n     directive has no effect, and _default_ is interpreted the same as \"*\".\n     [Eric Covener]\n\n  *) core: In the absence of any Options directives, the default is now\n     \"FollowSymlinks\" instead of \"All\".  [Igor Gali\u0107]\n\n  *) rotatelogs: Add -e option to write logs through to stdout for optional\n     further processing. [Graham Leggett]\n\n  *) mod_ssl: Correctly read full lines in input filter when the line is\n     incomplete during first read. PR 50481. [Ruediger Pluem]\n\n  *) mod_authz_core: Add AuthzSendForbiddenOnFailure directive to allow\n     sending '403 FORBIDDEN' instead of '401 UNAUTHORIZED' if authorization\n     fails for an authenticated user. PR 40721. [Stefan Fritsch]\n\nChanges with Apache 2.3.10\n\n  *) mod_rewrite: Don't implicitly URL-escape the original query string\n     when no substitution has changed it. PR 50447. [Eric Covener]\n\n  *) core: Honor 'AcceptPathInfo OFF' during internal redirects,\n     such as per-directory mod_rewrite substitutions.  PR 50349.\n     [Eric Covener]\n\n  *) mod_rewrite: Add 'RewriteOptions InheritBefore' to put the base\n     rules/conditions before the overridden rules/conditions.  PR 39313.\n     [J\u00e9r\u00f4me Grandjanny <jerome.grandjanny cea.fr>]\n\n  *) mod_autoindex: add IndexIgnoreReset to reset the list of IndexIgnored\n     filenames in higher precedence configuration sections.  PR 24243.\n     [Eric Covener]\n\n  *) mod_cgid: RLimit* directive support for mod_cgid.  PR 42135\n     [Eric Covener]\n\n  *) core: Fail startup when the argument to ServerName looks like a glob\n     or a regular expression instead of a hostname (*?[]).  PR 39863\n     [Rahul Nair <rahul.g.nair gmail.com>]\n\n  *) mod_userdir: Add merging of enable, disable, and filename arguments\n     to UserDir directive, leaving enable/disable of userlists unmerged.\n     PR 44076 [Eric Covener]\n\n  *) httpd: When no -k option is provided on the httpd command line, the server\n     was starting without checking for an existing pidfile.  PR 50350\n     [Eric Covener]\n\n  *) mod_proxy: Put the worker in error state if the SSL handshake with the\n     backend fails. PR 50332.\n     [Daniel Ruggeri <DRuggeri primary.net>, Ruediger Pluem]\n\n  *) mod_cache_disk: Fix Windows build which was broken after renaming\n     the module. [Gregg L. Smith]\n\nChanges with Apache 2.3.9\n\n  *) SECURITY: CVE-2010-1623 (cve.mitre.org)\n     Fix a denial of service attack against mod_reqtimeout.\n     [Stefan Fritsch]\n\n  *) mod_headers: Change default first argument of Header directive\n     from \"onsuccess\" to \"always\". [Eric Covener]\n\n  *) mod_include: Add the onerror attribute to the include element,\n     allowing an URL to be specified to include on error. [Graham\n     Leggett]\n\n  *) mod_cache_disk: mod_disk_cache renamed to mod_cache_disk, to be\n     consistent with the naming of other modules. [Graham Leggett]\n\n  *) mod_setenvif: Add SetEnvIfExpr directive to set env var depending on\n     expression. [Stefan Fritsch]\n\n  *) mod_proxy: Fix ProxyPassInterpolateEnv directive. PR 50292.\n     [Stefan Fritsch]\n\n  *) suEXEC: Add Suexec directive to disable suEXEC without renaming the\n     binary (Suexec Off), or force startup failure if suEXEC is required\n     but not supported (Suexec On).  Change SuexecUserGroup to fail\n     startup instead of just printing a warning if suEXEC is disabled.\n     [Jeff Trawick]\n\n  *) core: Add Error directive for aborting startup or htaccess processing\n     with a specified error message.  [Jeff Trawick]\n\n  *) mod_rewrite: Fix the RewriteEngine directive to work within a\n     location. Previously, once RewriteEngine was switched on globally,\n     it was impossible to switch off. [Graham Leggett]\n\n  *) core, mod_include, mod_ssl: Move the expression parser derived from\n     mod_include back into mod_include. Replace ap_expr with a parser\n     derived from mod_ssl's parser. Make mod_ssl use the new parser. Rework\n     ap_expr's public interface and provide hooks for modules to add variables\n     and functions. [Stefan Fritsch]\n\n  *) core: Do the hook sorting earlier so that the hooks are properly sorted\n     for the pre_config hook and during parsing the config. [Stefan Fritsch]\n\n  *) core: In the absence of any AllowOverride directives, the default is now\n     \"None\" instead of \"All\".  PR49823 [Eric Covener]\n\n  *) mod_proxy: Don't allow ProxyPass or ProxyPassReverse in\n     <Directory> or <Files>. PR47765 [Eric Covener]\n\n  *) prefork/worker/event MPMS: default value (when no directive is present)\n     of MaxConnectionsPerChild/MaxRequestsPerChild is changed to 0 from 10000\n     to match default configuration and manual. PR47782 [Eric Covener]\n\n  *) proxy_connect: Don't give up in the middle of a CONNECT tunnel\n     when the child process is starting to exit.  PR50220. [Eric Covener]\n\n  *) mod_autoindex: Fix inheritance of mod_autoindex directives into\n     contexts that don't have any mod_autoindex directives. PR47766.\n     [Eric Covener]\n\n  *) mod_rewrite: Add END flag for RewriteRule to prevent further rounds\n     of rewrite processing when a per-directory substitution occurs.\n     [Eric Covener]\n\n  *) mod_ssl: Make sure to always log an error if loading of CA certificates\n     fails. PR 40312. [Paul Tiemann <issues apache org ourdetour com>]\n\n  *) mod_dav: Send 501 error if unknown Content-* header is received for a PUT\n     request (RFC 2616 9.6). PR 42978. [Stefan Fritsch]\n\n  *) mod_dav: Send 400 error if malformed Content-Range header is received for\n     a put request (RFC 2616 14.16). PR 49825. [Stefan Fritsch]\n\n  *) mod_proxy: Release the backend connection as soon as EOS is detected,\n     so the backend isn't forced to wait for the client to eventually\n     acknowledge the data. [Graham Leggett]\n\n  *) mod_proxy: Optimise ProxyPass within a Location so that it is stored\n     per-directory, and chosen during the location walk. Make ProxyPass\n     work correctly from within a LocationMatch. [Graham Leggett]\n\n  *) core: Fix segfault if per-module LogLevel is on virtual host\n     scope. PR 50117. [Stefan Fritsch]\n\n  *) mod_proxy: Move the ProxyErrorOverride directive to have per\n     directory scope. [Graham Leggett]\n\n  *) mod_allowmethods: New module to deny certain HTTP methods without\n     interfering with authentication/authorization. [Paul Querna,\n     Igor Gali\u0107, Stefan Fritsch]\n\n  *) mod_ssl: Log certificate information and improve error message if client\n     cert verification fails. PR 50093, PR 50094. [Lassi Tuura <lat cern ch>,\n     Stefan Fritsch]\n\n  *) htcacheclean: Teach htcacheclean to limit cache size by number of\n     inodes in addition to size of files. Prevents a cache disk from\n     running out of space when many small files are cached.\n     [Graham Leggett]\n\n  *) core: Rename MaxRequestsPerChild to MaxConnectionsPerChild, which\n     describes more accurately what the directive does. The old name\n     still works but logs a warning. [Stefan Fritsch]\n\n  *) mod_cache: Optionally serve stale data when a revalidation returns a\n     5xx response, controlled by the CacheStaleOnError directive.\n     [Graham Leggett]\n\n  *) htcacheclean: Allow the listing of valid URLs within the cache, with\n     the option to list entry metadata such as sizes and times. [Graham\n     Leggett]\n\n  *) mod_cache: correctly parse quoted strings in cache headers.\n     PR 50199 [Nick Kew]\n\n  *) mod_cache: Allow control over the base URL of reverse proxied requests\n     using the CacheKeyBaseURL directive, so that the cache key can be\n     calculated from the endpoint URL instead of the server URL. [Graham\n     Leggett]\n\n  *) mod_cache: CacheLastModifiedFactor, CacheStoreNoStore, CacheStorePrivate,\n     CacheStoreExpired, CacheIgnoreNoLastMod, CacheDefaultExpire,\n     CacheMinExpire and CacheMaxExpire can be set per directory/location.\n     [Graham Leggett]\n\n  *) mod_disk_cache: CacheMaxFileSize, CacheMinFileSize, CacheReadSize and\n     CacheReadTime can be set per directory/location. [Graham Leggett]\n\n  *) core: Speed up config parsing if using a very large number of config\n     files. PR 50002 [andrew cloudaccess net]\n\n  *) mod_cache: Support the caching of HEAD requests. [Graham Leggett]\n\n  *) htcacheclean: Allow the option to round up file sizes to a given\n     block size, improving the accuracy of disk usage. [Graham Leggett]\n\n  *) mod_ssl: Add authz providers for use with mod_authz_core and its\n     RequireAny/RequireAll containers: 'ssl' (equivalent to SSLRequireSSL),\n     'ssl-verify-client' (for use with 'SSLVerifyClient optional'), and\n     'ssl-require' (expressions with same syntax as SSLRequire).\n     [Stefan Fritsch]\n\n  *) mod_ssl: Make the ssl expression parser thread-safe. It now requires\n     bison instead of yacc. [Stefan Fritsch]\n\n  *) mod_disk_cache: Change on-disk header file format to support the\n     link of the device/inode of the data file to the matching header\n     file, and to support the option of not writing a data file when\n     the data file is empty. [Graham Leggett]\n\n  *) core/mod_unique_id: Add generate_log_id hook to allow to use\n     the ID generated by mod_unique_id as error log ID for requests.\n     [Stefan Fritsch]\n\n  *) mod_cache: Make sure that we never allow a 304 Not Modified response\n     that we asked for to leak to the client should the 304 response be\n     uncacheable. PR45341 [Graham Leggett]\n\n  *) mod_cache: Add the cache_status hook to register the final cache\n     decision hit/miss/revalidate. Add optional support for an X-Cache\n     and/or an X-Cache-Detail header to add the cache status to the\n     response. PR48241 [Graham Leggett]\n\n  *) mod_authz_host: Add 'local' provider that matches connections originating\n     on the local host. PR 19938. [Stefan Fritsch]\n\n  *) Event MPM: Fix crash accessing pollset on worker thread when child\n     process is exiting.  [Jeff Trawick]\n\n  *) core: For process invocation (cgi, fcgid, piped loggers and so forth)\n     pass the system library path (LD_LIBRARY_PATH or platform-specific\n     variables) along with the system PATH, by default.  Both should be\n     overridden together as desired using PassEnv etc; see mod_env.\n     [William Rowe]\n\n  *) mod_cache: Introduce CacheStoreExpired, to allow administrators to\n     capture a stale backend response, perform If-Modified-Since requests\n     against the backend, and serving from the cache all 304 responses.\n     This restores pre-2.2.4 cache behavior.  [William Rowe]\n\n  *) mod_rewrite: Introduce <=, >= string comparison operators, and integer\n     comparators -lt, -le, -eq, -ge, and -gt.  To help bash users and drop\n     the ambiguity of the symlink test \"-ltest\", introduce -h or -L as\n     symlink test operators.  [William Rowe]\n\n  *) mod_cache: Give the cache provider the opportunity to choose to cache\n     or not cache based on the buckets present in the brigade, such as the\n     presence of a FILE bucket.\n     [Graham Leggett]\n\n  *) mod_authz_core: Allow authz providers to check args while reading the\n     config and allow to cache parsed args. Move 'all' and 'env' authz\n     providers from mod_authz_host to mod_authz_core. Add 'method' authz\n     provider depending on the HTTP method.  [Stefan Fritsch]\n\n  *) mod_include: Move the request_rec within mod_include to be\n     exposed within include_ctx_t. [Graham Leggett]\n\n  *) mod_include: Reinstate support for UTF-8 character sets by allowing a\n     variable being echoed or set to be decoded and then encoded as separate\n     steps. PR47686 [Graham Leggett]\n\n  *) mod_cache: Add a discrete commit_entity() provider function within the\n     mod_cache provider interface which is called to indicate to the\n     provider that caching is complete, giving the provider the opportunity\n     to commit temporary files permanently to the cache in an atomic\n     fashion. Replace the inconsistent use of error cleanups with a formal\n     set of pool cleanups attached to a subpool, which is destroyed on error.\n     [Graham Leggett]\n\n  *) mod_cache: Change the signature of the store_body() provider function\n     within the mod_cache provider interface to support an \"in\" brigade\n     and an \"out\" brigade instead of just a single input brigade. This\n     gives a cache provider the option to consume only part of the brigade\n     passed to it, rather than the whole brigade as was required before.\n     This fixes an out of memory and a request timeout condition that would\n     occur when the original document was a large file. Introduce\n     CacheReadSize and CacheReadTime directives to mod_disk_cache to control\n     the amount of data to attempt to cache at a time. [Graham Leggett]\n\n  *) core: Add ErrorLogFormat to allow configuring error log format, including\n     additional information that is logged once per connection or request. Add\n     error log IDs for connections and request to allow correlating error log\n     lines and the corresponding access log entry. [Stefan Fritsch]\n\n  *) core: Disable sendfile by default. [Stefan Fritsch]\n\n  *) mod_cache: Check the request to determine whether we are allowed\n     to return cached content at all, and respect a \"Cache-Control:\n     no-cache\" header from a client. Previously, \"no-cache\" would\n     behave like \"max-age=0\". [Graham Leggett]\n\n  *) mod_cache: Use a proper filter context to hold filter data instead\n     of misusing the per-request configuration. Fixes a segfault on trunk\n     when the normal handler is used. [Graham Leggett]\n\n  *) mod_cgid: Log a warning if the ScriptSock path is truncated because\n     it is too long. PR 49388.  [Stefan Fritsch]\n\n  *) vhosts: Do not allow _default_ in NameVirtualHost, or mixing *\n     and non-* ports on NameVirtualHost, or multiple NameVirtualHost\n     directives for the same address:port, or NameVirtualHost\n     directives with no matching VirtualHosts, or multiple ip-based\n     VirtualHost sections for the same address:port.  These were\n     previously accepted with a warning, but the behavior was\n     undefined.  [Dan Poirier]\n\n  *) mod_remoteip: Fix a segfault when using mod_remoteip in conjunction with\n     Allow/Deny. PR 49838.  [Andrew Skalski <voltara gmail.com>]\n\n  *) core: DirectoryMatch can now match on the end of line character ($),\n     and sub-directories of matched directories are no longer implicitly\n     matched.  PR49809 [Eric Covener]\n\n  *) Regexps: introduce new higher-level regexp utility including parsing\n     and executing perl-style regexp ops (e.g s/foo/bar/i) and regexp memory\n     [Nick Kew]\n\n  *) Proxy: support setting source address.  PR 29404\n     [Multiple contributors iterating through bugzilla,\n      Aron Ujvari <xanco nikhok.hu>, Aleksey Midenkov <asm uezku.kemsu.ru>,\n      <dan listening-station.net; trunk version Nick Kew]\n\n  *) HTTP protocol: return 400 not 503 if we have to abort due to malformed\n     chunked encoding. [Nick Kew]\n\nChanges with Apache 2.3.8\n\n  *) suexec: Support large log files. PR 45856. [Stefan Fritsch]\n\n  *) core: Abort with sensible error message if no or more than one MPM is\n     loaded. [Stefan Fritsch]\n\n  *) mod_proxy: Rename erroronstatus to failonstatus.\n     [Daniel Ruggeri <DRuggeri primary.net>]\n\n  *) mod_dav_fs: Fix broken \"creationdate\" property.\n     Regression in version 2.3.7. [Rainer Jung]\n\nChanges with Apache 2.3.7\n\n  *) SECURITY: CVE-2010-1452 (cve.mitre.org)\n     mod_dav, mod_cache, mod_session: Fix Handling of requests without a path\n     segment. PR: 49246 [Mark Drayton, Jeff Trawick]\n\n  *) mod_ldap: Properly check the result returned by apr_ldap_init. PR 46076.\n     [Stefan Fritsch]\n\n  *) mod_rewrite: Log errors if rewrite map files cannot be opened. PR 49639.\n     [Stefan Fritsch]\n\n  *) mod_proxy_http: Support the 'ping' property for backend HTTP/1.1 servers\n     via leveraging 100-Continue as the initial \"request\".\n     [Jim Jagielski]\n\n  *) core/mod_authz_core: Introduce new access_checker_ex hook that enables\n     mod_authz_core to bypass authentication if access should be allowed by\n     IP address/env var/... [Stefan Fritsch]\n\n  *) core: Introduce note_auth_failure hook to allow modules to add support\n     for additional auth types. This makes ap_note_auth_failure() work with\n     mod_auth_digest again. PR 48807. [Stefan Fritsch]\n\n  *) socache modules: return APR_NOTFOUND when a lookup is not found [Nick Kew]\n\n  *) mod_authn_socache: new module [Nick Kew]\n\n  *) configure: Add reallyall option for --enable-mods-shared. [Stefan Fritsch]\n\n  *) Fix Windows build when using VC6. [Gregg L. Smith <lists glewis com>]\n\n  *) mod_rewrite: Allow to set environment variables without explicitly\n     giving a value. [Rainer Jung]\n\n  *) mod_rewrite: Remove superfluous EOL from rewrite logging. [Rainer Jung]\n\n  *) mod_include: recognise \"text/html; parameters\" as text/html\n     PR 49616 [Andrey Chernov <ache nagual.pp.ru>]\n\n  *) CGI vars: allow PATH to be set by SetEnv, consistent with LD_LIBRARY_PATH\n     PR 43906 [Nick Kew]\n\n  *) Core: Extra robustness: don't try authz and segfault if authn\n     fails to set r->user.  Log bug and return 500 instead.\n     PR 42995 [Nick Kew]\n\n  *) HTTP protocol filter: fix handling of longer chunk extensions\n     PR 49474 [<tee.bee gmx.de>]\n\n  *) Update SSL cipher suite and add example for SSLHonorCipherOrder.\n     [Lars Eilebrecht, Rainer Jung]\n\n  *) move AddOutputFilterByType from core to mod_filter.  This should\n     fix nasty side-effects that happen when content_type is set\n     more than once in processing a request, and make it fully\n     compatible with dynamic and proxied contents. [Nick Kew]\n\n  *) mod_log_config: Implement logging for sub second timestamps and\n     request end time.  [Rainer Jung]\n\nChanges with Apache 2.3.6\n\n  *) SECURITY: CVE-2009-3555 (cve.mitre.org)\n     mod_ssl: Comprehensive fix of the TLS renegotiation prefix injection\n     attack when compiled against OpenSSL version 0.9.8m or later. Introduces\n     the 'SSLInsecureRenegotiation' directive to reopen this vulnerability\n     and offer unsafe legacy renegotiation with clients which do not yet\n     support the new secure renegotiation protocol, RFC 5746.\n     [Joe Orton, and with thanks to the OpenSSL Team]\n\n  *) SECURITY: CVE-2009-3555 (cve.mitre.org)\n     mod_ssl: A partial fix for the TLS renegotiation prefix injection attack\n     by rejecting any client-initiated renegotiations. Forcibly disable\n     keepalive for the connection if there is any buffered data readable. Any\n     configuration which requires renegotiation for per-directory/location\n     access control is still vulnerable, unless using OpenSSL >= 0.9.8l.\n     [Joe Orton, Ruediger Pluem, Hartmut Keil <Hartmut.Keil adnovum.ch>]\n\n  *) SECURITY: CVE-2010-0408 (cve.mitre.org)\n     mod_proxy_ajp: Respond with HTTP_BAD_REQUEST when the body is not sent\n     when request headers indicate a request body is incoming; not a case of\n     HTTP_INTERNAL_SERVER_ERROR.  [Niku Toivola <niku.toivola sulake.com>]\n\n  *) SECURITY: CVE-2010-0425 (cve.mitre.org)\n     mod_isapi: Do not unload an isapi .dll module until the request\n     processing is completed, avoiding orphaned callback pointers.\n     [Brett Gervasoni <brettg senseofsecurity.com>, Jeff Trawick]\n\n  *) core: Filter init functions are now run strictly once per request\n     before handler invocation.  The init functions are no longer run\n     for connection filters.  PR 49328.  [Joe Orton]\n\n  *) core: Adjust the output filter chain correctly in an internal\n     redirect from a subrequest, preserving filters from the main\n     request as necessary.  PR 17629.  [Joe Orton]\n\n  *) mod_cache: Explicitly allow cache implementations to cache a 206 Partial\n     Response if they so choose to do so. Previously an attempt to cache a 206\n     was arbitrarily allowed if the response contained an Expires or\n     Cache-Control header, and arbitrarily denied if both headers were missing.\n     [Graham Leggett]\n\n  *) core: Add microsecond timestamp fractions, process id and thread id\n     to the error log. [Rainer Jung]\n\n  *) configure: The \"most\" module set gets build by default.  [Rainer Jung]\n\n  *) configure: Building dynamic modules (DSO) by default.  [Rainer Jung]\n\n  *) configure: Fix broken VPATH build when using included APR.\n     [Rainer Jung]\n\n  *) mod_session_crypto: Fix configure problem when building\n     with APR 2 and for VPATH builds with included APR.\n     [Rainer Jung]\n\n  *) mod_session_crypto: API compatibility with APR 2 crypto and\n     APR Util 1.x crypto. [Rainer Jung]\n\n  *) ab: Fix memory leak with -v2 and SSL. PR 49383.\n     [Pavel Kankovsky <peak argo troja mff cuni cz>]\n\n  *) core: Add per-module and per-directory loglevel configuration.\n           Add some more trace logging.\n     mod_rewrite: Replace RewriteLog/RewriteLogLevel with trace log levels.\n     mod_ssl: Replace LogLevelDebugDump with trace log levels.\n     mod_ssl/mod_proxy*: Adjust loglevels to be less verbose at levels info\n           and debug.\n     mod_dumpio:  Replace DumpIOLogLevel with trace log levels.\n     [Stefan Fritsch]\n\n  *) mod_ldap: LDAP caching was suppressed (and ldap-status handler returns\n     title page only) when any mod_ldap directives were used in VirtualHost\n     context.  [Eric Covener]\n\n  *) mod_disk_cache: Decline the opportunity to cache if the response is\n     a 206 Partial Content. This stops a reverse proxied partial response\n     from becoming cached, and then being served in subsequent responses.\n     [Graham Leggett]\n\n  *) mod_deflate: avoid the risk of forwarding data before headers are set.\n     PR 49369 [Matthew Steele <mdsteele google.com>]\n\n  *) mod_authnz_ldap: Ensure nested groups are checked when the\n     top-level group doesn't have any direct non-group members\n     of attributes in AuthLDAPGroupAttribute. [Eric Covener]\n\n  *) mod_authnz_ldap: Search or Comparison during authorization phase\n     can use the credentials from the authentication phase\n     (AuthLDAPSearchAsUSer,AuthLDAPCompareAsUser).\n     PR 48340 [Domenico Rotiroti, Eric Covener]\n\n  *) mod_authnz_ldap: Allow the initial DN search during authentication\n     to use the HTTP username/pass instead of an anonymous or hard-coded\n     LDAP id (AuthLDAPInitialBindAsUser, AuthLDAPInitialBindPattern).\n     [Eric Covener]\n\n  *) mod_authnz_ldap: Publish requested LDAP data with an AUTHORIZE_ prefix\n     when this module is used for authorization. See AuthLDAPAuthorizePrefix.\n     PR 45584 [Eric Covener]\n\n  *) apxs -q: Stop filtering out ':' characters from the reported values.\n     PR 45343.  [Bill Cole]\n\n  *) prefork MPM: Work around possible crashes on child exit in APR reslist\n     cleanup code.  PR 43857.  [Tom Donovan]\n\n  *) ab: fix number of requests sent by ab when keepalive is enabled.  PR 48497.\n     [Bryn Dole <dole blekko.com>]\n\n  *) Log an error for failures to read a chunk-size, and return 408 instead of\n     413 when this is due to a read timeout.  This change also fixes some cases\n     of two error documents being sent in the response for the same scenario.\n     [Eric Covener] PR49167\n\n  *) mod_proxy_balancer: Add new directive BalancerNonce to allow admin\n     to control/set the nonce used in the balancer-manager application.\n     [Jim Jagielski]\n\n  *) mod_proxy_connect: Support port ranges in AllowConnect. PR 23673.\n     [Stefan Fritsch]\n\n  *) Proxy balancer: support setting error status according to HTTP response\n     code from a backend.  PR 48939.  [Daniel Ruggeri <DRuggeri primary.net>]\n\n  *) htcacheclean: Introduce the ability to clean specific URLs from the\n     cache, if provided as an optional parameter on the command line.\n     [Graham Leggett]\n\n  *) core: Introduce the IncludeStrict directive, which explicitly fails\n     server startup if no files or directories match a wildcard path.\n     [Graham Leggett]\n\n  *) htcacheclean: Report additional statistics about entries deleted.\n     PR 48944. [Mark Drayton mark markdrayton.info]\n\n  *) Introduce SSLFIPS directive to support OpenSSL FIPS_mode; permits all\n     builds of mod_ssl to use 'SSLFIPS off' for portability, but the proper\n     build of openssl is required for 'SSLFIPS on'.  PR 46270.\n     [Dr Stephen Henson <steve openssl.org>, William Rowe]\n\n  *) mod_proxy_http: Log the port of the remote server in various messages.\n     PR 48812. [Igor Gali\u0107 <i galic brainsware org>]\n\n  *) mod_reqtimeout: Do not wrongly enforce timeouts for mod_proxy's backend\n     connections and other protocol handlers (like mod_ftp). [Stefan Fritsch]\n\n  *) mod_proxy_ajp: Really regard the operation a success, when the client\n     aborted the connection. In addition adjust the log message if the client\n     aborted the connection. [Ruediger Pluem]\n\n  *) mod_ssl: Add the 'SSLInsecureRenegotiation' directive, which\n     allows insecure renegotiation with clients which do not yet\n     support the secure renegotiation protocol.  [Joe Orton]\n\n  *) mod_ssl: Fix a potential I/O hang if a long list of trusted CAs\n     is configured for client cert auth. PR 46952.  [Joe Orton]\n\n  *) core: Only log a 408 if it is no keepalive timeout. PR 39785\n     [Ruediger Pluem,  Mark Montague <markmont umich.edu>]\n\n  *) support/rotatelogs: Add -L option to create a link to the current\n     log file.  PR 48761 [<lyndon orthanc.ca>, Dan Poirier]\n\n  *) mod_ldap: Update LDAPTrustedClientCert to consistently be a per-directory\n     setting only, matching most of the documentation and examples.\n     PR 46541 [Paul Reder, Eric Covener]\n\n  *) mod_ldap: LDAPTrustedClientCert now accepts CA_DER/CA_BASE64 argument\n     types previously allowed only in LDAPTrustedGlobalCert. [Eric Covener]\n\n  *) mod_negotiation: Preserve query string over multiviews negotiation.\n     This buglet was fixed for type maps in 2.2.6, but the same issue\n     affected multiviews and was overlooked.\n     PR 33112 [Joergen Thomsen <apache jth.net>]\n\n  *) mod_ldap: Eliminate a potential crash with multiple LDAPTrustedClientCert\n     when some are not password-protected. [Eric Covener]\n\n  *) Fix startup segfault when the Mutex directive is used but no loaded\n     modules use httpd mutexes.  PR 48787.  [Jeff Trawick]\n\n  *) Proxy: get the headers right in a HEAD request with\n     ProxyErrorOverride, by checking for an overridden error\n     before not after going into a catch-all code path.\n     PR 41646.  [Nick Kew, Stuart Children]\n\n  *) support/rotatelogs: Support the simplest log rotation case, log\n     truncation. Useful when the log is being processed in real time\n     using a command like tail. [Graham Leggett]\n\n  *) support/htcacheclean: Teach it how to write a pid file (modelled on\n     httpd's writing of a pid file) so that it becomes possible to run\n     more than one instance of htcacheclean on the same machine.\n     [Graham Leggett]\n\n  *) Log command line on startup, so there's a record of command line\n     arguments like -f.  PR 48752.  [Dan Poirier]\n\n  *) Introduce mod_reflector, a handler capable of reflecting POSTed\n     request bodies back within the response through the output filter\n     stack. Can be used to turn an output filter into a web service.\n     [Graham Leggett]\n\n  *) mod_proxy_http: Make sure that when an ErrorDocument is served\n     from a reverse proxied URL, that the subrequest respects the status\n     of the original request. This brings the behaviour of proxy_handler\n     in line with default_handler. PR 47106. [Graham Leggett]\n\n  *) Support wildcards in both the directory and file components of\n     the path specified by the Include directive. [Graham Leggett]\n\n  *) mod_proxy, mod_proxy_http: Support remote https proxies\n     by using HTTP CONNECT.  PR 19188.\n     [Philippe Dutrueux <lilas evidian.com>, Rainer Jung]\n\n  *) apxs: Fix -A and -a options to ignore whitespace in httpd.conf\n     [Philip M. Gollucci]\n\n  *) worker: Don't report server has reached MaxClients until it has.\n     Add message when server gets within MinSpareThreads of MaxClients.\n     PR 46996.  [Dan Poirier]\n\n  *) mod_session: Session expiry was being initialised, but not updated\n     on each session save, resulting in timed out sessions when there\n     should not have been. Fixed. [Graham Leggett]\n\n  *) mod_log_config: Add the R option to log the handler used within the\n     request. [Christian Folini <christian.folini netnea com>]\n\n  *) mod_include: Allow fine control over the removal of Last-Modified and\n     ETag headers within the INCLUDES filter, making it possible to cache\n     responses if desired. Fix the default value of the SSIAccessEnable\n     directive.  [Graham Leggett]\n\n  *) Add new UnDefine directive to undefine a variable. PR 35350.\n     [Stefan Fritsch]\n\n  *) Make ap_pregsub(), used by AliasMatch and friends, use the same syntax\n     for regex backreferences as mod_rewrite and mod_include: Remove the use\n     of '&' as an alias for '$0' and allow to escape any character with a\n     backslash. PR 48351. [Stefan Fritsch]\n\n  *) mod_authnz_ldap: If AuthLDAPCharsetConfig is set, also convert the\n     password to UTF-8. PR 45318.\n     [Johannes M\u00fcller <joh_m gmx.de>, Stefan Fritsch]\n\n  *) ab: Fix calculation of requests per second in HTML output. PR 48594.\n     [Stefan Fritsch]\n\n  *) mod_authnz_ldap: Failures to map a username to a DN, or to check a user\n     password now result in an informational level log entry instead of\n     warning level.  [Eric Covener]\n\nChanges with Apache 2.3.5\n\n  *) SECURITY: CVE-2010-0434 (cve.mitre.org)\n     Ensure each subrequest has a shallow copy of headers_in so that the\n     parent request headers are not corrupted.  Eliminates a problematic\n     optimization in the case of no request body.  PR 48359\n     [Jake Scott, William Rowe, Ruediger Pluem]\n\n  *) Turn static function get_server_name_for_url() into public\n     ap_get_server_name_for_url() and use it where appropriate. This\n     fixes mod_rewrite generating invalid URLs for redirects to IPv6\n     literal addresses. [Stefan Fritsch]\n\n  *) mod_ldap: Introduce new config option LDAPTimeout to set the timeout\n     for LDAP operations like bind and search. [Stefan Fritsch]\n\n  *) mod_proxy, mod_proxy_ftp: Move ProxyFtpDirCharset from mod_proxy to\n     mod_proxy_ftp. [Takashi Sato]\n\n  *) mod_proxy, mod_proxy_connect: Move AllowCONNECT from mod_proxy to\n     mod_proxy_connect. [Takashi Sato]\n\n  *) mod_cache: Do an exact match of the keys defined by\n     CacheIgnoreURLSessionIdentifiers against the querystring instead of\n     a partial match.  PR 48401.\n     [Dodou Wang <wangdong.08 gmail.com>, Ruediger Pluem]\n\n  *) mod_proxy_balancer: Fix crash in balancer-manager. [Rainer Jung]\n\n  *) Core HTTP: disable keepalive when the Client has sent\n     Expect: 100-continue\n     but we respond directly with a non-100 response.\n     Keepalive here led to data from clients continuing being treated as\n     a new request.\n     PR 47087 [Nick Kew]\n\n  *) Core: reject NULLs in request line or request headers.\n     PR 43039 [Nick Kew]\n\n  *) Core: (re)-introduce -T commandline option to suppress documentroot\n     check at startup.\n     PR 41887 [Jan van den Berg <janvdberg gmail.com>]\n\n  *) mod_autoindex: support XHTML as equivalent to HTML in IndexOptions,\n                    ScanHTMLTitles, ReadmeName, HeaderName\n     PR 48416 [Dmitry Bakshaev <dab18 izhnet.ru>, Nick Kew]\n\n  *) Proxy: Fix ProxyPassReverse with relative URL\n     Derived (slightly erroneously) from PR 38864 [Nick Kew]\n\n  *) mod_headers: align Header Edit with Header Set when used on Content-Type\n     PR 48422 [Cyril Bont\u00e9 <cyril.bonte free.fr>, Nick Kew>]\n\n  *) mod_headers: Enable multi-match-and-replace edit option\n     PR 46594 [Nick Kew]\n\n  *) mod_filter: enable it to act on non-200 responses.\n     PR 48377 [Nick Kew]\n\nChanges with Apache 2.3.4\n\n  *) Replace AcceptMutex, LockFile, RewriteLock, SSLMutex, SSLStaplingMutex,\n     and WatchdogMutexPath with a single Mutex directive.  Add APIs to\n     simplify setup and user customization of APR proc and global mutexes.\n     (See util_mutex.h.)  Build-time setting DEFAULT_LOCKFILE is no longer\n     respected; set DEFAULT_REL_RUNTIMEDIR instead.  [Jeff Trawick]\n\n  *) http_core: KeepAlive no longer accepts other than On|Off.\n     [Takashi Sato]\n\n  *) mod_dav: Remove errno from dav_error interface.  Calls to dav_new_error()\n     and dav_new_error_tag() must be adjusted to add an apr_status_t parameter.\n     [Jeff Trawick]\n\n  *) mod_authnz_ldap: Add AuthLDAPBindAuthoritative to allow Authentication to\n     try other providers in the case of an LDAP bind failure.\n     PR 46608 [Justin Erenkrantz, Joe Schaefer, Tony Stevenson]\n\n  *) Build: fix --with-module to work as documented\n     PR 43881 [Gez Saunders <gez.saunders virgin.net>]\n\nChanges with Apache 2.3.3\n\n  *) SECURITY: CVE-2009-3095 (cve.mitre.org)\n     mod_proxy_ftp: sanity check authn credentials.\n     [Stefan Fritsch <sf fritsch.de>, Joe Orton]\n\n  *) SECURITY: CVE-2009-3094 (cve.mitre.org)\n     mod_proxy_ftp: NULL pointer dereference on error paths.\n     [Stefan Fritsch <sf fritsch.de>, Joe Orton]\n\n  *) mod_ssl: enable support for ECC keys and ECDH ciphers.  Tested against\n     OpenSSL 1.0.0b3.  [Vipul Gupta <vipul.gupta sun.com>, Sander Temme]\n\n  *) mod_dav: Include uri when logging a PUT error due to connection abort.\n     PR 38149. [Stefan Fritsch]\n\n  *) mod_dav: Return 409 instead of 500 for a LOCK request if the parent\n     resource does not exist or is not a collection. PR 43465. [Stefan Fritsch]\n\n  *) mod_dav_fs: Return 409 instead of 500 for Litmus test case copy_nodestcoll\n     (a COPY request where the parent of the destination resource does not\n     exist). PR 39299. [Stefan Fritsch]\n\n  *) mod_dav_fs: Don't delete the whole file if a PUT with content-range failed.\n     PR 42896. [Stefan Fritsch]\n\n  *) mod_dav_fs: Make PUT create files atomically and no longer destroy the\n     old file if the transfer aborted. PR 39815. [Paul Querna, Stefan Fritsch]\n\n  *) mod_dav_fs: Remove inode keyed locking as this conflicts with atomically\n     creating files. On systems with inode numbers, this is a format change of\n     the DavLockDB. The old DavLockDB must be deleted on upgrade.\n     [Stefan Fritsch]\n\n  *) mod_log_config: Make ${cookie}C correctly match whole cookie names\n     instead of substrings. PR 28037. [Dan Franklin <dan dan-franklin.com>,\n     Stefan Fritsch]\n\n  *) vhost: A purely-numeric Host: header should not be treated as a port.\n     PR 44979 [Nick Kew]\n\n  *) mod_ldap: Avoid 500 errors with \"Unable to set LDAP_OPT_REFHOPLIMIT option to 5\"\n     when built against openldap by using SDK LDAP_OPT_REFHOPLIMIT defaults unless\n     LDAPReferralHopLimit is explicitly configured.\n     [Eric Covener]\n\n  *) mod_charset_lite: Honor 'CharsetOptions NoImplicitAdd'.\n     [Eric Covener]\n\n  *) mod_ssl: Add support for OCSP Stapling.  PR 43822.\n     [Dr Stephen Henson <shenson oss-institute.org>]\n\n  *) mod_socache_shmcb: Allow parens in file name if cache size is given.\n     Fixes SSLSessionCache directive mis-parsing parens in pathname.\n     PR 47945. [Stefan Fritsch]\n\n  *) htpasswd: Improve out of disk space handling. PR 30877. [Stefan Fritsch]\n\n  *) htpasswd: Use MD5 hash by default on all platforms. [Stefan Fritsch]\n\n  *) mod_sed: Reduce memory consumption when processing very long lines.\n     PR 48024 [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) ab: Fix segfault in case the argument for -n is a very large number.\n     PR 47178. [Philipp Hagemeister <oss phihag.de>]\n\n  *) Allow ProxyPreserveHost to work in <Proxy> sections. PR 34901.\n     [Stefan Fritsch]\n\n  *) configure: Fix THREADED_MPMS so that mod_cgid is enabled again\n     for worker MPM. [Takashi Sato]\n\n  *) mod_dav: Provide a mechanism to obtain the request_rec and pathname\n     from the dav_resource. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) Build: Use install instead of cp if available on installing\n     modules to avoid segmentation fault. PR 47951. [hirose31 gmail.com]\n\n  *) mod_cache: correctly consider s-maxage in cacheability\n     decisions.  [Dan Poirier]\n\n  *) mod_logio/core: Report more accurate byte counts in mod_status if\n     mod_logio is loaded. PR 25656. [Stefan Fritsch]\n\n  *) mod_ldap: If LDAPSharedCacheSize is too small, try harder to purge\n     some cache entries and log a warning. Also increase the default\n     LDAPSharedCacheSize to 500000. This is a more realistic size suitable\n     for the default values of 1024 for LdapCacheEntries/LdapOpCacheEntries.\n     PR 46749. [Stefan Fritsch]\n\n  *) mod_rewrite: Make sure that a hostname:port isn't fully qualified if\n     the request is a CONNECT request. [Bill Zajac <billz consultla.com>]\n\n  *) mod_cache: Teach CacheEnable and CacheDisable to work from within a\n     Location section, in line with how ProxyPass works. [Graham Leggett]\n\n  *) mod_reqtimeout: New module to set timeouts and minimum data rates for\n     receiving requests from the client. [Stefan Fritsch]\n\n  *) core: Fix potential memory leaks by making sure to not destroy\n     bucket brigades that have been created by earlier filters.\n     [Stefan Fritsch]\n\n  *) core, mod_deflate, mod_sed: Reduce memory usage by reusing bucket\n     brigades in several places. [Stefan Fritsch]\n\n  *) mod_cache: Fix uri_meets_conditions() so that CacheEnable will\n     match by scheme, or by a wildcarded hostname. PR 40169\n     [Peter Grandi <pg_asf asf.for.sabi.co.uk>, Graham Leggett]\n\n  *) suxec: Allow to log an error if exec fails by setting FD_CLOEXEC\n     on the log file instead of closing it. PR 10744. [Nicolas Rachinsky]\n\n  *) mod_mime: Make RemoveType override the info from TypesConfig.\n     PR 38330. [Stefan Fritsch]\n\n  *) mod_cache: Introduce the option to run the cache from within the\n     normal request handler, and to allow fine grained control over\n     where in the filter chain content is cached. Adds CacheQuickHandler\n     directive.  [Graham Leggett]\n\n  *) core: Treat timeout reading request as 408 error, not 400.\n     Log 408 errors in access log as was done in Apache 1.3.x.\n     PR 39785 [Nobutaka Mantani <nobutaka nobutaka.org>,\n     Stefan Fritsch <sf fritsch.de>, Dan Poirier]\n\n  *) mod_ssl: Reintroduce SSL_CLIENT_S_DN, SSL_CLIENT_I_DN, SSL_SERVER_S_DN,\n     SSL_SERVER_I_DN back to the environment variables to be set by mod_ssl.\n     [Peter Sylvester <peter.sylvester edelweb.fr>]\n\n  *) mod_disk_cache: don't cache incomplete responses, per RFC 2616, 13.8.\n     PR15866.  [Dan Poirier]\n\n  *) ab: ab segfaults in verbose mode on https sites\n     PR46393.  [Ryan Niebur]\n\n  *) mod_dav: Allow other modules to become providers and add resource types\n     to the DAV response. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) mod_dav: Allow other modules to add things to the DAV or Allow headers\n     of an OPTIONS request. [Jari Urpalainen <jari.urpalainen nokia.com>,\n     Brian France <brian brianfrance.com>]\n\n  *) core: Lower memory usage of core output filter.\n     [Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_mime: Detect invalid use of MultiviewsMatch inside Location and\n     LocationMatch sections.  PR47754. [Dan Poirier]\n\n  *) mod_request: Make sure the KeptBodySize directive rejects values\n     that aren't valid numbers. [Graham Leggett]\n\n  *) mod_session_crypto: Sanity check should the potentially encrypted\n     session cookie be too short. [Graham Leggett]\n\n  *) mod_session.c: Prevent a segfault when session is added but not\n     configured. [Graham Leggett]\n\n  *) htcacheclean: 19 ways to fail, 1 error message. Fixed. [Graham Leggett]\n\n  *) mod_auth_digest: Fail server start when nonce count checking\n     is configured without shared memory, or md5-sess algorithm is\n     configured. [Dan Poirier]\n\n  *) mod_proxy_connect: The connect method doesn't work if the client is\n     connecting to the apache proxy through an ssl socket. Fixed.\n     PR29744. [Brad Boyer, Mark Cave-Ayland, Julian Gilbey, Fabrice Durand,\n     David Gence, Tim Dodge, Per Gunnar Hans, Emmanuel Elango,\n     Kevin Croft, Rudolf Cardinal]\n\n  *) mod_ssl: The error message when SSLCertificateFile is missing should\n     at least give the name or position of the problematic virtual host\n     definition. [Stefan Fritsch sf sfritsch.de]\n\n  *) mod_auth_digest: Fix null pointer when qop=none. [Dan Poirier]\n\n  *) Add support for HTTP PUT to ab. [Jeff Barnes <jbarnesweb yahoo.com>]\n\n  *) mod_headers: generalise the envclause to support expression\n     evaluation with ap_expr parser [Nick Kew]\n\n  *) mod_cache: Introduce the thundering herd lock, a mechanism to keep\n     the flood of requests at bay that strike a backend webserver as\n     a cached entity goes stale. [Graham Leggett]\n\n  *) mod_auth_digest: Fix usage of shared memory and re-enable it.\n     PR 16057 [Dan Poirier]\n\n  *) Preserve Port information over internal redirects\n     PR 35999 [Jonas Ringh <jonas.ringh cixit.se>]\n\n  *) Proxy: unable to connect to a backend is SERVICE_UNAVAILABLE,\n     rather than BAD_GATEWAY or (especially) NOT_FOUND.\n     PR 46971 [evanc nortel.com]\n\n  *) Various modules: Do better checking of pollset operations in order to\n     avoid segmentation faults if they fail. PR 46467\n     [Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_autoindex: Correctly create an empty cell if the description\n     for a file is missing. PR 47682 [Peter Poeml <poeml suse.de>]\n\n  *) ab: Fix broken error messages after resolver or connect() failures.\n     [Jeff Trawick]\n\n  *) SECURITY: CVE-2009-1890 (cve.mitre.org)\n     Fix a potential Denial-of-Service attack against mod_proxy in a\n     reverse proxy configuration, where a remote attacker can force a\n     proxy process to consume CPU time indefinitely.  [Nick Kew, Joe Orton]\n\n  *) SECURITY: CVE-2009-1191 (cve.mitre.org)\n     mod_proxy_ajp: Avoid delivering content from a previous request which\n     failed to send a request body. PR 46949 [Ruediger Pluem]\n\n  *) htdbm: Fix possible buffer overflow if dbm database has very\n     long values.  PR 30586 [Dan Poirier]\n\n  *) core: Return APR_EOF if request body is shorter than the length announced\n     by the client. PR 33098 [ Stefan Fritsch <sf sfritsch.de>]\n\n  *) mod_suexec: correctly set suexec_enabled when httpd is run by a\n     non-root user and may have insufficient permissions.\n     PR 42175 [Jim Radford <radford blackbean.org>]\n\n  *) mod_ssl: Fix SSL_*_DN_UID variables to use the 'userID' attribute\n     type.  PR 45107.  [Michael Str\u00f6der <michael stroeder.com>,\n     Peter Sylvester <peter.sylvester edelweb.fr>]\n\n  *) mod_proxy_http: fix case sensitivity checking transfer encoding\n     PR 47383 [Ryuzo Yamamoto <ryuzo.yamamoto gmail.com>]\n\n  *) mod_alias: ensure Redirect issues a valid URL.\n     PR 44020 [H\u00e5kon Stordahl <hakon stordahl.org>]\n\n  *) mod_dir: add FallbackResource directive, to enable admin to specify\n     an action to happen when a URL maps to no file, without resorting\n     to ErrorDocument or mod_rewrite.  PR 47184 [Nick Kew]\n\n  *) mod_cgid: Do not leak the listening Unix socket file descriptor to the\n     CGI process. PR 47335 [Korn\u00e9l P\u00e1l <kornelpal gmail.com>]\n\n  *) mod_rewrite: Remove locking for writing to the rewritelog.\n     PR 46942 [Dan Poirier <poirier pobox.com>]\n\n  *) mod_alias: check sanity in Redirect arguments.\n     PR 44729 [S\u00f6nke Tesch <st kino-fahrplan.de>, Jim Jagielski]\n\n  *) mod_proxy_http: fix Host: header for literal IPv6 addresses.\n     PR 47177 [Carlos Garcia Braschi <cgbraschi gmail.com>]\n\n  *) mod_cache: Add CacheIgnoreURLSessionIdentifiers directive to ignore\n     defined session identifiers encoded in the URL when caching.\n     [Ruediger Pluem]\n\n  *) mod_rewrite: Fix the error string returned by RewriteRule.\n     RewriteRule returned \"RewriteCond: bad flag delimiters\" when the 3rd\n     argument of RewriteRule was not started with \"[\" or not ended with \"]\".\n     PR 45082 [Vitaly Polonetsky <m_vitaly topixoft.com>]\n\n  *) Windows: Fix usage message.\n     [Rainer Jung]\n\n  *) apachectl: When passing through arguments to httpd in\n     non-SysV mode, use the \"$@\" syntax to preserve arguments.\n     [Eric Covener]\n\n  *) mod_dbd: add DBDInitSQL directive to enable SQL statements to\n     be run when a connection is opened.  PR 46827\n     [Marko Kevac <mkevac gmail.com>]\n\n  *) mod_cgid: Improve handling of long AF_UNIX socket names (ScriptSock).\n     PR 47037.  [Jeff Trawick]\n\n  *) mod_proxy_ajp: Check more strictly that the backend follows the AJP\n     protocol. [Mladen Turk]\n\n  *) mod_proxy_ajp: Forward remote port information by default.\n     [Rainer Jung]\n\n  *) Allow MPMs to be loaded dynamically, as with most other modules.  Use\n     --enable-mpms-shared={list|\"all\"} to enable.  This required changes to\n     the MPM interfaces.  Removed: mpm.h, mpm_default.h (as an installed\n     header), APACHE_MPM_DIR, MPM_NAME, ap_threads_per_child,\n     ap_max_daemons_limit, ap_my_generation, etc.  ap_mpm_query() can't be\n     called until after the register-hooks phase.  [Jeff Trawick]\n\n  *) mod_ssl: Add SSLProxyCheckPeerExpire and SSLProxyCheckPeerCN directives\n     to enable stricter checking of remote server certificates.\n     [Ruediger Pluem]\n\n  *) ab: Fix a 100% CPU loop on platforms where a failed non-blocking connect\n     returns EINPROGRESS and a subsequent poll() returns only POLLERR.\n     Observed on HP-UX.  [Eric Covener]\n\n  *) Remove broken support for BeOS, TPF, and even older platforms such\n     as A/UX, Next, and Tandem.  [Jeff Trawick]\n\n  *) mod_proxy_ftp: Add ProxyFtpListOnWildcard directive to allow files with\n     globbing characters to be retrieved instead of converted into a\n     directory listing.  PR 46789 [Dan Poirier <poirier pobox.com>]\n\n  *) Provide ap_retained_data_create()/ap_retained_data_get() for preservation\n     of module state across unload/load.  [Jeff Trawick]\n\n  *) mod_substitute: Fix a memory leak. PR 44948\n     [Dan Poirier <poirier pobox.com>]\n\nChanges with Apache 2.3.2\n\n  *) mod_mime_magic: Fix detection of compressed content. [Rainer Jung]\n\n  *) mod_negotiation: Escape pathes of filenames in 406 responses to avoid\n     HTML injections and HTTP response splitting.  PR 46837.\n     [Geoff Keating <geoffk apple.com>]\n\n  *) mod_ssl: add support for type-safe STACK constructs in OpenSSL\n     development HEAD.  PR 45521.  [Kaspar Brand, Sander Temme]\n\n  *) ab: Fix maintenance of the pollset to resolve EALREADY errors\n     with kqueue (BSD/OS X) and excessive CPU with event ports (Solaris).\n     PR 44584.  Use APR_POLLSET_NOCOPY for better performance with some\n     pollset implementations.  [Jeff Trawick]\n\n  *) mod_disk_cache: The module now turns off sendfile support if\n     'EnableSendfile off' is defined globally. [Lars Eilebrecht]\n\n  *) mod_deflate: Adjust content metadata before bailing out on 304\n     responses so that the metadata does not differ from 200 response.\n     [Roy T. Fielding]\n\n  *) mod_deflate: Fix creation of invalid Etag headers. We now make sure\n     that the Etag value is properly quoted when adding the gzip marker.\n     PR 39727, 45023. [Lars Eilebrecht, Roy T. Fielding]\n\n  *) Added 20x22 icons for ODF, SVG, and XML documents.  PR 37185.\n     [Peter Harlow]\n\n  *) Disabled DefaultType directive and removed ap_default_type()\n     from core.  We now exclude Content-Type from responses for which\n     a media type has not been configured via mime.types, AddType,\n     ForceType, or some other mechanism. PR 13986. [Roy T. Fielding]\n\n  *) mod_rewrite: Add IPV6 variable to RewriteCond\n     [Ryan Phillips <ryan-apache trolocsis.com>]\n\n  *) core: Enhance KeepAliveTimeout to support a value in milliseconds.\n     PR 46275. [Takashi Sato]\n\n  *) rotatelogs: Allow size units B, K, M, G and combination of\n     time and size based rotation. [Rainer Jung]\n\n  *) rotatelogs: Add flag for verbose (debug) output. [Rainer Jung]\n\n  *) mod_ssl: Fix merging of SSLRenegBufferSize directive. PR 46508\n     [<tlhackque yahoo.com>]\n\n  *) core: Translate the the status line to ASCII on EBCDIC platforms in\n     ap_send_interim_response() and for locally generated \"100 Continue\"\n     responses.  [Eric Covener]\n\n  *) prefork: Fix child process hang during graceful restart/stop in\n     configurations with multiple listening sockets.  PR 42829.  [Joe Orton,\n     Jeff Trawick]\n\n  *) mod_session_crypto: Ensure that SessionCryptoDriver can only be\n     set in the global scope. [Graham Leggett]\n\n  *) mod_ext_filter: We need to detect failure to startup the filter\n     program (a mangled response is not acceptable).  Fix to detect\n     failure, and offer configuration option either to abort or\n     to remove the filter and continue.\n     PR 41120 [Nick Kew]\n\n  *) mod_session_crypto: Rewrite the session_crypto module against the\n     apr_crypto API. [Graham Leggett]\n\n  *) mod_auth_form: Fix a pool lifetime issue, don't remove the subrequest\n     until the main request is cleaned up. [Graham Leggett]\n\nChanges with Apache 2.3.1\n\n  *) ap_slotmem: Add in new slot-based memory access API impl., including\n     2 providers (mod_sharedmem and mod_plainmem) [Jim Jagielski,\n     Jean-Frederic Clere, Brian Akins <brian.akins turner.com>]\n\n  *) mod_include: support generating non-ASCII characters as entities in SSI\n     PR 25202 [Nick Kew]\n\n  *) core/utils: Enhance ap_escape_html API to support escaping non-ASCII chars\n     PR 25202 [Nick Kew]\n\n  *) mod_rewrite: fix \"B\" flag breakage by reverting r5589343\n    PR 45529 [Bob Ionescu <bobsiegen googlemail.com>]\n\n  *) CGI: return 504 (Gateway timeout) rather than 500 when a script\n     times out before returning status line/headers.\n     PR 42190 [Nick Kew]\n\n  *) mod_cgid: fix segfault problem on solaris.\n     PR 39332 [Masaoki Kobayashi <masaoki techfirm.co.jp>]\n\n  *) mod_proxy_scgi: Added. [Andr\u00e9 Malo]\n\n  *) mod_cache: Introduce 'no-cache' per-request environment variable\n     to prevent the saving of an otherwise cacheable response.\n     [Eric Covener]\n\n  *) mod_rewrite: Introduce DiscardPathInfo|DPI flag to stop the troublesome\n     way that per-directory rewrites append the previous notion of PATH_INFO\n     to each substitution before evaluating subsequent rules.\n     PR 38642 [Eric Covener]\n\n  *) mod_cgid: Do not add an empty argument when calling the CGI script.\n     PR 46380 [Ruediger Pluem]\n\n  *) scoreboard: Remove unused sb_type from process_score.\n     [Torsten Foertsch <torsten.foertsch gmx.net>, Chris Darroch]\n\n  *) mod_ssl: Add SSLRenegBufferSize directive to allow changing the\n     size of the buffer used for the request-body where necessary\n     during a per-dir renegotiation.  PR 39243.  [Joe Orton]\n\n  *) mod_proxy_fdpass: New module to pass a client connection over to a separate\n     process that is reading from a unix daemon socket.\n\n  *) mod_ssl: Improve environment variable extraction to be more\n     efficient and to correctly handle DNs with duplicate tags.\n     PR 45975.  [Joe Orton]\n\n  *) Remove the obsolete serial attribute from the RPM spec file. Compile\n     against the external pcre. Add missing binaries fcgistarter, and\n     mod_socache* and mod_session*. [Graham Leggett]\n\nChanges with Apache 2.3.0\n\n  *) mod_ratelimit: New module to do bandwidth rate limiting. [Paul Querna]\n\n  *) Remove X-Pad header which was added as a work around to a bug in\n     Netscape 2.x to 4.0b2. [Takashi Sato <takashi lans-tv.com>]\n\n  *) Add DTrace Statically Defined Tracing (SDT) probes.\n    [Theo Schlossnagle <jesus omniti.com>, Paul Querna]\n\n  *) mod_proxy_balancer: Move all load balancing implementations\n     as individual, self-contained mod_proxy submodules under\n     modules/proxy/balancers [Jim Jagielski]\n\n  *) Rename APIs to include ap_ prefix:\n        find_child_by_pid -> ap_find_child_by_pid\n        suck_in_APR -> ap_suck_in_APR\n        sys_privileges_handlers -> ap_sys_privileges_handlers\n        unixd_accept -> ap_unixd_accept\n        unixd_config -> ap_unixd_config\n        unixd_killpg -> ap_unixd_killpg\n        unixd_set_global_mutex_perms -> ap_unixd_set_global_mutex_perms\n        unixd_set_proc_mutex_perms -> ap_unixd_set_proc_mutex_perms\n        unixd_set_rlimit -> ap_unixd_set_rlimit\n     [Paul Querna]\n\n  *) mod_lbmethod_heartbeat: New module to load balance mod_proxy workers\n     based on heartbeats. [Paul Querna]\n\n  *) mod_heartmonitor: New module to collect heartbeats, and write out a file\n     so that other modules can load balance traffic as needed. [Paul Querna]\n\n  *) mod_heartbeat: New module to generate multicast heartbeats to know if a\n     server is online. [Paul Querna]\n\n  *) mod_buffer: Honour the flush bucket and flush the buffer in the\n     input filter. Make sure that metadata buckets are written to\n     the buffer, not to the final brigade. [Graham Leggett]\n\n  *) mod_buffer: Optimise the buffering of heap buckets when the heap\n     buckets stay exactly APR_BUCKET_BUFF_SIZE long. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) mod_buffer: Optional support for buffering of the input and output\n     filter stacks. Can collapse many small buckets into fewer larger\n     buckets, and prevents excessively small chunks being sent over\n     the wire. [Graham Leggett]\n\n  *) mod_privileges: new module to make httpd on Solaris privileges-aware\n     and to enable different virtualhosts to run with different\n     privileges and Unix user/group IDs [Nick Kew]\n\n  *) mod_mem_cache: this module has been removed. [William Rowe]\n\n  *) authn/z: Remove mod_authn_default and mod_authz_default.\n     [Chris Darroch]\n\n  *) authz: Fix handling of authz configurations, make default authz\n     logic replicate 2.2.x authz logic, and replace <Satisfy*>, Reject,\n     and AuthzMergeRules directives with Match, <Match*>, and AuthzMerge\n     directives.  [Chris Darroch]\n\n  *) mod_authn_core: Prevent crash when provider alias created to\n     provider which is not yet registered.  [Chris Darroch]\n\n  *) mod_authn_core: Add AuthType of None to support disabling\n     authentication.  [Chris Darroch]\n\n  *) core: Allow <Limit> and <LimitExcept> directives to nest, and\n     constrain their use to conform with that of other access control\n     and authorization directives.  [Chris Darroch]\n\n  *) unixd: turn existing code into a module, and turn the set user/group\n     and chroot into a child_init function. [Nick Kew]\n\n  *) mod_dir: Support \"DirectoryIndex disabled\"\n     Suggested By Andr\u00e9 Warnier <aw ice-sa.com> [Eric Covener]\n\n  *) mod_ssl: Send Content-Type application/ocsp-request for POST requests to\n     OSCP responders. PR 46014 [Dr Stephen Henson <steve openssl.org>]\n\n  *) mod_authnz_ldap: don't return NULL-valued environment variables to\n     other modules.  PR 39045 [Francois Pesce <francois.pesce gmail.com>]\n\n  *) Don't adjust case in pathname components that are not of interest\n     to mod_mime.  Fixes mod_negotiation's use of such components.\n     PR 43250 [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) Be tolerant in what you accept - accept slightly broken\n     status lines from a backend provided they include a valid status code.\n     PR 44995 [Rainer Jung <rainer.jung kippdata.de>]\n\n  *) New module mod_sed: filter Request/Response bodies through sed\n     [Basant Kumar Kukreja <basant.kukreja sun.com>]\n\n  *) mod_auth_form: Make sure that basic authentication is correctly\n     faked directly after login. [Graham Leggett]\n\n  *) mod_session_cookie, mod_session_dbd: Make sure cookies are set both\n     within the output headers and error output headers, so that the\n     session is maintained across redirects. [Graham Leggett]\n\n  *) mod_auth_form: Make sure the logged in user is populated correctly\n     after a form login. Fixes a missing REMOTE_USER variable directly\n     following a login. [Graham Leggett]\n\n  *) mod_session_cookie: Make sure that cookie attributes are correctly\n     included in the blank cookie when cookies are removed. This fixes an\n     inability to log out when using mod_auth_form. [Graham Leggett]\n\n  *) mod_session: Prevent a segfault when a CGI script sets a cookie with a\n     null value. [David Shane Holden <dpejesh apache.org>]\n\n  *) core, authn/z: Determine registered authn/z providers directly in\n     ap_setup_auth_internal(), which allows optional functions that just\n     wrapped ap_list_provider_names() to be removed from authn/z modules.\n     [Chris Darroch]\n\n  *) authn/z: Convert common provider version strings to macros.\n     [Chris Darroch]\n\n  *) core: When testing for slash-terminated configuration paths in\n     ap_location_walk(), don't look past the start of an empty string\n     such as that created by a <Location \"\"> directive.\n     [Chris Darroch]\n\n  *) core, mod_proxy: If a kept_body is present, it becomes safe for\n     subrequests to support message bodies. Make sure that safety\n     checks within the core and within the proxy are not triggered\n     when kept_body is present. This makes it possible to embed\n     proxied POST requests within mod_include. [Graham Leggett]\n\n  *) mod_auth_form: Make sure the input filter stack is properly set\n     up before reading the login form. Make sure the kept body filter\n     is correctly inserted to ensure the body can be read a second\n     time safely should the authn be successful. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) mod_request: Insert the KEPT_BODY filter via the insert_filter\n     hook instead of during fixups. Add a safety check to ensure the\n     filters cannot be inserted more than once. [Graham Leggett,\n     Ruediger Pluem]\n\n  *) ap_cache_cacheable_headers_out() will (now) always\n     merge an error headers _before_ clearing them and _before_\n     merging in the actual entity headers and doing normal\n     hop-by-hop cleansing. [Dirk-Willem van Gulik].\n\n  *) cache: retire ap_cache_cacheable_hdrs_out() which was used\n     for both in- and out-put headers; and replace it by a single\n     ap_cache_cacheable_headers() wrapped in a in- and out-put\n     specific ap_cache_cacheable_headers_in()/out(). The latter\n     which will also merge error and ensure content-type. To keep\n     cache modules consistent with ease. This API change bumps\n     up the minor MM by one [Dirk-Willem van Gulik].\n\n  *) Move the KeptBodySize directive, kept_body filters and the\n     ap_parse_request_body function out of the http module and into a\n     new module called mod_request, reducing the size of the core.\n     [Graham Leggett]\n\n  *) mod_dbd: Handle integer configuration directive parameters with a\n     dedicated function.\n\n  *) Change the directives within the mod_session* modules to be valid\n     both inside and outside the location/directory sections, as\n     suggested by wrowe. [Graham Leggett]\n\n  *) mod_auth_form: Add a module capable of allowing end users to log\n     in using an HTML form, storing the credentials within mod_session.\n     [Graham Leggett]\n\n  *) Add a function to the http filters that is able to parse an HTML\n     form request with the type of application/x-www-form-urlencoded.\n     [Graham Leggett]\n\n  *) mod_session_crypto: Initialise SSL in the post config hook.\n     [Ruediger Pluem, Graham Leggett]\n\n  *) mod_session_dbd: Add a session implementation capable of storing\n     session information in a SQL database via the dbd interface. Useful\n     for sites where session privacy is important. [Graham Leggett]\n\n  *) mod_session_crypto: Add a session encoding implementation capable\n     of encrypting and decrypting sessions wherever they may be stored.\n     Introduces a level of privacy when sessions are stored on the\n     browser. [Graham Leggett]\n\n  *) mod_session_cookie: Add a session implementation capable of storing\n     session information within cookies on the browser. Useful for high\n     volume sites where server bound sessions are too resource intensive.\n     [Graham Leggett]\n\n  *) mod_session: Add a generic session interface to unify the different\n     attempts at saving persistent sessions across requests.\n     [Graham Leggett]\n\n  *) core, authn/z: Avoid calling access control hooks for internal requests\n     with configurations which match those of initial request.  Revert to\n     original behaviour (call access control hooks for internal requests\n     with URIs different from initial request) if any access control hooks or\n     providers are not registered as permitting this optimization.\n     Introduce wrappers for access control hook and provider registration\n     which can accept additional mode and flag data.  [Chris Darroch]\n\n  *) Introduced ap_expr API for expression evaluation.\n     This is adapted from mod_include, which is the first module\n     to use the new API.\n     [Nick Kew]\n\n  *) mod_authz_dbd: When redirecting after successful login/logout per\n     AuthzDBDRedirectQuery, do not report authorization failure, and use\n     first row returned by database query instead of last row.\n     [Chris Darroch]\n\n  *) mod_ldap: Correctly return all requested attribute values\n     when some attributes have a null value.\n     PR 44560 [Anders Kaseorg <anders kaseorg.com>]\n\n  *) core: check symlink ownership if both FollowSymlinks and\n     SymlinksIfOwnerMatch are set [Nick Kew]\n\n  *) core: fix origin checking in SymlinksIfOwnerMatch\n     PR 36783 [Robert L Mathews <rob-apache.org.bugs tigertech.net>]\n\n  *) Activate mod_cache, mod_file_cache and mod_disk_cache as part of the\n     'most' set for '--enable-modules' and '--enable-shared-mods'. Include\n     mod_mem_cache in 'all' as well. [Dirk-Willem van Gulik]\n\n  *) Also install mod_so.h, mod_rewrite.h and mod_cache.h; as these\n     contain public function declarations which are useful for\n     third party module authors. PR 42431 [Dirk-Willem van Gulik].\n\n  *) mod_dir, mod_negotiation: pass the output filter information\n     to newly created sub requests; as these are later on used\n     as true requests with an internal redirect. This allows for\n     mod_cache et.al. to trap the results of the redirect.\n     [Dirk-Willem van Gulik, Ruediger Pluem]\n\n  *) mod_ldap: Add support (taking advantage of the new APR capability)\n     for ldap rebind callback while chasing referrals. This allows direct\n     searches on LDAP servers (in particular MS Active Directory 2003+)\n     using referrals without the use of the global catalog.\n     PRs 26538, 40268, and 42557 [Paul J. Reder]\n\n  *) ApacheMonitor.exe: Introduce --kill argument for use by the\n     installer.  This will permit the installation tool to remove\n     all running instances before attempting to remove the .exe.\n     [William Rowe]\n\n  *) mod_ssl: Add support for OCSP validation of client certificates.\n     PR 41123.  [Marc Stern <marc.stern approach.be>, Joe Orton]\n\n  *) mod_serf: New module for Reverse Proxying. [Paul Querna]\n\n  *) core: Add the option to keep aside a request body up to a certain\n     size that would otherwise be discarded, to be consumed by filters\n     such as mod_include. When enabled for a directory, POST requests\n     to shtml files can be passed through to embedded scripts as POST\n     requests, rather being downgraded to GET requests. [Graham Leggett]\n\n  *) mod_ssl: Fix TLS upgrade (RFC 2817) support.  PR 41231.  [Joe Orton]\n\n  *) scoreboard: Correctly declare ap_time_process_request.\n     PR 43789 [Tom Donovan <Tom.Donovan acm.org>]\n\n  *) core; scoreboard: ap_get_scoreboard_worker(sbh) now takes the sbh member\n     from the connection rec, ap_get_scoreboard_worker(proc, thread) will now\n     provide the unusual legacy lookup.  [William Rowe]\n\n  *) mpm winnt: fix null pointer dereference\n     PR 42572 [Davi Arnaut]\n\n  *) mod_authnz_ldap, mod_authn_dbd: Tidy up the code to expose authn\n     parameters to the environment. Improve portability to\n     EBCDIC machines by using apr_toupper(). [Martin Kraemer]\n\n  *) mod_ldap, mod_authnz_ldap: Add support for nested groups (i.e. the ability\n     to authorize an authenticated user via a \"require ldap-group X\" directive\n     where the user is not in group X, but is in a subgroup contained in X.\n     PR 42891 [Paul J. Reder]\n\n  *) mod_ssl: Add support for caching SSL Sessions in memcached. [Paul Querna]\n\n  *) apxs: Enhance -q flag to print all known variables and their values\n     when invoked without variable name(s).\n     [William Rowe, Sander Temme]\n\n  *) apxs: Eliminate run-time check for mod_so.  PR 40653.\n     [David M. Lee <dmlee crossroads.com>]\n\n  *) beos MPM: Create pmain pool and run modules' child_init hooks when\n     entering ap_mpm_run(), then destroy pmain when exiting ap_mpm_run().\n     [Chris Darroch]\n\n  *) netware MPM: Destroy pmain pool when exiting ap_mpm_run() so that\n     cleanups registered in modules' child_init hooks are performed.\n     [Chris Darroch]\n\n  *) Fix issue which could cause error messages to be written to access logs\n     on Win32.  PR 40476.  [Tom Donovan <Tom.Donovan acm.org>]\n\n  *) The LockFile directive, which specifies the location of\n     the accept() mutex lockfile, is deprecated. Instead, the\n     AcceptMutex directive now takes an optional lockfile\n     location parameter, ala SSLMutex. [Jim Jagielski]\n\n  *) mod_authn_dbd: Export any additional columns queried in the SQL select\n     into the environment with the name AUTHENTICATE_<COLUMN>. This brings\n     mod_authn_dbd behaviour in line with mod_authnz_ldap. [Graham Leggett]\n\n  *) mod_dbd: Key the storage of prepared statements on the hex string\n     value of server_rec, rather than the server name, as the server name\n     may change (eg when the server name is set) at any time, causing\n     weird behaviour in modules dependent on mod_dbd. [Graham Leggett]\n\n  *) mod_proxy_fcgi: Added win32 build. [Mladen Turk]\n\n  *) sendfile_nonblocking() takes the _brigade_ as an argument, gets\n     the first bucket from the brigade, finds it not to be a FILE\n     bucket and barfs. The fix is to pass a bucket rather than a brigade.\n     [Niklas Edmundsson <nikke acc.umu.se>]\n\n  *) mod_rewrite: support rewritemap by SQL query [Nick Kew]\n\n  *) ap_get_server_version() has been removed.  Third-party modules must\n     now use ap_get_server_banner() or ap_get_server_description().\n     [Jeff Trawick]\n\n  *) All MPMs: Introduce a check_config phase between pre_config and\n     open_logs, to allow modules to review interdependent configuration\n     directive values and adjust them while messages can still be logged\n     to the console.  Handle relevant MPM directives during this phase\n     and format messages for both the console and the error log, as\n     appropriate.  [Chris Darroch]\n\n  *) core: Do not allow internal redirects like the DirectoryIndex of mod_dir\n     to circumvent the symbolic link checks imposed by FollowSymLinks and\n     SymLinksIfOwnerMatch. [Nick Kew, Ruediger Pluem, William Rowe]\n\n  *) New SSLLogLevelDebugDump [ None (default) | IO (not bytes) | Bytes ]\n     configures the I/O Dump of SSL traffic, when LogLevel is set to Debug.\n     The default is none as this is far greater debugging resolution than\n     the typical administrator is prepared to untangle.  [William Rowe]\n\n  *) mod_disk_cache: If possible, check if the size of an object to cache is\n     within the configured boundaries before actually saving data.\n     [Niklas Edmundsson <nikke acc.umu.se>]\n\n  *) Worker and event MPMs: Remove improper scoreboard updates which were\n     performed in the event of a fork() failure.  [Chris Darroch]\n\n  *) Add support for fcgi:// proxies to mod_rewrite.\n     [Markus Schiegl <ms schiegl.com>]\n\n  *) Remove incorrect comments from scoreboard.h regarding conditional\n     loading of worker_score structure with mod_status, and remove unused\n     definitions relating to old life_status field.\n     [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) Remove allocation of memory for unused array of lb_score pointers\n     in ap_init_scoreboard().  [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) Add mod_proxy_fcgi, a FastCGI back end for mod_proxy.\n     [Garrett Rooney, Jim Jagielski, Paul Querna]\n\n  *) Event MPM: Fill in the scoreboard's tid field. PR 38736.\n     [Chris Darroch <chrisd pearsoncmg.com>]\n\n  *) mod_charset_lite: Remove Content-Length when output filter can\n     invalidate it.  Warn when input filter can invalidate it.\n     [Jeff Trawick]\n\n  *) Authz: Add the new module mod_authn_core that will provide common\n     authn directives such as 'AuthType', 'AuthName'.  Move the directives\n     'AuthType' and 'AuthName' out of the core module and merge mod_authz_alias\n     into mod_authn_core. [Brad Nicholes]\n\n  *) Authz: Move the directives 'Order', 'Allow', 'Deny' and 'Satisfy'\n     into the new module mod_access_compat which can be loaded to provide\n     support for these directives.\n     [Brad Nicholes]\n\n  *) Authz: Move the 'Require' directive from the core module as well as\n     add the directives '<SatisfyAll>', '<SatisfyOne>', '<RequireAlias>'\n     and 'Reject' to mod_authz_core. The new directives introduce 'AND/OR'\n     logic into the authorization processing. [Brad Nicholes]\n\n  *) Authz: Add the new module mod_authz_core which acts as the\n     authorization provider vector and contains common authz\n     directives. [Brad Nicholes]\n\n  *) Authz: Renamed mod_authz_dbm authz providers from 'group' and\n     'file-group' to 'dbm-group' and 'dbm-file-group'. [Brad Nicholes]\n\n  *) Authz: Added the new authz providers 'env', 'ip', 'host', 'all' to handle\n     host-based access control provided by mod_authz_host and invoked\n     through the 'Require' directive. [Brad Nicholes]\n\n  *) Authz: Convert all of the authz modules from hook based to\n     provider based. [Brad Nicholes]\n\n  *) mod_cache: Add CacheMinExpire directive to set the minimum time in\n     seconds to cache a document.\n     [Brian Akins <brian.akins turner.com>, Ruediger Pluem]\n\n  *) mod_authz_dbd: SQL authz with Login/Session support [Nick Kew]\n\n  *) Fix typo in ProxyStatus syntax error message.\n     [Christophe Jaillet <christophe.jaillet wanadoo.fr>]\n\n  *) Asynchronous write completion for the Event MPM.  [Brian Pane]\n\n  *) Added an End-Of-Request bucket type.  The logging of a request and\n     the freeing of its pool are now done when the EOR bucket is destroyed.\n     This has the effect of delaying the logging until right after the last\n     of the response is sent; ap_core_output_filter() calls the access logger\n     indirectly when it destroys the EOR bucket.  [Brian Pane]\n\n  *) Rewrite of logresolve support utility: IPv6 addresses are now supported\n     and the format of statistical output has changed. [Colm MacCarthaigh]\n\n  *) Rewrite of ap_coreoutput_filter to do nonblocking writes  [Brian Pane]\n\n  *) Added new connection states for handler and write completion\n     [Brian Pane]\n\n  *) mod_cgid: Refuse to work on Solaris 10 due to OS bugs.  PR 34264.\n     [Justin Erenkrantz]\n\n  *) Teach mod_ssl to use arbitrary OIDs in an SSLRequire directive,\n     allowing string-valued client certificate attributes to be used for\n     access control, as in: SSLRequire \"value\" in OID(\"1.3.6.1.4.1.18060.1\")\n     [Martin Kraemer, David Reid]\n\n  [Apache 2.3.0-dev includes those bug fixes and changes with the\n   Apache 2.2.xx tree as documented, and except as noted, below.]\n\nChanges with Apache 2.2.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/CHANGES?view=markup\n\nChanges with Apache 2.0.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.0.x/CHANGES?view=markup\n\n", "APACHE 2.4 STATUS:                        -*- mode: text; coding: utf-8 -*-\nLast modified at [$Date$]\n\nThe current version of this file can be found at:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/STATUS\n\nDocumentation status is maintained separately and can be found at:\n\n  * docs/STATUS in this source tree, or\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/docs/STATUS\n\nThe current development branch of this software can be found at:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/trunk\n\nConsult the following STATUS files for information on related projects:\n\n  * http://svn.apache.org/repos/asf/apr/apr/trunk/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr/branches/1.4.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr-util/branches/1.4.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr/branches/1.5.x/STATUS\n  * http://svn.apache.org/repos/asf/apr/apr-util/branches/1.5.x/STATUS\n\nPatches considered for backport are noted in their branches' STATUS:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.0.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.2.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/STATUS\n\n\n\nRelease history:\n    [NOTE that x.{odd}.z versions are strictly Alpha/Beta releases,\n          while x.{even}.z versions are Stable/GA releases.]\n\n    2.4.11  : In development.\n    2.4.10  : Tagged on July 15, 2014. Released July 21, 2014\n    2.4.9   : Tagged on March 13, 2014. Released on March 17, 2014\n    2.4.8   : Tagged on March 11, 2014. Not released.\n    2.4.7   : Tagged on November 19, 2013. Released on Nov 25, 2013\n    2.4.6   : Tagged on July 15, 2013. Released July, 22, 2013\n    2.4.5   : Tagged on July 11, 2013, not released.\n    2.4.4   : Tagged on February 18, 2013. Released Feb 25, 2013\n    2.4.3   : Tagged on August 17, 2012. Released Aug 18, 2012\n    2.4.2   : Tagged on April 5, 2012. Released Apr 17, 2012.\n    2.4.1   : Tagged on February 13, 2012. Released Feb 21, 2012.\n    2.4.0   : Tagged on January 16, 2012, not released.\n    2.3.16  : Tagged on December 15, 2011.\n    2.3.15  : Tagged on November 8, 2011. Released Nov. 15, 2011.\n    2.3.14  : Tagged on August 1, 2011. Released Aug. 9, 2011.\n    2.3.13  : Tagged on June 28, 2011, not released.\n    2.3.12  : Tagged on May 11, 2011. Released May 23, 2011.\n    2.3.11  : Released as Beta on March 7, 2011.\n    2.3.10  : Tagged on December 13, 2010. Released Dec 21, 2010.\n    2.3.9   : Tagged on November 23, 2010, not released.\n    2.3.8   : Tagged on August 24, 2010.\n    2.3.7   : Tagged on August 19, 2010, not released.\n    2.3.6   : Released on June 21, 2010.\n    2.3.5   : Released on January 26, 2010.\n    2.3.4   : Released on December 8, 2009.\n    2.3.3   : Tagged on November 11, 2009, not released.\n    2.3.2   : Tagged on March 23, 2009, not released.\n    2.3.1   : Tagged on January 2, 2009, not released.\n    2.3.0   : Tagged on December 6, 2008, not released.\n\nContributors looking for a mission:\n\n  * Just do an egrep on \"TODO\" or \"XXX\" in the source.\n\n  * Review the bug database at: http://issues.apache.org/bugzilla/\n\n  * Review the \"PatchAvailable\" bugs in the bug database:\n\n    https://issues.apache.org/bugzilla/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&product=Apache+httpd-2&keywords=PatchAvailable\n\n    After testing, you can append a comment saying \"Reviewed and tested\".\n\n  * Open bugs in the bug database.\n\n  * See also the STATUS file in the docs/ directory, which lists documentation-specific TODO items.\n\n\nCURRENT RELEASE NOTES:\n\n  * Forward binary compatibility is expected of Apache 2.4.x releases, such\n    that no MMN major number changes will occur after 2.4.1.  Such changes can\n    only be made in the trunk.\n\n  * All commits to branches/2.4.x must be reflected in SVN trunk,\n    as well, if they apply.  Logical progression is commit to trunk\n    then merge into branches/2.4.x, as applicable.\n\n  * Current exceptions for RTC for this branch:\n    . mod_lua\n    . documentation\n    . non-Unix build\n    . non-Unix, single-platform code\n\nRELEASE SHOWSTOPPERS:\n\n\n\nPATCHES ACCEPTED TO BACKPORT FROM TRUNK:\n  [ start all new proposals below, under PATCHES PROPOSED. ]\n\n\n\nPATCHES PROPOSED TO BACKPORT FROM TRUNK:\n  [ New proposals should be added at the end of the list ]\n\n   * mod_proxy: Preserve original request headers even if they differ\n                from the ones to be forwarded to the backend. PR 45387.\n     trunk patch: http://svn.apache.org/r1588527\n     2.4.x patch: trunk works (modulo CHANGES)\n     +1: ylavic, rjung\n\n   * mod_proxy: Don't limit the size of the connectable Unix Domain Socket paths.\n                [Graham Dumpleton, Christophe Jaillet, Yann Ylavic]\n     trunk patch: http://svn.apache.org/r1598946\n                  http://svn.apache.org/r1602989\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-ap_proxy_connect_uds.patch\n                  (modulo CHANGES/MMN)\n     +1: ylavic, jim\n\n   * mod_ssl, event: Ensure that the SSL close notify alert is flushed to the client.\n                     PR54998.\n     trunk patch: http://svn.apache.org/r1601184\n                  http://svn.apache.org/r1601274\n                  http://svn.apache.org/r1601185\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-SSL-shutdown.patch\n                  (modulo CHANGES/MMN)\n     +1: ylavic, rjung\n\n   * mod_proxy: Shutdown (eg. SSL close notify) the backend connection before closing.\n     trunk patch: http://svn.apache.org/r1601291\n                  http://svn.apache.org/r1601630\n     2.4.x patch: http://people.apache.org/~ylavic/httpd-2.4.x-proxy-SSL-shutdown.patch\n                  (modulo CHANGES)\n     note: depends on ap_shutdown_conn() from r1601185 above.\n     +1: ylavic, rjung\n\n   * mpm_winnt service.c: Normalize all error and status messages, clean up\n     source formatting, and accept utf-8 service names/descriptions for i18n.\n     trunk patches: http://svn.apache.org/r1611165\n                    http://svn.apache.org/r1611169\n                    http://svn.apache.org/r1611244\n     2.4.x patches: trunk works\n     +1: wrowe, gsmith\n\n   * mod_systemd: New module, for integration with systemd on Linux.\n     trunk patch: http://svn.apache.org/r1393976\n                  http://svn.apache.org/r1393997\n                  http://svn.apache.org/r1484554\n                  http://svn.apache.org/r1528032\n                  http://svn.apache.org/r1528034\n                  http://svn.apache.org/r1614821\n                  http://svn.apache.org/r1618579\n                  http://svn.apache.org/r1618588\n     2.4.x patch: http://people.apache.org/~jkaluza/patches/mod_systemd/httpd-2.4.x-mod_systemd.patch\n     +1: jkaluza\n\n   * core: Add support for systemd socket activation.\n     trunk patch: http://svn.apache.org/r1511033\n                  http://svn.apache.org/r1608686\n                  http://svn.apache.org/r1608694\n                  http://svn.apache.org/r1608703\n                  http://svn.apache.org/r1608721\n                  http://svn.apache.org/r1608744\n     2.4.x patch: http://people.apache.org/~jkaluza/patches/mod_systemd/httpd-2.4.x-socket-activation.patch\n     +1: jkaluza\n\n   * mod_buffer: Forward flushed input data immediately and avoid (unlikely)\n                 access to freed memory.\n     trunk patch: http://svn.apache.org/r1632742\n                  http://svn.apache.org/r1634836 (CHANGES entry)\n     2.4.x patches: trunk works (modulo CHANGES).\n     +1: ylavic\n\n   * mod_cgi: Log CGI script stderr to ScriptLog, use APLOGNO for\n     log_scripterror errors.\n     trunk patch: http://svn.apache.org/r1626978\n     2.4.x patch: trunk works\n     +1 jkaluza\n     ylavic: shouldn't we also (still) log on ErrorLog, at least on 2.4.x?\n             The log_script_err() line may somewhere be expected in error_log.\n             The new AH* in script_log could also cause parsing issues, but I'm\n             fine with this personnaly.\n\n   * mod_proxy_fcgi: Ignore body data from backend for 304 responses. PR 57198.\n     trunk patch: http://svn.apache.org/r1640495\n     2.4.x patch: trunk works\n     +1 jkaluza, covener\n     ylavic: Shouldn't we handle more cases here to ignore the body?\n             Please see my comment on dev@ as a reply to commit e-mail.\n\n   * mod_proxy: Add ap_proxy_define_match_worker() and use it for ProxyPassMatch\n     and ProxyMatch section to distinguish between normal workers and workers\n     with regex substitutions in the name. Implement handling of such workers\n     in ap_proxy_get_worker(). Fixes the bug when regex workers were not\n     matched and used for request. PR 43513.\n     trunk patch: http://svn.apache.org/r1609680\n                  http://svn.apache.org/r1641381\n     2.4.x patch: trunk works\n     +1: jkaluza, ylavic\n\n   * mod_rewrite: use the context info API to alleviate the need to specify\n                  a RewriteBase in some situations\n     trunk patch: http://svn.apache.org/r1642484\n     2.4.x patch: trunk works\n     +1 covener\n\nOTHER PROPOSALS\n\n   * A list of further possible backports can be found at: \n     http://people.apache.org/~rjung/patches/possible-backports-httpd-trunk-2_4.txt\n     If you want to propose one of those, please add them above.\n\n\nPATCHES/ISSUES THAT ARE BEING WORKED\n\n\nPATCHES/ISSUES THAT ARE STALLED\n\n  * core: Stop the HTTP_IN filter from attempting to write error buckets\n    to the output filters\n    trunk patch: https://svn.apache.org/viewvc?view=revision&revision=1482522\n                 https://svn.apache.org/viewvc?view=revision&revision=1482918\n    2.4.x patch: /* working on it */\n    +1:  jim\n\n  * mod_proxy: Ensure network errors detected by the proxy are returned as\n    504 Gateway Timout as opposed to 502 Bad Gateway\n    trunk patch: https://svn.apache.org/viewvc?view=revision&revision=1480058\n    2.4.x patch: trunk patch works modulo CHANGES\n    +1:\n    -1: rpluem: This change is still disputed. See\n        http://mail-archives.apache.org/mod_mbox/httpd-dev/201305.mbox/%3C1B16B9E3-87BA-4EEF-939C-7C7313B54714%40gbiv.com%3E\n\n  * cross-compile: allow to provide CC_FOR_BUILD so that gen_test_char will be\n    compiled by the build compiler instead of the host compiler.\n    Also set CC_FOR_BUILD to 'cc' when cross-compilation is detected.\n    Trunk patches: http://svn.apache.org/viewvc?view=revision&revision=1327907\n                   http://svn.apache.org/viewvc?view=revision&revision=1328390\n                   http://svn.apache.org/viewvc?view=revision&revision=1328714\n    2.4 patch: http://people.apache.org/~fuankg/diffs/httpd-2.4.x-cross_compile.diff\n    fuankg: on hold until we agree for a better and more simple solution ...\n\n   * mod_ssl: Add support for Next Protocol Negotiation.\n     Trunk patch:\n       http://svn.apache.org/viewvc?view=revision&revision=1332643\n     2.4.x patch:\n       Trunk patch works.\n     +1: ben\n     sf says: Needs r1345599, too.\n              And wrowe's comment about the 2.2 patch is also valid for 2.4:\n              http://svn.apache.org/viewvc?view=revision&revision=1354823\n\n   * Makefile.win: Added copying of .vbs / .wsf CGIs to Windows install target.\n                   Moved fixing of shebang to separate target so that it is\n                   no longer executed by default and all CGIs remain inactive.\n     trunk patch: http://svn.apache.org/viewvc?view=revision&revision=1387984\n                  http://svn.apache.org/viewvc?view=revision&revision=1421203\n                  http://svn.apache.org/viewvc?view=revision&revision=1421591\n     2.4.x patch: http://people.apache.org/~fuankg/diffs/httpd-2.4.x-Makefile.win.diff\n     +1 fuankg, gsmith\n     -.8: trawick\n          This commit is essentially deciding that an httpd install on\n          Windows now has printenv/testcgi written in 2 more languages.\n          To the extent that the usefulness is that it shows how to make scripts\n          of these types executable by httpd, I believe that the documentation\n          is the proper place to solve that.  To the extent that the usefullness\n          is to show how to implement a CGI in these particular languages, I believe\n          that the httpd distribution and documentation in general is not the\n          place for that.  Historically these types of scripts have caused problems\n          for downstream vendorsas well as newbies (and sometimes the intersection\n          of those two groups) who don't understand that these are information leaks\n          once they are enabled, and the subtlety of the way they are disabled (\"Apache\n          messed up the first line; let me fix that\") contributes to that.\n     fuankg notes: I've just added a big warning to all CGI scripts which should now\n          make absolutely clear that these CGIs are for testing purpose only - so those\n          who enable those scripts with inserting the right shebang should be 100% aware\n          of any risks (this should cover your last point).\n     jim: trawick, does the above address your concerns?\n     trawick: to some extent (somebody reading the script gets an idea)\n          Why isn't the configuration requirement documented instead\n          of described indirectly in a sample?\n          Why are these new samples added to the install without three\n          votes?  (I didn't veto it; put your name next to the two\n          existing ones and I'll be satisified that enough people\n          considered this addition as an appropriate solution for a\n          real httpd usability problem.)\n     wrowe: I'd agree with trawick, and suggest that these scripts can begin\n            their life somewhere in the manual/ tree.  This really seems like\n            the place where /usr/share/httpd/examples/ would be useful, but\n            there isn't an ordinary directory for that.  Since we want none\n            of the scripts to function 'out of the box', what about a new\n            cgi-examples/ dir alongside cgi-bin/? Otherwise manual/cgi/examples\n            might work?\n\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include \"mod_lua.h\"\n#include <string.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <apr_thread_mutex.h>\n#include <apr_pools.h>\n#include \"lua_apr.h\"\n#include \"lua_config.h\"\n#include \"apr_optional.h\"\n#include \"mod_ssl.h\"\n#include \"mod_auth.h\"\n#include \"util_mutex.h\"\n\n\n#ifdef APR_HAS_THREADS\n#include \"apr_thread_proc.h\"\n#endif\n\n/* getpid for *NIX */\n#if APR_HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n#if APR_HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n/* getpid for Windows */\n#if APR_HAVE_PROCESS_H\n#include <process.h>\n#endif\n\nAPR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap_lua, AP_LUA, int, lua_open,\n                                    (lua_State *L, apr_pool_t *p),\n                                    (L, p), OK, DECLINED)\n\nAPR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(ap_lua, AP_LUA, int, lua_request,\n                                    (lua_State *L, request_rec *r),\n                                    (L, r), OK, DECLINED)\nstatic APR_OPTIONAL_FN_TYPE(ssl_var_lookup) *lua_ssl_val = NULL;\nstatic APR_OPTIONAL_FN_TYPE(ssl_is_https) *lua_ssl_is_https = NULL;\n\nmodule AP_MODULE_DECLARE_DATA lua_module;\n\n#define AP_LUA_HOOK_FIRST (APR_HOOK_FIRST - 1)\n#define AP_LUA_HOOK_LAST  (APR_HOOK_LAST  + 1)\n\ntypedef struct {\n    const char *name;\n    const char *file_name;\n    const char *function_name;\n    ap_lua_vm_spec *spec;\n} lua_authz_provider_spec;\n\ntypedef struct {\n    lua_authz_provider_spec *spec;\n    apr_array_header_t *args;\n} lua_authz_provider_func;\n\napr_hash_t *lua_authz_providers;\n\ntypedef struct\n{\n    apr_bucket_brigade *tmpBucket;\n    lua_State *L;\n    ap_lua_vm_spec *spec;\n    int broken;\n} lua_filter_ctx;\n\napr_global_mutex_t *lua_ivm_mutex;\napr_shm_t *lua_ivm_shm;\nchar *lua_ivm_shmfile;\n\nstatic apr_status_t shm_cleanup_wrapper(void *unused) {\n    if (lua_ivm_shm) {\n        return apr_shm_destroy(lua_ivm_shm);\n    }\n    return OK;\n}\n\n/**\n * error reporting if lua has an error.\n * Extracts the error from lua stack and prints\n */\nstatic void report_lua_error(lua_State *L, request_rec *r)\n{\n    const char *lua_response;\n    r->status = HTTP_INTERNAL_SERVER_ERROR;\n    r->content_type = \"text/html\";\n    ap_rputs(\"<h3>Error!</h3>\\n\", r);\n    ap_rputs(\"<pre>\", r);\n    lua_response = lua_tostring(L, -1);\n    ap_rputs(ap_escape_html(r->pool, lua_response), r);\n    ap_rputs(\"</pre>\\n\", r);\n\n    ap_log_perror(APLOG_MARK, APLOG_WARNING, 0, r->pool, APLOGNO(01471) \"Lua error: %s\",\n                  lua_response);\n}\n\nstatic void lua_open_callback(lua_State *L, apr_pool_t *p, void *ctx)\n{\n    ap_lua_init(L, p);\n    ap_lua_load_apache2_lmodule(L);\n    ap_lua_load_request_lmodule(L, p);\n    ap_lua_load_config_lmodule(L);\n}\n\nstatic int lua_open_hook(lua_State *L, apr_pool_t *p)\n{\n    lua_open_callback(L, p, NULL);\n    return OK;\n}\n\nstatic const char *scope_to_string(unsigned int scope)\n{\n    switch (scope) {\n    case AP_LUA_SCOPE_ONCE:\n    case AP_LUA_SCOPE_UNSET:\n        return \"once\";\n    case AP_LUA_SCOPE_REQUEST:\n        return \"request\";\n    case AP_LUA_SCOPE_CONN:\n        return \"conn\";\n#if APR_HAS_THREADS\n    case AP_LUA_SCOPE_THREAD:\n        return \"thread\";\n    case AP_LUA_SCOPE_SERVER:\n        return \"server\";\n#endif\n    default:\n        ap_assert(0);\n        return 0;\n    }\n}\n\nstatic void ap_lua_release_state(lua_State* L, ap_lua_vm_spec* spec, request_rec* r) {\n    char *hash;\n    apr_reslist_t* reslist = NULL;\n    if (spec->scope == AP_LUA_SCOPE_SERVER) {\n        ap_lua_server_spec* sspec = NULL;\n        lua_settop(L, 0);\n        lua_getfield(L, LUA_REGISTRYINDEX, \"Apache2.Lua.server_spec\");\n        sspec = (ap_lua_server_spec*) lua_touserdata(L, 1);\n        hash = apr_psprintf(r->pool, \"reslist:%s\", spec->file);\n        if (apr_pool_userdata_get((void **)&reslist, hash,\n                                r->server->process->pool) == APR_SUCCESS) {\n            AP_DEBUG_ASSERT(sspec != NULL);\n            if (reslist != NULL) {\n                apr_reslist_release(reslist, sspec);\n            }\n        }\n    }\n}\n\nstatic ap_lua_vm_spec *create_vm_spec(apr_pool_t **lifecycle_pool,\n                                      request_rec *r,\n                                      const ap_lua_dir_cfg *cfg,\n                                      const ap_lua_server_cfg *server_cfg,\n                                      const char *filename,\n                                      const char *bytecode,\n                                      apr_size_t bytecode_len,\n                                      const char *function,\n                                      const char *what)\n{\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec = apr_pcalloc(r->pool, sizeof(ap_lua_vm_spec));\n\n    spec->scope = cfg->vm_scope;\n    spec->pool = r->pool;\n    spec->package_paths = cfg->package_paths;\n    spec->package_cpaths = cfg->package_cpaths;\n    spec->cb = &lua_open_callback;\n    spec->cb_arg = NULL;\n    spec->bytecode = bytecode;\n    spec->bytecode_len = bytecode_len;\n    spec->codecache = (cfg->codecache == AP_LUA_CACHE_UNSET) ? AP_LUA_CACHE_STAT : cfg->codecache;\n    spec->vm_min = cfg->vm_min ? cfg->vm_min : 1;\n    spec->vm_max = cfg->vm_max ? cfg->vm_max : 1;\n    \n    if (filename) {\n        char *file;\n        apr_filepath_merge(&file, server_cfg->root_path,\n                           filename, APR_FILEPATH_NOTRELATIVE, r->pool);\n        spec->file = file;\n    }\n    else {\n        spec->file = r->filename;\n    }\n    ap_log_rerror(APLOG_MARK, APLOG_TRACE2, 0, r, APLOGNO(02313)\n                  \"%s details: scope: %s, file: %s, func: %s\",\n                  what, scope_to_string(spec->scope), spec->file,\n                  function ? function : \"-\");\n\n    switch (spec->scope) {\n    case AP_LUA_SCOPE_ONCE:\n    case AP_LUA_SCOPE_UNSET:\n        apr_pool_create(&pool, r->pool);\n        break;\n    case AP_LUA_SCOPE_REQUEST:\n        pool = r->pool;\n        break;\n    case AP_LUA_SCOPE_CONN:\n        pool = r->connection->pool;\n        break;\n#if APR_HAS_THREADS\n    case AP_LUA_SCOPE_THREAD:\n        pool = apr_thread_pool_get(r->connection->current_thread);\n        break;\n    case AP_LUA_SCOPE_SERVER:\n        pool = r->server->process->pool;\n        break;\n#endif\n    default:\n        ap_assert(0);\n    }\n\n    *lifecycle_pool = pool;\n    return spec;\n}\n\nstatic const char* ap_lua_interpolate_string(apr_pool_t* pool, const char* string, const char** values)\n{\n    char *stringBetween;\n    const char* ret;\n    int srclen,x,y;\n    srclen = strlen(string);\n    ret = \"\";\n    y = 0;\n    for (x=0; x < srclen; x++) {\n        if (string[x] == '$' && x != srclen-1 && string[x+1] >= '0' && string[x+1] <= '9') {\n            int v = *(string+x+1) - '0';\n            if (x-y > 0) {\n                stringBetween = apr_pstrndup(pool, string+y, x-y);\n            }\n            else {\n                stringBetween = \"\";\n            }\n            ret = apr_pstrcat(pool, ret, stringBetween, values[v], NULL);\n            y = ++x+1;\n        }\n    }\n    \n    if (x-y > 0 && y > 0) {\n        stringBetween = apr_pstrndup(pool, string+y, x-y);\n        ret = apr_pstrcat(pool, ret, stringBetween, NULL);\n    }\n    /* If no replacement was made, just return the original string */\n    else if (y == 0) {\n        return string;\n    }\n    return ret;\n}\n\n\n\n/**\n * \"main\"\n */\nstatic int lua_handler(request_rec *r)\n{\n    int rc = OK;\n    if (strcmp(r->handler, \"lua-script\")) {\n        return DECLINED;\n    }\n    /* Decline the request if the script does not exist (or is a directory),\n     * rather than just returning internal server error */\n    if (\n            (r->finfo.filetype == APR_NOFILE)\n            || (r->finfo.filetype & APR_DIR)\n        ) {\n        return DECLINED;\n    }\n    ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r, APLOGNO(01472)\n                  \"handling [%s] in mod_lua\", r->filename);\n\n    /* XXX: This seems wrong because it may generate wrong headers for HEAD requests */\n    if (!r->header_only) {\n        lua_State *L;\n        apr_pool_t *pool;\n        const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                         &lua_module);\n        ap_lua_vm_spec *spec = create_vm_spec(&pool, r, cfg, NULL, NULL, NULL,\n                                              0, \"handle\", \"request handler\");\n\n        L = ap_lua_get_lua_state(pool, spec, r);\n        if (!L) {\n            /* TODO annotate spec with failure reason */\n            r->status = HTTP_INTERNAL_SERVER_ERROR;\n            ap_rputs(\"Unable to compile VM, see logs\", r);\n            ap_lua_release_state(L, spec, r);\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r, APLOGNO(01474) \"got a vm!\");\n        lua_getglobal(L, \"handle\");\n        if (!lua_isfunction(L, -1)) {\n            ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01475)\n                          \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                          \"handle\",\n                          spec->file);\n            ap_lua_release_state(L, spec, r);\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        ap_lua_run_lua_request(L, r);\n        if (lua_pcall(L, 1, 1, 0)) {\n            report_lua_error(L, r);\n        }\n        if (lua_isnumber(L, -1)) {\n            rc = lua_tointeger(L, -1);\n        }\n        ap_lua_release_state(L, spec, r);\n    }\n    return rc;\n}\n\n\n/* ------------------- Input/output content filters ------------------- */\n\n\nstatic apr_status_t lua_setup_filter_ctx(ap_filter_t* f, request_rec* r, lua_filter_ctx** c) {\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec;\n    int n, rc;\n    lua_State *L;\n    lua_filter_ctx *ctx;    \n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                        &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                    &lua_module);\n    \n    ctx = apr_pcalloc(r->pool, sizeof(lua_filter_ctx));\n    ctx->broken = 0;\n    *c = ctx;\n    /* Find the filter that was called.\n     * XXX: If we were wired with mod_filter, the filter (mod_filters name)\n     *      and the provider (our underlying filters name) need to have matched.\n     */\n    for (n = 0; n < cfg->mapped_filters->nelts; n++) {\n        ap_lua_filter_handler_spec *hook_spec =\n            ((ap_lua_filter_handler_spec **) cfg->mapped_filters->elts)[n];\n\n        if (hook_spec == NULL) {\n            continue;\n        }\n        if (!strcasecmp(hook_spec->filter_name, f->frec->name)) {\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                    hook_spec->file_name,\n                                    NULL,\n                                    0,\n                                    hook_spec->function_name,\n                                    \"filter\");\n            L = ap_lua_get_lua_state(pool, spec, r);\n            if (L) {\n                L = lua_newthread(L);\n            }\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02328)\n                                \"lua: Failed to obtain lua interpreter for %s %s\",\n                                hook_spec->function_name, hook_spec->file_name);\n                ap_lua_release_state(L, spec, r);\n                return APR_EGENERAL;\n            }\n            if (hook_spec->function_name != NULL) {\n                lua_getglobal(L, hook_spec->function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02329)\n                                \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                    hook_spec->function_name,\n                                    hook_spec->file_name);\n                    ap_lua_release_state(L, spec, r);\n                    return APR_EGENERAL;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n            ctx->L = L;\n            ctx->spec = spec;\n            \n            /* If a Lua filter is interested in filtering a request, it must first do a yield, \n             * otherwise we'll assume that it's not interested and pretend we didn't find it.\n             */\n            rc = lua_resume(L, 1);\n            if (rc == LUA_YIELD) {\n                if (f->frec->providers == NULL) { \n                    /* Not wired by mod_filter */\n                    apr_table_unset(r->headers_out, \"Content-Length\");\n                    apr_table_unset(r->headers_out, \"Content-MD5\");\n                    apr_table_unset(r->headers_out, \"ETAG\");\n                }\n                return OK;\n            }\n            else {\n                ap_lua_release_state(L, spec, r);\n                return APR_ENOENT;\n            }\n        }\n    }\n    return APR_ENOENT;\n}\n\nstatic apr_status_t lua_output_filter_handle(ap_filter_t *f, apr_bucket_brigade *pbbIn) {\n    request_rec *r = f->r;\n    int rc;\n    lua_State *L;\n    lua_filter_ctx* ctx;\n    conn_rec *c = r->connection;\n    apr_bucket *pbktIn;\n    apr_status_t rv;\n    \n    /* Set up the initial filter context and acquire the function.\n     * The corresponding Lua function should yield here.\n     */\n    if (!f->ctx) {\n        rc = lua_setup_filter_ctx(f,r,&ctx);\n        if (rc == APR_EGENERAL) {\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        if (rc == APR_ENOENT) {\n            /* No filter entry found (or the script declined to filter), just pass on the buckets */\n            ap_remove_output_filter(f);\n            return ap_pass_brigade(f->next,pbbIn);\n        }\n        else { \n            /* We've got a willing lua filter, setup and check for a prefix */\n            size_t olen;\n            apr_bucket *pbktOut;\n            const char* output = lua_tolstring(ctx->L, 1, &olen);\n\n            f->ctx = ctx;\n            ctx->tmpBucket = apr_brigade_create(r->pool, c->bucket_alloc);\n\n            if (olen > 0) { \n                pbktOut = apr_bucket_heap_create(output, olen, NULL, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n                apr_brigade_cleanup(ctx->tmpBucket);\n                if (rv != APR_SUCCESS) {\n                    return rv;\n                }\n            }\n        }\n    }\n    ctx = (lua_filter_ctx*) f->ctx;\n    L = ctx->L;\n    /* While the Lua function is still yielding, pass in buckets to the coroutine */\n    if (!ctx->broken) {\n        for (pbktIn = APR_BRIGADE_FIRST(pbbIn);\n            pbktIn != APR_BRIGADE_SENTINEL(pbbIn);\n            pbktIn = APR_BUCKET_NEXT(pbktIn))\n            {\n            const char *data;\n            apr_size_t len;\n            apr_bucket *pbktOut;\n\n            /* read the bucket */\n            apr_bucket_read(pbktIn,&data,&len,APR_BLOCK_READ);\n\n            /* Push the bucket onto the Lua stack as a global var */\n            lua_pushlstring(L, data, len);\n            lua_setglobal(L, \"bucket\");\n            \n            /* If Lua yielded, it means we have something to pass on */\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                if (olen > 0) { \n                    pbktOut = apr_bucket_heap_create(output, olen, NULL,\n                                            c->bucket_alloc);\n                    APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                    rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n                    apr_brigade_cleanup(ctx->tmpBucket);\n                    if (rv != APR_SUCCESS) {\n                        return rv;\n                    }\n                }\n            }\n            else {\n                ctx->broken = 1;\n                ap_lua_release_state(L, ctx->spec, r);\n                ap_remove_output_filter(f);\n                apr_brigade_cleanup(pbbIn);\n                apr_brigade_cleanup(ctx->tmpBucket);\n                ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02663)\n                              \"lua: Error while executing filter: %s\",\n                              lua_tostring(L, -1));\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n        }\n        /* If we've safely reached the end, do a final call to Lua to allow for any \n        finishing moves by the script, such as appending a tail. */\n        if (APR_BUCKET_IS_EOS(APR_BRIGADE_LAST(pbbIn))) {\n            apr_bucket *pbktEOS;\n            lua_pushnil(L);\n            lua_setglobal(L, \"bucket\");\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                apr_bucket *pbktOut;\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                if (olen > 0) { \n                    pbktOut = apr_bucket_heap_create(output, olen, NULL,\n                            c->bucket_alloc);\n                    APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktOut);\n                }\n            }\n            pbktEOS = apr_bucket_eos_create(c->bucket_alloc);\n            APR_BRIGADE_INSERT_TAIL(ctx->tmpBucket, pbktEOS);\n            ap_lua_release_state(L, ctx->spec, r);\n            rv = ap_pass_brigade(f->next, ctx->tmpBucket);\n            apr_brigade_cleanup(ctx->tmpBucket);\n            if (rv != APR_SUCCESS) {\n                return rv;\n            }\n        }\n    }\n    /* Clean up */\n    apr_brigade_cleanup(pbbIn);\n    return APR_SUCCESS;    \n}\n\n\n\nstatic apr_status_t lua_input_filter_handle(ap_filter_t *f,\n                                       apr_bucket_brigade *pbbOut,\n                                       ap_input_mode_t eMode,\n                                       apr_read_type_e eBlock,\n                                       apr_off_t nBytes) \n{\n    request_rec *r = f->r;\n    int rc, lastCall = 0;\n    lua_State *L;\n    lua_filter_ctx* ctx;\n    conn_rec *c = r->connection;\n    apr_status_t ret;\n    \n    /* Set up the initial filter context and acquire the function.\n     * The corresponding Lua function should yield here.\n     */\n    if (!f->ctx) {\n        rc = lua_setup_filter_ctx(f,r,&ctx);\n        f->ctx = ctx;\n        if (rc == APR_EGENERAL) {\n            ctx->broken = 1;\n            ap_remove_input_filter(f); \n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n        if (rc == APR_ENOENT ) {\n            ap_remove_input_filter(f);\n            ctx->broken = 1;\n        }\n        if (rc == APR_SUCCESS) {\n            ctx->tmpBucket = apr_brigade_create(r->pool, c->bucket_alloc);\n        }\n    }\n    ctx = (lua_filter_ctx*) f->ctx;\n    L = ctx->L;\n    /* If the Lua script broke or denied serving the request, just pass the buckets through */\n    if (ctx->broken) {\n        return ap_get_brigade(f->next, pbbOut, eMode, eBlock, nBytes);\n    }\n    \n    if (APR_BRIGADE_EMPTY(ctx->tmpBucket)) {\n        ret = ap_get_brigade(f->next, ctx->tmpBucket, eMode, eBlock, nBytes);\n        if (eMode == AP_MODE_EATCRLF || ret != APR_SUCCESS)\n            return ret;\n    }\n    \n    /* While the Lua function is still yielding, pass buckets to the coroutine */\n    if (!ctx->broken) {\n        lastCall = 0;\n        while(!APR_BRIGADE_EMPTY(ctx->tmpBucket)) {\n            apr_bucket *pbktIn = APR_BRIGADE_FIRST(ctx->tmpBucket);\n            apr_bucket *pbktOut;\n            const char *data;\n            apr_size_t len;\n            \n            if (APR_BUCKET_IS_EOS(pbktIn)) {\n                APR_BUCKET_REMOVE(pbktIn);\n                break;\n            }\n\n            /* read the bucket */\n            ret = apr_bucket_read(pbktIn, &data, &len, eBlock);\n            if (ret != APR_SUCCESS)\n                return ret;\n\n            /* Push the bucket onto the Lua stack as a global var */\n            lastCall++;\n            lua_pushlstring(L, data, len);\n            lua_setglobal(L, \"bucket\");\n            \n            /* If Lua yielded, it means we have something to pass on */\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                pbktOut = apr_bucket_heap_create(output, olen, 0, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(pbbOut, pbktOut);\n                apr_bucket_delete(pbktIn);\n                return APR_SUCCESS;\n            }\n            else {\n                ctx->broken = 1;\n                ap_lua_release_state(L, ctx->spec, r);\n                ap_remove_input_filter(f); \n                apr_bucket_delete(pbktIn);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n        }\n        /* If we've safely reached the end, do a final call to Lua to allow for any \n        finishing moves by the script, such as appending a tail. */\n        if (lastCall == 0) {\n            apr_bucket *pbktEOS = apr_bucket_eos_create(c->bucket_alloc);\n            lua_pushnil(L);\n            lua_setglobal(L, \"bucket\");\n            if (lua_resume(L, 0) == LUA_YIELD) {\n                apr_bucket *pbktOut;\n                size_t olen;\n                const char* output = lua_tolstring(L, 1, &olen);\n                pbktOut = apr_bucket_heap_create(output, olen, 0, c->bucket_alloc);\n                APR_BRIGADE_INSERT_TAIL(pbbOut, pbktOut);\n            }\n            APR_BRIGADE_INSERT_TAIL(pbbOut,pbktEOS);\n            ap_lua_release_state(L, ctx->spec, r);\n        }\n    }\n    return APR_SUCCESS;\n}\n\n\n/* ---------------- Configury stuff --------------- */\n\n/** harnesses for magic hooks **/\n\nstatic int lua_request_rec_hook_harness(request_rec *r, const char *name, int apr_hook_when)\n{\n    int rc;\n    apr_pool_t *pool;\n    lua_State *L;\n    ap_lua_vm_spec *spec;\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    const char *key = apr_psprintf(r->pool, \"%s_%d\", name, apr_hook_when);\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n    if (hook_specs) {\n        int i;\n        for (i = 0; i < hook_specs->nelts; i++) {\n            ap_lua_mapped_handler_spec *hook_spec =\n                ((ap_lua_mapped_handler_spec **) hook_specs->elts)[i];\n\n            if (hook_spec == NULL) {\n                continue;\n            }\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                  hook_spec->file_name,\n                                  hook_spec->bytecode,\n                                  hook_spec->bytecode_len,\n                                  hook_spec->function_name,\n                                  \"request hook\");\n\n            L = ap_lua_get_lua_state(pool, spec, r);\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01477)\n                    \"lua: Failed to obtain lua interpreter for entry function '%s' in %s\",\n                              hook_spec->function_name, hook_spec->file_name);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n\n            if (hook_spec->function_name != NULL) {\n                lua_getglobal(L, hook_spec->function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(01478)\n                               \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                  hook_spec->function_name,\n                                  hook_spec->file_name);\n                    ap_lua_release_state(L, spec, r);\n                    return HTTP_INTERNAL_SERVER_ERROR;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n\n            if (lua_pcall(L, 1, 1, 0)) {\n                report_lua_error(L, r);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            rc = DECLINED;\n            if (lua_isnumber(L, -1)) {\n                rc = lua_tointeger(L, -1);\n                ap_log_rerror(APLOG_MARK, APLOG_TRACE4, 0, r, \"Lua hook %s:%s for phase %s returned %d\", \n                              hook_spec->file_name, hook_spec->function_name, name, rc);\n            }\n            else { \n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, \"Lua hook %s:%s for phase %s did not return a numeric value\", \n                              hook_spec->file_name, hook_spec->function_name, name);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            if (rc != DECLINED) {\n                ap_lua_release_state(L, spec, r);\n                return rc;\n            }\n            ap_lua_release_state(L, spec, r);\n        }\n    }\n    return DECLINED;\n}\n\n\n/* Fix for making sure that LuaMapHandler works when FallbackResource is set */\nstatic int lua_map_handler_fixups(request_rec *r)\n{\n    /* If there is no handler set yet, this might be a LuaMapHandler request */\n    if (r->handler == NULL) {\n        int n = 0;\n        ap_regmatch_t match[10];\n        const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n        for (n = 0; n < cfg->mapped_handlers->nelts; n++) {\n            ap_lua_mapped_handler_spec *hook_spec =\n            ((ap_lua_mapped_handler_spec **) cfg->mapped_handlers->elts)[n];\n\n            if (hook_spec == NULL) {\n                continue;\n            }\n            if (!ap_regexec(hook_spec->uri_pattern, r->uri, 10, match, 0)) {\n                r->handler = apr_pstrdup(r->pool, \"lua-map-handler\");\n                return OK;\n            }\n        }\n    }\n    return DECLINED;\n}\n\n\nstatic int lua_map_handler(request_rec *r)\n{\n    int rc, n = 0;\n    apr_pool_t *pool;\n    lua_State *L;\n    const char *filename, *function_name;\n    const char *values[10];\n    ap_lua_vm_spec *spec;\n    ap_regmatch_t match[10];\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    for (n = 0; n < cfg->mapped_handlers->nelts; n++) {\n        ap_lua_mapped_handler_spec *hook_spec =\n            ((ap_lua_mapped_handler_spec **) cfg->mapped_handlers->elts)[n];\n\n        if (hook_spec == NULL) {\n            continue;\n        }\n        if (!ap_regexec(hook_spec->uri_pattern, r->uri, 10, match, 0)) {\n            int i;\n            for (i=0 ; i < 10; i++) {\n                if (match[i].rm_eo >= 0) {\n                    values[i] = apr_pstrndup(r->pool, r->uri+match[i].rm_so, match[i].rm_eo - match[i].rm_so);\n                }\n                else values[i] = \"\";\n            }\n            filename = ap_lua_interpolate_string(r->pool, hook_spec->file_name, values);\n            function_name = ap_lua_interpolate_string(r->pool, hook_spec->function_name, values);\n            spec = create_vm_spec(&pool, r, cfg, server_cfg,\n                                    filename,\n                                    hook_spec->bytecode,\n                                    hook_spec->bytecode_len,\n                                    function_name,\n                                    \"mapped handler\");\n            L = ap_lua_get_lua_state(pool, spec, r);\n\n            if (!L) {\n                ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02330)\n                                \"lua: Failed to obtain Lua interpreter for entry function '%s' in %s\",\n                                function_name, filename);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n\n            if (function_name != NULL) {\n                lua_getglobal(L, function_name);\n                if (!lua_isfunction(L, -1)) {\n                    ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02331)\n                                    \"lua: Unable to find entry function '%s' in %s (not a valid function)\",\n                                    function_name,\n                                    filename);\n                    ap_lua_release_state(L, spec, r);\n                    return HTTP_INTERNAL_SERVER_ERROR;\n                }\n\n                ap_lua_run_lua_request(L, r);\n            }\n            else {\n                int t;\n                ap_lua_run_lua_request(L, r);\n\n                t = lua_gettop(L);\n                lua_setglobal(L, \"r\");\n                lua_settop(L, t);\n            }\n\n            if (lua_pcall(L, 1, 1, 0)) {\n                report_lua_error(L, r);\n                ap_lua_release_state(L, spec, r);\n                return HTTP_INTERNAL_SERVER_ERROR;\n            }\n            rc = DECLINED;\n            if (lua_isnumber(L, -1)) {\n                rc = lua_tointeger(L, -1);\n            }\n            else { \n                ap_log_rerror(APLOG_MARK, APLOG_WARNING, 0, r, APLOGNO(02483)\n                              \"lua: Lua handler %s in %s did not return a value, assuming apache2.OK\",\n                              function_name,\n                              filename);\n                rc = OK;\n            }\n            ap_lua_release_state(L, spec, r);\n            if (rc != DECLINED) {\n                return rc;\n            }\n        }\n    }\n    return DECLINED;\n}\n\n\nstatic apr_size_t config_getstr(ap_configfile_t *cfg, char *buf,\n                                size_t bufsiz)\n{\n    apr_size_t i = 0;\n\n    if (cfg->getstr) {\n        apr_status_t rc = (cfg->getstr) (buf, bufsiz, cfg->param);\n        if (rc == APR_SUCCESS) {\n            i = strlen(buf);\n            if (i && buf[i - 1] == '\\n')\n                ++cfg->line_number;\n        }\n        else {\n            buf[0] = '\\0';\n            i = 0;\n        }\n    }\n    else {\n        while (i < bufsiz) {\n            char ch;\n            apr_status_t rc = (cfg->getch) (&ch, cfg->param);\n            if (rc != APR_SUCCESS)\n                break;\n            buf[i++] = ch;\n            if (ch == '\\n') {\n                ++cfg->line_number;\n                break;\n            }\n        }\n    }\n    return i;\n}\n\ntypedef struct cr_ctx\n{\n    cmd_parms *cmd;\n    ap_configfile_t *cfp;\n    size_t startline;\n    const char *endstr;\n    char buf[HUGE_STRING_LEN];\n} cr_ctx;\n\n\n/* Okay, this deserves a little explaination -- in order for the errors that lua\n * generates to be 'accuarate', including line numbers, we basically inject\n * N line number new lines into the 'top' of the chunk reader.....\n *\n * be happy. this is cool.\n *\n */\nstatic const char *lf =\n    \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n#define N_LF 32\n\nstatic const char *direct_chunkreader(lua_State *lvm, void *udata,\n                                      size_t *plen)\n{\n    const char *p;\n    struct cr_ctx *ctx = udata;\n\n    if (ctx->startline) {\n        *plen = ctx->startline > N_LF ? N_LF : ctx->startline;\n        ctx->startline -= *plen;\n        return lf;\n    }\n    *plen = config_getstr(ctx->cfp, ctx->buf, HUGE_STRING_LEN);\n\n    for (p = ctx->buf; isspace(*p); ++p);\n    if (p[0] == '<' && p[1] == '/') {\n        apr_size_t i = 0;\n        while (i < strlen(ctx->endstr)) {\n            if (tolower(p[i + 2]) != ctx->endstr[i])\n                return ctx->buf;\n            ++i;\n        }\n        *plen = 0;\n        return NULL;\n    }\n    /*fprintf(stderr, \"buf read: %s\\n\", ctx->buf); */\n    return ctx->buf;\n}\n\nstatic int ldump_writer(lua_State *L, const void *b, size_t size, void *B)\n{\n    (void) L;\n    luaL_addlstring((luaL_Buffer *) B, (const char *) b, size);\n    return 0;\n}\n\ntypedef struct hack_section_baton\n{\n    const char *name;\n    ap_lua_mapped_handler_spec *spec;\n    int apr_hook_when;\n} hack_section_baton;\n\n/* You can be unhappy now.\n *\n * This is uncool.\n *\n * When you create a <Section handler in httpd, the only 'easy' way to create\n * a directory context is to parse the section, and convert it into a 'normal'\n * Configureation option, and then collapse the entire section, in memory,\n * back into the parent section -- from which you can then get the new directive\n * invoked.... anyways. evil. Rici taught me how to do this hack :-)\n */\nstatic const char *hack_section_handler(cmd_parms *cmd, void *_cfg,\n                                        const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    ap_directive_t *directive = cmd->directive;\n    hack_section_baton *baton = directive->data;\n    const char *key = apr_psprintf(cmd->pool, \"%s_%d\", baton->name, baton->apr_hook_when);\n\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n    if (!hook_specs) {\n        hook_specs = apr_array_make(cmd->pool, 2,\n                                    sizeof(ap_lua_mapped_handler_spec *));\n        apr_hash_set(cfg->hooks, key,\n                     APR_HASH_KEY_STRING, hook_specs);\n    }\n\n    baton->spec->scope = cfg->vm_scope;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(hook_specs) = baton->spec;\n\n    return NULL;\n}\n\nstatic const char *register_named_block_function_hook(const char *name,\n                                                      cmd_parms *cmd,\n                                                      void *mconfig,\n                                                      const char *line)\n{\n    const char *function = NULL;\n    ap_lua_mapped_handler_spec *spec;\n    int when = APR_HOOK_MIDDLE;\n    const char *endp = ap_strrchr_c(line, '>');\n\n    if (endp == NULL) {\n        return apr_pstrcat(cmd->pool, cmd->cmd->name,\n                           \"> directive missing closing '>'\", NULL);\n    }\n\n    line = apr_pstrndup(cmd->temp_pool, line, endp - line);\n\n    if (line[0]) { \n        const char *word;\n        word = ap_getword_conf(cmd->temp_pool, &line);\n        if (*word) {\n            function = apr_pstrdup(cmd->pool, word);\n        }\n        word = ap_getword_conf(cmd->temp_pool, &line);\n        if (*word) {\n            if (!strcasecmp(\"early\", word)) { \n                when = AP_LUA_HOOK_FIRST;\n            }\n            else if (!strcasecmp(\"late\", word)) {\n                when = AP_LUA_HOOK_LAST;\n            }\n            else { \n                return apr_pstrcat(cmd->pool, cmd->cmd->name,\n                                   \"> 2nd argument must be 'early' or 'late'\", NULL);\n            }\n        }\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n\n    {\n        cr_ctx ctx;\n        lua_State *lvm;\n        char *tmp;\n        int rv;\n        ap_directive_t **current;\n        hack_section_baton *baton;\n\n        spec->file_name = apr_psprintf(cmd->pool, \"%s:%u\",\n                                       cmd->config_file->name,\n                                       cmd->config_file->line_number);\n        if (function) {\n            spec->function_name = (char *) function;\n        }\n        else {\n            function = NULL;\n        }\n\n        ctx.cmd = cmd;\n        tmp = apr_pstrdup(cmd->pool, cmd->err_directive->directive + 1);\n        ap_str_tolower(tmp);\n        ctx.endstr = tmp;\n        ctx.cfp = cmd->config_file;\n        ctx.startline = cmd->config_file->line_number;\n\n        /* This lua State is used only to compile the input strings -> bytecode, so we don't need anything extra. */\n        lvm = luaL_newstate();\n\n        lua_settop(lvm, 0);\n\n        rv = lua_load(lvm, direct_chunkreader, &ctx, spec->file_name);\n\n        if (rv != 0) {\n            const char *errstr = apr_pstrcat(cmd->pool, \"Lua Error:\",\n                                             lua_tostring(lvm, -1), NULL);\n            lua_close(lvm);\n            return errstr;\n        }\n        else {\n            luaL_Buffer b;\n            luaL_buffinit(lvm, &b);\n            lua_dump(lvm, ldump_writer, &b);\n            luaL_pushresult(&b);\n            spec->bytecode_len = lua_strlen(lvm, -1);\n            spec->bytecode = apr_pstrmemdup(cmd->pool, lua_tostring(lvm, -1),\n                                            spec->bytecode_len);\n            lua_close(lvm);\n        }\n\n        current = mconfig;\n\n        /* Here, we have to replace our current config node for the next pass */\n        if (!*current) {\n            *current = apr_pcalloc(cmd->pool, sizeof(**current));\n        }\n\n        baton = apr_pcalloc(cmd->pool, sizeof(hack_section_baton));\n        baton->name = name;\n        baton->spec = spec;\n        baton->apr_hook_when = when;\n\n        (*current)->filename = cmd->config_file->name;\n        (*current)->line_num = cmd->config_file->line_number;\n        (*current)->directive = apr_pstrdup(cmd->pool, \"Lua_____ByteCodeHack\");\n        (*current)->args = NULL;\n        (*current)->data = baton;\n    }\n\n    return NULL;\n}\n\nstatic const char *register_named_file_function_hook(const char *name,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function,\n                                                     int apr_hook_when)\n{\n    ap_lua_mapped_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    const char *key = apr_psprintf(cmd->pool, \"%s_%d\", name, apr_hook_when);\n    apr_array_header_t *hook_specs = apr_hash_get(cfg->hooks, key,\n                                                  APR_HASH_KEY_STRING);\n\n    if (!hook_specs) {\n        hook_specs = apr_array_make(cmd->pool, 2,\n                                    sizeof(ap_lua_mapped_handler_spec *));\n        apr_hash_set(cfg->hooks, key, APR_HASH_KEY_STRING, hook_specs);\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->scope = cfg->vm_scope;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(hook_specs) = spec;\n    return NULL;\n}\nstatic const char *register_mapped_file_function_hook(const char *pattern,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function)\n{\n    ap_lua_mapped_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    ap_regex_t *regex = apr_pcalloc(cmd->pool, sizeof(ap_regex_t));\n    if (ap_regcomp(regex, pattern,0)) {\n        return \"Invalid regex pattern!\";\n    }\n\n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_mapped_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->scope = cfg->vm_scope;\n    spec->uri_pattern = regex;\n\n    *(ap_lua_mapped_handler_spec **) apr_array_push(cfg->mapped_handlers) = spec;\n    return NULL;\n}\nstatic const char *register_filter_function_hook(const char *filter,\n                                                     cmd_parms *cmd,\n                                                     void *_cfg,\n                                                     const char *file,\n                                                     const char *function,\n                                                     int direction)\n{\n    ap_lua_filter_handler_spec *spec;\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n   \n    spec = apr_pcalloc(cmd->pool, sizeof(ap_lua_filter_handler_spec));\n    spec->file_name = apr_pstrdup(cmd->pool, file);\n    spec->function_name = apr_pstrdup(cmd->pool, function);\n    spec->filter_name = filter;\n\n    *(ap_lua_filter_handler_spec **) apr_array_push(cfg->mapped_filters) = spec;\n    /* TODO: Make it work on other types than just AP_FTYPE_RESOURCE? */\n    if (direction == AP_LUA_FILTER_OUTPUT) {\n        spec->direction = AP_LUA_FILTER_OUTPUT;\n        ap_register_output_filter_protocol(filter, lua_output_filter_handle, NULL, AP_FTYPE_RESOURCE,\n                                            AP_FILTER_PROTO_CHANGE|AP_FILTER_PROTO_CHANGE_LENGTH);\n    }\n    else {\n        spec->direction = AP_LUA_FILTER_INPUT;\n        ap_register_input_filter(filter, lua_input_filter_handle, NULL, AP_FTYPE_RESOURCE);\n    }\n    return NULL;\n}\n/* disabled (see reference below)\nstatic int lua_check_user_id_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", AP_LUA_HOOK_FIRST);\n}\n*/\nstatic int lua_check_user_id_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", APR_HOOK_MIDDLE);\n}\n/* disabled (see reference below)\nstatic int lua_check_user_id_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"check_user_id\", AP_LUA_HOOK_LAST);\n}\n*/\n\nstatic int lua_translate_name_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_translate_name_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", APR_HOOK_MIDDLE);\n}\nstatic int lua_translate_name_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"translate_name\", AP_LUA_HOOK_LAST);\n}\n\nstatic int lua_fixup_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"fixups\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_map_to_storage_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"map_to_storage\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_type_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"type_checker\", APR_HOOK_MIDDLE);\n}\n\nstatic int lua_access_checker_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_access_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", APR_HOOK_MIDDLE);\n}\nstatic int lua_access_checker_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"access_checker\", AP_LUA_HOOK_LAST);\n}\n\nstatic int lua_auth_checker_harness_first(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", AP_LUA_HOOK_FIRST);\n}\nstatic int lua_auth_checker_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", APR_HOOK_MIDDLE);\n}\nstatic int lua_auth_checker_harness_last(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"auth_checker\", AP_LUA_HOOK_LAST);\n}\nstatic void lua_insert_filter_harness(request_rec *r)\n{\n    /* ap_log_rerror(APLOG_MARK, APLOG_WARNING, 0, r, \"LuaHookInsertFilter not yet implemented\"); */\n}\n\nstatic int lua_log_transaction_harness(request_rec *r)\n{\n    return lua_request_rec_hook_harness(r, \"log_transaction\", APR_HOOK_FIRST);\n}\n\nstatic int lua_quick_harness(request_rec *r, int lookup)\n{\n    if (lookup) {\n        return DECLINED;\n    }\n    return lua_request_rec_hook_harness(r, \"quick\", APR_HOOK_MIDDLE);\n}\n\nstatic const char *register_translate_name_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function,\n                                                const char *when)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                           NOT_IN_HTACCESS);\n    int apr_hook_when = APR_HOOK_MIDDLE;\n    if (err) {\n        return err;\n    }\n    \n    if (when) { \n        if (!strcasecmp(when, \"early\")) { \n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        } \n        else if (!strcasecmp(when, \"late\")) { \n            apr_hook_when = AP_LUA_HOOK_LAST;\n        } \n        else { \n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"translate_name\", cmd, _cfg,\n                                             file, function, apr_hook_when);\n}\n\nstatic const char *register_translate_name_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n    return register_named_block_function_hook(\"translate_name\", cmd, _cfg,\n                                              line);\n}\n\n\nstatic const char *register_fixups_hook(cmd_parms *cmd, void *_cfg,\n                                        const char *file,\n                                        const char *function)\n{\n    return register_named_file_function_hook(\"fixups\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_fixups_block(cmd_parms *cmd, void *_cfg,\n                                         const char *line)\n{\n    return register_named_block_function_hook(\"fixups\", cmd, _cfg, line);\n}\n\nstatic const char *register_map_to_storage_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function)\n{\n    return register_named_file_function_hook(\"map_to_storage\", cmd, _cfg,\n                                             file, function, APR_HOOK_MIDDLE);\n}\n\nstatic const char *register_log_transaction_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function)\n{\n    return register_named_file_function_hook(\"log_transaction\", cmd, _cfg,\n                                             file, function, APR_HOOK_FIRST);\n}\n\nstatic const char *register_map_to_storage_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n    return register_named_block_function_hook(\"map_to_storage\", cmd, _cfg,\n                                              line);\n}\n\n\nstatic const char *register_check_user_id_hook(cmd_parms *cmd, void *_cfg,\n                                               const char *file,\n                                               const char *function,\n                                               const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n/* XXX: This does not currently work!!\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n*/\n    return register_named_file_function_hook(\"check_user_id\", cmd, _cfg, file,\n                                             function, apr_hook_when);\n}\nstatic const char *register_check_user_id_block(cmd_parms *cmd, void *_cfg,\n                                                const char *line)\n{\n    return register_named_block_function_hook(\"check_user_id\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_type_checker_hook(cmd_parms *cmd, void *_cfg,\n                                              const char *file,\n                                              const char *function)\n{\n    return register_named_file_function_hook(\"type_checker\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_type_checker_block(cmd_parms *cmd, void *_cfg,\n                                               const char *line)\n{\n    return register_named_block_function_hook(\"type_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_access_checker_hook(cmd_parms *cmd, void *_cfg,\n                                                const char *file,\n                                                const char *function,\n                                                const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"access_checker\", cmd, _cfg,\n                                             file, function, apr_hook_when);\n}\nstatic const char *register_access_checker_block(cmd_parms *cmd, void *_cfg,\n                                                 const char *line)\n{\n\n    return register_named_block_function_hook(\"access_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_auth_checker_hook(cmd_parms *cmd, void *_cfg,\n                                              const char *file,\n                                              const char *function,\n                                              const char *when)\n{\n    int apr_hook_when = APR_HOOK_MIDDLE;\n\n    if (when) {\n        if (!strcasecmp(when, \"early\")) {\n            apr_hook_when = AP_LUA_HOOK_FIRST;\n        }\n        else if (!strcasecmp(when, \"late\")) {\n            apr_hook_when = AP_LUA_HOOK_LAST;\n        }\n        else {\n            return \"Third argument must be 'early' or 'late'\";\n        }\n    }\n\n    return register_named_file_function_hook(\"auth_checker\", cmd, _cfg, file,\n                                             function, apr_hook_when);\n}\nstatic const char *register_auth_checker_block(cmd_parms *cmd, void *_cfg,\n                                               const char *line)\n{\n    return register_named_block_function_hook(\"auth_checker\", cmd, _cfg,\n                                              line);\n}\n\nstatic const char *register_insert_filter_hook(cmd_parms *cmd, void *_cfg,\n                                               const char *file,\n                                               const char *function)\n{\n    return \"LuaHookInsertFilter not yet implemented\";\n}\n\nstatic const char *register_quick_hook(cmd_parms *cmd, void *_cfg,\n                                       const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    return register_named_file_function_hook(\"quick\", cmd, _cfg, file,\n                                             function, APR_HOOK_MIDDLE);\n}\nstatic const char *register_map_handler(cmd_parms *cmd, void *_cfg,\n                                       const char* match, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_mapped_file_function_hook(match, cmd, _cfg, file,\n                                             function);\n}\nstatic const char *register_output_filter(cmd_parms *cmd, void *_cfg,\n                                       const char* filter, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_filter_function_hook(filter, cmd, _cfg, file,\n                                             function, AP_LUA_FILTER_OUTPUT);\n}\nstatic const char *register_input_filter(cmd_parms *cmd, void *_cfg,\n                                       const char* filter, const char *file, const char *function)\n{\n    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIRECTORY|NOT_IN_FILES|\n                                                NOT_IN_HTACCESS);\n    if (err) {\n        return err;\n    }\n    if (!function) function = \"handle\";\n    return register_filter_function_hook(filter, cmd, _cfg, file,\n                                             function, AP_LUA_FILTER_INPUT);\n}\nstatic const char *register_quick_block(cmd_parms *cmd, void *_cfg,\n                                        const char *line)\n{\n    return register_named_block_function_hook(\"quick\", cmd, _cfg,\n                                              line);\n}\n\n\n\nstatic const char *register_package_helper(cmd_parms *cmd, \n                                           const char *arg,\n                                           apr_array_header_t *dir_array)\n{\n    apr_status_t rv;\n\n    ap_lua_server_cfg *server_cfg =\n        ap_get_module_config(cmd->server->module_config, &lua_module);\n\n    char *fixed_filename;\n    rv = apr_filepath_merge(&fixed_filename, \n                            server_cfg->root_path, \n                            arg,\n                            APR_FILEPATH_NOTRELATIVE, \n                            cmd->pool);\n\n    if (rv != APR_SUCCESS) {\n        return apr_psprintf(cmd->pool,\n                            \"Unable to build full path to file, %s\", arg);\n    }\n\n    *(const char **) apr_array_push(dir_array) = fixed_filename;\n    return NULL;\n}\n\n\n/**\n * Called for config directive which looks like\n * LuaPackagePath /lua/package/path/mapped/thing/like/this/?.lua\n */\nstatic const char *register_package_dir(cmd_parms *cmd, void *_cfg,\n                                        const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n\n    return register_package_helper(cmd, arg, cfg->package_paths);\n}\n\n/**\n * Called for config directive which looks like\n * LuaPackageCPath /lua/package/path/mapped/thing/like/this/?.so\n */\nstatic const char *register_package_cdir(cmd_parms *cmd, \n                                         void *_cfg,\n                                         const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n\n    return register_package_helper(cmd, arg, cfg->package_cpaths);\n}\n\nstatic const char *register_lua_inherit(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    \n    if (strcasecmp(\"none\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_NONE;\n    }\n    else if (strcasecmp(\"parent-first\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_PARENT_FIRST;\n    }\n    else if (strcasecmp(\"parent-last\", arg) == 0) {\n        cfg->inherit = AP_LUA_INHERIT_PARENT_LAST;\n    }\n    else { \n        return apr_psprintf(cmd->pool,\n                            \"LuaInherit type of '%s' not recognized, valid \"\n                            \"options are 'none', 'parent-first', and 'parent-last'\", \n                            arg);\n    }\n    return NULL;\n}\nstatic const char *register_lua_codecache(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *arg)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    \n    if (strcasecmp(\"never\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_NEVER;\n    }\n    else if (strcasecmp(\"stat\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_STAT;\n    }\n    else if (strcasecmp(\"forever\", arg) == 0) {\n        cfg->codecache = AP_LUA_CACHE_FOREVER;\n    }\n    else { \n        return apr_psprintf(cmd->pool,\n                            \"LuaCodeCache type of '%s' not recognized, valid \"\n                            \"options are 'never', 'stat', and 'forever'\", \n                            arg);\n    }\n    return NULL;\n}\nstatic const char *register_lua_scope(cmd_parms *cmd, \n                                      void *_cfg,\n                                      const char *scope, \n                                      const char *min,\n                                      const char *max)\n{\n    ap_lua_dir_cfg *cfg = (ap_lua_dir_cfg *) _cfg;\n    if (strcmp(\"once\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_ONCE;\n    }\n    else if (strcmp(\"request\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_REQUEST;\n    }\n    else if (strcmp(\"conn\", scope) == 0) {\n        cfg->vm_scope = AP_LUA_SCOPE_CONN;\n    }\n    else if (strcmp(\"thread\", scope) == 0) {\n#if !APR_HAS_THREADS\n        return apr_psprintf(cmd->pool,\n                            \"Scope type of '%s' cannot be used because this \"\n                            \"server does not have threading support \"\n                            \"(APR_HAS_THREADS)\" \n                            scope);\n#endif\n        cfg->vm_scope = AP_LUA_SCOPE_THREAD;\n    }\n    else if (strcmp(\"server\", scope) == 0) {\n        unsigned int vmin, vmax;\n#if !APR_HAS_THREADS\n        return apr_psprintf(cmd->pool,\n                            \"Scope type of '%s' cannot be used because this \"\n                            \"server does not have threading support \"\n                            \"(APR_HAS_THREADS)\" \n                            scope);\n#endif\n        cfg->vm_scope = AP_LUA_SCOPE_SERVER;\n        vmin = min ? atoi(min) : 1;\n        vmax = max ? atoi(max) : 1;\n        if (vmin == 0) {\n            vmin = 1;\n        }\n        if (vmax < vmin) {\n            vmax = vmin;\n        }\n        cfg->vm_min = vmin;\n        cfg->vm_max = vmax;\n    }\n    else {\n        return apr_psprintf(cmd->pool,\n                            \"Invalid value for LuaScope, '%s', acceptable \"\n                            \"values are: 'once', 'request', 'conn'\"\n#if APR_HAS_THREADS\n                            \", 'thread', 'server'\"\n#endif\n                            ,scope);\n    }\n\n    return NULL;\n}\n\n\n\nstatic const char *register_lua_root(cmd_parms *cmd, void *_cfg,\n                                     const char *root)\n{\n    /* ap_lua_dir_cfg* cfg = (ap_lua_dir_cfg*)_cfg; */\n    ap_lua_server_cfg *cfg = ap_get_module_config(cmd->server->module_config,\n                                                  &lua_module);\n\n    cfg->root_path = root;\n    return NULL;\n}\n\nconst char *ap_lua_ssl_val(apr_pool_t *p, server_rec *s, conn_rec *c,\n                           request_rec *r, const char *var)\n{\n    if (lua_ssl_val) { \n        return (const char *)lua_ssl_val(p, s, c, r, (char *)var);\n    }\n    return NULL;\n}\n\nint ap_lua_ssl_is_https(conn_rec *c)\n{\n    return lua_ssl_is_https ? lua_ssl_is_https(c) : 0;\n}\n\n/*******************************/\n\nstatic const char *lua_authz_parse(cmd_parms *cmd, const char *require_line,\n                                   const void **parsed_require_line)\n{\n    const char *provider_name;\n    lua_authz_provider_spec *spec;\n    lua_authz_provider_func *func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func));\n\n    apr_pool_userdata_get((void**)&provider_name, AUTHZ_PROVIDER_NAME_NOTE,\n                          cmd->temp_pool);\n    ap_assert(provider_name != NULL);\n\n    spec = apr_hash_get(lua_authz_providers, provider_name, APR_HASH_KEY_STRING);\n    ap_assert(spec != NULL);\n    func->spec = spec;\n\n    if (require_line && *require_line) {\n        const char *arg;\n        func->args = apr_array_make(cmd->pool, 2, sizeof(const char *));\n        while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg) {\n            APR_ARRAY_PUSH(func->args, const char *) = arg;\n        }\n    }\n\n    *parsed_require_line = func;\n    return NULL;\n}\n\nstatic authz_status lua_authz_check(request_rec *r, const char *require_line,\n                                    const void *parsed_require_line)\n{\n    apr_pool_t *pool;\n    ap_lua_vm_spec *spec;\n    lua_State *L;\n    ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,\n                                                         &lua_module);\n    const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,\n                                                     &lua_module);\n    const lua_authz_provider_func *prov_func = parsed_require_line;\n    const lua_authz_provider_spec *prov_spec = prov_func->spec;\n    int result;\n    int nargs = 0;\n\n    spec = create_vm_spec(&pool, r, cfg, server_cfg, prov_spec->file_name,\n                          NULL, 0, prov_spec->function_name, \"authz provider\");\n\n    L = ap_lua_get_lua_state(pool, spec, r);\n    if (L == NULL) {\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02314)\n                      \"Unable to compile VM for authz provider %s\", prov_spec->name);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    lua_getglobal(L, prov_spec->function_name);\n    if (!lua_isfunction(L, -1)) {\n        ap_log_rerror(APLOG_MARK, APLOG_CRIT, 0, r, APLOGNO(02319)\n                      \"Unable to find entry function '%s' in %s (not a valid function)\",\n                      prov_spec->function_name, prov_spec->file_name);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    ap_lua_run_lua_request(L, r);\n    if (prov_func->args) {\n        int i;\n        if (!lua_checkstack(L, prov_func->args->nelts)) {\n            ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02315)\n                          \"Error: authz provider %s: too many arguments\", prov_spec->name);\n            ap_lua_release_state(L, spec, r);\n            return AUTHZ_GENERAL_ERROR;\n        }\n        for (i = 0; i < prov_func->args->nelts; i++) {\n            const char *arg = APR_ARRAY_IDX(prov_func->args, i, const char *);\n            lua_pushstring(L, arg);\n        }\n        nargs = prov_func->args->nelts;\n    }\n    if (lua_pcall(L, 1 + nargs, 1, 0)) {\n        const char *err = lua_tostring(L, -1);\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02316)\n                      \"Error executing authz provider %s: %s\", prov_spec->name, err);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    if (!lua_isnumber(L, -1)) {\n        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02317)\n                      \"Error: authz provider %s did not return integer\", prov_spec->name);\n        ap_lua_release_state(L, spec, r);\n        return AUTHZ_GENERAL_ERROR;\n    }\n    result = lua_tointeger(L, -1);\n    ap_lua_release_state(L, spec, r);\n    switch (result) {\n        case AUTHZ_DENIED:\n        case AUTHZ_GRANTED:\n        case AUTHZ_NEUTRAL:\n        case AUTHZ_GENERAL_ERROR:\n        case AUTHZ_DENIED_NO_USER:\n            return result;\n        default:\n            ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02318)\n                          \"Error: authz provider %s: invalid return value %d\",\n                          prov_spec->name, result);\n    }\n    return AUTHZ_GENERAL_ERROR;\n}\n\nstatic const authz_provider lua_authz_provider =\n{\n    &lua_authz_check,\n    &lua_authz_parse,\n};\n\nstatic const char *register_authz_provider(cmd_parms *cmd, void *_cfg,\n                                           const char *name, const char *file,\n                                           const char *function)\n{\n    lua_authz_provider_spec *spec;\n    const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);\n    if (err)\n        return err;\n\n    spec = apr_pcalloc(cmd->pool, sizeof(*spec));\n    spec->name = name;\n    spec->file_name = file;\n    spec->function_name = function;\n\n    apr_hash_set(lua_authz_providers, name, APR_HASH_KEY_STRING, spec);\n    ap_register_auth_provider(cmd->pool, AUTHZ_PROVIDER_GROUP, name,\n                              AUTHZ_PROVIDER_VERSION,\n                              &lua_authz_provider,\n                              AP_AUTH_INTERNAL_PER_CONF);\n    return NULL;\n}\n\n\ncommand_rec lua_commands[] = {\n\n    AP_INIT_TAKE1(\"LuaRoot\", register_lua_root, NULL, OR_ALL,\n                  \"Specify the base path for resolving relative paths for mod_lua directives\"),\n\n    AP_INIT_TAKE1(\"LuaPackagePath\", register_package_dir, NULL, OR_ALL,\n                  \"Add a directory to lua's package.path\"),\n\n    AP_INIT_TAKE1(\"LuaPackageCPath\", register_package_cdir, NULL, OR_ALL,\n                  \"Add a directory to lua's package.cpath\"),\n\n    AP_INIT_TAKE3(\"LuaAuthzProvider\", register_authz_provider, NULL, RSRC_CONF|EXEC_ON_READ,\n                  \"Provide an authorization provider\"),\n\n    AP_INIT_TAKE23(\"LuaHookTranslateName\", register_translate_name_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the translate name phase of request processing\"),\n\n    AP_INIT_RAW_ARGS(\"<LuaHookTranslateName\", register_translate_name_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the translate name phase of request processing\"),\n\n    AP_INIT_TAKE2(\"LuaHookFixups\", register_fixups_hook, NULL, OR_ALL,\n                  \"Provide a hook for the fixups phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookFixups\", register_fixups_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a inline hook for the fixups phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookMapToStorage\", register_map_to_storage_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the map_to_storage phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookMapToStorage\", register_map_to_storage_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the map_to_storage phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookCheckUserID\", register_check_user_id_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the check_user_id phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookCheckUserID\", register_check_user_id_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the check_user_id phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookTypeChecker\", register_type_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the type_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookTypeChecker\", register_type_checker_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the type_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookAccessChecker\", register_access_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the access_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookAccessChecker\", register_access_checker_block,\n                     NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the access_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE23(\"LuaHookAuthChecker\", register_auth_checker_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the auth_checker phase of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaHookAuthChecker\", register_auth_checker_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the auth_checker phase of request processing\"),\n\n    /* todo: test */\n    AP_INIT_TAKE2(\"LuaHookInsertFilter\", register_insert_filter_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the insert_filter phase of request processing\"),\n    \n    AP_INIT_TAKE2(\"LuaHookLog\", register_log_transaction_hook, NULL,\n                  OR_ALL,\n                  \"Provide a hook for the logging phase of request processing\"),\n\n    AP_INIT_TAKE123(\"LuaScope\", register_lua_scope, NULL, OR_ALL,\n                    \"One of once, request, conn, server -- default is once\"),\n\n    AP_INIT_TAKE1(\"LuaInherit\", register_lua_inherit, NULL, OR_ALL,\n     \"Controls how Lua scripts in parent contexts are merged with the current \" \n     \" context: none|parent-last|parent-first (default: parent-first) \"),\n    \n    AP_INIT_TAKE1(\"LuaCodeCache\", register_lua_codecache, NULL, OR_ALL,\n     \"Controls the behavior of the in-memory code cache \" \n     \" context: stat|forever|never (default: stat) \"),\n\n    AP_INIT_TAKE2(\"LuaQuickHandler\", register_quick_hook, NULL, OR_ALL,\n                  \"Provide a hook for the quick handler of request processing\"),\n    AP_INIT_RAW_ARGS(\"<LuaQuickHandler\", register_quick_block, NULL,\n                     EXEC_ON_READ | OR_ALL,\n                     \"Provide a hook for the quick handler of request processing\"),\n    AP_INIT_RAW_ARGS(\"Lua_____ByteCodeHack\", hack_section_handler, NULL,\n                     OR_ALL,\n                     \"(internal) Byte code handler\"),\n    AP_INIT_TAKE23(\"LuaMapHandler\", register_map_handler, NULL, OR_ALL,\n                  \"Maps a path to a lua handler\"),\n    AP_INIT_TAKE3(\"LuaOutputFilter\", register_output_filter, NULL, OR_ALL,\n                  \"Registers a Lua function as an output filter\"),\n    AP_INIT_TAKE3(\"LuaInputFilter\", register_input_filter, NULL, OR_ALL,\n                  \"Registers a Lua function as an input filter\"),\n    {NULL}\n};\n\n\nstatic void *create_dir_config(apr_pool_t *p, char *dir)\n{\n    ap_lua_dir_cfg *cfg = apr_pcalloc(p, sizeof(ap_lua_dir_cfg));\n    cfg->package_paths = apr_array_make(p, 2, sizeof(char *));\n    cfg->package_cpaths = apr_array_make(p, 2, sizeof(char *));\n    cfg->mapped_handlers =\n        apr_array_make(p, 1, sizeof(ap_lua_mapped_handler_spec *));\n    cfg->mapped_filters =\n        apr_array_make(p, 1, sizeof(ap_lua_filter_handler_spec *));\n    cfg->pool = p;\n    cfg->hooks = apr_hash_make(p);\n    cfg->dir = apr_pstrdup(p, dir);\n    cfg->vm_scope = AP_LUA_SCOPE_UNSET;\n    cfg->codecache = AP_LUA_CACHE_UNSET;\n    cfg->vm_min = 0;\n    cfg->vm_max = 0;\n\n    return cfg;\n}\n\nstatic int create_request_config(request_rec *r)\n{\n    ap_lua_request_cfg *cfg = apr_palloc(r->pool, sizeof(ap_lua_request_cfg));\n    cfg->mapped_request_details = NULL;\n    cfg->request_scoped_vms = apr_hash_make(r->pool);\n    ap_set_module_config(r->request_config, &lua_module, cfg);\n    return OK;\n}\n\nstatic void *create_server_config(apr_pool_t *p, server_rec *s)\n{\n\n    ap_lua_server_cfg *cfg = apr_pcalloc(p, sizeof(ap_lua_server_cfg));\n    cfg->vm_reslists = apr_hash_make(p);\n    apr_thread_rwlock_create(&cfg->vm_reslists_lock, p);\n    cfg->root_path = NULL;\n\n    return cfg;\n}\n\nstatic int lua_request_hook(lua_State *L, request_rec *r)\n{\n    ap_lua_push_request(L, r);\n    return OK;\n}\n\nstatic int lua_pre_config(apr_pool_t *pconf, apr_pool_t *plog,\n                            apr_pool_t *ptemp)\n{\n    ap_mutex_register(pconf, \"lua-ivm-shm\", NULL, APR_LOCK_DEFAULT, 0);\n    return OK;\n}\n\nstatic int lua_post_config(apr_pool_t *pconf, apr_pool_t *plog,\n                             apr_pool_t *ptemp, server_rec *s)\n{\n    apr_pool_t **pool;\n    const char *tempdir;\n    apr_status_t rs;\n\n    lua_ssl_val = APR_RETRIEVE_OPTIONAL_FN(ssl_var_lookup);\n    lua_ssl_is_https = APR_RETRIEVE_OPTIONAL_FN(ssl_is_https);\n    \n    if (ap_state_query(AP_SQ_MAIN_STATE) == AP_SQ_MS_CREATE_PRE_CONFIG)\n        return OK;\n\n    /* Create ivm mutex */\n    rs = ap_global_mutex_create(&lua_ivm_mutex, NULL, \"lua-ivm-shm\", NULL,\n                            s, pconf, 0);\n    if (APR_SUCCESS != rs) {\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n\n    /* Create shared memory space */\n    rs = apr_temp_dir_get(&tempdir, pconf);\n    if (rs != APR_SUCCESS) {\n        ap_log_error(APLOG_MARK, APLOG_ERR, rs, s, APLOGNO(02664)\n                 \"mod_lua IVM: Failed to find temporary directory\");\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n    lua_ivm_shmfile = apr_psprintf(pconf, \"%s/httpd_lua_shm.%ld\", tempdir,\n                           (long int)getpid());\n    rs = apr_shm_create(&lua_ivm_shm, sizeof(apr_pool_t**),\n                    (const char *) lua_ivm_shmfile, pconf);\n    if (rs != APR_SUCCESS) {\n        ap_log_error(APLOG_MARK, APLOG_ERR, rs, s, APLOGNO(02665)\n            \"mod_lua: Failed to create shared memory segment on file %s\",\n                     lua_ivm_shmfile);\n        return HTTP_INTERNAL_SERVER_ERROR;\n    }\n    pool = (apr_pool_t **)apr_shm_baseaddr_get(lua_ivm_shm);\n    apr_pool_create(pool, pconf);\n    apr_pool_cleanup_register(pconf, NULL, shm_cleanup_wrapper,\n                          apr_pool_cleanup_null);\n    return OK;\n}\nstatic void *overlay_hook_specs(apr_pool_t *p,\n                                        const void *key,\n                                        apr_ssize_t klen,\n                                        const void *overlay_val,\n                                        const void *base_val,\n                                        const void *data)\n{\n    const apr_array_header_t *overlay_info = (const apr_array_header_t*)overlay_val;\n    const apr_array_header_t *base_info = (const apr_array_header_t*)base_val;\n    return apr_array_append(p, base_info, overlay_info);\n}\n\nstatic void *merge_dir_config(apr_pool_t *p, void *basev, void *overridesv)\n{\n    ap_lua_dir_cfg *a, *base, *overrides;\n\n    a         = (ap_lua_dir_cfg *)apr_pcalloc(p, sizeof(ap_lua_dir_cfg));\n    base      = (ap_lua_dir_cfg*)basev;\n    overrides = (ap_lua_dir_cfg*)overridesv;\n\n    a->pool = overrides->pool;\n    a->dir = apr_pstrdup(p, overrides->dir);\n\n    a->vm_scope = (overrides->vm_scope == AP_LUA_SCOPE_UNSET) ? base->vm_scope: overrides->vm_scope;\n    a->inherit = (overrides->inherit == AP_LUA_INHERIT_UNSET) ? base->inherit : overrides->inherit;\n    a->codecache = (overrides->codecache == AP_LUA_CACHE_UNSET) ? base->codecache : overrides->codecache;\n    \n    a->vm_min = (overrides->vm_min == 0) ? base->vm_min : overrides->vm_min;\n    a->vm_max = (overrides->vm_max == 0) ? base->vm_max : overrides->vm_max;\n\n    if (a->inherit == AP_LUA_INHERIT_UNSET || a->inherit == AP_LUA_INHERIT_PARENT_FIRST) { \n        a->package_paths = apr_array_append(p, base->package_paths, overrides->package_paths);\n        a->package_cpaths = apr_array_append(p, base->package_cpaths, overrides->package_cpaths);\n        a->mapped_handlers = apr_array_append(p, base->mapped_handlers, overrides->mapped_handlers);\n        a->mapped_filters = apr_array_append(p, base->mapped_filters, overrides->mapped_filters);\n        a->hooks = apr_hash_merge(p, overrides->hooks, base->hooks, overlay_hook_specs, NULL);\n    }\n    else if (a->inherit == AP_LUA_INHERIT_PARENT_LAST) { \n        a->package_paths = apr_array_append(p, overrides->package_paths, base->package_paths);\n        a->package_cpaths = apr_array_append(p, overrides->package_cpaths, base->package_cpaths);\n        a->mapped_handlers = apr_array_append(p, overrides->mapped_handlers, base->mapped_handlers);\n        a->mapped_filters = apr_array_append(p, overrides->mapped_filters, base->mapped_filters);\n        a->hooks = apr_hash_merge(p, base->hooks, overrides->hooks, overlay_hook_specs, NULL);\n    }\n    else { \n        a->package_paths = overrides->package_paths;\n        a->package_cpaths = overrides->package_cpaths;\n        a->mapped_handlers= overrides->mapped_handlers;\n        a->mapped_filters= overrides->mapped_filters;\n        a->hooks= overrides->hooks;\n    }\n\n    return a;\n}\n\nstatic void lua_register_hooks(apr_pool_t *p)\n{\n    /* ap_register_output_filter(\"luahood\", luahood, NULL, AP_FTYPE_RESOURCE); */\n    ap_hook_handler(lua_handler, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_create_request(create_request_config, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n\n    /* http_request.h hooks */\n    ap_hook_translate_name(lua_translate_name_harness_first, NULL, NULL,\n                           AP_LUA_HOOK_FIRST);\n    ap_hook_translate_name(lua_translate_name_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n    ap_hook_translate_name(lua_translate_name_harness_last, NULL, NULL,\n                           AP_LUA_HOOK_LAST);\n\n    ap_hook_fixups(lua_fixup_harness, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_map_to_storage(lua_map_to_storage_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n\n/*  XXX: Does not work :(  \n *  ap_hook_check_user_id(lua_check_user_id_harness_first, NULL, NULL,\n                          AP_LUA_HOOK_FIRST);\n */\n    ap_hook_check_user_id(lua_check_user_id_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n/*  XXX: Does not work :(\n * ap_hook_check_user_id(lua_check_user_id_harness_last, NULL, NULL,\n                          AP_LUA_HOOK_LAST);\n*/\n    ap_hook_type_checker(lua_type_checker_harness, NULL, NULL,\n                         APR_HOOK_MIDDLE);\n\n    ap_hook_access_checker(lua_access_checker_harness_first, NULL, NULL,\n                           AP_LUA_HOOK_FIRST);\n    ap_hook_access_checker(lua_access_checker_harness, NULL, NULL,\n                           APR_HOOK_MIDDLE);\n    ap_hook_access_checker(lua_access_checker_harness_last, NULL, NULL,\n                           AP_LUA_HOOK_LAST);\n    ap_hook_auth_checker(lua_auth_checker_harness_first, NULL, NULL,\n                         AP_LUA_HOOK_FIRST);\n    ap_hook_auth_checker(lua_auth_checker_harness, NULL, NULL,\n                         APR_HOOK_MIDDLE);\n    ap_hook_auth_checker(lua_auth_checker_harness_last, NULL, NULL,\n                         AP_LUA_HOOK_LAST);\n\n    ap_hook_insert_filter(lua_insert_filter_harness, NULL, NULL,\n                          APR_HOOK_MIDDLE);\n    ap_hook_quick_handler(lua_quick_harness, NULL, NULL, APR_HOOK_FIRST);\n\n    ap_hook_post_config(lua_post_config, NULL, NULL, APR_HOOK_MIDDLE);\n    ap_hook_pre_config(lua_pre_config, NULL, NULL, APR_HOOK_MIDDLE);\n\n    APR_OPTIONAL_HOOK(ap_lua, lua_open, lua_open_hook, NULL, NULL,\n                      APR_HOOK_REALLY_FIRST);\n\n    APR_OPTIONAL_HOOK(ap_lua, lua_request, lua_request_hook, NULL, NULL,\n                      APR_HOOK_REALLY_FIRST);\n    ap_hook_handler(lua_map_handler, NULL, NULL, AP_LUA_HOOK_FIRST);\n    \n    /* Hook this right before FallbackResource kicks in */\n    ap_hook_fixups(lua_map_handler_fixups, NULL, NULL, AP_LUA_HOOK_LAST-2);\n#if APR_HAS_THREADS\n    ap_hook_child_init(ap_lua_init_mutex, NULL, NULL, APR_HOOK_MIDDLE);\n#endif\n    /* providers */\n    lua_authz_providers = apr_hash_make(p);\n    \n    /* Logging catcher */\n    ap_hook_log_transaction(lua_log_transaction_harness,NULL,NULL,\n                            APR_HOOK_FIRST);\n}\n\nAP_DECLARE_MODULE(lua) = {\n    STANDARD20_MODULE_STUFF,\n    create_dir_config,          /* create per-dir    config structures */\n    merge_dir_config,           /* merge  per-dir    config structures */\n    create_server_config,       /* create per-server config structures */\n    NULL,                       /* merge  per-server config structures */\n    lua_commands,               /* table of config file commands       */\n    lua_register_hooks          /* register hooks                      */\n};\n"], "filenames": ["CHANGES", "STATUS", "modules/lua/mod_lua.c"], "buggy_code_start_loc": [11, 107, 68], "buggy_code_end_loc": [11, 114, 1760], "fixing_code_start_loc": [12, 106, 69], "fixing_code_end_loc": [17, 106, 1767], "type": "CWE-863", "message": "mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory.", "other": {"cve": {"id": "CVE-2014-8109", "sourceIdentifier": "secalert@redhat.com", "published": "2014-12-29T23:59:00.053", "lastModified": "2023-02-13T00:42:40.890", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory."}, {"lang": "es", "value": "El m\u00f3dulo mod_lua.c en el m\u00f3dulo mod_lua en Apache HTTP Server 2.3.x y 2.4.x a trav\u00e9s de 2.4.10 no soporta la configuraci\u00f3n httpd en la cual el proveedor de autorizaci\u00f3n Lua se usa con argumentos diferentes dentro de contextos diferentes, lo que permite a atacantes remotos saltarse las restricciones de acceso en ciertas circunstancias aprovechando m\u00faltiples directivas requeridas, como se demuestra por una configuraci\u00f3n que especifica la autorizaci\u00f3n para un grupo para acceder a un directorio determinado, y una autorizaci\u00f3n para un segundo grupo para acceder a un segundo directorio."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-863"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.1:*:*:*:*:*:*:*", "matchCriteriaId": "6FCD3C8C-9BF8-4F30-981A-593EEAEB9EDD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.2:*:*:*:*:*:*:*", "matchCriteriaId": "046487A3-752B-4D0F-8984-96486B828EAB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.3:*:*:*:*:*:*:*", "matchCriteriaId": "89D2E052-51CD-4B57-A8B8-FAE51988D654"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.4:*:*:*:*:*:*:*", "matchCriteriaId": "EAA27058-BACF-4F94-8E3C-7D38EC302EC1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.6:*:*:*:*:*:*:*", "matchCriteriaId": "8FEAB0DF-04A9-4F99-8666-0BADC5D642B8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.7:*:*:*:*:*:*:*", "matchCriteriaId": "E7D924D1-8A36-4C43-9E56-52814F9A6350"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.9:*:*:*:*:*:*:*", "matchCriteriaId": "39CDFECC-E26D-47E0-976F-6629040B3764"}, {"vulnerable": true, "criteria": "cpe:2.3:a:apache:http_server:2.4.10:*:*:*:*:*:*:*", "matchCriteriaId": "E3ECBCB1-0675-41F5-857B-438F36925F63"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:10.04:*:*:*:-:*:*:*", "matchCriteriaId": "01EDA41C-6B2E-49AF-B503-EB3882265C11"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:-:*:*:*", "matchCriteriaId": "CB66DB75-2B16-4EBF-9B93-CE49D8086E41"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:esm:*:*:*", "matchCriteriaId": "815D70A8-47D3-459C-A32C-9FEACA0659D1"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.10:*:*:*:*:*:*:*", "matchCriteriaId": "49A63F39-30BE-443F-AF10-6245587D3359"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:21:*:*:*:*:*:*:*", "matchCriteriaId": "56BDB5A0-0839-4A20-A003-B8CD56F48171"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:enterprise_manager_ops_center:*:*:*:*:*:*:*:*", "versionEndExcluding": "12.1.4", "matchCriteriaId": "A70BB445-EF2B-4C9D-8502-FDD6A19F8C30"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:enterprise_manager_ops_center:12.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "4725EA61-9BAB-4E72-9F92-ADE4624439CC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:enterprise_manager_ops_center:12.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "D0879FB1-58E2-4EC4-8111-044642E046BD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:enterprise_manager_ops_center:12.3.0:*:*:*:*:*:*:*", "matchCriteriaId": "C7CF2929-4CBC-4B56-87AE-F45F53BD8DD6"}]}]}], "references": [{"url": "http://advisories.mageia.org/MGASA-2015-0011.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://lists.apple.com/archives/security-announce/2015/Aug/msg00001.html", "source": "secalert@redhat.com", "tags": ["Broken Link", "Mailing List"]}, {"url": "http://lists.apple.com/archives/security-announce/2015/Sep/msg00004.html", "source": "secalert@redhat.com", "tags": ["Broken Link", "Mailing List"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2015-June/159352.html", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2014/11/28/5", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/cpujan2016-2367955.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/73040", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.ubuntu.com/usn/USN-2523-1", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1174077", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/apache/httpd/commit/3f1693d558d0758f829c8b53993f1749ddf6ffcb", "source": "secalert@redhat.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://issues.apache.org/bugzilla/show_bug.cgi?id=57204", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "https://lists.apache.org/thread.html/56c2e7cc9deb1c12a843d0dc251ea7fd3e7e80293cde02fcd65286ba%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/84a3714f0878781f6ed84473d1a503d2cc382277e100450209231830%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/r76142b8c5119df2178be7c2dba88fde552eedeec37ea993dfce68d1d%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/r83109088737656fa6307bd99ab40f8ff0269ae58d3f7272d7048494a%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/r9f93cf6dde308d42a9c807784e8102600d0397f5f834890708bf6920%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/ra7f6aeb28661fbf826969526585f16856abc4615877875f9d3b35ef4%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/rb14daf9cc4e28d18cdc15d6a6ca74e565672fabf7ad89541071d008b%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/rc998b18880df98bafaade071346690c2bc1444adaa1a1ea464b93f0a%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/rcc44594d4d6579b90deccd4536b5d31f099ef563df39b094be286b9e%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/rd18c3c43602e66f9cdcf09f1de233804975b9572b0456cc582390b6f%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/re3d27b6250aa8548b8845d314bb8a350b3df326cacbbfdfe4d455234%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/rf6449464fd8b7437704c55f88361b66f12d5b5f90bcce66af4be4ba9%40%3Ccvs.httpd.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://support.apple.com/HT205219", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://support.apple.com/kb/HT205031", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/apache/httpd/commit/3f1693d558d0758f829c8b53993f1749ddf6ffcb"}}