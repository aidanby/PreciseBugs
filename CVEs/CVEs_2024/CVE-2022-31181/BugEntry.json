{"buggy_code": ["<?php\n/**\n * Copyright since 2007 PrestaShop SA and Contributors\n * PrestaShop is an International Registered Trademark & Property of PrestaShop SA\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to https://devdocs.prestashop.com/ for more information.\n *\n * @author    PrestaShop SA and Contributors <contact@prestashop.com>\n * @copyright Since 2007 PrestaShop SA and Contributors\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n */\nclass Smarty_CacheResource_Mysql extends Smarty_CacheResource_Custom\n{\n    /**\n     * fetch cached content and its modification time from data source.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param string $content cached content\n     * @param int $mtime cache modification timestamp (epoch)\n     */\n    protected function fetch($id, $name, $cache_id, $compile_id, &$content, &$mtime)\n    {\n        $row = Db::getInstance()->getRow('SELECT modified, content FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE id_smarty_cache = \"' . pSQL($id, true) . '\"');\n        if ($row) {\n            $content = $row['content'];\n            $mtime = strtotime($row['modified']);\n        } else {\n            $content = null;\n            $mtime = null;\n        }\n    }\n\n    /**\n     * Fetch cached content's modification timestamp from data source.\n     *\n     * @note implementing this method is optional. Only implement it if modification times can be accessed faster than loading the complete cached content.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     *\n     * @return int|bool timestamp (epoch) the template was modified, or false if not found\n     */\n    protected function fetchTimestamp($id, $name, $cache_id, $compile_id)\n    {\n        $value = Db::getInstance()->getValue('SELECT modified FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE id_smarty_cache = \"' . pSQL($id, true) . '\"');\n        $mtime = strtotime($value);\n\n        return $mtime;\n    }\n\n    /**\n     * Save content to cache.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param int|null $exp_time seconds till expiration time in seconds or null\n     * @param string $content content to cache\n     *\n     * @return bool success\n     */\n    protected function save($id, $name, $cache_id, $compile_id, $exp_time, $content)\n    {\n        Db::getInstance()->execute('\n\t\tREPLACE INTO ' . _DB_PREFIX_ . 'smarty_cache (id_smarty_cache, name, cache_id, content)\n\t\tVALUES (\n\t\t\t\"' . pSQL($id, true) . '\",\n\t\t\t\"' . pSQL(sha1($name)) . '\",\n\t\t\t\"' . pSQL($cache_id, true) . '\",\n\t\t\t\"' . pSQL($content, true) . '\"\n\t\t)');\n\n        return (bool) Db::getInstance()->Affected_Rows();\n    }\n\n    /**\n     * Delete content from cache.\n     *\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param int|null $exp_time seconds till expiration or null\n     *\n     * @return int number of deleted caches\n     */\n    protected function delete($name, $cache_id, $compile_id, $exp_time)\n    {\n        // delete the whole cache\n        if ($name === null && $cache_id === null && $compile_id === null && $exp_time === null) {\n            // returning the number of deleted caches would require a second query to count them\n            Db::getInstance()->execute('TRUNCATE TABLE ' . _DB_PREFIX_ . 'smarty_cache');\n\n            return -1;\n        }\n\n        $where = [];\n        if ($name !== null) {\n            $where[] = 'name = \"' . pSQL(sha1($name)) . '\"';\n        }\n        if ($exp_time !== null) {\n            $where[] = 'modified < DATE_SUB(NOW(), INTERVAL ' . (int) $exp_time . ' SECOND)';\n        }\n        if ($cache_id !== null) {\n            $where[] = '(cache_id  = \"' . pSQL($cache_id, true) . '\" OR cache_id LIKE \"' . pSQL($cache_id . '|%', true) . '\")';\n        }\n\n        Db::getInstance()->execute('DELETE FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE ' . implode(' AND ', $where));\n\n        return Db::getInstance()->Affected_Rows();\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright since 2007 PrestaShop SA and Contributors\n * PrestaShop is an International Registered Trademark & Property of PrestaShop SA\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to https://devdocs.prestashop.com/ for more information.\n *\n * @author    PrestaShop SA and Contributors <contact@prestashop.com>\n * @copyright Since 2007 PrestaShop SA and Contributors\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n */\nclass Smarty_CacheResource_Mysql extends Smarty_CacheResource_Custom\n{\n    /** @var PhpEncryption */\n    private $phpEncryption;\n\n    public function __construct()\n    {\n        $this->phpEncryption = new PhpEncryption(_NEW_COOKIE_KEY_);\n    }\n\n    /**\n     * fetch cached content and its modification time from data source.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param string $content cached content\n     * @param int $mtime cache modification timestamp (epoch)\n     */\n    protected function fetch($id, $name, $cache_id, $compile_id, &$content, &$mtime)\n    {\n        $row = Db::getInstance()->getRow('SELECT modified, content FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE id_smarty_cache = \"' . pSQL($id, true) . '\"');\n        if ($row) {\n            $content = $this->phpEncryption->decrypt($row['content']);\n            $mtime = strtotime($row['modified']);\n        } else {\n            $content = null;\n            $mtime = null;\n        }\n    }\n\n    /**\n     * Fetch cached content's modification timestamp from data source.\n     *\n     * @note implementing this method is optional. Only implement it if modification times can be accessed faster than loading the complete cached content.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     *\n     * @return int|bool timestamp (epoch) the template was modified, or false if not found\n     */\n    protected function fetchTimestamp($id, $name, $cache_id, $compile_id)\n    {\n        $value = Db::getInstance()->getValue('SELECT modified FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE id_smarty_cache = \"' . pSQL($id, true) . '\"');\n        $mtime = strtotime($value);\n\n        return $mtime;\n    }\n\n    /**\n     * Save content to cache.\n     *\n     * @param string $id unique cache content identifier\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param int|null $exp_time seconds till expiration time in seconds or null\n     * @param string $content content to cache\n     *\n     * @return bool success\n     */\n    protected function save($id, $name, $cache_id, $compile_id, $exp_time, $content)\n    {\n        Db::getInstance()->execute('\n\t\tREPLACE INTO ' . _DB_PREFIX_ . 'smarty_cache (id_smarty_cache, name, cache_id, content)\n\t\tVALUES (\n\t\t\t\"' . pSQL($id, true) . '\",\n\t\t\t\"' . pSQL(sha1($name)) . '\",\n\t\t\t\"' . pSQL($cache_id, true) . '\",\n\t\t\t\"' . $this->phpEncryption->encrypt($content) . '\"\n\t\t)');\n\n        return (bool) Db::getInstance()->Affected_Rows();\n    }\n\n    /**\n     * Delete content from cache.\n     *\n     * @param string $name template name\n     * @param string $cache_id cache id\n     * @param string $compile_id compile id\n     * @param int|null $exp_time seconds till expiration or null\n     *\n     * @return int number of deleted caches\n     */\n    protected function delete($name, $cache_id, $compile_id, $exp_time)\n    {\n        // delete the whole cache\n        if ($name === null && $cache_id === null && $compile_id === null && $exp_time === null) {\n            // returning the number of deleted caches would require a second query to count them\n            Db::getInstance()->execute('TRUNCATE TABLE ' . _DB_PREFIX_ . 'smarty_cache');\n\n            return -1;\n        }\n\n        $where = [];\n        if ($name !== null) {\n            $where[] = 'name = \"' . pSQL(sha1($name)) . '\"';\n        }\n        if ($exp_time !== null) {\n            $where[] = 'modified < DATE_SUB(NOW(), INTERVAL ' . (int) $exp_time . ' SECOND)';\n        }\n        if ($cache_id !== null) {\n            $where[] = '(cache_id  = \"' . pSQL($cache_id, true) . '\" OR cache_id LIKE \"' . pSQL($cache_id . '|%', true) . '\")';\n        }\n\n        Db::getInstance()->execute('DELETE FROM ' . _DB_PREFIX_ . 'smarty_cache WHERE ' . implode(' AND ', $where));\n\n        return Db::getInstance()->Affected_Rows();\n    }\n}\n"], "filenames": ["classes/Smarty/SmartyCacheResourceMysql.php"], "buggy_code_start_loc": [27], "buggy_code_end_loc": [91], "fixing_code_start_loc": [28], "fixing_code_end_loc": [99], "type": "CWE-89", "message": "PrestaShop is an Open Source e-commerce platform. In versions from 1.6.0.10 and before 1.7.8.7 PrestaShop is subject to an SQL injection vulnerability which can be chained to call PHP's Eval function on attacker input. The problem is fixed in version 1.7.8.7. Users are advised to upgrade. Users unable to upgrade may delete the MySQL Smarty cache feature.", "other": {"cve": {"id": "CVE-2022-31181", "sourceIdentifier": "security-advisories@github.com", "published": "2022-08-01T20:15:08.297", "lastModified": "2022-09-27T18:13:40.723", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "PrestaShop is an Open Source e-commerce platform. In versions from 1.6.0.10 and before 1.7.8.7 PrestaShop is subject to an SQL injection vulnerability which can be chained to call PHP's Eval function on attacker input. The problem is fixed in version 1.7.8.7. Users are advised to upgrade. Users unable to upgrade may delete the MySQL Smarty cache feature."}, {"lang": "es", "value": "PrestaShop es una plataforma de comercio electr\u00f3nico de c\u00f3digo abierto. En las versiones a partir de 1.6.0.10 y anteriores a 1.7.8.7, PrestaShop est\u00e1 sujeta a una vulnerabilidad de inyecci\u00f3n SQL que puede ser encadenada para llamar a la funci\u00f3n Eval de PHP en la entrada del atacante. El problema ha sido solucionado en versi\u00f3n 1.7.8.7. Es recomendado a usuarios actualizar. Los usuarios que no puedan actualizar pueden eliminar la funci\u00f3n de cach\u00e9 MySQL Smarty"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:prestashop:prestashop:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.6.0.10", "versionEndExcluding": "1.7.8.7", "matchCriteriaId": "D6DB07FB-037E-45A1-B2AC-E01C0DA72E98"}]}]}], "references": [{"url": "https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/PrestaShop/PrestaShop/releases/tag/1.7.8.7", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-hrgx-p36p-89q4", "source": "security-advisories@github.com", "tags": ["Mitigation", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804"}}