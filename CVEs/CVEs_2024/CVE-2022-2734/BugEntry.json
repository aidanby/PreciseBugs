{"buggy_code": ["<?php\n\n/**\n * Login screen.\n *\n * @package OpenEMR\n * @link    http://www.open-emr.org\n * @author  Rod Roark <rod@sunsetsystems.com>\n * @author  Brady Miller <brady.g.miller@gmail.com>\n * @author  Kevin Yeh <kevin.y@integralemr.com>\n * @author  Scott Wakefield <scott.wakefield@gmail.com>\n * @author  ViCarePlus <visolve_emr@visolve.com>\n * @author  Julia Longtin <julialongtin@diasp.org>\n * @author  cfapress\n * @author  markleeds\n * @author  Tyler Wrenn <tyler@tylerwrenn.com>\n * @author  Ken Chapple <ken@mi-squared.com>\n * @author  Daniel Pflieger <daniel@mi-squared.com> <daniel@growlingflea.com>\n * @author  Robert Down <robertdown@live.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2021 Ken Chapple <ken@mi-squared.com>\n * @copyright Copyright (c) 2021 Daniel Pflieger <daniel@mi-squared.com> <daniel@growlingflea.com>\n * @copyright Copyright (c) 2021-2022 Robert Down <robertdown@live.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Services\\FacilityService;\n\n$ignoreAuth = true;\n// Set $sessionAllowWrite to true to prevent session concurrency issues during authorization related code\n$sessionAllowWrite = true;\nrequire_once(\"../globals.php\");\n\n$twig = new TwigContainer(null, $GLOBALS[\"kernel\"]);\n$t = $twig->getTwig();\n\n// mdsupport - Add 'App' functionality for user interfaces without standard menu and frames\n// If this script is called with app parameter, validate it without showing other apps.\n//\n// Build a list of valid entries\n$emr_app = array();\n$sql = \"SELECT option_id, title,is_default FROM list_options WHERE list_id=? and activity=1 ORDER BY seq, option_id\";\n$rs = sqlStatement($sql, ['apps']);\nif (sqlNumRows($rs)) {\n    while ($app = sqlFetchArray($rs)) {\n        $app_req = explode('?', trim($app['title']));\n        if (! file_exists('../' . $app_req[0])) {\n            continue;\n        }\n\n        $emr_app [trim($app ['option_id'])] = trim($app ['title']);\n        if ($app ['is_default']) {\n            $emr_app_def = $app ['option_id'];\n        }\n    }\n}\n\n$div_app = '';\nif (count($emr_app)) {\n    // Standard app must exist\n    $std_app = 'main/main_screen.php';\n    if (!in_array($std_app, $emr_app)) {\n        $emr_app['*OpenEMR'] = $std_app;\n    }\n\n    if (isset($_REQUEST['app']) && $emr_app[$_REQUEST['app']]) {\n        $div_app = sprintf('<input type=\"hidden\" name=\"appChoice\" value=\"%s\">', attr($_REQUEST['app']));\n    } else {\n        foreach ($emr_app as $opt_disp => $opt_value) {\n            $opt_htm .= sprintf(\n                '<option value=\"%s\" %s>%s</option>\\n',\n                attr($opt_disp),\n                ($opt_disp == $opt_default ? 'selected=\"selected\"' : ''),\n                text(xl_list_label($opt_disp))\n            );\n        }\n\n        $div_app = sprintf(\n            '\n            <div id=\"divApp\" class=\"form-group\">\n                <label for=\"appChoice\" class=\"text-right\">%s:</label>\n                <div>\n                    <select class=\"form-control\" id=\"selApp\" name=\"appChoice\" size=\"1\">%s</select>\n                </div>\n            </div>',\n            xlt('App'),\n            $opt_htm\n        );\n    }\n}\n\n// This code allows configurable positioning in the login page\n$logoarea = \"py-2 px-2 py-md-3 px-md-5 order-1 bg-primary\";\n$formarea = \"py-3 px-2 p-sm-5 bg-white order-2\";\n$loginrow = \"row login-row bg-white shadow-lg align-items-center my-sm-5\";\n\n// Apply these classes to the logo area if the login page is left or right\n$lrArr = ['left', 'right'];\n$logoarea .= (in_array($GLOBALS['login_page_layout'], $lrArr)) ? \" col-md-6\" : \" col-md-12\";\n$formarea .= (in_array($GLOBALS['login_page_layout'], $lrArr)) ? \" col-md-6\" : \" col-md-12\";\n\n// More finite control on a per-setting basis\nswitch ($GLOBALS['login_page_layout']) {\n    case 'left':\n        $logoarea .= \" order-md-2\";\n        $formarea .= \" order-md-1\";\n        break;\n\n    case 'right':\n        $logoarea .= \" order-md-1\";\n        $formarea .= \" order-md-2\";\n        break;\n\n    default:\n        $logoarea .= \" order-1\";\n        $formarea .= \" col-12\";\n        $loginrow .= \" login-row-center\";\n        break;\n}\n\nfunction getDefaultLanguage(): array\n{\n    $sql = \"SELECT * FROM lang_languages where lang_description = ?\";\n    $res = sqlStatement($sql, [$GLOBALS['language_default']]);\n    $langs = [];\n\n    while ($row = sqlFetchArray($res)) {\n        $langs[] = $row;\n    }\n\n    $id = 1;\n    $desc = \"English\";\n\n    if (count($langs) == 1) {\n        $id = $langs[0][\"lang_id\"];\n        $desc = $langs[0][\"lang_description\"];\n    }\n\n    return [\"id\" => $id, \"language\" => $desc];\n}\n\nfunction getLanguagesList(): array\n{\n    $mainLangID = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n    $sql = \"SELECT ll.lang_id, IF(LENGTH(ld.definition), ld.definition, ll.lang_description) AS trans_lang_description, ll.lang_description\n        FROM lang_languages AS ll\n        LEFT JOIN lang_constants AS lc ON lc.constant_name = ll.lang_description\n        LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND ld.lang_id = ?\n        ORDER BY IF(LENGTH(ld.definition),ld.definition,ll.lang_description), ll.lang_id\";\n    $res = sqlStatement($sql, [$mainLangID]);\n    $langList = [];\n\n    while ($row = sqlFetchArray($res)) {\n        $langList[] = $row;\n    }\n\n    return $langList;\n}\n\n$facilities = [];\n$facilitySelected = false;\nif ($GLOBALS['login_into_facility']) {\n    $facilityService = new FacilityService();\n    $facilities = $facilityService->getAllFacility();\n    $facilitySelected = ($GLOBALS['set_facility_cookie'] && isset($_COOKIE['pc_facility'])) ? $_COOKIE['pc_facility'] : null;\n}\n\n$defaultLanguage = getDefaultLanguage();\n$languageList = getLanguagesList();\n$_SESSION['language_choice'] = $defaultLanguage['id'];\n\n$relogin = (isset($_SESSION['relogin']) && ($_SESSION['relogin'] == 1)) ? true : false;\nif ($relogin) {\n    unset($_SESSION[\"relogin\"]);\n}\n\n$t1 = $GLOBALS['tiny_logo_1'];\n$t2 = $GLOBALS['tiny_logo_2'];\n$displayTinyLogo = false;\nif ($t1 && !$t2) {\n    $displayTinyLogo = 1;\n} if ($t2 && !$t1) {\n    $displayTinyLogo = 2;\n} if ($t1 && $t2) {\n    $displayTinyLogo = 3;\n}\n\n$regTranslations = json_encode(array(\n    'title' => xla('OpenEMR Product Registration'),\n    'pleaseProvideValidEmail' => xla('Please provide a valid email address'),\n    'success' => xla('Success'),\n    'registeredSuccess' => xla('Your installation of OpenEMR has been registered'),\n    'submit' => xla('Submit'),\n    'noThanks' => xla('No Thanks'),\n    'registeredEmail' => xla('Registered email'),\n    'registeredId' => xla('Registered id'),\n    'genericError' => xla('Error. Try again later'),\n    'closeTooltip' => ''\n));\n\n$cookie = '';\nif (session_name()) {\n    $sid = urlencode(session_id());\n    $sname = urlencode(session_name());\n    $scparams = session_get_cookie_params();\n    $domain = $scparams['domain'];\n    $path = $scparams['path'];\n    $oldDate = gmdate('Y', strtotime(\"-1 years\"));\n    $expires = gmdate(DATE_RFC1123, $oldDate);\n    $sameSite = empty($scparams['samesite']) ? '' : $scparams['samesite'];\n    $cookie = \"{$sname}={$sid}; path={$path}; domain={$domain}; expires={$expires}\";\n\n    if ($sameSite) {\n        $cookie .= \"; SameSite={$sameSite}\";\n    }\n\n    $cookie = json_encode($cookie);\n}\n\n$viewArgs = [\n    'title' => $openemr_name,\n    'displayLanguage' => ($GLOBALS[\"language_menu_login\"] && (count($languageList) != 1)) ? true : false,\n    'defaultLangID' => $defaultLanguage['id'],\n    'defaultLangName' => $defaultLanguage['language'],\n    'languageList' => $languageList,\n    'relogin' => $relogin,\n    'loginFail' => (isset($_SESSION[\"loginfailure\"]) && $_SESSION[\"loginfailure\"] == 1) ? true : false,\n    'displayFacilities' => ($GLOBALS[\"login_into_facility\"]) ? true : false,\n    'facilityList' => $facilities,\n    'facilitySelected' => $facilitySelected,\n    'displayGoogleSignin' => (!empty($GLOBALS['google_signin_enabled']) && !empty($GLOBALS['google_signin_client_id'])) ? true : false,\n    'googleSigninClientID' => $GLOBALS['google_signin_client_id'],\n    'logoArea' => $logoarea,\n    'displayExtraLogo' => $GLOBALS['extra_logo_login'],\n    'primaryLogoSrc' => file_get_contents($GLOBALS[\"images_static_absolute\"] . \"/login-logo.svg\"),\n    'logocode' => $logocode,\n    'displayLoginLabel' => ($GLOBALS[\"show_label_login\"]) ? true : false,\n    'displayTinyLogo' => $displayTinyLogo,\n    'tinyLogo1' => $tinylogocode1,\n    'tinyLogo2' => $tinylogocode2,\n    'displayTagline' => $GLOBALS['show_tagline_on_login'],\n    'tagline' => $GLOBALS['login_tagline_text'],\n    'displayAck' => $GLOBALS['display_acknowledgements'],\n    'hasSession' => (session_name()) ? true : false,\n    'cookieText' => $cookie,\n    'regTranslations' => $regTranslations,\n    'regConstants' => json_encode(['webroot' => $GLOBALS['webroot']]),\n    'siteID' => $_SESSION['site_id'],\n    'loginRow' => $loginrow,\n    'formArea' => $formarea,\n    'showLabels' => $GLOBALS['show_labels_on_login_form'],\n];\necho $t->render(\"login/login_core.html.twig\", $viewArgs);\n", "<?php\n\n/**\n * import_template.php\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Cassian LUP <cassi.lup@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2011 Cassian LUP <cassi.lup@gmail.com>\n * @copyright Copyright (c) 2016-2022 Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n//setting the session & other config options\n\n// Will start the (patient) portal OpenEMR session/cookie.\nrequire_once __DIR__ . \"/../src/Common/Session/SessionUtil.php\";\nOpenEMR\\Common\\Session\\SessionUtil::portalSessionStart();\n\n//don't require standard openemr authorization in globals.php\n$ignoreAuth_onsite_portal = true;\n\n//includes\nrequire_once '../interface/globals.php';\nrequire_once __DIR__ . \"/lib/appsql.class.php\";\n$logit = new ApplicationTable();\n\nuse OpenEMR\\Common\\Crypto\\CryptoGen;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Logging\\EventAuditLogger;\nuse OpenEMR\\Common\\Logging\\SystemLogger;\nuse OpenEMR\\Core\\Header;\n\n//For redirect if the site on session does not match\n$landingpage = \"index.php?site=\" . urlencode($_SESSION['site_id']);\n\n//exit if portal is turned off\nif (!(isset($GLOBALS['portal_onsite_two_enable'])) || !($GLOBALS['portal_onsite_two_enable'])) {\n    echo xlt('Patient Portal is turned off');\n    exit;\n}\n$auth['portal_pwd'] = '';\nif (isset($_GET['woops'])) {\n    unset($_GET['woops']);\n    unset($_SESSION['password_update']);\n}\n\nif (!empty($_GET['forward_email_verify'])) {\n    if (empty($GLOBALS['portal_onsite_two_register']) || empty($GLOBALS['google_recaptcha_site_key']) || empty($GLOBALS['google_recaptcha_secret_key'])) {\n        (new SystemLogger())->debug(\"registration not supported, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $crypto = new CryptoGen();\n    if (!$crypto->cryptCheckStandard($_GET['forward_email_verify'])) {\n        (new SystemLogger())->debug(\"illegal token, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $token_one_time = $crypto->decryptStandard($_GET['forward_email_verify'], null, 'drive', 6);\n    if (empty($token_one_time)) {\n        (new SystemLogger())->debug(\"unable to decrypt token, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $sqlResource = sqlStatementNoLog(\"SELECT `id`, `token_onetime`, `fname`, `mname`, `lname`, `dob`, `email`, `language` FROM `verify_email` WHERE `active` = 1 AND `token_onetime` LIKE BINARY ?\", [$token_one_time . '%']);\n    if (sqlNumRows($sqlResource) > 1) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") found more than once, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") found more than once, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    if (!sqlNumRows($sqlResource)) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") not found, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") not found, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $sqlVerify = sqlFetchArray($sqlResource);\n    if (empty($sqlVerify['id']) || empty($sqlVerify['token_onetime'])) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") not properly set up, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") not properly set up, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    // have \"used\" token, so now make it inactive\n    sqlStatementNoLog(\"UPDATE `verify_email` SET `active` = 0 WHERE `id` = ?\", [$sqlVerify['id']]);\n\n    $validateTime = hex2bin(str_replace($token_one_time, '', $sqlVerify['token_onetime']));\n    if ($validateTime <= time()) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") has expired, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") has expired, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        die(xlt(\"Your email verification link has expired. Reset and try again.\"));\n    }\n\n    if (!empty($sqlVerify['fname']) && !empty($sqlVerify['lname']) && !empty($sqlVerify['dob']) && !empty($sqlVerify['email']) && !empty($sqlVerify['language'])) {\n        // token has passed and have all needed data\n        $fnameRegistration = $sqlVerify['fname'];\n        $_SESSION['fnameRegistration'] = $fnameRegistration;\n        $mnameRegistration = $sqlVerify['mname'] ?? '';\n        $_SESSION['mnameRegistration'] = $mnameRegistration;\n        $lnameRegistration = $sqlVerify['lname'];\n        $_SESSION['lnameRegistration'] = $lnameRegistration;\n        $dobRegistration = $sqlVerify['dob'];\n        $_SESSION['dobRegistration'] = $dobRegistration;\n        $emailRegistration = $sqlVerify['email'];\n        $_SESSION['emailRegistration'] = $emailRegistration;\n        $languageRegistration = $sqlVerify['language'];\n        $_SESSION['language_choice'] = (int)($languageRegistration ?? 1);\n        $portalRegistrationAuthorization = true;\n        $_SESSION['token_id_holder'] = $sqlVerify['id'];\n        (new SystemLogger())->debug(\"token worked for forward_email_verify token, now on to registration\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 1, \"token (\" . $token_one_time . \") was successful for forward_email_verify token\");\n        require_once(__DIR__ . \"/account/register.php\");\n        exit();\n    } else {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") did not have all required data, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") did not have all required data, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n} else if (isset($_GET['forward'])) {\n    if ((empty($GLOBALS['portal_two_pass_reset']) && empty($GLOBALS['portal_onsite_two_register'])) || empty($GLOBALS['google_recaptcha_site_key']) || empty($GLOBALS['google_recaptcha_secret_key'])) {\n        (new SystemLogger())->debug(\"reset password and registration not supported, so stopped attempt to use forward token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $auth = false;\n    if (strlen($_GET['forward']) >= 64) {\n        $crypto = new CryptoGen();\n        if ($crypto->cryptCheckStandard($_GET['forward'])) {\n            $one_time = $crypto->decryptStandard($_GET['forward'], null, 'drive', 6);\n            if (!empty($one_time)) {\n                $auth = sqlQueryNoLog(\"Select * From patient_access_onsite Where portal_onetime Like BINARY ?\", array($one_time . '%'));\n            }\n        }\n    }\n    if ($auth === false) {\n        error_log(\"PORTAL ERROR: \" . errorLogEscape('One time reset:' . $_GET['forward']), 0);\n        $logit->portalLog('login attempt', '', ($_GET['forward'] . ':invalid one time'), '', '0');\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $parse = str_replace($one_time, '', $auth['portal_onetime']);\n    $validate = hex2bin(substr($parse, 6));\n    if ($validate <= time()) {\n        error_log(\"PORTAL ERROR: \" . errorLogEscape('One time reset link expired. Dying.'), 0);\n        $logit->portalLog('password reset attempt', '', ($_POST['uname'] . ':link expired'), '', '0');\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        die(xlt(\"Your one time credential reset link has expired. Reset and try again.\") . \"time:$validate time:\" . time());\n    }\n    $_SESSION['pin'] = substr($parse, 0, 6);\n    $_SESSION['forward'] = $auth['portal_onetime'];\n    $_SESSION['portal_username'] = $auth['portal_username'];\n    $_SESSION['portal_login_username'] = $auth['portal_login_username'];\n    $_SESSION['password_update'] = 2;\n    $_SESSION['onetime'] = $auth['portal_pwd'];\n    unset($auth);\n}\n// security measure -- will check on next page.\n$_SESSION['itsme'] = 1;\n//\n\n//\n// Deal with language selection\n//\n// collect default language id (skip this if this is a password update or reset)\nif (!(isset($_SESSION['password_update']) || (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])))) {\n    $res2 = sqlStatement(\"select * from lang_languages where lang_description = ?\", array($GLOBALS['language_default']));\n    for ($iter = 0; $row = sqlFetchArray($res2); $iter++) {\n        $result2[$iter] = $row;\n    }\n\n    if (count($result2) == 1) {\n        $defaultLangID = $result2[0][\"lang_id\"];\n        $defaultLangName = $result2[0][\"lang_description\"];\n    } else {\n        //default to english if any problems\n        $defaultLangID = 1;\n        $defaultLangName = \"English\";\n    }\n\n    // set session variable to default so login information appears in default language\n    $_SESSION['language_choice'] = $defaultLangID;\n    // collect languages if showing language menu\n    if ($GLOBALS['language_menu_login']) {\n        // sorting order of language titles depends on language translation options.\n        $mainLangID = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n        // Use and sort by the translated language name.\n        $sql = \"SELECT ll.lang_id, \" .\n            \"IF(LENGTH(ld.definition),ld.definition,ll.lang_description) AS trans_lang_description, \" .\n            \"ll.lang_description \" .\n            \"FROM lang_languages AS ll \" .\n            \"LEFT JOIN lang_constants AS lc ON lc.constant_name = ll.lang_description \" .\n            \"LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND \" .\n            \"ld.lang_id = ? \" .\n            \"ORDER BY IF(LENGTH(ld.definition),ld.definition,ll.lang_description), ll.lang_id\";\n        $res3 = SqlStatement($sql, array($mainLangID));\n        for ($iter = 0; $row = sqlFetchArray($res3); $iter++) {\n            $result3[$iter] = $row;\n        }\n        if (count($result3) == 1) {\n            //default to english if only return one language\n            $hiddenLanguageField = \"<input type='hidden' name='languageChoice' value='1' />\\n\";\n        }\n    } else {\n        $hiddenLanguageField = \"<input type='hidden' name='languageChoice' value='\" . attr($defaultLangID) . \"' />\\n\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title><?php echo xlt('Patient Portal Login'); ?></title>\n    <?php\n    Header::setupHeader(['no_main-theme', 'datetime-picker', 'patientportal-style', 'patientportal-base', 'patientportal-register']);\n    ?>\n    <script>\n        function checkUserName() {\n            let vacct = document.getElementById('uname').value;\n            let vsuname = document.getElementById('login_uname').value;\n            if (vsuname.length < 12) {\n                alert(<?php echo xlj('User Name must be at least 12 characters!'); ?>);\n                return false;\n            }\n            let data = {\n                'action': 'userIsUnique',\n                'account': vacct,\n                'loginUname': vsuname\n            };\n            $.ajax({\n                type: 'GET',\n                url: './account/account.php',\n                data: data\n            }).done(function (rtn) {\n                if (rtn === '1') {\n                    return true;\n                }\n                alert(<?php echo xlj('Log In Name is unavailable. Try again!'); ?>);\n                return false;\n            });\n        }\n\n        function process() {\n            if (!(validate())) {\n                alert(<?php echo xlj('Field(s) are missing!'); ?>);\n                return false;\n            }\n            return true;\n        }\n\n        function validate() {\n            let pass = true;\n\n            if (document.getElementById('uname').value == \"\") {\n                $('#uname').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass').value == \"\") {\n                $('#pass').addClass('is-invalid');\n                pass = false;\n            }\n            return pass;\n        }\n\n        function process_new_pass() {\n            if (!(validate_new_pass())) {\n                alert(<?php echo xlj('Field(s) are missing!'); ?>);\n                return false;\n            }\n            if (document.getElementById('pass_new').value != document.getElementById('pass_new_confirm').value) {\n                alert(<?php echo xlj('The new password fields are not the same.'); ?>);\n                return false;\n            }\n            if (document.getElementById('pass').value == document.getElementById('pass_new').value) {\n                alert(<?php echo xlj('The new password can not be the same as the current password.'); ?>);\n                return false;\n            }\n        }\n\n        function validate_new_pass() {\n            var pass = true;\n            if (document.getElementById('uname').value == \"\") {\n                $('#uname').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass').value == \"\") {\n                $('#pass').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass_new').value == \"\") {\n                $('#pass_new').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass_new_confirm').value == \"\") {\n                $('#pass_new_confirm').addClass('is-invalid');\n                pass = false;\n            }\n            return pass;\n        }\n    </script>\n\n    <?php if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) { ?>\n        <script src=\"https://www.google.com/recaptcha/api.js\" async defer></script>\n        <script>\n            function enableVerifyBtn(){\n                document.getElementById(\"submitRequest\").disabled = false;\n            }\n        </script>\n        <?php // add csrf mechanism for the password reset ui\n        CsrfUtils::setupCsrfKey();\n        ?>\n    <?php } ?>\n\n</head>\n<body class=\"login container mt-2\">\n    <div id=\"wrapper\" class=\"container-fluid text-center\">\n        <?php if (isset($_SESSION['password_update']) || isset($_GET['password_update'])) {\n            $_SESSION['password_update'] = 1;\n            ?>\n            <h2 class=\"title\"><?php echo xlt('Please Enter New Credentials'); ?></h2>\n            <form class=\"form pb-5\" action=\"get_patient_info.php\" method=\"POST\" onsubmit=\"return process_new_pass()\">\n                <input style=\"display: none\" type=\"text\" name=\"dummyuname\" />\n                <input style=\"display: none\" type=\"password\" name=\"dummypass\" />\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"uname\"><?php echo xlt('Account Name'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"uname\" id=\"uname\" type=\"text\" readonly autocomplete=\"none\" value=\"<?php echo attr($_SESSION['portal_username']); ?>\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"login_uname\"><?php echo xlt('Use Username'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"login_uname\" id=\"login_uname\" type=\"text\" autofocus autocomplete=\"none\" title=\"<?php echo xla('Please enter a username of 12 to 80 characters. Recommended to include symbols and numbers but not required.'); ?>\" placeholder=\"<?php echo xla('Must be 12 to 80 characters'); ?>\" pattern=\".{12,80}\" value=\"<?php echo attr($_SESSION['portal_login_username']); ?>\" onblur=\"checkUserName()\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass\"><?php echo !$_SESSION['onetime'] ? xlt('Current Password') : ''; ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass\" id=\"pass\" <?php echo $_SESSION['onetime'] ? 'type=\"hidden\" ' : 'type=\"password\" '; ?> autocomplete=\"none\" value=\"<?php echo attr($_SESSION['onetime']);\n                        $_SESSION['password_update'] = $_SESSION['onetime'] ? 2 : 1;\n                        unset($_SESSION['onetime']); ?>\" required />\n                    </div>\n                </div>\n                <?php if ($_SESSION['pin']) { ?>\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"token_pin\"><?php echo xlt('One Time PIN'); ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"token_pin\" id=\"token_pin\" type=\"password\" autocomplete=\"none\" value=\"\" required pattern=\".{6,20}\" />\n                        </div>\n                    </div>\n                <?php } ?>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass_new\"><?php echo xlt('New Password'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass_new\" id=\"pass_new\" type=\"password\" required placeholder=\"<?php echo xla('Min length is 8 with upper,lowercase,numbers mix'); ?>\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass_new_confirm\"><?php echo xlt('Confirm New Password'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass_new_confirm\" id=\"pass_new_confirm\" type=\"password\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n                    </div>\n                </div>\n                <?php if ($GLOBALS['enforce_signin_email']) { ?>\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"passaddon\"><?php echo xlt('Confirm Email Address'); ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"passaddon\" id=\"passaddon\" required placeholder=\"<?php echo xla('Current on record trusted email'); ?>\" type=\"email\" autocomplete=\"none\" value=\"\" />\n                        </div>\n                    </div>\n                <?php } ?>\n                <input class=\"btn btn-secondary float-left\" type=\"button\" onclick=\"document.location.replace('./index.php?woops=1&site=<?php echo attr_url($_SESSION['site_id']); ?>');\" value=\"<?php echo xla('Cancel'); ?>\" />\n                <input class=\"btn btn-primary float-right\" type=\"submit\" value=\"<?php echo xla('Log In'); ?>\" />\n            </form>\n        <?php } elseif (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) { ?>\n            <form id=\"resetPass\" action=\"#\" method=\"post\">\n                <input type='hidden' id='csrf_token_form' name='csrf_token_form' value='<?php echo attr(CsrfUtils::collectCsrfToken('passwordResetCsrf')); ?>' />\n                <div class=\"text-center\">\n                    <fieldset>\n                        <legend class='bg-primary text-white pt-2 py-1'><h3><?php echo xlt('Patient Credentials Reset') ?></h3></legend>\n                        <div class=\"jumbotron jumbotron-fluid px-5 py-3\">\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"fname\"><?php echo xlt('First Name') ?></label>\n                                <div class=\"col-md\">\n                                    <input type=\"text\" class=\"form-control\" id=\"fname\" required placeholder=\"<?php echo xla('First Name'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"lname\"><?php echo xlt('Last Name') ?></label>\n                                <div class=\"col-md\">\n                                    <input type=\"text\" class=\"form-control\" id=\"lname\" required placeholder=\"<?php echo xla('Last Name'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"dob\"><?php echo xlt('Birth Date') ?></label>\n                                <div class=\"col-md\">\n                                    <input id=\"dob\" type=\"text\" required class=\"form-control datepicker\" placeholder=\"<?php echo xla('YYYY-MM-DD'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"emailInput\"><?php echo xlt('Enter E-Mail Address') ?></label>\n                                <div class=\"col-md\">\n                                    <input id=\"emailInput\" type=\"email\" class=\"form-control\" required placeholder=\"<?php echo xla('Current trusted email address on record.'); ?>\" maxlength=\"100\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"g-recaptcha\" data-sitekey=\"<?php echo attr($GLOBALS['google_recaptcha_site_key']); ?>\" data-callback=\"enableVerifyBtn\"></div>\n                            </div>\n                        </div>\n                        <input class=\"btn btn-secondary float-left\" type=\"button\" onclick=\"document.location.replace('./index.php?woops=1&site=<?php echo attr_url($_SESSION['site_id']); ?>');\" value=\"<?php echo xla('Cancel'); ?>\" />\n                        <button id=\"submitRequest\" class=\"btn btn-primary nextBtn float-right\" type=\"submit\" disabled=\"disabled\"><?php echo xlt('Verify') ?></button>\n                    </fieldset>\n                </div>\n            </form>\n        <?php } else {\n            ?> <!-- Main logon -->\n        <img class=\"img-responsive center-block login-image\" src='<?php echo $GLOBALS['images_static_relative']; ?>/login-logo.png' />\n        <form class=\"text-center\" action=\"get_patient_info.php\" method=\"POST\" onsubmit=\"return process()\">\n            <fieldset>\n                <legend class=\"bg-primary text-white pt-2 py-1\"><h3><?php echo xlt('Patient Portal Login'); ?></h3></legend>\n                <div class=\"jumbotron jumbotron-fluid px-5 py-3\">\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"uname\"><?php echo xlt('Username') ?></label>\n                        <div class=\"col-md\">\n                            <input type=\"text\" class=\"form-control\" name=\"uname\" id=\"uname\" autocomplete=\"none\" required />\n                        </div>\n                    </div>\n                    <div class=\"form-row mt-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"pass\"><?php echo xlt('Password') ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"pass\" id=\"pass\" type=\"password\" required autocomplete=\"none\" />\n                        </div>\n                    </div>\n                    <?php if ($GLOBALS['enforce_signin_email']) { ?>\n                        <div class=\"form-row mt-3\">\n                            <label class=\"col-md-2 col-form-label\" for=\"passaddon\"><?php echo xlt('E-Mail Address') ?></label>\n                            <div class=\"col-md\">\n                                <input class=\"form-control\" name=\"passaddon\" id=\"passaddon\" type=\"email\" autocomplete=\"none\" />\n                            </div>\n                        </div>\n                    <?php } ?>\n                    <?php if ($GLOBALS['language_menu_login']) { ?>\n                        <?php if (count($result3) != 1) { ?>\n                            <div class=\"form-group mt-1\">\n                                <label class=\"col-form-label-sm\" for=\"selLanguage\"><?php echo xlt('Language'); ?></label>\n                                <select class=\"form-control form-control-sm\" id=\"selLanguage\" name=\"languageChoice\">\n                                    <?php\n                                    echo \"<option selected='selected' value='\" . attr($defaultLangID) . \"'>\" .\n                                        text(xl('Default') . \" - \" . xl($defaultLangName)) . \"</option>\\n\";\n                                    foreach ($result3 as $iter) {\n                                        if ($GLOBALS['language_menu_showall']) {\n                                            if (!$GLOBALS['allow_debug_language'] && $iter['lang_description'] == 'dummy') {\n                                                continue; // skip the dummy language\n                                            }\n                                            echo \"<option value='\" . attr($iter['lang_id']) . \"'>\" .\n                                                text($iter['trans_lang_description']) . \"</option>\\n\";\n                                        } else {\n                                            if (in_array($iter['lang_description'], $GLOBALS['language_menu_show'])) {\n                                                if (!$GLOBALS['allow_debug_language'] && $iter['lang_description'] == 'dummy') {\n                                                    continue; // skip the dummy language\n                                                }\n                                                echo \"<option value='\" . attr($iter['lang_id']) . \"'>\" .\n                                                    text($iter['trans_lang_description']) . \"</option>\\n\";\n                                            }\n                                        }\n                                    }\n                                    ?>\n                                </select>\n                            </div>\n                        <?php }\n                    } ?>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <?php if (!empty($GLOBALS['portal_onsite_two_register']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key'])) { ?>\n                            <button class=\"btn btn-secondary float-left\" onclick=\"location.replace('./account/verify.php?site=<?php echo attr_url($_SESSION['site_id']); ?>')\"><?php echo xlt('Register'); ?></button>\n                        <?php } ?>\n                        <?php if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['w']) && (isset($_GET['u']) || isset($_GET['p']))) { ?>\n                            <button class=\"btn btn-danger ml-2\" onclick=\"location.replace('./index.php?requestNew=1&site=<?php echo attr_url($_SESSION['site_id']); ?>')\"><?php echo xlt('Reset Credentials'); ?></button>\n                        <?php } ?>\n                        <button class=\"btn btn-success float-right\" type=\"submit\"><?php echo xlt('Log In'); ?></button>\n                    </div>\n                </div>\n            </fieldset>\n            <?php if (!(empty($hiddenLanguageField))) {\n                echo $hiddenLanguageField;\n            } ?>\n        </form>\n    </div><!-- div wrapper -->\n    <?php } ?> <!--  logon wrapper -->\n\n    <div id=\"alertStore\" class=\"d-none\">\n        <div class=\"h6 alert alert-warning alert-dismissible fade show my-1 py-1\" role=\"alert\">\n            <button type=\"button\" class=\"close my-1 py-0\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    </div>\n\n    <script>\n        var tab_mode = true;\n        var webroot_url = <?php echo js_escape($GLOBALS['web_root']) ?>;\n\n        function restoreSession() {\n            //dummy functions so the dlgopen function will work in the patient portal\n            return true;\n        }\n\n        var isPortal = 1;\n\n        $(function () {\n            <?php // if something went wrong\n            if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) {\n                $_SESSION['register'] = true;\n                $_SESSION['authUser'] = 'portal-user';\n                $_SESSION['pid'] = true;\n                ?>\n            $('.datepicker').datetimepicker({\n                <?php $datetimepicker_timepicker = false; ?>\n                <?php $datetimepicker_showseconds = false; ?>\n                <?php $datetimepicker_formatInput = false; ?>\n                <?php require $GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'; ?>\n            });\n            $(document.body).on('hidden.bs.modal', function () {\n                callServer('cleanup');\n            });\n            $(\"#resetPass\").on('submit', function (e) {\n                e.preventDefault();\n                callServer('reset_password');\n                return false;\n            });\n            <?php } ?>\n            <?php if (isset($_GET['w'])) { ?>\n            // mdsupport - Would be good to include some clue about what went wrong!\n            bsAlert(<?php echo xlj('Something went wrong. Please try again.'); ?>);\n            <?php } ?>\n            <?php // if successfully logged out\n            if (isset($_GET['logout'])) { ?>\n            bsAlert(<?php echo xlj('You have been successfully logged out.'); ?>);\n            <?php } ?>\n\n            return false;\n        });\n\n        function callServer(action) {\n            var data = {};\n            if (action === 'reset_password') {\n                data = {\n                    'action': action,\n                    'dob': $(\"#dob\").val(),\n                    'last': $(\"#lname\").val(),\n                    'first': $(\"#fname\").val(),\n                    'email': $(\"#emailInput\").val(),\n                    'g-recaptcha-response': grecaptcha.getResponse(),\n                    'csrf_token_form': $(\"#csrf_token_form\").val()\n                }\n            }\n            if (action === 'cleanup') {\n                data = {\n                    'action': action\n                }\n            }\n            $.ajax({\n                type: 'GET',\n                url: './account/account.php',\n                data: data\n            }).done(function (rtn) {\n                if (action === \"cleanup\") {\n                    window.location.href = \"./index.php?site=\" + <?php echo js_url($_SESSION['site_id']); ?>; // Goto landing page.\n                } else if (action === \"reset_password\") {\n                    if (JSON.parse(rtn) === 1) {\n                        dialog.alert(<?php echo xlj(\"Check your email inbox (and possibly your spam folder) for further instructions to reset your password. If you have not received an email, then recommend contacting the clinic.\") ?>);\n                        return false;\n                    } else {\n                        dialog.alert(<?php echo xlj(\"Something went wrong. Recommend contacting the clinic.\") ?>);\n                        return false;\n                    }\n                }\n            }).fail(function (err) {\n                var message = <?php echo xlj('Something went wrong.') ?>;\n                alert(message);\n            });\n        }\n\n        function bsAlert(msg) {\n            let divAlert = document.getElementById(\"alertStore\").querySelector(\"div.alert\").cloneNode(true);\n            document.querySelector(\"form\").prepend(divAlert);\n            let strongMsg = document.createElement(\"strong\");\n            strongMsg.innerHTML = msg;\n            divAlert.prepend(strongMsg);\n            setTimeout(() => {\n                document.querySelector(\"div.alert\").remove();\n            }, 3000);\n        }\n    </script>\n</body>\n</html>\n"], "fixing_code": ["<?php\n\n/**\n * Login screen.\n *\n * @package OpenEMR\n * @link    http://www.open-emr.org\n * @author  Rod Roark <rod@sunsetsystems.com>\n * @author  Brady Miller <brady.g.miller@gmail.com>\n * @author  Kevin Yeh <kevin.y@integralemr.com>\n * @author  Scott Wakefield <scott.wakefield@gmail.com>\n * @author  ViCarePlus <visolve_emr@visolve.com>\n * @author  Julia Longtin <julialongtin@diasp.org>\n * @author  cfapress\n * @author  markleeds\n * @author  Tyler Wrenn <tyler@tylerwrenn.com>\n * @author  Ken Chapple <ken@mi-squared.com>\n * @author  Daniel Pflieger <daniel@mi-squared.com> <daniel@growlingflea.com>\n * @author  Robert Down <robertdown@live.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2021 Ken Chapple <ken@mi-squared.com>\n * @copyright Copyright (c) 2021 Daniel Pflieger <daniel@mi-squared.com> <daniel@growlingflea.com>\n * @copyright Copyright (c) 2021-2022 Robert Down <robertdown@live.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n// prevent UI redressing\nHeader(\"X-Frame-Options: DENY\");\nHeader(\"Content-Security-Policy: frame-ancestors 'none'\");\n\nuse OpenEMR\\Common\\Twig\\TwigContainer;\nuse OpenEMR\\Services\\FacilityService;\n\n$ignoreAuth = true;\n// Set $sessionAllowWrite to true to prevent session concurrency issues during authorization related code\n$sessionAllowWrite = true;\nrequire_once(\"../globals.php\");\n\n$twig = new TwigContainer(null, $GLOBALS[\"kernel\"]);\n$t = $twig->getTwig();\n\n// mdsupport - Add 'App' functionality for user interfaces without standard menu and frames\n// If this script is called with app parameter, validate it without showing other apps.\n//\n// Build a list of valid entries\n$emr_app = array();\n$sql = \"SELECT option_id, title,is_default FROM list_options WHERE list_id=? and activity=1 ORDER BY seq, option_id\";\n$rs = sqlStatement($sql, ['apps']);\nif (sqlNumRows($rs)) {\n    while ($app = sqlFetchArray($rs)) {\n        $app_req = explode('?', trim($app['title']));\n        if (! file_exists('../' . $app_req[0])) {\n            continue;\n        }\n\n        $emr_app [trim($app ['option_id'])] = trim($app ['title']);\n        if ($app ['is_default']) {\n            $emr_app_def = $app ['option_id'];\n        }\n    }\n}\n\n$div_app = '';\nif (count($emr_app)) {\n    // Standard app must exist\n    $std_app = 'main/main_screen.php';\n    if (!in_array($std_app, $emr_app)) {\n        $emr_app['*OpenEMR'] = $std_app;\n    }\n\n    if (isset($_REQUEST['app']) && $emr_app[$_REQUEST['app']]) {\n        $div_app = sprintf('<input type=\"hidden\" name=\"appChoice\" value=\"%s\">', attr($_REQUEST['app']));\n    } else {\n        foreach ($emr_app as $opt_disp => $opt_value) {\n            $opt_htm .= sprintf(\n                '<option value=\"%s\" %s>%s</option>\\n',\n                attr($opt_disp),\n                ($opt_disp == $opt_default ? 'selected=\"selected\"' : ''),\n                text(xl_list_label($opt_disp))\n            );\n        }\n\n        $div_app = sprintf(\n            '\n            <div id=\"divApp\" class=\"form-group\">\n                <label for=\"appChoice\" class=\"text-right\">%s:</label>\n                <div>\n                    <select class=\"form-control\" id=\"selApp\" name=\"appChoice\" size=\"1\">%s</select>\n                </div>\n            </div>',\n            xlt('App'),\n            $opt_htm\n        );\n    }\n}\n\n// This code allows configurable positioning in the login page\n$logoarea = \"py-2 px-2 py-md-3 px-md-5 order-1 bg-primary\";\n$formarea = \"py-3 px-2 p-sm-5 bg-white order-2\";\n$loginrow = \"row login-row bg-white shadow-lg align-items-center my-sm-5\";\n\n// Apply these classes to the logo area if the login page is left or right\n$lrArr = ['left', 'right'];\n$logoarea .= (in_array($GLOBALS['login_page_layout'], $lrArr)) ? \" col-md-6\" : \" col-md-12\";\n$formarea .= (in_array($GLOBALS['login_page_layout'], $lrArr)) ? \" col-md-6\" : \" col-md-12\";\n\n// More finite control on a per-setting basis\nswitch ($GLOBALS['login_page_layout']) {\n    case 'left':\n        $logoarea .= \" order-md-2\";\n        $formarea .= \" order-md-1\";\n        break;\n\n    case 'right':\n        $logoarea .= \" order-md-1\";\n        $formarea .= \" order-md-2\";\n        break;\n\n    default:\n        $logoarea .= \" order-1\";\n        $formarea .= \" col-12\";\n        $loginrow .= \" login-row-center\";\n        break;\n}\n\nfunction getDefaultLanguage(): array\n{\n    $sql = \"SELECT * FROM lang_languages where lang_description = ?\";\n    $res = sqlStatement($sql, [$GLOBALS['language_default']]);\n    $langs = [];\n\n    while ($row = sqlFetchArray($res)) {\n        $langs[] = $row;\n    }\n\n    $id = 1;\n    $desc = \"English\";\n\n    if (count($langs) == 1) {\n        $id = $langs[0][\"lang_id\"];\n        $desc = $langs[0][\"lang_description\"];\n    }\n\n    return [\"id\" => $id, \"language\" => $desc];\n}\n\nfunction getLanguagesList(): array\n{\n    $mainLangID = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n    $sql = \"SELECT ll.lang_id, IF(LENGTH(ld.definition), ld.definition, ll.lang_description) AS trans_lang_description, ll.lang_description\n        FROM lang_languages AS ll\n        LEFT JOIN lang_constants AS lc ON lc.constant_name = ll.lang_description\n        LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND ld.lang_id = ?\n        ORDER BY IF(LENGTH(ld.definition),ld.definition,ll.lang_description), ll.lang_id\";\n    $res = sqlStatement($sql, [$mainLangID]);\n    $langList = [];\n\n    while ($row = sqlFetchArray($res)) {\n        $langList[] = $row;\n    }\n\n    return $langList;\n}\n\n$facilities = [];\n$facilitySelected = false;\nif ($GLOBALS['login_into_facility']) {\n    $facilityService = new FacilityService();\n    $facilities = $facilityService->getAllFacility();\n    $facilitySelected = ($GLOBALS['set_facility_cookie'] && isset($_COOKIE['pc_facility'])) ? $_COOKIE['pc_facility'] : null;\n}\n\n$defaultLanguage = getDefaultLanguage();\n$languageList = getLanguagesList();\n$_SESSION['language_choice'] = $defaultLanguage['id'];\n\n$relogin = (isset($_SESSION['relogin']) && ($_SESSION['relogin'] == 1)) ? true : false;\nif ($relogin) {\n    unset($_SESSION[\"relogin\"]);\n}\n\n$t1 = $GLOBALS['tiny_logo_1'];\n$t2 = $GLOBALS['tiny_logo_2'];\n$displayTinyLogo = false;\nif ($t1 && !$t2) {\n    $displayTinyLogo = 1;\n} if ($t2 && !$t1) {\n    $displayTinyLogo = 2;\n} if ($t1 && $t2) {\n    $displayTinyLogo = 3;\n}\n\n$regTranslations = json_encode(array(\n    'title' => xla('OpenEMR Product Registration'),\n    'pleaseProvideValidEmail' => xla('Please provide a valid email address'),\n    'success' => xla('Success'),\n    'registeredSuccess' => xla('Your installation of OpenEMR has been registered'),\n    'submit' => xla('Submit'),\n    'noThanks' => xla('No Thanks'),\n    'registeredEmail' => xla('Registered email'),\n    'registeredId' => xla('Registered id'),\n    'genericError' => xla('Error. Try again later'),\n    'closeTooltip' => ''\n));\n\n$cookie = '';\nif (session_name()) {\n    $sid = urlencode(session_id());\n    $sname = urlencode(session_name());\n    $scparams = session_get_cookie_params();\n    $domain = $scparams['domain'];\n    $path = $scparams['path'];\n    $oldDate = gmdate('Y', strtotime(\"-1 years\"));\n    $expires = gmdate(DATE_RFC1123, $oldDate);\n    $sameSite = empty($scparams['samesite']) ? '' : $scparams['samesite'];\n    $cookie = \"{$sname}={$sid}; path={$path}; domain={$domain}; expires={$expires}\";\n\n    if ($sameSite) {\n        $cookie .= \"; SameSite={$sameSite}\";\n    }\n\n    $cookie = json_encode($cookie);\n}\n\n$viewArgs = [\n    'title' => $openemr_name,\n    'displayLanguage' => ($GLOBALS[\"language_menu_login\"] && (count($languageList) != 1)) ? true : false,\n    'defaultLangID' => $defaultLanguage['id'],\n    'defaultLangName' => $defaultLanguage['language'],\n    'languageList' => $languageList,\n    'relogin' => $relogin,\n    'loginFail' => (isset($_SESSION[\"loginfailure\"]) && $_SESSION[\"loginfailure\"] == 1) ? true : false,\n    'displayFacilities' => ($GLOBALS[\"login_into_facility\"]) ? true : false,\n    'facilityList' => $facilities,\n    'facilitySelected' => $facilitySelected,\n    'displayGoogleSignin' => (!empty($GLOBALS['google_signin_enabled']) && !empty($GLOBALS['google_signin_client_id'])) ? true : false,\n    'googleSigninClientID' => $GLOBALS['google_signin_client_id'],\n    'logoArea' => $logoarea,\n    'displayExtraLogo' => $GLOBALS['extra_logo_login'],\n    'primaryLogoSrc' => file_get_contents($GLOBALS[\"images_static_absolute\"] . \"/login-logo.svg\"),\n    'logocode' => $logocode,\n    'displayLoginLabel' => ($GLOBALS[\"show_label_login\"]) ? true : false,\n    'displayTinyLogo' => $displayTinyLogo,\n    'tinyLogo1' => $tinylogocode1,\n    'tinyLogo2' => $tinylogocode2,\n    'displayTagline' => $GLOBALS['show_tagline_on_login'],\n    'tagline' => $GLOBALS['login_tagline_text'],\n    'displayAck' => $GLOBALS['display_acknowledgements'],\n    'hasSession' => (session_name()) ? true : false,\n    'cookieText' => $cookie,\n    'regTranslations' => $regTranslations,\n    'regConstants' => json_encode(['webroot' => $GLOBALS['webroot']]),\n    'siteID' => $_SESSION['site_id'],\n    'loginRow' => $loginrow,\n    'formArea' => $formarea,\n    'showLabels' => $GLOBALS['show_labels_on_login_form'],\n];\necho $t->render(\"login/login_core.html.twig\", $viewArgs);\n", "<?php\n\n/**\n * import_template.php\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Cassian LUP <cassi.lup@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Tyler Wrenn <tyler@tylerwrenn.com>\n * @copyright Copyright (c) 2011 Cassian LUP <cassi.lup@gmail.com>\n * @copyright Copyright (c) 2016-2022 Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2020 Tyler Wrenn <tyler@tylerwrenn.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n// prevent UI redressing\nHeader(\"X-Frame-Options: DENY\");\nHeader(\"Content-Security-Policy: frame-ancestors 'none'\");\n\n//setting the session & other config options\n\n// Will start the (patient) portal OpenEMR session/cookie.\nrequire_once __DIR__ . \"/../src/Common/Session/SessionUtil.php\";\nOpenEMR\\Common\\Session\\SessionUtil::portalSessionStart();\n\n//don't require standard openemr authorization in globals.php\n$ignoreAuth_onsite_portal = true;\n\n//includes\nrequire_once '../interface/globals.php';\nrequire_once __DIR__ . \"/lib/appsql.class.php\";\n$logit = new ApplicationTable();\n\nuse OpenEMR\\Common\\Crypto\\CryptoGen;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Logging\\EventAuditLogger;\nuse OpenEMR\\Common\\Logging\\SystemLogger;\nuse OpenEMR\\Core\\Header;\n\n//For redirect if the site on session does not match\n$landingpage = \"index.php?site=\" . urlencode($_SESSION['site_id']);\n\n//exit if portal is turned off\nif (!(isset($GLOBALS['portal_onsite_two_enable'])) || !($GLOBALS['portal_onsite_two_enable'])) {\n    echo xlt('Patient Portal is turned off');\n    exit;\n}\n$auth['portal_pwd'] = '';\nif (isset($_GET['woops'])) {\n    unset($_GET['woops']);\n    unset($_SESSION['password_update']);\n}\n\nif (!empty($_GET['forward_email_verify'])) {\n    if (empty($GLOBALS['portal_onsite_two_register']) || empty($GLOBALS['google_recaptcha_site_key']) || empty($GLOBALS['google_recaptcha_secret_key'])) {\n        (new SystemLogger())->debug(\"registration not supported, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $crypto = new CryptoGen();\n    if (!$crypto->cryptCheckStandard($_GET['forward_email_verify'])) {\n        (new SystemLogger())->debug(\"illegal token, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $token_one_time = $crypto->decryptStandard($_GET['forward_email_verify'], null, 'drive', 6);\n    if (empty($token_one_time)) {\n        (new SystemLogger())->debug(\"unable to decrypt token, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n\n    $sqlResource = sqlStatementNoLog(\"SELECT `id`, `token_onetime`, `fname`, `mname`, `lname`, `dob`, `email`, `language` FROM `verify_email` WHERE `active` = 1 AND `token_onetime` LIKE BINARY ?\", [$token_one_time . '%']);\n    if (sqlNumRows($sqlResource) > 1) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") found more than once, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") found more than once, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    if (!sqlNumRows($sqlResource)) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") not found, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") not found, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $sqlVerify = sqlFetchArray($sqlResource);\n    if (empty($sqlVerify['id']) || empty($sqlVerify['token_onetime'])) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") not properly set up, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") not properly set up, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    // have \"used\" token, so now make it inactive\n    sqlStatementNoLog(\"UPDATE `verify_email` SET `active` = 0 WHERE `id` = ?\", [$sqlVerify['id']]);\n\n    $validateTime = hex2bin(str_replace($token_one_time, '', $sqlVerify['token_onetime']));\n    if ($validateTime <= time()) {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") has expired, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") has expired, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        die(xlt(\"Your email verification link has expired. Reset and try again.\"));\n    }\n\n    if (!empty($sqlVerify['fname']) && !empty($sqlVerify['lname']) && !empty($sqlVerify['dob']) && !empty($sqlVerify['email']) && !empty($sqlVerify['language'])) {\n        // token has passed and have all needed data\n        $fnameRegistration = $sqlVerify['fname'];\n        $_SESSION['fnameRegistration'] = $fnameRegistration;\n        $mnameRegistration = $sqlVerify['mname'] ?? '';\n        $_SESSION['mnameRegistration'] = $mnameRegistration;\n        $lnameRegistration = $sqlVerify['lname'];\n        $_SESSION['lnameRegistration'] = $lnameRegistration;\n        $dobRegistration = $sqlVerify['dob'];\n        $_SESSION['dobRegistration'] = $dobRegistration;\n        $emailRegistration = $sqlVerify['email'];\n        $_SESSION['emailRegistration'] = $emailRegistration;\n        $languageRegistration = $sqlVerify['language'];\n        $_SESSION['language_choice'] = (int)($languageRegistration ?? 1);\n        $portalRegistrationAuthorization = true;\n        $_SESSION['token_id_holder'] = $sqlVerify['id'];\n        (new SystemLogger())->debug(\"token worked for forward_email_verify token, now on to registration\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 1, \"token (\" . $token_one_time . \") was successful for forward_email_verify token\");\n        require_once(__DIR__ . \"/account/register.php\");\n        exit();\n    } else {\n        (new SystemLogger())->debug(\"active token (\" . $token_one_time . \") did not have all required data, so stopped attempt to use forward_email_verify token\");\n        EventAuditLogger::instance()->newEvent('patient-reg-email-verify', '', '', 0, \"active token (\" . $token_one_time . \") did not have all required data, so stopped attempt to use forward_email_verify token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n} else if (isset($_GET['forward'])) {\n    if ((empty($GLOBALS['portal_two_pass_reset']) && empty($GLOBALS['portal_onsite_two_register'])) || empty($GLOBALS['google_recaptcha_site_key']) || empty($GLOBALS['google_recaptcha_secret_key'])) {\n        (new SystemLogger())->debug(\"reset password and registration not supported, so stopped attempt to use forward token\");\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $auth = false;\n    if (strlen($_GET['forward']) >= 64) {\n        $crypto = new CryptoGen();\n        if ($crypto->cryptCheckStandard($_GET['forward'])) {\n            $one_time = $crypto->decryptStandard($_GET['forward'], null, 'drive', 6);\n            if (!empty($one_time)) {\n                $auth = sqlQueryNoLog(\"Select * From patient_access_onsite Where portal_onetime Like BINARY ?\", array($one_time . '%'));\n            }\n        }\n    }\n    if ($auth === false) {\n        error_log(\"PORTAL ERROR: \" . errorLogEscape('One time reset:' . $_GET['forward']), 0);\n        $logit->portalLog('login attempt', '', ($_GET['forward'] . ':invalid one time'), '', '0');\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        header('Location: ' . $landingpage . '&w&u');\n        exit();\n    }\n    $parse = str_replace($one_time, '', $auth['portal_onetime']);\n    $validate = hex2bin(substr($parse, 6));\n    if ($validate <= time()) {\n        error_log(\"PORTAL ERROR: \" . errorLogEscape('One time reset link expired. Dying.'), 0);\n        $logit->portalLog('password reset attempt', '', ($_POST['uname'] . ':link expired'), '', '0');\n        OpenEMR\\Common\\Session\\SessionUtil::portalSessionCookieDestroy();\n        die(xlt(\"Your one time credential reset link has expired. Reset and try again.\") . \"time:$validate time:\" . time());\n    }\n    $_SESSION['pin'] = substr($parse, 0, 6);\n    $_SESSION['forward'] = $auth['portal_onetime'];\n    $_SESSION['portal_username'] = $auth['portal_username'];\n    $_SESSION['portal_login_username'] = $auth['portal_login_username'];\n    $_SESSION['password_update'] = 2;\n    $_SESSION['onetime'] = $auth['portal_pwd'];\n    unset($auth);\n}\n// security measure -- will check on next page.\n$_SESSION['itsme'] = 1;\n//\n\n//\n// Deal with language selection\n//\n// collect default language id (skip this if this is a password update or reset)\nif (!(isset($_SESSION['password_update']) || (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])))) {\n    $res2 = sqlStatement(\"select * from lang_languages where lang_description = ?\", array($GLOBALS['language_default']));\n    for ($iter = 0; $row = sqlFetchArray($res2); $iter++) {\n        $result2[$iter] = $row;\n    }\n\n    if (count($result2) == 1) {\n        $defaultLangID = $result2[0][\"lang_id\"];\n        $defaultLangName = $result2[0][\"lang_description\"];\n    } else {\n        //default to english if any problems\n        $defaultLangID = 1;\n        $defaultLangName = \"English\";\n    }\n\n    // set session variable to default so login information appears in default language\n    $_SESSION['language_choice'] = $defaultLangID;\n    // collect languages if showing language menu\n    if ($GLOBALS['language_menu_login']) {\n        // sorting order of language titles depends on language translation options.\n        $mainLangID = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n        // Use and sort by the translated language name.\n        $sql = \"SELECT ll.lang_id, \" .\n            \"IF(LENGTH(ld.definition),ld.definition,ll.lang_description) AS trans_lang_description, \" .\n            \"ll.lang_description \" .\n            \"FROM lang_languages AS ll \" .\n            \"LEFT JOIN lang_constants AS lc ON lc.constant_name = ll.lang_description \" .\n            \"LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND \" .\n            \"ld.lang_id = ? \" .\n            \"ORDER BY IF(LENGTH(ld.definition),ld.definition,ll.lang_description), ll.lang_id\";\n        $res3 = SqlStatement($sql, array($mainLangID));\n        for ($iter = 0; $row = sqlFetchArray($res3); $iter++) {\n            $result3[$iter] = $row;\n        }\n        if (count($result3) == 1) {\n            //default to english if only return one language\n            $hiddenLanguageField = \"<input type='hidden' name='languageChoice' value='1' />\\n\";\n        }\n    } else {\n        $hiddenLanguageField = \"<input type='hidden' name='languageChoice' value='\" . attr($defaultLangID) . \"' />\\n\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title><?php echo xlt('Patient Portal Login'); ?></title>\n    <?php\n    Header::setupHeader(['no_main-theme', 'datetime-picker', 'patientportal-style', 'patientportal-base', 'patientportal-register']);\n    ?>\n    <script>\n        function checkUserName() {\n            let vacct = document.getElementById('uname').value;\n            let vsuname = document.getElementById('login_uname').value;\n            if (vsuname.length < 12) {\n                alert(<?php echo xlj('User Name must be at least 12 characters!'); ?>);\n                return false;\n            }\n            let data = {\n                'action': 'userIsUnique',\n                'account': vacct,\n                'loginUname': vsuname\n            };\n            $.ajax({\n                type: 'GET',\n                url: './account/account.php',\n                data: data\n            }).done(function (rtn) {\n                if (rtn === '1') {\n                    return true;\n                }\n                alert(<?php echo xlj('Log In Name is unavailable. Try again!'); ?>);\n                return false;\n            });\n        }\n\n        function process() {\n            if (!(validate())) {\n                alert(<?php echo xlj('Field(s) are missing!'); ?>);\n                return false;\n            }\n            return true;\n        }\n\n        function validate() {\n            let pass = true;\n\n            if (document.getElementById('uname').value == \"\") {\n                $('#uname').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass').value == \"\") {\n                $('#pass').addClass('is-invalid');\n                pass = false;\n            }\n            return pass;\n        }\n\n        function process_new_pass() {\n            if (!(validate_new_pass())) {\n                alert(<?php echo xlj('Field(s) are missing!'); ?>);\n                return false;\n            }\n            if (document.getElementById('pass_new').value != document.getElementById('pass_new_confirm').value) {\n                alert(<?php echo xlj('The new password fields are not the same.'); ?>);\n                return false;\n            }\n            if (document.getElementById('pass').value == document.getElementById('pass_new').value) {\n                alert(<?php echo xlj('The new password can not be the same as the current password.'); ?>);\n                return false;\n            }\n        }\n\n        function validate_new_pass() {\n            var pass = true;\n            if (document.getElementById('uname').value == \"\") {\n                $('#uname').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass').value == \"\") {\n                $('#pass').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass_new').value == \"\") {\n                $('#pass_new').addClass('is-invalid');\n                pass = false;\n            }\n            if (document.getElementById('pass_new_confirm').value == \"\") {\n                $('#pass_new_confirm').addClass('is-invalid');\n                pass = false;\n            }\n            return pass;\n        }\n    </script>\n\n    <?php if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) { ?>\n        <script src=\"https://www.google.com/recaptcha/api.js\" async defer></script>\n        <script>\n            function enableVerifyBtn(){\n                document.getElementById(\"submitRequest\").disabled = false;\n            }\n        </script>\n        <?php // add csrf mechanism for the password reset ui\n        CsrfUtils::setupCsrfKey();\n        ?>\n    <?php } ?>\n\n</head>\n<body class=\"login container mt-2\">\n    <div id=\"wrapper\" class=\"container-fluid text-center\">\n        <?php if (isset($_SESSION['password_update']) || isset($_GET['password_update'])) {\n            $_SESSION['password_update'] = 1;\n            ?>\n            <h2 class=\"title\"><?php echo xlt('Please Enter New Credentials'); ?></h2>\n            <form class=\"form pb-5\" action=\"get_patient_info.php\" method=\"POST\" onsubmit=\"return process_new_pass()\">\n                <input style=\"display: none\" type=\"text\" name=\"dummyuname\" />\n                <input style=\"display: none\" type=\"password\" name=\"dummypass\" />\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"uname\"><?php echo xlt('Account Name'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"uname\" id=\"uname\" type=\"text\" readonly autocomplete=\"none\" value=\"<?php echo attr($_SESSION['portal_username']); ?>\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"login_uname\"><?php echo xlt('Use Username'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"login_uname\" id=\"login_uname\" type=\"text\" autofocus autocomplete=\"none\" title=\"<?php echo xla('Please enter a username of 12 to 80 characters. Recommended to include symbols and numbers but not required.'); ?>\" placeholder=\"<?php echo xla('Must be 12 to 80 characters'); ?>\" pattern=\".{12,80}\" value=\"<?php echo attr($_SESSION['portal_login_username']); ?>\" onblur=\"checkUserName()\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass\"><?php echo !$_SESSION['onetime'] ? xlt('Current Password') : ''; ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass\" id=\"pass\" <?php echo $_SESSION['onetime'] ? 'type=\"hidden\" ' : 'type=\"password\" '; ?> autocomplete=\"none\" value=\"<?php echo attr($_SESSION['onetime']);\n                        $_SESSION['password_update'] = $_SESSION['onetime'] ? 2 : 1;\n                        unset($_SESSION['onetime']); ?>\" required />\n                    </div>\n                </div>\n                <?php if ($_SESSION['pin']) { ?>\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"token_pin\"><?php echo xlt('One Time PIN'); ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"token_pin\" id=\"token_pin\" type=\"password\" autocomplete=\"none\" value=\"\" required pattern=\".{6,20}\" />\n                        </div>\n                    </div>\n                <?php } ?>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass_new\"><?php echo xlt('New Password'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass_new\" id=\"pass_new\" type=\"password\" required placeholder=\"<?php echo xla('Min length is 8 with upper,lowercase,numbers mix'); ?>\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n                    </div>\n                </div>\n                <div class=\"form-row my-3\">\n                    <label class=\"col-md-2 col-form-label\" for=\"pass_new_confirm\"><?php echo xlt('Confirm New Password'); ?></label>\n                    <div class=\"col-md\">\n                        <input class=\"form-control\" name=\"pass_new_confirm\" id=\"pass_new_confirm\" type=\"password\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n                    </div>\n                </div>\n                <?php if ($GLOBALS['enforce_signin_email']) { ?>\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"passaddon\"><?php echo xlt('Confirm Email Address'); ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"passaddon\" id=\"passaddon\" required placeholder=\"<?php echo xla('Current on record trusted email'); ?>\" type=\"email\" autocomplete=\"none\" value=\"\" />\n                        </div>\n                    </div>\n                <?php } ?>\n                <input class=\"btn btn-secondary float-left\" type=\"button\" onclick=\"document.location.replace('./index.php?woops=1&site=<?php echo attr_url($_SESSION['site_id']); ?>');\" value=\"<?php echo xla('Cancel'); ?>\" />\n                <input class=\"btn btn-primary float-right\" type=\"submit\" value=\"<?php echo xla('Log In'); ?>\" />\n            </form>\n        <?php } elseif (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) { ?>\n            <form id=\"resetPass\" action=\"#\" method=\"post\">\n                <input type='hidden' id='csrf_token_form' name='csrf_token_form' value='<?php echo attr(CsrfUtils::collectCsrfToken('passwordResetCsrf')); ?>' />\n                <div class=\"text-center\">\n                    <fieldset>\n                        <legend class='bg-primary text-white pt-2 py-1'><h3><?php echo xlt('Patient Credentials Reset') ?></h3></legend>\n                        <div class=\"jumbotron jumbotron-fluid px-5 py-3\">\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"fname\"><?php echo xlt('First Name') ?></label>\n                                <div class=\"col-md\">\n                                    <input type=\"text\" class=\"form-control\" id=\"fname\" required placeholder=\"<?php echo xla('First Name'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"lname\"><?php echo xlt('Last Name') ?></label>\n                                <div class=\"col-md\">\n                                    <input type=\"text\" class=\"form-control\" id=\"lname\" required placeholder=\"<?php echo xla('Last Name'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"dob\"><?php echo xlt('Birth Date') ?></label>\n                                <div class=\"col-md\">\n                                    <input id=\"dob\" type=\"text\" required class=\"form-control datepicker\" placeholder=\"<?php echo xla('YYYY-MM-DD'); ?>\" />\n                                </div>\n                            </div>\n                            <div class=\"form-row my-3\">\n                                <label class=\"col-md-2 col-form-label\" for=\"emailInput\"><?php echo xlt('Enter E-Mail Address') ?></label>\n                                <div class=\"col-md\">\n                                    <input id=\"emailInput\" type=\"email\" class=\"form-control\" required placeholder=\"<?php echo xla('Current trusted email address on record.'); ?>\" maxlength=\"100\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"g-recaptcha\" data-sitekey=\"<?php echo attr($GLOBALS['google_recaptcha_site_key']); ?>\" data-callback=\"enableVerifyBtn\"></div>\n                            </div>\n                        </div>\n                        <input class=\"btn btn-secondary float-left\" type=\"button\" onclick=\"document.location.replace('./index.php?woops=1&site=<?php echo attr_url($_SESSION['site_id']); ?>');\" value=\"<?php echo xla('Cancel'); ?>\" />\n                        <button id=\"submitRequest\" class=\"btn btn-primary nextBtn float-right\" type=\"submit\" disabled=\"disabled\"><?php echo xlt('Verify') ?></button>\n                    </fieldset>\n                </div>\n            </form>\n        <?php } else {\n            ?> <!-- Main logon -->\n        <img class=\"img-responsive center-block login-image\" src='<?php echo $GLOBALS['images_static_relative']; ?>/login-logo.png' />\n        <form class=\"text-center\" action=\"get_patient_info.php\" method=\"POST\" onsubmit=\"return process()\">\n            <fieldset>\n                <legend class=\"bg-primary text-white pt-2 py-1\"><h3><?php echo xlt('Patient Portal Login'); ?></h3></legend>\n                <div class=\"jumbotron jumbotron-fluid px-5 py-3\">\n                    <div class=\"form-row my-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"uname\"><?php echo xlt('Username') ?></label>\n                        <div class=\"col-md\">\n                            <input type=\"text\" class=\"form-control\" name=\"uname\" id=\"uname\" autocomplete=\"none\" required />\n                        </div>\n                    </div>\n                    <div class=\"form-row mt-3\">\n                        <label class=\"col-md-2 col-form-label\" for=\"pass\"><?php echo xlt('Password') ?></label>\n                        <div class=\"col-md\">\n                            <input class=\"form-control\" name=\"pass\" id=\"pass\" type=\"password\" required autocomplete=\"none\" />\n                        </div>\n                    </div>\n                    <?php if ($GLOBALS['enforce_signin_email']) { ?>\n                        <div class=\"form-row mt-3\">\n                            <label class=\"col-md-2 col-form-label\" for=\"passaddon\"><?php echo xlt('E-Mail Address') ?></label>\n                            <div class=\"col-md\">\n                                <input class=\"form-control\" name=\"passaddon\" id=\"passaddon\" type=\"email\" autocomplete=\"none\" />\n                            </div>\n                        </div>\n                    <?php } ?>\n                    <?php if ($GLOBALS['language_menu_login']) { ?>\n                        <?php if (count($result3) != 1) { ?>\n                            <div class=\"form-group mt-1\">\n                                <label class=\"col-form-label-sm\" for=\"selLanguage\"><?php echo xlt('Language'); ?></label>\n                                <select class=\"form-control form-control-sm\" id=\"selLanguage\" name=\"languageChoice\">\n                                    <?php\n                                    echo \"<option selected='selected' value='\" . attr($defaultLangID) . \"'>\" .\n                                        text(xl('Default') . \" - \" . xl($defaultLangName)) . \"</option>\\n\";\n                                    foreach ($result3 as $iter) {\n                                        if ($GLOBALS['language_menu_showall']) {\n                                            if (!$GLOBALS['allow_debug_language'] && $iter['lang_description'] == 'dummy') {\n                                                continue; // skip the dummy language\n                                            }\n                                            echo \"<option value='\" . attr($iter['lang_id']) . \"'>\" .\n                                                text($iter['trans_lang_description']) . \"</option>\\n\";\n                                        } else {\n                                            if (in_array($iter['lang_description'], $GLOBALS['language_menu_show'])) {\n                                                if (!$GLOBALS['allow_debug_language'] && $iter['lang_description'] == 'dummy') {\n                                                    continue; // skip the dummy language\n                                                }\n                                                echo \"<option value='\" . attr($iter['lang_id']) . \"'>\" .\n                                                    text($iter['trans_lang_description']) . \"</option>\\n\";\n                                            }\n                                        }\n                                    }\n                                    ?>\n                                </select>\n                            </div>\n                        <?php }\n                    } ?>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <?php if (!empty($GLOBALS['portal_onsite_two_register']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key'])) { ?>\n                            <button class=\"btn btn-secondary float-left\" onclick=\"location.replace('./account/verify.php?site=<?php echo attr_url($_SESSION['site_id']); ?>')\"><?php echo xlt('Register'); ?></button>\n                        <?php } ?>\n                        <?php if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['w']) && (isset($_GET['u']) || isset($_GET['p']))) { ?>\n                            <button class=\"btn btn-danger ml-2\" onclick=\"location.replace('./index.php?requestNew=1&site=<?php echo attr_url($_SESSION['site_id']); ?>')\"><?php echo xlt('Reset Credentials'); ?></button>\n                        <?php } ?>\n                        <button class=\"btn btn-success float-right\" type=\"submit\"><?php echo xlt('Log In'); ?></button>\n                    </div>\n                </div>\n            </fieldset>\n            <?php if (!(empty($hiddenLanguageField))) {\n                echo $hiddenLanguageField;\n            } ?>\n        </form>\n    </div><!-- div wrapper -->\n    <?php } ?> <!--  logon wrapper -->\n\n    <div id=\"alertStore\" class=\"d-none\">\n        <div class=\"h6 alert alert-warning alert-dismissible fade show my-1 py-1\" role=\"alert\">\n            <button type=\"button\" class=\"close my-1 py-0\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    </div>\n\n    <script>\n        var tab_mode = true;\n        var webroot_url = <?php echo js_escape($GLOBALS['web_root']) ?>;\n\n        function restoreSession() {\n            //dummy functions so the dlgopen function will work in the patient portal\n            return true;\n        }\n\n        var isPortal = 1;\n\n        $(function () {\n            <?php // if something went wrong\n            if (!empty($GLOBALS['portal_two_pass_reset']) && !empty($GLOBALS['google_recaptcha_site_key']) && !empty($GLOBALS['google_recaptcha_secret_key']) && isset($_GET['requestNew'])) {\n                $_SESSION['register'] = true;\n                $_SESSION['authUser'] = 'portal-user';\n                $_SESSION['pid'] = true;\n                ?>\n            $('.datepicker').datetimepicker({\n                <?php $datetimepicker_timepicker = false; ?>\n                <?php $datetimepicker_showseconds = false; ?>\n                <?php $datetimepicker_formatInput = false; ?>\n                <?php require $GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'; ?>\n            });\n            $(document.body).on('hidden.bs.modal', function () {\n                callServer('cleanup');\n            });\n            $(\"#resetPass\").on('submit', function (e) {\n                e.preventDefault();\n                callServer('reset_password');\n                return false;\n            });\n            <?php } ?>\n            <?php if (isset($_GET['w'])) { ?>\n            // mdsupport - Would be good to include some clue about what went wrong!\n            bsAlert(<?php echo xlj('Something went wrong. Please try again.'); ?>);\n            <?php } ?>\n            <?php // if successfully logged out\n            if (isset($_GET['logout'])) { ?>\n            bsAlert(<?php echo xlj('You have been successfully logged out.'); ?>);\n            <?php } ?>\n\n            return false;\n        });\n\n        function callServer(action) {\n            var data = {};\n            if (action === 'reset_password') {\n                data = {\n                    'action': action,\n                    'dob': $(\"#dob\").val(),\n                    'last': $(\"#lname\").val(),\n                    'first': $(\"#fname\").val(),\n                    'email': $(\"#emailInput\").val(),\n                    'g-recaptcha-response': grecaptcha.getResponse(),\n                    'csrf_token_form': $(\"#csrf_token_form\").val()\n                }\n            }\n            if (action === 'cleanup') {\n                data = {\n                    'action': action\n                }\n            }\n            $.ajax({\n                type: 'GET',\n                url: './account/account.php',\n                data: data\n            }).done(function (rtn) {\n                if (action === \"cleanup\") {\n                    window.location.href = \"./index.php?site=\" + <?php echo js_url($_SESSION['site_id']); ?>; // Goto landing page.\n                } else if (action === \"reset_password\") {\n                    if (JSON.parse(rtn) === 1) {\n                        dialog.alert(<?php echo xlj(\"Check your email inbox (and possibly your spam folder) for further instructions to reset your password. If you have not received an email, then recommend contacting the clinic.\") ?>);\n                        return false;\n                    } else {\n                        dialog.alert(<?php echo xlj(\"Something went wrong. Recommend contacting the clinic.\") ?>);\n                        return false;\n                    }\n                }\n            }).fail(function (err) {\n                var message = <?php echo xlj('Something went wrong.') ?>;\n                alert(message);\n            });\n        }\n\n        function bsAlert(msg) {\n            let divAlert = document.getElementById(\"alertStore\").querySelector(\"div.alert\").cloneNode(true);\n            document.querySelector(\"form\").prepend(divAlert);\n            let strongMsg = document.createElement(\"strong\");\n            strongMsg.innerHTML = msg;\n            divAlert.prepend(strongMsg);\n            setTimeout(() => {\n                document.querySelector(\"div.alert\").remove();\n            }, 3000);\n        }\n    </script>\n</body>\n</html>\n"], "filenames": ["interface/login/login.php", "portal/index.php"], "buggy_code_start_loc": [26, 17], "buggy_code_end_loc": [26, 17], "fixing_code_start_loc": [27, 18], "fixing_code_end_loc": [31, 22], "type": "CWE-1021", "message": "Improper Restriction of Rendered UI Layers or Frames in GitHub repository openemr/openemr prior to 7.0.0.1.", "other": {"cve": {"id": "CVE-2022-2734", "sourceIdentifier": "security@huntr.dev", "published": "2022-08-09T13:15:08.193", "lastModified": "2022-08-12T14:13:28.697", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Restriction of Rendered UI Layers or Frames in GitHub repository openemr/openemr prior to 7.0.0.1."}, {"lang": "es", "value": "Una Restricci\u00f3n Inapropiada de Capas o Marcos de Interfaz de Usuario Renderizados en el repositorio de GitHub openemr/openemr versiones anteriores a 7.0.0.1"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1021"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.0.1", "matchCriteriaId": "5BE76D51-2D38-44E8-9ED0-630F49F42168"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/203243467675e85b8b479c778e44ae1aac8bad55", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/d8e4c70c-788b-47e9-8141-a08db751d4e6", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/203243467675e85b8b479c778e44ae1aac8bad55"}}