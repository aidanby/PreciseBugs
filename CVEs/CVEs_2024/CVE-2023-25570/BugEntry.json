{"buggy_code": ["Changes by Version\n==================\nRelease Notes.\n\nApollo 2.1.0\n\n------------------\n* [fix:occur a 400 error request when openapi key's parameter contain \"a[0]\"](https://github.com/apolloconfig/apollo/pull/4424)\n* [Upgrade mysql-connector-java version to fix possible transaction rollback failure issue](https://github.com/apolloconfig/apollo/pull/4425)\n* [Remove database migration tool Flyway](https://github.com/apolloconfig/apollo/pull/4361)\n* [Optimize Spring-Security Firewall Deny Request Response 400](https://github.com/apolloconfig/apollo/pull/4428)\n* [Optimize the UI experience of open platform authorization management](https://github.com/apolloconfig/apollo/pull/4436)\n* [Allow users to associate multiple public namespaces at a time](https://github.com/apolloconfig/apollo/pull/4437)\n* [Move apollo-demo, scripts/docker-quick-start and scripts/apollo-on-kubernetes out of main repository](https://github.com/apolloconfig/apollo/pull/4440)\n* [Add search key when comparing Configuration items](https://github.com/apolloconfig/apollo/pull/4459)\n* [A user-friendly user management page for apollo portal](https://github.com/apolloconfig/apollo/pull/4464)\n* [Optimize performance of '/apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces' interface queries](https://github.com/apolloconfig/apollo/pull/4473)\n* [Add a new API to load items with pagination](https://github.com/apolloconfig/apollo/pull/4468)\n* [fix(#4474):'openjdk:8-jre-alpine' potentially causing wrong number of cpu cores](https://github.com/apolloconfig/apollo/pull/4475)\n* [Switching spring-session serialization mode to json for compatibility with spring-security version updates](https://github.com/apolloconfig/apollo/pull/4484)\n* [fix(#4483):Fixed overwrite JSON type configuration being empty](https://github.com/apolloconfig/apollo/pull/4486)\n* [Allow users to delete AppNamespace](https://github.com/apolloconfig/apollo/pull/4499)\n* [fix the deleted at timestamp issue](https://github.com/apolloconfig/apollo/pull/4493)\n* [add configuration processor for portal developers](https://github.com/apolloconfig/apollo/pull/4521)\n* [Add a potential json value check feature](https://github.com/apolloconfig/apollo/pull/4519)\n* [Add index for table ReleaseHistory](https://github.com/apolloconfig/apollo/pull/4550)\n* [Add basic type check for Item value](https://github.com/apolloconfig/apollo/pull/4542)\n* [add an option to custom oidc userDisplayName](https://github.com/apolloconfig/apollo/pull/4507)\n* [fix openapi item with url illegalKey 400 error](https://github.com/apolloconfig/apollo/pull/4549)\n* [fix the exception occurred when publish/rollback namespaces with grayrelease](https://github.com/apolloconfig/apollo/pull/4564)\n* [fix create namespace with single dot 500 error](https://github.com/apolloconfig/apollo/pull/4568)\n* [Add nodejs client sdk and fix doc](https://github.com/apolloconfig/apollo/pull/4590)\n* [Move apollo-core, apollo-client, apollo-mockserver, apollo-openapi and apollo-client-config-data to apollo-java repo](https://github.com/apolloconfig/apollo/pull/4594)\n* [fix get the openapi interface that contains namespace information for deleted items](https://github.com/apolloconfig/apollo/pull/4596)\n* [A user-friendly config management page for apollo portal](https://github.com/apolloconfig/apollo/pull/4592)\n* [feat: support use database as a registry](https://github.com/apolloconfig/apollo/pull/4595)\n* [fix doc bug](https://github.com/apolloconfig/apollo/pull/4579)\n* [fix Grayscale release Item Value length limit can not be synchronized with its main version](https://github.com/apolloconfig/apollo/pull/4622)\n* [feat: use can change spring.profiles.active's value without rebuild project](https://github.com/apolloconfig/apollo/pull/4616)\n* [refactor: remove app.properties and move some config file's location](https://github.com/apolloconfig/apollo/pull/4637)\n* [Fix the problem of deleting blank items appear at the end](https://github.com/apolloconfig/apollo/pull/4662)\n\n------------------\nAll issues and pull requests are [here](https://github.com/apolloconfig/apollo/milestone/11?closed=1)\n", "/*\n * Copyright 2022 Apollo Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\npackage com.ctrip.framework.apollo.configservice;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Start Eureka Server annotations according to configuration\n *\n * @author Zhiqiang Lin(linzhiqiang0514@163.com)\n */\n@Configuration\n@EnableEurekaServer\n@ConditionalOnProperty(name = \"apollo.eureka.server.enabled\", havingValue = \"true\", matchIfMissing = true)\npublic class ConfigServerEurekaServerConfigure {\n}\n", "/*\n * Copyright 2022 Apollo Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\npackage com.ctrip.framework.apollo.configservice.controller;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@Configuration\n@Order(99)\npublic class TestWebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http.httpBasic();\n    http.csrf().disable();\n    http.authorizeRequests().antMatchers(\"/\").permitAll().and()\n        .authorizeRequests().antMatchers(\"/console/**\").permitAll();\n\n    http.headers().frameOptions().disable();\n  }\n}\n", "This document describes how to compile, package, and deploy Apollo Configuration Center in a distributed deployment manner, so that it can be deployed and run separately in development, test, and production environments.\n\n> If you just need to try Apollo locally, you can refer to [Quick Start](en/deployment/quick-start)\n\n# &nbsp;\n# I. Preparation\n\n## 1.1 Runtime environment\n\n## 1.1.1 OS\n\nThe server side is based on Spring Boot and the startup script theoretically supports all Linux distributions, [CentOS 7](https://www.centos.org/) is recommended.\n\n### 1.1.2 Java\n\n* Apollo server: 1.8+\n* Apollo client: 1.8+\n    * For running in Java 1.7 runtime environment, please use apollo client of 1.x version, such as 1.9.1\n\nOnce configured, this can be checked with the following command.\n```sh\njava -version\n```\n\nSample output.\n```sh\njava version \"1.8.0_74\"\nJava(TM) SE Runtime Environment (build 1.8.0_74-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)\n```\n\n## 1.2 MySQL\n\n* Version requirement: 5.6.5+\n\nApollo's table structure uses multiple default declarations for `timestamp`, so version 5.6.5+ is required.\n\nAfter connecting to MySQL, you can check with the following command.\n```sql\nSHOW VARIABLES WHERE Variable_name = 'version';\n```\n\n| Variable_name | Value  |\n| ------------- | ------ |\n| version       | 5.7.11 |\n\n> Note 1: MySQL versions can be downgraded to 5.5, see [mysql dependency downgrade discussion](https://github.com/apolloconfig/apollo/issues/481) for details.\n\n> Note 2: If you wish to use Oracle, you can refer to [vanpersl](https://github.com/vanpersl)'s [Oracle Adaptation Code](https://github.com/apolloconfig/apollo/compare/v0.8.0...vanpersl:db-oracle) developed on top of Apollo 0.8.0 with `Oracle` version `10.2.0.1.0`.\n\n> Note 3: If you wish to use Postgres, you can refer to the [Pg adaptation code](https://github.com/oaksharks/apollo/compare/ac10768ee2e11c488523ca0e845984f6f71499ac...oaksharks:pg) developed by [oaksharks](https://github.com/oaksharks) on top of Apollo 0.9.1 with `Postgres` version 9.3.20, also see [xiao0yy](https://github.com/xiao0yy) developed on the basis of Apollo 0.10.2 [Pg adaptation code](https://github.com/apolloconfig/apollo/issues/1293) with `Postgres` version 9.5.\n\n## 1.3 Environment\n\nDistributed deployments require a pre-determined environment for the deployment and how it will be deployed.\n\nApollo currently supports the following environments.\n* DEV\n    * Development environment\n* FAT\n    * Test environments, equivalent to alpha environments (functional testing)\n* UAT\n    * Integration environment, equivalent to a beta environment (regression testing)\n* PRO\n    * Production environment\n\n> If you want to add custom environment names, you can refer to [How to add new environments by Portal Console](en/faq/common-issues-in-deployment-and-development-phase?id=_4-how-to-add-environment-by-portal-console) for the specific steps.\n\nYou can refer to [deployment-architecture](en/deployment/deployment-architecture.md)\n\n\n## 1.4 Network Policy\nFor distributed deployment, `apollo-configservice` and `apollo-adminservice` need to register their IPs and ports to Meta Server (apollo-configservice itself).\n\nApollo clients and Portal will get the address (IP+port) of the service from Meta Server, and then access it directly through the service address.\n\nNote that `apollo-configservice` and `apollo-adminservice` are designed based on the intranet trusted network, so for security reasons, **please do not expose `apollo-configservice` and `apollo-adminservice` directly to the public network**.\n\nSo if the actual deployed machine has multiple NICs (e.g. docker), or there are some NICs with IPs that are not accessible by Apollo clients and Portal (e.g. network security restrictions), then we need to do relevant configurations in `apollo-configservice` and `apollo-adminservice` to solve connectivity issues.\n\n### 1.4.1 Ignoring certain NICs\n\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively by passing the -D parameter through the JVM System Property, or by passing the OS Environment Variable, the following example will change the ` docker0` and NICs starting with `veth` are ignored when registering to Eureka.\n\nJVM System Property example.\n\n```properties\n-Dspring.cloud.inetutils.ignoredInterfaces[0]=docker0\n-Dspring.cloud.inetutils.ignoredInterfaces[1]=veth.*\n```\n\nOS Environment Variable example.\n\n```properties\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[0]=docker0\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[1]=veth.*\n```\n\n### 1.4.2 Specifying the IP to be registered\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively, passing in the -D parameter via JVM System Property, or via OS Environment Variable, the following example will specify the IP to be registered as `1.2.3.4`.\n\nJVM System Property example.\n\n```properties\n-Deureka.instance.ip-address=1.2.3.4\n```\n\nOS Environment Variable example.\n\n```properties\nEUREKA_INSTANCE_IP_ADDRESS=1.2.3.4\n```\n\n### 1.4.3 Specify the URL to register\n\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively, passing in the -D parameter via JVM System Property, or via OS Environment Variable, the following example will specify the URL to register URL as `http://1.2.3.4:8080`.\n\nJVM System Property example.\n\n```properties\n-Deureka.instance.homePageUrl=http://1.2.3.4:8080\n-Deureka.instance.preferIpAddress=false\n```\n\nOS Environment Variable Example.\n\n```properties\nEUREKA_INSTANCE_HOME_PAGE_URL=http://1.2.3.4:8080\nEUREKA_INSTANCE_PREFER_IP_ADDRESS=false\n```\n\n### 1.4.4 Specifying apollo-configservice address directly\n\nIf Apollo is deployed on the public cloud and the local development environment cannot connect, but you need to do development testing, the client can upgrade to version 0.11.0 and above, and then configure [Skip Apollo Meta Server service discovery](en/usage/java-sdk-user-guide?id=_1222-skip-apollo-meta-server-service-discovery)\n\n### 1.4.5 Network Configuration\n\nIn some companies (e.g. companies in the financial industry), there are many firewalls and network isolation, and it is necessary to open up the network (so that `ip1` can access a port of `ip2`)\n\n#### 1.4.5.1 Configure the network from the client to the configuration center\n\nFor clients that use the configuration center, `Apollo-Client` needs to access all (or the same room within) Meta Server and Config Service (default are port 8080), please do not open the network from `Client` to `Admin Service`.\n\n```mermaid\nflowchart LR\n   subgraph servers[IP1:8080, IP2:8080, ..., IPn:8080]\n      m[Meta Sever]\n      c[Config Service]\n   end\n   client --> servers\n\n```\n\n\n\nIf an application needs to use openapi, it also needs to access Portal (default is port 8070).\n\n```mermaid\nflowchart LR\n   subgraph servers[IP:8070]\n      Portal\n   end\n   openapi-client --> servers\n```\n\n#### 1.4.5.2 Configure the network within the configuration center\n\nFor the configuration center itself, it is also necessary to ensure network connectivity as each service needs to access each other.\n\n```mermaid\nflowchart LR\n\tsubgraph config-service-servers[All Config Service's IP:8080]\n\t\tm[Meta Server]\n\t\tc[Config Service]\n\tend\n\tsubgraph admin-service-servers[All Admin Service's IP:8090]\n\t\ta[Admin Service]\n\tend\n\t\n\tsubgraph portal-servers[IP:8070]\n\t\tp[Portal]\n\tend\n\t\n\t\n\tconfigdb[(ConfigDB)]\n\tportaldb[(PortalDB)]\n\t\n\ta --> config-service-servers\n\t\n\ta --> configdb\n\tc --> configdb\n\t\n\tp --> config-service-servers\n\tp --> admin-service-servers\n\tp --> portaldb\n```\n\n# II. Deployment Steps\n\nThe overall deployment steps are relatively simple.\n\n> [@lingjiaju](https://github.com/lingjiaju) recorded a series of Apollo quick start videos, if you feel slightly tedious to read the documentation, you may wish to first look at his [video tutorial](https://pan.baidu.com/s/1blv87EOZS77NWT8Amkijkw#list/path=%2F) .\n\n> If you encounter problems during the deployment process, you can refer to [common issues encountered in deployment & development](en/faq/common-issues-in-deployment-and-development-phase), and you can usually find the answers.\n\n## 2.1 Creating the database\n\nApollo server side needs a total of two databases: `ApolloPortalDB` and `ApolloConfigDB`, we prepared the database, table creation and sample data as sql files respectively, and just need to import the database.\n\nNote that ApolloPortalDB only needs to deploy one in the production environment, while ApolloConfigDB needs to deploy one set in each environment, such as fat, uat and pro respectively, to deploy 3 sets of ApolloConfigDB.\n\n> Note: If you have already created Apollo database locally, please pay attention to backup data. The sql file we prepare will empty the Apollo related tables.\n\n### 2.1.1 Creating ApolloPortalDB\n\nYou can choose to create it by manually importing SQL or by automatically importing SQL via [Flyway](https://flywaydb.org/) depending on the actual situation.\n\n#### 2.1.1.1 Manual SQL Import\n\nYou can import [apolloportaldb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloportaldb.sql) through various MySQL clients.\n\nUsing the native MySQL client as an example.\n\n```sql\nsource /your_local_path/scripts/sql/apolloportaldb.sql\n```\n\n#### 2.1.1.2 Created via Flyway import SQL\n\n> Requires version 1.3.0 and above\n\n1. Modify the `flyway-portaldb.properties` in [flyway-portaldb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-portaldb.properties) in `flyway.user`, `flyway.password` and `flyway.url` configurations\n2. Execute `mvn -N -Pportaldb flyway:migrate` in the apollo project root directory\n\n#### 2.1.1.3 Verification\n\nAfter a successful import, you can verify it by executing the following sql statement.\n\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloPortalDB`. `ServerConfig` limit 1;\n```\n\n| Id   | Key                | Value | Comment                        |\n| ---- | ------------------ | ----- | ------------------------------ |\n| 1    | apollo.portal.envs | dev   | list of supported environments |\n\n> Note: ApolloPortalDB only needs to be deployed in a production environment.\n\n### 2.1.2 Creating ApolloConfigDB\n\nYou can choose to create it by manually importing SQL or automatically importing SQL via [Flyway](https://flywaydb.org/) according to the actual situation.\n\n#### 2.1.2.1 Importing SQL Manually\n\nYou can import [apolloconfigdb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloconfigdb.sql) through various MySQL clients.\n\nUsing the native MySQL client as an example.\n\n```sql\nsource /your_local_path/scripts/sql/apolloconfigdb.sql\n```\n\n#### 2.1.2.2 SQL import via Flyway\n\n> Version 1.3.0 and above is required\n\n1. Modify the `flyway.user`, `flyway.password`, and `flyway.password` in [flyway-configdb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-configdb.properties) .\n2. Run `mvn -N -Pconfigdb flyway:migrate` in the apollo project root directory\n\n#### 2.1.2.3 Verification\n\n\n\nAfter a successful import, you can verify it by executing the following sql statement.\n\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloConfigDB`. `ServerConfig` limit 1;\n```\n\n| Id   | Key                | Value                         | Comment            |\n| ---- | ------------------ | ----------------------------- | ------------------ |\n| 1    | eureka.service.url | http://127.0.0.1:8080/eureka/ | Eureka Service Url |\n\n> Note: ApolloConfigDB needs to be deployed in one set per environment, e.g. 3 sets of ApolloConfigDB for fat, uat and pro respectively\n\n#### 2.1.2.4 Importing ApolloConfigDB project data from another environment\n\nIf the Apollo configuration center is newly deployed, please ignore this step.\n\nIf the Apollo Configuration Center is not newly deployed, for example, it has been in use for some time and a number of projects and namespaces have been created in the Apollo Configuration Center at that time, then you need to import the necessary project data from other normally running environments in the ApolloConfigDB in the new environment.\n\nThe following four tables of ApolloConfigDB are mainly involved, and the following data query statements are also attached.\n\n1. App\n   * Import all the apps\n   * e.g.: insert into `New environment of ApolloConfigDB`. `App` select * from `Other Environment's ApolloConfigDB`. `App` where `IsDeleted` = 0;\n2. AppNamespace\n   * Import all AppNamespace\n   * e.g. insert into `New environment's ApolloConfigDB`. `AppNamespace` select * from `other environment's ApolloConfigDB`. `AppNamespace` where `IsDeleted` = 0;\n3. Cluster\n   * Import the default default cluster\n   * e.g. insert into `New environment's ApolloConfigDB`. `Cluster` select * from `ApolloConfigDB of other environment`. `Cluster` where `Name` = 'default' and `IsDeleted` = 0;\n4. Namespace\n   * Import the namespace in the default default cluster\n   * e.g. insert into `ApolloConfigDB` of the new environment. `Namespace` select * from `ApolloConfigDB of other environment`. `Namespace` where `ClusterName` = 'default' and `IsDeleted` = 0;\n\nAlso don't forget to notify users to set the correct configuration information for their projects in the new environment, especially for some public namespace configurations that have a large impact.\n\n> If you are migrating data for a running environment, it is recommended to restart the config service after migration, because the config service has cached data for appnamespace\n\n### 2.1.3 Adjusting server-side configuration\n\nApollo's own configuration is placed inside the database, so you need to make some adjustments for the actual situation, please refer to [III. Server-side configuration description](en/deployment/distributed-deployment-guide?id=iii-server-side-configuration-instructions) for specific parameters.\n\nMost of the configurations can use the default values first, but [apollo.portal.envs](en/deployment/distributed-deployment-guide?id=_311-apolloportalenvs-list-of-supportable-environments) and [eureka.service.url](en/deployment/distributed-deployment-guide?id=_321-eurekaserviceurl-eureka-service-url) please make sure configured correctly before proceeding to the following deployment steps.\n\n## 2.2 Virtual/physical machine deployment\n\n### 2.2.1 Get the installation package\n\nThe installation package can be obtained in two ways.\n\n1. directly downloading the installer\n   * Download the pre-typed installer from the [GitHub Release](https://github.com/apolloconfig/apollo/releases) page\n   * If you don't need to customize Apollo's code, it is recommended to use this way to skip the local packaging process\n2. Build via source code\n   * Download the Source code package from the [GitHub Release](https://github.com/apolloconfig/apollo/releases) page or directly clone [source code](https://github.com/ctripcorp/apollo) then build locally\n   * If you need to do custom development for Apollo, you need to use this method\n\n#### 2.2.1.1 Download the installation package directly\n\n##### 2.2.1.1.1 Get the apollo-configservice, apollo-adminservice, and apollo-portal installers\n\nDownload the latest versions of `apollo-configservice-x.x.x-github.zip`, `apollo- adminservice-x.x.x-github.zip` and `apollo-portal-x.x.x-github.zip` can be downloaded.\n\n##### 2.2.1.1.2 Configuring database connection information\n\nThe Apollo server needs to know how to connect to the database you created earlier. The database connection string information is located in `config/application-github.properties` in the zip file you downloaded in the previous step.\n\n###### 2.2.1.1.2.1 Configuring database connection information for apollo-configservice\n\n1. unzip `apollo-configservice-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer's editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloConfigDB database connection string information, note that there are no spaces after the username and password!\n4. The result of the modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to configure the database parameters of the corresponding environment for different environment config-services\n\n###### 2.2.1.1.2.2 Configuring database connection information for apollo-adminservice\n\n1. unzip `apollo-adminservice-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer's editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloConfigDB database connection string information, note that there are no spaces after the username and password!\n4. The result of the modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to configure the database parameters of the corresponding environment for different environment admin-services\n\n###### 2.2.1.1.2.3 Configuring database connection information for apollo-portal\n\n1. unzip `apollo-portal-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer-specific editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloPortalDB database connection string information, note that there are no spaces after the username and password!\n4. The effect after modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n###### 2.2.1.1.2.4 Configuring apollo-portal's meta service information\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so we need to provide this information in the configuration. By default, the meta service and config service are deployed in the same JVM process, so the address of the meta service is the address of the config service.\n\n> For version 1.6.0 and above, you can configure the Meta Service address through the configuration item in ApolloPortalDB.ServerConfig, see [apollo.portal.meta.servers - List of Meta Service for each environment](en/deployment/distributed-deployment-guide?id=_312-apolloportalmetaservers-list-of-meta-service-for-each-environment)\n\nOpen the `apollo-env.properties` file in the `config` directory of `apollo-portal-x.x.x-github.zip` using a programmer-specific editor (e.g. vim, notepad++, sublime, etc.).\n\nSuppose DEV's apollo-config service is not bound to a domain name at 1.1.1.1:8080, FAT's apollo-config service is bound to the domain name apollo.fat.xxx.com, and UAT's apollo-config service is bound to the domain name apollo.uat.xxx.com, and PRO's apollo-configservice is bound to the domain apollo.xxx.com, then you can modify each environment meta service address as follows, in the format of `${env}.meta=http://${config-service- url:port}`, and if an environment does not need it, you can also directly delete the corresponding configuration item (e.g. lpt.meta): \n\n```properties\ndev.meta=http://1.1.1.1:8080\nfat.meta=http://apollo.fat.xxx.com\nuat.meta=http://apollo.uat.xxx.com\npro.meta=http://apollo.xxx.com\n```\n\nIn addition to configuring the meta service by means of `apollo-env.properties`, apollo also supports specifying the meta service at runtime (with a higher priority than `apollo-env.properties`): 1.\n\n1. via Java System Property `${env}_meta`\n   * Can be specified via Java System Property `${env}_meta`\n   * e.g. `java -Ddev_meta=http://config-service-url -jar xxx.jar`\n   * Can also be specified programmatically, e.g. `System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. through the operating system's System Environment `${ENV}_META`\n   * e.g. `DEV_META=http://config-service-url`\n   * Note that the key is all-caps and separated by `_`.\n\n>Note 1: In order to achieve high availability of meta service, it is recommended to do dynamic load balancing by SLB (Software Load Balancer).\n\n>Note 2: The meta service address can also be filled with IPs. Before version 0.11.0, only one IP was supported. From version 0.11.0 onwards, multiple addresses separated by commas ([PR #1214](https://github.com/apolloconfig/apollo/pull/1214) ), such as `http://1.1.1.1:8080,http://2.2.2.2:8080`, although production environments are still recommended to use domain names (go slb), as machine expansion, shrinkage, etc. may result in changes to the IP list.\n\n#### 2.2.1.2 Building from source code\n\n##### 2.2.1.2.1 Configuring database connection information\n\nThe Apollo server needs to know how to connect to the database you created earlier, so you need to edit [scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh) and modify ApolloPortalDB and ApolloConfigDB related database connection string information.\n\n> Note: The filled-in user needs to have read/write access to ApolloPortalDB and ApolloConfigDB data.\n\n```sh\n#apollo config db info\napollo_config_db_url=jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\napollo_config_db_username=username\napollo_config_db_password=password (if you don't have a password, just leave it blank)\n\n# apollo portal db info\napollo_portal_db_url=jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\napollo_portal_db_username=username\napollo_portal_db_password=password (if you don't have a password, just leave it blank)\n```\n\n> Note 1: As ApolloConfigDB is deployed in each environment, so for different environments config-service and admin-service need to use different database parameters to play different packages, portal only need to play once package can\n\n> Note 2: If you don't want config-service and admin-service to have a package for each environment, you can also pass in the database connection string information at runtime, which can be found in [Issue 869](https://github.com/apolloconfig/apollo/issues/869)\n\n> Note 3: Each environment needs to deploy a separate set of config-service, admin-service and ApolloConfigDB\n\n##### 2.2.1.2.2 Configuring each environment meta service address\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so this information needs to be provided at packaging time.\n\nSuppose DEV's apollo-config service is not bound to a domain name with the address 1.1.1.1:8080, FAT's apollo-config service is bound to the domain name apollo.fat.xxx.com, and UAT's apollo-config service is bound to the domain name apollo.uat.xxx.com, and PRO's apollo-configservice is bound to the domain apollo.xxx.com, then edit [scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh) as follows to modify each environment meta service service address in the format ``${env}_meta=http://${config-service-url:port}``, if an environment does not need it, you can also directly delete the corresponding configuration item: \n\n```sh\ndev_meta=http://1.1.1.1:8080\nfat_meta=http://apollo.fat.xxx.com\nuat_meta=http://apollo.uat.xxx.com\npro_meta=http://apollo.xxx.com\n\nMETA_SERVERS_OPTS=\"-Ddev_meta=$dev_meta -Dfat_meta=$fat_meta -Duat_meta=$uat_meta -Dpro_meta=$pro_meta\"\n```\n\nIn addition to configuring the meta service at packaging time, apollo also supports specifying the meta service at runtime: 1.\n\n1. via Java System Property `${env}_meta`\n   * can be specified via the Java System Property `${env}_meta`\n   * such as `java -Ddev_meta=http://config-service-url -jar xxx.jar`\n   * Can also be specified programmatically, e.g. `System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. through the operating system's System Environment `${ENV}_META`\n   * e.g. `DEV_META=http://config-service-url`\n   * Note that the key is all-caps and separated by `_`.\n\n>Note 1: In order to achieve high availability of meta service, it is recommended to do dynamic load balancing by SLB (Software Load Balancer).\n\n>Note 2: The meta service address can also be filled with IPs. Before version 0.11.0, only one IP was supported. From version 0.11.0 onwards, multiple addresses separated by commas ([PR #1214](https://github.com/apolloconfig/apollo/pull/1214) ), such as `http://1.1.1.1:8080,http://2.2.2.2:8080`, although production environments are still recommended to use domain names (go slb), as machine expansion, shrinkage, etc. may lead to changes in the IP list.\n\n##### 2.2.1.2.3 Perform compilation and packaging\n\nAfter doing the above configuration, you can execute the compilation and packaging.\n\n> Note: The initial compilation will download a lot of dependencies from the central Maven repository, so if the network is not good, it is recommended to use a domestic Maven repository source, such as [AliCloud Maven mirror](http://www.cnblogs.com/geektown/p/5705405.html)\n\n```sh\n./build.sh\n```\n\nThis script will package apollo-configservice, apollo-adminservice, apollo-portal in turn.\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to use different packages for config-service and admin-service for different environments with different database connection information, and only one package for portal\n\n##### 2.2.1.2.4 Get the apollo-config-service installation package\n\nLocated in the `apollo-configservice/target/` directory `apollo-configservice-x.x.x-github.zip`\n\nNote that since ApolloConfigDB is deployed in every environment, the config-service for different environments needs to be deployed separately using different packages with different database parameters\n\n##### 2.2.1.2.5 Get apollo-adminservice installation package\n\nThe `apollo-adminservice-x.x.x-github.zip` located in the `apollo-adminservice/target/` directory\n\nNote that since ApolloConfigDB is deployed in each environment, the admin-service for different environments needs to be deployed separately using different packages with different database parameters\n\n##### 2.2.1.2.6 Get apollo-portal installation package\n\n`apollo-portal-x.x.x-github.zip` located in the `apollo-portal/target/` directory\n\n### 2.2.2 Deploy Apollo server\n\n#### 2.2.2.1 Deploy apollo-configservice\n\nUpload the `apollo-configservice-x.x.x-github.zip` of the corresponding environment to the server, decompress it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in scripts/startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms6144m -Xmx6144m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=4096m -XX:MaxNewSize=4096m -XX:SurvivorRatio=18\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-configservice.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh. In addition, apollo-configservice also assumes the responsibility of meta server. If you want to modify the port, pay attention to the `eureka.service.url` configuration item in the ApolloConfigDB.ServerConfig table and the meta server information used in apollo-portal and apollo-client. For details, see: [2.2.1.1.2.4 Configuring the meta service information of apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information) and [1.2.2 Apollo Meta Server](en/usage/java-sdk-user-guide?id=_122-apollo-meta-server).\n\n> Note 4: If the eureka.service.url of ApolloConfigDB.ServerConfig is only configured with the currently starting machine, the eureka registration failure information will be output in the log during the process of starting apollo-configservice, such as `com.sun.jersey .api.client.ClientHandlerException: java.net.ConnectException: Connection refused`. It should be noted that this is the expected situation, because apollo-configservice needs to register the service with the Meta Server (itself), but because it has not yet woken up during the startup process, it will report this error. The retry action will be performed later, so the registration will be normal after the service is up.\n\n> Note 5: If you read this, I believe that you must be someone who reads the documentation carefully, and you are a little bit closer to success. Keep going, you should be able to complete the distributed deployment of Apollo soon! But do you feel that Apollo's distributed deployment steps are a bit cumbersome? Do you have any advice you would like to share with the author? If the answer is yes, please move to [#1424](https://github.com/apolloconfig/apollo/issues/1424) and look forward to your suggestions!\n\n#### 2.2.2.2 Deploy apollo-adminservice\n\nUpload the `apollo-adminservice-x.x.x-github.zip` of the corresponding environment to the server, decompress it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in scripts/startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms2560m -Xmx2560m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1024m -XX:MaxNewSize=1024m -XX:SurvivorRatio=22\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-adminservice.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh.\n\n#### 2.2.2.3 Deploy apollo-portal\n\nUpload `apollo-portal-x.x.x-github.zip` to the server, unzip it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms4096m -Xmx4096m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=22\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-portal.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh.\n\n### 2.2.3 Replace built-in eureka with another service registry\n\n#### 2.2.3.1 nacos-discovery\n\nEnable external nacos service registry to replace built-in eureka\n\n> Note: need repackage\n\n1. Modify build.sh/build.bat to change the maven build command for config-service and admin-service to\n\n```shell\nmvn clean package -Pgithub,nacos-discovery -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,nacos-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_ password=$apollo_config_db_username password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the nacos server address\n\n```properties\nnacos.discovery.server-addr=127.0.0.1:8848\n# More nacos configurations\nnacos.discovery.access-key=\nnacos.discovery.username=\nnacos.discovery.password=\nnacos.discovery.secret-key=\nnacos.discovery.namespace=\nnacos.discovery.context-path=\n```\n\n#### 2.2.3.2 consul-discovery\n\nEnable external Consul service registry to replace built-in eureka\n\n##### 2.2.3.2.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,consul-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,consul-discovery\n    ```\n\n2. Modify the application-github.properties in the config directory of the apollo-configservice and apollo-adminservice installation packages, respectively, to configure the consul server address\n\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n##### 2.2.3.2.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat to change the maven build command for config-service and admin-service to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,consul-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-configservice and apollo-adminservice installation packages, respectively, to configure the consul server address\n\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n#### 2.2.3.3 zookeeper-discovery\n\nEnable external Zookeeper service registry to replace built-in eureka\n\n##### 2.2.3.3.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,zookeeper-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,zookeeper-discovery\n    ```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the zookeeper server address\n\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n\n3. Zookeeper version description\n\n* Support Zookeeper 3.5.x or higher;\n* If apollo-configservice application starts reporting port occupation, please check the following configuration of Zookeeper;\n\n> Note: Zookeeper 3.5.0 added a built-in [AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n##### 2.2.3.3.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat to change the maven build command for ``config-service`` and ``admin-service`` to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,zookeeper-discovery - Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the zookeeper server address\n\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n\n3. Zookeeper version description\n\n* Support Zookeeper 3.5.x or higher;\n* If apollo-configservice application starts reporting port occupation, please check the following configuration of Zookeeper;\n\n> Note: Zookeeper 3.5.0 added a built-in [AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n#### 2.2.3.4 custom-defined-discovery\n\nEnable custom-defined-discovery to replace built-in eureka\n\n##### 2.2.3.4.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,custom-defined-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,custom-defined-discovery\n    ```\n\n2. There are two ways to configure the access addresses of the custom config-service and admin-service: one is to write two pieces of data in the mysql database ApolloConfigDB and the table ServerConfig.\n\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService access address ');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService access address ');\n```\n\nAnother way to modify application-github.properties in the config directory of the apollo-configservice installation package\n\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n##### 2.2.3.4.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat and change the maven compilation commands of `config-service` and `admin-service` to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,custom-defined-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. There are two ways to configure the access addresses of the custom config-service and admin-service: one is to write two pieces of data in the mysql database ApolloConfigDB and the table ServerConfig.\n\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService access address ');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService access address ');\n```\n\nAnother way to modify application-github.properties in the config directory of the apollo-configservice installation package\n\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n#### 2.2.3.5 database-discovery\n\n> For version 2.1.0 and above\n\nEnable database-discovery to replace built-in eureka\n\nApollo supports the use of internal database table as registry, without relying on third-party registry.\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,database-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,database-discovery\n    ```\n\n2. In multi-cluster deployments, if you want apollo client only read Config Service in the same cluster,\nyou can add a property in `config/application-github.properties` of the Config Service and Admin Service installation package\n```properties\napollo.service.registry.cluster=same name with apollo Cluster\n```\n\n## 2.3 Docker Deployment\n\n### 2.3.1 Version 1.7.0 and above\n\nApollo version 1.7.0 starts uploading Docker images to [Docker Hub](https://hub.docker.com/u/apolloconfig) by default, which can be obtained by following these steps\n\n#### 2.3.1.1 Apollo Config Service\n\n##### 2.3.1.1.1 Get the image\n\n```bash\ndocker pull apolloconfig/apollo-config service:${version}\n```\n\n##### 2.3.1.1.2 Run the image\n\nExample:\n\n```bash\ndocker run -p 8080:8080 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-configservice apolloconfig/apollo-configservice:${version}\n```\n\nParameter description.\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_USERNAME`: The user name of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_PASSWORD`: password of the corresponding environment ApolloConfigDB\n\n#### 2.3.1.2 Apollo Admin Service\n\n##### 2.3.1.2.1 Getting the image\n\n```bash\ndocker pull apolloconfig/apollo-adminservice:${version}\n```\n\n##### 2.3.1.2.2 Running the image\n\nExample:\n\n```bash\ndocker run -p 8090:8090 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-adminservice apolloconfig/apollo-adminservice:${version}\n```\n\nParameter description.\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_USERNAME`: The user name of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_PASSWORD`: password of the corresponding environment ApolloConfigDB\n\n#### 2.3.1.3 Apollo Portal\n\n##### 2.3.1.3.1 Getting the image\n\n```bash\ndocker pull apolloconfig/apollo-portal:${version}\n```\n\n##### 2.3.1.3.2 Running the image\n\nExample:\n\n```bash\ndocker run -p 8070:8070 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloPortalDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -e APOLLO_PORTAL_ENVS=dev,pro \\\n    -e DEV_META=http://fill-in-dev-meta-server:8080 -e PRO_META=http://fill-in-pro-meta-server:8080 \\\n    -d -v /tmp/logs:/opt/logs --name apollo-portal apolloconfig/apollo-portal:${version}\n```\n\nParameter description:\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloPortalDB\n* `SPRING_DATASOURCE_USERNAME`: The username of the corresponding environment ApolloPortalDB\n* `SPRING_DATASOURCE_PASSWORD`: The password of the corresponding environment ApolloPortalDB\n* `APOLLO_PORTAL_ENVS` (optional): corresponds to the [apollo.portal.envs](en/deployment/distributed-deployment-guide?id=_311-apolloportalenvs-list-of-supportable-environments) configuration item in ApolloPortalDB, which can be configured by this environment parameter if it is not configured in the database.\n* `DEV_META/PRO_META`(optional): Configure the Meta Service address of the corresponding environment, named by `${ENV}_META`, it should be noted that if you configure  [apollo.portal.meta.servers](en/deployment/distributed-deployment-guide?id=_312-apolloportalmetaservers-list-of-meta-service-for-each-environment)  configuration, then the configuration in apollo.portal.meta.servers prevails.\n\n#### 2.3.1.4 Building a Docker image from source\n\nIf you have modified the apollo server code and wish to build a Docker image from source, you can refer to the following steps.\n\n1. Build the installation package from source: `./scripts/build.sh` 2.\n2. build the Docker image: `mvn docker:build -pl apollo-configservice,apollo-adminservice,apollo-portal`\n\n### 2.3.2 Versions before 1.7.0\n\nApollo project already comes with Docker file, you can refer to [2.2.1 Get installer](#_221-Get-the-installation-package) to configure the installer and then hit the Docker image with the following file.\n\n1. [apollo-configservice](https://github.com/apolloconfig/apollo/blob/master/apollo-configservice/src/main/docker/Dockerfile)\n2. [apollo-adminservice](https://github.com/apolloconfig/apollo/blob/master/apollo-adminservice/src/main/docker/Dockerfile)\n3. [apollo-portal](https://github.com/apolloconfig/apollo/blob/master/apollo-portal/src/main/docker/Dockerfile)\n\nSee also the [docker-apollo](https://github.com/kulovecc/docker-apollo) project by Apollo user [@kulovecc](https://github.com/kulovecc) and [@idoop](https://github.com/idoop) for the [docker-apollo](https://github.com/idoop/docker-apollo) project.\n\n## 2.4 Kubernetes Deployment\n\n### 2.4.1 Kubernetes-based native service discovery\n\nApollo version 1.7.0 adds a deployment model based on Kubernetes native service discovery, which greatly simplifies the overall deployment as it no longer uses the built-in Eureka, and also provides Helm Charts for easy deployment.\n\n> More design notes can be found in [#3054](https://github.com/apolloconfig/apollo/issues/3054).\n\n#### 2.4.1.1 Environment requirements\n\n- Kubernetes 1.10+\n- Helm 3\n\n#### 2.4.1.2 Adding Apollo Helm Chart repository\n\n```bash\n$ helm repo add apollo https://charts.apolloconfig.com\n$ helm search repo apollo\n```\n\n#### 2.4.1.3 Deploying apollo-configservice and apollo-adminservice\n\n##### 2.4.1.3.1 Installing apollo-configservice and apollo-adminservice\n\nYou need to install apollo-configservice and apollo-adminservice in each environment, so it is recommended to include the environment information in the release name, e.g. `apollo-service-dev`\n\n```bash\n$ helm install apollo-service-dev \\\n    --set configdb.host=1.2.3.4 \\\n    --set configdb.userName=apollo \\\n    --set configdb.password=apollo \\\n    --set configdb.service.enabled=true \\\n    --set configService.replicaCount=1 \\\n    --set adminService.replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-service\n```\n\nThe general deployment recommendation is to configure via values.yaml\n\n```bash\n$ helm install apollo-service-dev -f values.yaml -n your-namespace apollo/apollo-service \n```\n\nAfter installation, you will be prompted for the Meta Server address of the corresponding environment, which needs to be recorded. apollo-portal needs to be installed with.\n\n```bash\nGet meta service url for current release by running these commands:\n  echo http://apollo-service-dev-apollo-configservice:8080\n```\n\n> See [2.4.1.3.3 Configuration Notes](#_24133-Configuration-Notes) for more configuration notes\n\n##### 2.4.1.3.2 Uninstalling apollo-configservice and apollo-adminservice\n\nFor example to uninstall the `apollo-service-dev` deployment.\n\n```bash\n$ helm uninstall -n your-namespace apollo-service-dev\n```\n\n##### 2.4.1.3.3 Configuration Notes\n\nThe following table lists the configurable parameters of the apollo-service-chart and their default values.\n\n| Parameter                                       | Description                                                  | Default                             |\n| ----------------------------------------------- | ------------------------------------------------------------ | ----------------------------------- |\n| `configdb.host`                                 | The host for apollo config db                                | `nil`                               |\n| `configdb.port`                                 | The port for apollo config db                                | `3306`                              |\n| `configdb.dbName`                               | The database name for apollo config db                       | `ApolloConfigDB`                    |\n| `configdb.userName`                             | The user name for apollo config db                           | `nil`                               |\n| `configdb.password`                             | The password for apollo config db                            | `nil`                               |\n| `configdb.connectionStringProperties`           | The connection string properties for apollo config db        | `characterEncoding=utf8`            |\n| `configdb.service.enabled`                      | Whether to create a Kubernetes Service for `configdb.host` or not. Set it to `true` if `configdb.host` is an endpoint outside of the kubernetes cluster | `false`                             |\n| `configdb.service.fullNameOverride`             | Override the service name for apollo config db               | `nil`                               |\n| `configdb.service.port`                         | The port for the service of apollo config db                 | `3306`                              |\n| `configdb.service.type`                         | The service type of apollo config db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP`                         |\n| `configService.fullNameOverride`                | Override the deployment name for apollo-configservice        | `nil`                               |\n| `configService.replicaCount`                    | Replica count of apollo-configservice                        | `2`                                 |\n| `configService.containerPort`                   | Container port of apollo-configservice                       | `8080`                              |\n| `configService.image.repository`                | Image repository of apollo-configservice                     | `apolloconfig/apollo-configservice` |\n| `configService.image.tag`                       | Image tag of apollo-configservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.image.pullPolicy`                | Image pull policy of apollo-configservice                    | `IfNotPresent`                      |\n| `configService.imagePullSecrets`                | Image pull secrets of apollo-configservice                   | `[]`                                |\n| `configService.service.fullNameOverride`        | Override the service name for apollo-configservice           | `nil`                               |\n| `configService.service.port`                    | The port for the service of apollo-configservice             | `8080`                              |\n| `configService.service.targetPort`              | The target port for the service of apollo-configservice      | `8080`                              |\n| `configService.service.type`                    | The service type of apollo-configservice                     | `ClusterIP`                         |\n| `configService.ingress.enabled`                 | Whether to enable the ingress for config-service or not. _(chart version >= 0.2.0)_ | `false`                             |\n| `configService.ingress.annotations`             | The annotations of the ingress for config-service. _(chart version >= 0.2.0)_ | `{}`                                |\n| `configService.ingress.hosts.host`              | The host of the ingress for config-service. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.ingress.hosts.paths`             | The paths of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `configService.ingress.tls`                     | The tls definition of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `configService.liveness.initialDelaySeconds`    | The initial delay seconds of liveness probe                  | `100`                               |\n| `configService.liveness.periodSeconds`          | The period seconds of liveness probe                         | `10`                                |\n| `configService.readiness.initialDelaySeconds`   | The initial delay seconds of readiness probe                 | `30`                                |\n| `configService.readiness.periodSeconds`         | The period seconds of readiness probe                        | `5`                                 |\n| `configService.config.profiles`                 | specify the spring profiles to activate                      | `github,kubernetes`                 |\n| `configService.config.configServiceUrlOverride` | Override `apollo.config-service.url`: config service url to be accessed by apollo-client, e.g. `http://apollo-config-service-dev:8080` | `nil`                               |\n| `configService.config.adminServiceUrlOverride`  | Override `apollo.admin-service.url`: admin service url to be accessed by apollo-portal, e.g. `http://apollo-admin-service-dev:8090` | `nil`                               |\n| `configService.config.contextPath`              | specify the context path, e.g. `/apollo`, then users could access config service via `http://{config_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.env`                             | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                                |\n| `configService.strategy`                        | The deployment strategy of apollo-configservice              | `{}`                                |\n| `configService.resources`                       | The resources definition of apollo-configservice             | `{}`                                |\n| `configService.nodeSelector`                    | The node selector definition of apollo-configservice         | `{}`                                |\n| `configService.tolerations`                     | The tolerations definition of apollo-configservice           | `[]`                                |\n| `configService.affinity`                        | The affinity definition of apollo-configservice              | `{}`                                |\n| `adminService.fullNameOverride`                 | Override the deployment name for apollo-adminservice         | `nil`                               |\n| `adminService.replicaCount`                     | Replica count of apollo-adminservice                         | `2`                                 |\n| `adminService.containerPort`                    | Container port of apollo-adminservice                        | `8090`                              |\n| `adminService.image.repository`                 | Image repository of apollo-adminservice                      | `apolloconfig/apollo-adminservice`  |\n| `adminService.image.tag`                        | Image tag of apollo-adminservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.image.pullPolicy`                 | Image pull policy of apollo-adminservice                     | `IfNotPresent`                      |\n| `adminService.imagePullSecrets`                 | Image pull secrets of apollo-adminservice                    | `[]`                                |\n| `adminService.service.fullNameOverride`         | Override the service name for apollo-adminservice            | `nil`                               |\n| `adminService.service.port`                     | The port for the service of apollo-adminservice              | `8090`                              |\n| `adminService.service.targetPort`               | The target port for the service of apollo-adminservice       | `8090`                              |\n| `adminService.service.type`                     | The service type of apollo-adminservice                      | `ClusterIP`                         |\n| `adminService.ingress.enabled`                  | Whether to enable the ingress for admin-service or not. _(chart version >= 0.2.0)_ | `false`                             |\n| `adminService.ingress.annotations`              | The annotations of the ingress for admin-service. _(chart version >= 0.2.0)_ | `{}`                                |\n| `adminService.ingress.hosts.host`               | The host of the ingress for admin-service. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.ingress.hosts.paths`              | The paths of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `adminService.ingress.tls`                      | The tls definition of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `adminService.liveness.initialDelaySeconds`     | The initial delay seconds of liveness probe                  | `100`                               |\n| `adminService.liveness.periodSeconds`           | The period seconds of liveness probe                         | `10`                                |\n| `adminService.readiness.initialDelaySeconds`    | The initial delay seconds of readiness probe                 | `30`                                |\n| `adminService.readiness.periodSeconds`          | The period seconds of readiness probe                        | `5`                                 |\n| `adminService.config.profiles`                  | specify the spring profiles to activate                      | `github,kubernetes`                 |\n| `adminService.config.contextPath`               | specify the context path, e.g. `/apollo`, then users could access admin service via `http://{admin_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.env`                              | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                                |\n| `adminService.strategy`                         | The deployment strategy of apollo-adminservice               | `{}`                                |\n| `adminService.resources`                        | The resources definition of apollo-adminservice              | `{}`                                |\n| `adminService.nodeSelector`                     | The node selector definition of apollo-adminservice          | `{}`                                |\n| `adminService.tolerations`                      | The tolerations definition of apollo-adminservice            | `[]`                                |\n| `adminService.affinity`                         | The affinity definition of apollo-adminservice               | `{}`                                |\n\n##### 2.4.1.3.4 Configuration example\n\n###### 2.4.1.3.4.1 The host of ConfigDB is the IP outside the k8s cluster\n\n```yaml\nconfigdb:\n  host: 1.2.3.4\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.3.4.2 The host of ConfigDB is the domain name outside the k8s cluster\n\n```yaml\nconfigdb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.3.4.3 The host of ConfigDB is a service in the k8s cluster\n\n```yaml\nconfigdb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.3.4.4 Specify the apollo-configservice address returned by Meta Server\n\nIf apollo-client cannot directly access the service of apollo-configservice (for example, it is not in the same k8s cluster), you can refer to the following example to specify the address returned by Meta Server to apollo-client (for example, it can be accessed through nodeport)\n\n```yaml\nconfigService:\n  config:\n    configServiceUrlOverride: http://1.2.3.4:12345\n```\n\n###### 2.4.1.3.4.5 Specify the apollo-adminservice address returned by Meta Server\n\nIf apollo-portal cannot directly access the service of apollo-adminservice (for example, it is not in the same k8s cluster), you can refer to the following example to specify the address returned by Meta Server to apollo-portal (for example, it can be accessed through nodeport)\n\n```yaml\nconfigService:\n  config:\n    adminServiceUrlOverride: http://1.2.3.4:23456\n```\n\n###### 2.4.1.3.4.6 Expose apollo-configservice service in the form of Ingress configuration custom path `/config`\n\n```yaml\n# use /config as root, should specify configService.config.contextPath as /config\nconfigService:\n  config:\n    contextPath: /config\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /config\n```\n\n###### 2.4.1.3.4.7 Expose apollo-adminservice service in the form of Ingress configuration custom path `/admin`\n\n```yaml\n# use /admin as root, should specify adminService.config.contextPath as /admin\nadminService:\n  config:\n    contextPath: /admin\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /admin\n```\n\n#### 2.4.1.4 Deploy apollo-portal\n\n##### 2.4.1.4.1 Install apollo-portal\n\nSuppose there are dev and pro environments, and the meta server addresses are `http://apollo-service-dev-apollo-configservice:8080` and `http://apollo-service-pro-apollo-configservice:8080` respectively :\n\n```bash\n$ helm install apollo-portal \\\n    --set portaldb.host=1.2.3.4 \\\n    --set portaldb.userName=apollo \\\n    --set portaldb.password=apollo \\\n    --set portaldb.service.enabled=true \\\n    --set config.envs=\"dev\\,pro\" \\\n    --set config.metaServers.dev=http://apollo-service-dev-apollo-configservice:8080 \\\n    --set config.metaServers.pro=http://apollo-service-pro-apollo-configservice:8080 \\\n    --set replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-portal\n```\n\nGeneral deployment recommendations are configured through values.yaml:\n\n```bash\n$ helm install apollo-portal -f values.yaml -n your-namespace apollo/apollo-portal\n```\n\n> For more configuration item descriptions, please refer to [2.4.1.4.3 Configuration item description](\n\n##### 2.4.1.4.2 Uninstalling apollo-portal\n\nFor example, to uninstall an `apollo-portal` deployment.\n\n```bash\n$ helm uninstall -n your-namespace apollo-portal\n```\n\n##### 2.4.1.4.3 Description of configuration items\n\nThe following table lists the configurable parameters of the apollo-portal chart and their default values.\n\n| Parameter                             | Description                                                  | Default                      |\n| ------------------------------------- | ------------------------------------------------------------ | ---------------------------- |\n| `fullNameOverride`                    | Override the deployment name for apollo-portal               | `nil`                        |\n| `replicaCount`                        | Replica count of apollo-portal                               | `2`                          |\n| `containerPort`                       | Container port of apollo-portal                              | `8070`                       |\n| `image.repository`                    | Image repository of apollo-portal                            | `apolloconfig/apollo-portal` |\n| `image.tag`                           | Image tag of apollo-portal, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                        |\n| `image.pullPolicy`                    | Image pull policy of apollo-portal                           | `IfNotPresent`               |\n| `imagePullSecrets`                    | Image pull secrets of apollo-portal                          | `[]`                         |\n| `service.fullNameOverride`            | Override the service name for apollo-portal                  | `nil`                        |\n| `service.port`                        | The port for the service of apollo-portal                    | `8070`                       |\n| `service.targetPort`                  | The target port for the service of apollo-portal             | `8070`                       |\n| `service.type`                        | The service type of apollo-portal                            | `ClusterIP`                  |\n| `service.sessionAffinity`             | The session affinity for the service of apollo-portal        | `ClientIP`                   |\n| `ingress.enabled`                     | Whether to enable the ingress or not                         | `false`                      |\n| `ingress.annotations`                 | The annotations of the ingress                               | `{}`                         |\n| `ingress.hosts.host`                  | The host of the ingress                                      | `nil`                        |\n| `ingress.hosts.paths`                 | The paths of the ingress                                     | `[]`                         |\n| `ingress.tls`                         | The tls definition of the ingress                            | `[]`                         |\n| `liveness.initialDelaySeconds`        | The initial delay seconds of liveness probe                  | `100`                        |\n| `liveness.periodSeconds`              | The period seconds of liveness probe                         | `10`                         |\n| `readiness.initialDelaySeconds`       | The initial delay seconds of readiness probe                 | `30`                         |\n| `readiness.periodSeconds`             | The period seconds of readiness probe                        | `5`                          |\n| `env`                                 | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                         |\n| `strategy`                            | The deployment strategy of apollo-portal                     | `{}`                         |\n| `resources`                           | The resources definition of apollo-portal                    | `{}`                         |\n| `nodeSelector`                        | The node selector definition of apollo-portal                | `{}`                         |\n| `tolerations`                         | The tolerations definition of apollo-portal                  | `[]`                         |\n| `affinity`                            | The affinity definition of apollo-portal                     | `{}`                         |\n| `config.profiles`                     | specify the spring profiles to activate                      | `github,auth`                |\n| `config.envs`                         | specify the env names, e.g. `dev,pro`                        | `nil`                        |\n| `config.contextPath`                  | specify the context path, e.g. `/apollo`, then users could access portal via `http://{portal_address}/apollo` | `nil`                        |\n| `config.metaServers`                  | specify the meta servers, e.g.<br />`dev: http://apollo-configservice-dev:8080`<br />`pro: http://apollo-configservice-pro:8080` | `{}`                         |\n| `config.files`                        | specify the extra config files for apollo-portal, e.g. `application-ldap.yml` | `{}`                         |\n| `portaldb.host`                       | The host for apollo portal db                                | `nil`                        |\n| `portaldb.port`                       | The port for apollo portal db                                | `3306`                       |\n| `portaldb.dbName`                     | The database name for apollo portal db                       | `ApolloPortalDB`             |\n| `portaldb.userName`                   | The user name for apollo portal db                           | `nil`                        |\n| `portaldb.password`                   | The password for apollo portal db                            | `nil`                        |\n| `portaldb.connectionStringProperties` | The connection string properties for apollo portal db        | `characterEncoding=utf8`     |\n| `portaldb.service.enabled`            | Whether to create a Kubernetes Service for `portaldb.host` or not. Set it to `true` if `portaldb.host` is an endpoint outside of the kubernetes cluster | `false`                      |\n| `portaldb.service.fullNameOverride`   | Override the service name for apollo portal db               | `nil`                        |\n| `portaldb.service.port`               | The port for the service of apollo portal db                 | `3306`                       |\n| `portaldb.service.type`               | The service type of apollo portal db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP`                  |\n\n##### 2.4.1.4.4 Configuration example\n\n###### 2.4.1.4.4.1 The host of PortalDB is the IP outside the k8s cluster\n\n```yaml\nportaldb:\n  host: 1.2.3.4\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.4.4.2 The host of PortalDB is the domain name outside the k8s cluster\n\n```yaml\nportaldb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.4.4.3 The host of PortalDB is a service in the k8s cluster\n\n```yaml\nportaldb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.4.4.4 Configure environment information\n\n```yaml\nconfig:\n  envs: dev, pro\n  metaServers:\n    dev: http://apollo-service-dev-apollo-configservice:8080\n    pro: http://apollo-service-pro-apollo-configservice:8080\n```\n\n###### 2.4.1.4.4.5 Expose services as Load Balancer\n\n```yaml\nservice:\n  type: LoadBalancer\n```\n\n###### 2.4.1.4.4.6 Expose services as Ingress\n\n```yaml\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /\n```\n\n###### 2.4.1.4.4.7 Expose services in the form of Ingress configuration custom path `/apollo`\n\n```yaml\n# use /apollo as root, should specify config.contextPath as /apollo\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /apollo\n\nconfig:\n  ...\n  contextPath: /apollo\n  ...\n```\n\n###### 2.4.1.4.4.8 Expose services in the form of Ingress configuration session affinity\n\n```yaml\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/affinity-mode: \"persistent\"\n    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: \"true\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\n  hosts:\n    - host: xxx.somedomain.com # host is required to make session affinity work\n      paths:\n        - /\n```\n\n###### 2.4.1.4.4.9 Enable LDAP support\n\n```yaml\nconfig:\n  ...\n  profiles: github,ldap\n  ...\n  files:\n    application-ldap.yml: |\n      spring:\n        ldap:\n          base: \"dc=example,dc=org\"\n          username: \"cn=admin,dc=example,dc=org\"\n          password: \"password\"\n          searchFilter: \"(uid={0})\"\n          urls:\n          - \"ldap://xxx.somedomain.com:389\"\n      ldap:\n        mapping:\n          objectClass: \"inetOrgPerson\"\n          loginId: \"uid\"\n          userDisplayName: \"cn\"\n          email: \"mail\"\n```\n\n#### 2.4.1.5 Building a Docker image from source\n\nIf you have modified the code of the apollo server and want to build a Docker image from source code, you can refer to the steps in [2.3.1.4 Building a Docker Image from Source Code](#_2314-Building-a-Docker-image-from-source).\n\n### 2.4.2 Based on the built-in Eureka service discovery\n\nThanks to [AiotCEO](https://github.com/AiotCEO) for providing k8s deployment support, please refer to [apollo-on-kubernetes](https://github.com/apolloconfig/apollo/blob/master/scripts/apollo-on-kubernetes/README.md).\n\nThanks to [qct](https://github.com/qct) for Helm Chart deployment support, please refer to [qct/apollo-helm](https://github.com/qct/apollo-helm) for usage instructions.\n\n# III. Server-side configuration instructions\n\n> The following configurations are supported not only in the database, but also through -D parameters, application.properties, etc., and -D parameters, application.properties, etc. have higher priority than the configuration in the database\n\n## 3.1 Adjusting ApolloPortalDB configuration\n\nConfiguration items are uniformly stored in ApolloPortalDB.ServerConfig table, and can also be configured through `Administrator Tools - System Parameters` page, without special instructions, the modification will take effect in real time after one minute.\n\n### 3.1.1 apollo.portal.envs - list of supportable environments\n\nThe default value is dev, if portal needs to manage multiple environments, just separate them by commas (case insensitive), e.g.\n\n```\nDEV,FAT,UAT,PRO\n```\n\nAfter the modification needs to reboot to take effect.\n\n>Note 1: A set of Portal can manage multiple environments, but each environment needs to deploy a separate set of Config Service, Admin Service and ApolloConfigDB, please refer to: [2.1.2 Creating ApolloConfigDB](en/deployment/distributed-deployment-guide?id=_212-creating-apolloconfigdb), [3.2 Adjusting ApolloConfigDB configuration](en/deployment/distributed-deployment-guide?id=_32-adjusting-apolloconfigdb-configuration), [2.2.1.1.2 Configuring database connection information](en/deployment/distributed-deployment-guide?id=_22112-configuring-database-connection-information), and if you are adding an environment to Apollo Configuration Center that has been running for a while, don't forget to refer to [2.1.2.4 Importing ApolloConfigDB project data from another environment](en/deployment/distributed-deployment-guide?id=_2124-importing-apolloconfigdb-project-data-from-another-environment) to do the initialization of the new environment.\n\n>Note 2: Adding the environment to the database only does not work, you also need to add the meta server address corresponding to the new environment for apollo-portal, refer to: [2.2.1.1.2.4 Configuring the meta service information of apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information). portal's meta-service information). apollo-client also needs to be configured accordingly when used in a new environment, refer to: [1.2.2 Apollo Meta Server](en/usage/java-sdk-user-guide?id=_122-apollo-meta-server).\n\n>Note 3: If you wish to add a custom environment name, you can refer to [Portal How to add environment](en/faq/common-issues-in-deployment-and-development-phase?id=_4-how-to-add-environment-by-portal-console) .\n\n>Note 4: Version 1.1.0 added the system information page (`Administrator Tools` -> `System Information`), you can check whether the configuration is correct through this page\n\n### 3.1.2 apollo.portal.meta.servers - List of Meta Service for each environment\n\n> For version 1.6.0 and above\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so we need to provide this information in the configuration. By default, the meta service and config service are deployed in the same JVM process, so the address of the meta service is the address of the config service.\n\nSample example is as follows.\n\n```json\n{\n    \"DEV\": \"http://1.1.1.1:8080\",\n    \"FAT\": \"http://apollo.fat.xxx.com\",\n    \"UAT\": \"http://apollo.uat.xxx.com\",\n    \"PRO\": \"http://apollo.xxx.com\"\n}\n```\n\nA reboot is required to take effect after the modification.\n\n> This configuration has a higher priority than the Meta Service address set in other ways. For more information, please refer to [2.2.1.1.2.4 Configuring meta service information for apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information).\n\n### 3.1.3 Organizations - Department list\n\nAll new apps in the Portal need to select departments, so you need to configure optional department information here, sample example is as follows\n\n```json\n[{\"orgId\": \"TEST1\", \"orgName\": \"Sample Department 1\"},{\"orgId\": \"TEST2\", \"orgName\": \"Sample Department 2\"}]\n```\n\n### 3.1.4 superAdmin - Portal super administrator\n\nThe superAdmin has all privileges and needs to be set up carefully.\n\nIf you don't have access to your company's SSO system, you can use the default value apollo (default user) for now. When you have access to it, change it to the actual account used, with multiple accounts separated by English commas (,).\n\n### 3.1.5 consumer.token.salt - consumer token salt\n\nYou can set a token salt if you will use the open platform API, but ignore it if you don't.\n\n### 3.1.6 wiki.address\n\nThe address of the \"help\" link on the portal, the default is the Apollo github wiki home page, you can set it yourself.\n\n### 3.1.7 admin.createPrivateNamespace.switch\n\nWhether to allow project admins to create private namespace. set to `true` to allow creation, set to `false` to prevent project admins from seeing the option to create private namespace on the page. [Learn more about Namespace](en/design/apollo-core-concept-namespace)\n\n### 3.1.8 emergencyPublish.supported.envs\n\nConfigure a list of environments that allow emergency publishing, with multiple envs separated by commas.\n\nWhen the config service turns on the only one person can modify switch (`namespace.lock.switch`) for one publish, only one person can modify and another publish a configuration publish. In order to avoid not being able to publish the configuration in case of emergency (e.g. out-of-hours, holidays), you can configure this to allow some environments to operate emergency publishing, i.e. the same person can modify and publish the configuration.\n\n### 3.1.9 configView.memberOnly.envs\n\nA list of environments that display configuration information only to project members, with multiple envs separated by commas.\n\nFor environments that are set to display configuration information only to project members, only the administrator of the project or users with edit or publish privileges for that namespace can see the configuration information and publish history for that private namespace. Public namespaces are always visible to all users.\n\n> Supported since version 1.1.0, see [PR 1531](https://github.com/apolloconfig/apollo/pull/1531)\n\n### 3.1.10 role.create-application.enabled - whether to enable control over creating project permissions\n\n> For versions 1.5.0 and above\n\nDefault is false, all users can create projects\n\nIf set to true, only super administrators and accounts with create-application privileges can create projects. Super administrators can assign project creation privileges to users via `Administrator Tools - System Rights Management`.\n\n### 3.1.11 role.manage-app-master.enabled - Enables or disables the project administrator to assign privileges\n\n> For versions 1.5.0 and above\n\nDefault is false, all project administrators can add/remove administrators for the project\n\nIf set to true, only super administrators and accounts with project administrator assignment privileges can add/remove administrators for a specific project, and super administrators can assign project-specific administrator assignment privileges to users via `Administrator Tools - System Rights Management\n\n### 3.1.12 admin-services.access.tokens - set the access token required by apollo-portal to access the apollo-adminservice for each environment\n\n> for version 1.7.1 and above\n\nIf the corresponding environment apollo-adminservice has [access control enabled](en/deployment/distributed-deployment-guide?id=_326-admin-servicesaccesscontrolenabled-configure-whether-apollo-adminservice-has-access-control-enabled), then you need to configure apollo-portal access here access token required for this environment apollo-adminservice, otherwise access will fail .\n\nThe format is json, as follows.\n\n```json\n{\n    \"dev\" : \"098f6bcd4621d373cade4e832627b4f6\",\n    \"pro\" : \"ad0234829205b9033196ba818f7a872b\"\n}\n```\n\n### 3.1.13 searchByItem.switch - whether the console search box supports searching by configuration item\n\nThe default is true, which makes it easy to quickly search for configurations by configuration item\n\nIf set to false, this feature is disabled\n\n## 3.2 Adjusting ApolloConfigDB configuration\n\nConfiguration items are uniformly stored in the ApolloConfigDB.ServerConfig table. It should be noted that each environment's ApolloConfigDB.ServerConfig needs to be configured separately, and the modification takes effect in real time for one minute afterwards.\n\n### 3.2.1 eureka.service.url - Eureka Service Url\n\n> Not applicable to Kubernetes-based native service discovery scenarios\n\nBoth apollo-configservice and apollo-adminservice need to register with the eureka service, so the eureka service address needs to be configured.\nAccording to the current implementation, apollo-configservice itself is an eureka service, so you only need to fill in the address of apollo-configservice, separated by commas if there is more than one (be careful not to forget the /eureka/ suffix).\n\nIt should be noted that each environment only fills in the eureka service address of its own environment, for example, apollo-config service for FAT is 1.1.1.1:8080 and 2.2.2.2:8080, apollo-config service for UAT is 3.3.3.3:8080 and 4.4.4.4: 8080, and the apollo-configigservice for PRO is 5.5.5.5:8080 and 6.6.6.6:8080, then.\n\n1. set eureka.service.url in the ApolloConfigDB.ServerConfig table of the FAT environment to\n\n```\nhttp://1.1.1.1:8080/eureka/,http://2.2.2.2:8080/eureka/\n```\n\n2. set eureka.service.url in ApolloConfigDB.ServerConfig table of UAT environment to\n\n```\nhttp://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/\n```\n\n3. Set eureka.service.url in the ApolloConfigDB.ServerConfig table of the PRO environment to\n\n```\nhttp://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/\n```\n\n>Note 1: Here you need to fill in the address of all the eureka services in this environment, because eureka needs to copy each other's registration information\n\n>Note 2: If you want to register Config Service and Admin Service to the company's unified Eureka, you can refer to [Deployment & Development FAQ - Registering Config Service and Admin Service to a separate Eureka Server](en/faq/common-issues-in-deployment-and-development-phase?id=_8-register-config-service-and-admin-service-to-a-separate-eureka-server) section\n\n>Note 3: In multi-cluster deployments, you often want the config service and admin service to register only with the eureka in the same room. To achieve this, you need to use the cluster field in the `ServerConfig` table, and the config service and admin service will read the `/opt/settings/server.properties` (Mac/Linux) or `C:\\opt\\settings\\server.properties` (Windows), and if the idc has a corresponding eureka.service.url configuration, then will only register with eureka for that server room. For example, if the config service and admin service are deployed to two IDCs, `SHAOY` and `SHAJQ`, then in order to register the services in these two server rooms only with that server room, you can add two new records in the `ServerConfig` table and fill in the `SHAOY` and `SHAJQ` server room eureka addresses respectively. If there are config service and admin service that are not deployed in `SHAOY` and `SHAJQ`, this default configuration will be used.\n\n| Key                | Cluster | Value                       | Comment                      |\n| ------------------ | ------- | --------------------------- | ---------------------------- |\n| eureka.service.url | default | http://1.1.1.1:8080/eureka/ | Default Eureka Service Url   |\n| eureka.service.url | SHAOY   | http://2.2.2.2:8080/eureka/ | Eureka Service Url for SHAOY |\n| eureka.service.url | SHAJQ   | http://3.3.3.3:8080/eureka/ | Eureka Service Url for SHAJQ |\n\n### 3.2.2 namespace.lock.switch - Only one person can modify the switch at a time for release review\n\nThis is a functional switch, if configured to true, then only one person can modify and another publish at a time for a configuration release.\n\n> This option is recommended for production environments\n\n### 3.2.3 `config-service.cache.enabled` - whether to enable configuration caching\n\nThis is a function switch, if configured to true, config service will cache the loaded configuration information to speed up the performance of subsequent configuration fetches.\n\nThe default is false. Please evaluate the total configuration size and adjust the config service memory configuration before turning it on.\n\n> Ensure that the app.id of the configuration in the application is in the correct case when caching is enabled, otherwise it will not fetch the correct configuration\n\n### 3.2.4 `item.key.length.limit`- Maximum length limit for configuration item key\n\nThe default configuration is 128.\n\n### 3.2.5 `item.value.length.limit` - Maximum length limit for configuration item value\n\nThe default configuration is 20000.\n\n#### 3.2.5.1 `namespace.value.length.limit.override` - Maximum length limit for namespace's configuration item value\n\nThis configuration is used to override the `item.value.length.limit` configuration to achieve fine-grained control of the namespace's value maximum length limit, the configured value is a json format, the key of the json is the id value of the namespace in the database, the format is as follows.\n\n```\nnamespace.value.length.limit.override = {1:200,3:20}\n```\n\nThe above configuration specifies a maximum length limit of 200 for the value of namespace with id=1 and 20 for the value of namespace with id=3 in the ApolloConfigDB.Namespace table\n\n### 3.2.6 `admin-services.access.control.enabled` - Configure whether apollo-adminservice has access control enabled\n\n> For versions 1.7.1 and above\n\nDefault is false, if configured to true, then apollo-portal needs to be [properly configured](en/deployment/distributed-deployment-guide?id=_3112-admin-servicesaccesstokens-set-the-access-token-required-by-apollo-portal-to-access-the-apollo-adminservice-for-each-environment) to access the access token of that environment, otherwise access will be denied\n\n### 3.2.7 `admin-services.access.tokens` - Configure the list of access tokens allowed to access apollo-adminservice\n\n> For versions 1.7.1 and above\n\nIf this configuration item is empty, then access control will not take effect. If multiple tokens are allowed, the tokens are separated by commas\n\nExample.\n\n```properties\nadmin-services.access.tokens=098f6bcd4621d373cade4e832627b4f6\nadmin-services.access.tokens=098f6bcd4621d373cade4e832627b4f6,ad0234829205b9033196ba818f7a872b\n```\n\n### 3.2.8 `apollo.access-key.auth-time-diff-tolerance` - Configure server-side AccessKey checksum tolerance for time deviation\n\n> For version 2.0.0 and above\n\nThe default value is 60, in seconds. Since the key authentication needs to verify the time, there may be time deviation between the time of the client and the time of the server, if the deviation is too large, the authentication will fail, this configuration can configure the tolerated time deviation size, the default is 60 seconds.\n", "# &nbsp;\n\n# Glossary of Terms\n\n* Common application\n  * Common applications refer to programs that run independently, such as\n    * Web applications\n    * Programs with main functions\n* Public components\n  * Public components refer to distributed libraries, client programs that do not run on their own, such as\n    * Java jar packages\n    * .Net dll file\n\n# I. General Application Access Guide\n\n## 1.1 Creating a project\n\nTo use Apollo, you need to create a project as the first step.\n\n1. Open apollo-portal homepage\n2. Click \"Create a project\".\n\n![create-app-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app-entry.png)\n\n3. Enter the project information\n   * Department: Select the department where the application is located\n   * Application AppId: the unique id used to identify the application, the format is string, it needs to correspond to the app.id configured in the client app.properties\n   * Application Name: the name of the application, used only for interface display\n   * Application Manager: The person who selects it will be the administrator of the project by default, with permissions to manage project permissions, create clusters, create Namespace, etc.\n\n![create-app](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app.png)\n\n4. Click Submit\n\n   After successful creation, it will automatically jump to the project home page\n\n![app-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-created.png)\n\n## 1.2 Project permission assignment\n\n### 1.2.1 Project administrator privileges\n\nThe project administrator has the following privileges.\n\n1. Can manage the permissions assignment of the project\n2. Create clusters\n3. Can create Namespace\n\nIf you need someone else to be the project administrator, you can follow the steps below.\n\n1. Click \"Manage Projects\" on the left side of the page\n   * ![app-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-entry.png)\n\n2. Search for the member you want to add and click Add\n   * ![app-permission-search-user](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-search-user.png)\n   * ![app-permission-user-added](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-user-added.png)\n\n### 1.2.2 Configuring editing and publishing permissions\n\nConfiguration permissions are divided into edit and publish.\n\n* Edit permission allows users to create, modify, and delete configurations on the Apollo interface\n  * Configuration modification only changes on Apollo interface and does not affect the actual configuration used by the application\n* Publish permissions allow users to publish and roll back configurations in the Apollo interface\n  * Configurations are only actually used by the application after they have been published and rolled back\n  * Apollo notifies the application in real time after the user has performed a publish or rollback action and the latest configuration takes effect\n\nAfter the project is created, there are no editing and publishing permissions assigned to the configuration by default, and the project administrator needs to authorize it.\n\n1. Click the authorization button of the namespace application\n   * ![namespace-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-entry.png)\n\n2. Assign the modify permission\n   * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n3. Assign publish privileges\n   * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n## 1.3 Adding configuration items\n\nTo edit the configuration, you need to have the edit permission of this Namespace. If you find that there is no Add Configuration button, you can find the project administrator to authorize it.\n\n### 1.3.1 Adding configuration via form mode\n\n1. Click Add Configuration\n   * ![create-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-entry.png)\n\n2. Enter a configuration item\n   * ![create-item-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-detail.png)\n\n3. Click Submit\n   * ![item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/item-created.png)\n\n### 1.3.2 Editing via text mode\n\nApollo not only supports table mode to add and modify configurations one by one, but also provides text mode to add and modify them in bulk.\nThis is especially useful for migrating from an existing properties file.\n\n1. Switch to text editing mode\n   ![text-mode-config-overview](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-overview.png)\n\n2. Click the Modify Configuration button on the right\n   ![text-mode-config-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-entry.png)\n\n3. Enter the configuration entries and click on Submit Changes\n   ![text-mode-config-submit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-submit.png)\n\n## 1.4 Publishing the configuration\n\nThe configuration will only really be used by the application after it has been published, so after editing the configuration, you need to publish it.\n\nIf you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-entry.png)\n\n2. Fill in the information about the publish and click Publish\n   ![publish-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-detail.png)\n\n## 1.5 Application reads the configuration\n\nAfter the configuration is successfully published, the application can read the configuration through the Apollo client.\n\nApollo currently provides a Java client. For more information, please click [Java Client Usage Documentation](en/usage/java-sdk-user-guide).\n\nIf the application uses other languages, you can also get the configuration by directly accessing the Http interface, for details, please refer to [other-language-client-access-guide](en/usage/other-language-client-user-guide)\n\n## 1.6 Rollback published configuration\n\nIf you find any problem with the released configuration, you can roll back the configuration read by the client to the previous release by clicking the \"Rollback\" button.\n\nThe rollback mechanism here is similar to the release system, where the rollback operation in the release system rolls back the installed packages deployed to the machine to the previous deployed version, but the code in the code repository is not rolled back, so that development can re-release the code after fixing it.\n\nThe rollback in Apollo is a similar mechanism. Clicking rollback rolls back the configuration published to the client to the previous published version, which means that the configuration read by the client will be restored to the previous version, but the configuration in the edited state on the page will not be rolled back, so that the developer can re-publish after fixing the configuration.\n\n# II. Public component access guide\n\n## 2.1 Difference between public components and common applications\n\nPublic components are those client code that are published for use by other applications, such as the CAT client, Hermes Producer client, etc.\n\nAlthough such components are developed and maintained by other teams, the runtime is within the actual business application, so they can essentially be considered part of the application.\n\nUsually, the configuration used by these components is maintained by the original development team, but since the runtime and environment of the actual application vary, we also allow the application to override some of the configuration of the public components when they are actually used.\n\n## 2.2 Steps to access public components\n\nThe access steps for public components are almost identical to those for normal applications, the only difference being that public components need to create their own unique Namespace.\n\nSo, first perform the following steps in the common application access document, and then follow the steps later in this section.\n\n1. [Create Project](en/usage/apollo-user-guide?id=_11-creating-a-project)\n2. [Project administrator privileges](en/usage/apollo-user-guide?id=_121-project-administrator-privileges)\n\n### 2.2.1 Creating Namespace\n\nIf you find no Add Namespace button, you can find the project administrator to authorize it.\n\n1. Click Add Namespace on the left side of the page\n   * ![create-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace.png)\n\n2. Click \"Create New Namespace\".\n   * ![create-namespace-select-type](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-select-type.png)\n\n3. Enter the namespace name for the public component. Note that the namespace name is globally unique.\n   * Apollo will add the department name at the top by default\n   * ![create-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-detail.png)\n\n4. After clicking Submit, the page will automatically jump to the Associated Namespace page\n   * First, select all the environments and clusters that need to have this Namespace, it is generally recommended to select all of them.\n   * Second, select the namespace you just created.\n   * Finally, click Submit\n   Finally, click Submit * ![link-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-namespace-detail.png)\n\n5. After successful linking, the page will automatically jump to the Namespace permission management page\n\n   1. Assign the permission to modify the namespace \n      - \u200b\t![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n   2. Assign permission to publish\n      - \u200b\t![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n6. Click \"Back\" to return to the project page\n\n### 2.2.2 Adding configuration items\n\nTo edit the configuration, you need to have the edit permission of this Namespace. If you find that there is no Add Configuration button, you can find the project administrator to authorize it.\n\n#### 2.2.2.1 Adding configuration via form mode\n\n1. Click Add Configuration\n   ![public-namespace-edit-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item-entry.png)\n\n2. Enter the configuration items\n   ![public-namespace-edit-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item.png)\n\n3. Click Submit\n   ![public-namespace-item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-item-created.png)\n\n#### 2.2.2.2 Edit by text mode\n\nThis part is the same as normal application, please refer to [1.3.2 Editing via text mode](en/usage/apollo-user-guide?id=_132-editing-via-text-mode) for the detailed steps.\n\n### 2.2.3 Publish configuration\n\nThe configuration will only really be used by the application after it has been published, so after editing the configuration, it needs to be published.\n\nIf you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![public-namespace-publish-items-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items-entry.png)\n\n2. Fill in the information about publishing and click Publish\n   ![public-namespace-publish-items](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items.png)\n\n### 2.2.4 Application reading configuration\n\nOnce the configuration is successfully published, the application can read the configuration through the Apollo client.\n\nApollo currently provides a Java client. For more information, click [Java Client Usage Documentation](en/usage/java-sdk-user-guide).\n\nIf the application uses other languages, you can also get the configuration by directly accessing the Http interface, for details, please refer to [other-language-client-access-guide](en/usage/other-language-client-user-guide)\n\nFor reading the configuration of public components, you can refer to the \"Getting the Configuration of Public Namespace\" section in the above document.\n\n## 2.3 Application Override Public Component Configuration Steps\n\nAs mentioned earlier, the configuration of public components is usually maintained by the original development team, but since the actual application runtime and environment vary, we also allow applications to override some of the configuration of public components when they are actually used.\n\nHere is how the application can override the configuration of the public component. For simplicity, assume that the apollo-portal application uses the hermes producer client and wants to adjust the batch send size of hermes.\n\n### 2.3.1 Associating the public component Namespace\n\n1. Go to the home page of the application project that uses the public component and click the Add Namespace button on the left\n   * So, in this example, we need to go to the home page of apollo-portal.\n   * (Adding Namespace requires project administrator privileges, if you find no Add Namespace button, you can find the project administrator to authorize it)\n   * ![link-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace-entry.png)\n\n2. Find the namespace of the hermes producer and select which environments and clusters to associate with it\n   ![link-public-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace.png)\n\n3. After successful linking, the page will automatically jump to the Namespace permission management page\n   1. Assign modify permission\n      ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n   2. Assign permission to publish\n      ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n4. Click \"Back\" to return to the project page\n\n### 2.3.2 Overriding common component configuration\n\n1. Click Add Configuration\n   ![override-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-entry.png)\n\n2. Enter the configuration items to be overridden\n   ![override-public-namespace-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item.png)\n\n3. Click Submit\n   ![override-public-namespace-item-done](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-done.png)\n\n### 2.3.3 Publish configuration\n\nThe configuration will only really be used by the application after it is published, so after editing the configuration, it needs to be published.\n\nTo publish the configuration, you need to have the publish permission of this Namespace, if you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![override-public-namespace-item-publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish-entry.png)\n\n2. Fill in the information about the publication and click Publish\n   ![override-public-namespace-item-publish](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish.png)\n\n3. After the configuration is successfully published, the value of sender.batchSize read by the hermes producer client when running inside the apollo-portal application is 1000.\n\n# III. Cluster independent configuration instructions\n\nIn some special cases, the application has the need to do different configurations for different clusters, such as the application deployed in server room A connects to a different es server address than the application deployed in server room B connects to a different es server address.\n\nIn this case, it can be solved by creating different clusters in Apollo.\n\n## 3.1 Creating a cluster\n\nIf you find that there is no Add Cluster button, you can ask the project administrator for authorization.\n\n1. Click the \"Add Cluster\" button on the left side of the page\n   * ![create-cluster](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster.png)\n\n2. Enter the cluster name, select the environment and submit\n   * ![create-cluster-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster-detail.png)\n\n3. Switch to the corresponding cluster, modify the configuration and release it\n   * ![config-in-cluster-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/cluster-created.png)\n\n4. With the above configuration, the application deployed in the SHAJQ server room will read the configuration under the SHAJQ cluster\n\n5. If the application is also deployed in other server rooms, then with the above configuration, the configuration under the default cluster will be read.\n\n# IV. Using the same configuration for multiple AppId\n\nIn some cases, although the application itself is not a public component, it still needs to share the same configuration among multiple AppId, such as different projects of the same product: XX-Web, XX-Service, XX-Job and so on.\n\nIn this case, if you want to implement multiple AppId to use the same configuration, the basic concept is the same as the configuration of public components.\n\nSpecifically, we create a namespace under one of the AppId, write the public configuration information, and then read the configuration of the namespace in each project.\n\nIf an AppId needs to override the public configuration information, then associate a public namespace under that AppId and write the configuration that needs to be overridden.\n\nThe specific steps can be referred to [Public Component Access Guide](en/usage/apollo-user-guide?id=ii-public-component-access-guide).\n\n# V. Grayscale publishing usage guide\n\nWith the grayscale release function, you can achieve.\n\n1. For some configurations that have a relatively large impact on the program, you can first take effect in one or more instances, and observe no problem for a period of time before releasing the configuration in full.\n2. For some configuration parameters that need to be tuned, A/B testing can be achieved through the grayscale release function. You can apply different configurations on different machines and keep tuning and evaluating for a period of time to find out the better configuration before releasing the configuration in full.\n\nThe following is a practical example to describe how to use the grayscale release function.\n\n## 5.1 Introduction to the scenario\n\nThe 100004458 (apollo-demo) project has two clients.\n\n1. 10.32.21.19\n2. 10.32.21.22\n\n![initial-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-instance-list.png)\n\n**Grayscale targets:**\n\n* Currently there is a configuration timeout=2000, we want to grayscale release timeout=3000 for 10.32.21.22 and still timeout=2000 for 10.32.21.19.\n\n![initial-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-config.png)\n\n## 5.2 Creating greyscale\n\nFirst click the `create grayscale` button in the top right corner of the application namespace.\n\n![create-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/create-gray-release.png)\n\nAfter clicking OK, the grayscale version is created successfully and the page will automatically switch to the `grayscale version` tab.\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-gray-release-tab.png)\n\n## 5.3 Grayscale configuration\n\nClick on the `Configure main version`, the `Gray this configuration` button on the far right of the timeout configuration\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/edit-gray-release-config.png)\n\nFill in the popup box with the value to be grayed out: 3000 and click Submit.\n\n![submit-gray-release-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/submit-gray-release-config.png)\n\n![gray-release-config-submitted](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-config-submitted.png)\n\n## 5.4 Configuring grayscale rules\n\nSwitch to the `Gray Rule` Tab and click the `Add Rule` button\n\n![new-gray-release-rule](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/new-gray-release-rule.png)\n\nIn the popup box `Grayed IP` dropdown box will show the list of machines currently using the configuration by default, select the IP we want to gray.\n\n![select-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/select-gray-release-ip.png )\n\n![gray-release-ip-selected](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-ip-selected.png)\n\nIn addition to the IP dimension, from version 2.0.0 onwards there is also support for identifying the list of instances in grayscale by label, which is suitable for scenarios where the IP is not fixed such as `Kubernetes`.\n\nManually enter the label you want to set, and click the Add button when you're done.\n\n![manual-input-gray-release-label](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label.png)\n\n![manual-input-gray-release-label-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label2.png)\n\n![gray-release-rule-saved](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-rule-saved.png)\n\nAfter the above rules are configured, the grayed configuration will take effect for instances with AppId `100004458`, IP `10.32.21.22` or `Label` marked as `myLabel` or `appLabel`.\n\n> For more information on how to label `Label`, you can refer to the configuration instructions in [ApolloLabel](en/usage/java-sdk-user-guide?id=_1247-apollo-label).\n\nIf the required IP is not found in the drop-down box, it means that the machine has not yet taken the configuration from Apollo, you can enter it by clicking Enter IP manually, and click the Add button after entering the IP.\n\n![manual-input-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip.png)\n\n![manual-input-gray-release-ip-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip-2.png)\n\n>Note: For the grayscale rule of public Namespace, you need to specify the appId to be grayscale first, then select the IP and Label.\n\n## 5.5 Grayscale Release\n\nThe configuration rules are in effect, but the grayscale configuration has not been published yet. Switch to the `Configuration` Tab.\n\nCheck the grayscale configuration section again, and if there are no problems, click `Grayscale Publish`.\n\n![prepare-to-do-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-do-gray-release.png)\n\nIn the popup box, you can see that the value of the master version is 2000 and the value of the gray version to be released is 3000. fill in the other information and click on release.\n\n![gray-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-confirm-dialog.png)\n\nAfter the release, switch to the `gray instance list` Tab and you can see that 10.32.21.22 has used the values of the gray release.\n\n![gray-release-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-instance-list.png)\n\nSwitch to the `instance list` of the `master release` and you will see that only 10.32.21.19 of the master configuration is in use.\n\n![master-branch-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list.png)\n\nYou can continue with configuration changes or rule changes later. Configuration changes need to click Gray Release before they take effect, and rule changes take effect in real time after the rule is clicked to complete.\n\n## 5.6 Full Release\n\nIf the grayscale configuration is tested down ideally and meets expectations, then you can operate `full release`.\n\nThe effect of a full release is that\n\n1. The grayscale configuration will be merged back to the main version, in this case, the timeout of the main version will be updated to 3000\n2. The configuration of the main version will be automatically published once\n3. In the full release page, you can choose whether to keep the current grayscale version, the default is not to keep.\n\n![prepare-to-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-full-release.png)\n\n![full-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog.png)\n\n![full-release-confirm-dialog-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog-2.png) \n\nI chose not to keep the grayscale version, so the effect after the release is that the configuration of the master version is updated and the grayscale version is deleted. Clicking on the instance list of the main version, you can see that 10.32.21.22 and 10.32.21.19 both use the latest configuration of the main version.\n\n![master-branch-instance-list-after-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list-after-full-release.png)\n\n## 5.7 Giving up grayscale\n\nIf the grayscale version is not ideal or not needed anymore, you can click `Drop Grayscale`.\n\n![abandon-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/abandon-gray-release.png)\n\n## 5.8 Release History\n\nClick the `release history` button of the main release to see the release history of the current namespace's main release as well as the grayscale version.\n\n![view-release-history](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history.png)\n\n![view-release-history-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history-detail.png)\n\n\n\n# VI\u3001Other Configurations\n\n## 6.1 Configure view permissions\n\nStarting from version 1.1.0, apollo-portal has added support for view permissions, which allows you to configure an environment to allow only project members to view the private Namespace configuration.\n\nThe project members here are :\n\n1. The project's administrator\n2. Have the permission to modify or publish the private Namespace in that environment\n\nThe configuration is very simple. After logging in with your super administrator account, go to the `Administrator Tools - System Parameters` page and add or modify the `configView.memberOnly.envs` configuration item.\n\n![show-all-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/show-all-config.png)\n\n![configView.memberOnly.envs](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/configure-view-permissions.png)\n\n## 6.2 Configuring access keys\n\nApollo has added an access key mechanism since version 1.6.0, so that only authenticated clients can access sensitive configurations. If the application has access keys enabled, the client needs to configure the keys, otherwise the configuration cannot be accessed.\n\n1. The project administrator opens the Manage Keys page\n   ![Admin Key Portal](https://user-images.githubusercontent.com/837658/94990081-f4d3cd80-05ab-11eb-9470-fed5ec6de92e.png)\n\n2. Generate an access key for each environment of the project, note that it is disabled by default, and it is recommended to turn it on after the clients are all configured\n   ![Key Configuration Page](https://user-images.githubusercontent.com/837658/94990150-788dba00-05ac-11eb-9a12-727fdb872e42.png)\n\n3. Client-side [configure access key](en/usage/java-sdk-user-guide?id=_1244-configuring-access-keys) .\n\n# VII. Best practices\n\n## 7.1 Security Related\n\nAs a basic service, the configuration center stores very important configuration information of the company, so security factors need to be focused on, some considerations are listed below for your reference, and you are also welcome to share your own practice cases.\n\n### 7.1.1 Authentication\n\nIt is recommended to access the company's unified authentication system, such as SSO, LDAP, etc. The access method can be found in [Portal to implement user login function](en/development/portal-how-to-implement-user-login-function)\n\n> If you use Spring Security simple authentication provided by Apollo, you must remember to change the password of super administrator apollo\n\n### 7.1.2 Authorization\n\nApollo supports fine-grained permissions control, so please make sure to control the permissions according to the actual situation: 1.\n\n1. [Project administrator privileges](en/usage/apollo-user-guide?id=_121-project-administrator-privileges)\n   * Apollo allows all logged-in users to create projects by default. If you only allow some users to create projects, you can turn on [Create project permission control](en/deployment/distributed-deployment-guide?id=_3110-rolecreate-applicationenabled-whether-to-enable-control-over-creating-project-permissions)\n2. [Configure editing and publishing privileges](en/usage/apollo-user-guide?id=_122-configuring-editing-and-publishing-permissions)\n   * Configuration editing and publishing privileges support configuration by environment, for example, the development environment developers can complete the process of configuration editing and publishing by themselves, but the production environment publishing privileges to the test or operation and maintenance personnel\n   * It is recommended to turn on [release audit](en/deployment/distributed-deployment-guide?id=_322-namespacelockswitch-only-one-person-can-modify-the-switch-at-a-time-for-release-review) at the same time for production environment, so as to control that only one person can modify a configuration release and another person can release it. This ensures that configuration changes are adequately checked.\n3. [Configuration view permissions](en/usage/apollo-user-guide?id=_61-configure-view-permissions)\n   * You can specify that only project members of an environment are allowed to view the configuration of a private Namespace, thus avoiding sensitive configuration leaks, such as production environments\n\n### 7.1.3 System access\n\nIn addition to user permissions, system access also needs to be considered in terms of.\n\n1. `apollo-configservice` and `apollo-adminservice` are designed based on the intranet trusted network, so for security reasons, `apollo-configservice` and `apollo-adminservice` are prohibited from being exposed directly to the public network\n2. For sensitive configurations, consider enabling [access secret key](en/usage/apollo-user-guide?id=_62-configuring-access-keys) so that only authenticated clients can access sensitive configurations\n3. 1.7.1 and above can consider enabling [access control](en/deployment/distributed-deployment-guide?id=_326-admin-servicesaccesscontrolenabled-configure-whether-apollo-adminservice-has-access-control-enabled) for `apollo-adminservice`, so that only [controlled](en/deployment/distributed-deployment-guide?id=_3112-admin-servicesaccesstokens-set-the-access-token-required-by-apollo-portal-to-access-the-apollo-adminservice-for-each-environment) `apollo-portal` can access the corresponding interface to enhance security\n", "\u672c\u6587\u6863\u4ecb\u7ecd\u4e86\u5982\u4f55\u6309\u7167\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u65b9\u5f0f\u7f16\u8bd1\u3001\u6253\u5305\u3001\u90e8\u7f72Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u7b49\u73af\u5883\u5206\u522b\u90e8\u7f72\u8fd0\u884c\u3002\n\n> \u5982\u679c\u53ea\u662f\u9700\u8981\u5728\u672c\u5730\u5feb\u901f\u90e8\u7f72\u8bd5\u7528Apollo\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[Quick Start](zh/deployment/quick-start)\n\n# &nbsp;\n# \u4e00\u3001\u51c6\u5907\u5de5\u4f5c\n\n## 1.1 \u8fd0\u884c\u65f6\u73af\u5883\n\n### 1.1.1 OS\n\n\u670d\u52a1\u7aef\u57fa\u4e8eSpring Boot\uff0c\u542f\u52a8\u811a\u672c\u7406\u8bba\u4e0a\u652f\u6301\u6240\u6709Linux\u53d1\u884c\u7248\uff0c\u5efa\u8bae[CentOS 7](https://www.centos.org/)\u3002\n\n### 1.1.2 Java\n\n* Apollo\u670d\u52a1\u7aef\uff1a1.8+\n* Apollo\u5ba2\u6237\u7aef\uff1a1.8+\n    * \u5982\u9700\u8fd0\u884c\u5728 Java 1.7 \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u8bf7\u4f7f\u7528 1.x \u7248\u672c\u7684 apollo \u5ba2\u6237\u7aef\uff0c\u5982 1.9.1\n\n\u5728\u914d\u7f6e\u597d\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a\n```sh\njava -version\n```\n\n\u6837\u4f8b\u8f93\u51fa\uff1a\n```sh\njava version \"1.8.0_74\"\nJava(TM) SE Runtime Environment (build 1.8.0_74-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)\n```\n\n## 1.2 MySQL\n\n* \u7248\u672c\u8981\u6c42\uff1a5.6.5+\n\nApollo\u7684\u8868\u7ed3\u6784\u5bf9`timestamp`\u4f7f\u7528\u4e86\u591a\u4e2adefault\u58f0\u660e\uff0c\u6240\u4ee5\u9700\u89815.6.5\u4ee5\u4e0a\u7248\u672c\u3002\n\n\u8fde\u63a5\u4e0aMySQL\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a\n```sql\nSHOW VARIABLES WHERE Variable_name = 'version';\n```\n\n| Variable_name | Value  |\n|---------------|--------|\n| version       | 5.7.11 |\n\n> \u6ce81\uff1aMySQL\u7248\u672c\u53ef\u4ee5\u964d\u7ea7\u52305.5\uff0c\u8be6\u89c1[mysql \u4f9d\u8d56\u964d\u7ea7\u8ba8\u8bba](https://github.com/apolloconfig/apollo/issues/481)\u3002\n\n> \u6ce82\uff1a\u5982\u679c\u5e0c\u671b\u4f7f\u7528Oracle\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[vanpersl](https://github.com/vanpersl)\u5728Apollo 0.8.0\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Oracle\u9002\u914d\u4ee3\u7801](https://github.com/apolloconfig/apollo/compare/v0.8.0...vanpersl:db-oracle)\uff0cOracle\u7248\u672c\u4e3a10.2.0.1.0\u3002\n\n> \u6ce83\uff1a\u5982\u679c\u5e0c\u671b\u4f7f\u7528Postgres\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[oaksharks](https://github.com/oaksharks)\u5728Apollo 0.9.1\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Pg\u9002\u914d\u4ee3\u7801](https://github.com/oaksharks/apollo/compare/ac10768ee2e11c488523ca0e845984f6f71499ac...oaksharks:pg)\uff0cPostgres\u7684\u7248\u672c\u4e3a9.3.20\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003[xiao0yy](https://github.com/xiao0yy)\u5728Apollo 0.10.2\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Pg\u9002\u914d\u4ee3\u7801](https://github.com/apolloconfig/apollo/issues/1293)\uff0cPostgres\u7684\u7248\u672c\u4e3a9.5\u3002\n\n## 1.3 \u73af\u5883\n\n\u5206\u5e03\u5f0f\u90e8\u7f72\u9700\u8981\u4e8b\u5148\u786e\u5b9a\u90e8\u7f72\u7684\u73af\u5883\u4ee5\u53ca\u90e8\u7f72\u65b9\u5f0f\u3002\n\nApollo\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u73af\u5883\uff1a\n* DEV\n    * \u5f00\u53d1\u73af\u5883\n* FAT\n    * \u6d4b\u8bd5\u73af\u5883\uff0c\u76f8\u5f53\u4e8ealpha\u73af\u5883(\u529f\u80fd\u6d4b\u8bd5)\n* UAT\n    * \u96c6\u6210\u73af\u5883\uff0c\u76f8\u5f53\u4e8ebeta\u73af\u5883\uff08\u56de\u5f52\u6d4b\u8bd5\uff09\n* PRO\n    * \u751f\u4ea7\u73af\u5883\n\n> \u5982\u679c\u5e0c\u671b\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u73af\u5883\u540d\u79f0\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[Portal\u5982\u4f55\u589e\u52a0\u73af\u5883](zh/faq/common-issues-in-deployment-and-development-phase?id=_4-portal\u5982\u4f55\u589e\u52a0\u73af\u5883\uff1f)\n\n\u53ef\u4ee5\u53c2\u8003 [\u90e8\u7f72\u67b6\u6784](zh/deployment/deployment-architecture.md)\n\n\n## 1.4 \u7f51\u7edc\u7b56\u7565\n\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u65f6\u5019\uff0c`apollo-configservice`\u548c`apollo-adminservice`\u9700\u8981\u628a\u81ea\u5df1\u7684IP\u548c\u7aef\u53e3\u6ce8\u518c\u5230Meta Server\uff08apollo-configservice\u672c\u8eab\uff09\u3002\n\nApollo\u5ba2\u6237\u7aef\u548cPortal\u4f1a\u4eceMeta Server\u83b7\u53d6\u670d\u52a1\u7684\u5730\u5740\uff08IP+\u7aef\u53e3\uff09\uff0c\u7136\u540e\u901a\u8fc7\u670d\u52a1\u5730\u5740\u76f4\u63a5\u8bbf\u95ee\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c`apollo-configservice`\u548c`apollo-adminservice`\u662f\u57fa\u4e8e\u5185\u7f51\u53ef\u4fe1\u7f51\u7edc\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c**\u8bf7\u4e0d\u8981\u5c06`apollo-configservice`\u548c`apollo-adminservice`\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51**\u3002\n\n\u6240\u4ee5\u5982\u679c\u5b9e\u9645\u90e8\u7f72\u7684\u673a\u5668\u6709\u591a\u5757\u7f51\u5361\uff08\u5982docker\uff09\uff0c\u6216\u8005\u5b58\u5728\u67d0\u4e9b\u7f51\u5361\u7684IP\u662fApollo\u5ba2\u6237\u7aef\u548cPortal\u65e0\u6cd5\u8bbf\u95ee\u7684\uff08\u5982\u7f51\u7edc\u5b89\u5168\u9650\u5236\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728`apollo-configservice`\u548c`apollo-adminservice`\u4e2d\u505a\u76f8\u5173\u914d\u7f6e\u6765\u89e3\u51b3\u8fde\u901a\u6027\u95ee\u9898\u3002\n\n### 1.4.1 \u5ffd\u7565\u67d0\u4e9b\u7f51\u5361\n\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u628a`docker0`\u548c`veth`\u5f00\u5934\u7684\u7f51\u5361\u5728\u6ce8\u518c\u5230Eureka\u65f6\u5ffd\u7565\u6389\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Dspring.cloud.inetutils.ignoredInterfaces[0]=docker0\n-Dspring.cloud.inetutils.ignoredInterfaces[1]=veth.*\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[0]=docker0\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[1]=veth.*\n```\n\n### 1.4.2 \u6307\u5b9a\u8981\u6ce8\u518c\u7684IP\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u6307\u5b9a\u6ce8\u518c\u7684IP\u4e3a`1.2.3.4`\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Deureka.instance.ip-address=1.2.3.4\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nEUREKA_INSTANCE_IP_ADDRESS=1.2.3.4\n```\n\n### 1.4.3 \u6307\u5b9a\u8981\u6ce8\u518c\u7684URL\n\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u6307\u5b9a\u6ce8\u518c\u7684URL\u4e3a`http://1.2.3.4:8080`\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Deureka.instance.homePageUrl=http://1.2.3.4:8080\n-Deureka.instance.preferIpAddress=false\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nEUREKA_INSTANCE_HOME_PAGE_URL=http://1.2.3.4:8080\nEUREKA_INSTANCE_PREFER_IP_ADDRESS=false\n```\n\n### 1.4.4 \u76f4\u63a5\u6307\u5b9aapollo-configservice\u5730\u5740\n\n\u5982\u679cApollo\u90e8\u7f72\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u672c\u5730\u5f00\u53d1\u73af\u5883\u65e0\u6cd5\u8fde\u63a5\uff0c\u4f46\u53c8\u9700\u8981\u505a\u5f00\u53d1\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5347\u7ea7\u52300.11.0\u7248\u672c\u53ca\u4ee5\u4e0a\uff0c\u7136\u540e\u914d\u7f6e[\u8df3\u8fc7Apollo Meta Server\u670d\u52a1\u53d1\u73b0](zh/usage/java-sdk-user-guide#_1222-\u8df3\u8fc7apollo-meta-server\u670d\u52a1\u53d1\u73b0)\n\n### 1.4.5 \u6253\u901a\u7f51\u7edc\n\n\u5728\u4e00\u4e9b\u516c\u53f8\uff08\u4f8b\u5982\u91d1\u878d\u884c\u4e1a\u7684\u516c\u53f8\uff09\uff0c\u5b58\u5728\u5f88\u591a\u9632\u706b\u5899\u548c\u7f51\u7edc\u9694\u79bb\uff0c\u9700\u8981\u6253\u901a\u7f51\u7edc\uff08\u8ba9ip1\u53ef\u4ee5\u8bbf\u95eeip2\u7684\u67d0\u4e2a\u7aef\u53e3\uff09\n\n#### 1.4.5.1 \u6253\u901a\u5ba2\u6237\u7aef\u5230\u914d\u7f6e\u4e2d\u5fc3\u7684\u7f51\u7edc\n\n\u5bf9\u4e8e\u4f7f\u7528\u914d\u7f6e\u4e2d\u5fc3\u7684\u5ba2\u6237\u7aef\uff0c\n\nclient\u9700\u8981\u8bbf\u95ee\u6240\u6709\uff08\u6216\u8005\u76f8\u540c\u673a\u623f\u5185\u7684\uff09Meta Server\u548cConfig Service\uff08\u9ed8\u8ba4\u90fd\u662f8080\u7aef\u53e3\uff09\uff0c\u8bf7\u4e0d\u8981\u6253\u901aClient\u5230Admin Service\u7684\u7f51\u7edc\n\n```mermaid\nflowchart LR\n\tsubgraph servers[IP1:8080, IP2:8080, ..., IPn:8080]\n\t\tm[Meta Sever]\n\t\tc[Config Service]\n\tend\n\tclient --> servers\n```\n\n\u5982\u679c\u67d0\u4e2a\u5e94\u7528\u9700\u8981\u4f7f\u7528openapi\uff0c\u8fd8\u9700\u8981\u8bbf\u95eePortal\uff08\u9ed8\u8ba4\u662f8070\u7aef\u53e3\uff09\n\n```mermaid\nflowchart LR\n\tsubgraph servers[IP:8070]\n\t\tPortal\n\tend\n\topenapi-client --> servers\n```\n\n#### 1.4.5.2 \u6253\u901a\u914d\u7f6e\u4e2d\u5fc3\u5185\u90e8\u7684\u7f51\u7edc\n\n\u5bf9\u4e8e\u914d\u7f6e\u4e2d\u5fc3\u81ea\u5df1\u5185\u90e8\uff0c\u7531\u4e8e\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u9700\u8981\u4e92\u76f8\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e5f\u8981\u4fdd\u8bc1\u7f51\u7edc\u4e0a\u7684\u8fde\u901a\n\n```mermaid\nflowchart LR\n\tsubgraph config-service-servers[All Config Service's IP:8080]\n\t\tm[Meta Server]\n\t\tc[Config Service]\n\tend\n\tsubgraph admin-service-servers[All Admin Service's IP:8090]\n\t\ta[Admin Service]\n\tend\n\t\n\tsubgraph portal-servers[IP:8070]\n\t\tp[Portal]\n\tend\n\t\n\t\n\tconfigdb[(ConfigDB)]\n\tportaldb[(PortalDB)]\n\t\n\ta --> config-service-servers\n\t\n\ta --> configdb\n\tc --> configdb\n\t\n\tp --> config-service-servers\n\tp --> admin-service-servers\n\tp --> portaldb\n```\n\n# \u4e8c\u3001\u90e8\u7f72\u6b65\u9aa4\n\n\u90e8\u7f72\u6b65\u9aa4\u603b\u4f53\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0cApollo\u7684\u552f\u4e00\u4f9d\u8d56\u662f\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u9996\u5148\u628a\u6570\u636e\u5e93\u51c6\u5907\u597d\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u9009\u62e9\u4e0d\u540c\u7684\u90e8\u7f72\u65b9\u5f0f\uff1a\n\n> [@lingjiaju](https://github.com/lingjiaju)\u5f55\u5236\u4e86\u4e00\u7cfb\u5217Apollo\u5feb\u901f\u4e0a\u624b\u89c6\u9891\uff0c\u5982\u679c\u770b\u6587\u6863\u89c9\u5f97\u7565\u7e41\u7410\u7684\u8bdd\uff0c\u4e0d\u59a8\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u4ed6\u7684[\u89c6\u9891\u6559\u7a0b](https://pan.baidu.com/s/1blv87EOZS77NWT8Amkijkw#list/path=%2F)\u3002\n\n> \u5982\u679c\u90e8\u7f72\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003[\u90e8\u7f72&\u5f00\u53d1\u9047\u5230\u7684\u5e38\u89c1\u95ee\u9898](zh/faq/common-issues-in-deployment-and-development-phase)\uff0c\u4e00\u822c\u90fd\u80fd\u627e\u5230\u7b54\u6848\u3002\n\n## 2.1 \u521b\u5efa\u6570\u636e\u5e93\nApollo\u670d\u52a1\u7aef\u5171\u9700\u8981\u4e24\u4e2a\u6570\u636e\u5e93\uff1a`ApolloPortalDB`\u548c`ApolloConfigDB`\uff0c\u6211\u4eec\u628a\u6570\u636e\u5e93\u3001\u8868\u7684\u521b\u5efa\u548c\u6837\u4f8b\u6570\u636e\u90fd\u5206\u522b\u51c6\u5907\u4e86sql\u6587\u4ef6\uff0c\u53ea\u9700\u8981\u5bfc\u5165\u6570\u636e\u5e93\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662fApolloPortalDB\u53ea\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4e00\u4e2a\u5373\u53ef\uff0c\u800cApolloConfigDB\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u90e8\u7f72\u4e00\u5957\uff0c\u5982fat\u3001uat\u548cpro\u5206\u522b\u90e8\u7f723\u5957ApolloConfigDB\u3002\n\n> \u6ce8\u610f\uff1a\u5982\u679c\u4f60\u672c\u5730\u5df2\u7ecf\u521b\u5efa\u8fc7Apollo\u6570\u636e\u5e93\uff0c\u8bf7\u6ce8\u610f\u5907\u4efd\u6570\u636e\u3002\u6211\u4eec\u51c6\u5907\u7684sql\u6587\u4ef6\u4f1a\u6e05\u7a7aApollo\u76f8\u5173\u7684\u8868\u3002\n\n### 2.1.1 \u521b\u5efaApolloPortalDB\n\n\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u901a\u8fc7\u624b\u52a8\u5bfc\u5165SQL\u6216\u662f\u901a\u8fc7[Flyway](https://flywaydb.org/)\u81ea\u52a8\u5bfc\u5165SQL\u521b\u5efa\u3002\n\n#### 2.1.1.1 \u624b\u52a8\u5bfc\u5165SQL\u521b\u5efa\n\n\u901a\u8fc7\u5404\u79cdMySQL\u5ba2\u6237\u7aef\u5bfc\u5165[apolloportaldb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloportaldb.sql)\u5373\u53ef\u3002\n\n\u4ee5MySQL\u539f\u751f\u5ba2\u6237\u7aef\u4e3a\u4f8b\uff1a\n```sql\nsource /your_local_path/scripts/sql/apolloportaldb.sql\n```\n\n#### 2.1.1.2 \u901a\u8fc7Flyway\u5bfc\u5165SQL\u521b\u5efa\n\n> \u9700\u89811.3.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539[flyway-portaldb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-portaldb.properties)\u4e2d\u7684`flyway.user`\u3001`flyway.password`\u548c`flyway.url`\u914d\u7f6e\n2. \u5728apollo\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c`mvn -N -Pportaldb flyway:migrate`\n\n#### 2.1.1.3 \u9a8c\u8bc1\n\n\u5bfc\u5165\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0bsql\u8bed\u53e5\u6765\u9a8c\u8bc1\uff1a\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloPortalDB`.`ServerConfig` limit 1;\n```\n\n| Id | Key                | Value | Comment          |\n|----|--------------------|-------|------------------|\n| 1  | apollo.portal.envs | dev   | \u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868 |\n\n> \u6ce8\uff1aApolloPortalDB\u53ea\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4e00\u4e2a\u5373\u53ef\n\n### 2.1.2 \u521b\u5efaApolloConfigDB\n\n\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u901a\u8fc7\u624b\u52a8\u5bfc\u5165SQL\u6216\u662f\u901a\u8fc7[Flyway](https://flywaydb.org/)\u81ea\u52a8\u5bfc\u5165SQL\u521b\u5efa\u3002\n\n#### 2.1.2.1 \u624b\u52a8\u5bfc\u5165SQL\n\n\u901a\u8fc7\u5404\u79cdMySQL\u5ba2\u6237\u7aef\u5bfc\u5165[apolloconfigdb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloconfigdb.sql)\u5373\u53ef\u3002\n\n\u4ee5MySQL\u539f\u751f\u5ba2\u6237\u7aef\u4e3a\u4f8b\uff1a\n```sql\nsource /your_local_path/scripts/sql/apolloconfigdb.sql\n```\n\n#### 2.1.2.2 \u901a\u8fc7Flyway\u5bfc\u5165SQL\n\n> \u9700\u89811.3.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539[flyway-configdb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-configdb.properties)\u4e2d\u7684`flyway.user`\u3001`flyway.password`\u548c`flyway.url`\u914d\u7f6e\n2. \u5728apollo\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c`mvn -N -Pconfigdb flyway:migrate`\n\n#### 2.1.2.3 \u9a8c\u8bc1\n\n\u5bfc\u5165\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0bsql\u8bed\u53e5\u6765\u9a8c\u8bc1\uff1a\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloConfigDB`.`ServerConfig` limit 1;\n```\n| Id | Key                | Value                         | Comment       |\n|----|--------------------|-------------------------------|---------------|\n| 1  | eureka.service.url | http://127.0.0.1:8080/eureka/ | Eureka\u670d\u52a1Url |\n\n> \u6ce8\uff1aApolloConfigDB\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u90e8\u7f72\u4e00\u5957\uff0c\u5982fat\u3001uat\u548cpro\u5206\u522b\u90e8\u7f723\u5957ApolloConfigDB\n\n#### 2.1.2.4 \u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165ApolloConfigDB\u7684\u9879\u76ee\u6570\u636e\n\u5982\u679c\u662f\u5168\u65b0\u90e8\u7f72\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u8bf7\u5ffd\u7565\u6b64\u6b65\u3002\n\n\u5982\u679c\u4e0d\u662f\u5168\u65b0\u90e8\u7f72\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u6bd4\u5982\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u65f6\u5728Apollo\u914d\u7f6e\u4e2d\u5fc3\u5df2\u7ecf\u521b\u5efa\u4e86\u4e0d\u5c11\u9879\u76ee\u4ee5\u53canamespace\u7b49\uff0c\u90a3\u4e48\u5728\u65b0\u73af\u5883\u4e2d\u7684ApolloConfigDB\u4e2d\u9700\u8981\u4ece\u5176\u5b83\u6b63\u5e38\u8fd0\u884c\u7684\u73af\u5883\u4e2d\u5bfc\u5165\u5fc5\u8981\u7684\u9879\u76ee\u6570\u636e\u3002\n\n\u4e3b\u8981\u6d89\u53caApolloConfigDB\u7684\u4e0b\u97624\u5f20\u8868\uff0c\u4e0b\u9762\u540c\u65f6\u9644\u4e0a\u9700\u8981\u5bfc\u5165\u7684\u6570\u636e\u67e5\u8be2\u8bed\u53e5\uff1a\n\n1. App\n    * \u5bfc\u5165\u5168\u90e8\u7684App\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`App` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`App` where `IsDeleted` = 0;\n2. AppNamespace\n    * \u5bfc\u5165\u5168\u90e8\u7684AppNamespace\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`AppNamespace` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`AppNamespace` where `IsDeleted` = 0;\n3. Cluster\n    * \u5bfc\u5165\u9ed8\u8ba4\u7684default\u96c6\u7fa4\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`Cluster` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`Cluster` where `Name` = 'default' and `IsDeleted` = 0;\n4. Namespace\n    * \u5bfc\u5165\u9ed8\u8ba4\u7684default\u96c6\u7fa4\u4e2d\u7684namespace\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`Namespace` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`Namespace` where `ClusterName` = 'default' and `IsDeleted` = 0;\n\n\u540c\u65f6\u4e5f\u522b\u5fd8\u4e86\u901a\u77e5\u7528\u6237\u5728\u65b0\u7684\u73af\u5883\u7ed9\u81ea\u5df1\u7684\u9879\u76ee\u8bbe\u7f6e\u6b63\u786e\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u5f71\u54cd\u9762\u6bd4\u8f83\u5927\u7684\u516c\u5171namespace\u914d\u7f6e\u3002\n\n> \u5982\u679c\u662f\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u73af\u5883\u8fc1\u79fb\u6570\u636e\uff0c\u5efa\u8bae\u8fc1\u79fb\u5b8c\u91cd\u542f\u4e00\u4e0bconfig service\uff0c\u56e0\u4e3aconfig service\u4e2d\u6709appnamespace\u7684\u7f13\u5b58\u6570\u636e\n\n### 2.1.3 \u8c03\u6574\u670d\u52a1\u7aef\u914d\u7f6e\n\nApollo\u81ea\u8eab\u7684\u4e00\u4e9b\u914d\u7f6e\u662f\u653e\u5728\u6570\u636e\u5e93\u91cc\u9762\u7684\uff0c\u6240\u4ee5\u9700\u8981\u9488\u5bf9\u5b9e\u9645\u60c5\u51b5\u505a\u4e00\u4e9b\u8c03\u6574\uff0c\u5177\u4f53\u53c2\u6570\u8bf4\u660e\u8bf7\u53c2\u8003[\u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e](#\u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e)\u3002\n\n\u5927\u90e8\u5206\u914d\u7f6e\u53ef\u4ee5\u5148\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8fc7 [apollo.portal.envs](#_311-apolloportalenvs-\u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868) \u548c [eureka.service.url](#_321-eurekaserviceurl-eureka\u670d\u52a1url) \u8bf7\u52a1\u5fc5\u914d\u7f6e\u6b63\u786e\u540e\u518d\u8fdb\u884c\u4e0b\u9762\u7684\u90e8\u7f72\u6b65\u9aa4\u3002\n\n## 2.2 \u865a\u62df\u673a/\u7269\u7406\u673a\u90e8\u7f72\n### 2.2.1 \u83b7\u53d6\u5b89\u88c5\u5305\n\n\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5b89\u88c5\u5305\uff1a\n\n1. \u76f4\u63a5\u4e0b\u8f7d\u5b89\u88c5\u5305\n    * \u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7d\u9884\u5148\u6253\u597d\u7684\u5b89\u88c5\u5305\n    * \u5982\u679c\u5bf9Apollo\u7684\u4ee3\u7801\u6ca1\u6709\u5b9a\u5236\u9700\u6c42\uff0c\u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u7701\u53bb\u672c\u5730\u6253\u5305\u7684\u8fc7\u7a0b\n2. \u901a\u8fc7\u6e90\u7801\u6784\u5efa\n    * \u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7dSource code\u5305\u6216\u76f4\u63a5clone[\u6e90\u7801](https://github.com/ctripcorp/apollo)\u540e\u5728\u672c\u5730\u6784\u5efa\n    * \u5982\u679c\u9700\u8981\u5bf9Apollo\u7684\u505a\u5b9a\u5236\u5f00\u53d1\uff0c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\n\n#### 2.2.1.1 \u76f4\u63a5\u4e0b\u8f7d\u5b89\u88c5\u5305\n\n##### 2.2.1.1.1 \u83b7\u53d6apollo-configservice\u3001apollo-adminservice\u3001apollo-portal\u5b89\u88c5\u5305\n\n\u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684`apollo-configservice-x.x.x-github.zip`\u3001`apollo-adminservice-x.x.x-github.zip`\u548c`apollo-portal-x.x.x-github.zip`\u5373\u53ef\u3002\n\n##### 2.2.1.1.2 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\nApollo\u670d\u52a1\u7aef\u9700\u8981\u77e5\u9053\u5982\u4f55\u8fde\u63a5\u5230\u4f60\u524d\u9762\u521b\u5efa\u7684\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u4f4d\u4e8e\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\u4e2d\u7684`config/application-github.properties`\u4e2d\u3002\n\n###### 2.2.1.1.2.1 \u914d\u7f6eapollo-configservice\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-configservice-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloConfigDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883config-service\u9700\u8981\u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684\u6570\u636e\u5e93\u53c2\u6570\n\n###### 2.2.1.1.2.2 \u914d\u7f6eapollo-adminservice\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-adminservice-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloConfigDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883admin-service\u9700\u8981\u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684\u6570\u636e\u5e93\u53c2\u6570\n\n###### 2.2.1.1.2.3 \u914d\u7f6eapollo-portal\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-portal-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloPortalDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n###### 2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f\n\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmeta service\u548cconfig service\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2aJVM\u8fdb\u7a0b\uff0c\u6240\u4ee5meta service\u7684\u5730\u5740\u5c31\u662fconfig service\u7684\u5730\u5740\u3002\n\n> \u5bf9\u4e8e1.6.0\u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7ApolloPortalDB.ServerConfig\u4e2d\u7684\u914d\u7f6e\u9879\u6765\u914d\u7f6eMeta Service\u5730\u5740\uff0c\u8be6\u89c1[apollo.portal.meta.servers - \u5404\u73af\u5883Meta Service\u5217\u8868](#_312-apolloportalmetaservers-\u5404\u73af\u5883meta-service\u5217\u8868)\n\n\u4f7f\u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`apollo-portal-x.x.x-github.zip`\u4e2d`config`\u76ee\u5f55\u4e0b\u7684`apollo-env.properties`\u6587\u4ef6\u3002\n\n\u5047\u8bbeDEV\u7684apollo-configservice\u672a\u7ed1\u5b9a\u57df\u540d\uff0c\u5730\u5740\u662f1.1.1.1:8080\uff0cFAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.fat.xxx.com\uff0cUAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.uat.xxx.com\uff0cPRO\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.xxx.com\uff0c\u90a3\u4e48\u53ef\u4ee5\u5982\u4e0b\u4fee\u6539\u5404\u73af\u5883meta service\u670d\u52a1\u5730\u5740\uff0c\u683c\u5f0f\u4e3a`${env}.meta=http://${config-service-url:port}`\uff0c\u5982\u679c\u67d0\u4e2a\u73af\u5883\u4e0d\u9700\u8981\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff08\u5982lpt.meta\uff09\uff1a\n\n```sh\ndev.meta=http://1.1.1.1:8080\nfat.meta=http://apollo.fat.xxx.com\nuat.meta=http://apollo.uat.xxx.com\npro.meta=http://apollo.xxx.com\n```\n\n\u9664\u4e86\u901a\u8fc7`apollo-env.properties`\u65b9\u5f0f\u914d\u7f6emeta service\u4ee5\u5916\uff0capollo\u4e5f\u652f\u6301\u5728\u8fd0\u884c\u65f6\u6307\u5b9ameta service\uff08\u4f18\u5148\u7ea7\u6bd4`apollo-env.properties`\u9ad8\uff09\uff1a\n1. \u901a\u8fc7Java System Property `${env}_meta`\n    * \u53ef\u4ee5\u901a\u8fc7Java\u7684System Property `${env}_meta`\u6765\u6307\u5b9a\n    * \u5982`java -Ddev_meta=http://config-service-url -jar xxx.jar`\n    * \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5982`System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684System Environment`${ENV}_META`\n    * \u5982`DEV_META=http://config-service-url`\n    * \u6ce8\u610fkey\u4e3a\u5168\u5927\u5199\uff0c\u4e14\u4e2d\u95f4\u662f`_`\u5206\u9694\n\n>\u6ce81: \u4e3a\u4e86\u5b9e\u73b0meta service\u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7SLB\uff08Software Load Balancer\uff09\u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\n\n>\u6ce82: meta service\u5730\u5740\u4e5f\u53ef\u4ee5\u586b\u5165IP\uff0c0.11.0\u7248\u672c\u4e4b\u524d\u53ea\u652f\u6301\u586b\u5165\u4e00\u4e2aIP\u3002\u4ece0.11.0\u7248\u672c\u5f00\u59cb\u652f\u6301\u586b\u5165\u4ee5\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u5730\u5740\uff08[PR #1214](https://github.com/apolloconfig/apollo/pull/1214)\uff09\uff0c\u5982`http://1.1.1.1:8080,http://2.2.2.2:8080`\uff0c\u4e0d\u8fc7\u751f\u4ea7\u73af\u5883\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u57df\u540d\uff08\u8d70slb\uff09\uff0c\u56e0\u4e3a\u673a\u5668\u6269\u5bb9\u3001\u7f29\u5bb9\u7b49\u90fd\u53ef\u80fd\u5bfc\u81f4IP\u5217\u8868\u7684\u53d8\u5316\u3002\n\n#### 2.2.1.2 \u901a\u8fc7\u6e90\u7801\u6784\u5efa\n\n##### 2.2.1.2.1 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\nApollo\u670d\u52a1\u7aef\u9700\u8981\u77e5\u9053\u5982\u4f55\u8fde\u63a5\u5230\u4f60\u524d\u9762\u521b\u5efa\u7684\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u7f16\u8f91[scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh)\uff0c\u4fee\u6539ApolloPortalDB\u548cApolloConfigDB\u76f8\u5173\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u3002\n\n> \u6ce8\u610f\uff1a\u586b\u5165\u7684\u7528\u6237\u9700\u8981\u5177\u5907\u5bf9ApolloPortalDB\u548cApolloConfigDB\u6570\u636e\u7684\u8bfb\u5199\u6743\u9650\u3002\n\n```sh\n#apollo config db info\napollo_config_db_url=jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\napollo_config_db_username=\u7528\u6237\u540d\napollo_config_db_password=\u5bc6\u7801\uff08\u5982\u679c\u6ca1\u6709\u5bc6\u7801\uff0c\u7559\u7a7a\u5373\u53ef\uff09\n\n# apollo portal db info\napollo_portal_db_url=jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\napollo_portal_db_username=\u7528\u6237\u540d\napollo_portal_db_password=\u5bc6\u7801\uff08\u5982\u679c\u6ca1\u6709\u5bc6\u7801\uff0c\u7559\u7a7a\u5373\u53ef\uff09\n```\n\n> \u6ce81\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883config-service\u548cadmin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\uff0cportal\u53ea\u9700\u8981\u6253\u4e00\u6b21\u5305\u5373\u53ef\n\n> \u6ce82\uff1a\u5982\u679c\u4e0d\u60f3config-service\u548cadmin-service\u6bcf\u4e2a\u73af\u5883\u6253\u4e00\u4e2a\u5305\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u65f6\u4f20\u5165\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 [Issue 869](https://github.com/apolloconfig/apollo/issues/869)\n\n> \u6ce83\uff1a\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u8981\u72ec\u7acb\u90e8\u7f72\u4e00\u5957config-service\u3001admin-service\u548cApolloConfigDB\n\n##### 2.2.1.2.2 \u914d\u7f6e\u5404\u73af\u5883meta service\u5730\u5740\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u9700\u8981\u5728\u6253\u5305\u65f6\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\n\n\u5047\u8bbeDEV\u7684apollo-configservice\u672a\u7ed1\u5b9a\u57df\u540d\uff0c\u5730\u5740\u662f1.1.1.1:8080\uff0cFAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.fat.xxx.com\uff0cUAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.uat.xxx.com\uff0cPRO\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.xxx.com\uff0c\u90a3\u4e48\u7f16\u8f91[scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh)\uff0c\u5982\u4e0b\u4fee\u6539\u5404\u73af\u5883meta service\u670d\u52a1\u5730\u5740\uff0c\u683c\u5f0f\u4e3a`${env}_meta=http://${config-service-url:port}`\uff0c\u5982\u679c\u67d0\u4e2a\u73af\u5883\u4e0d\u9700\u8981\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff1a\n\n```sh\ndev_meta=http://1.1.1.1:8080\nfat_meta=http://apollo.fat.xxx.com\nuat_meta=http://apollo.uat.xxx.com\npro_meta=http://apollo.xxx.com\n\nMETA_SERVERS_OPTS=\"-Ddev_meta=$dev_meta -Dfat_meta=$fat_meta -Duat_meta=$uat_meta -Dpro_meta=$pro_meta\"\n```\n\n\u9664\u4e86\u5728\u6253\u5305\u65f6\u914d\u7f6emeta service\u4ee5\u5916\uff0capollo\u4e5f\u652f\u6301\u5728\u8fd0\u884c\u65f6\u6307\u5b9ameta service\uff1a\n1. \u901a\u8fc7Java System Property `${env}_meta`\n    * \u53ef\u4ee5\u901a\u8fc7Java\u7684System Property `${env}_meta`\u6765\u6307\u5b9a\n    * \u5982`java -Ddev_meta=http://config-service-url -jar xxx.jar`\n    * \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5982`System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684System Environment`${ENV}_META`\n    * \u5982`DEV_META=http://config-service-url`\n    * \u6ce8\u610fkey\u4e3a\u5168\u5927\u5199\uff0c\u4e14\u4e2d\u95f4\u662f`_`\u5206\u9694\n\n>\u6ce81: \u4e3a\u4e86\u5b9e\u73b0meta service\u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7SLB\uff08Software Load Balancer\uff09\u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\n\n>\u6ce82: meta service\u5730\u5740\u4e5f\u53ef\u4ee5\u586b\u5165IP\uff0c0.11.0\u7248\u672c\u4e4b\u524d\u53ea\u652f\u6301\u586b\u5165\u4e00\u4e2aIP\u3002\u4ece0.11.0\u7248\u672c\u5f00\u59cb\u652f\u6301\u586b\u5165\u4ee5\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u5730\u5740\uff08[PR #1214](https://github.com/apolloconfig/apollo/pull/1214)\uff09\uff0c\u5982`http://1.1.1.1:8080,http://2.2.2.2:8080`\uff0c\u4e0d\u8fc7\u751f\u4ea7\u73af\u5883\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u57df\u540d\uff08\u8d70slb\uff09\uff0c\u56e0\u4e3a\u673a\u5668\u6269\u5bb9\u3001\u7f29\u5bb9\u7b49\u90fd\u53ef\u80fd\u5bfc\u81f4IP\u5217\u8868\u7684\u53d8\u5316\u3002\n\n##### 2.2.1.2.3 \u6267\u884c\u7f16\u8bd1\u3001\u6253\u5305\n\u505a\u5b8c\u4e0a\u8ff0\u914d\u7f6e\u540e\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u7f16\u8bd1\u548c\u6253\u5305\u4e86\u3002\n\n> \u6ce8\uff1a\u521d\u6b21\u7f16\u8bd1\u4f1a\u4eceMaven\u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u4e0d\u5c11\u4f9d\u8d56\uff0c\u5982\u679c\u7f51\u7edc\u60c5\u51b5\u4e0d\u4f73\u65f6\u5f88\u5bb9\u6613\u51fa\u9519\uff0c\u5efa\u8bae\u4f7f\u7528\u56fd\u5185\u7684Maven\u4ed3\u5e93\u6e90\uff0c\u6bd4\u5982[\u963f\u91cc\u4e91Maven\u955c\u50cf](http://www.cnblogs.com/geektown/p/5705405.html)\n\n```sh\n./build.sh\n```\n\n\u8be5\u811a\u672c\u4f1a\u4f9d\u6b21\u6253\u5305apollo-configservice, apollo-adminservice, apollo-portal\u3002\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684config-service\u548cadmin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\u6253\u4e0d\u540c\u7684\u5305\uff0cportal\u53ea\u9700\u8981\u6253\u4e00\u6b21\u5305\u5373\u53ef\n\n##### 2.2.1.2.4 \u83b7\u53d6apollo-configservice\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-configservice/target/`\u76ee\u5f55\u4e0b\u7684`apollo-configservice-x.x.x-github.zip`\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684config-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\u540e\u5206\u522b\u90e8\u7f72\n\n##### 2.2.1.2.5 \u83b7\u53d6apollo-adminservice\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-adminservice/target/`\u76ee\u5f55\u4e0b\u7684`apollo-adminservice-x.x.x-github.zip`\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684admin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\u540e\u5206\u522b\u90e8\u7f72\n\n##### 2.2.1.2.6 \u83b7\u53d6apollo-portal\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-portal/target/`\u76ee\u5f55\u4e0b\u7684`apollo-portal-x.x.x-github.zip`\n\n### 2.2.2 \u90e8\u7f72Apollo\u670d\u52a1\u7aef\n\n#### 2.2.2.1 \u90e8\u7f72apollo-configservice\n\u5c06\u5bf9\u5e94\u73af\u5883\u7684`apollo-configservice-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728scripts/startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms6144m -Xmx6144m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=4096m -XX:MaxNewSize=4096m -XX:SurvivorRatio=18\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-configservice.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\u53e6\u5916apollo-configservice\u540c\u65f6\u627f\u62c5meta server\u804c\u8d23\uff0c\u5982\u679c\u8981\u4fee\u6539\u7aef\u53e3\uff0c\u6ce8\u610f\u8981\u540c\u65f6ApolloConfigDB.ServerConfig\u8868\u4e2d\u7684`eureka.service.url`\u914d\u7f6e\u9879\u4ee5\u53caapollo-portal\u548capollo-client\u4e2d\u7684\u4f7f\u7528\u5230\u7684meta server\u4fe1\u606f\uff0c\u8be6\u89c1\uff1a[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u548c[1.2.2 Apollo Meta Server](zh/usage/java-sdk-user-guide#_122-apollo-meta-server)\u3002\n\n> \u6ce84\uff1a\u5982\u679cApolloConfigDB.ServerConfig\u7684eureka.service.url\u53ea\u914d\u4e86\u5f53\u524d\u6b63\u5728\u542f\u52a8\u7684\u673a\u5668\u7684\u8bdd\uff0c\u5728\u542f\u52a8apollo-configservice\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u65e5\u5fd7\u4e2d\u8f93\u51faeureka\u6ce8\u518c\u5931\u8d25\u7684\u4fe1\u606f\uff0c\u5982`com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused`\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u662f\u9884\u671f\u7684\u60c5\u51b5\uff0c\u56e0\u4e3aapollo-configservice\u9700\u8981\u5411Meta Server\uff08\u5b83\u81ea\u5df1\uff09\u6ce8\u518c\u670d\u52a1\uff0c\u4f46\u662f\u56e0\u4e3a\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u5df1\u8fd8\u6ca1\u8d77\u6765\uff0c\u6240\u4ee5\u4f1a\u62a5\u8fd9\u4e2a\u9519\u3002\u540e\u9762\u4f1a\u8fdb\u884c\u91cd\u8bd5\u7684\u52a8\u4f5c\uff0c\u6240\u4ee5\u7b49\u81ea\u5df1\u670d\u52a1\u8d77\u6765\u540e\u5c31\u4f1a\u6ce8\u518c\u6b63\u5e38\u4e86\u3002\n\n> \u6ce85\uff1a\u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u4e00\u5b9a\u662f\u4e00\u4e2a\u7ec6\u5fc3\u9605\u8bfb\u6587\u6863\u7684\u4eba\uff0c\u800c\u4e14\u79bb\u6210\u529f\u5c31\u5dee\u4e00\u70b9\u70b9\u4e86\uff0c\u7ee7\u7eed\u52a0\u6cb9\uff0c\u5e94\u8be5\u5f88\u5feb\u5c31\u80fd\u5b8c\u6210Apollo\u7684\u5206\u5e03\u5f0f\u90e8\u7f72\u4e86\uff01\u4e0d\u8fc7\u4f60\u662f\u5426\u6709\u611f\u89c9Apollo\u7684\u5206\u5e03\u5f0f\u90e8\u7f72\u6b65\u9aa4\u6709\u70b9\u7e41\u7410\uff1f\u662f\u5426\u6709\u5565\u5efa\u8bae\u60f3\u8981\u548c\u4f5c\u8005\u8bf4\uff1f\u5982\u679c\u7b54\u6848\u662f\u80af\u5b9a\u7684\u8bdd\uff0c\u8bf7\u79fb\u6b65 [#1424](https://github.com/apolloconfig/apollo/issues/1424)\uff0c\u671f\u5f85\u4f60\u7684\u5efa\u8bae\uff01\n\n#### 2.2.2.2 \u90e8\u7f72apollo-adminservice\n\u5c06\u5bf9\u5e94\u73af\u5883\u7684`apollo-adminservice-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728scripts/startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms2560m -Xmx2560m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1024m -XX:MaxNewSize=1024m -XX:SurvivorRatio=22\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-adminservice.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\n\n#### 2.2.2.3 \u90e8\u7f72apollo-portal\n\u5c06`apollo-portal-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms4096m -Xmx4096m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=22\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-portal.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\n\n### 2.2.3 \u4f7f\u7528\u5176\u5b83\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n#### 2.2.3.1 nacos-discovery\n\n\u542f\u7528\u5916\u90e8nacos\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06config-service\u548cadmin-service\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub,nacos-discovery -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,nacos-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6enacos\u670d\u52a1\u5668\u5730\u5740\n```properties\nnacos.discovery.server-addr=127.0.0.1:8848\n# \u66f4\u591a nacos \u914d\u7f6e\nnacos.discovery.access-key=\nnacos.discovery.username=\nnacos.discovery.password=\nnacos.discovery.secret-key=\nnacos.discovery.namespace=\nnacos.discovery.context-path=\n```\n\n#### 2.2.3.2 consul-discovery\n\n\u542f\u7528\u5916\u90e8Consul\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.2.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,consul-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,consul-discovery\n    ```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6econsul\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n##### 2.2.3.2.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06config-service\u548cadmin-service\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,consul-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6econsul\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n#### 2.2.3.3 zookeeper-discovery\n\n\u542f\u7528\u5916\u90e8Zookeeper\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.3.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,zookeeper-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,zookeeper-discovery\n    ```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6ezookeeper\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n3.Zookeeper\u7248\u672c\u8bf4\u660e\n* \u652f\u6301Zookeeper3.5.x\u4ee5\u4e0a\u7684\u7248\u672c;\n* \u5982\u679capollo-configservice\u5e94\u7528\u542f\u52a8\u62a5\u7aef\u53e3\u5360\u7528,\u8bf7\u68c0\u67e5Zookeeper\u7684\u5982\u4e0b\u914d\u7f6e;\n> \u6ce8\uff1aZookeeper3.5.0\u65b0\u589e\u4e86\u5185\u7f6e\u7684[AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n##### 2.2.3.3.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06`config-service`\u548c`admin-service`\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,zookeeper-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6ezookeeper\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n3.Zookeeper\u7248\u672c\u8bf4\u660e\n* \u652f\u6301Zookeeper3.5.x\u4ee5\u4e0a\u7684\u7248\u672c;\n* \u5982\u679capollo-configservice\u5e94\u7528\u542f\u52a8\u62a5\u7aef\u53e3\u5360\u7528,\u8bf7\u68c0\u67e5Zookeeper\u7684\u5982\u4e0b\u914d\u7f6e;\n> \u6ce8\uff1aZookeeper3.5.0\u65b0\u589e\u4e86\u5185\u7f6e\u7684[AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n#### 2.2.3.4 custom-defined-discovery\n\n\u542f\u7528custom-defined-discovery\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.4.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,custom-defined-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,custom-defined-discovery\n    ```\n\n2. \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 config-service \u4e0e admin-service \u7684\u8bbf\u95ee\u5730\u5740\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u79cd\u5728mysql\u6570\u636e\u5e93ApolloConfigDB\uff0c\u8868ServerConfig\u5f53\u4e2d\u5199\u5165\u4e24\u6761\u6570\u636e\u3002\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService \u8bbf\u95ee\u5730\u5740');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService \u8bbf\u95ee\u5730\u5740');\n```\n\u53e6\u5916\u4e00\u79cd\u4fee\u6539apollo-configservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n##### 2.2.3.5.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06`config-service`\u548c`admin-service`\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,custom-defined-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n2. \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 config-service \u4e0e admin-service \u7684\u8bbf\u95ee\u5730\u5740\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u79cd\u5728mysql\u6570\u636e\u5e93ApolloConfigDB\uff0c\u8868ServerConfig\u5f53\u4e2d\u5199\u5165\u4e24\u6761\u6570\u636e\u3002\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService \u8bbf\u95ee\u5730\u5740');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService \u8bbf\u95ee\u5730\u5740');\n```\n\u53e6\u5916\u4e00\u79cd\u4fee\u6539apollo-configservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n\n#### 2.2.3.5 database-discovery\n\n> \u4ec5\u652f\u6301 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u542f\u7528database-discovery\u66ff\u6362\u5185\u7f6eeureka\n\nApollo\u652f\u6301\u4f7f\u7528\u5185\u90e8\u7684\u6570\u636e\u5e93\u8868\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e0d\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7684\u6ce8\u518c\u4e2d\u5fc3\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,database-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,database-discovery\n    ```\n\n2. \u5728\u591a\u673a\u623f\u90e8\u7f72\u65f6\uff0c\n   \u5982\u679c\u4f60\u9700\u8981apollo\u5ba2\u6237\u7aef\u53ea\u8bfb\u53d6\u540c\u673a\u623f\u5185\u7684Config Service\uff0c\n   \u4f60\u53ef\u4ee5\u5728Config Service\u548cAdmin Service\u5b89\u88c5\u5305\u4e2d`config/application-github.properties`\u65b0\u589e\u4e00\u6761\u914d\u7f6e\n    ```properties\n    apollo.service.registry.cluster=\u4e0eapollo\u7684Cluster\u540c\u540d\n    ```\n\n\n## 2.3 Docker\u90e8\u7f72\n### 2.3.1 1.7.0\u53ca\u4ee5\u4e0a\u7248\u672c\nApollo 1.7.0\u7248\u672c\u5f00\u59cb\u4f1a\u9ed8\u8ba4\u4e0a\u4f20Docker\u955c\u50cf\u5230[Docker Hub](https://hub.docker.com/u/apolloconfig)\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u83b7\u53d6\n\n#### 2.3.1.1 Apollo Config Service\n\n##### 2.3.1.1.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-configservice:${version}\n```\n\n##### 2.3.1.1.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8080:8080 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-configservice apolloconfig/apollo-configservice:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5bc6\u7801\n\n#### 2.3.1.2 Apollo Admin Service\n\n##### 2.3.1.2.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-adminservice:${version}\n```\n\n##### 2.3.1.2.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8090:8090 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-adminservice apolloconfig/apollo-adminservice:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5bc6\u7801\n\n#### 2.3.1.3 Apollo Portal\n\n##### 2.3.1.3.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-portal:${version}\n```\n\n##### 2.3.1.3.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8070:8070 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloPortalDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -e APOLLO_PORTAL_ENVS=dev,pro \\\n    -e DEV_META=http://fill-in-dev-meta-server:8080 -e PRO_META=http://fill-in-pro-meta-server:8080 \\\n    -d -v /tmp/logs:/opt/logs --name apollo-portal apolloconfig/apollo-portal:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u5bc6\u7801\n* APOLLO_PORTAL_ENVS(\u53ef\u9009): \u5bf9\u5e94ApolloPortalDB\u4e2d\u7684[apollo.portal.envs](#_311-apolloportalenvs-\u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868)\u914d\u7f6e\u9879\uff0c\u5982\u679c\u6ca1\u6709\u5728\u6570\u636e\u5e93\u4e2d\u914d\u7f6e\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u73af\u5883\u53c2\u6570\u914d\u7f6e\n* DEV_META/PRO_META(\u53ef\u9009): \u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684Meta Service\u5730\u5740\uff0c\u4ee5${ENV}_META\u547d\u540d\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u914d\u7f6e\u4e86ApolloPortalDB\u4e2d\u7684[apollo.portal.meta.servers](#_312-apolloportalmetaservers-\u5404\u73af\u5883meta-service\u5217\u8868)\u914d\u7f6e\uff0c\u5219\u4ee5apollo.portal.meta.servers\u4e2d\u7684\u914d\u7f6e\u4e3a\u51c6\n\n#### 2.3.1.4 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\n\n\u5982\u679c\u4fee\u6539\u4e86 apollo \u670d\u52a1\u7aef\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a\n\n1. \u901a\u8fc7\u6e90\u7801\u6784\u5efa\u5b89\u88c5\u5305\uff1a`./scripts/build.sh`\n2. \u6784\u5efa Docker \u955c\u50cf\uff1a`mvn docker:build -pl apollo-configservice,apollo-adminservice,apollo-portal`\n\n### 2.3.2 1.7.0\u4e4b\u524d\u7684\u7248\u672c\n\nApollo\u9879\u76ee\u5df2\u7ecf\u81ea\u5e26\u4e86Docker file\uff0c\u53ef\u4ee5\u53c2\u7167[2.2.1 \u83b7\u53d6\u5b89\u88c5\u5305](#_221-\u83b7\u53d6\u5b89\u88c5\u5305)\u914d\u7f6e\u597d\u5b89\u88c5\u5305\u540e\u901a\u8fc7\u4e0b\u9762\u7684\u6587\u4ef6\u6765\u6253Docker\u955c\u50cf\uff1a\n\n1. [apollo-configservice](https://github.com/apolloconfig/apollo/blob/master/apollo-configservice/src/main/docker/Dockerfile)\n2. [apollo-adminservice](https://github.com/apolloconfig/apollo/blob/master/apollo-adminservice/src/main/docker/Dockerfile)\n3. [apollo-portal](https://github.com/apolloconfig/apollo/blob/master/apollo-portal/src/main/docker/Dockerfile)\n\n\u4e5f\u53ef\u4ee5\u53c2\u8003Apollo\u7528\u6237[@kulovecc](https://github.com/kulovecc)\u7684[docker-apollo](https://github.com/kulovecc/docker-apollo)\u9879\u76ee\u548c[@idoop](https://github.com/idoop)\u7684[docker-apollo](https://github.com/idoop/docker-apollo)\u9879\u76ee\u3002\n\n## 2.4 Kubernetes\u90e8\u7f72\n### 2.4.1 \u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\n\nApollo 1.7.0\u7248\u672c\u589e\u52a0\u4e86\u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\u7684\u90e8\u7f72\u6a21\u5f0f\uff0c\u7531\u4e8e\u4e0d\u518d\u4f7f\u7528\u5185\u7f6e\u7684Eureka\uff0c\u6240\u4ee5\u5728\u6574\u4f53\u90e8\u7f72\u4e0a\u6709\u5f88\u5927\u7b80\u5316\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86Helm Charts\uff0c\u4fbf\u4e8e\u90e8\u7f72\u3002\n\n> \u66f4\u591a\u8bbe\u8ba1\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[#3054](https://github.com/apolloconfig/apollo/issues/3054)\u3002\n\n#### 2.4.1.1 \u73af\u5883\u8981\u6c42\n\n- Kubernetes 1.10+\n- Helm 3\n\n#### 2.4.1.2 \u6dfb\u52a0Apollo Helm Chart\u4ed3\u5e93\n\n```bash\n$ helm repo add apollo https://charts.apolloconfig.com\n$ helm search repo apollo\n```\n\n#### 2.4.1.3 \u90e8\u7f72apollo-configservice\u548capollo-adminservice\n\n##### 2.4.1.3.1 \u5b89\u88c5apollo-configservice\u548capollo-adminservice\n\n\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5apollo-configservice\u548capollo-adminservice\uff0c\u6240\u4ee5\u5efa\u8bae\u5728release\u540d\u79f0\u4e2d\u52a0\u5165\u73af\u5883\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a`apollo-service-dev`\n\n```bash\n$ helm install apollo-service-dev \\\n    --set configdb.host=1.2.3.4 \\\n    --set configdb.userName=apollo \\\n    --set configdb.password=apollo \\\n    --set configdb.service.enabled=true \\\n    --set configService.replicaCount=1 \\\n    --set adminService.replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-service\n```\n\n\u4e00\u822c\u90e8\u7f72\u5efa\u8bae\u901a\u8fc7 values.yaml \u6765\u914d\u7f6e\uff1a\n\n```bash\n$ helm install apollo-service-dev -f values.yaml -n your-namespace apollo/apollo-service \n```\n\n\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u63d0\u793a\u5bf9\u5e94\u73af\u5883\u7684Meta Server\u5730\u5740\uff0c\u9700\u8981\u8bb0\u5f55\u4e0b\u6765\uff0capollo-portal\u5b89\u88c5\u65f6\u9700\u8981\u7528\u5230\uff1a\n\n```bash\nGet meta service url for current release by running these commands:\n  echo http://apollo-service-dev-apollo-configservice:8080\n```\n\n> \u66f4\u591a\u914d\u7f6e\u9879\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[2.4.1.3.3 \u914d\u7f6e\u9879\u8bf4\u660e](#_24133-\u914d\u7f6e\u9879\u8bf4\u660e)\n\n##### 2.4.1.3.2 \u5378\u8f7dapollo-configservice\u548capollo-adminservice\n\n\u4f8b\u5982\u8981\u5378\u8f7d`apollo-service-dev`\u7684\u90e8\u7f72\uff1a\n\n```bash\n$ helm uninstall -n your-namespace apollo-service-dev\n```\n\n##### 2.4.1.3.3 \u914d\u7f6e\u9879\u8bf4\u660e\n\n\u4e0b\u8868\u5217\u51fa\u4e86apollo-service chart\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a\n\n| Parameter            | Description                                 | Default             |\n|----------------------|---------------------------------------------|---------------------|\n| `configdb.host` | The host for apollo config db | `nil` |\n| `configdb.port` | The port for apollo config db | `3306` |\n| `configdb.dbName` | The database name for apollo config db | `ApolloConfigDB` |\n| `configdb.userName` | The user name for apollo config db | `nil` |\n| `configdb.password` | The password for apollo config db | `nil` |\n| `configdb.connectionStringProperties` | The connection string properties for apollo config db | `characterEncoding=utf8` |\n| `configdb.service.enabled` | Whether to create a Kubernetes Service for `configdb.host` or not. Set it to `true` if `configdb.host` is an endpoint outside of the kubernetes cluster | `false` |\n| `configdb.service.fullNameOverride` | Override the service name for apollo config db | `nil` |\n| `configdb.service.port` | The port for the service of apollo config db | `3306` |\n| `configdb.service.type` | The service type of apollo config db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP` |\n| `configService.fullNameOverride` | Override the deployment name for apollo-configservice | `nil` |\n| `configService.replicaCount` | Replica count of apollo-configservice | `2` |\n| `configService.containerPort` | Container port of apollo-configservice | `8080` |\n| `configService.image.repository` | Image repository of apollo-configservice | `apolloconfig/apollo-configservice` |\n| `configService.image.tag` | Image tag of apollo-configservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.image.pullPolicy`                | Image pull policy of apollo-configservice | `IfNotPresent` |\n| `configService.imagePullSecrets`                | Image pull secrets of apollo-configservice | `[]` |\n| `configService.service.fullNameOverride` | Override the service name for apollo-configservice | `nil` |\n| `configService.service.port` | The port for the service of apollo-configservice | `8080` |\n| `configService.service.targetPort` | The target port for the service of apollo-configservice | `8080` |\n| `configService.service.type` | The service type of apollo-configservice                     | `ClusterIP` |\n| `configService.ingress.enabled` | Whether to enable the ingress for config-service or not. _(chart version >= 0.2.0)_ | `false` |\n| `configService.ingress.annotations` | The annotations of the ingress for config-service. _(chart version >= 0.2.0)_ | `{}` |\n| `configService.ingress.hosts.host` | The host of the ingress for config-service. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.ingress.hosts.paths` | The paths of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]` |\n| `configService.ingress.tls` | The tls definition of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]` |\n| `configService.liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `configService.liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `configService.readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `configService.readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `configService.config.profiles` | specify the spring profiles to activate | `github,kubernetes` |\n| `configService.config.configServiceUrlOverride` | Override `apollo.config-service.url`: config service url to be accessed by apollo-client, e.g. `http://apollo-config-service-dev:8080` | `nil` |\n| `configService.config.adminServiceUrlOverride` | Override `apollo.admin-service.url`: admin service url to be accessed by apollo-portal, e.g. `http://apollo-admin-service-dev:8090` | `nil` |\n| `configService.config.contextPath` | specify the context path, e.g. `/apollo`, then users could access config service via `http://{config_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `configService.strategy` | The deployment strategy of apollo-configservice | `{}` |\n| `configService.resources` | The resources definition of apollo-configservice | `{}` |\n| `configService.nodeSelector` | The node selector definition of apollo-configservice | `{}` |\n| `configService.tolerations` | The tolerations definition of apollo-configservice | `[]` |\n| `configService.affinity` | The affinity definition of apollo-configservice | `{}` |\n| `adminService.fullNameOverride` | Override the deployment name for apollo-adminservice | `nil` |\n| `adminService.replicaCount` | Replica count of apollo-adminservice | `2` |\n| `adminService.containerPort` | Container port of apollo-adminservice | `8090` |\n| `adminService.image.repository` | Image repository of apollo-adminservice | `apolloconfig/apollo-adminservice` |\n| `adminService.image.tag` | Image tag of apollo-adminservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.image.pullPolicy`                | Image pull policy of apollo-adminservice | `IfNotPresent` |\n| `adminService.imagePullSecrets`                | Image pull secrets of apollo-adminservice | `[]` |\n| `adminService.service.fullNameOverride` | Override the service name for apollo-adminservice | `nil` |\n| `adminService.service.port` | The port for the service of apollo-adminservice | `8090` |\n| `adminService.service.targetPort` | The target port for the service of apollo-adminservice | `8090` |\n| `adminService.service.type` | The service type of apollo-adminservice                     | `ClusterIP` |\n| `adminService.ingress.enabled` | Whether to enable the ingress for admin-service or not. _(chart version >= 0.2.0)_ | `false` |\n| `adminService.ingress.annotations` | The annotations of the ingress for admin-service. _(chart version >= 0.2.0)_ | `{}` |\n| `adminService.ingress.hosts.host` | The host of the ingress for admin-service. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.ingress.hosts.paths` | The paths of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]` |\n| `adminService.ingress.tls` | The tls definition of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]` |\n| `adminService.liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `adminService.liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `adminService.readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `adminService.readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `adminService.config.profiles` | specify the spring profiles to activate | `github,kubernetes` |\n| `adminService.config.contextPath` | specify the context path, e.g. `/apollo`, then users could access admin service via `http://{admin_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `adminService.strategy` | The deployment strategy of apollo-adminservice | `{}` |\n| `adminService.resources` | The resources definition of apollo-adminservice | `{}` |\n| `adminService.nodeSelector` | The node selector definition of apollo-adminservice | `{}` |\n| `adminService.tolerations` | The tolerations definition of apollo-adminservice | `[]` |\n| `adminService.affinity` | The affinity definition of apollo-adminservice | `{}` |\n\n##### 2.4.1.3.4 \u914d\u7f6e\u6837\u4f8b\n\n###### 2.4.1.3.4.1 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684IP\n\n```yaml\nconfigdb:\n  host: 1.2.3.4\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.3.4.2 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684\u57df\u540d\n\n```yaml\nconfigdb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n###### 2.4.1.3.4.3 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5185\u7684\u4e00\u4e2a\u670d\u52a1\n\n```yaml\nconfigdb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.3.4.4 \u6307\u5b9aMeta Server\u8fd4\u56de\u7684apollo-configservice\u5730\u5740\n\n\u5982\u679capollo-client\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95eeapollo-configservice\u7684Service\uff08\u6bd4\u5982\u4e0d\u5728\u540c\u4e00\u4e2ak8s\u96c6\u7fa4\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u793a\u4f8b\u6307\u5b9aMeta Server\u8fd4\u56de\u7ed9apollo-client\u7684\u5730\u5740\uff08\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7nodeport\u8bbf\u95ee\uff09\n\n```yaml\nconfigService:\n  config:\n    configServiceUrlOverride: http://1.2.3.4:12345\n```\n\n###### 2.4.1.3.4.5 \u6307\u5b9aMeta Server\u8fd4\u56de\u7684apollo-adminservice\u5730\u5740\n\n\u5982\u679capollo-portal\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95eeapollo-adminservice\u7684Service\uff08\u6bd4\u5982\u4e0d\u5728\u540c\u4e00\u4e2ak8s\u96c6\u7fa4\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u793a\u4f8b\u6307\u5b9aMeta Server\u8fd4\u56de\u7ed9apollo-portal\u7684\u5730\u5740\uff08\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7nodeport\u8bbf\u95ee\uff09\n\n```yaml\nconfigService:\n  config:\n    adminServiceUrlOverride: http://1.2.3.4:23456\n```\n\n###### 2.4.1.3.4.6 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/config`\u5f62\u5f0f\u66b4\u9732apollo-configservice\u670d\u52a1\n\n```yaml\n# use /config as root, should specify configService.config.contextPath as /config\nconfigService:\n  config:\n    contextPath: /config\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /config\n```\n\n###### 2.4.1.3.4.7 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/admin`\u5f62\u5f0f\u66b4\u9732apollo-adminservice\u670d\u52a1\n\n```yaml\n# use /admin as root, should specify adminService.config.contextPath as /admin\nadminService:\n  config:\n    contextPath: /admin\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /admin\n```\n\n#### 2.4.1.4 \u90e8\u7f72apollo-portal\n\n##### 2.4.1.4.1 \u5b89\u88c5apollo-portal\n\n\u5047\u8bbe\u6709dev, pro\u4e24\u4e2a\u73af\u5883\uff0c\u4e14meta server\u5730\u5740\u5206\u522b\u4e3a`http://apollo-service-dev-apollo-configservice:8080`\u548c`http://apollo-service-pro-apollo-configservice:8080`\uff1a\n\n```bash\n$ helm install apollo-portal \\\n    --set portaldb.host=1.2.3.4 \\\n    --set portaldb.userName=apollo \\\n    --set portaldb.password=apollo \\\n    --set portaldb.service.enabled=true \\\n    --set config.envs=\"dev\\,pro\" \\\n    --set config.metaServers.dev=http://apollo-service-dev-apollo-configservice:8080 \\\n    --set config.metaServers.pro=http://apollo-service-pro-apollo-configservice:8080 \\\n    --set replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-portal\n```\n\n\u4e00\u822c\u90e8\u7f72\u5efa\u8bae\u901a\u8fc7 values.yaml \u6765\u914d\u7f6e\uff1a\n\n```bash\n$ helm install apollo-portal -f values.yaml -n your-namespace apollo/apollo-portal \n```\n\n> \u66f4\u591a\u914d\u7f6e\u9879\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[2.4.1.4.3 \u914d\u7f6e\u9879\u8bf4\u660e](#_24143-\u914d\u7f6e\u9879\u8bf4\u660e)\n\n##### 2.4.1.4.2 \u5378\u8f7dapollo-portal\n\n\u4f8b\u5982\u8981\u5378\u8f7d`apollo-portal`\u7684\u90e8\u7f72\uff1a\n\n```bash\n$ helm uninstall -n your-namespace apollo-portal\n```\n\n##### 2.4.1.4.3 \u914d\u7f6e\u9879\u8bf4\u660e\n\n\u4e0b\u8868\u5217\u51fa\u4e86apollo-portal chart\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a\n\n| Parameter            | Description                                 | Default               |\n|----------------------|---------------------------------------------|-----------------------|\n| `fullNameOverride` | Override the deployment name for apollo-portal | `nil` |\n| `replicaCount` | Replica count of apollo-portal | `2` |\n| `containerPort` | Container port of apollo-portal | `8070` |\n| `image.repository` | Image repository of apollo-portal | `apolloconfig/apollo-portal` |\n| `image.tag` | Image tag of apollo-portal, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `image.pullPolicy`                | Image pull policy of apollo-portal | `IfNotPresent` |\n| `imagePullSecrets`                | Image pull secrets of apollo-portal | `[]` |\n| `service.fullNameOverride` | Override the service name for apollo-portal | `nil` |\n| `service.port` | The port for the service of apollo-portal | `8070` |\n| `service.targetPort` | The target port for the service of apollo-portal | `8070` |\n| `service.type` | The service type of apollo-portal                     | `ClusterIP` |\n| `service.sessionAffinity` | The session affinity for the service of apollo-portal | `ClientIP` |\n| `ingress.enabled` | Whether to enable the ingress or not | `false` |\n| `ingress.annotations` | The annotations of the ingress | `{}` |\n| `ingress.hosts.host` | The host of the ingress | `nil` |\n| `ingress.hosts.paths` | The paths of the ingress | `[]` |\n| `ingress.tls` | The tls definition of the ingress | `[]` |\n| `liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `strategy` | The deployment strategy of apollo-portal | `{}` |\n| `resources` | The resources definition of apollo-portal | `{}` |\n| `nodeSelector` | The node selector definition of apollo-portal | `{}` |\n| `tolerations` | The tolerations definition of apollo-portal | `[]` |\n| `affinity` | The affinity definition of apollo-portal | `{}` |\n| `config.profiles` | specify the spring profiles to activate | `github,auth` |\n| `config.envs` | specify the env names, e.g. `dev,pro` | `nil` |\n| `config.contextPath` | specify the context path, e.g. `/apollo`, then users could access portal via `http://{portal_address}/apollo` | `nil` |\n| `config.metaServers` | specify the meta servers, e.g.<br />`dev: http://apollo-configservice-dev:8080`<br />`pro: http://apollo-configservice-pro:8080` | `{}` |\n| `config.files` | specify the extra config files for apollo-portal, e.g. `application-ldap.yml` | `{}` |\n| `portaldb.host` | The host for apollo portal db | `nil`                              |\n| `portaldb.port` | The port for apollo portal db | `3306` |\n| `portaldb.dbName` | The database name for apollo portal db | `ApolloPortalDB`                                     |\n| `portaldb.userName` | The user name for apollo portal db | `nil` |\n| `portaldb.password` | The password for apollo portal db | `nil` |\n| `portaldb.connectionStringProperties` | The connection string properties for apollo portal db | `characterEncoding=utf8` |\n| `portaldb.service.enabled` | Whether to create a Kubernetes Service for `portaldb.host` or not. Set it to `true` if `portaldb.host` is an endpoint outside of the kubernetes cluster | `false` |\n| `portaldb.service.fullNameOverride` | Override the service name for apollo portal db | `nil` |\n| `portaldb.service.port` | The port for the service of apollo portal db | `3306` |\n| `portaldb.service.type` | The service type of apollo portal db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP` |\n\n##### 2.4.1.4.4 \u914d\u7f6e\u6837\u4f8b\n\n###### 2.4.1.4.4.1 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684IP\n\n```yaml\nportaldb:\n  host: 1.2.3.4\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.4.4.2 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684\u57df\u540d\n\n```yaml\nportaldb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.4.4.3 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5185\u7684\u4e00\u4e2a\u670d\u52a1\n\n```yaml\nportaldb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.4.4.4 \u914d\u7f6e\u73af\u5883\u4fe1\u606f\n\n```yaml\nconfig:\n  envs: dev,pro\n  metaServers:\n    dev: http://apollo-service-dev-apollo-configservice:8080\n    pro: http://apollo-service-pro-apollo-configservice:8080\n```\n\n###### 2.4.1.4.4.5 \u4ee5Load Balancer\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\nservice:\n  type: LoadBalancer\n```\n\n###### 2.4.1.4.4.6 \u4ee5Ingress\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /\n```\n\n###### 2.4.1.4.4.7 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/apollo`\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\n# use /apollo as root, should specify config.contextPath as /apollo\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /apollo\n\nconfig:\n  ...\n  contextPath: /apollo\n  ...\n```\n\n###### 2.4.1.4.4.8 \u4ee5Ingress\u914d\u7f6esession affinity\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/affinity-mode: \"persistent\"\n    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: \"true\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\n  hosts:\n    - host: xxx.somedomain.com # host is required to make session affinity work\n      paths:\n        - /\n```\n\n###### 2.4.1.4.4.9 \u542f\u7528 LDAP \u652f\u6301\n\n```yaml\nconfig:\n  ...\n  profiles: github,ldap\n  ...\n  files:\n    application-ldap.yml: |\n      spring:\n        ldap:\n          base: \"dc=example,dc=org\"\n          username: \"cn=admin,dc=example,dc=org\"\n          password: \"password\"\n          searchFilter: \"(uid={0})\"\n          urls:\n          - \"ldap://xxx.somedomain.com:389\"\n      ldap:\n        mapping:\n          objectClass: \"inetOrgPerson\"\n          loginId: \"uid\"\n          userDisplayName: \"cn\"\n          email: \"mail\"\n```\n\n#### 2.4.1.5 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\n\n\u5982\u679c\u4fee\u6539\u4e86 apollo \u670d\u52a1\u7aef\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\uff0c\u53ef\u4ee5\u53c2\u8003[2.3.1.4 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf](#_2314-\u901a\u8fc7\u6e90\u7801\u6784\u5efa-docker-\u955c\u50cf)\u7684\u6b65\u9aa4\u3002\n\n### 2.4.2 \u57fa\u4e8e\u5185\u7f6e\u7684Eureka\u670d\u52a1\u53d1\u73b0\n\n\u611f\u8c22[AiotCEO](https://github.com/AiotCEO)\u63d0\u4f9b\u4e86k8s\u7684\u90e8\u7f72\u652f\u6301\uff0c\u4f7f\u7528\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[apollo-on-kubernetes](https://github.com/apolloconfig/apollo/blob/master/scripts/apollo-on-kubernetes/README.md)\u3002\n\n\u611f\u8c22[qct](https://github.com/qct)\u63d0\u4f9b\u7684Helm Chart\u90e8\u7f72\u652f\u6301\uff0c\u4f7f\u7528\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[qct/apollo-helm](https://github.com/qct/apollo-helm)\u3002\n\n# \u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e\n\n> \u4ee5\u4e0b\u914d\u7f6e\u9664\u4e86\u652f\u6301\u5728\u6570\u636e\u5e93\u4e2d\u914d\u7f6e\u4ee5\u5916\uff0c\u4e5f\u652f\u6301\u901a\u8fc7-D\u53c2\u6570\u3001application.properties\u7b49\u914d\u7f6e\uff0c\u4e14-D\u53c2\u6570\u3001application.properties\u7b49\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u914d\u7f6e\n\n## 3.1 \u8c03\u6574ApolloPortalDB\u914d\u7f6e\n\u914d\u7f6e\u9879\u7edf\u4e00\u5b58\u50a8\u5728ApolloPortalDB.ServerConfig\u8868\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u53c2\u6570`\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u65e0\u7279\u6b8a\u8bf4\u660e\u5219\u4fee\u6539\u5b8c\u4e00\u5206\u949f\u5b9e\u65f6\u751f\u6548\u3002\n\n### 3.1.1 apollo.portal.envs - \u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868\n\n\u9ed8\u8ba4\u503c\u662fdev\uff0c\u5982\u679cportal\u9700\u8981\u7ba1\u7406\u591a\u4e2a\u73af\u5883\u7684\u8bdd\uff0c\u4ee5\u9017\u53f7\u5206\u9694\u5373\u53ef\uff08\u5927\u5c0f\u5199\u4e0d\u654f\u611f\uff09\uff0c\u5982\uff1a\n```\nDEV,FAT,UAT,PRO\n```\n\n\u4fee\u6539\u5b8c\u9700\u8981\u91cd\u542f\u751f\u6548\u3002\n\n>\u6ce81\uff1a\u4e00\u5957Portal\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u73af\u5883\uff0c\u4f46\u662f\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u8981\u72ec\u7acb\u90e8\u7f72\u4e00\u5957Config Service\u3001Admin Service\u548cApolloConfigDB\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\uff1a[2.1.2 \u521b\u5efaApolloConfigDB](#_212-\u521b\u5efaapolloconfigdb)\uff0c[3.2 \u8c03\u6574ApolloConfigDB\u914d\u7f6e](zh/deployment/distributed-deployment-guide?id=_32-\u8c03\u6574apolloconfigdb\u914d\u7f6e)\uff0c[2.2.1.1.2 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f](#_22112-\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f)\uff0c\u53e6\u5916\u5982\u679c\u662f\u4e3a\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\u589e\u52a0\u73af\u5883\uff0c\u522b\u5fd8\u4e86\u53c2\u8003[2.1.2.4 \u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165ApolloConfigDB\u7684\u9879\u76ee\u6570\u636e](#_2124-\u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165apolloconfigdb\u7684\u9879\u76ee\u6570\u636e)\u5bf9\u65b0\u7684\u73af\u5883\u505a\u521d\u59cb\u5316\u3002\n\n>\u6ce82\uff1a\u53ea\u5728\u6570\u636e\u5e93\u6dfb\u52a0\u73af\u5883\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u8fd8\u9700\u8981\u4e3aapollo-portal\u6dfb\u52a0\u65b0\u589e\u73af\u5883\u5bf9\u5e94\u7684meta server\u5730\u5740\uff0c\u5177\u4f53\u53c2\u8003\uff1a[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u3002apollo-client\u5728\u65b0\u7684\u73af\u5883\u4e0b\u4f7f\u7528\u65f6\u4e5f\u9700\u8981\u505a\u597d\u76f8\u5e94\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u8003\uff1a[1.2.2 Apollo Meta Server](zh/usage/java-sdk-user-guide#_122-apollo-meta-server)\u3002\n\n>\u6ce83\uff1a\u5982\u679c\u5e0c\u671b\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u73af\u5883\u540d\u79f0\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[Portal\u5982\u4f55\u589e\u52a0\u73af\u5883](zh/faq/common-issues-in-deployment-and-development-phase?id=_4-portal\u5982\u4f55\u589e\u52a0\u73af\u5883\uff1f)\u3002\n\n>\u6ce84\uff1a1.1.0\u7248\u672c\u589e\u52a0\u4e86\u7cfb\u7edf\u4fe1\u606f\u9875\u9762\uff08`\u7ba1\u7406\u5458\u5de5\u5177` -> `\u7cfb\u7edf\u4fe1\u606f`\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u9875\u9762\u68c0\u67e5\u914d\u7f6e\u662f\u5426\u6b63\u786e\n\n### 3.1.2 apollo.portal.meta.servers - \u5404\u73af\u5883Meta Service\u5217\u8868\n\n> \u9002\u7528\u4e8e1.6.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmeta service\u548cconfig service\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2aJVM\u8fdb\u7a0b\uff0c\u6240\u4ee5meta service\u7684\u5730\u5740\u5c31\u662fconfig service\u7684\u5730\u5740\u3002\n\n\u6837\u4f8b\u5982\u4e0b\uff1a\n```json\n{\n    \"DEV\":\"http://1.1.1.1:8080\",\n    \"FAT\":\"http://apollo.fat.xxx.com\",\n    \"UAT\":\"http://apollo.uat.xxx.com\",\n    \"PRO\":\"http://apollo.xxx.com\"\n}\n```\n\n\u4fee\u6539\u5b8c\u9700\u8981\u91cd\u542f\u751f\u6548\u3002\n\n> \u8be5\u914d\u7f6e\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5176\u5b83\u65b9\u5f0f\u8bbe\u7f6e\u7684Meta Service\u5730\u5740\uff0c\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u3002\n\n### 3.1.3 organizations - \u90e8\u95e8\u5217\u8868\n\nPortal\u4e2d\u65b0\u5efa\u7684App\u90fd\u9700\u8981\u9009\u62e9\u90e8\u95e8\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8fd9\u91cc\u914d\u7f6e\u53ef\u9009\u7684\u90e8\u95e8\u4fe1\u606f\uff0c\u6837\u4f8b\u5982\u4e0b\uff1a\n```json\n[{\"orgId\":\"TEST1\",\"orgName\":\"\u6837\u4f8b\u90e8\u95e81\"},{\"orgId\":\"TEST2\",\"orgName\":\"\u6837\u4f8b\u90e8\u95e82\"}]\n```\n\n### 3.1.4 superAdmin - Portal\u8d85\u7ea7\u7ba1\u7406\u5458\n\n\u8d85\u7ea7\u7ba1\u7406\u5458\u62e5\u6709\u6240\u6709\u6743\u9650\uff0c\u9700\u8981\u8c28\u614e\u8bbe\u7f6e\u3002\n\n\u5982\u679c\u6ca1\u6709\u63a5\u5165\u81ea\u5df1\u516c\u53f8\u7684SSO\u7cfb\u7edf\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u6682\u65f6\u4f7f\u7528\u9ed8\u8ba4\u503capollo\uff08\u9ed8\u8ba4\u7528\u6237\uff09\u3002\u7b49\u63a5\u5165\u540e\uff0c\u4fee\u6539\u4e3a\u5b9e\u9645\u4f7f\u7528\u7684\u8d26\u53f7\uff0c\u591a\u4e2a\u8d26\u53f7\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694(,)\u3002\n\n### 3.1.5 consumer.token.salt - consumer token salt\n\n\u5982\u679c\u4f1a\u4f7f\u7528\u5f00\u653e\u5e73\u53f0API\u7684\u8bdd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2atoken salt\u3002\u5982\u679c\u4e0d\u4f7f\u7528\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\n\n### 3.1.6 wiki.address\n\nportal\u4e0a\u201c\u5e2e\u52a9\u201d\u94fe\u63a5\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u662fApollo github\u7684wiki\u9996\u9875\uff0c\u53ef\u81ea\u884c\u8bbe\u7f6e\u3002\n\n### 3.1.7 admin.createPrivateNamespace.switch\n\n\u662f\u5426\u5141\u8bb8\u9879\u76ee\u7ba1\u7406\u5458\u521b\u5efaprivate namespace\u3002\u8bbe\u7f6e\u4e3a`true`\u5141\u8bb8\u521b\u5efa\uff0c\u8bbe\u7f6e\u4e3a`false`\u5219\u9879\u76ee\u7ba1\u7406\u5458\u5728\u9875\u9762\u4e0a\u770b\u4e0d\u5230\u521b\u5efaprivate namespace\u7684\u9009\u9879\u3002[\u4e86\u89e3\u66f4\u591aNamespace](zh/design/apollo-core-concept-namespace)\n\n### 3.1.8 emergencyPublish.supported.envs\n\n\u914d\u7f6e\u5141\u8bb8\u7d27\u6025\u53d1\u5e03\u7684\u73af\u5883\u5217\u8868\uff0c\u591a\u4e2aenv\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\n\n\u5f53config service\u5f00\u542f\u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173(`namespace.lock.switch`)\u540e\uff0c\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u662f\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u53d1\u5e03\u3002\u4e3a\u4e86\u907f\u514d\u9047\u5230\u7d27\u6025\u60c5\u51b5\u65f6\uff08\u5982\u975e\u5de5\u4f5c\u65f6\u95f4\u3001\u8282\u5047\u65e5\uff09\u65e0\u6cd5\u53d1\u5e03\u914d\u7f6e\uff0c\u53ef\u4ee5\u914d\u7f6e\u6b64\u9879\u4ee5\u5141\u8bb8\u67d0\u4e9b\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7d27\u6025\u53d1\u5e03\uff0c\u5373\u540c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4fee\u6539\u5e76\u53d1\u5e03\u914d\u7f6e\u3002\n\n### 3.1.9 configView.memberOnly.envs\n\n\u53ea\u5bf9\u9879\u76ee\u6210\u5458\u663e\u793a\u914d\u7f6e\u4fe1\u606f\u7684\u73af\u5883\u5217\u8868\uff0c\u591a\u4e2aenv\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\n\n\u5bf9\u8bbe\u5b9a\u4e86\u53ea\u5bf9\u9879\u76ee\u6210\u5458\u663e\u793a\u914d\u7f6e\u4fe1\u606f\u7684\u73af\u5883\uff0c\u53ea\u6709\u8be5\u9879\u76ee\u7684\u7ba1\u7406\u5458\u6216\u62e5\u6709\u8be5namespace\u7684\u7f16\u8f91\u6216\u53d1\u5e03\u6743\u9650\u7684\u7528\u6237\u624d\u80fd\u770b\u5230\u8be5\u79c1\u6709namespace\u7684\u914d\u7f6e\u4fe1\u606f\u548c\u53d1\u5e03\u5386\u53f2\u3002\u516c\u5171namespace\u59cb\u7ec8\u5bf9\u6240\u6709\u7528\u6237\u53ef\u89c1\u3002\n\n> \u4ece1.1.0\u7248\u672c\u5f00\u59cb\u652f\u6301\uff0c\u8be6\u89c1[PR 1531](https://github.com/apolloconfig/apollo/pull/1531)\n\n### 3.1.10 role.create-application.enabled - \u662f\u5426\u5f00\u542f\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.5.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u521b\u5efa\u9879\u76ee\n\n\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u90a3\u4e48\u53ea\u6709\u8d85\u7ea7\u7ba1\u7406\u5458\u548c\u62e5\u6709\u521b\u5efa\u9879\u76ee\u6743\u9650\u7684\u5e10\u53f7\u53ef\u4ee5\u521b\u5efa\u9879\u76ee\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u6743\u9650\u7ba1\u7406`\u7ed9\u7528\u6237\u5206\u914d\u521b\u5efa\u9879\u76ee\u6743\u9650\n\n### 3.1.11 role.manage-app-master.enabled - \u662f\u5426\u5f00\u542f\u9879\u76ee\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.5.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u6240\u6709\u9879\u76ee\u7684\u7ba1\u7406\u5458\u53ef\u4ee5\u4e3a\u9879\u76ee\u6dfb\u52a0/\u5220\u9664\u7ba1\u7406\u5458\n\n\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u90a3\u4e48\u53ea\u6709\u8d85\u7ea7\u7ba1\u7406\u5458\u548c\u62e5\u6709\u9879\u76ee\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\u7684\u5e10\u53f7\u53ef\u4ee5\u4e3a\u7279\u5b9a\u9879\u76ee\u6dfb\u52a0/\u5220\u9664\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u6743\u9650\u7ba1\u7406`\u7ed9\u7528\u6237\u5206\u914d\u7279\u5b9a\u9879\u76ee\u7684\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\n\n### 3.1.12 admin-service.access.tokens - \u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access token\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u5982\u679c\u5bf9\u5e94\u73af\u5883\u7684apollo-adminservice\u5f00\u542f\u4e86[\u8bbf\u95ee\u63a7\u5236](#_326-admin-serviceaccesscontrolenabled-\u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236)\uff0c\u90a3\u4e48\u9700\u8981\u5728\u6b64\u914d\u7f6eapollo-portal\u8bbf\u95ee\u8be5\u73af\u5883apollo-adminservice\u6240\u9700\u7684access token\uff0c\u5426\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\n\n\u683c\u5f0f\u4e3ajson\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n```json\n{\n    \"dev\" : \"098f6bcd4621d373cade4e832627b4f6\",\n    \"pro\" : \"ad0234829205b9033196ba818f7a872b\"\n}\n```\n\n### 3.1.13 searchByItem.switch - \u63a7\u5236\u53f0\u641c\u7d22\u6846\u662f\u5426\u652f\u6301\u6309\u914d\u7f6e\u9879\u641c\u7d22\n\n\u9ed8\u8ba4\u4e3a true\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u6309\u914d\u7f6e\u9879\u5feb\u901f\u641c\u7d22\u914d\u7f6e\n\n\u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5219\u5173\u95ed\u6b64\u529f\u80fd\n\n\n## 3.2 \u8c03\u6574ApolloConfigDB\u914d\u7f6e\n\u914d\u7f6e\u9879\u7edf\u4e00\u5b58\u50a8\u5728ApolloConfigDB.ServerConfig\u8868\u4e2d\uff0c\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u90fd\u9700\u8981\u5355\u72ec\u914d\u7f6e\uff0c\u4fee\u6539\u5b8c\u4e00\u5206\u949f\u5b9e\u65f6\u751f\u6548\u3002\n\n### 3.2.1 eureka.service.url - Eureka\u670d\u52a1Url\n\n> \u4e0d\u9002\u7528\u4e8e\u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\u573a\u666f\n\n\u4e0d\u7ba1\u662fapollo-configservice\u8fd8\u662fapollo-adminservice\u90fd\u9700\u8981\u5411eureka\u670d\u52a1\u6ce8\u518c\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6eeureka\u670d\u52a1\u5730\u5740\u3002\n\u6309\u7167\u76ee\u524d\u7684\u5b9e\u73b0\uff0capollo-configservice\u672c\u8eab\u5c31\u662f\u4e00\u4e2aeureka\u670d\u52a1\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u586b\u5165apollo-configservice\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u6709\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u5206\u9694\uff08\u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86/eureka/\u540e\u7f00\uff09\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u4e2a\u73af\u5883\u53ea\u586b\u5165\u81ea\u5df1\u73af\u5883\u7684eureka\u670d\u52a1\u5730\u5740\uff0c\u6bd4\u5982FAT\u7684apollo-configservice\u662f1.1.1.1:8080\u548c2.2.2.2:8080\uff0cUAT\u7684apollo-configservice\u662f3.3.3.3:8080\u548c4.4.4.4:8080\uff0cPRO\u7684apollo-configservice\u662f5.5.5.5:8080\u548c6.6.6.6:8080\uff0c\u90a3\u4e48\uff1a\n\n1. \u5728FAT\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://1.1.1.1:8080/eureka/,http://2.2.2.2:8080/eureka/\n```\n\n2. \u5728UAT\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/\n```\n\n3. \u5728PRO\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/\n```\n\n>\u6ce81\uff1a\u8fd9\u91cc\u9700\u8981\u586b\u5199\u672c\u73af\u5883\u4e2d\u5168\u90e8\u7684eureka\u670d\u52a1\u5730\u5740\uff0c\u56e0\u4e3aeureka\u9700\u8981\u4e92\u76f8\u590d\u5236\u6ce8\u518c\u4fe1\u606f\n\n>\u6ce82\uff1a\u5982\u679c\u5e0c\u671b\u5c06Config Service\u548cAdmin Service\u6ce8\u518c\u5230\u516c\u53f8\u7edf\u4e00\u7684Eureka\u4e0a\uff0c\u53ef\u4ee5\u53c2\u8003[\u90e8\u7f72&\u5f00\u53d1\u9047\u5230\u7684\u5e38\u89c1\u95ee\u9898 - \u5c06Config Service\u548cAdmin Service\u6ce8\u518c\u5230\u5355\u72ec\u7684Eureka Server\u4e0a](zh/faq/common-issues-in-deployment-and-development-phase#_8-\u5c06config-service\u548cadmin-service\u6ce8\u518c\u5230\u5355\u72ec\u7684eureka-server\u4e0a)\u7ae0\u8282\n\n>\u6ce83\uff1a\u5728\u591a\u673a\u623f\u90e8\u7f72\u65f6\uff0c\u5f80\u5f80\u5e0c\u671bconfig service\u548cadmin service\u53ea\u5411\u540c\u673a\u623f\u7684eureka\u6ce8\u518c\uff0c\u8981\u5b9e\u73b0\u8fd9\u4e2a\u6548\u679c\uff0c\u9700\u8981\u5229\u7528`ServerConfig`\u8868\u4e2d\u7684cluster\u5b57\u6bb5\uff0cconfig service\u548cadmin service\u4f1a\u8bfb\u53d6\u6240\u5728\u673a\u5668\u7684`/opt/settings/server.properties`\uff08Mac/Linux\uff09\u6216`C:\\opt\\settings\\server.properties`\uff08Windows\uff09\u4e2d\u7684idc\u5c5e\u6027\uff0c\u5982\u679c\u8be5idc\u6709\u5bf9\u5e94\u7684eureka.service.url\u914d\u7f6e\uff0c\u90a3\u4e48\u5c31\u53ea\u4f1a\u5411\u8be5\u673a\u623f\u7684eureka\u6ce8\u518c\u3002\u6bd4\u5982config service\u548cadmin service\u4f1a\u90e8\u7f72\u5230`SHAOY`\u548c`SHAJQ`\u4e24\u4e2aIDC\uff0c\u90a3\u4e48\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u673a\u623f\u4e2d\u7684\u670d\u52a1\u53ea\u5411\u8be5\u673a\u623f\u6ce8\u518c\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728`ServerConfig`\u8868\u4e2d\u65b0\u589e\u4e24\u6761\u8bb0\u5f55\uff0c\u5206\u522b\u586b\u5165`SHAOY`\u548c`SHAJQ`\u4e24\u4e2a\u673a\u623f\u7684eureka\u5730\u5740\u5373\u53ef\uff0c`default` cluster\u7684\u8bb0\u5f55\u53ef\u4ee5\u4fdd\u7559\uff0c\u5982\u679c\u6709config service\u548cadmin service\u4e0d\u662f\u90e8\u7f72\u5728`SHAOY`\u548c`SHAJQ`\u8fd9\u4e24\u4e2a\u673a\u623f\u7684\uff0c\u5c31\u4f1a\u4f7f\u7528\u8fd9\u6761\u9ed8\u8ba4\u914d\u7f6e\u3002\n\n| Key                |Cluster    | Value                         | Comment             |\n|--------------------|-----------|-------------------------------|---------------------|\n| eureka.service.url | default   | http://1.1.1.1:8080/eureka/   | \u9ed8\u8ba4\u7684Eureka\u670d\u52a1Url  |\n| eureka.service.url | SHAOY     | http://2.2.2.2:8080/eureka/   | SHAOY\u7684Eureka\u670d\u52a1Url |\n| eureka.service.url | SHAJQ     | http://3.3.3.3:8080/eureka/   | SHAJQ\u7684Eureka\u670d\u52a1Url |\n\n### 3.2.2 namespace.lock.switch - \u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173\uff0c\u7528\u4e8e\u53d1\u5e03\u5ba1\u6838\n\n\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f00\u5173\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u662f\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u53d1\u5e03\u3002\n\n> \u751f\u4ea7\u73af\u5883\u5efa\u8bae\u5f00\u542f\u6b64\u9009\u9879\n\n### 3.2.3 config-service.cache.enabled - \u662f\u5426\u5f00\u542f\u914d\u7f6e\u7f13\u5b58\n\n\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f00\u5173\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\u7684\u8bdd\uff0cconfig service\u4f1a\u7f13\u5b58\u52a0\u8f7d\u8fc7\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ece\u800c\u52a0\u5feb\u540e\u7eed\u914d\u7f6e\u83b7\u53d6\u6027\u80fd\u3002\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u5f00\u542f\u524d\u8bf7\u5148\u8bc4\u4f30\u603b\u914d\u7f6e\u5927\u5c0f\u5e76\u8c03\u6574config service\u5185\u5b58\u914d\u7f6e\u3002\n\n> \u5f00\u542f\u7f13\u5b58\u540e\u5fc5\u987b\u786e\u4fdd\u5e94\u7528\u4e2d\u914d\u7f6e\u7684app.id\u5927\u5c0f\u5199\u6b63\u786e\uff0c\u5426\u5219\u5c06\u83b7\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u914d\u7f6e\n\n### 3.2.4 item.key.length.limit - \u914d\u7f6e\u9879 key \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u9ed8\u8ba4\u914d\u7f6e\u662f128\u3002\n\n### 3.2.5 item.value.length.limit - \u914d\u7f6e\u9879 value \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u9ed8\u8ba4\u914d\u7f6e\u662f20000\u3002\n\n#### 3.2.5.1 namespace.value.length.limit.override - namespace \u7684\u914d\u7f6e\u9879 value \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u6b64\u914d\u7f6e\u7528\u6765\u8986\u76d6 `item.value.length.limit` \u7684\u914d\u7f6e\uff0c\u505a\u5230\u7ec6\u7c92\u5ea6\u63a7\u5236 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\uff0c\u914d\u7f6e\u7684\u503c\u662f\u4e00\u4e2a json \u683c\u5f0f\uff0cjson \u7684 key \u4e3a namespace \u5728\u6570\u636e\u5e93\u4e2d\u7684 id \u503c\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a\n```\nnamespace.value.length.limit.override = {1:200,3:20}\n```\n\u4ee5\u4e0a\u914d\u7f6e\u6307\u5b9a\u4e86 ApolloConfigDB.Namespace \u8868\u4e2d id=1 \u7684 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\u4e3a 200\uff0cid=3 \u7684 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\u4e3a 20\n\n### 3.2.6 admin-service.access.control.enabled - \u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\uff0c\u90a3\u4e48apollo-portal\u5c31\u9700\u8981[\u6b63\u786e\u914d\u7f6e](#_3112-admin-serviceaccesstokens-\u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access-token)\u8bbf\u95ee\u8be5\u73af\u5883\u7684access token\uff0c\u5426\u5219\u8bbf\u95ee\u4f1a\u88ab\u62d2\u7edd\n\n### 3.2.7 admin-service.access.tokens - \u914d\u7f6e\u5141\u8bb8\u8bbf\u95eeapollo-adminservice\u7684access token\u5217\u8868\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u5982\u679c\u8be5\u914d\u7f6e\u9879\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8bbf\u95ee\u63a7\u5236\u4e0d\u4f1a\u751f\u6548\u3002\u5982\u679c\u5141\u8bb8\u591a\u4e2atoken\uff0ctoken \u4e4b\u95f4\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\n\n\u6837\u4f8b\uff1a\n```properties\nadmin-service.access.tokens=098f6bcd4621d373cade4e832627b4f6\nadmin-service.access.tokens=098f6bcd4621d373cade4e832627b4f6,ad0234829205b9033196ba818f7a872b\n```\n\n### 3.2.8 apollo.access-key.auth-time-diff-tolerance - \u914d\u7f6e\u670d\u52a1\u7aefAccessKey\u6821\u9a8c\u5bb9\u5fcd\u7684\u65f6\u95f4\u504f\u5dee\n\n> \u9002\u7528\u4e8e2.0.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u503c\u4e3a60\uff0c\u5355\u4f4d\u4e3a\u79d2\u3002\u7531\u4e8e\u5bc6\u94a5\u8ba4\u8bc1\u65f6\u9700\u8981\u6821\u9a8c\u65f6\u95f4\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u7684\u65f6\u95f4\u53ef\u80fd\u5b58\u5728\u65f6\u95f4\u504f\u5dee\uff0c\u5982\u679c\u504f\u5dee\u592a\u5927\u4f1a\u5bfc\u81f4\u8ba4\u8bc1\u5931\u8d25\uff0c\u6b64\u914d\u7f6e\u53ef\u4ee5\u914d\u7f6e\u5bb9\u5fcd\u7684\u65f6\u95f4\u504f\u5dee\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e3a60\u79d2\u3002\n", "# &nbsp;\n# \u540d\u8bcd\u89e3\u91ca\n* \u666e\u901a\u5e94\u7528\n    * \u666e\u901a\u5e94\u7528\u6307\u7684\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5982\n        * Web\u5e94\u7528\u7a0b\u5e8f\n        * \u5e26\u6709main\u51fd\u6570\u7684\u7a0b\u5e8f\n* \u516c\u5171\u7ec4\u4ef6\n    * \u516c\u5171\u7ec4\u4ef6\u6307\u7684\u662f\u53d1\u5e03\u7684\u7c7b\u5e93\u3001\u5ba2\u6237\u7aef\u7a0b\u5e8f\uff0c\u4e0d\u4f1a\u81ea\u5df1\u72ec\u7acb\u8fd0\u884c\uff0c\u5982\n        * Java\u7684jar\u5305\n        * .Net\u7684dll\u6587\u4ef6\n\n# \u4e00\u3001\u666e\u901a\u5e94\u7528\u63a5\u5165\u6307\u5357\n## 1.1 \u521b\u5efa\u9879\u76ee\n\u8981\u4f7f\u7528Apollo\uff0c\u7b2c\u4e00\u6b65\u9700\u8981\u521b\u5efa\u9879\u76ee\u3002\n\n1. \u6253\u5f00apollo-portal\u4e3b\u9875\n2. \u70b9\u51fb\u201c\u521b\u5efa\u9879\u76ee\u201d\n\n![create-app-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app-entry.png)\n\n3. \u8f93\u5165\u9879\u76ee\u4fe1\u606f\n    * \u90e8\u95e8\uff1a\u9009\u62e9\u5e94\u7528\u6240\u5728\u7684\u90e8\u95e8\n    * \u5e94\u7528AppId\uff1a\u7528\u6765\u6807\u8bc6\u5e94\u7528\u8eab\u4efd\u7684\u552f\u4e00id\uff0c\u683c\u5f0f\u4e3astring\uff0c\u9700\u8981\u548c\u5ba2\u6237\u7aefapp.properties\u4e2d\u914d\u7f6e\u7684app.id\u5bf9\u5e94\n    * \u5e94\u7528\u540d\u79f0\uff1a\u5e94\u7528\u540d\uff0c\u4ec5\u7528\u4e8e\u754c\u9762\u5c55\u793a\n    * \u5e94\u7528\u8d1f\u8d23\u4eba\uff1a\u9009\u62e9\u7684\u4eba\u9ed8\u8ba4\u4f1a\u6210\u4e3a\u8be5\u9879\u76ee\u7684\u7ba1\u7406\u5458\uff0c\u5177\u5907\u9879\u76ee\u6743\u9650\u7ba1\u7406\u3001\u96c6\u7fa4\u521b\u5efa\u3001Namespace\u521b\u5efa\u7b49\u6743\u9650\n\n![create-app](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app.png)\n\n4. \u70b9\u51fb\u63d0\u4ea4\n\n    \u521b\u5efa\u6210\u529f\u540e\uff0c\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u9879\u76ee\u9996\u9875\n\n![app-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-created.png)\n\n## 1.2 \u9879\u76ee\u6743\u9650\u5206\u914d\n### 1.2.1 \u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\n\n\u9879\u76ee\u7ba1\u7406\u5458\u62e5\u6709\u4ee5\u4e0b\u6743\u9650\uff1a\n\n1. \u53ef\u4ee5\u7ba1\u7406\u9879\u76ee\u7684\u6743\u9650\u5206\u914d\n2. \u53ef\u4ee5\u521b\u5efa\u96c6\u7fa4\n3. \u53ef\u4ee5\u521b\u5efaNamespace\n\n\u521b\u5efa\u9879\u76ee\u65f6\u586b\u5199\u7684\u5e94\u7528\u8d1f\u8d23\u4eba\u9ed8\u8ba4\u4f1a\u6210\u4e3a\u9879\u76ee\u7684\u7ba1\u7406\u5458\u4e4b\u4e00\uff0c\u5982\u679c\u8fd8\u9700\u8981\u5176\u4ed6\u4eba\u4e5f\u6210\u4e3a\u9879\u76ee\u7ba1\u7406\u5458\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u6b65\u9aa4\u64cd\u4f5c\uff1a\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u201c\u7ba1\u7406\u9879\u76ee\u201d\n    * ![app-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-entry.png)\n\n2. \u641c\u7d22\u9700\u8981\u6dfb\u52a0\u7684\u6210\u5458\u5e76\u70b9\u51fb\u6dfb\u52a0\n    * ![app-permission-search-user](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-search-user.png)\n    * ![app-permission-user-added](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-user-added.png)\n\n### 1.2.2 \u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650\n\u914d\u7f6e\u6743\u9650\u5206\u4e3a\u7f16\u8f91\u548c\u53d1\u5e03\uff1a\n\n* \u7f16\u8f91\u6743\u9650\u5141\u8bb8\u7528\u6237\u5728Apollo\u754c\u9762\u4e0a\u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664\u914d\u7f6e\n    * \u914d\u7f6e\u4fee\u6539\u540e\u53ea\u5728Apollo\u754c\u9762\u4e0a\u53d8\u5316\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5e94\u7528\u5b9e\u9645\u4f7f\u7528\u7684\u914d\u7f6e\n* \u53d1\u5e03\u6743\u9650\u5141\u8bb8\u7528\u6237\u5728Apollo\u754c\u9762\u4e0a\u53d1\u5e03\u3001\u56de\u6eda\u914d\u7f6e\n    * \u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u3001\u56de\u6eda\u52a8\u4f5c\u540e\u624d\u4f1a\u88ab\u5e94\u7528\u5b9e\u9645\u4f7f\u7528\u5230\n    * Apollo\u5728\u7528\u6237\u64cd\u4f5c\u53d1\u5e03\u3001\u56de\u6eda\u52a8\u4f5c\u540e\u5b9e\u65f6\u901a\u77e5\u5230\u5e94\u7528\uff0c\u5e76\u4f7f\u6700\u65b0\u914d\u7f6e\u751f\u6548\n\n\u9879\u76ee\u521b\u5efa\u5b8c\uff0c\u9ed8\u8ba4\u6ca1\u6709\u5206\u914d\u914d\u7f6e\u7684\u7f16\u8f91\u548c\u53d1\u5e03\u6743\u9650\uff0c\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u8fdb\u884c\u6388\u6743\u3002\n\n1. \u70b9\u51fbapplication\u8fd9\u4e2anamespace\u7684\u6388\u6743\u6309\u94ae\n    * ![namespace-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-entry.png)\n\n2. \u5206\u914d\u4fee\u6539\u6743\u9650\n    * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n3. \u5206\u914d\u53d1\u5e03\u6743\u9650\n    * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n## 1.3 \u6dfb\u52a0\u914d\u7f6e\u9879\n\u7f16\u8f91\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u7f16\u8f91\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u65b0\u589e\u914d\u7f6e\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n### 1.3.1 \u901a\u8fc7\u8868\u683c\u6a21\u5f0f\u6dfb\u52a0\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n    * ![create-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-entry.png)\n\n2. \u8f93\u5165\u914d\u7f6e\u9879\n    * ![create-item-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-detail.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n    * ![item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/item-created.png)\n\n### 1.3.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\nApollo\u9664\u4e86\u652f\u6301\u8868\u683c\u6a21\u5f0f\uff0c\u9010\u4e2a\u6dfb\u52a0\u3001\u4fee\u6539\u914d\u7f6e\u5916\uff0c\u8fd8\u63d0\u4f9b\u6587\u672c\u6a21\u5f0f\u6279\u91cf\u6dfb\u52a0\u3001\u4fee\u6539\u3002\n\u8fd9\u4e2a\u5bf9\u4e8e\u4ece\u5df2\u6709\u7684properties\u6587\u4ef6\u8fc1\u79fb\u5c24\u5176\u6709\u7528\u3002\n\n1. \u5207\u6362\u5230\u6587\u672c\u7f16\u8f91\u6a21\u5f0f\n![text-mode-config-overview](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-overview.png)\n\n2. \u70b9\u51fb\u53f3\u4fa7\u7684\u4fee\u6539\u914d\u7f6e\u6309\u94ae\n![text-mode-config-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-entry.png)\n\n3. \u8f93\u5165\u914d\u7f6e\u9879\uff0c\u5e76\u70b9\u51fb\u63d0\u4ea4\u4fee\u6539\n![text-mode-config-submit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-submit.png)\n\n## 1.4 \u53d1\u5e03\u914d\u7f6e\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![publish-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-detail.png)\n\n## 1.5 \u5e94\u7528\u8bfb\u53d6\u914d\u7f6e\n\u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0c\u5e94\u7528\u5c31\u53ef\u4ee5\u901a\u8fc7Apollo\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u914d\u7f6e\u4e86\u3002\n\nApollo\u76ee\u524d\u63d0\u4f9bJava\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u70b9\u51fb[Java\u5ba2\u6237\u7aef\u4f7f\u7528\u6587\u6863](zh/usage/java-sdk-user-guide)\uff1a\n\n\u5982\u679c\u5e94\u7528\u4f7f\u7528\u4e86\u5176\u5b83\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95eeHttp\u63a5\u53e3\u83b7\u53d6\u914d\u7f6e\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003[\u5176\u5b83\u8bed\u8a00\u5ba2\u6237\u7aef\u63a5\u5165\u6307\u5357](zh/usage/other-language-client-user-guide)\n\n## 1.6 \u56de\u6eda\u5df2\u53d1\u5e03\u914d\u7f6e\n\n\u5982\u679c\u53d1\u73b0\u5df2\u53d1\u5e03\u7684\u914d\u7f6e\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u300e\u56de\u6eda\u300f\u6309\u94ae\u6765\u5c06\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u7684\u914d\u7f6e\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u53d1\u5e03\u7248\u672c\u3002\n\n\u8fd9\u91cc\u7684\u56de\u6eda\u673a\u5236\u7c7b\u4f3c\u4e8e\u53d1\u5e03\u7cfb\u7edf\uff0c\u53d1\u5e03\u7cfb\u7edf\u4e2d\u7684\u56de\u6eda\u64cd\u4f5c\u662f\u5c06\u90e8\u7f72\u5230\u673a\u5668\u4e0a\u7684\u5b89\u88c5\u5305\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u90e8\u7f72\u7684\u7248\u672c\uff0c\u4f46\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\u662f\u4e0d\u4f1a\u56de\u6eda\u7684\uff0c\u4ece\u800c\u5f00\u53d1\u53ef\u4ee5\u5728\u4fee\u590d\u4ee3\u7801\u540e\u91cd\u65b0\u53d1\u5e03\u3002\n\nApollo\u4e2d\u7684\u56de\u6eda\u4e5f\u662f\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u70b9\u51fb\u56de\u6eda\u540e\u662f\u5c06\u53d1\u5e03\u5230\u5ba2\u6237\u7aef\u7684\u914d\u7f6e\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u5df2\u53d1\u5e03\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u7684\u914d\u7f6e\u4f1a\u6062\u590d\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u4f46\u9875\u9762\u4e0a\u7f16\u8f91\u72b6\u6001\u7684\u914d\u7f6e\u662f\u4e0d\u4f1a\u56de\u6eda\u7684\uff0c\u4ece\u800c\u5f00\u53d1\u53ef\u4ee5\u5728\u4fee\u590d\u914d\u7f6e\u540e\u91cd\u65b0\u53d1\u5e03\u3002\n\n# \u4e8c\u3001\u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6307\u5357\n## 2.1 \u516c\u5171\u7ec4\u4ef6\u548c\u666e\u901a\u5e94\u7528\u7684\u533a\u522b\n\n\u516c\u5171\u7ec4\u4ef6\u662f\u6307\u90a3\u4e9b\u53d1\u5e03\u7ed9\u5176\u5b83\u5e94\u7528\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u6bd4\u5982CAT\u5ba2\u6237\u7aef\u3001Hermes Producer\u5ba2\u6237\u7aef\u7b49\u3002\n\n\u867d\u7136\u8fd9\u7c7b\u7ec4\u4ef6\u662f\u7531\u5176\u4ed6\u56e2\u961f\u5f00\u53d1\u3001\u7ef4\u62a4\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u662f\u5728\u4e1a\u52a1\u5b9e\u9645\u5e94\u7528\u5185\u7684\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5e94\u7528\u7684\u4e00\u90e8\u5206\u3002\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u7c7b\u7ec4\u4ef6\u6240\u7528\u5230\u7684\u914d\u7f6e\u7531\u539f\u59cb\u5f00\u53d1\u56e2\u961f\u7ef4\u62a4\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u9645\u5e94\u7528\u7684\u8fd0\u884c\u65f6\u3001\u73af\u5883\u5404\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5141\u8bb8\u5e94\u7528\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u80fd\u591f\u8986\u76d6\u516c\u5171\u7ec4\u4ef6\u7684\u90e8\u5206\u914d\u7f6e\u3002\n\n## 2.2 \u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6b65\u9aa4\n\n\u516c\u5171\u7ec4\u4ef6\u7684\u63a5\u5165\u6b65\u9aa4\uff0c\u548c\u666e\u901a\u5e94\u7528\u51e0\u4e4e\u4e00\u81f4\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u516c\u5171\u7ec4\u4ef6\u9700\u8981\u521b\u5efa\u81ea\u5df1\u552f\u4e00\u7684Namespace\u3002\n\n\u6240\u4ee5\uff0c\u9996\u5148\u6267\u884c\u666e\u901a\u5e94\u7528\u63a5\u5165\u6587\u6863\u4e2d\u7684\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff0c\u7136\u540e\u518d\u6309\u7167\u672c\u7ae0\u8282\u540e\u9762\u7684\u6b65\u9aa4\u64cd\u4f5c\u3002\n\n1. [\u521b\u5efa\u9879\u76ee](#_11-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE)\n2. [\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650](#_121-%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90)\n\n### 2.2.1 \u521b\u5efaNamespace\n\n\u521b\u5efaNamespace\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0Namespace\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u6dfb\u52a0Namespace\n    * ![create-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace.png)\n\n2. \u70b9\u51fb\u201c\u521b\u5efa\u65b0\u7684Namespace\u201d\n    * ![create-namespace-select-type](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-select-type.png)\n\n3. \u8f93\u5165\u516c\u5171\u7ec4\u4ef6\u7684Namespace\u540d\u79f0\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fNamespace\u540d\u79f0\u5168\u5c40\u552f\u4e00\n    * Apollo\u4f1a\u9ed8\u8ba4\u628a\u90e8\u95e8\u4ee3\u53f7\u6dfb\u52a0\u5728\u6700\u524d\u9762\n    * ![create-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-detail.png)\n\n4. \u70b9\u51fb\u63d0\u4ea4\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u5173\u8054Namespace\u9875\u9762\n    * \u9996\u5148\uff0c\u9009\u4e2d\u6240\u6709\u9700\u8981\u6709\u8fd9\u4e2aNamespace\u7684\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u4e00\u822c\u5efa\u8bae\u5168\u9009\n    * \u5176\u6b21\uff0c\u9009\u4e2d\u521a\u521a\u521b\u5efa\u7684namespace\n    * \u6700\u540e\uff0c\u70b9\u51fb\u63d0\u4ea4\n    * ![link-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-namespace-detail.png)\n\n5. \u5173\u8054\u6210\u529f\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230Namespace\u6743\u9650\u7ba1\u7406\u9875\u9762\n    1. \u5206\u914d\u4fee\u6539\u6743\u9650\n        * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n    2. \u5206\u914d\u53d1\u5e03\u6743\u9650\n        * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n6. \u70b9\u51fb\u201c\u8fd4\u56de\u201d\u56de\u5230\u9879\u76ee\u9875\u9762\n\n### 2.2.2 \u6dfb\u52a0\u914d\u7f6e\u9879\n\n\u7f16\u8f91\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u7f16\u8f91\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u65b0\u589e\u914d\u7f6e\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n#### 2.2.2.1 \u901a\u8fc7\u8868\u683c\u6a21\u5f0f\u6dfb\u52a0\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n![public-namespace-edit-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item-entry.png)\n\n2. \u8f93\u5165\u914d\u7f6e\u9879\n![public-namespace-edit-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n![public-namespace-item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-item-created.png)\n\n#### 2.2.2.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\n\u8fd9\u90e8\u5206\u548c\u666e\u901a\u5e94\u7528\u4e00\u81f4\uff0c\u5177\u4f53\u6b65\u9aa4\u8bf7\u53c2\u89c1[1.3.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91](#_132-%E9%80%9A%E8%BF%87%E6%96%87%E6%9C%AC%E6%A8%A1%E5%BC%8F%E7%BC%96%E8%BE%91)\u3002\n\n### 2.2.3 \u53d1\u5e03\u914d\u7f6e\n\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![public-namespace-publish-items-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![public-namespace-publish-items](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items.png)\n\n### 2.2.4 \u5e94\u7528\u8bfb\u53d6\u914d\u7f6e\n\n\u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0c\u5e94\u7528\u5c31\u53ef\u4ee5\u901a\u8fc7Apollo\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u914d\u7f6e\u4e86\u3002\n\nApollo\u76ee\u524d\u63d0\u4f9bJava\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u70b9\u51fb[Java\u5ba2\u6237\u7aef\u4f7f\u7528\u6587\u6863](zh/usage/java-sdk-user-guide)\uff1a\n\n\u5982\u679c\u5e94\u7528\u4f7f\u7528\u4e86\u5176\u5b83\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95eeHttp\u63a5\u53e3\u83b7\u53d6\u914d\u7f6e\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003[\u5176\u5b83\u8bed\u8a00\u5ba2\u6237\u7aef\u63a5\u5165\u6307\u5357](zh/usage/other-language-client-user-guide)\n\n\u5bf9\u4e8e\u516c\u5171\u7ec4\u4ef6\u7684\u914d\u7f6e\u8bfb\u53d6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u6587\u6863\u4e2d\u7684\u201c\u83b7\u53d6\u516c\u5171Namespace\u7684\u914d\u7f6e\u201d\u90e8\u5206\u3002\n\n## 2.3 \u5e94\u7528\u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u914d\u7f6e\u6b65\u9aa4\n\u524d\u9762\u63d0\u5230\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u516c\u5171\u7ec4\u4ef6\u6240\u7528\u5230\u7684\u914d\u7f6e\u7531\u539f\u59cb\u5f00\u53d1\u56e2\u961f\u7ef4\u62a4\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u9645\u5e94\u7528\u7684\u8fd0\u884c\u65f6\u3001\u73af\u5883\u5404\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5141\u8bb8\u5e94\u7528\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u80fd\u591f\u8986\u76d6\u516c\u5171\u7ec4\u4ef6\u7684\u90e8\u5206\u914d\u7f6e\u3002\n\n\u8fd9\u91cc\u5c31\u8bb2\u4e00\u4e0b\u5e94\u7528\u5982\u4f55\u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u7684\u914d\u7f6e\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u5047\u8bbeapollo-portal\u5e94\u7528\u4f7f\u7528\u4e86hermes producer\u5ba2\u6237\u7aef\uff0c\u5e76\u4e14\u5e0c\u671b\u8c03\u6574hermes\u7684\u6279\u91cf\u53d1\u9001\u5927\u5c0f\u3002\n\n### 2.3.1 \u5173\u8054\u516c\u5171\u7ec4\u4ef6Namespace\n\n1. \u8fdb\u5165\u4f7f\u7528\u516c\u5171\u7ec4\u4ef6\u7684\u5e94\u7528\u9879\u76ee\u9996\u9875\uff0c\u70b9\u51fb\u5de6\u4fa7\u7684\u6dfb\u52a0Namespace\u6309\u94ae\n    * \u6240\u4ee5\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165apollo-portal\u7684\u9996\u9875\u3002\n    * \uff08\u6dfb\u52a0Namespace\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0Namespace\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\uff09\n    * ![link-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace-entry.png)\n\n2. \u627e\u5230hermes producer\u7684namespace\uff0c\u5e76\u9009\u62e9\u9700\u8981\u5173\u8054\u5230\u54ea\u4e9b\u73af\u5883\u548c\u96c6\u7fa4\n![link-public-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace.png)\n\n3. \u5173\u8054\u6210\u529f\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230Namespace\u6743\u9650\u7ba1\u7406\u9875\u9762\n    1. \u5206\u914d\u4fee\u6539\u6743\u9650\n![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n    2. \u5206\u914d\u53d1\u5e03\u6743\u9650\n![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n4. \u70b9\u51fb\u201c\u8fd4\u56de\u201d\u56de\u5230\u9879\u76ee\u9875\u9762\n\n### 2.3.2 \u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n![override-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-entry.png)\n\n2. \u8f93\u5165\u8981\u8986\u76d6\u7684\u914d\u7f6e\u9879\n![override-public-namespace-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n![override-public-namespace-item-done](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-done.png)\n\n### 2.3.3 \u53d1\u5e03\u914d\u7f6e\n\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![override-public-namespace-item-publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![override-public-namespace-item-publish](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish.png)\n\n3. \u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0chermes producer\u5ba2\u6237\u7aef\u5728apollo-portal\u5e94\u7528\u91cc\u9762\u8fd0\u884c\u65f6\u8bfb\u53d6\u5230\u7684sender.batchSize\u7684\u503c\u5c31\u662f1000\u3002\n\n# \u4e09\u3001\u96c6\u7fa4\u72ec\u7acb\u914d\u7f6e\u8bf4\u660e\n\n\u5728\u6709\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u6709\u9700\u6c42\u5bf9\u4e0d\u540c\u7684\u96c6\u7fa4\u505a\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u90e8\u7f72\u5728A\u673a\u623f\u7684\u5e94\u7528\u8fde\u63a5\u7684es\u670d\u52a1\u5668\u5730\u5740\u548c\u90e8\u7f72\u5728B\u673a\u623f\u7684\u5e94\u7528\u8fde\u63a5\u7684es\u670d\u52a1\u5668\u5730\u5740\u4e0d\u4e00\u6837\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728Apollo\u521b\u5efa\u4e0d\u540c\u7684\u96c6\u7fa4\u6765\u89e3\u51b3\u3002\n\n## 3.1 \u521b\u5efa\u96c6\u7fa4\n\n\u521b\u5efa\u96c6\u7fa4\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0\u96c6\u7fa4\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u201c\u6dfb\u52a0\u96c6\u7fa4\u201d\u6309\u94ae\n    * ![create-cluster](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster.png)\n\n2. \u8f93\u5165\u96c6\u7fa4\u540d\u79f0\uff0c\u9009\u62e9\u73af\u5883\u5e76\u63d0\u4ea4\n    * ![create-cluster-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster-detail.png)\n\n3. \u5207\u6362\u5230\u5bf9\u5e94\u7684\u96c6\u7fa4\uff0c\u4fee\u6539\u914d\u7f6e\u5e76\u53d1\u5e03\u5373\u53ef\n    * ![config-in-cluster-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/cluster-created.png)\n\n4. \u901a\u8fc7\u4e0a\u8ff0\u914d\u7f6e\uff0c\u90e8\u7f72\u5728SHAJQ\u673a\u623f\u7684\u5e94\u7528\u5c31\u4f1a\u8bfb\u5230SHAJQ\u96c6\u7fa4\u4e0b\u7684\u914d\u7f6e\n\n5. \u5982\u679c\u5e94\u7528\u8fd8\u5728\u5176\u5b83\u673a\u623f\u90e8\u7f72\u4e86\u5e94\u7528\uff0c\u90a3\u4e48\u5728\u4e0a\u8ff0\u7684\u914d\u7f6e\u4e0b\uff0c\u4f1a\u8bfb\u5230default\u96c6\u7fa4\u4e0b\u7684\u914d\u7f6e\u3002\n\n# \u56db\u3001\u591a\u4e2aAppId\u4f7f\u7528\u540c\u4e00\u4efd\u914d\u7f6e\n\n\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5c3d\u7ba1\u5e94\u7528\u672c\u8eab\u4e0d\u662f\u516c\u5171\u7ec4\u4ef6\uff0c\u4f46\u8fd8\u662f\u9700\u8981\u5728\u591a\u4e2aAppId\u4e4b\u95f4\u5171\u7528\u540c\u4e00\u4efd\u914d\u7f6e\uff0c\u6bd4\u5982\u540c\u4e00\u4e2a\u4ea7\u54c1\u7684\u4e0d\u540c\u9879\u76ee\uff1aXX-Web, XX-Service, XX-Job\u7b49\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u679c\u5e0c\u671b\u5b9e\u73b0\u591a\u4e2aAppId\u4f7f\u7528\u540c\u4e00\u4efd\u914d\u7f6e\u7684\u8bdd\uff0c\u57fa\u672c\u6982\u5ff5\u548c\u516c\u5171\u7ec4\u4ef6\u7684\u914d\u7f6e\u662f\u4e00\u81f4\u7684\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5728\u5176\u4e2d\u4e00\u4e2aAppId\u4e0b\u521b\u5efa\u4e00\u4e2anamespace\uff0c\u5199\u5165\u516c\u5171\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u5728\u5404\u4e2a\u9879\u76ee\u4e2d\u8bfb\u53d6\u8be5namespace\u7684\u914d\u7f6e\u5373\u53ef\u3002\n\n\u5982\u679c\u67d0\u4e2aAppId\u9700\u8981\u8986\u76d6\u516c\u5171\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u90a3\u4e48\u5728\u8be5AppId\u4e0b\u5173\u8054\u516c\u5171\u7684namespace\u5e76\u5199\u5165\u9700\u8981\u8986\u76d6\u7684\u914d\u7f6e\u5373\u53ef\u3002\n\n\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[\u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6307\u5357](#%e4%ba%8c%e3%80%81%e5%85%ac%e5%85%b1%e7%bb%84%e4%bb%b6%e6%8e%a5%e5%85%a5%e6%8c%87%e5%8d%97)\u3002\n\n# \u4e94\u3001\u7070\u5ea6\u53d1\u5e03\u4f7f\u7528\u6307\u5357\n\u901a\u8fc7\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff1a\n\n1. \u5bf9\u4e8e\u4e00\u4e9b\u5bf9\u7a0b\u5e8f\u6709\u6bd4\u8f83\u5927\u5f71\u54cd\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u5148\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5b9e\u4f8b\u751f\u6548\uff0c\u89c2\u5bdf\u4e00\u6bb5\u65f6\u95f4\u6ca1\u95ee\u9898\u540e\u518d\u5168\u91cf\u53d1\u5e03\u914d\u7f6e\u3002\n2. \u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u8c03\u4f18\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u6765\u5b9e\u73b0A/B\u6d4b\u8bd5\u3002\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u5e94\u7528\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u4e0d\u65ad\u8c03\u6574\u3001\u6d4b\u8bc4\u4e00\u6bb5\u65f6\u95f4\u540e\u627e\u51fa\u8f83\u4f18\u7684\u914d\u7f6e\u518d\u5168\u91cf\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u4e0b\u9762\u5c06\u7ed3\u5408\u4e00\u4e2a\u5b9e\u9645\u4f8b\u5b50\u6765\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u3002\n\n## 5.1 \u573a\u666f\u4ecb\u7ecd\n100004458(apollo-demo)\u9879\u76ee\u6709\u4e24\u4e2a\u5ba2\u6237\u7aef\uff1a\n\n1. 10.32.21.19\n2. 10.32.21.22\n\n![initial-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-instance-list.png)\n\n**\u7070\u5ea6\u76ee\u6807\uff1a**\n\n* \u5f53\u524d\u6709\u4e00\u4e2a\u914d\u7f6etimeout=2000\uff0c\u6211\u4eec\u5e0c\u671b\u5bf910.32.21.22\u7070\u5ea6\u53d1\u5e03timeout=3000\uff0c\u5bf910.32.21.19\u4ecd\u7136\u662ftimeout=2000\u3002\n\n![initial-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-config.png)\n\n## 5.2 \u521b\u5efa\u7070\u5ea6\n\u9996\u5148\u70b9\u51fbapplication namespace\u53f3\u4e0a\u89d2\u7684`\u521b\u5efa\u7070\u5ea6`\u6309\u94ae\u3002\n\n![create-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/create-gray-release.png)\n\n\u70b9\u51fb\u786e\u5b9a\u540e\uff0c\u7070\u5ea6\u7248\u672c\u5c31\u521b\u5efa\u6210\u529f\u4e86\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u5207\u6362\u5230`\u7070\u5ea6\u7248\u672c`Tab\u3002\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-gray-release-tab.png)\n\n## 5.3 \u7070\u5ea6\u914d\u7f6e\n\u70b9\u51fb`\u4e3b\u7248\u672c\u7684\u914d\u7f6e`\u4e2d\uff0ctimeout\u914d\u7f6e\u6700\u53f3\u4fa7\u7684`\u5bf9\u6b64\u914d\u7f6e\u7070\u5ea6`\u6309\u94ae\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/edit-gray-release-config.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d\u586b\u5165\u8981\u7070\u5ea6\u7684\u503c\uff1a3000\uff0c\u70b9\u51fb\u63d0\u4ea4\u3002\n\n![submit-gray-release-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/submit-gray-release-config.png)\n\n![gray-release-config-submitted](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-config-submitted.png)\n\n## 5.4 \u914d\u7f6e\u7070\u5ea6\u89c4\u5219\n\u5207\u6362\u5230`\u7070\u5ea6\u89c4\u5219`Tab\uff0c\u70b9\u51fb`\u65b0\u589e\u89c4\u5219`\u6309\u94ae\n\n![new-gray-release-rule](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/new-gray-release-rule.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d`\u7070\u5ea6\u7684IP`\u4e0b\u62c9\u6846\u4f1a\u9ed8\u8ba4\u5c55\u793a\u5f53\u524d\u4f7f\u7528\u914d\u7f6e\u7684\u673a\u5668\u5217\u8868\uff0c\u9009\u62e9\u6211\u4eec\u8981\u7070\u5ea6\u7684IP\u3002\n\n![select-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/select-gray-release-ip.png)\n\n![gray-release-ip-selected](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-ip-selected.png)\n\n\u9664\u4e86IP\u7ef4\u5ea6\u4ee5\u5916\uff0c\u4ece2.0.0\u7248\u672c\u5f00\u59cb\u8fd8\u652f\u6301\u901a\u8fc7label\u6765\u6807\u8bc6\u7070\u5ea6\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u9002\u7528\u4e8eIP\u4e0d\u56fa\u5b9a\u7684\u573a\u666f\u5982`Kubernetes`\u3002\n\n\u624b\u52a8\u8f93\u5165\u60f3\u8981\u8bbe\u7f6e\u7684label\u6807\u7b7e\uff0c\u8f93\u5165\u5b8c\u6210\u540e\u70b9\u51fb\u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\u3002\n\n![manual-input-gray-release-label](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label.png)\n\n![manual-input-gray-release-label-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label2.png)\n\n![gray-release-rule-saved](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-rule-saved.png)\n\n\u4e0a\u8ff0\u89c4\u5219\u914d\u7f6e\u540e\uff0c\u7070\u5ea6\u914d\u7f6e\u4f1a\u5bf9AppId\u4e3a`100004458`\uff0cIP\u4e3a`10.32.21.22`\u6216\u8005`Label`\u6807\u8bb0\u4e3a`myLabel`\u6216`appLabel`\u7684\u5b9e\u4f8b\u751f\u6548\u3002\n\n> \u5173\u4e8e`Label`\u5982\u4f55\u6807\u8bb0\uff0c\u53ef\u4ee5\u53c2\u8003[ApolloLabel](zh/usage/java-sdk-user-guide?id=_1247-apollolabel)\u7684\u914d\u7f6e\u8bf4\u660e\u3002\n\n\u5982\u679c\u4e0b\u62c9\u6846\u4e2d\u6ca1\u627e\u5230\u9700\u8981\u7684IP\uff0c\u8bf4\u660e\u673a\u5668\u8fd8\u6ca1\u4eceApollo\u53d6\u8fc7\u914d\u7f6e\uff0c\u53ef\u4ee5\u70b9\u51fb\u624b\u52a8\u8f93\u5165IP\u6765\u8f93\u5165\uff0c\u8f93\u5165\u5b8c\u540e\u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\n\n![manual-input-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip.png)\n\n![manual-input-gray-release-ip-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip-2.png)\n\n>\u6ce8\uff1a\u5bf9\u4e8e\u516c\u5171Namespace\u7684\u7070\u5ea6\u89c4\u5219\uff0c\u9700\u8981\u5148\u6307\u5b9a\u8981\u7070\u5ea6\u7684appId\uff0c\u7136\u540e\u518d\u9009\u62e9IP\u548cLabel\u3002\n\n## 5.5 \u7070\u5ea6\u53d1\u5e03\n\u914d\u7f6e\u89c4\u5219\u5df2\u7ecf\u751f\u6548\uff0c\u4e0d\u8fc7\u7070\u5ea6\u914d\u7f6e\u8fd8\u6ca1\u6709\u53d1\u5e03\u3002\u5207\u6362\u5230`\u914d\u7f6e`Tab\u3002\n\n\u518d\u6b21\u68c0\u67e5\u7070\u5ea6\u7684\u914d\u7f6e\u90e8\u5206\uff0c\u5982\u679c\u6ca1\u6709\u95ee\u9898\uff0c\u70b9\u51fb`\u7070\u5ea6\u53d1\u5e03`\u3002\n\n![prepare-to-do-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-do-gray-release.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d\u53ef\u4ee5\u770b\u5230\u4e3b\u7248\u672c\u7684\u503c\u662f2000\uff0c\u7070\u5ea6\u7248\u672c\u5373\u5c06\u53d1\u5e03\u7684\u503c\u662f3000\u3002\u586b\u5165\u5176\u5b83\u4fe1\u606f\u540e\uff0c\u70b9\u51fb\u53d1\u5e03\u3002\n\n![gray-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-confirm-dialog.png)\n\n\u53d1\u5e03\u540e\uff0c\u5207\u6362\u5230`\u7070\u5ea6\u5b9e\u4f8b\u5217\u8868`Tab\uff0c\u5c31\u80fd\u770b\u523010.32.21.22\u5df2\u7ecf\u4f7f\u7528\u4e86\u7070\u5ea6\u53d1\u5e03\u7684\u503c\u3002\n\n![gray-release-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-instance-list.png)\n\n\u5207\u6362\u5230`\u4e3b\u7248\u672c`\u7684`\u5b9e\u4f8b\u5217\u8868`\uff0c\u4f1a\u770b\u5230\u4e3b\u7248\u672c\u914d\u7f6e\u53ea\u670910.32.21.19\u5728\u4f7f\u7528\u4e86\u3002\n\n![master-branch-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list.png)\n\n\u540e\u9762\u53ef\u4ee5\u7ee7\u7eed\u914d\u7f6e\u7684\u4fee\u6539\u6216\u89c4\u5219\u7684\u66f4\u6539\u3002\u914d\u7f6e\u7684\u4fee\u6539\u9700\u8981\u70b9\u51fb\u7070\u5ea6\u53d1\u5e03\u540e\u624d\u4f1a\u751f\u6548\uff0c\u89c4\u5219\u7684\u4fee\u6539\u5728\u89c4\u5219\u70b9\u51fb\u5b8c\u6210\u540e\u5c31\u4f1a\u5b9e\u65f6\u751f\u6548\u3002\n\n## 5.6 \u5168\u91cf\u53d1\u5e03\n\u5982\u679c\u7070\u5ea6\u7684\u914d\u7f6e\u6d4b\u8bd5\u4e0b\u6765\u6bd4\u8f83\u7406\u60f3\uff0c\u7b26\u5408\u9884\u671f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u64cd\u4f5c`\u5168\u91cf\u53d1\u5e03`\u3002\n\n\u5168\u91cf\u53d1\u5e03\u7684\u6548\u679c\u662f\uff1a\n\n1. \u7070\u5ea6\u7248\u672c\u7684\u914d\u7f6e\u4f1a\u5408\u5e76\u56de\u4e3b\u7248\u672c\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f\u4e3b\u7248\u672c\u7684timeout\u4f1a\u88ab\u66f4\u65b0\u62103000\n2. \u4e3b\u7248\u672c\u7684\u914d\u7f6e\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e00\u6b21\u53d1\u5e03\n3. \u5728\u5168\u91cf\u53d1\u5e03\u9875\u9762\uff0c\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u7559\u5f53\u524d\u7070\u5ea6\u7248\u672c\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u4fdd\u7559\u3002\n\n![prepare-to-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-full-release.png)\n\n![full-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog.png)\n\n![full-release-confirm-dialog-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog-2.png)\n\n\u6211\u9009\u62e9\u4e86\u4e0d\u4fdd\u7559\u7070\u5ea6\u7248\u672c\uff0c\u6240\u4ee5\u53d1\u5e03\u5b8c\u7684\u6548\u679c\u5c31\u662f\u4e3b\u7248\u672c\u7684\u914d\u7f6e\u66f4\u65b0\u3001\u7070\u5ea6\u7248\u672c\u5220\u9664\u3002\u70b9\u51fb\u4e3b\u7248\u672c\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u53ef\u4ee5\u770b\u523010.32.21.22\u548c10.32.21.19\u90fd\u4f7f\u7528\u4e86\u4e3b\u7248\u672c\u6700\u65b0\u7684\u914d\u7f6e\u3002\n\n![master-branch-instance-list-after-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list-after-full-release.png)\n\n## 5.7 \u653e\u5f03\u7070\u5ea6\n\u5982\u679c\u7070\u5ea6\u7248\u672c\u4e0d\u7406\u60f3\u6216\u8005\u4e0d\u9700\u8981\u4e86\uff0c\u53ef\u4ee5\u70b9\u51fb`\u653e\u5f03\u7070\u5ea6`\u3002\n\n![abandon-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/abandon-gray-release.png)\n\n## 5.8 \u53d1\u5e03\u5386\u53f2\n\u70b9\u51fb\u4e3b\u7248\u672c\u7684`\u53d1\u5e03\u5386\u53f2`\u6309\u94ae\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u524dnamespace\u7684\u4e3b\u7248\u672c\u4ee5\u53ca\u7070\u5ea6\u7248\u672c\u7684\u53d1\u5e03\u5386\u53f2\u3002\n\n![view-release-history](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history.png)\n\n![view-release-history-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history-detail.png)\n\n# \u516d\u3001\u5176\u5b83\u529f\u80fd\u914d\u7f6e\n\n## 6.1 \u914d\u7f6e\u67e5\u770b\u6743\u9650\n\n\u4ece1.1.0\u7248\u672c\u5f00\u59cb\uff0capollo-portal\u589e\u52a0\u4e86\u67e5\u770b\u6743\u9650\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u652f\u6301\u914d\u7f6e\u67d0\u4e2a\u73af\u5883\u53ea\u5141\u8bb8\u9879\u76ee\u6210\u5458\u67e5\u770b\u79c1\u6709Namespace\u7684\u914d\u7f6e\u3002\n\n\u8fd9\u91cc\u7684\u9879\u76ee\u6210\u5458\u662f\u6307\uff1a\n1. \u9879\u76ee\u7684\u7ba1\u7406\u5458\n2. \u5177\u5907\u8be5\u79c1\u6709Namespace\u5728\u8be5\u73af\u5883\u4e0b\u7684\u4fee\u6539\u6216\u53d1\u5e03\u6743\u9650\n\n\u914d\u7f6e\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u7528\u8d85\u7ea7\u7ba1\u7406\u5458\u8d26\u53f7\u767b\u5f55\u540e\uff0c\u8fdb\u5165`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u53c2\u6570`\u9875\u9762\u65b0\u589e\u6216\u4fee\u6539`configView.memberOnly.envs`\u914d\u7f6e\u9879\u5373\u53ef\u3002\n\n![show-all-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/show-all-config.png)\n\n![configView.memberOnly.envs](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/configure-view-permissions.png)\n\n## 6.2 \u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5\n\nApollo\u4ece1.6.0\u7248\u672c\u5f00\u59cb\u589e\u52a0\u8bbf\u95ee\u5bc6\u94a5\u673a\u5236\uff0c\u4ece\u800c\u53ea\u6709\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u8bbf\u95ee\u654f\u611f\u914d\u7f6e\u3002\u5982\u679c\u5e94\u7528\u5f00\u542f\u4e86\u8bbf\u95ee\u5bc6\u94a5\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u914d\u7f6e\u5bc6\u94a5\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u914d\u7f6e\u3002\n\n1. \u9879\u76ee\u7ba1\u7406\u5458\u6253\u5f00\u7ba1\u7406\u5bc6\u94a5\u9875\u9762\n![\u7ba1\u7406\u5bc6\u94a5\u5165\u53e3](https://user-images.githubusercontent.com/837658/94990081-f4d3cd80-05ab-11eb-9470-fed5ec6de92e.png)\n\n2. \u4e3a\u9879\u76ee\u7684\u6bcf\u4e2a\u73af\u5883\u751f\u6210\u8bbf\u95ee\u5bc6\u94a5\uff0c\u6ce8\u610f\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u5efa\u8bae\u5728\u5ba2\u6237\u7aef\u90fd\u914d\u7f6e\u5b8c\u6210\u540e\u518d\u5f00\u542f\n![\u5bc6\u94a5\u914d\u7f6e\u9875\u9762](https://user-images.githubusercontent.com/837658/94990150-788dba00-05ac-11eb-9a12-727fdb872e42.png)\n\n3. \u5ba2\u6237\u7aef\u4fa7[\u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5](zh/usage/java-sdk-user-guide#_1244-\u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5)\n\n# \u4e03\u3001\u6700\u4f73\u5b9e\u8df5\n\n## 7.1 \u5b89\u5168\u76f8\u5173\n\n\u914d\u7f6e\u4e2d\u5fc3\u4f5c\u4e3a\u57fa\u7840\u670d\u52a1\uff0c\u5b58\u50a8\u7740\u516c\u53f8\u975e\u5e38\u91cd\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u6240\u4ee5\u5b89\u5168\u56e0\u7d20\u9700\u8981\u5927\u5bb6\u91cd\u70b9\u5173\u6ce8\uff0c\u4e0b\u9762\u5217\u4e3e\u4e86\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u5206\u4eab\u81ea\u5df1\u7684\u5b9e\u8df5\u6848\u4f8b\u3002\n\n### 7.1.1 \u8ba4\u8bc1\n\n\u5efa\u8bae\u63a5\u5165\u516c\u53f8\u7edf\u4e00\u7684\u8eab\u4efd\u8ba4\u8bc1\u7cfb\u7edf\uff0c\u5982 SSO\u3001LDAP \u7b49\uff0c\u63a5\u5165\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003[Portal \u5b9e\u73b0\u7528\u6237\u767b\u5f55\u529f\u80fd](zh/development/portal-how-to-implement-user-login-function)\n\n> \u5982\u679c\u4f7f\u7528Apollo\u63d0\u4f9b\u7684Spring Security\u7b80\u5355\u8ba4\u8bc1\uff0c\u52a1\u5fc5\u8bb0\u5f97\u8981\u4fee\u6539\u8d85\u7ea7\u7ba1\u7406\u5458apollo\u7684\u5bc6\u7801\n\n### 7.1.2 \u6388\u6743\n\nApollo \u652f\u6301\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u63a7\u5236\uff0c\u8bf7\u52a1\u5fc5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u505a\u597d\u6743\u9650\u63a7\u5236\uff1a\n1. [\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650](#_121-\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650)\n    * Apollo \u9ed8\u8ba4\u5141\u8bb8\u6240\u6709\u767b\u5f55\u7528\u6237\u521b\u5efa\u9879\u76ee\uff0c\u5982\u679c\u53ea\u5141\u8bb8\u90e8\u5206\u7528\u6237\u521b\u5efa\u9879\u76ee\uff0c\u53ef\u4ee5\u5f00\u542f[\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236](zh/deployment/distributed-deployment-guide?id=_3110-rolecreate-applicationenabled-\u662f\u5426\u5f00\u542f\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236)\n2. [\u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650](#_122-\u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650)\n    * \u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650\u652f\u6301\u6309\u73af\u5883\u914d\u7f6e\uff0c\u6bd4\u5982\u5f00\u53d1\u73af\u5883\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u81ea\u884c\u5b8c\u6210\u914d\u7f6e\u7f16\u8f91\u548c\u53d1\u5e03\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u751f\u4ea7\u73af\u5883\u53d1\u5e03\u6743\u9650\u4ea4\u7531\u6d4b\u8bd5\u6216\u8fd0\u7ef4\u4eba\u5458\n    * \u751f\u4ea7\u73af\u5883\u5efa\u8bae\u540c\u65f6\u5f00\u542f[\u53d1\u5e03\u5ba1\u6838](zh/deployment/distributed-deployment-guide?id=_322-namespacelockswitch-\u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173\uff0c\u7528\u4e8e\u53d1\u5e03\u5ba1\u6838)\uff0c\u4ece\u800c\u63a7\u5236\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u7531\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u4eba\u53d1\u5e03\uff0c\u786e\u4fdd\u914d\u7f6e\u4fee\u6539\u5f97\u5230\u5145\u5206\u68c0\u67e5\n3. [\u914d\u7f6e\u67e5\u770b\u6743\u9650](#_61-\u914d\u7f6e\u67e5\u770b\u6743\u9650)\n    * \u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u73af\u5883\u53ea\u5141\u8bb8\u9879\u76ee\u6210\u5458\u67e5\u770b\u79c1\u6709Namespace\u7684\u914d\u7f6e\uff0c\u4ece\u800c\u907f\u514d\u654f\u611f\u914d\u7f6e\u6cc4\u9732\uff0c\u5982\u751f\u4ea7\u73af\u5883\n\n### 7.1.3 \u7cfb\u7edf\u8bbf\u95ee\n\n\u9664\u4e86\u7528\u6237\u6743\u9650\uff0c\u5728\u7cfb\u7edf\u8bbf\u95ee\u4e0a\u4e5f\u9700\u8981\u52a0\u4ee5\u8003\u8651\uff1a\n\n1. `apollo-configservice`\u548c`apollo-adminservice`\u662f\u57fa\u4e8e\u5185\u7f51\u53ef\u4fe1\u7f51\u7edc\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u7981\u6b62`apollo-configservice`\u548c`apollo-adminservice`\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51\n2. \u5bf9\u654f\u611f\u914d\u7f6e\u53ef\u4ee5\u8003\u8651\u5f00\u542f[\u8bbf\u95ee\u79d8\u94a5](#_62-%e9%85%8d%e7%bd%ae%e8%ae%bf%e9%97%ae%e5%af%86%e9%92%a5)\uff0c\u4ece\u800c\u53ea\u6709\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u8bbf\u95ee\u654f\u611f\u914d\u7f6e\n3. 1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\u53ef\u4ee5\u8003\u8651\u4e3a`apollo-adminservice`\u5f00\u542f[\u8bbf\u95ee\u63a7\u5236](zh/deployment/distributed-deployment-guide?id=_326-admin-serviceaccesscontrolenabled-\u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236)\uff0c\u4ece\u800c\u53ea\u6709[\u53d7\u63a7\u7684](zh/deployment/distributed-deployment-guide?id=_3112-admin-serviceaccesstokens-\u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access-token)`apollo-portal`\u624d\u80fd\u8bbf\u95ee\u5bf9\u5e94\u63a5\u53e3\uff0c\u589e\u5f3a\u5b89\u5168\u6027\n"], "fixing_code": ["Changes by Version\n==================\nRelease Notes.\n\nApollo 2.1.0\n\n------------------\n* [fix:occur a 400 error request when openapi key's parameter contain \"a[0]\"](https://github.com/apolloconfig/apollo/pull/4424)\n* [Upgrade mysql-connector-java version to fix possible transaction rollback failure issue](https://github.com/apolloconfig/apollo/pull/4425)\n* [Remove database migration tool Flyway](https://github.com/apolloconfig/apollo/pull/4361)\n* [Optimize Spring-Security Firewall Deny Request Response 400](https://github.com/apolloconfig/apollo/pull/4428)\n* [Optimize the UI experience of open platform authorization management](https://github.com/apolloconfig/apollo/pull/4436)\n* [Allow users to associate multiple public namespaces at a time](https://github.com/apolloconfig/apollo/pull/4437)\n* [Move apollo-demo, scripts/docker-quick-start and scripts/apollo-on-kubernetes out of main repository](https://github.com/apolloconfig/apollo/pull/4440)\n* [Add search key when comparing Configuration items](https://github.com/apolloconfig/apollo/pull/4459)\n* [A user-friendly user management page for apollo portal](https://github.com/apolloconfig/apollo/pull/4464)\n* [Optimize performance of '/apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces' interface queries](https://github.com/apolloconfig/apollo/pull/4473)\n* [Add a new API to load items with pagination](https://github.com/apolloconfig/apollo/pull/4468)\n* [fix(#4474):'openjdk:8-jre-alpine' potentially causing wrong number of cpu cores](https://github.com/apolloconfig/apollo/pull/4475)\n* [Switching spring-session serialization mode to json for compatibility with spring-security version updates](https://github.com/apolloconfig/apollo/pull/4484)\n* [fix(#4483):Fixed overwrite JSON type configuration being empty](https://github.com/apolloconfig/apollo/pull/4486)\n* [Allow users to delete AppNamespace](https://github.com/apolloconfig/apollo/pull/4499)\n* [fix the deleted at timestamp issue](https://github.com/apolloconfig/apollo/pull/4493)\n* [add configuration processor for portal developers](https://github.com/apolloconfig/apollo/pull/4521)\n* [Add a potential json value check feature](https://github.com/apolloconfig/apollo/pull/4519)\n* [Add index for table ReleaseHistory](https://github.com/apolloconfig/apollo/pull/4550)\n* [Add basic type check for Item value](https://github.com/apolloconfig/apollo/pull/4542)\n* [add an option to custom oidc userDisplayName](https://github.com/apolloconfig/apollo/pull/4507)\n* [fix openapi item with url illegalKey 400 error](https://github.com/apolloconfig/apollo/pull/4549)\n* [fix the exception occurred when publish/rollback namespaces with grayrelease](https://github.com/apolloconfig/apollo/pull/4564)\n* [fix create namespace with single dot 500 error](https://github.com/apolloconfig/apollo/pull/4568)\n* [Add nodejs client sdk and fix doc](https://github.com/apolloconfig/apollo/pull/4590)\n* [Move apollo-core, apollo-client, apollo-mockserver, apollo-openapi and apollo-client-config-data to apollo-java repo](https://github.com/apolloconfig/apollo/pull/4594)\n* [fix get the openapi interface that contains namespace information for deleted items](https://github.com/apolloconfig/apollo/pull/4596)\n* [A user-friendly config management page for apollo portal](https://github.com/apolloconfig/apollo/pull/4592)\n* [feat: support use database as a registry](https://github.com/apolloconfig/apollo/pull/4595)\n* [fix doc bug](https://github.com/apolloconfig/apollo/pull/4579)\n* [fix Grayscale release Item Value length limit can not be synchronized with its main version](https://github.com/apolloconfig/apollo/pull/4622)\n* [feat: use can change spring.profiles.active's value without rebuild project](https://github.com/apolloconfig/apollo/pull/4616)\n* [refactor: remove app.properties and move some config file's location](https://github.com/apolloconfig/apollo/pull/4637)\n* [Fix the problem of deleting blank items appear at the end](https://github.com/apolloconfig/apollo/pull/4662)\n* [Enable login authentication for eureka](https://github.com/apolloconfig/apollo/pull/4663)\n\n------------------\nAll issues and pull requests are [here](https://github.com/apolloconfig/apollo/milestone/11?closed=1)\n", "/*\n * Copyright 2022 Apollo Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\npackage com.ctrip.framework.apollo.configservice;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n/**\n * Start Eureka Server annotations according to configuration\n *\n * @author Zhiqiang Lin(linzhiqiang0514@163.com)\n */\n@Configuration\n@EnableEurekaServer\n@ConditionalOnProperty(name = \"apollo.eureka.server.enabled\", havingValue = \"true\", matchIfMissing = true)\npublic class ConfigServerEurekaServerConfigure {\n\n  @Order(99)\n  @Configuration\n  static class EurekaServerSecurityConfigurer extends WebSecurityConfigurerAdapter {\n\n    private static final String EUREKA_ROLE = \"EUREKA\";\n\n    @Value(\"${apollo.eureka.server.security.enabled:false}\")\n    private boolean eurekaSecurityEnabled;\n    @Value(\"${apollo.eureka.server.security.username:}\")\n    private String username;\n    @Value(\"${apollo.eureka.server.security.password:}\")\n    private String password;\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n      http.csrf().disable();\n      http.httpBasic();\n      if (eurekaSecurityEnabled) {\n        http.authorizeRequests()\n            .antMatchers(\"/eureka/apps/**\", \"/eureka/instances/**\", \"/eureka/peerreplication/**\")\n            .hasRole(EUREKA_ROLE)\n            .antMatchers(\"/**\").permitAll();\n      }\n    }\n\n    @Autowired\n    public void configureEurekaUser(AuthenticationManagerBuilder auth) throws Exception {\n      if (!eurekaSecurityEnabled) {\n        return;\n      }\n      InMemoryUserDetailsManagerConfigurer<AuthenticationManagerBuilder> configurer = auth\n          .getConfigurer(InMemoryUserDetailsManagerConfigurer.class);\n      if (configurer == null) {\n        configurer = auth.inMemoryAuthentication();\n      }\n      configurer.withUser(username).password(password).roles(EUREKA_ROLE);\n    }\n  }\n}\n", "/*\n * Copyright 2022 Apollo Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\npackage com.ctrip.framework.apollo.configservice.controller;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@Configuration\n@Order(98)\npublic class TestWebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http.httpBasic();\n    http.csrf().disable();\n    http.authorizeRequests().antMatchers(\"/\").permitAll().and()\n        .authorizeRequests().antMatchers(\"/console/**\").permitAll();\n\n    http.headers().frameOptions().disable();\n  }\n}\n", "This document describes how to compile, package, and deploy Apollo Configuration Center in a distributed deployment manner, so that it can be deployed and run separately in development, test, and production environments.\n\n> If you just need to try Apollo locally, you can refer to [Quick Start](en/deployment/quick-start)\n\n# &nbsp;\n# I. Preparation\n\n## 1.1 Runtime environment\n\n## 1.1.1 OS\n\nThe server side is based on Spring Boot and the startup script theoretically supports all Linux distributions, [CentOS 7](https://www.centos.org/) is recommended.\n\n### 1.1.2 Java\n\n* Apollo server: 1.8+\n* Apollo client: 1.8+\n    * For running in Java 1.7 runtime environment, please use apollo client of 1.x version, such as 1.9.1\n\nOnce configured, this can be checked with the following command.\n```sh\njava -version\n```\n\nSample output.\n```sh\njava version \"1.8.0_74\"\nJava(TM) SE Runtime Environment (build 1.8.0_74-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)\n```\n\n## 1.2 MySQL\n\n* Version requirement: 5.6.5+\n\nApollo's table structure uses multiple default declarations for `timestamp`, so version 5.6.5+ is required.\n\nAfter connecting to MySQL, you can check with the following command.\n```sql\nSHOW VARIABLES WHERE Variable_name = 'version';\n```\n\n| Variable_name | Value  |\n| ------------- | ------ |\n| version       | 5.7.11 |\n\n> Note 1: MySQL versions can be downgraded to 5.5, see [mysql dependency downgrade discussion](https://github.com/apolloconfig/apollo/issues/481) for details.\n\n> Note 2: If you wish to use Oracle, you can refer to [vanpersl](https://github.com/vanpersl)'s [Oracle Adaptation Code](https://github.com/apolloconfig/apollo/compare/v0.8.0...vanpersl:db-oracle) developed on top of Apollo 0.8.0 with `Oracle` version `10.2.0.1.0`.\n\n> Note 3: If you wish to use Postgres, you can refer to the [Pg adaptation code](https://github.com/oaksharks/apollo/compare/ac10768ee2e11c488523ca0e845984f6f71499ac...oaksharks:pg) developed by [oaksharks](https://github.com/oaksharks) on top of Apollo 0.9.1 with `Postgres` version 9.3.20, also see [xiao0yy](https://github.com/xiao0yy) developed on the basis of Apollo 0.10.2 [Pg adaptation code](https://github.com/apolloconfig/apollo/issues/1293) with `Postgres` version 9.5.\n\n## 1.3 Environment\n\nDistributed deployments require a pre-determined environment for the deployment and how it will be deployed.\n\nApollo currently supports the following environments.\n* DEV\n    * Development environment\n* FAT\n    * Test environments, equivalent to alpha environments (functional testing)\n* UAT\n    * Integration environment, equivalent to a beta environment (regression testing)\n* PRO\n    * Production environment\n\n> If you want to add custom environment names, you can refer to [How to add new environments by Portal Console](en/faq/common-issues-in-deployment-and-development-phase?id=_4-how-to-add-environment-by-portal-console) for the specific steps.\n\nYou can refer to [deployment-architecture](en/deployment/deployment-architecture.md)\n\n\n## 1.4 Network Policy\nFor distributed deployment, `apollo-configservice` and `apollo-adminservice` need to register their IPs and ports to Meta Server (apollo-configservice itself).\n\nApollo clients and Portal will get the address (IP+port) of the service from Meta Server, and then access it directly through the service address.\n\nNote that `apollo-configservice` and `apollo-adminservice` are designed based on the intranet trusted network, so for security reasons, **please do not expose `apollo-configservice` and `apollo-adminservice` directly to the public network**.\n\nSo if the actual deployed machine has multiple NICs (e.g. docker), or there are some NICs with IPs that are not accessible by Apollo clients and Portal (e.g. network security restrictions), then we need to do relevant configurations in `apollo-configservice` and `apollo-adminservice` to solve connectivity issues.\n\n### 1.4.1 Ignoring certain NICs\n\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively by passing the -D parameter through the JVM System Property, or by passing the OS Environment Variable, the following example will change the ` docker0` and NICs starting with `veth` are ignored when registering to Eureka.\n\nJVM System Property example.\n\n```properties\n-Dspring.cloud.inetutils.ignoredInterfaces[0]=docker0\n-Dspring.cloud.inetutils.ignoredInterfaces[1]=veth.*\n```\n\nOS Environment Variable example.\n\n```properties\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[0]=docker0\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[1]=veth.*\n```\n\n### 1.4.2 Specifying the IP to be registered\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively, passing in the -D parameter via JVM System Property, or via OS Environment Variable, the following example will specify the IP to be registered as `1.2.3.4`.\n\nJVM System Property example.\n\n```properties\n-Deureka.instance.ip-address=1.2.3.4\n```\n\nOS Environment Variable example.\n\n```properties\nEUREKA_INSTANCE_IP_ADDRESS=1.2.3.4\n```\n\n### 1.4.3 Specify the URL to register\n\nYou can modify the startup.sh of `apollo-configservice` and `apollo-adminservice` respectively, passing in the -D parameter via JVM System Property, or via OS Environment Variable, the following example will specify the URL to register URL as `http://1.2.3.4:8080`.\n\nJVM System Property example.\n\n```properties\n-Deureka.instance.homePageUrl=http://1.2.3.4:8080\n-Deureka.instance.preferIpAddress=false\n```\n\nOS Environment Variable Example.\n\n```properties\nEUREKA_INSTANCE_HOME_PAGE_URL=http://1.2.3.4:8080\nEUREKA_INSTANCE_PREFER_IP_ADDRESS=false\n```\n\n### 1.4.4 Specifying apollo-configservice address directly\n\nIf Apollo is deployed on the public cloud and the local development environment cannot connect, but you need to do development testing, the client can upgrade to version 0.11.0 and above, and then configure [Skip Apollo Meta Server service discovery](en/usage/java-sdk-user-guide?id=_1222-skip-apollo-meta-server-service-discovery)\n\n### 1.4.5 Network Configuration\n\nIn some companies (e.g. companies in the financial industry), there are many firewalls and network isolation, and it is necessary to open up the network (so that `ip1` can access a port of `ip2`)\n\n#### 1.4.5.1 Configure the network from the client to the configuration center\n\nFor clients that use the configuration center, `Apollo-Client` needs to access all (or the same room within) Meta Server and Config Service (default are port 8080), please do not open the network from `Client` to `Admin Service`.\n\n```mermaid\nflowchart LR\n   subgraph servers[IP1:8080, IP2:8080, ..., IPn:8080]\n      m[Meta Sever]\n      c[Config Service]\n   end\n   client --> servers\n\n```\n\n\n\nIf an application needs to use openapi, it also needs to access Portal (default is port 8070).\n\n```mermaid\nflowchart LR\n   subgraph servers[IP:8070]\n      Portal\n   end\n   openapi-client --> servers\n```\n\n#### 1.4.5.2 Configure the network within the configuration center\n\nFor the configuration center itself, it is also necessary to ensure network connectivity as each service needs to access each other.\n\n```mermaid\nflowchart LR\n\tsubgraph config-service-servers[All Config Service's IP:8080]\n\t\tm[Meta Server]\n\t\tc[Config Service]\n\tend\n\tsubgraph admin-service-servers[All Admin Service's IP:8090]\n\t\ta[Admin Service]\n\tend\n\t\n\tsubgraph portal-servers[IP:8070]\n\t\tp[Portal]\n\tend\n\t\n\t\n\tconfigdb[(ConfigDB)]\n\tportaldb[(PortalDB)]\n\t\n\ta --> config-service-servers\n\t\n\ta --> configdb\n\tc --> configdb\n\t\n\tp --> config-service-servers\n\tp --> admin-service-servers\n\tp --> portaldb\n```\n\n# II. Deployment Steps\n\nThe overall deployment steps are relatively simple.\n\n> [@lingjiaju](https://github.com/lingjiaju) recorded a series of Apollo quick start videos, if you feel slightly tedious to read the documentation, you may wish to first look at his [video tutorial](https://pan.baidu.com/s/1blv87EOZS77NWT8Amkijkw#list/path=%2F) .\n\n> If you encounter problems during the deployment process, you can refer to [common issues encountered in deployment & development](en/faq/common-issues-in-deployment-and-development-phase), and you can usually find the answers.\n\n## 2.1 Creating the database\n\nApollo server side needs a total of two databases: `ApolloPortalDB` and `ApolloConfigDB`, we prepared the database, table creation and sample data as sql files respectively, and just need to import the database.\n\nNote that ApolloPortalDB only needs to deploy one in the production environment, while ApolloConfigDB needs to deploy one set in each environment, such as fat, uat and pro respectively, to deploy 3 sets of ApolloConfigDB.\n\n> Note: If you have already created Apollo database locally, please pay attention to backup data. The sql file we prepare will empty the Apollo related tables.\n\n### 2.1.1 Creating ApolloPortalDB\n\nYou can choose to create it by manually importing SQL or by automatically importing SQL via [Flyway](https://flywaydb.org/) depending on the actual situation.\n\n#### 2.1.1.1 Manual SQL Import\n\nYou can import [apolloportaldb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloportaldb.sql) through various MySQL clients.\n\nUsing the native MySQL client as an example.\n\n```sql\nsource /your_local_path/scripts/sql/apolloportaldb.sql\n```\n\n#### 2.1.1.2 Created via Flyway import SQL\n\n> Requires version 1.3.0 and above\n\n1. Modify the `flyway-portaldb.properties` in [flyway-portaldb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-portaldb.properties) in `flyway.user`, `flyway.password` and `flyway.url` configurations\n2. Execute `mvn -N -Pportaldb flyway:migrate` in the apollo project root directory\n\n#### 2.1.1.3 Verification\n\nAfter a successful import, you can verify it by executing the following sql statement.\n\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloPortalDB`. `ServerConfig` limit 1;\n```\n\n| Id   | Key                | Value | Comment                        |\n| ---- | ------------------ | ----- | ------------------------------ |\n| 1    | apollo.portal.envs | dev   | list of supported environments |\n\n> Note: ApolloPortalDB only needs to be deployed in a production environment.\n\n### 2.1.2 Creating ApolloConfigDB\n\nYou can choose to create it by manually importing SQL or automatically importing SQL via [Flyway](https://flywaydb.org/) according to the actual situation.\n\n#### 2.1.2.1 Importing SQL Manually\n\nYou can import [apolloconfigdb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloconfigdb.sql) through various MySQL clients.\n\nUsing the native MySQL client as an example.\n\n```sql\nsource /your_local_path/scripts/sql/apolloconfigdb.sql\n```\n\n#### 2.1.2.2 SQL import via Flyway\n\n> Version 1.3.0 and above is required\n\n1. Modify the `flyway.user`, `flyway.password`, and `flyway.password` in [flyway-configdb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-configdb.properties) .\n2. Run `mvn -N -Pconfigdb flyway:migrate` in the apollo project root directory\n\n#### 2.1.2.3 Verification\n\n\n\nAfter a successful import, you can verify it by executing the following sql statement.\n\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloConfigDB`. `ServerConfig` limit 1;\n```\n\n| Id   | Key                | Value                         | Comment            |\n| ---- | ------------------ | ----------------------------- | ------------------ |\n| 1    | eureka.service.url | http://127.0.0.1:8080/eureka/ | Eureka Service Url |\n\n> Note: ApolloConfigDB needs to be deployed in one set per environment, e.g. 3 sets of ApolloConfigDB for fat, uat and pro respectively\n\n#### 2.1.2.4 Importing ApolloConfigDB project data from another environment\n\nIf the Apollo configuration center is newly deployed, please ignore this step.\n\nIf the Apollo Configuration Center is not newly deployed, for example, it has been in use for some time and a number of projects and namespaces have been created in the Apollo Configuration Center at that time, then you need to import the necessary project data from other normally running environments in the ApolloConfigDB in the new environment.\n\nThe following four tables of ApolloConfigDB are mainly involved, and the following data query statements are also attached.\n\n1. App\n   * Import all the apps\n   * e.g.: insert into `New environment of ApolloConfigDB`. `App` select * from `Other Environment's ApolloConfigDB`. `App` where `IsDeleted` = 0;\n2. AppNamespace\n   * Import all AppNamespace\n   * e.g. insert into `New environment's ApolloConfigDB`. `AppNamespace` select * from `other environment's ApolloConfigDB`. `AppNamespace` where `IsDeleted` = 0;\n3. Cluster\n   * Import the default default cluster\n   * e.g. insert into `New environment's ApolloConfigDB`. `Cluster` select * from `ApolloConfigDB of other environment`. `Cluster` where `Name` = 'default' and `IsDeleted` = 0;\n4. Namespace\n   * Import the namespace in the default default cluster\n   * e.g. insert into `ApolloConfigDB` of the new environment. `Namespace` select * from `ApolloConfigDB of other environment`. `Namespace` where `ClusterName` = 'default' and `IsDeleted` = 0;\n\nAlso don't forget to notify users to set the correct configuration information for their projects in the new environment, especially for some public namespace configurations that have a large impact.\n\n> If you are migrating data for a running environment, it is recommended to restart the config service after migration, because the config service has cached data for appnamespace\n\n### 2.1.3 Adjusting server-side configuration\n\nApollo's own configuration is placed inside the database, so you need to make some adjustments for the actual situation, please refer to [III. Server-side configuration description](en/deployment/distributed-deployment-guide?id=iii-server-side-configuration-instructions) for specific parameters.\n\nMost of the configurations can use the default values first, but [apollo.portal.envs](en/deployment/distributed-deployment-guide?id=_311-apolloportalenvs-list-of-supportable-environments) and [eureka.service.url](en/deployment/distributed-deployment-guide?id=_321-eurekaserviceurl-eureka-service-url) please make sure configured correctly before proceeding to the following deployment steps.\n\n## 2.2 Virtual/physical machine deployment\n\n### 2.2.1 Get the installation package\n\nThe installation package can be obtained in two ways.\n\n1. directly downloading the installer\n   * Download the pre-typed installer from the [GitHub Release](https://github.com/apolloconfig/apollo/releases) page\n   * If you don't need to customize Apollo's code, it is recommended to use this way to skip the local packaging process\n2. Build via source code\n   * Download the Source code package from the [GitHub Release](https://github.com/apolloconfig/apollo/releases) page or directly clone [source code](https://github.com/ctripcorp/apollo) then build locally\n   * If you need to do custom development for Apollo, you need to use this method\n\n#### 2.2.1.1 Download the installation package directly\n\n##### 2.2.1.1.1 Get the apollo-configservice, apollo-adminservice, and apollo-portal installers\n\nDownload the latest versions of `apollo-configservice-x.x.x-github.zip`, `apollo- adminservice-x.x.x-github.zip` and `apollo-portal-x.x.x-github.zip` can be downloaded.\n\n##### 2.2.1.1.2 Configuring database connection information\n\nThe Apollo server needs to know how to connect to the database you created earlier. The database connection string information is located in `config/application-github.properties` in the zip file you downloaded in the previous step.\n\n###### 2.2.1.1.2.1 Configuring database connection information for apollo-configservice\n\n1. unzip `apollo-configservice-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer's editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloConfigDB database connection string information, note that there are no spaces after the username and password!\n4. The result of the modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to configure the database parameters of the corresponding environment for different environment config-services\n\n###### 2.2.1.1.2.2 Configuring database connection information for apollo-adminservice\n\n1. unzip `apollo-adminservice-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer's editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloConfigDB database connection string information, note that there are no spaces after the username and password!\n4. The result of the modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to configure the database parameters of the corresponding environment for different environment admin-services\n\n###### 2.2.1.1.2.3 Configuring database connection information for apollo-portal\n\n1. unzip `apollo-portal-x.x.x-github.zip`. 2.\n2. Open the `application-github.properties` file in the `config` directory with a programmer-specific editor (e.g. vim, notepad++, sublime, etc.)\n3. fill in the correct ApolloPortalDB database connection string information, note that there are no spaces after the username and password!\n4. The effect after modification is as follows.\n\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n###### 2.2.1.1.2.4 Configuring apollo-portal's meta service information\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so we need to provide this information in the configuration. By default, the meta service and config service are deployed in the same JVM process, so the address of the meta service is the address of the config service.\n\n> For version 1.6.0 and above, you can configure the Meta Service address through the configuration item in ApolloPortalDB.ServerConfig, see [apollo.portal.meta.servers - List of Meta Service for each environment](en/deployment/distributed-deployment-guide?id=_312-apolloportalmetaservers-list-of-meta-service-for-each-environment)\n\nOpen the `apollo-env.properties` file in the `config` directory of `apollo-portal-x.x.x-github.zip` using a programmer-specific editor (e.g. vim, notepad++, sublime, etc.).\n\nSuppose DEV's apollo-config service is not bound to a domain name at 1.1.1.1:8080, FAT's apollo-config service is bound to the domain name apollo.fat.xxx.com, and UAT's apollo-config service is bound to the domain name apollo.uat.xxx.com, and PRO's apollo-configservice is bound to the domain apollo.xxx.com, then you can modify each environment meta service address as follows, in the format of `${env}.meta=http://${config-service- url:port}`, and if an environment does not need it, you can also directly delete the corresponding configuration item (e.g. lpt.meta): \n\n```properties\ndev.meta=http://1.1.1.1:8080\nfat.meta=http://apollo.fat.xxx.com\nuat.meta=http://apollo.uat.xxx.com\npro.meta=http://apollo.xxx.com\n```\n\nIn addition to configuring the meta service by means of `apollo-env.properties`, apollo also supports specifying the meta service at runtime (with a higher priority than `apollo-env.properties`): 1.\n\n1. via Java System Property `${env}_meta`\n   * Can be specified via Java System Property `${env}_meta`\n   * e.g. `java -Ddev_meta=http://config-service-url -jar xxx.jar`\n   * Can also be specified programmatically, e.g. `System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. through the operating system's System Environment `${ENV}_META`\n   * e.g. `DEV_META=http://config-service-url`\n   * Note that the key is all-caps and separated by `_`.\n\n>Note 1: In order to achieve high availability of meta service, it is recommended to do dynamic load balancing by SLB (Software Load Balancer).\n\n>Note 2: The meta service address can also be filled with IPs. Before version 0.11.0, only one IP was supported. From version 0.11.0 onwards, multiple addresses separated by commas ([PR #1214](https://github.com/apolloconfig/apollo/pull/1214) ), such as `http://1.1.1.1:8080,http://2.2.2.2:8080`, although production environments are still recommended to use domain names (go slb), as machine expansion, shrinkage, etc. may result in changes to the IP list.\n\n#### 2.2.1.2 Building from source code\n\n##### 2.2.1.2.1 Configuring database connection information\n\nThe Apollo server needs to know how to connect to the database you created earlier, so you need to edit [scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh) and modify ApolloPortalDB and ApolloConfigDB related database connection string information.\n\n> Note: The filled-in user needs to have read/write access to ApolloPortalDB and ApolloConfigDB data.\n\n```sh\n#apollo config db info\napollo_config_db_url=jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\napollo_config_db_username=username\napollo_config_db_password=password (if you don't have a password, just leave it blank)\n\n# apollo portal db info\napollo_portal_db_url=jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\napollo_portal_db_username=username\napollo_portal_db_password=password (if you don't have a password, just leave it blank)\n```\n\n> Note 1: As ApolloConfigDB is deployed in each environment, so for different environments config-service and admin-service need to use different database parameters to play different packages, portal only need to play once package can\n\n> Note 2: If you don't want config-service and admin-service to have a package for each environment, you can also pass in the database connection string information at runtime, which can be found in [Issue 869](https://github.com/apolloconfig/apollo/issues/869)\n\n> Note 3: Each environment needs to deploy a separate set of config-service, admin-service and ApolloConfigDB\n\n##### 2.2.1.2.2 Configuring each environment meta service address\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so this information needs to be provided at packaging time.\n\nSuppose DEV's apollo-config service is not bound to a domain name with the address 1.1.1.1:8080, FAT's apollo-config service is bound to the domain name apollo.fat.xxx.com, and UAT's apollo-config service is bound to the domain name apollo.uat.xxx.com, and PRO's apollo-configservice is bound to the domain apollo.xxx.com, then edit [scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh) as follows to modify each environment meta service service address in the format ``${env}_meta=http://${config-service-url:port}``, if an environment does not need it, you can also directly delete the corresponding configuration item: \n\n```sh\ndev_meta=http://1.1.1.1:8080\nfat_meta=http://apollo.fat.xxx.com\nuat_meta=http://apollo.uat.xxx.com\npro_meta=http://apollo.xxx.com\n\nMETA_SERVERS_OPTS=\"-Ddev_meta=$dev_meta -Dfat_meta=$fat_meta -Duat_meta=$uat_meta -Dpro_meta=$pro_meta\"\n```\n\nIn addition to configuring the meta service at packaging time, apollo also supports specifying the meta service at runtime: 1.\n\n1. via Java System Property `${env}_meta`\n   * can be specified via the Java System Property `${env}_meta`\n   * such as `java -Ddev_meta=http://config-service-url -jar xxx.jar`\n   * Can also be specified programmatically, e.g. `System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. through the operating system's System Environment `${ENV}_META`\n   * e.g. `DEV_META=http://config-service-url`\n   * Note that the key is all-caps and separated by `_`.\n\n>Note 1: In order to achieve high availability of meta service, it is recommended to do dynamic load balancing by SLB (Software Load Balancer).\n\n>Note 2: The meta service address can also be filled with IPs. Before version 0.11.0, only one IP was supported. From version 0.11.0 onwards, multiple addresses separated by commas ([PR #1214](https://github.com/apolloconfig/apollo/pull/1214) ), such as `http://1.1.1.1:8080,http://2.2.2.2:8080`, although production environments are still recommended to use domain names (go slb), as machine expansion, shrinkage, etc. may lead to changes in the IP list.\n\n##### 2.2.1.2.3 Perform compilation and packaging\n\nAfter doing the above configuration, you can execute the compilation and packaging.\n\n> Note: The initial compilation will download a lot of dependencies from the central Maven repository, so if the network is not good, it is recommended to use a domestic Maven repository source, such as [AliCloud Maven mirror](http://www.cnblogs.com/geektown/p/5705405.html)\n\n```sh\n./build.sh\n```\n\nThis script will package apollo-configservice, apollo-adminservice, apollo-portal in turn.\n\n> Note: Since ApolloConfigDB is deployed in each environment, you need to use different packages for config-service and admin-service for different environments with different database connection information, and only one package for portal\n\n##### 2.2.1.2.4 Get the apollo-config-service installation package\n\nLocated in the `apollo-configservice/target/` directory `apollo-configservice-x.x.x-github.zip`\n\nNote that since ApolloConfigDB is deployed in every environment, the config-service for different environments needs to be deployed separately using different packages with different database parameters\n\n##### 2.2.1.2.5 Get apollo-adminservice installation package\n\nThe `apollo-adminservice-x.x.x-github.zip` located in the `apollo-adminservice/target/` directory\n\nNote that since ApolloConfigDB is deployed in each environment, the admin-service for different environments needs to be deployed separately using different packages with different database parameters\n\n##### 2.2.1.2.6 Get apollo-portal installation package\n\n`apollo-portal-x.x.x-github.zip` located in the `apollo-portal/target/` directory\n\n### 2.2.2 Deploy Apollo server\n\n#### 2.2.2.1 Deploy apollo-configservice\n\nUpload the `apollo-configservice-x.x.x-github.zip` of the corresponding environment to the server, decompress it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in scripts/startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms6144m -Xmx6144m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=4096m -XX:MaxNewSize=4096m -XX:SurvivorRatio=18\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-configservice.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh. In addition, apollo-configservice also assumes the responsibility of meta server. If you want to modify the port, pay attention to the `eureka.service.url` configuration item in the ApolloConfigDB.ServerConfig table and the meta server information used in apollo-portal and apollo-client. For details, see: [2.2.1.1.2.4 Configuring the meta service information of apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information) and [1.2.2 Apollo Meta Server](en/usage/java-sdk-user-guide?id=_122-apollo-meta-server).\n\n> Note 4: If the eureka.service.url of ApolloConfigDB.ServerConfig is only configured with the currently starting machine, the eureka registration failure information will be output in the log during the process of starting apollo-configservice, such as `com.sun.jersey .api.client.ClientHandlerException: java.net.ConnectException: Connection refused`. It should be noted that this is the expected situation, because apollo-configservice needs to register the service with the Meta Server (itself), but because it has not yet woken up during the startup process, it will report this error. The retry action will be performed later, so the registration will be normal after the service is up.\n\n> Note 5: If you read this, I believe that you must be someone who reads the documentation carefully, and you are a little bit closer to success. Keep going, you should be able to complete the distributed deployment of Apollo soon! But do you feel that Apollo's distributed deployment steps are a bit cumbersome? Do you have any advice you would like to share with the author? If the answer is yes, please move to [#1424](https://github.com/apolloconfig/apollo/issues/1424) and look forward to your suggestions!\n\n#### 2.2.2.2 Deploy apollo-adminservice\n\nUpload the `apollo-adminservice-x.x.x-github.zip` of the corresponding environment to the server, decompress it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in scripts/startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms2560m -Xmx2560m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1024m -XX:MaxNewSize=1024m -XX:SurvivorRatio=22\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-adminservice.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh.\n\n#### 2.2.2.3 Deploy apollo-portal\n\nUpload `apollo-portal-x.x.x-github.zip` to the server, unzip it and execute scripts/startup.sh. To stop the service, execute scripts/shutdown.sh.\n\nRemember to set a JVM memory according to the actual environment in startup.sh. The following are our default settings for reference:\n\n```bash\nexport JAVA_OPTS=\"-server -Xms4096m -Xmx4096m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=22\"\n```\n\n> Note 1: If you need to modify the JVM parameters, you can modify the `JAVA_OPTS` section of scripts/startup.sh.\n\n> Note 2: To adjust the log output path of the service, you can modify `LOG_DIR` in scripts/startup.sh and apollo-portal.conf.\n\n> Note 3: To adjust the listening port of the service, you can modify the `SERVER_PORT` in scripts/startup.sh.\n\n### 2.2.3 Replace built-in eureka with another service registry\n\n#### 2.2.3.1 nacos-discovery\n\nEnable external nacos service registry to replace built-in eureka\n\n> Note: need repackage\n\n1. Modify build.sh/build.bat to change the maven build command for config-service and admin-service to\n\n```shell\nmvn clean package -Pgithub,nacos-discovery -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,nacos-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_ password=$apollo_config_db_username password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the nacos server address\n\n```properties\nnacos.discovery.server-addr=127.0.0.1:8848\n# More nacos configurations\nnacos.discovery.access-key=\nnacos.discovery.username=\nnacos.discovery.password=\nnacos.discovery.secret-key=\nnacos.discovery.namespace=\nnacos.discovery.context-path=\n```\n\n#### 2.2.3.2 consul-discovery\n\nEnable external Consul service registry to replace built-in eureka\n\n##### 2.2.3.2.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,consul-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,consul-discovery\n    ```\n\n2. Modify the application-github.properties in the config directory of the apollo-configservice and apollo-adminservice installation packages, respectively, to configure the consul server address\n\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n##### 2.2.3.2.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat to change the maven build command for config-service and admin-service to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,consul-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-configservice and apollo-adminservice installation packages, respectively, to configure the consul server address\n\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n#### 2.2.3.3 zookeeper-discovery\n\nEnable external Zookeeper service registry to replace built-in eureka\n\n##### 2.2.3.3.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,zookeeper-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,zookeeper-discovery\n    ```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the zookeeper server address\n\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n\n3. Zookeeper version description\n\n* Support Zookeeper 3.5.x or higher;\n* If apollo-configservice application starts reporting port occupation, please check the following configuration of Zookeeper;\n\n> Note: Zookeeper 3.5.0 added a built-in [AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n##### 2.2.3.3.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat to change the maven build command for ``config-service`` and ``admin-service`` to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,zookeeper-discovery - Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. Modify the application-github.properties in the config directory of the apollo-config service and apollo-adminservice installation packages, respectively, to configure the zookeeper server address\n\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n\n3. Zookeeper version description\n\n* Support Zookeeper 3.5.x or higher;\n* If apollo-configservice application starts reporting port occupation, please check the following configuration of Zookeeper;\n\n> Note: Zookeeper 3.5.0 added a built-in [AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n#### 2.2.3.4 custom-defined-discovery\n\nEnable custom-defined-discovery to replace built-in eureka\n\n##### 2.2.3.4.1 For version 2.1.0 and above\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,custom-defined-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,custom-defined-discovery\n    ```\n\n2. There are two ways to configure the access addresses of the custom config-service and admin-service: one is to write two pieces of data in the mysql database ApolloConfigDB and the table ServerConfig.\n\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService access address ');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService access address ');\n```\n\nAnother way to modify application-github.properties in the config directory of the apollo-configservice installation package\n\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n##### 2.2.3.4.2 For version 2.1.0 below\n\n1. Modify build.sh/build.bat and change the maven compilation commands of `config-service` and `admin-service` to\n\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,custom-defined-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. There are two ways to configure the access addresses of the custom config-service and admin-service: one is to write two pieces of data in the mysql database ApolloConfigDB and the table ServerConfig.\n\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService access address ');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService access address ');\n```\n\nAnother way to modify application-github.properties in the config directory of the apollo-configservice installation package\n\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n#### 2.2.3.5 database-discovery\n\n> For version 2.1.0 and above\n\nEnable database-discovery to replace built-in eureka\n\nApollo supports the use of internal database table as registry, without relying on third-party registry.\n\n1. Modify `config/application.properties` after decompression of `apollo-configservice-x.x.x-github.zip` and `apollo-adminservice-x.x.x-github.zip`, uncomment\n    ```properties\n    #spring.profiles.active=github,database-discovery\n    ```\n\n    to\n\n    ```properties\n    spring.profiles.active=github,database-discovery\n    ```\n\n2. In multi-cluster deployments, if you want apollo client only read Config Service in the same cluster,\nyou can add a property in `config/application-github.properties` of the Config Service and Admin Service installation package\n```properties\napollo.service.registry.cluster=same name with apollo Cluster\n```\n\n## 2.3 Docker Deployment\n\n### 2.3.1 Version 1.7.0 and above\n\nApollo version 1.7.0 starts uploading Docker images to [Docker Hub](https://hub.docker.com/u/apolloconfig) by default, which can be obtained by following these steps\n\n#### 2.3.1.1 Apollo Config Service\n\n##### 2.3.1.1.1 Get the image\n\n```bash\ndocker pull apolloconfig/apollo-config service:${version}\n```\n\n##### 2.3.1.1.2 Run the image\n\nExample:\n\n```bash\ndocker run -p 8080:8080 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-configservice apolloconfig/apollo-configservice:${version}\n```\n\nParameter description.\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_USERNAME`: The user name of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_PASSWORD`: password of the corresponding environment ApolloConfigDB\n\n#### 2.3.1.2 Apollo Admin Service\n\n##### 2.3.1.2.1 Getting the image\n\n```bash\ndocker pull apolloconfig/apollo-adminservice:${version}\n```\n\n##### 2.3.1.2.2 Running the image\n\nExample:\n\n```bash\ndocker run -p 8090:8090 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-adminservice apolloconfig/apollo-adminservice:${version}\n```\n\nParameter description.\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_USERNAME`: The user name of the corresponding environment ApolloConfigDB\n* `SPRING_DATASOURCE_PASSWORD`: password of the corresponding environment ApolloConfigDB\n\n#### 2.3.1.3 Apollo Portal\n\n##### 2.3.1.3.1 Getting the image\n\n```bash\ndocker pull apolloconfig/apollo-portal:${version}\n```\n\n##### 2.3.1.3.2 Running the image\n\nExample:\n\n```bash\ndocker run -p 8070:8070 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloPortalDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -e APOLLO_PORTAL_ENVS=dev,pro \\\n    -e DEV_META=http://fill-in-dev-meta-server:8080 -e PRO_META=http://fill-in-pro-meta-server:8080 \\\n    -d -v /tmp/logs:/opt/logs --name apollo-portal apolloconfig/apollo-portal:${version}\n```\n\nParameter description:\n\n* `SPRING_DATASOURCE_URL`: Address of the corresponding environment ApolloPortalDB\n* `SPRING_DATASOURCE_USERNAME`: The username of the corresponding environment ApolloPortalDB\n* `SPRING_DATASOURCE_PASSWORD`: The password of the corresponding environment ApolloPortalDB\n* `APOLLO_PORTAL_ENVS` (optional): corresponds to the [apollo.portal.envs](en/deployment/distributed-deployment-guide?id=_311-apolloportalenvs-list-of-supportable-environments) configuration item in ApolloPortalDB, which can be configured by this environment parameter if it is not configured in the database.\n* `DEV_META/PRO_META`(optional): Configure the Meta Service address of the corresponding environment, named by `${ENV}_META`, it should be noted that if you configure  [apollo.portal.meta.servers](en/deployment/distributed-deployment-guide?id=_312-apolloportalmetaservers-list-of-meta-service-for-each-environment)  configuration, then the configuration in apollo.portal.meta.servers prevails.\n\n#### 2.3.1.4 Building a Docker image from source\n\nIf you have modified the apollo server code and wish to build a Docker image from source, you can refer to the following steps.\n\n1. Build the installation package from source: `./scripts/build.sh` 2.\n2. build the Docker image: `mvn docker:build -pl apollo-configservice,apollo-adminservice,apollo-portal`\n\n### 2.3.2 Versions before 1.7.0\n\nApollo project already comes with Docker file, you can refer to [2.2.1 Get installer](#_221-Get-the-installation-package) to configure the installer and then hit the Docker image with the following file.\n\n1. [apollo-configservice](https://github.com/apolloconfig/apollo/blob/master/apollo-configservice/src/main/docker/Dockerfile)\n2. [apollo-adminservice](https://github.com/apolloconfig/apollo/blob/master/apollo-adminservice/src/main/docker/Dockerfile)\n3. [apollo-portal](https://github.com/apolloconfig/apollo/blob/master/apollo-portal/src/main/docker/Dockerfile)\n\nSee also the [docker-apollo](https://github.com/kulovecc/docker-apollo) project by Apollo user [@kulovecc](https://github.com/kulovecc) and [@idoop](https://github.com/idoop) for the [docker-apollo](https://github.com/idoop/docker-apollo) project.\n\n## 2.4 Kubernetes Deployment\n\n### 2.4.1 Kubernetes-based native service discovery\n\nApollo version 1.7.0 adds a deployment model based on Kubernetes native service discovery, which greatly simplifies the overall deployment as it no longer uses the built-in Eureka, and also provides Helm Charts for easy deployment.\n\n> More design notes can be found in [#3054](https://github.com/apolloconfig/apollo/issues/3054).\n\n#### 2.4.1.1 Environment requirements\n\n- Kubernetes 1.10+\n- Helm 3\n\n#### 2.4.1.2 Adding Apollo Helm Chart repository\n\n```bash\n$ helm repo add apollo https://charts.apolloconfig.com\n$ helm search repo apollo\n```\n\n#### 2.4.1.3 Deploying apollo-configservice and apollo-adminservice\n\n##### 2.4.1.3.1 Installing apollo-configservice and apollo-adminservice\n\nYou need to install apollo-configservice and apollo-adminservice in each environment, so it is recommended to include the environment information in the release name, e.g. `apollo-service-dev`\n\n```bash\n$ helm install apollo-service-dev \\\n    --set configdb.host=1.2.3.4 \\\n    --set configdb.userName=apollo \\\n    --set configdb.password=apollo \\\n    --set configdb.service.enabled=true \\\n    --set configService.replicaCount=1 \\\n    --set adminService.replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-service\n```\n\nThe general deployment recommendation is to configure via values.yaml\n\n```bash\n$ helm install apollo-service-dev -f values.yaml -n your-namespace apollo/apollo-service \n```\n\nAfter installation, you will be prompted for the Meta Server address of the corresponding environment, which needs to be recorded. apollo-portal needs to be installed with.\n\n```bash\nGet meta service url for current release by running these commands:\n  echo http://apollo-service-dev-apollo-configservice:8080\n```\n\n> See [2.4.1.3.3 Configuration Notes](#_24133-Configuration-Notes) for more configuration notes\n\n##### 2.4.1.3.2 Uninstalling apollo-configservice and apollo-adminservice\n\nFor example to uninstall the `apollo-service-dev` deployment.\n\n```bash\n$ helm uninstall -n your-namespace apollo-service-dev\n```\n\n##### 2.4.1.3.3 Configuration Notes\n\nThe following table lists the configurable parameters of the apollo-service-chart and their default values.\n\n| Parameter                                       | Description                                                  | Default                             |\n| ----------------------------------------------- | ------------------------------------------------------------ | ----------------------------------- |\n| `configdb.host`                                 | The host for apollo config db                                | `nil`                               |\n| `configdb.port`                                 | The port for apollo config db                                | `3306`                              |\n| `configdb.dbName`                               | The database name for apollo config db                       | `ApolloConfigDB`                    |\n| `configdb.userName`                             | The user name for apollo config db                           | `nil`                               |\n| `configdb.password`                             | The password for apollo config db                            | `nil`                               |\n| `configdb.connectionStringProperties`           | The connection string properties for apollo config db        | `characterEncoding=utf8`            |\n| `configdb.service.enabled`                      | Whether to create a Kubernetes Service for `configdb.host` or not. Set it to `true` if `configdb.host` is an endpoint outside of the kubernetes cluster | `false`                             |\n| `configdb.service.fullNameOverride`             | Override the service name for apollo config db               | `nil`                               |\n| `configdb.service.port`                         | The port for the service of apollo config db                 | `3306`                              |\n| `configdb.service.type`                         | The service type of apollo config db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP`                         |\n| `configService.fullNameOverride`                | Override the deployment name for apollo-configservice        | `nil`                               |\n| `configService.replicaCount`                    | Replica count of apollo-configservice                        | `2`                                 |\n| `configService.containerPort`                   | Container port of apollo-configservice                       | `8080`                              |\n| `configService.image.repository`                | Image repository of apollo-configservice                     | `apolloconfig/apollo-configservice` |\n| `configService.image.tag`                       | Image tag of apollo-configservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.image.pullPolicy`                | Image pull policy of apollo-configservice                    | `IfNotPresent`                      |\n| `configService.imagePullSecrets`                | Image pull secrets of apollo-configservice                   | `[]`                                |\n| `configService.service.fullNameOverride`        | Override the service name for apollo-configservice           | `nil`                               |\n| `configService.service.port`                    | The port for the service of apollo-configservice             | `8080`                              |\n| `configService.service.targetPort`              | The target port for the service of apollo-configservice      | `8080`                              |\n| `configService.service.type`                    | The service type of apollo-configservice                     | `ClusterIP`                         |\n| `configService.ingress.enabled`                 | Whether to enable the ingress for config-service or not. _(chart version >= 0.2.0)_ | `false`                             |\n| `configService.ingress.annotations`             | The annotations of the ingress for config-service. _(chart version >= 0.2.0)_ | `{}`                                |\n| `configService.ingress.hosts.host`              | The host of the ingress for config-service. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.ingress.hosts.paths`             | The paths of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `configService.ingress.tls`                     | The tls definition of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `configService.liveness.initialDelaySeconds`    | The initial delay seconds of liveness probe                  | `100`                               |\n| `configService.liveness.periodSeconds`          | The period seconds of liveness probe                         | `10`                                |\n| `configService.readiness.initialDelaySeconds`   | The initial delay seconds of readiness probe                 | `30`                                |\n| `configService.readiness.periodSeconds`         | The period seconds of readiness probe                        | `5`                                 |\n| `configService.config.profiles`                 | specify the spring profiles to activate                      | `github,kubernetes`                 |\n| `configService.config.configServiceUrlOverride` | Override `apollo.config-service.url`: config service url to be accessed by apollo-client, e.g. `http://apollo-config-service-dev:8080` | `nil`                               |\n| `configService.config.adminServiceUrlOverride`  | Override `apollo.admin-service.url`: admin service url to be accessed by apollo-portal, e.g. `http://apollo-admin-service-dev:8090` | `nil`                               |\n| `configService.config.contextPath`              | specify the context path, e.g. `/apollo`, then users could access config service via `http://{config_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil`                               |\n| `configService.env`                             | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                                |\n| `configService.strategy`                        | The deployment strategy of apollo-configservice              | `{}`                                |\n| `configService.resources`                       | The resources definition of apollo-configservice             | `{}`                                |\n| `configService.nodeSelector`                    | The node selector definition of apollo-configservice         | `{}`                                |\n| `configService.tolerations`                     | The tolerations definition of apollo-configservice           | `[]`                                |\n| `configService.affinity`                        | The affinity definition of apollo-configservice              | `{}`                                |\n| `adminService.fullNameOverride`                 | Override the deployment name for apollo-adminservice         | `nil`                               |\n| `adminService.replicaCount`                     | Replica count of apollo-adminservice                         | `2`                                 |\n| `adminService.containerPort`                    | Container port of apollo-adminservice                        | `8090`                              |\n| `adminService.image.repository`                 | Image repository of apollo-adminservice                      | `apolloconfig/apollo-adminservice`  |\n| `adminService.image.tag`                        | Image tag of apollo-adminservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.image.pullPolicy`                 | Image pull policy of apollo-adminservice                     | `IfNotPresent`                      |\n| `adminService.imagePullSecrets`                 | Image pull secrets of apollo-adminservice                    | `[]`                                |\n| `adminService.service.fullNameOverride`         | Override the service name for apollo-adminservice            | `nil`                               |\n| `adminService.service.port`                     | The port for the service of apollo-adminservice              | `8090`                              |\n| `adminService.service.targetPort`               | The target port for the service of apollo-adminservice       | `8090`                              |\n| `adminService.service.type`                     | The service type of apollo-adminservice                      | `ClusterIP`                         |\n| `adminService.ingress.enabled`                  | Whether to enable the ingress for admin-service or not. _(chart version >= 0.2.0)_ | `false`                             |\n| `adminService.ingress.annotations`              | The annotations of the ingress for admin-service. _(chart version >= 0.2.0)_ | `{}`                                |\n| `adminService.ingress.hosts.host`               | The host of the ingress for admin-service. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.ingress.hosts.paths`              | The paths of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `adminService.ingress.tls`                      | The tls definition of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]`                                |\n| `adminService.liveness.initialDelaySeconds`     | The initial delay seconds of liveness probe                  | `100`                               |\n| `adminService.liveness.periodSeconds`           | The period seconds of liveness probe                         | `10`                                |\n| `adminService.readiness.initialDelaySeconds`    | The initial delay seconds of readiness probe                 | `30`                                |\n| `adminService.readiness.periodSeconds`          | The period seconds of readiness probe                        | `5`                                 |\n| `adminService.config.profiles`                  | specify the spring profiles to activate                      | `github,kubernetes`                 |\n| `adminService.config.contextPath`               | specify the context path, e.g. `/apollo`, then users could access admin service via `http://{admin_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil`                               |\n| `adminService.env`                              | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                                |\n| `adminService.strategy`                         | The deployment strategy of apollo-adminservice               | `{}`                                |\n| `adminService.resources`                        | The resources definition of apollo-adminservice              | `{}`                                |\n| `adminService.nodeSelector`                     | The node selector definition of apollo-adminservice          | `{}`                                |\n| `adminService.tolerations`                      | The tolerations definition of apollo-adminservice            | `[]`                                |\n| `adminService.affinity`                         | The affinity definition of apollo-adminservice               | `{}`                                |\n\n##### 2.4.1.3.4 Configuration example\n\n###### 2.4.1.3.4.1 The host of ConfigDB is the IP outside the k8s cluster\n\n```yaml\nconfigdb:\n  host: 1.2.3.4\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.3.4.2 The host of ConfigDB is the domain name outside the k8s cluster\n\n```yaml\nconfigdb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.3.4.3 The host of ConfigDB is a service in the k8s cluster\n\n```yaml\nconfigdb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.3.4.4 Specify the apollo-configservice address returned by Meta Server\n\nIf apollo-client cannot directly access the service of apollo-configservice (for example, it is not in the same k8s cluster), you can refer to the following example to specify the address returned by Meta Server to apollo-client (for example, it can be accessed through nodeport)\n\n```yaml\nconfigService:\n  config:\n    configServiceUrlOverride: http://1.2.3.4:12345\n```\n\n###### 2.4.1.3.4.5 Specify the apollo-adminservice address returned by Meta Server\n\nIf apollo-portal cannot directly access the service of apollo-adminservice (for example, it is not in the same k8s cluster), you can refer to the following example to specify the address returned by Meta Server to apollo-portal (for example, it can be accessed through nodeport)\n\n```yaml\nconfigService:\n  config:\n    adminServiceUrlOverride: http://1.2.3.4:23456\n```\n\n###### 2.4.1.3.4.6 Expose apollo-configservice service in the form of Ingress configuration custom path `/config`\n\n```yaml\n# use /config as root, should specify configService.config.contextPath as /config\nconfigService:\n  config:\n    contextPath: /config\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /config\n```\n\n###### 2.4.1.3.4.7 Expose apollo-adminservice service in the form of Ingress configuration custom path `/admin`\n\n```yaml\n# use /admin as root, should specify adminService.config.contextPath as /admin\nadminService:\n  config:\n    contextPath: /admin\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /admin\n```\n\n#### 2.4.1.4 Deploy apollo-portal\n\n##### 2.4.1.4.1 Install apollo-portal\n\nSuppose there are dev and pro environments, and the meta server addresses are `http://apollo-service-dev-apollo-configservice:8080` and `http://apollo-service-pro-apollo-configservice:8080` respectively :\n\n```bash\n$ helm install apollo-portal \\\n    --set portaldb.host=1.2.3.4 \\\n    --set portaldb.userName=apollo \\\n    --set portaldb.password=apollo \\\n    --set portaldb.service.enabled=true \\\n    --set config.envs=\"dev\\,pro\" \\\n    --set config.metaServers.dev=http://apollo-service-dev-apollo-configservice:8080 \\\n    --set config.metaServers.pro=http://apollo-service-pro-apollo-configservice:8080 \\\n    --set replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-portal\n```\n\nGeneral deployment recommendations are configured through values.yaml:\n\n```bash\n$ helm install apollo-portal -f values.yaml -n your-namespace apollo/apollo-portal\n```\n\n> For more configuration item descriptions, please refer to [2.4.1.4.3 Configuration item description](\n\n##### 2.4.1.4.2 Uninstalling apollo-portal\n\nFor example, to uninstall an `apollo-portal` deployment.\n\n```bash\n$ helm uninstall -n your-namespace apollo-portal\n```\n\n##### 2.4.1.4.3 Description of configuration items\n\nThe following table lists the configurable parameters of the apollo-portal chart and their default values.\n\n| Parameter                             | Description                                                  | Default                      |\n| ------------------------------------- | ------------------------------------------------------------ | ---------------------------- |\n| `fullNameOverride`                    | Override the deployment name for apollo-portal               | `nil`                        |\n| `replicaCount`                        | Replica count of apollo-portal                               | `2`                          |\n| `containerPort`                       | Container port of apollo-portal                              | `8070`                       |\n| `image.repository`                    | Image repository of apollo-portal                            | `apolloconfig/apollo-portal` |\n| `image.tag`                           | Image tag of apollo-portal, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil`                        |\n| `image.pullPolicy`                    | Image pull policy of apollo-portal                           | `IfNotPresent`               |\n| `imagePullSecrets`                    | Image pull secrets of apollo-portal                          | `[]`                         |\n| `service.fullNameOverride`            | Override the service name for apollo-portal                  | `nil`                        |\n| `service.port`                        | The port for the service of apollo-portal                    | `8070`                       |\n| `service.targetPort`                  | The target port for the service of apollo-portal             | `8070`                       |\n| `service.type`                        | The service type of apollo-portal                            | `ClusterIP`                  |\n| `service.sessionAffinity`             | The session affinity for the service of apollo-portal        | `ClientIP`                   |\n| `ingress.enabled`                     | Whether to enable the ingress or not                         | `false`                      |\n| `ingress.annotations`                 | The annotations of the ingress                               | `{}`                         |\n| `ingress.hosts.host`                  | The host of the ingress                                      | `nil`                        |\n| `ingress.hosts.paths`                 | The paths of the ingress                                     | `[]`                         |\n| `ingress.tls`                         | The tls definition of the ingress                            | `[]`                         |\n| `liveness.initialDelaySeconds`        | The initial delay seconds of liveness probe                  | `100`                        |\n| `liveness.periodSeconds`              | The period seconds of liveness probe                         | `10`                         |\n| `readiness.initialDelaySeconds`       | The initial delay seconds of readiness probe                 | `30`                         |\n| `readiness.periodSeconds`             | The period seconds of readiness probe                        | `5`                          |\n| `env`                                 | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}`                         |\n| `strategy`                            | The deployment strategy of apollo-portal                     | `{}`                         |\n| `resources`                           | The resources definition of apollo-portal                    | `{}`                         |\n| `nodeSelector`                        | The node selector definition of apollo-portal                | `{}`                         |\n| `tolerations`                         | The tolerations definition of apollo-portal                  | `[]`                         |\n| `affinity`                            | The affinity definition of apollo-portal                     | `{}`                         |\n| `config.profiles`                     | specify the spring profiles to activate                      | `github,auth`                |\n| `config.envs`                         | specify the env names, e.g. `dev,pro`                        | `nil`                        |\n| `config.contextPath`                  | specify the context path, e.g. `/apollo`, then users could access portal via `http://{portal_address}/apollo` | `nil`                        |\n| `config.metaServers`                  | specify the meta servers, e.g.<br />`dev: http://apollo-configservice-dev:8080`<br />`pro: http://apollo-configservice-pro:8080` | `{}`                         |\n| `config.files`                        | specify the extra config files for apollo-portal, e.g. `application-ldap.yml` | `{}`                         |\n| `portaldb.host`                       | The host for apollo portal db                                | `nil`                        |\n| `portaldb.port`                       | The port for apollo portal db                                | `3306`                       |\n| `portaldb.dbName`                     | The database name for apollo portal db                       | `ApolloPortalDB`             |\n| `portaldb.userName`                   | The user name for apollo portal db                           | `nil`                        |\n| `portaldb.password`                   | The password for apollo portal db                            | `nil`                        |\n| `portaldb.connectionStringProperties` | The connection string properties for apollo portal db        | `characterEncoding=utf8`     |\n| `portaldb.service.enabled`            | Whether to create a Kubernetes Service for `portaldb.host` or not. Set it to `true` if `portaldb.host` is an endpoint outside of the kubernetes cluster | `false`                      |\n| `portaldb.service.fullNameOverride`   | Override the service name for apollo portal db               | `nil`                        |\n| `portaldb.service.port`               | The port for the service of apollo portal db                 | `3306`                       |\n| `portaldb.service.type`               | The service type of apollo portal db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP`                  |\n\n##### 2.4.1.4.4 Configuration example\n\n###### 2.4.1.4.4.1 The host of PortalDB is the IP outside the k8s cluster\n\n```yaml\nportaldb:\n  host: 1.2.3.4\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.4.4.2 The host of PortalDB is the domain name outside the k8s cluster\n\n```yaml\nportaldb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.4.4.3 The host of PortalDB is a service in the k8s cluster\n\n```yaml\nportaldb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.4.4.4 Configure environment information\n\n```yaml\nconfig:\n  envs: dev, pro\n  metaServers:\n    dev: http://apollo-service-dev-apollo-configservice:8080\n    pro: http://apollo-service-pro-apollo-configservice:8080\n```\n\n###### 2.4.1.4.4.5 Expose services as Load Balancer\n\n```yaml\nservice:\n  type: LoadBalancer\n```\n\n###### 2.4.1.4.4.6 Expose services as Ingress\n\n```yaml\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /\n```\n\n###### 2.4.1.4.4.7 Expose services in the form of Ingress configuration custom path `/apollo`\n\n```yaml\n# use /apollo as root, should specify config.contextPath as /apollo\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /apollo\n\nconfig:\n  ...\n  contextPath: /apollo\n  ...\n```\n\n###### 2.4.1.4.4.8 Expose services in the form of Ingress configuration session affinity\n\n```yaml\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/affinity-mode: \"persistent\"\n    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: \"true\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\n  hosts:\n    - host: xxx.somedomain.com # host is required to make session affinity work\n      paths:\n        - /\n```\n\n###### 2.4.1.4.4.9 Enable LDAP support\n\n```yaml\nconfig:\n  ...\n  profiles: github,ldap\n  ...\n  files:\n    application-ldap.yml: |\n      spring:\n        ldap:\n          base: \"dc=example,dc=org\"\n          username: \"cn=admin,dc=example,dc=org\"\n          password: \"password\"\n          searchFilter: \"(uid={0})\"\n          urls:\n          - \"ldap://xxx.somedomain.com:389\"\n      ldap:\n        mapping:\n          objectClass: \"inetOrgPerson\"\n          loginId: \"uid\"\n          userDisplayName: \"cn\"\n          email: \"mail\"\n```\n\n#### 2.4.1.5 Building a Docker image from source\n\nIf you have modified the code of the apollo server and want to build a Docker image from source code, you can refer to the steps in [2.3.1.4 Building a Docker Image from Source Code](#_2314-Building-a-Docker-image-from-source).\n\n### 2.4.2 Based on the built-in Eureka service discovery\n\nThanks to [AiotCEO](https://github.com/AiotCEO) for providing k8s deployment support, please refer to [apollo-on-kubernetes](https://github.com/apolloconfig/apollo/blob/master/scripts/apollo-on-kubernetes/README.md).\n\nThanks to [qct](https://github.com/qct) for Helm Chart deployment support, please refer to [qct/apollo-helm](https://github.com/qct/apollo-helm) for usage instructions.\n\n# III. Server-side configuration instructions\n\n> The following configurations are supported not only in the database, but also through -D parameters, application.properties, etc., and -D parameters, application.properties, etc. have higher priority than the configuration in the database\n\n## 3.1 Adjusting ApolloPortalDB configuration\n\nConfiguration items are uniformly stored in ApolloPortalDB.ServerConfig table, and can also be configured through `Administrator Tools - System Parameters` page, without special instructions, the modification will take effect in real time after one minute.\n\n### 3.1.1 apollo.portal.envs - list of supportable environments\n\nThe default value is dev, if portal needs to manage multiple environments, just separate them by commas (case insensitive), e.g.\n\n```\nDEV,FAT,UAT,PRO\n```\n\nAfter the modification needs to reboot to take effect.\n\n>Note 1: A set of Portal can manage multiple environments, but each environment needs to deploy a separate set of Config Service, Admin Service and ApolloConfigDB, please refer to: [2.1.2 Creating ApolloConfigDB](en/deployment/distributed-deployment-guide?id=_212-creating-apolloconfigdb), [3.2 Adjusting ApolloConfigDB configuration](en/deployment/distributed-deployment-guide?id=_32-adjusting-apolloconfigdb-configuration), [2.2.1.1.2 Configuring database connection information](en/deployment/distributed-deployment-guide?id=_22112-configuring-database-connection-information), and if you are adding an environment to Apollo Configuration Center that has been running for a while, don't forget to refer to [2.1.2.4 Importing ApolloConfigDB project data from another environment](en/deployment/distributed-deployment-guide?id=_2124-importing-apolloconfigdb-project-data-from-another-environment) to do the initialization of the new environment.\n\n>Note 2: Adding the environment to the database only does not work, you also need to add the meta server address corresponding to the new environment for apollo-portal, refer to: [2.2.1.1.2.4 Configuring the meta service information of apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information). portal's meta-service information). apollo-client also needs to be configured accordingly when used in a new environment, refer to: [1.2.2 Apollo Meta Server](en/usage/java-sdk-user-guide?id=_122-apollo-meta-server).\n\n>Note 3: If you wish to add a custom environment name, you can refer to [Portal How to add environment](en/faq/common-issues-in-deployment-and-development-phase?id=_4-how-to-add-environment-by-portal-console) .\n\n>Note 4: Version 1.1.0 added the system information page (`Administrator Tools` -> `System Information`), you can check whether the configuration is correct through this page\n\n### 3.1.2 apollo.portal.meta.servers - List of Meta Service for each environment\n\n> For version 1.6.0 and above\n\nApollo Portal needs to access different meta service (apollo-configservice) addresses in different environments, so we need to provide this information in the configuration. By default, the meta service and config service are deployed in the same JVM process, so the address of the meta service is the address of the config service.\n\nSample example is as follows.\n\n```json\n{\n    \"DEV\": \"http://1.1.1.1:8080\",\n    \"FAT\": \"http://apollo.fat.xxx.com\",\n    \"UAT\": \"http://apollo.uat.xxx.com\",\n    \"PRO\": \"http://apollo.xxx.com\"\n}\n```\n\nA reboot is required to take effect after the modification.\n\n> This configuration has a higher priority than the Meta Service address set in other ways. For more information, please refer to [2.2.1.1.2.4 Configuring meta service information for apollo-portal](en/deployment/distributed-deployment-guide?id=_221124-configuring-apollo-portal39s-meta-service-information).\n\n### 3.1.3 Organizations - Department list\n\nAll new apps in the Portal need to select departments, so you need to configure optional department information here, sample example is as follows\n\n```json\n[{\"orgId\": \"TEST1\", \"orgName\": \"Sample Department 1\"},{\"orgId\": \"TEST2\", \"orgName\": \"Sample Department 2\"}]\n```\n\n### 3.1.4 superAdmin - Portal super administrator\n\nThe superAdmin has all privileges and needs to be set up carefully.\n\nIf you don't have access to your company's SSO system, you can use the default value apollo (default user) for now. When you have access to it, change it to the actual account used, with multiple accounts separated by English commas (,).\n\n### 3.1.5 consumer.token.salt - consumer token salt\n\nYou can set a token salt if you will use the open platform API, but ignore it if you don't.\n\n### 3.1.6 wiki.address\n\nThe address of the \"help\" link on the portal, the default is the Apollo github wiki home page, you can set it yourself.\n\n### 3.1.7 admin.createPrivateNamespace.switch\n\nWhether to allow project admins to create private namespace. set to `true` to allow creation, set to `false` to prevent project admins from seeing the option to create private namespace on the page. [Learn more about Namespace](en/design/apollo-core-concept-namespace)\n\n### 3.1.8 emergencyPublish.supported.envs\n\nConfigure a list of environments that allow emergency publishing, with multiple envs separated by commas.\n\nWhen the config service turns on the only one person can modify switch (`namespace.lock.switch`) for one publish, only one person can modify and another publish a configuration publish. In order to avoid not being able to publish the configuration in case of emergency (e.g. out-of-hours, holidays), you can configure this to allow some environments to operate emergency publishing, i.e. the same person can modify and publish the configuration.\n\n### 3.1.9 configView.memberOnly.envs\n\nA list of environments that display configuration information only to project members, with multiple envs separated by commas.\n\nFor environments that are set to display configuration information only to project members, only the administrator of the project or users with edit or publish privileges for that namespace can see the configuration information and publish history for that private namespace. Public namespaces are always visible to all users.\n\n> Supported since version 1.1.0, see [PR 1531](https://github.com/apolloconfig/apollo/pull/1531)\n\n### 3.1.10 role.create-application.enabled - whether to enable control over creating project permissions\n\n> For versions 1.5.0 and above\n\nDefault is false, all users can create projects\n\nIf set to true, only super administrators and accounts with create-application privileges can create projects. Super administrators can assign project creation privileges to users via `Administrator Tools - System Rights Management`.\n\n### 3.1.11 role.manage-app-master.enabled - Enables or disables the project administrator to assign privileges\n\n> For versions 1.5.0 and above\n\nDefault is false, all project administrators can add/remove administrators for the project\n\nIf set to true, only super administrators and accounts with project administrator assignment privileges can add/remove administrators for a specific project, and super administrators can assign project-specific administrator assignment privileges to users via `Administrator Tools - System Rights Management\n\n### 3.1.12 admin-services.access.tokens - set the access token required by apollo-portal to access the apollo-adminservice for each environment\n\n> for version 1.7.1 and above\n\nIf the corresponding environment apollo-adminservice has [access control enabled](en/deployment/distributed-deployment-guide?id=_326-admin-servicesaccesscontrolenabled-configure-whether-apollo-adminservice-has-access-control-enabled), then you need to configure apollo-portal access here access token required for this environment apollo-adminservice, otherwise access will fail .\n\nThe format is json, as follows.\n\n```json\n{\n    \"dev\" : \"098f6bcd4621d373cade4e832627b4f6\",\n    \"pro\" : \"ad0234829205b9033196ba818f7a872b\"\n}\n```\n\n### 3.1.13 searchByItem.switch - whether the console search box supports searching by configuration item\n\nThe default is true, which makes it easy to quickly search for configurations by configuration item\n\nIf set to false, this feature is disabled\n\n## 3.2 Adjusting ApolloConfigDB configuration\n\nConfiguration items are uniformly stored in the ApolloConfigDB.ServerConfig table. It should be noted that each environment's ApolloConfigDB.ServerConfig needs to be configured separately, and the modification takes effect in real time for one minute afterwards.\n\n### 3.2.1 eureka.service.url - Eureka Service Url\n\n> Not applicable to Kubernetes-based native service discovery scenarios\n\nBoth apollo-configservice and apollo-adminservice need to register with the eureka service, so the eureka service address needs to be configured.\nAccording to the current implementation, apollo-configservice itself is an eureka service, so you only need to fill in the address of apollo-configservice, separated by commas if there is more than one (be careful not to forget the /eureka/ suffix).\n\nIt should be noted that each environment only fills in the eureka service address of its own environment, for example, apollo-config service for FAT is 1.1.1.1:8080 and 2.2.2.2:8080, apollo-config service for UAT is 3.3.3.3:8080 and 4.4.4.4: 8080, and the apollo-configigservice for PRO is 5.5.5.5:8080 and 6.6.6.6:8080, then.\n\n1. set eureka.service.url in the ApolloConfigDB.ServerConfig table of the FAT environment to\n\n```\nhttp://1.1.1.1:8080/eureka/,http://2.2.2.2:8080/eureka/\n```\n\n2. set eureka.service.url in ApolloConfigDB.ServerConfig table of UAT environment to\n\n```\nhttp://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/\n```\n\n3. Set eureka.service.url in the ApolloConfigDB.ServerConfig table of the PRO environment to\n\n```\nhttp://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/\n```\n\n>Note 1: Here you need to fill in the address of all the eureka services in this environment, because eureka needs to copy each other's registration information\n\n>Note 2: If you want to register Config Service and Admin Service to the company's unified Eureka, you can refer to [Deployment & Development FAQ - Registering Config Service and Admin Service to a separate Eureka Server](en/faq/common-issues-in-deployment-and-development-phase?id=_8-register-config-service-and-admin-service-to-a-separate-eureka-server) section\n\n>Note 3: In multi-cluster deployments, you often want the config service and admin service to register only with the eureka in the same room. To achieve this, you need to use the cluster field in the `ServerConfig` table, and the config service and admin service will read the `/opt/settings/server.properties` (Mac/Linux) or `C:\\opt\\settings\\server.properties` (Windows), and if the idc has a corresponding eureka.service.url configuration, then will only register with eureka for that server room. For example, if the config service and admin service are deployed to two IDCs, `SHAOY` and `SHAJQ`, then in order to register the services in these two server rooms only with that server room, you can add two new records in the `ServerConfig` table and fill in the `SHAOY` and `SHAJQ` server room eureka addresses respectively. If there are config service and admin service that are not deployed in `SHAOY` and `SHAJQ`, this default configuration will be used.\n\n| Key                | Cluster | Value                       | Comment                      |\n| ------------------ | ------- | --------------------------- | ---------------------------- |\n| eureka.service.url | default | http://1.1.1.1:8080/eureka/ | Default Eureka Service Url   |\n| eureka.service.url | SHAOY   | http://2.2.2.2:8080/eureka/ | Eureka Service Url for SHAOY |\n| eureka.service.url | SHAJQ   | http://3.3.3.3:8080/eureka/ | Eureka Service Url for SHAJQ |\n\n### 3.2.2 namespace.lock.switch - Only one person can modify the switch at a time for release review\n\nThis is a functional switch, if configured to true, then only one person can modify and another publish at a time for a configuration release.\n\n> This option is recommended for production environments\n\n### 3.2.3 `config-service.cache.enabled` - whether to enable configuration caching\n\nThis is a function switch, if configured to true, config service will cache the loaded configuration information to speed up the performance of subsequent configuration fetches.\n\nThe default is false. Please evaluate the total configuration size and adjust the config service memory configuration before turning it on.\n\n> Ensure that the app.id of the configuration in the application is in the correct case when caching is enabled, otherwise it will not fetch the correct configuration\n\n### 3.2.4 `item.key.length.limit`- Maximum length limit for configuration item key\n\nThe default configuration is 128.\n\n### 3.2.5 `item.value.length.limit` - Maximum length limit for configuration item value\n\nThe default configuration is 20000.\n\n#### 3.2.5.1 `namespace.value.length.limit.override` - Maximum length limit for namespace's configuration item value\n\nThis configuration is used to override the `item.value.length.limit` configuration to achieve fine-grained control of the namespace's value maximum length limit, the configured value is a json format, the key of the json is the id value of the namespace in the database, the format is as follows.\n\n```\nnamespace.value.length.limit.override = {1:200,3:20}\n```\n\nThe above configuration specifies a maximum length limit of 200 for the value of namespace with id=1 and 20 for the value of namespace with id=3 in the ApolloConfigDB.Namespace table\n\n### 3.2.6 `admin-services.access.control.enabled` - Configure whether apollo-adminservice has access control enabled\n\n> For versions 1.7.1 and above\n\nDefault is false, if configured to true, then apollo-portal needs to be [properly configured](en/deployment/distributed-deployment-guide?id=_3112-admin-servicesaccesstokens-set-the-access-token-required-by-apollo-portal-to-access-the-apollo-adminservice-for-each-environment) to access the access token of that environment, otherwise access will be denied\n\n### 3.2.7 `admin-services.access.tokens` - Configure the list of access tokens allowed to access apollo-adminservice\n\n> For versions 1.7.1 and above\n\nIf this configuration item is empty, then access control will not take effect. If multiple tokens are allowed, the tokens are separated by commas\n\nExample.\n\n```properties\nadmin-services.access.tokens=098f6bcd4621d373cade4e832627b4f6\nadmin-services.access.tokens=098f6bcd4621d373cade4e832627b4f6,ad0234829205b9033196ba818f7a872b\n```\n\n### 3.2.8 `apollo.access-key.auth-time-diff-tolerance` - Configure server-side AccessKey checksum tolerance for time deviation\n\n> For version 2.0.0 and above\n\nThe default value is 60, in seconds. Since the key authentication needs to verify the time, there may be time deviation between the time of the client and the time of the server, if the deviation is too large, the authentication will fail, this configuration can configure the tolerated time deviation size, the default is 60 seconds.\n\n### 3.2.9 apollo.eureka.server.security.enabled - Configure whether to enable Eureka login authentication\n\n> For version 2.1.0 and above\n\nThe default value is false, if you want to improve security (such as when apollo is exposed to the public network), you can enable login authentication for eureka by setting this configuration to true.\n\nNote that if eureka login authentication is enabled, the addresses in [eureka.service.url](#_321-eurekaserviceurl-eureka-service-url) needs to be configured with a user name and password, such as:\n\n```\nhttp://some-user-name:some-password@1.1.1.1:8080/eureka/, http://some-user-name:some-password@2.2.2.2:8080/eureka/\n```\n\nAmong them, `some-user-name` and `some-password` need to be consistent with the configuration items of `apollo.eureka.server.security.username` and `apollo.eureka.server.security.password`.\n\n### 3.2.10 apollo.eureka.server.security.username - Configure the username of Eureka server\n\n> For version 2.1.0 and above\n\nConfigure the login username of eureka server, which needs to be used together with [apollo.eureka.server.security.enabled](#_329-apolloeurekaserversecurityenabled-configure-whether-to-enable-eureka-login-authentication).\n\n> Note that the username cannot be configured as apollo.\n\n### 3.2.11 apollo.eureka.server.security.password - Configure the password of Eureka server\n\n> For version 2.1.0 and above\n\nConfigure the login password of eureka server, which needs to be used together with [apollo.eureka.server.security.enabled](#_329-apolloeurekaserversecurityenabled-configure-whether-to-enable-eureka-login-authentication).", "# &nbsp;\n\n# Glossary of Terms\n\n* Common application\n  * Common applications refer to programs that run independently, such as\n    * Web applications\n    * Programs with main functions\n* Public components\n  * Public components refer to distributed libraries, client programs that do not run on their own, such as\n    * Java jar packages\n    * .Net dll file\n\n# I. General Application Access Guide\n\n## 1.1 Creating a project\n\nTo use Apollo, you need to create a project as the first step.\n\n1. Open apollo-portal homepage\n2. Click \"Create a project\".\n\n![create-app-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app-entry.png)\n\n3. Enter the project information\n   * Department: Select the department where the application is located\n   * Application AppId: the unique id used to identify the application, the format is string, it needs to correspond to the app.id configured in the client app.properties\n   * Application Name: the name of the application, used only for interface display\n   * Application Manager: The person who selects it will be the administrator of the project by default, with permissions to manage project permissions, create clusters, create Namespace, etc.\n\n![create-app](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app.png)\n\n4. Click Submit\n\n   After successful creation, it will automatically jump to the project home page\n\n![app-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-created.png)\n\n## 1.2 Project permission assignment\n\n### 1.2.1 Project administrator privileges\n\nThe project administrator has the following privileges.\n\n1. Can manage the permissions assignment of the project\n2. Create clusters\n3. Can create Namespace\n\nIf you need someone else to be the project administrator, you can follow the steps below.\n\n1. Click \"Manage Projects\" on the left side of the page\n   * ![app-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-entry.png)\n\n2. Search for the member you want to add and click Add\n   * ![app-permission-search-user](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-search-user.png)\n   * ![app-permission-user-added](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-user-added.png)\n\n### 1.2.2 Configuring editing and publishing permissions\n\nConfiguration permissions are divided into edit and publish.\n\n* Edit permission allows users to create, modify, and delete configurations on the Apollo interface\n  * Configuration modification only changes on Apollo interface and does not affect the actual configuration used by the application\n* Publish permissions allow users to publish and roll back configurations in the Apollo interface\n  * Configurations are only actually used by the application after they have been published and rolled back\n  * Apollo notifies the application in real time after the user has performed a publish or rollback action and the latest configuration takes effect\n\nAfter the project is created, there are no editing and publishing permissions assigned to the configuration by default, and the project administrator needs to authorize it.\n\n1. Click the authorization button of the namespace application\n   * ![namespace-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-entry.png)\n\n2. Assign the modify permission\n   * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n3. Assign publish privileges\n   * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n## 1.3 Adding configuration items\n\nTo edit the configuration, you need to have the edit permission of this Namespace. If you find that there is no Add Configuration button, you can find the project administrator to authorize it.\n\n### 1.3.1 Adding configuration via form mode\n\n1. Click Add Configuration\n   * ![create-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-entry.png)\n\n2. Enter a configuration item\n   * ![create-item-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-detail.png)\n\n3. Click Submit\n   * ![item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/item-created.png)\n\n### 1.3.2 Editing via text mode\n\nApollo not only supports table mode to add and modify configurations one by one, but also provides text mode to add and modify them in bulk.\nThis is especially useful for migrating from an existing properties file.\n\n1. Switch to text editing mode\n   ![text-mode-config-overview](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-overview.png)\n\n2. Click the Modify Configuration button on the right\n   ![text-mode-config-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-entry.png)\n\n3. Enter the configuration entries and click on Submit Changes\n   ![text-mode-config-submit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-submit.png)\n\n## 1.4 Publishing the configuration\n\nThe configuration will only really be used by the application after it has been published, so after editing the configuration, you need to publish it.\n\nIf you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-entry.png)\n\n2. Fill in the information about the publish and click Publish\n   ![publish-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-detail.png)\n\n## 1.5 Application reads the configuration\n\nAfter the configuration is successfully published, the application can read the configuration through the Apollo client.\n\nApollo currently provides a Java client. For more information, please click [Java Client Usage Documentation](en/usage/java-sdk-user-guide).\n\nIf the application uses other languages, you can also get the configuration by directly accessing the Http interface, for details, please refer to [other-language-client-access-guide](en/usage/other-language-client-user-guide)\n\n## 1.6 Rollback published configuration\n\nIf you find any problem with the released configuration, you can roll back the configuration read by the client to the previous release by clicking the \"Rollback\" button.\n\nThe rollback mechanism here is similar to the release system, where the rollback operation in the release system rolls back the installed packages deployed to the machine to the previous deployed version, but the code in the code repository is not rolled back, so that development can re-release the code after fixing it.\n\nThe rollback in Apollo is a similar mechanism. Clicking rollback rolls back the configuration published to the client to the previous published version, which means that the configuration read by the client will be restored to the previous version, but the configuration in the edited state on the page will not be rolled back, so that the developer can re-publish after fixing the configuration.\n\n# II. Public component access guide\n\n## 2.1 Difference between public components and common applications\n\nPublic components are those client code that are published for use by other applications, such as the CAT client, Hermes Producer client, etc.\n\nAlthough such components are developed and maintained by other teams, the runtime is within the actual business application, so they can essentially be considered part of the application.\n\nUsually, the configuration used by these components is maintained by the original development team, but since the runtime and environment of the actual application vary, we also allow the application to override some of the configuration of the public components when they are actually used.\n\n## 2.2 Steps to access public components\n\nThe access steps for public components are almost identical to those for normal applications, the only difference being that public components need to create their own unique Namespace.\n\nSo, first perform the following steps in the common application access document, and then follow the steps later in this section.\n\n1. [Create Project](en/usage/apollo-user-guide?id=_11-creating-a-project)\n2. [Project administrator privileges](en/usage/apollo-user-guide?id=_121-project-administrator-privileges)\n\n### 2.2.1 Creating Namespace\n\nIf you find no Add Namespace button, you can find the project administrator to authorize it.\n\n1. Click Add Namespace on the left side of the page\n   * ![create-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace.png)\n\n2. Click \"Create New Namespace\".\n   * ![create-namespace-select-type](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-select-type.png)\n\n3. Enter the namespace name for the public component. Note that the namespace name is globally unique.\n   * Apollo will add the department name at the top by default\n   * ![create-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-detail.png)\n\n4. After clicking Submit, the page will automatically jump to the Associated Namespace page\n   * First, select all the environments and clusters that need to have this Namespace, it is generally recommended to select all of them.\n   * Second, select the namespace you just created.\n   * Finally, click Submit\n   Finally, click Submit * ![link-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-namespace-detail.png)\n\n5. After successful linking, the page will automatically jump to the Namespace permission management page\n\n   1. Assign the permission to modify the namespace \n      - \u200b\t![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n   2. Assign permission to publish\n      - \u200b\t![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n6. Click \"Back\" to return to the project page\n\n### 2.2.2 Adding configuration items\n\nTo edit the configuration, you need to have the edit permission of this Namespace. If you find that there is no Add Configuration button, you can find the project administrator to authorize it.\n\n#### 2.2.2.1 Adding configuration via form mode\n\n1. Click Add Configuration\n   ![public-namespace-edit-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item-entry.png)\n\n2. Enter the configuration items\n   ![public-namespace-edit-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item.png)\n\n3. Click Submit\n   ![public-namespace-item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-item-created.png)\n\n#### 2.2.2.2 Edit by text mode\n\nThis part is the same as normal application, please refer to [1.3.2 Editing via text mode](en/usage/apollo-user-guide?id=_132-editing-via-text-mode) for the detailed steps.\n\n### 2.2.3 Publish configuration\n\nThe configuration will only really be used by the application after it has been published, so after editing the configuration, it needs to be published.\n\nIf you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![public-namespace-publish-items-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items-entry.png)\n\n2. Fill in the information about publishing and click Publish\n   ![public-namespace-publish-items](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items.png)\n\n### 2.2.4 Application reading configuration\n\nOnce the configuration is successfully published, the application can read the configuration through the Apollo client.\n\nApollo currently provides a Java client. For more information, click [Java Client Usage Documentation](en/usage/java-sdk-user-guide).\n\nIf the application uses other languages, you can also get the configuration by directly accessing the Http interface, for details, please refer to [other-language-client-access-guide](en/usage/other-language-client-user-guide)\n\nFor reading the configuration of public components, you can refer to the \"Getting the Configuration of Public Namespace\" section in the above document.\n\n## 2.3 Application Override Public Component Configuration Steps\n\nAs mentioned earlier, the configuration of public components is usually maintained by the original development team, but since the actual application runtime and environment vary, we also allow applications to override some of the configuration of public components when they are actually used.\n\nHere is how the application can override the configuration of the public component. For simplicity, assume that the apollo-portal application uses the hermes producer client and wants to adjust the batch send size of hermes.\n\n### 2.3.1 Associating the public component Namespace\n\n1. Go to the home page of the application project that uses the public component and click the Add Namespace button on the left\n   * So, in this example, we need to go to the home page of apollo-portal.\n   * (Adding Namespace requires project administrator privileges, if you find no Add Namespace button, you can find the project administrator to authorize it)\n   * ![link-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace-entry.png)\n\n2. Find the namespace of the hermes producer and select which environments and clusters to associate with it\n   ![link-public-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace.png)\n\n3. After successful linking, the page will automatically jump to the Namespace permission management page\n   1. Assign modify permission\n      ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n   2. Assign permission to publish\n      ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n4. Click \"Back\" to return to the project page\n\n### 2.3.2 Overriding common component configuration\n\n1. Click Add Configuration\n   ![override-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-entry.png)\n\n2. Enter the configuration items to be overridden\n   ![override-public-namespace-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item.png)\n\n3. Click Submit\n   ![override-public-namespace-item-done](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-done.png)\n\n### 2.3.3 Publish configuration\n\nThe configuration will only really be used by the application after it is published, so after editing the configuration, it needs to be published.\n\nTo publish the configuration, you need to have the publish permission of this Namespace, if you find that there is no publish button, you can ask the project administrator to authorize it.\n\n1. Click the \"Publish button\"\n   ![override-public-namespace-item-publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish-entry.png)\n\n2. Fill in the information about the publication and click Publish\n   ![override-public-namespace-item-publish](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish.png)\n\n3. After the configuration is successfully published, the value of sender.batchSize read by the hermes producer client when running inside the apollo-portal application is 1000.\n\n# III. Cluster independent configuration instructions\n\nIn some special cases, the application has the need to do different configurations for different clusters, such as the application deployed in server room A connects to a different es server address than the application deployed in server room B connects to a different es server address.\n\nIn this case, it can be solved by creating different clusters in Apollo.\n\n## 3.1 Creating a cluster\n\nIf you find that there is no Add Cluster button, you can ask the project administrator for authorization.\n\n1. Click the \"Add Cluster\" button on the left side of the page\n   * ![create-cluster](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster.png)\n\n2. Enter the cluster name, select the environment and submit\n   * ![create-cluster-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster-detail.png)\n\n3. Switch to the corresponding cluster, modify the configuration and release it\n   * ![config-in-cluster-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/cluster-created.png)\n\n4. With the above configuration, the application deployed in the SHAJQ server room will read the configuration under the SHAJQ cluster\n\n5. If the application is also deployed in other server rooms, then with the above configuration, the configuration under the default cluster will be read.\n\n# IV. Using the same configuration for multiple AppId\n\nIn some cases, although the application itself is not a public component, it still needs to share the same configuration among multiple AppId, such as different projects of the same product: XX-Web, XX-Service, XX-Job and so on.\n\nIn this case, if you want to implement multiple AppId to use the same configuration, the basic concept is the same as the configuration of public components.\n\nSpecifically, we create a namespace under one of the AppId, write the public configuration information, and then read the configuration of the namespace in each project.\n\nIf an AppId needs to override the public configuration information, then associate a public namespace under that AppId and write the configuration that needs to be overridden.\n\nThe specific steps can be referred to [Public Component Access Guide](en/usage/apollo-user-guide?id=ii-public-component-access-guide).\n\n# V. Grayscale publishing usage guide\n\nWith the grayscale release function, you can achieve.\n\n1. For some configurations that have a relatively large impact on the program, you can first take effect in one or more instances, and observe no problem for a period of time before releasing the configuration in full.\n2. For some configuration parameters that need to be tuned, A/B testing can be achieved through the grayscale release function. You can apply different configurations on different machines and keep tuning and evaluating for a period of time to find out the better configuration before releasing the configuration in full.\n\nThe following is a practical example to describe how to use the grayscale release function.\n\n## 5.1 Introduction to the scenario\n\nThe 100004458 (apollo-demo) project has two clients.\n\n1. 10.32.21.19\n2. 10.32.21.22\n\n![initial-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-instance-list.png)\n\n**Grayscale targets:**\n\n* Currently there is a configuration timeout=2000, we want to grayscale release timeout=3000 for 10.32.21.22 and still timeout=2000 for 10.32.21.19.\n\n![initial-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-config.png)\n\n## 5.2 Creating greyscale\n\nFirst click the `create grayscale` button in the top right corner of the application namespace.\n\n![create-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/create-gray-release.png)\n\nAfter clicking OK, the grayscale version is created successfully and the page will automatically switch to the `grayscale version` tab.\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-gray-release-tab.png)\n\n## 5.3 Grayscale configuration\n\nClick on the `Configure main version`, the `Gray this configuration` button on the far right of the timeout configuration\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/edit-gray-release-config.png)\n\nFill in the popup box with the value to be grayed out: 3000 and click Submit.\n\n![submit-gray-release-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/submit-gray-release-config.png)\n\n![gray-release-config-submitted](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-config-submitted.png)\n\n## 5.4 Configuring grayscale rules\n\nSwitch to the `Gray Rule` Tab and click the `Add Rule` button\n\n![new-gray-release-rule](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/new-gray-release-rule.png)\n\nIn the popup box `Grayed IP` dropdown box will show the list of machines currently using the configuration by default, select the IP we want to gray.\n\n![select-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/select-gray-release-ip.png )\n\n![gray-release-ip-selected](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-ip-selected.png)\n\nIn addition to the IP dimension, from version 2.0.0 onwards there is also support for identifying the list of instances in grayscale by label, which is suitable for scenarios where the IP is not fixed such as `Kubernetes`.\n\nManually enter the label you want to set, and click the Add button when you're done.\n\n![manual-input-gray-release-label](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label.png)\n\n![manual-input-gray-release-label-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label2.png)\n\n![gray-release-rule-saved](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-rule-saved.png)\n\nAfter the above rules are configured, the grayed configuration will take effect for instances with AppId `100004458`, IP `10.32.21.22` or `Label` marked as `myLabel` or `appLabel`.\n\n> For more information on how to label `Label`, you can refer to the configuration instructions in [ApolloLabel](en/usage/java-sdk-user-guide?id=_1247-apollo-label).\n\nIf the required IP is not found in the drop-down box, it means that the machine has not yet taken the configuration from Apollo, you can enter it by clicking Enter IP manually, and click the Add button after entering the IP.\n\n![manual-input-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip.png)\n\n![manual-input-gray-release-ip-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip-2.png)\n\n>Note: For the grayscale rule of public Namespace, you need to specify the appId to be grayscale first, then select the IP and Label.\n\n## 5.5 Grayscale Release\n\nThe configuration rules are in effect, but the grayscale configuration has not been published yet. Switch to the `Configuration` Tab.\n\nCheck the grayscale configuration section again, and if there are no problems, click `Grayscale Publish`.\n\n![prepare-to-do-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-do-gray-release.png)\n\nIn the popup box, you can see that the value of the master version is 2000 and the value of the gray version to be released is 3000. fill in the other information and click on release.\n\n![gray-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-confirm-dialog.png)\n\nAfter the release, switch to the `gray instance list` Tab and you can see that 10.32.21.22 has used the values of the gray release.\n\n![gray-release-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-instance-list.png)\n\nSwitch to the `instance list` of the `master release` and you will see that only 10.32.21.19 of the master configuration is in use.\n\n![master-branch-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list.png)\n\nYou can continue with configuration changes or rule changes later. Configuration changes need to click Gray Release before they take effect, and rule changes take effect in real time after the rule is clicked to complete.\n\n## 5.6 Full Release\n\nIf the grayscale configuration is tested down ideally and meets expectations, then you can operate `full release`.\n\nThe effect of a full release is that\n\n1. The grayscale configuration will be merged back to the main version, in this case, the timeout of the main version will be updated to 3000\n2. The configuration of the main version will be automatically published once\n3. In the full release page, you can choose whether to keep the current grayscale version, the default is not to keep.\n\n![prepare-to-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-full-release.png)\n\n![full-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog.png)\n\n![full-release-confirm-dialog-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog-2.png) \n\nI chose not to keep the grayscale version, so the effect after the release is that the configuration of the master version is updated and the grayscale version is deleted. Clicking on the instance list of the main version, you can see that 10.32.21.22 and 10.32.21.19 both use the latest configuration of the main version.\n\n![master-branch-instance-list-after-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list-after-full-release.png)\n\n## 5.7 Giving up grayscale\n\nIf the grayscale version is not ideal or not needed anymore, you can click `Drop Grayscale`.\n\n![abandon-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/abandon-gray-release.png)\n\n## 5.8 Release History\n\nClick the `release history` button of the main release to see the release history of the current namespace's main release as well as the grayscale version.\n\n![view-release-history](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history.png)\n\n![view-release-history-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history-detail.png)\n\n\n\n# VI\u3001Other Configurations\n\n## 6.1 Configure view permissions\n\nStarting from version 1.1.0, apollo-portal has added support for view permissions, which allows you to configure an environment to allow only project members to view the private Namespace configuration.\n\nThe project members here are :\n\n1. The project's administrator\n2. Have the permission to modify or publish the private Namespace in that environment\n\nThe configuration is very simple. After logging in with your super administrator account, go to the `Administrator Tools - System Parameters` page and add or modify the `configView.memberOnly.envs` configuration item.\n\n![show-all-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/show-all-config.png)\n\n![configView.memberOnly.envs](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/configure-view-permissions.png)\n\n## 6.2 Configuring access keys\n\nApollo has added an access key mechanism since version 1.6.0, so that only authenticated clients can access sensitive configurations. If the application has access keys enabled, the client needs to configure the keys, otherwise the configuration cannot be accessed.\n\n1. The project administrator opens the Manage Keys page\n   ![Admin Key Portal](https://user-images.githubusercontent.com/837658/94990081-f4d3cd80-05ab-11eb-9470-fed5ec6de92e.png)\n\n2. Generate an access key for each environment of the project, note that it is disabled by default, and it is recommended to turn it on after the clients are all configured\n   ![Key Configuration Page](https://user-images.githubusercontent.com/837658/94990150-788dba00-05ac-11eb-9a12-727fdb872e42.png)\n\n3. Client-side [configure access key](en/usage/java-sdk-user-guide?id=_1244-configuring-access-keys) .\n\n# VII. Best practices\n\n## 7.1 Security Related\n\nAs a basic service, the configuration center stores very important configuration information of the company, so security factors need to be focused on, some considerations are listed below for your reference, and you are also welcome to share your own practice cases.\n\n### 7.1.1 Authentication\n\nIt is recommended to access the company's unified authentication system, such as SSO, LDAP, etc. The access method can be found in [Portal to implement user login function](en/development/portal-how-to-implement-user-login-function)\n\n> If you use Spring Security simple authentication provided by Apollo, you must remember to change the password of super administrator apollo\n\n### 7.1.2 Authorization\n\nApollo supports fine-grained permissions control, so please make sure to control the permissions according to the actual situation: 1.\n\n1. [Project administrator privileges](en/usage/apollo-user-guide?id=_121-project-administrator-privileges)\n   * Apollo allows all logged-in users to create projects by default. If you only allow some users to create projects, you can turn on [Create project permission control](en/deployment/distributed-deployment-guide?id=_3110-rolecreate-applicationenabled-whether-to-enable-control-over-creating-project-permissions)\n2. [Configure editing and publishing privileges](en/usage/apollo-user-guide?id=_122-configuring-editing-and-publishing-permissions)\n   * Configuration editing and publishing privileges support configuration by environment, for example, the development environment developers can complete the process of configuration editing and publishing by themselves, but the production environment publishing privileges to the test or operation and maintenance personnel\n   * It is recommended to turn on [release audit](en/deployment/distributed-deployment-guide?id=_322-namespacelockswitch-only-one-person-can-modify-the-switch-at-a-time-for-release-review) at the same time for production environment, so as to control that only one person can modify a configuration release and another person can release it. This ensures that configuration changes are adequately checked.\n3. [Configuration view permissions](en/usage/apollo-user-guide?id=_61-configure-view-permissions)\n   * You can specify that only project members of an environment are allowed to view the configuration of a private Namespace, thus avoiding sensitive configuration leaks, such as production environments\n\n### 7.1.3 System access\n\nIn addition to user permissions, system access also needs to be considered in terms of.\n\n1. `apollo-configservice` and `apollo-adminservice` are designed based on the intranet trusted network, so for security reasons, `apollo-configservice` and `apollo-adminservice` are prohibited from being exposed directly to the public network\n2. For sensitive configurations, consider enabling [access secret key](en/usage/apollo-user-guide?id=_62-configuring-access-keys) so that only authenticated clients can access sensitive configurations\n3. version 1.7.1 and above can consider enabling [access control](en/deployment/distributed-deployment-guide?id=_326-admin-servicesaccesscontrolenabled-configure-whether-apollo-adminservice-has-access-control-enabled) for `apollo-adminservice`, so that only [controlled](en/deployment/distributed-deployment-guide?id=_3112-admin-servicesaccesstokens-set-the-access-token-required-by-apollo-portal-to-access-the-apollo-adminservice-for-each-environment) `apollo-portal` can access the corresponding interface to enhance security\n4. version 2.1.0 and above can consider enabling [access control](en/deployment/distributed-deployment-guide?id=_329-apolloeurekaserversecurityenabled-configure-whether-to-enable-eureka-login-authentication) for `eureka`, so that only controlled `apollo-configservice` and `apollo-adminservice` can be registered to `eureka` to enhance security", "\u672c\u6587\u6863\u4ecb\u7ecd\u4e86\u5982\u4f55\u6309\u7167\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u65b9\u5f0f\u7f16\u8bd1\u3001\u6253\u5305\u3001\u90e8\u7f72Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u7b49\u73af\u5883\u5206\u522b\u90e8\u7f72\u8fd0\u884c\u3002\n\n> \u5982\u679c\u53ea\u662f\u9700\u8981\u5728\u672c\u5730\u5feb\u901f\u90e8\u7f72\u8bd5\u7528Apollo\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[Quick Start](zh/deployment/quick-start)\n\n# &nbsp;\n# \u4e00\u3001\u51c6\u5907\u5de5\u4f5c\n\n## 1.1 \u8fd0\u884c\u65f6\u73af\u5883\n\n### 1.1.1 OS\n\n\u670d\u52a1\u7aef\u57fa\u4e8eSpring Boot\uff0c\u542f\u52a8\u811a\u672c\u7406\u8bba\u4e0a\u652f\u6301\u6240\u6709Linux\u53d1\u884c\u7248\uff0c\u5efa\u8bae[CentOS 7](https://www.centos.org/)\u3002\n\n### 1.1.2 Java\n\n* Apollo\u670d\u52a1\u7aef\uff1a1.8+\n* Apollo\u5ba2\u6237\u7aef\uff1a1.8+\n    * \u5982\u9700\u8fd0\u884c\u5728 Java 1.7 \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u8bf7\u4f7f\u7528 1.x \u7248\u672c\u7684 apollo \u5ba2\u6237\u7aef\uff0c\u5982 1.9.1\n\n\u5728\u914d\u7f6e\u597d\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a\n```sh\njava -version\n```\n\n\u6837\u4f8b\u8f93\u51fa\uff1a\n```sh\njava version \"1.8.0_74\"\nJava(TM) SE Runtime Environment (build 1.8.0_74-b02)\nJava HotSpot(TM) 64-Bit Server VM (build 25.74-b02, mixed mode)\n```\n\n## 1.2 MySQL\n\n* \u7248\u672c\u8981\u6c42\uff1a5.6.5+\n\nApollo\u7684\u8868\u7ed3\u6784\u5bf9`timestamp`\u4f7f\u7528\u4e86\u591a\u4e2adefault\u58f0\u660e\uff0c\u6240\u4ee5\u9700\u89815.6.5\u4ee5\u4e0a\u7248\u672c\u3002\n\n\u8fde\u63a5\u4e0aMySQL\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a\n```sql\nSHOW VARIABLES WHERE Variable_name = 'version';\n```\n\n| Variable_name | Value  |\n|---------------|--------|\n| version       | 5.7.11 |\n\n> \u6ce81\uff1aMySQL\u7248\u672c\u53ef\u4ee5\u964d\u7ea7\u52305.5\uff0c\u8be6\u89c1[mysql \u4f9d\u8d56\u964d\u7ea7\u8ba8\u8bba](https://github.com/apolloconfig/apollo/issues/481)\u3002\n\n> \u6ce82\uff1a\u5982\u679c\u5e0c\u671b\u4f7f\u7528Oracle\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[vanpersl](https://github.com/vanpersl)\u5728Apollo 0.8.0\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Oracle\u9002\u914d\u4ee3\u7801](https://github.com/apolloconfig/apollo/compare/v0.8.0...vanpersl:db-oracle)\uff0cOracle\u7248\u672c\u4e3a10.2.0.1.0\u3002\n\n> \u6ce83\uff1a\u5982\u679c\u5e0c\u671b\u4f7f\u7528Postgres\u7684\u8bdd\uff0c\u53ef\u4ee5\u53c2\u8003[oaksharks](https://github.com/oaksharks)\u5728Apollo 0.9.1\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Pg\u9002\u914d\u4ee3\u7801](https://github.com/oaksharks/apollo/compare/ac10768ee2e11c488523ca0e845984f6f71499ac...oaksharks:pg)\uff0cPostgres\u7684\u7248\u672c\u4e3a9.3.20\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003[xiao0yy](https://github.com/xiao0yy)\u5728Apollo 0.10.2\u57fa\u7840\u4e0a\u5f00\u53d1\u7684[Pg\u9002\u914d\u4ee3\u7801](https://github.com/apolloconfig/apollo/issues/1293)\uff0cPostgres\u7684\u7248\u672c\u4e3a9.5\u3002\n\n## 1.3 \u73af\u5883\n\n\u5206\u5e03\u5f0f\u90e8\u7f72\u9700\u8981\u4e8b\u5148\u786e\u5b9a\u90e8\u7f72\u7684\u73af\u5883\u4ee5\u53ca\u90e8\u7f72\u65b9\u5f0f\u3002\n\nApollo\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u73af\u5883\uff1a\n* DEV\n    * \u5f00\u53d1\u73af\u5883\n* FAT\n    * \u6d4b\u8bd5\u73af\u5883\uff0c\u76f8\u5f53\u4e8ealpha\u73af\u5883(\u529f\u80fd\u6d4b\u8bd5)\n* UAT\n    * \u96c6\u6210\u73af\u5883\uff0c\u76f8\u5f53\u4e8ebeta\u73af\u5883\uff08\u56de\u5f52\u6d4b\u8bd5\uff09\n* PRO\n    * \u751f\u4ea7\u73af\u5883\n\n> \u5982\u679c\u5e0c\u671b\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u73af\u5883\u540d\u79f0\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[Portal\u5982\u4f55\u589e\u52a0\u73af\u5883](zh/faq/common-issues-in-deployment-and-development-phase?id=_4-portal\u5982\u4f55\u589e\u52a0\u73af\u5883\uff1f)\n\n\u53ef\u4ee5\u53c2\u8003 [\u90e8\u7f72\u67b6\u6784](zh/deployment/deployment-architecture.md)\n\n\n## 1.4 \u7f51\u7edc\u7b56\u7565\n\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u65f6\u5019\uff0c`apollo-configservice`\u548c`apollo-adminservice`\u9700\u8981\u628a\u81ea\u5df1\u7684IP\u548c\u7aef\u53e3\u6ce8\u518c\u5230Meta Server\uff08apollo-configservice\u672c\u8eab\uff09\u3002\n\nApollo\u5ba2\u6237\u7aef\u548cPortal\u4f1a\u4eceMeta Server\u83b7\u53d6\u670d\u52a1\u7684\u5730\u5740\uff08IP+\u7aef\u53e3\uff09\uff0c\u7136\u540e\u901a\u8fc7\u670d\u52a1\u5730\u5740\u76f4\u63a5\u8bbf\u95ee\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c`apollo-configservice`\u548c`apollo-adminservice`\u662f\u57fa\u4e8e\u5185\u7f51\u53ef\u4fe1\u7f51\u7edc\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c**\u8bf7\u4e0d\u8981\u5c06`apollo-configservice`\u548c`apollo-adminservice`\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51**\u3002\n\n\u6240\u4ee5\u5982\u679c\u5b9e\u9645\u90e8\u7f72\u7684\u673a\u5668\u6709\u591a\u5757\u7f51\u5361\uff08\u5982docker\uff09\uff0c\u6216\u8005\u5b58\u5728\u67d0\u4e9b\u7f51\u5361\u7684IP\u662fApollo\u5ba2\u6237\u7aef\u548cPortal\u65e0\u6cd5\u8bbf\u95ee\u7684\uff08\u5982\u7f51\u7edc\u5b89\u5168\u9650\u5236\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728`apollo-configservice`\u548c`apollo-adminservice`\u4e2d\u505a\u76f8\u5173\u914d\u7f6e\u6765\u89e3\u51b3\u8fde\u901a\u6027\u95ee\u9898\u3002\n\n### 1.4.1 \u5ffd\u7565\u67d0\u4e9b\u7f51\u5361\n\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u628a`docker0`\u548c`veth`\u5f00\u5934\u7684\u7f51\u5361\u5728\u6ce8\u518c\u5230Eureka\u65f6\u5ffd\u7565\u6389\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Dspring.cloud.inetutils.ignoredInterfaces[0]=docker0\n-Dspring.cloud.inetutils.ignoredInterfaces[1]=veth.*\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[0]=docker0\nSPRING_CLOUD_INETUTILS_IGNORED_INTERFACES[1]=veth.*\n```\n\n### 1.4.2 \u6307\u5b9a\u8981\u6ce8\u518c\u7684IP\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u6307\u5b9a\u6ce8\u518c\u7684IP\u4e3a`1.2.3.4`\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Deureka.instance.ip-address=1.2.3.4\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nEUREKA_INSTANCE_IP_ADDRESS=1.2.3.4\n```\n\n### 1.4.3 \u6307\u5b9a\u8981\u6ce8\u518c\u7684URL\n\n\u53ef\u4ee5\u5206\u522b\u4fee\u6539`apollo-configservice`\u548c`apollo-adminservice`\u7684startup.sh\uff0c\u901a\u8fc7JVM System Property\u4f20\u5165-D\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7OS Environment Variable\u4f20\u5165\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u6307\u5b9a\u6ce8\u518c\u7684URL\u4e3a`http://1.2.3.4:8080`\u3002\n\nJVM System Property\u793a\u4f8b\uff1a\n\n```properties\n-Deureka.instance.homePageUrl=http://1.2.3.4:8080\n-Deureka.instance.preferIpAddress=false\n```\n\nOS Environment Variable\u793a\u4f8b\uff1a\n\n```properties\nEUREKA_INSTANCE_HOME_PAGE_URL=http://1.2.3.4:8080\nEUREKA_INSTANCE_PREFER_IP_ADDRESS=false\n```\n\n### 1.4.4 \u76f4\u63a5\u6307\u5b9aapollo-configservice\u5730\u5740\n\n\u5982\u679cApollo\u90e8\u7f72\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u672c\u5730\u5f00\u53d1\u73af\u5883\u65e0\u6cd5\u8fde\u63a5\uff0c\u4f46\u53c8\u9700\u8981\u505a\u5f00\u53d1\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5347\u7ea7\u52300.11.0\u7248\u672c\u53ca\u4ee5\u4e0a\uff0c\u7136\u540e\u914d\u7f6e[\u8df3\u8fc7Apollo Meta Server\u670d\u52a1\u53d1\u73b0](zh/usage/java-sdk-user-guide#_1222-\u8df3\u8fc7apollo-meta-server\u670d\u52a1\u53d1\u73b0)\n\n### 1.4.5 \u6253\u901a\u7f51\u7edc\n\n\u5728\u4e00\u4e9b\u516c\u53f8\uff08\u4f8b\u5982\u91d1\u878d\u884c\u4e1a\u7684\u516c\u53f8\uff09\uff0c\u5b58\u5728\u5f88\u591a\u9632\u706b\u5899\u548c\u7f51\u7edc\u9694\u79bb\uff0c\u9700\u8981\u6253\u901a\u7f51\u7edc\uff08\u8ba9ip1\u53ef\u4ee5\u8bbf\u95eeip2\u7684\u67d0\u4e2a\u7aef\u53e3\uff09\n\n#### 1.4.5.1 \u6253\u901a\u5ba2\u6237\u7aef\u5230\u914d\u7f6e\u4e2d\u5fc3\u7684\u7f51\u7edc\n\n\u5bf9\u4e8e\u4f7f\u7528\u914d\u7f6e\u4e2d\u5fc3\u7684\u5ba2\u6237\u7aef\uff0c\n\nclient\u9700\u8981\u8bbf\u95ee\u6240\u6709\uff08\u6216\u8005\u76f8\u540c\u673a\u623f\u5185\u7684\uff09Meta Server\u548cConfig Service\uff08\u9ed8\u8ba4\u90fd\u662f8080\u7aef\u53e3\uff09\uff0c\u8bf7\u4e0d\u8981\u6253\u901aClient\u5230Admin Service\u7684\u7f51\u7edc\n\n```mermaid\nflowchart LR\n\tsubgraph servers[IP1:8080, IP2:8080, ..., IPn:8080]\n\t\tm[Meta Sever]\n\t\tc[Config Service]\n\tend\n\tclient --> servers\n```\n\n\u5982\u679c\u67d0\u4e2a\u5e94\u7528\u9700\u8981\u4f7f\u7528openapi\uff0c\u8fd8\u9700\u8981\u8bbf\u95eePortal\uff08\u9ed8\u8ba4\u662f8070\u7aef\u53e3\uff09\n\n```mermaid\nflowchart LR\n\tsubgraph servers[IP:8070]\n\t\tPortal\n\tend\n\topenapi-client --> servers\n```\n\n#### 1.4.5.2 \u6253\u901a\u914d\u7f6e\u4e2d\u5fc3\u5185\u90e8\u7684\u7f51\u7edc\n\n\u5bf9\u4e8e\u914d\u7f6e\u4e2d\u5fc3\u81ea\u5df1\u5185\u90e8\uff0c\u7531\u4e8e\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u9700\u8981\u4e92\u76f8\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e5f\u8981\u4fdd\u8bc1\u7f51\u7edc\u4e0a\u7684\u8fde\u901a\n\n```mermaid\nflowchart LR\n\tsubgraph config-service-servers[All Config Service's IP:8080]\n\t\tm[Meta Server]\n\t\tc[Config Service]\n\tend\n\tsubgraph admin-service-servers[All Admin Service's IP:8090]\n\t\ta[Admin Service]\n\tend\n\t\n\tsubgraph portal-servers[IP:8070]\n\t\tp[Portal]\n\tend\n\t\n\t\n\tconfigdb[(ConfigDB)]\n\tportaldb[(PortalDB)]\n\t\n\ta --> config-service-servers\n\t\n\ta --> configdb\n\tc --> configdb\n\t\n\tp --> config-service-servers\n\tp --> admin-service-servers\n\tp --> portaldb\n```\n\n# \u4e8c\u3001\u90e8\u7f72\u6b65\u9aa4\n\n\u90e8\u7f72\u6b65\u9aa4\u603b\u4f53\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0cApollo\u7684\u552f\u4e00\u4f9d\u8d56\u662f\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u9996\u5148\u628a\u6570\u636e\u5e93\u51c6\u5907\u597d\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u9009\u62e9\u4e0d\u540c\u7684\u90e8\u7f72\u65b9\u5f0f\uff1a\n\n> [@lingjiaju](https://github.com/lingjiaju)\u5f55\u5236\u4e86\u4e00\u7cfb\u5217Apollo\u5feb\u901f\u4e0a\u624b\u89c6\u9891\uff0c\u5982\u679c\u770b\u6587\u6863\u89c9\u5f97\u7565\u7e41\u7410\u7684\u8bdd\uff0c\u4e0d\u59a8\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u4ed6\u7684[\u89c6\u9891\u6559\u7a0b](https://pan.baidu.com/s/1blv87EOZS77NWT8Amkijkw#list/path=%2F)\u3002\n\n> \u5982\u679c\u90e8\u7f72\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003[\u90e8\u7f72&\u5f00\u53d1\u9047\u5230\u7684\u5e38\u89c1\u95ee\u9898](zh/faq/common-issues-in-deployment-and-development-phase)\uff0c\u4e00\u822c\u90fd\u80fd\u627e\u5230\u7b54\u6848\u3002\n\n## 2.1 \u521b\u5efa\u6570\u636e\u5e93\nApollo\u670d\u52a1\u7aef\u5171\u9700\u8981\u4e24\u4e2a\u6570\u636e\u5e93\uff1a`ApolloPortalDB`\u548c`ApolloConfigDB`\uff0c\u6211\u4eec\u628a\u6570\u636e\u5e93\u3001\u8868\u7684\u521b\u5efa\u548c\u6837\u4f8b\u6570\u636e\u90fd\u5206\u522b\u51c6\u5907\u4e86sql\u6587\u4ef6\uff0c\u53ea\u9700\u8981\u5bfc\u5165\u6570\u636e\u5e93\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662fApolloPortalDB\u53ea\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4e00\u4e2a\u5373\u53ef\uff0c\u800cApolloConfigDB\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u90e8\u7f72\u4e00\u5957\uff0c\u5982fat\u3001uat\u548cpro\u5206\u522b\u90e8\u7f723\u5957ApolloConfigDB\u3002\n\n> \u6ce8\u610f\uff1a\u5982\u679c\u4f60\u672c\u5730\u5df2\u7ecf\u521b\u5efa\u8fc7Apollo\u6570\u636e\u5e93\uff0c\u8bf7\u6ce8\u610f\u5907\u4efd\u6570\u636e\u3002\u6211\u4eec\u51c6\u5907\u7684sql\u6587\u4ef6\u4f1a\u6e05\u7a7aApollo\u76f8\u5173\u7684\u8868\u3002\n\n### 2.1.1 \u521b\u5efaApolloPortalDB\n\n\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u901a\u8fc7\u624b\u52a8\u5bfc\u5165SQL\u6216\u662f\u901a\u8fc7[Flyway](https://flywaydb.org/)\u81ea\u52a8\u5bfc\u5165SQL\u521b\u5efa\u3002\n\n#### 2.1.1.1 \u624b\u52a8\u5bfc\u5165SQL\u521b\u5efa\n\n\u901a\u8fc7\u5404\u79cdMySQL\u5ba2\u6237\u7aef\u5bfc\u5165[apolloportaldb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloportaldb.sql)\u5373\u53ef\u3002\n\n\u4ee5MySQL\u539f\u751f\u5ba2\u6237\u7aef\u4e3a\u4f8b\uff1a\n```sql\nsource /your_local_path/scripts/sql/apolloportaldb.sql\n```\n\n#### 2.1.1.2 \u901a\u8fc7Flyway\u5bfc\u5165SQL\u521b\u5efa\n\n> \u9700\u89811.3.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539[flyway-portaldb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-portaldb.properties)\u4e2d\u7684`flyway.user`\u3001`flyway.password`\u548c`flyway.url`\u914d\u7f6e\n2. \u5728apollo\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c`mvn -N -Pportaldb flyway:migrate`\n\n#### 2.1.1.3 \u9a8c\u8bc1\n\n\u5bfc\u5165\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0bsql\u8bed\u53e5\u6765\u9a8c\u8bc1\uff1a\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloPortalDB`.`ServerConfig` limit 1;\n```\n\n| Id | Key                | Value | Comment          |\n|----|--------------------|-------|------------------|\n| 1  | apollo.portal.envs | dev   | \u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868 |\n\n> \u6ce8\uff1aApolloPortalDB\u53ea\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4e00\u4e2a\u5373\u53ef\n\n### 2.1.2 \u521b\u5efaApolloConfigDB\n\n\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u901a\u8fc7\u624b\u52a8\u5bfc\u5165SQL\u6216\u662f\u901a\u8fc7[Flyway](https://flywaydb.org/)\u81ea\u52a8\u5bfc\u5165SQL\u521b\u5efa\u3002\n\n#### 2.1.2.1 \u624b\u52a8\u5bfc\u5165SQL\n\n\u901a\u8fc7\u5404\u79cdMySQL\u5ba2\u6237\u7aef\u5bfc\u5165[apolloconfigdb.sql](https://github.com/apolloconfig/apollo/blob/master/scripts/sql/apolloconfigdb.sql)\u5373\u53ef\u3002\n\n\u4ee5MySQL\u539f\u751f\u5ba2\u6237\u7aef\u4e3a\u4f8b\uff1a\n```sql\nsource /your_local_path/scripts/sql/apolloconfigdb.sql\n```\n\n#### 2.1.2.2 \u901a\u8fc7Flyway\u5bfc\u5165SQL\n\n> \u9700\u89811.3.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539[flyway-configdb.properties](https://github.com/apolloconfig/apollo/blob/master/scripts/flyway/flyway-configdb.properties)\u4e2d\u7684`flyway.user`\u3001`flyway.password`\u548c`flyway.url`\u914d\u7f6e\n2. \u5728apollo\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c`mvn -N -Pconfigdb flyway:migrate`\n\n#### 2.1.2.3 \u9a8c\u8bc1\n\n\u5bfc\u5165\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0bsql\u8bed\u53e5\u6765\u9a8c\u8bc1\uff1a\n```sql\nselect `Id`, `Key`, `Value`, `Comment` from `ApolloConfigDB`.`ServerConfig` limit 1;\n```\n| Id | Key                | Value                         | Comment       |\n|----|--------------------|-------------------------------|---------------|\n| 1  | eureka.service.url | http://127.0.0.1:8080/eureka/ | Eureka\u670d\u52a1Url |\n\n> \u6ce8\uff1aApolloConfigDB\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u90e8\u7f72\u4e00\u5957\uff0c\u5982fat\u3001uat\u548cpro\u5206\u522b\u90e8\u7f723\u5957ApolloConfigDB\n\n#### 2.1.2.4 \u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165ApolloConfigDB\u7684\u9879\u76ee\u6570\u636e\n\u5982\u679c\u662f\u5168\u65b0\u90e8\u7f72\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u8bf7\u5ffd\u7565\u6b64\u6b65\u3002\n\n\u5982\u679c\u4e0d\u662f\u5168\u65b0\u90e8\u7f72\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\uff0c\u6bd4\u5982\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u65f6\u5728Apollo\u914d\u7f6e\u4e2d\u5fc3\u5df2\u7ecf\u521b\u5efa\u4e86\u4e0d\u5c11\u9879\u76ee\u4ee5\u53canamespace\u7b49\uff0c\u90a3\u4e48\u5728\u65b0\u73af\u5883\u4e2d\u7684ApolloConfigDB\u4e2d\u9700\u8981\u4ece\u5176\u5b83\u6b63\u5e38\u8fd0\u884c\u7684\u73af\u5883\u4e2d\u5bfc\u5165\u5fc5\u8981\u7684\u9879\u76ee\u6570\u636e\u3002\n\n\u4e3b\u8981\u6d89\u53caApolloConfigDB\u7684\u4e0b\u97624\u5f20\u8868\uff0c\u4e0b\u9762\u540c\u65f6\u9644\u4e0a\u9700\u8981\u5bfc\u5165\u7684\u6570\u636e\u67e5\u8be2\u8bed\u53e5\uff1a\n\n1. App\n    * \u5bfc\u5165\u5168\u90e8\u7684App\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`App` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`App` where `IsDeleted` = 0;\n2. AppNamespace\n    * \u5bfc\u5165\u5168\u90e8\u7684AppNamespace\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`AppNamespace` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`AppNamespace` where `IsDeleted` = 0;\n3. Cluster\n    * \u5bfc\u5165\u9ed8\u8ba4\u7684default\u96c6\u7fa4\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`Cluster` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`Cluster` where `Name` = 'default' and `IsDeleted` = 0;\n4. Namespace\n    * \u5bfc\u5165\u9ed8\u8ba4\u7684default\u96c6\u7fa4\u4e2d\u7684namespace\n    * \u5982\uff1ainsert into `\u65b0\u73af\u5883\u7684ApolloConfigDB`.`Namespace` select * from `\u5176\u5b83\u73af\u5883\u7684ApolloConfigDB`.`Namespace` where `ClusterName` = 'default' and `IsDeleted` = 0;\n\n\u540c\u65f6\u4e5f\u522b\u5fd8\u4e86\u901a\u77e5\u7528\u6237\u5728\u65b0\u7684\u73af\u5883\u7ed9\u81ea\u5df1\u7684\u9879\u76ee\u8bbe\u7f6e\u6b63\u786e\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u5f71\u54cd\u9762\u6bd4\u8f83\u5927\u7684\u516c\u5171namespace\u914d\u7f6e\u3002\n\n> \u5982\u679c\u662f\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u73af\u5883\u8fc1\u79fb\u6570\u636e\uff0c\u5efa\u8bae\u8fc1\u79fb\u5b8c\u91cd\u542f\u4e00\u4e0bconfig service\uff0c\u56e0\u4e3aconfig service\u4e2d\u6709appnamespace\u7684\u7f13\u5b58\u6570\u636e\n\n### 2.1.3 \u8c03\u6574\u670d\u52a1\u7aef\u914d\u7f6e\n\nApollo\u81ea\u8eab\u7684\u4e00\u4e9b\u914d\u7f6e\u662f\u653e\u5728\u6570\u636e\u5e93\u91cc\u9762\u7684\uff0c\u6240\u4ee5\u9700\u8981\u9488\u5bf9\u5b9e\u9645\u60c5\u51b5\u505a\u4e00\u4e9b\u8c03\u6574\uff0c\u5177\u4f53\u53c2\u6570\u8bf4\u660e\u8bf7\u53c2\u8003[\u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e](#\u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e)\u3002\n\n\u5927\u90e8\u5206\u914d\u7f6e\u53ef\u4ee5\u5148\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8fc7 [apollo.portal.envs](#_311-apolloportalenvs-\u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868) \u548c [eureka.service.url](#_321-eurekaserviceurl-eureka\u670d\u52a1url) \u8bf7\u52a1\u5fc5\u914d\u7f6e\u6b63\u786e\u540e\u518d\u8fdb\u884c\u4e0b\u9762\u7684\u90e8\u7f72\u6b65\u9aa4\u3002\n\n## 2.2 \u865a\u62df\u673a/\u7269\u7406\u673a\u90e8\u7f72\n### 2.2.1 \u83b7\u53d6\u5b89\u88c5\u5305\n\n\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5b89\u88c5\u5305\uff1a\n\n1. \u76f4\u63a5\u4e0b\u8f7d\u5b89\u88c5\u5305\n    * \u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7d\u9884\u5148\u6253\u597d\u7684\u5b89\u88c5\u5305\n    * \u5982\u679c\u5bf9Apollo\u7684\u4ee3\u7801\u6ca1\u6709\u5b9a\u5236\u9700\u6c42\uff0c\u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u7701\u53bb\u672c\u5730\u6253\u5305\u7684\u8fc7\u7a0b\n2. \u901a\u8fc7\u6e90\u7801\u6784\u5efa\n    * \u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7dSource code\u5305\u6216\u76f4\u63a5clone[\u6e90\u7801](https://github.com/ctripcorp/apollo)\u540e\u5728\u672c\u5730\u6784\u5efa\n    * \u5982\u679c\u9700\u8981\u5bf9Apollo\u7684\u505a\u5b9a\u5236\u5f00\u53d1\uff0c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\n\n#### 2.2.1.1 \u76f4\u63a5\u4e0b\u8f7d\u5b89\u88c5\u5305\n\n##### 2.2.1.1.1 \u83b7\u53d6apollo-configservice\u3001apollo-adminservice\u3001apollo-portal\u5b89\u88c5\u5305\n\n\u4ece[GitHub Release](https://github.com/apolloconfig/apollo/releases)\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684`apollo-configservice-x.x.x-github.zip`\u3001`apollo-adminservice-x.x.x-github.zip`\u548c`apollo-portal-x.x.x-github.zip`\u5373\u53ef\u3002\n\n##### 2.2.1.1.2 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\nApollo\u670d\u52a1\u7aef\u9700\u8981\u77e5\u9053\u5982\u4f55\u8fde\u63a5\u5230\u4f60\u524d\u9762\u521b\u5efa\u7684\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u4f4d\u4e8e\u4e0a\u4e00\u6b65\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\u4e2d\u7684`config/application-github.properties`\u4e2d\u3002\n\n###### 2.2.1.1.2.1 \u914d\u7f6eapollo-configservice\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-configservice-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloConfigDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883config-service\u9700\u8981\u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684\u6570\u636e\u5e93\u53c2\u6570\n\n###### 2.2.1.1.2.2 \u914d\u7f6eapollo-adminservice\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-adminservice-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloConfigDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883admin-service\u9700\u8981\u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684\u6570\u636e\u5e93\u53c2\u6570\n\n###### 2.2.1.1.2.3 \u914d\u7f6eapollo-portal\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\n\n1. \u89e3\u538b`apollo-portal-x.x.x-github.zip`\n2. \u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`config`\u76ee\u5f55\u4e0b\u7684`application-github.properties`\u6587\u4ef6\n3. \u586b\u5199\u6b63\u786e\u7684ApolloPortalDB\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\uff0c\u6ce8\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u540e\u9762\u4e0d\u8981\u6709\u7a7a\u683c!\n4. \u4fee\u6539\u5b8c\u7684\u6548\u679c\u5982\u4e0b\uff1a\n```properties\n# DataSource\nspring.datasource.url = jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\nspring.datasource.username = someuser\nspring.datasource.password = somepwd\n```\n\n###### 2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f\n\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmeta service\u548cconfig service\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2aJVM\u8fdb\u7a0b\uff0c\u6240\u4ee5meta service\u7684\u5730\u5740\u5c31\u662fconfig service\u7684\u5730\u5740\u3002\n\n> \u5bf9\u4e8e1.6.0\u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7ApolloPortalDB.ServerConfig\u4e2d\u7684\u914d\u7f6e\u9879\u6765\u914d\u7f6eMeta Service\u5730\u5740\uff0c\u8be6\u89c1[apollo.portal.meta.servers - \u5404\u73af\u5883Meta Service\u5217\u8868](#_312-apolloportalmetaservers-\u5404\u73af\u5883meta-service\u5217\u8868)\n\n\u4f7f\u7528\u7a0b\u5e8f\u5458\u4e13\u7528\u7f16\u8f91\u5668\uff08\u5982vim\uff0cnotepad++\uff0csublime\u7b49\uff09\u6253\u5f00`apollo-portal-x.x.x-github.zip`\u4e2d`config`\u76ee\u5f55\u4e0b\u7684`apollo-env.properties`\u6587\u4ef6\u3002\n\n\u5047\u8bbeDEV\u7684apollo-configservice\u672a\u7ed1\u5b9a\u57df\u540d\uff0c\u5730\u5740\u662f1.1.1.1:8080\uff0cFAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.fat.xxx.com\uff0cUAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.uat.xxx.com\uff0cPRO\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.xxx.com\uff0c\u90a3\u4e48\u53ef\u4ee5\u5982\u4e0b\u4fee\u6539\u5404\u73af\u5883meta service\u670d\u52a1\u5730\u5740\uff0c\u683c\u5f0f\u4e3a`${env}.meta=http://${config-service-url:port}`\uff0c\u5982\u679c\u67d0\u4e2a\u73af\u5883\u4e0d\u9700\u8981\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff08\u5982lpt.meta\uff09\uff1a\n\n```sh\ndev.meta=http://1.1.1.1:8080\nfat.meta=http://apollo.fat.xxx.com\nuat.meta=http://apollo.uat.xxx.com\npro.meta=http://apollo.xxx.com\n```\n\n\u9664\u4e86\u901a\u8fc7`apollo-env.properties`\u65b9\u5f0f\u914d\u7f6emeta service\u4ee5\u5916\uff0capollo\u4e5f\u652f\u6301\u5728\u8fd0\u884c\u65f6\u6307\u5b9ameta service\uff08\u4f18\u5148\u7ea7\u6bd4`apollo-env.properties`\u9ad8\uff09\uff1a\n1. \u901a\u8fc7Java System Property `${env}_meta`\n    * \u53ef\u4ee5\u901a\u8fc7Java\u7684System Property `${env}_meta`\u6765\u6307\u5b9a\n    * \u5982`java -Ddev_meta=http://config-service-url -jar xxx.jar`\n    * \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5982`System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684System Environment`${ENV}_META`\n    * \u5982`DEV_META=http://config-service-url`\n    * \u6ce8\u610fkey\u4e3a\u5168\u5927\u5199\uff0c\u4e14\u4e2d\u95f4\u662f`_`\u5206\u9694\n\n>\u6ce81: \u4e3a\u4e86\u5b9e\u73b0meta service\u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7SLB\uff08Software Load Balancer\uff09\u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\n\n>\u6ce82: meta service\u5730\u5740\u4e5f\u53ef\u4ee5\u586b\u5165IP\uff0c0.11.0\u7248\u672c\u4e4b\u524d\u53ea\u652f\u6301\u586b\u5165\u4e00\u4e2aIP\u3002\u4ece0.11.0\u7248\u672c\u5f00\u59cb\u652f\u6301\u586b\u5165\u4ee5\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u5730\u5740\uff08[PR #1214](https://github.com/apolloconfig/apollo/pull/1214)\uff09\uff0c\u5982`http://1.1.1.1:8080,http://2.2.2.2:8080`\uff0c\u4e0d\u8fc7\u751f\u4ea7\u73af\u5883\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u57df\u540d\uff08\u8d70slb\uff09\uff0c\u56e0\u4e3a\u673a\u5668\u6269\u5bb9\u3001\u7f29\u5bb9\u7b49\u90fd\u53ef\u80fd\u5bfc\u81f4IP\u5217\u8868\u7684\u53d8\u5316\u3002\n\n#### 2.2.1.2 \u901a\u8fc7\u6e90\u7801\u6784\u5efa\n\n##### 2.2.1.2.1 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\nApollo\u670d\u52a1\u7aef\u9700\u8981\u77e5\u9053\u5982\u4f55\u8fde\u63a5\u5230\u4f60\u524d\u9762\u521b\u5efa\u7684\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u7f16\u8f91[scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh)\uff0c\u4fee\u6539ApolloPortalDB\u548cApolloConfigDB\u76f8\u5173\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u3002\n\n> \u6ce8\u610f\uff1a\u586b\u5165\u7684\u7528\u6237\u9700\u8981\u5177\u5907\u5bf9ApolloPortalDB\u548cApolloConfigDB\u6570\u636e\u7684\u8bfb\u5199\u6743\u9650\u3002\n\n```sh\n#apollo config db info\napollo_config_db_url=jdbc:mysql://localhost:3306/ApolloConfigDB?useSSL=false&characterEncoding=utf8\napollo_config_db_username=\u7528\u6237\u540d\napollo_config_db_password=\u5bc6\u7801\uff08\u5982\u679c\u6ca1\u6709\u5bc6\u7801\uff0c\u7559\u7a7a\u5373\u53ef\uff09\n\n# apollo portal db info\napollo_portal_db_url=jdbc:mysql://localhost:3306/ApolloPortalDB?useSSL=false&characterEncoding=utf8\napollo_portal_db_username=\u7528\u6237\u540d\napollo_portal_db_password=\u5bc6\u7801\uff08\u5982\u679c\u6ca1\u6709\u5bc6\u7801\uff0c\u7559\u7a7a\u5373\u53ef\uff09\n```\n\n> \u6ce81\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u7684\u73af\u5883config-service\u548cadmin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\uff0cportal\u53ea\u9700\u8981\u6253\u4e00\u6b21\u5305\u5373\u53ef\n\n> \u6ce82\uff1a\u5982\u679c\u4e0d\u60f3config-service\u548cadmin-service\u6bcf\u4e2a\u73af\u5883\u6253\u4e00\u4e2a\u5305\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u65f6\u4f20\u5165\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u4fe1\u606f\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 [Issue 869](https://github.com/apolloconfig/apollo/issues/869)\n\n> \u6ce83\uff1a\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u8981\u72ec\u7acb\u90e8\u7f72\u4e00\u5957config-service\u3001admin-service\u548cApolloConfigDB\n\n##### 2.2.1.2.2 \u914d\u7f6e\u5404\u73af\u5883meta service\u5730\u5740\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u9700\u8981\u5728\u6253\u5305\u65f6\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\n\n\u5047\u8bbeDEV\u7684apollo-configservice\u672a\u7ed1\u5b9a\u57df\u540d\uff0c\u5730\u5740\u662f1.1.1.1:8080\uff0cFAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.fat.xxx.com\uff0cUAT\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.uat.xxx.com\uff0cPRO\u7684apollo-configservice\u7ed1\u5b9a\u4e86\u57df\u540dapollo.xxx.com\uff0c\u90a3\u4e48\u7f16\u8f91[scripts/build.sh](https://github.com/apolloconfig/apollo/blob/master/scripts/build.sh)\uff0c\u5982\u4e0b\u4fee\u6539\u5404\u73af\u5883meta service\u670d\u52a1\u5730\u5740\uff0c\u683c\u5f0f\u4e3a`${env}_meta=http://${config-service-url:port}`\uff0c\u5982\u679c\u67d0\u4e2a\u73af\u5883\u4e0d\u9700\u8981\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff1a\n\n```sh\ndev_meta=http://1.1.1.1:8080\nfat_meta=http://apollo.fat.xxx.com\nuat_meta=http://apollo.uat.xxx.com\npro_meta=http://apollo.xxx.com\n\nMETA_SERVERS_OPTS=\"-Ddev_meta=$dev_meta -Dfat_meta=$fat_meta -Duat_meta=$uat_meta -Dpro_meta=$pro_meta\"\n```\n\n\u9664\u4e86\u5728\u6253\u5305\u65f6\u914d\u7f6emeta service\u4ee5\u5916\uff0capollo\u4e5f\u652f\u6301\u5728\u8fd0\u884c\u65f6\u6307\u5b9ameta service\uff1a\n1. \u901a\u8fc7Java System Property `${env}_meta`\n    * \u53ef\u4ee5\u901a\u8fc7Java\u7684System Property `${env}_meta`\u6765\u6307\u5b9a\n    * \u5982`java -Ddev_meta=http://config-service-url -jar xxx.jar`\n    * \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u6307\u5b9a\uff0c\u5982`System.setProperty(\"dev_meta\", \"http://config-service-url\");`\n2. \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684System Environment`${ENV}_META`\n    * \u5982`DEV_META=http://config-service-url`\n    * \u6ce8\u610fkey\u4e3a\u5168\u5927\u5199\uff0c\u4e14\u4e2d\u95f4\u662f`_`\u5206\u9694\n\n>\u6ce81: \u4e3a\u4e86\u5b9e\u73b0meta service\u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7SLB\uff08Software Load Balancer\uff09\u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\n\n>\u6ce82: meta service\u5730\u5740\u4e5f\u53ef\u4ee5\u586b\u5165IP\uff0c0.11.0\u7248\u672c\u4e4b\u524d\u53ea\u652f\u6301\u586b\u5165\u4e00\u4e2aIP\u3002\u4ece0.11.0\u7248\u672c\u5f00\u59cb\u652f\u6301\u586b\u5165\u4ee5\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u5730\u5740\uff08[PR #1214](https://github.com/apolloconfig/apollo/pull/1214)\uff09\uff0c\u5982`http://1.1.1.1:8080,http://2.2.2.2:8080`\uff0c\u4e0d\u8fc7\u751f\u4ea7\u73af\u5883\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u57df\u540d\uff08\u8d70slb\uff09\uff0c\u56e0\u4e3a\u673a\u5668\u6269\u5bb9\u3001\u7f29\u5bb9\u7b49\u90fd\u53ef\u80fd\u5bfc\u81f4IP\u5217\u8868\u7684\u53d8\u5316\u3002\n\n##### 2.2.1.2.3 \u6267\u884c\u7f16\u8bd1\u3001\u6253\u5305\n\u505a\u5b8c\u4e0a\u8ff0\u914d\u7f6e\u540e\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u7f16\u8bd1\u548c\u6253\u5305\u4e86\u3002\n\n> \u6ce8\uff1a\u521d\u6b21\u7f16\u8bd1\u4f1a\u4eceMaven\u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u4e0d\u5c11\u4f9d\u8d56\uff0c\u5982\u679c\u7f51\u7edc\u60c5\u51b5\u4e0d\u4f73\u65f6\u5f88\u5bb9\u6613\u51fa\u9519\uff0c\u5efa\u8bae\u4f7f\u7528\u56fd\u5185\u7684Maven\u4ed3\u5e93\u6e90\uff0c\u6bd4\u5982[\u963f\u91cc\u4e91Maven\u955c\u50cf](http://www.cnblogs.com/geektown/p/5705405.html)\n\n```sh\n./build.sh\n```\n\n\u8be5\u811a\u672c\u4f1a\u4f9d\u6b21\u6253\u5305apollo-configservice, apollo-adminservice, apollo-portal\u3002\n\n> \u6ce8\uff1a\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684config-service\u548cadmin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\u6253\u4e0d\u540c\u7684\u5305\uff0cportal\u53ea\u9700\u8981\u6253\u4e00\u6b21\u5305\u5373\u53ef\n\n##### 2.2.1.2.4 \u83b7\u53d6apollo-configservice\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-configservice/target/`\u76ee\u5f55\u4e0b\u7684`apollo-configservice-x.x.x-github.zip`\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684config-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\u540e\u5206\u522b\u90e8\u7f72\n\n##### 2.2.1.2.5 \u83b7\u53d6apollo-adminservice\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-adminservice/target/`\u76ee\u5f55\u4e0b\u7684`apollo-adminservice-x.x.x-github.zip`\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eApolloConfigDB\u5728\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u90e8\u7f72\uff0c\u6240\u4ee5\u5bf9\u4e0d\u540c\u73af\u5883\u7684admin-service\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u53c2\u6570\u6253\u4e0d\u540c\u7684\u5305\u540e\u5206\u522b\u90e8\u7f72\n\n##### 2.2.1.2.6 \u83b7\u53d6apollo-portal\u5b89\u88c5\u5305\n\n\u4f4d\u4e8e`apollo-portal/target/`\u76ee\u5f55\u4e0b\u7684`apollo-portal-x.x.x-github.zip`\n\n### 2.2.2 \u90e8\u7f72Apollo\u670d\u52a1\u7aef\n\n#### 2.2.2.1 \u90e8\u7f72apollo-configservice\n\u5c06\u5bf9\u5e94\u73af\u5883\u7684`apollo-configservice-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728scripts/startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms6144m -Xmx6144m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=4096m -XX:MaxNewSize=4096m -XX:SurvivorRatio=18\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-configservice.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\u53e6\u5916apollo-configservice\u540c\u65f6\u627f\u62c5meta server\u804c\u8d23\uff0c\u5982\u679c\u8981\u4fee\u6539\u7aef\u53e3\uff0c\u6ce8\u610f\u8981\u540c\u65f6ApolloConfigDB.ServerConfig\u8868\u4e2d\u7684`eureka.service.url`\u914d\u7f6e\u9879\u4ee5\u53caapollo-portal\u548capollo-client\u4e2d\u7684\u4f7f\u7528\u5230\u7684meta server\u4fe1\u606f\uff0c\u8be6\u89c1\uff1a[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u548c[1.2.2 Apollo Meta Server](zh/usage/java-sdk-user-guide#_122-apollo-meta-server)\u3002\n\n> \u6ce84\uff1a\u5982\u679cApolloConfigDB.ServerConfig\u7684eureka.service.url\u53ea\u914d\u4e86\u5f53\u524d\u6b63\u5728\u542f\u52a8\u7684\u673a\u5668\u7684\u8bdd\uff0c\u5728\u542f\u52a8apollo-configservice\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u65e5\u5fd7\u4e2d\u8f93\u51faeureka\u6ce8\u518c\u5931\u8d25\u7684\u4fe1\u606f\uff0c\u5982`com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused`\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u662f\u9884\u671f\u7684\u60c5\u51b5\uff0c\u56e0\u4e3aapollo-configservice\u9700\u8981\u5411Meta Server\uff08\u5b83\u81ea\u5df1\uff09\u6ce8\u518c\u670d\u52a1\uff0c\u4f46\u662f\u56e0\u4e3a\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u5df1\u8fd8\u6ca1\u8d77\u6765\uff0c\u6240\u4ee5\u4f1a\u62a5\u8fd9\u4e2a\u9519\u3002\u540e\u9762\u4f1a\u8fdb\u884c\u91cd\u8bd5\u7684\u52a8\u4f5c\uff0c\u6240\u4ee5\u7b49\u81ea\u5df1\u670d\u52a1\u8d77\u6765\u540e\u5c31\u4f1a\u6ce8\u518c\u6b63\u5e38\u4e86\u3002\n\n> \u6ce85\uff1a\u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u4e00\u5b9a\u662f\u4e00\u4e2a\u7ec6\u5fc3\u9605\u8bfb\u6587\u6863\u7684\u4eba\uff0c\u800c\u4e14\u79bb\u6210\u529f\u5c31\u5dee\u4e00\u70b9\u70b9\u4e86\uff0c\u7ee7\u7eed\u52a0\u6cb9\uff0c\u5e94\u8be5\u5f88\u5feb\u5c31\u80fd\u5b8c\u6210Apollo\u7684\u5206\u5e03\u5f0f\u90e8\u7f72\u4e86\uff01\u4e0d\u8fc7\u4f60\u662f\u5426\u6709\u611f\u89c9Apollo\u7684\u5206\u5e03\u5f0f\u90e8\u7f72\u6b65\u9aa4\u6709\u70b9\u7e41\u7410\uff1f\u662f\u5426\u6709\u5565\u5efa\u8bae\u60f3\u8981\u548c\u4f5c\u8005\u8bf4\uff1f\u5982\u679c\u7b54\u6848\u662f\u80af\u5b9a\u7684\u8bdd\uff0c\u8bf7\u79fb\u6b65 [#1424](https://github.com/apolloconfig/apollo/issues/1424)\uff0c\u671f\u5f85\u4f60\u7684\u5efa\u8bae\uff01\n\n#### 2.2.2.2 \u90e8\u7f72apollo-adminservice\n\u5c06\u5bf9\u5e94\u73af\u5883\u7684`apollo-adminservice-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728scripts/startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms2560m -Xmx2560m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1024m -XX:MaxNewSize=1024m -XX:SurvivorRatio=22\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-adminservice.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\n\n#### 2.2.2.3 \u90e8\u7f72apollo-portal\n\u5c06`apollo-portal-x.x.x-github.zip`\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u89e3\u538b\u540e\u6267\u884cscripts/startup.sh\u5373\u53ef\u3002\u5982\u9700\u505c\u6b62\u670d\u52a1\uff0c\u6267\u884cscripts/shutdown.sh.\n\n\u8bb0\u5f97\u5728startup.sh\u4e2d\u6309\u7167\u5b9e\u9645\u7684\u73af\u5883\u8bbe\u7f6e\u4e00\u4e2aJVM\u5185\u5b58\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f9b\u53c2\u8003\uff1a\n```bash\nexport JAVA_OPTS=\"-server -Xms4096m -Xmx4096m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=22\"\n```\n\n> \u6ce81\uff1a\u5982\u679c\u9700\u8981\u4fee\u6539JVM\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u7684`JAVA_OPTS`\u90e8\u5206\u3002\n\n> \u6ce82\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u8def\u5f84\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u548capollo-portal.conf\u4e2d\u7684`LOG_DIR`\u3002\n\n> \u6ce83\uff1a\u5982\u8981\u8c03\u6574\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u53ef\u4ee5\u4fee\u6539scripts/startup.sh\u4e2d\u7684`SERVER_PORT`\u3002\n\n### 2.2.3 \u4f7f\u7528\u5176\u5b83\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n#### 2.2.3.1 nacos-discovery\n\n\u542f\u7528\u5916\u90e8nacos\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06config-service\u548cadmin-service\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub,nacos-discovery -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,nacos-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6enacos\u670d\u52a1\u5668\u5730\u5740\n```properties\nnacos.discovery.server-addr=127.0.0.1:8848\n# \u66f4\u591a nacos \u914d\u7f6e\nnacos.discovery.access-key=\nnacos.discovery.username=\nnacos.discovery.password=\nnacos.discovery.secret-key=\nnacos.discovery.namespace=\nnacos.discovery.context-path=\n```\n\n#### 2.2.3.2 consul-discovery\n\n\u542f\u7528\u5916\u90e8Consul\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.2.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,consul-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,consul-discovery\n    ```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6econsul\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n##### 2.2.3.2.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06config-service\u548cadmin-service\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,consul-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6econsul\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.consul.host=127.0.0.1\nspring.cloud.consul.port=8500\n```\n\n#### 2.2.3.3 zookeeper-discovery\n\n\u542f\u7528\u5916\u90e8Zookeeper\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.3.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,zookeeper-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,zookeeper-discovery\n    ```\n\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6ezookeeper\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n3.Zookeeper\u7248\u672c\u8bf4\u660e\n* \u652f\u6301Zookeeper3.5.x\u4ee5\u4e0a\u7684\u7248\u672c;\n* \u5982\u679capollo-configservice\u5e94\u7528\u542f\u52a8\u62a5\u7aef\u53e3\u5360\u7528,\u8bf7\u68c0\u67e5Zookeeper\u7684\u5982\u4e0b\u914d\u7f6e;\n> \u6ce8\uff1aZookeeper3.5.0\u65b0\u589e\u4e86\u5185\u7f6e\u7684[AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n##### 2.2.3.3.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06`config-service`\u548c`admin-service`\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,zookeeper-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n2. \u5206\u522b\u4fee\u6539apollo-configservice\u548capollo-adminservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\uff0c\u914d\u7f6ezookeeper\u670d\u52a1\u5668\u5730\u5740\n```properties\nspring.cloud.zookeeper.connect-string=127.0.0.1:2181\n```\n3.Zookeeper\u7248\u672c\u8bf4\u660e\n* \u652f\u6301Zookeeper3.5.x\u4ee5\u4e0a\u7684\u7248\u672c;\n* \u5982\u679capollo-configservice\u5e94\u7528\u542f\u52a8\u62a5\u7aef\u53e3\u5360\u7528,\u8bf7\u68c0\u67e5Zookeeper\u7684\u5982\u4e0b\u914d\u7f6e;\n> \u6ce8\uff1aZookeeper3.5.0\u65b0\u589e\u4e86\u5185\u7f6e\u7684[AdminServer](https://zookeeper.apache.org/doc/r3.5.0-alpha/zookeeperAdmin.html#sc_adminserver_config)\n```properties\nadmin.enableServer\nadmin.serverPort\n```\n\n#### 2.2.3.4 custom-defined-discovery\n\n\u542f\u7528custom-defined-discovery\u66ff\u6362\u5185\u7f6eeureka\n\n##### 2.2.3.4.1 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,custom-defined-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,custom-defined-discovery\n    ```\n\n2. \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 config-service \u4e0e admin-service \u7684\u8bbf\u95ee\u5730\u5740\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u79cd\u5728mysql\u6570\u636e\u5e93ApolloConfigDB\uff0c\u8868ServerConfig\u5f53\u4e2d\u5199\u5165\u4e24\u6761\u6570\u636e\u3002\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService \u8bbf\u95ee\u5730\u5740');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService \u8bbf\u95ee\u5730\u5740');\n```\n\u53e6\u5916\u4e00\u79cd\u4fee\u6539apollo-configservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n##### 2.2.3.5.2 2.1.0 \u4e4b\u524d\u7684\u7248\u672c\n\n> \u6ce8\u610f\uff1a\u9700\u8981\u91cd\u65b0\u6253\u5305\n\n1. \u4fee\u6539build.sh/build.bat\uff0c\u5c06`config-service`\u548c`admin-service`\u7684maven\u7f16\u8bd1\u547d\u4ee4\u66f4\u6539\u4e3a\n```shell\nmvn clean package -Pgithub -DskipTests -pl apollo-configservice,apollo-adminservice -am -Dapollo_profile=github,custom-defined-discovery -Dspring_datasource_url=$apollo_config_db_url -Dspring_datasource_username=$apollo_config_db_username -Dspring_datasource_password=$apollo_config_db_password\n```\n2. \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 config-service \u4e0e admin-service \u7684\u8bbf\u95ee\u5730\u5740\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u79cd\u5728mysql\u6570\u636e\u5e93ApolloConfigDB\uff0c\u8868ServerConfig\u5f53\u4e2d\u5199\u5165\u4e24\u6761\u6570\u636e\u3002\n```sql\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.config-service.url', 'http://apollo-config-service', 'ConfigService \u8bbf\u95ee\u5730\u5740');\nINSERT INTO `ApolloConfigDB`.`ServerConfig` (`Key`, `Value`, `Comment`) VALUES ('apollo.admin-service.url', 'http://apollo-admin-service', 'AdminService \u8bbf\u95ee\u5730\u5740');\n```\n\u53e6\u5916\u4e00\u79cd\u4fee\u6539apollo-configservice\u5b89\u88c5\u5305\u4e2dconfig\u76ee\u5f55\u4e0b\u7684application-github.properties\n```properties\napollo.config-service.url=http://apollo-config-service\napollo.admin-service.url=http://apollo-admin-service\n```\n\n\n#### 2.2.3.5 database-discovery\n\n> \u4ec5\u652f\u6301 2.1.0 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u542f\u7528database-discovery\u66ff\u6362\u5185\u7f6eeureka\n\nApollo\u652f\u6301\u4f7f\u7528\u5185\u90e8\u7684\u6570\u636e\u5e93\u8868\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e0d\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7684\u6ce8\u518c\u4e2d\u5fc3\n\n1. \u4fee\u6539`apollo-configservice-x.x.x-github.zip`\u548c`apollo-adminservice-x.x.x-github.zip`\u89e3\u538b\u540e\u7684`config/application.properties`\uff0c\u53d6\u6d88\u6ce8\u91ca\uff0c\u628a\n    ```properties\n    #spring.profiles.active=github,database-discovery\n    ```\n\n    \u53d8\u6210\n\n    ```properties\n    spring.profiles.active=github,database-discovery\n    ```\n\n2. \u5728\u591a\u673a\u623f\u90e8\u7f72\u65f6\uff0c\n   \u5982\u679c\u4f60\u9700\u8981apollo\u5ba2\u6237\u7aef\u53ea\u8bfb\u53d6\u540c\u673a\u623f\u5185\u7684Config Service\uff0c\n   \u4f60\u53ef\u4ee5\u5728Config Service\u548cAdmin Service\u5b89\u88c5\u5305\u4e2d`config/application-github.properties`\u65b0\u589e\u4e00\u6761\u914d\u7f6e\n    ```properties\n    apollo.service.registry.cluster=\u4e0eapollo\u7684Cluster\u540c\u540d\n    ```\n\n\n## 2.3 Docker\u90e8\u7f72\n### 2.3.1 1.7.0\u53ca\u4ee5\u4e0a\u7248\u672c\nApollo 1.7.0\u7248\u672c\u5f00\u59cb\u4f1a\u9ed8\u8ba4\u4e0a\u4f20Docker\u955c\u50cf\u5230[Docker Hub](https://hub.docker.com/u/apolloconfig)\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u83b7\u53d6\n\n#### 2.3.1.1 Apollo Config Service\n\n##### 2.3.1.1.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-configservice:${version}\n```\n\n##### 2.3.1.1.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8080:8080 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-configservice apolloconfig/apollo-configservice:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5bc6\u7801\n\n#### 2.3.1.2 Apollo Admin Service\n\n##### 2.3.1.2.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-adminservice:${version}\n```\n\n##### 2.3.1.2.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8090:8090 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloConfigDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -d -v /tmp/logs:/opt/logs --name apollo-adminservice apolloconfig/apollo-adminservice:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloConfigDB\u7684\u5bc6\u7801\n\n#### 2.3.1.3 Apollo Portal\n\n##### 2.3.1.3.1 \u83b7\u53d6\u955c\u50cf\n\n```bash\ndocker pull apolloconfig/apollo-portal:${version}\n```\n\n##### 2.3.1.3.2 \u8fd0\u884c\u955c\u50cf\n\n\u793a\u4f8b\uff1a\n\n```bash\ndocker run -p 8070:8070 \\\n    -e SPRING_DATASOURCE_URL=\"jdbc:mysql://fill-in-the-correct-server:3306/ApolloPortalDB?characterEncoding=utf8\" \\\n    -e SPRING_DATASOURCE_USERNAME=FillInCorrectUser -e SPRING_DATASOURCE_PASSWORD=FillInCorrectPassword \\\n    -e APOLLO_PORTAL_ENVS=dev,pro \\\n    -e DEV_META=http://fill-in-dev-meta-server:8080 -e PRO_META=http://fill-in-pro-meta-server:8080 \\\n    -d -v /tmp/logs:/opt/logs --name apollo-portal apolloconfig/apollo-portal:${version}\n```\n\n\u53c2\u6570\u8bf4\u660e\uff1a\n* SPRING_DATASOURCE_URL: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u5730\u5740\n* SPRING_DATASOURCE_USERNAME: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u7528\u6237\u540d\n* SPRING_DATASOURCE_PASSWORD: \u5bf9\u5e94\u73af\u5883ApolloPortalDB\u7684\u5bc6\u7801\n* APOLLO_PORTAL_ENVS(\u53ef\u9009): \u5bf9\u5e94ApolloPortalDB\u4e2d\u7684[apollo.portal.envs](#_311-apolloportalenvs-\u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868)\u914d\u7f6e\u9879\uff0c\u5982\u679c\u6ca1\u6709\u5728\u6570\u636e\u5e93\u4e2d\u914d\u7f6e\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u73af\u5883\u53c2\u6570\u914d\u7f6e\n* DEV_META/PRO_META(\u53ef\u9009): \u914d\u7f6e\u5bf9\u5e94\u73af\u5883\u7684Meta Service\u5730\u5740\uff0c\u4ee5${ENV}_META\u547d\u540d\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u914d\u7f6e\u4e86ApolloPortalDB\u4e2d\u7684[apollo.portal.meta.servers](#_312-apolloportalmetaservers-\u5404\u73af\u5883meta-service\u5217\u8868)\u914d\u7f6e\uff0c\u5219\u4ee5apollo.portal.meta.servers\u4e2d\u7684\u914d\u7f6e\u4e3a\u51c6\n\n#### 2.3.1.4 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\n\n\u5982\u679c\u4fee\u6539\u4e86 apollo \u670d\u52a1\u7aef\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a\n\n1. \u901a\u8fc7\u6e90\u7801\u6784\u5efa\u5b89\u88c5\u5305\uff1a`./scripts/build.sh`\n2. \u6784\u5efa Docker \u955c\u50cf\uff1a`mvn docker:build -pl apollo-configservice,apollo-adminservice,apollo-portal`\n\n### 2.3.2 1.7.0\u4e4b\u524d\u7684\u7248\u672c\n\nApollo\u9879\u76ee\u5df2\u7ecf\u81ea\u5e26\u4e86Docker file\uff0c\u53ef\u4ee5\u53c2\u7167[2.2.1 \u83b7\u53d6\u5b89\u88c5\u5305](#_221-\u83b7\u53d6\u5b89\u88c5\u5305)\u914d\u7f6e\u597d\u5b89\u88c5\u5305\u540e\u901a\u8fc7\u4e0b\u9762\u7684\u6587\u4ef6\u6765\u6253Docker\u955c\u50cf\uff1a\n\n1. [apollo-configservice](https://github.com/apolloconfig/apollo/blob/master/apollo-configservice/src/main/docker/Dockerfile)\n2. [apollo-adminservice](https://github.com/apolloconfig/apollo/blob/master/apollo-adminservice/src/main/docker/Dockerfile)\n3. [apollo-portal](https://github.com/apolloconfig/apollo/blob/master/apollo-portal/src/main/docker/Dockerfile)\n\n\u4e5f\u53ef\u4ee5\u53c2\u8003Apollo\u7528\u6237[@kulovecc](https://github.com/kulovecc)\u7684[docker-apollo](https://github.com/kulovecc/docker-apollo)\u9879\u76ee\u548c[@idoop](https://github.com/idoop)\u7684[docker-apollo](https://github.com/idoop/docker-apollo)\u9879\u76ee\u3002\n\n## 2.4 Kubernetes\u90e8\u7f72\n### 2.4.1 \u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\n\nApollo 1.7.0\u7248\u672c\u589e\u52a0\u4e86\u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\u7684\u90e8\u7f72\u6a21\u5f0f\uff0c\u7531\u4e8e\u4e0d\u518d\u4f7f\u7528\u5185\u7f6e\u7684Eureka\uff0c\u6240\u4ee5\u5728\u6574\u4f53\u90e8\u7f72\u4e0a\u6709\u5f88\u5927\u7b80\u5316\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86Helm Charts\uff0c\u4fbf\u4e8e\u90e8\u7f72\u3002\n\n> \u66f4\u591a\u8bbe\u8ba1\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[#3054](https://github.com/apolloconfig/apollo/issues/3054)\u3002\n\n#### 2.4.1.1 \u73af\u5883\u8981\u6c42\n\n- Kubernetes 1.10+\n- Helm 3\n\n#### 2.4.1.2 \u6dfb\u52a0Apollo Helm Chart\u4ed3\u5e93\n\n```bash\n$ helm repo add apollo https://charts.apolloconfig.com\n$ helm search repo apollo\n```\n\n#### 2.4.1.3 \u90e8\u7f72apollo-configservice\u548capollo-adminservice\n\n##### 2.4.1.3.1 \u5b89\u88c5apollo-configservice\u548capollo-adminservice\n\n\u9700\u8981\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5apollo-configservice\u548capollo-adminservice\uff0c\u6240\u4ee5\u5efa\u8bae\u5728release\u540d\u79f0\u4e2d\u52a0\u5165\u73af\u5883\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a`apollo-service-dev`\n\n```bash\n$ helm install apollo-service-dev \\\n    --set configdb.host=1.2.3.4 \\\n    --set configdb.userName=apollo \\\n    --set configdb.password=apollo \\\n    --set configdb.service.enabled=true \\\n    --set configService.replicaCount=1 \\\n    --set adminService.replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-service\n```\n\n\u4e00\u822c\u90e8\u7f72\u5efa\u8bae\u901a\u8fc7 values.yaml \u6765\u914d\u7f6e\uff1a\n\n```bash\n$ helm install apollo-service-dev -f values.yaml -n your-namespace apollo/apollo-service \n```\n\n\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u63d0\u793a\u5bf9\u5e94\u73af\u5883\u7684Meta Server\u5730\u5740\uff0c\u9700\u8981\u8bb0\u5f55\u4e0b\u6765\uff0capollo-portal\u5b89\u88c5\u65f6\u9700\u8981\u7528\u5230\uff1a\n\n```bash\nGet meta service url for current release by running these commands:\n  echo http://apollo-service-dev-apollo-configservice:8080\n```\n\n> \u66f4\u591a\u914d\u7f6e\u9879\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[2.4.1.3.3 \u914d\u7f6e\u9879\u8bf4\u660e](#_24133-\u914d\u7f6e\u9879\u8bf4\u660e)\n\n##### 2.4.1.3.2 \u5378\u8f7dapollo-configservice\u548capollo-adminservice\n\n\u4f8b\u5982\u8981\u5378\u8f7d`apollo-service-dev`\u7684\u90e8\u7f72\uff1a\n\n```bash\n$ helm uninstall -n your-namespace apollo-service-dev\n```\n\n##### 2.4.1.3.3 \u914d\u7f6e\u9879\u8bf4\u660e\n\n\u4e0b\u8868\u5217\u51fa\u4e86apollo-service chart\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a\n\n| Parameter            | Description                                 | Default             |\n|----------------------|---------------------------------------------|---------------------|\n| `configdb.host` | The host for apollo config db | `nil` |\n| `configdb.port` | The port for apollo config db | `3306` |\n| `configdb.dbName` | The database name for apollo config db | `ApolloConfigDB` |\n| `configdb.userName` | The user name for apollo config db | `nil` |\n| `configdb.password` | The password for apollo config db | `nil` |\n| `configdb.connectionStringProperties` | The connection string properties for apollo config db | `characterEncoding=utf8` |\n| `configdb.service.enabled` | Whether to create a Kubernetes Service for `configdb.host` or not. Set it to `true` if `configdb.host` is an endpoint outside of the kubernetes cluster | `false` |\n| `configdb.service.fullNameOverride` | Override the service name for apollo config db | `nil` |\n| `configdb.service.port` | The port for the service of apollo config db | `3306` |\n| `configdb.service.type` | The service type of apollo config db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP` |\n| `configService.fullNameOverride` | Override the deployment name for apollo-configservice | `nil` |\n| `configService.replicaCount` | Replica count of apollo-configservice | `2` |\n| `configService.containerPort` | Container port of apollo-configservice | `8080` |\n| `configService.image.repository` | Image repository of apollo-configservice | `apolloconfig/apollo-configservice` |\n| `configService.image.tag` | Image tag of apollo-configservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.image.pullPolicy`                | Image pull policy of apollo-configservice | `IfNotPresent` |\n| `configService.imagePullSecrets`                | Image pull secrets of apollo-configservice | `[]` |\n| `configService.service.fullNameOverride` | Override the service name for apollo-configservice | `nil` |\n| `configService.service.port` | The port for the service of apollo-configservice | `8080` |\n| `configService.service.targetPort` | The target port for the service of apollo-configservice | `8080` |\n| `configService.service.type` | The service type of apollo-configservice                     | `ClusterIP` |\n| `configService.ingress.enabled` | Whether to enable the ingress for config-service or not. _(chart version >= 0.2.0)_ | `false` |\n| `configService.ingress.annotations` | The annotations of the ingress for config-service. _(chart version >= 0.2.0)_ | `{}` |\n| `configService.ingress.hosts.host` | The host of the ingress for config-service. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.ingress.hosts.paths` | The paths of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]` |\n| `configService.ingress.tls` | The tls definition of the ingress for config-service. _(chart version >= 0.2.0)_ | `[]` |\n| `configService.liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `configService.liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `configService.readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `configService.readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `configService.config.profiles` | specify the spring profiles to activate | `github,kubernetes` |\n| `configService.config.configServiceUrlOverride` | Override `apollo.config-service.url`: config service url to be accessed by apollo-client, e.g. `http://apollo-config-service-dev:8080` | `nil` |\n| `configService.config.adminServiceUrlOverride` | Override `apollo.admin-service.url`: admin service url to be accessed by apollo-portal, e.g. `http://apollo-admin-service-dev:8090` | `nil` |\n| `configService.config.contextPath` | specify the context path, e.g. `/apollo`, then users could access config service via `http://{config_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil` |\n| `configService.env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `configService.strategy` | The deployment strategy of apollo-configservice | `{}` |\n| `configService.resources` | The resources definition of apollo-configservice | `{}` |\n| `configService.nodeSelector` | The node selector definition of apollo-configservice | `{}` |\n| `configService.tolerations` | The tolerations definition of apollo-configservice | `[]` |\n| `configService.affinity` | The affinity definition of apollo-configservice | `{}` |\n| `adminService.fullNameOverride` | Override the deployment name for apollo-adminservice | `nil` |\n| `adminService.replicaCount` | Replica count of apollo-adminservice | `2` |\n| `adminService.containerPort` | Container port of apollo-adminservice | `8090` |\n| `adminService.image.repository` | Image repository of apollo-adminservice | `apolloconfig/apollo-adminservice` |\n| `adminService.image.tag` | Image tag of apollo-adminservice, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.image.pullPolicy`                | Image pull policy of apollo-adminservice | `IfNotPresent` |\n| `adminService.imagePullSecrets`                | Image pull secrets of apollo-adminservice | `[]` |\n| `adminService.service.fullNameOverride` | Override the service name for apollo-adminservice | `nil` |\n| `adminService.service.port` | The port for the service of apollo-adminservice | `8090` |\n| `adminService.service.targetPort` | The target port for the service of apollo-adminservice | `8090` |\n| `adminService.service.type` | The service type of apollo-adminservice                     | `ClusterIP` |\n| `adminService.ingress.enabled` | Whether to enable the ingress for admin-service or not. _(chart version >= 0.2.0)_ | `false` |\n| `adminService.ingress.annotations` | The annotations of the ingress for admin-service. _(chart version >= 0.2.0)_ | `{}` |\n| `adminService.ingress.hosts.host` | The host of the ingress for admin-service. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.ingress.hosts.paths` | The paths of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]` |\n| `adminService.ingress.tls` | The tls definition of the ingress for admin-service. _(chart version >= 0.2.0)_ | `[]` |\n| `adminService.liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `adminService.liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `adminService.readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `adminService.readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `adminService.config.profiles` | specify the spring profiles to activate | `github,kubernetes` |\n| `adminService.config.contextPath` | specify the context path, e.g. `/apollo`, then users could access admin service via `http://{admin_service_address}/apollo`. _(chart version >= 0.2.0)_ | `nil` |\n| `adminService.env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `adminService.strategy` | The deployment strategy of apollo-adminservice | `{}` |\n| `adminService.resources` | The resources definition of apollo-adminservice | `{}` |\n| `adminService.nodeSelector` | The node selector definition of apollo-adminservice | `{}` |\n| `adminService.tolerations` | The tolerations definition of apollo-adminservice | `[]` |\n| `adminService.affinity` | The affinity definition of apollo-adminservice | `{}` |\n\n##### 2.4.1.3.4 \u914d\u7f6e\u6837\u4f8b\n\n###### 2.4.1.3.4.1 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684IP\n\n```yaml\nconfigdb:\n  host: 1.2.3.4\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.3.4.2 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684\u57df\u540d\n\n```yaml\nconfigdb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n###### 2.4.1.3.4.3 ConfigDB\u7684host\u662fk8s\u96c6\u7fa4\u5185\u7684\u4e00\u4e2a\u670d\u52a1\n\n```yaml\nconfigdb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloConfigDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.3.4.4 \u6307\u5b9aMeta Server\u8fd4\u56de\u7684apollo-configservice\u5730\u5740\n\n\u5982\u679capollo-client\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95eeapollo-configservice\u7684Service\uff08\u6bd4\u5982\u4e0d\u5728\u540c\u4e00\u4e2ak8s\u96c6\u7fa4\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u793a\u4f8b\u6307\u5b9aMeta Server\u8fd4\u56de\u7ed9apollo-client\u7684\u5730\u5740\uff08\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7nodeport\u8bbf\u95ee\uff09\n\n```yaml\nconfigService:\n  config:\n    configServiceUrlOverride: http://1.2.3.4:12345\n```\n\n###### 2.4.1.3.4.5 \u6307\u5b9aMeta Server\u8fd4\u56de\u7684apollo-adminservice\u5730\u5740\n\n\u5982\u679capollo-portal\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95eeapollo-adminservice\u7684Service\uff08\u6bd4\u5982\u4e0d\u5728\u540c\u4e00\u4e2ak8s\u96c6\u7fa4\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u793a\u4f8b\u6307\u5b9aMeta Server\u8fd4\u56de\u7ed9apollo-portal\u7684\u5730\u5740\uff08\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7nodeport\u8bbf\u95ee\uff09\n\n```yaml\nconfigService:\n  config:\n    adminServiceUrlOverride: http://1.2.3.4:23456\n```\n\n###### 2.4.1.3.4.6 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/config`\u5f62\u5f0f\u66b4\u9732apollo-configservice\u670d\u52a1\n\n```yaml\n# use /config as root, should specify configService.config.contextPath as /config\nconfigService:\n  config:\n    contextPath: /config\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /config\n```\n\n###### 2.4.1.3.4.7 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/admin`\u5f62\u5f0f\u66b4\u9732apollo-adminservice\u670d\u52a1\n\n```yaml\n# use /admin as root, should specify adminService.config.contextPath as /admin\nadminService:\n  config:\n    contextPath: /admin\n  ingress:\n    enabled: true\n    hosts:\n      - paths:\n          - /admin\n```\n\n#### 2.4.1.4 \u90e8\u7f72apollo-portal\n\n##### 2.4.1.4.1 \u5b89\u88c5apollo-portal\n\n\u5047\u8bbe\u6709dev, pro\u4e24\u4e2a\u73af\u5883\uff0c\u4e14meta server\u5730\u5740\u5206\u522b\u4e3a`http://apollo-service-dev-apollo-configservice:8080`\u548c`http://apollo-service-pro-apollo-configservice:8080`\uff1a\n\n```bash\n$ helm install apollo-portal \\\n    --set portaldb.host=1.2.3.4 \\\n    --set portaldb.userName=apollo \\\n    --set portaldb.password=apollo \\\n    --set portaldb.service.enabled=true \\\n    --set config.envs=\"dev\\,pro\" \\\n    --set config.metaServers.dev=http://apollo-service-dev-apollo-configservice:8080 \\\n    --set config.metaServers.pro=http://apollo-service-pro-apollo-configservice:8080 \\\n    --set replicaCount=1 \\\n    -n your-namespace \\\n    apollo/apollo-portal\n```\n\n\u4e00\u822c\u90e8\u7f72\u5efa\u8bae\u901a\u8fc7 values.yaml \u6765\u914d\u7f6e\uff1a\n\n```bash\n$ helm install apollo-portal -f values.yaml -n your-namespace apollo/apollo-portal \n```\n\n> \u66f4\u591a\u914d\u7f6e\u9879\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[2.4.1.4.3 \u914d\u7f6e\u9879\u8bf4\u660e](#_24143-\u914d\u7f6e\u9879\u8bf4\u660e)\n\n##### 2.4.1.4.2 \u5378\u8f7dapollo-portal\n\n\u4f8b\u5982\u8981\u5378\u8f7d`apollo-portal`\u7684\u90e8\u7f72\uff1a\n\n```bash\n$ helm uninstall -n your-namespace apollo-portal\n```\n\n##### 2.4.1.4.3 \u914d\u7f6e\u9879\u8bf4\u660e\n\n\u4e0b\u8868\u5217\u51fa\u4e86apollo-portal chart\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u53ca\u5176\u9ed8\u8ba4\u503c\uff1a\n\n| Parameter            | Description                                 | Default               |\n|----------------------|---------------------------------------------|-----------------------|\n| `fullNameOverride` | Override the deployment name for apollo-portal | `nil` |\n| `replicaCount` | Replica count of apollo-portal | `2` |\n| `containerPort` | Container port of apollo-portal | `8070` |\n| `image.repository` | Image repository of apollo-portal | `apolloconfig/apollo-portal` |\n| `image.tag` | Image tag of apollo-portal, e.g. `1.8.0`, leave it to `nil` to use the default version. _(chart version >= 0.2.0)_ | `nil` |\n| `image.pullPolicy`                | Image pull policy of apollo-portal | `IfNotPresent` |\n| `imagePullSecrets`                | Image pull secrets of apollo-portal | `[]` |\n| `service.fullNameOverride` | Override the service name for apollo-portal | `nil` |\n| `service.port` | The port for the service of apollo-portal | `8070` |\n| `service.targetPort` | The target port for the service of apollo-portal | `8070` |\n| `service.type` | The service type of apollo-portal                     | `ClusterIP` |\n| `service.sessionAffinity` | The session affinity for the service of apollo-portal | `ClientIP` |\n| `ingress.enabled` | Whether to enable the ingress or not | `false` |\n| `ingress.annotations` | The annotations of the ingress | `{}` |\n| `ingress.hosts.host` | The host of the ingress | `nil` |\n| `ingress.hosts.paths` | The paths of the ingress | `[]` |\n| `ingress.tls` | The tls definition of the ingress | `[]` |\n| `liveness.initialDelaySeconds` | The initial delay seconds of liveness probe | `100` |\n| `liveness.periodSeconds` | The period seconds of liveness probe | `10` |\n| `readiness.initialDelaySeconds` | The initial delay seconds of readiness probe | `30` |\n| `readiness.periodSeconds` | The period seconds of readiness probe | `5` |\n| `env` | Environment variables passed to the container, e.g. <br />`JAVA_OPTS: -Xss256k` | `{}` |\n| `strategy` | The deployment strategy of apollo-portal | `{}` |\n| `resources` | The resources definition of apollo-portal | `{}` |\n| `nodeSelector` | The node selector definition of apollo-portal | `{}` |\n| `tolerations` | The tolerations definition of apollo-portal | `[]` |\n| `affinity` | The affinity definition of apollo-portal | `{}` |\n| `config.profiles` | specify the spring profiles to activate | `github,auth` |\n| `config.envs` | specify the env names, e.g. `dev,pro` | `nil` |\n| `config.contextPath` | specify the context path, e.g. `/apollo`, then users could access portal via `http://{portal_address}/apollo` | `nil` |\n| `config.metaServers` | specify the meta servers, e.g.<br />`dev: http://apollo-configservice-dev:8080`<br />`pro: http://apollo-configservice-pro:8080` | `{}` |\n| `config.files` | specify the extra config files for apollo-portal, e.g. `application-ldap.yml` | `{}` |\n| `portaldb.host` | The host for apollo portal db | `nil`                              |\n| `portaldb.port` | The port for apollo portal db | `3306` |\n| `portaldb.dbName` | The database name for apollo portal db | `ApolloPortalDB`                                     |\n| `portaldb.userName` | The user name for apollo portal db | `nil` |\n| `portaldb.password` | The password for apollo portal db | `nil` |\n| `portaldb.connectionStringProperties` | The connection string properties for apollo portal db | `characterEncoding=utf8` |\n| `portaldb.service.enabled` | Whether to create a Kubernetes Service for `portaldb.host` or not. Set it to `true` if `portaldb.host` is an endpoint outside of the kubernetes cluster | `false` |\n| `portaldb.service.fullNameOverride` | Override the service name for apollo portal db | `nil` |\n| `portaldb.service.port` | The port for the service of apollo portal db | `3306` |\n| `portaldb.service.type` | The service type of apollo portal db: `ClusterIP` or `ExternalName`. If the host is a DNS name, please specify `ExternalName` as the service type, e.g. `xxx.mysql.rds.aliyuncs.com` | `ClusterIP` |\n\n##### 2.4.1.4.4 \u914d\u7f6e\u6837\u4f8b\n\n###### 2.4.1.4.4.1 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684IP\n\n```yaml\nportaldb:\n  host: 1.2.3.4\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n```\n\n###### 2.4.1.4.4.2 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5916\u7684\u57df\u540d\n\n```yaml\nportaldb:\n  host: xxx.mysql.rds.aliyuncs.com\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n  service:\n    enabled: true\n    type: ExternalName\n```\n\n###### 2.4.1.4.4.3 PortalDB\u7684host\u662fk8s\u96c6\u7fa4\u5185\u7684\u4e00\u4e2a\u670d\u52a1\n\n```yaml\nportaldb:\n  host: apollodb-mysql.mysql\n  dbName: ApolloPortalDBName\n  userName: someUserName\n  password: somePassword\n  connectionStringProperties: characterEncoding=utf8&useSSL=false\n```\n\n###### 2.4.1.4.4.4 \u914d\u7f6e\u73af\u5883\u4fe1\u606f\n\n```yaml\nconfig:\n  envs: dev,pro\n  metaServers:\n    dev: http://apollo-service-dev-apollo-configservice:8080\n    pro: http://apollo-service-pro-apollo-configservice:8080\n```\n\n###### 2.4.1.4.4.5 \u4ee5Load Balancer\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\nservice:\n  type: LoadBalancer\n```\n\n###### 2.4.1.4.4.6 \u4ee5Ingress\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /\n```\n\n###### 2.4.1.4.4.7 \u4ee5Ingress\u914d\u7f6e\u81ea\u5b9a\u4e49\u8def\u5f84`/apollo`\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\n# use /apollo as root, should specify config.contextPath as /apollo\ningress:\n  enabled: true\n  hosts:\n    - paths:\n        - /apollo\n\nconfig:\n  ...\n  contextPath: /apollo\n  ...\n```\n\n###### 2.4.1.4.4.8 \u4ee5Ingress\u914d\u7f6esession affinity\u5f62\u5f0f\u66b4\u9732\u670d\u52a1\n\n```yaml\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/affinity-mode: \"persistent\"\n    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: \"true\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\n  hosts:\n    - host: xxx.somedomain.com # host is required to make session affinity work\n      paths:\n        - /\n```\n\n###### 2.4.1.4.4.9 \u542f\u7528 LDAP \u652f\u6301\n\n```yaml\nconfig:\n  ...\n  profiles: github,ldap\n  ...\n  files:\n    application-ldap.yml: |\n      spring:\n        ldap:\n          base: \"dc=example,dc=org\"\n          username: \"cn=admin,dc=example,dc=org\"\n          password: \"password\"\n          searchFilter: \"(uid={0})\"\n          urls:\n          - \"ldap://xxx.somedomain.com:389\"\n      ldap:\n        mapping:\n          objectClass: \"inetOrgPerson\"\n          loginId: \"uid\"\n          userDisplayName: \"cn\"\n          email: \"mail\"\n```\n\n#### 2.4.1.5 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\n\n\u5982\u679c\u4fee\u6539\u4e86 apollo \u670d\u52a1\u7aef\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf\uff0c\u53ef\u4ee5\u53c2\u8003[2.3.1.4 \u901a\u8fc7\u6e90\u7801\u6784\u5efa Docker \u955c\u50cf](#_2314-\u901a\u8fc7\u6e90\u7801\u6784\u5efa-docker-\u955c\u50cf)\u7684\u6b65\u9aa4\u3002\n\n### 2.4.2 \u57fa\u4e8e\u5185\u7f6e\u7684Eureka\u670d\u52a1\u53d1\u73b0\n\n\u611f\u8c22[AiotCEO](https://github.com/AiotCEO)\u63d0\u4f9b\u4e86k8s\u7684\u90e8\u7f72\u652f\u6301\uff0c\u4f7f\u7528\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[apollo-on-kubernetes](https://github.com/apolloconfig/apollo/blob/master/scripts/apollo-on-kubernetes/README.md)\u3002\n\n\u611f\u8c22[qct](https://github.com/qct)\u63d0\u4f9b\u7684Helm Chart\u90e8\u7f72\u652f\u6301\uff0c\u4f7f\u7528\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[qct/apollo-helm](https://github.com/qct/apollo-helm)\u3002\n\n# \u4e09\u3001\u670d\u52a1\u7aef\u914d\u7f6e\u8bf4\u660e\n\n> \u4ee5\u4e0b\u914d\u7f6e\u9664\u4e86\u652f\u6301\u5728\u6570\u636e\u5e93\u4e2d\u914d\u7f6e\u4ee5\u5916\uff0c\u4e5f\u652f\u6301\u901a\u8fc7-D\u53c2\u6570\u3001application.properties\u7b49\u914d\u7f6e\uff0c\u4e14-D\u53c2\u6570\u3001application.properties\u7b49\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u914d\u7f6e\n\n## 3.1 \u8c03\u6574ApolloPortalDB\u914d\u7f6e\n\u914d\u7f6e\u9879\u7edf\u4e00\u5b58\u50a8\u5728ApolloPortalDB.ServerConfig\u8868\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u53c2\u6570`\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u65e0\u7279\u6b8a\u8bf4\u660e\u5219\u4fee\u6539\u5b8c\u4e00\u5206\u949f\u5b9e\u65f6\u751f\u6548\u3002\n\n### 3.1.1 apollo.portal.envs - \u53ef\u652f\u6301\u7684\u73af\u5883\u5217\u8868\n\n\u9ed8\u8ba4\u503c\u662fdev\uff0c\u5982\u679cportal\u9700\u8981\u7ba1\u7406\u591a\u4e2a\u73af\u5883\u7684\u8bdd\uff0c\u4ee5\u9017\u53f7\u5206\u9694\u5373\u53ef\uff08\u5927\u5c0f\u5199\u4e0d\u654f\u611f\uff09\uff0c\u5982\uff1a\n```\nDEV,FAT,UAT,PRO\n```\n\n\u4fee\u6539\u5b8c\u9700\u8981\u91cd\u542f\u751f\u6548\u3002\n\n>\u6ce81\uff1a\u4e00\u5957Portal\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u73af\u5883\uff0c\u4f46\u662f\u6bcf\u4e2a\u73af\u5883\u90fd\u9700\u8981\u72ec\u7acb\u90e8\u7f72\u4e00\u5957Config Service\u3001Admin Service\u548cApolloConfigDB\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\uff1a[2.1.2 \u521b\u5efaApolloConfigDB](#_212-\u521b\u5efaapolloconfigdb)\uff0c[3.2 \u8c03\u6574ApolloConfigDB\u914d\u7f6e](zh/deployment/distributed-deployment-guide?id=_32-\u8c03\u6574apolloconfigdb\u914d\u7f6e)\uff0c[2.2.1.1.2 \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f](#_22112-\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f)\uff0c\u53e6\u5916\u5982\u679c\u662f\u4e3a\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684Apollo\u914d\u7f6e\u4e2d\u5fc3\u589e\u52a0\u73af\u5883\uff0c\u522b\u5fd8\u4e86\u53c2\u8003[2.1.2.4 \u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165ApolloConfigDB\u7684\u9879\u76ee\u6570\u636e](#_2124-\u4ece\u522b\u7684\u73af\u5883\u5bfc\u5165apolloconfigdb\u7684\u9879\u76ee\u6570\u636e)\u5bf9\u65b0\u7684\u73af\u5883\u505a\u521d\u59cb\u5316\u3002\n\n>\u6ce82\uff1a\u53ea\u5728\u6570\u636e\u5e93\u6dfb\u52a0\u73af\u5883\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u8fd8\u9700\u8981\u4e3aapollo-portal\u6dfb\u52a0\u65b0\u589e\u73af\u5883\u5bf9\u5e94\u7684meta server\u5730\u5740\uff0c\u5177\u4f53\u53c2\u8003\uff1a[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u3002apollo-client\u5728\u65b0\u7684\u73af\u5883\u4e0b\u4f7f\u7528\u65f6\u4e5f\u9700\u8981\u505a\u597d\u76f8\u5e94\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u8003\uff1a[1.2.2 Apollo Meta Server](zh/usage/java-sdk-user-guide#_122-apollo-meta-server)\u3002\n\n>\u6ce83\uff1a\u5982\u679c\u5e0c\u671b\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u73af\u5883\u540d\u79f0\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[Portal\u5982\u4f55\u589e\u52a0\u73af\u5883](zh/faq/common-issues-in-deployment-and-development-phase?id=_4-portal\u5982\u4f55\u589e\u52a0\u73af\u5883\uff1f)\u3002\n\n>\u6ce84\uff1a1.1.0\u7248\u672c\u589e\u52a0\u4e86\u7cfb\u7edf\u4fe1\u606f\u9875\u9762\uff08`\u7ba1\u7406\u5458\u5de5\u5177` -> `\u7cfb\u7edf\u4fe1\u606f`\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u9875\u9762\u68c0\u67e5\u914d\u7f6e\u662f\u5426\u6b63\u786e\n\n### 3.1.2 apollo.portal.meta.servers - \u5404\u73af\u5883Meta Service\u5217\u8868\n\n> \u9002\u7528\u4e8e1.6.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\nApollo Portal\u9700\u8981\u5728\u4e0d\u540c\u7684\u73af\u5883\u8bbf\u95ee\u4e0d\u540c\u7684meta service(apollo-configservice)\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmeta service\u548cconfig service\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2aJVM\u8fdb\u7a0b\uff0c\u6240\u4ee5meta service\u7684\u5730\u5740\u5c31\u662fconfig service\u7684\u5730\u5740\u3002\n\n\u6837\u4f8b\u5982\u4e0b\uff1a\n```json\n{\n    \"DEV\":\"http://1.1.1.1:8080\",\n    \"FAT\":\"http://apollo.fat.xxx.com\",\n    \"UAT\":\"http://apollo.uat.xxx.com\",\n    \"PRO\":\"http://apollo.xxx.com\"\n}\n```\n\n\u4fee\u6539\u5b8c\u9700\u8981\u91cd\u542f\u751f\u6548\u3002\n\n> \u8be5\u914d\u7f6e\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5176\u5b83\u65b9\u5f0f\u8bbe\u7f6e\u7684Meta Service\u5730\u5740\uff0c\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003[2.2.1.1.2.4 \u914d\u7f6eapollo-portal\u7684meta service\u4fe1\u606f](#_221124-\u914d\u7f6eapollo-portal\u7684meta-service\u4fe1\u606f)\u3002\n\n### 3.1.3 organizations - \u90e8\u95e8\u5217\u8868\n\nPortal\u4e2d\u65b0\u5efa\u7684App\u90fd\u9700\u8981\u9009\u62e9\u90e8\u95e8\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8fd9\u91cc\u914d\u7f6e\u53ef\u9009\u7684\u90e8\u95e8\u4fe1\u606f\uff0c\u6837\u4f8b\u5982\u4e0b\uff1a\n```json\n[{\"orgId\":\"TEST1\",\"orgName\":\"\u6837\u4f8b\u90e8\u95e81\"},{\"orgId\":\"TEST2\",\"orgName\":\"\u6837\u4f8b\u90e8\u95e82\"}]\n```\n\n### 3.1.4 superAdmin - Portal\u8d85\u7ea7\u7ba1\u7406\u5458\n\n\u8d85\u7ea7\u7ba1\u7406\u5458\u62e5\u6709\u6240\u6709\u6743\u9650\uff0c\u9700\u8981\u8c28\u614e\u8bbe\u7f6e\u3002\n\n\u5982\u679c\u6ca1\u6709\u63a5\u5165\u81ea\u5df1\u516c\u53f8\u7684SSO\u7cfb\u7edf\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u6682\u65f6\u4f7f\u7528\u9ed8\u8ba4\u503capollo\uff08\u9ed8\u8ba4\u7528\u6237\uff09\u3002\u7b49\u63a5\u5165\u540e\uff0c\u4fee\u6539\u4e3a\u5b9e\u9645\u4f7f\u7528\u7684\u8d26\u53f7\uff0c\u591a\u4e2a\u8d26\u53f7\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694(,)\u3002\n\n### 3.1.5 consumer.token.salt - consumer token salt\n\n\u5982\u679c\u4f1a\u4f7f\u7528\u5f00\u653e\u5e73\u53f0API\u7684\u8bdd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2atoken salt\u3002\u5982\u679c\u4e0d\u4f7f\u7528\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\n\n### 3.1.6 wiki.address\n\nportal\u4e0a\u201c\u5e2e\u52a9\u201d\u94fe\u63a5\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u662fApollo github\u7684wiki\u9996\u9875\uff0c\u53ef\u81ea\u884c\u8bbe\u7f6e\u3002\n\n### 3.1.7 admin.createPrivateNamespace.switch\n\n\u662f\u5426\u5141\u8bb8\u9879\u76ee\u7ba1\u7406\u5458\u521b\u5efaprivate namespace\u3002\u8bbe\u7f6e\u4e3a`true`\u5141\u8bb8\u521b\u5efa\uff0c\u8bbe\u7f6e\u4e3a`false`\u5219\u9879\u76ee\u7ba1\u7406\u5458\u5728\u9875\u9762\u4e0a\u770b\u4e0d\u5230\u521b\u5efaprivate namespace\u7684\u9009\u9879\u3002[\u4e86\u89e3\u66f4\u591aNamespace](zh/design/apollo-core-concept-namespace)\n\n### 3.1.8 emergencyPublish.supported.envs\n\n\u914d\u7f6e\u5141\u8bb8\u7d27\u6025\u53d1\u5e03\u7684\u73af\u5883\u5217\u8868\uff0c\u591a\u4e2aenv\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\n\n\u5f53config service\u5f00\u542f\u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173(`namespace.lock.switch`)\u540e\uff0c\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u662f\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u53d1\u5e03\u3002\u4e3a\u4e86\u907f\u514d\u9047\u5230\u7d27\u6025\u60c5\u51b5\u65f6\uff08\u5982\u975e\u5de5\u4f5c\u65f6\u95f4\u3001\u8282\u5047\u65e5\uff09\u65e0\u6cd5\u53d1\u5e03\u914d\u7f6e\uff0c\u53ef\u4ee5\u914d\u7f6e\u6b64\u9879\u4ee5\u5141\u8bb8\u67d0\u4e9b\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7d27\u6025\u53d1\u5e03\uff0c\u5373\u540c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4fee\u6539\u5e76\u53d1\u5e03\u914d\u7f6e\u3002\n\n### 3.1.9 configView.memberOnly.envs\n\n\u53ea\u5bf9\u9879\u76ee\u6210\u5458\u663e\u793a\u914d\u7f6e\u4fe1\u606f\u7684\u73af\u5883\u5217\u8868\uff0c\u591a\u4e2aenv\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\n\n\u5bf9\u8bbe\u5b9a\u4e86\u53ea\u5bf9\u9879\u76ee\u6210\u5458\u663e\u793a\u914d\u7f6e\u4fe1\u606f\u7684\u73af\u5883\uff0c\u53ea\u6709\u8be5\u9879\u76ee\u7684\u7ba1\u7406\u5458\u6216\u62e5\u6709\u8be5namespace\u7684\u7f16\u8f91\u6216\u53d1\u5e03\u6743\u9650\u7684\u7528\u6237\u624d\u80fd\u770b\u5230\u8be5\u79c1\u6709namespace\u7684\u914d\u7f6e\u4fe1\u606f\u548c\u53d1\u5e03\u5386\u53f2\u3002\u516c\u5171namespace\u59cb\u7ec8\u5bf9\u6240\u6709\u7528\u6237\u53ef\u89c1\u3002\n\n> \u4ece1.1.0\u7248\u672c\u5f00\u59cb\u652f\u6301\uff0c\u8be6\u89c1[PR 1531](https://github.com/apolloconfig/apollo/pull/1531)\n\n### 3.1.10 role.create-application.enabled - \u662f\u5426\u5f00\u542f\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.5.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u521b\u5efa\u9879\u76ee\n\n\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u90a3\u4e48\u53ea\u6709\u8d85\u7ea7\u7ba1\u7406\u5458\u548c\u62e5\u6709\u521b\u5efa\u9879\u76ee\u6743\u9650\u7684\u5e10\u53f7\u53ef\u4ee5\u521b\u5efa\u9879\u76ee\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u6743\u9650\u7ba1\u7406`\u7ed9\u7528\u6237\u5206\u914d\u521b\u5efa\u9879\u76ee\u6743\u9650\n\n### 3.1.11 role.manage-app-master.enabled - \u662f\u5426\u5f00\u542f\u9879\u76ee\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.5.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u6240\u6709\u9879\u76ee\u7684\u7ba1\u7406\u5458\u53ef\u4ee5\u4e3a\u9879\u76ee\u6dfb\u52a0/\u5220\u9664\u7ba1\u7406\u5458\n\n\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u90a3\u4e48\u53ea\u6709\u8d85\u7ea7\u7ba1\u7406\u5458\u548c\u62e5\u6709\u9879\u76ee\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\u7684\u5e10\u53f7\u53ef\u4ee5\u4e3a\u7279\u5b9a\u9879\u76ee\u6dfb\u52a0/\u5220\u9664\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u6743\u9650\u7ba1\u7406`\u7ed9\u7528\u6237\u5206\u914d\u7279\u5b9a\u9879\u76ee\u7684\u7ba1\u7406\u5458\u5206\u914d\u6743\u9650\n\n### 3.1.12 admin-service.access.tokens - \u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access token\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u5982\u679c\u5bf9\u5e94\u73af\u5883\u7684apollo-adminservice\u5f00\u542f\u4e86[\u8bbf\u95ee\u63a7\u5236](#_326-admin-serviceaccesscontrolenabled-\u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236)\uff0c\u90a3\u4e48\u9700\u8981\u5728\u6b64\u914d\u7f6eapollo-portal\u8bbf\u95ee\u8be5\u73af\u5883apollo-adminservice\u6240\u9700\u7684access token\uff0c\u5426\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\n\n\u683c\u5f0f\u4e3ajson\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n```json\n{\n    \"dev\" : \"098f6bcd4621d373cade4e832627b4f6\",\n    \"pro\" : \"ad0234829205b9033196ba818f7a872b\"\n}\n```\n\n### 3.1.13 searchByItem.switch - \u63a7\u5236\u53f0\u641c\u7d22\u6846\u662f\u5426\u652f\u6301\u6309\u914d\u7f6e\u9879\u641c\u7d22\n\n\u9ed8\u8ba4\u4e3a true\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u6309\u914d\u7f6e\u9879\u5feb\u901f\u641c\u7d22\u914d\u7f6e\n\n\u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5219\u5173\u95ed\u6b64\u529f\u80fd\n\n\n## 3.2 \u8c03\u6574ApolloConfigDB\u914d\u7f6e\n\u914d\u7f6e\u9879\u7edf\u4e00\u5b58\u50a8\u5728ApolloConfigDB.ServerConfig\u8868\u4e2d\uff0c\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u90fd\u9700\u8981\u5355\u72ec\u914d\u7f6e\uff0c\u4fee\u6539\u5b8c\u4e00\u5206\u949f\u5b9e\u65f6\u751f\u6548\u3002\n\n### 3.2.1 eureka.service.url - Eureka\u670d\u52a1Url\n\n> \u4e0d\u9002\u7528\u4e8e\u57fa\u4e8eKubernetes\u539f\u751f\u670d\u52a1\u53d1\u73b0\u573a\u666f\n\n\u4e0d\u7ba1\u662fapollo-configservice\u8fd8\u662fapollo-adminservice\u90fd\u9700\u8981\u5411eureka\u670d\u52a1\u6ce8\u518c\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6eeureka\u670d\u52a1\u5730\u5740\u3002\n\u6309\u7167\u76ee\u524d\u7684\u5b9e\u73b0\uff0capollo-configservice\u672c\u8eab\u5c31\u662f\u4e00\u4e2aeureka\u670d\u52a1\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u586b\u5165apollo-configservice\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u6709\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u5206\u9694\uff08\u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86/eureka/\u540e\u7f00\uff09\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u4e2a\u73af\u5883\u53ea\u586b\u5165\u81ea\u5df1\u73af\u5883\u7684eureka\u670d\u52a1\u5730\u5740\uff0c\u6bd4\u5982FAT\u7684apollo-configservice\u662f1.1.1.1:8080\u548c2.2.2.2:8080\uff0cUAT\u7684apollo-configservice\u662f3.3.3.3:8080\u548c4.4.4.4:8080\uff0cPRO\u7684apollo-configservice\u662f5.5.5.5:8080\u548c6.6.6.6:8080\uff0c\u90a3\u4e48\uff1a\n\n1. \u5728FAT\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://1.1.1.1:8080/eureka/,http://2.2.2.2:8080/eureka/\n```\n\n2. \u5728UAT\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://3.3.3.3:8080/eureka/,http://4.4.4.4:8080/eureka/\n```\n\n3. \u5728PRO\u73af\u5883\u7684ApolloConfigDB.ServerConfig\u8868\u4e2d\u8bbe\u7f6eeureka.service.url\u4e3a\uff1a\n```\nhttp://5.5.5.5:8080/eureka/,http://6.6.6.6:8080/eureka/\n```\n\n>\u6ce81\uff1a\u8fd9\u91cc\u9700\u8981\u586b\u5199\u672c\u73af\u5883\u4e2d\u5168\u90e8\u7684eureka\u670d\u52a1\u5730\u5740\uff0c\u56e0\u4e3aeureka\u9700\u8981\u4e92\u76f8\u590d\u5236\u6ce8\u518c\u4fe1\u606f\n\n>\u6ce82\uff1a\u5982\u679c\u5e0c\u671b\u5c06Config Service\u548cAdmin Service\u6ce8\u518c\u5230\u516c\u53f8\u7edf\u4e00\u7684Eureka\u4e0a\uff0c\u53ef\u4ee5\u53c2\u8003[\u90e8\u7f72&\u5f00\u53d1\u9047\u5230\u7684\u5e38\u89c1\u95ee\u9898 - \u5c06Config Service\u548cAdmin Service\u6ce8\u518c\u5230\u5355\u72ec\u7684Eureka Server\u4e0a](zh/faq/common-issues-in-deployment-and-development-phase#_8-\u5c06config-service\u548cadmin-service\u6ce8\u518c\u5230\u5355\u72ec\u7684eureka-server\u4e0a)\u7ae0\u8282\n\n>\u6ce83\uff1a\u5728\u591a\u673a\u623f\u90e8\u7f72\u65f6\uff0c\u5f80\u5f80\u5e0c\u671bconfig service\u548cadmin service\u53ea\u5411\u540c\u673a\u623f\u7684eureka\u6ce8\u518c\uff0c\u8981\u5b9e\u73b0\u8fd9\u4e2a\u6548\u679c\uff0c\u9700\u8981\u5229\u7528`ServerConfig`\u8868\u4e2d\u7684cluster\u5b57\u6bb5\uff0cconfig service\u548cadmin service\u4f1a\u8bfb\u53d6\u6240\u5728\u673a\u5668\u7684`/opt/settings/server.properties`\uff08Mac/Linux\uff09\u6216`C:\\opt\\settings\\server.properties`\uff08Windows\uff09\u4e2d\u7684idc\u5c5e\u6027\uff0c\u5982\u679c\u8be5idc\u6709\u5bf9\u5e94\u7684eureka.service.url\u914d\u7f6e\uff0c\u90a3\u4e48\u5c31\u53ea\u4f1a\u5411\u8be5\u673a\u623f\u7684eureka\u6ce8\u518c\u3002\u6bd4\u5982config service\u548cadmin service\u4f1a\u90e8\u7f72\u5230`SHAOY`\u548c`SHAJQ`\u4e24\u4e2aIDC\uff0c\u90a3\u4e48\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u673a\u623f\u4e2d\u7684\u670d\u52a1\u53ea\u5411\u8be5\u673a\u623f\u6ce8\u518c\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728`ServerConfig`\u8868\u4e2d\u65b0\u589e\u4e24\u6761\u8bb0\u5f55\uff0c\u5206\u522b\u586b\u5165`SHAOY`\u548c`SHAJQ`\u4e24\u4e2a\u673a\u623f\u7684eureka\u5730\u5740\u5373\u53ef\uff0c`default` cluster\u7684\u8bb0\u5f55\u53ef\u4ee5\u4fdd\u7559\uff0c\u5982\u679c\u6709config service\u548cadmin service\u4e0d\u662f\u90e8\u7f72\u5728`SHAOY`\u548c`SHAJQ`\u8fd9\u4e24\u4e2a\u673a\u623f\u7684\uff0c\u5c31\u4f1a\u4f7f\u7528\u8fd9\u6761\u9ed8\u8ba4\u914d\u7f6e\u3002\n\n| Key                |Cluster    | Value                         | Comment             |\n|--------------------|-----------|-------------------------------|---------------------|\n| eureka.service.url | default   | http://1.1.1.1:8080/eureka/   | \u9ed8\u8ba4\u7684Eureka\u670d\u52a1Url  |\n| eureka.service.url | SHAOY     | http://2.2.2.2:8080/eureka/   | SHAOY\u7684Eureka\u670d\u52a1Url |\n| eureka.service.url | SHAJQ     | http://3.3.3.3:8080/eureka/   | SHAJQ\u7684Eureka\u670d\u52a1Url |\n\n### 3.2.2 namespace.lock.switch - \u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173\uff0c\u7528\u4e8e\u53d1\u5e03\u5ba1\u6838\n\n\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f00\u5173\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u662f\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u53d1\u5e03\u3002\n\n> \u751f\u4ea7\u73af\u5883\u5efa\u8bae\u5f00\u542f\u6b64\u9009\u9879\n\n### 3.2.3 config-service.cache.enabled - \u662f\u5426\u5f00\u542f\u914d\u7f6e\u7f13\u5b58\n\n\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f00\u5173\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\u7684\u8bdd\uff0cconfig service\u4f1a\u7f13\u5b58\u52a0\u8f7d\u8fc7\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ece\u800c\u52a0\u5feb\u540e\u7eed\u914d\u7f6e\u83b7\u53d6\u6027\u80fd\u3002\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u5f00\u542f\u524d\u8bf7\u5148\u8bc4\u4f30\u603b\u914d\u7f6e\u5927\u5c0f\u5e76\u8c03\u6574config service\u5185\u5b58\u914d\u7f6e\u3002\n\n> \u5f00\u542f\u7f13\u5b58\u540e\u5fc5\u987b\u786e\u4fdd\u5e94\u7528\u4e2d\u914d\u7f6e\u7684app.id\u5927\u5c0f\u5199\u6b63\u786e\uff0c\u5426\u5219\u5c06\u83b7\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u914d\u7f6e\n\n### 3.2.4 item.key.length.limit - \u914d\u7f6e\u9879 key \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u9ed8\u8ba4\u914d\u7f6e\u662f128\u3002\n\n### 3.2.5 item.value.length.limit - \u914d\u7f6e\u9879 value \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u9ed8\u8ba4\u914d\u7f6e\u662f20000\u3002\n\n#### 3.2.5.1 namespace.value.length.limit.override - namespace \u7684\u914d\u7f6e\u9879 value \u6700\u5927\u957f\u5ea6\u9650\u5236\n\n\u6b64\u914d\u7f6e\u7528\u6765\u8986\u76d6 `item.value.length.limit` \u7684\u914d\u7f6e\uff0c\u505a\u5230\u7ec6\u7c92\u5ea6\u63a7\u5236 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\uff0c\u914d\u7f6e\u7684\u503c\u662f\u4e00\u4e2a json \u683c\u5f0f\uff0cjson \u7684 key \u4e3a namespace \u5728\u6570\u636e\u5e93\u4e2d\u7684 id \u503c\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a\n```\nnamespace.value.length.limit.override = {1:200,3:20}\n```\n\u4ee5\u4e0a\u914d\u7f6e\u6307\u5b9a\u4e86 ApolloConfigDB.Namespace \u8868\u4e2d id=1 \u7684 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\u4e3a 200\uff0cid=3 \u7684 namespace \u7684 value \u6700\u5927\u957f\u5ea6\u9650\u5236\u4e3a 20\n\n### 3.2.6 admin-service.access.control.enabled - \u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u5982\u679c\u914d\u7f6e\u4e3atrue\uff0c\u90a3\u4e48apollo-portal\u5c31\u9700\u8981[\u6b63\u786e\u914d\u7f6e](#_3112-admin-serviceaccesstokens-\u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access-token)\u8bbf\u95ee\u8be5\u73af\u5883\u7684access token\uff0c\u5426\u5219\u8bbf\u95ee\u4f1a\u88ab\u62d2\u7edd\n\n### 3.2.7 admin-service.access.tokens - \u914d\u7f6e\u5141\u8bb8\u8bbf\u95eeapollo-adminservice\u7684access token\u5217\u8868\n\n> \u9002\u7528\u4e8e1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u5982\u679c\u8be5\u914d\u7f6e\u9879\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8bbf\u95ee\u63a7\u5236\u4e0d\u4f1a\u751f\u6548\u3002\u5982\u679c\u5141\u8bb8\u591a\u4e2atoken\uff0ctoken \u4e4b\u95f4\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\n\n\u6837\u4f8b\uff1a\n```properties\nadmin-service.access.tokens=098f6bcd4621d373cade4e832627b4f6\nadmin-service.access.tokens=098f6bcd4621d373cade4e832627b4f6,ad0234829205b9033196ba818f7a872b\n```\n\n### 3.2.8 apollo.access-key.auth-time-diff-tolerance - \u914d\u7f6e\u670d\u52a1\u7aefAccessKey\u6821\u9a8c\u5bb9\u5fcd\u7684\u65f6\u95f4\u504f\u5dee\n\n> \u9002\u7528\u4e8e2.0.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u503c\u4e3a60\uff0c\u5355\u4f4d\u4e3a\u79d2\u3002\u7531\u4e8e\u5bc6\u94a5\u8ba4\u8bc1\u65f6\u9700\u8981\u6821\u9a8c\u65f6\u95f4\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u7684\u65f6\u95f4\u53ef\u80fd\u5b58\u5728\u65f6\u95f4\u504f\u5dee\uff0c\u5982\u679c\u504f\u5dee\u592a\u5927\u4f1a\u5bfc\u81f4\u8ba4\u8bc1\u5931\u8d25\uff0c\u6b64\u914d\u7f6e\u53ef\u4ee5\u914d\u7f6e\u5bb9\u5fcd\u7684\u65f6\u95f4\u504f\u5dee\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e3a60\u79d2\u3002\n\n### 3.2.9 apollo.eureka.server.security.enabled - \u914d\u7f6e\u662f\u5426\u5f00\u542feureka server\u7684\u767b\u5f55\u8ba4\u8bc1\n\n> \u9002\u7528\u4e8e2.1.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u9ed8\u8ba4\u4e3afalse\uff0c\u5982\u679c\u5e0c\u671b\u63d0\u5347\u5b89\u5168\u6027\uff08\u6bd4\u5982\u516c\u7f51\u53ef\u8bbf\u95ee\u7684\u573a\u666f\uff09\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u914d\u7f6e\u9879\u4e3atrue\u542f\u7528\u767b\u5f55\u8ba4\u8bc1\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f00\u542f\u767b\u5f55\u8ba4\u8bc1\u540e\uff0c[eureka.service.url](#_321-eurekaserviceurl-eureka\u670d\u52a1url)\u4e2d\u7684\u5730\u5740\u9700\u8981\u914d\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u5982\uff1a\n\n```\nhttp://some-user-name:some-password@1.1.1.1:8080/eureka/,http://some-user-name:some-password@2.2.2.2:8080/eureka/\n```\n\u5176\u4e2d`some-user-name`\u548c`some-password`\u9700\u8981\u548c`apollo.eureka.server.security.username`\u4ee5\u53ca`apollo.eureka.server.security.password`\u7684\u914d\u7f6e\u9879\u4e00\u81f4\u3002\n\n### 3.2.10 apollo.eureka.server.security.username - \u914d\u7f6eeureka server\u7684\u767b\u5f55\u7528\u6237\u540d\n\n> \u9002\u7528\u4e8e2.1.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u914d\u7f6eeureka server\u7684\u767b\u5f55\u7528\u6237\u540d\uff0c\u9700\u8981\u548c[apollo.eureka.server.security.enabled](#_329-apolloeurekaserversecurityenabled-\u914d\u7f6e\u662f\u5426\u5f00\u542feureka-server\u7684\u767b\u5f55\u8ba4\u8bc1)\u4e00\u8d77\u4f7f\u7528\u3002\n\n> \u6ce8\u610f\u7528\u6237\u540d\u4e0d\u80fd\u914d\u7f6e\u4e3aapollo\n\n### 3.2.11 apollo.eureka.server.security.password - \u914d\u7f6eeureka server\u7684\u767b\u5f55\u5bc6\u7801\n\n> \u9002\u7528\u4e8e2.1.0\u53ca\u4ee5\u4e0a\u7248\u672c\n\n\u914d\u7f6eeureka server\u7684\u767b\u5f55\u5bc6\u7801\uff0c\u9700\u8981\u548c[apollo.eureka.server.security.enabled](#_329-apolloeurekaserversecurityenabled-\u914d\u7f6e\u662f\u5426\u5f00\u542feureka-server\u7684\u767b\u5f55\u8ba4\u8bc1)\u4e00\u8d77\u4f7f\u7528\u3002", "# &nbsp;\n# \u540d\u8bcd\u89e3\u91ca\n* \u666e\u901a\u5e94\u7528\n    * \u666e\u901a\u5e94\u7528\u6307\u7684\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5982\n        * Web\u5e94\u7528\u7a0b\u5e8f\n        * \u5e26\u6709main\u51fd\u6570\u7684\u7a0b\u5e8f\n* \u516c\u5171\u7ec4\u4ef6\n    * \u516c\u5171\u7ec4\u4ef6\u6307\u7684\u662f\u53d1\u5e03\u7684\u7c7b\u5e93\u3001\u5ba2\u6237\u7aef\u7a0b\u5e8f\uff0c\u4e0d\u4f1a\u81ea\u5df1\u72ec\u7acb\u8fd0\u884c\uff0c\u5982\n        * Java\u7684jar\u5305\n        * .Net\u7684dll\u6587\u4ef6\n\n# \u4e00\u3001\u666e\u901a\u5e94\u7528\u63a5\u5165\u6307\u5357\n## 1.1 \u521b\u5efa\u9879\u76ee\n\u8981\u4f7f\u7528Apollo\uff0c\u7b2c\u4e00\u6b65\u9700\u8981\u521b\u5efa\u9879\u76ee\u3002\n\n1. \u6253\u5f00apollo-portal\u4e3b\u9875\n2. \u70b9\u51fb\u201c\u521b\u5efa\u9879\u76ee\u201d\n\n![create-app-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app-entry.png)\n\n3. \u8f93\u5165\u9879\u76ee\u4fe1\u606f\n    * \u90e8\u95e8\uff1a\u9009\u62e9\u5e94\u7528\u6240\u5728\u7684\u90e8\u95e8\n    * \u5e94\u7528AppId\uff1a\u7528\u6765\u6807\u8bc6\u5e94\u7528\u8eab\u4efd\u7684\u552f\u4e00id\uff0c\u683c\u5f0f\u4e3astring\uff0c\u9700\u8981\u548c\u5ba2\u6237\u7aefapp.properties\u4e2d\u914d\u7f6e\u7684app.id\u5bf9\u5e94\n    * \u5e94\u7528\u540d\u79f0\uff1a\u5e94\u7528\u540d\uff0c\u4ec5\u7528\u4e8e\u754c\u9762\u5c55\u793a\n    * \u5e94\u7528\u8d1f\u8d23\u4eba\uff1a\u9009\u62e9\u7684\u4eba\u9ed8\u8ba4\u4f1a\u6210\u4e3a\u8be5\u9879\u76ee\u7684\u7ba1\u7406\u5458\uff0c\u5177\u5907\u9879\u76ee\u6743\u9650\u7ba1\u7406\u3001\u96c6\u7fa4\u521b\u5efa\u3001Namespace\u521b\u5efa\u7b49\u6743\u9650\n\n![create-app](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-app.png)\n\n4. \u70b9\u51fb\u63d0\u4ea4\n\n    \u521b\u5efa\u6210\u529f\u540e\uff0c\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u9879\u76ee\u9996\u9875\n\n![app-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-created.png)\n\n## 1.2 \u9879\u76ee\u6743\u9650\u5206\u914d\n### 1.2.1 \u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\n\n\u9879\u76ee\u7ba1\u7406\u5458\u62e5\u6709\u4ee5\u4e0b\u6743\u9650\uff1a\n\n1. \u53ef\u4ee5\u7ba1\u7406\u9879\u76ee\u7684\u6743\u9650\u5206\u914d\n2. \u53ef\u4ee5\u521b\u5efa\u96c6\u7fa4\n3. \u53ef\u4ee5\u521b\u5efaNamespace\n\n\u521b\u5efa\u9879\u76ee\u65f6\u586b\u5199\u7684\u5e94\u7528\u8d1f\u8d23\u4eba\u9ed8\u8ba4\u4f1a\u6210\u4e3a\u9879\u76ee\u7684\u7ba1\u7406\u5458\u4e4b\u4e00\uff0c\u5982\u679c\u8fd8\u9700\u8981\u5176\u4ed6\u4eba\u4e5f\u6210\u4e3a\u9879\u76ee\u7ba1\u7406\u5458\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u6b65\u9aa4\u64cd\u4f5c\uff1a\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u201c\u7ba1\u7406\u9879\u76ee\u201d\n    * ![app-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-entry.png)\n\n2. \u641c\u7d22\u9700\u8981\u6dfb\u52a0\u7684\u6210\u5458\u5e76\u70b9\u51fb\u6dfb\u52a0\n    * ![app-permission-search-user](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-search-user.png)\n    * ![app-permission-user-added](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/app-permission-user-added.png)\n\n### 1.2.2 \u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650\n\u914d\u7f6e\u6743\u9650\u5206\u4e3a\u7f16\u8f91\u548c\u53d1\u5e03\uff1a\n\n* \u7f16\u8f91\u6743\u9650\u5141\u8bb8\u7528\u6237\u5728Apollo\u754c\u9762\u4e0a\u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664\u914d\u7f6e\n    * \u914d\u7f6e\u4fee\u6539\u540e\u53ea\u5728Apollo\u754c\u9762\u4e0a\u53d8\u5316\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5e94\u7528\u5b9e\u9645\u4f7f\u7528\u7684\u914d\u7f6e\n* \u53d1\u5e03\u6743\u9650\u5141\u8bb8\u7528\u6237\u5728Apollo\u754c\u9762\u4e0a\u53d1\u5e03\u3001\u56de\u6eda\u914d\u7f6e\n    * \u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u3001\u56de\u6eda\u52a8\u4f5c\u540e\u624d\u4f1a\u88ab\u5e94\u7528\u5b9e\u9645\u4f7f\u7528\u5230\n    * Apollo\u5728\u7528\u6237\u64cd\u4f5c\u53d1\u5e03\u3001\u56de\u6eda\u52a8\u4f5c\u540e\u5b9e\u65f6\u901a\u77e5\u5230\u5e94\u7528\uff0c\u5e76\u4f7f\u6700\u65b0\u914d\u7f6e\u751f\u6548\n\n\u9879\u76ee\u521b\u5efa\u5b8c\uff0c\u9ed8\u8ba4\u6ca1\u6709\u5206\u914d\u914d\u7f6e\u7684\u7f16\u8f91\u548c\u53d1\u5e03\u6743\u9650\uff0c\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u8fdb\u884c\u6388\u6743\u3002\n\n1. \u70b9\u51fbapplication\u8fd9\u4e2anamespace\u7684\u6388\u6743\u6309\u94ae\n    * ![namespace-permission-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-entry.png)\n\n2. \u5206\u914d\u4fee\u6539\u6743\u9650\n    * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n\n3. \u5206\u914d\u53d1\u5e03\u6743\u9650\n    * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n## 1.3 \u6dfb\u52a0\u914d\u7f6e\u9879\n\u7f16\u8f91\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u7f16\u8f91\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u65b0\u589e\u914d\u7f6e\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n### 1.3.1 \u901a\u8fc7\u8868\u683c\u6a21\u5f0f\u6dfb\u52a0\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n    * ![create-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-entry.png)\n\n2. \u8f93\u5165\u914d\u7f6e\u9879\n    * ![create-item-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-item-detail.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n    * ![item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/item-created.png)\n\n### 1.3.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\nApollo\u9664\u4e86\u652f\u6301\u8868\u683c\u6a21\u5f0f\uff0c\u9010\u4e2a\u6dfb\u52a0\u3001\u4fee\u6539\u914d\u7f6e\u5916\uff0c\u8fd8\u63d0\u4f9b\u6587\u672c\u6a21\u5f0f\u6279\u91cf\u6dfb\u52a0\u3001\u4fee\u6539\u3002\n\u8fd9\u4e2a\u5bf9\u4e8e\u4ece\u5df2\u6709\u7684properties\u6587\u4ef6\u8fc1\u79fb\u5c24\u5176\u6709\u7528\u3002\n\n1. \u5207\u6362\u5230\u6587\u672c\u7f16\u8f91\u6a21\u5f0f\n![text-mode-config-overview](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-overview.png)\n\n2. \u70b9\u51fb\u53f3\u4fa7\u7684\u4fee\u6539\u914d\u7f6e\u6309\u94ae\n![text-mode-config-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-entry.png)\n\n3. \u8f93\u5165\u914d\u7f6e\u9879\uff0c\u5e76\u70b9\u51fb\u63d0\u4ea4\u4fee\u6539\n![text-mode-config-submit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/text-mode-config-submit.png)\n\n## 1.4 \u53d1\u5e03\u914d\u7f6e\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![publish-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/hermes-portal-publish-detail.png)\n\n## 1.5 \u5e94\u7528\u8bfb\u53d6\u914d\u7f6e\n\u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0c\u5e94\u7528\u5c31\u53ef\u4ee5\u901a\u8fc7Apollo\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u914d\u7f6e\u4e86\u3002\n\nApollo\u76ee\u524d\u63d0\u4f9bJava\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u70b9\u51fb[Java\u5ba2\u6237\u7aef\u4f7f\u7528\u6587\u6863](zh/usage/java-sdk-user-guide)\uff1a\n\n\u5982\u679c\u5e94\u7528\u4f7f\u7528\u4e86\u5176\u5b83\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95eeHttp\u63a5\u53e3\u83b7\u53d6\u914d\u7f6e\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003[\u5176\u5b83\u8bed\u8a00\u5ba2\u6237\u7aef\u63a5\u5165\u6307\u5357](zh/usage/other-language-client-user-guide)\n\n## 1.6 \u56de\u6eda\u5df2\u53d1\u5e03\u914d\u7f6e\n\n\u5982\u679c\u53d1\u73b0\u5df2\u53d1\u5e03\u7684\u914d\u7f6e\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u300e\u56de\u6eda\u300f\u6309\u94ae\u6765\u5c06\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u7684\u914d\u7f6e\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u53d1\u5e03\u7248\u672c\u3002\n\n\u8fd9\u91cc\u7684\u56de\u6eda\u673a\u5236\u7c7b\u4f3c\u4e8e\u53d1\u5e03\u7cfb\u7edf\uff0c\u53d1\u5e03\u7cfb\u7edf\u4e2d\u7684\u56de\u6eda\u64cd\u4f5c\u662f\u5c06\u90e8\u7f72\u5230\u673a\u5668\u4e0a\u7684\u5b89\u88c5\u5305\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u90e8\u7f72\u7684\u7248\u672c\uff0c\u4f46\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\u662f\u4e0d\u4f1a\u56de\u6eda\u7684\uff0c\u4ece\u800c\u5f00\u53d1\u53ef\u4ee5\u5728\u4fee\u590d\u4ee3\u7801\u540e\u91cd\u65b0\u53d1\u5e03\u3002\n\nApollo\u4e2d\u7684\u56de\u6eda\u4e5f\u662f\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u70b9\u51fb\u56de\u6eda\u540e\u662f\u5c06\u53d1\u5e03\u5230\u5ba2\u6237\u7aef\u7684\u914d\u7f6e\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u5df2\u53d1\u5e03\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u7684\u914d\u7f6e\u4f1a\u6062\u590d\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u4f46\u9875\u9762\u4e0a\u7f16\u8f91\u72b6\u6001\u7684\u914d\u7f6e\u662f\u4e0d\u4f1a\u56de\u6eda\u7684\uff0c\u4ece\u800c\u5f00\u53d1\u53ef\u4ee5\u5728\u4fee\u590d\u914d\u7f6e\u540e\u91cd\u65b0\u53d1\u5e03\u3002\n\n# \u4e8c\u3001\u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6307\u5357\n## 2.1 \u516c\u5171\u7ec4\u4ef6\u548c\u666e\u901a\u5e94\u7528\u7684\u533a\u522b\n\n\u516c\u5171\u7ec4\u4ef6\u662f\u6307\u90a3\u4e9b\u53d1\u5e03\u7ed9\u5176\u5b83\u5e94\u7528\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u6bd4\u5982CAT\u5ba2\u6237\u7aef\u3001Hermes Producer\u5ba2\u6237\u7aef\u7b49\u3002\n\n\u867d\u7136\u8fd9\u7c7b\u7ec4\u4ef6\u662f\u7531\u5176\u4ed6\u56e2\u961f\u5f00\u53d1\u3001\u7ef4\u62a4\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u662f\u5728\u4e1a\u52a1\u5b9e\u9645\u5e94\u7528\u5185\u7684\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5e94\u7528\u7684\u4e00\u90e8\u5206\u3002\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u7c7b\u7ec4\u4ef6\u6240\u7528\u5230\u7684\u914d\u7f6e\u7531\u539f\u59cb\u5f00\u53d1\u56e2\u961f\u7ef4\u62a4\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u9645\u5e94\u7528\u7684\u8fd0\u884c\u65f6\u3001\u73af\u5883\u5404\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5141\u8bb8\u5e94\u7528\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u80fd\u591f\u8986\u76d6\u516c\u5171\u7ec4\u4ef6\u7684\u90e8\u5206\u914d\u7f6e\u3002\n\n## 2.2 \u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6b65\u9aa4\n\n\u516c\u5171\u7ec4\u4ef6\u7684\u63a5\u5165\u6b65\u9aa4\uff0c\u548c\u666e\u901a\u5e94\u7528\u51e0\u4e4e\u4e00\u81f4\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u516c\u5171\u7ec4\u4ef6\u9700\u8981\u521b\u5efa\u81ea\u5df1\u552f\u4e00\u7684Namespace\u3002\n\n\u6240\u4ee5\uff0c\u9996\u5148\u6267\u884c\u666e\u901a\u5e94\u7528\u63a5\u5165\u6587\u6863\u4e2d\u7684\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff0c\u7136\u540e\u518d\u6309\u7167\u672c\u7ae0\u8282\u540e\u9762\u7684\u6b65\u9aa4\u64cd\u4f5c\u3002\n\n1. [\u521b\u5efa\u9879\u76ee](#_11-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE)\n2. [\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650](#_121-%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90)\n\n### 2.2.1 \u521b\u5efaNamespace\n\n\u521b\u5efaNamespace\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0Namespace\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u6dfb\u52a0Namespace\n    * ![create-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace.png)\n\n2. \u70b9\u51fb\u201c\u521b\u5efa\u65b0\u7684Namespace\u201d\n    * ![create-namespace-select-type](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-select-type.png)\n\n3. \u8f93\u5165\u516c\u5171\u7ec4\u4ef6\u7684Namespace\u540d\u79f0\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fNamespace\u540d\u79f0\u5168\u5c40\u552f\u4e00\n    * Apollo\u4f1a\u9ed8\u8ba4\u628a\u90e8\u95e8\u4ee3\u53f7\u6dfb\u52a0\u5728\u6700\u524d\u9762\n    * ![create-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-namespace-detail.png)\n\n4. \u70b9\u51fb\u63d0\u4ea4\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u5173\u8054Namespace\u9875\u9762\n    * \u9996\u5148\uff0c\u9009\u4e2d\u6240\u6709\u9700\u8981\u6709\u8fd9\u4e2aNamespace\u7684\u73af\u5883\u548c\u96c6\u7fa4\uff0c\u4e00\u822c\u5efa\u8bae\u5168\u9009\n    * \u5176\u6b21\uff0c\u9009\u4e2d\u521a\u521a\u521b\u5efa\u7684namespace\n    * \u6700\u540e\uff0c\u70b9\u51fb\u63d0\u4ea4\n    * ![link-namespace-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-namespace-detail.png)\n\n5. \u5173\u8054\u6210\u529f\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230Namespace\u6743\u9650\u7ba1\u7406\u9875\u9762\n    1. \u5206\u914d\u4fee\u6539\u6743\u9650\n        * ![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n    2. \u5206\u914d\u53d1\u5e03\u6743\u9650\n        * ![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n6. \u70b9\u51fb\u201c\u8fd4\u56de\u201d\u56de\u5230\u9879\u76ee\u9875\u9762\n\n### 2.2.2 \u6dfb\u52a0\u914d\u7f6e\u9879\n\n\u7f16\u8f91\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u7f16\u8f91\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u65b0\u589e\u914d\u7f6e\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n#### 2.2.2.1 \u901a\u8fc7\u8868\u683c\u6a21\u5f0f\u6dfb\u52a0\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n![public-namespace-edit-item-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item-entry.png)\n\n2. \u8f93\u5165\u914d\u7f6e\u9879\n![public-namespace-edit-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-edit-item.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n![public-namespace-item-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-item-created.png)\n\n#### 2.2.2.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\n\u8fd9\u90e8\u5206\u548c\u666e\u901a\u5e94\u7528\u4e00\u81f4\uff0c\u5177\u4f53\u6b65\u9aa4\u8bf7\u53c2\u89c1[1.3.2 \u901a\u8fc7\u6587\u672c\u6a21\u5f0f\u7f16\u8f91](#_132-%E9%80%9A%E8%BF%87%E6%96%87%E6%9C%AC%E6%A8%A1%E5%BC%8F%E7%BC%96%E8%BE%91)\u3002\n\n### 2.2.3 \u53d1\u5e03\u914d\u7f6e\n\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![public-namespace-publish-items-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![public-namespace-publish-items](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/public-namespace-publish-items.png)\n\n### 2.2.4 \u5e94\u7528\u8bfb\u53d6\u914d\u7f6e\n\n\u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0c\u5e94\u7528\u5c31\u53ef\u4ee5\u901a\u8fc7Apollo\u5ba2\u6237\u7aef\u8bfb\u53d6\u5230\u914d\u7f6e\u4e86\u3002\n\nApollo\u76ee\u524d\u63d0\u4f9bJava\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u4fe1\u606f\u8bf7\u70b9\u51fb[Java\u5ba2\u6237\u7aef\u4f7f\u7528\u6587\u6863](zh/usage/java-sdk-user-guide)\uff1a\n\n\u5982\u679c\u5e94\u7528\u4f7f\u7528\u4e86\u5176\u5b83\u8bed\u8a00\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95eeHttp\u63a5\u53e3\u83b7\u53d6\u914d\u7f6e\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003[\u5176\u5b83\u8bed\u8a00\u5ba2\u6237\u7aef\u63a5\u5165\u6307\u5357](zh/usage/other-language-client-user-guide)\n\n\u5bf9\u4e8e\u516c\u5171\u7ec4\u4ef6\u7684\u914d\u7f6e\u8bfb\u53d6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u6587\u6863\u4e2d\u7684\u201c\u83b7\u53d6\u516c\u5171Namespace\u7684\u914d\u7f6e\u201d\u90e8\u5206\u3002\n\n## 2.3 \u5e94\u7528\u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u914d\u7f6e\u6b65\u9aa4\n\u524d\u9762\u63d0\u5230\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u516c\u5171\u7ec4\u4ef6\u6240\u7528\u5230\u7684\u914d\u7f6e\u7531\u539f\u59cb\u5f00\u53d1\u56e2\u961f\u7ef4\u62a4\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u9645\u5e94\u7528\u7684\u8fd0\u884c\u65f6\u3001\u73af\u5883\u5404\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u5141\u8bb8\u5e94\u7528\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u80fd\u591f\u8986\u76d6\u516c\u5171\u7ec4\u4ef6\u7684\u90e8\u5206\u914d\u7f6e\u3002\n\n\u8fd9\u91cc\u5c31\u8bb2\u4e00\u4e0b\u5e94\u7528\u5982\u4f55\u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u7684\u914d\u7f6e\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u5047\u8bbeapollo-portal\u5e94\u7528\u4f7f\u7528\u4e86hermes producer\u5ba2\u6237\u7aef\uff0c\u5e76\u4e14\u5e0c\u671b\u8c03\u6574hermes\u7684\u6279\u91cf\u53d1\u9001\u5927\u5c0f\u3002\n\n### 2.3.1 \u5173\u8054\u516c\u5171\u7ec4\u4ef6Namespace\n\n1. \u8fdb\u5165\u4f7f\u7528\u516c\u5171\u7ec4\u4ef6\u7684\u5e94\u7528\u9879\u76ee\u9996\u9875\uff0c\u70b9\u51fb\u5de6\u4fa7\u7684\u6dfb\u52a0Namespace\u6309\u94ae\n    * \u6240\u4ee5\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165apollo-portal\u7684\u9996\u9875\u3002\n    * \uff08\u6dfb\u52a0Namespace\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0Namespace\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\uff09\n    * ![link-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace-entry.png)\n\n2. \u627e\u5230hermes producer\u7684namespace\uff0c\u5e76\u9009\u62e9\u9700\u8981\u5173\u8054\u5230\u54ea\u4e9b\u73af\u5883\u548c\u96c6\u7fa4\n![link-public-namespace](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/link-public-namespace.png)\n\n3. \u5173\u8054\u6210\u529f\u540e\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230Namespace\u6743\u9650\u7ba1\u7406\u9875\u9762\n    1. \u5206\u914d\u4fee\u6539\u6743\u9650\n![namespace-permission-edit](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-permission-edit.png)\n    2. \u5206\u914d\u53d1\u5e03\u6743\u9650\n![namespace-publish-permission](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/namespace-publish-permission.png)\n\n4. \u70b9\u51fb\u201c\u8fd4\u56de\u201d\u56de\u5230\u9879\u76ee\u9875\u9762\n\n### 2.3.2 \u8986\u76d6\u516c\u7528\u7ec4\u4ef6\u914d\u7f6e\n\n1. \u70b9\u51fb\u65b0\u589e\u914d\u7f6e\n![override-public-namespace-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-entry.png)\n\n2. \u8f93\u5165\u8981\u8986\u76d6\u7684\u914d\u7f6e\u9879\n![override-public-namespace-item](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item.png)\n\n3. \u70b9\u51fb\u63d0\u4ea4\n![override-public-namespace-item-done](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-done.png)\n\n### 2.3.3 \u53d1\u5e03\u914d\u7f6e\n\n\u914d\u7f6e\u53ea\u6709\u5728\u53d1\u5e03\u540e\u624d\u4f1a\u771f\u7684\u88ab\u5e94\u7528\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5b8c\u914d\u7f6e\u540e\uff0c\u9700\u8981\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u53d1\u5e03\u914d\u7f6e\u9700\u8981\u62e5\u6709\u8fd9\u4e2aNamespace\u7684\u53d1\u5e03\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u53d1\u5e03\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u201c\u53d1\u5e03\u6309\u94ae\u201d\n![override-public-namespace-item-publish-entry](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish-entry.png)\n\n2. \u586b\u5199\u53d1\u5e03\u76f8\u5173\u4fe1\u606f\uff0c\u70b9\u51fb\u53d1\u5e03\n![override-public-namespace-item-publish](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/override-public-namespace-item-publish.png)\n\n3. \u914d\u7f6e\u53d1\u5e03\u6210\u529f\u540e\uff0chermes producer\u5ba2\u6237\u7aef\u5728apollo-portal\u5e94\u7528\u91cc\u9762\u8fd0\u884c\u65f6\u8bfb\u53d6\u5230\u7684sender.batchSize\u7684\u503c\u5c31\u662f1000\u3002\n\n# \u4e09\u3001\u96c6\u7fa4\u72ec\u7acb\u914d\u7f6e\u8bf4\u660e\n\n\u5728\u6709\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u6709\u9700\u6c42\u5bf9\u4e0d\u540c\u7684\u96c6\u7fa4\u505a\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u90e8\u7f72\u5728A\u673a\u623f\u7684\u5e94\u7528\u8fde\u63a5\u7684es\u670d\u52a1\u5668\u5730\u5740\u548c\u90e8\u7f72\u5728B\u673a\u623f\u7684\u5e94\u7528\u8fde\u63a5\u7684es\u670d\u52a1\u5668\u5730\u5740\u4e0d\u4e00\u6837\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728Apollo\u521b\u5efa\u4e0d\u540c\u7684\u96c6\u7fa4\u6765\u89e3\u51b3\u3002\n\n## 3.1 \u521b\u5efa\u96c6\u7fa4\n\n\u521b\u5efa\u96c6\u7fa4\u9700\u8981\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u6dfb\u52a0\u96c6\u7fa4\u6309\u94ae\uff0c\u53ef\u4ee5\u627e\u9879\u76ee\u7ba1\u7406\u5458\u6388\u6743\u3002\n\n1. \u70b9\u51fb\u9875\u9762\u5de6\u4fa7\u7684\u201c\u6dfb\u52a0\u96c6\u7fa4\u201d\u6309\u94ae\n    * ![create-cluster](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster.png)\n\n2. \u8f93\u5165\u96c6\u7fa4\u540d\u79f0\uff0c\u9009\u62e9\u73af\u5883\u5e76\u63d0\u4ea4\n    * ![create-cluster-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/create-cluster-detail.png)\n\n3. \u5207\u6362\u5230\u5bf9\u5e94\u7684\u96c6\u7fa4\uff0c\u4fee\u6539\u914d\u7f6e\u5e76\u53d1\u5e03\u5373\u53ef\n    * ![config-in-cluster-created](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/cluster-created.png)\n\n4. \u901a\u8fc7\u4e0a\u8ff0\u914d\u7f6e\uff0c\u90e8\u7f72\u5728SHAJQ\u673a\u623f\u7684\u5e94\u7528\u5c31\u4f1a\u8bfb\u5230SHAJQ\u96c6\u7fa4\u4e0b\u7684\u914d\u7f6e\n\n5. \u5982\u679c\u5e94\u7528\u8fd8\u5728\u5176\u5b83\u673a\u623f\u90e8\u7f72\u4e86\u5e94\u7528\uff0c\u90a3\u4e48\u5728\u4e0a\u8ff0\u7684\u914d\u7f6e\u4e0b\uff0c\u4f1a\u8bfb\u5230default\u96c6\u7fa4\u4e0b\u7684\u914d\u7f6e\u3002\n\n# \u56db\u3001\u591a\u4e2aAppId\u4f7f\u7528\u540c\u4e00\u4efd\u914d\u7f6e\n\n\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5c3d\u7ba1\u5e94\u7528\u672c\u8eab\u4e0d\u662f\u516c\u5171\u7ec4\u4ef6\uff0c\u4f46\u8fd8\u662f\u9700\u8981\u5728\u591a\u4e2aAppId\u4e4b\u95f4\u5171\u7528\u540c\u4e00\u4efd\u914d\u7f6e\uff0c\u6bd4\u5982\u540c\u4e00\u4e2a\u4ea7\u54c1\u7684\u4e0d\u540c\u9879\u76ee\uff1aXX-Web, XX-Service, XX-Job\u7b49\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u679c\u5e0c\u671b\u5b9e\u73b0\u591a\u4e2aAppId\u4f7f\u7528\u540c\u4e00\u4efd\u914d\u7f6e\u7684\u8bdd\uff0c\u57fa\u672c\u6982\u5ff5\u548c\u516c\u5171\u7ec4\u4ef6\u7684\u914d\u7f6e\u662f\u4e00\u81f4\u7684\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5728\u5176\u4e2d\u4e00\u4e2aAppId\u4e0b\u521b\u5efa\u4e00\u4e2anamespace\uff0c\u5199\u5165\u516c\u5171\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u5728\u5404\u4e2a\u9879\u76ee\u4e2d\u8bfb\u53d6\u8be5namespace\u7684\u914d\u7f6e\u5373\u53ef\u3002\n\n\u5982\u679c\u67d0\u4e2aAppId\u9700\u8981\u8986\u76d6\u516c\u5171\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u90a3\u4e48\u5728\u8be5AppId\u4e0b\u5173\u8054\u516c\u5171\u7684namespace\u5e76\u5199\u5165\u9700\u8981\u8986\u76d6\u7684\u914d\u7f6e\u5373\u53ef\u3002\n\n\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u53c2\u8003[\u516c\u5171\u7ec4\u4ef6\u63a5\u5165\u6307\u5357](#%e4%ba%8c%e3%80%81%e5%85%ac%e5%85%b1%e7%bb%84%e4%bb%b6%e6%8e%a5%e5%85%a5%e6%8c%87%e5%8d%97)\u3002\n\n# \u4e94\u3001\u7070\u5ea6\u53d1\u5e03\u4f7f\u7528\u6307\u5357\n\u901a\u8fc7\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff1a\n\n1. \u5bf9\u4e8e\u4e00\u4e9b\u5bf9\u7a0b\u5e8f\u6709\u6bd4\u8f83\u5927\u5f71\u54cd\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u5148\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5b9e\u4f8b\u751f\u6548\uff0c\u89c2\u5bdf\u4e00\u6bb5\u65f6\u95f4\u6ca1\u95ee\u9898\u540e\u518d\u5168\u91cf\u53d1\u5e03\u914d\u7f6e\u3002\n2. \u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u8c03\u4f18\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u6765\u5b9e\u73b0A/B\u6d4b\u8bd5\u3002\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u5e94\u7528\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u4e0d\u65ad\u8c03\u6574\u3001\u6d4b\u8bc4\u4e00\u6bb5\u65f6\u95f4\u540e\u627e\u51fa\u8f83\u4f18\u7684\u914d\u7f6e\u518d\u5168\u91cf\u53d1\u5e03\u914d\u7f6e\u3002\n\n\u4e0b\u9762\u5c06\u7ed3\u5408\u4e00\u4e2a\u5b9e\u9645\u4f8b\u5b50\u6765\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u3002\n\n## 5.1 \u573a\u666f\u4ecb\u7ecd\n100004458(apollo-demo)\u9879\u76ee\u6709\u4e24\u4e2a\u5ba2\u6237\u7aef\uff1a\n\n1. 10.32.21.19\n2. 10.32.21.22\n\n![initial-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-instance-list.png)\n\n**\u7070\u5ea6\u76ee\u6807\uff1a**\n\n* \u5f53\u524d\u6709\u4e00\u4e2a\u914d\u7f6etimeout=2000\uff0c\u6211\u4eec\u5e0c\u671b\u5bf910.32.21.22\u7070\u5ea6\u53d1\u5e03timeout=3000\uff0c\u5bf910.32.21.19\u4ecd\u7136\u662ftimeout=2000\u3002\n\n![initial-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-config.png)\n\n## 5.2 \u521b\u5efa\u7070\u5ea6\n\u9996\u5148\u70b9\u51fbapplication namespace\u53f3\u4e0a\u89d2\u7684`\u521b\u5efa\u7070\u5ea6`\u6309\u94ae\u3002\n\n![create-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/create-gray-release.png)\n\n\u70b9\u51fb\u786e\u5b9a\u540e\uff0c\u7070\u5ea6\u7248\u672c\u5c31\u521b\u5efa\u6210\u529f\u4e86\uff0c\u9875\u9762\u4f1a\u81ea\u52a8\u5207\u6362\u5230`\u7070\u5ea6\u7248\u672c`Tab\u3002\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/initial-gray-release-tab.png)\n\n## 5.3 \u7070\u5ea6\u914d\u7f6e\n\u70b9\u51fb`\u4e3b\u7248\u672c\u7684\u914d\u7f6e`\u4e2d\uff0ctimeout\u914d\u7f6e\u6700\u53f3\u4fa7\u7684`\u5bf9\u6b64\u914d\u7f6e\u7070\u5ea6`\u6309\u94ae\n\n![initial-gray-release-tab](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/edit-gray-release-config.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d\u586b\u5165\u8981\u7070\u5ea6\u7684\u503c\uff1a3000\uff0c\u70b9\u51fb\u63d0\u4ea4\u3002\n\n![submit-gray-release-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/submit-gray-release-config.png)\n\n![gray-release-config-submitted](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-config-submitted.png)\n\n## 5.4 \u914d\u7f6e\u7070\u5ea6\u89c4\u5219\n\u5207\u6362\u5230`\u7070\u5ea6\u89c4\u5219`Tab\uff0c\u70b9\u51fb`\u65b0\u589e\u89c4\u5219`\u6309\u94ae\n\n![new-gray-release-rule](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/new-gray-release-rule.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d`\u7070\u5ea6\u7684IP`\u4e0b\u62c9\u6846\u4f1a\u9ed8\u8ba4\u5c55\u793a\u5f53\u524d\u4f7f\u7528\u914d\u7f6e\u7684\u673a\u5668\u5217\u8868\uff0c\u9009\u62e9\u6211\u4eec\u8981\u7070\u5ea6\u7684IP\u3002\n\n![select-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/select-gray-release-ip.png)\n\n![gray-release-ip-selected](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-ip-selected.png)\n\n\u9664\u4e86IP\u7ef4\u5ea6\u4ee5\u5916\uff0c\u4ece2.0.0\u7248\u672c\u5f00\u59cb\u8fd8\u652f\u6301\u901a\u8fc7label\u6765\u6807\u8bc6\u7070\u5ea6\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u9002\u7528\u4e8eIP\u4e0d\u56fa\u5b9a\u7684\u573a\u666f\u5982`Kubernetes`\u3002\n\n\u624b\u52a8\u8f93\u5165\u60f3\u8981\u8bbe\u7f6e\u7684label\u6807\u7b7e\uff0c\u8f93\u5165\u5b8c\u6210\u540e\u70b9\u51fb\u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\u3002\n\n![manual-input-gray-release-label](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label.png)\n\n![manual-input-gray-release-label-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-label2.png)\n\n![gray-release-rule-saved](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-rule-saved.png)\n\n\u4e0a\u8ff0\u89c4\u5219\u914d\u7f6e\u540e\uff0c\u7070\u5ea6\u914d\u7f6e\u4f1a\u5bf9AppId\u4e3a`100004458`\uff0cIP\u4e3a`10.32.21.22`\u6216\u8005`Label`\u6807\u8bb0\u4e3a`myLabel`\u6216`appLabel`\u7684\u5b9e\u4f8b\u751f\u6548\u3002\n\n> \u5173\u4e8e`Label`\u5982\u4f55\u6807\u8bb0\uff0c\u53ef\u4ee5\u53c2\u8003[ApolloLabel](zh/usage/java-sdk-user-guide?id=_1247-apollolabel)\u7684\u914d\u7f6e\u8bf4\u660e\u3002\n\n\u5982\u679c\u4e0b\u62c9\u6846\u4e2d\u6ca1\u627e\u5230\u9700\u8981\u7684IP\uff0c\u8bf4\u660e\u673a\u5668\u8fd8\u6ca1\u4eceApollo\u53d6\u8fc7\u914d\u7f6e\uff0c\u53ef\u4ee5\u70b9\u51fb\u624b\u52a8\u8f93\u5165IP\u6765\u8f93\u5165\uff0c\u8f93\u5165\u5b8c\u540e\u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\n\n![manual-input-gray-release-ip](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip.png)\n\n![manual-input-gray-release-ip-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/manual-input-gray-release-ip-2.png)\n\n>\u6ce8\uff1a\u5bf9\u4e8e\u516c\u5171Namespace\u7684\u7070\u5ea6\u89c4\u5219\uff0c\u9700\u8981\u5148\u6307\u5b9a\u8981\u7070\u5ea6\u7684appId\uff0c\u7136\u540e\u518d\u9009\u62e9IP\u548cLabel\u3002\n\n## 5.5 \u7070\u5ea6\u53d1\u5e03\n\u914d\u7f6e\u89c4\u5219\u5df2\u7ecf\u751f\u6548\uff0c\u4e0d\u8fc7\u7070\u5ea6\u914d\u7f6e\u8fd8\u6ca1\u6709\u53d1\u5e03\u3002\u5207\u6362\u5230`\u914d\u7f6e`Tab\u3002\n\n\u518d\u6b21\u68c0\u67e5\u7070\u5ea6\u7684\u914d\u7f6e\u90e8\u5206\uff0c\u5982\u679c\u6ca1\u6709\u95ee\u9898\uff0c\u70b9\u51fb`\u7070\u5ea6\u53d1\u5e03`\u3002\n\n![prepare-to-do-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-do-gray-release.png)\n\n\u5728\u5f39\u51fa\u6846\u4e2d\u53ef\u4ee5\u770b\u5230\u4e3b\u7248\u672c\u7684\u503c\u662f2000\uff0c\u7070\u5ea6\u7248\u672c\u5373\u5c06\u53d1\u5e03\u7684\u503c\u662f3000\u3002\u586b\u5165\u5176\u5b83\u4fe1\u606f\u540e\uff0c\u70b9\u51fb\u53d1\u5e03\u3002\n\n![gray-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-confirm-dialog.png)\n\n\u53d1\u5e03\u540e\uff0c\u5207\u6362\u5230`\u7070\u5ea6\u5b9e\u4f8b\u5217\u8868`Tab\uff0c\u5c31\u80fd\u770b\u523010.32.21.22\u5df2\u7ecf\u4f7f\u7528\u4e86\u7070\u5ea6\u53d1\u5e03\u7684\u503c\u3002\n\n![gray-release-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/gray-release-instance-list.png)\n\n\u5207\u6362\u5230`\u4e3b\u7248\u672c`\u7684`\u5b9e\u4f8b\u5217\u8868`\uff0c\u4f1a\u770b\u5230\u4e3b\u7248\u672c\u914d\u7f6e\u53ea\u670910.32.21.19\u5728\u4f7f\u7528\u4e86\u3002\n\n![master-branch-instance-list](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list.png)\n\n\u540e\u9762\u53ef\u4ee5\u7ee7\u7eed\u914d\u7f6e\u7684\u4fee\u6539\u6216\u89c4\u5219\u7684\u66f4\u6539\u3002\u914d\u7f6e\u7684\u4fee\u6539\u9700\u8981\u70b9\u51fb\u7070\u5ea6\u53d1\u5e03\u540e\u624d\u4f1a\u751f\u6548\uff0c\u89c4\u5219\u7684\u4fee\u6539\u5728\u89c4\u5219\u70b9\u51fb\u5b8c\u6210\u540e\u5c31\u4f1a\u5b9e\u65f6\u751f\u6548\u3002\n\n## 5.6 \u5168\u91cf\u53d1\u5e03\n\u5982\u679c\u7070\u5ea6\u7684\u914d\u7f6e\u6d4b\u8bd5\u4e0b\u6765\u6bd4\u8f83\u7406\u60f3\uff0c\u7b26\u5408\u9884\u671f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u64cd\u4f5c`\u5168\u91cf\u53d1\u5e03`\u3002\n\n\u5168\u91cf\u53d1\u5e03\u7684\u6548\u679c\u662f\uff1a\n\n1. \u7070\u5ea6\u7248\u672c\u7684\u914d\u7f6e\u4f1a\u5408\u5e76\u56de\u4e3b\u7248\u672c\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f\u4e3b\u7248\u672c\u7684timeout\u4f1a\u88ab\u66f4\u65b0\u62103000\n2. \u4e3b\u7248\u672c\u7684\u914d\u7f6e\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e00\u6b21\u53d1\u5e03\n3. \u5728\u5168\u91cf\u53d1\u5e03\u9875\u9762\uff0c\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u7559\u5f53\u524d\u7070\u5ea6\u7248\u672c\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u4fdd\u7559\u3002\n\n![prepare-to-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/prepare-to-full-release.png)\n\n![full-release-confirm-dialog](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog.png)\n\n![full-release-confirm-dialog-2](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/full-release-confirm-dialog-2.png)\n\n\u6211\u9009\u62e9\u4e86\u4e0d\u4fdd\u7559\u7070\u5ea6\u7248\u672c\uff0c\u6240\u4ee5\u53d1\u5e03\u5b8c\u7684\u6548\u679c\u5c31\u662f\u4e3b\u7248\u672c\u7684\u914d\u7f6e\u66f4\u65b0\u3001\u7070\u5ea6\u7248\u672c\u5220\u9664\u3002\u70b9\u51fb\u4e3b\u7248\u672c\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u53ef\u4ee5\u770b\u523010.32.21.22\u548c10.32.21.19\u90fd\u4f7f\u7528\u4e86\u4e3b\u7248\u672c\u6700\u65b0\u7684\u914d\u7f6e\u3002\n\n![master-branch-instance-list-after-full-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/master-branch-instance-list-after-full-release.png)\n\n## 5.7 \u653e\u5f03\u7070\u5ea6\n\u5982\u679c\u7070\u5ea6\u7248\u672c\u4e0d\u7406\u60f3\u6216\u8005\u4e0d\u9700\u8981\u4e86\uff0c\u53ef\u4ee5\u70b9\u51fb`\u653e\u5f03\u7070\u5ea6`\u3002\n\n![abandon-gray-release](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/abandon-gray-release.png)\n\n## 5.8 \u53d1\u5e03\u5386\u53f2\n\u70b9\u51fb\u4e3b\u7248\u672c\u7684`\u53d1\u5e03\u5386\u53f2`\u6309\u94ae\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u524dnamespace\u7684\u4e3b\u7248\u672c\u4ee5\u53ca\u7070\u5ea6\u7248\u672c\u7684\u53d1\u5e03\u5386\u53f2\u3002\n\n![view-release-history](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history.png)\n\n![view-release-history-detail](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/gray-release/view-release-history-detail.png)\n\n# \u516d\u3001\u5176\u5b83\u529f\u80fd\u914d\u7f6e\n\n## 6.1 \u914d\u7f6e\u67e5\u770b\u6743\u9650\n\n\u4ece1.1.0\u7248\u672c\u5f00\u59cb\uff0capollo-portal\u589e\u52a0\u4e86\u67e5\u770b\u6743\u9650\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u652f\u6301\u914d\u7f6e\u67d0\u4e2a\u73af\u5883\u53ea\u5141\u8bb8\u9879\u76ee\u6210\u5458\u67e5\u770b\u79c1\u6709Namespace\u7684\u914d\u7f6e\u3002\n\n\u8fd9\u91cc\u7684\u9879\u76ee\u6210\u5458\u662f\u6307\uff1a\n1. \u9879\u76ee\u7684\u7ba1\u7406\u5458\n2. \u5177\u5907\u8be5\u79c1\u6709Namespace\u5728\u8be5\u73af\u5883\u4e0b\u7684\u4fee\u6539\u6216\u53d1\u5e03\u6743\u9650\n\n\u914d\u7f6e\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u7528\u8d85\u7ea7\u7ba1\u7406\u5458\u8d26\u53f7\u767b\u5f55\u540e\uff0c\u8fdb\u5165`\u7ba1\u7406\u5458\u5de5\u5177 - \u7cfb\u7edf\u53c2\u6570`\u9875\u9762\u65b0\u589e\u6216\u4fee\u6539`configView.memberOnly.envs`\u914d\u7f6e\u9879\u5373\u53ef\u3002\n\n![show-all-config](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/show-all-config.png)\n\n![configView.memberOnly.envs](https://cdn.jsdelivr.net/gh/apolloconfig/apollo@master/doc/images/configure-view-permissions.png)\n\n## 6.2 \u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5\n\nApollo\u4ece1.6.0\u7248\u672c\u5f00\u59cb\u589e\u52a0\u8bbf\u95ee\u5bc6\u94a5\u673a\u5236\uff0c\u4ece\u800c\u53ea\u6709\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u8bbf\u95ee\u654f\u611f\u914d\u7f6e\u3002\u5982\u679c\u5e94\u7528\u5f00\u542f\u4e86\u8bbf\u95ee\u5bc6\u94a5\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u914d\u7f6e\u5bc6\u94a5\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u914d\u7f6e\u3002\n\n1. \u9879\u76ee\u7ba1\u7406\u5458\u6253\u5f00\u7ba1\u7406\u5bc6\u94a5\u9875\u9762\n![\u7ba1\u7406\u5bc6\u94a5\u5165\u53e3](https://user-images.githubusercontent.com/837658/94990081-f4d3cd80-05ab-11eb-9470-fed5ec6de92e.png)\n\n2. \u4e3a\u9879\u76ee\u7684\u6bcf\u4e2a\u73af\u5883\u751f\u6210\u8bbf\u95ee\u5bc6\u94a5\uff0c\u6ce8\u610f\u9ed8\u8ba4\u662f\u7981\u7528\u7684\uff0c\u5efa\u8bae\u5728\u5ba2\u6237\u7aef\u90fd\u914d\u7f6e\u5b8c\u6210\u540e\u518d\u5f00\u542f\n![\u5bc6\u94a5\u914d\u7f6e\u9875\u9762](https://user-images.githubusercontent.com/837658/94990150-788dba00-05ac-11eb-9a12-727fdb872e42.png)\n\n3. \u5ba2\u6237\u7aef\u4fa7[\u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5](zh/usage/java-sdk-user-guide#_1244-\u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5)\n\n# \u4e03\u3001\u6700\u4f73\u5b9e\u8df5\n\n## 7.1 \u5b89\u5168\u76f8\u5173\n\n\u914d\u7f6e\u4e2d\u5fc3\u4f5c\u4e3a\u57fa\u7840\u670d\u52a1\uff0c\u5b58\u50a8\u7740\u516c\u53f8\u975e\u5e38\u91cd\u8981\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u6240\u4ee5\u5b89\u5168\u56e0\u7d20\u9700\u8981\u5927\u5bb6\u91cd\u70b9\u5173\u6ce8\uff0c\u4e0b\u9762\u5217\u4e3e\u4e86\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u5206\u4eab\u81ea\u5df1\u7684\u5b9e\u8df5\u6848\u4f8b\u3002\n\n### 7.1.1 \u8ba4\u8bc1\n\n\u5efa\u8bae\u63a5\u5165\u516c\u53f8\u7edf\u4e00\u7684\u8eab\u4efd\u8ba4\u8bc1\u7cfb\u7edf\uff0c\u5982 SSO\u3001LDAP \u7b49\uff0c\u63a5\u5165\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003[Portal \u5b9e\u73b0\u7528\u6237\u767b\u5f55\u529f\u80fd](zh/development/portal-how-to-implement-user-login-function)\n\n> \u5982\u679c\u4f7f\u7528Apollo\u63d0\u4f9b\u7684Spring Security\u7b80\u5355\u8ba4\u8bc1\uff0c\u52a1\u5fc5\u8bb0\u5f97\u8981\u4fee\u6539\u8d85\u7ea7\u7ba1\u7406\u5458apollo\u7684\u5bc6\u7801\n\n### 7.1.2 \u6388\u6743\n\nApollo \u652f\u6301\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u63a7\u5236\uff0c\u8bf7\u52a1\u5fc5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u505a\u597d\u6743\u9650\u63a7\u5236\uff1a\n1. [\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650](#_121-\u9879\u76ee\u7ba1\u7406\u5458\u6743\u9650)\n    * Apollo \u9ed8\u8ba4\u5141\u8bb8\u6240\u6709\u767b\u5f55\u7528\u6237\u521b\u5efa\u9879\u76ee\uff0c\u5982\u679c\u53ea\u5141\u8bb8\u90e8\u5206\u7528\u6237\u521b\u5efa\u9879\u76ee\uff0c\u53ef\u4ee5\u5f00\u542f[\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236](zh/deployment/distributed-deployment-guide?id=_3110-rolecreate-applicationenabled-\u662f\u5426\u5f00\u542f\u521b\u5efa\u9879\u76ee\u6743\u9650\u63a7\u5236)\n2. [\u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650](#_122-\u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650)\n    * \u914d\u7f6e\u7f16\u8f91\u3001\u53d1\u5e03\u6743\u9650\u652f\u6301\u6309\u73af\u5883\u914d\u7f6e\uff0c\u6bd4\u5982\u5f00\u53d1\u73af\u5883\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u81ea\u884c\u5b8c\u6210\u914d\u7f6e\u7f16\u8f91\u548c\u53d1\u5e03\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u751f\u4ea7\u73af\u5883\u53d1\u5e03\u6743\u9650\u4ea4\u7531\u6d4b\u8bd5\u6216\u8fd0\u7ef4\u4eba\u5458\n    * \u751f\u4ea7\u73af\u5883\u5efa\u8bae\u540c\u65f6\u5f00\u542f[\u53d1\u5e03\u5ba1\u6838](zh/deployment/distributed-deployment-guide?id=_322-namespacelockswitch-\u4e00\u6b21\u53d1\u5e03\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u4fee\u6539\u5f00\u5173\uff0c\u7528\u4e8e\u53d1\u5e03\u5ba1\u6838)\uff0c\u4ece\u800c\u63a7\u5236\u4e00\u6b21\u914d\u7f6e\u53d1\u5e03\u53ea\u80fd\u7531\u4e00\u4e2a\u4eba\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u4eba\u53d1\u5e03\uff0c\u786e\u4fdd\u914d\u7f6e\u4fee\u6539\u5f97\u5230\u5145\u5206\u68c0\u67e5\n3. [\u914d\u7f6e\u67e5\u770b\u6743\u9650](#_61-\u914d\u7f6e\u67e5\u770b\u6743\u9650)\n    * \u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u73af\u5883\u53ea\u5141\u8bb8\u9879\u76ee\u6210\u5458\u67e5\u770b\u79c1\u6709Namespace\u7684\u914d\u7f6e\uff0c\u4ece\u800c\u907f\u514d\u654f\u611f\u914d\u7f6e\u6cc4\u9732\uff0c\u5982\u751f\u4ea7\u73af\u5883\n\n### 7.1.3 \u7cfb\u7edf\u8bbf\u95ee\n\n\u9664\u4e86\u7528\u6237\u6743\u9650\uff0c\u5728\u7cfb\u7edf\u8bbf\u95ee\u4e0a\u4e5f\u9700\u8981\u52a0\u4ee5\u8003\u8651\uff1a\n\n1. `apollo-configservice`\u548c`apollo-adminservice`\u662f\u57fa\u4e8e\u5185\u7f51\u53ef\u4fe1\u7f51\u7edc\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u7981\u6b62`apollo-configservice`\u548c`apollo-adminservice`\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51\n2. \u5bf9\u654f\u611f\u914d\u7f6e\u53ef\u4ee5\u8003\u8651\u5f00\u542f[\u8bbf\u95ee\u79d8\u94a5](#_62-%e9%85%8d%e7%bd%ae%e8%ae%bf%e9%97%ae%e5%af%86%e9%92%a5)\uff0c\u4ece\u800c\u53ea\u6709\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u8bbf\u95ee\u654f\u611f\u914d\u7f6e\n3. 1.7.1\u53ca\u4ee5\u4e0a\u7248\u672c\u53ef\u4ee5\u8003\u8651\u4e3a`apollo-adminservice`\u5f00\u542f[\u8bbf\u95ee\u63a7\u5236](zh/deployment/distributed-deployment-guide?id=_326-admin-serviceaccesscontrolenabled-\u914d\u7f6eapollo-adminservice\u662f\u5426\u5f00\u542f\u8bbf\u95ee\u63a7\u5236)\uff0c\u4ece\u800c\u53ea\u6709[\u53d7\u63a7\u7684](zh/deployment/distributed-deployment-guide?id=_3112-admin-serviceaccesstokens-\u8bbe\u7f6eapollo-portal\u8bbf\u95ee\u5404\u73af\u5883apollo-adminservice\u6240\u9700\u7684access-token)`apollo-portal`\u624d\u80fd\u8bbf\u95ee\u5bf9\u5e94\u63a5\u53e3\uff0c\u589e\u5f3a\u5b89\u5168\u6027\n4. 2.1.0\u53ca\u4ee5\u4e0a\u7248\u672c\u53ef\u4ee5\u8003\u8651\u4e3a`eureka`\u5f00\u542f[\u8bbf\u95ee\u63a7\u5236](zh/deployment/distributed-deployment-guide?id=_329-apolloeurekaserversecurityenabled-\u914d\u7f6e\u662f\u5426\u5f00\u542feureka-server\u7684\u767b\u5f55\u8ba4\u8bc1)\uff0c\u4ece\u800c\u53ea\u6709\u53d7\u63a7\u7684`apollo-configservice`\u548c`apollo-adminservice`\u53ef\u4ee5\u6ce8\u518c\u5230`eureka`\uff0c\u589e\u5f3a\u5b89\u5168\u6027"], "filenames": ["CHANGES.md", "apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/ConfigServerEurekaServerConfigure.java", "apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/TestWebSecurityConfig.java", "docs/en/deployment/distributed-deployment-guide.md", "docs/en/usage/apollo-user-guide.md", "docs/zh/deployment/distributed-deployment-guide.md", "docs/zh/usage/apollo-user-guide.md"], "buggy_code_start_loc": [41, 18, 25, 1530, 507, 1472, 479], "buggy_code_end_loc": [41, 31, 26, 1530, 508, 1472, 479], "fixing_code_start_loc": [42, 19, 25, 1531, 507, 1473, 480], "fixing_code_end_loc": [43, 78, 26, 1559, 509, 1500, 481], "type": "CWE-306", "message": "Apollo is a configuration management system. Prior to version 2.1.0, there are potential security issues if users expose apollo-configservice to the internet, which is not recommended. This is because there is no authentication feature enabled for the built-in eureka service. Malicious hackers may access eureka directly to mock apollo-configservice and apollo-adminservice. Login authentication for eureka was added in version 2.1.0. As a workaround, avoid exposing apollo-configservice to the internet.", "other": {"cve": {"id": "CVE-2023-25570", "sourceIdentifier": "security-advisories@github.com", "published": "2023-02-20T16:15:10.593", "lastModified": "2023-03-01T16:11:34.053", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Apollo is a configuration management system. Prior to version 2.1.0, there are potential security issues if users expose apollo-configservice to the internet, which is not recommended. This is because there is no authentication feature enabled for the built-in eureka service. Malicious hackers may access eureka directly to mock apollo-configservice and apollo-adminservice. Login authentication for eureka was added in version 2.1.0. As a workaround, avoid exposing apollo-configservice to the internet."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-306"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-306"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:apolloconfig:apollo:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.1.0", "matchCriteriaId": "799ED7FE-4FAA-475E-A4E6-2F3179879F3E"}]}]}], "references": [{"url": "https://github.com/apolloconfig/apollo/commit/7df79bf8df6960433ed4ff782a54e3dfc74632bd", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/apolloconfig/apollo/pull/4663", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/apolloconfig/apollo/releases/tag/v2.1.0", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://github.com/apolloconfig/apollo/security/advisories/GHSA-368x-wmmg-hq5c", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/apolloconfig/apollo/commit/7df79bf8df6960433ed4ff782a54e3dfc74632bd"}}