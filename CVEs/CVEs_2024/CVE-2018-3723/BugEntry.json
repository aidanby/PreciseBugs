{"buggy_code": ["/*!\n * defaults-deep <https://github.com/jonschlinkert/defaults-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar lazy = require('lazy-cache')(require);\nlazy('is-extendable', 'isObject');\nlazy('for-own', 'forOwn');\n\nfunction defaultsDeep(target, objects) {\n  target = target || {};\n\n  function copy(target, current) {\n    lazy.forOwn(current, function (value, key) {\n      var val = target[key];\n      // add the missing property, or allow a null property to be updated\n      if (val == null) {\n        target[key] = value;\n      } else if (lazy.isObject(val) && lazy.isObject(value)) {\n        defaultsDeep(val, value);\n      }\n    });\n  }\n\n  var len = arguments.length, i = 0;\n  while (i < len) {\n    var obj = arguments[i++];\n    if (obj) {\n      copy(target, obj);\n    }\n  }\n  return target;\n};\n\n/**\n * Expose `defaultsDeep`\n */\n\nmodule.exports = defaultsDeep;\n"], "fixing_code": ["/*!\n * defaults-deep <https://github.com/jonschlinkert/defaults-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar lazy = require('lazy-cache')(require);\nlazy('is-extendable', 'isObject');\nlazy('for-own', 'forOwn');\n\nfunction defaultsDeep(target, objects) {\n  target = target || {};\n\n  function copy(target, current) {\n    lazy.forOwn(current, function (value, key) {\n      if (key === '__proto__') {\n        return;\n      }\n\n      var val = target[key];\n      // add the missing property, or allow a null property to be updated\n      if (val == null) {\n        target[key] = value;\n      } else if (lazy.isObject(val) && lazy.isObject(value)) {\n        defaultsDeep(val, value);\n      }\n    });\n  }\n\n  var len = arguments.length, i = 0;\n  while (i < len) {\n    var obj = arguments[i++];\n    if (obj) {\n      copy(target, obj);\n    }\n  }\n  return target;\n};\n\n/**\n * Expose `defaultsDeep`\n */\n\nmodule.exports = defaultsDeep;\n"], "filenames": ["index.js"], "buggy_code_start_loc": [18], "buggy_code_end_loc": [18], "fixing_code_start_loc": [19], "fixing_code_end_loc": [23], "type": "CWE-20", "message": "defaults-deep node module before 0.2.4 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.", "other": {"cve": {"id": "CVE-2018-3723", "sourceIdentifier": "support@hackerone.com", "published": "2018-06-07T02:29:08.410", "lastModified": "2019-10-09T23:40:32.637", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "defaults-deep node module before 0.2.4 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."}, {"lang": "es", "value": "El m\u00f3dulo de node defaults-deep en versiones anteriores a la 0.2.4 se ve afectada por una vulnerabilidad MAID (modificaci\u00f3n de datos asumidos como asumible), lo que permite que un usuario malicioso modifique el prototipo de \"Object\" mediante __proto__, provocando la adici\u00f3n o modificaci\u00f3n de una propiedad existente que va a existir en todos los objetos."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}, {"source": "support@hackerone.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-471"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:defaults-deep_project:defaults-deep:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "0.2.4", "matchCriteriaId": "88973FEC-A73D-4F28-8513-2A52B84F3EF8"}]}]}], "references": [{"url": "https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5", "source": "support@hackerone.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/310514", "source": "support@hackerone.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5"}}