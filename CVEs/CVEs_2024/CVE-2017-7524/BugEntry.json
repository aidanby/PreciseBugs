{"buggy_code": ["#;**********************************************************************;\n#\n# Copyright (c) 2015, Intel Corporation\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice,\n# this list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation\n# and/or other materials provided with the distribution.\n#\n# 3. Neither the name of Intel Corporation nor the names of its contributors\n# may be used to endorse or promote products derived from this software without\n# specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n# THE POSSIBILITY OF SUCH DAMAGE.\n#;**********************************************************************;\n\nACLOCAL_AMFLAGS = -I m4\n\nINCLUDE_DIRS = -I$(srcdir)/src -I$(srcdir)/lib\nLIB_COMMON := lib/libcommon.a\n\nAM_CFLAGS    := $(INCLUDE_DIRS) $(TPM20_TSS_CFLAGS) $(EXTRA_CFLAGS) $(TCTI_TABRMD_CFLAGS)\nAM_LDFLAGS   := $(EXTRA_LDFLAGS)\n\nLDADD = $(LIB_COMMON) $(TPM20_TSS_LIBS) $(TCTI_SOCK_LIBS) $(TCTI_DEV_LIBS) $(TCTI_TABRMD_LIBS)\n\nsbin_PROGRAMS = \\\n    tools/tpm2_create \\\n    tools/tpm2_createprimary \\\n    tools/tpm2_load \\\n    tools/tpm2_send_command \\\n    tools/tpm2_dump_capability \\\n    tools/tpm2_listpcrs \\\n    tools/tpm2_listpersistent \\\n    tools/tpm2_startup \\\n    tools/tpm2_rc_decode \\\n    tools/tpm2_verifysignature \\\n    tools/tpm2_getmanufec \\\n    tools/tpm2_quote \\\n    tools/tpm2_takeownership \\\n    tools/tpm2_getpubek \\\n    tools/tpm2_getpubak \\\n    tools/tpm2_akparse \\\n    tools/tpm2_hash \\\n    tools/tpm2_activatecredential \\\n    tools/tpm2_makecredential \\\n    tools/tpm2_nvlist \\\n    tools/tpm2_nvread \\\n    tools/tpm2_nvreadlock \\\n    tools/tpm2_nvwrite \\\n    tools/tpm2_nvdefine \\\n    tools/tpm2_nvrelease \\\n    tools/tpm2_hmac \\\n    tools/tpm2_certify \\\n    tools/tpm2_readpublic \\\n    tools/tpm2_getrandom \\\n    tools/tpm2_encryptdecrypt \\\n    tools/tpm2_evictcontrol \\\n    tools/tpm2_loadexternal \\\n    tools/tpm2_rsadecrypt \\\n    tools/tpm2_rsaencrypt \\\n    tools/tpm2_sign \\\n    tools/tpm2_unseal \\\n    tools/tpm2_dictionarylockout \\\n    tools/tpm2_createpolicy\n\nnoinst_LIBRARIES = $(LIB_COMMON)\nlib_libcommon_a_SOURCES = \\\n    lib/context-util.c \\\n    lib/files.c \\\n    lib/log.c \\\n    lib/options.c \\\n    lib/password_util.c \\\n    lib/pcr.c \\\n    lib/rc-decode.c \\\n    lib/string-bytes.c \\\n    lib/tpm2-header.c \\\n    lib/tpm_hash.c \\\n    lib/tpm_hmac.c \\\n    lib/tpm_kdfa.c \\\n    lib/tpm_session.c\n\ntools_tpm2_create_SOURCES = tools/tpm2_create.c tools/main.c\ntools_tpm2_createprimary_SOURCES = tools/tpm2_createprimary.c tools/main.c\ntools_tpm2_dump_capability_SOURCES = tools/tpm2_dump_capability.c tools/main.c\ntools_tpm2_listpcrs_SOURCES = tools/tpm2_listpcrs.c tools/main.c\ntools_tpm2_listpersistent_SOURCES = tools/tpm2_listpersistent.c tools/main.c\ntools_tpm2_load_SOURCES = tools/tpm2_load.c tools/main.c\ntools_tpm2_send_command_SOURCES = tools/tpm2_send_command.c tools/main.c\ntools_tpm2_startup_SOURCES = tools/tpm2_startup.c tools/main.c\ntools_tpm2_verifysignature_SOURCES = tools/tpm2_verifysignature.c tools/main.c\ntools_tpm2_getmanufec_CFLAG = $(AM_CFLAGS) $(CURL_CFLAGS)\ntools_tpm2_getmanufec_LDADD = $(LDADD) $(CURL_LIBS)\ntools_tpm2_getmanufec_SOURCES = tools/tpm2_getmanufec.c tools/main.c\ntools_tpm2_quote_SOURCES = tools/tpm2_quote.c tools/main.c\ntools_tpm2_takeownership_SOURCES = tools/tpm2_takeownership.c tools/main.c\ntools_tpm2_getpubek_SOURCES = tools/tpm2_getpubek.c tools/main.c\ntools_tpm2_getpubak_SOURCES = tools/tpm2_getpubak.c tools/main.c\ntools_tpm2_akparse_SOURCES = tools/tpm2_akparse.c tools/main.c\ntools_tpm2_hash_SOURCES = tools/tpm2_hash.c tools/main.c\ntools_tpm2_activatecredential_SOURCES = tools/tpm2_activatecredential.c tools/main.c\ntools_tpm2_makecredential_SOURCES = tools/tpm2_makecredential.c tools/main.c\ntools_tpm2_nvlist_SOURCES = tools/tpm2_nvlist.c tools/main.c\ntools_tpm2_nvread_SOURCES = tools/tpm2_nvread.c tools/main.c\ntools_tpm2_nvreadlock_SOURCES = tools/tpm2_nvreadlock.c tools/main.c\ntools_tpm2_nvwrite_SOURCES = tools/tpm2_nvwrite.c tools/main.c\ntools_tpm2_nvdefine_SOURCES = tools/tpm2_nvdefine.c tools/main.c\ntools_tpm2_nvrelease_SOURCES = tools/tpm2_nvrelease.c tools/main.c\ntools_tpm2_hmac_SOURCES = tools/tpm2_hmac.c tools/main.c\ntools_tpm2_certify_SOURCES = tools/tpm2_certify.c tools/main.c\ntools_tpm2_readpublic_SOURCES = tools/tpm2_readpublic.c tools/main.c\ntools_tpm2_getrandom_SOURCES = tools/tpm2_getrandom.c tools/main.c\ntools_tpm2_encryptdecrypt_SOURCES = tools/tpm2_encryptdecrypt.c tools/main.c\ntools_tpm2_evictcontrol_SOURCES = tools/tpm2_evictcontrol.c tools/main.c\ntools_tpm2_loadexternal_SOURCES = tools/tpm2_loadexternal.c tools/main.c\ntools_tpm2_rsadecrypt_SOURCES = tools/tpm2_rsadecrypt.c tools/main.c\ntools_tpm2_rsaencrypt_SOURCES = tools/tpm2_rsaencrypt.c tools/main.c\ntools_tpm2_sign_SOURCES = tools/tpm2_sign.c tools/main.c\ntools_tpm2_unseal_SOURCES = tools/tpm2_unseal.c tools/main.c\ntools_tpm2_dictionarylockout_SOURCES = tools/tpm2_dictionarylockout.c tools/main.c\ntools_tpm2_createpolicy_SOURCES = tools/tpm2_createpolicy.c tools/main.c\n\n# rc_decode does not use common main, since it does not need a dynamic TCTI.\ntools_tpm2_rc_decode_SOURCES = lib/rc-decode.c tools/tpm2_rc_decode.c\n\nif UNIT\nTESTS = $(check_PROGRAMS)\ncheck_PROGRAMS = \\\n    test/unit/tpm2-rc-decode_unit \\\n    test/unit/tpm2-rc-entry_unit \\\n    test/unit/test_string_bytes \\\n    test/unit/test_files\n\ntest_unit_tpm2_rc_decode_unit_CFLAGS  = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_tpm2_rc_decode_unit_LDADD   = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_tpm2_rc_decode_unit_SOURCES = test/unit/tpm2-rc-decode_unit.c\n\ntest_unit_tpm2_rc_entry_unit_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_tpm2_rc_entry_unit_LDADD    = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_tpm2_rc_entry_unit_SOURCES  = test/unit/tpm2-rc-entry_unit.c\n\ntest_unit_test_string_bytes_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_test_string_bytes_LDADD    = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_test_string_bytes_SOURCES  = test/unit/test_string_bytes.c\n\ntest_unit_test_files_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_test_files_LDADD    = $(LIB_COMMON) $(CMOCKA_LIBS) $(TPM20_TSS_LIBS) \\\n\t$(TCTI_SOCK_LIBS) $(TCTI_DEV_LIBS)\ntest_unit_test_files_SOURCES  = test/unit/test_files.c\n\nendif\n\nman8_MANS = \\\n    man/man8/tpm2_createprimary.8 \\\n    man/man8/tpm2_dump_capability.8 \\\n    man/man8/tpm2_send_command.8 \\\n    man/man8/tpm2_startup.8 \\\n    man/man8/tpm2_listpcrs.8 \\\n    man/man8/tpm2_quote.8 \\\n    man/man8/tpm2_takeownership.8 \\\n    man/man8/tpm2_getpubek.8 \\\n    man/man8/tpm2_getpubak.8 \\\n    man/man8/tpm2_getmanufec.8 \\\n    man/man8/tpm2_akparse.8 \\\n    man/man8/tpm2_makecredential.8 \\\n    man/man8/tpm2_activatecredential.8 \\\n    man/man8/tpm2_hash.8 \\\n    man/man8/tpm2_nvlist.8 \\\n    man/man8/tpm2_nvread.8 \\\n    man/man8/tpm2_nvreadlock.8 \\\n    man/man8/tpm2_nvwrite.8 \\\n    man/man8/tpm2_nvdefine.8 \\\n    man/man8/tpm2_nvrelease.8 \\\n    man/man8/tpm2_create.8 \\\n    man/man8/tpm2_hmac.8 \\\n    man/man8/tpm2_certify.8 \\\n    man/man8/tpm2_readpublic.8 \\\n    man/man8/tpm2_getrandom.8 \\\n    man/man8/tpm2_encryptdecrypt.8 \\\n    man/man8/tpm2_evictcontrol.8 \\\n    man/man8/tpm2_load.8 \\\n    man/man8/tpm2_loadexternal.8 \\\n    man/man8/tpm2_rsadecrypt.8 \\\n    man/man8/tpm2_rsaencrypt.8 \\\n    man/man8/tpm2_sign.8 \\\n    man/man8/tpm2_unseal.8 \\\n    man/man8/tpm2_verifysignature.8 \\\n    man/man8/tpm2_listpersistent.8 \\\n    man/man8/tpm2_rc_decode.8 \\\n    man/man8/tpm2_dictionarylockout.8 \\\n    man/man8/tpm2_createpolicy.8\n\nman/man8/%.8 : man/%.8.in man/tcti-options.troff man/tcti-environment.troff\n\trm -f $@\n\tmkdir -p man/man8\nif HAVE_TCTI_DEV\n\techo \".nr HAVE_TCTI_DEV 1\" >> $@\nendif\nif HAVE_TCTI_SOCK\n\techo \".nr HAVE_TCTI_SOCK 1\" >> $@\nendif\n\tsed -e '/@COMMON_OPTIONS_INCLUDE@/r man/common-options.troff' \\\n\t    -e '/@COMMON_OPTIONS_INCLUDE@/d' \\\n\t    -e '/@TCTI_OPTIONS_INCLUDE@/r man/tcti-options.troff' \\\n\t    -e '/@TCTI_OPTIONS_INCLUDE@/d' \\\n\t    -e '/@TCTI_ENVIRONMENT_INCLUDE@/r man/tcti-environment.troff' \\\n\t    -e '/@TCTI_ENVIRONMENT_INCLUDE@/d' \\\n\t    < $< >> $@\n\nCLEANFILES = $(man8_MANS)\n", "AC_INIT([tpm2.0-tools],\n    [m4_esyscmd_s([git describe --tags --always --dirty])])\nAC_CONFIG_MACRO_DIR([m4])\nAC_PROG_CC\nLT_INIT\nAM_INIT_AUTOMAKE([foreign\n                  subdir-objects])\nAC_CONFIG_FILES([Makefile])\nPKG_CHECK_MODULES([SAPI],[sapi])\n# disable libtcti-device selectively (enabled by default)\nAC_ARG_WITH(\n    [tcti-device],\n    [AS_HELP_STRING([--with-tcti-device],\n        [Build tools with support for the device TCTI.])],\n    [],\n    [with_tcti_device=check])\nAS_IF(\n    [test \"x$with_tcti_device\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_DEV],\n        [tcti-device],\n        [AC_DEFINE([HAVE_TCTI_DEV],[1])\n         with_tcti_device=yes],\n        [if test \"x$with_tcti_device\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-device option provided but libtcti-device not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_DEV],[test \"x$with_tcti_device\" = \"xyes\"])\n# disable libtcti-socket selectively (enabled by default)\nAC_ARG_WITH(\n    [tcti-socket],\n    [AS_HELP_STRING([--with-tcti-socket],\n        [Build tools with support for the socket TCTI.])],\n    [],\n    [with_tcti_socket=check])\nAS_IF(\n    [test \"x$with_tcti_socket\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_SOCK],\n        [tcti-socket],\n        [AC_DEFINE([HAVE_TCTI_SOCK],[1])\n         with_tcti_socket=yes],\n        [if test \"x$with_tcti_socket\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-socket option provided but libtcti-socket not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_SOCK],[test \"x$with_tcti_socket\" = \"xyes\"])\n# selectively disable libtcti-tabrmd\nAC_ARG_WITH(\n    [tcti-tabrmd],\n    [AS_HELP_STRING([--with-tcti-tabrmd],\n        [Build tools with support for the tabrmd TCTI.])],\n    [],\n    [with_tcti_tabrmd=check])\nAS_IF(\n    [test \"x$with_tcti_tabrmd\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_TABRMD],\n        [tcti-tabrmd],\n        [AC_DEFINE([HAVE_TCTI_TABRMD], [1])\n         with_tcti_tabrmd=yes],\n        [if test \"x$with_tcti_tabrmd\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-tabrmd option provided but libtcti-tabrmd not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_TABRMD],[test \"x$with_tcti_tabrmd\" = \"xyes\"])\n# ensure we have at least one TCTI enabled, can't do much without one\nAS_IF(\n    [test \"x$with_tcti_device\" != \"xyes\" -a \\\n          \"x$with_tcti_socket\" != \"xyes\" -a \\\n          \"x$with_tcti_tabrmd\" != \"xyes\"],\n    [AC_MSG_ERROR(\n        [no TCTIs: at least one TCTI library must be enabled],\n        [1])])\nPKG_CHECK_MODULES([CURL],[libcurl libcrypto])\nAC_ARG_ENABLE([unit],\n            [AS_HELP_STRING([--enable-unit],\n                            [build cmocka unit tests (default is no)])],\n            [enable_unit=$enableval],\n            [enable_unit=no])\nAS_IF([test \"x$enable_unit\" != xno],\n      [PKG_CHECK_MODULES([CMOCKA],\n                         [cmocka],\n                         [AC_DEFINE([HAVE_CMOCKA],\n                                    [1])])])\nAM_CONDITIONAL([UNIT], [test \"x$enable_unit\" != xno])\n\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--enable-hardening],\n    [Enable compiler and linker options to frustrate memory corruption exploits @<:@yes@:>@])],\n  [hardening=\"$enableval\"],\n  [hardening=\"yes\"])\n\n# Good information on adding flags, and dealing with compilers can be found here:\n#   https://github.com/zcash/zcash/issues/1832\n#   https://github.com/kmcallister/autoharden/\nAS_IF([test x\"$hardening\" != x\"no\"], [\n\n  AC_DEFUN([add_hardened_c_flag], [\n    AX_CHECK_COMPILE_FLAG([$1],\n      [EXTRA_CFLAGS=\"$EXTRA_CFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  AC_DEFUN([add_hardened_ld_flag], [\n    AX_CHECK_LINK_FLAG([$1],\n      [EXTRA_LDFLAGS=\"$EXTRA_LDFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  AC_DEFUN([add_hardened_define_flag], [\n    AX_CHECK_PREPROC_FLAG([$1],\n      [EXTRA_CFLAGS=\"$EXTRA_CFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  add_hardened_c_flag([-Wall])\n  add_hardened_c_flag([-Wextra])\n  add_hardened_c_flag([-Werror])\n\n  add_hardened_c_flag([-Wformat])\n  add_hardened_c_flag([-Wformat-security])\n  add_hardened_c_flag([-Wstack-protector])\n  add_hardened_c_flag([-fstack-protector-all])\n\n  add_hardened_define_flag([-U_FORTIFY_SOURCE])\n  add_hardened_define_flag([-D_FORTIFY_SOURCE=2])\n\n  add_hardened_c_flag([-fPIC])\n  add_hardened_ld_flag([[-shared]])\n\n  add_hardened_c_flag([-fPIE])\n  add_hardened_ld_flag([[-pie]])\n\n  add_hardened_ld_flag([[-Wl,-z,relro]])\n  add_hardened_ld_flag([[-Wl,-z,now]])\n\n], [\n  AC_MSG_WARN([Compiling with --disable-hardening is dangerous!\nyou should consider fixing the configure script compiler flags\nand submitting patches upstream!])\n])\n\n# -D_GNU_SOURCE is required for execvpe() in options.c\nAX_CHECK_PREPROC_FLAG([-D_GNU_SOURCE],\n  [EXTRA_CFLAGS=\"$EXTRA_CFLAGS -D_GNU_SOURCE\"],\n  [AC_MSG_ERROR([Cannot enable -D_GNU_SOURCE])]\n)\n\n# Best attempt, strip unused stuff from the binary to reduce size.\n# Rather than nesting these and making them ugly just use a counter.\nAX_CHECK_COMPILE_FLAG([-fdata-sections], [strip+=\"y\"])\nAX_CHECK_COMPILE_FLAG([-ffunction-sections], [strip+=\"y\"])\nAX_CHECK_LINK_FLAG([[-Wl,--gc-sections]], [strip+=\"y\"])\n\nAS_IF([test x\"$strip\" == x\"yyy\"], [\n  EXTRA_CFLAGS=\"$EXTRA_CFLAGS -fdata-sections -ffunction-sections\"\n  EXTRA_LDFLAGS=\"$EXTRA_LDFLAGS -Wl,--gc-sections\"\n],\n  AC_MSG_NOTICE([Not using compiler options to reduce binary size!])\n)\n\nAC_SUBST([EXTRA_CFLAGS])\nAC_SUBST([EXTRA_LDFLAGS])\n\nAC_OUTPUT\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#include <sapi/tpm20.h>\n\n#include \"string-bytes.h\"\n#include \"tpm_hmac.h\"\n\nTPM_RC tpm_kdfa(TSS2_SYS_CONTEXT *sapi_context, TPMI_ALG_HASH hashAlg,\n        TPM2B *key, char *label, TPM2B *contextU, TPM2B *contextV, UINT16 bits,\n        TPM2B_MAX_BUFFER  *resultKey )\n{\n    TPM2B_DIGEST tmpResult;\n    TPM2B_DIGEST tpm2bLabel, tpm2bBits, tpm2b_i_2;\n    UINT8 *tpm2bBitsPtr = &tpm2bBits.t.buffer[0];\n    UINT8 *tpm2b_i_2Ptr = &tpm2b_i_2.t.buffer[0];\n    TPM2B_DIGEST *bufferList[8];\n    UINT32 bitsSwizzled, i_Swizzled;\n    TPM_RC rval;\n    int i, j;\n    UINT16 bytes = bits / 8;\n\n    resultKey->t .size = 0;\n\n    tpm2b_i_2.t.size = 4;\n\n    tpm2bBits.t.size = 4;\n    bitsSwizzled = string_bytes_endian_convert_32( bits );\n    *(UINT32 *)tpm2bBitsPtr = bitsSwizzled;\n\n    for(i = 0; label[i] != 0 ;i++ );\n\n    tpm2bLabel.t.size = i+1;\n    for( i = 0; i < tpm2bLabel.t.size; i++ )\n    {\n        tpm2bLabel.t.buffer[i] = label[i];\n    }\n\n    resultKey->t.size = 0;\n\n    i = 1;\n\n    while( resultKey->t.size < bytes )\n    {\n        // Inner loop\n\n        i_Swizzled = string_bytes_endian_convert_32( i );\n        *(UINT32 *)tpm2b_i_2Ptr = i_Swizzled;\n\n        j = 0;\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2b_i_2.b);\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2bLabel.b);\n        bufferList[j++] = (TPM2B_DIGEST *)contextU;\n        bufferList[j++] = (TPM2B_DIGEST *)contextV;\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2bBits.b);\n        bufferList[j++] = (TPM2B_DIGEST *)0;\n        rval = tpm_hmac(sapi_context, hashAlg, key, (TPM2B **)&( bufferList[0] ), &tmpResult );\n        if( rval != TPM_RC_SUCCESS )\n        {\n            return( rval );\n        }\n\n        bool res = string_bytes_concat_buffer(resultKey, &(tmpResult.b));\n        if (!res) {\n            return TSS2_SYS_RC_BAD_VALUE;\n        }\n    }\n\n    // Truncate the result to the desired size.\n    resultKey->t.size = bytes;\n\n    return TPM_RC_SUCCESS;\n}\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#ifndef SRC_TPM_KDFA_H_\n#define SRC_TPM_KDFA_H_\n\n#include <sapi/tpm20.h>\n\n/* TODO DOCUMENT ME */\n/**\n *\n * @param hashAlg\n * @param key\n * @param label\n * @param contextU\n * @param contextV\n * @param bits\n * @param resultKey\n * @return\n */\nTPM_RC tpm_kdfa(TSS2_SYS_CONTEXT *sapi_context, TPMI_ALG_HASH hashAlg,\n        TPM2B *key, char *label, TPM2B *contextU, TPM2B *contextV,\n        UINT16 bits, TPM2B_MAX_BUFFER *resultKey );\n\n#endif /* SRC_TPM_KDFA_H_ */\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#include <stdbool.h>\n#include <stdlib.h>\n\n#include <sapi/tpm20.h>\n\n#include \"string-bytes.h\"\n#include \"tpm_kdfa.h\"\n#include \"tpm_session.h\"\n\n/* for APP_RC_CREATE_SESSION_KEY_FAILED error code */\n\n#define SESSIONS_ARRAY_COUNT MAX_NUM_SESSIONS+1\n\ntypedef struct {\n    SESSION session;\n    void *nextEntry;\n} SESSION_LIST_ENTRY;\n\nstatic SESSION_LIST_ENTRY *local_sessions_list = 0;\nstatic INT16 local_session_entries_used = 0;\n\n/*\n * GetDigestSize() was taken from the TSS code base\n * and moved here since it was not part of the public\n * exxported API at the time.\n */\ntypedef struct {\n    TPM_ALG_ID  algId;\n    UINT16      size;  // Size of digest\n} HASH_SIZE_INFO;\n\nHASH_SIZE_INFO   hashSizes[] = {\n    {TPM_ALG_SHA1,          SHA1_DIGEST_SIZE},\n    {TPM_ALG_SHA256,        SHA256_DIGEST_SIZE},\n#ifdef TPM_ALG_SHA384\n    {TPM_ALG_SHA384,        SHA384_DIGEST_SIZE},\n#endif\n#ifdef TPM_ALG_SHA512\n    {TPM_ALG_SHA512,        SHA512_DIGEST_SIZE},\n#endif\n    {TPM_ALG_SM3_256,       SM3_256_DIGEST_SIZE},\n    {TPM_ALG_NULL,0}\n};\n\nstatic UINT16 GetDigestSize( TPM_ALG_ID authHash )\n{\n    UINT32 i;\n    for(i = 0; i < (sizeof(hashSizes)/sizeof(HASH_SIZE_INFO)); i++ )\n    {\n        if( hashSizes[i].algId == authHash )\n            return hashSizes[i].size;\n    }\n\n    // If not found, return 0 size, and let TPM handle the error.\n    return( 0 );\n}\n\nstatic TPM_RC AddSession( SESSION_LIST_ENTRY **sessionEntry )\n{\n    SESSION_LIST_ENTRY **newEntry;\n\n    // find end of list.\n    for( newEntry = &local_sessions_list; *newEntry != 0; *newEntry = ( (SESSION_LIST_ENTRY *)*newEntry)->nextEntry )\n        ;\n\n    // allocate space for session structure.\n    *newEntry = malloc( sizeof( SESSION_LIST_ENTRY ) );\n    if( *newEntry != 0 )\n    {\n        *sessionEntry = *newEntry;\n        (*sessionEntry)->nextEntry = 0;\n        local_session_entries_used++;\n        return TPM_RC_SUCCESS;\n    }\n    else\n    {\n        return TSS2_APP_RC_SESSION_SLOT_NOT_FOUND;\n    }\n}\n\n\nstatic void DeleteSession( SESSION *session )\n{\n    SESSION_LIST_ENTRY *predSession;\n    void *newNextEntry;\n\n    if( session == &local_sessions_list->session )\n        local_sessions_list = 0;\n    else\n    {\n        // Find predecessor.\n        for( predSession = local_sessions_list;\n                predSession != 0 && &( ( ( SESSION_LIST_ENTRY *)predSession->nextEntry )->session ) != session;\n                predSession = predSession->nextEntry )\n            ;\n\n        if( predSession != 0 )\n        {\n            local_session_entries_used--;\n\n            newNextEntry = &( (SESSION_LIST_ENTRY *)predSession->nextEntry)->nextEntry;\n\n            free( predSession->nextEntry );\n\n            predSession->nextEntry = newNextEntry;\n        }\n    }\n}\n\n//\n// This is a wrapper function around the TPM2_StartAuthSession command.\n// It performs the command, calculates the session key, and updates a\n// SESSION structure.\n//\nstatic TPM_RC StartAuthSession(TSS2_SYS_CONTEXT *sapi_context, SESSION *session )\n{\n    TPM_RC rval;\n    TPM2B_ENCRYPTED_SECRET key;\n    char label[] = \"ATH\";\n    UINT16 bytes;\n    int i;\n\n    key.t.size = 0;\n\n    if( session->nonceOlder.t.size == 0 )\n    {\n        /* this is an internal routine to TSS and should be removed */\n        session->nonceOlder.t.size = GetDigestSize( TPM_ALG_SHA1 );\n        for( i = 0; i < session->nonceOlder.t.size; i++ )\n            session->nonceOlder.t.buffer[i] = 0;\n    }\n\n    session->nonceNewer.t.size = session->nonceOlder.t.size;\n    rval = Tss2_Sys_StartAuthSession( sapi_context, session->tpmKey, session->bind, 0,\n            &( session->nonceOlder ), &( session->encryptedSalt ), session->sessionType,\n            &( session->symmetric ), session->authHash, &( session->sessionHandle ),\n            &( session->nonceNewer ), 0 );\n\n    if( rval == TPM_RC_SUCCESS )\n    {\n        if( session->tpmKey == TPM_RH_NULL )\n            session->salt.t.size = 0;\n        if( session->bind == TPM_RH_NULL )\n            session->authValueBind.t.size = 0;\n\n        if( session->tpmKey == TPM_RH_NULL && session->bind == TPM_RH_NULL )\n        {\n            session->sessionKey.b.size = 0;\n        }\n        else\n        {\n            // Generate the key used as input to the KDF.\n            // Generate the key used as input to the KDF.\n            bool result = string_bytes_concat_buffer( (TPM2B_MAX_BUFFER *)&key, &( session->authValueBind.b ) );\n            if (!result)\n            {\n               return TSS2_SYS_RC_BAD_VALUE;\n            }\n\n            result = string_bytes_concat_buffer( (TPM2B_MAX_BUFFER *)&key, &( session->salt.b ) );\n            if (!result)\n            {\n                return TSS2_SYS_RC_BAD_VALUE;\n            }\n\n            bytes = GetDigestSize( session->authHash );\n\n            if( key.t.size == 0 )\n            {\n                session->sessionKey.t.size = 0;\n            }\n            else\n            {\n                rval = tpm_kdfa(sapi_context, session->authHash, &(key.b), label, &( session->nonceNewer.b ),\n                        &( session->nonceOlder.b ), bytes * 8, (TPM2B_MAX_BUFFER *)&( session->sessionKey ) );\n            }\n\n            if( rval != TPM_RC_SUCCESS )\n            {\n                return( TSS2_APP_RC_CREATE_SESSION_KEY_FAILED );\n            }\n        }\n\n        session->nonceTpmDecrypt.b.size = 0;\n        session->nonceTpmEncrypt.b.size = 0;\n        session->nvNameChanged = 0;\n    }\n\n    return rval;\n}\n\nTPM_RC tpm_session_auth_end( SESSION *session )\n{\n    TPM_RC rval = TPM_RC_SUCCESS;\n\n    DeleteSession( session );\n\n    return rval;\n}\n\n//\n// This version of StartAuthSession initializes the fields\n// of the session structure using the passed in\n// parameters, then calls StartAuthSession\n// with just a pointer to the session structure.\n// This allows all params to be set in one line of code when\n// the function is called; cleaner this way, for\n// some uses.\n//\nTPM_RC tpm_session_start_auth_with_params(TSS2_SYS_CONTEXT *sapi_context, SESSION **session,\n    TPMI_DH_OBJECT tpmKey, TPM2B_MAX_BUFFER *salt,\n    TPMI_DH_ENTITY bind, TPM2B_AUTH *bindAuth, TPM2B_NONCE *nonceCaller,\n    TPM2B_ENCRYPTED_SECRET *encryptedSalt,\n    TPM_SE sessionType, TPMT_SYM_DEF *symmetric, TPMI_ALG_HASH algId )\n{\n    TPM_RC rval;\n    SESSION_LIST_ENTRY *sessionEntry;\n\n    rval = AddSession( &sessionEntry );\n    if( rval == TSS2_RC_SUCCESS )\n    {\n        *session = &sessionEntry->session;\n\n        // Copy handles to session struct.\n        (*session)->bind = bind;\n        (*session)->tpmKey = tpmKey;\n\n        // Copy nonceCaller to nonceOlder in session struct.\n        // This will be used as nonceCaller when StartAuthSession\n        // is called.\n        memcpy( &(*session)->nonceOlder.b, &nonceCaller->b, sizeof(nonceCaller->b));\n\n        // Copy encryptedSalt\n        memcpy( &(*session)->encryptedSalt.b, &encryptedSalt->b, sizeof(encryptedSalt->b));\n\n        // Copy sessionType.\n        (*session)->sessionType = sessionType;\n\n        // Init symmetric.\n        (*session)->symmetric.algorithm = symmetric->algorithm;\n        (*session)->symmetric.keyBits.sym = symmetric->keyBits.sym;\n        (*session)->symmetric.mode.sym = symmetric->mode.sym;\n        (*session)->authHash = algId;\n\n        // Copy bind' authValue.\n        if( bindAuth == 0 )\n        {\n            (*session)->authValueBind.b.size = 0;\n        }\n        else\n        {\n            memcpy( &( (*session)->authValueBind.b ), &( bindAuth->b ), sizeof(bindAuth->b));\n        }\n\n        // Calculate sessionKey\n        if( (*session)->tpmKey == TPM_RH_NULL )\n        {\n            (*session)->salt.t.size = 0;\n        }\n        else\n        {\n            memcpy( &(*session)->salt.b, &salt->b, sizeof(salt->b));\n        }\n\n        if( (*session)->bind == TPM_RH_NULL )\n            (*session)->authValueBind.t.size = 0;\n\n\n        rval = StartAuthSession(sapi_context, *session );\n    }\n    else\n    {\n        DeleteSession( *session );\n    }\n    return( rval );\n}\n"], "fixing_code": ["#;**********************************************************************;\n#\n# Copyright (c) 2015, Intel Corporation\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice,\n# this list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation\n# and/or other materials provided with the distribution.\n#\n# 3. Neither the name of Intel Corporation nor the names of its contributors\n# may be used to endorse or promote products derived from this software without\n# specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n# THE POSSIBILITY OF SUCH DAMAGE.\n#;**********************************************************************;\n\nACLOCAL_AMFLAGS = -I m4\n\nINCLUDE_DIRS = -I$(srcdir)/src -I$(srcdir)/lib\nLIB_COMMON := lib/libcommon.a\n\nAM_CFLAGS    := $(INCLUDE_DIRS) $(TPM20_TSS_CFLAGS) $(EXTRA_CFLAGS) $(TCTI_TABRMD_CFLAGS) $(CRYPTO_CFLAGS)\nAM_LDFLAGS   := $(EXTRA_LDFLAGS)\n\nLDADD = $(LIB_COMMON) $(TPM20_TSS_LIBS) $(TCTI_SOCK_LIBS) $(TCTI_DEV_LIBS) $(TCTI_TABRMD_LIBS) $(CRYPTO_LIBS)\n\nsbin_PROGRAMS = \\\n    tools/tpm2_create \\\n    tools/tpm2_createprimary \\\n    tools/tpm2_load \\\n    tools/tpm2_send_command \\\n    tools/tpm2_dump_capability \\\n    tools/tpm2_listpcrs \\\n    tools/tpm2_listpersistent \\\n    tools/tpm2_startup \\\n    tools/tpm2_rc_decode \\\n    tools/tpm2_verifysignature \\\n    tools/tpm2_getmanufec \\\n    tools/tpm2_quote \\\n    tools/tpm2_takeownership \\\n    tools/tpm2_getpubek \\\n    tools/tpm2_getpubak \\\n    tools/tpm2_akparse \\\n    tools/tpm2_hash \\\n    tools/tpm2_activatecredential \\\n    tools/tpm2_makecredential \\\n    tools/tpm2_nvlist \\\n    tools/tpm2_nvread \\\n    tools/tpm2_nvreadlock \\\n    tools/tpm2_nvwrite \\\n    tools/tpm2_nvdefine \\\n    tools/tpm2_nvrelease \\\n    tools/tpm2_hmac \\\n    tools/tpm2_certify \\\n    tools/tpm2_readpublic \\\n    tools/tpm2_getrandom \\\n    tools/tpm2_encryptdecrypt \\\n    tools/tpm2_evictcontrol \\\n    tools/tpm2_loadexternal \\\n    tools/tpm2_rsadecrypt \\\n    tools/tpm2_rsaencrypt \\\n    tools/tpm2_sign \\\n    tools/tpm2_unseal \\\n    tools/tpm2_dictionarylockout \\\n    tools/tpm2_createpolicy\n\nnoinst_LIBRARIES = $(LIB_COMMON)\nlib_libcommon_a_SOURCES = \\\n    lib/context-util.c \\\n    lib/files.c \\\n    lib/log.c \\\n    lib/options.c \\\n    lib/password_util.c \\\n    lib/pcr.c \\\n    lib/rc-decode.c \\\n    lib/string-bytes.c \\\n    lib/tpm2-header.c \\\n    lib/tpm_hash.c \\\n    lib/tpm_hmac.c \\\n    lib/tpm_kdfa.c \\\n    lib/tpm_session.c\n\ntools_tpm2_create_SOURCES = tools/tpm2_create.c tools/main.c\ntools_tpm2_createprimary_SOURCES = tools/tpm2_createprimary.c tools/main.c\ntools_tpm2_dump_capability_SOURCES = tools/tpm2_dump_capability.c tools/main.c\ntools_tpm2_listpcrs_SOURCES = tools/tpm2_listpcrs.c tools/main.c\ntools_tpm2_listpersistent_SOURCES = tools/tpm2_listpersistent.c tools/main.c\ntools_tpm2_load_SOURCES = tools/tpm2_load.c tools/main.c\ntools_tpm2_send_command_SOURCES = tools/tpm2_send_command.c tools/main.c\ntools_tpm2_startup_SOURCES = tools/tpm2_startup.c tools/main.c\ntools_tpm2_verifysignature_SOURCES = tools/tpm2_verifysignature.c tools/main.c\ntools_tpm2_getmanufec_CFLAG = $(AM_CFLAGS) $(CURL_CFLAGS)\ntools_tpm2_getmanufec_LDADD = $(LDADD) $(CURL_LIBS)\ntools_tpm2_getmanufec_SOURCES = tools/tpm2_getmanufec.c tools/main.c\ntools_tpm2_quote_SOURCES = tools/tpm2_quote.c tools/main.c\ntools_tpm2_takeownership_SOURCES = tools/tpm2_takeownership.c tools/main.c\ntools_tpm2_getpubek_SOURCES = tools/tpm2_getpubek.c tools/main.c\ntools_tpm2_getpubak_SOURCES = tools/tpm2_getpubak.c tools/main.c\ntools_tpm2_akparse_SOURCES = tools/tpm2_akparse.c tools/main.c\ntools_tpm2_hash_SOURCES = tools/tpm2_hash.c tools/main.c\ntools_tpm2_activatecredential_SOURCES = tools/tpm2_activatecredential.c tools/main.c\ntools_tpm2_makecredential_SOURCES = tools/tpm2_makecredential.c tools/main.c\ntools_tpm2_nvlist_SOURCES = tools/tpm2_nvlist.c tools/main.c\ntools_tpm2_nvread_SOURCES = tools/tpm2_nvread.c tools/main.c\ntools_tpm2_nvreadlock_SOURCES = tools/tpm2_nvreadlock.c tools/main.c\ntools_tpm2_nvwrite_SOURCES = tools/tpm2_nvwrite.c tools/main.c\ntools_tpm2_nvdefine_SOURCES = tools/tpm2_nvdefine.c tools/main.c\ntools_tpm2_nvrelease_SOURCES = tools/tpm2_nvrelease.c tools/main.c\ntools_tpm2_hmac_SOURCES = tools/tpm2_hmac.c tools/main.c\ntools_tpm2_certify_SOURCES = tools/tpm2_certify.c tools/main.c\ntools_tpm2_readpublic_SOURCES = tools/tpm2_readpublic.c tools/main.c\ntools_tpm2_getrandom_SOURCES = tools/tpm2_getrandom.c tools/main.c\ntools_tpm2_encryptdecrypt_SOURCES = tools/tpm2_encryptdecrypt.c tools/main.c\ntools_tpm2_evictcontrol_SOURCES = tools/tpm2_evictcontrol.c tools/main.c\ntools_tpm2_loadexternal_SOURCES = tools/tpm2_loadexternal.c tools/main.c\ntools_tpm2_rsadecrypt_SOURCES = tools/tpm2_rsadecrypt.c tools/main.c\ntools_tpm2_rsaencrypt_SOURCES = tools/tpm2_rsaencrypt.c tools/main.c\ntools_tpm2_sign_SOURCES = tools/tpm2_sign.c tools/main.c\ntools_tpm2_unseal_SOURCES = tools/tpm2_unseal.c tools/main.c\ntools_tpm2_dictionarylockout_SOURCES = tools/tpm2_dictionarylockout.c tools/main.c\ntools_tpm2_createpolicy_SOURCES = tools/tpm2_createpolicy.c tools/main.c\n\n# rc_decode does not use common main, since it does not need a dynamic TCTI.\ntools_tpm2_rc_decode_SOURCES = lib/rc-decode.c tools/tpm2_rc_decode.c\n\nif UNIT\nTESTS = $(check_PROGRAMS)\ncheck_PROGRAMS = \\\n    test/unit/tpm2-rc-decode_unit \\\n    test/unit/tpm2-rc-entry_unit \\\n    test/unit/test_string_bytes \\\n    test/unit/test_files\n\ntest_unit_tpm2_rc_decode_unit_CFLAGS  = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_tpm2_rc_decode_unit_LDADD   = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_tpm2_rc_decode_unit_SOURCES = test/unit/tpm2-rc-decode_unit.c\n\ntest_unit_tpm2_rc_entry_unit_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_tpm2_rc_entry_unit_LDADD    = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_tpm2_rc_entry_unit_SOURCES  = test/unit/tpm2-rc-entry_unit.c\n\ntest_unit_test_string_bytes_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_test_string_bytes_LDADD    = $(CMOCKA_LIBS) $(LIB_COMMON)\ntest_unit_test_string_bytes_SOURCES  = test/unit/test_string_bytes.c\n\ntest_unit_test_files_CFLAGS   = $(AM_CFLAGS) $(CMOCKA_CFLAGS)\ntest_unit_test_files_LDADD    = $(LIB_COMMON) $(CMOCKA_LIBS) $(TPM20_TSS_LIBS) \\\n\t$(TCTI_SOCK_LIBS) $(TCTI_DEV_LIBS)\ntest_unit_test_files_SOURCES  = test/unit/test_files.c\n\nendif\n\nman8_MANS = \\\n    man/man8/tpm2_createprimary.8 \\\n    man/man8/tpm2_dump_capability.8 \\\n    man/man8/tpm2_send_command.8 \\\n    man/man8/tpm2_startup.8 \\\n    man/man8/tpm2_listpcrs.8 \\\n    man/man8/tpm2_quote.8 \\\n    man/man8/tpm2_takeownership.8 \\\n    man/man8/tpm2_getpubek.8 \\\n    man/man8/tpm2_getpubak.8 \\\n    man/man8/tpm2_getmanufec.8 \\\n    man/man8/tpm2_akparse.8 \\\n    man/man8/tpm2_makecredential.8 \\\n    man/man8/tpm2_activatecredential.8 \\\n    man/man8/tpm2_hash.8 \\\n    man/man8/tpm2_nvlist.8 \\\n    man/man8/tpm2_nvread.8 \\\n    man/man8/tpm2_nvreadlock.8 \\\n    man/man8/tpm2_nvwrite.8 \\\n    man/man8/tpm2_nvdefine.8 \\\n    man/man8/tpm2_nvrelease.8 \\\n    man/man8/tpm2_create.8 \\\n    man/man8/tpm2_hmac.8 \\\n    man/man8/tpm2_certify.8 \\\n    man/man8/tpm2_readpublic.8 \\\n    man/man8/tpm2_getrandom.8 \\\n    man/man8/tpm2_encryptdecrypt.8 \\\n    man/man8/tpm2_evictcontrol.8 \\\n    man/man8/tpm2_load.8 \\\n    man/man8/tpm2_loadexternal.8 \\\n    man/man8/tpm2_rsadecrypt.8 \\\n    man/man8/tpm2_rsaencrypt.8 \\\n    man/man8/tpm2_sign.8 \\\n    man/man8/tpm2_unseal.8 \\\n    man/man8/tpm2_verifysignature.8 \\\n    man/man8/tpm2_listpersistent.8 \\\n    man/man8/tpm2_rc_decode.8 \\\n    man/man8/tpm2_dictionarylockout.8 \\\n    man/man8/tpm2_createpolicy.8\n\nman/man8/%.8 : man/%.8.in man/tcti-options.troff man/tcti-environment.troff\n\trm -f $@\n\tmkdir -p man/man8\nif HAVE_TCTI_DEV\n\techo \".nr HAVE_TCTI_DEV 1\" >> $@\nendif\nif HAVE_TCTI_SOCK\n\techo \".nr HAVE_TCTI_SOCK 1\" >> $@\nendif\n\tsed -e '/@COMMON_OPTIONS_INCLUDE@/r man/common-options.troff' \\\n\t    -e '/@COMMON_OPTIONS_INCLUDE@/d' \\\n\t    -e '/@TCTI_OPTIONS_INCLUDE@/r man/tcti-options.troff' \\\n\t    -e '/@TCTI_OPTIONS_INCLUDE@/d' \\\n\t    -e '/@TCTI_ENVIRONMENT_INCLUDE@/r man/tcti-environment.troff' \\\n\t    -e '/@TCTI_ENVIRONMENT_INCLUDE@/d' \\\n\t    < $< >> $@\n\nCLEANFILES = $(man8_MANS)\n", "AC_INIT([tpm2.0-tools],\n    [m4_esyscmd_s([git describe --tags --always --dirty])])\nAC_CONFIG_MACRO_DIR([m4])\nAC_PROG_CC\nLT_INIT\nAM_INIT_AUTOMAKE([foreign\n                  subdir-objects])\nAC_CONFIG_FILES([Makefile])\nPKG_CHECK_MODULES([SAPI],[sapi])\n# disable libtcti-device selectively (enabled by default)\nAC_ARG_WITH(\n    [tcti-device],\n    [AS_HELP_STRING([--with-tcti-device],\n        [Build tools with support for the device TCTI.])],\n    [],\n    [with_tcti_device=check])\nAS_IF(\n    [test \"x$with_tcti_device\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_DEV],\n        [tcti-device],\n        [AC_DEFINE([HAVE_TCTI_DEV],[1])\n         with_tcti_device=yes],\n        [if test \"x$with_tcti_device\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-device option provided but libtcti-device not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_DEV],[test \"x$with_tcti_device\" = \"xyes\"])\n# disable libtcti-socket selectively (enabled by default)\nAC_ARG_WITH(\n    [tcti-socket],\n    [AS_HELP_STRING([--with-tcti-socket],\n        [Build tools with support for the socket TCTI.])],\n    [],\n    [with_tcti_socket=check])\nAS_IF(\n    [test \"x$with_tcti_socket\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_SOCK],\n        [tcti-socket],\n        [AC_DEFINE([HAVE_TCTI_SOCK],[1])\n         with_tcti_socket=yes],\n        [if test \"x$with_tcti_socket\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-socket option provided but libtcti-socket not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_SOCK],[test \"x$with_tcti_socket\" = \"xyes\"])\n# selectively disable libtcti-tabrmd\nAC_ARG_WITH(\n    [tcti-tabrmd],\n    [AS_HELP_STRING([--with-tcti-tabrmd],\n        [Build tools with support for the tabrmd TCTI.])],\n    [],\n    [with_tcti_tabrmd=check])\nAS_IF(\n    [test \"x$with_tcti_tabrmd\" != \"xno\"],\n    [PKG_CHECK_MODULES(\n        [TCTI_TABRMD],\n        [tcti-tabrmd],\n        [AC_DEFINE([HAVE_TCTI_TABRMD], [1])\n         with_tcti_tabrmd=yes],\n        [if test \"x$with_tcti_tabrmd\" = \"xyes\"; then\n             AC_MSG_FAILURE([--with-tcti-tabrmd option provided but libtcti-tabrmd not detected.])\n         fi])])\nAM_CONDITIONAL([HAVE_TCTI_TABRMD],[test \"x$with_tcti_tabrmd\" = \"xyes\"])\n# ensure we have at least one TCTI enabled, can't do much without one\nAS_IF(\n    [test \"x$with_tcti_device\" != \"xyes\" -a \\\n          \"x$with_tcti_socket\" != \"xyes\" -a \\\n          \"x$with_tcti_tabrmd\" != \"xyes\"],\n    [AC_MSG_ERROR(\n        [no TCTIs: at least one TCTI library must be enabled],\n        [1])])\nPKG_CHECK_MODULES([CRYPTO],[libcrypto])\nPKG_CHECK_MODULES([CURL],[libcurl])\nAC_ARG_ENABLE([unit],\n            [AS_HELP_STRING([--enable-unit],\n                            [build cmocka unit tests (default is no)])],\n            [enable_unit=$enableval],\n            [enable_unit=no])\nAS_IF([test \"x$enable_unit\" != xno],\n      [PKG_CHECK_MODULES([CMOCKA],\n                         [cmocka],\n                         [AC_DEFINE([HAVE_CMOCKA],\n                                    [1])])])\nAM_CONDITIONAL([UNIT], [test \"x$enable_unit\" != xno])\n\nAC_ARG_ENABLE([hardening],\n  [AS_HELP_STRING([--enable-hardening],\n    [Enable compiler and linker options to frustrate memory corruption exploits @<:@yes@:>@])],\n  [hardening=\"$enableval\"],\n  [hardening=\"yes\"])\n\n# Good information on adding flags, and dealing with compilers can be found here:\n#   https://github.com/zcash/zcash/issues/1832\n#   https://github.com/kmcallister/autoharden/\nAS_IF([test x\"$hardening\" != x\"no\"], [\n\n  AC_DEFUN([add_hardened_c_flag], [\n    AX_CHECK_COMPILE_FLAG([$1],\n      [EXTRA_CFLAGS=\"$EXTRA_CFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  AC_DEFUN([add_hardened_ld_flag], [\n    AX_CHECK_LINK_FLAG([$1],\n      [EXTRA_LDFLAGS=\"$EXTRA_LDFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  AC_DEFUN([add_hardened_define_flag], [\n    AX_CHECK_PREPROC_FLAG([$1],\n      [EXTRA_CFLAGS=\"$EXTRA_CFLAGS $1\"],\n      [AC_MSG_ERROR([Cannot enable $1, consider configuring with --disable-hardening])]\n    )\n  ])\n\n  add_hardened_c_flag([-Wall])\n  add_hardened_c_flag([-Wextra])\n  add_hardened_c_flag([-Werror])\n\n  add_hardened_c_flag([-Wformat])\n  add_hardened_c_flag([-Wformat-security])\n  add_hardened_c_flag([-Wstack-protector])\n  add_hardened_c_flag([-fstack-protector-all])\n\n  add_hardened_define_flag([-U_FORTIFY_SOURCE])\n  add_hardened_define_flag([-D_FORTIFY_SOURCE=2])\n\n  add_hardened_c_flag([-fPIC])\n  add_hardened_ld_flag([[-shared]])\n\n  add_hardened_c_flag([-fPIE])\n  add_hardened_ld_flag([[-pie]])\n\n  add_hardened_ld_flag([[-Wl,-z,relro]])\n  add_hardened_ld_flag([[-Wl,-z,now]])\n\n], [\n  AC_MSG_WARN([Compiling with --disable-hardening is dangerous!\nyou should consider fixing the configure script compiler flags\nand submitting patches upstream!])\n])\n\n# -D_GNU_SOURCE is required for execvpe() in options.c\nAX_CHECK_PREPROC_FLAG([-D_GNU_SOURCE],\n  [EXTRA_CFLAGS=\"$EXTRA_CFLAGS -D_GNU_SOURCE\"],\n  [AC_MSG_ERROR([Cannot enable -D_GNU_SOURCE])]\n)\n\n# Best attempt, strip unused stuff from the binary to reduce size.\n# Rather than nesting these and making them ugly just use a counter.\nAX_CHECK_COMPILE_FLAG([-fdata-sections], [strip+=\"y\"])\nAX_CHECK_COMPILE_FLAG([-ffunction-sections], [strip+=\"y\"])\nAX_CHECK_LINK_FLAG([[-Wl,--gc-sections]], [strip+=\"y\"])\n\nAS_IF([test x\"$strip\" == x\"yyy\"], [\n  EXTRA_CFLAGS=\"$EXTRA_CFLAGS -fdata-sections -ffunction-sections\"\n  EXTRA_LDFLAGS=\"$EXTRA_LDFLAGS -Wl,--gc-sections\"\n],\n  AC_MSG_NOTICE([Not using compiler options to reduce binary size!])\n)\n\nAC_SUBST([EXTRA_CFLAGS])\nAC_SUBST([EXTRA_LDFLAGS])\n\nAC_OUTPUT\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#include <sapi/tpm20.h>\n\n #include <openssl/err.h>\n#include <openssl/hmac.h>\n\n#include \"string-bytes.h\"\n#include \"tpm_hmac.h\"\n#include \"log.h\"\n\nstatic const EVP_MD *tpm_algorithm_to_openssl_digest(TPMI_ALG_HASH algorithm) {\n\n    switch(algorithm) {\n    case TPM_ALG_SHA1:\n        return EVP_sha1();\n    case ALG_SHA256_VALUE:\n        return EVP_sha256();\n    case TPM_ALG_SHA384:\n        return EVP_sha384();\n    case TPM_ALG_SHA512:\n        return EVP_sha512();\n    default:\n        return NULL;\n    }\n    /* no return, not possible */\n}\n\nTPM_RC tpm_kdfa(TPMI_ALG_HASH hashAlg,\n        TPM2B *key, char *label, TPM2B *contextU, TPM2B *contextV, UINT16 bits,\n        TPM2B_MAX_BUFFER  *resultKey )\n{\n    TPM2B_DIGEST tpm2bLabel, tpm2bBits, tpm2b_i_2;\n    UINT8 *tpm2bBitsPtr = &tpm2bBits.t.buffer[0];\n    UINT8 *tpm2b_i_2Ptr = &tpm2b_i_2.t.buffer[0];\n    TPM2B_DIGEST *bufferList[8];\n    UINT32 bitsSwizzled, i_Swizzled;\n    TPM_RC rval = TPM_RC_SUCCESS;\n    int i, j;\n    UINT16 bytes = bits / 8;\n\n    resultKey->t .size = 0;\n\n    tpm2b_i_2.t.size = 4;\n\n    tpm2bBits.t.size = 4;\n    bitsSwizzled = string_bytes_endian_convert_32( bits );\n    *(UINT32 *)tpm2bBitsPtr = bitsSwizzled;\n\n    for(i = 0; label[i] != 0 ;i++ );\n\n    tpm2bLabel.t.size = i+1;\n    for( i = 0; i < tpm2bLabel.t.size; i++ )\n    {\n        tpm2bLabel.t.buffer[i] = label[i];\n    }\n\n    resultKey->t.size = 0;\n\n    i = 1;\n\n    const EVP_MD *md = tpm_algorithm_to_openssl_digest(hashAlg);\n    if (!md) {\n        LOG_ERR(\"Algorithm not supported for hmac: %x\", hashAlg);\n        return TPM_RC_HASH;\n    }\n\n    HMAC_CTX ctx;\n    HMAC_CTX_init(&ctx);\n    int rc = HMAC_Init_ex(&ctx, key->buffer, key->size, md, NULL);\n    if (!rc) {\n        LOG_ERR(\"HMAC Init failed: %s\", ERR_error_string(rc, NULL));\n        return TPM_RC_MEMORY;\n    }\n\n    // TODO Why is this a loop? It appears to only execute once.\n    while( resultKey->t.size < bytes )\n    {\n        TPM2B_DIGEST tmpResult;\n        // Inner loop\n\n        i_Swizzled = string_bytes_endian_convert_32( i );\n        *(UINT32 *)tpm2b_i_2Ptr = i_Swizzled;\n\n        j = 0;\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2b_i_2.b);\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2bLabel.b);\n        bufferList[j++] = (TPM2B_DIGEST *)contextU;\n        bufferList[j++] = (TPM2B_DIGEST *)contextV;\n        bufferList[j++] = (TPM2B_DIGEST *)&(tpm2bBits.b);\n        bufferList[j] = (TPM2B_DIGEST *)0;\n\n        int c;\n        for(c=0; c < j; c++) {\n            TPM2B_DIGEST *digest = bufferList[c];\n            int rc =  HMAC_Update(&ctx, digest->b.buffer, digest->b.size);\n            if (!rc) {\n                LOG_ERR(\"HMAC Update failed: %s\", ERR_error_string(rc, NULL));\n                rval = TPM_RC_MEMORY;\n                goto err;\n            }\n        }\n\n        unsigned size = sizeof(tmpResult.t.buffer);\n        int rc = HMAC_Final(&ctx, tmpResult.t.buffer, &size);\n        if (!rc) {\n            LOG_ERR(\"HMAC Final failed: %s\", ERR_error_string(rc, NULL));\n            rval = TPM_RC_MEMORY;\n            goto err;\n        }\n\n        tmpResult.t.size = size;\n\n        bool res = string_bytes_concat_buffer(resultKey, &(tmpResult.b));\n        if (!res) {\n            rval = TSS2_SYS_RC_BAD_VALUE;\n            goto err;\n        }\n    }\n\n    // Truncate the result to the desired size.\n    resultKey->t.size = bytes;\n\nerr:\n    HMAC_CTX_cleanup(&ctx);\n\n    return rval;\n}\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#ifndef SRC_TPM_KDFA_H_\n#define SRC_TPM_KDFA_H_\n\n#include <sapi/tpm20.h>\n\n/* TODO DOCUMENT ME */\n/**\n *\n * @param hashAlg\n * @param key\n * @param label\n * @param contextU\n * @param contextV\n * @param bits\n * @param resultKey\n * @return\n */\nTPM_RC tpm_kdfa(TPMI_ALG_HASH hashAlg,\n        TPM2B *key, char *label, TPM2B *contextU, TPM2B *contextV,\n        UINT16 bits, TPM2B_MAX_BUFFER *resultKey );\n\n#endif /* SRC_TPM_KDFA_H_ */\n", "//**********************************************************************;\n// Copyright (c) 2015, Intel Corporation\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n// THE POSSIBILITY OF SUCH DAMAGE.\n//**********************************************************************;\n\n#include <stdbool.h>\n#include <stdlib.h>\n\n#include <sapi/tpm20.h>\n\n#include \"string-bytes.h\"\n#include \"tpm_kdfa.h\"\n#include \"tpm_session.h\"\n\n/* for APP_RC_CREATE_SESSION_KEY_FAILED error code */\n\n#define SESSIONS_ARRAY_COUNT MAX_NUM_SESSIONS+1\n\ntypedef struct {\n    SESSION session;\n    void *nextEntry;\n} SESSION_LIST_ENTRY;\n\nstatic SESSION_LIST_ENTRY *local_sessions_list = 0;\nstatic INT16 local_session_entries_used = 0;\n\n/*\n * GetDigestSize() was taken from the TSS code base\n * and moved here since it was not part of the public\n * exxported API at the time.\n */\ntypedef struct {\n    TPM_ALG_ID  algId;\n    UINT16      size;  // Size of digest\n} HASH_SIZE_INFO;\n\nHASH_SIZE_INFO   hashSizes[] = {\n    {TPM_ALG_SHA1,          SHA1_DIGEST_SIZE},\n    {TPM_ALG_SHA256,        SHA256_DIGEST_SIZE},\n#ifdef TPM_ALG_SHA384\n    {TPM_ALG_SHA384,        SHA384_DIGEST_SIZE},\n#endif\n#ifdef TPM_ALG_SHA512\n    {TPM_ALG_SHA512,        SHA512_DIGEST_SIZE},\n#endif\n    {TPM_ALG_SM3_256,       SM3_256_DIGEST_SIZE},\n    {TPM_ALG_NULL,0}\n};\n\nstatic UINT16 GetDigestSize( TPM_ALG_ID authHash )\n{\n    UINT32 i;\n    for(i = 0; i < (sizeof(hashSizes)/sizeof(HASH_SIZE_INFO)); i++ )\n    {\n        if( hashSizes[i].algId == authHash )\n            return hashSizes[i].size;\n    }\n\n    // If not found, return 0 size, and let TPM handle the error.\n    return( 0 );\n}\n\nstatic TPM_RC AddSession( SESSION_LIST_ENTRY **sessionEntry )\n{\n    SESSION_LIST_ENTRY **newEntry;\n\n    // find end of list.\n    for( newEntry = &local_sessions_list; *newEntry != 0; *newEntry = ( (SESSION_LIST_ENTRY *)*newEntry)->nextEntry )\n        ;\n\n    // allocate space for session structure.\n    *newEntry = malloc( sizeof( SESSION_LIST_ENTRY ) );\n    if( *newEntry != 0 )\n    {\n        *sessionEntry = *newEntry;\n        (*sessionEntry)->nextEntry = 0;\n        local_session_entries_used++;\n        return TPM_RC_SUCCESS;\n    }\n    else\n    {\n        return TSS2_APP_RC_SESSION_SLOT_NOT_FOUND;\n    }\n}\n\n\nstatic void DeleteSession( SESSION *session )\n{\n    SESSION_LIST_ENTRY *predSession;\n    void *newNextEntry;\n\n    if( session == &local_sessions_list->session )\n        local_sessions_list = 0;\n    else\n    {\n        // Find predecessor.\n        for( predSession = local_sessions_list;\n                predSession != 0 && &( ( ( SESSION_LIST_ENTRY *)predSession->nextEntry )->session ) != session;\n                predSession = predSession->nextEntry )\n            ;\n\n        if( predSession != 0 )\n        {\n            local_session_entries_used--;\n\n            newNextEntry = &( (SESSION_LIST_ENTRY *)predSession->nextEntry)->nextEntry;\n\n            free( predSession->nextEntry );\n\n            predSession->nextEntry = newNextEntry;\n        }\n    }\n}\n\n//\n// This is a wrapper function around the TPM2_StartAuthSession command.\n// It performs the command, calculates the session key, and updates a\n// SESSION structure.\n//\nstatic TPM_RC StartAuthSession(TSS2_SYS_CONTEXT *sapi_context, SESSION *session )\n{\n    TPM_RC rval;\n    TPM2B_ENCRYPTED_SECRET key;\n    char label[] = \"ATH\";\n    UINT16 bytes;\n    int i;\n\n    key.t.size = 0;\n\n    if( session->nonceOlder.t.size == 0 )\n    {\n        /* this is an internal routine to TSS and should be removed */\n        session->nonceOlder.t.size = GetDigestSize( TPM_ALG_SHA1 );\n        for( i = 0; i < session->nonceOlder.t.size; i++ )\n            session->nonceOlder.t.buffer[i] = 0;\n    }\n\n    session->nonceNewer.t.size = session->nonceOlder.t.size;\n    rval = Tss2_Sys_StartAuthSession( sapi_context, session->tpmKey, session->bind, 0,\n            &( session->nonceOlder ), &( session->encryptedSalt ), session->sessionType,\n            &( session->symmetric ), session->authHash, &( session->sessionHandle ),\n            &( session->nonceNewer ), 0 );\n\n    if( rval == TPM_RC_SUCCESS )\n    {\n        if( session->tpmKey == TPM_RH_NULL )\n            session->salt.t.size = 0;\n        if( session->bind == TPM_RH_NULL )\n            session->authValueBind.t.size = 0;\n\n        if( session->tpmKey == TPM_RH_NULL && session->bind == TPM_RH_NULL )\n        {\n            session->sessionKey.b.size = 0;\n        }\n        else\n        {\n            // Generate the key used as input to the KDF.\n            // Generate the key used as input to the KDF.\n            bool result = string_bytes_concat_buffer( (TPM2B_MAX_BUFFER *)&key, &( session->authValueBind.b ) );\n            if (!result)\n            {\n               return TSS2_SYS_RC_BAD_VALUE;\n            }\n\n            result = string_bytes_concat_buffer( (TPM2B_MAX_BUFFER *)&key, &( session->salt.b ) );\n            if (!result)\n            {\n                return TSS2_SYS_RC_BAD_VALUE;\n            }\n\n            bytes = GetDigestSize( session->authHash );\n\n            if( key.t.size == 0 )\n            {\n                session->sessionKey.t.size = 0;\n            }\n            else\n            {\n                rval = tpm_kdfa(session->authHash, &(key.b), label, &( session->nonceNewer.b ),\n                        &( session->nonceOlder.b ), bytes * 8, (TPM2B_MAX_BUFFER *)&( session->sessionKey ) );\n            }\n\n            if( rval != TPM_RC_SUCCESS )\n            {\n                return( TSS2_APP_RC_CREATE_SESSION_KEY_FAILED );\n            }\n        }\n\n        session->nonceTpmDecrypt.b.size = 0;\n        session->nonceTpmEncrypt.b.size = 0;\n        session->nvNameChanged = 0;\n    }\n\n    return rval;\n}\n\nTPM_RC tpm_session_auth_end( SESSION *session )\n{\n    TPM_RC rval = TPM_RC_SUCCESS;\n\n    DeleteSession( session );\n\n    return rval;\n}\n\n//\n// This version of StartAuthSession initializes the fields\n// of the session structure using the passed in\n// parameters, then calls StartAuthSession\n// with just a pointer to the session structure.\n// This allows all params to be set in one line of code when\n// the function is called; cleaner this way, for\n// some uses.\n//\nTPM_RC tpm_session_start_auth_with_params(TSS2_SYS_CONTEXT *sapi_context, SESSION **session,\n    TPMI_DH_OBJECT tpmKey, TPM2B_MAX_BUFFER *salt,\n    TPMI_DH_ENTITY bind, TPM2B_AUTH *bindAuth, TPM2B_NONCE *nonceCaller,\n    TPM2B_ENCRYPTED_SECRET *encryptedSalt,\n    TPM_SE sessionType, TPMT_SYM_DEF *symmetric, TPMI_ALG_HASH algId )\n{\n    TPM_RC rval;\n    SESSION_LIST_ENTRY *sessionEntry;\n\n    rval = AddSession( &sessionEntry );\n    if( rval == TSS2_RC_SUCCESS )\n    {\n        *session = &sessionEntry->session;\n\n        // Copy handles to session struct.\n        (*session)->bind = bind;\n        (*session)->tpmKey = tpmKey;\n\n        // Copy nonceCaller to nonceOlder in session struct.\n        // This will be used as nonceCaller when StartAuthSession\n        // is called.\n        memcpy( &(*session)->nonceOlder.b, &nonceCaller->b, sizeof(nonceCaller->b));\n\n        // Copy encryptedSalt\n        memcpy( &(*session)->encryptedSalt.b, &encryptedSalt->b, sizeof(encryptedSalt->b));\n\n        // Copy sessionType.\n        (*session)->sessionType = sessionType;\n\n        // Init symmetric.\n        (*session)->symmetric.algorithm = symmetric->algorithm;\n        (*session)->symmetric.keyBits.sym = symmetric->keyBits.sym;\n        (*session)->symmetric.mode.sym = symmetric->mode.sym;\n        (*session)->authHash = algId;\n\n        // Copy bind' authValue.\n        if( bindAuth == 0 )\n        {\n            (*session)->authValueBind.b.size = 0;\n        }\n        else\n        {\n            memcpy( &( (*session)->authValueBind.b ), &( bindAuth->b ), sizeof(bindAuth->b));\n        }\n\n        // Calculate sessionKey\n        if( (*session)->tpmKey == TPM_RH_NULL )\n        {\n            (*session)->salt.t.size = 0;\n        }\n        else\n        {\n            memcpy( &(*session)->salt.b, &salt->b, sizeof(salt->b));\n        }\n\n        if( (*session)->bind == TPM_RH_NULL )\n            (*session)->authValueBind.t.size = 0;\n\n\n        rval = StartAuthSession(sapi_context, *session );\n    }\n    else\n    {\n        DeleteSession( *session );\n    }\n    return( rval );\n}\n"], "filenames": ["Makefile.am", "configure.ac", "lib/tpm_kdfa.c", "lib/tpm_kdfa.h", "lib/tpm_session.c"], "buggy_code_start_loc": [38, 72, 29, 45, 201], "buggy_code_end_loc": [42, 73, 97, 46, 202], "fixing_code_start_loc": [38, 72, 30, 45, 201], "fixing_code_end_loc": [42, 74, 153, 46, 202], "type": "CWE-522", "message": "tpm2-tools versions before 1.1.1 are vulnerable to a password leak due to transmitting password in plaintext from client to server when generating HMAC.", "other": {"cve": {"id": "CVE-2017-7524", "sourceIdentifier": "secalert@redhat.com", "published": "2017-06-27T14:29:00.187", "lastModified": "2019-10-09T23:29:41.920", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "tpm2-tools versions before 1.1.1 are vulnerable to a password leak due to transmitting password in plaintext from client to server when generating HMAC."}, {"lang": "es", "value": "Las versiones anteriores a la 1.1.1 de tpm2-tools son vulnerables a un filtrado de contrase\u00f1a debido a la transmisi\u00f3n de contrase\u00f1as en texto plano del cliente al servidor al generar HMAC."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-522"}]}, {"source": "secalert@redhat.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-522"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:tpm2-tools_project:tpm2.0-tools:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.1.0", "matchCriteriaId": "468D7349-13D2-4C72-8E69-65052C4145E1"}]}]}], "references": [{"url": "https://github.com/01org/tpm2.0-tools/commit/c5d72beaab1cbbbe68271f4bc4b6670d69985157", "source": "secalert@redhat.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/01org/tpm2.0-tools/commit/c5d72beaab1cbbbe68271f4bc4b6670d69985157"}}