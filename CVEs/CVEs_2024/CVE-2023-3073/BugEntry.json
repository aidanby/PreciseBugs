{"buggy_code": ["<?php\n/*+*******************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ********************************************************************************/\nrequire_once 'modules/Documents/Documents.php';\nrequire_once 'include/logging.php';\nrequire_once 'include/database/PearDatabase.php';\n\nglobal $adb;\n\n$local_log = LoggerManager::getLogger('index');\n$folderid = isset($_REQUEST['record']) ? vtlib_purify($_REQUEST['record']) : '';\n$foldername = utf8RawUrlDecode($_REQUEST['foldername']);\n$folderdesc = utf8RawUrlDecode($_REQUEST['folderdesc']);\n\nif (isset($_REQUEST['savemode']) && $_REQUEST['savemode'] == 'Save') {\n\tif ($folderid == '') {\n\t\t$dbQuery = 'select foldername from vtiger_attachmentsfolder where foldername=?';\n\t\t$result1 = $adb->pquery($dbQuery, array($foldername));\n\t\tif ($result1 && $adb->num_rows($result1)>0) {\n\t\t\techo 'DUPLICATE_FOLDERNAME';\n\t\t} else {\n\t\t\t$rs = $adb->pquery('select max(folderid),max(sequence) from vtiger_attachmentsfolder', array());\n\t\t\t$fid = (int)$adb->query_result($rs, 0, 0) + 1;\n\t\t\t$sequence = (int)$adb->query_result($rs, 0, 1) + 1;\n\t\t\t$sql = 'insert into vtiger_attachmentsfolder (folderid,foldername,description,createdby,sequence) values (?,?,?,?,?)';\n\t\t\t$params = array($fid, $foldername, $folderdesc, $current_user->id, $sequence);\n\t\t\t$result = $adb->pquery($sql, $params);\n\t\t\tif (!$result) {\n\t\t\t\techo 'Failure';\n\t\t\t} else {\n\t\t\t\theader('Location: index.php?action=DocumentsAjax&file=ListView&mode=ajax&ajax=true&module=Documents');\n\t\t\t}\n\t\t}\n\t} elseif ($folderid != '') {\n\t\t$dbQuery = 'select count(*) from vtiger_attachmentsfolder where foldername=? and folderid!=?';\n\t\t$result1 = $adb->pquery($dbQuery, array($foldername, $folderid));\n\t\tif ($result1 && $adb->query_result($result1, 0, 0)==0) {\n\t\t\tif (empty($folderdesc)) {\n\t\t\t\t$sql = 'update vtiger_attachmentsfolder set foldername=? where folderid= ?';\n\t\t\t\t$result = $adb->pquery($sql, array($foldername,$folderid));\n\t\t\t} else {\n\t\t\t\t$sql = 'update vtiger_attachmentsfolder set foldername=?, description=? where folderid= ?';\n\t\t\t\t$result = $adb->pquery($sql, array($foldername, $folderdesc, $folderid));\n\t\t\t}\n\t\t\tif (!$result) {\n\t\t\t\techo 'Failure';\n\t\t\t} else {\n\t\t\t\techo 'Success';\n\t\t\t}\n\t\t} else {\n\t\t\techo 'DUPLICATE_FOLDERNAME';\n\t\t}\n\t}\n}\n?>\n"], "fixing_code": ["<?php\n/*+*******************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n ********************************************************************************/\nrequire_once 'modules/Documents/Documents.php';\nrequire_once 'include/logging.php';\nrequire_once 'include/database/PearDatabase.php';\n\nglobal $adb;\n\n$local_log = LoggerManager::getLogger('index');\n$folderid = isset($_REQUEST['record']) ? vtlib_purify($_REQUEST['record']) : '';\n$foldername = substr(vtlib_purify(trim(utf8RawUrlDecode($_REQUEST['foldername']))), 0, 20);\n$folderdesc = substr(vtlib_purify(trim(utf8RawUrlDecode($_REQUEST['folderdesc']))), 0, 50);\n\nif (isset($_REQUEST['savemode']) && $_REQUEST['savemode'] == 'Save') {\n\tif ($folderid == '') {\n\t\t$dbQuery = 'select foldername from vtiger_attachmentsfolder where foldername=?';\n\t\t$result1 = $adb->pquery($dbQuery, array($foldername));\n\t\tif ($result1 && $adb->num_rows($result1)>0) {\n\t\t\techo 'DUPLICATE_FOLDERNAME';\n\t\t} else {\n\t\t\t$rs = $adb->pquery('select max(folderid),max(sequence) from vtiger_attachmentsfolder', array());\n\t\t\t$fid = (int)$adb->query_result($rs, 0, 0) + 1;\n\t\t\t$sequence = (int)$adb->query_result($rs, 0, 1) + 1;\n\t\t\t$sql = 'insert into vtiger_attachmentsfolder (folderid,foldername,description,createdby,sequence) values (?,?,?,?,?)';\n\t\t\t$params = array($fid, $foldername, $folderdesc, $current_user->id, $sequence);\n\t\t\t$result = $adb->pquery($sql, $params);\n\t\t\tif (!$result) {\n\t\t\t\techo 'Failure';\n\t\t\t} else {\n\t\t\t\theader('Location: index.php?action=DocumentsAjax&file=ListView&mode=ajax&ajax=true&module=Documents');\n\t\t\t}\n\t\t}\n\t} elseif ($folderid != '') {\n\t\t$dbQuery = 'select count(*) from vtiger_attachmentsfolder where foldername=? and folderid!=?';\n\t\t$result1 = $adb->pquery($dbQuery, array($foldername, $folderid));\n\t\tif ($result1 && $adb->query_result($result1, 0, 0)==0) {\n\t\t\tif (empty($folderdesc)) {\n\t\t\t\t$sql = 'update vtiger_attachmentsfolder set foldername=? where folderid= ?';\n\t\t\t\t$result = $adb->pquery($sql, array($foldername,$folderid));\n\t\t\t} else {\n\t\t\t\t$sql = 'update vtiger_attachmentsfolder set foldername=?, description=? where folderid= ?';\n\t\t\t\t$result = $adb->pquery($sql, array($foldername, $folderdesc, $folderid));\n\t\t\t}\n\t\t\tif (!$result) {\n\t\t\t\techo 'Failure';\n\t\t\t} else {\n\t\t\t\techo 'Success';\n\t\t\t}\n\t\t} else {\n\t\t\techo 'DUPLICATE_FOLDERNAME';\n\t\t}\n\t}\n}\n?>\n"], "filenames": ["modules/Documents/SaveFolder.php"], "buggy_code_start_loc": [18], "buggy_code_end_loc": [20], "fixing_code_start_loc": [18], "fixing_code_end_loc": [20], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository tsolucio/corebos prior to 8.", "other": {"cve": {"id": "CVE-2023-3073", "sourceIdentifier": "security@huntr.dev", "published": "2023-06-02T19:15:09.433", "lastModified": "2023-06-08T17:42:04.270", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository tsolucio/corebos prior to 8."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 3.7}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:corebos:corebos:*:*:*:*:*:*:*:*", "versionEndExcluding": "8.0", "matchCriteriaId": "2ED1C4A9-9F39-4663-9E1B-6270C9CC2539"}]}]}], "references": [{"url": "https://github.com/tsolucio/corebos/commit/e87f77c64061b43186c80ad1b50d313c67d7f6cf", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/a4d6a082-2ea8-49a5-8e48-6d39b5cc62e1", "source": "security@huntr.dev", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/tsolucio/corebos/commit/e87f77c64061b43186c80ad1b50d313c67d7f6cf"}}