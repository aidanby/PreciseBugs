{"buggy_code": ["Changelog\n=========\n\n1.7 (unreleased)\n----------------\n\n- Nothing changed yet.\n\n\n1.6 (2021-04-20)\n----------------\n\n- RelatedDocs field can handle object_provides criteria.\n  [sgeulette]\n\n1.5 (2019-11-25)\n----------------\n\n- Added css on some columns.\n  [sgeulette]\n\n1.4 (2019-09-20)\n----------------\n\n- Made class inheritance clearer.\n  [sgeulette]\n\n1.3 (2018-09-24)\n----------------\n\n- Use a fade edit pencil to dissuade user click on it.\n  [sgeulette]\n\n1.2 (2018-09-05)\n----------------\n\n- Changed french translation to avoid confusion.\n  [sgeulette]\n\n1.1 (2018-07-23)\n----------------\n\n- Remove filerepresentation adapters.\n  They are not needed for collective.zopeedit > 1.0.0\n  [gotcha]\n- Replace restrictedTraverse by getMultiAdapter\n  [sgeulette]\n- Display related docs with list\n  [sgeulette]\n\n1.0 (2017-06-02)\n----------------\n\n- Replace collective.z3cform.rolefield by dexterity.localrolesfield. Manual configuration needed. See readme...\n  [sgeulette]\n\n0.7 (2017-05-30)\n----------------\n\n- Move the signed attribute to collective.dms.scanbehavior.\n  [mpeeters]\n\n0.6 (2015-11-24)\n----------------\n\n- Removed old sorting attribute. Added dependency. Changed travis config.\n  [sgeulette]\n\n0.5 (2015-06-02)\n----------------\n\n- Added div with id to fix fields display in edit mode\n  [sgeulette]\n- Added treating_groups and recipient_groups catalog index.\n  [sgeulette]\n- Added treating_groups and recipient_groups in p.a.collection columns\n  [sgeulette]\n- Cleaning on task old stuff\n  [cmessiant]\n- Don't use AjaxChosenMultiFieldWidget for treating_groups field\n  [cmessiant]\n\n0.4 (2015-03-13)\n----------------\n\n- Fix fields width to 50% to keep fields on the left of the scan preview\n  [sgeulette]\n- Test attribute existence to resolve a recatalog problem\n  [sgeulette]\n\n0.3 (2014-10-24)\n----------------\n\n- Correct wrong metadata name in column\n  [sgeulette]\n- Add a dmsdocument edit view including documentviewer to complete attributes after batch import.\n  [sgeulette]\n\n0.2 (2014-02-26)\n----------------\n\n- Update the LocalRolesToPrincipals fields to use zope.schemaevent\n  [mpeeters]\n- Integrated documentviewer\n  [vincentfretin]\n- Add signed version\n  [vincentfretin, cedricmessiant]\n- New default view for all documents\n  [vincentfretin, cedricmessiant]\n- Allow tasks to be added to document\n  [fpeters, vincentfretin, cedricmessiant]\n\n0.1.1 (2013-03-08)\n------------------\n\n- Corrected MANIFEST.in\n\n0.1 (2013-03-06)\n----------------\n\n- Package created using templer\n  [cedricmessiant]\n- Added portal types\n  [sgeulette]\n- Related field\n  [davidconvent]\n- LocalRolesToPrincipals field\n  [gauthierbastien]\n", "#! -*- coding: utf8 -*-\nfrom setuptools import setup, find_packages\n\nversion = '1.7.dev0'\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\nsetup(\n    name='collective.dms.basecontent',\n    version=version,\n    description=\"Base content types for document management system\",\n    long_description=long_description,\n    # Get more strings from\n    # http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.2\",\n        \"Framework :: Plone :: 4.3\",\n        \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Topic :: Software Development :: Libraries :: Python Modules\",\n    ],\n    keywords='document management system dms viewer',\n    author='Ecreall, Entrouvert, IMIO',\n    author_email='cedricmessiant@ecreall.com',\n    url='https://github.com/collective/collective.dms.basecontent',\n    download_url='https://pypi.org/project/collective.dms.basecontent',\n    license='gpl',\n    packages=find_packages('src'),\n    package_dir={'': 'src'},\n    namespace_packages=['collective', 'collective.dms'],\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'setuptools',\n        'five.grok',\n        'collective.documentviewer',\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.dexterity',\n        'plone.directives.form',\n        'plone.namedfile',\n        'z3c.blobfile',\n        'plone.app.contenttypes',\n        'plone.app.relationfield',\n        'plone.formwidget.contenttree',\n        'plone.principalsource',\n        'collective.z3cform.chosen',\n        'z3c.table',\n    ],\n    extras_require={\n        'test': ['plone.app.testing',\n                 'ecreall.helpers.testing',\n                 'plone.app.vocabularies'\n                 ],\n    },\n    entry_points=\"\"\"\n    # -*- Entry points: -*-\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "import os.path\nimport Missing\nfrom Acquisition import aq_base\nfrom AccessControl import getSecurityManager\nfrom Products.CMFCore.utils import getToolByName\nfrom five import grok\nfrom z3c.table import interfaces\nfrom zope.component import getMultiAdapter\nfrom zope.i18nmessageid import MessageFactory\nfrom zope.i18n import translate\nimport z3c.table.table\nimport z3c.table.column\nfrom Products.CMFCore.WorkflowCore import WorkflowException\nimport plone.api\n\nfrom collective.dms.basecontent import _\n\nPMF = MessageFactory('plone')\n\ngrok.templatedir('templates')\n\n\nclass Column(z3c.table.column.Column, grok.MultiAdapter):\n    grok.baseclass()\n    grok.provides(interfaces.IColumn)\n\n\ndef get_value(item, attribute, default=None):\n    try:\n        value = getattr(aq_base(item), attribute)\n        if value is Missing.Value:\n            return default\n    except AttributeError:\n        obj = item.getObject()\n        value = getattr(obj, attribute, default)\n\n    if callable(value):\n        value = value()\n\n    return value\n\n\nclass DateColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value)\n\n\nclass DateTimeColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value, long_format=True)\n\n\nclass PrincipalColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute, default=())\n\n        if not isinstance(value, (list, tuple)):\n            value = (value,)\n\n        gtool = getToolByName(plone.api.portal.get(), 'portal_groups')\n        mtool = getToolByName(plone.api.portal.get(), 'portal_membership')\n        principals = []\n        for principal_id in value:\n            user = mtool.getMemberById(principal_id)\n            if user is not None:\n                principals.append(user.getProperty('fullname', None) or user.getId())\n            else:\n                group = gtool.getGroupById(principal_id)\n                if group is not None:\n                    principals.append(group.getProperty('title', None) or group.getId())\n\n        return ', '.join(principals).decode('utf-8')\n\n\nclass LinkColumn(z3c.table.column.LinkColumn, Column):\n    grok.baseclass()\n\n    def getLinkURL(self, item):\n        \"\"\"Setup link url.\"\"\"\n        if self.linkName is not None:\n            return '%s/%s' % (item.getURL(), self.linkName)\n        return item.getURL()\n\n\nclass TitleColumn(LinkColumn):\n    grok.baseclass()\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkContent(self, item):\n        title = get_value(item, 'Title')\n        if isinstance(title, unicode):\n            return title\n        else:\n            return unicode(title, 'utf-8', 'ignore')\n\n\nclass IconColumn(LinkColumn):\n    grok.baseclass()\n\n    def getLinkContent(self, item):\n        content = super(IconColumn, self).getLinkContent(item)\n        return u\"\"\"<img title=\"%s\" src=\"%s\" />\"\"\" % (\n            content,\n            '%s/%s' % (self.table.portal_url, self.iconName))\n\n\nclass DeleteColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 9\n    linkName = \"delete_confirmation\"\n    linkContent = PMF('Delete')\n    linkCSS = 'edm-delete-popup'\n    iconName = \"delete_icon.png\"\n    linkContent = PMF(u\"Delete\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Delete objects', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(DeleteColumn, self).renderCell(item)\n\n\nclass DownloadColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 1\n    linkName = \"@@download\"\n    iconName = \"download_icon.png\"\n    linkContent = _(u\"Download file\")\n\n\nclass ExternalEditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 3\n    linkName = \"@@external_edit\"\n    iconName = \"extedit_icon.png\"\n    linkContent = PMF(u\"Edit with external application\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        if not sm.checkPermission('Modify portal content', obj):\n            return False\n\n        if obj.file is None:\n            return False\n\n        ext = os.path.splitext(obj.file.filename)[-1].lower()\n        if ext in (u'.pdf', u'.jpg', '.jpeg'):\n            return False\n\n        view = getMultiAdapter((obj, self.request), name='externalEditorEnabled')\n        if not view.available():\n            return False\n\n        return True\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(ExternalEditColumn, self).renderCell(item)\n\n\nclass EditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 2\n    linkName = \"edit\"\n    iconName = \"++resource++fade_edit.png\"\n    linkContent = PMF(u\"Edit\")\n    linkCSS = 'overlay-form-reload'\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Modify portal content', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(EditColumn, self).renderCell(item)\n\n\nclass StateColumn(Column):\n    grok.baseclass()\n    header = PMF(u\"State\")\n    weight = 50\n\n    def renderCell(self, item):\n        try:\n            wtool = self.table.wtool\n            portal_type = get_value(item, 'portal_type')\n            review_state = get_value(item, 'review_state')\n            if not review_state:\n                return u\"\"\n            state_title = wtool.getTitleForStateOnType(review_state,\n                                                       portal_type)\n            return translate(PMF(state_title), context=self.request)\n        except WorkflowException:\n            return u\"\"\n\n\nclass LabelColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        if value is None:\n            value = ''\n        return value\n"], "fixing_code": ["Changelog\n=========\n\n1.7 (unreleased)\n----------------\n\n- Updated columns to work with z3c.table 2.2. Escaped rendering special caracters to avoid xss.\n  [sgeulette]\n\n1.6 (2021-04-20)\n----------------\n\n- RelatedDocs field can handle object_provides criteria.\n  [sgeulette]\n\n1.5 (2019-11-25)\n----------------\n\n- Added css on some columns.\n  [sgeulette]\n\n1.4 (2019-09-20)\n----------------\n\n- Made class inheritance clearer.\n  [sgeulette]\n\n1.3 (2018-09-24)\n----------------\n\n- Use a fade edit pencil to dissuade user click on it.\n  [sgeulette]\n\n1.2 (2018-09-05)\n----------------\n\n- Changed french translation to avoid confusion.\n  [sgeulette]\n\n1.1 (2018-07-23)\n----------------\n\n- Remove filerepresentation adapters.\n  They are not needed for collective.zopeedit > 1.0.0\n  [gotcha]\n- Replace restrictedTraverse by getMultiAdapter\n  [sgeulette]\n- Display related docs with list\n  [sgeulette]\n\n1.0 (2017-06-02)\n----------------\n\n- Replace collective.z3cform.rolefield by dexterity.localrolesfield. Manual configuration needed. See readme...\n  [sgeulette]\n\n0.7 (2017-05-30)\n----------------\n\n- Move the signed attribute to collective.dms.scanbehavior.\n  [mpeeters]\n\n0.6 (2015-11-24)\n----------------\n\n- Removed old sorting attribute. Added dependency. Changed travis config.\n  [sgeulette]\n\n0.5 (2015-06-02)\n----------------\n\n- Added div with id to fix fields display in edit mode\n  [sgeulette]\n- Added treating_groups and recipient_groups catalog index.\n  [sgeulette]\n- Added treating_groups and recipient_groups in p.a.collection columns\n  [sgeulette]\n- Cleaning on task old stuff\n  [cmessiant]\n- Don't use AjaxChosenMultiFieldWidget for treating_groups field\n  [cmessiant]\n\n0.4 (2015-03-13)\n----------------\n\n- Fix fields width to 50% to keep fields on the left of the scan preview\n  [sgeulette]\n- Test attribute existence to resolve a recatalog problem\n  [sgeulette]\n\n0.3 (2014-10-24)\n----------------\n\n- Correct wrong metadata name in column\n  [sgeulette]\n- Add a dmsdocument edit view including documentviewer to complete attributes after batch import.\n  [sgeulette]\n\n0.2 (2014-02-26)\n----------------\n\n- Update the LocalRolesToPrincipals fields to use zope.schemaevent\n  [mpeeters]\n- Integrated documentviewer\n  [vincentfretin]\n- Add signed version\n  [vincentfretin, cedricmessiant]\n- New default view for all documents\n  [vincentfretin, cedricmessiant]\n- Allow tasks to be added to document\n  [fpeters, vincentfretin, cedricmessiant]\n\n0.1.1 (2013-03-08)\n------------------\n\n- Corrected MANIFEST.in\n\n0.1 (2013-03-06)\n----------------\n\n- Package created using templer\n  [cedricmessiant]\n- Added portal types\n  [sgeulette]\n- Related field\n  [davidconvent]\n- LocalRolesToPrincipals field\n  [gauthierbastien]\n", "#! -*- coding: utf8 -*-\nfrom setuptools import setup, find_packages\n\nversion = '1.7.dev0'\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\nsetup(\n    name='collective.dms.basecontent',\n    version=version,\n    description=\"Base content types for document management system\",\n    long_description=long_description,\n    # Get more strings from\n    # http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.2\",\n        \"Framework :: Plone :: 4.3\",\n        \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Topic :: Software Development :: Libraries :: Python Modules\",\n    ],\n    keywords='document management system dms viewer',\n    author='Ecreall, Entrouvert, IMIO',\n    author_email='cedricmessiant@ecreall.com',\n    url='https://github.com/collective/collective.dms.basecontent',\n    download_url='https://pypi.org/project/collective.dms.basecontent',\n    license='gpl',\n    packages=find_packages('src'),\n    package_dir={'': 'src'},\n    namespace_packages=['collective', 'collective.dms'],\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'setuptools',\n        'five.grok',\n        'collective.documentviewer',\n        'dexterity.localrolesfield',\n        'future',\n        'plone.api',\n        'plone.app.dexterity',\n        'plone.directives.form',\n        'plone.namedfile',\n        'z3c.blobfile',\n        'plone.app.contenttypes',\n        'plone.app.relationfield',\n        'plone.formwidget.contenttree',\n        'plone.principalsource',\n        'collective.z3cform.chosen',\n        'z3c.table>=2.2',\n    ],\n    extras_require={\n        'test': ['plone.app.testing',\n                 'ecreall.helpers.testing',\n                 'plone.app.vocabularies'\n                 ],\n    },\n    entry_points=\"\"\"\n    # -*- Entry points: -*-\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "from AccessControl import getSecurityManager\nfrom Acquisition import aq_base\nfrom collective.dms.basecontent import _\nfrom five import grok\nfrom html import escape\nfrom Products.CMFCore.utils import getToolByName\nfrom Products.CMFCore.WorkflowCore import WorkflowException\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table import interfaces\nfrom zope.component import getMultiAdapter\nfrom zope.i18n import translate\nfrom zope.i18nmessageid import MessageFactory\n\nimport Missing\nimport os.path\nimport plone.api\nimport z3c.table.column\nimport z3c.table.table\n\n\nPMF = MessageFactory('plone')\n\ngrok.templatedir('templates')\n\n\nclass Column(z3c.table.column.Column, grok.MultiAdapter):\n    grok.baseclass()\n    grok.provides(interfaces.IColumn)\n\n\ndef get_value(item, attribute, default=None):\n    try:\n        value = getattr(aq_base(item), attribute)\n        if value is Missing.Value:\n            return default\n    except AttributeError:\n        obj = item.getObject()\n        value = getattr(obj, attribute, default)\n\n    if callable(value):\n        value = value()\n\n    return value\n\n\nclass DateColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value)\n\n\nclass DateTimeColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        return self.table.format_date(value, long_format=True)\n\n\nclass PrincipalColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute, default=())\n\n        if not isinstance(value, (list, tuple)):\n            value = (value,)\n\n        gtool = getToolByName(plone.api.portal.get(), 'portal_groups')\n        mtool = getToolByName(plone.api.portal.get(), 'portal_membership')\n        principals = []\n        for principal_id in value:\n            user = mtool.getMemberById(principal_id)\n            if user is not None:\n                principals.append(escape(user.getProperty('fullname', None)) or user.getId())\n            else:\n                group = gtool.getGroupById(principal_id)\n                if group is not None:\n                    principals.append(escape(group.getProperty('title', None)) or group.getId())\n\n        return ', '.join(principals).decode('utf-8')\n\n\nclass LinkColumn(z3c.table.column.LinkColumn, Column):\n    grok.baseclass()\n\n    def getLinkURL(self, item):\n        \"\"\"Setup link url.\"\"\"\n        if self.linkName is not None:\n            return '%s/%s' % (item.getURL(), self.linkName)\n        return item.getURL()\n\n    def renderCell(self, item):\n        # setup a tag\n        return '<a href=\"%s\"%s%s%s>%s</a>' % (\n            self.getLinkURL(item),  # originally escaped\n            self.getLinkTarget(item),\n            self.getLinkCSS(item),\n            self.getLinkTitle(item),\n            self.getLinkContent(item),  # originally escaped\n        )\n\n\nclass TitleColumn(LinkColumn):\n    grok.baseclass()\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkContent(self, item):\n        title = get_value(item, 'Title')\n        return escape(safe_unicode(title))\n\n\nclass IconColumn(LinkColumn):\n    grok.baseclass()\n\n    def getLinkContent(self, item):\n        content = super(IconColumn, self).getLinkContent(item)  # escaped\n        return u\"\"\"<img title=\"%s\" src=\"%s\" />\"\"\" % (\n            content,\n            '%s/%s' % (self.table.portal_url, self.iconName))\n\n\nclass DeleteColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 9\n    linkName = \"delete_confirmation\"\n    linkContent = PMF('Delete')\n    linkCSS = 'edm-delete-popup'\n    iconName = \"delete_icon.png\"\n    linkContent = PMF(u\"Delete\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Delete objects', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(DeleteColumn, self).renderCell(item)\n\n\nclass DownloadColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 1\n    linkName = \"@@download\"\n    iconName = \"download_icon.png\"\n    linkContent = _(u\"Download file\")\n\n\nclass ExternalEditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 3\n    linkName = \"@@external_edit\"\n    iconName = \"extedit_icon.png\"\n    linkContent = PMF(u\"Edit with external application\")\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        if not sm.checkPermission('Modify portal content', obj):\n            return False\n\n        if obj.file is None:\n            return False\n\n        ext = os.path.splitext(obj.file.filename)[-1].lower()\n        if ext in (u'.pdf', u'.jpg', '.jpeg'):\n            return False\n\n        view = getMultiAdapter((obj, self.request), name='externalEditorEnabled')\n        if not view.available():\n            return False\n\n        return True\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(ExternalEditColumn, self).renderCell(item)\n\n\nclass EditColumn(IconColumn):\n    grok.baseclass()\n    header = u\"\"\n    weight = 2\n    linkName = \"edit\"\n    iconName = \"++resource++fade_edit.png\"\n    linkContent = PMF(u\"Edit\")\n    linkCSS = 'overlay-form-reload'\n\n    def actionAvailable(self, item):\n        obj = item.getObject()\n        sm = getSecurityManager()\n        return sm.checkPermission('Modify portal content', obj)\n\n    def renderCell(self, item):\n        if not self.actionAvailable(item):\n            return u\"\"\n\n        return super(EditColumn, self).renderCell(item)\n\n\nclass StateColumn(Column):\n    grok.baseclass()\n    header = PMF(u\"State\")\n    weight = 50\n\n    def renderCell(self, item):\n        try:\n            wtool = self.table.wtool\n            portal_type = get_value(item, 'portal_type')\n            review_state = get_value(item, 'review_state')\n            if not review_state:\n                return u\"\"\n            state_title = wtool.getTitleForStateOnType(review_state,\n                                                       portal_type)\n            return translate(PMF(state_title), context=self.request)\n        except WorkflowException:\n            return u\"\"\n\n\nclass LabelColumn(Column):\n    grok.baseclass()\n    attribute = NotImplemented\n\n    def renderCell(self, item):\n        value = get_value(item, self.attribute)\n        if value is None:\n            value = ''\n        return value\n"], "filenames": ["CHANGES.rst", "setup.py", "src/collective/dms/basecontent/browser/column.py"], "buggy_code_start_loc": [7, 51, 1], "buggy_code_end_loc": [9, 63, 114], "fixing_code_start_loc": [7, 52, 1], "fixing_code_end_loc": [9, 64, 124], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in collective.dms.basecontent up to 1.6. This issue affects the function renderCell of the file src/collective/dms/basecontent/browser/column.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.7 is able to address this issue. The name of the patch is 6c4d616fcc771822a14ebae5e23f3f6d96d134bd. It is recommended to upgrade the affected component. The identifier VDB-215813 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2022-4495", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-14T15:15:10.897", "lastModified": "2023-03-01T02:24:27.977", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in collective.dms.basecontent up to 1.6. This issue affects the function renderCell of the file src/collective/dms/basecontent/browser/column.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.7 is able to address this issue. The name of the patch is 6c4d616fcc771822a14ebae5e23f3f6d96d134bd. It is recommended to upgrade the affected component. The identifier VDB-215813 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:collective.dms.basecontent_project:collective.dms.basecontent:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.7", "matchCriteriaId": "E12E0932-16A0-46DF-9148-768B8A64069D"}]}]}], "references": [{"url": "https://github.com/collective/collective.dms.basecontent/commit/6c4d616fcc771822a14ebae5e23f3f6d96d134bd", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/collective/collective.dms.basecontent/releases/tag/1.7", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?id.215813", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/collective/collective.dms.basecontent/commit/6c4d616fcc771822a14ebae5e23f3f6d96d134bd"}}