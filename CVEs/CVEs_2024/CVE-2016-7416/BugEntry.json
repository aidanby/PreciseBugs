{"buggy_code": ["/*\n   +----------------------------------------------------------------------+\n   | PHP Version 5                                                        |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Authors: Stanislav Malyshev <stas@zend.com>                          |\n   +----------------------------------------------------------------------+\n */\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <unicode/ustring.h>\n\n#include \"php_intl.h\"\n#include \"msgformat_class.h\"\n#include \"msgformat_format.h\"\n#include \"msgformat_data.h\"\n#include \"msgformat_helpers.h\"\n#include \"intl_convert.h\"\n\n#ifndef Z_ADDREF_P\n#define Z_ADDREF_P(z) ((z)->refcount++)\n#endif\n\n/* {{{ */\nstatic void msgfmt_do_format(MessageFormatter_object *mfo, zval *args, zval *return_value TSRMLS_DC)\n{\n\tint count;\n\tUChar* formatted = NULL;\n\tint formatted_len = 0;\n\tHashTable *args_copy;\n\n\tcount = zend_hash_num_elements(Z_ARRVAL_P(args));\n\n\tALLOC_HASHTABLE(args_copy);\n\tzend_hash_init(args_copy, count, NULL, ZVAL_PTR_DTOR, 0);\n\tzend_hash_copy(args_copy, Z_ARRVAL_P(args), (copy_ctor_func_t)zval_add_ref,\n\t\tNULL, sizeof(zval*));\n\n\tumsg_format_helper(mfo, args_copy, &formatted, &formatted_len TSRMLS_CC);\n\n\tzend_hash_destroy(args_copy);\n\tefree(args_copy);\n\n\tif (U_FAILURE(INTL_DATA_ERROR_CODE(mfo))) {\n\t\tif (formatted) {\n\t\t\tefree(formatted);\n\t\t}\n\t\tRETURN_FALSE;\n\t} else {\n\t\tINTL_METHOD_RETVAL_UTF8(mfo, formatted, formatted_len, 1);\n\t}\n}\n/* }}} */\n\n/* {{{ proto mixed MessageFormatter::format( array $args )\n * Format a message. }}} */\n/* {{{ proto mixed msgfmt_format( MessageFormatter $nf, array $args )\n * Format a message.\n */\nPHP_FUNCTION( msgfmt_format )\n{\n\tzval *args;\n\tMSG_FORMAT_METHOD_INIT_VARS;\n\n\n\t/* Parse parameters. */\n\tif( zend_parse_method_parameters( ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Oa\",\n\t\t&object, MessageFormatter_ce_ptr,  &args ) == FAILURE )\n\t{\n\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\"msgfmt_format: unable to parse input params\", 0 TSRMLS_CC );\n\n\t\tRETURN_FALSE;\n\t}\n\n\t/* Fetch the object. */\n\tMSG_FORMAT_METHOD_FETCH_OBJECT;\n\n\tmsgfmt_do_format(mfo, args, return_value TSRMLS_CC);\n}\n/* }}} */\n\n/* {{{ proto mixed MessageFormatter::formatMessage( string $locale, string $pattern, array $args )\n * Format a message. }}} */\n/* {{{ proto mixed msgfmt_format_message( string $locale, string $pattern, array $args )\n * Format a message.\n */\nPHP_FUNCTION( msgfmt_format_message )\n{\n\tzval       *args;\n\tUChar      *spattern = NULL;\n\tint         spattern_len = 0;\n\tchar       *pattern = NULL;\n\tint         pattern_len = 0;\n\tconst char *slocale = NULL;\n\tint         slocale_len = 0;\n\tMessageFormatter_object mf = {0};\n\tMessageFormatter_object *mfo = &mf;\n\n\t/* Parse parameters. */\n\tif( zend_parse_method_parameters( ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"ssa\",\n\t\t  &slocale, &slocale_len, &pattern, &pattern_len, &args ) == FAILURE )\n\t{\n\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\"msgfmt_format_message: unable to parse input params\", 0 TSRMLS_CC );\n\n\t\tRETURN_FALSE;\n\t}\n\n\tmsgformat_data_init(&mfo->mf_data TSRMLS_CC);\n\n\tif(pattern && pattern_len) {\n\t\tintl_convert_utf8_to_utf16(&spattern, &spattern_len, pattern, pattern_len, &INTL_DATA_ERROR_CODE(mfo));\n\t\tif( U_FAILURE(INTL_DATA_ERROR_CODE((mfo))) )\n\t\t{\n\t\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\t\"msgfmt_format_message: error converting pattern to UTF-16\", 0 TSRMLS_CC );\n\t\t\tRETURN_FALSE;\n\t\t}\n\t} else {\n\t\tspattern_len = 0;\n\t\tspattern = NULL;\n\t}\n\n\tif(slocale_len == 0) {\n\t\tslocale = intl_locale_get_default(TSRMLS_C);\n\t}\n\n#ifdef MSG_FORMAT_QUOTE_APOS\n\tif(msgformat_fix_quotes(&spattern, &spattern_len, &INTL_DATA_ERROR_CODE(mfo)) != SUCCESS) {\n\t\tintl_error_set( NULL, U_INVALID_FORMAT_ERROR,\n\t\t\t\"msgfmt_format_message: error converting pattern to quote-friendly format\", 0 TSRMLS_CC );\n\t\tRETURN_FALSE;\n\t}\n#endif\n\n\t/* Create an ICU message formatter. */\n\tMSG_FORMAT_OBJECT(mfo) = umsg_open(spattern, spattern_len, slocale, NULL, &INTL_DATA_ERROR_CODE(mfo));\n\tif(spattern && spattern_len) {\n\t\tefree(spattern);\n\t}\n\tINTL_METHOD_CHECK_STATUS(mfo, \"Creating message formatter failed\");\n\n\tmsgfmt_do_format(mfo, args, return_value TSRMLS_CC);\n\n\t/* drop the temporary formatter */\n\tmsgformat_data_free(&mfo->mf_data TSRMLS_CC);\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"], "fixing_code": ["/*\n   +----------------------------------------------------------------------+\n   | PHP Version 5                                                        |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Authors: Stanislav Malyshev <stas@zend.com>                          |\n   +----------------------------------------------------------------------+\n */\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <unicode/ustring.h>\n\n#include \"php_intl.h\"\n#include \"msgformat_class.h\"\n#include \"msgformat_format.h\"\n#include \"msgformat_data.h\"\n#include \"msgformat_helpers.h\"\n#include \"intl_convert.h\"\n\n#ifndef Z_ADDREF_P\n#define Z_ADDREF_P(z) ((z)->refcount++)\n#endif\n\n/* {{{ */\nstatic void msgfmt_do_format(MessageFormatter_object *mfo, zval *args, zval *return_value TSRMLS_DC)\n{\n\tint count;\n\tUChar* formatted = NULL;\n\tint formatted_len = 0;\n\tHashTable *args_copy;\n\n\tcount = zend_hash_num_elements(Z_ARRVAL_P(args));\n\n\tALLOC_HASHTABLE(args_copy);\n\tzend_hash_init(args_copy, count, NULL, ZVAL_PTR_DTOR, 0);\n\tzend_hash_copy(args_copy, Z_ARRVAL_P(args), (copy_ctor_func_t)zval_add_ref,\n\t\tNULL, sizeof(zval*));\n\n\tumsg_format_helper(mfo, args_copy, &formatted, &formatted_len TSRMLS_CC);\n\n\tzend_hash_destroy(args_copy);\n\tefree(args_copy);\n\n\tif (U_FAILURE(INTL_DATA_ERROR_CODE(mfo))) {\n\t\tif (formatted) {\n\t\t\tefree(formatted);\n\t\t}\n\t\tRETURN_FALSE;\n\t} else {\n\t\tINTL_METHOD_RETVAL_UTF8(mfo, formatted, formatted_len, 1);\n\t}\n}\n/* }}} */\n\n/* {{{ proto mixed MessageFormatter::format( array $args )\n * Format a message. }}} */\n/* {{{ proto mixed msgfmt_format( MessageFormatter $nf, array $args )\n * Format a message.\n */\nPHP_FUNCTION( msgfmt_format )\n{\n\tzval *args;\n\tMSG_FORMAT_METHOD_INIT_VARS;\n\n\n\t/* Parse parameters. */\n\tif( zend_parse_method_parameters( ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Oa\",\n\t\t&object, MessageFormatter_ce_ptr,  &args ) == FAILURE )\n\t{\n\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\"msgfmt_format: unable to parse input params\", 0 TSRMLS_CC );\n\n\t\tRETURN_FALSE;\n\t}\n\n\t/* Fetch the object. */\n\tMSG_FORMAT_METHOD_FETCH_OBJECT;\n\n\tmsgfmt_do_format(mfo, args, return_value TSRMLS_CC);\n}\n/* }}} */\n\n/* {{{ proto mixed MessageFormatter::formatMessage( string $locale, string $pattern, array $args )\n * Format a message. }}} */\n/* {{{ proto mixed msgfmt_format_message( string $locale, string $pattern, array $args )\n * Format a message.\n */\nPHP_FUNCTION( msgfmt_format_message )\n{\n\tzval       *args;\n\tUChar      *spattern = NULL;\n\tint         spattern_len = 0;\n\tchar       *pattern = NULL;\n\tint         pattern_len = 0;\n\tconst char *slocale = NULL;\n\tint         slocale_len = 0;\n\tMessageFormatter_object mf = {0};\n\tMessageFormatter_object *mfo = &mf;\n\n\t/* Parse parameters. */\n\tif( zend_parse_method_parameters( ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"ssa\",\n\t\t  &slocale, &slocale_len, &pattern, &pattern_len, &args ) == FAILURE )\n\t{\n\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\"msgfmt_format_message: unable to parse input params\", 0 TSRMLS_CC );\n\n\t\tRETURN_FALSE;\n\t}\n\n\tINTL_CHECK_LOCALE_LEN(slocale_len);\n\n\tmsgformat_data_init(&mfo->mf_data TSRMLS_CC);\n\n\tif(pattern && pattern_len) {\n\t\tintl_convert_utf8_to_utf16(&spattern, &spattern_len, pattern, pattern_len, &INTL_DATA_ERROR_CODE(mfo));\n\t\tif( U_FAILURE(INTL_DATA_ERROR_CODE((mfo))) )\n\t\t{\n\t\t\tintl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,\n\t\t\t\t\"msgfmt_format_message: error converting pattern to UTF-16\", 0 TSRMLS_CC );\n\t\t\tRETURN_FALSE;\n\t\t}\n\t} else {\n\t\tspattern_len = 0;\n\t\tspattern = NULL;\n\t}\n\n\tif(slocale_len == 0) {\n\t\tslocale = intl_locale_get_default(TSRMLS_C);\n\t}\n\n#ifdef MSG_FORMAT_QUOTE_APOS\n\tif(msgformat_fix_quotes(&spattern, &spattern_len, &INTL_DATA_ERROR_CODE(mfo)) != SUCCESS) {\n\t\tintl_error_set( NULL, U_INVALID_FORMAT_ERROR,\n\t\t\t\"msgfmt_format_message: error converting pattern to quote-friendly format\", 0 TSRMLS_CC );\n\t\tRETURN_FALSE;\n\t}\n#endif\n\n\t/* Create an ICU message formatter. */\n\tMSG_FORMAT_OBJECT(mfo) = umsg_open(spattern, spattern_len, slocale, NULL, &INTL_DATA_ERROR_CODE(mfo));\n\tif(spattern && spattern_len) {\n\t\tefree(spattern);\n\t}\n\tINTL_METHOD_CHECK_STATUS(mfo, \"Creating message formatter failed\");\n\n\tmsgfmt_do_format(mfo, args, return_value TSRMLS_CC);\n\n\t/* drop the temporary formatter */\n\tmsgformat_data_free(&mfo->mf_data TSRMLS_CC);\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"], "filenames": ["ext/intl/msgformat/msgformat_format.c"], "buggy_code_start_loc": [119], "buggy_code_end_loc": [119], "fixing_code_start_loc": [120], "fixing_code_end_loc": [122], "type": "CWE-119", "message": "ext/intl/msgformat/msgformat_format.c in PHP before 5.6.26 and 7.x before 7.0.11 does not properly restrict the locale length provided to the Locale class in the ICU library, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a MessageFormatter::formatMessage call with a long first argument.", "other": {"cve": {"id": "CVE-2016-7416", "sourceIdentifier": "cve@mitre.org", "published": "2016-09-17T21:59:08.107", "lastModified": "2018-05-04T01:29:01.550", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "ext/intl/msgformat/msgformat_format.c in PHP before 5.6.26 and 7.x before 7.0.11 does not properly restrict the locale length provided to the Locale class in the ICU library, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a MessageFormatter::formatMessage call with a long first argument."}, {"lang": "es", "value": "ext/intl/msgformat/msgformat_format.c en PHP en versiones anteriores a 5.6.26 y 7.x en versiones anteriores a 7.0.11 no restringe adecuadamente la longitud proporcionada a locale para la clase Locale en la libreria ICU, lo que permite a atacantes remotos provocar una denegaci\u00f3n de servicio (ca\u00edda de aplicaci\u00f3n) o tener otro posible impacto no especificado a trav\u00e9s de una llamada MessageFormatter::formatMessage con un primer argumento grande."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-119"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "versionEndIncluding": "5.6.25", "matchCriteriaId": "D860D77C-575A-48A1-9475-485D26EF5E41"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "DB6890AF-8A0A-46EE-AAD5-CF9AAE14A321"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "6B90B947-7B54-47F3-9637-2F4AC44079EE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "35848414-BD5D-4164-84DC-61ABBB1C4152"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "2B1F8402-8551-4F66-A9A7-81D472AB058E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "7A773E8E-48CD-4D35-A0FD-629BD9334486"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.5:*:*:*:*:*:*:*", "matchCriteriaId": "FC492340-79AF-4676-A161-079A97EC6F0C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.6:*:*:*:*:*:*:*", "matchCriteriaId": "F1C2D8FE-C380-4B43-B634-A3DBA4700A71"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "3EB58393-0C10-413C-8D95-6BAA8BC19A1B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.8:*:*:*:*:*:*:*", "matchCriteriaId": "751F51CA-9D88-4971-A6EC-8C0B72E8E22B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.9:*:*:*:*:*:*:*", "matchCriteriaId": "37B74118-8FC2-44CB-9673-A83DF777B2E6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:7.0.10:*:*:*:*:*:*:*", "matchCriteriaId": "4D56A200-1477-40DA-9444-CFC946157C69"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2016/09/15/10", "source": "cve@mitre.org", "tags": ["Mailing List"]}, {"url": "http://www.php.net/ChangeLog-5.php", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "http://www.php.net/ChangeLog-7.php", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "http://www.securityfocus.com/bid/93008", "source": "cve@mitre.org"}, {"url": "http://www.securitytracker.com/id/1036836", "source": "cve@mitre.org"}, {"url": "https://access.redhat.com/errata/RHSA-2018:1296", "source": "cve@mitre.org"}, {"url": "https://bugs.php.net/bug.php?id=73007", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking"]}, {"url": "https://github.com/php/php-src/commit/6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b?w=1", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://security.gentoo.org/glsa/201611-22", "source": "cve@mitre.org"}, {"url": "https://www.tenable.com/security/tns-2016-19", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/php/php-src/commit/6d55ba265637d6adf0ba7e9c9ef11187d1ec2f5b?w=1"}}