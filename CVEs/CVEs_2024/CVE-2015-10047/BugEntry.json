{"buggy_code": ["import utils.AccountType;\nimport utils.Pair;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.ArrayList;\n\npublic class DBManager {\n        Connection c;\n        Statement stmt;\n\n        public DBManager() {\n                try {\n                        Class.forName(\"org.postgresql.Driver\");\n                        c = DriverManager\n                                .getConnection(\"jdbc:postgresql://localhost:5432/School register\",\n                                        \"postgres\", \"kamil\");\n//                        System.out.println(\"Opened database successfully\");\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n\n        public ArrayList<String> getStudentGrades(String studentID, int subjectID) {\n                ArrayList<String> grades = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT wartosc,tematyka,nazwa from oceny_uczniow join rodzaje_aktywnosci ra on id_aktywnosci=ra.id where id_ucznia='\" + studentID + \"' and id_przedmiotu=\" + subjectID + \";\");\n                        while (rs.next()) {\n                                int value = rs.getInt(\"wartosc\");\n                                String topic = rs.getString(\"tematyka\");\n                                String name = rs.getString(\"nazwa\");\n//                                System.out.println(topic + \" \" + name + \" \" + value);\n                                grades.add(topic + \" \" + name + \" \" + value);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return grades;\n        }\n\n        public ArrayList<String> getStudentAbsences(String studentID, String fromData, String toData) {\n                ArrayList<String> absences = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT pl.data,p.nr_lekcji from nieobecnosci n join przeprowadzone_lekcje pl on n.id_lekcji=pl.id join plan_lekcji p on pl.id_lekcji=p.id where id_ucznia='\" + studentID + \"' and data>=to_date('\" + fromData + \"', 'DD.MM.YYYY') and data<=to_date('\" + toData + \"', 'DD.MM.YYYY');\");\n                        while (rs.next()) {\n                                String date = rs.getDate(\"data\").toString();\n                                int lesson = rs.getInt(\"nr_lekcji\");\n//                                System.out.println(date + \" lekcja nr: \" + lesson);\n                                absences.add(date + \" lekcja nr: \" + lesson);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return absences;\n        }\n\n        public ArrayList<String> getStudentNotes(String studentID, String fromData, String toData) {\n                ArrayList<String> notes = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT opis,data_wystawienia,czy_pozytywna from uwagi where id_ucznia='\" + studentID + \"' and data_wystawienia>=to_date('\" + fromData + \"', 'DD.MM.YYYY')\" + \" and data_wystawienia<=to_date('\" + toData + \"', 'DD.MM.YYYY');\");\n                        while (rs.next()) {\n                                String description = rs.getString(\"opis\");\n                                String date = rs.getDate(\"data_wystawienia\").toString();\n                                boolean positive = rs.getBoolean(\"czy_pozytywna\");\n//                                System.out.println(date + \" \" + positive + \": \" + description);\n                                notes.add(date + \" \" + positive + \": \" + description);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return notes;\n        }\n\n        public ArrayList<Pair<Integer,String> > getStudentSubjects(String studentID) {\n                ArrayList<Pair<Integer,String> > subjects = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT p.id,nazwa from przedmioty p join klasy k on p.id_klasy=k.id join uczniowie u on u.id_klasy=k.id where pesel='\" + studentID + \"';\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\"));\n\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                subjects.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return subjects;\n        }\n\n        public ArrayList<Pair<Integer,String> > getTeacherSubjects(int teacherID) {\n                ArrayList<Pair<Integer,String> > subjects = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT p.id,nazwa,oddzial,rok_rozpoczecia from przedmioty p join klasy k on p.id_klasy=k.id where aktywny=true and id_prowadzacego='\" + teacherID + \"';\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\") + \" klasa: \" + rs.getString(\"oddzial\") + \" \" + rs.getInt(\"rok_rozpoczecia\"));\n                                String name = rs.getString(\"nazwa\");\n                                String section = rs.getString(\"oddzial\");\n                                int startYear = rs.getInt(\"rok_rozpoczecia\");\n//                                System.out.println(name + \" klasa \" + startYear + section);\n                                subjects.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return subjects;\n        }\n\n        public ArrayList<Pair<String,String> > getSubjectStudents(int subjectID) {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from przedmioty p join klasy k on p.id_klasy=k.id join uczniowie u on u.id_klasy=k.id where p.id='\" + subjectID + \"';\");\n                        while (rs.next()) {\n                                String name = rs.getString(\"imie\");\n                                String lastname = rs.getString(\"nazwisko\");\n                                String pesel = rs.getString(\"pesel\");\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+ \" \" + rs.getString(\"nazwisko\"));\n//                                System.out.println(name + \" \" + lastname + \" \" + pesel);\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public void addStudentGrade(int subjectID, String studentID, int gradeValue, int activityID, String topic) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO oceny_uczniow(id_przedmiotu,id_ucznia,wartosc,id_aktywnosci,tematyka) values(\" + subjectID + \",\" + studentID + \",\" + gradeValue + \",\" + activityID + \",'\" + topic + \"');\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addStudentNote(String studentID, int teacherID, String note, boolean isPositive, String date) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO uwagi(id_ucznia,id_nauczyciela,opis,czy_pozytywna,data_wystawienia) values('\" + studentID + \"',\" + teacherID + \",'\" + note + \"',\" + isPositive + \",to_date('\" + date + \"', 'DD.MM.YYYY'));\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addStudentAbsence(String studentID, int lessonID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO nieobecnosci(id_ucznia,id_lekcji) values('\" + studentID + \"',\" + lessonID + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public int addCompletedLesson(String data, int teacherID, int lessonID, String topic) {\n                int i=-1;\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO przeprowadzone_lekcje(data,id_prowadzacego,id_lekcji,temat_zajec) values(to_date('\" + data + \"', 'DD.MM.YYYY'),\" + teacherID + \",\" + lessonID + \",'\" + topic + \"');\");\n//                        System.out.println(\"success\");\n                        ResultSet rs = stmt.executeQuery(\"select lastval();\");\n                        rs.next();\n                        i=rs.getInt(1);\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return i;\n        }\n\n        public void addStudent(String name, String lastname, String pesel, int phoneNumber, int classID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO uczniowie(imie,nazwisko,pesel,telefon_do_rodzica,id_klasy) values('\" + name + \"','\" + lastname + \"','\" + pesel + \"',\" + phoneNumber + \",\" + classID + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addclass(String section, int startYear, int tutorID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO klasy(oddzial,rok_rozpoczecia,id_wychowawcy) values('\" + section + \"',\" + startYear + \",\" + tutorID + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addTeacher(String name, String lastname) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO nauczyciele(imie,nazwisko) values('\" + name + \"','\" + lastname + \"');\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addSubject(String name, int classID, int teacherID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO przedmioty(nazwa,id_klasy,id_prowadzacego) values('\" + name + \"',\" + classID + \",\" + teacherID + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addScheduleLesson(int subjectID, int lessonNumber, int weekday) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO plan_lekcji(id_przedmiotu,nr_lekcji,dzien_tygodnia) values(\" + subjectID + \",\" + lessonNumber + \",\" + weekday + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void yearEnd() {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE przedmioty SET aktywny = FALSE;\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void deactivateStudent(String studentID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE uczniowie SET aktywny = false where pesel='\" + studentID + \"';\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addStudentUser(String login, String password, String pesel) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO uzytkownicy(login,haslo) values('\" + login + \"','\" + password + \"');\");\n                        stmt.executeUpdate(\"UPDATE uczniowie SET id_uzytkownika = '\" + login + \"' where pesel='\" + pesel + \"';\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public void addTeacherUser(String login, String password, int teacherID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO uzytkownicy(login,haslo) values('\" + login + \"','\" + password + \"');\");\n                        stmt.executeUpdate(\"UPDATE nauczyciele SET id_uzytkownika = '\" + login + \"' where id=\" + teacherID + \";\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public User signIn(String login, String password) {\n                //w parze pierwszy argument to string drugi boolean\n                //i true jesli to uczen, false jesli to nauczyciel\n                //null jesli login nie istnieje lub zle haslo\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT * from uzytkownicy join uczniowie on login=id_uzytkownika where login='\" + login + \"';\");\n                        while (rs.next()) {\n                                String pesel = rs.getString(\"pesel\");\n                                String pass= rs.getString(\"haslo\");\n                                if (!password.equals(pass)) return null;\n                                return new User(pesel, AccountType.STUDENT,pass);\n                        }\n                        rs = stmt.executeQuery(\"SELECT * from uzytkownicy join nauczyciele on login=id_uzytkownika where login='\" + login + \"';\");\n                        while (rs.next()) {\n                                int id = rs.getInt(\"id\");\n                                String pass= rs.getString(\"haslo\");\n                                if (!password.equals(pass)) return null;\n                                return new User(Integer.toString(id), AccountType.TEACHER,pass);\n                        }\n                        return null;\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return null;\n        }\n\n        public ArrayList<ArrayList<String> > getLessonShedule(String pesel){\n                ArrayList<ArrayList<String> > shedule = new ArrayList<ArrayList<String>>();\n                for(int i=0;i<5;i++){\n                        shedule.add(new ArrayList<String>());\n                }\n                try {\n                        for(int i=2;i<=6;i++){\n                                stmt = c.createStatement();\n                                ResultSet rs = stmt.executeQuery(\"select p.nazwa,pl.nr_lekcji from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id join uczniowie u on k.id=u.id_klasy where dzien_tygodnia = \"+i+\" and u.pesel = '\"+pesel+\"' order by pl.nr_lekcji;\");\n                                int j=0;\n                                while (rs.next()) {\n                                        int tmp = rs.getInt(\"nr_lekcji\");\n                                        while(j<tmp){ shedule.get(i-2).add(\"\"); j++;}\n                                        shedule.get(i-2).add(rs.getString(\"nazwa\"));\n                                        j++;\n                                }\n                                while(shedule.get(i-2).size()<10) shedule.get(i-2).add(\"\");\n                                rs.close();\n                                stmt.close();\n                        }\n//                        System.out.println(\"success\");\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return shedule;\n        }\n        public ArrayList<Pair<String,String> > getStudentsWithoutUser() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie where id_uzytkownika is null;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n        public ArrayList<Pair<Integer,String> > getTeachersWithoutUser() {\n                ArrayList<Pair<Integer,String> > teachers = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from nauczyciele where id_uzytkownika is null;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n        public void changeStudentPassword(String pesel,String password){\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"select id_uzytkownika from uzytkownicy uz join uczniowie on id_uzytkownika=uz.login where pesel='\" + pesel + \"';\");\n                        rs.next();\n                        String userID = rs.getString(\"id_uzytkownika\");\n                        stmt.close();\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE uzytkownicy SET haslo = '\"+password+\"' where login='\"+userID+\"';\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n        public void changeTeacherPassword(int id,String password){\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"select id_uzytkownika from uzytkownicy uz join nauczyciele on id_uzytkownika=uz.login where id=\" + id + \";\");\n                        rs.next();\n                        String userID = rs.getString(\"id_uzytkownika\");\n                        stmt.close();\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE uzytkownicy SET haslo = '\"+password+\"' where login = '\"+userID+\"';\");\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public ArrayList<Pair<Integer,String> > getActivities(){\n                ArrayList<Pair<Integer,String> > activities = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT id,nazwa from rodzaje_aktywnosci;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                activities.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return activities;\n        }\n\n        public ArrayList<Pair<Integer,String> > getLessonsByDate(String data){\n                ArrayList<Pair<Integer,String> > lessons = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n\n                        ResultSet rs = stmt.executeQuery(\"SELECT pl.id,k.oddzial,k.rok_rozpoczecia,p.nazwa,pl.nr_lekcji from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id where pl.dzien_tygodnia=extract(dow from to_date('\" + data + \"', 'DD.MM.YYYY'))+1;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),\"godzina lekcyjna: \"+rs.getInt(\"nr_lekcji\") +\" \"+ rs.getString(\"nazwa\") +\" klasa: \"+rs.getString(\"oddzial\") + \" \" + rs.getInt(\"rok_rozpoczecia\"));\n\n                                //System.out.println(pair.getX()+\" \"+pair.getY());\n                                lessons.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return lessons;\n        }\n\n        public ArrayList<Pair<String,String> > getStudentsByLesson(int lessonID){\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie u join klasy k on k.id =u.id_klasy join przedmioty p on p.id_klasy=k.id join plan_lekcji pl on pl.id_przedmiotu =p.id join przeprowadzone_lekcje p_l on pl.id=p_l.id_lekcji where p_l.id=\"+lessonID+\";\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public ArrayList<Pair<Integer,String> > getAllClasses(){\n                ArrayList<Pair<Integer,String> > classes = new ArrayList<Pair<Integer,String> >();\n                try{\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"select * from klasy\");\n                        while(rs.next()){\n                                classes.add(new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"oddzial\")+\" \"+rs.getString(\"rok_rozpoczecia\")));\n                        }\n                        stmt.close();\n                }catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return classes;\n        }\n        public ArrayList<Pair<String,String> > getAllStudents() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie where aktywny=true;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n        public ArrayList<Pair<String,String> > getAllStudentsByAdmin() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT * from uczniowie where aktywny=true;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"pesel\")+\" \"+rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\")+\" \"+rs.getString(\"telefon_do_rodzica\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public ArrayList<Pair<Integer,String> > getTeachersWithoutClass() {\n                ArrayList<Pair<Integer,String> > teachers = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from (SELECT imie,nazwisko,n.id,id_wychowawcy from nauczyciele n left join klasy k on n.id=k.id_wychowawcy) f where id_wychowawcy is null;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n                               // System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n\n        public ArrayList<Pair<Integer, String>> getAllTeachers() {\n                ArrayList<Pair<Integer, String>> teachers = new ArrayList<Pair<Integer, String>>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from nauczyciele\");\n                        while (rs.next()) {\n                                Pair<Integer, String> pair = new Pair<Integer, String>(rs.getInt(\"id\"), rs.getString(\"imie\") + \" \" + rs.getString(\"nazwisko\"));\n                                // System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n        public ArrayList<ArrayList<String> > getTeacherSchedule(int id){\n                ArrayList<ArrayList<String> > shedule = new ArrayList<ArrayList<String>>();\n                for(int i=0;i<5;i++){\n                        shedule.add(new ArrayList<String>());\n                }\n                try {\n                        for(int i=2;i<=6;i++){\n                                stmt = c.createStatement();\n                                ResultSet rs = stmt.executeQuery(\"select p.nazwa,pl.nr_lekcji,k.oddzial,k.rok_rozpoczecia from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id join nauczyciele n on n.id=p.id_prowadzacego where dzien_tygodnia = \"+i+\" and n.id = '\"+id+\"' order by pl.nr_lekcji;\");\n                                int j=0;\n                                while (rs.next()) {\n                                        int tmp = rs.getInt(\"nr_lekcji\");\n                                        while(j<tmp){ shedule.get(i-2).add(\"\"); j++;}\n                                        shedule.get(i-2).add(rs.getString(\"nazwa\")+\"(\"+rs.getInt(\"rok_rozpoczecia\")+rs.getString(\"oddzial\")+\")\");\n                                        j++;\n                                }\n                                while(shedule.get(i-2).size()<10) shedule.get(i-2).add(\"\");\n                                rs.close();\n                                stmt.close();\n                        }\n//                        System.out.println(\"success\");\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return shedule;\n        }\n\n\n        public static void main(String args[])\n        {\n                DBManager dbManager = new DBManager();\n                //String a = \"to ja a to nie ja\";\n                //String b = \"kurwa mac\";\n                //String c = \"a owszem nie\";\n                //System.out.printf(\"%-20s %s\",a,b+\"\\n\");\n                //System.out.printf(\"%-20s %s\", b, c+\"\\n\");\n                //System.out.printf(\"%-20s %s\",c,a+\"\\n\");\n                //dbManager.changeStudentPassword(\"95091673574\",\"kamil\");\n               // dbManager.getTeachersWithoutClass();\n\n\n                ArrayList<Pair<Integer,String> > sub = dbManager.getStudentSubjects(\"95091673574\");\n                for(int i=0;i<sub.size();i++) System.out.println(sub.get(i).getX()+\" \"+sub.get(i).getY());\n        }\n}\n"], "fixing_code": ["import utils.AccountType;\nimport utils.Pair;\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.regex.Pattern;\n\npublic class DBManager {\n        Connection c;\n        Statement stmt;\n\n        public DBManager() {\n                try {\n                        Class.forName(\"org.postgresql.Driver\");\n                        c = DriverManager\n                                .getConnection(\"jdbc:postgresql://localhost:5432/School register\",\n                                        \"postgres\", \"kamil\");\n//                        System.out.println(\"Opened database successfully\");\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n\n        public ArrayList<String> getStudentGrades(String studentID, int subjectID) {\n                ArrayList<String> grades = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT wartosc,tematyka,nazwa from oceny_uczniow join rodzaje_aktywnosci ra on id_aktywnosci=ra.id where id_ucznia='\" + studentID + \"' and id_przedmiotu=\" + subjectID + \";\");\n                        while (rs.next()) {\n                                int value = rs.getInt(\"wartosc\");\n                                String topic = rs.getString(\"tematyka\");\n                                String name = rs.getString(\"nazwa\");\n//                                System.out.println(topic + \" \" + name + \" \" + value);\n                                grades.add(topic + \" \" + name + \" \" + value);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return grades;\n        }\n\n        public ArrayList<String> getStudentAbsences(String studentID, String fromData, String toData) {\n                ArrayList<String> absences = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT pl.data,p.nr_lekcji from nieobecnosci n join przeprowadzone_lekcje pl on n.id_lekcji=pl.id join plan_lekcji p on pl.id_lekcji=p.id where id_ucznia='\" + studentID + \"' and data>=to_date('\" + fromData + \"', 'DD.MM.YYYY') and data<=to_date('\" + toData + \"', 'DD.MM.YYYY');\");\n                        while (rs.next()) {\n                                String date = rs.getDate(\"data\").toString();\n                                int lesson = rs.getInt(\"nr_lekcji\");\n//                                System.out.println(date + \" lekcja nr: \" + lesson);\n                                absences.add(date + \" lekcja nr: \" + lesson);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return absences;\n        }\n\n        public ArrayList<String> getStudentNotes(String studentID, String fromData, String toData) {\n                ArrayList<String> notes = new ArrayList<String>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT opis,data_wystawienia,czy_pozytywna from uwagi where id_ucznia='\" + studentID + \"' and data_wystawienia>=to_date('\" + fromData + \"', 'DD.MM.YYYY')\" + \" and data_wystawienia<=to_date('\" + toData + \"', 'DD.MM.YYYY');\");\n                        while (rs.next()) {\n                                String description = rs.getString(\"opis\");\n                                String date = rs.getDate(\"data_wystawienia\").toString();\n                                boolean positive = rs.getBoolean(\"czy_pozytywna\");\n//                                System.out.println(date + \" \" + positive + \": \" + description);\n                                notes.add(date + \" \" + positive + \": \" + description);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return notes;\n        }\n\n        public ArrayList<Pair<Integer,String> > getStudentSubjects(String studentID) {\n                ArrayList<Pair<Integer,String> > subjects = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT p.id,nazwa from przedmioty p join klasy k on p.id_klasy=k.id join uczniowie u on u.id_klasy=k.id where pesel='\" + studentID + \"';\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\"));\n\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                subjects.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return subjects;\n        }\n\n        public ArrayList<Pair<Integer,String> > getTeacherSubjects(int teacherID) {\n                ArrayList<Pair<Integer,String> > subjects = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT p.id,nazwa,oddzial,rok_rozpoczecia from przedmioty p join klasy k on p.id_klasy=k.id where aktywny=true and id_prowadzacego='\" + teacherID + \"';\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\") + \" klasa: \" + rs.getString(\"oddzial\") + \" \" + rs.getInt(\"rok_rozpoczecia\"));\n                                String name = rs.getString(\"nazwa\");\n                                String section = rs.getString(\"oddzial\");\n                                int startYear = rs.getInt(\"rok_rozpoczecia\");\n//                                System.out.println(name + \" klasa \" + startYear + section);\n                                subjects.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return subjects;\n        }\n\n        public ArrayList<Pair<String,String> > getSubjectStudents(int subjectID) {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from przedmioty p join klasy k on p.id_klasy=k.id join uczniowie u on u.id_klasy=k.id where p.id='\" + subjectID + \"';\");\n                        while (rs.next()) {\n                                String name = rs.getString(\"imie\");\n                                String lastname = rs.getString(\"nazwisko\");\n                                String pesel = rs.getString(\"pesel\");\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+ \" \" + rs.getString(\"nazwisko\"));\n//                                System.out.println(name + \" \" + lastname + \" \" + pesel);\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public boolean addStudentGrade(int subjectID, String studentID, int gradeValue, int activityID, String topic) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO oceny_uczniow(id_przedmiotu,id_ucznia,wartosc,id_aktywnosci,tematyka) values(?,?,?,?,?);\");\n                        ps.setInt(1,subjectID);\n                        ps.setString(2, studentID);\n                        ps.setInt(3,gradeValue);\n                        ps.setInt(4,activityID);\n                        ps.setString(5,topic);\n                        ps.executeUpdate();\n                        ps.close();\n                        //stmt = c.createStatement();\n                        //stmt.executeUpdate(\"INSERT INTO oceny_uczniow(id_przedmiotu,id_ucznia,wartosc,id_aktywnosci,tematyka) values(\" + subjectID + \",\" + studentID + \",\" + gradeValue + \",\" + activityID + \",'\" + topic + \"');\");\n//                        System.out.println(\"success\");\n                        //stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addStudentNote(String studentID, int teacherID, String note, boolean isPositive, String date) {\n                try {\n                        PreparedStatement ps =c.prepareStatement(\"INSERT INTO uwagi(id_ucznia,id_nauczyciela,opis,czy_pozytywna,data_wystawienia) values(?,?,?,?,to_date(?, 'DD.MM.YYYY'));\");\n                        ps.setString(1,studentID);\n                        ps.setInt(2, teacherID);\n                        ps.setString(3, note);\n                        ps.setBoolean(4, isPositive);\n                        ps.setString(5, date);\n                        ps.executeUpdate();\n                        ps.close();\n                        //stmt = c.createStatement();\n                        //stmt.executeUpdate(\"INSERT INTO uwagi(id_ucznia,id_nauczyciela,opis,czy_pozytywna,data_wystawienia) values('\" + studentID + \"',\" + teacherID + \",'\" + note + \"',\" + isPositive + \",to_date('\" + date + \"', 'DD.MM.YYYY'));\");\n//                        System.out.println(\"success\");\n                        //stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addStudentAbsence(String studentID, int lessonID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO nieobecnosci(id_ucznia,id_lekcji) values('\" + studentID + \"',\" + lessonID + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public int addCompletedLesson(String data, int teacherID, int lessonID, String topic) {\n                int i=-1;\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO przeprowadzone_lekcje(data,id_prowadzacego,id_lekcji,temat_zajec) values(to_date(?, 'DD.MM.YYYY'),?,?,?);\");\n                        ps.setString(1,data);\n                        ps.setInt(2,teacherID);\n                        ps.setInt(3,lessonID);\n                        ps.setString(4,topic);\n                        ps.executeUpdate();\n                        ps.close();\n                        stmt = c.createStatement();\n                        //stmt.executeUpdate(\"INSERT INTO przeprowadzone_lekcje(data,id_prowadzacego,id_lekcji,temat_zajec) values(to_date('\" + data + \"', 'DD.MM.YYYY'),\" + teacherID + \",\" + lessonID + \",'\" + topic + \"');\");\n//                        System.out.println(\"success\");\n                        ResultSet rs = stmt.executeQuery(\"select lastval();\");\n                        rs.next();\n                        i=rs.getInt(1);\n                        stmt.close();\n                } catch (Exception e) {\n                        return -1;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return i;\n        }\n\n        public boolean addStudent(String name, String lastname, String pesel, int phoneNumber, int classID) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO uczniowie(imie,nazwisko,pesel,telefon_do_rodzica,id_klasy) values(?,?,?,?,?);\");\n                        ps.setString(1,name);\n                        ps.setString(2,lastname);\n                        ps.setString(3,pesel);\n                        ps.setInt(4,phoneNumber);\n                        ps.setInt(5,classID);\n                        ps.executeUpdate();\n                        ps.close();\n                        //stmt = c.createStatement();\n                        //stmt.executeUpdate(\"INSERT INTO uczniowie(imie,nazwisko,pesel,telefon_do_rodzica,id_klasy) values('\" + name + \"','\" + lastname + \"','\" + pesel + \"',\" + phoneNumber + \",\" + classID + \");\");\n//                        System.out.println(\"success\");\n                        //stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addclass(String section, int startYear, int tutorID) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO klasy(oddzial,rok_rozpoczecia,id_wychowawcy) values(?,?,?);\");\n                        ps.setString(1,section);\n                        ps.setInt(2,startYear);\n                        ps.setInt(3,tutorID);\n                        ps.executeUpdate();\n                        ps.close();\n//                        stmt = c.createStatement();\n//                        stmt.executeUpdate(\"INSERT INTO klasy(oddzial,rok_rozpoczecia,id_wychowawcy) values('\" + section + \"',\" + startYear + \",\" + tutorID + \");\");\n//                        System.out.println(\"success\");\n//                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addTeacher(String name, String lastname) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO nauczyciele(imie,nazwisko) values(?,?);\");\n                        ps.setString(1,name);\n                        ps.setString(2,lastname);\n                        ps.executeUpdate();\n                        ps.close();\n//                        stmt = c.createStatement();\n//                        stmt.executeUpdate(\"INSERT INTO nauczyciele(imie,nazwisko) values('\" + name + \"','\" + lastname + \"');\");\n//                        System.out.println(\"success\");\n//                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addSubject(String name, int classID, int teacherID) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO przedmioty(nazwa,id_klasy,id_prowadzacego) values(?,?,?);\");\n                        ps.setString(1,name);\n                        ps.setInt(2,classID);\n                        ps.setInt(3,teacherID);\n                        ps.executeUpdate();\n                        ps.close();\n//                        stmt = c.createStatement();\n//                        stmt.executeUpdate(\"INSERT INTO przedmioty(nazwa,id_klasy,id_prowadzacego) values('\" + name + \"',\" + classID + \",\" + teacherID + \");\");\n//                        System.out.println(\"success\");\n//                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addScheduleLesson(int subjectID, int lessonNumber, int weekday) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"INSERT INTO plan_lekcji(id_przedmiotu,nr_lekcji,dzien_tygodnia) values(\" + subjectID + \",\" + lessonNumber + \",\" + weekday + \");\");\n//                        System.out.println(\"success\");\n                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean yearEnd() {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE przedmioty SET aktywny = FALSE;\");\n                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean deactivateStudent(String studentID) {\n                try {\n                        stmt = c.createStatement();\n                        stmt.executeUpdate(\"UPDATE uczniowie SET aktywny = false where pesel='\" + studentID + \"';\");\n                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addStudentUser(String login, String password, String pesel) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO uzytkownicy(login,haslo) values(?,?);\");\n                        ps.setString(1,login);\n                        ps.setString(2,password);\n                        ps.executeUpdate();\n                        ps.close();\n                        ps = c.prepareStatement(\"UPDATE uczniowie SET id_uzytkownika = ? where pesel=?;\");\n                        ps.setString(1,login);\n                        ps.setString(2,pesel);\n                        ps.executeUpdate();\n                        ps.close();\n//                        stmt = c.createStatement();\n//                        stmt.executeUpdate(\"INSERT INTO uzytkownicy(login,haslo) values('\" + login + \"','\" + password + \"');\");\n//                        stmt.executeUpdate(\"UPDATE uczniowie SET id_uzytkownika = '\" + login + \"' where pesel='\" + pesel + \"';\");\n//                        stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public boolean addTeacherUser(String login, String password, int teacherID) {\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"INSERT INTO uzytkownicy(login,haslo) values(?,?);\");\n                        ps.setString(1,login);\n                        ps.setString(2,password);\n                        ps.executeUpdate();\n                        ps.close();\n                        ps = c.prepareStatement(\"UPDATE nauczyciele SET id_uzytkownika = ? where id=?;\");\n                        ps.setString(1,login);\n                        ps.setInt(2, teacherID);\n                        ps.executeUpdate();\n                        ps.close();\n                        //stmt = c.createStatement();\n                        //stmt.executeUpdate(\"INSERT INTO uzytkownicy(login,haslo) values('\" + login + \"','\" + password + \"');\");\n                        //stmt.executeUpdate(\"UPDATE nauczyciele SET id_uzytkownika = '\" + login + \"' where id=\" + teacherID + \";\");\n                        //stmt.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public User signIn(String login, String password) {\n                //w parze pierwszy argument to string drugi boolean\n                //i true jesli to uczen, false jesli to nauczyciel\n                //null jesli login nie istnieje lub zle haslo\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"SELECT * from uzytkownicy join uczniowie on login=id_uzytkownika where login=?;\");\n                        ps.setString(1,login);\n                        //stmt = c.createStatement();\n                        ResultSet rs = ps.executeQuery();\n                        while (rs.next()) {\n                                String pesel = rs.getString(\"pesel\");\n                                String pass= rs.getString(\"haslo\");\n                                if (!password.equals(pass)) return null;\n                                return new User(pesel, AccountType.STUDENT,pass);\n                        }\n                        ps= c.prepareStatement(\"SELECT * from uzytkownicy join nauczyciele on login=id_uzytkownika where login=?';\");\n                        ps.setString(1,login);\n                        rs = ps.executeQuery();\n                        while (rs.next()) {\n                                int id = rs.getInt(\"id\");\n                                String pass= rs.getString(\"haslo\");\n                                if (!password.equals(pass)) return null;\n                                return new User(Integer.toString(id), AccountType.TEACHER,pass);\n                        }\n                        ps.close();\n                        return null;\n                } catch (Exception e) {\n                        e.printStackTrace();\n                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return null;\n        }\n\n        public ArrayList<ArrayList<String> > getLessonShedule(String pesel){\n                ArrayList<ArrayList<String> > shedule = new ArrayList<ArrayList<String>>();\n                for(int i=0;i<5;i++){\n                        shedule.add(new ArrayList<String>());\n                }\n                try {\n                        for(int i=2;i<=6;i++){\n                                stmt = c.createStatement();\n                                ResultSet rs = stmt.executeQuery(\"select p.nazwa,pl.nr_lekcji from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id join uczniowie u on k.id=u.id_klasy where dzien_tygodnia = \"+i+\" and u.pesel = '\"+pesel+\"' order by pl.nr_lekcji;\");\n                                int j=0;\n                                while (rs.next()) {\n                                        int tmp = rs.getInt(\"nr_lekcji\");\n                                        while(j<tmp){ shedule.get(i-2).add(\"\"); j++;}\n                                        shedule.get(i-2).add(rs.getString(\"nazwa\"));\n                                        j++;\n                                }\n                                while(shedule.get(i-2).size()<10) shedule.get(i-2).add(\"\");\n                                rs.close();\n                                stmt.close();\n                        }\n//                        System.out.println(\"success\");\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return shedule;\n        }\n        public ArrayList<Pair<String,String> > getStudentsWithoutUser() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie where id_uzytkownika is null;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n        public ArrayList<Pair<Integer,String> > getTeachersWithoutUser() {\n                ArrayList<Pair<Integer,String> > teachers = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from nauczyciele where id_uzytkownika is null;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n        public boolean changeStudentPassword(String pesel,String password){\n                try {\n                        PreparedStatement ps = c.prepareStatement(\"select id_uzytkownika from uzytkownicy uz join uczniowie on id_uzytkownika=uz.login where pesel=?;\");\n                        ps.setString(1,pesel);\n                        //stmt = c.createStatement();\n                        ResultSet rs = ps.executeQuery();\n                        rs.next();\n                        String userID = rs.getString(\"id_uzytkownika\");\n                        //stmt.close();\n                        //stmt = c.createStatement();\n                        ps= c.prepareStatement(\"UPDATE uzytkownicy SET haslo = ? where login=?;\");\n                        ps.setString(1,password);\n                        ps.setString(2,userID);\n                        ps.executeUpdate();\n                        //stmt.executeUpdate(\"UPDATE uzytkownicy SET haslo = '\"+password+\"' where login='\"+userID+\"';\");\n                        ps.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n        public boolean changeTeacherPassword(int id,String password){\n                try {\n                        //stmt = c.createStatement();\n                        PreparedStatement ps = c.prepareStatement(\"select id_uzytkownika from uzytkownicy uz join nauczyciele on id_uzytkownika=uz.login where id=?;\");\n                        ps.setInt(1,id);\n\n                        ResultSet rs = ps.executeQuery();\n                        rs.next();\n                        String userID = rs.getString(\"id_uzytkownika\");\n                        //stmt.close();\n                        //stmt = c.createStatement();\n                        ps=c.prepareStatement(\"UPDATE uzytkownicy SET haslo = '\"+password+\"' where login = '\"+userID+\"';\");\n                        ps.setString(1,password);\n                        ps.setString(2,userID);\n                        ps.executeUpdate();\n                        ps.close();\n                        return true;\n                } catch (Exception e) {\n                        return false;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n        }\n\n        public ArrayList<Pair<Integer,String> > getActivities(){\n                ArrayList<Pair<Integer,String> > activities = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT id,nazwa from rodzaje_aktywnosci;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"nazwa\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                activities.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return activities;\n        }\n\n        public ArrayList<Pair<Integer,String> > getLessonsByDate(String data){\n                ArrayList<Pair<Integer,String> > lessons = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n\n                        ResultSet rs = stmt.executeQuery(\"SELECT pl.id,k.oddzial,k.rok_rozpoczecia,p.nazwa,pl.nr_lekcji from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id where pl.dzien_tygodnia=extract(dow from to_date('\" + data + \"', 'DD.MM.YYYY'))+1;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),\"godzina lekcyjna: \"+rs.getInt(\"nr_lekcji\") +\" \"+ rs.getString(\"nazwa\") +\" klasa: \"+rs.getString(\"oddzial\") + \" \" + rs.getInt(\"rok_rozpoczecia\"));\n\n                                //System.out.println(pair.getX()+\" \"+pair.getY());\n                                lessons.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return lessons;\n        }\n\n        public ArrayList<Pair<String,String> > getStudentsByLesson(int lessonID){\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie u join klasy k on k.id =u.id_klasy join przedmioty p on p.id_klasy=k.id join plan_lekcji pl on pl.id_przedmiotu =p.id join przeprowadzone_lekcje p_l on pl.id=p_l.id_lekcji where p_l.id=\"+lessonID+\";\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public ArrayList<Pair<Integer,String> > getAllClasses(){\n                ArrayList<Pair<Integer,String> > classes = new ArrayList<Pair<Integer,String> >();\n                try{\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"select * from klasy\");\n                        while(rs.next()){\n                                classes.add(new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"oddzial\")+\" \"+rs.getString(\"rok_rozpoczecia\")));\n                        }\n                        stmt.close();\n                }catch (Exception e) {\n                        return null;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return classes;\n        }\n        public ArrayList<Pair<String,String> > getAllStudents() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,pesel from uczniowie where aktywny=true;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n        public ArrayList<Pair<String,String> > getAllStudentsByAdmin() {\n                ArrayList<Pair<String,String> > students = new ArrayList<Pair<String,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT * from uczniowie where aktywny=true;\");\n                        while (rs.next()) {\n                                Pair<String,String> pair = new Pair<String, String>(rs.getString(\"pesel\"),rs.getString(\"pesel\")+\" \"+rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\")+\" \"+rs.getString(\"telefon_do_rodzica\"));\n//                                System.out.println(pair.getX()+\" \"+pair.getY());\n                                students.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return students;\n        }\n\n        public ArrayList<Pair<Integer,String> > getTeachersWithoutClass() {\n                ArrayList<Pair<Integer,String> > teachers = new ArrayList<Pair<Integer,String> >();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from (SELECT imie,nazwisko,n.id,id_wychowawcy from nauczyciele n left join klasy k on n.id=k.id_wychowawcy) f where id_wychowawcy is null;\");\n                        while (rs.next()) {\n                                Pair<Integer,String> pair = new Pair<Integer, String>(rs.getInt(\"id\"),rs.getString(\"imie\")+\" \"+rs.getString(\"nazwisko\"));\n                               // System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n                        //e.printStackTrace();\n                        //System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n\n        public ArrayList<Pair<Integer, String>> getAllTeachers() {\n                ArrayList<Pair<Integer, String>> teachers = new ArrayList<Pair<Integer, String>>();\n                try {\n                        stmt = c.createStatement();\n                        ResultSet rs = stmt.executeQuery(\"SELECT imie,nazwisko,id from nauczyciele\");\n                        while (rs.next()) {\n                                Pair<Integer, String> pair = new Pair<Integer, String>(rs.getInt(\"id\"), rs.getString(\"imie\") + \" \" + rs.getString(\"nazwisko\"));\n                                // System.out.println(pair.getX()+\" \"+pair.getY());\n                                teachers.add(pair);\n                        }\n//                        System.out.println(\"success\");\n                        rs.close();\n                        stmt.close();\n                } catch (Exception e) {\n                        return null;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return teachers;\n        }\n        public ArrayList<ArrayList<String> > getTeacherSchedule(int id){\n                ArrayList<ArrayList<String> > shedule = new ArrayList<ArrayList<String>>();\n                for(int i=0;i<5;i++){\n                        shedule.add(new ArrayList<String>());\n                }\n                try {\n                        for(int i=2;i<=6;i++){\n                                stmt = c.createStatement();\n                                ResultSet rs = stmt.executeQuery(\"select p.nazwa,pl.nr_lekcji,k.oddzial,k.rok_rozpoczecia from plan_lekcji pl join przedmioty p on pl.id_przedmiotu = p.id join klasy k on p.id_klasy = k.id join nauczyciele n on n.id=p.id_prowadzacego where dzien_tygodnia = \"+i+\" and n.id = '\"+id+\"' order by pl.nr_lekcji;\");\n                                int j=0;\n                                while (rs.next()) {\n                                        int tmp = rs.getInt(\"nr_lekcji\");\n                                        while(j<tmp){ shedule.get(i-2).add(\"\"); j++;}\n                                        shedule.get(i-2).add(rs.getString(\"nazwa\")+\"(\"+rs.getInt(\"rok_rozpoczecia\")+rs.getString(\"oddzial\")+\")\");\n                                        j++;\n                                }\n                                while(shedule.get(i-2).size()<10) shedule.get(i-2).add(\"\");\n                                rs.close();\n                                stmt.close();\n                        }\n//                        System.out.println(\"success\");\n                } catch (Exception e) {\n                        return null;\n//                        e.printStackTrace();\n//                        System.err.println(e.getClass().getName() + \": \" + e.getMessage());\n                }\n                return shedule;\n        }\n\n        public static void main(String args[])\n        {\n                DBManager dbManager = new DBManager();\n                //String a = \"to ja a to nie ja\";\n                //String b = \"kurwa mac\";\n                //String c = \"a owszem nie\";\n                //System.out.printf(\"%-20s %s\",a,b+\"\\n\");\n                //System.out.printf(\"%-20s %s\", b, c+\"\\n\");\n                //System.out.printf(\"%-20s %s\",c,a+\"\\n\");\n                //dbManager.changeStudentPassword(\"95091673574\",\"kamil\");\n               // dbManager.getTeachersWithoutClass();\n                //System.out.println(Pattern.matches(\".*[;].*\",\"adadada;asasas\"));\n                //ArrayList<Pair<Integer,String> > sub = dbManager.getStudentSubjects(\"95091673574\");\n                //for(int i=0;i<sub.size();i++) System.out.println(sub.get(i).getX()+\" \"+sub.get(i).getY());\n        }\n}\n"], "filenames": ["src/DBManager.java"], "buggy_code_start_loc": [4], "buggy_code_end_loc": [642], "fixing_code_start_loc": [4], "fixing_code_end_loc": [770], "type": "CWE-89", "message": "A vulnerability was found in KYUUBl school-register. It has been classified as critical. This affects an unknown part of the file src/DBManager.java. The manipulation leads to sql injection. The name of the patch is 1cf7e01b878aee923f2b22cc2535c71a680e4c30. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218355.", "other": {"cve": {"id": "CVE-2015-10047", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-15T10:15:09.663", "lastModified": "2023-01-24T17:58:05.647", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in KYUUBl school-register. It has been classified as critical. This affects an unknown part of the file src/DBManager.java. The manipulation leads to sql injection. The name of the patch is 1cf7e01b878aee923f2b22cc2535c71a680e4c30. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218355."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:school-register_project:school-register:*:*:*:*:*:*:*:*", "versionEndExcluding": "2015-02-05", "matchCriteriaId": "A538A5D4-1E6D-48BC-9897-8F140F51AEED"}]}]}], "references": [{"url": "https://github.com/KYUUBl/school-register/commit/1cf7e01b878aee923f2b22cc2535c71a680e4c30", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218355", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218355", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/KYUUBl/school-register/commit/1cf7e01b878aee923f2b22cc2535c71a680e4c30"}}