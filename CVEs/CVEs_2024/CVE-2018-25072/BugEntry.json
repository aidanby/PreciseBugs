{"buggy_code": ["<%perl>\n my @langshtml;\nif( $bg )\n{\n my $langs = $dbh->selectall_arrayref(\"SELECT tag,realname FROM languages WHERE langid>0 ORDER BY tag\");\n my @langs = map { $_->[0] } @{ $langs };\n my %mapping = map { $_->[0] => $_->[1] } @{ $langs };\n\n my $format = '<a href=\"listing.html?langarg=%s%s\">%s</a>';\n foreach my $curlang (@langs)\n {\n   if($langarg eq $curlang)\n   {\n     push @langshtml, $curlang;\n     next;\n   }\n   my $vislang = $curlang;\n   $vislang =~ s/\\s+/&nbsp;/g;\n   my $html = sprintf($format,\n                      &utils::armorurl($curlang),\n\t\t      \";bg=$bg\",\n                      $vislang);\n   push @langshtml, $html;\n\n }\n\n    # If we're in best guess mode but have no language arg...\n    if( ! $langarg )\n    {\n</%perl>\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@langshtml) %>&nbsp;]</center>\n<%perl>\n\treturn;\n    }\n}\n</%perl>\n\n<%perl>\n my $types = $dbh->selectall_arrayref(\"select * from valsitypes where typeid!=0 order by descriptor\");\n my @types;\n push @types, \"all\";\n push @types, map { $_->[1] } @{$types};\n my @typeshtml;\n my $format = $bg ? '<a href=\"listing.html?bg=1;langarg='. $langarg .';type=%s%s\">%s</a>'\n\t\t: '<a href=\"listing.html?type=%s%s\">%s</a>';\n foreach my $curtype (@types) {\n   if($type eq $curtype) {\n     push @typeshtml, $curtype;\n     next;\n   }\n   my $vistype = $curtype;\n   $vistype =~ s/\\s+/&nbsp;/g;\n   my $html = sprintf($format,\n                      &utils::armorurl($curtype),\n                      defined($initial)?\";initial=$initial\":\"\",\n                      $vistype);\n   push @typeshtml, $html;\n }\n</%perl>\n\n<%method title>\nvalsi Listing\n</%method>\n\n<font size=\"+3\">valsi listings</font>\n% if( $bg )\n% {\n<p>\n    This is a \"best guess\" listing, meaning that only one of the definitions\n    for each word will be shown.The best guess is determined by compiling user votes.\n</p>\n<p>\n    As a side effect, only words that have votes registered will be shown here.\n</p>\n% }\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@typeshtml) %>&nbsp;]</center>\n% if( $bg )\n% {\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@langshtml) %>&nbsp;]</center>\n% }\n<hr />\n\n<%perl>\n my @initialletters = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'x', 'z');\n my @initialshtml;\n $format = $bg ? '<a href=\"listing.html?bg=1;langarg='. $langarg .';initial=%s%s\"><code>%s</code></a>'\n\t    : '<a href=\"listing.html?initial=%s%s\"><code>%s</code></a>';\n foreach my $curinitial (@initialletters) {\n   if($curinitial eq $initial) {\n     push @initialshtml, $curinitial;\n     next;\n   }\n   my $html = sprintf($format,\n                      $curinitial,\n                      defined($type)?\";type=\".utils::armorurl($type):\";type=all\",\n                      $curinitial);\n   push @initialshtml, $html;\n }\n</%perl>\n<center>[&nbsp;<% join(\"&nbsp;| \",@initialshtml) %>&nbsp;]\n% if(defined($type) && defined($initial)) {\n% if( $bg )\n% {\n <a href=\"listing.html?bg=1;langarg=<% $langarg %>;type=<% utils::armorurl($type) %>\">clear</a>\n% } else {\n <a href=\"listing.html?type=<% utils::armorurl($type) %>\">clear</a>\n% }\n% }\n</center>\n\n<hr />\n\n% if(!defined($type) && !defined($initial)) {\n\n% if( $bg )\n% {\n<p>Pick a word type, above.  Or you can go to <a\nhref=\"listing.html?bg=1;langarg=<% $langarg %>;type=all\">\nthe all words list</a></p>\n% } else {\n<p>Pick a word type, above.  Or you can go to <a href=\"listing.html?type=all\">\nthe all words list</a></p>\n% }\n\n%   if (defined($session{'username'})) {\n<form method=\"post\" action=\"addvalsi.html\">\n You may also add a new word:  <input type=\"text\" name=\"valsi\" />\n\n <input type=\"submit\" value=\"Add New Word\" />\n</form>\n%   } else {\n<p>If you were <a href=\"../login.html\">logged in</a> you could also add\nnew words from here.</p>\n%   }\n\n%   return;\n% }\n\n<%perl>\n my(@conditions,@args);\n if(defined($type) && $type ne \"all\") {\n   push @conditions,\n      \"typeid=(SELECT typeid FROM valsitypes WHERE descriptor=?)\";\n   push @args, $type;\n }\n if(defined($initial)) {\n   push @conditions, \"word LIKE '$initial%'\";\n }\n\n my $sql;\n\n if( $bg )\n {\n    if( defined($langarg) )\n    {\n\tmy $langid=$dbh->selectrow_array(\"SELECT langid FROM languages WHERE\n\ttag=?\", undef, $langarg);\n\tpush @conditions, \"d.langid=$langid\";\n    }\n\n    if ($#conditions >= 0) {\n\t$sql = \"SELECT v.word, d.definitionnum, d.definitionid,\n\td.langid\n\tFROM valsi v, definitions d, valsibestguesses vbg\n\tWHERE \".join(\" AND \",@conditions).\"\n\tAND v.valsiid = d.valsiid AND d.definitionid=vbg.definitionid\n\tORDER BY v.word, d.definitionnum\";\n    } else {\n\t$sql = \"SELECT v.word, d.definitionnum, d.definitionid,\n\td.langid FROM valsi v, definitions d WHERE v.valsiid != 0 AND\n\tv.valsiid = d.valsiid ORDER BY v.word, d.definitionnum\";\n    }\n } else {    \n    if ($#conditions >= 0) {\n\t$sql = \"SELECT * FROM valsi WHERE \".join(\" AND \",@conditions).\" ORDER BY word\";\n    } else {\n\t$sql = \"SELECT word FROM valsi WHERE valsiid!=0 ORDER BY word\";\n    }\n }\n my $listingquery = $dbh->prepare($sql);\n $listingquery->execute(@args);\n\n my $count = $listingquery->rows;\n my $columns = 4;\n my $percolumn = POSIX::ceil($count/$columns);\n</%perl>\n\n<table width=\"100%\"><tr>\n%   for(my $column=0; $column<$columns; $column++) {\n  <td width=\"25%\" valign=\"top\" align=\"left\">\n%      my $thiscolcount=$percolumn;\n%      while($listingquery->{Active} && defined(my $listingrow = $listingquery->fetchrow_hashref)) {\n%\tif( $bg )\n%\t{\n%\t    my $bgstring=\"?bg=1;langidarg=$listingrow->{'langid'}\";\n-&nbsp;<a href=\"<% &utils::armorurl($listingrow->{'word'}) %><%\n$bgstring %>\"><% $listingrow->{'word'} %> def #<%\n$listingrow->{'definitionnum'} %>\n</a>\n<br />\n%\t} else {\n-&nbsp;<a href=\"<% &utils::armorurl($listingrow->{'word'}) %>\"><% $listingrow->{'word'} %></a><br />\n%\t}\n%        last unless --$thiscolcount;\n%      }\n  </td>\n%   }\n</tr></table>\n\n<%init>\n our($dbh, %session);\n use POSIX;\n</%init>\n\n<%args>\n$type => undef\n$initial => undef\n$bg => undef\n$langarg => undef\n</%args>\n"], "fixing_code": ["<%perl>\n my @langshtml;\nif( $bg )\n{\n my $langs = $dbh->selectall_arrayref(\"SELECT tag,realname FROM languages WHERE langid>0 ORDER BY tag\");\n my @langs = map { $_->[0] } @{ $langs };\n my %mapping = map { $_->[0] => $_->[1] } @{ $langs };\n\n my $format = '<a href=\"listing.html?langarg=%s%s\">%s</a>';\n foreach my $curlang (@langs)\n {\n   if($langarg eq $curlang)\n   {\n     push @langshtml, $curlang;\n     next;\n   }\n   my $vislang = $curlang;\n   $vislang =~ s/\\s+/&nbsp;/g;\n   my $html = sprintf($format,\n                      &utils::armorurl($curlang),\n\t\t      \";bg=$bg\",\n                      $vislang);\n   push @langshtml, $html;\n\n }\n\n    # If we're in best guess mode but have no language arg...\n    if( ! $langarg )\n    {\n</%perl>\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@langshtml) %>&nbsp;]</center>\n<%perl>\n\treturn;\n    }\n}\n</%perl>\n\n<%perl>\n my $types = $dbh->selectall_arrayref(\"select * from valsitypes where typeid!=0 order by descriptor\");\n my @types;\n push @types, \"all\";\n push @types, map { $_->[1] } @{$types};\n my @typeshtml;\n my $format = $bg ? '<a href=\"listing.html?bg=1;langarg='. $langarg .';type=%s%s\">%s</a>'\n\t\t: '<a href=\"listing.html?type=%s%s\">%s</a>';\n foreach my $curtype (@types) {\n   if($type eq $curtype) {\n     push @typeshtml, $curtype;\n     next;\n   }\n   my $vistype = $curtype;\n   $vistype =~ s/\\s+/&nbsp;/g;\n   my $html = sprintf($format,\n                      &utils::armorurl($curtype),\n                      defined($initial)?\";initial=$initial\":\"\",\n                      $vistype);\n   push @typeshtml, $html;\n }\n</%perl>\n\n<%method title>\nvalsi Listing\n</%method>\n\n<font size=\"+3\">valsi listings</font>\n% if( $bg )\n% {\n<p>\n    This is a \"best guess\" listing, meaning that only one of the definitions\n    for each word will be shown.The best guess is determined by compiling user votes.\n</p>\n<p>\n    As a side effect, only words that have votes registered will be shown here.\n</p>\n% }\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@typeshtml) %>&nbsp;]</center>\n% if( $bg )\n% {\n<hr />\n<center>[&nbsp;<% join(\"&nbsp;| \",@langshtml) %>&nbsp;]</center>\n% }\n<hr />\n\n<%perl>\n my @initialletters = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'x', 'z');\n my @initialshtml;\n $format = $bg ? '<a href=\"listing.html?bg=1;langarg='. $langarg .';initial=%s%s\"><code>%s</code></a>'\n\t    : '<a href=\"listing.html?initial=%s%s\"><code>%s</code></a>';\n foreach my $curinitial (@initialletters) {\n   if($curinitial eq $initial) {\n     push @initialshtml, $curinitial;\n     next;\n   }\n   my $html = sprintf($format,\n                      $curinitial,\n                      defined($type)?\";type=\".utils::armorurl($type):\";type=all\",\n                      $curinitial);\n   push @initialshtml, $html;\n }\n</%perl>\n<center>[&nbsp;<% join(\"&nbsp;| \",@initialshtml) %>&nbsp;]\n% if(defined($type) && defined($initial)) {\n% if( $bg )\n% {\n <a href=\"listing.html?bg=1;langarg=<% $langarg %>;type=<% utils::armorurl($type) %>\">clear</a>\n% } else {\n <a href=\"listing.html?type=<% utils::armorurl($type) %>\">clear</a>\n% }\n% }\n</center>\n\n<hr />\n\n% if(!defined($type) && !defined($initial)) {\n\n% if( $bg )\n% {\n<p>Pick a word type, above.  Or you can go to <a\nhref=\"listing.html?bg=1;langarg=<% $langarg %>;type=all\">\nthe all words list</a></p>\n% } else {\n<p>Pick a word type, above.  Or you can go to <a href=\"listing.html?type=all\">\nthe all words list</a></p>\n% }\n\n%   if (defined($session{'username'})) {\n<form method=\"post\" action=\"addvalsi.html\">\n You may also add a new word:  <input type=\"text\" name=\"valsi\" />\n\n <input type=\"submit\" value=\"Add New Word\" />\n</form>\n%   } else {\n<p>If you were <a href=\"../login.html\">logged in</a> you could also add\nnew words from here.</p>\n%   }\n\n%   return;\n% }\n\n<%perl>\n my(@conditions,@args);\n if(defined($type) && $type ne \"all\") {\n   push @conditions,\n      \"typeid=(SELECT typeid FROM valsitypes WHERE descriptor=?)\";\n   push @args, $type;\n }\n if(defined($initial)) {\n   push @conditions, \"word LIKE ?\";\n   push @args, ($initial . \"%\");\n }\n\n my $sql;\n\n if( $bg )\n {\n    if( defined($langarg) )\n    {\n\tmy $langid=$dbh->selectrow_array(\"SELECT langid FROM languages WHERE\n\ttag=?\", undef, $langarg);\n\tpush @conditions, \"d.langid=$langid\";\n    }\n\n    if ($#conditions >= 0) {\n\t$sql = \"SELECT v.word, d.definitionnum, d.definitionid,\n\td.langid\n\tFROM valsi v, definitions d, valsibestguesses vbg\n\tWHERE \".join(\" AND \",@conditions).\"\n\tAND v.valsiid = d.valsiid AND d.definitionid=vbg.definitionid\n\tORDER BY v.word, d.definitionnum\";\n    } else {\n\t$sql = \"SELECT v.word, d.definitionnum, d.definitionid,\n\td.langid FROM valsi v, definitions d WHERE v.valsiid != 0 AND\n\tv.valsiid = d.valsiid ORDER BY v.word, d.definitionnum\";\n    }\n } else {    \n    if ($#conditions >= 0) {\n\t$sql = \"SELECT * FROM valsi WHERE \".join(\" AND \",@conditions).\" ORDER BY word\";\n    } else {\n\t$sql = \"SELECT word FROM valsi WHERE valsiid!=0 ORDER BY word\";\n    }\n }\n my $listingquery = $dbh->prepare($sql);\n $listingquery->execute(@args);\n\n my $count = $listingquery->rows;\n my $columns = 4;\n my $percolumn = POSIX::ceil($count/$columns);\n</%perl>\n\n<table width=\"100%\"><tr>\n%   for(my $column=0; $column<$columns; $column++) {\n  <td width=\"25%\" valign=\"top\" align=\"left\">\n%      my $thiscolcount=$percolumn;\n%      while($listingquery->{Active} && defined(my $listingrow = $listingquery->fetchrow_hashref)) {\n%\tif( $bg )\n%\t{\n%\t    my $bgstring=\"?bg=1;langidarg=$listingrow->{'langid'}\";\n-&nbsp;<a href=\"<% &utils::armorurl($listingrow->{'word'}) %><%\n$bgstring %>\"><% $listingrow->{'word'} %> def #<%\n$listingrow->{'definitionnum'} %>\n</a>\n<br />\n%\t} else {\n-&nbsp;<a href=\"<% &utils::armorurl($listingrow->{'word'}) %>\"><% $listingrow->{'word'} %></a><br />\n%\t}\n%        last unless --$thiscolcount;\n%      }\n  </td>\n%   }\n</tr></table>\n\n<%init>\n our($dbh, %session);\n use POSIX;\n</%init>\n\n<%args>\n$type => undef\n$initial => undef\n$bg => undef\n$langarg => undef\n</%args>\n"], "filenames": ["dict/listing.html"], "buggy_code_start_loc": [150], "buggy_code_end_loc": [151], "fixing_code_start_loc": [150], "fixing_code_end_loc": [152], "type": "CWE-89", "message": "A vulnerability classified as critical has been found in lojban jbovlaste. This affects an unknown part of the file dict/listing.html. The manipulation leads to sql injection. It is possible to initiate the attack remotely. The name of the patch is 6ff44c2e87b1113eb07d76ea62e1f64193b04d15. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217647.", "other": {"cve": {"id": "CVE-2018-25072", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-08T13:15:09.877", "lastModified": "2023-01-12T16:47:08.307", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical has been found in lojban jbovlaste. This affects an unknown part of the file dict/listing.html. The manipulation leads to sql injection. It is possible to initiate the attack remotely. The name of the patch is 6ff44c2e87b1113eb07d76ea62e1f64193b04d15. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217647."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:lojban:jbovlaste:*:*:*:*:*:*:*:*", "versionEndIncluding": "06-02-2018", "matchCriteriaId": "6A5DF520-D7A6-4E50-82D0-3C47C6558005"}]}]}], "references": [{"url": "https://github.com/lojban/jbovlaste/commit/6ff44c2e87b1113eb07d76ea62e1f64193b04d15", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217647", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217647", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lojban/jbovlaste/commit/6ff44c2e87b1113eb07d76ea62e1f64193b04d15"}}