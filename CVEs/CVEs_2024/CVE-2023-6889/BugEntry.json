{"buggy_code": ["<?php\n\n/**\n * AJAX: Search for tags.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Matteo Scaramuccia <matteo@scaramuccia.com>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2005-12-15\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Entity\\TagEntity as TagEntity;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n// Send headers\n$http = new HttpHelper();\n$http->setContentType('application/json');\n$http->addHeader();\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n\n$oTag = new Tags($faqConfig);\n\nswitch ($ajaxAction) {\n    case 'list':\n        $autoCompleteValue = Filter::filterInput(INPUT_GET, 'q', FILTER_UNSAFE_RAW);\n\n        if (!is_null($autoCompleteValue)) {\n            if (strpos($autoCompleteValue, ',')) {\n                $arrayOfValues = explode(',', $autoCompleteValue);\n                $autoCompleteValue = end($arrayOfValues);\n            }\n            $tags = $oTag->getAllTags(strtolower(trim($autoCompleteValue)), PMF_TAGS_CLOUD_RESULT_SET_SIZE, true);\n        } else {\n            $tags = $oTag->getAllTags();\n        }\n\n        if ($user->perm->hasPermission($user->getUserId(), 'edit_faq')) {\n            $i = 0;\n            $tagNames = [];\n            foreach ($tags as $tagName) {\n                ++$i;\n                if ($i <= PMF_TAGS_AUTOCOMPLETE_RESULT_SET_SIZE) {\n                    $currentTag = new stdClass();\n                    $currentTag->tagName = $tagName;\n                    $tagNames[] = $currentTag;\n                }\n            }\n\n            $http->sendJsonWithHeaders($tagNames);\n        }\n        break;\n\n    case 'update':\n        $id = Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);\n        $tag = Filter::filterInput(INPUT_POST, 'tag', FILTER_UNSAFE_RAW);\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($PMF_LANG['err_NotAuth']);\n            exit(1);\n        }\n\n        $entity = new TagEntity();\n        $entity->setId($id);\n        $entity->setName($tag);\n\n        if ($oTag->updateTag($entity)) {\n            $http->sendJsonWithHeaders($PMF_LANG['ad_entryins_suc']);\n        } else {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($PMF_LANG['ad_entryins_fail']);\n        }\n        break;\n}\n", "/**\n * JavaScript functions for all tag administration stuff\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2014-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2014-08-16\n */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  'use strict';\n\n  $('.btn-edit').on('click', function () {\n    const id = $(this).data('btn-id');\n    const span = $('span[data-tag-id=\"' + id + '\"]');\n\n    if (span.length > 0) {\n      span.replaceWith('<input name=\"tag\" class=\"form-control\" data-tag-id=\"' + id + '\" value=\"' + span.html() + '\">');\n    } else {\n      const input = $('input[data-tag-id=\"' + id + '\"]');\n      input.replaceWith('<span data-tag-id=\"' + id + '\">' + input.val().replace(/\\//g, '&#x2F;') + '</span>');\n    }\n  });\n\n  $('.tag-form').bind('submit', function (event) {\n    event.preventDefault();\n\n    const input = $('input[data-tag-id]:focus');\n    const id = input.data('tag-id');\n    const tag = input.val();\n    const csrf = $('input[name=csrf]').val();\n\n    const escape = (unsafe) => {\n      return unsafe.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\"', '&quot;').replaceAll(\"'\", '&#039;');\n    }\n\n    $.ajax({\n      url: 'index.php?action=ajax&ajax=tags&ajaxaction=update',\n      type: 'POST',\n      data: 'id=' + id + '&tag=' + tag + '&csrf=' + csrf,\n      dataType: 'json',\n      beforeSend: function () {\n        $('#pmf-admin-saving-data-indicator').html(\n          '<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Saving ...</span>'\n        );\n      },\n      success: function (message) {\n        input.replaceWith('<span data-tag-id=\"' + id + '\">' + escape(input.val().replace(/\\//g, '&#x2F;')) + '</span>');\n        $('span[data-tag-id=\"' + id + '\"]');\n        $('#pmf-admin-saving-data-indicator').html(message);\n      },\n    });\n\n    return false;\n  });\n});\n"], "fixing_code": ["<?php\n\n/**\n * AJAX: Search for tags.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Matteo Scaramuccia <matteo@scaramuccia.com>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2005-12-15\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Entity\\TagEntity as TagEntity;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n// Send headers\n$http = new HttpHelper();\n$http->setContentType('application/json');\n$http->addHeader();\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n\n$oTag = new Tags($faqConfig);\n\nswitch ($ajaxAction) {\n    case 'list':\n        $autoCompleteValue = Filter::filterInput(INPUT_GET, 'q', FILTER_UNSAFE_RAW);\n\n        if (!is_null($autoCompleteValue)) {\n            if (strpos($autoCompleteValue, ',')) {\n                $arrayOfValues = explode(',', $autoCompleteValue);\n                $autoCompleteValue = end($arrayOfValues);\n            }\n            $tags = $oTag->getAllTags(strtolower(trim($autoCompleteValue)), PMF_TAGS_CLOUD_RESULT_SET_SIZE, true);\n        } else {\n            $tags = $oTag->getAllTags();\n        }\n\n        if ($user->perm->hasPermission($user->getUserId(), 'edit_faq')) {\n            $i = 0;\n            $tagNames = [];\n            foreach ($tags as $tagName) {\n                ++$i;\n                if ($i <= PMF_TAGS_AUTOCOMPLETE_RESULT_SET_SIZE) {\n                    $currentTag = new stdClass();\n                    $currentTag->tagName = Strings::htmlentities($tagName);\n                    $tagNames[] = $currentTag;\n                }\n            }\n\n            $http->sendJsonWithHeaders($tagNames);\n        }\n        break;\n\n    case 'update':\n        $id = Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);\n        $tag = Filter::filterInput(INPUT_POST, 'tag', FILTER_UNSAFE_RAW);\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($PMF_LANG['err_NotAuth']);\n            exit(1);\n        }\n\n        $entity = new TagEntity();\n        $entity->setId($id);\n        $entity->setName($tag);\n\n        if ($oTag->updateTag($entity)) {\n            $http->sendJsonWithHeaders($PMF_LANG['ad_entryins_suc']);\n        } else {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($PMF_LANG['ad_entryins_fail']);\n        }\n        break;\n}\n", "/**\n * JavaScript functions for all tag administration stuff\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2014-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2014-08-16\n */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  'use strict';\n\n  $('.btn-edit').on('click', function () {\n    const id = $(this).data('btn-id');\n    const span = $('span[data-tag-id=\"' + id + '\"]');\n\n    if (span.length > 0) {\n      span.replaceWith('<input name=\"tag\" class=\"form-control\" data-tag-id=\"' + id + '\" value=\"' + span.html() + '\">');\n    } else {\n      const input = $('input[data-tag-id=\"' + id + '\"]');\n      input.replaceWith('<span data-tag-id=\"' + id + '\">' + escape(input.val().replace(/\\//g, '&#x2F;')) + '</span>');\n    }\n  });\n\n  $('.tag-form').bind('submit', function (event) {\n    event.preventDefault();\n\n    const input = $('input[data-tag-id]:focus');\n    const id = input.data('tag-id');\n    const tag = input.val();\n    const csrf = $('input[name=csrf]').val();\n\n    $.ajax({\n      url: 'index.php?action=ajax&ajax=tags&ajaxaction=update',\n      type: 'POST',\n      data: 'id=' + id + '&tag=' + tag + '&csrf=' + csrf,\n      dataType: 'json',\n      beforeSend: function () {\n        $('#pmf-admin-saving-data-indicator').html(\n          '<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Saving ...</span>'\n        );\n      },\n      success: function (message) {\n        input.replaceWith('<span data-tag-id=\"' + id + '\">' + escape(input.val().replace(/\\//g, '&#x2F;')) + '</span>');\n        $('span[data-tag-id=\"' + id + '\"]');\n        $('#pmf-admin-saving-data-indicator').html(message);\n      },\n    });\n\n    return false;\n  });\n\n  const escape = (unsafe) => {\n    return unsafe.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\"', '&quot;').replaceAll(\"'\", '&#039;');\n  }\n});\n"], "filenames": ["phpmyfaq/admin/ajax.tags.php", "phpmyfaq/admin/assets/js/tags.js"], "buggy_code_start_loc": [19, 27], "buggy_code_end_loc": [59, 61], "fixing_code_start_loc": [20, 27], "fixing_code_end_loc": [60, 62], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.17.", "other": {"cve": {"id": "CVE-2023-6889", "sourceIdentifier": "security@huntr.dev", "published": "2023-12-16T09:15:07.270", "lastModified": "2024-02-08T10:15:12.730", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.17."}, {"lang": "es", "value": "Cross-site Scripting (XSS): almacenadas en el repositorio de GitHub thorsten/phpmyfaq antes de la versi\u00f3n 3.1.17."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.17", "matchCriteriaId": "85E03A12-18B2-4BD1-AC03-9440332134B9"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/1037a8f012e0d9ec4bf4c8107972f6695e381392", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.com/bounties/52897778-fad7-4169-bf04-a68a0646df0c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/1037a8f012e0d9ec4bf4c8107972f6695e381392"}}