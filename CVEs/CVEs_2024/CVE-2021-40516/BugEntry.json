{"buggy_code": ["= WeeChat ChangeLog\n:author: S\u00e9bastien Helleu\n:email: flashcode@flashtux.org\n:lang: en\n:toc: left\n:docinfo1:\n\n\nThis document lists all changes for each version\n(the latest formatted version of this document can be found\nhttps://weechat.org/files/changelog/ChangeLog-devel.html[here]).\n\nFor a list of important changes that require manual action, please look at\nhttps://weechat.org/files/releasenotes/ReleaseNotes-devel.html[release notes]\n(file _ReleaseNotes.adoc_ in sources).\n\n\n[[v3.2]]\n== Version 3.2 (2021-06-13)\n\nNew features::\n\n  * core: use XDG directories by default (config, data, cache, runtime) (issue #1285)\n  * core: add option weechat.network.gnutls_ca_system, rename option weechat.network.gnutls_ca_file to weechat.network.gnutls_ca_user (now evaluated), delete and reload certificates when options are changed (issue #972)\n  * core: evaluate option weechat.plugin.path, change default value to \"${weechat_data_dir}/plugins\"\n  * core: add options to customize commands executed on system signals received (SIGHUP, SIGQUIT, SIGTERM, SIGUSR1, SIGUSR2) (issue #1595)\n  * core: quit WeeChat by default when signal SIGHUP is received in normal run, reload configuration in weechat-headless (issue #1595)\n  * core: add signals \"cursor_start\" and \"cursor_end\"\n  * api: add function crypto_hmac (issue #1628)\n  * api: add translated string in evaluation of expressions with \"translate:xxx\"\n  * api: add evaluation of WeeChat directories with \"${weechat_xxx_dir}\" in evaluated strings\n  * api: add optional key \"directory\" in hashtable options of function/modifier string_eval_path_home\n  * api: add supported prefixes \"${weechat_xxx_dir}\" in function mkdir_home\n  * api: add infos \"weechat_config_dir\", \"weechat_data_dir\", \"weechat_cache_dir\" and \"weechat_runtime_dir\"\n  * api: add support of pointer names in function string_eval_expression (direct and in hdata)\n  * api: add info \"weechat_daemon\"\n  * buflist: add option buflist.format.tls_version\n  * fifo: change default value of option fifo.file.path to \"${weechat_runtime_dir}/weechat_fifo_${info:pid}\"\n  * irc: add support of SASL mechanisms SCRAM-SHA-1, SCRAM-SHA-256 and SCRAM-SHA-512 (issue #1628)\n  * irc: add variable \"${target}\" (target nick) in commands /kick and /kickban\n  * irc: add bar item \"tls_version\", add options irc.color.item_tls_version_ok, irc.color.item_tls_version_deprecated and irc.color.item_tls_version_insecure (issue #1622)\n  * irc: evaluate server options \"sasl_key\" and \"ssl_cert\"\n  * logger: change default value of option logger.file.path to \"${weechat_data_dir}/logs\"\n  * python: add stub for WeeChat API (issue #1377)\n  * relay: evaluate option relay.network.ssl_cert_key, change default value to \"${weechat_config_dir}/ssl/relay.pem\"\n  * script: change default value of option script.scripts.path to \"${weechat_cache_dir}/script\"\n  * trigger: add variables \"${tg_shell_argc}\" and \"${tg_shell_argvN}\" in command trigger evaluated strings (issue #1624)\n  * xfer: change default value of option xfer.file.download_path to \"${weechat_data_dir}/xfer\"\n\nBug fixes::\n\n  * core: split startup commands before evaluating them (issue #1643)\n  * core: set server name when connecting to server with TLS (SNI extension) only if it's not an IPV4/IPv6 (issue #1635)\n  * core: use function mallinfo2 instead of mallinfo when available (issue #1636)\n  * core: display a warning when the file with certificate authorities is not found (option weechat.network.gnutls_ca_file)\n  * core: evaluate left/right part of comparison after split on the comparison operator in ${if:xxx} (issue #1627)\n  * core: prevent switching to start of visited buffers when jumping to next (issue #1591, issue #1592)\n  * core: recreate buflist and fset bars on /reload when WeeChat is started without configuration files (issue #1618)\n  * buflist: fix comparison of hotlists in option buflist.look.sort (issue #1621)\n  * irc: split server command before evaluating it (issue #1643)\n  * xfer: make file transfer fail when option xfer.file.auto_rename is off and file already exists (issue #1633)\n\nTests::\n\n  * core: switch from Ubuntu 18.04 to 20.04 in CI\n  * trigger: add tests on main trigger functions\n\nBuild::\n\n  * core: remove build option CA_FILE\n  * core: set WeeChat home to empty string by default in CMake and autotools\n\n[[v3.1]]\n== Version 3.1 (2021-03-07)\n\nNew features::\n\n  * core: add options weechat.look.hotlist_update_on_buffer_switch and weechat.look.read_marker_update_on_buffer_switch (issue #992, issue #993)\n  * core: add option sec.crypt.passphrase_command to read passphrase from an external program on startup, remove option sec.crypt.passphrase_file (issue #141)\n  * core: improve debug in command /eval: display more verbose debug with two \"-d\", add indentation and colors\n  * core: add options \"setvar\" and \"delvar\" in command /buffer, rename option \"localvar\" to \"listvar\"\n  * core: add buffer local variable \"completion_default_template\" (evaluated) to override the value of option \"weechat.completion.default_template\" (issue #1600)\n  * core: add option \"recreate\" in command /filter\n  * core: add raw string in evaluation of expressions with \"raw:xxx\" (issue #1611)\n  * core: add evaluation of conditions in evaluation of expressions with \"eval_cond:xxx\" (issue #1582)\n  * api: add info_hashtable \"secured_data\"\n  * irc: add info \"irc_is_message_ignored\"\n  * irc: add server option \"default_chantypes\", used when the server does not send them in message 005 (issue #1610)\n  * trigger: add variable \"${tg_trigger_name}\" in command trigger evaluated strings (issue #1580)\n\nBug fixes::\n\n  * core: fix quoted line in cursor mode (issue #1602)\n  * core: fix wrong size of the new window after vertical split (issue #1612)\n  * core: do not remove quotes in arguments of command /eval as they can be part of the evaluated expression/condition (issue #1601)\n  * core: display an error when the buffer is not found with command /command -buffer\n  * buflist: add option buflist.look.use_items to speed up display of buflist (issue #1613)\n  * irc: add bar item \"irc_nick_prefix\"\n  * irc: fix separator between nick and host in bar item \"irc_nick_host\"\n  * irc: fix completion of commands /halfop and /dehalfop\n\nDocumentation::\n\n  * do not build weechat-headless man page if headless binary is disabled (issue #1607)\n\n[[v3.0.1]]\n== Version 3.0.1 (2021-01-31)\n\nBug fixes::\n\n  * exec: fix search of command by identifier\n  * spell: fix refresh of bar item \"spell_suggest\" when the input becomes empty (issue #1586)\n  * spell: fix crash with IRC color codes in command line (issue #1589)\n\n[[v3.0]]\n== Version 3.0 (2020-11-11)\n\nNew features::\n\n  * api: add optional list of colors in infos \"nick_color\" and \"nick_color_name\" (issue #1565)\n  * api: add argument \"bytes\" in function string_dyn_concat\n  * api: add function string_color_code_size (issue #1547)\n  * exec: add option \"-oerr\" to send stderr to buffer (now disabled by default) (issue #1566)\n  * fset: add option fset.look.auto_refresh (issue #1553)\n  * irc: add pointer to irc_nick in focus of bar item \"buffer_nicklist\" (issue #1535, issue #1538)\n  * irc: allow to send text on buffers with commands /allchan, /allpv and /allserv\n  * irc: evaluate command executed by commands /allchan, /allpv and /allserv (issue #1536)\n  * script: add option script.scripts.download_enabled (issue #1548)\n  * trigger: add variable \"tg_argc\" in data set by command trigger (issue #1576)\n  * trigger: add variable \"tg_trigger_name\" in data set by all triggers (issue #1567, issue #1568)\n\nBug fixes::\n\n  * core: set \"notify_level\" to 3 if there is a highlight in the line (issue #1529)\n  * core: do not add line with highlight and tag \"notify_none\" to hotlist (issue #1529)\n  * irc: remove SASL timeout message displayed by error after successful SASL authentication (issue #1515)\n  * irc: send all channels in a single JOIN command when reconnecting to the server (issue #1551)\n  * script: do not automatically download list of scripts on startup if the file is too old (issue #1548)\n  * spell: properly skip WeeChat and IRC color codes when checking words in input (issue #1547)\n  * trigger: fix recursive calls to triggers using regex (issue #1546)\n  * trigger: add `${tg_tags} !!- ,notify_none,` in conditions of default trigger \"beep\" (issue #1529)\n\nTests::\n\n  * core: add tests on GUI line functions\n\nBuild::\n\n  * core: disable debug by default in autotools build\n  * tests: fix compilation with CppUTest \u2265 4.0\n\n[[v2.9]]\n== Version 2.9 (2020-07-18)\n\nNew features::\n\n  * core: add bar option \"color_bg_inactive\": color for window bars in inactive window (issue #732)\n  * core: add Alacritty title escape sequence support (issue #1517)\n  * core: display notify level for current buffer with command /buffer notify (issue #1505)\n  * core: count only visible nicks in bar item \"buffer_nicklist_count\", add bar items \"buffer_nicklist_count_groups\" and \"buffer_nicklist_count_all\" (issue #1506)\n  * core: set default size for input bar to 0 (automatic) (issue #1498)\n  * core: add default key kbd:[Alt+Enter] to insert a newline (issue #1498)\n  * core: add flag \"input_multiline\" in buffer (issue #984, issue #1063)\n  * core: add a scalable WeeChat logo (SVG) (issue #1454, issue #1456)\n  * core: add base 16/32/64 encoding/decoding in evaluation of expressions with \"base_encode:base,xxx\" and \"base_decode:base,xxx\"\n  * core: add case sensitive wildcard matching comparison operator (`+==*+` and `+!!*+`) and case sensitive/insensitive include comparison operators (`+==-+`,  `+!!-+`, `+=-+`, `+!-+`) in evaluation of expressions\n  * core: add default key kbd:[Alt+Shift+N] to toggle nicklist bar\n  * core: add command line option \"--stdout\" in weechat-headless binary to log to stdout rather than ~/.weechat/weechat.log (issue #1475, issue #1477)\n  * core: reload configuration files on SIGHUP (issue #1476)\n  * api: add pointer \"_bar_window\" in hashtable sent to hook focus callback (issue #1450)\n  * api: add info_hashtable \"focus_info\" (issue #1245, issue #1257)\n  * api: rename function hook_completion_get_string to completion_get_string and hook_completion_list_add to completion_list_add\n  * api: add functions completion_new, completion_search and completion_free\n  * api: add hdata \"completion_word\"\n  * buflist: add default key kbd:[Alt+Shift+B] to toggle buflist\n  * buflist: add options enable/disable/toggle in command /buflist\n  * buflist: evaluate option buflist.look.sort so that sort can be customized for each of the three buflist bar items (issue #1465)\n  * irc: add support of UTF8MAPPING (issue #1528)\n  * irc: display account messages in buffers (issue #1250)\n  * python: add WeeChat sharedir python directory to PYTHONPATH (issue #1537)\n  * relay: increase default limits for IRC backlog options\n  * relay: add command \"handshake\" in weechat relay protocol and nonce to prevent replay attacks, add options relay.network.password_hash_algo, relay.network.password_hash_iterations, relay.network.nonce_size (issue #1474)\n  * relay: add command \"completion\" in weechat relay protocol to perform a completion on a string at a given position (issue #1484)\n  * relay: add option relay.network.auth_timeout\n  * relay: update default colors for client status\n  * relay: add status \"waiting_auth\" in irc and weechat protocols (issue #1358)\n  * trigger: evaluate arguments of command when the trigger is created (issue #1472)\n\nBug fixes::\n\n  * core: fix command /window scroll_beyond_end when buffer has fewer lines than chat height (issue #1509)\n  * core: force buffer property \"time_for_each_line\" to 0 for buffers with free content (issue #1485)\n  * core: don't collapse consecutive newlines in lines displayed before the first buffer is created\n  * core: don't remove consecutive newlines when pasting text (issue #1500)\n  * core: don't collapse consecutive newlines in bar content (issue #1500)\n  * core: fix WEECHAT_SHAREDIR with CMake build (issue #1461)\n  * core: fix memory leak in calculation of expression on FreeBSD (issue #1469)\n  * core: fix resize of a bar when its size is 0 (automatic) (issue #1470)\n  * api: fix use of pointer after free in function key_unbind\n  * api: replace plugin and buffer name by buffer pointer in argument \"modifier_data\" sent to weechat_print modifier callback (issue #42)\n  * buflist: add \"window\" pointer in bar item evaluation only if it's not NULL (if bar type is \"window\")\n  * exec: fix use of same task id for different tasks (issue #1491)\n  * fifo: fix errors when writing in the FIFO pipe (issue #713)\n  * guile: enable again /guile eval (issue #1514)\n  * irc: use new default chantypes \"#&\" when the server does not send it\n  * irc: add support of optional server in info \"irc_is_nick\", fix check of nick using UTF8MAPPING isupport value (issue #1528)\n  * irc: fix add of ignore with flags in regex, display full ignore mask in list of ignores (issue #1518)\n  * irc: do not remove spaces at the end of users messages received (issue #1513)\n  * irc: fix realname delimiter color in WHO/WHOX response (issue #1497)\n  * irc: reuse a buffer with wrong type \"channel\" when a private message is received (issue #869)\n  * python: fix crash when invalid UTF-8 string is in a WeeChat hashtable converted to a Python dict (issue #1463)\n  * relay: add missing field \"notify_level\" in message \"_buffer_line_added\" (issue #1529)\n  * relay: fix slow send of data to clients when SSL is enabled\n  * trigger: only return trigger's return code when condition evaluates to true (issue #592)\n  * trigger: fix truncated trigger command with commands /trigger input|output|recreate\n  * trigger: do not hide values of options with /set command in cmd_pass trigger\n\nDocumentation::\n\n  * add includes directory\n  * merge 53 auto-generated files into 11 files\n  * fix broken literal blocks in Japanese docs with Firefox (issue #1466)\n\nTests::\n\n  * core: add CI with GitHub Actions, move codecov.io upload to GitHub Actions\n  * core: switch to Ubuntu Bionic on Travis CI, use pylint3 to lint Python scripts\n  * core: run tests on plugins only if the plugins are enabled and compiled\n  * irc: add tests on IRC color and channel functions\n\nBuild::\n\n  * javascript: disable build by default and remove Debian packaging of JavaScript plugin (issue #360)\n  * core: make GnuTLS a required dependency\n  * core: fix build with CMake 3.17.0\n  * core: fix build with cygport on Cygwin\n\n[[v2.8]]\n== Version 2.8 (2020-03-29)\n\nNew features::\n\n  * core: add variable \"old_full_name\" in buffer, set during buffer renaming (issue #1428)\n  * core: add debug option \"-d\" in command /eval (issue #1434)\n  * api: add functions crypto_hash and crypto_hash_pbkdf2\n  * api: add info \"auto_connect\" (issue #1453)\n  * api: add info \"weechat_headless\" (issue #1433)\n  * buflist: add pointer \"window\" in bar item evaluation\n  * irc: add support of fake servers (no I/O, for testing purposes)\n  * relay: accept hash of password in init command of weechat protocol with option \"password_hash\" (PBKDF2, SHA256, SHA512)\n  * relay: reject client with weechat protocol if password or TOTP is received in init command but not set in WeeChat (issue #1435)\n\nBug fixes::\n\n  * core: fix memory leak in completion\n  * core: flush stdout/stderr before forking in hook_process function (issue #1441)\n  * core: fix evaluation of condition with nested \"if\" (issue #1434)\n  * irc: split AUTHENTICATE message in 400-byte chunks (issue #1459)\n  * irc: copy temporary server flag in command /server copy\n  * irc: add nick changes in the hotlist (except self nick change)\n  * irc: case-insensitive comparison on incoming CTCP command, force upper case on CTCP replies (issue #1439)\n  * irc: fix memory leak when the channel topic is changed\n  * logger: fix crash when logging is disabled on a buffer and the log file was deleted in the meanwhile, when option logger.file.info_lines is on (issue #1444)\n  * php: fix crash when loading script with PHP 7.4 (issue #1452)\n  * relay: update buffers synchronization when buffers are renamed (issue #1428)\n  * script: fix memory leak in read of script repository file if it has invalid content\n  * script: fix unexpected display of scripts list in buffer with command /script list -i\n  * xfer: send signal \"xfer_ended\" after the received file has been renamed (issue #1438)\n\nTests::\n\n  * scripts: fix generation of test scripts with Python 3.8\n  * core: add tests on function secure_derive_key\n  * core: add tests on functions util_get_time_diff and util_file_get_content\n  * irc: add tests on IRC protocol functions and callbacks\n\nBuild::\n\n  * core: fix Cygwin build\n  * guile: add detection of Guile 3.0.0 (issue #1442)\n  * irc: fix build with GnuTLS < 3.1.0 (issue #1431)\n  * php: add detection of PHP 7.4\n  * ruby: add detection of Ruby 2.7 (issue #1455)\n\n[[v2.7.1]]\n== Version 2.7.1 (2020-02-20)\n\nBug fixes::\n\n  * irc: fix crash when a new message 005 is received with longer nick prefixes (CVE-2020-9760)\n  * irc: fix crash when receiving a malformed message 352 (who) (CVE-2020-9759)\n  * irc: fix crash when receiving a malformed message 324 (channel mode) (CVE-2020-8955)\n\n[[v2.7]]\n== Version 2.7 (2019-12-08)\n\nNew features::\n\n  * core: add option weechat.look.nick_color_hash_salt to shuffle nick colors (issue #635)\n  * core: add different icons sizes (16x16 to 512x512) (issue #1347)\n  * core: add file weechat.desktop\n  * core: add reverse of string for screen in evaluation of expressions with \"revscr:xxx\"\n  * core: add length of string (number of chars and on screen) in evaluation of expressions with \"length:xxx\" and \"lengthscr:xxx\"\n  * core: add calculation of expression in evaluation of expressions with \"calc:xxx\" (issue #997)\n  * core: add optional default path (evaluated) in completion \"filename\"\n  * core: add support of modifiers in evaluation of expressions with \"modifier:name,data,string\"\n  * api: add modifier \"color_encode_ansi\" (issue #528)\n  * api: add modifier \"eval_path_home\"\n  * irc: add filters on raw buffer (issue #1000)\n  * irc: add option irc.look.display_pv_warning_address to display a warning in private buffer if the remote nick address has changed (issue #892)\n  * irc: add server option \"ssl_password\" (issue #115, issue #1416)\n  * irc: add \"user\" in output of irc_message_parse (issue #136)\n  * irc: add options irc.color.message_kick and irc.color.reason_kick (issue #683, issue #684)\n  * logger: add option logger.file.color_lines (issue #528, issue #621)\n  * script: add options \"-ol\" and \"-il\" in command \"/script list\" to send translated string with list of scripts loaded, display \"No scripts loaded\" if no scripts are loaded\n  * xfer: add option xfer.file.download_temporary_suffix with default value \".part\" (issue #1237)\n\nBug fixes::\n\n  * core: set buffer name, short name and title only if the value has changed\n  * core: fix scrolling up in bare mode when switched to bare mode at the top of the buffer (issue #899, issue #978)\n  * core: optimize load of configuration files\n  * core: fix window separators not respecting window splits (issue #630)\n  * core: fix cursor mode info when prefix_align is none and with words split across lines (issue #610, issue #617, issue #619)\n  * core: add support of reverse video in ANSI color codes\n  * core: fixed segfault during excessive evaluation in function string_repeat (issue #1400)\n  * buflist: fix extra spaces between buffers when conditions are used to hide buffers (regression introduced in version 2.6) (issue #1403)\n  * irc: do not automatically open a channel with name \"0\" (issue #1429)\n  * irc: remove option irc.network.channel_encode, add server option \"charset_message\" to control which part of the IRC message is decoded/encoded to the target charset (issue #832)\n  * irc: use path from option xfer.file.upload_path to complete filename in command \"/dcc send\" (issue #60)\n  * logger: fix write in log file if it has been deleted or renamed (issue #123)\n  * python: send \"bytes\" instead of \"str\" to callbacks in Python 3 when the string is not UTF-8 valid (issue #1389)\n  * relay: send message \"_buffer_title_changed\" to clients only when the title is changed\n  * xfer: fix memory leak when a xfer is freed and when the plugin is unloaded\n\nTests::\n\n  * core: add tests on GUI color functions\n\nBuild::\n\n  * core: fix build on Haiku (issue #1420)\n  * core: fix build on Alpine\n  * core: remove file FindTCL.cmake\n  * core: display an error on missing dependency in CMake (issue #916, issue #956)\n  * debian: disable Javascript plugin on Debian Sid and Ubuntu Eoan\n  * debian: build with Guile 2.2\n  * guile: add support of Guile 2.2, disable /guile eval (issue #1098)\n  * python: add detection of Python 3.8\n\n[[v2.6]]\n== Version 2.6 (2019-09-08)\n\nNew features::\n\n  * core: add support of 32767 color pairs (issue #1343, issue #1345)\n  * core: add option \"close\" in command /window (issue #853)\n  * api: add infos \"term_colors\" and \"term_color_pairs\"\n  * api: add function list_user_data (issue #666)\n  * api: add argument \"strip_items\" in function string_split\n  * buflist: add infolist \"buflist\" with list of buffer pointers (issue #1375)\n  * exec: evaluate option exec.command.shell, change default value to \"${env:SHELL}\" (issue #1356)\n  * fset: add filters \"h=xxx\" and \"he=xxx\" to filter options by description (translated or in English)\n  * irc: make command char optional in server option \"command\" (issue #615)\n  * irc: add variables \"user_max_length\" and \"host_max_length\" in server structure (issue #1387)\n\nBug fixes::\n\n  * core: use fixed-width integer for computing nick and hashtable DJB2 key hashes, add values \"djb2_32\" and \"sum_32\" for option weechat.look.nick_color_hash (issue #1394)\n  * core: create or update option weechat.notify.xxx when function buffer_set is called with \"notify\" property (issue #1390)\n  * core: fix memory leak in case of error when building content of bar item for display (issue #1384)\n  * core: send command line parameter to plugins only if the name starts with the plugin name followed by a colon\n  * core: auto disable upgrade process (command line option \"--upgrade\") if the file weechat.upgrade is not found\n  * core: replace newlines by spaces in argument \"completion\" of function hook_command (issue #538)\n  * core: replace char \",\" by \"~\" in color codes to separate foreground from background (issue #1264)\n  * alias: remove default aliases /AME and /AMSG (issue #1355)\n  * buflist: use extra variables in option buflist.look.display_conditions (issue #1393)\n  * irc: fix parsing of messages 346 (invite list), 348 (exception list), 367 (ban list) and 728 (quiet list) when there is a colon before the timestamp (issue #1396)\n  * irc: fix memory leak when removing a server\n  * irc: fix length of user/nick/host in split of messages (issue #1387)\n  * irc: quote NICK command argument sent to the server only if there's a \":\" in the nick (issue #1376, issue #1319)\n  * irc: return all arguments in the PONG response to a PING (issue #1369)\n  * irc: disable server reconnection when the server buffer is closed (issue #236)\n  * irc: strip spaces at beginning/end of addresses in server option \"addresses\" (issue #195)\n  * irc: fix display of enabled/disabled client capabilities received in command CAP ACK (issue #151)\n  * ruby: fix conversion of big integers on 32bit architecture (issue #1395)\n\nTests::\n\n  * irc: add tests on IRC ignore, message and nick functions\n\nBuild::\n\n  * core: fix compilation with autotools on FreeBSD 12.0\n  * debian: disable Javascript plugin on Debian Buster/Bullseye (issue #1374)\n  * python: compile with Python 3 by default\n  * python: use pkg-config to detect Python (issue #1382)\n\n[[v2.5]]\n== Version 2.5 (2019-06-06)\n\nNew features::\n\n  * core: use getopt to parse command line arguments\n  * core: add option weechat.look.prefix_same_nick_middle (issue #930, issue #931)\n  * core: add option weechat.look.buffer_time_same (issue #1127)\n  * core: use seconds by default in /repeat interval, allow unit for the interval\n  * core: allow text in addition to a command in command /repeat\n  * core: add option \"addreplace\" in command /filter (issue #1055, issue #1312)\n  * api: return allocated string in hook_info callback and function info_get\n  * api: replace argument \"keep_eol\" by \"flags\" in function string_split (issue #1322)\n  * api: add function command_options (issue #928)\n  * api: add function string_match_list\n  * irc: add bar items \"irc_nick\", \"irc_host\" and \"irc_nick_host\"\n  * irc: add variable \"host\" in server structure\n  * relay: add support of UNIX socket (issue #733, issue #1333)\n  * relay: add option relay.weechat.commands (issue #928)\n  * script: use SHA-512 instead of MD5 for script checksum\n  * spell: rename aspell plugin to spell (issue #1299)\n  * trigger: add hooks \"info\" and \"info_hashtable\"\n  * xfer: rename option xfer.network.speed_limit to xfer.network.speed_limit_send, add option xfer.network.speed_limit_recv (issue #269)\n\nBug fixes::\n\n  * core: don't execute command scheduled by /repeat and /wait if the buffer does not exist any more\n  * core: set max length to 4096 for /secure passphrase (issue #1323)\n  * core: refilter only affected buffers on filter change (issue #1309, issue #1311)\n  * fset: fix slow refresh of fset buffer during /reload (issue #1313)\n  * irc: fix parsing of MODE command when there are colons after the first mode argument (issue #1296)\n  * irc: fix memory leak in infos \"irc_server_isupport\" and \"irc_server_isupport_value\"\n  * irc: fix length of string for SHA-512, SHA-256 and SHA-1 in help on ssl_fingerprint option\n  * irc: display an error with /allchan -current or /allpv -current if the current buffer is not an irc buffer (issue #1325)\n  * irc: fix update of channels modes with arguments when joining a channel (issue #1324)\n  * irc: quote NICK command argument sent to the server (issue #1319)\n  * php: fix memory leak in functions string_eval_expression, string_eval_path_home, key_bind, hook_process_hashtable, hook_hsignal_send, info_get_hashtable, hdata_update\n  * relay: fix crash when a weechat relay client reloads the relay plugin with /plugin reload relay (issue #1327)\n  * spell: fix detection of nick followed by the nick completer (issue #1306, issue #1307)\n  * trigger: fix split of hook arguments (issue #1322)\n\nTests::\n\n  * core: add tests on function util_signal_search\n\nBuild::\n\n  * core: fix value of libdir in file weechat.pc (issue #1341, issue #1342)\n  * core: fix generation of man page weechat-headless with autotools\n  * core: add CMake option \"ENABLE_CODE_COVERAGE\" to compile with code coverage options (CMake \u2265 3.0 is now required)\n  * core: fix compilation on Mac OS (issue #1308)\n  * lua: add detection of Lua 5.3 with autotools\n  * ruby: add detection of Ruby 2.6 (issue #1346)\n  * tests: fix compilation of tests on FreeBSD\n\n[[v2.4]]\n== Version 2.4 (2019-02-17)\n\nNew features::\n\n  * core: do not automatically add a space when completing \"nick:\" at the beginning of command line (the space can be added in option weechat.completion.nick_completer)\n  * core: add default keys kbd:[Ctrl+F11]/kbd:[Ctrl+F12] to scroll up/down one page in nicklist (same action as kbd:[F11]/kbd:[F12])\n  * core: add command line option \"-t\" (or \"--temp-dir\") to create a temporary WeeChat home (deleted on exit)\n  * api: add functions string_base_encode and string_base_decode, remove functions string_encode_base64 and string_decode_base64\n  * api: add support of Time-based One-Time Password (TOTP), add infos \"totp_generate\" and \"totp_validate\"\n  * buflist: add default keys kbd:[Ctrl+F1]/kbd:[Ctrl+F2] to scroll up/down one page in buflist (same action as kbd:[F1]/kbd:[F2])\n  * buflist: add variable ${number2}, always set with the indented buffer number\n  * exec: add option exec.command.shell to customize the shell used with /exec -sh\n  * relay: add support of close frame in websocket connection (issue #1281)\n  * relay: add support of Time-based One-Time Password (TOTP) as second authentication factor in weechat protocol\n\nBug fixes::\n\n  * core: fix compilation of empty regular expression (not allowed on FreeBSD)\n  * core: fix forced highlight on messages sent to other buffers (issue #1277)\n  * aspell: look for suggestions only if the misspelled word has changed (issue #1175)\n  * buflist: add alternate key codes for kbd:[F1]/kbd:[F2] and kbd:[Alt+F1]/kbd:[Alt+F2] (compatibility with terminals)\n  * buflist: fix warning displayed when script buffers.pl is loaded (issue #1274)\n  * irc: fix parsing of whois messages in notify\n  * irc: fix parsing of MODE, 341 (invite) and CHGHOST commands when there are colons (issue #1296)\n  * irc: return IRC color code instead of WeeChat color code when decoding a too short ANSI color sequence\n  * irc: fix encoding of italic attribute when colors are removed\n  * irc: fix parsing of \"time\" message tag on FreeBSD (issue #1289)\n  * relay: fix crash on /upgrade when the real IP is not set (issue #1294)\n  * relay: fix memory leak in connection of client\n\nTests::\n\n  * core: fix UTF-8 and evaluation tests on FreeBSD\n  * irc: add tests on IRC configuration and protocol functions\n\nBuild::\n\n  * core: add C compiler flag \"-fsigned--char\" to force \"char\" data type to be always signed (issue #1277)\n\n[[v2.3]]\n== Version 2.3 (2018-10-21)\n\nNew features::\n\n  * core: add repeat of string in evaluation of expressions with \"repeat:count,string\" (issue #958)\n  * core: allow specifying buffer number/name for /buffer localvar (issue #1259)\n  * core: allow multiple arguments in command \"/buffer close\"\n  * core: allow multiple options \"-r\" (or \"--run-command\") in command line arguments (issue #1248)\n  * core: add command line option \"-P\" (or \"--plugins\") to customize the plugins to load at startup\n  * core: allow partial buffer name in command \"/buffer close\" (issue #1226)\n  * api: add function hook_line (issue #66)\n  * irc: display a warning when the value of option irc.server.xxx.autojoin is set to an invalid value\n  * relay: add real IP in client description (issue #1256)\n  * trigger: allow creation of temporary variables with the regex\n  * trigger: add hook \"line\"\n\nBug fixes::\n\n  * core: fix evaluation of nested ternary operators (issue #1263)\n  * core: fix evaluation of condition when the left operand is an empty string\n  * core: fix string evaluation with regex replacement when the string is empty\n  * core: fix check of tags in lines (command /filter and hook_print)\n  * core: fix clear of completion item in case of partial completion (issue #1162)\n  * core: send signal \"key_pressed\" for mouse code only if the string is UTF-8 valid (issue #1220)\n  * api: fix memory leak in function string_split\n  * lua: fix return code of mkdir functions in case of error (issue #1267)\n  * scripts: fix duplicated lines in output of script eval (python, perl, ruby, lua and guile)\n\nTests::\n\n  * core: add tests on line and hook functions\n\nBuild::\n\n  * php: add detection of PHP 7.3\n\n[[v2.2]]\n== Version 2.2 (2018-07-14)\n\nNew features::\n\n  * core: change default value of option weechat.look.hotlist_add_conditions to check connected relay clients via weechat protocol (issue #1206)\n  * core: add reverse of string in evaluation of expressions with \"rev:xxx\" (issue #1200)\n  * core: send buffer pointer (when possible) in signal \"hotlist_changed\" (issue #1133)\n  * core: add support of list options in curl (issue #826, issue #219)\n  * core: allow merge of buffers by name in command /buffer (issue #1108, issue #1159)\n  * api: add function hashtable_add_from_infolist\n  * api: add function string_format_size in scripting API\n  * irc: add nick, host and log tags in message displayed in private buffer when the nick comes back on the server (issue #1221)\n  * irc: add support for IRCv3.2 chghost, add options irc.look.smart_filter_chghost and irc.color.message_chghost (issue #640)\n  * irc: add support for IRCv3.2 invite-notify (issue #639)\n  * irc: add support for IRCv3.2 Client Capability Negotiation (issue #586, issue #623)\n  * irc: display current nick on connected servers in output of /server list|listfull (issue #1193)\n  * irc: add option \"-server\" in command /list (issue #1165)\n  * irc: add indexed ban list, add completion for /unban and /unquiet (issue #597, task #11374, task #10876)\n  * relay: add filtering on protocol in info \"relay_client_count\"\n  * trigger: hide password in command \"/msg nickserv set password\"\n  * xfer: add option xfer.network.send_ack (issue #1171)\n\nBug fixes::\n\n  * core: fix TLS handshake failure on server connection when there are multiple addresses in the server (issue #1196)\n  * core: count number of chars instead of bytes for suffix in function string_cut\n  * core: fix delete of previous/next word (keys kbd:[Ctrl+w] and kbd:[Alt+d]) (issue #1195)\n  * core: fix infinite loop in evaluation of strings (issue #1183)\n  * core: change default value of option weechat.look.window_title from \"WeeChat ${info:version}\" to empty string (issue #1182)\n  * buflist: fix crash when setting the option buflist.look.signals_refresh with a list of signals\n  * fset: fix memory leak when switching the format with kbd:[Ctrl+x]\n  * fset: fix truncation of option values when the length is greater than 4096 (issue #1218)\n  * fset: fix crash when applying filters after closing the fset buffer (issue #1204)\n  * irc: display message 354 (WHOX) received with missing parameters (issue #1212)\n  * irc: always set nick away status on WHO response (sent manually or automatically with server option \"away_check\")\n  * irc: fix a crash when calling the function hdata_string on the \"prefix\" variable in the nick\n  * irc: fix split of messages when server option \"split_msg_max_length\" is set to 0 (no split) (issue #1173)\n  * irc: send whole IRC message including IRCv3 tags in the signals irc_in, irc_in2, irc_raw_in and irc_raw_in2 (issue #787)\n  * irc: fix memory leak when receiving a message with IRCv3 tags\n  * guile: fix memory leak in 7 functions returning allocated strings\n  * lua: fix macros used to return values\n  * php: fix return code of functions config_write_option and config_write_line\n  * php: fix memory leak in 72 functions returning allocated strings\n  * python: fix crash when loading a script with Python >= 3.7 (issue #1219)\n  * relay: fix socket creation for relay server on OpenBSD (issue #1213)\n  * ruby: fix memory leak in 7 functions returning allocated strings\n  * script: fix memory leak in case of invalid XML content in list of scripts\n  * scripts: fix memory leak in hook_info callback\n  * scripts: fix return value of hook_infolist callback (pointer instead of string)\n  * scripts: return long integer instead of string in function infolist_time\n  * xfer: set option TCP_NODELAY on socket when receiving a file via DCC (issue #1171)\n\nDocumentation::\n\n  * core: split man pages weechat and weechat-headless\n\nTests::\n\n  * core, scripts: add tests on infolists\n\nBuild::\n\n  * core: fix build with CMake and Ninja\n  * debian: add package weechat-headless with the headless binary and its man page\n  * javascript: fix compilation of javascript plugin with autotools on some Linux distributions (issue #1208)\n  * python: add detection of Python 3.7\n\n[[v2.1]]\n== Version 2.1 (2018-03-18)\n\nNew features::\n\n  * core: add binary weechat-headless to run WeeChat without interface, with optional daemon mode (command line option \"--daemon\") (issue #1120)\n  * core: add options \"-newbuffer\", \"-free\" and \"-switch\" in command /print (issue #1113)\n  * core: add option \"-y\" in command /print, add support of buffers with free content\n  * core: add option \"add\" in command /buffer (issue #1113)\n  * core: add option weechat.completion.partial_completion_templates to force partial completion on specific templates\n  * api: add hashtable with variables in plugin structure\n  * api: add time in info \"date\" (WeeChat compilation date/time) (issue #1138)\n  * irc: add server option \"split_msg_max_length\"\n  * irc: allow ${irc_server.xxx} and ${server} in server evaluated options (issue #1144)\n  * logger: add option logger.file.fsync (issue #1145)\n  * logger: add option logger.look.backlog_conditions (issue #1132)\n  * script: change default value of option script.look.sort from \"p,n\" to \"i,p,n\"\n  * scripts: add configuration file for each script plugin (_python.conf_, _perl.conf_, ...)\n  * scripts: add \"eval\" option in script commands and info \"xxx_eval\" (python, perl, ruby, lua and guile) (issue #128)\n  * scripts: add infos \"xxx_interpreter\" and \"xxx_version\" in script plugins (issue #1075)\n  * scripts: add option \"version\" in script commands (issue #1075)\n  * scripts: display the script name in stdout/stderr output from scripts\n\nBug fixes::\n\n  * core: fix regression on execution of hook_print callbacks (introduced in version 2.0)\n\nBuild::\n\n  * ruby: add detection of Ruby 2.5 (issue #1122)\n\n[[v2.0.1]]\n== Version 2.0.1 (2017-12-20)\n\nBug fixes::\n\n  * python: fix arguments status/gnutls_rc/sock in hook_connect callback\n  * python: fix argument fd in hook_fd callback\n\n[[v2.0]]\n== Version 2.0 (2017-12-03)\n\nNew features::\n\n  * core: add flag \"input_get_empty\" in buffer\n  * core: add signals \"buffer_filters_enabled\" and \"buffer_filters_disabled\"\n  * core: support loading of plugins from path in environment variable \"WEECHAT_EXTRA_LIBDIR\" (issue #971, issue #979)\n  * core: make value optional in command \"/buffer set\" (issue #746, issue #1088)\n  * core: allow floating point and hexadecimal numbers in comparison of evaluated values\n  * core: add option weechat.look.save_config_with_fsync (issue #1083)\n  * api: add support of prefix \"quiet:\" in function key_unbind to quietly remove keys\n  * api: add argument \"recurse_subdirs\" in function exec_on_files\n  * alias: add infolist \"alias_default\" (list of default aliases)\n  * buflist: add two new bar items (\"buflist2\" and \"buflist3\") using the same format configuration options (issue #990)\n  * buflist: add option buflist.look.add_newline (issue #1027)\n  * fset: new plugin \"fset\" (fast set of WeeChat and plugins options) (issue #584)\n  * php: new plugin \"php\" (issue #909)\n  * script: add local variable \"filter\" in the script buffer (issue #1037)\n\nBug fixes::\n\n  * core: do not change the chat prefix size when a filtered line is added (issue #1092)\n  * core: fix display of nicks in nicklist when they are in a group with sub-groups (issue #1079)\n  * core, plugins: check return code of strftime function\n  * core: fix cast of time_t (to \"long long\" instead of \"long\") (issue #1051)\n  * core: call the config hook when options are renamed or removed\n  * api: change type of arguments status/gnutls_rc/sock in hook_connect callback from string to integer (in scripts)\n  * api: change type of argument fd in hook_fd callback from string to integer (in scripts)\n  * buflist: remove recursive evaluation of extra variables (issue #1060)\n  * guile: return integer (0/1) instead of boolean in API functions\n  * guile: fix return value of static strings in API functions\n  * irc: do not clear nicklist when joining an already joined channel if the option irc.look.buffer_open_before_join is on (issue #1081)\n  * irc: fix CTCP PING reply when the option irc.ctcp.ping is set to non-empty value\n  * lua: fix boolean return value (as integer) in API functions\n  * relay: fix parsing of CAP command without arguments in irc protocol, send ACK only if all capabilities received are OK and NAK otherwise (issue #1040)\n\nTests::\n\n  * core: display an error if the required locale en_US.UTF-8 is not installed\n  * scripts: add scripting API tests (issue #104)\n\nBuild::\n\n  * core: fix build with ncurses and separate tinfo (bug #41245, issue #1090)\n  * javascript: fix detection of libv8 with autotools on Ubuntu Trusty\n\n[[v1.9.1]]\n== Version 1.9.1 (2017-09-23)\n\nBug fixes::\n\n  * buflist: fix crash in auto-scroll of bar when the buflist item is not the first item in the bar\n  * logger: call strftime before replacing buffer local variables (CVE-2017-14727)\n  * relay: fix send of \"PART\" command in backlog (irc protocol)\n\n[[v1.9]]\n== Version 1.9 (2017-06-25)\n\nNew features::\n\n  * core: improve speed of nicklist bar item callback\n  * core: allow index for hdata arrays in evaluation of expressions\n  * api: allow update of variables \"scroll_x\" and \"scroll_y\" in bar_window with function hdata_update\n  * api: add functions config_option_get_string and hdata_compare\n  * buflist: add option buflist.look.auto_scroll (issue #332)\n  * buflist: add keys kbd:[F1]/kbd:[F2], kbd:[Alt+F1]/kbd:[Alt+F2] to scroll the buflist bar\n  * buflist: display a warning when the script \"buffers.pl\" is loaded\n  * buflist: add support of char \"~\" in option buflist.look.sort for case insensitive comparison\n  * buflist: add variable `${format_name}` in bar item evaluation and option buflist.format.name (issue #1020)\n  * buflist: add variables `${current_buffer}` and `${merged}` (booleans \"0\" / \"1\") in bar item evaluation\n  * relay: add option \"start\" in command /relay\n  * trigger: add \"irc_server\" and \"irc_channel\" pointers in data for IRC signal/modifier hooks\n\nBug fixes::\n\n  * core: fix bind of keys with space key, like kbd:[Alt+Space] (bug #32133)\n  * core: fix infinite loop when the terminal is closed on the secure password prompt (issue #1010)\n  * buflist: fix long mouse gestures\n  * buflist: fix slow switch of buffer when there are a lot of buffers opened (issue #998)\n  * buflist: add option \"bar\" in command /buflist, do not automatically add the \"buflist\" bar when the option buflist.look.enabled is off (issue #994)\n  * buflist: fix crash on drag & drop of buffers\n  * irc: don't reset nick properties (prefixes/away/account/realname) on /names when the nick already exists (issue #1019)\n  * irc: fix memory leak in case of error in \"ecdsa-nist256p-challenge\" SASL mechanism\n  * relay: rebind on address after option relay.network.bind_address is changed\n  * relay: fix parsing of CAP command arguments in irc protocol (issue #995)\n\n[[v1.8]]\n== Version 1.8 (2017-05-13)\n\nNew features::\n\n  * core: add option weechat.completion.nick_case_sensitive (issue #981)\n  * core: add wildcard matching operator (`+=*+` and `+!*+`) in evaluation of expressions (issue #611)\n  * core: add cut of string in evaluation of expressions with \"cut:xxx\" (number of chars) and \"cutscr:xxx\" (number of chars displayed on screen)\n  * core: add ternary operator (condition) in evaluation of expressions (`${if:condition?value_if_true:value_if_false}`)\n  * core: add resize of window parents with /window resize [h/v]size (task #11461, issue #893)\n  * core: add hotlist pointer in buffer structure\n  * core: add last start date in output of command /version after at least one /upgrade (issue #903)\n  * api: add arraylist functions: arraylist_new, arraylist_size, arraylist_get, arraylist_search, arraylist_insert, arraylist_add, arraylist_remove, arraylist_clear, arraylist_free\n  * api: add dynamic string functions: string_dyn_alloc, string_dyn_copy, string_dyn_concat, string_dyn_free\n  * api: add special key \"__quiet\" in hashtable for function key_bind\n  * api: add `${re:#}` to get the index of last group captured in function string_eval_expression\n  * aspell: add options to control delimiters in suggestions: aspell.color.suggestion_delimiter_{dict|word} and aspell.look.suggestion_delimiter_{dict|word} (issue #940)\n  * buflist: new plugin \"buflist\" (bar item with list of buffers)\n  * irc: add option \"open\" in command /server (issue #966)\n  * irc: send signal \"irc_server_lag_changed\" and store the lag in the server buffer (local variable)\n  * irc: send multiple masks by message in commands /ban, /unban, /quiet and /unquiet, use ban mask default for nicks in /quiet and /unquiet, display an error if /quiet and /unquiet are not supported by server (issue #579, issue #15, issue #577)\n  * irc: add option \"-include\" in commands /allchan, /allpv and /allserv (issue #572)\n  * irc: don't smart filter modes given to you (issue #530, issue #897)\n  * script: remove option script.scripts.url_force_https, use HTTPS by default in option script.scripts.url\n\nBug fixes::\n\n  * core: fix memory leak in display of mouse event debug info\n  * core: fix command /cursor stop (do not toggle cursor mode) (issue #964)\n  * core: fix delayed refresh when the signal SIGWINCH is received (terminal resized), send signal \"signal_sigwinch\" after refreshes (issue #902)\n  * irc: fix update of server addresses on reconnection when the evaluated content has changed (issue #925)\n  * irc: fix crash in case of invalid server reply during SASL authentication with dh-blowfish or dh-aes mechanism\n  * irc: fix double decoding of IRC colors in messages sent/displayed by commands /msg and /query (issue #943)\n  * irc: fix parsing of message 324 (modes) when there is a colon before the modes (issue #913)\n  * relay: check buffer pointer received in \"sync\" and \"desync\" commands (weechat protocol) (issue #936)\n  * relay: remove buffer from synchronized buffers when it is closed (fix memory leak)\n\nBuild::\n\n  * core: fix compilation on FreeBSD with autotools (issue #276)\n  * python: add detection of Python 3.6\n  * ruby: add detection of Ruby 2.4 (issue #895)\n\n[[v1.7.1]]\n== Version 1.7.1 (2017-04-22)\n\nBug fixes::\n\n  * irc: fix parsing of DCC filename (CVE-2017-8073)\n\n[[v1.7]]\n== Version 1.7 (2017-01-15)\n\nNew features::\n\n  * core: add option weechat.look.align_multiline_words (issue #411, issue #802)\n  * core: add optional command prefix in completion templates \"commands\", \"plugins_commands\" and \"weechat_commands\"\n  * core: add optional arguments in completion template, sent to the callback\n  * core: add option \"time\" in command /debug\n  * core, xfer: display more information on fork errors (issue #573)\n  * core: add a slash before commands completed in arguments of /command, /debug time, /key bind, /key bindctxt, /mute, /repeat, /wait\n  * core: add a warning in header of configuration files to not edit by hand (issue #851)\n  * api: add info \"uptime\" (WeeChat uptime)\n  * api: add info \"pid\" (WeeChat PID) (issue #850)\n  * alias: add a slash before commands completed in arguments of /alias\n  * exec: add option \"-oc\" in command /exec to execute commands in process output, don't execute commands by default with \"-o\" (issue #877)\n  * fifo: add file fifo.conf and option fifo.file.path to customize FIFO pipe path/filename (issue #850, issue #122)\n  * irc: add server option \"usermode\" (issue #377, issue #820)\n  * irc: add tag \"self_msg\" on self messages (issue #840)\n  * irc: evaluate content of server option \"ssl_fingerprint\" (issue #858)\n  * irc: change default value of option irc.network.lag_reconnect from 0 to 300 (issue #818)\n  * trigger: do not hide email in command \"/msg nickserv register password email\" (issue #849)\n\nBug fixes::\n\n  * core: fix deadlock when quitting after a signal SIGHUP/SIGQUIT/SIGTERM is received (issue #32)\n  * core: fix display of empty lines in search mode (issue #829)\n  * api: fix crash in function string_expand_home when the HOME environment variable is not set (issue #827)\n  * exec: fix memory leak in display of process output\n  * irc: fix option \"-temp\" in command /server (issue #880)\n  * irc: fix close of server channels which are waiting for the JOIN when the server buffer is closed (issue #873)\n  * irc: fix buffer switching on manual join for forwarded channels (issue #876)\n  * irc: add missing tags on CTCP message sent\n  * lua: fix integers returned in Lua >= 5.3 (issue #834)\n  * relay: make HTTP headers case-insensitive for WebSocket connections (issue #888)\n  * relay: set status to \"authentication failed\" and close immediately connection in case of authentication failure in weechat and irc protocols (issue #825)\n  * script: reload a script after upgrade only if it was loaded, set autoload only if the script was auto-loaded (issue #855)\n\nBuild::\n\n  * core, irc, xfer: fix compilation on macOS (add link with resolv) (issue #276)\n  * core: add build of xz package with make dist (CMake)\n  * tests: fix compilation of tests on FreeBSD 11.0\n\n[[v1.6]]\n== Version 1.6 (2016-10-02)\n\nNew features::\n\n  * core: add optional argument \"lowest\", \"highest\" or level mask in command \"/input hotlist_clear\"\n  * core: add option \"cycle\" in command /buffer\n  * core, irc, xfer: display more information on memory allocation errors (issue #573)\n  * api: add \"extra\" argument to evaluate extra variables in function string_eval_expression (issue #534)\n  * api: remove functions printf_date and printf_tags\n  * irc: rename server options \"default_msg_{kick|part|quit}\" to \"msg_{kick|part|quit}\", evaluate them\n  * relay: add option relay.network.allow_empty_password (issue #735)\n  * relay: allow escape of comma in command \"init\" (weechat protocol) (issue #730)\n  * trigger: add support for one-time triggers (issue #399, issue #509)\n\nBug fixes::\n\n  * core, irc, xfer: refresh domain name and name server addresses before connection to servers (fix connection to servers after suspend mode) (issue #771)\n  * api: fix return of function string_match when there are multiple masks in the string (issue #812)\n  * api: fix crash in function network_connect_to if address is NULL\n  * api: fix connection to servers with hook_connect on Windows 10 with Windows subsystem for Linux (issue #770)\n  * api: fix crash in function string_split_command when the separator is not a semicolon (issue #731)\n  * irc: fix socket leak in connection to server (issue #358, issue #801)\n  * irc: fix display of service notice mask (message 008) (issue #429)\n  * irc: fix NULL pointer dereference in 734 command callback (issue #738)\n  * relay: return an empty hdata when the requested hdata or pointer is not found (issue #767)\n  * xfer: fix crash on DCC send if option xfer.file.auto_accept_nicks is set (issue #781)\n\nDocumentation::\n\n  * switch to asciidoctor to build docs and man page (issue #722)\n\nBuild::\n\n  * python: add detection of Python 3.5\n\n[[v1.5]]\n== Version 1.5 (2016-05-01)\n\nNew features::\n\n  * core: evaluate content of option \"weechat.look.item_time_format\" (issue #791)\n  * core: change default value of option weechat.look.nick_color_hash to \"djb2\"\n  * core: move nick coloring from irc plugin to core, move options irc.look.nick_color_force, irc.look.nick_color_hash and irc.look.nick_color_stop_chars to core, add info \"nick_color\" and \"nick_color_name\", deprecate info \"irc_nick_color\" and \"irc_color_name\" (issue #262)\n  * core: move irc bar item \"away\" to core, move options irc.look.item_away_message and irc.color.item_away to core (issue #692)\n  * api: add support of functions in hook_process\n  * api: add pointer in callbacks used in scripting API (issue #406)\n  * irc: add option irc.network.sasl_fail_unavailable (issue #600, issue #697)\n  * irc: add multiple targets and support of \"-server\" in command /ctcp (issue #204, issue #493)\n  * trigger: add \"recover\" in default triggers cmd_pass/msg_auth, and \"regain\" in default trigger \"msg_auth\" (issue #511)\n\nInternationalization::\n\n  * add Portuguese translations\n\nBug fixes::\n\n  * core: fix nick coloring when stop chars and a forced color are used: first remove chars then look for forced color\n  * core: check that pointers received in arguments are not NULL in buffers and windows functions\n  * core: fix truncation of buffer names in hotlist (issue #668)\n  * core: fix update of window title under Tmux (issue #685)\n  * api: fix number of arguments returned by function string_split when keep_eol is 2 and the string ends with separators\n  * irc: fix first message displayed in raw buffer when the message is modified by a modifier (issue #719)\n  * irc: add missing completion \"*\" for target in command /msg\n  * irc: fix /msg command with multiple targets including \"*\"\n  * lua: fix crash when a lua function doesn't return a value and a string was expected (issue #718)\n  * relay: do not execute any command received in a PRIVMSG message from an irc relay client (issue #699)\n  * relay: fix the max number of clients connected on a port, allow value 0 for \"no limit\" (issue #669)\n  * relay: fix decoding of multiple frames in a single websocket message, send PONG on PING received in a websocket frame (issue #675)\n  * relay: fix command \"input\" received from clients with only spaces in content of message (weechat protocol) (issue #663)\n  * script: force refresh of scripts buffer after download of scripts list (issue #693)\n  * xfer: fix DCC file received when the terminal is resized (issue #677, issue #680)\n\nBuild::\n\n  * python: fix detection of Python shared libraries (issue #676)\n  * ruby: add detection of Ruby 2.3 (issue #698)\n\n[[v1.4]]\n== Version 1.4 (2016-01-10)\n\nNew features::\n\n  * core: add a parent name in options, display inherited values if null in /set output, add option weechat.color.chat_value_null (issue #629)\n  * core: add tag \"term_warning\" in warnings about wrong $TERM on startup\n  * core: add option weechat.look.paste_auto_add_newline (issue #543)\n  * core: display a more explicit error when a filter fails to be added (issue #522)\n  * api: add function string_hex_dump\n  * api: add argument \"length\" in function utf8_is_valid\n  * alias: display completion in /alias list (issue #518)\n  * fifo: add /fifo command\n  * irc: track real names using extended-join and WHO (issue #351)\n  * irc: add support of SNI (Server Name Indication) in SSL connection to IRC server (issue #620)\n  * irc: add support of \"cap-notify\" capability (issue #182, issue #477)\n  * irc: add command /cap (issue #8)\n  * irc: add hex dump of messages in raw buffer when debug is enabled for irc plugin (level 2 or more)\n  * irc: evaluate content of server option \"addresses\"\n  * irc: move option irc.network.alternate_nick into servers (irc.server.xxx.nicks_alternate) (issue #633)\n  * irc: use current channel and current server channels first in completions \"irc_server_channels\" and \"irc_channels\" (task #12923, issue #260, issue #392)\n  * logger: display system error when the log file can not be written (issue #541)\n  * relay: add option relay.irc.backlog_since_last_message (issue #347)\n  * script: add option script.scripts.download_timeout\n  * script: add completion with languages and extensions, support search by language/extension in /script search\n\nBug fixes::\n\n  * core: fix execution of empty command name (\"/\" and \"/ \" are not valid commands)\n  * core: fix memory leak when using multiple \"-d\" or \"-r\" in command line arguments\n  * core: don't complain any more about \"tmux\" and \"tmux-256color\" $TERM values when WeeChat is running under Tmux (issue #519)\n  * core: fix truncated messages after a word with a length of zero on screen (for example a zero width space: U+200B) (bug #40985, issue #502)\n  * api: fix handle of invalid escape in function string_convert_escaped_chars\n  * alias: do not allow slashes and spaces in alias name (issue #646)\n  * irc: fix channel forwarding when option irc.look.buffer_open_before_{autojoin|join} is on (issue #643)\n  * irc: add a missing colon before the password in PASS message, if the password has spaces or begins with a colon (issue #602)\n  * irc: fix charset decoding in incoming private messages (issue #520)\n  * irc: display the arrow before server name in raw buffer\n  * irc: fix display of messages sent to server in raw buffer\n  * irc: fix display of invalid UTF-8 chars in raw buffer\n  * relay: display the arrow before client id and protocol in raw buffer\n  * ruby: fix load of scripts requiring \"uri\" (issue #433)\n\nDocumentation::\n\n  * add Czech man page and quickstart guide (issue #490)\n\nTests::\n\n  * core: add a test to check if all plugins are loaded\n  * core: fix locale used to execute tests (issue #631)\n\nBuild::\n\n  * core: add scripts version.sh and build-debian.sh, separate stable from devel Debian packaging\n  * ruby: fix Ruby detection when pkg-config is not installed\n\n[[v1.3]]\n== Version 1.3 (2015-08-16)\n\nNew features::\n\n  * core: add completion \"colors\" (issue #481)\n  * core: start/stop search in buffer at current scroll position by default, add key kbd:[Ctrl+q] to stop search and reset scroll (issue #76, issue #393)\n  * core: add option weechat.look.key_grab_delay to set the default delay when grabbing a key with kbd:[Alt+k]\n  * core: add option weechat.look.confirm_upgrade (issue #463)\n  * core: add signal \"signal_sighup\"\n  * core: allow kbd:[Ctrl+c] to exit WeeChat when the passphrase is asked on startup (issue #452)\n  * core: allow pointer as list name in evaluation of hdata (issue #450)\n  * api: add support of evaluated sub-strings and current date/time in function string_eval_expression and command /eval\n  * api: add function string_eval_path_home\n  * alias: add options \"add\", \"addcompletion\" and \"del\" in command /alias, remove command /unalias (issue #458)\n  * irc: add option irc.network.channel_encode (issue #218, issue #482)\n  * irc: add option irc.color.topic_current (issue #475)\n  * irc: evaluate content of server option \"nicks\"\n  * logger: evaluate content of option logger.file.path (issue #388)\n  * script: rename option script.scripts.dir to script.scripts.path, evaluate content of option (issue #388)\n  * relay: display value of HTTP header \"X-Real-IP\" for websocket connections (issue #440)\n  * xfer: evaluate content of options xfer.file.download_path and xfer.file.upload_path (issue #388)\n\nBug fixes::\n\n  * core: flush stdout/stderr after sending text directly on them (fix corrupted data sent to hook_process callback) (issue #442)\n  * core: allow execution of command \"/input return\" on a buffer which is not displayed in a window\n  * core: allow jump from current to previous buffer with default keys kbd:[Alt+j], kbd:[01..99] (issue #466)\n  * core: fix crash if a file descriptor used in hook_fd is too high (> 1024 on Linux/BSD) (issue #465)\n  * core: fix display of invalid UTF-8 chars in bars\n  * core: fix bar item \"scroll\" after /buffer clear (issue #448)\n  * core: fix display of time in bare display when option weechat.look.buffer_time_format is set to empty string (issue #441)\n  * api: add missing function infolist_search_var in script API (issue #484)\n  * api: add missing function hook_completion_get_string in script API (issue #484)\n  * api: fix type of value returned by functions strcasestr, utf8_prev_char, utf8_next_char, utf8_add_offset and util_get_time_string\n  * api: fix type of value returned by function strcasestr\n  * fifo: fix send error on Cygwin when something is received in the pipe (issue #436)\n  * irc: fix update of lag item when the server lag changes\n  * irc: do not allow command /query with a channel name (issue #459)\n  * irc: decode/encode only text in IRC messages and not the headers (bug #29886, issue #218, issue #451)\n  * irc: fix crash with commands /allchan, /allpv and /allserv if the executed command closes buffers (issue #445)\n  * irc: do not open auto-joined channels buffers when option \"-nojoin\" is used in command /connect (even if the option irc.look.buffer_open_before_autojoin is on)\n  * irc: fix errors displayed on WHOX messages received (issue #376)\n  * xfer: fix crash if the DCC file socket number is too high (> 1024 on Linux/BSD) (issue #465)\n  * xfer: fix parsing of DCC chat messages (handle \"\\r\\n\" at the end of messages) (issue #425, issue #426)\n\nDocumentation::\n\n  * replace PREFIX with CMAKE_INSTALL_PREFIX in CMake instructions (issue #354)\n\nBuild::\n\n  * lua: add detection of Lua 5.3\n  * ruby: add detection of Ruby 2.2\n\n[[v1.2]]\n== Version 1.2 (2015-05-10)\n\nNew features::\n\n  * core: add signals \"signal_sigterm\" and \"signal_sigquit\" (issue #114)\n  * core: use environment variable WEECHAT_HOME on startup (issue #391)\n  * core: add options weechat.look.quote_{nick_prefix|nick_suffix|time_format} to customize quoted messages in cursor mode (issue #403)\n  * core: add a welcome message on first WeeChat run (issue #318)\n  * core: add options weechat.look.word_chars_{highlight|input} (issue #55, task #9459)\n  * core: remove WeeChat version from config files (issue #407)\n  * core: display a warning on startup if the locale can not be set (issue #373)\n  * core: allow \"*\" as plugin name in command \"/plugin reload\" to reload all plugins with options\n  * core: add option \"-s\" in command /eval to split expression before evaluating it (no more split by default) (issue #324)\n  * core: add priority in plugins to initialize them in order\n  * api: add support of environment variables in function string_eval_expression and command /eval\n  * api: add support of full color option name in functions color and string_eval_expression and in command /eval\n  * api: add \"_chat_line\" (line pointer) in hashtable of hook_focus\n  * irc: add support of \"account-notify\" capability (issue #11, issue #246)\n  * irc: add support of \"ecdsa-nist256p-challenge\" SASL mechanism (issue #251)\n  * irc: display a warning when the option irc.look.display_away is set to \"channel\"\n  * irc: optimize search of a nick in nicklist (up to 3x faster)\n  * irc: add support of SHA-256 and SHA-512 algorithms in server option \"ssl_fingerprint\" (issue #281)\n  * irc: add option \"-noswitch\" in command /query (issue #394)\n  * irc: format message 008 (RPL_SNOMASK) (issue #144)\n  * irc: remove server \"freenode\" from default config file (issue #309)\n  * javascript: new script plugin for JavaScript\n\nBug fixes::\n\n  * core: add missing completions in command /input\n  * guile: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, hook_command, buffer_string_replace_local_var, command\n  * irc: fix color of new nick in nick changes messages when option irc.look.color_nicks_in_server_messages is off\n  * irc: fix crash when setting an invalid regex with \"/list -re\" during a /list server response (issue #412)\n  * irc: fix display of PART messages on channels with +a (anonymous flag) (issue #396)\n  * irc: remove useless rename of channel buffer on JOIN received with different case (issue #336)\n  * irc: fix completion of commands /allchan and /allpv\n  * lua: fix wrong argument usage in functions nicklist_remove_group, nicklist_remove_nick and nicklist_remove_all (issue #346)\n  * lua: fix value returned in case of error in functions: config_option_reset, config_string, config_string_default, config_color, config_color_default, config_write, config_read, config_reload, hook_modifier_exec, buffer_string_replace_local_var, nicklist_group_set, nicklist_nick_set, command, upgrade_read, upgrade_close\n  * relay: fix up/down keys on relay buffer (issue #335)\n  * relay: remove v4-mapped addresses in /help relay.network.allowed_ips (issue #325)\n  * perl: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n  * python: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, config_is_set_plugin, buffer_get_string, buffer_string_replace_local_var, nicklist_group_get_string, nicklist_nick_get_string, command, hdata_time\n  * python: fix name of function \"bar_update\" in case of error\n  * python: fix restore of old interpreter when a function is not found in the script\n  * ruby: fix crash on /plugin reload (issue #364)\n  * ruby: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n  * script: fix state of script plugins when list of scripts has not been downloaded\n  * scripts: reset current script pointer when load of script fails in python/perl/ruby/lua/tcl plugins\n  * scripts: fix return code of function bar_set in python/perl/ruby/lua/tcl/guile plugins\n  * scripts: fix type of value returned by function hdata_time (from string to long integer) in perl/ruby/lua/tcl/guile plugins\n  * tcl: fix value returned in case of error in functions: mkdir_home, mkdir, mkdir_parents, config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, print_date_tags, buffer_string_replace_local_var, command, infolist_new_item, infolist_new_var_integer, infolist_new_var_string, infolist_new_var_pointer, infolist_new_var_time, upgrade_write_object, upgrade_read, upgrade_close\n  * trigger: do not hook anything if the trigger is disabled (issue #405)\n\nDocumentation::\n\n  * add Russian man page\n\n[[v1.1.1]]\n== Version 1.1.1 (2015-01-25)\n\nBug fixes::\n\n  * core: fix crash when a root bar has conditions different from active/inactive/nicklist (issue #317)\n  * irc: don't close channel buffer on second /part when option irc.look.part_closes_buffer is off (issue #313)\n  * irc: fix /join on a channel buffer opened with autojoin but which failed to join\n  * irc: send QUIT to server and no PART for channels when the server buffer is closed (issue #294)\n  * irc: fix order of channel buffers opened when option irc.look.server_buffer is set to \"independent\", irc.look.buffer_open_before_autojoin to \"on\" and irc.look.new_channel_position to \"near_server\" (issue #303)\n  * irc: fix crash in buffer close when server name is the same as a channel name (issue #305)\n\nBuild::\n\n  * core: fix random error when creating symbolic link weechat-curses on make install with CMake (bug #40313)\n\n[[v1.1]]\n== Version 1.1 (2015-01-11)\n\nNew features::\n\n  * core: add option weechat.completion.command_inline (task #12491)\n  * core: add bar item \"mouse_status\", new options weechat.look.item_mouse_status and weechat.color.status_mouse (issue #247)\n  * core: add signals \"mouse_enabled\" and \"mouse_disabled\" (issue #244)\n  * core: add hide of chars in string in evaluation of expressions\n  * core: add arraylists, improve speed of completions (about 50x faster)\n  * core: allow incomplete commands if unambiguous, new option weechat.look.command_incomplete (task #5419)\n  * core: check bar conditions in root bars and on each update of a bar item\n  * core: fully evaluate commands bound to keys in cursor and mouse contexts\n  * core: move bar item \"scroll\" between buffer name and lag in default bar items of status bar\n  * api: add regex replace feature in function string_eval_expression\n  * api: send value returned by command callback in function command, remove WeeChat error after command callback if return code is WEECHAT_RC_ERROR\n  * api: use microseconds instead of milliseconds in functions util_timeval_diff and util_timeval_add\n  * irc: add option \"reorder\" in command /server (issue #229)\n  * irc: open channel buffers before the JOIN is received from server (autojoin and manual joins), new options irc.look.buffer_open_before_{autojoin|join} (issue #216)\n  * irc: add server option \"sasl_fail\" (continue/reconnect/disconnect if SASL fails) (issue #265, task #12204)\n  * irc: add support for color codes 16-99 in IRC messages (issue #228), add infolist \"irc_color_weechat\"\n  * irc: add support of \"extended-join\" capability (issue #143, issue #212)\n  * irc: display own nick changes in server buffer (issue #188)\n  * irc: disable creation of temporary servers by default with command /connect, new option irc.look.temporary_servers\n  * irc: disable SSLv3 by default in server option \"ssl_priorities\" (issue #248)\n  * irc: automatically add current channel in command /samode (issue #241)\n  * irc: add tag \"nick_xxx\" in invite messages\n  * relay: add options \"stop\" and \"restart\" in command /relay\n  * relay: add option relay.network.ssl_priorities (issue #234)\n  * relay: add host in sender for IRC backlog PRIVMSG messages sent to clients\n  * script: add option script.scripts.url_force_https (issue #253)\n  * trigger: evaluate and replace regex groups at same time, new format for regex option in triggers (incompatible with version 1.0) (issue #224)\n  * trigger: add option \"restore\" in command /trigger\n  * trigger: add `${tg_displayed}` in conditions of default trigger \"beep\"\n\nBug fixes::\n\n  * core: fix display bug when scrolling in buffer on a filtered line (issue #240)\n  * core: send mouse code only one time to terminal with command /mouse enable|disable|toggle\n  * core: fix buffer property \"lines_hidden\" when merging buffers or when a line is removed from a buffer (issue #226)\n  * core: display time in bare display only if option weechat.look.buffer_time_format is not an empty string\n  * core: fix translation of message displayed after /upgrade\n  * api: fix truncated process output in hook_process (issue #266)\n  * api: fix crash when reading config options with NULL value (issue #238)\n  * irc: defer the auto-connection to servers with a timer (issue #279, task #13038)\n  * irc: add missing server options \"sasl_timeout\" and \"notify\" in output of /server listfull\n  * irc: use option irc.look.nick_mode_empty to display nick prefix in bar item \"input_prompt\"\n  * irc: remove IRC color codes from buffer title in channels (issue #237)\n  * irc: fix completion of commands /msg, /notice and /query\n  * irc: fix translation of CTCP PING reply (issue #137)\n  * relay: wait for message CAP END before sending join of channels and backlog to the client (issue #223)\n  * relay: send messages \"_buffer_localvar_*\" and \"_buffer_type_changed\" with sync \"buffers\" (issue #191)\n  * relay: don't remove relay from config when the binding fails (issue #225)\n  * relay: use comma separator in option relay.irc.backlog_tags, check the value of option when it is changed with /set\n  * relay: remove \"::ffff:\" from IPv4-mapped IPv6 client address (issue #111)\n  * trigger: fix memory leak when allocating a new trigger with several regex\n  * xfer: fix freeze when accepting DCC (issue #160, issue #174)\n  * xfer: bind to wildcard address when sending (issue #173)\n\nBuild::\n\n  * core: fix compilation of man pages with autotools in source directory\n  * core: fix compilation of plugins with CMake >= 3.1 (issue #287)\n  * lua: add detection of Lua 5.2\n  * python: fix Python detection with Homebrew (issue #217)\n  * tests: fix compilation of tests with clang (issue #275)\n\n[[v1.0.1]]\n== Version 1.0.1 (2014-09-28)\n\nBug fixes::\n\n  * core: fix crash on buffer close when option weechat.look.hotlist_remove is set to \"merged\" (issue #199)\n  * core: fix highlight of IRC action messages when option irc.look.nick_mode is set to \"action\" or \"both\" (issue #206)\n  * core: fix compilation of plugin API functions (macros) when compiler optimizations are enabled (issue #200)\n  * core: fix window/buffer pointers used in command /eval\n  * core: fix modifier \"weechat_print\": discard only one line when several lines are displayed in same message (issue #171)\n  * api: fix bug in function hdata_move when absolute value of count is greater than 1\n  * aspell: fix crash with command \"/aspell addword\" if no word is given (issue #164, issue #165)\n  * irc: fix display of channel exception list (348) with 6 arguments (date missing)\n  * irc: fix type of value stored in hashtable when joining a channel (issue #211)\n  * relay: fix send of signals \"relay_client_xxx\" (issue #214)\n  * script: fix crash on \"/script update\" if a script detail is displayed in buffer (issue #177)\n  * trigger: do not allow any changes on a trigger when it is currently running (issue #189)\n  * trigger: fix regex used in default triggers to hide passwords (\"\\S\" is not supported on *BSD) (issue #172)\n\nTests::\n\n  * core: fix memory leak in tests launcher\n\nBuild::\n\n  * aspell: fix compilation with Enchant < 1.6.0 (issue #192)\n  * guile: fix compilation with Guile < 2.0.4 (issue #198)\n  * perl: fix detection of Perl >= 5.20 with autotools\n  * tests: fix build of tests when the build directory is outside source tree (issue #178)\n\n[[v1.0]]\n== Version 1.0 (2014-08-15)\n\nNew features::\n\n  * core: display a warning on startup if $TERM does not start with \"screen\" under Screen/Tmux\n  * core: add option weechat.color.status_nicklist_count (issue #109, issue #110)\n  * core: add option \"env\" in command /set (manage environment variables)\n  * core: add bar item \"buffer_short_name\" (task #10882)\n  * core: add option \"send\" in command /input (send text to a buffer)\n  * core: add support of negated tags in filters (with \"!\") (issue #72, issue #74)\n  * core: add hidden buffers, add options hide/unhide in command /buffer\n  * core: add default key kbd:[Alt+-] (toggle filters in current buffer) (issue #17)\n  * core: add non-active merged buffers with activity in hotlist (if another merged buffer is zoomed) (task #12845)\n  * core: add text search in buffers with free content (task #13051)\n  * core: add buffer property \"clear\"\n  * core: add option weechat.look.hotlist_add_conditions, remove option weechat.look.hotlist_add_buffer_if_away\n  * core: add option weechat.look.hotlist_remove (issue #99)\n  * core: add options \"-beep\" and \"-current\" in command /print\n  * core: add bare display mode for easy text selection and click on URLs, new key: kbd:[Alt+l] (`L`), new option \"bare\" in command /window, new options: weechat.look.bare_display_exit_on_input and weechat.look.bare_display_time_format\n  * core: add signals \"key_combo_{default|search|cursor}\"\n  * core: add terabyte unit for size displayed\n  * core: display a warning in case of inconsistency between the options weechat.look.save_{config|layout}_on_exit\n  * core: add option \"-mask\" in command /unset (issue #112)\n  * core: set option weechat.look.buffer_search_where to prefix_message by default\n  * core: mute all buffers by default in command /mute (replace option -all by -core)\n  * api: allow value \"-1\" for property \"hotlist\" in function buffer_set (to remove a buffer from hotlist)\n  * api: add option \"buffer_flush\" in function hook_process_hashtable\n  * api: add support of case insensitive search and search by buffer full name in function buffer_search (bug #34318)\n  * api: add option \"detached\" in function hook_process_hashtable\n  * api: add option \"signal\" in function hook_set to send a signal to the child process\n  * api: add support of nested variables in function string_eval_expression and command /eval (issue #35)\n  * api: add support of escaped strings with format `${esc:xxx}` or `${\\xxx}` in function string_eval_expression and command /eval\n  * api: add functions hashtable_dup, string_replace_regex, string_split_shell, string_convert_escaped_chars\n  * api: add integer return code for functions hook_{signal|hsignal}_send\n  * api: add argument \"flags\" in function hdata_new_list\n  * api: allow wildcard \"*\" inside the mask in function string_match\n  * api: allow negative value for y in function printf_y\n  * alias: add default alias \"msgbuf\" (send text to a buffer)\n  * exec: add exec plugin: new command /exec and file exec.conf\n  * irc: add bar item \"irc_nick_modes\" (issue #71)\n  * irc: add support of message 324 (channel modes) in option irc.look.display_join_message (issue #75)\n  * irc: add option irc.look.join_auto_add_chantype (issue #65)\n  * irc: add tag with host (\"host_xxx\") in IRC messages displayed (task #12018)\n  * irc: add option irc.color.item_nick_modes (issue #47)\n  * irc: add support of \"away-notify\" capability (issue #12)\n  * irc: add command /remove (issue #91)\n  * irc: add command /unquiet (issue #36)\n  * irc: add command /allpv (task #13111)\n  * irc: display locally away status changes in private buffers (in addition to channels) (issue #117)\n  * irc: allow many fingerprints in server option ssl_fingerprint (issue #49)\n  * irc: rename option irc.look.item_channel_modes_hide_key to irc.look.item_channel_modes_hide_args, value is now a string (task #12070, task #12163, issue #48)\n  * irc: add value \"+\" for option irc.look.smart_filter_mode to use modes from server prefixes (this is now the default value) (issue #90)\n  * irc: allow \"$ident\" in option irc.network.ban_mask_default (issue #18)\n  * irc: evaluate content of server options \"username\" and \"realname\"\n  * irc: set option irc.network.autoreconnect_delay_max to 600 by default, increase max value to 604800 seconds (7 days)\n  * irc: set option irc.network.whois_double_nick to \"off\" by default\n  * relay: add messages \"_buffer_cleared\", \"_buffer_hidden\" and \"_buffer_unhidden\"\n  * relay: add info \"relay_client_count\" with optional status name as argument\n  * relay: add signals \"relay_client_xxx\" for client status changes (issue #2)\n  * relay: add option relay.network.clients_purge_delay\n  * rmodifier: remove plugin (replaced by trigger)\n  * script: set option script.scripts.cache_expire to 1440 by default\n  * trigger: add trigger plugin: new command /trigger and file trigger.conf\n\nBug fixes::\n\n  * core: fix zero-length malloc of an hashtable item with type \"buffer\"\n  * core: fix memory leak on /upgrade when file signature in upgrade file is invalid\n  * core: fix memory leak in completion of config options values\n  * core: fix memory leak when removing script files\n  * core: fix result of hash function (in hashtables) on 32-bit systems\n  * core: fix insert of mouse code in input line after a partial key combo (issue #130)\n  * core: check code point value in UTF-8 check function (issue #108)\n  * core: fix socks5 proxy for curl downloads (issue #119)\n  * core: display curl error after a failed download\n  * core: do not display content of passphrase on /secure buffer\n  * core: fix potential memory leak with infolists not freed in plugins (debian #751108)\n  * core: fix color display of last terminal color number + 1 (issue #101)\n  * core: add option \"-buffer\" in command /command (issue #67)\n  * core: fix restoration of core buffer properties after /upgrade\n  * core: fix \"/buffer clear\" with a name (don't clear all merged buffers with same number)\n  * core: fix evaluation of expression with regex: when a comparison char is in the regex and don't evaluate the regex itself (issue #63)\n  * core: close .upgrade files before deleting them after /upgrade\n  * core: fix refresh of bar item \"buffer_zoom\" on buffer switch\n  * core: fix reset of attributes in bars when \"resetcolor\" is used (issue #41)\n  * core: fix alignment of lines in merged buffers when options weechat.look.prefix_align and weechat.look.prefix_buffer_align are set to \"none\" (issue #43)\n  * core: quit WeeChat on signal SIGHUP, remove signal \"signal_sighup\"\n  * core: fix add of filter on macOS when regex for message is empty (filter regex ending with \"\\t\")\n  * core: check validity of buffer pointer when data is sent to a buffer (command/text from user and API function command)\n  * core: fix crash when buffer is closed during execution of multiple commands (issue #27)\n  * core: fix compilation on SmartOS (bug #40981, issue #23)\n  * core: add missing \\0 at the end of stderr buffer in function hook_process\n  * core: fix highlight problem with \"(?-i)\" and upper case letters in option weechat.look.highlight (issue #24)\n  * core: fix detection of terminated process in function hook_process\n  * core: fix \"/window scroll -N\" on a buffer with free content\n  * core: fix recursive calls to function eval_expression\n  * core: save and restore mute state in command /mute (bug #41748)\n  * core: fix memory leak when removing a hdata\n  * core: fix memory leak in evaluation of sub-conditions\n  * core: fix memory leak in function gui_key_add_to_infolist (in case of insufficient memory)\n  * core: fix use of invalid pointer in function gui_bar_window_content_alloc (in case of insufficient memory)\n  * core: fix uninitialized value in function string_decode_base64\n  * core: fix memory leak and use of invalid pointer in split of string (in case of insufficient memory)\n  * core: fix potential NULL pointer in function gui_color_emphasize\n  * core: use same return code and message in all commands when arguments are wrong/missing\n  * core: allow empty arguments for command /print\n  * core: fix freeze/crash in GnuTLS (bug #41576)\n  * api: fix function string_decode_base64\n  * api: fix function string_format_size on 32-bit systems\n  * api: change type of arguments displayed/highlight in hook_print callback from string to integer (in scripts)\n  * alias: change default command for alias /beep to \"/print -beep\"\n  * guile: fix module used after unload of a script\n  * irc: fix memory leak in CTCP answer\n  * irc: fix duplicate sender name in display of wallops (issue #142, issue #145)\n  * irc: fix extract of channel in parser for JOIN/PART messages when there is a colon before the channel name (issue #83)\n  * irc: fix duplicate sender name in display of notice (issue #87)\n  * irc: fix refresh of buffer name in bar items after join/part/kick/kill (issue #86)\n  * irc: display message 936 (censored word) on channel instead of server buffer\n  * irc: make reason optional in command /kill\n  * irc: add alias \"whois\" for target buffer of messages 401/402 (issue #54)\n  * irc: fix truncated read on socket with SSL (bug #41558)\n  * irc: display output of CAP LIST in server buffer\n  * irc: fix colors in message with CTCP reply sent to another user\n  * irc: fix read of MODES server value when in commands /op, /deop, /voice, /devoice, /halfop, /dehalfop\n  * irc: fix parsing of nick in host when \"!\" is not found (bug #41640)\n  * lua: fix interpreter used after unload of a script\n  * perl: fix context used after unload of a script\n  * python: fix read of return value for callbacks returning an integer in Python 2.x (issue #125)\n  * python: fix interpreter used after unload of a script\n  * relay: fix memory leak during handshake on websocket\n  * relay: fix memory leak when receiving commands from client (weechat protocol)\n  * relay: fix crash when an IRC \"MODE\" command is received from client without arguments\n  * relay: fix number of bytes sent/received on 32-bit systems\n  * relay: fix crash when closing relay buffers (issue #57, issue #78)\n  * relay: check pointers received in hdata command to prevent crashes with bad pointers (WeeChat protocol)\n  * relay: remove warning on /reload of relay.conf when ports are defined\n  * relay: fix client disconnection on empty websocket frames received (PONG)\n  * relay: add support of Internet Explorer websocket (issue #73)\n  * relay: fix crash on /upgrade received from a client (weechat protocol)\n  * relay: fix freeze after /upgrade when many disconnected clients still exist\n  * relay: fix NULL pointer when reading buffer lines for irc backlog\n  * ruby: fix crash when trying to load a directory with /ruby load\n  * script: fix display of curl errors\n  * script: fix scroll on script buffer in the detailed view of script (issue #6)\n  * scripts: fix crash when a signal is received with type \"int\" and NULL pointer in signal_data\n  * xfer: fix problem with option xfer.file.auto_accept_nicks when the server name contains dots\n  * xfer: fix freeze/problems when sending empty files with DCC (issue #53)\n  * xfer: fix connection to remote host in DCC receive on macOS (issue #25)\n  * xfer: remove bind on xfer.network.own_ip (issue #5)\n\nBuild::\n\n  * core: fix CMake warning CMP0007 on \"make uninstall\" (bug #41528)\n  * core: use glibtoolize on macOS (autotools) (issue #22)\n  * ruby: add detection of Ruby 2.1\n\nTests::\n\n  * core: add unit tests using CppUTest (issue #104)\n\n[[v0.4.3]]\n== Version 0.4.3 (2014-02-09)\n\nNew features::\n\n  * core: add signals \"signal_sighup\" and \"signal_sigwinch\" (terminal resized)\n  * core: add command /print, add support of more escaped chars in command \"/input insert\"\n  * core: add option weechat.look.tab_width\n  * core: add completion \"plugins_installed\"\n  * core: add option weechat.look.window_auto_zoom, disable automatic zoom by default when terminal becomes too small for windows\n  * core: use \"+\" separator to make a logical \"and\" between tags in command /filter, option weechat.look.highlight_tags and buffer property \"highlight_tags\"\n  * core: add options weechat.look.buffer_auto_renumber and weechat.look.buffer_position, add option \"renumber\" in command /buffer, add bar item \"buffer_last_number\" (task #12766)\n  * core: add signal \"buffer_cleared\"\n  * core: add buffer property \"day_change\" to hide messages for the day change in specific buffers\n  * core: add option \"libs\" in command /debug\n  * core: add infos \"term_width\" and \"term_height\"\n  * core: add bar item \"buffer_zoom\", add signals \"buffer_{zoomed|unzoomed}\" (patch #8204)\n  * core: add default keys kbd:[Alt+Home] / kbd:[Alt+End] (`meta2-1;3H` / `meta2-1;3F`) and kbd:[Alt+F11] / kbd:[Alt+F12] (`meta2-23;3~` / `meta2-24;3~`) for xterm\n  * core: add support of italic text (requires ncurses >= 5.9 patch 20130831)\n  * core: add options to customize default text search in buffers: weechat.look.buffer_search_{case_sensitive|force_default|regex|where}\n  * core: add support of UTF-8 chars in horizontal/vertical separators (options weechat.look.separator_{horizontal|vertical})\n  * core: add support of logical and/or for argument \"tags\" in function hook_print\n  * core: rename buffer property \"highlight_tags\" to \"highlight_tags_restrict\", new behavior for buffer property \"highlight_tags\" (force highlight on tags), rename option irc.look.highlight_tags to irc.look.highlight_tags_restrict\n  * core: rename options save/reset to store/del in command /layout\n  * core: replace default key kbd:[Ctrl+c], kbd:[r] by kbd:[Ctrl+c], kbd:[v] for reverse video in messages\n  * core: replace default key kbd:[Ctrl+c], kbd:[u] by kbd:[Ctrl+c], kbd:[_] for underlined text in messages\n  * core: rename option weechat.look.set_title to weechat.look.window_title, value is now a string (evaluated)\n  * core: set option weechat.look.paste_bracketed to \"on\" by default\n  * core: use one date format when day changes from day to day+1\n  * api: add function infolist_search_var\n  * api: add stdin options in functions hook_process_hashtable and hook_set to send data on stdin of child process, add function hook_set in script API (task #10847, task #13031)\n  * api: add hdata \"buffer_visited\"\n  * api: add support of infos with format `${info:name,arguments}` in function string_eval_expression and command /eval\n  * api: add support for C++ plugins\n  * alias: add default alias /beep => /print -stderr \\a\n  * irc: add server option \"ssl_fingerprint\" (task #12724)\n  * irc: add option irc.look.smart_filter_mode (task #12499)\n  * irc: add option irc.network.ban_mask_default (bug #26571)\n  * irc: add option irc.network.lag_max\n  * irc: add option irc.look.notice_welcome_tags\n  * irc: add server option \"default_msg_kick\" to customize default kick/kickban message (task #12777)\n  * irc: use MONITOR instead of ISON for /notify when it is available on server (task #11477)\n  * relay: send backlog for irc private buffers\n  * xfer: add support of IPv6 for DCC chat/file (patch #7992)\n  * xfer: add option xfer.file.auto_check_crc32 (patch #7963)\n\nBug fixes::\n\n  * core: fix hotlist problems after apply of a layout (bug #41481)\n  * core: fix crash when creating two bars with same name but different case (bug #41418)\n  * core: fix display of read marker when all buffer lines are unread and that option weechat.look.read_marker_always_show is on\n  * core: fix memory leak in regex matching when evaluating expression\n  * core: fix crash in /eval when config option has a NULL value\n  * core: fix crash with hdata_update on shared strings, add hdata type \"shared_string\" (bug #41104)\n  * core: fix text emphasis with wide chars on screen like Japanese (patch #8253)\n  * core: remove option on /unset of plugin description option (plugins.desc.xxx) (bug #40768)\n  * core: fix random crash when closing a buffer\n  * core: fix crash on /buffer close core.weechat\n  * core: apply color attributes when clearing a window (patch #8236)\n  * core: fix truncated text when pasting several long lines (bug #40210)\n  * core: create .conf file with default options only if the file does not exist (and not on read error with existing file)\n  * core: fix highlight on action messages: skip the nick at beginning to prevent highlight on it (bug #40516)\n  * core: fix bind of keys in cursor/mouse context when key starts with \"@\" (remove the warning about unsafe key)\n  * core: fix truncated prefix when filters are toggled (bug #40204)\n  * api: fix read of arrays in hdata functions hdata_<type> (bug #40354)\n  * aspell: fix detection of nicks with non-alphanumeric chars\n  * guile: disable guile gmp allocator (fix crash on unload of relay plugin) (bug #40628)\n  * irc: clear the GnuTLS session in all cases after SSL connection error\n  * irc: do not display names by default when joining a channel (task #13045)\n  * irc: display PONG answer when resulting from manual /ping command\n  * irc: fix time parsed in tag of messages on Cygwin\n  * irc: use statusmsg from message 005 to check prefix char in status notices/messages\n  * irc: remove display of channel in channel notices, display \"PvNotice\" for channel welcome notices\n  * irc: fix ignore on a host without nick\n  * irc: use color code 0x1F (`ctrl-_`) for underlined text in input line (same code as messages) (bug #40756)\n  * irc: use color code 0x16 (`ctrl-v`) for reverse video in messages\n  * irc: use option irc.network.colors_send instead of irc.network.colors_receive when displaying messages sent by commands /away, /me, /msg, /notice, /query\n  * irc: fix memory leak when checking the value of ssl_priorities option in servers\n  * irc: fix memory leak when a channel is deleted\n  * irc: fix groups in channel nicklist when reconnecting to a server that supports more nick prefixes than the previously connected server\n  * irc: fix auto-switch to channel buffer when doing /join channel (without \"#\")\n  * logger: fix memory leaks in backlog\n  * logger: replace backslashs in name by logger replacement char under Cygwin (bug #41207)\n  * lua: fix crash on calls to callbacks during load of script\n  * python: fix load of scripts with Python >= 3.3\n  * relay: fix memory leak on unload of relay plugin\n  * ruby: fix ruby init with Ruby >= 2.0 (bug #41115)\n  * scripts: fix script interpreter used after register during load of script in python/perl/ruby/lua/guile plugins (bug #41345)\n  * xfer: use same infolist for hook and signals (patch #7974)\n\nDocumentation::\n\n  * add French developer's guide and relay protocol\n  * add Japanese plugin API reference and developer's guide\n  * add Polish man page and user's guide\n\nBuild::\n\n  * core: fix installation of weechat-plugin.h with autotools (patch #8305)\n  * core: fix compilation on Android (bug #41420, patch #8301, bug #41434)\n  * lua: fix detection of Lua 5.2 in autotools (patch #8270)\n  * ruby: add detection and fix compilation with Ruby 2.0 (patch #8209)\n\n[[v0.4.2]]\n== Version 0.4.2 (2013-10-06)\n\nNew features::\n\n  * core: display day change message dynamically (do not store it as a line in buffer), split option weechat.look.day_change_time_format into two options weechat.look.day_change_message_{1date|2dates}, new option weechat.color.chat_day_change (task #12775)\n  * core: add syntax \"@buffer:item\" in bar items to force the buffer used when displaying the bar item (task #12717)\n  * core: add search of regular expression in buffer, don't reset search type on a new search, select where to search (messages/prefixes), add keys in search context: kbd:[Alt+c] (case (in)sensitive search), kbd:[Tab] (search in messages/prefixes)\n  * core: add text emphasis in messages when searching text in buffer, new options: weechat.look.emphasized_attributes, weechat.color.emphasized, weechat.color.emphasized_bg\n  * core: add secured data (encryption of passwords or private data): add new command /secure and new file sec.conf (task #7395)\n  * core: rename binary and man page from \"weechat-curses\" to \"weechat\" (task #11027)\n  * core: add option \"-o\" in command /color\n  * core: add option \"scroll_beyond_end\" for command /window (task #6745)\n  * core: add options weechat.look.hotlist_prefix and weechat.look.hotlist_suffix (task #12730)\n  * core: add option weechat.look.key_bind_safe\n  * core: add option weechat.network.proxy_curl (task #12651)\n  * core: add \"proxy\" infolist and hdata\n  * core: add infolist \"layout\" and hdata \"layout\", \"layout_buffer\" and \"layout_window\"\n  * core: reduce memory used by using shared strings for nicklist and lines in buffers\n  * core: change color format for options weechat.look.buffer_time_format and weechat.look.prefix_{action|error|join|network|quit} from `${xxx}` to `${color:xxx}`\n  * core: optimize the removal of lines in buffers (a lot faster to clear/close buffers with lot of lines)\n  * core: set options weechat.look.color_inactive_{buffer|window} to \"on\" by default\n  * api: return hashtable item pointer in functions hashtable_set and hashtable_set_with_size\n  * api: add \"callback_free_key\" in hashtable\n  * api: add support of colors with format `${color:xxx}` in function string_eval_expression and command /eval\n  * api: add argument \"options\" in function string_eval_expression, add option \"-c\" in command /eval (to evaluate a condition)\n  * api: add new function strlen_screen\n  * aspell: rename option aspell.look.color to aspell.color.misspelled, add option aspell.color.suggestions\n  * aspell: add support of enchant library (patch #6858)\n  * irc: add option irc.look.notice_welcome_redirect to automatically redirect channel welcome notices to the channel buffer\n  * irc: add support of wildcards in commands (de)op/halfop/voice, split IRC message sent if number of nicks is greater than server MODES (from message 005) (task #9221)\n  * irc: add option irc.look.pv_tags\n  * irc: add support of special variables $nick/$channel/$server in commands /allchan and /allserv\n  * irc: add option irc.look.nick_color_hash: hash algorithm to find nick color (patch #8062)\n  * logger: add option \"flush\" in command /logger\n  * plugins: remove the demo plugin\n  * relay: add command \"ping\" in weechat protocol (task #12689)\n  * rmodifier: add option \"missing\" in command /rmodifier\n  * script: add info about things defined by script (like commands, options, ...) in the detailed view of script (/script show)\n  * scripts: add hdata with script callback\n  * xfer: add option xfer.look.pv_tags\n\nBug fixes::\n\n  * core: clear whole line before displaying content instead of clearing after the end of content (bug #40115)\n  * core: fix time displayed in status bar (it was one second late) (bug #40097)\n  * core: fix memory leak on unhook of a print hook (if using tags)\n  * core: fix computation of columns in output of /help (take care about size of time/buffer/prefix)\n  * core: fix random crash on \"/buffer close\" with a buffer number (or a range of buffers)\n  * core: fix priority of logical operators in evaluation of expression (AND takes precedence over the OR) and first evaluate sub-expressions between parentheses\n  * core: remove gap after read marker line when there is no bar on the right (bug #39548)\n  * core: use \"/dev/null\" for stdin in hook_process instead of closing stdin (bug #39538)\n  * core: fix char displayed at the intersection of three windows (bug #39331)\n  * core: fix crash in evaluation of expression when reading a string in hdata with a NULL value (bug #39419)\n  * core: fix display bugs with some UTF-8 chars that truncates messages displayed (for example U+26C4) (bug #39201)\n  * core: remove extra space after empty prefix (when prefix for action, error, join, network or quit is set to empty string) (bug #39218)\n  * core: fix random crash on mouse actions (bug #39094)\n  * core: fix line alignment when option weechat.look.buffer_time_format is set to empty string\n  * api: change type of hashtable key hash to unsigned long\n  * api: use pointer for infolist \"hook\" to return only one hook\n  * aspell: fix detection of word start/end when there are apostrophes or minus chars before/after word\n  * irc: fix reconnection to server using IPv6 (bug #38819, bug #40166)\n  * irc: replace default prefix modes \"qaohvu\" by the standard ones \"ov\" when PREFIX is not sent by server (bug #39802)\n  * irc: use 6697 as default port for SSL servers created with URL \"ircs://\" (bug #39621)\n  * irc: display number of ops/halfops/voices on channel join only for supported modes on server (bug #39582)\n  * irc: fix self nick color in server messages after nick is changed with /nick (bug #39415)\n  * irc: fix error message on /invite without arguments (bug #39272)\n  * irc: fix multiple nicks in command /query (separated by commas): open one buffer per nick\n  * lua: fix interpreter used in API functions (bug #39470)\n  * relay: fix decoding of websocket frames when there are multiple frames in a single message received (only the first one was decoded)\n  * relay: fix binding to an IP address (bug #39119)\n\nDocumentation::\n\n  * update man page and add translations (in French, German, Italian, and Japanese)\n\nBuild::\n\n  * core: add CA_FILE option in CMake and configure to setup default value of option weechat.network.gnutls_ca_file (default is \"/etc/ssl/certs/ca-certificates.crt\") (task #12725)\n  * core: disable build of doc by default, add CMake option ENABLE_MAN to compile man page (off by default)\n  * xfer: fix compilation on OpenBSD (bug #39071)\n\n[[v0.4.1]]\n== Version 0.4.1 (2013-05-20)\n\nNew features::\n\n  * core: make nick prefix/suffix dynamic (not stored in the line): move options irc.look.nick_{prefix|suffix} to weechat.look.nick_{prefix|suffix} and options irc.color.nick_{prefix|suffix} to weechat.color.chat_nick_{prefix|suffix}, add new options weechat.look.prefix_align_more_after, weechat.look.prefix_buffer_align_more_after, logger.file.nick_{prefix|suffix} (bug #37531)\n  * core: add support of multiple layouts (task #11274)\n  * core: add signals nicklist_{group|nick}_removing and hsignals nicklist_{group|nick}_{added|removing|changed}\n  * core: add count for groups, nicks, and total in nicklist\n  * core: add option \"dirs\" in command /debug\n  * core: add signal \"window_opened\" (task #12464)\n  * core: allow read of array in hdata without using index\n  * api: add new function hdata_search\n  * api: add property \"completion_freeze\" for function buffer_set: do not stop completion when command line is updated\n  * aspell: add completion \"aspell_dicts\" (list of aspell installed dictionaries)\n  * aspell: add info \"aspell_dict\" (dictionaries used on a buffer)\n  * aspell: optimization on spellers to improve speed (save state by buffer)\n  * irc: add support of \"dh-aes\" SASL mechanism (patch #8020)\n  * irc: add support of UHNAMES (capability \"userhost-in-names\") (task #9353)\n  * irc: add tag \"irc_nick_back\" for messages displayed in private buffer when a nick is back on server (task #12576)\n  * irc: add option irc.look.display_join_message (task #10895)\n  * irc: add option irc.look.pv_buffer: automatically merge private buffers (optionally by server) (task #11924)\n  * irc: hide passwords in commands or messages sent to nickserv (/msg nickserv) with new modifiers \"irc_command_auth\" and \"irc_message_auth\", remove option irc.look.hide_nickserv_pwd, add option irc.look.nicks_hide_password (bug #38346)\n  * irc: unmask smart filtered join if nick speaks in channel some minutes after the join, new option irc.look.smart_filter_join_unmask (task #12405)\n  * irc: rename option irc.network.lag_disconnect to irc.network.lag_reconnect, value is now a number of seconds\n  * relay: add message \"_nicklist_diff\" (differences between old and current nicklist)\n  * relay: add support of multiple servers on same port for irc protocol (the client must send the server in the \"PASS\" command)\n  * relay: add WebSocket server support (RFC 6455) for irc and weechat protocols, new option relay.network.websocket_allowed_origins\n  * relay: add options \"buffers\" and \"upgrade\" in commands sync/desync (weechat protocol)\n  * rmodifier: rename default rmodifier \"nickserv\" to \"command_auth\" (with new modifier \"irc_command_auth\"), add default rmodifier \"message_auth\" (modifier \"irc_message_auth\")\n  * script: add option script.scripts.autoload, add options \"autoload\", \"noautoload\" and \"toggleautoload\" for command /script, add action \"A\" (kbd:[Alt+a]) on script buffer (toggle autoload) (task #12393)\n  * xfer: add option xfer.file.auto_accept_nicks (patch #7962)\n\nBug fixes::\n\n  * core: fix display of long lines without time (message beginning with two tabs)\n  * core: reset scroll in window before zooming on a merged buffer (bug #38207)\n  * core: fix refresh of item \"completion\": clear it after any action that is changing content of command line and after switch of buffer (bug #38214)\n  * core: fix structures before buffer data when a buffer is closed\n  * core: fix refresh of line after changes with hdata_update (update flag \"displayed\" according to filters)\n  * core: fix hidden lines for messages without date when option weechat.history.max_buffer_lines_minutes is set (bug #38197)\n  * core: use default hash/comparison callback for keys of type integer/pointer/time in hashtable\n  * api: do not display a warning by default when loading a script with a license different from GPL\n  * api: fix connection to servers with hook_connect on macOS (bug #38496)\n  * api: fix bug in function string_match when mask begins and ends with \"*\"\n  * api: allow hashtable with keys that are not strings in function hashtable_add_to_infolist\n  * api: fix function string_mask_to_regex: escape all special chars used in regex (bug #38398)\n  * guile: fix crash in function hdata_move\n  * guile: fix arguments given to callbacks (separate arguments instead of one list with arguments inside), Guile >= 2.0 is now required (bug #38350)\n  * guile: fix crash on calls to callbacks during load of script (bug #38343)\n  * irc: fix name of server buffer after /server rename (set name \"server.name\" instead of \"name\")\n  * irc: fix uncontrolled format string when sending unknown irc commands (if option irc.network.send_unknown_commands is on)\n  * irc: fix uncontrolled format string when sending ison command (for nicks monitored by /notify)\n  * irc: fix refresh of nick in input bar when joining a new channel with op status (bug #38969)\n  * irc: fix display of CTCP messages that contain bold attribute (bug #38895)\n  * irc: fix duplicate nick completion when someone rejoins the channel with same nick but a different case (bug #38841)\n  * irc: fix crash on command \"/allchan /close\"\n  * irc: fix default completion (like nicks) in commands /msg, /notice, /query and /topic\n  * irc: fix prefix color for nick when the prefix is not in irc.color.nick_prefixes: use default color (key \"*\")\n  * irc: fix display of malformed CTCP (without closing char) (bug #38347)\n  * irc: fix memory leak in purge of hashtables with joins (it was done only for the first server in the list)\n  * irc: add color in output of /names when result is on server buffer (channel not joined) (bug #38070)\n  * lua: remove use of functions for API constants\n  * lua: fix crash on stack overflow: call lua_pop for values returned by lua functions (bug #38510)\n  * perl: simplify code to load scripts\n  * python: fix crash when loading scripts with Python 3.x (patch #8044)\n  * relay: fix uncontrolled format string in redirection of irc commands\n  * relay: rename compression \"gzip\" to \"zlib\" (compression is zlib, not gzip)\n  * relay: fix commands sync/desync in weechat protocol (bug #38215)\n  * ruby: fix crash in function hdata_move\n  * ruby: fix crash with Ruby 2.0: use one array for the last 6 arguments of function config_new_option (bug #31050)\n  * script: create \"script\" directory on each action, just in case it has been removed (bug #38472)\n  * scripts: create directories (language and language/autoload) on each action (install/remove/autoload), just in case they have been removed (bug #38473)\n  * scripts: do not allow empty script name in function register\n  * xfer: fix freeze of DCC file received: use non-blocking socket after connection to sender and ensure the ACK is properly sent (bug #38340)\n\nBuild::\n\n  * core: install icon file (patch #7972)\n  * core: fix detection of iconv with CMake on macOS (bug #38321)\n  * guile: fix compilation with Guile 2.0\n  * python: fix detection of Python on Ubuntu Raring\n  * script: fix compilation on GNU/Hurd (patch #7977)\n\n[[v0.4.0]]\n== Version 0.4.0 (2013-01-20)\n\nNew features::\n\n  * core: add buffer pointer in arguments for signals \"input_search\", \"input_text_changed\" and \"input_text_cursor_moved\"\n  * core: add option \"diff\" in command /set (list options with changed value)\n  * core: add color support in options weechat.look.prefix_{action|error|join|network|quit} (task #9555)\n  * core: display default values for changed config options in output of /set\n  * core: add command /eval, use expression in conditions for bars\n  * core: add option \"-quit\" in command /upgrade (save session and quit without restarting WeeChat, for delayed restoration)\n  * core: add incomplete mouse events \"event-down\" and \"event-drag\" (task #11840)\n  * api: allow return code WEECHAT_RC_OK_EAT in callbacks of hook_signal and hook_hsignal (stop sending the signal immediately)\n  * api: allow creation of structure with hdata_update (allowed for hdata \"history\")\n  * api: use hashtable \"options\" for command arguments in function hook_process_hashtable (optional, default is a split of string with command)\n  * api: add new function string_eval_expression\n  * api: connect with IPv6 by default in hook_connect (with fallback to IPv4), shuffle list of hosts for a same address, add argument \"retry\" for hook_connect, move \"sock\" from hook_connect arguments to callback of hook_connect (task #11205)\n  * aspell: add signal \"aspell_suggest\" (sent when new suggestions are displayed)\n  * aspell: add bar items \"aspell_dict\" (dictionary used on current buffer) and \"aspell_suggest\" (suggestions for misspelled word at cursor), add option aspell.check.suggestions (task #12061)\n  * irc: add tags \"irc_nick1_xxx\" and \"irc_nick2_yyy\" in message displayed for command \"NICK\"\n  * irc: return git version in CTCP VERSION and FINGER by default, add \"$git\" and \"$versiongit\" in format of CTCP replies\n  * irc: read local variable \"autorejoin\" in buffer to override server option \"autorejoin\" (task #12256)\n  * irc: add option \"-auto\" in command /connect (task #9340)\n  * irc: add support of \"server-time\" capability (task #12255)\n  * irc: add support of tags in messages\n  * irc: add command /quiet, fix display of messages 728/729 (quiet list, end of quiet list) (task #12278)\n  * irc: add option irc.network.alternate_nick to disable dynamic nick generation when all nicks are already in use on server (task #12281)\n  * irc: add option irc.network.whois_double_nick to double nick in command /whois\n  * irc: add option \"-noswitch\" in command /join (task #12275)\n  * perl: display script filename in error messages\n  * relay: add backlog and server capability \"server-time\" for irc protocol, add new options relay.irc.backlog_max_minutes, relay.irc.backlog_max_number, relay.irc.backlog_since_last_disconnect, relay.irc.backlog_tags, relay.irc.backlog_time_format (task #12076)\n  * relay: add support of IPv6, new option relay.network.ipv6, add support of \"ipv4.\" and/or \"ipv6.\" before protocol name, to force IPv4/IPv6 (task #12270)\n  * xfer: display remote IP address for DCC chat/file (task #12289)\n\nBug fixes::\n\n  * core: fix infinite loop when a regex gives an empty match (bug #38112)\n  * core: fix click in item \"buffer_nicklist\" when nicklist is a root bar (bug #38080)\n  * core: fix line returned when clicking on a bar (according to position and filling) (bug #38069)\n  * core: fix refresh of bars when applying layout (bug #37944, bug #37952)\n  * core: fix scroll to bottom of window (default key: kbd:[Alt+End]) when line displayed is bigger than chat area\n  * core: fix scroll in buffer after enabling/disabling some filters (if scroll is on a hidden line) (bug #37885)\n  * core: fix memory leak in case of error when building content of bar item for display\n  * core: fix detection of command in input: a single command char is considered as a command (API function string_input_for_buffer)\n  * core: search for a fallback template when a no template is matching command arguments\n  * core: fix refresh of windows after split (fix bug with horizontal separator between windows) (bug #37874)\n  * core: fix stuck mouse (bug #36533)\n  * core: fix default mouse buttons actions for script buffer (focus the window before executing action)\n  * core: fix scroll of one page down when weechat.look.scroll_page_percent is less than 100 (bug #37875)\n  * core: disable paste detection and confirmation if bar item \"input_paste\" is not used in a visible bar (task #12327)\n  * core: use high priority (50000) for commands /command and /input so that an alias will not take precedence over these commands (bug #36353)\n  * core: execute command with higher priority when many commands with same name are found with different priorities\n  * core: fix display of combining chars (bug #37775)\n  * core: fix display of zoomed/merged buffer (with number >= 2) after switching to it (bug #37593)\n  * core: fix display problem when option weechat.look.prefix_same_nick is set (problem with nick displayed in first line of screen) (bug #37556)\n  * core: fix wrapping of words with wide chars (the break was made before the correct position)\n  * api: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) (bug #37764)\n  * alias: give higher priority to aliases (2000) so that they take precedence over an existing command\n  * aspell: ignore self and remote nicks in private buffers\n  * aspell: fix creation of spellers when number of dictionaries is different between two buffers\n  * guile: fix bad conversion of shared strings (replace calls to scm_i_string_chars by scm_to_locale_string) (bug #38067)\n  * irc: fix display of actions (/me) when they are received from a relay client (in channel and private buffers) (bug #38027)\n  * irc: fix memory leak when updating modes of channel\n  * irc: fix crash on /upgrade (free channels before server data when a server is destroyed) (bug #37736)\n  * irc: fix crash when decoding IRC colors in strings (bug #37704)\n  * irc: fix refresh of bar item \"away\" after command /away or /disconnect\n  * irc: send whois on self nick when /whois is done without argument on a channel (task #12273)\n  * irc: remove local variable \"away\" in server/channels buffers after server disconnection (bug #37582)\n  * irc: fix crash when message 352 has too few arguments (bug #37513)\n  * irc: remove unneeded server disconnect when server buffer is closed and server is already disconnected\n  * perl: fix calls to callbacks during load of script when multiplicity is disabled (bug #38044)\n  * relay: fix duplicated messages sent to irc clients (when messages are redirected) (bug #37870)\n  * relay: fix memory leak when adding hdata to a message (weechat protocol)\n  * relay: fix crash after /upgrade when a client is connected\n  * relay: add missing \"ssl.\" in output of /relay listrelay\n  * script: fix scroll with mouse when window with script buffer is not the current window (do not force a switch to script buffer in current window)\n  * xfer: fix memory leak when refreshing xfer buffer\n  * xfer: add missing tags in DCC chat messages: nick_xxx, prefix_nick_ccc, logN\n  * xfer: limit bytes received to file size (for DCC file received), fix crash when displaying a xfer file with pos greater than size\n\nBuild::\n\n  * core: add git version in build, display it in \"weechat-curses --help\" and /version\n  * core: stop CMake if gcrypt lib is not found (bug #37671)\n  * guile: fix detection of Guile in configure\n  * script: fix compilation on macOS\n\n[[v0.3.9.2]]\n== Version 0.3.9.2 (2012-11-18)\n\nBug fixes::\n\n  * core: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) (bug #37764, CVE-2012-5534)\n\n[[v0.3.9.1]]\n== Version 0.3.9.1 (2012-11-09)\n\nBug fixes::\n\n  * irc: fix crash when decoding IRC colors in strings (bug #37704, CVE-2012-5854)\n\n[[v0.3.9]]\n== Version 0.3.9 (2012-09-29)\n\nNew features::\n\n  * core: add signals for plugins loaded/unloaded\n  * core: add default key kbd:[Alt+x] (zoom on merged buffer) (task #11029)\n  * core: add mouse bindings kbd:[Ctrl] + wheel up/down to scroll horizontally buffers with free content\n  * core: add option weechat.startup.sys_rlimit to set system resource limits for WeeChat process\n  * core: add option \"swap\" in command /buffer (task #11373)\n  * core: add hdata \"hotlist\"\n  * core: add support of arrays in hdata variables\n  * core: add command line option \"-r\" (or \"--run-command\") to run command(s) after startup of WeeChat\n  * core: add function hook_set in plugin API, add \"subplugin\" in hooks (set by script plugins), display subplugin in /help on commands (task #12049)\n  * core: add option weechat.look.jump_smart_back_to_buffer (jump back to initial buffer after reaching end of hotlist, on by default, which is old behavior)\n  * core: add default key kbd:[Alt+s] (toggle aspell)\n  * core: add callback \"nickcmp\" in buffers\n  * core: add horizontal separator between windows, new options weechat.look.window_separator_{horizontal|vertical}\n  * core: add options weechat.look.color_nick_offline and weechat.color.chat_nick_offline{_highlight|_highlight_bg} to use different color for offline nicks in prefix (task #11109)\n  * api: allow update for some variables of hdata, add new functions hdata_update and hdata_set\n  * api: add info \"locale\" for info_get (locale used to translate messages)\n  * api: add new function util_version_number\n  * aspell: add option aspell.check.enabled, add options enable/disable/toggle for command /aspell (rename options enable/disable/dictlist to setdict/deldict/listdict), display aspell status with /aspell (task #11988)\n  * irc: generate alternate nicks dynamically when all nicks are already in use (task #12209)\n  * irc: add bar item \"buffer_modes\", remove option irc.look.item_channel_modes (task #12022)\n  * irc: add option irc.look.ctcp_time_format to customize reply to CTCP TIME (task #12150)\n  * irc: move options from core to irc plugin: weechat.look.nickmode to irc.look.nick_mode (new type: integer with values: none/prefix/action/both) and weechat.look.nickmode_empty to irc.look.nick_mode_empty\n  * logger: add tags in backlog lines displayed when opening buffer\n  * logger: add messages \"Day changed to\" in backlog (task #12187)\n  * relay: add support of SSL (for irc and weechat protocols), new option relay.network.ssl_cert_key (task #12044)\n  * relay: add option relay.color.client\n  * relay: add object type \"arr\" (array) in WeeChat protocol\n  * script: new plugin \"script\" (script manager, replacing scripts weeget.py and script.pl)\n  * scripts: add signals for scripts loaded/unloaded/installed/removed\n  * scripts: add hdata with list of scripts for each language\n\nBug fixes::\n\n  * core: fix display bug when end of a line is displayed on top of chat (last line truncated and MORE(0) in status bar) (bug #37203)\n  * core: fix IP address returned by hook_connect (return IP really used, not first IP for hostname)\n  * core: display spaces at the end of messages in chat area (bug #37024)\n  * core: fix infinite loop in display when chat area has width of 1 with a bar displayed on the right (nicklist by default) (bug #37089)\n  * core: fix display of \"bar more down\" char when text is truncated by size_max in bars with vertical filling (bug #37054)\n  * core: fix color of long lines (displayed on more than one line on screen) under FreeBSD (bug #36999)\n  * core: return error string to callback of hook_connect if getaddrinfo fails in child process\n  * core: scroll to bottom of window after reaching first or last highlight with keys kbd:[Alt+p] / kbd:[Alt+n]\n  * core: fix refresh of bar items when switching window\n  * core: fix refresh of bar items \"buffer_filter\" and \"scroll\" in root bars (bug #36816)\n  * core: allow again names beginning with \"#\" for bars, proxies and filters\n  * core: escape special chars (`#[\\`) in configuration files for name of options (bug #36584)\n  * aspell: add missing dictionaries (ast/grc/hus/kn/ky)\n  * charset: do not allow \"UTF-8\" in charset decoding options (useless because UTF-8 is the internal WeeChat charset)\n  * fifo: ignore read failing with error EAGAIN (bug #37019)\n  * guile: fix crash when unloading a script without pointer to interpreter\n  * irc: fix rejoin of channels with a key, ignore value \"*\" sent by server for key (bug #24131)\n  * irc: fix SASL mechanism \"external\" (bug #37274)\n  * irc: fix parsing of message 346 when no nick/time are given (bug #37266)\n  * irc: switch to next address after a timeout when connecting to server (bug #37216)\n  * irc: fix bug when changing server option \"addresses\" with less addresses (bug #37215)\n  * irc: add network prefix in irc (dis)connection messages\n  * irc: fix split of received IRC message: keep spaces at the end of message\n  * irc: fix bug with prefix chars which are in chanmodes with a type different from \"B\" (bug #36996)\n  * irc: fix format of message \"USER\" (according to RFC 2812) (bug #36825)\n  * irc: fix parsing of user modes (ignore everything after first space) (bug #36756, bug #31572)\n  * irc: fix freeze when reading on socket with SSL enabled (use non-blocking sockets) (bug #35097)\n  * irc: allow again names beginning with \"#\" for servers\n  * lua: fix crash when unloading a script without pointer to interpreter\n  * python: fix crash when unloading a script without pointer to interpreter\n  * relay: fix freeze when writing on relay socket (use non-blocking sockets in relay for irc and weechat protocols) (bug #36655)\n  * scripts: fix deletion of configuration files when script is unloaded (bug #36977)\n  * scripts: fix function unhook_all: delete only callbacks of hooks and add missing call to unhook\n  * scripts: ignore call to register (with a warning) if script is already registered\n  * xfer: fix DCC transfer error (bug #37432)\n\nDocumentation::\n\n  * add Japanese user's guide (patch #7827), scripting guide and tester's guide\n\nBuild::\n\n  * core: move the set of CMake policy CMP0003 in directory src (so it applies to all plugins) (bug #37311)\n  * core: fix names of cache variables in configure.in (bug #36971)\n  * core: add CMake option \"MANDIR\" (bug #36776)\n  * guile: fix path of Guile include dirs in CMake build (patch #7790)\n  * lua: add support of Lua 5.2\n  * python: fix detection of Python (first try \"python2.x\" and then \"python\") (bug #36835)\n  * ruby: add detection of Ruby 1.9.3\n\n[[v0.3.8]]\n== Version 0.3.8 (2012-06-03)\n\nNew features::\n\n  * core: add option weechat.look.prefix_same_nick (hide or change prefix on messages whose nick is the same as previous message) (task #11965)\n  * core: convert tabs to spaces in text pasted (bug #25028)\n  * core: add a connection timeout for child process in hook_connect (bug #35966)\n  * core: add support of terminal \"bracketed paste mode\", new options weechat.look.paste_bracketed and weechat.look.paste_bracketed_timer_delay (task #11316)\n  * core: support lines of 16 Kb long in configuration files (instead of 1 Kb)\n  * core: convert options weechat.look.prefix_align_more and weechat.look.prefix_buffer_align_more from boolean to string (task #11197)\n  * core: follow symbolic links when writing configuration files (.conf) (task #11779)\n  * api: add list \"gui_buffer_last_displayed\" in hdata \"buffer\"\n  * irc: add option \"fakerecv\" in command /server to simulate a received IRC message (not documented, for debug only)\n  * irc: add option \"-pending\" in command /disconnect (cancel auto-reconnection on servers currently reconnecting) (task #11985)\n  * irc: add signals and tags in messages for irc notify (task #11887)\n  * irc: add support of \"external\" SASL mechanism (task #11864)\n  * irc: allow more than one nick in command /invite\n  * logger: add colors for backlog lines and end of backlog, new options: logger.color.backlog_line and logger.color.backlog_end (task #11966)\n  * relay: add signals \"upgrade\" and \"upgrade_ended\" in WeeChat protocol\n  * relay: add \"date_printed\" and \"highlight\" in signal \"_buffer_line_added\" (WeeChat protocol)\n  * rmodifier: add default rmodifier \"quote_pass\" to hide password in command \"/quote pass\" (bug #36250)\n  * rmodifier: add default rmodifier \"server\" to hide passwords in commands /server and /connect (task #11993)\n  * rmodifier: add option \"release\" in default rmodifier \"nickserv\" (used to hide passwords in command \"/msg nickserv\") (bug #35705)\n\nBug fixes::\n\n  * core: fix crash in focus hook for nicklist (bug #36271)\n  * core: fix truncated configuration files (zero-length) after system crash (bug #36383)\n  * core: fix display bugs and crashes with small windows (bug #36107)\n  * core: fix display bug with prefix when length is greater than max and prefix is ending with a wide char (bug #36032)\n  * core: fix lost scroll when switching to a buffer with a pending search\n  * core: fix display of wide chars on last column of chat area (patch #7733)\n  * api: display warning in scripts when invalid pointers (malformed strings) are given to plugin API functions (warning displayed if debug for plugin is >= 1)\n  * scripts: fix type of argument \"rc\" in callback of hook_process (from string to integer)\n  * guile: fix crash on ARM when loading guile plugin (bug #36479)\n  * guile: add missing function hook_process_hashtable in API\n  * irc: update channel modes by using chanmodes from message 005 (do not send extra command \"MODE\" to server), fix parsing of modes (bug #36215)\n  * irc: hide everything after \"identify\" or \"register\" in messages to nickserv when option irc.look.hide_nickserv_pwd is on (bug #36362)\n  * irc: set user modes only if target nick is self nick in message 221 (patch #7754)\n  * irc: force the clear of nicklist when joining a channel (nicklist was not sync after znc reconnection) (bug #36008)\n  * irc: do not send command \"MODE #channel\" on manual /names (do it only when names are received on join of channel) (bug #35930)\n  * irc: do not allow the creation of two servers with same name but different case (fix error when writing file irc.conf) (bug #35840)\n  * irc: update away flag for nicks on manual /who\n  * irc: display privmsg messages to \"@#channel\" and \"+#channel\" in channel buffer (bug #35331)\n  * irc: fix redirection of message when message is queued for sending on server\n  * irc: check notify immediately when adding a nick to notify list, improve first notify message for a nick (bug #35731)\n  * irc: fix display of color in hostname (join/part/quit messages)\n  * irc: compute hash to find nick color for nick in server message when nick is not in nicklist\n  * irc: close server buffer when server is deleted\n  * irc: add search for lower case nicks in option irc.look.nick_color_force\n  * logger: fix charset of lines displayed in backlog when terminal charset is different from UTF-8 (bug #36379)\n  * perl: fix crash on quit on macOS\n  * relay: keep spaces in beginning of \"input\" received from client (WeeChat protocol)\n  * relay: fix crash on /upgrade when client is connected using WeeChat protocol\n  * relay: redirect some irc messages from clients to hide output (messages: mode, ison, list, names, topic, who, whois, whowas, time, userhost) (bug #33516)\n  * tcl: add missing function hdata_char in API\n  * tcl: fix pointer sent to function hook_signal_send when type of data is a pointer\n\nDocumentation::\n\n  * add Japanese FAQ (patch #7781)\n\nBuild::\n\n  * perl: fix compilation on macOS (bug #30701)\n\n[[v0.3.7]]\n== Version 0.3.7 (2012-02-26)\n\nNew features::\n\n  * core: add support of flags in regular expressions and highlight options\n  * core: add type \"hashtable\" for hdata\n  * core: add signals \"buffer_line_added\" and \"window_switch\"\n  * core: add default keys kbd:[Ctrl+Left] / kbd:[Ctrl+Right] (`meta2-1;5D` / `meta2-1;5C`) for gnome-terminal\n  * core: add option \"hooks\" in command /debug\n  * core: add option weechat.look.scroll_bottom_after_switch (if enabled, restore old behavior before fix of bug #25555 in version 0.3.5)\n  * core: add new option weechat.completion.base_word_until_cursor: allow completion in middle of words (enabled by default) (task #9771)\n  * core: add option \"jump_last_buffer_displayed\" in command /input (key: kbd:[Alt+/]) (task #11553)\n  * core: add option weechat.history.max_buffer_lines_minutes: maximum number of minutes in history per buffer (task #10900), rename option weechat.history.max_lines to weechat.history.max_buffer_lines_number\n  * core: add optional arguments for command /plugin load/reload/autoload\n  * core: use extended regex in filters (task #9497, patch #7616)\n  * api: add modifier \"input_text_for_buffer\" (bug #35317)\n  * api: add support of URL in hook_process / hook_process_hashtable (task #10247)\n  * api: add new functions strcasecmp_range, strncasecmp_range, string_regex_flags, string_regcomp, hashtable_map_string, hook_process_hashtable, hdata_check_pointer, hdata_char, hdata_hashtable and nicklist_get_next_item\n  * alias: add default alias /umode => /mode $nick\n  * irc: add option \"capabilities\" in servers to enable client capabilities on connection\n  * irc: add signal \"irc_server_opened\"\n  * irc: add signal \"xxx,irc_out1_yyy\" and modifier \"irc_out1_xxx\" (outgoing message before automatic split to fit in 512 bytes)\n  * irc: add alias \"ctcp\" for target buffer of CTCP messages\n  * irc: add options irc.look.highlight_{server|channel|pv} to customize or disable default nick highlight (task #11128)\n  * irc: use redirection to get channel modes after update of modes on channel, display output of /mode #channel, allow /mode without argument (display modes of current channel or user modes on server buffer)\n  * irc: add optional server in info \"irc_is_channel\" (before channel name) (bug #35124), add optional server in info_hashtable \"irc_message_parse\"\n  * irc: add case insensitive string comparison based on casemapping of server (rfc1459, strict-rfc1459, ascii) (bug #34239)\n  * irc: add option irc.color.mirc_remap to remap mirc colors in messages to WeeChat colors\n  * irc: allow URL \"irc://\" in command /connect\n  * irc: use extended regex in commands /ignore and /list\n  * guile: new script plugin for scheme (task #7289)\n  * python: add support of Python 3.x (task #11704)\n  * relay: add WeeChat protocol for remote GUI\n  * xfer: display origin of xfer in core and xfer buffers (task #10956)\n\nInternationalization::\n\n  * add Japanese translations\n\nBug fixes::\n\n  * core: fix expand of path `~` to home of user in function string_expand_home (`~/xxx` was OK, but not `~`)\n  * core: fix memory leak when closing buffer\n  * core: fix memory leak in function util_search_full_lib_name\n  * core: automatically add newline char after last pasted line (when pasting many lines with confirmation) (task #10703)\n  * core: fix bug with layout: assign layout number in buffers when doing /layout save\n  * core: do not auto add space after nick completer if option weechat.completion.nick_add_space is off\n  * core: fix signal \"buffer_switch\": send it only once when switching buffer (bug #31158)\n  * core: move option \"scroll_unread\" from command /input to /window\n  * core: save current mouse state in option weechat.look.mouse (set option when mouse state is changed with command /mouse)\n  * core: apply filters after full reload of configuration files (with /reload) (bug #31182)\n  * core: allow list for option weechat.plugin.extension (makes weechat.conf portable across Un*x and Windows) (task #11479)\n  * core: display error in command /buffer if arguments are wrong (bug #34180)\n  * core: fix help on plugin option when config_set_desc_plugin is called to set help on newly created option\n  * core: enable background process under Cygwin to connect to servers, fix reconnection problem (bug #34626)\n  * aspell: fix URL detection (do not check spelling of URLs) (bug #34040)\n  * irc: fix memory leak in SASL/blowfish authentication\n  * irc: fix memory leak when a server is deleted\n  * irc: fix self-highlight when using /me with an IRC bouncer like znc (bug #35123)\n  * irc: use low priority for MODE sent automatically by WeeChat (when joining channel)\n  * irc: do not use option irc.look.nick_color_stop_chars for forced nick colors (bug #33480)\n  * irc: reset read marker of current buffer on manual /join\n  * irc: fix crash when signon time in message 317 (whois, idle) is invalid (too large) (bug #34905)\n  * irc: do not delete servers added in irc.conf on /reload (bug #34872)\n  * irc: remove autorejoin on channels when disconnected from server (bug #32207)\n  * irc: display messages kick/kill/mode/topic even if nick is ignored (bug #34853)\n  * irc: display channel voice notices received in channel buffer (bug #34762), display channel/op notices sent in channel buffer\n  * irc: auto-connect to servers created with \"irc://\" on command line but not other servers if \"-a\" (\"--no-connect\") is given\n  * perl: increment count of hash returned by API (fix crash when script tries to read hash without making a copy)\n  * relay: do not create relay if there is a problem with socket creation (bug #35345)\n  * ruby: fix crash when reloading ruby plugin (bug #34474)\n\nDocumentation::\n\n  * add developer's guide (task #5416)\n\nBuild::\n\n  * core: add library \"pthread\" in CMake file for link on OpenBSD\n  * core: add WEECHAT_HOME option in CMake and configure to setup default WeeChat home (default is \"~/.weechat\") (task #11266)\n  * core: fix compilation under OpenBSD 5.0 (lib utf8 not needed any more) (bug #34727)\n  * core: fix compilation error with \"pid_t\" on macOS (bug #34639)\n\n[[v0.3.6]]\n== Version 0.3.6 (2011-10-22)\n\nNew features::\n\n  * core: add color attribute \"|\" (keep attributes) and value \"resetcolor\" for function color in plugin API (used by irc plugin to keep bold/reverse/underlined in message when changing color) (bug #34550)\n  * core: add new option weechat.look.color_basic_force_bold, off by default: bold is used only if terminal has less than 16 colors (patch #7621)\n  * core: add default key kbd:[F5] (`meta2-[E`) for Linux console\n  * core: add \"inactive\" colors for inactive windows and lines in merged buffers, new options: weechat.look.color_inactive_window, weechat.look.color_inactive_buffer, weechat.look.color_inactive_message, weechat.look.color_inactive_prefix, weechat.look.color_inactive_prefix_buffer, weechat.look.color_inactive_time, weechat.color.chat_inactive_line, weechat.color.chat_inactive_window, weechat.color.chat_prefix_buffer_inactive_line\n  * core: do automatic zoom on current window when terminal becomes too small for windows\n  * core: add new options weechat.look.bar_more_left/right/up/down\n  * core: add new option weechat.look.item_buffer_filter\n  * core: allow name of buffer for command /buffer clear (task #11269)\n  * core: add new command /repeat (execute a command several times)\n  * core: save and restore layout for buffers and windows on /upgrade\n  * core: add option \"-all\" in command \"/buffer unmerge\"\n  * core: add number in windows (add optional argument \"-window\" so some actions for command /window)\n  * core: allow buffer name in /buffer close\n  * core: add support of mouse: new command /mouse, new key context \"mouse\", new options weechat.look.mouse and weechat.look.mouse_timer_delay (task #5435)\n  * core: add command /cursor (free movement of cursor on screen), with key context \"cursor\"\n  * core: automatic scroll direction in /bar scroll (x/y is now optional)\n  * core: add optional delay for key grab (commands /input grab_key and /input grab_key_command, default is 500 milliseconds)\n  * core: allow plugin name in command \"/buffer name\"\n  * core: add context \"search\" for keys (to define keys used during search in buffer with kbd:[Ctrl+r])\n  * core: add new option weechat.look.separator_vertical, rename option weechat.look.hline_char to weechat.look.separator_horizontal\n  * core: add local variable \"highlight_regex\" in buffers\n  * core: add \"hdata\" (direct access to WeeChat/plugin data)\n  * core: add option weechat.look.eat_newline_glitch (do not add new line at end of each line displayed)\n  * core: add options \"infolists\", \"hdata\" and \"tags\" for command /debug\n  * core: add horizontal scrolling for buffers with free content (command /window scroll_horiz) (task #11112)\n  * core: change default value of option weechat.network.gnutls_ca_file to \"/etc/ssl/certs/ca-certificates.crt\"\n  * api: add info \"cursor_mode\"\n  * api: add new functions key_bind, key_unbind, hook_focus, hdata_new, hdata_new_var, hdata_new_list, hdata_get, hdata_get_var_offset, hdata_get_var_type, hdata_get_var_type_string, hdata_get_var_hdata, hdata_get_var, hdata_get_var_at_offset, hdata_get_list, hdata_move, hdata_integer, hdata_string, hdata_pointer, hdata_time, hdata_get_string\n  * irc: allow reason for command /disconnect\n  * irc: allow server name for commands /die and /restart\n  * irc: add new info_hashtable \"irc_message_split\"\n  * irc: add prefix \"#\" for all channels on join (if no prefix given)\n  * irc: improve split of privmsg message (keep ctcp), add split of ison, join, notice, wallops, 005, 353 (bug #29879, bug #33448, bug #33592)\n  * logger: add option logger.file.flush_delay (task #11118)\n\nBug fixes::\n\n  * core: fix freeze when calling function util_file_get_content with a directory instead of a filename\n  * core: display timeout for hook_process command only if debug for core is enabled (task #11401)\n  * core: bufferize lines displayed before core buffer is created, to display them in buffer when it is created\n  * core: fix display of background color in chat area after line feed\n  * core: fix paste detection (problem with end of lines)\n  * core: fix display of paste multi-line prompt with a root input bar (bug #34305)\n  * core: replace deprecated GnuTLS function gnutls_certificate_client_set_retrieve_function by new function gnutls_certificate_set_retrieve_function (GnuTLS >= 2.11.0)\n  * core: use dynamic buffer size for calls to vsnprintf\n  * core: fix memory leak in unhook of hook_connect\n  * core: fix memory leak in display of empty bar items\n  * core: fix input of wide UTF-8 chars under Cygwin (bug #34061)\n  * core: fix bugs with automatic layout (bug #26110), add support of merged buffers in layout (task #10893)\n  * core: fix crash when invalid UTF-8 chars are inserted in command line (bug #33471)\n  * core: stop horizontal bar scroll at the end of content (for bars with horizontal filling) (bug #27908)\n  * core: fix crash when building hashtable string with keys and values\n  * core: replace buffer name by window number in /bar scroll\n  * core: fix bugs with key \"^\" (bug #32072, bug #21381)\n  * core: fix bugs with bar windows: do not create bar windows for hidden bars\n  * core: fix completion bug when two words for completion are equal but with different case\n  * core: fix completion for command arguments when same command exists in many plugins (bug #33753)\n  * core: fix freeze when hook_fd is called with a bad file/socket (bug #33619)\n  * core: fix bug with option weechat.look.hotlist_count_max (value+1 was used)\n  * api: use arguments for infolist \"window\" to return only one window by number\n  * api: fix bug with function config_set_desc_plugin (use immediately description for option when function is called)\n  * scripts: fix crash with scripts not auto-loaded having a buffer opened after /upgrade (input/close callbacks for buffer not set properly)\n  * irc: fix display of items \"away\" and \"lag\" in root bars, refresh all irc bar items on signal \"buffer_switch\" (bug #34466)\n  * irc: fix crash on malformed irc notice received (without message after target)\n  * irc: add missing messages for whois: 223, 264, 343\n  * irc: use high priority queue for sending modes and wallchops messages\n  * irc: rename info_hashtable \"irc_parse_message\" to \"irc_message_parse\"\n  * irc: use color \"default\" for any invalid color in option weechat.color.chat_nick_colors\n  * irc: send WHO command to check away nicks only if channel was not parted\n  * irc: fix crash when malformed IRC message 352 (WHO) is received (bug #33790)\n  * irc: fix crash when command \"/buffer close\" is used in a server command to close server buffer during connection (bug #33763)\n  * irc: fix crash when /join command is executed on a non-irc buffer (bug #33742)\n  * irc: fix bug with comma in irc color code: do not strip comma if it is not followed by a digit (bug #33662)\n  * irc: switch to buffer on /join #channel if channel buffer already exists\n  * irc: set host for nick on each channel message and nick change (if not already set)\n  * irc: update host of nicks on manual /who\n  * irc: fix memory leak on plugin unload (free ignores)\n  * irc: fix memory leak in message parser (when called from other plugins like relay) (bug #33387)\n  * relay: fix bug with self nick when someone changes its nick on channel (bug #33739)\n  * relay: fix memory leak (free some parsed messages) (bug #33387)\n  * relay: fix memory leak on plugin load (free raw messages)\n  * perl: replace calls to SvPV by SvPV_nolen (patch #7436)\n\nBuild::\n\n  * core: fix compilation error (INSTALLPREFIX undeclared) on macOS and when compiling with included gettext (bug #26690)\n\n[[v0.3.5]]\n== Version 0.3.5 (2011-05-15)\n\nNew features::\n\n  * core: add buffer to hotlist if away is set on buffer (even if buffer is displayed), new option weechat.look.hotlist_add_buffer_if_away (task #10948)\n  * core: add option \"balance\" in command /window (key: kbd:[Alt+w], kbd:[Alt+b])\n  * core: add option \"swap\" in command /window (key: kbd:[Alt+w], kbd:[Alt+s]) (task #11001)\n  * core: add option weechat.look.hotlist_buffer_separator\n  * core: add messages counts in hotlist for each buffer, new options: weechat.look.hotlist_count_max, weechat.look.hotlist_count_min_msg and weechat.color.status_count_{msg|private|highlight|other}\n  * core: add tag \"notify_none\" (line with this tag will not update hotlist)\n  * core: add optional bar name in command \"/bar default\"\n  * core: add new option weechat.look.highlight_tags (force highlight on tags)\n  * core: allow list of buffers in command /filter (exclusion with prefix \"!\") (task #10880)\n  * core: allow relative size for command /window resize\n  * core: add some default keys for gnome-terminal (kbd:[Home] / kbd:[End], kbd:[Ctrl+Up] / kbd:[Ctrl+Down], kbd:[Alt+PgUp] / kbd:[Alt+PgDn])\n  * core: add option \"memory\" in command /debug\n  * core: add option weechat.look.read_marker_string\n  * core: add some chars after cursor when scrolling input line: new option weechat.look.input_cursor_scroll (bug #21391)\n  * core: add color \"gray\"\n  * core: add attributes for colors (\"*\": bold, \"!\": reverse, \"_\": underline)\n  * core: dynamically allocate color pairs (extended colors can be used without being added with command \"/color\"), auto reset of color pairs with option weechat.look.color_pairs_auto_reset\n  * core: allow background for nick colors (using \":\")\n  * core: remember scroll position for all buffers in windows (bug #25555)\n  * core: improve display of commands lists in /help (add arguments -list and -listfull) (task #10299)\n  * core: improve arguments displayed in /help of commands\n  * api: add new function config_set_desc_plugin (task #10925)\n  * api: add new functions buffer_match_list and window_search_with_buffer\n  * aspell: add section \"option\" in aspell.conf for speller options (task #11083)\n  * irc: add new options irc.color.topic_old and irc.color.topic_new\n  * irc: add option \"ssl_priorities\" in servers (task #10106, debian #624055)\n  * irc: add modifier \"irc_in2_xxx\" (called after charset decoding)\n  * irc: add new options irc.look.buffer_switch_autojoin and irc.look.buffer_switch_join (task #8542, task #10506)\n  * irc: add new option irc.look.smart_filter_nick\n  * irc: add new options irc.look.color_nicks_in_nicklist and irc.look.color_nicks_in_names\n  * irc: replace options irc.color.nick_prefix_{op|halfop|voice|user} by a single option irc.color.nick_prefixes (task #10888)\n\nBug fixes::\n\n  * core: fix scroll in windows with /window scroll (skip lines \"Day changed to\")\n  * core: recalculate buffer_max_length when buffer short name is changed (patch #7441)\n  * core: do not update hotlist during upgrade\n  * core: apply new value of option weechat.look.buffer_notify_default to all opened buffers\n  * core: prohibit names beginning with \"#\" for bars, proxies, filters and IRC servers (bug #33020)\n  * core: create default bars only if no bar is defined in configuration file\n  * core: fix bug with repeat of last completion (\"%*\"), which failed when many templates are used in completion\n  * core: reload file with certificate authorities when option weechat.network.gnutls_ca_file is changed\n  * core: rebuild bar content when items are changed in an hidden bar\n  * core: fix verification of SSL certificates by calling GnuTLS verify callback (patch #7459, CVE-2011-1428)\n  * core: fix crash when using column filling in bars with some empty items (bug #32565)\n  * core: fix terminal title when $TERM starts with \"screen\"\n  * plugins: fix memory leaks when setting buffer callbacks after /upgrade (plugins: irc, relay, xfer, scripts)\n  * aspell: fix spellers used after switch of window (bug #32811)\n  * irc: fix parsing of message 332 when no topic neither colon are found (bug with bip proxy)\n  * irc: fix nick color in private when option irc.look.nick_color_force is changed\n  * irc: fix tags for messages sent with /msg command (bug #33169)\n  * irc: fix memory leak when copying or renaming server\n  * irc: do not rejoin channels where /part has been issued before reconnection to server (bug #33029)\n  * irc: use nick color for users outside the channel\n  * irc: update short name of server buffer when server is renamed\n  * irc: fix local variable \"away\" on server buffer (set/delete it each time away is set or removed on server)\n  * irc: ignore join if nick is not self nick and if channel buffer does not exist (bug #32667)\n  * irc: fix crash when setting wrong value in option irc.server.xxx.sasl_mechanism (bug #32670)\n  * irc: fix crash when completing /part command on a non-irc buffer (bug #32402)\n  * irc: add many missing commands for target buffer (options irc.msgbuffer.xxx) (bug #32216)\n  * lua: fix crash when many scripts are executing callbacks at same time\n  * perl: fix memory leak when calling Perl functions (bug #32895)\n  * relay: fix crash on /upgrade when nick in irc client is not yet set\n  * relay: allow colon in server password received from client\n  * relay: do not send join for private buffers to client\n  * rmodifier: fix reload of file rmodifier.conf\n  * rmodifier: fix crash when adding rmodifier with invalid regex\n  * xfer: do not close chat buffers when removing xfer from list (bug #32271)\n\nBuild::\n\n  * tcl: fix Tcl detection on some 64-bits systems (bug #32915)\n\n[[v0.3.4]]\n== Version 0.3.4 (2011-01-16)\n\nNew features::\n\n  * core: add 256 colors support, new command /color, new section \"palette\" in weechat.conf (task #6834)\n  * core: add info \"weechat_upgrading\", signal \"upgrade_ended\", display duration of upgrade\n  * core: add new option weechat.look.highlight_regex and function string_has_highlight_regex in plugin API (task #10321)\n  * core: add new option weechat.look.hotlist_unique_numbers (task #10691)\n  * core: add property \"hotlist_max_level_nicks\" in buffers to set max hotlist level for some nicks in buffer\n  * core: add new options weechat.look.input_share and weechat.look.input_share_overwrite (task #9228)\n  * core: add new option weechat.look.prefix_align_min (task #10650)\n  * core: replace the 10 nick color options and number of nick colors by a single option weechat.color.chat_nick_colors (comma separated list of colors)\n  * core: add color support in option weechat.look.buffer_time_format\n  * api: add priority for hooks (task #10550)\n  * api: add new functions: list_search_pos, list_casesearch_pos, hashtable_get_string, hashtable_set_pointer, hook_info_hashtable, info_get_hashtable, hook_hsignal, hook_hsignal_send, hook_completion_get_string, nicklist_group_get_integer, nicklist_group_get_string, nicklist_group_get_pointer, nicklist_group_set, nicklist_nick_get_integer, nicklist_nick_get_string, nicklist_nick_get_pointer, nicklist_nick_set\n  * irc: add option \"-server\" in command /join (task #10837)\n  * irc: add option \"-switch\" in commands /connect and /reconnect\n  * irc: add command /notify, new options irc.look.notify_tags_ison, irc.look.notify_tags_whois, irc.network.notify_check_ison, irc.network.notify_check_whois, new option \"notify\" in servers, new infolist \"irc_notify\" (task #5441)\n  * irc: add new option irc.look.nick_color_force (task #7374)\n  * irc: add command redirection with hsignals irc_redirect_pattern and irc_redirect_command (task #6703)\n  * irc: add new options irc.color.nick_prefix and irc.color.nick_suffix\n  * irc: add new option irc.look.item_away_message\n  * irc: add tag \"nick_xxx\" in user messages\n  * irc: move options from network section to server section: connection_timeout, anti_flood_prio_high, anti_flood_prio_low, away_check, away_check_max_nicks, default_msg_part, default_msg_quit (task #10664, task #10668)\n  * irc: display old channel topic when topic is unset (task #9780)\n  * irc: add new info_hashtable \"irc_parse_message\"\n  * irc: add signal \"irc_input_send\"\n  * irc: rename options irc.look.open_channel_near_server and irc.look.open_pv_near_server to irc.look.new_channel_position and irc.look.new_pv_position with new values (none, next or near_server)\n  * rmodifier: new plugin \"rmodifier\": alter modifier strings with regular expressions (bug #26964)\n  * relay: beta version of IRC proxy, now relay plugin is compiled by default\n  * python: add info \"python2_bin\" (path to Python 2.x interpreter)\n\nBug fixes::\n\n  * core: fix scroll problem on buffers with free content and non-allocated lines (bug #32039)\n  * core: call to function hook_config when config option is created\n  * core: fix infinite loop on GnuTLS handshake when connecting with SSL to server on wrong port or server with SSL problems (bug #27487)\n  * core: fix data sent to callback of hook_process (some data was sometimes missing), use a 64KB buffer for child output and send data to callback only when buffer is full\n  * core: fix crash when displaying groups in buffer nicklist\n  * core: fix bug with message \"day changed to\", sometimes displayed several times wrongly\n  * core: fix default value of bar items options (bug #31422)\n  * core: fix bug with buffer name in \"/bar scroll\" command\n  * core: optimize incremental search in buffer: do not search any more when chars are added to a text not found (bug #31167)\n  * core: fix memory leaks when removing item in hashtable and when setting highlight words in buffer\n  * core: use similar behavior for keys bound to local or global history (bug #30759)\n  * alias: complete with alias value for second argument of command /alias\n  * irc: differentiate notices from messages in private buffer (bug #31980)\n  * irc: update nick modes with message 221 (bug #32038)\n  * irc: fix bug with charset decoding on private buffers (decoding was made for local nick instead of remote nick) (bug #31890)\n  * irc: allow command /reconnect on servers that are not currently connected (bug #30726)\n  * irc: fix topic completion in command /topic when channel topic starts with channel name\n  * irc: improve nick prefixes, all modes (even unknown) are used with PREFIX value from message 005\n  * irc: fix crash/bug when option \"addresses\" for a server is unset or changed when WeeChat is connected to this server (bug #31268)\n  * irc: switch to next server address when IRC error is received after TCP connection but before message 001 (bug #30884)\n  * irc: fix bug with hostmasks in command /ignore (bug #30716)\n  * relay: split of messages sent to clients of irc proxy\n  * scripts: add missing function infolist_reset_item_cursor in API (bug #31057)\n  * lua: fix crash when unloading script\n  * xfer: fix dcc chat buffer name (use irc server in name) (bug #29925)\n  * xfer: fix dcc file transfer for large files (more than 4 GB) on 32-bit systems (bug #31531)\n  * xfer: fix bug at end of file sent, sometimes transfer is still active although file was successfully sent\n\nBuild::\n\n  * core: add support of Python 2.7 in CMake and configure (debian #606989)\n  * ruby: fix compilation with Ruby 1.9.2 (patch #7316)\n\n[[v0.3.3]]\n== Version 0.3.3 (2010-08-07)\n\nNew features::\n\n  * core: use \"!\" to reverse a regex in a filter (to keep lines matching regex and hide other lines) (task #10032)\n  * core: add keys for undo/redo changes on command line (default: kbd:[Ctrl+pass:none[_]] and kbd:[Alt+pass:none[_]]) (task #9483)\n  * core: add new option weechat.look.align_end_of_lines\n  * core: add new option weechat.look.confirm_quit\n  * core: add new option weechat.color.status_name_ssl (task #10339)\n  * core: add hashtables with new functions in plugin API\n  * api: add function string_expand_home, fix bug with replacement of home in paths\n  * irc: add new option irc.look.nick_color_stop_chars\n  * irc: add new options irc.look.display_host_join/join_local/quit and irc.color.reason_quit\n  * irc: add command /wallchops, fix bug with display of notice for ops (task #10021, bug #29932)\n  * irc: add isupport value in servers (content of IRC message 005), with new infos: irc_server_isupport and irc_server_isupport_value\n  * irc: add message in private buffer when nick is back on server after a /quit\n  * irc: add new options irc.network.autoreconnect_delay_growing and irc.network.autoreconnect_delay_max (task #10338)\n  * irc: add missing commands 346, 347 (channel invite list)\n  * irc: improve lag indicator: two colors (counting and finished), update item even when pong has not been received, lag_min_show is now in milliseconds\n  * irc: move options weechat.color.nicklist_prefix to irc plugin\n  * logger: use tag \"no_log\" to prevent a line from being written in log file\n\nBug fixes::\n\n  * core: fix bug with scroll_unread: do not scroll to a filtered line (bug #29991)\n  * core: fix crash with hook_process (when timer is called on a deleted hook process)\n  * core: fix display bug with special chars (ascii value below 32) (bug #30602)\n  * core: fix display bug with attributes like underlined in bars (bug #29889)\n  * api: fix bug with replacement char in function string_remove_color (bug #30296)\n  * irc: fix bug in parser when no argument is received after command, no callback was called, and message was silently ignored (bug #30640)\n  * irc: fix import of certificates created by OpenSSL >= 1.0.0 (bug #30316)\n  * irc: fix display of local SSL certificate when it is sent to server (patch #7218)\n  * irc: use empty real name by default in config, instead of reading real name in /etc/passwd (bug #30111)\n  * irc: fix bug with command line option \"irc://\" (bug #29990), new format for port and channels\n  * irc: fix display of messages 330 and 333 on some servers\n  * irc: fix bug with nick prefix \"*\" (chan founder) on some IRC servers (bug #29890)\n  * irc: fix bug with option irc.network.lag_check when value is 0 (zero)\n  * irc: try other nick when connecting to server and receiving message 437 (nick unavailable)\n  * irc: set buffer local variable \"away\" when opening new channel (bug #29618)\n  * fifo: fix bug with fifo pipe when setting fifo option to \"on\"\n  * xfer: fix bug with double quotes in DCC filenames (bug #30471)\n\n[[v0.3.2]]\n== Version 0.3.2 (2010-04-18)\n\nNew features::\n\n  * core: add new options for command /key: listdefault, listdiff and reset\n  * core: add new command /mute\n  * core: add command line option \"-s\" (or \"--no-script\") to start WeeChat without loading any script\n  * core: improve plugins autoload (option weechat.plugin.autoload): allow to use \"*\" as wildcard and \"!\" to prevent a plugin from being autoloaded (task #6361)\n  * core: add option \"switch_active_buffer_previous\" in command /input (task #10141)\n  * core: add new option weechat.look.time_format to customize default format for date/time displayed (localized date by default), add function util_get_time_string in plugin API (patch #6914)\n  * core: add new option weechat.look.command_chars, add functions string_is_command_char and string_input_for_buffer in plugin and script API\n  * core: add new option weechat.look.read_marker_always_show\n  * api: add \"version_number\" for function info_get to get WeeChat version as number\n  * api: add \"irc_is_nick\" for function info_get to check if a string is a valid IRC nick name (patch #7133)\n  * api: add functions string_encode_base64 and string_decode_base64, fix bug with base64 encoding\n  * api: add functions string_match, string_has_highlight and string_mask_to_regex in script plugin API\n  * api: add description of arguments for functions hook_info and hook_infolist\n  * api: add signals \"day_changed\", \"nicklist_group_added/removed\", \"nicklist_nick_added/removed\"\n  * alias: add custom completion for aliases (task #9479)\n  * scripts: allow script commands to reload only one script\n  * irc: add SASL authentication, with PLAIN and DH-BLOWFISH mechanisms (task #8829)\n  * irc: add new option irc.look.part_closes_buffer to close buffer when /part is issued on channel (task #10295)\n  * irc: add option \"-open\" in command /connect\n  * irc: add option irc.network.connection_timeout (timeout between TCP connection to server and reception of message 001)\n  * irc: add options irc.look.smart_filter_join and irc.look.smart_filter_quit\n  * irc: add option irc.look.item_channel_modes_hide_key to hide channel key in channel modes (bug #23961)\n  * irc: add option irc.look.item_nick_prefix\n  * irc: add command /map\n  * irc: add missing commands 276, 343\n  * logger: allow date format in logger options path and mask (task #9430)\n  * xfer: add signal \"xfer_ended\" (patch #7081)\n\nBug fixes::\n\n  * core: remove unneeded space after time on each line if option weechat.look.buffer_time_format is set to empty value (bug #28751)\n  * core: use arguments for infolist \"nicklist\" to return only one nick or group\n  * core: fix bug with writing of configuration files when disk is full (bug #29331)\n  * core: fix infinite loop with /layout apply and bug when applying layout, sometimes many /layout apply were needed (bug #26110)\n  * gui: refresh screen when exiting WeeChat (to display messages printed after /quit)\n  * gui: fix bug with global history, reset pointer to last entry after each user input (bug #28754)\n  * gui: fix bug with bar background after text with background color (bug #28157)\n  * gui: fix bug with cursor when position is last char of terminal\n  * api: add missing infos in functions buffer_get_{integer|string} and in buffer infolist\n  * api: fix function color in Lua script API\n  * api: fix \"inactivity\" value when no key has been pressed since WeeChat started (bug #28930)\n  * api: return absolute path for info_get of \"weechat_dir\" (bug #27936)\n  * scripts: fix bug with callbacks when loading a script already loaded\n  * perl: fix crash when multiplicity is disabled\n  * perl: fix crash when callbacks are called during script initialization (bug #29018)\n  * perl: fix crash on /quit or unload of plugin under FreeBSD and Cygwin (bug #29467)\n  * perl: fix bug with script filename when multiplicity is disabled (bug #29530)\n  * irc: fix crash with SSL connection if option ssl_cert is set (bug #28752)\n  * irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) (bug #28741)\n  * irc: fix bug with nicks on reconnection: try all nicks in list, even if nick used was not the first in list of nicks\n  * irc: fix command /list: send channel and server name given as argument, and use separate option \"-re\" to allow a regex\n  * irc: fix PART message received on Undernet server (bug #28825)\n  * irc: fix bug with /away -all: set or unset future away for disconnected servers (bug #29022)\n  * irc: fix bug with prefix \"!\" for mode \"a\" (channel admin) (bug #29109)\n  * irc: do not send signals \"irc_in\" and \"irc_in2\" when messages are ignored, add new signals \"irc_raw_in\" and \"irc_raw_in2\"\n  * irc: apply smart filter only on channels, not private buffers (bug #28841)\n  * xfer: fix crash when purging old xfer chats (bug #28764)\n\nBuild::\n\n  * irc: fix compilation with old GnuTLS versions (bug #28723)\n\n[[v0.3.1.1]]\n== Version 0.3.1.1 (2010-01-31)\n\nBug fixes::\n\n  * irc: fix crash with SSL connection if option ssl_cert is set (bug #28752)\n  * irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) (bug #28741)\n  * xfer: fix crash when purging old xfer chats (bug #28764)\n\nBuild::\n\n  * irc: fix compilation with old GnuTLS versions (bug #28723)\n\n[[v0.3.1]]\n== Version 0.3.1 (2010-01-23)\n\nNew features::\n\n  * core: add option \"grab_key_command\" in command /input (bound by default to kbd:[Alt+k])\n  * alias: new expansions for alias arguments ($n, $-m, $n-, $n-m, $*, $~) (patch #6917)\n  * alias: allow use of wildcards for /alias list (patch #6925)\n  * alias: allow /unalias to remove multiple aliases (patch #6926)\n  * irc: add new commands /allchan and /allserv with excluding option, commands /ame and /amsg are now aliases, new aliases /aaway and /anick\n  * irc: add options to customize target buffer for messages (task #7381)\n  * irc: add new output queue for messages with low priority (like automatic CTCP replies), high priority is given to user messages or commands\n  * irc: use self-signed certificate to auto identify on IRC server (CertFP) (task #7492, debian #453348)\n  * irc: check SSL certificates (task #7492)\n  * irc: add option \"autorejoin_delay\" for servers (task #8771)\n  * irc: add option to use same nick color in channel and private (task #9870)\n  * irc: add missing command 275 (patch #6952)\n  * irc: add commands /sajoin, /samode, /sanick, /sapart, /saquit (task #9770)\n  * irc: add options for CTCP, to block/customize CTCP reply (task #9693)\n  * irc: add missing CTCP: clientinfo, finger, source, time, userinfo (task #7270)\n  * irc: add all server options for commands /server and /connect\n  * irc: add arguments for command /rehash\n  * irc: improve mask used by command /kickban\n  * xfer: add color for nicks in chat\n  * xfer: add missing command /me (bug #28658)\n  * gui: add color \"darkgray\", add support for background with light color\n\nBug fixes::\n\n  * core: fix bug with script installation on BSD/macOS (patch #6980)\n  * core: fix compilation under Cygwin (patch #6916)\n  * core: fix plural form in translation files (bug #27430)\n  * core: fix terminal title bug: do not reset it when option weechat.look.set_title is off (bug #27399)\n  * core: fix buffer used by some input functions called via plugin API with buffer pointer (bug #28152)\n  * alias: fix bug with buffer for execution of alias, when called from plugin API with function command (bug #27697)\n  * alias: fix bug with arguments (bug #27440)\n  * irc: improve error management on socket error (recv/send)\n  * irc: fix nick color for nicks with wide chars (bug #28547)\n  * irc: fix autorejoin on channels with key\n  * irc: fix command /connect (options -ssl, -ipv6 and -port) (bug #27486)\n  * xfer: add missing charset decoding/encoding for IRC DCC chat (bug #27482)\n  * fifo: remove old pipes before creating new pipe\n  * gui: fix color \"black\" (bug #23882, debian #512957)\n  * gui: fix message \"Day changed to\", sometimes displayed at wrong time (bug #26959)\n  * gui: fix bug with URL selection in some terminals (caused by horizontal lines) (bug #27700)\n  * gui: use default auto completion for arguments of unknown commands\n  * gui: fix alignment problem for buffer name when a merged buffer is closed (bug #27617)\n  * gui: update hotlist when a buffer is closed (bug #27470), remove buffer from hotlist when buffer is cleared (bug #27530)\n  * gui: fix /input history_global_next: reset input content when last command in history is reached\n  * api: fix function bar_set for python/lua/ruby (patch #6912)\n\nBuild::\n\n  * core: fix CMake directories: let user customize lib, share, locale and include directories (patch #6922)\n  * ruby: add support of Ruby >= 1.9.1 (patch #6989)\n\n[[v0.3.0]]\n== Version 0.3.0 (2009-09-06)\n\nNew features::\n\n  * core: add group support in nicklist\n  * core: add /reload command to reload WeeChat and plugins config files (signal SIGHUP is caught to reload config files)\n  * core: add new /layout command and save_layout_on_exit config option, to save/restore windows and buffers order (task #5453)\n  * core: add new options for completion, optional stop instead of cycling with words found (task #5909)\n  * core: new name for configuration files (*.conf instead of *.rc)\n  * core: improve /set command, new command /unset (task #6085)\n  * core: add new input action \"set_unread_current_buffer\" to set unread marker for current buffer only (task #7286)\n  * core: remove key functions, replaced by /input command\n  * core: add argument with buffer number/range for command \"/buffer close\" (task #9390, task #7239)\n  * core: add new command /wait (schedule a command execution in future)\n  * core: improve main loop: higher timeout in select, less CPU usage\n  * gui: new display engine, with prefix and message for each line\n  * gui: add new type of buffer, with free content\n  * gui: add tags for lines and custom filtering by tags or regex (task #7674)\n  * gui: add buffer merging (task #7404)\n  * gui: add custom bars, with custom items\n  * gui: add key to zoom a window (task #7470)\n  * gui: add keys to move into last visited buffers: kbd:[Alt+<] and kbd:[Alt+>]\n  * gui: come back to last visited buffer when closing a buffer\n  * gui: add new option scroll_page_percent to choose percent of height to scroll with kbd:[PgUp] and kbd:[PgDn] keys (task #8702)\n  * gui: add number of lines remaining after last line displayed in \"-MORE-\" indicator (task #6702)\n  * network: add support for more than one proxy, with proxy selection for each IRC server (task #6859)\n  * aspell: improve plugin: use of many dictionaries, global dictionary, real time checking (optional), fix bugs with utf-8\n  * irc: add irc plugin (replaces old IRC code in core) (task #6217)\n  * irc: add smart join/part/quit message filter (task #8503)\n  * irc: use of many addresses for servers (auto-switch when a connection fails), nicks are now set with one option \"nicks\" (task #6088)\n  * irc: add some colors in messages from server (for text and nicks) (task #8926)\n  * irc: add color decoding in title for IRC channels (task #6030)\n  * irc: add missing commands (328, 369)\n  * logger: add logger plugin with new features: backlog, level for messages to log (task #8592), level by buffer (task #6687), filename mask by buffer, option \"name_lower_case\" (bug #19522)\n  * relay: add relay plugin (network communication between WeeChat and remote application)\n  * xfer: add speed limit for DCC files sending (task #6178)\n  * xfer: add new option xfer.file.use_nick_in_filename for Xfer files (task #7140)\n  * plugins: add some other plugins: alias, demo, fifo, tcl, xfer\n  * scripts: new scripts: weeget.py (script manager), jabber.py (jabber/XMPP protocol), go.py (quick jump to buffers), buffers.pl (sidebar with list of buffers), iset.pl (set options interactively), weetris.pl (tetris-like game), mastermind.pl, ...\n  * api: add hooks: command, timer, file descriptor, process, connection, print, signal, config, completion, modifier, info, infolist\n  * api: new plugin API with many new functions: hooks, buffer management and nicklist, bars, configuration files, network, infos/infolists, lists, upgrade\n\nInternationalization::\n\n  * add Polish translations\n\nBug fixes::\n\n  * core: fix nick completion bug (missing space after nick)\n  * gui: fix completion with non-latin nicks (bug #18993)\n  * gui: fix display bug with some weird UTF-8 chars (bug #19687)\n  * gui: fix bug with wide chars in input (bug #16356)\n  * gui: fix bug when switching window, scrollback is now preserved (task #7680)\n  * network: fix network connection for hostnames resolving to several IPs: try all IPs in list until one succeeds (bug #21473, debian #498610)\n  * alias: fix bug with alias, use current buffer to run commands (bug #22876)\n  * irc: fix lock with SSL servers when connection fails, and when disconnecting during connection problem (bug #17584)\n  * irc: command /whois is now authorized in private without argument (task #7482)\n  * irc: fix private buffer name with Irssi proxy (bug #26589)\n  * irc: remove kernel info in CTCP VERSION reply (task #7494)\n  * irc: fix mode parsing when receiving modes with arguments (bug #26793)\n  * scripts: do not auto-load hidden files (bug #21390)\n\n[[v0.2.6.3]]\n== Version 0.2.6.3 (2009-06-13)\n\nBug fixes::\n\n  * fix GnuTLS detection (use pkg-config instead of libgnutls-config) (bug #26790)\n\n[[v0.2.6.2]]\n== Version 0.2.6.2 (2009-04-18)\n\nBug fixes::\n\n  * fix bug with charset decoding (for example with iso2022jp) (bug #26228)\n\n[[v0.2.6.1]]\n== Version 0.2.6.1 (2009-03-14)\n\nBug fixes::\n\n  * fix crash with some special chars in IRC messages (bug #25862, CVE-2009-0661)\n\n[[v0.2.6]]\n== Version 0.2.6 (2007-09-06)\n\nNew features::\n\n  * add new option \"deloutq\" to /server command to delete all servers messages out queues (task #7221)\n  * add string length limit for setup file options\n  * add option to align text of messages (except first lines) (task #7246)\n  * add paste detection, new options look_paste_max_lines and col_input_actions (task #5442)\n  * add support of channel mode +u (channel user) (bug #20717)\n  * improve /connect command to connect to a host by creating a temporary server, add option to /server to create temporary server (task #7095)\n  * add \"copy\", \"rename\" and \"keep\" options to /server command\n  * allow clear of multiple selected buffers with /clear (patch #6112)\n  * add key for setting unread marker on all buffers (default: kbd:[Ctrl+s], kbd:[Ctrl+u]) (task #7180)\n  * improve command /server ant its output\n  * add 3 default new keys: kbd:[Ctrl+b] (left), kbd:[Ctrl+f] (right), kbd:[Ctrl+d] (delete)\n  * add \"buffer_move\" event handler to plugins API (task #6708)\n  * add key function \"jump_previous_buffer\" to jump to buffer previously displayed (new key: kbd:[Alt+j], kbd:[Alt+p]) (task #7085)\n  * add \"%*\" to completion template, to repeat last completion\n  * add \"-nojoin\" option for /connect and /reconnect commands (task #7074)\n  * add \"scroll\" option to /buffer command\n  * down key now saves input to history and clears input line (task #7049)\n  * command /away allowed when not connected to server (internally stored and AWAY command is sent when connecting to server) (task #7003)\n  * add argument for /upgrade command (path to binary)\n  * add hotlist sort with new option \"look_hotlist_sort\" (task #5870)\n\nBug fixes::\n\n  * fix bug with log of plugin messages (option log_plugin_msg)\n  * fix display bug with some special chars in messages (some words were truncated on screen) (bug #20944)\n  * fix UTF-8 bug with color encoding/decoding\n  * fix crash when searching text in buffer with kbd:[Ctrl+r] (bug #20938)\n  * fix bug with flock when home is on NFS filesystem (bug #20913)\n  * fix user modes in nicklist when ban and nick mode are received in the same MODE message (bug #20870)\n  * fix IRC message 333: silently ignore message if error when parsing it\n  * fix server option \"command_delay\": does not freeze WeeChat any more\n  * fix bug with highlight and UTF-8 chars around word (bug #20753)\n  * fix nick prefix display on servers that doesn't support all prefixes (bug #20025)\n  * fix terminal encoding detection when NLS is disabled (bug #20646)\n  * fix crash when sending data to channel or pv on disconnected server (bug #20524)\n  * fix bugs with IRC color in messages, now color codes are inserted in command line with kbd:[Ctrl+c], kbd:[Ctrl+b].. instead of %C,%B,.. (bug #20222, task #7060)\n  * fix bug with smart nick completion (last speakers first) when a nick is changed\n  * fix charset bug with channel names in status bar (bug #20400)\n  * fix log file when channel name contains \"/\" (bug #20072)\n  * fix bug with /topic when channel not open and topic not defined (bug #20141)\n\nDocumentation::\n\n  * add Swedish quickstart guide\n\n[[v0.2.5]]\n== Version 0.2.5 (2007-06-07)\n\nNew features::\n\n  * add missing IRC commands (327, 378, 379) (bug #20091)\n  * add \"%M\" for completion with nicks of current server (nicks on open channels) (task #6931)\n  * improve key bindings: now possible to bind a key on many commands, separated by semicolon (task #5444)\n  * improve IRC long message split: use word boundary (task #6685)\n  * add protocol priority for GnuTLS (patch #5915)\n  * add channel admin mode \"!\" for some IRC servers\n  * add /reconnect command (task #5448)\n  * add \"-all\" option for /connect and /disconnect commands (task #6232)\n  * improve nick completion: completion with last speakers first and self nick at the end; add option look_nick_completion_smart, enabled by default (task #5896)\n  * add color for input text not found in buffer history\n\nBug fixes::\n\n  * fix /quote command: now allowed when socket is OK (even if IRC connection to server is not OK) (bug #20113)\n  * fix hotlist when exiting search mode: current buffer is removed from hotlist\n  * remove \":\" for unknown IRC commands before arguments (bug #19929)\n  * fix \"%C\" completion: now completes with all channels of all servers\n  * fix bug with \"/buffer query_name\", add server and channel completion for /buffer command (bug #19928)\n  * fix IRC mode parsing when receiving modes with arguments (bug #19902)\n  * fix crash with IRC JOIN malformed message (bug #19891)\n  * fix bug with nick prefixes on some IRC servers (bug #19854)\n  * improve setup file save: now writes temporary file, then rename it (task #6847)\n  * fix bug with $nick/$channel/$server variables in commands\n  * forget current nick when user manually disconnects from server\n  * fix nick display in input window\n  * fix bug with erroneous nickname when connecting to server (bug #19812)\n  * fix display bugs in IRC error messages\n  * fix bug with iso2022jp locale (bug #18719)\n  * fix string format bug when displaying string through plugin script API\n  * fix nick completion in command arguments (bug #19590)\n  * fix possible crash with nick completion when a nick leaves channel (bug #19589)\n  * fix USER message when connecting to IRC server (patch #5835)\n\nBuild::\n\n  * add CMake for weechat compilation (patch #5943)\n\n[[v0.2.4]]\n== Version 0.2.4 (2007-03-29)\n\nNew features::\n\n  * rename log file for DCC chat (now <server>.dcc.<nick>.weechatlog)\n  * add current buffer in hotlist when scrolling up in buffer (task #6664)\n  * improve password hiding, code cleanup (bug #19229)\n  * add new return code in plugin API to force highlight (for message handlers only)\n  * add \"call\" option to /key command, add new key function \"insert\" to insert text on command line (task #6468)\n  * add event handler to plugin API\n  * add numeric argument for /clear command (buffer number) (patch #5372)\n  * add new key (kbd:[Ctrl+r]) for interactive and incremental search in buffer history (task #6628)\n\nBug fixes::\n\n  * fix color bug with IRC messages displayed by plugins (bug #19442)\n  * fix topic charset, now using channel charset if defined (bug #19386)\n  * fix crash when closing a pv if a DCC chat is open on same nick (bug #19147)\n  * fix bug with channel topic after reconnection (not erased) (bug #19384)\n  * fix bug with explode_string / free_exploded_string when max_items > 0\n  * fix /topic completion when no topic set on current channel (bug #19322)\n  * fix bug with server buffer when \"look_one_server_buffer\" is ON and server buffer is moved to any number > 1 (bug #19219)\n  * fix /help command: displays plugin help for redefined commands (bug #19166)\n  * prefix \"/\" disabled in commands (patch #5769)\n  * fix completion of redefined commands removed by plugins (bug #19176)\n  * fix memory leaks in perl and python plugins (bug #19163)\n  * fix permissions on \"dcc\" and \"logs\" directories (bug #18978)\n  * fix crash when /away command is issued with no server connection (bug #18839)\n  * fix crash when closing a buffer opened on many windows\n  * fix freeze with SSL server when disconnecting after connection loss (bug #18735)\n\nDocumentation::\n\n  * add Scots quickstart guide\n\n[[v0.2.3]]\n== Version 0.2.3 (2007-01-10)\n\nBug fixes::\n\n  * fix display bugs with nicklist at top/bottom when look_nicklist_separator is OFF (bug #18737)\n  * fix iconv problem, causing truncated words when using iso locale\n  * fix topic scroll when topic has multi-bytes chars\n  * fix bugs with charset: now decodes/encodes nicks and channels in IRC messages (bug #18716)\n\nBuild::\n\n  * fix compilation problem with iconv under FreeBSD\n\n[[v0.2.2]]\n== Version 0.2.2 (2007-01-06)\n\nNew features::\n\n  * add anti-flood option (irc_anti_flood) (task #5442)\n  * plugins: \"add_message_handler\" now accepts \"*\" for all IRC messages\n  * add keys (kbd:[F9] / kbd:[F10]) to scroll topic (task #6030)\n  * add auto completion with channels and filenames (task #5423)\n  * add option \"look_nicklist_separator\" (task #5437)\n  * add \"irc_send_unknown_commands\" option to send unknown commands to IRC server (OFF by default) (task #5947)\n  * /charset command and charset conversions now made by \"charset\" plugin\n  * add filename completion (task #5425)\n  * add \"modifier\" in plugins API\n  * improve /plugin command\n  * add date in plugin function get_buffer_data\n  * add more values for config boolean values: y/true/t/1 and n/false/f/0\n\nBug fixes::\n\n  * fix bug with status bar (missing refresh) when closing a buffer\n  * fix bug with use of first buffer for a channel if not connected to server (now allowed only for a server buffer)\n  * fix refresh bug with private buffer title\n  * fix bug with nick completion in command arguments (now uses option look_nick_completion_ignore)\n  * fix display bug with color for first line on screen (bug #17719)\n  * fix bug with set_config function in plugins API (bug #18448)\n  * fix memory leak in keyboard input\n  * fix refresh bug when changing config options if window is split\n  * add space between chat and nicklist when position is \"right\" (bug #17852)\n  * fix bug with DCC SEND when filename begins with \"~\"\n  * fix display bug in status bar, wrong length when using UTF-8\n  * fix bug with ignore: now any IRC command is allowed\n  * fix crash with kbd:[Ctrl+t] (transpose) and one char on line (bug #18153)\n  * fix bug on ignore with \"mode\" IRC command (bug #18058)\n  * fix crash when loading ruby script if file does not exist, with Ruby >= 1.9 only (bug #18064)\n  * mode changes with /op, /deop, /voice, /devoice, /halfop, /dehalfop are now sent in one mode command to server (task #5968)\n  * fix bug with /alias and arguments (like $1), now text after argument(s) is used (bug #17944)\n  * fix minor display bug with special chars on some arch like PPC\n\nBuild::\n\n  * fix some portability bugs (patch #5271)\n  * fix iconv detection for BSD (patch #5456)\n  * fix typo in configure.in (bash specific test) (patch #5450)\n\n[[v0.2.1]]\n== Version 0.2.1 (2006-10-01)\n\nNew features::\n\n  * command \"/away -all\" now allowed when not connected to current server\n  * new signals handled: SIGTERM and SIGHUP (received when terminal is closed): clean WeeChat quit (send quit to irc servers then quit WeeChat)\n  * add some new default key bindings for existing keys (for some OS)\n  * command /key now OK with one argument (key name): display key if found\n  * add current channel completion for /ctcp command\n  * values yes/no accepted (as on/off) for config boolean values (task #5454)\n  * add server default notify level (set by /buffer notify on server buffer) (task #5634)\n  * add special vars $nick/$channel/$server for server_command, alias and plugin command handlers\n  * add arguments $1,$2,..,$9 and $* for alias (task #5831)\n  * add hotlist in session file when using /upgrade command (task #5449)\n\nBug fixes::\n\n  * fix crash for DCC receiver when resuming a file (bug #17885)\n  * fix DCC error for sender when receiver cancels DCC (bug #17838)\n  * fix random crash with /upgrade command (error when loading buffers)\n  * fix buffer search by server/channel: now if only channel is specified, a channel of another server can be found\n  * fix highlight for DCC, invite and notice: when a window is displaying buffer, there's no highlight\n  * fix bug with CTCP VERSION sent on channels (bug #17547)\n  * fix bugs in get_buffer_data which breaks the retrieval of buffer content (perl, lua)\n  * fix nicklist display bug when top/bottom (not enough lines) (bug #17537)\n  * fix bug with auto-rejoin of keyed channels (bug #17534)\n  * add default nick completion when line starts with \"//\" (bug #17535)\n  * fix crashes with /buffer and /charset commands when not connected to any server (bug #17525)\n  * fix nick refresh problem with unrealircd specific modes: chan owner (~) and chan admin (&) (bug #17340)\n\n[[v0.2.0]]\n== Version 0.2.0 (2006-08-19)\n\nNew features::\n\n  * add \"C\"lear option on IRC raw buffer\n  * IRC raw buffer now uses join/part prefix with color to display messages\n  * add send of \"quit\" message to server when using /disconnect\n  * add \"%m\" for completion with self nick (on current server)\n  * add missing IRC commands (310, 326, 329, 338)\n  * improve DCC speed (up to x5 on LAN) by forking for DCC files and a new option \"dcc_fast_send\" (does not wait for ACK) (task #5758)\n  * add \"look_save_on_exit\" option (patch from Emanuele Giaquinta)\n  * add new functions in plugin/script API: get window info, get buffer info, get buffer content\n  * add color encoding for some commands like /me\n  * add aspell plugin\n\nBug fixes::\n\n  * fix \"wallops\" command when received, now displayed by WeeChat (bug #17441)\n  * fix /wallops command (now many words are correctly sent)\n  * fix command 348 (channel exception list, received by /mode #chan e)\n  * add missing modes (channel & user), now all modes are allowed (bug #16606)\n  * fix DCC restore after /upgrade (order is now correctly saved)\n  * fix away after server disconnection (now away is set again when reconnecting) (bug #16359)\n  * fix DCC file connection problem (connection from receiver to sender)\n  * fix crash when purging DCC with high number of DCC (> window size)\n  * fix completion for command handlers (now empty completion_template means nick completion, \"-\" string means no completion at all)\n  * fix nick alignment problem when look_nickmode is off\n  * add generic function for incoming numeric IRC commands (bug #16611)\n  * fix crash when doing \"/part something\" on a server buffer (bug #17201)\n  * charsets are now checked when set by /charset command\n  * fix crash on DCC buffer under Darwin 8 (bug #17115)\n  * fix bug with spaces in script names (bug #16957)\n  * fix random crash when \"MODE #chan -l\" is received\n  * fix bug in IRC parser (random crash with malformed IRC messages)\n  * fix refresh bugs when terminal is resized: too many refreshes, display bug with split windows\n  * case ignored for channel names in charset options (bug #16858)\n  * fix crash when setting look_one_server_buffer to ON (bug #16932)\n  * fix display bug with special char (bug #16732)\n  * rename plugins names (remove \"lib\" prefix in name)\n  * fix crash when closing DCC/raw buffer if 2 are open (bug #16808)\n  * fix crashes with DCC chat remove/purge on DCC view (bug #16775)\n  * fix bug with connection to bnc (bug #16760)\n  * command /save now writes plugins options (~/.weechat/plugins.rc)\n  * fix crash with register function in plugin scripts (bug #16701)\n  * fix random crash at exit (/quit or /upgrade) with split windows\n\nDocumentation::\n\n  * add Polish, Russian and Czech quickstart guide\n\nBuild::\n\n  * add configure option for doc XSL prefix (bug #16991)\n\n[[v0.1.9]]\n== Version 0.1.9 (2006-05-25)\n\nNew features::\n\n  * add backtrace when WeeChat crashes, log file automatically renamed\n  * add new key to find previous completion (kbd:[Shift+Tab] by default)\n  * add missing IRC commands (006, 007, 290, 292, 310, 379, 437, 974)\n  * add new option to customize input prompt\n  * add nick modes\n  * add hostnames associated to nicks (available for /ban completion)\n  * add \"+p\" mode for channels, fix mode display in status bar\n  * add nick alignment options\n  * add keyboard handler to plugin API\n  * improve script plugin loader\n  * add hostname/IP option for connection to server\n  * add /setp command (set plugin options)\n  * aliases are executed before WeeChat/IRC commands, add /builtin command\n  * add /cycle command, /part command does close buffer any more\n\nInternationalization::\n\n  * add Russian translations (thanks to Pavel Shevchuk)\n\nBug fixes::\n\n  * fix /squery command (message sent to server, now OK with more than two arguments)\n  * fix /alias command (with an alias name, display content)\n  * add lock for log file (~/.weechat/weechat.log), only one WeeChat process can use this file (bug #16382)\n  * fix crash with malformed UTF-8 strings\n  * fix crash with ncurses color when too many colors defined in ncurses (bug #16556)\n  * fix bug with long outgoing IRC messages (> 512 bytes) (bug #16358)\n  * fix Ruby crash when handler does not return OK or KO (bug #16552)\n  * fix UTF-8 display bug with chars using more than one cell on screen (bug #16356)\n  * fix display bug with DCC file size when > 1 GB\n  * fix refresh bug (deadlock in curses) when terminal is resized (bug #16542)\n  * fix nicklist sort bug\n  * fix crash when multiple pv have same name: now it's forbidden and pv buffer is not renamed (when a nick changes) if another exists with same name (bug #16369)\n  * command /clear [-all] now clears hotlist\n  * fix crash after /upgrade if a line in history is empty (bug #16379)\n  * fix many crashes with DCC chat (bug #16416)\n  * fix commands 332, 333 (/topic now OK when channel is not opened)\n  * remove color encoding and charset conversion for commands (only allowed in text sent to channel/private)\n  * fix /names command: now displays result when not on a channel\n  * fix refresh bug (too many refresh) when terminal is resized\n  * fix nicklist display bugs when on top or bottom of chat window\n  * fix high CPU usage when running under a Screen that has been killed\n\nDocumentation::\n\n  * add German doc (thanks to Frank Zacharias)\n\nBuild::\n\n  * fix --disable-plugins option in configure script\n  * improve Lua detection (bug #16574)\n\n[[v0.1.8]]\n== Version 0.1.8 (2006-03-18)\n\nNew features::\n\n  * improve alias completion (now uses target command for completion)\n  * add missing IRC command (487)\n  * add inactivity time, available for plugins via get_info(\"inactivity\")\n  * add keys kbd:[Alt+Home] / kbd:[Alt+End] to scroll top/bottom, kbd:[Alt+F11] / kbd:[Alt+F12] to scroll nicklist top/bottom\n  * add special names for plugin message handlers: weechat_pv, weechat_highlight, weechat_ctcp, weechat_dcc\n  * add IRC raw data buffer (new key: kbd:[Alt+j], kbd:[Alt+r])\n  * add new plugins functions: add_timer_handler, remove_timer_handler, remove_infobar\n  * plugin messages handlers now called when message is ignored (by /ignore)\n  * new behavior for messages ignored by a message handler: now WeeChat executes standard handler, treating message as \"ignored\"\n  * many commands allowed for aliases\n  * many commands allowed when connecting to server\n  * add Lua script plugin\n  * add functions in plugins API: get_server_info, free_server_info, get_channel_info, free_channel_info, get_nick_info, free_nick_info\n  * add option \"look_nick_complete_first\" (patch from Gwenn)\n  * add option \"look_open_near_server\" (patch from Gwenn)\n  * add new scroll keys for a few lines up/down (default: kbd:[Alt+PgUp] / kbd:[Alt+PgDn]) (patch from Pistos)\n  * add new option \"irc_away_check_max_nicks\" to disable away check on channels with high number of nicks (patch from Gwenn)\n  * add new command line argument for setting WeeChat home dir (-d or --dir) (patch from Gwenn)\n  * add option \"irc_show_away_once\", to show away message only once in pv\n\nInternationalization::\n\n  * add partial Hungarian translations\n\nBug fixes::\n\n  * improve Ruby plugin\n  * fix /set command when internal server name contains one or many dots\n  * fix get_info plugin API function when no server at all is opened\n  * fix display bug when top of buffer is displayed and first line is removed (according to \"history_max_lines\" setting)\n  * fix /mode command output\n  * fix completion problem in private with nicks\n  * script plugins now load scripts in WeeChat system share directory\n  * /msg command does not open any buffer any more\n  * fix crash when using global history (when older entry is removed)\n  * fix display bug with /kill command\n  * fix bug with /upgrade and servers buffer\n  * fix bug with get_dcc_info plugin interface function\n  * fix bug with charset in infobar highlights\n  * fix bug with buffer detection in plugins/scripts commands\n  * fix bug with /history command\n\n[[v0.1.7]]\n== Version 0.1.7 (2006-01-14)\n\nNew features::\n\n  * remove \"irc_default_msg_away\" setting, for RFC 2812 conformity (/away command without argument only removes away status), new values for \"irc_display_away\" (off, local, channel)\n  * add color for window separators (when split)\n  * add completion system for plugins/scripts commands\n  * add charset by server and channel, new command: /charset\n  * add Ruby script plugin\n  * add /upgrade command\n  * add ETA (Estimated Time of Arrival) for DCC files\n  * /nick command is now allowed when not connected to server\n  * add server/channel argument to /buffer command for jumping to buffer\n  * add new keys for switching to other windows: kbd:[Alt+w], kbd:[Alt+Arrow]\n  * add new keys for scrolling to previous/next highlight: kbd:[Alt+p] / kbd:[Alt+n]\n  * add \"read marker\": an indicator for first unread line in a server or channel buffer (new key kbd:[Alt+u] to scroll to marker)\n  * new window management: custom size for windows, auto resize when terminal is resized\n  * add /history command\n\nBug fixes::\n\n  * fix msg command (now allowed in private buffer with \"*\" as target)\n  * fix refresh bug with Solaris when term size is changed\n  * fix plugins autoload\n  * fix display bug in chat window when a message length equals to window width\n  * fix infinite loop when resizing term to small size\n\nBuild::\n\n  * replace Texinfo doc by XML Docbook\n\n[[v0.1.6]]\n== Version 0.1.6 (2005-11-11)\n\nNew features::\n\n  * new color management system, IRC colors are now correctly displayed and can be removed by new options irc_colors_receive and irc_colors_send\n  * add setting for having one server buffer for all servers (look_one_server_buffer)\n  * add setting for ignoring some chars when completing nicks\n  * signal SIGPIPE is now ignored\n  * add partial match for highlights\n  * add dcc_own_ip and dcc_port_range settings\n  * full UTF-8 support, auto-detection of UTF-8 usage (locale)\n  * add \"Day changed to [date]\" message when day changes\n  * new plugin interface, rewritten from scratch: now loads dynamic C library, and perl/python are script plugins\n  * log options (for server/channel/private) can now be set while WeeChat is running\n  * add channel modes +e and +f\n  * add some missing IRC commands, fix command 367\n  * add colors for input buffer and current channel of status bar\n  * add online help for config options (with /set full_option_name)\n  * enhanced \"smart\" hotlist, with names (new options: look_hotlist_names_{count|level|length})\n\nBug fixes::\n\n  * fix scroll problem when one line is bigger than screen size\n  * fix IRC message parser bug\n\n[[v0.1.5]]\n== Version 0.1.5 (2005-09-24)\n\nNew features::\n\n  * add /ame command (send CTCP action to all channels of all connected servers)\n  * add setting \"irc_notice_as_pv\" to see notices as pv\n  * add nicks colors in setup file\n  * add some missing IRC commands\n  * add /ignore and /unignore commands\n  * signal SIGQUIT is now ignored\n  * jump to next server now saves current channel buffer for each server\n  * add keys kbd:[Ctrl+Up] / kbd:[Ctrl+Down] to call previous/next command in global history (common to all buffers)\n\nBug fixes::\n\n  * fix DCC bug: delete failed file only if really empty (on disk)\n  * fix IRC message parser bug\n  * fix scroll problem (screen moving when scrolling and new line displayed)\n  * fix infinite loop when scrolling back and displaying long lines\n  * fix crash when closing a buffer used by more than one window\n  * fix DCC display bug (now decodes string according to charset)\n  * fix bug with strings comparison (str[n]casecmp) and some locales (like Turkish), now using ASCII comparison (thanks to roktas)\n  * fix refresh bug when one line is bigger than screen size\n  * fix look_nicklist_min_size and look_nicklist_max_size options\n  * fix refresh bug when changing channel modes\n\n[[v0.1.4]]\n== Version 0.1.4 (2005-07-30)\n\nNew features::\n\n  * join and part/quit prefixes (arrows) now displayed with different colors\n  * add \"irc_highlight\" setting, to get highlight with any word\n  * add /amsg command (send text to all channels of all connected servers)\n  * add color for private in hotlist (different than color for highlight)\n  * add DCC resume and timeout\n  * add function for Perl/Python to get DCC list\n  * new keyboard management: keys are setup in config file, add new command /key, add some new default keys, kbd:[Alt+k] is used to grab key (useful for /key command)\n  * add seconds in infobar time (optional thanks to new setting)\n  * add auto-prefix with \"#\" for channels (if no prefix found), with /join command\n\nBug fixes::\n\n  * fix auto-rejoin for channels with key\n  * fix /ctcp command (now any command/data allowed)\n  * fix SIGSEGV handler (now write a core file by aborting program)\n  * fix statusbar & infobar background refresh problem with some systems\n  * fix FIFO pipe (command now authorized on a buffer not connected to an IRC server)\n  * topic completion now decodes UTF-8 string\n  * fix bug with IRC URL on command line (irc://)\n  * fix some curses refreshes\n\n[[v0.1.3]]\n== Version 0.1.3 (2005-07-02)\n\nNew features::\n\n  * proxy support (http, socks4, socks5) with authentication (http, socks5) and ipv6 support (client to proxy)\n  * add completion for config option (with /set command)\n  * commands from users outside channel now authorized (if special user or channel without \"n\" flag)\n  * add IPv6 support\n  * kill command now received and displayed\n  * add SSL support\n  * channel notify levels are saved in config file (new option \"server_notify_levels\" for server sections)\n  * part message now accepts %v (replaced by WeeChat version), like quit message\n\nBug fixes::\n\n  * errors while loading perl scripts are now displayed in server buffer (instead of current buffer)\n  * in python scripts, all messages written in stdin and stderr are redirected in server buffer\n  * fix a filename error while loading a python script manually\n  * fix plugins print and prnt functions: now OK for writing on server buffers\n  * fix color problem with new libcurses version\n  * fix crash when using kbd:[Alt+s] or kbd:[Alt+x] on DCC buffer (kbd:[Alt+d])\n  * fix startup crash when config file (~/.weechat/weechat.rc) is not found\n\nBuild::\n\n  * improve Perl/Python libs detection for ./configure script\n\n[[v0.1.2]]\n== Version 0.1.2 (2005-05-21)\n\nNew features::\n\n  * add Python plugin support, improve Perl interface (and now Perl/Python libraries are checked by configure script)\n  * add nicklist scroll keys (kbd:[Alt+Home] / kbd:[Alt+End] / kbd:[Alt+PgUp] / kbd:[Alt+PgDn] or kbd:[F11] / kbd:[F12])\n  * add transfer rate for DCC files\n  * add \"-all\" option for /nick command\n  * buffers timestamp can now be changed (new option in config file)\n  * add missing IRC commands (307, 341, 485, 671)\n\nBug fixes::\n\n  * fix nicklist sort\n  * fix crash when purging old DCC\n  * fix crash with 64-bits arch (like AMD64) when converting UTF-8\n\nBuild::\n\n  * WeeChat now OK under *BSD and macOS\n\n[[v0.1.1]]\n== Version 0.1.1 (2005-03-20)\n\nNew features::\n\n  * add nicks count for channel buffers\n  * add FIFO pipe for remote control\n  * add crash dump when WeeChat receives SIGSEGV (Segmentation fault)\n  * add new display engine: doesn't cut words at end of lines\n  * add DCC send and DCC chat\n  * add /halfop & /dehalfop commands, fix halfop display bug in nicklist\n  * add /ban, /unban and /kickban commands\n  * add --irc-commands and --weechat-commands command line options\n  * connection to IRC server is now made by child process (non blocking)\n  * add support for UnrealIrcd (\"~\" for chan owner, \"&\" for chan admin)\n  * new key for window switch (now: kbd:[F5] / kbd:[F6] = switch buffer, kbd:[F7] / kbd:[F8] = switch window)\n  * on server buffer, only server messages are logged\n  * improve /help command output\n  * plugins messages are logged with new config option (log_plugin_msg)\n\nInternationalization::\n\n  * add Spanish translations\n\nBug fixes::\n\n  * fix /kick command\n  * fix /invite command (and now invite requests are displayed)\n  * fix /buffer close command (now OK when disconnected from server)\n  * fix display bugs when many windows are opened\n\n[[v0.1.0]]\n== Version 0.1.0 (2005-02-12)\n\nNew features::\n\n  * improve /window command: now split and merge are OK\n  * away nicks are now displayed with another color (new option: \"irc_away_check\")\n  * add away indicator in status bar\n  * add lag indicator (and auto-disconnect after a delay if important lag)\n  * improve completion: now completes commands arguments (IRC and internal), when only one completion matches, completion mechanism is stopped (to complete command argument for example)\n  * improve /set command: empty strings are allowed, new colors, server options can be changed while WeeChat is running\n  * add default away/part/quit messages in config file\n  * new [irc] section in config file, move option \"look_display_away\" to \"irc_display_away\"\n  * server messages & errors are all prefixed (by 3 chars, like \"-@-\")\n  * add new options for charset (UTF-8 support): look_charset_decode, look_charset_encode and look_charset_internal\n\nBug fixes::\n\n  * fix many memory leaks\n  * fix colors bug: remove \"gray\" color (replaced by \"default\"), colors are OK when terminal has white (or light) background\n  * fix crash when resizing terminal to small size\n  * fix crash when multiple servers and big messages received from server\n  * fix crash when closing some private buffers\n  * fix crash when unknown section with option(s) in config file\n  * fix /op, /deop, /voice, /devoice (now OK with many nicks)\n  * fix /me command (now OK without parameter)\n  * fix /away command (now OK if not away)\n  * logs are now disabled by default (server/channel/private)\n\n[[v0.0.9]]\n== Version 0.0.9 (2005-01-01)\n\nNew features::\n\n  * auto-reconnection to server (new options: server_autoreconnect (on/off), server_autoreconnect_delay (in seconds))\n  * new command \"/buffer close\" (close any server/channel/private buffer)\n  * new keys: kbd:[Ctrl+a] (home), kbd:[Ctrl+e] (end), kbd:[Ctrl+w] (same as kbd:[Ctrl+Backspace]), kbd:[Alt+s] (switch to server buffer), kbd:[Alt+x] (switch to first channel of next server)\n  * add new config option: \"server_command_delay\" (delay in seconds after startup command for each server)\n\nBug fixes::\n\n  * fix major bug when socket is closed by server (100% CPU usage), and disconnections are now OK (all channels are \"closed\", history is still visible, and buffer will be used again if reconnection to server)\n  * option \"look_remove_colors_from_msgs\" is now working\n  * fix display of nick mode changes\n  * fix /notice command (and display when received from server)\n\n[[v0.0.8]]\n== Version 0.0.8 (2004-10-30)\n\nNew features::\n\n  * nickserv passwords hidden (new config option: log_hide_nickserv_pwd on/off)\n  * auto-rejoin channels when kicked (new config option: server_autorejoin on/off)\n  * add IRC::command function for Perl scripts\n  * /buffer command developed (buffers list, move and notify)\n  * logging buffers to disk (server/channel/private according to user preferences)\n  * add config option \"look_display_away\" to announce away in channels\n  * DCC file receive OK (kbd:[Alt+d] for DCC view)\n  * add key kbd:[Ctrl+l] (`L`) for redrawing terminal\n  * add key kbd:[Alt+r] for clearing hotlist\n\nBug fixes::\n\n  * fix /kick command: now OK with many words as reason\n  * fix bug when adding alias with same name as other\n  * fix crash when resizing terminal to very small size\n  * \"-MORE-\" message is now erased when switching to another buffer\n  * /query command now reopens private buffer if already opened\n\n[[v0.0.7]]\n== Version 0.0.7 (2004-08-08)\n\nNew features::\n\n  * new \"col_status_delimiters\" config option\n  * add command /buffer , buffers ordered by number, auto-jump to active buffers (kbd:[Alt+a]), jump to buffers by number (kbd:[Alt+0...9])\n  * add command /window, split terminal horizontally/vertically\n  * unique color for each nick (based on nickname)\n  * add history limit (text buffer and commands)\n\nBug fixes::\n\n  * action messages are now considered as messages, not crappy joins/parts\n  * fix display bug when nicklist is displayed at bottom of screen\n\nBuild::\n\n  * replace --enable-debug with --with-debug option for ./configure\n\n[[v0.0.6]]\n== Version 0.0.6 (2004-06-05)\n\nNew features::\n\n  * improve channel highlight (priority to message vs join/part)\n  * add command /query (starts private conversation)\n  * add IRC messages 476, 477\n\nBug fixes::\n\n  * fix bug when opened private win and remote user changes his nick\n  * /mode command is now OK and channel flags are displayed in status bar\n  * fix display bug (text was blinking when scrolling)\n  * CTCP Version reply is now in English only and doesn't show host (security reason)\n\n[[v0.0.5]]\n== Version 0.0.5 (2004-02-07)\n\nNew features::\n\n  * /set command to modify config options when WeeChat is running\n  * URL command line parameter to connect to server(s)\n  * new Perl script function to display message in info bar (\"IRC::print_infobar\")\n  * info bar highlight notifications\n  * add info bar timestamp in config (\"look_infobar_timestamp\")\n  * add info bar (optional, \"look_infobar\" to enable it, \"on\" by default)\n  * add -c (or --config) command line parameter to see config file options\n\nBug fixes::\n\n  * fix look_nicklist config option, now enables/disables nicklist\n  * secure code to prevent buffer overflows and memory leaks\n  * fix QUIT IRC command: now sent to all connected servers (not only current)\n  * fix crash with /oper command\n  * for default config file, nick is now based on un*x username\n  * fix crash when config file cannot be written\n  * add highlight on action messages\n\n[[v0.0.4]]\n== Version 0.0.4 (2004-01-01)\n\nNew features::\n\n  * add Perl plugin\n\nBug fixes::\n\n  * fix switch to private buffer\n  * add highlight when our nick is written in a channel/private window\n  * catch kbd:[Ctrl+c] (ignored)\n\nBuild::\n\n  * debug messages can be enabled via ./configure --enable-debug option\n\n[[v0.0.3]]\n== Version 0.0.3 (2003-11-03)\n\nNew features::\n\n  * add new IRC commands: stats, service, squit, motd, lusers, links, time, trace, admin, info, servlist, squery, who, whowas, die, summon, users, wallops, userhost, ison, ctcp ping\n\nInternationalization::\n\n  * add French translations\n\nBug fixes::\n\n  * for sort of nicks (op, halfop, voice, other)\n  * fix problem with \"353\" IRC message (nicklist)\n  * fix problem when nick is truncated by server\n  * fix crash when entering text without any server connection\n  * fix crash when /set command is executed\n  * fix display bug (text was blinking when scrolling)\n  * code cleanup\n\nBuild::\n\n  * add ./configure script to build WeeChat\n\n[[v0.0.2]]\n== Version 0.0.2 (2003-10-05)\n\nNew features::\n\n  * add commands /rehash and /restart\n  * and command and auto-join channels when connected to server\n  * new commands for alias: /alias, /unalias (new section in config file)\n  * config is now saved automatically when quitting WeeChat, add /save command\n  * new commands for servers: /server, /connect, /disconnect\n  * add autoconnect flag for each server in config file\n  * add \"look_set_title\" option in config file\n  * term window title is modified with WeeChat name and version\n  * CTCP version returns more info (about OS)\n\nBug fixes::\n\n  * fix nicklist display bug\n  * fix crash when sending command which can only be received\n\n[[v0.0.1]]\n== Version 0.0.1 (2003-09-27)\n\nNew features::\n\n  * ncurses GUI with color output\n  * multi-servers\n  * channel windows, with nicklist (position: top, bottom, left or right)\n  * private windows\n  * IRC commands: away, ctcp, deop, devoice, invite, join, kick, kill, list, me, mode, msg, names, nick, notice, op, oper, part, ping, pong, quit, quote, topic, version, voice, whois\n  * WeeChat commands: clear, help, set (partial)\n  * many config options\n  * log file (~/.weechat/weechat.log)\n  * nicklist can be moved on top, bottom, left or right of window\n", "/*\n * relay-websocket.c - websocket server functions for relay plugin (RFC 6455)\n *\n * Copyright (C) 2013-2021 S\u00e9bastien Helleu <flashcode@flashtux.org>\n *\n * This file is part of WeeChat, the extensible chat client.\n *\n * WeeChat is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * WeeChat is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n#include <stdlib.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n\n#include \"../weechat-plugin.h\"\n#include \"relay.h\"\n#include \"relay-client.h\"\n#include \"relay-config.h\"\n#include \"relay-websocket.h\"\n\n\n/*\n * globally unique identifier that is concatenated to HTTP header\n * \"Sec-WebSocket-Key\"\n */\n#define WEBSOCKET_GUID \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"\n\n\n/*\n * Checks if a message is a HTTP GET with resource \"/weechat\".\n *\n * Returns:\n *   1: message is a HTTP GET with resource \"/weechat\"\n *   0: message is NOT a HTTP GET with resource \"/weechat\"\n */\n\nint\nrelay_websocket_is_http_get_weechat (const char *message)\n{\n    /* the message must start with \"GET /weechat\" */\n    if (strncmp (message, \"GET /weechat\", 12) != 0)\n        return 0;\n\n    /* after \"GET /weechat\", only a new line or \" HTTP\" is allowed */\n    if ((message[12] != '\\r') && (message[12] != '\\n')\n        && (strncmp (message + 12, \" HTTP\", 5) != 0))\n    {\n        return 0;\n    }\n\n    /* valid HTTP GET for resource \"/weechat\" */\n    return 1;\n}\n\n/*\n * Saves a HTTP header in hashtable \"http_header\" of client.\n */\n\nvoid\nrelay_websocket_save_header (struct t_relay_client *client,\n                             const char *message)\n{\n    char *pos, *name;\n    const char *ptr_value;\n\n    /* ignore the \"GET\" request */\n    if (strncmp (message, \"GET \", 4) == 0)\n        return;\n\n    pos = strchr (message, ':');\n\n    /* not a valid header */\n    if (!pos || (pos == message))\n        return;\n\n    /* get header name, which is case-insensitive */\n    name = weechat_strndup (message, pos - message);\n    if (!name)\n        return;\n    weechat_string_tolower (name);\n\n    /* get pointer on header value */\n    ptr_value = pos + 1;\n    while (ptr_value[0] == ' ')\n    {\n        ptr_value++;\n    }\n\n    /* add header in the hashtable */\n    weechat_hashtable_set (client->http_headers, name, ptr_value);\n\n    free (name);\n}\n\n/*\n * Checks if a client handshake is valid.\n *\n * A websocket query looks like:\n *   GET /weechat HTTP/1.1\n *   Upgrade: websocket\n *   Connection: Upgrade\n *   Host: myhost:5000\n *   Origin: https://example.org\n *   Pragma: no-cache\n *   Cache-Control: no-cache\n *   Sec-WebSocket-Key: fo1J9uHSsrfDP3BkwUylzQ==\n *   Sec-WebSocket-Version: 13\n *   Sec-WebSocket-Extensions: x-webkit-deflate-frame\n *   Cookie: csrftoken=acb65377798f32dc377ebb50316a12b5\n *\n * Expected HTTP headers with values are:\n *\n *   header              | value\n *   --------------------+----------------\n *   \"Upgrade\"           | \"websocket\"\n *   \"Sec-WebSocket-Key\" | non-empty value\n *\n * If option relay.network.websocket_allowed_origins is set, the HTTP header\n * \"Origin\" is checked against this regex. If header \"Origin\" is not set or does\n * not match regex, the handshake is considered as invalid.\n *\n * Returns:\n *    0: handshake is valid\n *   -1: handshake is invalid (headers missing or with bad value)\n *   -2: origin is not allowed (option relay.network.websocket_allowed_origins)\n */\n\nint\nrelay_websocket_client_handshake_valid (struct t_relay_client *client)\n{\n    const char *value;\n\n    /* check if we have header \"Upgrade\" with value \"websocket\" */\n    value = weechat_hashtable_get (client->http_headers, \"upgrade\");\n    if (!value)\n        return -1;\n    if (weechat_strcasecmp (value, \"websocket\") != 0)\n        return -1;\n\n    /* check if we have header \"Sec-WebSocket-Key\" with non-empty value */\n    value = weechat_hashtable_get (client->http_headers, \"sec-websocket-key\");\n    if (!value || !value[0])\n        return -1;\n\n    if (relay_config_regex_websocket_allowed_origins)\n    {\n        value = weechat_hashtable_get (client->http_headers, \"origin\");\n        if (!value || !value[0])\n            return -2;\n        if (regexec (relay_config_regex_websocket_allowed_origins, value, 0,\n                     NULL, 0) != 0)\n        {\n            return -2;\n        }\n    }\n\n    /* client handshake is valid */\n    return 0;\n}\n\n/*\n * Builds the handshake that will be returned to client, to initialize and use\n * the websocket.\n *\n * Returns a string with content of handshake to send to client, it looks like:\n *   HTTP/1.1 101 Switching Protocols\n *   Upgrade: websocket\n *   Connection: Upgrade\n *   Sec-WebSocket-Accept: 73OzoF/IyV9znm7Tsb4EtlEEmn4=\n *\n * Note: result must be freed after use.\n */\n\nchar *\nrelay_websocket_build_handshake (struct t_relay_client *client)\n{\n    const char *sec_websocket_key;\n    char *key, sec_websocket_accept[128], handshake[1024], hash[160 / 8];\n    int length, hash_size;\n\n    sec_websocket_key = weechat_hashtable_get (client->http_headers,\n                                               \"sec-websocket-key\");\n    if (!sec_websocket_key || !sec_websocket_key[0])\n        return NULL;\n\n    length = strlen (sec_websocket_key) + strlen (WEBSOCKET_GUID) + 1;\n    key = malloc (length);\n    if (!key)\n        return NULL;\n\n    /*\n     * concatenate header \"Sec-WebSocket-Key\" with the GUID\n     * (globally unique identifier)\n     */\n    snprintf (key, length, \"%s%s\", sec_websocket_key, WEBSOCKET_GUID);\n\n    /* compute 160-bit SHA1 on the key and encode it with base64 */\n    if (!weechat_crypto_hash (key, strlen (key), \"sha1\", hash, &hash_size))\n    {\n        free (key);\n        return NULL;\n    }\n    if (weechat_string_base_encode (64, hash, hash_size,\n                                    sec_websocket_accept) < 0)\n    {\n        sec_websocket_accept[0] = '\\0';\n    }\n\n    free (key);\n\n    /* build the handshake (it will be sent as-is to client) */\n    snprintf (handshake, sizeof (handshake),\n              \"HTTP/1.1 101 Switching Protocols\\r\\n\"\n              \"Upgrade: websocket\\r\\n\"\n              \"Connection: Upgrade\\r\\n\"\n              \"Sec-WebSocket-Accept: %s\\r\\n\"\n              \"\\r\\n\",\n              sec_websocket_accept);\n\n    return strdup (handshake);\n}\n\n/*\n * Sends a HTTP message to client.\n *\n * Argument \"http\" is a HTTP code + message, for example:\n * \"403 Forbidden\".\n */\n\nvoid\nrelay_websocket_send_http (struct t_relay_client *client,\n                           const char *http)\n{\n    char *message;\n    int length;\n\n    length = 32 + strlen (http) + 1;\n    message = malloc (length);\n    if (message)\n    {\n        snprintf (message, length, \"HTTP/1.1 %s\\r\\n\\r\\n\", http);\n        relay_client_send (client, RELAY_CLIENT_MSG_STANDARD,\n                           message, strlen (message), NULL);\n        free (message);\n    }\n}\n\n/*\n * Decodes a websocket frame.\n *\n * Returns:\n *   1: frame decoded successfully\n *   0: error decoding frame (connection must be closed if it happens)\n */\n\nint\nrelay_websocket_decode_frame (const unsigned char *buffer,\n                              unsigned long long buffer_length,\n                              unsigned char *decoded,\n                              unsigned long long *decoded_length)\n{\n    unsigned long long i, index_buffer, length_frame_size, length_frame;\n    unsigned char opcode;\n\n    *decoded_length = 0;\n    index_buffer = 0;\n\n    /* loop to decode all frames in message */\n    while (index_buffer + 2 <= buffer_length)\n    {\n        opcode = buffer[index_buffer] & 15;\n\n        /*\n         * check if frame is masked: client MUST send a masked frame; if frame is\n         * not masked, we MUST reject it and close the connection (see RFC 6455)\n         */\n        if (!(buffer[index_buffer + 1] & 128))\n            return 0;\n\n        /* decode frame */\n        length_frame_size = 1;\n        length_frame = buffer[index_buffer + 1] & 127;\n        index_buffer += 2;\n        if ((length_frame == 126) || (length_frame == 127))\n        {\n            length_frame_size = (length_frame == 126) ? 2 : 8;\n            if (buffer_length < 1 + length_frame_size)\n                return 0;\n            length_frame = 0;\n            for (i = 0; i < length_frame_size; i++)\n            {\n                length_frame += (unsigned long long)buffer[index_buffer + i] << ((length_frame_size - i - 1) * 8);\n            }\n            index_buffer += length_frame_size;\n        }\n\n        if (buffer_length < 1 + length_frame_size + 4 + length_frame)\n            return 0;\n\n        /* read masks (4 bytes) */\n        int masks[4];\n        for (i = 0; i < 4; i++)\n        {\n            masks[i] = (int)((unsigned char)buffer[index_buffer + i]);\n        }\n        index_buffer += 4;\n\n        /* copy opcode in decoded data */\n        switch (opcode)\n        {\n            case WEBSOCKET_FRAME_OPCODE_PING:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_PING;\n                break;\n            case WEBSOCKET_FRAME_OPCODE_CLOSE:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_CLOSE;\n                break;\n            default:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_STANDARD;\n                break;\n        }\n        *decoded_length += 1;\n\n        /* decode data using masks */\n        for (i = 0; i < length_frame; i++)\n        {\n            decoded[*decoded_length + i] = (int)((unsigned char)buffer[index_buffer + i]) ^ masks[i % 4];\n        }\n        decoded[*decoded_length + length_frame] = '\\0';\n        *decoded_length += length_frame + 1;\n        index_buffer += length_frame;\n    }\n\n    return 1;\n}\n\n/*\n * Encodes data in a websocket frame.\n *\n * Returns websocket frame, NULL if error.\n * Argument \"length_frame\" is set with the length of frame built.\n *\n * Note: result must be freed after use.\n */\n\nchar *\nrelay_websocket_encode_frame (int opcode,\n                              const char *buffer,\n                              unsigned long long length,\n                              unsigned long long *length_frame)\n{\n    unsigned char *frame;\n    unsigned long long index;\n\n    *length_frame = 0;\n\n    frame = malloc (length + 10);\n    if (!frame)\n        return NULL;\n\n    frame[0] = 0x80;\n    frame[0] |= opcode;\n\n    if (length <= 125)\n    {\n        /* length on one byte */\n        frame[1] = length;\n        index = 2;\n    }\n    else if (length <= 65535)\n    {\n        /* length on 2 bytes */\n        frame[1] = 126;\n        frame[2] = (length >> 8) & 0xFF;\n        frame[3] = length & 0xFF;\n        index = 4;\n    }\n    else\n    {\n        /* length on 8 bytes */\n        frame[1] = 127;\n        frame[2] = (length >> 56) & 0xFF;\n        frame[3] = (length >> 48) & 0xFF;\n        frame[4] = (length >> 40) & 0xFF;\n        frame[5] = (length >> 32) & 0xFF;\n        frame[6] = (length >> 24) & 0xFF;\n        frame[7] = (length >> 16) & 0xFF;\n        frame[8] = (length >> 8) & 0xFF;\n        frame[9] = length & 0xFF;\n        index = 10;\n    }\n\n    /* copy buffer after length */\n    memcpy (frame + index, buffer, length);\n\n    *length_frame = index + length;\n\n    return (char *)frame;\n}\n", "#!/bin/sh\n#\n# Copyright (C) 2015-2021 S\u00e9bastien Helleu <flashcode@flashtux.org>\n#\n# This file is part of WeeChat, the extensible chat client.\n#\n# WeeChat is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# WeeChat is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n#\n\n#\n# Returns current stable or devel version of WeeChat.\n#\n# Syntax:\n#   version.sh stable|devel|devel-full|devel-major|devel-minor|devel-patch\n#\n#     stable       the current stable (e.g. 1.3)\n#     devel        the current devel (e.g. 1.4)\n#     devel-full   the full name of devel (e.g. 1.4-dev or 1.4-rc1)\n#     devel-major  the major version of devel (e.g. 1)\n#     devel-minor  the minor version of devel (e.g. 4-dev)\n#     devel-patch  the patch version of devel (e.g. 2 for version 1.4.2)\n#\n\nWEECHAT_STABLE=3.2\nWEECHAT_DEVEL=3.2\nWEECHAT_DEVEL_FULL=3.2\n\nif [ $# -lt 1 ]; then\n    echo >&2 \"Syntax: $0 stable|devel|devel-full|devel-major|devel-minor|devel-patch\"\n    exit 1\nfi\n\ncase $1 in\n    stable ) echo $WEECHAT_STABLE ;;\n    devel ) echo $WEECHAT_DEVEL ;;\n    devel-full ) echo $WEECHAT_DEVEL_FULL ;;\n    devel-major ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f1 ;;\n    devel-minor ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f2 ;;\n    devel-patch ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f3- ;;\n    * ) echo >&2 \"ERROR: unknown version.\"\n        exit 1 ;;\nesac\n"], "fixing_code": ["= WeeChat ChangeLog\n:author: S\u00e9bastien Helleu\n:email: flashcode@flashtux.org\n:lang: en\n:toc: left\n:docinfo1:\n\n\nThis document lists all changes for each version\n(the latest formatted version of this document can be found\nhttps://weechat.org/files/changelog/ChangeLog-devel.html[here]).\n\nFor a list of important changes that require manual action, please look at\nhttps://weechat.org/files/releasenotes/ReleaseNotes-devel.html[release notes]\n(file _ReleaseNotes.adoc_ in sources).\n\n\n[[v3.2.1]]\n== Version 3.2.1 (under dev)\n\nBug fixes::\n\n  * relay: fix crash when decoding a malformed websocket frame\n\n[[v3.2]]\n== Version 3.2 (2021-06-13)\n\nNew features::\n\n  * core: use XDG directories by default (config, data, cache, runtime) (issue #1285)\n  * core: add option weechat.network.gnutls_ca_system, rename option weechat.network.gnutls_ca_file to weechat.network.gnutls_ca_user (now evaluated), delete and reload certificates when options are changed (issue #972)\n  * core: evaluate option weechat.plugin.path, change default value to \"${weechat_data_dir}/plugins\"\n  * core: add options to customize commands executed on system signals received (SIGHUP, SIGQUIT, SIGTERM, SIGUSR1, SIGUSR2) (issue #1595)\n  * core: quit WeeChat by default when signal SIGHUP is received in normal run, reload configuration in weechat-headless (issue #1595)\n  * core: add signals \"cursor_start\" and \"cursor_end\"\n  * api: add function crypto_hmac (issue #1628)\n  * api: add translated string in evaluation of expressions with \"translate:xxx\"\n  * api: add evaluation of WeeChat directories with \"${weechat_xxx_dir}\" in evaluated strings\n  * api: add optional key \"directory\" in hashtable options of function/modifier string_eval_path_home\n  * api: add supported prefixes \"${weechat_xxx_dir}\" in function mkdir_home\n  * api: add infos \"weechat_config_dir\", \"weechat_data_dir\", \"weechat_cache_dir\" and \"weechat_runtime_dir\"\n  * api: add support of pointer names in function string_eval_expression (direct and in hdata)\n  * api: add info \"weechat_daemon\"\n  * buflist: add option buflist.format.tls_version\n  * fifo: change default value of option fifo.file.path to \"${weechat_runtime_dir}/weechat_fifo_${info:pid}\"\n  * irc: add support of SASL mechanisms SCRAM-SHA-1, SCRAM-SHA-256 and SCRAM-SHA-512 (issue #1628)\n  * irc: add variable \"${target}\" (target nick) in commands /kick and /kickban\n  * irc: add bar item \"tls_version\", add options irc.color.item_tls_version_ok, irc.color.item_tls_version_deprecated and irc.color.item_tls_version_insecure (issue #1622)\n  * irc: evaluate server options \"sasl_key\" and \"ssl_cert\"\n  * logger: change default value of option logger.file.path to \"${weechat_data_dir}/logs\"\n  * python: add stub for WeeChat API (issue #1377)\n  * relay: evaluate option relay.network.ssl_cert_key, change default value to \"${weechat_config_dir}/ssl/relay.pem\"\n  * script: change default value of option script.scripts.path to \"${weechat_cache_dir}/script\"\n  * trigger: add variables \"${tg_shell_argc}\" and \"${tg_shell_argvN}\" in command trigger evaluated strings (issue #1624)\n  * xfer: change default value of option xfer.file.download_path to \"${weechat_data_dir}/xfer\"\n\nBug fixes::\n\n  * core: split startup commands before evaluating them (issue #1643)\n  * core: set server name when connecting to server with TLS (SNI extension) only if it's not an IPV4/IPv6 (issue #1635)\n  * core: use function mallinfo2 instead of mallinfo when available (issue #1636)\n  * core: display a warning when the file with certificate authorities is not found (option weechat.network.gnutls_ca_file)\n  * core: evaluate left/right part of comparison after split on the comparison operator in ${if:xxx} (issue #1627)\n  * core: prevent switching to start of visited buffers when jumping to next (issue #1591, issue #1592)\n  * core: recreate buflist and fset bars on /reload when WeeChat is started without configuration files (issue #1618)\n  * buflist: fix comparison of hotlists in option buflist.look.sort (issue #1621)\n  * irc: split server command before evaluating it (issue #1643)\n  * xfer: make file transfer fail when option xfer.file.auto_rename is off and file already exists (issue #1633)\n\nTests::\n\n  * core: switch from Ubuntu 18.04 to 20.04 in CI\n  * trigger: add tests on main trigger functions\n\nBuild::\n\n  * core: remove build option CA_FILE\n  * core: set WeeChat home to empty string by default in CMake and autotools\n\n[[v3.1]]\n== Version 3.1 (2021-03-07)\n\nNew features::\n\n  * core: add options weechat.look.hotlist_update_on_buffer_switch and weechat.look.read_marker_update_on_buffer_switch (issue #992, issue #993)\n  * core: add option sec.crypt.passphrase_command to read passphrase from an external program on startup, remove option sec.crypt.passphrase_file (issue #141)\n  * core: improve debug in command /eval: display more verbose debug with two \"-d\", add indentation and colors\n  * core: add options \"setvar\" and \"delvar\" in command /buffer, rename option \"localvar\" to \"listvar\"\n  * core: add buffer local variable \"completion_default_template\" (evaluated) to override the value of option \"weechat.completion.default_template\" (issue #1600)\n  * core: add option \"recreate\" in command /filter\n  * core: add raw string in evaluation of expressions with \"raw:xxx\" (issue #1611)\n  * core: add evaluation of conditions in evaluation of expressions with \"eval_cond:xxx\" (issue #1582)\n  * api: add info_hashtable \"secured_data\"\n  * irc: add info \"irc_is_message_ignored\"\n  * irc: add server option \"default_chantypes\", used when the server does not send them in message 005 (issue #1610)\n  * trigger: add variable \"${tg_trigger_name}\" in command trigger evaluated strings (issue #1580)\n\nBug fixes::\n\n  * core: fix quoted line in cursor mode (issue #1602)\n  * core: fix wrong size of the new window after vertical split (issue #1612)\n  * core: do not remove quotes in arguments of command /eval as they can be part of the evaluated expression/condition (issue #1601)\n  * core: display an error when the buffer is not found with command /command -buffer\n  * buflist: add option buflist.look.use_items to speed up display of buflist (issue #1613)\n  * irc: add bar item \"irc_nick_prefix\"\n  * irc: fix separator between nick and host in bar item \"irc_nick_host\"\n  * irc: fix completion of commands /halfop and /dehalfop\n\nDocumentation::\n\n  * do not build weechat-headless man page if headless binary is disabled (issue #1607)\n\n[[v3.0.1]]\n== Version 3.0.1 (2021-01-31)\n\nBug fixes::\n\n  * exec: fix search of command by identifier\n  * spell: fix refresh of bar item \"spell_suggest\" when the input becomes empty (issue #1586)\n  * spell: fix crash with IRC color codes in command line (issue #1589)\n\n[[v3.0]]\n== Version 3.0 (2020-11-11)\n\nNew features::\n\n  * api: add optional list of colors in infos \"nick_color\" and \"nick_color_name\" (issue #1565)\n  * api: add argument \"bytes\" in function string_dyn_concat\n  * api: add function string_color_code_size (issue #1547)\n  * exec: add option \"-oerr\" to send stderr to buffer (now disabled by default) (issue #1566)\n  * fset: add option fset.look.auto_refresh (issue #1553)\n  * irc: add pointer to irc_nick in focus of bar item \"buffer_nicklist\" (issue #1535, issue #1538)\n  * irc: allow to send text on buffers with commands /allchan, /allpv and /allserv\n  * irc: evaluate command executed by commands /allchan, /allpv and /allserv (issue #1536)\n  * script: add option script.scripts.download_enabled (issue #1548)\n  * trigger: add variable \"tg_argc\" in data set by command trigger (issue #1576)\n  * trigger: add variable \"tg_trigger_name\" in data set by all triggers (issue #1567, issue #1568)\n\nBug fixes::\n\n  * core: set \"notify_level\" to 3 if there is a highlight in the line (issue #1529)\n  * core: do not add line with highlight and tag \"notify_none\" to hotlist (issue #1529)\n  * irc: remove SASL timeout message displayed by error after successful SASL authentication (issue #1515)\n  * irc: send all channels in a single JOIN command when reconnecting to the server (issue #1551)\n  * script: do not automatically download list of scripts on startup if the file is too old (issue #1548)\n  * spell: properly skip WeeChat and IRC color codes when checking words in input (issue #1547)\n  * trigger: fix recursive calls to triggers using regex (issue #1546)\n  * trigger: add `${tg_tags} !!- ,notify_none,` in conditions of default trigger \"beep\" (issue #1529)\n\nTests::\n\n  * core: add tests on GUI line functions\n\nBuild::\n\n  * core: disable debug by default in autotools build\n  * tests: fix compilation with CppUTest \u2265 4.0\n\n[[v2.9]]\n== Version 2.9 (2020-07-18)\n\nNew features::\n\n  * core: add bar option \"color_bg_inactive\": color for window bars in inactive window (issue #732)\n  * core: add Alacritty title escape sequence support (issue #1517)\n  * core: display notify level for current buffer with command /buffer notify (issue #1505)\n  * core: count only visible nicks in bar item \"buffer_nicklist_count\", add bar items \"buffer_nicklist_count_groups\" and \"buffer_nicklist_count_all\" (issue #1506)\n  * core: set default size for input bar to 0 (automatic) (issue #1498)\n  * core: add default key kbd:[Alt+Enter] to insert a newline (issue #1498)\n  * core: add flag \"input_multiline\" in buffer (issue #984, issue #1063)\n  * core: add a scalable WeeChat logo (SVG) (issue #1454, issue #1456)\n  * core: add base 16/32/64 encoding/decoding in evaluation of expressions with \"base_encode:base,xxx\" and \"base_decode:base,xxx\"\n  * core: add case sensitive wildcard matching comparison operator (`+==*+` and `+!!*+`) and case sensitive/insensitive include comparison operators (`+==-+`,  `+!!-+`, `+=-+`, `+!-+`) in evaluation of expressions\n  * core: add default key kbd:[Alt+Shift+N] to toggle nicklist bar\n  * core: add command line option \"--stdout\" in weechat-headless binary to log to stdout rather than ~/.weechat/weechat.log (issue #1475, issue #1477)\n  * core: reload configuration files on SIGHUP (issue #1476)\n  * api: add pointer \"_bar_window\" in hashtable sent to hook focus callback (issue #1450)\n  * api: add info_hashtable \"focus_info\" (issue #1245, issue #1257)\n  * api: rename function hook_completion_get_string to completion_get_string and hook_completion_list_add to completion_list_add\n  * api: add functions completion_new, completion_search and completion_free\n  * api: add hdata \"completion_word\"\n  * buflist: add default key kbd:[Alt+Shift+B] to toggle buflist\n  * buflist: add options enable/disable/toggle in command /buflist\n  * buflist: evaluate option buflist.look.sort so that sort can be customized for each of the three buflist bar items (issue #1465)\n  * irc: add support of UTF8MAPPING (issue #1528)\n  * irc: display account messages in buffers (issue #1250)\n  * python: add WeeChat sharedir python directory to PYTHONPATH (issue #1537)\n  * relay: increase default limits for IRC backlog options\n  * relay: add command \"handshake\" in weechat relay protocol and nonce to prevent replay attacks, add options relay.network.password_hash_algo, relay.network.password_hash_iterations, relay.network.nonce_size (issue #1474)\n  * relay: add command \"completion\" in weechat relay protocol to perform a completion on a string at a given position (issue #1484)\n  * relay: add option relay.network.auth_timeout\n  * relay: update default colors for client status\n  * relay: add status \"waiting_auth\" in irc and weechat protocols (issue #1358)\n  * trigger: evaluate arguments of command when the trigger is created (issue #1472)\n\nBug fixes::\n\n  * core: fix command /window scroll_beyond_end when buffer has fewer lines than chat height (issue #1509)\n  * core: force buffer property \"time_for_each_line\" to 0 for buffers with free content (issue #1485)\n  * core: don't collapse consecutive newlines in lines displayed before the first buffer is created\n  * core: don't remove consecutive newlines when pasting text (issue #1500)\n  * core: don't collapse consecutive newlines in bar content (issue #1500)\n  * core: fix WEECHAT_SHAREDIR with CMake build (issue #1461)\n  * core: fix memory leak in calculation of expression on FreeBSD (issue #1469)\n  * core: fix resize of a bar when its size is 0 (automatic) (issue #1470)\n  * api: fix use of pointer after free in function key_unbind\n  * api: replace plugin and buffer name by buffer pointer in argument \"modifier_data\" sent to weechat_print modifier callback (issue #42)\n  * buflist: add \"window\" pointer in bar item evaluation only if it's not NULL (if bar type is \"window\")\n  * exec: fix use of same task id for different tasks (issue #1491)\n  * fifo: fix errors when writing in the FIFO pipe (issue #713)\n  * guile: enable again /guile eval (issue #1514)\n  * irc: use new default chantypes \"#&\" when the server does not send it\n  * irc: add support of optional server in info \"irc_is_nick\", fix check of nick using UTF8MAPPING isupport value (issue #1528)\n  * irc: fix add of ignore with flags in regex, display full ignore mask in list of ignores (issue #1518)\n  * irc: do not remove spaces at the end of users messages received (issue #1513)\n  * irc: fix realname delimiter color in WHO/WHOX response (issue #1497)\n  * irc: reuse a buffer with wrong type \"channel\" when a private message is received (issue #869)\n  * python: fix crash when invalid UTF-8 string is in a WeeChat hashtable converted to a Python dict (issue #1463)\n  * relay: add missing field \"notify_level\" in message \"_buffer_line_added\" (issue #1529)\n  * relay: fix slow send of data to clients when SSL is enabled\n  * trigger: only return trigger's return code when condition evaluates to true (issue #592)\n  * trigger: fix truncated trigger command with commands /trigger input|output|recreate\n  * trigger: do not hide values of options with /set command in cmd_pass trigger\n\nDocumentation::\n\n  * add includes directory\n  * merge 53 auto-generated files into 11 files\n  * fix broken literal blocks in Japanese docs with Firefox (issue #1466)\n\nTests::\n\n  * core: add CI with GitHub Actions, move codecov.io upload to GitHub Actions\n  * core: switch to Ubuntu Bionic on Travis CI, use pylint3 to lint Python scripts\n  * core: run tests on plugins only if the plugins are enabled and compiled\n  * irc: add tests on IRC color and channel functions\n\nBuild::\n\n  * javascript: disable build by default and remove Debian packaging of JavaScript plugin (issue #360)\n  * core: make GnuTLS a required dependency\n  * core: fix build with CMake 3.17.0\n  * core: fix build with cygport on Cygwin\n\n[[v2.8]]\n== Version 2.8 (2020-03-29)\n\nNew features::\n\n  * core: add variable \"old_full_name\" in buffer, set during buffer renaming (issue #1428)\n  * core: add debug option \"-d\" in command /eval (issue #1434)\n  * api: add functions crypto_hash and crypto_hash_pbkdf2\n  * api: add info \"auto_connect\" (issue #1453)\n  * api: add info \"weechat_headless\" (issue #1433)\n  * buflist: add pointer \"window\" in bar item evaluation\n  * irc: add support of fake servers (no I/O, for testing purposes)\n  * relay: accept hash of password in init command of weechat protocol with option \"password_hash\" (PBKDF2, SHA256, SHA512)\n  * relay: reject client with weechat protocol if password or TOTP is received in init command but not set in WeeChat (issue #1435)\n\nBug fixes::\n\n  * core: fix memory leak in completion\n  * core: flush stdout/stderr before forking in hook_process function (issue #1441)\n  * core: fix evaluation of condition with nested \"if\" (issue #1434)\n  * irc: split AUTHENTICATE message in 400-byte chunks (issue #1459)\n  * irc: copy temporary server flag in command /server copy\n  * irc: add nick changes in the hotlist (except self nick change)\n  * irc: case-insensitive comparison on incoming CTCP command, force upper case on CTCP replies (issue #1439)\n  * irc: fix memory leak when the channel topic is changed\n  * logger: fix crash when logging is disabled on a buffer and the log file was deleted in the meanwhile, when option logger.file.info_lines is on (issue #1444)\n  * php: fix crash when loading script with PHP 7.4 (issue #1452)\n  * relay: update buffers synchronization when buffers are renamed (issue #1428)\n  * script: fix memory leak in read of script repository file if it has invalid content\n  * script: fix unexpected display of scripts list in buffer with command /script list -i\n  * xfer: send signal \"xfer_ended\" after the received file has been renamed (issue #1438)\n\nTests::\n\n  * scripts: fix generation of test scripts with Python 3.8\n  * core: add tests on function secure_derive_key\n  * core: add tests on functions util_get_time_diff and util_file_get_content\n  * irc: add tests on IRC protocol functions and callbacks\n\nBuild::\n\n  * core: fix Cygwin build\n  * guile: add detection of Guile 3.0.0 (issue #1442)\n  * irc: fix build with GnuTLS < 3.1.0 (issue #1431)\n  * php: add detection of PHP 7.4\n  * ruby: add detection of Ruby 2.7 (issue #1455)\n\n[[v2.7.1]]\n== Version 2.7.1 (2020-02-20)\n\nBug fixes::\n\n  * irc: fix crash when a new message 005 is received with longer nick prefixes (CVE-2020-9760)\n  * irc: fix crash when receiving a malformed message 352 (who) (CVE-2020-9759)\n  * irc: fix crash when receiving a malformed message 324 (channel mode) (CVE-2020-8955)\n\n[[v2.7]]\n== Version 2.7 (2019-12-08)\n\nNew features::\n\n  * core: add option weechat.look.nick_color_hash_salt to shuffle nick colors (issue #635)\n  * core: add different icons sizes (16x16 to 512x512) (issue #1347)\n  * core: add file weechat.desktop\n  * core: add reverse of string for screen in evaluation of expressions with \"revscr:xxx\"\n  * core: add length of string (number of chars and on screen) in evaluation of expressions with \"length:xxx\" and \"lengthscr:xxx\"\n  * core: add calculation of expression in evaluation of expressions with \"calc:xxx\" (issue #997)\n  * core: add optional default path (evaluated) in completion \"filename\"\n  * core: add support of modifiers in evaluation of expressions with \"modifier:name,data,string\"\n  * api: add modifier \"color_encode_ansi\" (issue #528)\n  * api: add modifier \"eval_path_home\"\n  * irc: add filters on raw buffer (issue #1000)\n  * irc: add option irc.look.display_pv_warning_address to display a warning in private buffer if the remote nick address has changed (issue #892)\n  * irc: add server option \"ssl_password\" (issue #115, issue #1416)\n  * irc: add \"user\" in output of irc_message_parse (issue #136)\n  * irc: add options irc.color.message_kick and irc.color.reason_kick (issue #683, issue #684)\n  * logger: add option logger.file.color_lines (issue #528, issue #621)\n  * script: add options \"-ol\" and \"-il\" in command \"/script list\" to send translated string with list of scripts loaded, display \"No scripts loaded\" if no scripts are loaded\n  * xfer: add option xfer.file.download_temporary_suffix with default value \".part\" (issue #1237)\n\nBug fixes::\n\n  * core: set buffer name, short name and title only if the value has changed\n  * core: fix scrolling up in bare mode when switched to bare mode at the top of the buffer (issue #899, issue #978)\n  * core: optimize load of configuration files\n  * core: fix window separators not respecting window splits (issue #630)\n  * core: fix cursor mode info when prefix_align is none and with words split across lines (issue #610, issue #617, issue #619)\n  * core: add support of reverse video in ANSI color codes\n  * core: fixed segfault during excessive evaluation in function string_repeat (issue #1400)\n  * buflist: fix extra spaces between buffers when conditions are used to hide buffers (regression introduced in version 2.6) (issue #1403)\n  * irc: do not automatically open a channel with name \"0\" (issue #1429)\n  * irc: remove option irc.network.channel_encode, add server option \"charset_message\" to control which part of the IRC message is decoded/encoded to the target charset (issue #832)\n  * irc: use path from option xfer.file.upload_path to complete filename in command \"/dcc send\" (issue #60)\n  * logger: fix write in log file if it has been deleted or renamed (issue #123)\n  * python: send \"bytes\" instead of \"str\" to callbacks in Python 3 when the string is not UTF-8 valid (issue #1389)\n  * relay: send message \"_buffer_title_changed\" to clients only when the title is changed\n  * xfer: fix memory leak when a xfer is freed and when the plugin is unloaded\n\nTests::\n\n  * core: add tests on GUI color functions\n\nBuild::\n\n  * core: fix build on Haiku (issue #1420)\n  * core: fix build on Alpine\n  * core: remove file FindTCL.cmake\n  * core: display an error on missing dependency in CMake (issue #916, issue #956)\n  * debian: disable Javascript plugin on Debian Sid and Ubuntu Eoan\n  * debian: build with Guile 2.2\n  * guile: add support of Guile 2.2, disable /guile eval (issue #1098)\n  * python: add detection of Python 3.8\n\n[[v2.6]]\n== Version 2.6 (2019-09-08)\n\nNew features::\n\n  * core: add support of 32767 color pairs (issue #1343, issue #1345)\n  * core: add option \"close\" in command /window (issue #853)\n  * api: add infos \"term_colors\" and \"term_color_pairs\"\n  * api: add function list_user_data (issue #666)\n  * api: add argument \"strip_items\" in function string_split\n  * buflist: add infolist \"buflist\" with list of buffer pointers (issue #1375)\n  * exec: evaluate option exec.command.shell, change default value to \"${env:SHELL}\" (issue #1356)\n  * fset: add filters \"h=xxx\" and \"he=xxx\" to filter options by description (translated or in English)\n  * irc: make command char optional in server option \"command\" (issue #615)\n  * irc: add variables \"user_max_length\" and \"host_max_length\" in server structure (issue #1387)\n\nBug fixes::\n\n  * core: use fixed-width integer for computing nick and hashtable DJB2 key hashes, add values \"djb2_32\" and \"sum_32\" for option weechat.look.nick_color_hash (issue #1394)\n  * core: create or update option weechat.notify.xxx when function buffer_set is called with \"notify\" property (issue #1390)\n  * core: fix memory leak in case of error when building content of bar item for display (issue #1384)\n  * core: send command line parameter to plugins only if the name starts with the plugin name followed by a colon\n  * core: auto disable upgrade process (command line option \"--upgrade\") if the file weechat.upgrade is not found\n  * core: replace newlines by spaces in argument \"completion\" of function hook_command (issue #538)\n  * core: replace char \",\" by \"~\" in color codes to separate foreground from background (issue #1264)\n  * alias: remove default aliases /AME and /AMSG (issue #1355)\n  * buflist: use extra variables in option buflist.look.display_conditions (issue #1393)\n  * irc: fix parsing of messages 346 (invite list), 348 (exception list), 367 (ban list) and 728 (quiet list) when there is a colon before the timestamp (issue #1396)\n  * irc: fix memory leak when removing a server\n  * irc: fix length of user/nick/host in split of messages (issue #1387)\n  * irc: quote NICK command argument sent to the server only if there's a \":\" in the nick (issue #1376, issue #1319)\n  * irc: return all arguments in the PONG response to a PING (issue #1369)\n  * irc: disable server reconnection when the server buffer is closed (issue #236)\n  * irc: strip spaces at beginning/end of addresses in server option \"addresses\" (issue #195)\n  * irc: fix display of enabled/disabled client capabilities received in command CAP ACK (issue #151)\n  * ruby: fix conversion of big integers on 32bit architecture (issue #1395)\n\nTests::\n\n  * irc: add tests on IRC ignore, message and nick functions\n\nBuild::\n\n  * core: fix compilation with autotools on FreeBSD 12.0\n  * debian: disable Javascript plugin on Debian Buster/Bullseye (issue #1374)\n  * python: compile with Python 3 by default\n  * python: use pkg-config to detect Python (issue #1382)\n\n[[v2.5]]\n== Version 2.5 (2019-06-06)\n\nNew features::\n\n  * core: use getopt to parse command line arguments\n  * core: add option weechat.look.prefix_same_nick_middle (issue #930, issue #931)\n  * core: add option weechat.look.buffer_time_same (issue #1127)\n  * core: use seconds by default in /repeat interval, allow unit for the interval\n  * core: allow text in addition to a command in command /repeat\n  * core: add option \"addreplace\" in command /filter (issue #1055, issue #1312)\n  * api: return allocated string in hook_info callback and function info_get\n  * api: replace argument \"keep_eol\" by \"flags\" in function string_split (issue #1322)\n  * api: add function command_options (issue #928)\n  * api: add function string_match_list\n  * irc: add bar items \"irc_nick\", \"irc_host\" and \"irc_nick_host\"\n  * irc: add variable \"host\" in server structure\n  * relay: add support of UNIX socket (issue #733, issue #1333)\n  * relay: add option relay.weechat.commands (issue #928)\n  * script: use SHA-512 instead of MD5 for script checksum\n  * spell: rename aspell plugin to spell (issue #1299)\n  * trigger: add hooks \"info\" and \"info_hashtable\"\n  * xfer: rename option xfer.network.speed_limit to xfer.network.speed_limit_send, add option xfer.network.speed_limit_recv (issue #269)\n\nBug fixes::\n\n  * core: don't execute command scheduled by /repeat and /wait if the buffer does not exist any more\n  * core: set max length to 4096 for /secure passphrase (issue #1323)\n  * core: refilter only affected buffers on filter change (issue #1309, issue #1311)\n  * fset: fix slow refresh of fset buffer during /reload (issue #1313)\n  * irc: fix parsing of MODE command when there are colons after the first mode argument (issue #1296)\n  * irc: fix memory leak in infos \"irc_server_isupport\" and \"irc_server_isupport_value\"\n  * irc: fix length of string for SHA-512, SHA-256 and SHA-1 in help on ssl_fingerprint option\n  * irc: display an error with /allchan -current or /allpv -current if the current buffer is not an irc buffer (issue #1325)\n  * irc: fix update of channels modes with arguments when joining a channel (issue #1324)\n  * irc: quote NICK command argument sent to the server (issue #1319)\n  * php: fix memory leak in functions string_eval_expression, string_eval_path_home, key_bind, hook_process_hashtable, hook_hsignal_send, info_get_hashtable, hdata_update\n  * relay: fix crash when a weechat relay client reloads the relay plugin with /plugin reload relay (issue #1327)\n  * spell: fix detection of nick followed by the nick completer (issue #1306, issue #1307)\n  * trigger: fix split of hook arguments (issue #1322)\n\nTests::\n\n  * core: add tests on function util_signal_search\n\nBuild::\n\n  * core: fix value of libdir in file weechat.pc (issue #1341, issue #1342)\n  * core: fix generation of man page weechat-headless with autotools\n  * core: add CMake option \"ENABLE_CODE_COVERAGE\" to compile with code coverage options (CMake \u2265 3.0 is now required)\n  * core: fix compilation on Mac OS (issue #1308)\n  * lua: add detection of Lua 5.3 with autotools\n  * ruby: add detection of Ruby 2.6 (issue #1346)\n  * tests: fix compilation of tests on FreeBSD\n\n[[v2.4]]\n== Version 2.4 (2019-02-17)\n\nNew features::\n\n  * core: do not automatically add a space when completing \"nick:\" at the beginning of command line (the space can be added in option weechat.completion.nick_completer)\n  * core: add default keys kbd:[Ctrl+F11]/kbd:[Ctrl+F12] to scroll up/down one page in nicklist (same action as kbd:[F11]/kbd:[F12])\n  * core: add command line option \"-t\" (or \"--temp-dir\") to create a temporary WeeChat home (deleted on exit)\n  * api: add functions string_base_encode and string_base_decode, remove functions string_encode_base64 and string_decode_base64\n  * api: add support of Time-based One-Time Password (TOTP), add infos \"totp_generate\" and \"totp_validate\"\n  * buflist: add default keys kbd:[Ctrl+F1]/kbd:[Ctrl+F2] to scroll up/down one page in buflist (same action as kbd:[F1]/kbd:[F2])\n  * buflist: add variable ${number2}, always set with the indented buffer number\n  * exec: add option exec.command.shell to customize the shell used with /exec -sh\n  * relay: add support of close frame in websocket connection (issue #1281)\n  * relay: add support of Time-based One-Time Password (TOTP) as second authentication factor in weechat protocol\n\nBug fixes::\n\n  * core: fix compilation of empty regular expression (not allowed on FreeBSD)\n  * core: fix forced highlight on messages sent to other buffers (issue #1277)\n  * aspell: look for suggestions only if the misspelled word has changed (issue #1175)\n  * buflist: add alternate key codes for kbd:[F1]/kbd:[F2] and kbd:[Alt+F1]/kbd:[Alt+F2] (compatibility with terminals)\n  * buflist: fix warning displayed when script buffers.pl is loaded (issue #1274)\n  * irc: fix parsing of whois messages in notify\n  * irc: fix parsing of MODE, 341 (invite) and CHGHOST commands when there are colons (issue #1296)\n  * irc: return IRC color code instead of WeeChat color code when decoding a too short ANSI color sequence\n  * irc: fix encoding of italic attribute when colors are removed\n  * irc: fix parsing of \"time\" message tag on FreeBSD (issue #1289)\n  * relay: fix crash on /upgrade when the real IP is not set (issue #1294)\n  * relay: fix memory leak in connection of client\n\nTests::\n\n  * core: fix UTF-8 and evaluation tests on FreeBSD\n  * irc: add tests on IRC configuration and protocol functions\n\nBuild::\n\n  * core: add C compiler flag \"-fsigned--char\" to force \"char\" data type to be always signed (issue #1277)\n\n[[v2.3]]\n== Version 2.3 (2018-10-21)\n\nNew features::\n\n  * core: add repeat of string in evaluation of expressions with \"repeat:count,string\" (issue #958)\n  * core: allow specifying buffer number/name for /buffer localvar (issue #1259)\n  * core: allow multiple arguments in command \"/buffer close\"\n  * core: allow multiple options \"-r\" (or \"--run-command\") in command line arguments (issue #1248)\n  * core: add command line option \"-P\" (or \"--plugins\") to customize the plugins to load at startup\n  * core: allow partial buffer name in command \"/buffer close\" (issue #1226)\n  * api: add function hook_line (issue #66)\n  * irc: display a warning when the value of option irc.server.xxx.autojoin is set to an invalid value\n  * relay: add real IP in client description (issue #1256)\n  * trigger: allow creation of temporary variables with the regex\n  * trigger: add hook \"line\"\n\nBug fixes::\n\n  * core: fix evaluation of nested ternary operators (issue #1263)\n  * core: fix evaluation of condition when the left operand is an empty string\n  * core: fix string evaluation with regex replacement when the string is empty\n  * core: fix check of tags in lines (command /filter and hook_print)\n  * core: fix clear of completion item in case of partial completion (issue #1162)\n  * core: send signal \"key_pressed\" for mouse code only if the string is UTF-8 valid (issue #1220)\n  * api: fix memory leak in function string_split\n  * lua: fix return code of mkdir functions in case of error (issue #1267)\n  * scripts: fix duplicated lines in output of script eval (python, perl, ruby, lua and guile)\n\nTests::\n\n  * core: add tests on line and hook functions\n\nBuild::\n\n  * php: add detection of PHP 7.3\n\n[[v2.2]]\n== Version 2.2 (2018-07-14)\n\nNew features::\n\n  * core: change default value of option weechat.look.hotlist_add_conditions to check connected relay clients via weechat protocol (issue #1206)\n  * core: add reverse of string in evaluation of expressions with \"rev:xxx\" (issue #1200)\n  * core: send buffer pointer (when possible) in signal \"hotlist_changed\" (issue #1133)\n  * core: add support of list options in curl (issue #826, issue #219)\n  * core: allow merge of buffers by name in command /buffer (issue #1108, issue #1159)\n  * api: add function hashtable_add_from_infolist\n  * api: add function string_format_size in scripting API\n  * irc: add nick, host and log tags in message displayed in private buffer when the nick comes back on the server (issue #1221)\n  * irc: add support for IRCv3.2 chghost, add options irc.look.smart_filter_chghost and irc.color.message_chghost (issue #640)\n  * irc: add support for IRCv3.2 invite-notify (issue #639)\n  * irc: add support for IRCv3.2 Client Capability Negotiation (issue #586, issue #623)\n  * irc: display current nick on connected servers in output of /server list|listfull (issue #1193)\n  * irc: add option \"-server\" in command /list (issue #1165)\n  * irc: add indexed ban list, add completion for /unban and /unquiet (issue #597, task #11374, task #10876)\n  * relay: add filtering on protocol in info \"relay_client_count\"\n  * trigger: hide password in command \"/msg nickserv set password\"\n  * xfer: add option xfer.network.send_ack (issue #1171)\n\nBug fixes::\n\n  * core: fix TLS handshake failure on server connection when there are multiple addresses in the server (issue #1196)\n  * core: count number of chars instead of bytes for suffix in function string_cut\n  * core: fix delete of previous/next word (keys kbd:[Ctrl+w] and kbd:[Alt+d]) (issue #1195)\n  * core: fix infinite loop in evaluation of strings (issue #1183)\n  * core: change default value of option weechat.look.window_title from \"WeeChat ${info:version}\" to empty string (issue #1182)\n  * buflist: fix crash when setting the option buflist.look.signals_refresh with a list of signals\n  * fset: fix memory leak when switching the format with kbd:[Ctrl+x]\n  * fset: fix truncation of option values when the length is greater than 4096 (issue #1218)\n  * fset: fix crash when applying filters after closing the fset buffer (issue #1204)\n  * irc: display message 354 (WHOX) received with missing parameters (issue #1212)\n  * irc: always set nick away status on WHO response (sent manually or automatically with server option \"away_check\")\n  * irc: fix a crash when calling the function hdata_string on the \"prefix\" variable in the nick\n  * irc: fix split of messages when server option \"split_msg_max_length\" is set to 0 (no split) (issue #1173)\n  * irc: send whole IRC message including IRCv3 tags in the signals irc_in, irc_in2, irc_raw_in and irc_raw_in2 (issue #787)\n  * irc: fix memory leak when receiving a message with IRCv3 tags\n  * guile: fix memory leak in 7 functions returning allocated strings\n  * lua: fix macros used to return values\n  * php: fix return code of functions config_write_option and config_write_line\n  * php: fix memory leak in 72 functions returning allocated strings\n  * python: fix crash when loading a script with Python >= 3.7 (issue #1219)\n  * relay: fix socket creation for relay server on OpenBSD (issue #1213)\n  * ruby: fix memory leak in 7 functions returning allocated strings\n  * script: fix memory leak in case of invalid XML content in list of scripts\n  * scripts: fix memory leak in hook_info callback\n  * scripts: fix return value of hook_infolist callback (pointer instead of string)\n  * scripts: return long integer instead of string in function infolist_time\n  * xfer: set option TCP_NODELAY on socket when receiving a file via DCC (issue #1171)\n\nDocumentation::\n\n  * core: split man pages weechat and weechat-headless\n\nTests::\n\n  * core, scripts: add tests on infolists\n\nBuild::\n\n  * core: fix build with CMake and Ninja\n  * debian: add package weechat-headless with the headless binary and its man page\n  * javascript: fix compilation of javascript plugin with autotools on some Linux distributions (issue #1208)\n  * python: add detection of Python 3.7\n\n[[v2.1]]\n== Version 2.1 (2018-03-18)\n\nNew features::\n\n  * core: add binary weechat-headless to run WeeChat without interface, with optional daemon mode (command line option \"--daemon\") (issue #1120)\n  * core: add options \"-newbuffer\", \"-free\" and \"-switch\" in command /print (issue #1113)\n  * core: add option \"-y\" in command /print, add support of buffers with free content\n  * core: add option \"add\" in command /buffer (issue #1113)\n  * core: add option weechat.completion.partial_completion_templates to force partial completion on specific templates\n  * api: add hashtable with variables in plugin structure\n  * api: add time in info \"date\" (WeeChat compilation date/time) (issue #1138)\n  * irc: add server option \"split_msg_max_length\"\n  * irc: allow ${irc_server.xxx} and ${server} in server evaluated options (issue #1144)\n  * logger: add option logger.file.fsync (issue #1145)\n  * logger: add option logger.look.backlog_conditions (issue #1132)\n  * script: change default value of option script.look.sort from \"p,n\" to \"i,p,n\"\n  * scripts: add configuration file for each script plugin (_python.conf_, _perl.conf_, ...)\n  * scripts: add \"eval\" option in script commands and info \"xxx_eval\" (python, perl, ruby, lua and guile) (issue #128)\n  * scripts: add infos \"xxx_interpreter\" and \"xxx_version\" in script plugins (issue #1075)\n  * scripts: add option \"version\" in script commands (issue #1075)\n  * scripts: display the script name in stdout/stderr output from scripts\n\nBug fixes::\n\n  * core: fix regression on execution of hook_print callbacks (introduced in version 2.0)\n\nBuild::\n\n  * ruby: add detection of Ruby 2.5 (issue #1122)\n\n[[v2.0.1]]\n== Version 2.0.1 (2017-12-20)\n\nBug fixes::\n\n  * python: fix arguments status/gnutls_rc/sock in hook_connect callback\n  * python: fix argument fd in hook_fd callback\n\n[[v2.0]]\n== Version 2.0 (2017-12-03)\n\nNew features::\n\n  * core: add flag \"input_get_empty\" in buffer\n  * core: add signals \"buffer_filters_enabled\" and \"buffer_filters_disabled\"\n  * core: support loading of plugins from path in environment variable \"WEECHAT_EXTRA_LIBDIR\" (issue #971, issue #979)\n  * core: make value optional in command \"/buffer set\" (issue #746, issue #1088)\n  * core: allow floating point and hexadecimal numbers in comparison of evaluated values\n  * core: add option weechat.look.save_config_with_fsync (issue #1083)\n  * api: add support of prefix \"quiet:\" in function key_unbind to quietly remove keys\n  * api: add argument \"recurse_subdirs\" in function exec_on_files\n  * alias: add infolist \"alias_default\" (list of default aliases)\n  * buflist: add two new bar items (\"buflist2\" and \"buflist3\") using the same format configuration options (issue #990)\n  * buflist: add option buflist.look.add_newline (issue #1027)\n  * fset: new plugin \"fset\" (fast set of WeeChat and plugins options) (issue #584)\n  * php: new plugin \"php\" (issue #909)\n  * script: add local variable \"filter\" in the script buffer (issue #1037)\n\nBug fixes::\n\n  * core: do not change the chat prefix size when a filtered line is added (issue #1092)\n  * core: fix display of nicks in nicklist when they are in a group with sub-groups (issue #1079)\n  * core, plugins: check return code of strftime function\n  * core: fix cast of time_t (to \"long long\" instead of \"long\") (issue #1051)\n  * core: call the config hook when options are renamed or removed\n  * api: change type of arguments status/gnutls_rc/sock in hook_connect callback from string to integer (in scripts)\n  * api: change type of argument fd in hook_fd callback from string to integer (in scripts)\n  * buflist: remove recursive evaluation of extra variables (issue #1060)\n  * guile: return integer (0/1) instead of boolean in API functions\n  * guile: fix return value of static strings in API functions\n  * irc: do not clear nicklist when joining an already joined channel if the option irc.look.buffer_open_before_join is on (issue #1081)\n  * irc: fix CTCP PING reply when the option irc.ctcp.ping is set to non-empty value\n  * lua: fix boolean return value (as integer) in API functions\n  * relay: fix parsing of CAP command without arguments in irc protocol, send ACK only if all capabilities received are OK and NAK otherwise (issue #1040)\n\nTests::\n\n  * core: display an error if the required locale en_US.UTF-8 is not installed\n  * scripts: add scripting API tests (issue #104)\n\nBuild::\n\n  * core: fix build with ncurses and separate tinfo (bug #41245, issue #1090)\n  * javascript: fix detection of libv8 with autotools on Ubuntu Trusty\n\n[[v1.9.1]]\n== Version 1.9.1 (2017-09-23)\n\nBug fixes::\n\n  * buflist: fix crash in auto-scroll of bar when the buflist item is not the first item in the bar\n  * logger: call strftime before replacing buffer local variables (CVE-2017-14727)\n  * relay: fix send of \"PART\" command in backlog (irc protocol)\n\n[[v1.9]]\n== Version 1.9 (2017-06-25)\n\nNew features::\n\n  * core: improve speed of nicklist bar item callback\n  * core: allow index for hdata arrays in evaluation of expressions\n  * api: allow update of variables \"scroll_x\" and \"scroll_y\" in bar_window with function hdata_update\n  * api: add functions config_option_get_string and hdata_compare\n  * buflist: add option buflist.look.auto_scroll (issue #332)\n  * buflist: add keys kbd:[F1]/kbd:[F2], kbd:[Alt+F1]/kbd:[Alt+F2] to scroll the buflist bar\n  * buflist: display a warning when the script \"buffers.pl\" is loaded\n  * buflist: add support of char \"~\" in option buflist.look.sort for case insensitive comparison\n  * buflist: add variable `${format_name}` in bar item evaluation and option buflist.format.name (issue #1020)\n  * buflist: add variables `${current_buffer}` and `${merged}` (booleans \"0\" / \"1\") in bar item evaluation\n  * relay: add option \"start\" in command /relay\n  * trigger: add \"irc_server\" and \"irc_channel\" pointers in data for IRC signal/modifier hooks\n\nBug fixes::\n\n  * core: fix bind of keys with space key, like kbd:[Alt+Space] (bug #32133)\n  * core: fix infinite loop when the terminal is closed on the secure password prompt (issue #1010)\n  * buflist: fix long mouse gestures\n  * buflist: fix slow switch of buffer when there are a lot of buffers opened (issue #998)\n  * buflist: add option \"bar\" in command /buflist, do not automatically add the \"buflist\" bar when the option buflist.look.enabled is off (issue #994)\n  * buflist: fix crash on drag & drop of buffers\n  * irc: don't reset nick properties (prefixes/away/account/realname) on /names when the nick already exists (issue #1019)\n  * irc: fix memory leak in case of error in \"ecdsa-nist256p-challenge\" SASL mechanism\n  * relay: rebind on address after option relay.network.bind_address is changed\n  * relay: fix parsing of CAP command arguments in irc protocol (issue #995)\n\n[[v1.8]]\n== Version 1.8 (2017-05-13)\n\nNew features::\n\n  * core: add option weechat.completion.nick_case_sensitive (issue #981)\n  * core: add wildcard matching operator (`+=*+` and `+!*+`) in evaluation of expressions (issue #611)\n  * core: add cut of string in evaluation of expressions with \"cut:xxx\" (number of chars) and \"cutscr:xxx\" (number of chars displayed on screen)\n  * core: add ternary operator (condition) in evaluation of expressions (`${if:condition?value_if_true:value_if_false}`)\n  * core: add resize of window parents with /window resize [h/v]size (task #11461, issue #893)\n  * core: add hotlist pointer in buffer structure\n  * core: add last start date in output of command /version after at least one /upgrade (issue #903)\n  * api: add arraylist functions: arraylist_new, arraylist_size, arraylist_get, arraylist_search, arraylist_insert, arraylist_add, arraylist_remove, arraylist_clear, arraylist_free\n  * api: add dynamic string functions: string_dyn_alloc, string_dyn_copy, string_dyn_concat, string_dyn_free\n  * api: add special key \"__quiet\" in hashtable for function key_bind\n  * api: add `${re:#}` to get the index of last group captured in function string_eval_expression\n  * aspell: add options to control delimiters in suggestions: aspell.color.suggestion_delimiter_{dict|word} and aspell.look.suggestion_delimiter_{dict|word} (issue #940)\n  * buflist: new plugin \"buflist\" (bar item with list of buffers)\n  * irc: add option \"open\" in command /server (issue #966)\n  * irc: send signal \"irc_server_lag_changed\" and store the lag in the server buffer (local variable)\n  * irc: send multiple masks by message in commands /ban, /unban, /quiet and /unquiet, use ban mask default for nicks in /quiet and /unquiet, display an error if /quiet and /unquiet are not supported by server (issue #579, issue #15, issue #577)\n  * irc: add option \"-include\" in commands /allchan, /allpv and /allserv (issue #572)\n  * irc: don't smart filter modes given to you (issue #530, issue #897)\n  * script: remove option script.scripts.url_force_https, use HTTPS by default in option script.scripts.url\n\nBug fixes::\n\n  * core: fix memory leak in display of mouse event debug info\n  * core: fix command /cursor stop (do not toggle cursor mode) (issue #964)\n  * core: fix delayed refresh when the signal SIGWINCH is received (terminal resized), send signal \"signal_sigwinch\" after refreshes (issue #902)\n  * irc: fix update of server addresses on reconnection when the evaluated content has changed (issue #925)\n  * irc: fix crash in case of invalid server reply during SASL authentication with dh-blowfish or dh-aes mechanism\n  * irc: fix double decoding of IRC colors in messages sent/displayed by commands /msg and /query (issue #943)\n  * irc: fix parsing of message 324 (modes) when there is a colon before the modes (issue #913)\n  * relay: check buffer pointer received in \"sync\" and \"desync\" commands (weechat protocol) (issue #936)\n  * relay: remove buffer from synchronized buffers when it is closed (fix memory leak)\n\nBuild::\n\n  * core: fix compilation on FreeBSD with autotools (issue #276)\n  * python: add detection of Python 3.6\n  * ruby: add detection of Ruby 2.4 (issue #895)\n\n[[v1.7.1]]\n== Version 1.7.1 (2017-04-22)\n\nBug fixes::\n\n  * irc: fix parsing of DCC filename (CVE-2017-8073)\n\n[[v1.7]]\n== Version 1.7 (2017-01-15)\n\nNew features::\n\n  * core: add option weechat.look.align_multiline_words (issue #411, issue #802)\n  * core: add optional command prefix in completion templates \"commands\", \"plugins_commands\" and \"weechat_commands\"\n  * core: add optional arguments in completion template, sent to the callback\n  * core: add option \"time\" in command /debug\n  * core, xfer: display more information on fork errors (issue #573)\n  * core: add a slash before commands completed in arguments of /command, /debug time, /key bind, /key bindctxt, /mute, /repeat, /wait\n  * core: add a warning in header of configuration files to not edit by hand (issue #851)\n  * api: add info \"uptime\" (WeeChat uptime)\n  * api: add info \"pid\" (WeeChat PID) (issue #850)\n  * alias: add a slash before commands completed in arguments of /alias\n  * exec: add option \"-oc\" in command /exec to execute commands in process output, don't execute commands by default with \"-o\" (issue #877)\n  * fifo: add file fifo.conf and option fifo.file.path to customize FIFO pipe path/filename (issue #850, issue #122)\n  * irc: add server option \"usermode\" (issue #377, issue #820)\n  * irc: add tag \"self_msg\" on self messages (issue #840)\n  * irc: evaluate content of server option \"ssl_fingerprint\" (issue #858)\n  * irc: change default value of option irc.network.lag_reconnect from 0 to 300 (issue #818)\n  * trigger: do not hide email in command \"/msg nickserv register password email\" (issue #849)\n\nBug fixes::\n\n  * core: fix deadlock when quitting after a signal SIGHUP/SIGQUIT/SIGTERM is received (issue #32)\n  * core: fix display of empty lines in search mode (issue #829)\n  * api: fix crash in function string_expand_home when the HOME environment variable is not set (issue #827)\n  * exec: fix memory leak in display of process output\n  * irc: fix option \"-temp\" in command /server (issue #880)\n  * irc: fix close of server channels which are waiting for the JOIN when the server buffer is closed (issue #873)\n  * irc: fix buffer switching on manual join for forwarded channels (issue #876)\n  * irc: add missing tags on CTCP message sent\n  * lua: fix integers returned in Lua >= 5.3 (issue #834)\n  * relay: make HTTP headers case-insensitive for WebSocket connections (issue #888)\n  * relay: set status to \"authentication failed\" and close immediately connection in case of authentication failure in weechat and irc protocols (issue #825)\n  * script: reload a script after upgrade only if it was loaded, set autoload only if the script was auto-loaded (issue #855)\n\nBuild::\n\n  * core, irc, xfer: fix compilation on macOS (add link with resolv) (issue #276)\n  * core: add build of xz package with make dist (CMake)\n  * tests: fix compilation of tests on FreeBSD 11.0\n\n[[v1.6]]\n== Version 1.6 (2016-10-02)\n\nNew features::\n\n  * core: add optional argument \"lowest\", \"highest\" or level mask in command \"/input hotlist_clear\"\n  * core: add option \"cycle\" in command /buffer\n  * core, irc, xfer: display more information on memory allocation errors (issue #573)\n  * api: add \"extra\" argument to evaluate extra variables in function string_eval_expression (issue #534)\n  * api: remove functions printf_date and printf_tags\n  * irc: rename server options \"default_msg_{kick|part|quit}\" to \"msg_{kick|part|quit}\", evaluate them\n  * relay: add option relay.network.allow_empty_password (issue #735)\n  * relay: allow escape of comma in command \"init\" (weechat protocol) (issue #730)\n  * trigger: add support for one-time triggers (issue #399, issue #509)\n\nBug fixes::\n\n  * core, irc, xfer: refresh domain name and name server addresses before connection to servers (fix connection to servers after suspend mode) (issue #771)\n  * api: fix return of function string_match when there are multiple masks in the string (issue #812)\n  * api: fix crash in function network_connect_to if address is NULL\n  * api: fix connection to servers with hook_connect on Windows 10 with Windows subsystem for Linux (issue #770)\n  * api: fix crash in function string_split_command when the separator is not a semicolon (issue #731)\n  * irc: fix socket leak in connection to server (issue #358, issue #801)\n  * irc: fix display of service notice mask (message 008) (issue #429)\n  * irc: fix NULL pointer dereference in 734 command callback (issue #738)\n  * relay: return an empty hdata when the requested hdata or pointer is not found (issue #767)\n  * xfer: fix crash on DCC send if option xfer.file.auto_accept_nicks is set (issue #781)\n\nDocumentation::\n\n  * switch to asciidoctor to build docs and man page (issue #722)\n\nBuild::\n\n  * python: add detection of Python 3.5\n\n[[v1.5]]\n== Version 1.5 (2016-05-01)\n\nNew features::\n\n  * core: evaluate content of option \"weechat.look.item_time_format\" (issue #791)\n  * core: change default value of option weechat.look.nick_color_hash to \"djb2\"\n  * core: move nick coloring from irc plugin to core, move options irc.look.nick_color_force, irc.look.nick_color_hash and irc.look.nick_color_stop_chars to core, add info \"nick_color\" and \"nick_color_name\", deprecate info \"irc_nick_color\" and \"irc_color_name\" (issue #262)\n  * core: move irc bar item \"away\" to core, move options irc.look.item_away_message and irc.color.item_away to core (issue #692)\n  * api: add support of functions in hook_process\n  * api: add pointer in callbacks used in scripting API (issue #406)\n  * irc: add option irc.network.sasl_fail_unavailable (issue #600, issue #697)\n  * irc: add multiple targets and support of \"-server\" in command /ctcp (issue #204, issue #493)\n  * trigger: add \"recover\" in default triggers cmd_pass/msg_auth, and \"regain\" in default trigger \"msg_auth\" (issue #511)\n\nInternationalization::\n\n  * add Portuguese translations\n\nBug fixes::\n\n  * core: fix nick coloring when stop chars and a forced color are used: first remove chars then look for forced color\n  * core: check that pointers received in arguments are not NULL in buffers and windows functions\n  * core: fix truncation of buffer names in hotlist (issue #668)\n  * core: fix update of window title under Tmux (issue #685)\n  * api: fix number of arguments returned by function string_split when keep_eol is 2 and the string ends with separators\n  * irc: fix first message displayed in raw buffer when the message is modified by a modifier (issue #719)\n  * irc: add missing completion \"*\" for target in command /msg\n  * irc: fix /msg command with multiple targets including \"*\"\n  * lua: fix crash when a lua function doesn't return a value and a string was expected (issue #718)\n  * relay: do not execute any command received in a PRIVMSG message from an irc relay client (issue #699)\n  * relay: fix the max number of clients connected on a port, allow value 0 for \"no limit\" (issue #669)\n  * relay: fix decoding of multiple frames in a single websocket message, send PONG on PING received in a websocket frame (issue #675)\n  * relay: fix command \"input\" received from clients with only spaces in content of message (weechat protocol) (issue #663)\n  * script: force refresh of scripts buffer after download of scripts list (issue #693)\n  * xfer: fix DCC file received when the terminal is resized (issue #677, issue #680)\n\nBuild::\n\n  * python: fix detection of Python shared libraries (issue #676)\n  * ruby: add detection of Ruby 2.3 (issue #698)\n\n[[v1.4]]\n== Version 1.4 (2016-01-10)\n\nNew features::\n\n  * core: add a parent name in options, display inherited values if null in /set output, add option weechat.color.chat_value_null (issue #629)\n  * core: add tag \"term_warning\" in warnings about wrong $TERM on startup\n  * core: add option weechat.look.paste_auto_add_newline (issue #543)\n  * core: display a more explicit error when a filter fails to be added (issue #522)\n  * api: add function string_hex_dump\n  * api: add argument \"length\" in function utf8_is_valid\n  * alias: display completion in /alias list (issue #518)\n  * fifo: add /fifo command\n  * irc: track real names using extended-join and WHO (issue #351)\n  * irc: add support of SNI (Server Name Indication) in SSL connection to IRC server (issue #620)\n  * irc: add support of \"cap-notify\" capability (issue #182, issue #477)\n  * irc: add command /cap (issue #8)\n  * irc: add hex dump of messages in raw buffer when debug is enabled for irc plugin (level 2 or more)\n  * irc: evaluate content of server option \"addresses\"\n  * irc: move option irc.network.alternate_nick into servers (irc.server.xxx.nicks_alternate) (issue #633)\n  * irc: use current channel and current server channels first in completions \"irc_server_channels\" and \"irc_channels\" (task #12923, issue #260, issue #392)\n  * logger: display system error when the log file can not be written (issue #541)\n  * relay: add option relay.irc.backlog_since_last_message (issue #347)\n  * script: add option script.scripts.download_timeout\n  * script: add completion with languages and extensions, support search by language/extension in /script search\n\nBug fixes::\n\n  * core: fix execution of empty command name (\"/\" and \"/ \" are not valid commands)\n  * core: fix memory leak when using multiple \"-d\" or \"-r\" in command line arguments\n  * core: don't complain any more about \"tmux\" and \"tmux-256color\" $TERM values when WeeChat is running under Tmux (issue #519)\n  * core: fix truncated messages after a word with a length of zero on screen (for example a zero width space: U+200B) (bug #40985, issue #502)\n  * api: fix handle of invalid escape in function string_convert_escaped_chars\n  * alias: do not allow slashes and spaces in alias name (issue #646)\n  * irc: fix channel forwarding when option irc.look.buffer_open_before_{autojoin|join} is on (issue #643)\n  * irc: add a missing colon before the password in PASS message, if the password has spaces or begins with a colon (issue #602)\n  * irc: fix charset decoding in incoming private messages (issue #520)\n  * irc: display the arrow before server name in raw buffer\n  * irc: fix display of messages sent to server in raw buffer\n  * irc: fix display of invalid UTF-8 chars in raw buffer\n  * relay: display the arrow before client id and protocol in raw buffer\n  * ruby: fix load of scripts requiring \"uri\" (issue #433)\n\nDocumentation::\n\n  * add Czech man page and quickstart guide (issue #490)\n\nTests::\n\n  * core: add a test to check if all plugins are loaded\n  * core: fix locale used to execute tests (issue #631)\n\nBuild::\n\n  * core: add scripts version.sh and build-debian.sh, separate stable from devel Debian packaging\n  * ruby: fix Ruby detection when pkg-config is not installed\n\n[[v1.3]]\n== Version 1.3 (2015-08-16)\n\nNew features::\n\n  * core: add completion \"colors\" (issue #481)\n  * core: start/stop search in buffer at current scroll position by default, add key kbd:[Ctrl+q] to stop search and reset scroll (issue #76, issue #393)\n  * core: add option weechat.look.key_grab_delay to set the default delay when grabbing a key with kbd:[Alt+k]\n  * core: add option weechat.look.confirm_upgrade (issue #463)\n  * core: add signal \"signal_sighup\"\n  * core: allow kbd:[Ctrl+c] to exit WeeChat when the passphrase is asked on startup (issue #452)\n  * core: allow pointer as list name in evaluation of hdata (issue #450)\n  * api: add support of evaluated sub-strings and current date/time in function string_eval_expression and command /eval\n  * api: add function string_eval_path_home\n  * alias: add options \"add\", \"addcompletion\" and \"del\" in command /alias, remove command /unalias (issue #458)\n  * irc: add option irc.network.channel_encode (issue #218, issue #482)\n  * irc: add option irc.color.topic_current (issue #475)\n  * irc: evaluate content of server option \"nicks\"\n  * logger: evaluate content of option logger.file.path (issue #388)\n  * script: rename option script.scripts.dir to script.scripts.path, evaluate content of option (issue #388)\n  * relay: display value of HTTP header \"X-Real-IP\" for websocket connections (issue #440)\n  * xfer: evaluate content of options xfer.file.download_path and xfer.file.upload_path (issue #388)\n\nBug fixes::\n\n  * core: flush stdout/stderr after sending text directly on them (fix corrupted data sent to hook_process callback) (issue #442)\n  * core: allow execution of command \"/input return\" on a buffer which is not displayed in a window\n  * core: allow jump from current to previous buffer with default keys kbd:[Alt+j], kbd:[01..99] (issue #466)\n  * core: fix crash if a file descriptor used in hook_fd is too high (> 1024 on Linux/BSD) (issue #465)\n  * core: fix display of invalid UTF-8 chars in bars\n  * core: fix bar item \"scroll\" after /buffer clear (issue #448)\n  * core: fix display of time in bare display when option weechat.look.buffer_time_format is set to empty string (issue #441)\n  * api: add missing function infolist_search_var in script API (issue #484)\n  * api: add missing function hook_completion_get_string in script API (issue #484)\n  * api: fix type of value returned by functions strcasestr, utf8_prev_char, utf8_next_char, utf8_add_offset and util_get_time_string\n  * api: fix type of value returned by function strcasestr\n  * fifo: fix send error on Cygwin when something is received in the pipe (issue #436)\n  * irc: fix update of lag item when the server lag changes\n  * irc: do not allow command /query with a channel name (issue #459)\n  * irc: decode/encode only text in IRC messages and not the headers (bug #29886, issue #218, issue #451)\n  * irc: fix crash with commands /allchan, /allpv and /allserv if the executed command closes buffers (issue #445)\n  * irc: do not open auto-joined channels buffers when option \"-nojoin\" is used in command /connect (even if the option irc.look.buffer_open_before_autojoin is on)\n  * irc: fix errors displayed on WHOX messages received (issue #376)\n  * xfer: fix crash if the DCC file socket number is too high (> 1024 on Linux/BSD) (issue #465)\n  * xfer: fix parsing of DCC chat messages (handle \"\\r\\n\" at the end of messages) (issue #425, issue #426)\n\nDocumentation::\n\n  * replace PREFIX with CMAKE_INSTALL_PREFIX in CMake instructions (issue #354)\n\nBuild::\n\n  * lua: add detection of Lua 5.3\n  * ruby: add detection of Ruby 2.2\n\n[[v1.2]]\n== Version 1.2 (2015-05-10)\n\nNew features::\n\n  * core: add signals \"signal_sigterm\" and \"signal_sigquit\" (issue #114)\n  * core: use environment variable WEECHAT_HOME on startup (issue #391)\n  * core: add options weechat.look.quote_{nick_prefix|nick_suffix|time_format} to customize quoted messages in cursor mode (issue #403)\n  * core: add a welcome message on first WeeChat run (issue #318)\n  * core: add options weechat.look.word_chars_{highlight|input} (issue #55, task #9459)\n  * core: remove WeeChat version from config files (issue #407)\n  * core: display a warning on startup if the locale can not be set (issue #373)\n  * core: allow \"*\" as plugin name in command \"/plugin reload\" to reload all plugins with options\n  * core: add option \"-s\" in command /eval to split expression before evaluating it (no more split by default) (issue #324)\n  * core: add priority in plugins to initialize them in order\n  * api: add support of environment variables in function string_eval_expression and command /eval\n  * api: add support of full color option name in functions color and string_eval_expression and in command /eval\n  * api: add \"_chat_line\" (line pointer) in hashtable of hook_focus\n  * irc: add support of \"account-notify\" capability (issue #11, issue #246)\n  * irc: add support of \"ecdsa-nist256p-challenge\" SASL mechanism (issue #251)\n  * irc: display a warning when the option irc.look.display_away is set to \"channel\"\n  * irc: optimize search of a nick in nicklist (up to 3x faster)\n  * irc: add support of SHA-256 and SHA-512 algorithms in server option \"ssl_fingerprint\" (issue #281)\n  * irc: add option \"-noswitch\" in command /query (issue #394)\n  * irc: format message 008 (RPL_SNOMASK) (issue #144)\n  * irc: remove server \"freenode\" from default config file (issue #309)\n  * javascript: new script plugin for JavaScript\n\nBug fixes::\n\n  * core: add missing completions in command /input\n  * guile: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, hook_command, buffer_string_replace_local_var, command\n  * irc: fix color of new nick in nick changes messages when option irc.look.color_nicks_in_server_messages is off\n  * irc: fix crash when setting an invalid regex with \"/list -re\" during a /list server response (issue #412)\n  * irc: fix display of PART messages on channels with +a (anonymous flag) (issue #396)\n  * irc: remove useless rename of channel buffer on JOIN received with different case (issue #336)\n  * irc: fix completion of commands /allchan and /allpv\n  * lua: fix wrong argument usage in functions nicklist_remove_group, nicklist_remove_nick and nicklist_remove_all (issue #346)\n  * lua: fix value returned in case of error in functions: config_option_reset, config_string, config_string_default, config_color, config_color_default, config_write, config_read, config_reload, hook_modifier_exec, buffer_string_replace_local_var, nicklist_group_set, nicklist_nick_set, command, upgrade_read, upgrade_close\n  * relay: fix up/down keys on relay buffer (issue #335)\n  * relay: remove v4-mapped addresses in /help relay.network.allowed_ips (issue #325)\n  * perl: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n  * python: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, config_is_set_plugin, buffer_get_string, buffer_string_replace_local_var, nicklist_group_get_string, nicklist_nick_get_string, command, hdata_time\n  * python: fix name of function \"bar_update\" in case of error\n  * python: fix restore of old interpreter when a function is not found in the script\n  * ruby: fix crash on /plugin reload (issue #364)\n  * ruby: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n  * script: fix state of script plugins when list of scripts has not been downloaded\n  * scripts: reset current script pointer when load of script fails in python/perl/ruby/lua/tcl plugins\n  * scripts: fix return code of function bar_set in python/perl/ruby/lua/tcl/guile plugins\n  * scripts: fix type of value returned by function hdata_time (from string to long integer) in perl/ruby/lua/tcl/guile plugins\n  * tcl: fix value returned in case of error in functions: mkdir_home, mkdir, mkdir_parents, config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, print_date_tags, buffer_string_replace_local_var, command, infolist_new_item, infolist_new_var_integer, infolist_new_var_string, infolist_new_var_pointer, infolist_new_var_time, upgrade_write_object, upgrade_read, upgrade_close\n  * trigger: do not hook anything if the trigger is disabled (issue #405)\n\nDocumentation::\n\n  * add Russian man page\n\n[[v1.1.1]]\n== Version 1.1.1 (2015-01-25)\n\nBug fixes::\n\n  * core: fix crash when a root bar has conditions different from active/inactive/nicklist (issue #317)\n  * irc: don't close channel buffer on second /part when option irc.look.part_closes_buffer is off (issue #313)\n  * irc: fix /join on a channel buffer opened with autojoin but which failed to join\n  * irc: send QUIT to server and no PART for channels when the server buffer is closed (issue #294)\n  * irc: fix order of channel buffers opened when option irc.look.server_buffer is set to \"independent\", irc.look.buffer_open_before_autojoin to \"on\" and irc.look.new_channel_position to \"near_server\" (issue #303)\n  * irc: fix crash in buffer close when server name is the same as a channel name (issue #305)\n\nBuild::\n\n  * core: fix random error when creating symbolic link weechat-curses on make install with CMake (bug #40313)\n\n[[v1.1]]\n== Version 1.1 (2015-01-11)\n\nNew features::\n\n  * core: add option weechat.completion.command_inline (task #12491)\n  * core: add bar item \"mouse_status\", new options weechat.look.item_mouse_status and weechat.color.status_mouse (issue #247)\n  * core: add signals \"mouse_enabled\" and \"mouse_disabled\" (issue #244)\n  * core: add hide of chars in string in evaluation of expressions\n  * core: add arraylists, improve speed of completions (about 50x faster)\n  * core: allow incomplete commands if unambiguous, new option weechat.look.command_incomplete (task #5419)\n  * core: check bar conditions in root bars and on each update of a bar item\n  * core: fully evaluate commands bound to keys in cursor and mouse contexts\n  * core: move bar item \"scroll\" between buffer name and lag in default bar items of status bar\n  * api: add regex replace feature in function string_eval_expression\n  * api: send value returned by command callback in function command, remove WeeChat error after command callback if return code is WEECHAT_RC_ERROR\n  * api: use microseconds instead of milliseconds in functions util_timeval_diff and util_timeval_add\n  * irc: add option \"reorder\" in command /server (issue #229)\n  * irc: open channel buffers before the JOIN is received from server (autojoin and manual joins), new options irc.look.buffer_open_before_{autojoin|join} (issue #216)\n  * irc: add server option \"sasl_fail\" (continue/reconnect/disconnect if SASL fails) (issue #265, task #12204)\n  * irc: add support for color codes 16-99 in IRC messages (issue #228), add infolist \"irc_color_weechat\"\n  * irc: add support of \"extended-join\" capability (issue #143, issue #212)\n  * irc: display own nick changes in server buffer (issue #188)\n  * irc: disable creation of temporary servers by default with command /connect, new option irc.look.temporary_servers\n  * irc: disable SSLv3 by default in server option \"ssl_priorities\" (issue #248)\n  * irc: automatically add current channel in command /samode (issue #241)\n  * irc: add tag \"nick_xxx\" in invite messages\n  * relay: add options \"stop\" and \"restart\" in command /relay\n  * relay: add option relay.network.ssl_priorities (issue #234)\n  * relay: add host in sender for IRC backlog PRIVMSG messages sent to clients\n  * script: add option script.scripts.url_force_https (issue #253)\n  * trigger: evaluate and replace regex groups at same time, new format for regex option in triggers (incompatible with version 1.0) (issue #224)\n  * trigger: add option \"restore\" in command /trigger\n  * trigger: add `${tg_displayed}` in conditions of default trigger \"beep\"\n\nBug fixes::\n\n  * core: fix display bug when scrolling in buffer on a filtered line (issue #240)\n  * core: send mouse code only one time to terminal with command /mouse enable|disable|toggle\n  * core: fix buffer property \"lines_hidden\" when merging buffers or when a line is removed from a buffer (issue #226)\n  * core: display time in bare display only if option weechat.look.buffer_time_format is not an empty string\n  * core: fix translation of message displayed after /upgrade\n  * api: fix truncated process output in hook_process (issue #266)\n  * api: fix crash when reading config options with NULL value (issue #238)\n  * irc: defer the auto-connection to servers with a timer (issue #279, task #13038)\n  * irc: add missing server options \"sasl_timeout\" and \"notify\" in output of /server listfull\n  * irc: use option irc.look.nick_mode_empty to display nick prefix in bar item \"input_prompt\"\n  * irc: remove IRC color codes from buffer title in channels (issue #237)\n  * irc: fix completion of commands /msg, /notice and /query\n  * irc: fix translation of CTCP PING reply (issue #137)\n  * relay: wait for message CAP END before sending join of channels and backlog to the client (issue #223)\n  * relay: send messages \"_buffer_localvar_*\" and \"_buffer_type_changed\" with sync \"buffers\" (issue #191)\n  * relay: don't remove relay from config when the binding fails (issue #225)\n  * relay: use comma separator in option relay.irc.backlog_tags, check the value of option when it is changed with /set\n  * relay: remove \"::ffff:\" from IPv4-mapped IPv6 client address (issue #111)\n  * trigger: fix memory leak when allocating a new trigger with several regex\n  * xfer: fix freeze when accepting DCC (issue #160, issue #174)\n  * xfer: bind to wildcard address when sending (issue #173)\n\nBuild::\n\n  * core: fix compilation of man pages with autotools in source directory\n  * core: fix compilation of plugins with CMake >= 3.1 (issue #287)\n  * lua: add detection of Lua 5.2\n  * python: fix Python detection with Homebrew (issue #217)\n  * tests: fix compilation of tests with clang (issue #275)\n\n[[v1.0.1]]\n== Version 1.0.1 (2014-09-28)\n\nBug fixes::\n\n  * core: fix crash on buffer close when option weechat.look.hotlist_remove is set to \"merged\" (issue #199)\n  * core: fix highlight of IRC action messages when option irc.look.nick_mode is set to \"action\" or \"both\" (issue #206)\n  * core: fix compilation of plugin API functions (macros) when compiler optimizations are enabled (issue #200)\n  * core: fix window/buffer pointers used in command /eval\n  * core: fix modifier \"weechat_print\": discard only one line when several lines are displayed in same message (issue #171)\n  * api: fix bug in function hdata_move when absolute value of count is greater than 1\n  * aspell: fix crash with command \"/aspell addword\" if no word is given (issue #164, issue #165)\n  * irc: fix display of channel exception list (348) with 6 arguments (date missing)\n  * irc: fix type of value stored in hashtable when joining a channel (issue #211)\n  * relay: fix send of signals \"relay_client_xxx\" (issue #214)\n  * script: fix crash on \"/script update\" if a script detail is displayed in buffer (issue #177)\n  * trigger: do not allow any changes on a trigger when it is currently running (issue #189)\n  * trigger: fix regex used in default triggers to hide passwords (\"\\S\" is not supported on *BSD) (issue #172)\n\nTests::\n\n  * core: fix memory leak in tests launcher\n\nBuild::\n\n  * aspell: fix compilation with Enchant < 1.6.0 (issue #192)\n  * guile: fix compilation with Guile < 2.0.4 (issue #198)\n  * perl: fix detection of Perl >= 5.20 with autotools\n  * tests: fix build of tests when the build directory is outside source tree (issue #178)\n\n[[v1.0]]\n== Version 1.0 (2014-08-15)\n\nNew features::\n\n  * core: display a warning on startup if $TERM does not start with \"screen\" under Screen/Tmux\n  * core: add option weechat.color.status_nicklist_count (issue #109, issue #110)\n  * core: add option \"env\" in command /set (manage environment variables)\n  * core: add bar item \"buffer_short_name\" (task #10882)\n  * core: add option \"send\" in command /input (send text to a buffer)\n  * core: add support of negated tags in filters (with \"!\") (issue #72, issue #74)\n  * core: add hidden buffers, add options hide/unhide in command /buffer\n  * core: add default key kbd:[Alt+-] (toggle filters in current buffer) (issue #17)\n  * core: add non-active merged buffers with activity in hotlist (if another merged buffer is zoomed) (task #12845)\n  * core: add text search in buffers with free content (task #13051)\n  * core: add buffer property \"clear\"\n  * core: add option weechat.look.hotlist_add_conditions, remove option weechat.look.hotlist_add_buffer_if_away\n  * core: add option weechat.look.hotlist_remove (issue #99)\n  * core: add options \"-beep\" and \"-current\" in command /print\n  * core: add bare display mode for easy text selection and click on URLs, new key: kbd:[Alt+l] (`L`), new option \"bare\" in command /window, new options: weechat.look.bare_display_exit_on_input and weechat.look.bare_display_time_format\n  * core: add signals \"key_combo_{default|search|cursor}\"\n  * core: add terabyte unit for size displayed\n  * core: display a warning in case of inconsistency between the options weechat.look.save_{config|layout}_on_exit\n  * core: add option \"-mask\" in command /unset (issue #112)\n  * core: set option weechat.look.buffer_search_where to prefix_message by default\n  * core: mute all buffers by default in command /mute (replace option -all by -core)\n  * api: allow value \"-1\" for property \"hotlist\" in function buffer_set (to remove a buffer from hotlist)\n  * api: add option \"buffer_flush\" in function hook_process_hashtable\n  * api: add support of case insensitive search and search by buffer full name in function buffer_search (bug #34318)\n  * api: add option \"detached\" in function hook_process_hashtable\n  * api: add option \"signal\" in function hook_set to send a signal to the child process\n  * api: add support of nested variables in function string_eval_expression and command /eval (issue #35)\n  * api: add support of escaped strings with format `${esc:xxx}` or `${\\xxx}` in function string_eval_expression and command /eval\n  * api: add functions hashtable_dup, string_replace_regex, string_split_shell, string_convert_escaped_chars\n  * api: add integer return code for functions hook_{signal|hsignal}_send\n  * api: add argument \"flags\" in function hdata_new_list\n  * api: allow wildcard \"*\" inside the mask in function string_match\n  * api: allow negative value for y in function printf_y\n  * alias: add default alias \"msgbuf\" (send text to a buffer)\n  * exec: add exec plugin: new command /exec and file exec.conf\n  * irc: add bar item \"irc_nick_modes\" (issue #71)\n  * irc: add support of message 324 (channel modes) in option irc.look.display_join_message (issue #75)\n  * irc: add option irc.look.join_auto_add_chantype (issue #65)\n  * irc: add tag with host (\"host_xxx\") in IRC messages displayed (task #12018)\n  * irc: add option irc.color.item_nick_modes (issue #47)\n  * irc: add support of \"away-notify\" capability (issue #12)\n  * irc: add command /remove (issue #91)\n  * irc: add command /unquiet (issue #36)\n  * irc: add command /allpv (task #13111)\n  * irc: display locally away status changes in private buffers (in addition to channels) (issue #117)\n  * irc: allow many fingerprints in server option ssl_fingerprint (issue #49)\n  * irc: rename option irc.look.item_channel_modes_hide_key to irc.look.item_channel_modes_hide_args, value is now a string (task #12070, task #12163, issue #48)\n  * irc: add value \"+\" for option irc.look.smart_filter_mode to use modes from server prefixes (this is now the default value) (issue #90)\n  * irc: allow \"$ident\" in option irc.network.ban_mask_default (issue #18)\n  * irc: evaluate content of server options \"username\" and \"realname\"\n  * irc: set option irc.network.autoreconnect_delay_max to 600 by default, increase max value to 604800 seconds (7 days)\n  * irc: set option irc.network.whois_double_nick to \"off\" by default\n  * relay: add messages \"_buffer_cleared\", \"_buffer_hidden\" and \"_buffer_unhidden\"\n  * relay: add info \"relay_client_count\" with optional status name as argument\n  * relay: add signals \"relay_client_xxx\" for client status changes (issue #2)\n  * relay: add option relay.network.clients_purge_delay\n  * rmodifier: remove plugin (replaced by trigger)\n  * script: set option script.scripts.cache_expire to 1440 by default\n  * trigger: add trigger plugin: new command /trigger and file trigger.conf\n\nBug fixes::\n\n  * core: fix zero-length malloc of an hashtable item with type \"buffer\"\n  * core: fix memory leak on /upgrade when file signature in upgrade file is invalid\n  * core: fix memory leak in completion of config options values\n  * core: fix memory leak when removing script files\n  * core: fix result of hash function (in hashtables) on 32-bit systems\n  * core: fix insert of mouse code in input line after a partial key combo (issue #130)\n  * core: check code point value in UTF-8 check function (issue #108)\n  * core: fix socks5 proxy for curl downloads (issue #119)\n  * core: display curl error after a failed download\n  * core: do not display content of passphrase on /secure buffer\n  * core: fix potential memory leak with infolists not freed in plugins (debian #751108)\n  * core: fix color display of last terminal color number + 1 (issue #101)\n  * core: add option \"-buffer\" in command /command (issue #67)\n  * core: fix restoration of core buffer properties after /upgrade\n  * core: fix \"/buffer clear\" with a name (don't clear all merged buffers with same number)\n  * core: fix evaluation of expression with regex: when a comparison char is in the regex and don't evaluate the regex itself (issue #63)\n  * core: close .upgrade files before deleting them after /upgrade\n  * core: fix refresh of bar item \"buffer_zoom\" on buffer switch\n  * core: fix reset of attributes in bars when \"resetcolor\" is used (issue #41)\n  * core: fix alignment of lines in merged buffers when options weechat.look.prefix_align and weechat.look.prefix_buffer_align are set to \"none\" (issue #43)\n  * core: quit WeeChat on signal SIGHUP, remove signal \"signal_sighup\"\n  * core: fix add of filter on macOS when regex for message is empty (filter regex ending with \"\\t\")\n  * core: check validity of buffer pointer when data is sent to a buffer (command/text from user and API function command)\n  * core: fix crash when buffer is closed during execution of multiple commands (issue #27)\n  * core: fix compilation on SmartOS (bug #40981, issue #23)\n  * core: add missing \\0 at the end of stderr buffer in function hook_process\n  * core: fix highlight problem with \"(?-i)\" and upper case letters in option weechat.look.highlight (issue #24)\n  * core: fix detection of terminated process in function hook_process\n  * core: fix \"/window scroll -N\" on a buffer with free content\n  * core: fix recursive calls to function eval_expression\n  * core: save and restore mute state in command /mute (bug #41748)\n  * core: fix memory leak when removing a hdata\n  * core: fix memory leak in evaluation of sub-conditions\n  * core: fix memory leak in function gui_key_add_to_infolist (in case of insufficient memory)\n  * core: fix use of invalid pointer in function gui_bar_window_content_alloc (in case of insufficient memory)\n  * core: fix uninitialized value in function string_decode_base64\n  * core: fix memory leak and use of invalid pointer in split of string (in case of insufficient memory)\n  * core: fix potential NULL pointer in function gui_color_emphasize\n  * core: use same return code and message in all commands when arguments are wrong/missing\n  * core: allow empty arguments for command /print\n  * core: fix freeze/crash in GnuTLS (bug #41576)\n  * api: fix function string_decode_base64\n  * api: fix function string_format_size on 32-bit systems\n  * api: change type of arguments displayed/highlight in hook_print callback from string to integer (in scripts)\n  * alias: change default command for alias /beep to \"/print -beep\"\n  * guile: fix module used after unload of a script\n  * irc: fix memory leak in CTCP answer\n  * irc: fix duplicate sender name in display of wallops (issue #142, issue #145)\n  * irc: fix extract of channel in parser for JOIN/PART messages when there is a colon before the channel name (issue #83)\n  * irc: fix duplicate sender name in display of notice (issue #87)\n  * irc: fix refresh of buffer name in bar items after join/part/kick/kill (issue #86)\n  * irc: display message 936 (censored word) on channel instead of server buffer\n  * irc: make reason optional in command /kill\n  * irc: add alias \"whois\" for target buffer of messages 401/402 (issue #54)\n  * irc: fix truncated read on socket with SSL (bug #41558)\n  * irc: display output of CAP LIST in server buffer\n  * irc: fix colors in message with CTCP reply sent to another user\n  * irc: fix read of MODES server value when in commands /op, /deop, /voice, /devoice, /halfop, /dehalfop\n  * irc: fix parsing of nick in host when \"!\" is not found (bug #41640)\n  * lua: fix interpreter used after unload of a script\n  * perl: fix context used after unload of a script\n  * python: fix read of return value for callbacks returning an integer in Python 2.x (issue #125)\n  * python: fix interpreter used after unload of a script\n  * relay: fix memory leak during handshake on websocket\n  * relay: fix memory leak when receiving commands from client (weechat protocol)\n  * relay: fix crash when an IRC \"MODE\" command is received from client without arguments\n  * relay: fix number of bytes sent/received on 32-bit systems\n  * relay: fix crash when closing relay buffers (issue #57, issue #78)\n  * relay: check pointers received in hdata command to prevent crashes with bad pointers (WeeChat protocol)\n  * relay: remove warning on /reload of relay.conf when ports are defined\n  * relay: fix client disconnection on empty websocket frames received (PONG)\n  * relay: add support of Internet Explorer websocket (issue #73)\n  * relay: fix crash on /upgrade received from a client (weechat protocol)\n  * relay: fix freeze after /upgrade when many disconnected clients still exist\n  * relay: fix NULL pointer when reading buffer lines for irc backlog\n  * ruby: fix crash when trying to load a directory with /ruby load\n  * script: fix display of curl errors\n  * script: fix scroll on script buffer in the detailed view of script (issue #6)\n  * scripts: fix crash when a signal is received with type \"int\" and NULL pointer in signal_data\n  * xfer: fix problem with option xfer.file.auto_accept_nicks when the server name contains dots\n  * xfer: fix freeze/problems when sending empty files with DCC (issue #53)\n  * xfer: fix connection to remote host in DCC receive on macOS (issue #25)\n  * xfer: remove bind on xfer.network.own_ip (issue #5)\n\nBuild::\n\n  * core: fix CMake warning CMP0007 on \"make uninstall\" (bug #41528)\n  * core: use glibtoolize on macOS (autotools) (issue #22)\n  * ruby: add detection of Ruby 2.1\n\nTests::\n\n  * core: add unit tests using CppUTest (issue #104)\n\n[[v0.4.3]]\n== Version 0.4.3 (2014-02-09)\n\nNew features::\n\n  * core: add signals \"signal_sighup\" and \"signal_sigwinch\" (terminal resized)\n  * core: add command /print, add support of more escaped chars in command \"/input insert\"\n  * core: add option weechat.look.tab_width\n  * core: add completion \"plugins_installed\"\n  * core: add option weechat.look.window_auto_zoom, disable automatic zoom by default when terminal becomes too small for windows\n  * core: use \"+\" separator to make a logical \"and\" between tags in command /filter, option weechat.look.highlight_tags and buffer property \"highlight_tags\"\n  * core: add options weechat.look.buffer_auto_renumber and weechat.look.buffer_position, add option \"renumber\" in command /buffer, add bar item \"buffer_last_number\" (task #12766)\n  * core: add signal \"buffer_cleared\"\n  * core: add buffer property \"day_change\" to hide messages for the day change in specific buffers\n  * core: add option \"libs\" in command /debug\n  * core: add infos \"term_width\" and \"term_height\"\n  * core: add bar item \"buffer_zoom\", add signals \"buffer_{zoomed|unzoomed}\" (patch #8204)\n  * core: add default keys kbd:[Alt+Home] / kbd:[Alt+End] (`meta2-1;3H` / `meta2-1;3F`) and kbd:[Alt+F11] / kbd:[Alt+F12] (`meta2-23;3~` / `meta2-24;3~`) for xterm\n  * core: add support of italic text (requires ncurses >= 5.9 patch 20130831)\n  * core: add options to customize default text search in buffers: weechat.look.buffer_search_{case_sensitive|force_default|regex|where}\n  * core: add support of UTF-8 chars in horizontal/vertical separators (options weechat.look.separator_{horizontal|vertical})\n  * core: add support of logical and/or for argument \"tags\" in function hook_print\n  * core: rename buffer property \"highlight_tags\" to \"highlight_tags_restrict\", new behavior for buffer property \"highlight_tags\" (force highlight on tags), rename option irc.look.highlight_tags to irc.look.highlight_tags_restrict\n  * core: rename options save/reset to store/del in command /layout\n  * core: replace default key kbd:[Ctrl+c], kbd:[r] by kbd:[Ctrl+c], kbd:[v] for reverse video in messages\n  * core: replace default key kbd:[Ctrl+c], kbd:[u] by kbd:[Ctrl+c], kbd:[_] for underlined text in messages\n  * core: rename option weechat.look.set_title to weechat.look.window_title, value is now a string (evaluated)\n  * core: set option weechat.look.paste_bracketed to \"on\" by default\n  * core: use one date format when day changes from day to day+1\n  * api: add function infolist_search_var\n  * api: add stdin options in functions hook_process_hashtable and hook_set to send data on stdin of child process, add function hook_set in script API (task #10847, task #13031)\n  * api: add hdata \"buffer_visited\"\n  * api: add support of infos with format `${info:name,arguments}` in function string_eval_expression and command /eval\n  * api: add support for C++ plugins\n  * alias: add default alias /beep => /print -stderr \\a\n  * irc: add server option \"ssl_fingerprint\" (task #12724)\n  * irc: add option irc.look.smart_filter_mode (task #12499)\n  * irc: add option irc.network.ban_mask_default (bug #26571)\n  * irc: add option irc.network.lag_max\n  * irc: add option irc.look.notice_welcome_tags\n  * irc: add server option \"default_msg_kick\" to customize default kick/kickban message (task #12777)\n  * irc: use MONITOR instead of ISON for /notify when it is available on server (task #11477)\n  * relay: send backlog for irc private buffers\n  * xfer: add support of IPv6 for DCC chat/file (patch #7992)\n  * xfer: add option xfer.file.auto_check_crc32 (patch #7963)\n\nBug fixes::\n\n  * core: fix hotlist problems after apply of a layout (bug #41481)\n  * core: fix crash when creating two bars with same name but different case (bug #41418)\n  * core: fix display of read marker when all buffer lines are unread and that option weechat.look.read_marker_always_show is on\n  * core: fix memory leak in regex matching when evaluating expression\n  * core: fix crash in /eval when config option has a NULL value\n  * core: fix crash with hdata_update on shared strings, add hdata type \"shared_string\" (bug #41104)\n  * core: fix text emphasis with wide chars on screen like Japanese (patch #8253)\n  * core: remove option on /unset of plugin description option (plugins.desc.xxx) (bug #40768)\n  * core: fix random crash when closing a buffer\n  * core: fix crash on /buffer close core.weechat\n  * core: apply color attributes when clearing a window (patch #8236)\n  * core: fix truncated text when pasting several long lines (bug #40210)\n  * core: create .conf file with default options only if the file does not exist (and not on read error with existing file)\n  * core: fix highlight on action messages: skip the nick at beginning to prevent highlight on it (bug #40516)\n  * core: fix bind of keys in cursor/mouse context when key starts with \"@\" (remove the warning about unsafe key)\n  * core: fix truncated prefix when filters are toggled (bug #40204)\n  * api: fix read of arrays in hdata functions hdata_<type> (bug #40354)\n  * aspell: fix detection of nicks with non-alphanumeric chars\n  * guile: disable guile gmp allocator (fix crash on unload of relay plugin) (bug #40628)\n  * irc: clear the GnuTLS session in all cases after SSL connection error\n  * irc: do not display names by default when joining a channel (task #13045)\n  * irc: display PONG answer when resulting from manual /ping command\n  * irc: fix time parsed in tag of messages on Cygwin\n  * irc: use statusmsg from message 005 to check prefix char in status notices/messages\n  * irc: remove display of channel in channel notices, display \"PvNotice\" for channel welcome notices\n  * irc: fix ignore on a host without nick\n  * irc: use color code 0x1F (`ctrl-_`) for underlined text in input line (same code as messages) (bug #40756)\n  * irc: use color code 0x16 (`ctrl-v`) for reverse video in messages\n  * irc: use option irc.network.colors_send instead of irc.network.colors_receive when displaying messages sent by commands /away, /me, /msg, /notice, /query\n  * irc: fix memory leak when checking the value of ssl_priorities option in servers\n  * irc: fix memory leak when a channel is deleted\n  * irc: fix groups in channel nicklist when reconnecting to a server that supports more nick prefixes than the previously connected server\n  * irc: fix auto-switch to channel buffer when doing /join channel (without \"#\")\n  * logger: fix memory leaks in backlog\n  * logger: replace backslashs in name by logger replacement char under Cygwin (bug #41207)\n  * lua: fix crash on calls to callbacks during load of script\n  * python: fix load of scripts with Python >= 3.3\n  * relay: fix memory leak on unload of relay plugin\n  * ruby: fix ruby init with Ruby >= 2.0 (bug #41115)\n  * scripts: fix script interpreter used after register during load of script in python/perl/ruby/lua/guile plugins (bug #41345)\n  * xfer: use same infolist for hook and signals (patch #7974)\n\nDocumentation::\n\n  * add French developer's guide and relay protocol\n  * add Japanese plugin API reference and developer's guide\n  * add Polish man page and user's guide\n\nBuild::\n\n  * core: fix installation of weechat-plugin.h with autotools (patch #8305)\n  * core: fix compilation on Android (bug #41420, patch #8301, bug #41434)\n  * lua: fix detection of Lua 5.2 in autotools (patch #8270)\n  * ruby: add detection and fix compilation with Ruby 2.0 (patch #8209)\n\n[[v0.4.2]]\n== Version 0.4.2 (2013-10-06)\n\nNew features::\n\n  * core: display day change message dynamically (do not store it as a line in buffer), split option weechat.look.day_change_time_format into two options weechat.look.day_change_message_{1date|2dates}, new option weechat.color.chat_day_change (task #12775)\n  * core: add syntax \"@buffer:item\" in bar items to force the buffer used when displaying the bar item (task #12717)\n  * core: add search of regular expression in buffer, don't reset search type on a new search, select where to search (messages/prefixes), add keys in search context: kbd:[Alt+c] (case (in)sensitive search), kbd:[Tab] (search in messages/prefixes)\n  * core: add text emphasis in messages when searching text in buffer, new options: weechat.look.emphasized_attributes, weechat.color.emphasized, weechat.color.emphasized_bg\n  * core: add secured data (encryption of passwords or private data): add new command /secure and new file sec.conf (task #7395)\n  * core: rename binary and man page from \"weechat-curses\" to \"weechat\" (task #11027)\n  * core: add option \"-o\" in command /color\n  * core: add option \"scroll_beyond_end\" for command /window (task #6745)\n  * core: add options weechat.look.hotlist_prefix and weechat.look.hotlist_suffix (task #12730)\n  * core: add option weechat.look.key_bind_safe\n  * core: add option weechat.network.proxy_curl (task #12651)\n  * core: add \"proxy\" infolist and hdata\n  * core: add infolist \"layout\" and hdata \"layout\", \"layout_buffer\" and \"layout_window\"\n  * core: reduce memory used by using shared strings for nicklist and lines in buffers\n  * core: change color format for options weechat.look.buffer_time_format and weechat.look.prefix_{action|error|join|network|quit} from `${xxx}` to `${color:xxx}`\n  * core: optimize the removal of lines in buffers (a lot faster to clear/close buffers with lot of lines)\n  * core: set options weechat.look.color_inactive_{buffer|window} to \"on\" by default\n  * api: return hashtable item pointer in functions hashtable_set and hashtable_set_with_size\n  * api: add \"callback_free_key\" in hashtable\n  * api: add support of colors with format `${color:xxx}` in function string_eval_expression and command /eval\n  * api: add argument \"options\" in function string_eval_expression, add option \"-c\" in command /eval (to evaluate a condition)\n  * api: add new function strlen_screen\n  * aspell: rename option aspell.look.color to aspell.color.misspelled, add option aspell.color.suggestions\n  * aspell: add support of enchant library (patch #6858)\n  * irc: add option irc.look.notice_welcome_redirect to automatically redirect channel welcome notices to the channel buffer\n  * irc: add support of wildcards in commands (de)op/halfop/voice, split IRC message sent if number of nicks is greater than server MODES (from message 005) (task #9221)\n  * irc: add option irc.look.pv_tags\n  * irc: add support of special variables $nick/$channel/$server in commands /allchan and /allserv\n  * irc: add option irc.look.nick_color_hash: hash algorithm to find nick color (patch #8062)\n  * logger: add option \"flush\" in command /logger\n  * plugins: remove the demo plugin\n  * relay: add command \"ping\" in weechat protocol (task #12689)\n  * rmodifier: add option \"missing\" in command /rmodifier\n  * script: add info about things defined by script (like commands, options, ...) in the detailed view of script (/script show)\n  * scripts: add hdata with script callback\n  * xfer: add option xfer.look.pv_tags\n\nBug fixes::\n\n  * core: clear whole line before displaying content instead of clearing after the end of content (bug #40115)\n  * core: fix time displayed in status bar (it was one second late) (bug #40097)\n  * core: fix memory leak on unhook of a print hook (if using tags)\n  * core: fix computation of columns in output of /help (take care about size of time/buffer/prefix)\n  * core: fix random crash on \"/buffer close\" with a buffer number (or a range of buffers)\n  * core: fix priority of logical operators in evaluation of expression (AND takes precedence over the OR) and first evaluate sub-expressions between parentheses\n  * core: remove gap after read marker line when there is no bar on the right (bug #39548)\n  * core: use \"/dev/null\" for stdin in hook_process instead of closing stdin (bug #39538)\n  * core: fix char displayed at the intersection of three windows (bug #39331)\n  * core: fix crash in evaluation of expression when reading a string in hdata with a NULL value (bug #39419)\n  * core: fix display bugs with some UTF-8 chars that truncates messages displayed (for example U+26C4) (bug #39201)\n  * core: remove extra space after empty prefix (when prefix for action, error, join, network or quit is set to empty string) (bug #39218)\n  * core: fix random crash on mouse actions (bug #39094)\n  * core: fix line alignment when option weechat.look.buffer_time_format is set to empty string\n  * api: change type of hashtable key hash to unsigned long\n  * api: use pointer for infolist \"hook\" to return only one hook\n  * aspell: fix detection of word start/end when there are apostrophes or minus chars before/after word\n  * irc: fix reconnection to server using IPv6 (bug #38819, bug #40166)\n  * irc: replace default prefix modes \"qaohvu\" by the standard ones \"ov\" when PREFIX is not sent by server (bug #39802)\n  * irc: use 6697 as default port for SSL servers created with URL \"ircs://\" (bug #39621)\n  * irc: display number of ops/halfops/voices on channel join only for supported modes on server (bug #39582)\n  * irc: fix self nick color in server messages after nick is changed with /nick (bug #39415)\n  * irc: fix error message on /invite without arguments (bug #39272)\n  * irc: fix multiple nicks in command /query (separated by commas): open one buffer per nick\n  * lua: fix interpreter used in API functions (bug #39470)\n  * relay: fix decoding of websocket frames when there are multiple frames in a single message received (only the first one was decoded)\n  * relay: fix binding to an IP address (bug #39119)\n\nDocumentation::\n\n  * update man page and add translations (in French, German, Italian, and Japanese)\n\nBuild::\n\n  * core: add CA_FILE option in CMake and configure to setup default value of option weechat.network.gnutls_ca_file (default is \"/etc/ssl/certs/ca-certificates.crt\") (task #12725)\n  * core: disable build of doc by default, add CMake option ENABLE_MAN to compile man page (off by default)\n  * xfer: fix compilation on OpenBSD (bug #39071)\n\n[[v0.4.1]]\n== Version 0.4.1 (2013-05-20)\n\nNew features::\n\n  * core: make nick prefix/suffix dynamic (not stored in the line): move options irc.look.nick_{prefix|suffix} to weechat.look.nick_{prefix|suffix} and options irc.color.nick_{prefix|suffix} to weechat.color.chat_nick_{prefix|suffix}, add new options weechat.look.prefix_align_more_after, weechat.look.prefix_buffer_align_more_after, logger.file.nick_{prefix|suffix} (bug #37531)\n  * core: add support of multiple layouts (task #11274)\n  * core: add signals nicklist_{group|nick}_removing and hsignals nicklist_{group|nick}_{added|removing|changed}\n  * core: add count for groups, nicks, and total in nicklist\n  * core: add option \"dirs\" in command /debug\n  * core: add signal \"window_opened\" (task #12464)\n  * core: allow read of array in hdata without using index\n  * api: add new function hdata_search\n  * api: add property \"completion_freeze\" for function buffer_set: do not stop completion when command line is updated\n  * aspell: add completion \"aspell_dicts\" (list of aspell installed dictionaries)\n  * aspell: add info \"aspell_dict\" (dictionaries used on a buffer)\n  * aspell: optimization on spellers to improve speed (save state by buffer)\n  * irc: add support of \"dh-aes\" SASL mechanism (patch #8020)\n  * irc: add support of UHNAMES (capability \"userhost-in-names\") (task #9353)\n  * irc: add tag \"irc_nick_back\" for messages displayed in private buffer when a nick is back on server (task #12576)\n  * irc: add option irc.look.display_join_message (task #10895)\n  * irc: add option irc.look.pv_buffer: automatically merge private buffers (optionally by server) (task #11924)\n  * irc: hide passwords in commands or messages sent to nickserv (/msg nickserv) with new modifiers \"irc_command_auth\" and \"irc_message_auth\", remove option irc.look.hide_nickserv_pwd, add option irc.look.nicks_hide_password (bug #38346)\n  * irc: unmask smart filtered join if nick speaks in channel some minutes after the join, new option irc.look.smart_filter_join_unmask (task #12405)\n  * irc: rename option irc.network.lag_disconnect to irc.network.lag_reconnect, value is now a number of seconds\n  * relay: add message \"_nicklist_diff\" (differences between old and current nicklist)\n  * relay: add support of multiple servers on same port for irc protocol (the client must send the server in the \"PASS\" command)\n  * relay: add WebSocket server support (RFC 6455) for irc and weechat protocols, new option relay.network.websocket_allowed_origins\n  * relay: add options \"buffers\" and \"upgrade\" in commands sync/desync (weechat protocol)\n  * rmodifier: rename default rmodifier \"nickserv\" to \"command_auth\" (with new modifier \"irc_command_auth\"), add default rmodifier \"message_auth\" (modifier \"irc_message_auth\")\n  * script: add option script.scripts.autoload, add options \"autoload\", \"noautoload\" and \"toggleautoload\" for command /script, add action \"A\" (kbd:[Alt+a]) on script buffer (toggle autoload) (task #12393)\n  * xfer: add option xfer.file.auto_accept_nicks (patch #7962)\n\nBug fixes::\n\n  * core: fix display of long lines without time (message beginning with two tabs)\n  * core: reset scroll in window before zooming on a merged buffer (bug #38207)\n  * core: fix refresh of item \"completion\": clear it after any action that is changing content of command line and after switch of buffer (bug #38214)\n  * core: fix structures before buffer data when a buffer is closed\n  * core: fix refresh of line after changes with hdata_update (update flag \"displayed\" according to filters)\n  * core: fix hidden lines for messages without date when option weechat.history.max_buffer_lines_minutes is set (bug #38197)\n  * core: use default hash/comparison callback for keys of type integer/pointer/time in hashtable\n  * api: do not display a warning by default when loading a script with a license different from GPL\n  * api: fix connection to servers with hook_connect on macOS (bug #38496)\n  * api: fix bug in function string_match when mask begins and ends with \"*\"\n  * api: allow hashtable with keys that are not strings in function hashtable_add_to_infolist\n  * api: fix function string_mask_to_regex: escape all special chars used in regex (bug #38398)\n  * guile: fix crash in function hdata_move\n  * guile: fix arguments given to callbacks (separate arguments instead of one list with arguments inside), Guile >= 2.0 is now required (bug #38350)\n  * guile: fix crash on calls to callbacks during load of script (bug #38343)\n  * irc: fix name of server buffer after /server rename (set name \"server.name\" instead of \"name\")\n  * irc: fix uncontrolled format string when sending unknown irc commands (if option irc.network.send_unknown_commands is on)\n  * irc: fix uncontrolled format string when sending ison command (for nicks monitored by /notify)\n  * irc: fix refresh of nick in input bar when joining a new channel with op status (bug #38969)\n  * irc: fix display of CTCP messages that contain bold attribute (bug #38895)\n  * irc: fix duplicate nick completion when someone rejoins the channel with same nick but a different case (bug #38841)\n  * irc: fix crash on command \"/allchan /close\"\n  * irc: fix default completion (like nicks) in commands /msg, /notice, /query and /topic\n  * irc: fix prefix color for nick when the prefix is not in irc.color.nick_prefixes: use default color (key \"*\")\n  * irc: fix display of malformed CTCP (without closing char) (bug #38347)\n  * irc: fix memory leak in purge of hashtables with joins (it was done only for the first server in the list)\n  * irc: add color in output of /names when result is on server buffer (channel not joined) (bug #38070)\n  * lua: remove use of functions for API constants\n  * lua: fix crash on stack overflow: call lua_pop for values returned by lua functions (bug #38510)\n  * perl: simplify code to load scripts\n  * python: fix crash when loading scripts with Python 3.x (patch #8044)\n  * relay: fix uncontrolled format string in redirection of irc commands\n  * relay: rename compression \"gzip\" to \"zlib\" (compression is zlib, not gzip)\n  * relay: fix commands sync/desync in weechat protocol (bug #38215)\n  * ruby: fix crash in function hdata_move\n  * ruby: fix crash with Ruby 2.0: use one array for the last 6 arguments of function config_new_option (bug #31050)\n  * script: create \"script\" directory on each action, just in case it has been removed (bug #38472)\n  * scripts: create directories (language and language/autoload) on each action (install/remove/autoload), just in case they have been removed (bug #38473)\n  * scripts: do not allow empty script name in function register\n  * xfer: fix freeze of DCC file received: use non-blocking socket after connection to sender and ensure the ACK is properly sent (bug #38340)\n\nBuild::\n\n  * core: install icon file (patch #7972)\n  * core: fix detection of iconv with CMake on macOS (bug #38321)\n  * guile: fix compilation with Guile 2.0\n  * python: fix detection of Python on Ubuntu Raring\n  * script: fix compilation on GNU/Hurd (patch #7977)\n\n[[v0.4.0]]\n== Version 0.4.0 (2013-01-20)\n\nNew features::\n\n  * core: add buffer pointer in arguments for signals \"input_search\", \"input_text_changed\" and \"input_text_cursor_moved\"\n  * core: add option \"diff\" in command /set (list options with changed value)\n  * core: add color support in options weechat.look.prefix_{action|error|join|network|quit} (task #9555)\n  * core: display default values for changed config options in output of /set\n  * core: add command /eval, use expression in conditions for bars\n  * core: add option \"-quit\" in command /upgrade (save session and quit without restarting WeeChat, for delayed restoration)\n  * core: add incomplete mouse events \"event-down\" and \"event-drag\" (task #11840)\n  * api: allow return code WEECHAT_RC_OK_EAT in callbacks of hook_signal and hook_hsignal (stop sending the signal immediately)\n  * api: allow creation of structure with hdata_update (allowed for hdata \"history\")\n  * api: use hashtable \"options\" for command arguments in function hook_process_hashtable (optional, default is a split of string with command)\n  * api: add new function string_eval_expression\n  * api: connect with IPv6 by default in hook_connect (with fallback to IPv4), shuffle list of hosts for a same address, add argument \"retry\" for hook_connect, move \"sock\" from hook_connect arguments to callback of hook_connect (task #11205)\n  * aspell: add signal \"aspell_suggest\" (sent when new suggestions are displayed)\n  * aspell: add bar items \"aspell_dict\" (dictionary used on current buffer) and \"aspell_suggest\" (suggestions for misspelled word at cursor), add option aspell.check.suggestions (task #12061)\n  * irc: add tags \"irc_nick1_xxx\" and \"irc_nick2_yyy\" in message displayed for command \"NICK\"\n  * irc: return git version in CTCP VERSION and FINGER by default, add \"$git\" and \"$versiongit\" in format of CTCP replies\n  * irc: read local variable \"autorejoin\" in buffer to override server option \"autorejoin\" (task #12256)\n  * irc: add option \"-auto\" in command /connect (task #9340)\n  * irc: add support of \"server-time\" capability (task #12255)\n  * irc: add support of tags in messages\n  * irc: add command /quiet, fix display of messages 728/729 (quiet list, end of quiet list) (task #12278)\n  * irc: add option irc.network.alternate_nick to disable dynamic nick generation when all nicks are already in use on server (task #12281)\n  * irc: add option irc.network.whois_double_nick to double nick in command /whois\n  * irc: add option \"-noswitch\" in command /join (task #12275)\n  * perl: display script filename in error messages\n  * relay: add backlog and server capability \"server-time\" for irc protocol, add new options relay.irc.backlog_max_minutes, relay.irc.backlog_max_number, relay.irc.backlog_since_last_disconnect, relay.irc.backlog_tags, relay.irc.backlog_time_format (task #12076)\n  * relay: add support of IPv6, new option relay.network.ipv6, add support of \"ipv4.\" and/or \"ipv6.\" before protocol name, to force IPv4/IPv6 (task #12270)\n  * xfer: display remote IP address for DCC chat/file (task #12289)\n\nBug fixes::\n\n  * core: fix infinite loop when a regex gives an empty match (bug #38112)\n  * core: fix click in item \"buffer_nicklist\" when nicklist is a root bar (bug #38080)\n  * core: fix line returned when clicking on a bar (according to position and filling) (bug #38069)\n  * core: fix refresh of bars when applying layout (bug #37944, bug #37952)\n  * core: fix scroll to bottom of window (default key: kbd:[Alt+End]) when line displayed is bigger than chat area\n  * core: fix scroll in buffer after enabling/disabling some filters (if scroll is on a hidden line) (bug #37885)\n  * core: fix memory leak in case of error when building content of bar item for display\n  * core: fix detection of command in input: a single command char is considered as a command (API function string_input_for_buffer)\n  * core: search for a fallback template when a no template is matching command arguments\n  * core: fix refresh of windows after split (fix bug with horizontal separator between windows) (bug #37874)\n  * core: fix stuck mouse (bug #36533)\n  * core: fix default mouse buttons actions for script buffer (focus the window before executing action)\n  * core: fix scroll of one page down when weechat.look.scroll_page_percent is less than 100 (bug #37875)\n  * core: disable paste detection and confirmation if bar item \"input_paste\" is not used in a visible bar (task #12327)\n  * core: use high priority (50000) for commands /command and /input so that an alias will not take precedence over these commands (bug #36353)\n  * core: execute command with higher priority when many commands with same name are found with different priorities\n  * core: fix display of combining chars (bug #37775)\n  * core: fix display of zoomed/merged buffer (with number >= 2) after switching to it (bug #37593)\n  * core: fix display problem when option weechat.look.prefix_same_nick is set (problem with nick displayed in first line of screen) (bug #37556)\n  * core: fix wrapping of words with wide chars (the break was made before the correct position)\n  * api: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) (bug #37764)\n  * alias: give higher priority to aliases (2000) so that they take precedence over an existing command\n  * aspell: ignore self and remote nicks in private buffers\n  * aspell: fix creation of spellers when number of dictionaries is different between two buffers\n  * guile: fix bad conversion of shared strings (replace calls to scm_i_string_chars by scm_to_locale_string) (bug #38067)\n  * irc: fix display of actions (/me) when they are received from a relay client (in channel and private buffers) (bug #38027)\n  * irc: fix memory leak when updating modes of channel\n  * irc: fix crash on /upgrade (free channels before server data when a server is destroyed) (bug #37736)\n  * irc: fix crash when decoding IRC colors in strings (bug #37704)\n  * irc: fix refresh of bar item \"away\" after command /away or /disconnect\n  * irc: send whois on self nick when /whois is done without argument on a channel (task #12273)\n  * irc: remove local variable \"away\" in server/channels buffers after server disconnection (bug #37582)\n  * irc: fix crash when message 352 has too few arguments (bug #37513)\n  * irc: remove unneeded server disconnect when server buffer is closed and server is already disconnected\n  * perl: fix calls to callbacks during load of script when multiplicity is disabled (bug #38044)\n  * relay: fix duplicated messages sent to irc clients (when messages are redirected) (bug #37870)\n  * relay: fix memory leak when adding hdata to a message (weechat protocol)\n  * relay: fix crash after /upgrade when a client is connected\n  * relay: add missing \"ssl.\" in output of /relay listrelay\n  * script: fix scroll with mouse when window with script buffer is not the current window (do not force a switch to script buffer in current window)\n  * xfer: fix memory leak when refreshing xfer buffer\n  * xfer: add missing tags in DCC chat messages: nick_xxx, prefix_nick_ccc, logN\n  * xfer: limit bytes received to file size (for DCC file received), fix crash when displaying a xfer file with pos greater than size\n\nBuild::\n\n  * core: add git version in build, display it in \"weechat-curses --help\" and /version\n  * core: stop CMake if gcrypt lib is not found (bug #37671)\n  * guile: fix detection of Guile in configure\n  * script: fix compilation on macOS\n\n[[v0.3.9.2]]\n== Version 0.3.9.2 (2012-11-18)\n\nBug fixes::\n\n  * core: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) (bug #37764, CVE-2012-5534)\n\n[[v0.3.9.1]]\n== Version 0.3.9.1 (2012-11-09)\n\nBug fixes::\n\n  * irc: fix crash when decoding IRC colors in strings (bug #37704, CVE-2012-5854)\n\n[[v0.3.9]]\n== Version 0.3.9 (2012-09-29)\n\nNew features::\n\n  * core: add signals for plugins loaded/unloaded\n  * core: add default key kbd:[Alt+x] (zoom on merged buffer) (task #11029)\n  * core: add mouse bindings kbd:[Ctrl] + wheel up/down to scroll horizontally buffers with free content\n  * core: add option weechat.startup.sys_rlimit to set system resource limits for WeeChat process\n  * core: add option \"swap\" in command /buffer (task #11373)\n  * core: add hdata \"hotlist\"\n  * core: add support of arrays in hdata variables\n  * core: add command line option \"-r\" (or \"--run-command\") to run command(s) after startup of WeeChat\n  * core: add function hook_set in plugin API, add \"subplugin\" in hooks (set by script plugins), display subplugin in /help on commands (task #12049)\n  * core: add option weechat.look.jump_smart_back_to_buffer (jump back to initial buffer after reaching end of hotlist, on by default, which is old behavior)\n  * core: add default key kbd:[Alt+s] (toggle aspell)\n  * core: add callback \"nickcmp\" in buffers\n  * core: add horizontal separator between windows, new options weechat.look.window_separator_{horizontal|vertical}\n  * core: add options weechat.look.color_nick_offline and weechat.color.chat_nick_offline{_highlight|_highlight_bg} to use different color for offline nicks in prefix (task #11109)\n  * api: allow update for some variables of hdata, add new functions hdata_update and hdata_set\n  * api: add info \"locale\" for info_get (locale used to translate messages)\n  * api: add new function util_version_number\n  * aspell: add option aspell.check.enabled, add options enable/disable/toggle for command /aspell (rename options enable/disable/dictlist to setdict/deldict/listdict), display aspell status with /aspell (task #11988)\n  * irc: generate alternate nicks dynamically when all nicks are already in use (task #12209)\n  * irc: add bar item \"buffer_modes\", remove option irc.look.item_channel_modes (task #12022)\n  * irc: add option irc.look.ctcp_time_format to customize reply to CTCP TIME (task #12150)\n  * irc: move options from core to irc plugin: weechat.look.nickmode to irc.look.nick_mode (new type: integer with values: none/prefix/action/both) and weechat.look.nickmode_empty to irc.look.nick_mode_empty\n  * logger: add tags in backlog lines displayed when opening buffer\n  * logger: add messages \"Day changed to\" in backlog (task #12187)\n  * relay: add support of SSL (for irc and weechat protocols), new option relay.network.ssl_cert_key (task #12044)\n  * relay: add option relay.color.client\n  * relay: add object type \"arr\" (array) in WeeChat protocol\n  * script: new plugin \"script\" (script manager, replacing scripts weeget.py and script.pl)\n  * scripts: add signals for scripts loaded/unloaded/installed/removed\n  * scripts: add hdata with list of scripts for each language\n\nBug fixes::\n\n  * core: fix display bug when end of a line is displayed on top of chat (last line truncated and MORE(0) in status bar) (bug #37203)\n  * core: fix IP address returned by hook_connect (return IP really used, not first IP for hostname)\n  * core: display spaces at the end of messages in chat area (bug #37024)\n  * core: fix infinite loop in display when chat area has width of 1 with a bar displayed on the right (nicklist by default) (bug #37089)\n  * core: fix display of \"bar more down\" char when text is truncated by size_max in bars with vertical filling (bug #37054)\n  * core: fix color of long lines (displayed on more than one line on screen) under FreeBSD (bug #36999)\n  * core: return error string to callback of hook_connect if getaddrinfo fails in child process\n  * core: scroll to bottom of window after reaching first or last highlight with keys kbd:[Alt+p] / kbd:[Alt+n]\n  * core: fix refresh of bar items when switching window\n  * core: fix refresh of bar items \"buffer_filter\" and \"scroll\" in root bars (bug #36816)\n  * core: allow again names beginning with \"#\" for bars, proxies and filters\n  * core: escape special chars (`#[\\`) in configuration files for name of options (bug #36584)\n  * aspell: add missing dictionaries (ast/grc/hus/kn/ky)\n  * charset: do not allow \"UTF-8\" in charset decoding options (useless because UTF-8 is the internal WeeChat charset)\n  * fifo: ignore read failing with error EAGAIN (bug #37019)\n  * guile: fix crash when unloading a script without pointer to interpreter\n  * irc: fix rejoin of channels with a key, ignore value \"*\" sent by server for key (bug #24131)\n  * irc: fix SASL mechanism \"external\" (bug #37274)\n  * irc: fix parsing of message 346 when no nick/time are given (bug #37266)\n  * irc: switch to next address after a timeout when connecting to server (bug #37216)\n  * irc: fix bug when changing server option \"addresses\" with less addresses (bug #37215)\n  * irc: add network prefix in irc (dis)connection messages\n  * irc: fix split of received IRC message: keep spaces at the end of message\n  * irc: fix bug with prefix chars which are in chanmodes with a type different from \"B\" (bug #36996)\n  * irc: fix format of message \"USER\" (according to RFC 2812) (bug #36825)\n  * irc: fix parsing of user modes (ignore everything after first space) (bug #36756, bug #31572)\n  * irc: fix freeze when reading on socket with SSL enabled (use non-blocking sockets) (bug #35097)\n  * irc: allow again names beginning with \"#\" for servers\n  * lua: fix crash when unloading a script without pointer to interpreter\n  * python: fix crash when unloading a script without pointer to interpreter\n  * relay: fix freeze when writing on relay socket (use non-blocking sockets in relay for irc and weechat protocols) (bug #36655)\n  * scripts: fix deletion of configuration files when script is unloaded (bug #36977)\n  * scripts: fix function unhook_all: delete only callbacks of hooks and add missing call to unhook\n  * scripts: ignore call to register (with a warning) if script is already registered\n  * xfer: fix DCC transfer error (bug #37432)\n\nDocumentation::\n\n  * add Japanese user's guide (patch #7827), scripting guide and tester's guide\n\nBuild::\n\n  * core: move the set of CMake policy CMP0003 in directory src (so it applies to all plugins) (bug #37311)\n  * core: fix names of cache variables in configure.in (bug #36971)\n  * core: add CMake option \"MANDIR\" (bug #36776)\n  * guile: fix path of Guile include dirs in CMake build (patch #7790)\n  * lua: add support of Lua 5.2\n  * python: fix detection of Python (first try \"python2.x\" and then \"python\") (bug #36835)\n  * ruby: add detection of Ruby 1.9.3\n\n[[v0.3.8]]\n== Version 0.3.8 (2012-06-03)\n\nNew features::\n\n  * core: add option weechat.look.prefix_same_nick (hide or change prefix on messages whose nick is the same as previous message) (task #11965)\n  * core: convert tabs to spaces in text pasted (bug #25028)\n  * core: add a connection timeout for child process in hook_connect (bug #35966)\n  * core: add support of terminal \"bracketed paste mode\", new options weechat.look.paste_bracketed and weechat.look.paste_bracketed_timer_delay (task #11316)\n  * core: support lines of 16 Kb long in configuration files (instead of 1 Kb)\n  * core: convert options weechat.look.prefix_align_more and weechat.look.prefix_buffer_align_more from boolean to string (task #11197)\n  * core: follow symbolic links when writing configuration files (.conf) (task #11779)\n  * api: add list \"gui_buffer_last_displayed\" in hdata \"buffer\"\n  * irc: add option \"fakerecv\" in command /server to simulate a received IRC message (not documented, for debug only)\n  * irc: add option \"-pending\" in command /disconnect (cancel auto-reconnection on servers currently reconnecting) (task #11985)\n  * irc: add signals and tags in messages for irc notify (task #11887)\n  * irc: add support of \"external\" SASL mechanism (task #11864)\n  * irc: allow more than one nick in command /invite\n  * logger: add colors for backlog lines and end of backlog, new options: logger.color.backlog_line and logger.color.backlog_end (task #11966)\n  * relay: add signals \"upgrade\" and \"upgrade_ended\" in WeeChat protocol\n  * relay: add \"date_printed\" and \"highlight\" in signal \"_buffer_line_added\" (WeeChat protocol)\n  * rmodifier: add default rmodifier \"quote_pass\" to hide password in command \"/quote pass\" (bug #36250)\n  * rmodifier: add default rmodifier \"server\" to hide passwords in commands /server and /connect (task #11993)\n  * rmodifier: add option \"release\" in default rmodifier \"nickserv\" (used to hide passwords in command \"/msg nickserv\") (bug #35705)\n\nBug fixes::\n\n  * core: fix crash in focus hook for nicklist (bug #36271)\n  * core: fix truncated configuration files (zero-length) after system crash (bug #36383)\n  * core: fix display bugs and crashes with small windows (bug #36107)\n  * core: fix display bug with prefix when length is greater than max and prefix is ending with a wide char (bug #36032)\n  * core: fix lost scroll when switching to a buffer with a pending search\n  * core: fix display of wide chars on last column of chat area (patch #7733)\n  * api: display warning in scripts when invalid pointers (malformed strings) are given to plugin API functions (warning displayed if debug for plugin is >= 1)\n  * scripts: fix type of argument \"rc\" in callback of hook_process (from string to integer)\n  * guile: fix crash on ARM when loading guile plugin (bug #36479)\n  * guile: add missing function hook_process_hashtable in API\n  * irc: update channel modes by using chanmodes from message 005 (do not send extra command \"MODE\" to server), fix parsing of modes (bug #36215)\n  * irc: hide everything after \"identify\" or \"register\" in messages to nickserv when option irc.look.hide_nickserv_pwd is on (bug #36362)\n  * irc: set user modes only if target nick is self nick in message 221 (patch #7754)\n  * irc: force the clear of nicklist when joining a channel (nicklist was not sync after znc reconnection) (bug #36008)\n  * irc: do not send command \"MODE #channel\" on manual /names (do it only when names are received on join of channel) (bug #35930)\n  * irc: do not allow the creation of two servers with same name but different case (fix error when writing file irc.conf) (bug #35840)\n  * irc: update away flag for nicks on manual /who\n  * irc: display privmsg messages to \"@#channel\" and \"+#channel\" in channel buffer (bug #35331)\n  * irc: fix redirection of message when message is queued for sending on server\n  * irc: check notify immediately when adding a nick to notify list, improve first notify message for a nick (bug #35731)\n  * irc: fix display of color in hostname (join/part/quit messages)\n  * irc: compute hash to find nick color for nick in server message when nick is not in nicklist\n  * irc: close server buffer when server is deleted\n  * irc: add search for lower case nicks in option irc.look.nick_color_force\n  * logger: fix charset of lines displayed in backlog when terminal charset is different from UTF-8 (bug #36379)\n  * perl: fix crash on quit on macOS\n  * relay: keep spaces in beginning of \"input\" received from client (WeeChat protocol)\n  * relay: fix crash on /upgrade when client is connected using WeeChat protocol\n  * relay: redirect some irc messages from clients to hide output (messages: mode, ison, list, names, topic, who, whois, whowas, time, userhost) (bug #33516)\n  * tcl: add missing function hdata_char in API\n  * tcl: fix pointer sent to function hook_signal_send when type of data is a pointer\n\nDocumentation::\n\n  * add Japanese FAQ (patch #7781)\n\nBuild::\n\n  * perl: fix compilation on macOS (bug #30701)\n\n[[v0.3.7]]\n== Version 0.3.7 (2012-02-26)\n\nNew features::\n\n  * core: add support of flags in regular expressions and highlight options\n  * core: add type \"hashtable\" for hdata\n  * core: add signals \"buffer_line_added\" and \"window_switch\"\n  * core: add default keys kbd:[Ctrl+Left] / kbd:[Ctrl+Right] (`meta2-1;5D` / `meta2-1;5C`) for gnome-terminal\n  * core: add option \"hooks\" in command /debug\n  * core: add option weechat.look.scroll_bottom_after_switch (if enabled, restore old behavior before fix of bug #25555 in version 0.3.5)\n  * core: add new option weechat.completion.base_word_until_cursor: allow completion in middle of words (enabled by default) (task #9771)\n  * core: add option \"jump_last_buffer_displayed\" in command /input (key: kbd:[Alt+/]) (task #11553)\n  * core: add option weechat.history.max_buffer_lines_minutes: maximum number of minutes in history per buffer (task #10900), rename option weechat.history.max_lines to weechat.history.max_buffer_lines_number\n  * core: add optional arguments for command /plugin load/reload/autoload\n  * core: use extended regex in filters (task #9497, patch #7616)\n  * api: add modifier \"input_text_for_buffer\" (bug #35317)\n  * api: add support of URL in hook_process / hook_process_hashtable (task #10247)\n  * api: add new functions strcasecmp_range, strncasecmp_range, string_regex_flags, string_regcomp, hashtable_map_string, hook_process_hashtable, hdata_check_pointer, hdata_char, hdata_hashtable and nicklist_get_next_item\n  * alias: add default alias /umode => /mode $nick\n  * irc: add option \"capabilities\" in servers to enable client capabilities on connection\n  * irc: add signal \"irc_server_opened\"\n  * irc: add signal \"xxx,irc_out1_yyy\" and modifier \"irc_out1_xxx\" (outgoing message before automatic split to fit in 512 bytes)\n  * irc: add alias \"ctcp\" for target buffer of CTCP messages\n  * irc: add options irc.look.highlight_{server|channel|pv} to customize or disable default nick highlight (task #11128)\n  * irc: use redirection to get channel modes after update of modes on channel, display output of /mode #channel, allow /mode without argument (display modes of current channel or user modes on server buffer)\n  * irc: add optional server in info \"irc_is_channel\" (before channel name) (bug #35124), add optional server in info_hashtable \"irc_message_parse\"\n  * irc: add case insensitive string comparison based on casemapping of server (rfc1459, strict-rfc1459, ascii) (bug #34239)\n  * irc: add option irc.color.mirc_remap to remap mirc colors in messages to WeeChat colors\n  * irc: allow URL \"irc://\" in command /connect\n  * irc: use extended regex in commands /ignore and /list\n  * guile: new script plugin for scheme (task #7289)\n  * python: add support of Python 3.x (task #11704)\n  * relay: add WeeChat protocol for remote GUI\n  * xfer: display origin of xfer in core and xfer buffers (task #10956)\n\nInternationalization::\n\n  * add Japanese translations\n\nBug fixes::\n\n  * core: fix expand of path `~` to home of user in function string_expand_home (`~/xxx` was OK, but not `~`)\n  * core: fix memory leak when closing buffer\n  * core: fix memory leak in function util_search_full_lib_name\n  * core: automatically add newline char after last pasted line (when pasting many lines with confirmation) (task #10703)\n  * core: fix bug with layout: assign layout number in buffers when doing /layout save\n  * core: do not auto add space after nick completer if option weechat.completion.nick_add_space is off\n  * core: fix signal \"buffer_switch\": send it only once when switching buffer (bug #31158)\n  * core: move option \"scroll_unread\" from command /input to /window\n  * core: save current mouse state in option weechat.look.mouse (set option when mouse state is changed with command /mouse)\n  * core: apply filters after full reload of configuration files (with /reload) (bug #31182)\n  * core: allow list for option weechat.plugin.extension (makes weechat.conf portable across Un*x and Windows) (task #11479)\n  * core: display error in command /buffer if arguments are wrong (bug #34180)\n  * core: fix help on plugin option when config_set_desc_plugin is called to set help on newly created option\n  * core: enable background process under Cygwin to connect to servers, fix reconnection problem (bug #34626)\n  * aspell: fix URL detection (do not check spelling of URLs) (bug #34040)\n  * irc: fix memory leak in SASL/blowfish authentication\n  * irc: fix memory leak when a server is deleted\n  * irc: fix self-highlight when using /me with an IRC bouncer like znc (bug #35123)\n  * irc: use low priority for MODE sent automatically by WeeChat (when joining channel)\n  * irc: do not use option irc.look.nick_color_stop_chars for forced nick colors (bug #33480)\n  * irc: reset read marker of current buffer on manual /join\n  * irc: fix crash when signon time in message 317 (whois, idle) is invalid (too large) (bug #34905)\n  * irc: do not delete servers added in irc.conf on /reload (bug #34872)\n  * irc: remove autorejoin on channels when disconnected from server (bug #32207)\n  * irc: display messages kick/kill/mode/topic even if nick is ignored (bug #34853)\n  * irc: display channel voice notices received in channel buffer (bug #34762), display channel/op notices sent in channel buffer\n  * irc: auto-connect to servers created with \"irc://\" on command line but not other servers if \"-a\" (\"--no-connect\") is given\n  * perl: increment count of hash returned by API (fix crash when script tries to read hash without making a copy)\n  * relay: do not create relay if there is a problem with socket creation (bug #35345)\n  * ruby: fix crash when reloading ruby plugin (bug #34474)\n\nDocumentation::\n\n  * add developer's guide (task #5416)\n\nBuild::\n\n  * core: add library \"pthread\" in CMake file for link on OpenBSD\n  * core: add WEECHAT_HOME option in CMake and configure to setup default WeeChat home (default is \"~/.weechat\") (task #11266)\n  * core: fix compilation under OpenBSD 5.0 (lib utf8 not needed any more) (bug #34727)\n  * core: fix compilation error with \"pid_t\" on macOS (bug #34639)\n\n[[v0.3.6]]\n== Version 0.3.6 (2011-10-22)\n\nNew features::\n\n  * core: add color attribute \"|\" (keep attributes) and value \"resetcolor\" for function color in plugin API (used by irc plugin to keep bold/reverse/underlined in message when changing color) (bug #34550)\n  * core: add new option weechat.look.color_basic_force_bold, off by default: bold is used only if terminal has less than 16 colors (patch #7621)\n  * core: add default key kbd:[F5] (`meta2-[E`) for Linux console\n  * core: add \"inactive\" colors for inactive windows and lines in merged buffers, new options: weechat.look.color_inactive_window, weechat.look.color_inactive_buffer, weechat.look.color_inactive_message, weechat.look.color_inactive_prefix, weechat.look.color_inactive_prefix_buffer, weechat.look.color_inactive_time, weechat.color.chat_inactive_line, weechat.color.chat_inactive_window, weechat.color.chat_prefix_buffer_inactive_line\n  * core: do automatic zoom on current window when terminal becomes too small for windows\n  * core: add new options weechat.look.bar_more_left/right/up/down\n  * core: add new option weechat.look.item_buffer_filter\n  * core: allow name of buffer for command /buffer clear (task #11269)\n  * core: add new command /repeat (execute a command several times)\n  * core: save and restore layout for buffers and windows on /upgrade\n  * core: add option \"-all\" in command \"/buffer unmerge\"\n  * core: add number in windows (add optional argument \"-window\" so some actions for command /window)\n  * core: allow buffer name in /buffer close\n  * core: add support of mouse: new command /mouse, new key context \"mouse\", new options weechat.look.mouse and weechat.look.mouse_timer_delay (task #5435)\n  * core: add command /cursor (free movement of cursor on screen), with key context \"cursor\"\n  * core: automatic scroll direction in /bar scroll (x/y is now optional)\n  * core: add optional delay for key grab (commands /input grab_key and /input grab_key_command, default is 500 milliseconds)\n  * core: allow plugin name in command \"/buffer name\"\n  * core: add context \"search\" for keys (to define keys used during search in buffer with kbd:[Ctrl+r])\n  * core: add new option weechat.look.separator_vertical, rename option weechat.look.hline_char to weechat.look.separator_horizontal\n  * core: add local variable \"highlight_regex\" in buffers\n  * core: add \"hdata\" (direct access to WeeChat/plugin data)\n  * core: add option weechat.look.eat_newline_glitch (do not add new line at end of each line displayed)\n  * core: add options \"infolists\", \"hdata\" and \"tags\" for command /debug\n  * core: add horizontal scrolling for buffers with free content (command /window scroll_horiz) (task #11112)\n  * core: change default value of option weechat.network.gnutls_ca_file to \"/etc/ssl/certs/ca-certificates.crt\"\n  * api: add info \"cursor_mode\"\n  * api: add new functions key_bind, key_unbind, hook_focus, hdata_new, hdata_new_var, hdata_new_list, hdata_get, hdata_get_var_offset, hdata_get_var_type, hdata_get_var_type_string, hdata_get_var_hdata, hdata_get_var, hdata_get_var_at_offset, hdata_get_list, hdata_move, hdata_integer, hdata_string, hdata_pointer, hdata_time, hdata_get_string\n  * irc: allow reason for command /disconnect\n  * irc: allow server name for commands /die and /restart\n  * irc: add new info_hashtable \"irc_message_split\"\n  * irc: add prefix \"#\" for all channels on join (if no prefix given)\n  * irc: improve split of privmsg message (keep ctcp), add split of ison, join, notice, wallops, 005, 353 (bug #29879, bug #33448, bug #33592)\n  * logger: add option logger.file.flush_delay (task #11118)\n\nBug fixes::\n\n  * core: fix freeze when calling function util_file_get_content with a directory instead of a filename\n  * core: display timeout for hook_process command only if debug for core is enabled (task #11401)\n  * core: bufferize lines displayed before core buffer is created, to display them in buffer when it is created\n  * core: fix display of background color in chat area after line feed\n  * core: fix paste detection (problem with end of lines)\n  * core: fix display of paste multi-line prompt with a root input bar (bug #34305)\n  * core: replace deprecated GnuTLS function gnutls_certificate_client_set_retrieve_function by new function gnutls_certificate_set_retrieve_function (GnuTLS >= 2.11.0)\n  * core: use dynamic buffer size for calls to vsnprintf\n  * core: fix memory leak in unhook of hook_connect\n  * core: fix memory leak in display of empty bar items\n  * core: fix input of wide UTF-8 chars under Cygwin (bug #34061)\n  * core: fix bugs with automatic layout (bug #26110), add support of merged buffers in layout (task #10893)\n  * core: fix crash when invalid UTF-8 chars are inserted in command line (bug #33471)\n  * core: stop horizontal bar scroll at the end of content (for bars with horizontal filling) (bug #27908)\n  * core: fix crash when building hashtable string with keys and values\n  * core: replace buffer name by window number in /bar scroll\n  * core: fix bugs with key \"^\" (bug #32072, bug #21381)\n  * core: fix bugs with bar windows: do not create bar windows for hidden bars\n  * core: fix completion bug when two words for completion are equal but with different case\n  * core: fix completion for command arguments when same command exists in many plugins (bug #33753)\n  * core: fix freeze when hook_fd is called with a bad file/socket (bug #33619)\n  * core: fix bug with option weechat.look.hotlist_count_max (value+1 was used)\n  * api: use arguments for infolist \"window\" to return only one window by number\n  * api: fix bug with function config_set_desc_plugin (use immediately description for option when function is called)\n  * scripts: fix crash with scripts not auto-loaded having a buffer opened after /upgrade (input/close callbacks for buffer not set properly)\n  * irc: fix display of items \"away\" and \"lag\" in root bars, refresh all irc bar items on signal \"buffer_switch\" (bug #34466)\n  * irc: fix crash on malformed irc notice received (without message after target)\n  * irc: add missing messages for whois: 223, 264, 343\n  * irc: use high priority queue for sending modes and wallchops messages\n  * irc: rename info_hashtable \"irc_parse_message\" to \"irc_message_parse\"\n  * irc: use color \"default\" for any invalid color in option weechat.color.chat_nick_colors\n  * irc: send WHO command to check away nicks only if channel was not parted\n  * irc: fix crash when malformed IRC message 352 (WHO) is received (bug #33790)\n  * irc: fix crash when command \"/buffer close\" is used in a server command to close server buffer during connection (bug #33763)\n  * irc: fix crash when /join command is executed on a non-irc buffer (bug #33742)\n  * irc: fix bug with comma in irc color code: do not strip comma if it is not followed by a digit (bug #33662)\n  * irc: switch to buffer on /join #channel if channel buffer already exists\n  * irc: set host for nick on each channel message and nick change (if not already set)\n  * irc: update host of nicks on manual /who\n  * irc: fix memory leak on plugin unload (free ignores)\n  * irc: fix memory leak in message parser (when called from other plugins like relay) (bug #33387)\n  * relay: fix bug with self nick when someone changes its nick on channel (bug #33739)\n  * relay: fix memory leak (free some parsed messages) (bug #33387)\n  * relay: fix memory leak on plugin load (free raw messages)\n  * perl: replace calls to SvPV by SvPV_nolen (patch #7436)\n\nBuild::\n\n  * core: fix compilation error (INSTALLPREFIX undeclared) on macOS and when compiling with included gettext (bug #26690)\n\n[[v0.3.5]]\n== Version 0.3.5 (2011-05-15)\n\nNew features::\n\n  * core: add buffer to hotlist if away is set on buffer (even if buffer is displayed), new option weechat.look.hotlist_add_buffer_if_away (task #10948)\n  * core: add option \"balance\" in command /window (key: kbd:[Alt+w], kbd:[Alt+b])\n  * core: add option \"swap\" in command /window (key: kbd:[Alt+w], kbd:[Alt+s]) (task #11001)\n  * core: add option weechat.look.hotlist_buffer_separator\n  * core: add messages counts in hotlist for each buffer, new options: weechat.look.hotlist_count_max, weechat.look.hotlist_count_min_msg and weechat.color.status_count_{msg|private|highlight|other}\n  * core: add tag \"notify_none\" (line with this tag will not update hotlist)\n  * core: add optional bar name in command \"/bar default\"\n  * core: add new option weechat.look.highlight_tags (force highlight on tags)\n  * core: allow list of buffers in command /filter (exclusion with prefix \"!\") (task #10880)\n  * core: allow relative size for command /window resize\n  * core: add some default keys for gnome-terminal (kbd:[Home] / kbd:[End], kbd:[Ctrl+Up] / kbd:[Ctrl+Down], kbd:[Alt+PgUp] / kbd:[Alt+PgDn])\n  * core: add option \"memory\" in command /debug\n  * core: add option weechat.look.read_marker_string\n  * core: add some chars after cursor when scrolling input line: new option weechat.look.input_cursor_scroll (bug #21391)\n  * core: add color \"gray\"\n  * core: add attributes for colors (\"*\": bold, \"!\": reverse, \"_\": underline)\n  * core: dynamically allocate color pairs (extended colors can be used without being added with command \"/color\"), auto reset of color pairs with option weechat.look.color_pairs_auto_reset\n  * core: allow background for nick colors (using \":\")\n  * core: remember scroll position for all buffers in windows (bug #25555)\n  * core: improve display of commands lists in /help (add arguments -list and -listfull) (task #10299)\n  * core: improve arguments displayed in /help of commands\n  * api: add new function config_set_desc_plugin (task #10925)\n  * api: add new functions buffer_match_list and window_search_with_buffer\n  * aspell: add section \"option\" in aspell.conf for speller options (task #11083)\n  * irc: add new options irc.color.topic_old and irc.color.topic_new\n  * irc: add option \"ssl_priorities\" in servers (task #10106, debian #624055)\n  * irc: add modifier \"irc_in2_xxx\" (called after charset decoding)\n  * irc: add new options irc.look.buffer_switch_autojoin and irc.look.buffer_switch_join (task #8542, task #10506)\n  * irc: add new option irc.look.smart_filter_nick\n  * irc: add new options irc.look.color_nicks_in_nicklist and irc.look.color_nicks_in_names\n  * irc: replace options irc.color.nick_prefix_{op|halfop|voice|user} by a single option irc.color.nick_prefixes (task #10888)\n\nBug fixes::\n\n  * core: fix scroll in windows with /window scroll (skip lines \"Day changed to\")\n  * core: recalculate buffer_max_length when buffer short name is changed (patch #7441)\n  * core: do not update hotlist during upgrade\n  * core: apply new value of option weechat.look.buffer_notify_default to all opened buffers\n  * core: prohibit names beginning with \"#\" for bars, proxies, filters and IRC servers (bug #33020)\n  * core: create default bars only if no bar is defined in configuration file\n  * core: fix bug with repeat of last completion (\"%*\"), which failed when many templates are used in completion\n  * core: reload file with certificate authorities when option weechat.network.gnutls_ca_file is changed\n  * core: rebuild bar content when items are changed in an hidden bar\n  * core: fix verification of SSL certificates by calling GnuTLS verify callback (patch #7459, CVE-2011-1428)\n  * core: fix crash when using column filling in bars with some empty items (bug #32565)\n  * core: fix terminal title when $TERM starts with \"screen\"\n  * plugins: fix memory leaks when setting buffer callbacks after /upgrade (plugins: irc, relay, xfer, scripts)\n  * aspell: fix spellers used after switch of window (bug #32811)\n  * irc: fix parsing of message 332 when no topic neither colon are found (bug with bip proxy)\n  * irc: fix nick color in private when option irc.look.nick_color_force is changed\n  * irc: fix tags for messages sent with /msg command (bug #33169)\n  * irc: fix memory leak when copying or renaming server\n  * irc: do not rejoin channels where /part has been issued before reconnection to server (bug #33029)\n  * irc: use nick color for users outside the channel\n  * irc: update short name of server buffer when server is renamed\n  * irc: fix local variable \"away\" on server buffer (set/delete it each time away is set or removed on server)\n  * irc: ignore join if nick is not self nick and if channel buffer does not exist (bug #32667)\n  * irc: fix crash when setting wrong value in option irc.server.xxx.sasl_mechanism (bug #32670)\n  * irc: fix crash when completing /part command on a non-irc buffer (bug #32402)\n  * irc: add many missing commands for target buffer (options irc.msgbuffer.xxx) (bug #32216)\n  * lua: fix crash when many scripts are executing callbacks at same time\n  * perl: fix memory leak when calling Perl functions (bug #32895)\n  * relay: fix crash on /upgrade when nick in irc client is not yet set\n  * relay: allow colon in server password received from client\n  * relay: do not send join for private buffers to client\n  * rmodifier: fix reload of file rmodifier.conf\n  * rmodifier: fix crash when adding rmodifier with invalid regex\n  * xfer: do not close chat buffers when removing xfer from list (bug #32271)\n\nBuild::\n\n  * tcl: fix Tcl detection on some 64-bits systems (bug #32915)\n\n[[v0.3.4]]\n== Version 0.3.4 (2011-01-16)\n\nNew features::\n\n  * core: add 256 colors support, new command /color, new section \"palette\" in weechat.conf (task #6834)\n  * core: add info \"weechat_upgrading\", signal \"upgrade_ended\", display duration of upgrade\n  * core: add new option weechat.look.highlight_regex and function string_has_highlight_regex in plugin API (task #10321)\n  * core: add new option weechat.look.hotlist_unique_numbers (task #10691)\n  * core: add property \"hotlist_max_level_nicks\" in buffers to set max hotlist level for some nicks in buffer\n  * core: add new options weechat.look.input_share and weechat.look.input_share_overwrite (task #9228)\n  * core: add new option weechat.look.prefix_align_min (task #10650)\n  * core: replace the 10 nick color options and number of nick colors by a single option weechat.color.chat_nick_colors (comma separated list of colors)\n  * core: add color support in option weechat.look.buffer_time_format\n  * api: add priority for hooks (task #10550)\n  * api: add new functions: list_search_pos, list_casesearch_pos, hashtable_get_string, hashtable_set_pointer, hook_info_hashtable, info_get_hashtable, hook_hsignal, hook_hsignal_send, hook_completion_get_string, nicklist_group_get_integer, nicklist_group_get_string, nicklist_group_get_pointer, nicklist_group_set, nicklist_nick_get_integer, nicklist_nick_get_string, nicklist_nick_get_pointer, nicklist_nick_set\n  * irc: add option \"-server\" in command /join (task #10837)\n  * irc: add option \"-switch\" in commands /connect and /reconnect\n  * irc: add command /notify, new options irc.look.notify_tags_ison, irc.look.notify_tags_whois, irc.network.notify_check_ison, irc.network.notify_check_whois, new option \"notify\" in servers, new infolist \"irc_notify\" (task #5441)\n  * irc: add new option irc.look.nick_color_force (task #7374)\n  * irc: add command redirection with hsignals irc_redirect_pattern and irc_redirect_command (task #6703)\n  * irc: add new options irc.color.nick_prefix and irc.color.nick_suffix\n  * irc: add new option irc.look.item_away_message\n  * irc: add tag \"nick_xxx\" in user messages\n  * irc: move options from network section to server section: connection_timeout, anti_flood_prio_high, anti_flood_prio_low, away_check, away_check_max_nicks, default_msg_part, default_msg_quit (task #10664, task #10668)\n  * irc: display old channel topic when topic is unset (task #9780)\n  * irc: add new info_hashtable \"irc_parse_message\"\n  * irc: add signal \"irc_input_send\"\n  * irc: rename options irc.look.open_channel_near_server and irc.look.open_pv_near_server to irc.look.new_channel_position and irc.look.new_pv_position with new values (none, next or near_server)\n  * rmodifier: new plugin \"rmodifier\": alter modifier strings with regular expressions (bug #26964)\n  * relay: beta version of IRC proxy, now relay plugin is compiled by default\n  * python: add info \"python2_bin\" (path to Python 2.x interpreter)\n\nBug fixes::\n\n  * core: fix scroll problem on buffers with free content and non-allocated lines (bug #32039)\n  * core: call to function hook_config when config option is created\n  * core: fix infinite loop on GnuTLS handshake when connecting with SSL to server on wrong port or server with SSL problems (bug #27487)\n  * core: fix data sent to callback of hook_process (some data was sometimes missing), use a 64KB buffer for child output and send data to callback only when buffer is full\n  * core: fix crash when displaying groups in buffer nicklist\n  * core: fix bug with message \"day changed to\", sometimes displayed several times wrongly\n  * core: fix default value of bar items options (bug #31422)\n  * core: fix bug with buffer name in \"/bar scroll\" command\n  * core: optimize incremental search in buffer: do not search any more when chars are added to a text not found (bug #31167)\n  * core: fix memory leaks when removing item in hashtable and when setting highlight words in buffer\n  * core: use similar behavior for keys bound to local or global history (bug #30759)\n  * alias: complete with alias value for second argument of command /alias\n  * irc: differentiate notices from messages in private buffer (bug #31980)\n  * irc: update nick modes with message 221 (bug #32038)\n  * irc: fix bug with charset decoding on private buffers (decoding was made for local nick instead of remote nick) (bug #31890)\n  * irc: allow command /reconnect on servers that are not currently connected (bug #30726)\n  * irc: fix topic completion in command /topic when channel topic starts with channel name\n  * irc: improve nick prefixes, all modes (even unknown) are used with PREFIX value from message 005\n  * irc: fix crash/bug when option \"addresses\" for a server is unset or changed when WeeChat is connected to this server (bug #31268)\n  * irc: switch to next server address when IRC error is received after TCP connection but before message 001 (bug #30884)\n  * irc: fix bug with hostmasks in command /ignore (bug #30716)\n  * relay: split of messages sent to clients of irc proxy\n  * scripts: add missing function infolist_reset_item_cursor in API (bug #31057)\n  * lua: fix crash when unloading script\n  * xfer: fix dcc chat buffer name (use irc server in name) (bug #29925)\n  * xfer: fix dcc file transfer for large files (more than 4 GB) on 32-bit systems (bug #31531)\n  * xfer: fix bug at end of file sent, sometimes transfer is still active although file was successfully sent\n\nBuild::\n\n  * core: add support of Python 2.7 in CMake and configure (debian #606989)\n  * ruby: fix compilation with Ruby 1.9.2 (patch #7316)\n\n[[v0.3.3]]\n== Version 0.3.3 (2010-08-07)\n\nNew features::\n\n  * core: use \"!\" to reverse a regex in a filter (to keep lines matching regex and hide other lines) (task #10032)\n  * core: add keys for undo/redo changes on command line (default: kbd:[Ctrl+pass:none[_]] and kbd:[Alt+pass:none[_]]) (task #9483)\n  * core: add new option weechat.look.align_end_of_lines\n  * core: add new option weechat.look.confirm_quit\n  * core: add new option weechat.color.status_name_ssl (task #10339)\n  * core: add hashtables with new functions in plugin API\n  * api: add function string_expand_home, fix bug with replacement of home in paths\n  * irc: add new option irc.look.nick_color_stop_chars\n  * irc: add new options irc.look.display_host_join/join_local/quit and irc.color.reason_quit\n  * irc: add command /wallchops, fix bug with display of notice for ops (task #10021, bug #29932)\n  * irc: add isupport value in servers (content of IRC message 005), with new infos: irc_server_isupport and irc_server_isupport_value\n  * irc: add message in private buffer when nick is back on server after a /quit\n  * irc: add new options irc.network.autoreconnect_delay_growing and irc.network.autoreconnect_delay_max (task #10338)\n  * irc: add missing commands 346, 347 (channel invite list)\n  * irc: improve lag indicator: two colors (counting and finished), update item even when pong has not been received, lag_min_show is now in milliseconds\n  * irc: move options weechat.color.nicklist_prefix to irc plugin\n  * logger: use tag \"no_log\" to prevent a line from being written in log file\n\nBug fixes::\n\n  * core: fix bug with scroll_unread: do not scroll to a filtered line (bug #29991)\n  * core: fix crash with hook_process (when timer is called on a deleted hook process)\n  * core: fix display bug with special chars (ascii value below 32) (bug #30602)\n  * core: fix display bug with attributes like underlined in bars (bug #29889)\n  * api: fix bug with replacement char in function string_remove_color (bug #30296)\n  * irc: fix bug in parser when no argument is received after command, no callback was called, and message was silently ignored (bug #30640)\n  * irc: fix import of certificates created by OpenSSL >= 1.0.0 (bug #30316)\n  * irc: fix display of local SSL certificate when it is sent to server (patch #7218)\n  * irc: use empty real name by default in config, instead of reading real name in /etc/passwd (bug #30111)\n  * irc: fix bug with command line option \"irc://\" (bug #29990), new format for port and channels\n  * irc: fix display of messages 330 and 333 on some servers\n  * irc: fix bug with nick prefix \"*\" (chan founder) on some IRC servers (bug #29890)\n  * irc: fix bug with option irc.network.lag_check when value is 0 (zero)\n  * irc: try other nick when connecting to server and receiving message 437 (nick unavailable)\n  * irc: set buffer local variable \"away\" when opening new channel (bug #29618)\n  * fifo: fix bug with fifo pipe when setting fifo option to \"on\"\n  * xfer: fix bug with double quotes in DCC filenames (bug #30471)\n\n[[v0.3.2]]\n== Version 0.3.2 (2010-04-18)\n\nNew features::\n\n  * core: add new options for command /key: listdefault, listdiff and reset\n  * core: add new command /mute\n  * core: add command line option \"-s\" (or \"--no-script\") to start WeeChat without loading any script\n  * core: improve plugins autoload (option weechat.plugin.autoload): allow to use \"*\" as wildcard and \"!\" to prevent a plugin from being autoloaded (task #6361)\n  * core: add option \"switch_active_buffer_previous\" in command /input (task #10141)\n  * core: add new option weechat.look.time_format to customize default format for date/time displayed (localized date by default), add function util_get_time_string in plugin API (patch #6914)\n  * core: add new option weechat.look.command_chars, add functions string_is_command_char and string_input_for_buffer in plugin and script API\n  * core: add new option weechat.look.read_marker_always_show\n  * api: add \"version_number\" for function info_get to get WeeChat version as number\n  * api: add \"irc_is_nick\" for function info_get to check if a string is a valid IRC nick name (patch #7133)\n  * api: add functions string_encode_base64 and string_decode_base64, fix bug with base64 encoding\n  * api: add functions string_match, string_has_highlight and string_mask_to_regex in script plugin API\n  * api: add description of arguments for functions hook_info and hook_infolist\n  * api: add signals \"day_changed\", \"nicklist_group_added/removed\", \"nicklist_nick_added/removed\"\n  * alias: add custom completion for aliases (task #9479)\n  * scripts: allow script commands to reload only one script\n  * irc: add SASL authentication, with PLAIN and DH-BLOWFISH mechanisms (task #8829)\n  * irc: add new option irc.look.part_closes_buffer to close buffer when /part is issued on channel (task #10295)\n  * irc: add option \"-open\" in command /connect\n  * irc: add option irc.network.connection_timeout (timeout between TCP connection to server and reception of message 001)\n  * irc: add options irc.look.smart_filter_join and irc.look.smart_filter_quit\n  * irc: add option irc.look.item_channel_modes_hide_key to hide channel key in channel modes (bug #23961)\n  * irc: add option irc.look.item_nick_prefix\n  * irc: add command /map\n  * irc: add missing commands 276, 343\n  * logger: allow date format in logger options path and mask (task #9430)\n  * xfer: add signal \"xfer_ended\" (patch #7081)\n\nBug fixes::\n\n  * core: remove unneeded space after time on each line if option weechat.look.buffer_time_format is set to empty value (bug #28751)\n  * core: use arguments for infolist \"nicklist\" to return only one nick or group\n  * core: fix bug with writing of configuration files when disk is full (bug #29331)\n  * core: fix infinite loop with /layout apply and bug when applying layout, sometimes many /layout apply were needed (bug #26110)\n  * gui: refresh screen when exiting WeeChat (to display messages printed after /quit)\n  * gui: fix bug with global history, reset pointer to last entry after each user input (bug #28754)\n  * gui: fix bug with bar background after text with background color (bug #28157)\n  * gui: fix bug with cursor when position is last char of terminal\n  * api: add missing infos in functions buffer_get_{integer|string} and in buffer infolist\n  * api: fix function color in Lua script API\n  * api: fix \"inactivity\" value when no key has been pressed since WeeChat started (bug #28930)\n  * api: return absolute path for info_get of \"weechat_dir\" (bug #27936)\n  * scripts: fix bug with callbacks when loading a script already loaded\n  * perl: fix crash when multiplicity is disabled\n  * perl: fix crash when callbacks are called during script initialization (bug #29018)\n  * perl: fix crash on /quit or unload of plugin under FreeBSD and Cygwin (bug #29467)\n  * perl: fix bug with script filename when multiplicity is disabled (bug #29530)\n  * irc: fix crash with SSL connection if option ssl_cert is set (bug #28752)\n  * irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) (bug #28741)\n  * irc: fix bug with nicks on reconnection: try all nicks in list, even if nick used was not the first in list of nicks\n  * irc: fix command /list: send channel and server name given as argument, and use separate option \"-re\" to allow a regex\n  * irc: fix PART message received on Undernet server (bug #28825)\n  * irc: fix bug with /away -all: set or unset future away for disconnected servers (bug #29022)\n  * irc: fix bug with prefix \"!\" for mode \"a\" (channel admin) (bug #29109)\n  * irc: do not send signals \"irc_in\" and \"irc_in2\" when messages are ignored, add new signals \"irc_raw_in\" and \"irc_raw_in2\"\n  * irc: apply smart filter only on channels, not private buffers (bug #28841)\n  * xfer: fix crash when purging old xfer chats (bug #28764)\n\nBuild::\n\n  * irc: fix compilation with old GnuTLS versions (bug #28723)\n\n[[v0.3.1.1]]\n== Version 0.3.1.1 (2010-01-31)\n\nBug fixes::\n\n  * irc: fix crash with SSL connection if option ssl_cert is set (bug #28752)\n  * irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) (bug #28741)\n  * xfer: fix crash when purging old xfer chats (bug #28764)\n\nBuild::\n\n  * irc: fix compilation with old GnuTLS versions (bug #28723)\n\n[[v0.3.1]]\n== Version 0.3.1 (2010-01-23)\n\nNew features::\n\n  * core: add option \"grab_key_command\" in command /input (bound by default to kbd:[Alt+k])\n  * alias: new expansions for alias arguments ($n, $-m, $n-, $n-m, $*, $~) (patch #6917)\n  * alias: allow use of wildcards for /alias list (patch #6925)\n  * alias: allow /unalias to remove multiple aliases (patch #6926)\n  * irc: add new commands /allchan and /allserv with excluding option, commands /ame and /amsg are now aliases, new aliases /aaway and /anick\n  * irc: add options to customize target buffer for messages (task #7381)\n  * irc: add new output queue for messages with low priority (like automatic CTCP replies), high priority is given to user messages or commands\n  * irc: use self-signed certificate to auto identify on IRC server (CertFP) (task #7492, debian #453348)\n  * irc: check SSL certificates (task #7492)\n  * irc: add option \"autorejoin_delay\" for servers (task #8771)\n  * irc: add option to use same nick color in channel and private (task #9870)\n  * irc: add missing command 275 (patch #6952)\n  * irc: add commands /sajoin, /samode, /sanick, /sapart, /saquit (task #9770)\n  * irc: add options for CTCP, to block/customize CTCP reply (task #9693)\n  * irc: add missing CTCP: clientinfo, finger, source, time, userinfo (task #7270)\n  * irc: add all server options for commands /server and /connect\n  * irc: add arguments for command /rehash\n  * irc: improve mask used by command /kickban\n  * xfer: add color for nicks in chat\n  * xfer: add missing command /me (bug #28658)\n  * gui: add color \"darkgray\", add support for background with light color\n\nBug fixes::\n\n  * core: fix bug with script installation on BSD/macOS (patch #6980)\n  * core: fix compilation under Cygwin (patch #6916)\n  * core: fix plural form in translation files (bug #27430)\n  * core: fix terminal title bug: do not reset it when option weechat.look.set_title is off (bug #27399)\n  * core: fix buffer used by some input functions called via plugin API with buffer pointer (bug #28152)\n  * alias: fix bug with buffer for execution of alias, when called from plugin API with function command (bug #27697)\n  * alias: fix bug with arguments (bug #27440)\n  * irc: improve error management on socket error (recv/send)\n  * irc: fix nick color for nicks with wide chars (bug #28547)\n  * irc: fix autorejoin on channels with key\n  * irc: fix command /connect (options -ssl, -ipv6 and -port) (bug #27486)\n  * xfer: add missing charset decoding/encoding for IRC DCC chat (bug #27482)\n  * fifo: remove old pipes before creating new pipe\n  * gui: fix color \"black\" (bug #23882, debian #512957)\n  * gui: fix message \"Day changed to\", sometimes displayed at wrong time (bug #26959)\n  * gui: fix bug with URL selection in some terminals (caused by horizontal lines) (bug #27700)\n  * gui: use default auto completion for arguments of unknown commands\n  * gui: fix alignment problem for buffer name when a merged buffer is closed (bug #27617)\n  * gui: update hotlist when a buffer is closed (bug #27470), remove buffer from hotlist when buffer is cleared (bug #27530)\n  * gui: fix /input history_global_next: reset input content when last command in history is reached\n  * api: fix function bar_set for python/lua/ruby (patch #6912)\n\nBuild::\n\n  * core: fix CMake directories: let user customize lib, share, locale and include directories (patch #6922)\n  * ruby: add support of Ruby >= 1.9.1 (patch #6989)\n\n[[v0.3.0]]\n== Version 0.3.0 (2009-09-06)\n\nNew features::\n\n  * core: add group support in nicklist\n  * core: add /reload command to reload WeeChat and plugins config files (signal SIGHUP is caught to reload config files)\n  * core: add new /layout command and save_layout_on_exit config option, to save/restore windows and buffers order (task #5453)\n  * core: add new options for completion, optional stop instead of cycling with words found (task #5909)\n  * core: new name for configuration files (*.conf instead of *.rc)\n  * core: improve /set command, new command /unset (task #6085)\n  * core: add new input action \"set_unread_current_buffer\" to set unread marker for current buffer only (task #7286)\n  * core: remove key functions, replaced by /input command\n  * core: add argument with buffer number/range for command \"/buffer close\" (task #9390, task #7239)\n  * core: add new command /wait (schedule a command execution in future)\n  * core: improve main loop: higher timeout in select, less CPU usage\n  * gui: new display engine, with prefix and message for each line\n  * gui: add new type of buffer, with free content\n  * gui: add tags for lines and custom filtering by tags or regex (task #7674)\n  * gui: add buffer merging (task #7404)\n  * gui: add custom bars, with custom items\n  * gui: add key to zoom a window (task #7470)\n  * gui: add keys to move into last visited buffers: kbd:[Alt+<] and kbd:[Alt+>]\n  * gui: come back to last visited buffer when closing a buffer\n  * gui: add new option scroll_page_percent to choose percent of height to scroll with kbd:[PgUp] and kbd:[PgDn] keys (task #8702)\n  * gui: add number of lines remaining after last line displayed in \"-MORE-\" indicator (task #6702)\n  * network: add support for more than one proxy, with proxy selection for each IRC server (task #6859)\n  * aspell: improve plugin: use of many dictionaries, global dictionary, real time checking (optional), fix bugs with utf-8\n  * irc: add irc plugin (replaces old IRC code in core) (task #6217)\n  * irc: add smart join/part/quit message filter (task #8503)\n  * irc: use of many addresses for servers (auto-switch when a connection fails), nicks are now set with one option \"nicks\" (task #6088)\n  * irc: add some colors in messages from server (for text and nicks) (task #8926)\n  * irc: add color decoding in title for IRC channels (task #6030)\n  * irc: add missing commands (328, 369)\n  * logger: add logger plugin with new features: backlog, level for messages to log (task #8592), level by buffer (task #6687), filename mask by buffer, option \"name_lower_case\" (bug #19522)\n  * relay: add relay plugin (network communication between WeeChat and remote application)\n  * xfer: add speed limit for DCC files sending (task #6178)\n  * xfer: add new option xfer.file.use_nick_in_filename for Xfer files (task #7140)\n  * plugins: add some other plugins: alias, demo, fifo, tcl, xfer\n  * scripts: new scripts: weeget.py (script manager), jabber.py (jabber/XMPP protocol), go.py (quick jump to buffers), buffers.pl (sidebar with list of buffers), iset.pl (set options interactively), weetris.pl (tetris-like game), mastermind.pl, ...\n  * api: add hooks: command, timer, file descriptor, process, connection, print, signal, config, completion, modifier, info, infolist\n  * api: new plugin API with many new functions: hooks, buffer management and nicklist, bars, configuration files, network, infos/infolists, lists, upgrade\n\nInternationalization::\n\n  * add Polish translations\n\nBug fixes::\n\n  * core: fix nick completion bug (missing space after nick)\n  * gui: fix completion with non-latin nicks (bug #18993)\n  * gui: fix display bug with some weird UTF-8 chars (bug #19687)\n  * gui: fix bug with wide chars in input (bug #16356)\n  * gui: fix bug when switching window, scrollback is now preserved (task #7680)\n  * network: fix network connection for hostnames resolving to several IPs: try all IPs in list until one succeeds (bug #21473, debian #498610)\n  * alias: fix bug with alias, use current buffer to run commands (bug #22876)\n  * irc: fix lock with SSL servers when connection fails, and when disconnecting during connection problem (bug #17584)\n  * irc: command /whois is now authorized in private without argument (task #7482)\n  * irc: fix private buffer name with Irssi proxy (bug #26589)\n  * irc: remove kernel info in CTCP VERSION reply (task #7494)\n  * irc: fix mode parsing when receiving modes with arguments (bug #26793)\n  * scripts: do not auto-load hidden files (bug #21390)\n\n[[v0.2.6.3]]\n== Version 0.2.6.3 (2009-06-13)\n\nBug fixes::\n\n  * fix GnuTLS detection (use pkg-config instead of libgnutls-config) (bug #26790)\n\n[[v0.2.6.2]]\n== Version 0.2.6.2 (2009-04-18)\n\nBug fixes::\n\n  * fix bug with charset decoding (for example with iso2022jp) (bug #26228)\n\n[[v0.2.6.1]]\n== Version 0.2.6.1 (2009-03-14)\n\nBug fixes::\n\n  * fix crash with some special chars in IRC messages (bug #25862, CVE-2009-0661)\n\n[[v0.2.6]]\n== Version 0.2.6 (2007-09-06)\n\nNew features::\n\n  * add new option \"deloutq\" to /server command to delete all servers messages out queues (task #7221)\n  * add string length limit for setup file options\n  * add option to align text of messages (except first lines) (task #7246)\n  * add paste detection, new options look_paste_max_lines and col_input_actions (task #5442)\n  * add support of channel mode +u (channel user) (bug #20717)\n  * improve /connect command to connect to a host by creating a temporary server, add option to /server to create temporary server (task #7095)\n  * add \"copy\", \"rename\" and \"keep\" options to /server command\n  * allow clear of multiple selected buffers with /clear (patch #6112)\n  * add key for setting unread marker on all buffers (default: kbd:[Ctrl+s], kbd:[Ctrl+u]) (task #7180)\n  * improve command /server ant its output\n  * add 3 default new keys: kbd:[Ctrl+b] (left), kbd:[Ctrl+f] (right), kbd:[Ctrl+d] (delete)\n  * add \"buffer_move\" event handler to plugins API (task #6708)\n  * add key function \"jump_previous_buffer\" to jump to buffer previously displayed (new key: kbd:[Alt+j], kbd:[Alt+p]) (task #7085)\n  * add \"%*\" to completion template, to repeat last completion\n  * add \"-nojoin\" option for /connect and /reconnect commands (task #7074)\n  * add \"scroll\" option to /buffer command\n  * down key now saves input to history and clears input line (task #7049)\n  * command /away allowed when not connected to server (internally stored and AWAY command is sent when connecting to server) (task #7003)\n  * add argument for /upgrade command (path to binary)\n  * add hotlist sort with new option \"look_hotlist_sort\" (task #5870)\n\nBug fixes::\n\n  * fix bug with log of plugin messages (option log_plugin_msg)\n  * fix display bug with some special chars in messages (some words were truncated on screen) (bug #20944)\n  * fix UTF-8 bug with color encoding/decoding\n  * fix crash when searching text in buffer with kbd:[Ctrl+r] (bug #20938)\n  * fix bug with flock when home is on NFS filesystem (bug #20913)\n  * fix user modes in nicklist when ban and nick mode are received in the same MODE message (bug #20870)\n  * fix IRC message 333: silently ignore message if error when parsing it\n  * fix server option \"command_delay\": does not freeze WeeChat any more\n  * fix bug with highlight and UTF-8 chars around word (bug #20753)\n  * fix nick prefix display on servers that doesn't support all prefixes (bug #20025)\n  * fix terminal encoding detection when NLS is disabled (bug #20646)\n  * fix crash when sending data to channel or pv on disconnected server (bug #20524)\n  * fix bugs with IRC color in messages, now color codes are inserted in command line with kbd:[Ctrl+c], kbd:[Ctrl+b].. instead of %C,%B,.. (bug #20222, task #7060)\n  * fix bug with smart nick completion (last speakers first) when a nick is changed\n  * fix charset bug with channel names in status bar (bug #20400)\n  * fix log file when channel name contains \"/\" (bug #20072)\n  * fix bug with /topic when channel not open and topic not defined (bug #20141)\n\nDocumentation::\n\n  * add Swedish quickstart guide\n\n[[v0.2.5]]\n== Version 0.2.5 (2007-06-07)\n\nNew features::\n\n  * add missing IRC commands (327, 378, 379) (bug #20091)\n  * add \"%M\" for completion with nicks of current server (nicks on open channels) (task #6931)\n  * improve key bindings: now possible to bind a key on many commands, separated by semicolon (task #5444)\n  * improve IRC long message split: use word boundary (task #6685)\n  * add protocol priority for GnuTLS (patch #5915)\n  * add channel admin mode \"!\" for some IRC servers\n  * add /reconnect command (task #5448)\n  * add \"-all\" option for /connect and /disconnect commands (task #6232)\n  * improve nick completion: completion with last speakers first and self nick at the end; add option look_nick_completion_smart, enabled by default (task #5896)\n  * add color for input text not found in buffer history\n\nBug fixes::\n\n  * fix /quote command: now allowed when socket is OK (even if IRC connection to server is not OK) (bug #20113)\n  * fix hotlist when exiting search mode: current buffer is removed from hotlist\n  * remove \":\" for unknown IRC commands before arguments (bug #19929)\n  * fix \"%C\" completion: now completes with all channels of all servers\n  * fix bug with \"/buffer query_name\", add server and channel completion for /buffer command (bug #19928)\n  * fix IRC mode parsing when receiving modes with arguments (bug #19902)\n  * fix crash with IRC JOIN malformed message (bug #19891)\n  * fix bug with nick prefixes on some IRC servers (bug #19854)\n  * improve setup file save: now writes temporary file, then rename it (task #6847)\n  * fix bug with $nick/$channel/$server variables in commands\n  * forget current nick when user manually disconnects from server\n  * fix nick display in input window\n  * fix bug with erroneous nickname when connecting to server (bug #19812)\n  * fix display bugs in IRC error messages\n  * fix bug with iso2022jp locale (bug #18719)\n  * fix string format bug when displaying string through plugin script API\n  * fix nick completion in command arguments (bug #19590)\n  * fix possible crash with nick completion when a nick leaves channel (bug #19589)\n  * fix USER message when connecting to IRC server (patch #5835)\n\nBuild::\n\n  * add CMake for weechat compilation (patch #5943)\n\n[[v0.2.4]]\n== Version 0.2.4 (2007-03-29)\n\nNew features::\n\n  * rename log file for DCC chat (now <server>.dcc.<nick>.weechatlog)\n  * add current buffer in hotlist when scrolling up in buffer (task #6664)\n  * improve password hiding, code cleanup (bug #19229)\n  * add new return code in plugin API to force highlight (for message handlers only)\n  * add \"call\" option to /key command, add new key function \"insert\" to insert text on command line (task #6468)\n  * add event handler to plugin API\n  * add numeric argument for /clear command (buffer number) (patch #5372)\n  * add new key (kbd:[Ctrl+r]) for interactive and incremental search in buffer history (task #6628)\n\nBug fixes::\n\n  * fix color bug with IRC messages displayed by plugins (bug #19442)\n  * fix topic charset, now using channel charset if defined (bug #19386)\n  * fix crash when closing a pv if a DCC chat is open on same nick (bug #19147)\n  * fix bug with channel topic after reconnection (not erased) (bug #19384)\n  * fix bug with explode_string / free_exploded_string when max_items > 0\n  * fix /topic completion when no topic set on current channel (bug #19322)\n  * fix bug with server buffer when \"look_one_server_buffer\" is ON and server buffer is moved to any number > 1 (bug #19219)\n  * fix /help command: displays plugin help for redefined commands (bug #19166)\n  * prefix \"/\" disabled in commands (patch #5769)\n  * fix completion of redefined commands removed by plugins (bug #19176)\n  * fix memory leaks in perl and python plugins (bug #19163)\n  * fix permissions on \"dcc\" and \"logs\" directories (bug #18978)\n  * fix crash when /away command is issued with no server connection (bug #18839)\n  * fix crash when closing a buffer opened on many windows\n  * fix freeze with SSL server when disconnecting after connection loss (bug #18735)\n\nDocumentation::\n\n  * add Scots quickstart guide\n\n[[v0.2.3]]\n== Version 0.2.3 (2007-01-10)\n\nBug fixes::\n\n  * fix display bugs with nicklist at top/bottom when look_nicklist_separator is OFF (bug #18737)\n  * fix iconv problem, causing truncated words when using iso locale\n  * fix topic scroll when topic has multi-bytes chars\n  * fix bugs with charset: now decodes/encodes nicks and channels in IRC messages (bug #18716)\n\nBuild::\n\n  * fix compilation problem with iconv under FreeBSD\n\n[[v0.2.2]]\n== Version 0.2.2 (2007-01-06)\n\nNew features::\n\n  * add anti-flood option (irc_anti_flood) (task #5442)\n  * plugins: \"add_message_handler\" now accepts \"*\" for all IRC messages\n  * add keys (kbd:[F9] / kbd:[F10]) to scroll topic (task #6030)\n  * add auto completion with channels and filenames (task #5423)\n  * add option \"look_nicklist_separator\" (task #5437)\n  * add \"irc_send_unknown_commands\" option to send unknown commands to IRC server (OFF by default) (task #5947)\n  * /charset command and charset conversions now made by \"charset\" plugin\n  * add filename completion (task #5425)\n  * add \"modifier\" in plugins API\n  * improve /plugin command\n  * add date in plugin function get_buffer_data\n  * add more values for config boolean values: y/true/t/1 and n/false/f/0\n\nBug fixes::\n\n  * fix bug with status bar (missing refresh) when closing a buffer\n  * fix bug with use of first buffer for a channel if not connected to server (now allowed only for a server buffer)\n  * fix refresh bug with private buffer title\n  * fix bug with nick completion in command arguments (now uses option look_nick_completion_ignore)\n  * fix display bug with color for first line on screen (bug #17719)\n  * fix bug with set_config function in plugins API (bug #18448)\n  * fix memory leak in keyboard input\n  * fix refresh bug when changing config options if window is split\n  * add space between chat and nicklist when position is \"right\" (bug #17852)\n  * fix bug with DCC SEND when filename begins with \"~\"\n  * fix display bug in status bar, wrong length when using UTF-8\n  * fix bug with ignore: now any IRC command is allowed\n  * fix crash with kbd:[Ctrl+t] (transpose) and one char on line (bug #18153)\n  * fix bug on ignore with \"mode\" IRC command (bug #18058)\n  * fix crash when loading ruby script if file does not exist, with Ruby >= 1.9 only (bug #18064)\n  * mode changes with /op, /deop, /voice, /devoice, /halfop, /dehalfop are now sent in one mode command to server (task #5968)\n  * fix bug with /alias and arguments (like $1), now text after argument(s) is used (bug #17944)\n  * fix minor display bug with special chars on some arch like PPC\n\nBuild::\n\n  * fix some portability bugs (patch #5271)\n  * fix iconv detection for BSD (patch #5456)\n  * fix typo in configure.in (bash specific test) (patch #5450)\n\n[[v0.2.1]]\n== Version 0.2.1 (2006-10-01)\n\nNew features::\n\n  * command \"/away -all\" now allowed when not connected to current server\n  * new signals handled: SIGTERM and SIGHUP (received when terminal is closed): clean WeeChat quit (send quit to irc servers then quit WeeChat)\n  * add some new default key bindings for existing keys (for some OS)\n  * command /key now OK with one argument (key name): display key if found\n  * add current channel completion for /ctcp command\n  * values yes/no accepted (as on/off) for config boolean values (task #5454)\n  * add server default notify level (set by /buffer notify on server buffer) (task #5634)\n  * add special vars $nick/$channel/$server for server_command, alias and plugin command handlers\n  * add arguments $1,$2,..,$9 and $* for alias (task #5831)\n  * add hotlist in session file when using /upgrade command (task #5449)\n\nBug fixes::\n\n  * fix crash for DCC receiver when resuming a file (bug #17885)\n  * fix DCC error for sender when receiver cancels DCC (bug #17838)\n  * fix random crash with /upgrade command (error when loading buffers)\n  * fix buffer search by server/channel: now if only channel is specified, a channel of another server can be found\n  * fix highlight for DCC, invite and notice: when a window is displaying buffer, there's no highlight\n  * fix bug with CTCP VERSION sent on channels (bug #17547)\n  * fix bugs in get_buffer_data which breaks the retrieval of buffer content (perl, lua)\n  * fix nicklist display bug when top/bottom (not enough lines) (bug #17537)\n  * fix bug with auto-rejoin of keyed channels (bug #17534)\n  * add default nick completion when line starts with \"//\" (bug #17535)\n  * fix crashes with /buffer and /charset commands when not connected to any server (bug #17525)\n  * fix nick refresh problem with unrealircd specific modes: chan owner (~) and chan admin (&) (bug #17340)\n\n[[v0.2.0]]\n== Version 0.2.0 (2006-08-19)\n\nNew features::\n\n  * add \"C\"lear option on IRC raw buffer\n  * IRC raw buffer now uses join/part prefix with color to display messages\n  * add send of \"quit\" message to server when using /disconnect\n  * add \"%m\" for completion with self nick (on current server)\n  * add missing IRC commands (310, 326, 329, 338)\n  * improve DCC speed (up to x5 on LAN) by forking for DCC files and a new option \"dcc_fast_send\" (does not wait for ACK) (task #5758)\n  * add \"look_save_on_exit\" option (patch from Emanuele Giaquinta)\n  * add new functions in plugin/script API: get window info, get buffer info, get buffer content\n  * add color encoding for some commands like /me\n  * add aspell plugin\n\nBug fixes::\n\n  * fix \"wallops\" command when received, now displayed by WeeChat (bug #17441)\n  * fix /wallops command (now many words are correctly sent)\n  * fix command 348 (channel exception list, received by /mode #chan e)\n  * add missing modes (channel & user), now all modes are allowed (bug #16606)\n  * fix DCC restore after /upgrade (order is now correctly saved)\n  * fix away after server disconnection (now away is set again when reconnecting) (bug #16359)\n  * fix DCC file connection problem (connection from receiver to sender)\n  * fix crash when purging DCC with high number of DCC (> window size)\n  * fix completion for command handlers (now empty completion_template means nick completion, \"-\" string means no completion at all)\n  * fix nick alignment problem when look_nickmode is off\n  * add generic function for incoming numeric IRC commands (bug #16611)\n  * fix crash when doing \"/part something\" on a server buffer (bug #17201)\n  * charsets are now checked when set by /charset command\n  * fix crash on DCC buffer under Darwin 8 (bug #17115)\n  * fix bug with spaces in script names (bug #16957)\n  * fix random crash when \"MODE #chan -l\" is received\n  * fix bug in IRC parser (random crash with malformed IRC messages)\n  * fix refresh bugs when terminal is resized: too many refreshes, display bug with split windows\n  * case ignored for channel names in charset options (bug #16858)\n  * fix crash when setting look_one_server_buffer to ON (bug #16932)\n  * fix display bug with special char (bug #16732)\n  * rename plugins names (remove \"lib\" prefix in name)\n  * fix crash when closing DCC/raw buffer if 2 are open (bug #16808)\n  * fix crashes with DCC chat remove/purge on DCC view (bug #16775)\n  * fix bug with connection to bnc (bug #16760)\n  * command /save now writes plugins options (~/.weechat/plugins.rc)\n  * fix crash with register function in plugin scripts (bug #16701)\n  * fix random crash at exit (/quit or /upgrade) with split windows\n\nDocumentation::\n\n  * add Polish, Russian and Czech quickstart guide\n\nBuild::\n\n  * add configure option for doc XSL prefix (bug #16991)\n\n[[v0.1.9]]\n== Version 0.1.9 (2006-05-25)\n\nNew features::\n\n  * add backtrace when WeeChat crashes, log file automatically renamed\n  * add new key to find previous completion (kbd:[Shift+Tab] by default)\n  * add missing IRC commands (006, 007, 290, 292, 310, 379, 437, 974)\n  * add new option to customize input prompt\n  * add nick modes\n  * add hostnames associated to nicks (available for /ban completion)\n  * add \"+p\" mode for channels, fix mode display in status bar\n  * add nick alignment options\n  * add keyboard handler to plugin API\n  * improve script plugin loader\n  * add hostname/IP option for connection to server\n  * add /setp command (set plugin options)\n  * aliases are executed before WeeChat/IRC commands, add /builtin command\n  * add /cycle command, /part command does close buffer any more\n\nInternationalization::\n\n  * add Russian translations (thanks to Pavel Shevchuk)\n\nBug fixes::\n\n  * fix /squery command (message sent to server, now OK with more than two arguments)\n  * fix /alias command (with an alias name, display content)\n  * add lock for log file (~/.weechat/weechat.log), only one WeeChat process can use this file (bug #16382)\n  * fix crash with malformed UTF-8 strings\n  * fix crash with ncurses color when too many colors defined in ncurses (bug #16556)\n  * fix bug with long outgoing IRC messages (> 512 bytes) (bug #16358)\n  * fix Ruby crash when handler does not return OK or KO (bug #16552)\n  * fix UTF-8 display bug with chars using more than one cell on screen (bug #16356)\n  * fix display bug with DCC file size when > 1 GB\n  * fix refresh bug (deadlock in curses) when terminal is resized (bug #16542)\n  * fix nicklist sort bug\n  * fix crash when multiple pv have same name: now it's forbidden and pv buffer is not renamed (when a nick changes) if another exists with same name (bug #16369)\n  * command /clear [-all] now clears hotlist\n  * fix crash after /upgrade if a line in history is empty (bug #16379)\n  * fix many crashes with DCC chat (bug #16416)\n  * fix commands 332, 333 (/topic now OK when channel is not opened)\n  * remove color encoding and charset conversion for commands (only allowed in text sent to channel/private)\n  * fix /names command: now displays result when not on a channel\n  * fix refresh bug (too many refresh) when terminal is resized\n  * fix nicklist display bugs when on top or bottom of chat window\n  * fix high CPU usage when running under a Screen that has been killed\n\nDocumentation::\n\n  * add German doc (thanks to Frank Zacharias)\n\nBuild::\n\n  * fix --disable-plugins option in configure script\n  * improve Lua detection (bug #16574)\n\n[[v0.1.8]]\n== Version 0.1.8 (2006-03-18)\n\nNew features::\n\n  * improve alias completion (now uses target command for completion)\n  * add missing IRC command (487)\n  * add inactivity time, available for plugins via get_info(\"inactivity\")\n  * add keys kbd:[Alt+Home] / kbd:[Alt+End] to scroll top/bottom, kbd:[Alt+F11] / kbd:[Alt+F12] to scroll nicklist top/bottom\n  * add special names for plugin message handlers: weechat_pv, weechat_highlight, weechat_ctcp, weechat_dcc\n  * add IRC raw data buffer (new key: kbd:[Alt+j], kbd:[Alt+r])\n  * add new plugins functions: add_timer_handler, remove_timer_handler, remove_infobar\n  * plugin messages handlers now called when message is ignored (by /ignore)\n  * new behavior for messages ignored by a message handler: now WeeChat executes standard handler, treating message as \"ignored\"\n  * many commands allowed for aliases\n  * many commands allowed when connecting to server\n  * add Lua script plugin\n  * add functions in plugins API: get_server_info, free_server_info, get_channel_info, free_channel_info, get_nick_info, free_nick_info\n  * add option \"look_nick_complete_first\" (patch from Gwenn)\n  * add option \"look_open_near_server\" (patch from Gwenn)\n  * add new scroll keys for a few lines up/down (default: kbd:[Alt+PgUp] / kbd:[Alt+PgDn]) (patch from Pistos)\n  * add new option \"irc_away_check_max_nicks\" to disable away check on channels with high number of nicks (patch from Gwenn)\n  * add new command line argument for setting WeeChat home dir (-d or --dir) (patch from Gwenn)\n  * add option \"irc_show_away_once\", to show away message only once in pv\n\nInternationalization::\n\n  * add partial Hungarian translations\n\nBug fixes::\n\n  * improve Ruby plugin\n  * fix /set command when internal server name contains one or many dots\n  * fix get_info plugin API function when no server at all is opened\n  * fix display bug when top of buffer is displayed and first line is removed (according to \"history_max_lines\" setting)\n  * fix /mode command output\n  * fix completion problem in private with nicks\n  * script plugins now load scripts in WeeChat system share directory\n  * /msg command does not open any buffer any more\n  * fix crash when using global history (when older entry is removed)\n  * fix display bug with /kill command\n  * fix bug with /upgrade and servers buffer\n  * fix bug with get_dcc_info plugin interface function\n  * fix bug with charset in infobar highlights\n  * fix bug with buffer detection in plugins/scripts commands\n  * fix bug with /history command\n\n[[v0.1.7]]\n== Version 0.1.7 (2006-01-14)\n\nNew features::\n\n  * remove \"irc_default_msg_away\" setting, for RFC 2812 conformity (/away command without argument only removes away status), new values for \"irc_display_away\" (off, local, channel)\n  * add color for window separators (when split)\n  * add completion system for plugins/scripts commands\n  * add charset by server and channel, new command: /charset\n  * add Ruby script plugin\n  * add /upgrade command\n  * add ETA (Estimated Time of Arrival) for DCC files\n  * /nick command is now allowed when not connected to server\n  * add server/channel argument to /buffer command for jumping to buffer\n  * add new keys for switching to other windows: kbd:[Alt+w], kbd:[Alt+Arrow]\n  * add new keys for scrolling to previous/next highlight: kbd:[Alt+p] / kbd:[Alt+n]\n  * add \"read marker\": an indicator for first unread line in a server or channel buffer (new key kbd:[Alt+u] to scroll to marker)\n  * new window management: custom size for windows, auto resize when terminal is resized\n  * add /history command\n\nBug fixes::\n\n  * fix msg command (now allowed in private buffer with \"*\" as target)\n  * fix refresh bug with Solaris when term size is changed\n  * fix plugins autoload\n  * fix display bug in chat window when a message length equals to window width\n  * fix infinite loop when resizing term to small size\n\nBuild::\n\n  * replace Texinfo doc by XML Docbook\n\n[[v0.1.6]]\n== Version 0.1.6 (2005-11-11)\n\nNew features::\n\n  * new color management system, IRC colors are now correctly displayed and can be removed by new options irc_colors_receive and irc_colors_send\n  * add setting for having one server buffer for all servers (look_one_server_buffer)\n  * add setting for ignoring some chars when completing nicks\n  * signal SIGPIPE is now ignored\n  * add partial match for highlights\n  * add dcc_own_ip and dcc_port_range settings\n  * full UTF-8 support, auto-detection of UTF-8 usage (locale)\n  * add \"Day changed to [date]\" message when day changes\n  * new plugin interface, rewritten from scratch: now loads dynamic C library, and perl/python are script plugins\n  * log options (for server/channel/private) can now be set while WeeChat is running\n  * add channel modes +e and +f\n  * add some missing IRC commands, fix command 367\n  * add colors for input buffer and current channel of status bar\n  * add online help for config options (with /set full_option_name)\n  * enhanced \"smart\" hotlist, with names (new options: look_hotlist_names_{count|level|length})\n\nBug fixes::\n\n  * fix scroll problem when one line is bigger than screen size\n  * fix IRC message parser bug\n\n[[v0.1.5]]\n== Version 0.1.5 (2005-09-24)\n\nNew features::\n\n  * add /ame command (send CTCP action to all channels of all connected servers)\n  * add setting \"irc_notice_as_pv\" to see notices as pv\n  * add nicks colors in setup file\n  * add some missing IRC commands\n  * add /ignore and /unignore commands\n  * signal SIGQUIT is now ignored\n  * jump to next server now saves current channel buffer for each server\n  * add keys kbd:[Ctrl+Up] / kbd:[Ctrl+Down] to call previous/next command in global history (common to all buffers)\n\nBug fixes::\n\n  * fix DCC bug: delete failed file only if really empty (on disk)\n  * fix IRC message parser bug\n  * fix scroll problem (screen moving when scrolling and new line displayed)\n  * fix infinite loop when scrolling back and displaying long lines\n  * fix crash when closing a buffer used by more than one window\n  * fix DCC display bug (now decodes string according to charset)\n  * fix bug with strings comparison (str[n]casecmp) and some locales (like Turkish), now using ASCII comparison (thanks to roktas)\n  * fix refresh bug when one line is bigger than screen size\n  * fix look_nicklist_min_size and look_nicklist_max_size options\n  * fix refresh bug when changing channel modes\n\n[[v0.1.4]]\n== Version 0.1.4 (2005-07-30)\n\nNew features::\n\n  * join and part/quit prefixes (arrows) now displayed with different colors\n  * add \"irc_highlight\" setting, to get highlight with any word\n  * add /amsg command (send text to all channels of all connected servers)\n  * add color for private in hotlist (different than color for highlight)\n  * add DCC resume and timeout\n  * add function for Perl/Python to get DCC list\n  * new keyboard management: keys are setup in config file, add new command /key, add some new default keys, kbd:[Alt+k] is used to grab key (useful for /key command)\n  * add seconds in infobar time (optional thanks to new setting)\n  * add auto-prefix with \"#\" for channels (if no prefix found), with /join command\n\nBug fixes::\n\n  * fix auto-rejoin for channels with key\n  * fix /ctcp command (now any command/data allowed)\n  * fix SIGSEGV handler (now write a core file by aborting program)\n  * fix statusbar & infobar background refresh problem with some systems\n  * fix FIFO pipe (command now authorized on a buffer not connected to an IRC server)\n  * topic completion now decodes UTF-8 string\n  * fix bug with IRC URL on command line (irc://)\n  * fix some curses refreshes\n\n[[v0.1.3]]\n== Version 0.1.3 (2005-07-02)\n\nNew features::\n\n  * proxy support (http, socks4, socks5) with authentication (http, socks5) and ipv6 support (client to proxy)\n  * add completion for config option (with /set command)\n  * commands from users outside channel now authorized (if special user or channel without \"n\" flag)\n  * add IPv6 support\n  * kill command now received and displayed\n  * add SSL support\n  * channel notify levels are saved in config file (new option \"server_notify_levels\" for server sections)\n  * part message now accepts %v (replaced by WeeChat version), like quit message\n\nBug fixes::\n\n  * errors while loading perl scripts are now displayed in server buffer (instead of current buffer)\n  * in python scripts, all messages written in stdin and stderr are redirected in server buffer\n  * fix a filename error while loading a python script manually\n  * fix plugins print and prnt functions: now OK for writing on server buffers\n  * fix color problem with new libcurses version\n  * fix crash when using kbd:[Alt+s] or kbd:[Alt+x] on DCC buffer (kbd:[Alt+d])\n  * fix startup crash when config file (~/.weechat/weechat.rc) is not found\n\nBuild::\n\n  * improve Perl/Python libs detection for ./configure script\n\n[[v0.1.2]]\n== Version 0.1.2 (2005-05-21)\n\nNew features::\n\n  * add Python plugin support, improve Perl interface (and now Perl/Python libraries are checked by configure script)\n  * add nicklist scroll keys (kbd:[Alt+Home] / kbd:[Alt+End] / kbd:[Alt+PgUp] / kbd:[Alt+PgDn] or kbd:[F11] / kbd:[F12])\n  * add transfer rate for DCC files\n  * add \"-all\" option for /nick command\n  * buffers timestamp can now be changed (new option in config file)\n  * add missing IRC commands (307, 341, 485, 671)\n\nBug fixes::\n\n  * fix nicklist sort\n  * fix crash when purging old DCC\n  * fix crash with 64-bits arch (like AMD64) when converting UTF-8\n\nBuild::\n\n  * WeeChat now OK under *BSD and macOS\n\n[[v0.1.1]]\n== Version 0.1.1 (2005-03-20)\n\nNew features::\n\n  * add nicks count for channel buffers\n  * add FIFO pipe for remote control\n  * add crash dump when WeeChat receives SIGSEGV (Segmentation fault)\n  * add new display engine: doesn't cut words at end of lines\n  * add DCC send and DCC chat\n  * add /halfop & /dehalfop commands, fix halfop display bug in nicklist\n  * add /ban, /unban and /kickban commands\n  * add --irc-commands and --weechat-commands command line options\n  * connection to IRC server is now made by child process (non blocking)\n  * add support for UnrealIrcd (\"~\" for chan owner, \"&\" for chan admin)\n  * new key for window switch (now: kbd:[F5] / kbd:[F6] = switch buffer, kbd:[F7] / kbd:[F8] = switch window)\n  * on server buffer, only server messages are logged\n  * improve /help command output\n  * plugins messages are logged with new config option (log_plugin_msg)\n\nInternationalization::\n\n  * add Spanish translations\n\nBug fixes::\n\n  * fix /kick command\n  * fix /invite command (and now invite requests are displayed)\n  * fix /buffer close command (now OK when disconnected from server)\n  * fix display bugs when many windows are opened\n\n[[v0.1.0]]\n== Version 0.1.0 (2005-02-12)\n\nNew features::\n\n  * improve /window command: now split and merge are OK\n  * away nicks are now displayed with another color (new option: \"irc_away_check\")\n  * add away indicator in status bar\n  * add lag indicator (and auto-disconnect after a delay if important lag)\n  * improve completion: now completes commands arguments (IRC and internal), when only one completion matches, completion mechanism is stopped (to complete command argument for example)\n  * improve /set command: empty strings are allowed, new colors, server options can be changed while WeeChat is running\n  * add default away/part/quit messages in config file\n  * new [irc] section in config file, move option \"look_display_away\" to \"irc_display_away\"\n  * server messages & errors are all prefixed (by 3 chars, like \"-@-\")\n  * add new options for charset (UTF-8 support): look_charset_decode, look_charset_encode and look_charset_internal\n\nBug fixes::\n\n  * fix many memory leaks\n  * fix colors bug: remove \"gray\" color (replaced by \"default\"), colors are OK when terminal has white (or light) background\n  * fix crash when resizing terminal to small size\n  * fix crash when multiple servers and big messages received from server\n  * fix crash when closing some private buffers\n  * fix crash when unknown section with option(s) in config file\n  * fix /op, /deop, /voice, /devoice (now OK with many nicks)\n  * fix /me command (now OK without parameter)\n  * fix /away command (now OK if not away)\n  * logs are now disabled by default (server/channel/private)\n\n[[v0.0.9]]\n== Version 0.0.9 (2005-01-01)\n\nNew features::\n\n  * auto-reconnection to server (new options: server_autoreconnect (on/off), server_autoreconnect_delay (in seconds))\n  * new command \"/buffer close\" (close any server/channel/private buffer)\n  * new keys: kbd:[Ctrl+a] (home), kbd:[Ctrl+e] (end), kbd:[Ctrl+w] (same as kbd:[Ctrl+Backspace]), kbd:[Alt+s] (switch to server buffer), kbd:[Alt+x] (switch to first channel of next server)\n  * add new config option: \"server_command_delay\" (delay in seconds after startup command for each server)\n\nBug fixes::\n\n  * fix major bug when socket is closed by server (100% CPU usage), and disconnections are now OK (all channels are \"closed\", history is still visible, and buffer will be used again if reconnection to server)\n  * option \"look_remove_colors_from_msgs\" is now working\n  * fix display of nick mode changes\n  * fix /notice command (and display when received from server)\n\n[[v0.0.8]]\n== Version 0.0.8 (2004-10-30)\n\nNew features::\n\n  * nickserv passwords hidden (new config option: log_hide_nickserv_pwd on/off)\n  * auto-rejoin channels when kicked (new config option: server_autorejoin on/off)\n  * add IRC::command function for Perl scripts\n  * /buffer command developed (buffers list, move and notify)\n  * logging buffers to disk (server/channel/private according to user preferences)\n  * add config option \"look_display_away\" to announce away in channels\n  * DCC file receive OK (kbd:[Alt+d] for DCC view)\n  * add key kbd:[Ctrl+l] (`L`) for redrawing terminal\n  * add key kbd:[Alt+r] for clearing hotlist\n\nBug fixes::\n\n  * fix /kick command: now OK with many words as reason\n  * fix bug when adding alias with same name as other\n  * fix crash when resizing terminal to very small size\n  * \"-MORE-\" message is now erased when switching to another buffer\n  * /query command now reopens private buffer if already opened\n\n[[v0.0.7]]\n== Version 0.0.7 (2004-08-08)\n\nNew features::\n\n  * new \"col_status_delimiters\" config option\n  * add command /buffer , buffers ordered by number, auto-jump to active buffers (kbd:[Alt+a]), jump to buffers by number (kbd:[Alt+0...9])\n  * add command /window, split terminal horizontally/vertically\n  * unique color for each nick (based on nickname)\n  * add history limit (text buffer and commands)\n\nBug fixes::\n\n  * action messages are now considered as messages, not crappy joins/parts\n  * fix display bug when nicklist is displayed at bottom of screen\n\nBuild::\n\n  * replace --enable-debug with --with-debug option for ./configure\n\n[[v0.0.6]]\n== Version 0.0.6 (2004-06-05)\n\nNew features::\n\n  * improve channel highlight (priority to message vs join/part)\n  * add command /query (starts private conversation)\n  * add IRC messages 476, 477\n\nBug fixes::\n\n  * fix bug when opened private win and remote user changes his nick\n  * /mode command is now OK and channel flags are displayed in status bar\n  * fix display bug (text was blinking when scrolling)\n  * CTCP Version reply is now in English only and doesn't show host (security reason)\n\n[[v0.0.5]]\n== Version 0.0.5 (2004-02-07)\n\nNew features::\n\n  * /set command to modify config options when WeeChat is running\n  * URL command line parameter to connect to server(s)\n  * new Perl script function to display message in info bar (\"IRC::print_infobar\")\n  * info bar highlight notifications\n  * add info bar timestamp in config (\"look_infobar_timestamp\")\n  * add info bar (optional, \"look_infobar\" to enable it, \"on\" by default)\n  * add -c (or --config) command line parameter to see config file options\n\nBug fixes::\n\n  * fix look_nicklist config option, now enables/disables nicklist\n  * secure code to prevent buffer overflows and memory leaks\n  * fix QUIT IRC command: now sent to all connected servers (not only current)\n  * fix crash with /oper command\n  * for default config file, nick is now based on un*x username\n  * fix crash when config file cannot be written\n  * add highlight on action messages\n\n[[v0.0.4]]\n== Version 0.0.4 (2004-01-01)\n\nNew features::\n\n  * add Perl plugin\n\nBug fixes::\n\n  * fix switch to private buffer\n  * add highlight when our nick is written in a channel/private window\n  * catch kbd:[Ctrl+c] (ignored)\n\nBuild::\n\n  * debug messages can be enabled via ./configure --enable-debug option\n\n[[v0.0.3]]\n== Version 0.0.3 (2003-11-03)\n\nNew features::\n\n  * add new IRC commands: stats, service, squit, motd, lusers, links, time, trace, admin, info, servlist, squery, who, whowas, die, summon, users, wallops, userhost, ison, ctcp ping\n\nInternationalization::\n\n  * add French translations\n\nBug fixes::\n\n  * for sort of nicks (op, halfop, voice, other)\n  * fix problem with \"353\" IRC message (nicklist)\n  * fix problem when nick is truncated by server\n  * fix crash when entering text without any server connection\n  * fix crash when /set command is executed\n  * fix display bug (text was blinking when scrolling)\n  * code cleanup\n\nBuild::\n\n  * add ./configure script to build WeeChat\n\n[[v0.0.2]]\n== Version 0.0.2 (2003-10-05)\n\nNew features::\n\n  * add commands /rehash and /restart\n  * and command and auto-join channels when connected to server\n  * new commands for alias: /alias, /unalias (new section in config file)\n  * config is now saved automatically when quitting WeeChat, add /save command\n  * new commands for servers: /server, /connect, /disconnect\n  * add autoconnect flag for each server in config file\n  * add \"look_set_title\" option in config file\n  * term window title is modified with WeeChat name and version\n  * CTCP version returns more info (about OS)\n\nBug fixes::\n\n  * fix nicklist display bug\n  * fix crash when sending command which can only be received\n\n[[v0.0.1]]\n== Version 0.0.1 (2003-09-27)\n\nNew features::\n\n  * ncurses GUI with color output\n  * multi-servers\n  * channel windows, with nicklist (position: top, bottom, left or right)\n  * private windows\n  * IRC commands: away, ctcp, deop, devoice, invite, join, kick, kill, list, me, mode, msg, names, nick, notice, op, oper, part, ping, pong, quit, quote, topic, version, voice, whois\n  * WeeChat commands: clear, help, set (partial)\n  * many config options\n  * log file (~/.weechat/weechat.log)\n  * nicklist can be moved on top, bottom, left or right of window\n", "/*\n * relay-websocket.c - websocket server functions for relay plugin (RFC 6455)\n *\n * Copyright (C) 2013-2021 S\u00e9bastien Helleu <flashcode@flashtux.org>\n *\n * This file is part of WeeChat, the extensible chat client.\n *\n * WeeChat is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * WeeChat is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n#include <stdlib.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <string.h>\n\n#include \"../weechat-plugin.h\"\n#include \"relay.h\"\n#include \"relay-client.h\"\n#include \"relay-config.h\"\n#include \"relay-websocket.h\"\n\n\n/*\n * globally unique identifier that is concatenated to HTTP header\n * \"Sec-WebSocket-Key\"\n */\n#define WEBSOCKET_GUID \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"\n\n\n/*\n * Checks if a message is a HTTP GET with resource \"/weechat\".\n *\n * Returns:\n *   1: message is a HTTP GET with resource \"/weechat\"\n *   0: message is NOT a HTTP GET with resource \"/weechat\"\n */\n\nint\nrelay_websocket_is_http_get_weechat (const char *message)\n{\n    /* the message must start with \"GET /weechat\" */\n    if (strncmp (message, \"GET /weechat\", 12) != 0)\n        return 0;\n\n    /* after \"GET /weechat\", only a new line or \" HTTP\" is allowed */\n    if ((message[12] != '\\r') && (message[12] != '\\n')\n        && (strncmp (message + 12, \" HTTP\", 5) != 0))\n    {\n        return 0;\n    }\n\n    /* valid HTTP GET for resource \"/weechat\" */\n    return 1;\n}\n\n/*\n * Saves a HTTP header in hashtable \"http_header\" of client.\n */\n\nvoid\nrelay_websocket_save_header (struct t_relay_client *client,\n                             const char *message)\n{\n    char *pos, *name;\n    const char *ptr_value;\n\n    /* ignore the \"GET\" request */\n    if (strncmp (message, \"GET \", 4) == 0)\n        return;\n\n    pos = strchr (message, ':');\n\n    /* not a valid header */\n    if (!pos || (pos == message))\n        return;\n\n    /* get header name, which is case-insensitive */\n    name = weechat_strndup (message, pos - message);\n    if (!name)\n        return;\n    weechat_string_tolower (name);\n\n    /* get pointer on header value */\n    ptr_value = pos + 1;\n    while (ptr_value[0] == ' ')\n    {\n        ptr_value++;\n    }\n\n    /* add header in the hashtable */\n    weechat_hashtable_set (client->http_headers, name, ptr_value);\n\n    free (name);\n}\n\n/*\n * Checks if a client handshake is valid.\n *\n * A websocket query looks like:\n *   GET /weechat HTTP/1.1\n *   Upgrade: websocket\n *   Connection: Upgrade\n *   Host: myhost:5000\n *   Origin: https://example.org\n *   Pragma: no-cache\n *   Cache-Control: no-cache\n *   Sec-WebSocket-Key: fo1J9uHSsrfDP3BkwUylzQ==\n *   Sec-WebSocket-Version: 13\n *   Sec-WebSocket-Extensions: x-webkit-deflate-frame\n *   Cookie: csrftoken=acb65377798f32dc377ebb50316a12b5\n *\n * Expected HTTP headers with values are:\n *\n *   header              | value\n *   --------------------+----------------\n *   \"Upgrade\"           | \"websocket\"\n *   \"Sec-WebSocket-Key\" | non-empty value\n *\n * If option relay.network.websocket_allowed_origins is set, the HTTP header\n * \"Origin\" is checked against this regex. If header \"Origin\" is not set or does\n * not match regex, the handshake is considered as invalid.\n *\n * Returns:\n *    0: handshake is valid\n *   -1: handshake is invalid (headers missing or with bad value)\n *   -2: origin is not allowed (option relay.network.websocket_allowed_origins)\n */\n\nint\nrelay_websocket_client_handshake_valid (struct t_relay_client *client)\n{\n    const char *value;\n\n    /* check if we have header \"Upgrade\" with value \"websocket\" */\n    value = weechat_hashtable_get (client->http_headers, \"upgrade\");\n    if (!value)\n        return -1;\n    if (weechat_strcasecmp (value, \"websocket\") != 0)\n        return -1;\n\n    /* check if we have header \"Sec-WebSocket-Key\" with non-empty value */\n    value = weechat_hashtable_get (client->http_headers, \"sec-websocket-key\");\n    if (!value || !value[0])\n        return -1;\n\n    if (relay_config_regex_websocket_allowed_origins)\n    {\n        value = weechat_hashtable_get (client->http_headers, \"origin\");\n        if (!value || !value[0])\n            return -2;\n        if (regexec (relay_config_regex_websocket_allowed_origins, value, 0,\n                     NULL, 0) != 0)\n        {\n            return -2;\n        }\n    }\n\n    /* client handshake is valid */\n    return 0;\n}\n\n/*\n * Builds the handshake that will be returned to client, to initialize and use\n * the websocket.\n *\n * Returns a string with content of handshake to send to client, it looks like:\n *   HTTP/1.1 101 Switching Protocols\n *   Upgrade: websocket\n *   Connection: Upgrade\n *   Sec-WebSocket-Accept: 73OzoF/IyV9znm7Tsb4EtlEEmn4=\n *\n * Note: result must be freed after use.\n */\n\nchar *\nrelay_websocket_build_handshake (struct t_relay_client *client)\n{\n    const char *sec_websocket_key;\n    char *key, sec_websocket_accept[128], handshake[1024], hash[160 / 8];\n    int length, hash_size;\n\n    sec_websocket_key = weechat_hashtable_get (client->http_headers,\n                                               \"sec-websocket-key\");\n    if (!sec_websocket_key || !sec_websocket_key[0])\n        return NULL;\n\n    length = strlen (sec_websocket_key) + strlen (WEBSOCKET_GUID) + 1;\n    key = malloc (length);\n    if (!key)\n        return NULL;\n\n    /*\n     * concatenate header \"Sec-WebSocket-Key\" with the GUID\n     * (globally unique identifier)\n     */\n    snprintf (key, length, \"%s%s\", sec_websocket_key, WEBSOCKET_GUID);\n\n    /* compute 160-bit SHA1 on the key and encode it with base64 */\n    if (!weechat_crypto_hash (key, strlen (key), \"sha1\", hash, &hash_size))\n    {\n        free (key);\n        return NULL;\n    }\n    if (weechat_string_base_encode (64, hash, hash_size,\n                                    sec_websocket_accept) < 0)\n    {\n        sec_websocket_accept[0] = '\\0';\n    }\n\n    free (key);\n\n    /* build the handshake (it will be sent as-is to client) */\n    snprintf (handshake, sizeof (handshake),\n              \"HTTP/1.1 101 Switching Protocols\\r\\n\"\n              \"Upgrade: websocket\\r\\n\"\n              \"Connection: Upgrade\\r\\n\"\n              \"Sec-WebSocket-Accept: %s\\r\\n\"\n              \"\\r\\n\",\n              sec_websocket_accept);\n\n    return strdup (handshake);\n}\n\n/*\n * Sends a HTTP message to client.\n *\n * Argument \"http\" is a HTTP code + message, for example:\n * \"403 Forbidden\".\n */\n\nvoid\nrelay_websocket_send_http (struct t_relay_client *client,\n                           const char *http)\n{\n    char *message;\n    int length;\n\n    length = 32 + strlen (http) + 1;\n    message = malloc (length);\n    if (message)\n    {\n        snprintf (message, length, \"HTTP/1.1 %s\\r\\n\\r\\n\", http);\n        relay_client_send (client, RELAY_CLIENT_MSG_STANDARD,\n                           message, strlen (message), NULL);\n        free (message);\n    }\n}\n\n/*\n * Decodes a websocket frame.\n *\n * Returns:\n *   1: frame decoded successfully\n *   0: error decoding frame (connection must be closed if it happens)\n */\n\nint\nrelay_websocket_decode_frame (const unsigned char *buffer,\n                              unsigned long long buffer_length,\n                              unsigned char *decoded,\n                              unsigned long long *decoded_length)\n{\n    unsigned long long i, index_buffer, length_frame_size, length_frame;\n    unsigned char opcode;\n\n    *decoded_length = 0;\n    index_buffer = 0;\n\n    /* loop to decode all frames in message */\n    while (index_buffer + 1 < buffer_length)\n    {\n        opcode = buffer[index_buffer] & 15;\n\n        /*\n         * check if frame is masked: client MUST send a masked frame; if frame is\n         * not masked, we MUST reject it and close the connection (see RFC 6455)\n         */\n        if (!(buffer[index_buffer + 1] & 128))\n            return 0;\n\n        /* decode frame */\n        length_frame_size = 1;\n        length_frame = buffer[index_buffer + 1] & 127;\n        index_buffer += 2;\n        if (index_buffer >= buffer_length)\n            return 0;\n        if ((length_frame == 126) || (length_frame == 127))\n        {\n            length_frame_size = (length_frame == 126) ? 2 : 8;\n            if (index_buffer + length_frame_size > buffer_length)\n                return 0;\n            length_frame = 0;\n            for (i = 0; i < length_frame_size; i++)\n            {\n                length_frame += (unsigned long long)buffer[index_buffer + i] << ((length_frame_size - i - 1) * 8);\n            }\n            index_buffer += length_frame_size;\n        }\n\n        /* read masks (4 bytes) */\n        if (index_buffer + 4 > buffer_length)\n            return 0;\n        int masks[4];\n        for (i = 0; i < 4; i++)\n        {\n            masks[i] = (int)((unsigned char)buffer[index_buffer + i]);\n        }\n        index_buffer += 4;\n\n        /* copy opcode in decoded data */\n        switch (opcode)\n        {\n            case WEBSOCKET_FRAME_OPCODE_PING:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_PING;\n                break;\n            case WEBSOCKET_FRAME_OPCODE_CLOSE:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_CLOSE;\n                break;\n            default:\n                decoded[*decoded_length] = RELAY_CLIENT_MSG_STANDARD;\n                break;\n        }\n        *decoded_length += 1;\n\n        /* decode data using masks */\n        if ((length_frame > buffer_length)\n            || (index_buffer + length_frame > buffer_length))\n        {\n            return 0;\n        }\n        for (i = 0; i < length_frame; i++)\n        {\n            decoded[*decoded_length + i] = (int)((unsigned char)buffer[index_buffer + i]) ^ masks[i % 4];\n        }\n        decoded[*decoded_length + length_frame] = '\\0';\n        *decoded_length += length_frame + 1;\n        index_buffer += length_frame;\n    }\n\n    return 1;\n}\n\n/*\n * Encodes data in a websocket frame.\n *\n * Returns websocket frame, NULL if error.\n * Argument \"length_frame\" is set with the length of frame built.\n *\n * Note: result must be freed after use.\n */\n\nchar *\nrelay_websocket_encode_frame (int opcode,\n                              const char *buffer,\n                              unsigned long long length,\n                              unsigned long long *length_frame)\n{\n    unsigned char *frame;\n    unsigned long long index;\n\n    *length_frame = 0;\n\n    frame = malloc (length + 10);\n    if (!frame)\n        return NULL;\n\n    frame[0] = 0x80;\n    frame[0] |= opcode;\n\n    if (length <= 125)\n    {\n        /* length on one byte */\n        frame[1] = length;\n        index = 2;\n    }\n    else if (length <= 65535)\n    {\n        /* length on 2 bytes */\n        frame[1] = 126;\n        frame[2] = (length >> 8) & 0xFF;\n        frame[3] = length & 0xFF;\n        index = 4;\n    }\n    else\n    {\n        /* length on 8 bytes */\n        frame[1] = 127;\n        frame[2] = (length >> 56) & 0xFF;\n        frame[3] = (length >> 48) & 0xFF;\n        frame[4] = (length >> 40) & 0xFF;\n        frame[5] = (length >> 32) & 0xFF;\n        frame[6] = (length >> 24) & 0xFF;\n        frame[7] = (length >> 16) & 0xFF;\n        frame[8] = (length >> 8) & 0xFF;\n        frame[9] = length & 0xFF;\n        index = 10;\n    }\n\n    /* copy buffer after length */\n    memcpy (frame + index, buffer, length);\n\n    *length_frame = index + length;\n\n    return (char *)frame;\n}\n", "#!/bin/sh\n#\n# Copyright (C) 2015-2021 S\u00e9bastien Helleu <flashcode@flashtux.org>\n#\n# This file is part of WeeChat, the extensible chat client.\n#\n# WeeChat is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# WeeChat is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n#\n\n#\n# Returns current stable or devel version of WeeChat.\n#\n# Syntax:\n#   version.sh stable|devel|devel-full|devel-major|devel-minor|devel-patch\n#\n#     stable       the current stable (e.g. 1.3)\n#     devel        the current devel (e.g. 1.4)\n#     devel-full   the full name of devel (e.g. 1.4-dev or 1.4-rc1)\n#     devel-major  the major version of devel (e.g. 1)\n#     devel-minor  the minor version of devel (e.g. 4-dev)\n#     devel-patch  the patch version of devel (e.g. 2 for version 1.4.2)\n#\n\nWEECHAT_STABLE=3.2\nWEECHAT_DEVEL=3.2.1\nWEECHAT_DEVEL_FULL=3.2.1-dev\n\nif [ $# -lt 1 ]; then\n    echo >&2 \"Syntax: $0 stable|devel|devel-full|devel-major|devel-minor|devel-patch\"\n    exit 1\nfi\n\ncase $1 in\n    stable ) echo $WEECHAT_STABLE ;;\n    devel ) echo $WEECHAT_DEVEL ;;\n    devel-full ) echo $WEECHAT_DEVEL_FULL ;;\n    devel-major ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f1 ;;\n    devel-minor ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f2 ;;\n    devel-patch ) echo $WEECHAT_DEVEL_FULL | cut -d'.' -f3- ;;\n    * ) echo >&2 \"ERROR: unknown version.\"\n        exit 1 ;;\nesac\n"], "filenames": ["ChangeLog.adoc", "src/plugins/relay/relay-websocket.c", "version.sh"], "buggy_code_start_loc": [16, 281, 36], "buggy_code_end_loc": [16, 335, 38], "fixing_code_start_loc": [17, 281, 36], "fixing_code_end_loc": [24, 342, 38], "type": "CWE-125", "message": "WeeChat before 3.2.1 allows remote attackers to cause a denial of service (crash) via a crafted WebSocket frame that trigger an out-of-bounds read in plugins/relay/relay-websocket.c in the Relay plugin.", "other": {"cve": {"id": "CVE-2021-40516", "sourceIdentifier": "cve@mitre.org", "published": "2021-09-05T18:15:07.260", "lastModified": "2021-10-07T17:55:02.937", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "WeeChat before 3.2.1 allows remote attackers to cause a denial of service (crash) via a crafted WebSocket frame that trigger an out-of-bounds read in plugins/relay/relay-websocket.c in the Relay plugin."}, {"lang": "es", "value": "WeeChat versiones anteriores a 3.2.1, permite a atacantes remotos causar una denegaci\u00f3n de servicio (bloqueo) por medio de un marco WebSocket dise\u00f1ado que desencadena una lectura fuera de l\u00edmites en el archivo plugins/relay/relay-websocket.c en el plugin Relay"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-125"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:weechat:weechat:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.4.1", "versionEndExcluding": "3.2.1", "matchCriteriaId": "D3D33235-80A3-4057-865F-9925D5569AD6"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://github.com/weechat/weechat/commit/8b1331f98de1714bae15a9ca2e2b393ba49d735b", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2021/09/msg00018.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://weechat.org/doc/security/", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/weechat/weechat/commit/8b1331f98de1714bae15a9ca2e2b393ba49d735b"}}