{"buggy_code": ["<?php\n/*\n * e107 website system\n *\n * Copyright (C) 2008-2012 e107 Inc (e107.org)\n * Released under the terms and conditions of the\n * GNU General Public License (http://www.gnu.org/licenses/gpl.txt)\n *\n * Ban List Management\n *\n *\n*/\n\nrequire_once('../class2.php');\n\nif (!getperms('4'))\n{\n\te107::redirect('admin');\n\texit();\n}\n\nrequire_once(e_HANDLER.'iphandler_class.php');\t\t// This is probably already loaded in class2.php\n\ne107::coreLan('banlist', true);\n\ne107::js('footer-inline', \"\n\n\t\t$('#useip').click(function (event) {\n\n\t\t\tvar id = $(this).attr('data-ip');\n\t\t\t$('#banlist-ip').val(id);\n\t\t\tevent.preventDefault();\n\t\t});\n\n\");\n\n\nclass banlist_admin extends e_admin_dispatcher\n{\n\n\tprotected $modes = array(\t\n\t\n\t\t'main'\t=> array(\n\t\t\t'controller' \t=> 'banlist_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'banlist_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\t\t'white'\t=> array(\n\t\t\t'controller' \t=> 'banlist_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'banlist_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\t\t'failed'\t=> array(\n\t\t\t'controller' \t=> 'failed_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'failed_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\n\t);\t\n\t\n\t\n\tprotected $adminMenu = array(\n\n\t\t'main/list'\t\t\t=> array('caption'=> BANLAN_122, 'perm' => '4'),\n\t\t'main/create'\t\t=> array('caption'=> BANLAN_123, 'perm' => '4'),\n\t\t'other'            => array('divider'=>true),\n\t\t// Use FILTER to view whitelist instead. \n\t\t'white/list'\t\t=> array('caption'=> BANLAN_52, 'perm' => '4'),\n\t\t'white/create'\t\t=> array('caption'=> BANLAN_53, 'perm' => '4'),\n\n\t\t'other1'            => array('divider'=>true),\n\n\t\t'failed/list'       => array('caption'=> ADLAN_146, 'perm'=>'4'),\n\n\t\t'other2'            => array('divider'=>true),\n\t\t'main/transfer'\t\t=> array('caption'=> BANLAN_35, 'perm' => '4'),\n\t\t'main/times'\t\t=> array('caption'=> BANLAN_15, 'perm' => '0'),\n\t\t'main/options'\t\t=> array('caption'=> LAN_OPTIONS, 'perm' => '0'),\n//\t\t'main/banlog'\t\t=> array('caption'=> BANLAN_81, 'perm' => '0'),\n\t);\n\n\tprotected $adminMenuAliases = array(\n\t\t'main/edit'\t=> 'main/list'\t\t\t\t\t\t\n\t);\t\n\t\n\tprotected $menuTitle = BANLAN_16;\n\n\tprotected $adminMenuIcon = 'e-banlist-24';\n}\n\n\n\n\n\t\t\t\t\nclass banlist_ui extends e_admin_ui\n{\n\t\t\t\n\t\tprotected $pluginTitle\t\t= BANLAN_16;\n\t\tprotected $eventName\t\t= 'ban';\n\t\tprotected $table\t\t\t= 'banlist';\n\t\tprotected $pid\t\t\t\t= 'banlist_id'; \n\t\tprotected $perPage \t\t\t= 10;\n\t\tprotected $listQry          = \"SELECT * FROM `#banlist` WHERE banlist_bantype != 100 \";\n\t\tprotected $listOrder\t\t= 'banlist_datestamp DESC';\n\n\t\tprotected $fields \t= array (  \n\t\t  'checkboxes' \t\t\t=>   array ( 'title' => '', \t\t\t\t'type' => null, \t\t'data' => null, 'width' => '5%', 'thclass' => 'center', 'forced' => '1', 'class' => 'center', 'toggle' => 'e-multiselect',  ),\n\t\t  'banlist_id'\t\t\t =>  array ( 'title' => LAN_ID, \t\t\t'data' => 'int',        'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_ip' \t\t\t=>   array ( 'title' => BANLAN_126, \t\t\t'type' => 'method', \t\t'data' => 'str', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_bantype' \t=>   array ( 'title' => LAN_TYPE, \t\t\t'type' => 'method', \t'data' => 'str', 'width' => 'auto', 'filter'=>true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_datestamp' \t=>   array ( 'title' => LAN_DATESTAMP, \t\t'type' => 'datestamp', \t'data' => 'int', 'width' => 'auto', 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => 'auto=1&hidden=1&readonly=1', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_banexpires' \t=>   array ( 'title' => BANLAN_124,\t \t\t'type' => 'method', \t'data' => 'int', 'inline'=>true, 'width' => 'auto', 'batch' => true, 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_admin' \t\t=>   array ( 'title' => 'Admin', \t\t\t'type' => 'text', \t    'data' => 'int', 'noedit'=>true, 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'center', 'thclass' => 'center',  ),\n\t\t  'banlist_reason' \t\t=>   array ( 'title' => BANLAN_7, \t\t\t'type' => 'text', \t\t'data' => 'str', 'inline'=>true, 'width' => 'auto', 'help' => '', 'readParms' => 'constant=1', 'writeParms' => array('size'=>'xxlarge'), 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_notes' \t\t=>   array ( 'title' => BANLAN_19, \t\t\t'type' => 'text', \t\t'data' => 'str', 'inline'=>true, 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => array('size'=>'xxlarge'), 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'options' \t\t\t=>   array ( 'title' => LAN_OPTIONS, \t\t'type' => '', \t\t\t'data' => '', 'width' => '10%', 'thclass' => 'center last', 'class' => 'center last', 'forced' => '1',  ),\n\t\t);\t\t\n\t\t\n\t\tprotected $fieldpref = array('checkboxes', 'banlist_ip', 'banlist_bantype', 'banlist_datestamp', 'banlist_banexpires', 'banlist_reason', 'banlist_notes', 'options');\n\n\t\t\n\t//\tprotected $pref = array(\n\t//\t\t'pref_type'\t   \t\t\t\t=> array('title'=> 'type', 'type'=>'text', 'data' => 'string', 'validate' => true),\n\t//\t\t'pref_folder' \t\t\t\t=> array('title'=> 'folder', 'type' => 'boolean', 'data' => 'integer'),\n\t//\t\t'pref_name' \t\t\t\t=> array('title'=> 'name', 'type' => 'text', 'data' => 'string', 'validate' => 'regex', 'rule' => '#^[\\w]+$#i', 'help' => 'allowed characters are a-zA-Z and underscore')\n\t//\t);\n\n\n\t\tfunction CreateObserver()\n\t\t{\n\t\t\tparent::CreateObserver();\n\t\t\t$this->fields['banlist_ip']['title']= BANLAN_5;\n\t\t}\n\n\t\tfunction EditObserver()\n\t\t{\n\t\t\tparent::EditObserver();\n\t\t\t$this->fields['banlist_ip']['title']= BANLAN_5;\n\t\t}\n\n\t\t\n\t\t// optional\n\t\tpublic function init()\n\t\t{\n\n\t\t\tif($this->getMode() == 'white')\n\t\t\t{\n\t\t\t\tif($this->getAction() == 'list')\n\t\t\t\t{\n\t\t\t\t\t$this->listQry = \"SELECT * FROM `#banlist` WHERE banlist_bantype = 100 \";\n\t\t\t\t}\n\n\n\t\t\t\tif($this->getAction() == 'create')\n\t\t\t\t{\n\t\t\t\t\t$myip = e107::getIPHandler()->getIP(true);\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['tdClassRight']  = 'form-inline';\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['pre'] = \"<div class='input-append'>\";\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['post'] = \"<button class='btn btn-primary' id='useip' data-ip='{$myip}'>\".BANLAN_125.\"</button></div>\"; // USERIP;\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (isset($_POST['update_ban_prefs']))\t\t// Update ban messages\n\t\t\t{\n\t\t\t\t$this->timesPageSave(); \t\n\t\t\t}\n\t\t}\n\n\n\t\tpublic function beforeCreate($new_data, $old_data, $id)\n\t\t{\n\t\t\t$new_data['banlist_admin'] = ADMINID;\n\n\t\t\tif(filter_var($new_data['banlist_ip'], FILTER_VALIDATE_IP)) // check it's an IP\n\t\t\t{\n\t\t\t\t$new_data['banlist_ip'] = e107::getIPHandler()->ipEncode($new_data['banlist_ip']);\n\t\t\t}\n\n\t\t\treturn $new_data;\n\t\t}\n\n\t\tpublic function beforeUpdate($new_data, $old_data, $id)\n\t\t{\n\t\t\t$new_data['banlist_admin'] = ADMINID;\n\n\t\t\tif(filter_var($new_data['banlist_ip'], FILTER_VALIDATE_IP)) // check it's an IP\n\t\t\t{\n\t\t\t\t$new_data['banlist_ip'] = e107::getIPHandler()->ipEncode($new_data['banlist_ip']);\n\t\t\t}\n\n\t\t\treturn $new_data;\n\t\t}\n\n\n\n\n\n\t\tpublic function afterCreate($new_data, $old_data, $id)\n\t\t{\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\t\tpublic function afterUpdate($new_data, $old_data, $id)\n\t\t{\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\t\tpublic function afterDelete($deleted_data, $id, $deleted_check)\n\t\t{\n\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\n\t\tpublic function addPage()\n\t\t{\n\t\t\t//$ns = e107::getRender();\n\t\t\t//$text = 'Hello World!';\n\t\t\t//$ns->tablerender('Hello',$text);\t\t\t\t\n\t\t}\n\n\t\t\n\t\tpublic function transferPage()\n\t\t{\n\t\t\t//FIXME Put Import code in here. \n\t\t}\n\t\t\n\t\n\t\t\n\t\tprivate function timesPageSave()\n\t\t{\n\n\n\t\t\t$ipAdministrator = new banlistManager;\n\t\t\t$tp = e107::getParser();\n\t\t\t$changed = false;\n\n\t\t\t$pref = array();\n\n\t\t\t$reasonList = $ipAdministrator->getValidReasonList();\n\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t{\n\t\t\t\t$i = abs($bt) + 1;\t\t// Forces a single-digit positive number for part of field name\n\t\t\t\t$t1 = $tp->toDB(varset($_POST['ban_text_'.($i)],''));\n\t\t\t\t$t2 = intval(varset($_POST['ban_time_'.($i)],0));\n\t\t\t\tif (!isset($pref['ban_messages'][$bt]) || ($pref['ban_messages'][$bt] != $t1))\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_messages'][$bt] = $t1;\n\t\t\t\t\t$changed = TRUE;\n\t\t\t\t}\n\t\t\t\tif (!isset($pref['ban_durations'][$bt]) || ($pref['ban_durations'][$bt] != $t2))\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_durations'][$bt] = $t2;\n\t\t\t\t\t$changed = TRUE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($changed && !empty($pref))\n\t\t\t{\n\t\t\t// @todo write actual prefs changes to log file (different methods for prefs?)\n\t\t\t\te107::getConfig()->setPref($pref)->save(); \n\t\t\t// \tsave_prefs();\n\t\t\t\t/*****************************************\n\t\t\t\t\tWrite messages and times to disc file\n\t\t\t\t *****************************************/\n\t\t\t\t$ipAdministrator->writeBanMessageFile();\n\t\t\t\tbanlist_adminlog('08','');\n\t\t\t\t//$ns->tablerender(BANLAN_9, \"<div style='text-align:center'>\".BANLAN_33.'</div>');\n\t\t\t//\t$mes->addSuccess(BANLAN_33);\n\t\t\t}\t\n\t\t\t\n\t\t\t\n\t\t}\n\n\n\n\t\t\n\t\tprotected function timesPage()\n\t\t{\n\t\t\tif (!getperms('0'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t$pref = e107::getPref();\n\t\t\t$tp = e107::getParser();\t\t\n\t\t\t$frm = e107::getForm();\n\t\t\t$mes = e107::getMessage();\n\t\t\t\n\t\t\t$ipAdministrator = new banlistManager;\n\t\t\t\t\t\t\n\t\t\t$text = '';\n\t\t\tif ((!isset($pref['ban_messages'])) || !is_array($pref['ban_messages']))\n\t\t\t{\n\t\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_messages'][$bt] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((!isset($pref['ban_durations'])) || !is_array($pref['ban_durations']))\n\t\t\t{\n\t\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_durations'][$bt] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$text .= \"\n\t\t\t\t<form method='post' action='\".e_SELF.'?'.e_QUERY.\"' id='ban_options'>\n\t\t\t\t\t<fieldset id='core-banlist-times'>\n\t\t\t\t\t\t<legend class='e-hideme'>\".BANLAN_77.\"</legend>\n\t\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col style='width: 20%' />\n\t\t\t\t\t\t\t\t<col style='width: 65%' />\n\t\t\t\t\t\t\t\t<col style='width: 15%' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>\".BANLAN_28.\"</th>\n\t\t\t\t\t\t\t\t\t<th>\".BANLAN_29.\"<br />\".BANLAN_31.\"</th>\n\t\t\t\t\t\t\t\t\t<th class='center last'>\".BANLAN_30.\"</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\";\n\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t{\n\t\t\t\t$i = abs($bt) + 1;\t\t// Forces a single-digit positive number\n\t\t\t\t$text .= \"\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<strong>\".$ipAdministrator->getBanTypeString($bt, FALSE).\"</strong>\n\t\t\t\t\t\t\t\t<div class='field-help'>\".$ipAdministrator->getBanTypeString($bt, TRUE).\"</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t\t\t\".$frm->textarea('ban_text_'.($i), $pref['ban_messages'][$bt], 4, 120, array('size'=>'xxlarge')).\"\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='center'>\".ban_time_dropdown('', BANLAN_32, $pref['ban_durations'][$bt], 'ban_time_'.($i)).\"</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\";\n\t\t\t}\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\t\".$frm->admin_button('update_ban_prefs', LAN_UPDATE, 'update').\"\n\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\t\";\n\t\n\t\t\techo $mes->render().$text; \n\t\t}\t\t\n\n\t\t\n\t\tprotected function optionsPage()\n\t\t{\n\t\t\t//FIXME Put Options code in here. \n\t\t}\t\t\t\t\n\n\t\tprotected function banlogPage()\n\t\t{\n\t\t\t//FIXME Put LogPage code in here. \n\t\t}\t\n\n}\n\t\t\t\t\n\n\nclass banlist_form_ui extends e_admin_form_ui\n{\n\n\t// Custom Method/Function\n\tfunction banlist_reason($curVal,$mode) //TODO\n\t{\n\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'write': // Edit Page\n\t\t\t\treturn $this->renderElement('banlist_reason', $curVal, array());\n\t\t\t\tbreak;\n\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Custom Method/Function\n\tfunction banlist_ip($curVal,$mode) //TODO\n\t{\n\n\t\tif(!empty($curVal))\n\t\t{\n\t\t\t$tmp = explode(\":\",$curVal);\n\n\t\t\tif(count($tmp) === 8)\n\t\t\t{\n\t\t\t\t$curVal = e107::getIPHandler()->ipDecode($curVal);\n\t\t\t}\n\t\t}\n\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\treturn $curVal;\n\t\t\t\tbreak;\n\n\t\t\tcase 'write': // Edit Page\n\n\t\t\t\treturn $this->text('banlist_ip', $curVal, array());\n\t\t\t\tbreak;\n\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t\n\t// Custom Method/Function \n\tfunction banlist_bantype($curVal,$mode)\n\t{\n\t\n\t\t$ipAdministrator = new banlistManager;\n\t\t\n\t\t// print_a($ipAdministrator->banTypes);\n\t\t \t\t\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\treturn \"<div class='nowrap' title='\".$ipAdministrator->getBanTypeString($curVal, TRUE).\"'>\".$ipAdministrator->getBanTypeString($curVal, FALSE).\"</div>\";\t\t\t\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'write': // Edit Page\n\n\t\t\t\tif ($this->getController()->getMode() == 'white')\n\t\t\t\t{\n\t\t\t\t\treturn $this->hidden('banlist_bantype',eIPHandler::BAN_TYPE_WHITELIST).\"<span class='label label-success'>\".BANLAN_120.\"</span>\";\n\t\t\t\t}\n\t\t\t\telseif($this->getController()->getAction() == 'create')\n\t\t\t\t{\n\t\t\t\t\treturn $this->hidden('banlist_bantype',eIPHandler::BAN_TYPE_MANUAL).\"<span class='label label-important label-danger'>\".BANLAN_121.\"</span>\";\n\t\t\t\t}\n\n\n\n\t\t\t\treturn $this->selectbox('banlist_bantype',$ipAdministrator->banTypes, $curVal);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\t\t\t\treturn  $ipAdministrator->banTypes; \n\t\t\tbreak;\n\t\t}\n\t}\n\n\t\n\t// Custom Method/Function \n\tfunction banlist_banexpires($curVal,$mode)\n\t{\n\t\t\n\t\t$pref = e107::getPref();\n\t\t$date = e107::getDate();\n\t\t$opts = $this->banexpires();\n\t\t\t \t\t\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\t$id = $this->getController()->getListModel()->get('banlist_ip');\n\t\t\t//\t$val =  ($curVal ? strftime($pref['ban_date_format'], $curVal).(($curVal < time()) ? ' ('.BANLAN_34.')' : '') : LAN_NEVER); // .\"<br />\".$this->banexpires();\n\t\t\t//\t$val .= \" (\".$curVal.\")\";\n\t\t\t\t// $mod = preg_replace('/[^\\w]/', '', vartrue($_GET['mode'], ''));\n\t\t\t\t$val = vartrue($curVal) ? $date->computeLapse(time(), $curVal) : LAN_NEVER;\n\n\t\t\t\t$val = str_replace(\"ago\", \"\", $val); // quick fix for the 'ago'.\n\t\t\t\t\n\t\t\t\tif(vartrue($curVal) && $curVal < time())\n\t\t\t\t{\n\t\t\t\t\t$val = \tBANLAN_34;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t$source = str_replace('\"',\"'\",json_encode($opts));\n\t\t\t\treturn \"<a class='e-tip e-editable' data-name='banlist_banexpires' data-source=\\\"\".$source.\"\\\"  data-type='select' data-pk='\".$id.\"' data-url='\".e_SELF.\"?mode=&amp;action=inline&amp;id={$id}&amp;ajax_used=1' href='#'>\".$val.\"</a>\";\n\t\t\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'write': // Edit Page\n\t\t\t\tif(!empty($curVal))\n\t\t\t\t{\n\t\t\t\t\t$opts[$curVal] = e107::getParser()->toDate($curVal, 'short');\n\t\t\t\t}\n\n\t\t\t\treturn $this->selectbox('banlist_banexpires',$opts, $curVal);\n\t\t\t\t// return $frm->text('banlist_banexpires',$curVal);\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\t\t\t\treturn  false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tfunction banexpires()\n\t{\n\t\t$intervals = array(0, 1, 2, 3, 6, 8, 12, 24, 36, 48, 72, 96, 120, 168, 336, 672);\n\n\t\t$opts = array();\n\n\t\tforeach ($intervals as $i)\n\t\t{\n\t\t\t$words = \"\";\n\t\t\t\n\t\t\tif ($i == 0)\n\t\t\t{\n\t\t\t\t$opts[$i]  = LAN_NEVER;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telseif (($i % 24) == 0 && $i !== 24)\n\t\t\t{\n\t\t\t\t$words = floor($i / 24).' '.BANLAN_23;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$words = $i.' '.BANLAN_24;\n\t\t\t}\n\t\t\t\n\t\t\t$calc = time() + ($i * 60 * 60);\n\t\t\t\n\t\t\t$opts[$calc] = $words; \n\t\t}\n\t//\tprint_a($opts);\n\t\treturn $opts;\t\t\n\t}\n\n}\n\n\n\n\n\tclass failed_ui extends e_admin_ui\n\t{\n\n\t\tprotected $pluginTitle\t\t= BANLAN_16;\n\t\tprotected $pluginName\t\t= 'failed_login';\n\t\tprotected $table\t\t\t= 'generic';\n\t\tprotected $pid\t\t\t\t= 'gen_id';\n\t\tprotected $perPage \t\t\t= 10;\n\t\tprotected $listQry\t\t\t= \"SELECT * FROM `#generic` WHERE gen_type='failed_login' \";\n\t\tprotected $listOrder        = \"gen_datestamp DESC\";\n\n\t\tprotected $fields \t\t= array (  'checkboxes' =>   array ( 'title' => '', 'type' => null, 'data' => null, 'width' => '5%', 'thclass' => 'center', 'forced' => '1', 'class' => 'center', 'toggle' => 'e-multiselect',  ),\n\t\t                                    'gen_id' \t\t\t\t=> array ( 'title' => LAN_ID,\t 'nolist'=>true,\t'data' => 'int', 'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t\t//\t  'gen_type' \t\t\t=> array ( 'title' => LAN_BAN, \t'type' => 'method', 'data' => 'str', 'width' => 'auto', 'batch' => true, 'filter' => true, 'inline' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_datestamp' \t\t=> array ( 'title' => LAN_DATESTAMP, 'type' => 'datestamp', 'data' => 'int', 'width' => 'auto', 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_chardata' \t\t=> array ( 'title' => LAN_DESCRIPTION, 'type' => 'method', 'data' => 'str', 'width' => '40%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left', 'filter'=>true ),\n\n\t\t\t//\t  'gen_user_id' \t\t=> array ( 'title' => LAN_BAN, 'type' => 'method', 'batch'=>true, 'data' => 'int', 'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_ip' \t\t\t\t=> array ( 'title' => LAN_IP, 'type' => 'ip', 'data' => 'str', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t\t//\t  'gen_intdata' \t\t=> array ( 'title' =>  LAN_BAN, 'type' => 'method', 'batch'=>true, 'data' => 'int', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'center', 'thclass' => 'center',  ),\n\t\t                                    'options'\t\t\t\t=> array ( 'title' => LAN_OPTIONS, 'type' => null, 'data' => null, 'width' => '10%', 'thclass' => 'center last', 'class' => 'center last', 'forced' => '1', 'readParms'=>'edit=0'  ),\n\t\t);\n\n\t\tprotected $fieldpref = array('gen_datestamp', 'gen_ip', 'gen_chardata');\n\n\t\tprotected $batchOptions = array();\n\n\t\t// optional\n\t\tpublic function init()\n\t\t{\n\t\t\tif($_POST['etrigger_batch'] == 'gen_intdata__1' && count($_POST['e-multiselect'])) // Do we need BAN here?\n\t\t\t{\n\t\t\t\t$dels = implode(',',$_POST['e-multiselect']);\n\t\t\t\t//$e107::getDb()->insert('banlist',\n\t\t\t}\n\n\t\t\t$allFailedTotal = e107::getDB()->count('generic', '(*)', \"gen_type='failed_login'\");\n\n\t\t\t$this->batchOptions = array('delete-all'=>str_replace('[x]', $allFailedTotal, BANLAN_127));\n\n\t\t\tif(!empty($_POST['etrigger_batch']) && $_POST['etrigger_batch'] == \"delete-all\")\n\t\t\t{\n\t\t\t\t$this->deleteAllFailed();\n\t\t\t}\n\n\t\t\n\t\t}\n\n\t\tprivate function deleteAllFailed()\n\t\t{\n\n\t\t\tif(e107::getDB()->delete('generic', \"gen_type='failed_login'\"))\n\t\t\t{\n\t\t\t\te107::getMessage()->addSuccess(LAN_DELETED);\n\t\t\t}\n\t\t}\n\n\t\tpublic function afterDelete($data)\n\t\t{\n\t\t\t//\t$sql2->db_Delete('banlist', \"banlist_ip='{$banIP}'\");\n\t\t}\n\n\t}\n\n\n\n\tclass failed_form_ui extends e_admin_form_ui\n\t{\n\n\n\t\t// Custom Method/Function\n\t\tfunction gen_intdata($curVal,$mode)\n\t\t{\n\t\t\t$frm = e107::getForm();\n\n\t\t\tswitch($mode)\n\t\t\t{\n\t\t\t\tcase 'read': // List Page\n\t\t\t\t\treturn $curVal;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'write': // Edit Page\n\t\t\t\t\treturn $frm->text('gen_type',$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'batch':\n\t\t\t\t\treturn  array(1=>LAN_BAN);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\n\t\t// Custom Method/Function\n\t\tfunction gen_chardata($curVal,$mode)\n\t\t{\n\t\t\t$frm = e107::getForm();\n\n\t\t\tswitch($mode)\n\t\t\t{\n\t\t\t\tcase 'read': // List Page\n\t\t\t\t\treturn str_replace(\":::\",\"<br />\",$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'write': // Edit Page\n\t\t\t\t\treturn $frm->text('gen_chardata',$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'batch':\n\t\t\t\t\t//\treturn  $array;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tnew banlist_admin();\n\nrequire_once(e_ADMIN.\"auth.php\");\ne107::getAdminUI()->runPage();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$e_sub_cat = 'banlist';\nrequire_once('auth.php');\n$frm = e107::getForm();\n// $frm = new e_form(true);\n\n$mes = e107::getMessage();\n\n$pref = e107::getPref();\n\n// Set a default to avoid issues with legacy systems\nif (!isset($pref['ban_date_format'])) $pref['ban_date_format'] = '%H:%M %d-%m-%y';\n\n$ipAdministrator = new banlistManager;\n\n// Character options for import & export\n$separator_char = array(1 => ',', 2 => '|');\n$quote_char = array(1 => '(none)', 2 => \"'\", 3 => '\"');\n\n\n$action = 'list';\nif (e_QUERY)\n{\n\t$tmp = explode('-', e_QUERY);\t\t// Use '-' instead of '.' to avoid confusion with IP addresses\n\t$action = $tmp[0];\n\t$sub_action = varset($tmp[1], '');\n\tif ($sub_action) $sub_action = preg_replace('/[^\\w*@\\.:]*/', '', urldecode($sub_action));\n\t$id = intval(varset($tmp[2], 0));\n\tunset($tmp);\n}\n\nif($_GET['action']) // Temporary Fix. \n{\n\t$action = $_GET['action'];\t\n}\n\n\n\n\n\n$writeBanFile = FALSE;\nif (isset($_POST['ban_ip']))\n{\n\t$_POST['ban_ip'] = trim($_POST['ban_ip']);\n\t$new_ban_ip = preg_replace('/[^\\w*@\\.:]*/', '', urldecode($_POST['ban_ip']));\n\tif ($new_ban_ip != $_POST['ban_ip'])\n\t{\n\t\t$message = BANLAN_27.' '.$new_ban_ip;\n\t\t//$ns->tablerender(BANLAN_9, $message);\n\t\t$mes->add(BANLAN_33, $message);\n\t\t$_POST['ban_ip'] = $new_ban_ip;\n\t}\n\n\tif (isset($_POST['entry_intent']) && (isset($_POST['add_ban']) || isset($_POST['update_ban'])) && $_POST['ban_ip'] != \"\" && strpos($_POST['ban_ip'], ' ') === false)\n\t{\n\t\t/*\t$_POST['entry_intent'] says why we're here:\n\t\t\t\t'edit' \t- Editing blacklist\n\t\t\t\t'add'\t- Adding to blacklist\n\t\t\t\t'whedit' - Editing whitelist\n\t\t\t\t'whadd'\t- Adding to whitelist\n\t\t*/\n\t\tif(e107::getIPHandler()->whatIsThis($new_ban_ip) == 'ip')\n\t\t{\n\t\t\t$new_ban_ip = e107::getIPHandler()->IPencode($new_ban_ip, TRUE); // Normalise numeric IP addresses (allow wildcards)\n\t\t}\n\t\t$new_vals = array('banlist_ip' => $new_ban_ip);\n\t\tif (isset($_POST['add_ban']))\n\t\t{\n\t\t\t$new_vals['banlist_datestamp'] = time();\n\t\t\tif ($_POST['entry_intent'] == 'add') $new_vals['banlist_bantype'] = eIPHandler::BAN_TYPE_MANUAL;\t\t// Manual ban\n\t\t\tif ($_POST['entry_intent'] == 'whadd') $new_vals['banlist_bantype'] = eIPHandler::BAN_TYPE_WHITELIST;\n\t\t}\n\t\t$new_vals['banlist_admin'] = ADMINID;\n\t\t$new_vals['banlist_reason'] = $tp->toDB(varset($_POST['ban_reason'], ''));\n\t\t$new_vals['banlist_notes'] = $tp->toDB($_POST['ban_notes']);\n\t\tif (isset($_POST['ban_time']) && is_numeric($_POST['ban_time']) && (($_POST['entry_intent']== 'edit') || ($_POST['entry_intent'] == 'add')))\n\t\t{\n\t\t\t$bt = intval($_POST['ban_time']);\n\t\t\t$new_vals['banlist_banexpires'] = $bt ? time() + ($bt*60*60) : 0;\n\t\t}\n\t\tif (isset($_POST['add_ban']))\n\t\t{  // Insert new value - can just pass an array\n\t\t\te107::getMessage()->addAuto($sql->db_Insert('banlist', $new_vals), 'insert');\n\t\t\tif ($_POST['entry_intent'] == 'add')\n\t\t\t{\n\t\t\t\tbanlist_adminlog('01', $new_vals['banlist_ip']);\t\t// Write to banlist\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbanlist_adminlog('04', $new_vals['banlist_ip']);\t\t// Write to whitelist\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{  // Update existing value\n\t\t\t$qry = '';\n\t\t\t$spacer = '';\n\t\t\tforeach ($new_vals as $k => $v)\n\t\t\t{\n\t\t\t\t$qry .= $spacer.\"`{$k}`='$v'\";\n\t\t\t\t$spacer = ', ';\n\t\t\t}\n\t\t\te107::getMessage()->addAuto($sql->db_Update('banlist', $qry.\" WHERE banlist_ip='\".$_POST['old_ip'].\"'\"));\n\t\t\tif ($_POST['entry_intent'] == 'edit')\n\t\t\t{\n\t\t\t\tbanlist_adminlog('09',$new_vals['banlist_ip']);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbanlist_adminlog('10',$new_vals['banlist_ip']);\n\t\t\t}\n\t\t}\n\t\tunset($ban_ip);\n\t\t$writeBanFile = TRUE;\n\t}\n}\n\n\n\n// Remove a ban\nif (($action == 'remove' || $action == 'whremove') && isset($_POST['ban_secure'])) \n{\n\t$sql->db_Delete('generic', \"gen_type='failed_login' AND gen_ip='{$sub_action}'\");\n\te107::getMessage()->addAuto($sql->db_Delete('banlist', \"banlist_ip='{$sub_action}'\"), 'delete');\n\tif ($action == \"remove\")\n\t{\n\t\t$action = 'list';\n\t\tbanlist_adminlog('02', $sub_action);\n\t}\n\telse\n\t{\n\t\t$action = 'white';\n\t\tbanlist_adminlog('05', $sub_action);\n\t}\n\t$writeBanFile = TRUE;\n}\n\n\n\n// Update the ban expiry time/date - timed from now (only done on banlist)\nif ($action == 'newtime')\n{\n\t$end_time = $id ? time() + ($id*60*60) : 0;\n\te107::getMessage()->addAuto($sql->db_Update('banlist', 'banlist_banexpires='.intval($end_time).\" WHERE banlist_ip='\".$sub_action.\"'\"));\n\tbanlist_adminlog('03', $sub_action);\n\t$action = 'list';\n\t$writeBanFile = TRUE;\n}\n\n\nif ($writeBanFile)\n{\n/************************************************\n\t\tupdate list of banned IPs\n*************************************************/\n\t$ipAdministrator->writeBanListFiles('ip,htaccess');\n\tif (!$ipAdministrator->doesMessageFileExist())\n\t{\n\t\t$ipAdministrator->writeBanMessageFile();\t\t// Message file must exist - may not on fresh site\n\t\tbanlist_adminlog('08','');\n\t\t$mes->addSuccess(LAN_UPDATED);\n\t}\n}\n\n\n\n/**\n *\t@todo - eliminate extract();\n */\n// Edit modes - get existing entry\nif ($action == 'edit' || $action == 'whedit')\n{\n\t$sql->db_Select('banlist', '*', \"banlist_ip='{$sub_action}'\");\n\t$row = $sql->db_Fetch();\n\textract($row);\t\t\t\t//FIXME - kill extract()\n}\nelse\n{\n\tunset($banlist_ip, $banlist_reason);\n\tif (e_QUERY && ($action == 'add' || $action == 'whadd') && strpos($_SERVER[\"HTTP_REFERER\"], \"userinfo\"))\n\t{\n\t\t$banlist_ip = $sub_action;\n\t}\n}\n\n\n\n/**\n *\tCreate dropdown with options for ban time - uses internal fixed list of reasonable values\n */\nfunction ban_time_dropdown($click_js = '', $zero_text = LAN_NEVER, $curval = -1, $drop_name = 'ban_time')\n{\n\t$frm = e107::getForm();\n\t$intervals = array(0, 1, 2, 3, 6, 8, 12, 24, 36, 48, 72, 96, 120, 168, 336, 672);\n\n\t$ret = $frm->select_open($drop_name, array('other' => $click_js, 'id' => false));\n\t$ret .= $frm->option('&nbsp;', '');\n\tforeach ($intervals as $i)\n\t{\n\t\tif ($i == 0)\n\t\t{\n\t\t\t$words = $zero_text ? $zero_text : LAN_NEVER;\n\t\t}\n\t\telseif (($i % 24) == 0)\n\t\t{\n\t\t\t$words = floor($i / 24).' '.BANLAN_23;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$words = $i.' '.BANLAN_24;\n\t\t}\n\t\t$ret .= $frm->option($words, $i, ($curval == $i));\n\t}\n\t$ret .= '</select>';\n\treturn $ret;\n}\n\n\n\n\n/**\n *\tCreate generic dropdown from array of data\n */\nfunction select_box($name, $data, $curval = FALSE)\n{\n\tglobal $frm;\n\n\t$ret = $frm->select_open($name, array('class' => 'tbox', 'id' => false));\n\tforeach ($data as $k => $v)\n\t{\n\t\t$ret .= $frm->option($v, $k, ($curval !== FALSE) && ($curval == $k));\n\t}\n\t$ret .= \"</select>\\n\";\n\treturn $ret;\n}\n\n\n\n/**\n *\tCreate dropdown with options for access counts before ban - uses internal fixed list of reasonable values\n */\nfunction drop_box($box_name, $curval)\n{\n\tglobal $frm;\n\n\t$opts = array(50, 100, 150, 200, 250, 300, 400, 500);\n\t$ret = $frm->select_open($box_name, array('class' => 'tbox'));\n\tforeach ($opts as $o)\n\t{\n\t\t$ret .= $frm->option($o, $o, ($curval == $o));\n\t}\n\t$ret .= \"</select>\\n\";\n\treturn $ret;\n}\n\n\n\n$text = '';\n\n\nswitch ($action)\n{\n\tcase 'banlog' :\n\t\tif(!getperms('0')) exit;\n\t\tif (isset($_POST['delete_ban_log']))\n\t\t{\n\t\t\t$message = ($ipAdministrator->deleteLogFile() ? BANLAN_89 : BANLAN_90);\n\t\t\te107::getRender()->tablerender(BANLAN_88, \"<div style='text-align:center; font-weight:bold'>\".$message.\"</div>\"); // FIXME\n\t\t}\n\t\t$from = 0;\n\t\t$amount = 20;\t\t// Number per page - could make configurable later if required\n\t\tif ($sub_action) $from = intval($sub_action);\n\n// @todo format form the 0.8 way\n\t\t$text = \"<div style='text-align:center'>\n\t\t<form method='post' action='\".e_SELF.\"?banlog-\".$from.\"'>\n\t\t<table class='table adminform'>\n\t\t<colgroup>\n\t\t\t<col style='width:20%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t</colgroup>\";\n\n\t\t// Get entries\n\t\t$banLogEntries = $ipAdministrator->getLogEntries($from, $amount, $num_entry);\n\t\tif (count($banLogEntries) == 0)\n\t\t{\n\t\t  $text .= \"<tbody><tr><td colspan='4'>\".BANLAN_82.\"</td></tr>\";\n\t\t  $num_entry = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= \"<thead><tr><td class='fcaption'>\".BANLAN_83.\"</td><td class='fcaption'>\".BANLAN_84.\"</td>\n\t\t\t\t<td class='fcaption'>\".BANLAN_7.\"</td><td class='fcaption'>\".BANLAN_85.\"</td></tr></thead><tbody>\";\n\t\t\tforeach ($banLogEntries as $ban)\n\t\t\t{\n\t\t\t\t$row = $ipAdministrator->splitLogEntry($ban);\n\t\t\t\t$text .= \"\n\t\t\t\t\t<tr>\n\t\t\t\t\t<td class='forumheader3'>\".strftime($pref['ban_date_format'], $row['banDate']).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".e107::getIPHandler()->ipDecode($row['banIP']).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".$ipAdministrator->getBanTypeString($row['banReason'], FALSE).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".$row['banNotes'].\"</td>\n\t\t\t\t\t</tr>\";\n\t\t\t}  // End while\n\n\t\t\t// Next-Previous. ==========================\n\t\t\tif ($num_entry > $amount) \n\t\t\t{\n\t\t\t\t$parms = \"{$num_entry},{$amount},{$from},\".e_SELF.\"?\".$action.'-[FROM]';\n\t\t\t\t$text .= \"<tr><td colspan='5' style='text-align:center'><br />\".$tp->parseTemplate(\"{NEXTPREV={$parms}}\".'<br /><br /></td></tr>');\n\t\t\t}\n\t\t\t$text .= \"<tr><td colspan='4' style='text-align:center'>\n\t\t\t\t\t\t<input class='btn btn-default btn-secondary button' type='submit' name='delete_ban_log' value='\".BANLAN_88.\"' />\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\";\n\t\t}\n\t\t$text .= \"</tbody></table></form></div>\";\n\n\t\tif (count($banLogEntries))\n\t\t{\n\t\t\t$text .= \"&nbsp;&nbsp;&nbsp;\".str_replace('[y]', $num_entry, BANLAN_87);\n\t\t}\n\t\t\n\t\techo $text; \n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_86, $text);\n\t\tbreak;\n\n\n\tcase 'options' :\n\t\tif (!getperms('0'))\n\t\t\texit();\n\t\tif (isset($_POST['update_ban_options']))\n\t\t{\n\t\t\t$pref['enable_rdns'] = intval($_POST['ban_rdns_on_access']);\n\t\t\t$pref['enable_rdns_on_ban'] = intval($_POST['ban_rdns_on_ban']);\n\t\t\t$pref['ban_max_online_access'] = intval($_POST['ban_access_guest']).','.intval($_POST['ban_access_member']);\n\t\t\t$pref['ban_retrigger'] = intval($_POST['ban_retrigger']);\n\t\t\t$pref['ban_date_format'] = $tp->toDB($_POST['ban_date_format']);\n\t\t\tsave_prefs();\t\t\t\t\t\t// @todo FIXME log detail of changes. Right prefs to use?\n\t\t\t$mes->addSuccess(LAN_SETSAVED);\n\t\t}\n\n\t\tif (isset($_POST['remove_expired_bans']))\n\t\t{\n\t\t\t$result = $sql->db_Delete('banlist',\"`banlist_bantype` < \".eIPHandler::BAN_TYPE_WHITELIST.\" AND `banlist_banexpires` > 0 AND `banlist_banexpires` < \".time());\n\t\t\tbanlist_adminlog('12', $result);\n\t\t\t$mes->addSuccess(str_replace('[y]', $result, BANLAN_48));\n\t\t}\n\n\t\tlist($ban_access_guest, $ban_access_member) = explode(',', varset($pref['ban_max_online_access'], '100,200'));\n\t\t$ban_access_member = max($ban_access_guest, $ban_access_member);\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_SELF.\"?options'>\n\t\t\t\t<fieldset id='core-banlist-options'>\n\t\t\t\t\t<legend>\".BANLAN_72.\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_63.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_access', 1, $pref['enable_rdns'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_65.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_64.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_ban', 1, $pref['enable_rdns_on_ban'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_66.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_67.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".drop_box('ban_access_guest', $ban_access_guest).BANLAN_70.\"</div>\n\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".drop_box('ban_access_member', $ban_access_member).BANLAN_69.\"</div>\n\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_68.\"</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_71.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_retrigger', 1, $pref['ban_retrigger'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_73.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t  <td>\".BANLAN_91.\"</td>\n\t\t\t\t\t\t\t  <td>\n\t\t\t\t\t\t\t  \".$frm->text('ban_date_format', varset($pref['ban_date_format'], '%H:%M %d-%m-%y'), 40).\"\n\t\t\t\t\t\t\t  <div class='field-help'>\".BANLAN_92.\"</div>\n\t\t\t\t\t\t\t  </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\".$frm->admin_button('update_ban_options', LAN_UPDATE, 'update').\"\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t\t<fieldset id='core-banlist-options-ban'>\n\t\t\t\t\t<legend>\".BANLAN_74.\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_75.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->admin_button('remove_expired_bans', BANLAN_76, 'delete').\"\n\t\t\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\t\t\n\t\techo $mes->render().$text; \n\t\t\n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.LAN_OPTIONS, $mes->render().$text);\n\t\tbreak;\n\n\tcase 'times' :\n\n\t\t\t\n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_77, $mes->render().$text);\n\t\tbreak;\n\n\tcase 'edit' :\t\t// Edit an existing ban\n\tcase 'add' :\t\t// Add a new ban\n\tcase 'whedit' :\t\t// Edit existing whitelist entry\n\tcase 'whadd' :\t\t// Add a new whitelist entry\n\t\n\t\tif(!E107_DEBUG_LEVEL)\n\t\t{\n\t\t\tbreak;\t\n\t\t}\n\t\tRETURN;\n\t\n\t\tif (!isset($banlist_reason)) $banlist_reason = '';\n\t\tif (!isset($banlist_ip)) $banlist_ip = '';\n\t\tif (!isset($banlist_notes)) $banlist_notes = '';\n\n\t\t$page_title = array('edit' => BANLAN_60, 'add' => BANLAN_9, 'whedit' => BANLAN_59, 'whadd' => BANLAN_58);\n\t\t$rdns_warn = vartrue($pref['enable_rdns']) ? '' : '<div class=\"field-help error\">'.BANLAN_12.'</div>';\n\t\t$next = ($action == 'whedit' || $action == 'whadd') ? '?white' : '?list';\n\t\t// Edit/add form first\n\t\t$text .= \"\n\t\t\t<form method='post' action='\".e_SELF.$next.\"'>\n\t\t\t\t<fieldset id='core-banlist-edit'>\n\t\t\t\t\t<legend class='e-hideme'>\".$page_title[$action].\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".BANLAN_5.\":\n\t\t\t\t\t\t\t\t\t<div class='label-note'>\n\t\t\t\t\t\t\t\t\t\t\".BANLAN_13.\"<a href='\".e_ADMIN_ABS.\"users.php'>\".E_16_CAT_USER.\"</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input type='hidden' name='entry_intent' value='{$action}' />\n\t\t\t\t\t\t\t\t\t\".$frm->text('ban_ip', e107::getIPHandler()->ipDecode($banlist_ip), 200).\"\n\t\t\t\t\t\t\t\t\t{$rdns_warn}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\";\n\n\t\tif (($action == 'add') || ($action == 'whadd') || ($banlist_bantype <= 1) || ($banlist_bantype >= eIPHandler::BAN_TYPE_WHITELIST))\n\t\t{ // Its a manual or unknown entry - only allow edit of reason on those\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_7.\": </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->textarea('ban_reason', $banlist_reason, 4, 50).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\t\telseif ($action == 'edit')\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_7.\": </td>\n\t\t\t\t\t\t\t\t<td>{$banlist_reason}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\tif ($action == 'edit')\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_28.\": </td>\n\t\t\t\t\t\t\t\t<td>\".$ipAdministrator->getBanTypeString($banlist_bantype, FALSE).\" - \".$ipAdministrator->getBanTypeString($banlist_bantype, TRUE).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_19.\": </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->textarea('ban_notes', $banlist_notes, 4, 50).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\";\n\n\t\tif ($action == 'edit' || $action == 'add')\n\t\t{\n\t\t\t$inhelp = (($action == 'edit') ? '<div class=\"field-help\">'.BANLAN_26.($banlist_banexpires ? strftime($pref['ban_date_format'], $banlist_banexpires) : LAN_NEVER).'</div>' : '');\n\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_18.\": </td>\n\t\t\t\t\t\t\t\t<td>\".ban_time_dropdown().$inhelp.\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t<div class='buttons-bar center'>\n\n\t\t\";\n\n\t\t/* FORM NOTE EXAMPLE - not needed here as this note is added as label-note (see below)\n\t\t$text .= \"\n\t\t\t<div class='form-note'>\n\t\t\t\t\".BANLAN_13.\"<a href='\".e_ADMIN_ABS.\"users.php'><img src='\".e_IMAGE_ABS.'admin_imaXXXges/'.\"users_16.png' alt='' /></a>\n\t\t\t</div>\n\n\t\t\";\n\t\t*/\n\n\t\tif ($action == 'edit' || $action == 'whedit')\n\t\t{\n\t\t\t$text .= \"<input type='hidden' name='old_ip' value='{$banlist_ip}' />\n\t\t\t\t\".$frm->admin_button('update_ban', LAN_UPDATE, 'update');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= $frm->admin_button('add_ban', ($action == 'add' ? BANLAN_8 : BANLAN_53), 'create');\n\t\t}\n\n\t\t$text .= \"</div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo  $mes->render().$text; \n\t//\te107::getRender()->tablerender($page_title[$action], $mes->render().$text);\n\t\tbreak;\t\t// End of 'Add' and 'Edit'\n\n\n\tcase 'transfer' :\n\t\t$message = '';\n\t\t$error = false;\n\t\tif (isset($_POST['ban_import']))\n\t\t{ // Got a file to import\n\t\t\trequire_once(e_HANDLER.'upload_handler.php');\n\t\t\tif (($files = process_uploaded_files(e_UPLOAD, FALSE, array('overwrite' => TRUE, 'max_file_count' => 1, 'file_mask' => 'csv'))) === FALSE)\n\t\t\t{ // Invalid file\n\t\t\t\t$error = true;\n\t\t\t\t$mes->addError(BANLAN_47);\n\t\t\t}\n\t\t\tif(empty($files) || vartrue($files[0]['error']))\n\t\t\t{\n\t\t\t\t$error = true;\n\t\t\t\tif(varset($files[0]['message']))\n\t\t\t\t\t$mes->addError($files[0]['message']);\n\t\t\t}\n\t\t\tif(!$error)\n\t\t\t{ // Got a file of some sort\n\t\t\t\t$message = process_csv(e_UPLOAD.$files[0]['name'],\n\t\t\t\t\t\t\t\t\t\tintval(varset($_POST['ban_over_import'], 0)),\n\t\t\t\t\t\t\t\t\t\tintval(varset($_POST['ban_over_expiry'], 0)),\n\t\t\t\t\t\t\t\t\t\t$separator_char[intval(varset($_POST['ban_separator'], 1))],\n\t\t\t\t\t\t\t\t\t\t$quote_char[intval(varset($_POST['ban_quote'], 3))]);\n\t\t\t\tbanlist_adminlog('07', 'File: '.e_UPLOAD.$files[0]['name'].'<br />'.$message);\n\t\t\t}\n\n\t\t}\n\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_ADMIN_ABS.\"banlist_export.php' id='core-banlist-transfer-form' >\n\t\t\t\t<fieldset id='core-banlist-transfer-export'>\n\t\t\t\t\t<legend>\".BANLAN_40.\"</legend>\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th colspan='2'>\".BANLAN_36.\"</th>\n\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\n\n\t\tforeach ($ipAdministrator->getValidReasonList() as $i) //FIXME $frm->label()\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='3'>\n\t\t\t\t\t\t\t\t\".$frm->checkbox(\"ban_types[{$i}]\", $i).$frm->label($ipAdministrator->getBanTypeString($i, FALSE), \"ban_types[{$i}]\", $i).\"\n\t\t\t\t\t\t\t\t<span class='field-help'>(\".$ipAdministrator->getBanTypeString($i, TRUE).\")</span>\n\t\t\t\t\t\t\t</td></tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"<tr>\n\t\t\t<td>\".BANLAN_79.\"</td>\n\t\t\t<td>\".select_box('ban_separator', $separator_char).' '.BANLAN_37.\"</td>\n\t\t<td>\".select_box('ban_quote', $quote_char).' '.BANLAN_38.\"</td></tr>\";\n\t\t$text .= \"\n\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div class='buttons-bar center'>\".$frm->admin_button('ban_export', BANLAN_39, 'export', BANLAN_39).\"</div>\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\t// Now do the import options\n\t\t$text .= \"\n\t\t\t<form enctype='multipart/form-data' method='post' action='\".e_SELF.\"?transfer' id='ban_import_form' >\n\t\t\t\t<fieldset id='core-banlist-transfer-import'>\n\t\t\t\t\t<legend>\".BANLAN_41.\"</legend>\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th colspan='2'>\".BANLAN_42.\"</th>\n\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan='3'>\".$frm->checkbox('ban_over_import', 1, '', array('label' => BANLAN_43)).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan='3'>\".$frm->checkbox('ban_over_expiry', 1, '', array('label' => BANLAN_44)).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_46.\"</td>\n\t\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t\t\".$frm->file('file_userfile[]', array('size' => '40')).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t<td>\".BANLAN_80.\"</td>\n\t\t\t<td>\".select_box('ban_separator', $separator_char).' '.BANLAN_37.\"</td>\n\t\t<td>\".select_box('ban_quote', $quote_char).' '.BANLAN_38.\"</td></tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\t\t\".$frm->admin_button('ban_import', BANLAN_45, 'import').\"\n\t\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo $mes->render().$text; \n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_35, $mes->render().$text);\n\t\tbreak;\t\t// End case 'transfer'\n\n\tcase 'list' :\n\tcase 'white' :\n\tdefault :\n\t\t\n\t\tif(!E107_DEBUG_LEVEL)\n\t\t{\n\t\t\tbreak;\t\n\t\t}\n\t\t\n\t\tif (($action != 'list') && ($action != 'white'))\n\t\t\t$action = 'list';\n\n\t\t$edit_action = ($action == 'list' ? 'edit' : 'whedit');\n\t\t$del_action = ($action == 'list' ? 'remove' : 'whremove');\n\t\t$col_widths = array('list' => array(10, 5, 35, 30, 10, 10), 'white' => array(15, 40, 35, 10));\n\t\t$col_titles = array('list' => array(BANLAN_17, BANLAN_20, BANLAN_10, BANLAN_19, BANLAN_18, LAN_OPTIONS),\n\t\t\t\t\t\t\t'white' => array(BANLAN_55, BANLAN_56, BANLAN_19, LAN_OPTIONS));\n\t\t$no_values = array('list' => BANLAN_2, 'white' => BANLAN_54);\n\t\t$col_defs = array('list' => array('banlist_datestamp' => 0, 'banlist_bantype' => 0, 'ip_reason' => BANLAN_7, 'banlist_notes' => 0, 'banlist_banexpires' => 0, 'ban_options' => 0),\n\t\t\t\t\t\t'white' => array('banlist_datestamp' => 0, 'ip_reason' => BANLAN_57, 'banlist_notes' => 0, 'ban_options' => 0));\n\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_SELF.'?'.$action.\"' id='core-banlist-form'>\n\t\t\t\t<fieldset id='core-banlist'>\n\t\t\t\t\t<legend class='e-hideme'>\".($action == 'list' ? BANLAN_3 : BANLAN_61).\"</legend>\n\t\t\t\t\t\".$frm->hidden(\"ban_secure\", \"1\").\"\n\t\t\";\n\n\t\t$filter = ($action == 'white') ? 'banlist_bantype='.eIPHandler::BAN_TYPE_WHITELIST : 'banlist_bantype!='.eIPHandler::BAN_TYPE_WHITELIST;\n\n\n\t\tif(!$ban_total = $sql->db_Select(\"banlist\", \"*\", $filter.\" ORDER BY banlist_ip\"))\n\t\t{\n\t\t\t//$text .= \"<div class='center'>\".$no_values[$action].\"</div>\";\n\t\t\t$mes->addInfo($no_values[$action]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\";\n\t\t\tforeach($col_widths[$action] as $fw)\n\t\t\t{\n\t\t\t\t$text .= \"\n\t\t\t\t\t\t\t\t<col style='width:{$fw}%' />\n\t\t\t\t\";\n\t\t\t}\n\t\t\t$text .= \"\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\";\n\t\t\t$cnt = 0;\n\t\t\tforeach($col_titles[$action] as $ct)\n\t\t\t{\n\t\t\t\t$cnt ++;\n\t\t\t\t$text .= \"<th\".(($cnt == count($col_widths[$action])) ? \" class='center last'\" : \"\").\">{$ct}</th>\";\n\t\t\t}\n\t\t\t$text .= \"</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\";\n\t\t\twhile($row = $sql->db_Fetch())\n\t\t\t{\n\t\t\t\t//extract($row);//FIXME - kill extract()\n\t\t\t\t$row['banlist_reason'] = str_replace('LAN_LOGIN_18', BANLAN_11, $row['banlist_reason']);\n\t\t\t\t$text .= \"<tr>\";\n\t\t\t\tforeach($col_defs[$action] as $cd => $fv)\n\t\t\t\t{\n\t\t\t\t\t$row_class = '';\n\t\t\t\t\tswitch($cd)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'banlist_datestamp':\n\t\t\t\t\t\t\t$val = ($row['banlist_datestamp'] ? strftime($pref['ban_date_format'], $row['banlist_datestamp']) : BANLAN_22);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_bantype':\n\t\t\t\t\t\t\t$val = \"<div class='nowrap' title='\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], TRUE).\"'>\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], FALSE).\" <a href='#' title='\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], TRUE).\"' onclick='return false;'>\".E_16_USER.\"</a></div>\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'ip_reason':\n\t\t\t\t\t\t\t$val = e107::getIPHandler()->ipDecode($row['banlist_ip']).\"<br />\".$fv.\": \".$row['banlist_reason'];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_banexpires':\n\t\t\t\t\t\t\t$val = ($row['banlist_banexpires'] ? strftime($pref['ban_date_format'], $row['banlist_banexpires']).(($row['banlist_banexpires'] < time()) ? ' ('.BANLAN_34.')' : '') : LAN_NEVER).\"<br />\".ban_time_dropdown(\"onchange=\\\"e107Helper.urlJump('\".e_SELF.\"?newtime-{$row['banlist_ip']}-'+this.value)\\\"\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'ban_options':\n\t\t\t\t\t\t\t$row_class = ' class=\"center\"';\n\t\t\t\t\t\t\t$val = \"\n\t\t\t\t\t\t\t<a class='action edit' href='\".e_SELF.\"?{$edit_action}-{$row['banlist_ip']}'>\".ADMIN_EDIT_ICON.\"</a>\n<input class='action delete no-confirm' name='delete_ban_entry' value='\".e_SELF.\"?{$del_action}-{$row['banlist_ip']}' type='image' src='\".ADMIN_DELETE_ICON_PATH.\"' alt='\".LAN_DELETE.\"' title='\".$tp->toJS(LAN_CONFIRMDEL.\" [\".e107::getIPHandler()->ipDecode($row['banlist_ip']).\"]\").\"' />\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_notes':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$val = $row[$cd];\n\t\t\t\t\t}\n\n\t\t\t\t\t$text .= \"<td{$row_class}>{$val}</td>\";\n\t\t\t\t}\n\t\t\t\t$text .= '</tr>';\n\t\t\t}\n\t\t\t$text .= \"</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<script type='text/javascript'>\n\t\t\t\t\t(function () {\n\t\t\t\t\t\tvar del_sel = \\$\\$('input[name=delete_ban_entry]');\n\t\t\t\t\t\tdel_sel.each(function (element) {\n\t\t\t\t\t\t\tvar msg = element.readAttribute('title');\n\t\t\t\t\t\t\telement.writeAttribute('title', '\".LAN_DELETE.\"').writeAttribute('confirm-msg', msg);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdel_sel.invoke('observe', 'click', function (event) {\n\n\t\t\t\t\t\t\tvar element = event.element(), msg = element.readAttribute('confirm-msg');\n\t\t\t\t\t\t\tif(!e107Helper.confirm(msg)) { event.stop(); return; }\n\t\t\t\t\t\t\t\\$('core-banlist-form').writeAttribute('action', element.value).submit();\n\t\t\t\t\t\t});\n\t\t\t\t\t}())\n\t\t\t\t\t</script>\n\t\t\t\";\n\t\t}\n\t\t$text .= \"\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo $mes->render().$text; \n\t//\te107::getRender()->tablerender(($action == 'list' ? BANLAN_3 : BANLAN_61), $mes->render().$text);\n\t\t// End of case 'list' and the default case\n}\t\t// End switch ($action)\n\n\nrequire_once(e_ADMIN.'footer.php');\n\n\n/**\n *\tAdmin menu options\n */\nfunction banlist_adminmenu()\n{\n\t$action = (e_QUERY) ? e_QUERY : 'list';\n\n\t$var['list']['text'] = BANLAN_14;\t\t// List existing bans\n\t$var['list']['link'] = e_SELF.'?list';\n\t$var['list']['perm'] = '4';\n\n\t$var['add']['text'] = BANLAN_25;\t\t// Add a new ban\n\t$var['add']['link'] = e_SELF.'?add';\n\t$var['add']['perm'] = '4';\n\n\t$var['white']['text'] = BANLAN_52;\t\t// List existing whitelist entries\n\t$var['white']['link'] = e_SELF.'?white';\n\t$var['white']['perm'] = '4';\n\n\t$var['whadd']['text'] = BANLAN_53;\t\t// Add a new whitelist entry\n\t$var['whadd']['link'] = e_SELF.'?whadd';\n\t$var['whadd']['perm'] = '4';\n\n\t$var['transfer']['text'] = BANLAN_35;\n\t$var['transfer']['link'] = e_SELF.'?transfer';\n\t$var['transfer']['perm'] = '4';\n\n\tif (getperms('0'))\n\t{\n\t\t$var['times']['text'] = BANLAN_15;\n\t\t$var['times']['link'] = e_SELF.'?times';\n\t\t$var['times']['perm'] = '0';\n\n\t\t$var['options']['text'] = LAN_OPTIONS;\n\t\t$var['options']['link'] = e_SELF.'?options';\n\t\t$var['options']['perm'] = '0';\n\n\t\t$var['banlog']['text'] = BANLAN_81;\n\t\t$var['banlog']['link'] = e_SELF.'?banlog';\n\t\t$var['banlog']['perm'] = '0';\n\t}\n\te107::getNav()->admin(BANLAN_16, $action, $var);\n}\n\n\n\n// Parse the date string used by the import/export - YYYYMMDD_HHMMSS\nfunction parse_date($instr)\n{\n\tif (strlen($instr) != 15)\n\t\treturn 0;\n\treturn mktime(substr($instr, 9, 2), substr($instr, 11, 2), substr($instr, 13, 2), substr($instr, 4, 2), substr($instr, 6, 2), substr($instr, 0, 4));\n}\n\n\n\n// Process the imported CSV file, update the database, delete the file.\n// Return a message\nfunction process_csv($filename, $override_imports, $override_expiry, $separator = ',', $quote = '\"')\n{\n\t$sql = e107::getDb();\n\t$pref['ban_durations'] = e107::getPref('ban_durations');\n\t$mes = e107::getMessage();\n\t\n\t//  echo \"Read CSV: {$filename} separator: {$separator}, quote: {$quote}  override imports: {$override_imports}  override expiry: {$override_expiry}<br />\";\n\t// Renumber imported bans\n\tif ($override_imports)\n\t\t$sql->db_Update('banlist', \"`banlist_bantype`=\".eIPHandler::BAN_TYPE_TEMPORARY.\" WHERE `banlist_bantype` = \".eIPHandler::BAN_TYPE_IMPORTED);\n\t$temp = file($filename);\n\t$line_num = 0;\n\tforeach ($temp as $line)\n\t{ // Process one entry\n\t\t$line = trim($line);\n\t\t$line_num++;\n\t\tif ($line)\n\t\t{\n\t\t\t$fields = explode($separator, $line);\n\t\t\t$field_num = 0;\n\t\t\t$field_list = array('banlist_bantype' => eIPHandler::BAN_TYPE_IMPORTED);\n\t\t\tforeach ($fields as $f)\n\t\t\t{\n\t\t\t\t$f = trim($f);\n\t\t\t\tif (substr($f, 0, 1) == $quote)\n\t\t\t\t{\n\t\t\t\t\tif (substr($f, -1, 1) == $quote)\n\t\t\t\t\t{ // Strip quotes\n\t\t\t\t\t\t$f = substr($f, 1, -1);\t\t// Strip off the quotes\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$mes->addError(BANLAN_49.$line_num);\n\t\t\t\t\t\treturn BANLAN_49.$line_num;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Now handle the field\n\t\t\t\t$field_num++;\n\t\t\t\tswitch ($field_num)\n\t\t\t\t{\n\t\t\t\t\tcase 1 :\t// IP address\n\t\t\t\t\t\t$field_list['banlist_ip'] = e107::getIPHandler()->ipEncode($f);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2 :\t// Original date of ban\n\t\t\t\t\t\t$field_list['banlist_datestamp'] = parse_date($f);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3 :\t// Expiry of ban - depends on $override_expiry\n\t\t\t\t\t\tif ($override_expiry)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$field_list['banlist_banexpires'] = parse_date($f);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{ // Use default ban time from now\n\t\t\t\t\t\t\t$field_list['banlist_banexpires'] = $pref['ban_durations'][eIPHandler::BAN_TYPE_IMPORTED] ? time() + (60*60*$pref['ban_durations'][eIPHandler::BAN_TYPE_IMPORTED]) : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4 :\t// Original ban type - we always ignore this and force to 'imported'\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5 :\t// Ban reason originally generated by E107\n\t\t\t\t\t\t$field_list['banlist_reason'] = $f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6 :\t// Any user notes added\n\t\t\t\t\t\t$field_list['banlist_notes'] = $f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\t// Just ignore any others\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qry = \"REPLACE INTO `#banlist` (\".implode(',', array_keys($field_list)).\") values ('\".implode(\"', '\", $field_list).\"')\";\n\t\t\t//\t  echo count($field_list).\" elements, query: \".$qry.\"<br />\";\n\t\t\tif (!$sql->gen($qry))\n\t\t\t{\n\t\t\t\t$mes->addError(BANLAN_50.$line_num);\n\t\t\t\treturn BANLAN_50.$line_num;\n\t\t\t}\n\t\t}\n\t}\n\t// Success here - may need to delete old imported bans\n\tif ($override_imports)\n\t\t$sql->db_Delete('banlist', \"`banlist_bantype` = \".eIPHandler::BAN_TYPE_TEMPORARY);\n\t@unlink($filename);\t\t// Delete file once done\n\t$mes->addSuccess(str_replace('[y]', $line_num, BANLAN_51).$filename);\n\treturn str_replace('[y]', $line_num, BANLAN_51).$filename;\n}\n\n\n\n/**\n *\tLog event to admin log\n *\n *\t@param string $msg_num - exactly two numeric characters corresponding to a log message\n *\t@param string $woffle - information for the body of the log entre\n *\n *\t@return none\n */\nfunction banlist_adminlog($msg_num = '00', $woffle = '')\n{\n\te107::getAdminLog()->log_event('BANLIST_'.$msg_num, $woffle, E_LOG_INFORMATIVE, '');\n}\n\n\n/**\n * Handle page DOM within the page header\n *\n * @return string JS source\n */\nfunction headerjs()\n{\n/*\n\trequire_once(e_HANDLER.'js_helper.php');\n\t$ret = \"\n\t\t<script type='text/javascript'>\n\t\t\t//add required core lan - delete confirm message\n\t\t\t(\".e_jshelper::toString(LAN_JSCONFIRM).\").addModLan('core', 'delete_confirm');\n\t\t\tif(typeof e107Admin == 'undefined') var e107Admin = {}\n\n\t\t\te107Admin.initRules = {\n\t\t\t\t'Helper': true,\n\t\t\t\t'AdminMenu': false\n\t\t\t}\n\t\t</script>\n\t\t<script type='text/javascript' src='\".e_JS.\"core/admin.js'></script>\n\t\";\n\n\treturn $ret;\n\n*/\n}\n\nrequire_once(e_ADMIN.\"footer.php\");\nexit;\n?>\n"], "fixing_code": ["<?php\n/*\n * e107 website system\n *\n * Copyright (C) 2008-2012 e107 Inc (e107.org)\n * Released under the terms and conditions of the\n * GNU General Public License (http://www.gnu.org/licenses/gpl.txt)\n *\n * Ban List Management\n *\n *\n*/\n\nrequire_once('../class2.php');\n\nif (!getperms('4'))\n{\n\te107::redirect('admin');\n\texit();\n}\n\nrequire_once(e_HANDLER.'iphandler_class.php');\t\t// This is probably already loaded in class2.php\n\ne107::coreLan('banlist', true);\n\ne107::js('footer-inline', \"\n\n\t\t$('#useip').click(function (event) {\n\n\t\t\tvar id = $(this).attr('data-ip');\n\t\t\t$('#banlist-ip').val(id);\n\t\t\tevent.preventDefault();\n\t\t});\n\n\");\n\n\nclass banlist_admin extends e_admin_dispatcher\n{\n\n\tprotected $modes = array(\t\n\t\n\t\t'main'\t=> array(\n\t\t\t'controller' \t=> 'banlist_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'banlist_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\t\t'white'\t=> array(\n\t\t\t'controller' \t=> 'banlist_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'banlist_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\t\t'failed'\t=> array(\n\t\t\t'controller' \t=> 'failed_ui',\n\t\t\t'path' \t\t\t=> null,\n\t\t\t'ui' \t\t\t=> 'failed_form_ui',\n\t\t\t'uipath' \t\t=> null\n\t\t),\n\n\t);\t\n\t\n\t\n\tprotected $adminMenu = array(\n\n\t\t'main/list'\t\t\t=> array('caption'=> BANLAN_122, 'perm' => '4'),\n\t\t'main/create'\t\t=> array('caption'=> BANLAN_123, 'perm' => '4'),\n\t\t'other'            => array('divider'=>true),\n\t\t// Use FILTER to view whitelist instead. \n\t\t'white/list'\t\t=> array('caption'=> BANLAN_52, 'perm' => '4'),\n\t\t'white/create'\t\t=> array('caption'=> BANLAN_53, 'perm' => '4'),\n\n\t\t'other1'            => array('divider'=>true),\n\n\t\t'failed/list'       => array('caption'=> ADLAN_146, 'perm'=>'4'),\n\n\t\t'other2'            => array('divider'=>true),\n\t\t'main/transfer'\t\t=> array('caption'=> BANLAN_35, 'perm' => '4'),\n\t\t'main/times'\t\t=> array('caption'=> BANLAN_15, 'perm' => '0'),\n\t\t'main/options'\t\t=> array('caption'=> LAN_OPTIONS, 'perm' => '0'),\n\t//\t'main/banlog'\t\t=> array('caption'=> BANLAN_81, 'perm' => '0'),\n\t);\n\n\tprotected $adminMenuAliases = array(\n\t\t'main/edit'\t=> 'main/list'\t\t\t\t\t\t\n\t);\t\n\t\n\tprotected $menuTitle = BANLAN_16;\n\n\tprotected $adminMenuIcon = 'e-banlist-24';\n}\n\n\n\n\n\t\t\t\t\nclass banlist_ui extends e_admin_ui\n{\n\t\t\t\n\t\tprotected $pluginTitle\t\t= BANLAN_16;\n\t\tprotected $eventName\t\t= 'ban';\n\t\tprotected $table\t\t\t= 'banlist';\n\t\tprotected $pid\t\t\t\t= 'banlist_id'; \n\t\tprotected $perPage \t\t\t= 10;\n\t\tprotected $listQry          = \"SELECT * FROM `#banlist` WHERE banlist_bantype != 100 \";\n\t\tprotected $listOrder\t\t= 'banlist_datestamp DESC';\n\n\t\tprotected $fields \t= array (  \n\t\t  'checkboxes' \t\t\t=>   array ( 'title' => '', \t\t\t\t'type' => null, \t\t'data' => null, 'width' => '5%', 'thclass' => 'center', 'forced' => '1', 'class' => 'center', 'toggle' => 'e-multiselect',  ),\n\t\t  'banlist_id'\t\t\t =>  array ( 'title' => LAN_ID, \t\t\t'data' => 'int',        'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_ip' \t\t\t=>   array ( 'title' => BANLAN_126, \t\t\t'type' => 'method', \t\t'data' => 'str', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_bantype' \t=>   array ( 'title' => LAN_TYPE, \t\t\t'type' => 'method', \t'data' => 'str', 'width' => 'auto', 'filter'=>true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_datestamp' \t=>   array ( 'title' => LAN_DATESTAMP, \t\t'type' => 'datestamp', \t'data' => 'int', 'width' => 'auto', 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => 'auto=1&hidden=1&readonly=1', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_banexpires' \t=>   array ( 'title' => BANLAN_124,\t \t\t'type' => 'method', \t'data' => 'int', 'inline'=>true, 'width' => 'auto', 'batch' => true, 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_admin' \t\t=>   array ( 'title' => 'Admin', \t\t\t'type' => 'text', \t    'data' => 'int', 'noedit'=>true, 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'center', 'thclass' => 'center',  ),\n\t\t  'banlist_reason' \t\t=>   array ( 'title' => BANLAN_7, \t\t\t'type' => 'text', \t\t'data' => 'str', 'inline'=>true, 'width' => 'auto', 'help' => '', 'readParms' => 'constant=1', 'writeParms' => array('size'=>'xxlarge'), 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'banlist_notes' \t\t=>   array ( 'title' => BANLAN_19, \t\t\t'type' => 'text', \t\t'data' => 'str', 'inline'=>true, 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => array('size'=>'xxlarge'), 'class' => 'left', 'thclass' => 'left',  ),\n\t\t  'options' \t\t\t=>   array ( 'title' => LAN_OPTIONS, \t\t'type' => '', \t\t\t'data' => '', 'width' => '10%', 'thclass' => 'center last', 'class' => 'center last', 'forced' => '1',  ),\n\t\t);\t\t\n\t\t\n\t\tprotected $fieldpref = array('checkboxes', 'banlist_ip', 'banlist_bantype', 'banlist_datestamp', 'banlist_banexpires', 'banlist_reason', 'banlist_notes', 'options');\n\n\t\t\n\t//\tprotected $pref = array(\n\t//\t\t'pref_type'\t   \t\t\t\t=> array('title'=> 'type', 'type'=>'text', 'data' => 'string', 'validate' => true),\n\t//\t\t'pref_folder' \t\t\t\t=> array('title'=> 'folder', 'type' => 'boolean', 'data' => 'integer'),\n\t//\t\t'pref_name' \t\t\t\t=> array('title'=> 'name', 'type' => 'text', 'data' => 'string', 'validate' => 'regex', 'rule' => '#^[\\w]+$#i', 'help' => 'allowed characters are a-zA-Z and underscore')\n\t//\t);\n\n\n\t\tfunction CreateObserver()\n\t\t{\n\t\t\tparent::CreateObserver();\n\t\t\t$this->fields['banlist_ip']['title']= BANLAN_5;\n\t\t}\n\n\t\tfunction EditObserver()\n\t\t{\n\t\t\tparent::EditObserver();\n\t\t\t$this->fields['banlist_ip']['title']= BANLAN_5;\n\t\t}\n\n\t\t\n\t\t// optional\n\t\tpublic function init()\n\t\t{\n\n\t\t\tif($this->getMode() == 'white')\n\t\t\t{\n\t\t\t\tif($this->getAction() == 'list')\n\t\t\t\t{\n\t\t\t\t\t$this->listQry = \"SELECT * FROM `#banlist` WHERE banlist_bantype = 100 \";\n\t\t\t\t}\n\n\n\t\t\t\tif($this->getAction() == 'create')\n\t\t\t\t{\n\t\t\t\t\t$myip = e107::getIPHandler()->getIP(true);\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['tdClassRight']  = 'form-inline';\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['pre'] = \"<div class='input-append'>\";\n\t\t\t\t\t$this->fields['banlist_ip']['writeParms']['post'] = \"<button class='btn btn-primary' id='useip' data-ip='{$myip}'>\".BANLAN_125.\"</button></div>\"; // USERIP;\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (isset($_POST['update_ban_prefs']))\t\t// Update ban messages\n\t\t\t{\n\t\t\t\t$this->timesPageSave(); \t\n\t\t\t}\n\t\t}\n\n\n\t\tpublic function beforeCreate($new_data, $old_data, $id)\n\t\t{\n\t\t\t$new_data['banlist_admin'] = ADMINID;\n\n\t\t\tif(filter_var($new_data['banlist_ip'], FILTER_VALIDATE_IP)) // check it's an IP\n\t\t\t{\n\t\t\t\t$new_data['banlist_ip'] = e107::getIPHandler()->ipEncode($new_data['banlist_ip']);\n\t\t\t}\n\n\t\t\treturn $new_data;\n\t\t}\n\n\t\tpublic function beforeUpdate($new_data, $old_data, $id)\n\t\t{\n\t\t\t$new_data['banlist_admin'] = ADMINID;\n\n\t\t\tif(filter_var($new_data['banlist_ip'], FILTER_VALIDATE_IP)) // check it's an IP\n\t\t\t{\n\t\t\t\t$new_data['banlist_ip'] = e107::getIPHandler()->ipEncode($new_data['banlist_ip']);\n\t\t\t}\n\n\t\t\treturn $new_data;\n\t\t}\n\n\n\n\n\n\t\tpublic function afterCreate($new_data, $old_data, $id)\n\t\t{\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\t\tpublic function afterUpdate($new_data, $old_data, $id)\n\t\t{\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\t\tpublic function afterDelete($deleted_data, $id, $deleted_check)\n\t\t{\n\n\t\t\te107::getIPHandler()->regenerateFiles();\n\t\t}\n\n\n\t\tpublic function addPage()\n\t\t{\n\t\t\t//$ns = e107::getRender();\n\t\t\t//$text = 'Hello World!';\n\t\t\t//$ns->tablerender('Hello',$text);\t\t\t\t\n\t\t}\n\n\t\t\n\t\tprotected function transferPage()\n\t\t{\n\n\t\t\t$ipAdministrator = new banlistManager;\n\n\t\t\t// Character options for import & export\n\t\t\t$separator_char = array(1 => ',', 2 => '|');\n\t\t\t$quote_char = array(1 => '(none)', 2 => \"'\", 3 => '\"');\n\n\t\t\t$frm = e107::getForm();\n\t\t\t$mes = e107::getMessage();\n\n\t\t\t$error = false;\n\n\t\t\tif(isset($_POST['ban_import']))  // Got a file to import\n\t\t\t{\n\t\t\t\trequire_once(e_HANDLER . 'upload_handler.php');\n\n\t\t\t\tif(($files = process_uploaded_files(e_UPLOAD, false, array('overwrite' => true, 'max_file_count' => 1, 'file_mask' => 'csv'))) === false)\n\t\t\t\t{ // Invalid file\n\t\t\t\t\t$error = true;\n\t\t\t\t\t$mes->addError(BANLAN_47);\n\t\t\t\t}\n\n\t\t\t\tif(empty($files) || vartrue($files[0]['error']))\n\t\t\t\t{\n\t\t\t\t\t$error = true;\n\t\t\t\t\tif(varset($files[0]['message']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$mes->addError($files[0]['message']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!$error) // Got a file of some sort\n\t\t\t\t{\n\t\t\t\t\t$message = process_csv(e_UPLOAD . $files[0]['name'],\n\t\t\t\t\t\tintval(varset($_POST['ban_over_import'], 0)),\n\t\t\t\t\t\tintval(varset($_POST['ban_over_expiry'], 0)),\n\t\t\t\t\t\t$separator_char[intval(varset($_POST['ban_separator'], 1))],\n\t\t\t\t\t\t$quote_char[intval(varset($_POST['ban_quote'], 3))]);\n\t\t\t\t\tbanlist_adminlog('07', 'File: ' . e_UPLOAD . $files[0]['name'] . '<br />' . $message);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$text = \"\n\t\t\t\t<form method='post' action='\" . e_ADMIN_ABS . \"banlist_export.php' id='core-banlist-transfer-form' >\n\t\t\t\t\t<fieldset id='core-banlist-transfer-export'>\n\t\t\t\t\t\t<legend>\" . BANLAN_40 . \"</legend>\n\t\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th colspan='2'>\" . BANLAN_36 . \"</th>\n\t\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\";\n\n\n\t\t\tforeach($ipAdministrator->getValidReasonList() as $i) //FIXME $frm->label()\n\t\t\t{\n\t\t\t\t$text .= \"\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan='3'>\n\t\t\t\t\t\t\t\t\t\" . $frm->checkbox(\"ban_types[{$i}]\", $i) . $frm->label($ipAdministrator->getBanTypeString($i, false), \"ban_types[{$i}]\", $i) . \"\n\t\t\t\t\t\t\t\t\t<span class='field-help'>(\" . $ipAdministrator->getBanTypeString($i, true) . \")</span>\n\t\t\t\t\t\t\t\t</td></tr>\n\t\t\t\t\";\n\t\t\t}\n\n\t\t\t$text .= \"<tr>\n\t\t\t\t<td>\" . BANLAN_79 . \"</td>\n\t\t\t\t<td>\" . $frm->select('ban_separator', $separator_char) . ' ' . BANLAN_37 . \"</td>\n\t\t\t<td>\" . $frm->select('ban_quote', $quote_char) . ' ' . BANLAN_38 . \"</td></tr>\";\n\n\t\t\t$text .= \"\n\t\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class='buttons-bar center'>\" . $frm->admin_button('ban_export', BANLAN_39, 'export', BANLAN_39) . \"</div>\n\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\" . e_TOKEN . \"' />\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\";\n\n\t\t\t// Now do the import options\n\t\t\t$text .= \"\n\t\t\t\t<form enctype='multipart/form-data' method='post' action='\" . e_SELF . \"?transfer' id='ban_import_form' >\n\t\t\t\t\t<fieldset id='core-banlist-transfer-import'>\n\t\t\t\t\t\t<legend>\" . BANLAN_41 . \"</legend>\n\t\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th colspan='2'>\" . BANLAN_42 . \"</th>\n\t\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colspan='3'>\" . $frm->checkbox('ban_over_import', 1, '', array('label' => BANLAN_43)) . \"</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colspan='3'>\" . $frm->checkbox('ban_over_expiry', 1, '', array('label' => BANLAN_44)) . \"</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\" . BANLAN_46 . \"</td>\n\t\t\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t\t\t\" . $frm->file('file_userfile[]', array('size' => '40')) . \"\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t<td>\" . BANLAN_80 . \"</td>\n\t\t\t\t<td>\" . $frm->select('ban_separator', $separator_char) . ' ' . BANLAN_37 . \"</td>\n\t\t\t\t<td>\" . $frm->select('ban_quote', $quote_char) . ' ' . BANLAN_38 . \"</td></tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\" . $frm->admin_button('ban_import', BANLAN_45, 'import') . $frm->token(). \"\n\t\t\t\t\t\t</div>\n\t\n\t\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\";\n\n\t\t\treturn $mes->render() . $text;\n\t\t}\n\t\t\n\t\n\t\t\n\t\tprivate function timesPageSave()\n\t\t{\n\n\n\t\t\t$ipAdministrator = new banlistManager;\n\t\t\t$tp = e107::getParser();\n\t\t\t$changed = false;\n\n\t\t\t$pref = array();\n\n\t\t\t$reasonList = $ipAdministrator->getValidReasonList();\n\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t{\n\t\t\t\t$i = abs($bt) + 1;\t\t// Forces a single-digit positive number for part of field name\n\t\t\t\t$t1 = $tp->toDB(varset($_POST['ban_text_'.($i)],''));\n\t\t\t\t$t2 = intval(varset($_POST['ban_time_'.($i)],0));\n\t\t\t\tif (!isset($pref['ban_messages'][$bt]) || ($pref['ban_messages'][$bt] != $t1))\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_messages'][$bt] = $t1;\n\t\t\t\t\t$changed = TRUE;\n\t\t\t\t}\n\t\t\t\tif (!isset($pref['ban_durations'][$bt]) || ($pref['ban_durations'][$bt] != $t2))\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_durations'][$bt] = $t2;\n\t\t\t\t\t$changed = TRUE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($changed && !empty($pref))\n\t\t\t{\n\t\t\t// @todo write actual prefs changes to log file (different methods for prefs?)\n\t\t\t\te107::getConfig()->setPref($pref)->save(); \n\t\t\t// \tsave_prefs();\n\t\t\t\t/*****************************************\n\t\t\t\t\tWrite messages and times to disc file\n\t\t\t\t *****************************************/\n\t\t\t\t$ipAdministrator->writeBanMessageFile();\n\t\t\t\tbanlist_adminlog('08','');\n\t\t\t\t//$ns->tablerender(BANLAN_9, \"<div style='text-align:center'>\".BANLAN_33.'</div>');\n\t\t\t//\t$mes->addSuccess(BANLAN_33);\n\t\t\t}\t\n\t\t\t\n\t\t\t\n\t\t}\n\n\n\n\t\t\n\t\tprotected function timesPage()\n\t\t{\n\t\t\tif (!getperms('0'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t$pref = e107::getPref();\n\t\t\t$tp = e107::getParser();\t\t\n\t\t\t$frm = e107::getForm();\n\t\t\t$mes = e107::getMessage();\n\t\t\t\n\t\t\t$ipAdministrator = new banlistManager;\n\t\t\t\t\t\t\n\t\t\t$text = '';\n\t\t\tif ((!isset($pref['ban_messages'])) || !is_array($pref['ban_messages']))\n\t\t\t{\n\t\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_messages'][$bt] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((!isset($pref['ban_durations'])) || !is_array($pref['ban_durations']))\n\t\t\t{\n\t\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t\t{\n\t\t\t\t\t$pref['ban_durations'][$bt] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$text .= \"\n\t\t\t\t<form method='post' action='\".e_SELF.'?'.e_QUERY.\"' id='ban_options'>\n\t\t\t\t\t<fieldset id='core-banlist-times'>\n\t\t\t\t\t\t<legend class='e-hideme'>\".BANLAN_77.\"</legend>\n\t\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col style='width: 20%' />\n\t\t\t\t\t\t\t\t<col style='width: 65%' />\n\t\t\t\t\t\t\t\t<col style='width: 15%' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>\".BANLAN_28.\"</th>\n\t\t\t\t\t\t\t\t\t<th>\".BANLAN_29.\"<br />\".BANLAN_31.\"</th>\n\t\t\t\t\t\t\t\t\t<th class='center last'>\".BANLAN_30.\"</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\";\n\t\t\tforeach ($ipAdministrator->getValidReasonList() as $bt)\n\t\t\t{\n\t\t\t\t$i = abs($bt) + 1;\t\t// Forces a single-digit positive number\n\t\t\t\t$text .= \"\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<strong>\".$ipAdministrator->getBanTypeString($bt, FALSE).\"</strong>\n\t\t\t\t\t\t\t\t<div class='field-help'>\".$ipAdministrator->getBanTypeString($bt, TRUE).\"</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t\t\t\".$frm->textarea('ban_text_'.($i), $pref['ban_messages'][$bt], 4, 120, array('size'=>'xxlarge')).\"\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='center'>\".ban_time_dropdown('', BANLAN_32, $pref['ban_durations'][$bt], 'ban_time_'.($i)).\"</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\";\n\t\t\t}\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\t\".$frm->admin_button('update_ban_prefs', LAN_UPDATE, 'update').\"\n\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\t\";\n\t\n\t\t\techo $mes->render().$text; \n\t\t}\t\t\n\n\n\t\tprivate function drop_box($box_name, $curval)\n\t\t{\n\t\t\t$frm = e107::getForm();\n\n\t\t\t$opts = array(50, 100, 150, 200, 250, 300, 400, 500);\n\t\t\t$ret = $frm->select_open($box_name, array('class' => 'tbox'));\n\t\t\tforeach ($opts as $o)\n\t\t\t{\n\t\t\t\t$ret .= $frm->option($o, $o, ($curval == $o));\n\t\t\t}\n\t\t\t$ret .= \"</select>\\n\";\n\t\t\treturn $ret;\n\t\t}\n\n\t\t\n\t\tprotected function optionsPage()\n\t\t{\n\t\t\tif (!getperms('0'))\n\t\t\t{\n\t\t\t\texit();\n\t\t\t}\n\n\t\t\t$mes = e107::getMessage();\n\t\t\t$tp = e107::getParser();\n\t\t\t$sql = e107::getDb();\n\t\t\t$frm = e107::getForm();\n\t\t\t$pref = e107::getPref();\n\n\n\t\t\tif (isset($_POST['update_ban_options']))\n\t\t\t{\n\t\t\t\t$pref['enable_rdns']            = intval($_POST['ban_rdns_on_access']);\n\t\t\t\t$pref['enable_rdns_on_ban']     = intval($_POST['ban_rdns_on_ban']);\n\t\t\t\t$pref['ban_max_online_access']  = intval($_POST['ban_access_guest']).','.intval($_POST['ban_access_member']);\n\t\t\t\t$pref['ban_retrigger']          = intval($_POST['ban_retrigger']);\n\t\t\t\t$pref['ban_date_format']        = $tp->toDB($_POST['ban_date_format']);\n\n\t\t\t\te107::getConfig()->setPref($pref)->save(true,true,true);\n\t\t\t}\n\n\t\t\tif (isset($_POST['remove_expired_bans']))\n\t\t\t{\n\t\t\t\t$result = $sql->delete('banlist',\"`banlist_bantype` < \".eIPHandler::BAN_TYPE_WHITELIST.\" AND `banlist_banexpires` > 0 AND `banlist_banexpires` < \".time());\n\t\t\t\tbanlist_adminlog('12', $result);\n\t\t\t\t$mes->addSuccess(str_replace('[y]', $result, BANLAN_48));\n\t\t\t}\n\n\t\t\tlist($ban_access_guest, $ban_access_member) = explode(',', varset($pref['ban_max_online_access'], '100,200'));\n\t\t\t$ban_access_member = max($ban_access_guest, $ban_access_member);\n\n\n\t\t\t$text = \"\n\t\t\t\t<form method='post' action='\".e_SELF.\"?mode=main&action=options'>\n\t\t\t\t\t<fieldset id='core-banlist-options'>\n\t\t\t\t\t\t<legend>\".BANLAN_72.\"</legend>\n\t\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\".BANLAN_63.\"</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_access', 1, $pref['enable_rdns'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_65.\"</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\".BANLAN_64.\"</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_ban', 1, $pref['enable_rdns_on_ban'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_66.\"</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\".BANLAN_67.\"</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".$this->drop_box('ban_access_guest', $ban_access_guest).BANLAN_70.\"</div>\n\t\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".$this->drop_box('ban_access_member', $ban_access_member).BANLAN_69.\"</div>\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_68.\"</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\".BANLAN_71.\"</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_retrigger', 1, $pref['ban_retrigger'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_73.\"</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t  <td>\".BANLAN_91.\"</td>\n\t\t\t\t\t\t\t\t  <td>\n\t\t\t\t\t\t\t\t  \".$frm->text('ban_date_format', varset($pref['ban_date_format'], '%H:%M %d-%m-%y'), 40).\"\n\t\t\t\t\t\t\t\t  <div class='field-help'>\".BANLAN_92.\"</div>\n\t\t\t\t\t\t\t\t  </td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\t\".$frm->admin_button('update_ban_options', LAN_UPDATE, 'update').\"\n\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset id='core-banlist-options-ban'>\n\t\t\t\t\t\t<legend>\".BANLAN_74.\"</legend>\n\t\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\".BANLAN_75.\"</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\".$frm->admin_button('remove_expired_bans', BANLAN_76, 'delete').\"\n\t\t\t\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\";\n\n\t\t\treturn $text;\n\t\t}\t\t\t\t\n\n\t\tprotected function banlogPage()\n\t\t{\n\t\t\t//FIXME Put LogPage code in here. \n\t\t}\t\n\n}\n\t\t\t\t\n\n\nclass banlist_form_ui extends e_admin_form_ui\n{\n\n\t// Custom Method/Function\n\tfunction banlist_reason($curVal,$mode) //TODO\n\t{\n\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'write': // Edit Page\n\t\t\t\treturn $this->renderElement('banlist_reason', $curVal, array());\n\t\t\t\tbreak;\n\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Custom Method/Function\n\tfunction banlist_ip($curVal,$mode) //TODO\n\t{\n\n\t\tif(!empty($curVal))\n\t\t{\n\t\t\t$tmp = explode(\":\",$curVal);\n\n\t\t\tif(count($tmp) === 8)\n\t\t\t{\n\t\t\t\t$curVal = e107::getIPHandler()->ipDecode($curVal);\n\t\t\t}\n\t\t}\n\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\treturn $curVal;\n\t\t\t\tbreak;\n\n\t\t\tcase 'write': // Edit Page\n\n\t\t\t\treturn $this->text('banlist_ip', $curVal, array());\n\t\t\t\tbreak;\n\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t\n\t// Custom Method/Function \n\tfunction banlist_bantype($curVal,$mode)\n\t{\n\t\n\t\t$ipAdministrator = new banlistManager;\n\t\t\n\t\t// print_a($ipAdministrator->banTypes);\n\t\t \t\t\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\treturn \"<div class='nowrap' title='\".$ipAdministrator->getBanTypeString($curVal, TRUE).\"'>\".$ipAdministrator->getBanTypeString($curVal, FALSE).\"</div>\";\t\t\t\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'write': // Edit Page\n\n\t\t\t\tif ($this->getController()->getMode() == 'white')\n\t\t\t\t{\n\t\t\t\t\treturn $this->hidden('banlist_bantype',eIPHandler::BAN_TYPE_WHITELIST).\"<span class='label label-success'>\".BANLAN_120.\"</span>\";\n\t\t\t\t}\n\t\t\t\telseif($this->getController()->getAction() == 'create')\n\t\t\t\t{\n\t\t\t\t\treturn $this->hidden('banlist_bantype',eIPHandler::BAN_TYPE_MANUAL).\"<span class='label label-important label-danger'>\".BANLAN_121.\"</span>\";\n\t\t\t\t}\n\n\n\n\t\t\t\treturn $this->selectbox('banlist_bantype',$ipAdministrator->banTypes, $curVal);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\t\t\t\treturn  $ipAdministrator->banTypes; \n\t\t\tbreak;\n\t\t}\n\t}\n\n\t\n\t// Custom Method/Function \n\tfunction banlist_banexpires($curVal,$mode)\n\t{\n\t\t\n\t\t$pref = e107::getPref();\n\t\t$date = e107::getDate();\n\t\t$opts = $this->banexpires();\n\t\t\t \t\t\n\t\tswitch($mode)\n\t\t{\n\t\t\tcase 'read': // List Page\n\t\t\t\t$id = $this->getController()->getListModel()->get('banlist_ip');\n\t\t\t//\t$val =  ($curVal ? strftime($pref['ban_date_format'], $curVal).(($curVal < time()) ? ' ('.BANLAN_34.')' : '') : LAN_NEVER); // .\"<br />\".$this->banexpires();\n\t\t\t//\t$val .= \" (\".$curVal.\")\";\n\t\t\t\t// $mod = preg_replace('/[^\\w]/', '', vartrue($_GET['mode'], ''));\n\t\t\t\t$val = vartrue($curVal) ? $date->computeLapse(time(), $curVal) : LAN_NEVER;\n\n\t\t\t\t$val = str_replace(\"ago\", \"\", $val); // quick fix for the 'ago'.\n\t\t\t\t\n\t\t\t\tif(vartrue($curVal) && $curVal < time())\n\t\t\t\t{\n\t\t\t\t\t$val = \tBANLAN_34;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t$source = str_replace('\"',\"'\",json_encode($opts));\n\t\t\t\treturn \"<a class='e-tip e-editable' data-name='banlist_banexpires' data-source=\\\"\".$source.\"\\\"  data-type='select' data-pk='\".$id.\"' data-url='\".e_SELF.\"?mode=&amp;action=inline&amp;id={$id}&amp;ajax_used=1' href='#'>\".$val.\"</a>\";\n\t\t\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'write': // Edit Page\n\t\t\t\tif(!empty($curVal))\n\t\t\t\t{\n\t\t\t\t\t$opts[$curVal] = e107::getParser()->toDate($curVal, 'short');\n\t\t\t\t}\n\n\t\t\t\treturn $this->selectbox('banlist_banexpires',$opts, $curVal);\n\t\t\t\t// return $frm->text('banlist_banexpires',$curVal);\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'filter':\n\t\t\tcase 'batch':\n\t\t\t\treturn  false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\n\tfunction banexpires()\n\t{\n\t\t$intervals = array(0, 1, 2, 3, 6, 8, 12, 24, 36, 48, 72, 96, 120, 168, 336, 672);\n\n\t\t$opts = array();\n\n\t\tforeach ($intervals as $i)\n\t\t{\n\t\t\t$words = \"\";\n\t\t\t\n\t\t\tif ($i == 0)\n\t\t\t{\n\t\t\t\t$opts[$i]  = LAN_NEVER;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telseif (($i % 24) == 0 && $i !== 24)\n\t\t\t{\n\t\t\t\t$words = floor($i / 24).' '.BANLAN_23;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$words = $i.' '.BANLAN_24;\n\t\t\t}\n\t\t\t\n\t\t\t$calc = time() + ($i * 60 * 60);\n\t\t\t\n\t\t\t$opts[$calc] = $words; \n\t\t}\n\t//\tprint_a($opts);\n\t\treturn $opts;\t\t\n\t}\n\n}\n\n\n\n\n\tclass failed_ui extends e_admin_ui\n\t{\n\n\t\tprotected $pluginTitle\t\t= BANLAN_16;\n\t\tprotected $pluginName\t\t= 'failed_login';\n\t\tprotected $table\t\t\t= 'generic';\n\t\tprotected $pid\t\t\t\t= 'gen_id';\n\t\tprotected $perPage \t\t\t= 10;\n\t\tprotected $listQry\t\t\t= \"SELECT * FROM `#generic` WHERE gen_type='failed_login' \";\n\t\tprotected $listOrder        = \"gen_datestamp DESC\";\n\n\t\tprotected $fields \t\t= array (  'checkboxes' =>   array ( 'title' => '', 'type' => null, 'data' => null, 'width' => '5%', 'thclass' => 'center', 'forced' => '1', 'class' => 'center', 'toggle' => 'e-multiselect',  ),\n\t\t                                    'gen_id' \t\t\t\t=> array ( 'title' => LAN_ID,\t 'nolist'=>true,\t'data' => 'int', 'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t\t//\t  'gen_type' \t\t\t=> array ( 'title' => LAN_BAN, \t'type' => 'method', 'data' => 'str', 'width' => 'auto', 'batch' => true, 'filter' => true, 'inline' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_datestamp' \t\t=> array ( 'title' => LAN_DATESTAMP, 'type' => 'datestamp', 'data' => 'int', 'width' => 'auto', 'filter' => true, 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_chardata' \t\t=> array ( 'title' => LAN_DESCRIPTION, 'type' => 'method', 'data' => 'str', 'width' => '40%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left', 'filter'=>true ),\n\n\t\t\t//\t  'gen_user_id' \t\t=> array ( 'title' => LAN_BAN, 'type' => 'method', 'batch'=>true, 'data' => 'int', 'width' => '5%', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t                                    'gen_ip' \t\t\t\t=> array ( 'title' => LAN_IP, 'type' => 'ip', 'data' => 'str', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'left', 'thclass' => 'left',  ),\n\t\t\t//\t  'gen_intdata' \t\t=> array ( 'title' =>  LAN_BAN, 'type' => 'method', 'batch'=>true, 'data' => 'int', 'width' => 'auto', 'help' => '', 'readParms' => '', 'writeParms' => '', 'class' => 'center', 'thclass' => 'center',  ),\n\t\t                                    'options'\t\t\t\t=> array ( 'title' => LAN_OPTIONS, 'type' => null, 'data' => null, 'width' => '10%', 'thclass' => 'center last', 'class' => 'center last', 'forced' => '1', 'readParms'=>'edit=0'  ),\n\t\t);\n\n\t\tprotected $fieldpref = array('gen_datestamp', 'gen_ip', 'gen_chardata');\n\n\t\tprotected $batchOptions = array();\n\n\t\t// optional\n\t\tpublic function init()\n\t\t{\n\t\t\tif($_POST['etrigger_batch'] == 'gen_intdata__1' && count($_POST['e-multiselect'])) // Do we need BAN here?\n\t\t\t{\n\t\t\t\t$dels = implode(',',$_POST['e-multiselect']);\n\t\t\t\t//$e107::getDb()->insert('banlist',\n\t\t\t}\n\n\t\t\t$allFailedTotal = e107::getDB()->count('generic', '(*)', \"gen_type='failed_login'\");\n\n\t\t\t$this->batchOptions = array('delete-all'=>str_replace('[x]', $allFailedTotal, BANLAN_127));\n\n\t\t\tif(!empty($_POST['etrigger_batch']) && $_POST['etrigger_batch'] == \"delete-all\")\n\t\t\t{\n\t\t\t\t$this->deleteAllFailed();\n\t\t\t}\n\n\t\t\n\t\t}\n\n\t\tprivate function deleteAllFailed()\n\t\t{\n\n\t\t\tif(e107::getDB()->delete('generic', \"gen_type='failed_login'\"))\n\t\t\t{\n\t\t\t\te107::getMessage()->addSuccess(LAN_DELETED);\n\t\t\t}\n\t\t}\n\n\t\tpublic function afterDelete($data)\n\t\t{\n\t\t\t//\t$sql2->db_Delete('banlist', \"banlist_ip='{$banIP}'\");\n\t\t}\n\n\t}\n\n\n\n\tclass failed_form_ui extends e_admin_form_ui\n\t{\n\n\n\t\t// Custom Method/Function\n\t\tfunction gen_intdata($curVal,$mode)\n\t\t{\n\t\t\t$frm = e107::getForm();\n\n\t\t\tswitch($mode)\n\t\t\t{\n\t\t\t\tcase 'read': // List Page\n\t\t\t\t\treturn $curVal;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'write': // Edit Page\n\t\t\t\t\treturn $frm->text('gen_type',$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'batch':\n\t\t\t\t\treturn  array(1=>LAN_BAN);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\n\t\t// Custom Method/Function\n\t\tfunction gen_chardata($curVal,$mode)\n\t\t{\n\t\t\t$frm = e107::getForm();\n\n\t\t\tswitch($mode)\n\t\t\t{\n\t\t\t\tcase 'read': // List Page\n\t\t\t\t\treturn str_replace(\":::\",\"<br />\",$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'write': // Edit Page\n\t\t\t\t\treturn $frm->text('gen_chardata',$curVal);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'batch':\n\t\t\t\t\t//\treturn  $array;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tnew banlist_admin();\n\nrequire_once(e_ADMIN.\"auth.php\");\ne107::getAdminUI()->runPage();\n\n\nrequire_once(e_ADMIN.'footer.php');\nexit;\n\n\n\n// Unused code below, but left here for reference.\n\n\n\n$e_sub_cat = 'banlist';\nrequire_once('auth.php');\n$frm = e107::getForm();\n// $frm = new e_form(true);\n\n$mes = e107::getMessage();\n\n$pref = e107::getPref();\n\n// Set a default to avoid issues with legacy systems\nif (!isset($pref['ban_date_format'])) $pref['ban_date_format'] = '%H:%M %d-%m-%y';\n\n$ipAdministrator = new banlistManager;\n\n// Character options for import & export\n$separator_char = array(1 => ',', 2 => '|');\n$quote_char = array(1 => '(none)', 2 => \"'\", 3 => '\"');\n\n\n$action = 'list';\nif (e_QUERY)\n{\n\t$tmp = explode('-', e_QUERY);\t\t// Use '-' instead of '.' to avoid confusion with IP addresses\n\t$action = $tmp[0];\n\t$sub_action = varset($tmp[1], '');\n\tif ($sub_action) $sub_action = preg_replace('/[^\\w*@\\.:]*/', '', urldecode($sub_action));\n\t$id = intval(varset($tmp[2], 0));\n\tunset($tmp);\n}\n\nif($_GET['action']) // Temporary Fix. \n{\n\t$action = $_GET['action'];\t\n}\n\n\n\n\n\n$writeBanFile = FALSE;\nif (isset($_POST['ban_ip']))\n{\n\t$_POST['ban_ip'] = trim($_POST['ban_ip']);\n\t$new_ban_ip = preg_replace('/[^\\w*@\\.:]*/', '', urldecode($_POST['ban_ip']));\n\tif ($new_ban_ip != $_POST['ban_ip'])\n\t{\n\t\t$message = BANLAN_27.' '.$new_ban_ip;\n\t\t//$ns->tablerender(BANLAN_9, $message);\n\t\t$mes->add(BANLAN_33, $message);\n\t\t$_POST['ban_ip'] = $new_ban_ip;\n\t}\n\n\tif (isset($_POST['entry_intent']) && (isset($_POST['add_ban']) || isset($_POST['update_ban'])) && $_POST['ban_ip'] != \"\" && strpos($_POST['ban_ip'], ' ') === false)\n\t{\n\t\t/*\t$_POST['entry_intent'] says why we're here:\n\t\t\t\t'edit' \t- Editing blacklist\n\t\t\t\t'add'\t- Adding to blacklist\n\t\t\t\t'whedit' - Editing whitelist\n\t\t\t\t'whadd'\t- Adding to whitelist\n\t\t*/\n\t\tif(e107::getIPHandler()->whatIsThis($new_ban_ip) == 'ip')\n\t\t{\n\t\t\t$new_ban_ip = e107::getIPHandler()->IPencode($new_ban_ip, TRUE); // Normalise numeric IP addresses (allow wildcards)\n\t\t}\n\t\t$new_vals = array('banlist_ip' => $new_ban_ip);\n\t\tif (isset($_POST['add_ban']))\n\t\t{\n\t\t\t$new_vals['banlist_datestamp'] = time();\n\t\t\tif ($_POST['entry_intent'] == 'add') $new_vals['banlist_bantype'] = eIPHandler::BAN_TYPE_MANUAL;\t\t// Manual ban\n\t\t\tif ($_POST['entry_intent'] == 'whadd') $new_vals['banlist_bantype'] = eIPHandler::BAN_TYPE_WHITELIST;\n\t\t}\n\t\t$new_vals['banlist_admin'] = ADMINID;\n\t\t$new_vals['banlist_reason'] = $tp->toDB(varset($_POST['ban_reason'], ''));\n\t\t$new_vals['banlist_notes'] = $tp->toDB($_POST['ban_notes']);\n\t\tif (isset($_POST['ban_time']) && is_numeric($_POST['ban_time']) && (($_POST['entry_intent']== 'edit') || ($_POST['entry_intent'] == 'add')))\n\t\t{\n\t\t\t$bt = intval($_POST['ban_time']);\n\t\t\t$new_vals['banlist_banexpires'] = $bt ? time() + ($bt*60*60) : 0;\n\t\t}\n\t\tif (isset($_POST['add_ban']))\n\t\t{  // Insert new value - can just pass an array\n\t\t\te107::getMessage()->addAuto($sql->db_Insert('banlist', $new_vals), 'insert');\n\t\t\tif ($_POST['entry_intent'] == 'add')\n\t\t\t{\n\t\t\t\tbanlist_adminlog('01', $new_vals['banlist_ip']);\t\t// Write to banlist\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbanlist_adminlog('04', $new_vals['banlist_ip']);\t\t// Write to whitelist\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{  // Update existing value\n\t\t\t$qry = '';\n\t\t\t$spacer = '';\n\t\t\tforeach ($new_vals as $k => $v)\n\t\t\t{\n\t\t\t\t$qry .= $spacer.\"`{$k}`='$v'\";\n\t\t\t\t$spacer = ', ';\n\t\t\t}\n\t\t\te107::getMessage()->addAuto($sql->db_Update('banlist', $qry.\" WHERE banlist_ip='\".$_POST['old_ip'].\"'\"));\n\t\t\tif ($_POST['entry_intent'] == 'edit')\n\t\t\t{\n\t\t\t\tbanlist_adminlog('09',$new_vals['banlist_ip']);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbanlist_adminlog('10',$new_vals['banlist_ip']);\n\t\t\t}\n\t\t}\n\t\tunset($ban_ip);\n\t\t$writeBanFile = TRUE;\n\t}\n}\n\n\n\n// Remove a ban\nif (($action == 'remove' || $action == 'whremove') && isset($_POST['ban_secure'])) \n{\n\t$sql->db_Delete('generic', \"gen_type='failed_login' AND gen_ip='{$sub_action}'\");\n\te107::getMessage()->addAuto($sql->db_Delete('banlist', \"banlist_ip='{$sub_action}'\"), 'delete');\n\tif ($action == \"remove\")\n\t{\n\t\t$action = 'list';\n\t\tbanlist_adminlog('02', $sub_action);\n\t}\n\telse\n\t{\n\t\t$action = 'white';\n\t\tbanlist_adminlog('05', $sub_action);\n\t}\n\t$writeBanFile = TRUE;\n}\n\n\n\n// Update the ban expiry time/date - timed from now (only done on banlist)\nif ($action == 'newtime')\n{\n\t$end_time = $id ? time() + ($id*60*60) : 0;\n\te107::getMessage()->addAuto($sql->db_Update('banlist', 'banlist_banexpires='.intval($end_time).\" WHERE banlist_ip='\".$sub_action.\"'\"));\n\tbanlist_adminlog('03', $sub_action);\n\t$action = 'list';\n\t$writeBanFile = TRUE;\n}\n\n\nif ($writeBanFile)\n{\n/************************************************\n\t\tupdate list of banned IPs\n*************************************************/\n\t$ipAdministrator->writeBanListFiles('ip,htaccess');\n\tif (!$ipAdministrator->doesMessageFileExist())\n\t{\n\t\t$ipAdministrator->writeBanMessageFile();\t\t// Message file must exist - may not on fresh site\n\t\tbanlist_adminlog('08','');\n\t\t$mes->addSuccess(LAN_UPDATED);\n\t}\n}\n\n\n\n/**\n *\t@todo - eliminate extract();\n */\n// Edit modes - get existing entry\nif ($action == 'edit' || $action == 'whedit')\n{\n\t$sql->db_Select('banlist', '*', \"banlist_ip='{$sub_action}'\");\n\t$row = $sql->db_Fetch();\n\textract($row);\t\t\t\t//FIXME - kill extract()\n}\nelse\n{\n\tunset($banlist_ip, $banlist_reason);\n\tif (e_QUERY && ($action == 'add' || $action == 'whadd') && strpos($_SERVER[\"HTTP_REFERER\"], \"userinfo\"))\n\t{\n\t\t$banlist_ip = $sub_action;\n\t}\n}\n\n\n\n/**\n *\tCreate dropdown with options for ban time - uses internal fixed list of reasonable values\n */\nfunction ban_time_dropdown($click_js = '', $zero_text = LAN_NEVER, $curval = -1, $drop_name = 'ban_time')\n{\n\t$frm = e107::getForm();\n\t$intervals = array(0, 1, 2, 3, 6, 8, 12, 24, 36, 48, 72, 96, 120, 168, 336, 672);\n\n\t$ret = $frm->select_open($drop_name, array('other' => $click_js, 'id' => false));\n\t$ret .= $frm->option('&nbsp;', '');\n\tforeach ($intervals as $i)\n\t{\n\t\tif ($i == 0)\n\t\t{\n\t\t\t$words = $zero_text ? $zero_text : LAN_NEVER;\n\t\t}\n\t\telseif (($i % 24) == 0)\n\t\t{\n\t\t\t$words = floor($i / 24).' '.BANLAN_23;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$words = $i.' '.BANLAN_24;\n\t\t}\n\t\t$ret .= $frm->option($words, $i, ($curval == $i));\n\t}\n\t$ret .= '</select>';\n\treturn $ret;\n}\n\n\n\n\n/**\n *\tCreate generic dropdown from array of data\n */\nfunction select_box($name, $data, $curval = FALSE)\n{\n\tglobal $frm;\n\n\t$ret = $frm->select_open($name, array('class' => 'tbox', 'id' => false));\n\tforeach ($data as $k => $v)\n\t{\n\t\t$ret .= $frm->option($v, $k, ($curval !== FALSE) && ($curval == $k));\n\t}\n\t$ret .= \"</select>\\n\";\n\treturn $ret;\n}\n\n\n\n/**\n *\tCreate dropdown with options for access counts before ban - uses internal fixed list of reasonable values\n */\nfunction drop_box($box_name, $curval)\n{\n\tglobal $frm;\n\n\t$opts = array(50, 100, 150, 200, 250, 300, 400, 500);\n\t$ret = $frm->select_open($box_name, array('class' => 'tbox'));\n\tforeach ($opts as $o)\n\t{\n\t\t$ret .= $frm->option($o, $o, ($curval == $o));\n\t}\n\t$ret .= \"</select>\\n\";\n\treturn $ret;\n}\n\n\n\n$text = '';\n\n\nswitch ($action)\n{\n\tcase 'banlog' :\n\t\tif(!getperms('0')) exit;\n\t\tif (isset($_POST['delete_ban_log']))\n\t\t{\n\t\t\t$message = ($ipAdministrator->deleteLogFile() ? BANLAN_89 : BANLAN_90);\n\t\t\te107::getRender()->tablerender(BANLAN_88, \"<div style='text-align:center; font-weight:bold'>\".$message.\"</div>\"); // FIXME\n\t\t}\n\t\t$from = 0;\n\t\t$amount = 20;\t\t// Number per page - could make configurable later if required\n\t\tif ($sub_action) $from = intval($sub_action);\n\n// @todo format form the 0.8 way\n\t\t$text = \"<div style='text-align:center'>\n\t\t<form method='post' action='\".e_SELF.\"?banlog-\".$from.\"'>\n\t\t<table class='table adminform'>\n\t\t<colgroup>\n\t\t\t<col style='width:20%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t\t<col style='width:30%; vertical-align:top;' />\n\t\t</colgroup>\";\n\n\t\t// Get entries\n\t\t$banLogEntries = $ipAdministrator->getLogEntries($from, $amount, $num_entry);\n\t\tif (count($banLogEntries) == 0)\n\t\t{\n\t\t  $text .= \"<tbody><tr><td colspan='4'>\".BANLAN_82.\"</td></tr>\";\n\t\t  $num_entry = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= \"<thead><tr><td class='fcaption'>\".BANLAN_83.\"</td><td class='fcaption'>\".BANLAN_84.\"</td>\n\t\t\t\t<td class='fcaption'>\".BANLAN_7.\"</td><td class='fcaption'>\".BANLAN_85.\"</td></tr></thead><tbody>\";\n\t\t\tforeach ($banLogEntries as $ban)\n\t\t\t{\n\t\t\t\t$row = $ipAdministrator->splitLogEntry($ban);\n\t\t\t\t$text .= \"\n\t\t\t\t\t<tr>\n\t\t\t\t\t<td class='forumheader3'>\".strftime($pref['ban_date_format'], $row['banDate']).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".e107::getIPHandler()->ipDecode($row['banIP']).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".$ipAdministrator->getBanTypeString($row['banReason'], FALSE).\"</td>\n\t\t\t\t\t<td class='forumheader3'>\".$row['banNotes'].\"</td>\n\t\t\t\t\t</tr>\";\n\t\t\t}  // End while\n\n\t\t\t// Next-Previous. ==========================\n\t\t\tif ($num_entry > $amount) \n\t\t\t{\n\t\t\t\t$parms = \"{$num_entry},{$amount},{$from},\".e_SELF.\"?\".$action.'-[FROM]';\n\t\t\t\t$text .= \"<tr><td colspan='5' style='text-align:center'><br />\".$tp->parseTemplate(\"{NEXTPREV={$parms}}\".'<br /><br /></td></tr>');\n\t\t\t}\n\t\t\t$text .= \"<tr><td colspan='4' style='text-align:center'>\n\t\t\t\t\t\t<input class='btn btn-default btn-secondary button' type='submit' name='delete_ban_log' value='\".BANLAN_88.\"' />\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\";\n\t\t}\n\t\t$text .= \"</tbody></table></form></div>\";\n\n\t\tif (count($banLogEntries))\n\t\t{\n\t\t\t$text .= \"&nbsp;&nbsp;&nbsp;\".str_replace('[y]', $num_entry, BANLAN_87);\n\t\t}\n\t\t\n\t\techo $text; \n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_86, $text);\n\t\tbreak;\n\n\n\tcase 'options' :\n\t\tif (!getperms('0'))\n\t\t\texit();\n\t\tif (isset($_POST['update_ban_options']))\n\t\t{\n\t\t\t$pref['enable_rdns'] = intval($_POST['ban_rdns_on_access']);\n\t\t\t$pref['enable_rdns_on_ban'] = intval($_POST['ban_rdns_on_ban']);\n\t\t\t$pref['ban_max_online_access'] = intval($_POST['ban_access_guest']).','.intval($_POST['ban_access_member']);\n\t\t\t$pref['ban_retrigger'] = intval($_POST['ban_retrigger']);\n\t\t\t$pref['ban_date_format'] = $tp->toDB($_POST['ban_date_format']);\n\t\t\tsave_prefs();\t\t\t\t\t\t// @todo FIXME log detail of changes. Right prefs to use?\n\t\t\t$mes->addSuccess(LAN_SETSAVED);\n\t\t}\n\n\t\tif (isset($_POST['remove_expired_bans']))\n\t\t{\n\t\t\t$result = $sql->db_Delete('banlist',\"`banlist_bantype` < \".eIPHandler::BAN_TYPE_WHITELIST.\" AND `banlist_banexpires` > 0 AND `banlist_banexpires` < \".time());\n\t\t\tbanlist_adminlog('12', $result);\n\t\t\t$mes->addSuccess(str_replace('[y]', $result, BANLAN_48));\n\t\t}\n\n\t\tlist($ban_access_guest, $ban_access_member) = explode(',', varset($pref['ban_max_online_access'], '100,200'));\n\t\t$ban_access_member = max($ban_access_guest, $ban_access_member);\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_SELF.\"?options'>\n\t\t\t\t<fieldset id='core-banlist-options'>\n\t\t\t\t\t<legend>\".BANLAN_72.\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_63.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_access', 1, $pref['enable_rdns'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_65.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_64.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_rdns_on_ban', 1, $pref['enable_rdns_on_ban'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_66.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_67.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".drop_box('ban_access_guest', $ban_access_guest).BANLAN_70.\"</div>\n\t\t\t\t\t\t\t\t\t<div class='field-spacer'>\".drop_box('ban_access_member', $ban_access_member).BANLAN_69.\"</div>\n\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_68.\"</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_71.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div class='auto-toggle-area autocheck'>\n\t\t\t\t\t\t\t\t\t\t\".$frm->checkbox('ban_retrigger', 1, $pref['ban_retrigger'] == 1).\"\n\t\t\t\t\t\t\t\t\t\t<div class='field-help'>\".BANLAN_73.\"</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t  <td>\".BANLAN_91.\"</td>\n\t\t\t\t\t\t\t  <td>\n\t\t\t\t\t\t\t  \".$frm->text('ban_date_format', varset($pref['ban_date_format'], '%H:%M %d-%m-%y'), 40).\"\n\t\t\t\t\t\t\t  <div class='field-help'>\".BANLAN_92.\"</div>\n\t\t\t\t\t\t\t  </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\".$frm->admin_button('update_ban_options', LAN_UPDATE, 'update').\"\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t\t<fieldset id='core-banlist-options-ban'>\n\t\t\t\t\t<legend>\".BANLAN_74.\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_75.\"</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->admin_button('remove_expired_bans', BANLAN_76, 'delete').\"\n\t\t\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\t\t\n\t\techo $mes->render().$text; \n\t\t\n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.LAN_OPTIONS, $mes->render().$text);\n\t\tbreak;\n\n\tcase 'times' :\n\n\t\t\t\n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_77, $mes->render().$text);\n\t\tbreak;\n\n\tcase 'edit' :\t\t// Edit an existing ban\n\tcase 'add' :\t\t// Add a new ban\n\tcase 'whedit' :\t\t// Edit existing whitelist entry\n\tcase 'whadd' :\t\t// Add a new whitelist entry\n\t\n\t\tif(!E107_DEBUG_LEVEL)\n\t\t{\n\t\t\tbreak;\t\n\t\t}\n\t\tRETURN;\n\t\n\t\tif (!isset($banlist_reason)) $banlist_reason = '';\n\t\tif (!isset($banlist_ip)) $banlist_ip = '';\n\t\tif (!isset($banlist_notes)) $banlist_notes = '';\n\n\t\t$page_title = array('edit' => BANLAN_60, 'add' => BANLAN_9, 'whedit' => BANLAN_59, 'whadd' => BANLAN_58);\n\t\t$rdns_warn = vartrue($pref['enable_rdns']) ? '' : '<div class=\"field-help error\">'.BANLAN_12.'</div>';\n\t\t$next = ($action == 'whedit' || $action == 'whadd') ? '?white' : '?list';\n\t\t// Edit/add form first\n\t\t$text .= \"\n\t\t\t<form method='post' action='\".e_SELF.$next.\"'>\n\t\t\t\t<fieldset id='core-banlist-edit'>\n\t\t\t\t\t<legend class='e-hideme'>\".$page_title[$action].\"</legend>\n\t\t\t\t\t<table class='table adminform'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col class='col-label' />\n\t\t\t\t\t\t\t<col class='col-control' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".BANLAN_5.\":\n\t\t\t\t\t\t\t\t\t<div class='label-note'>\n\t\t\t\t\t\t\t\t\t\t\".BANLAN_13.\"<a href='\".e_ADMIN_ABS.\"users.php'>\".E_16_CAT_USER.\"</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input type='hidden' name='entry_intent' value='{$action}' />\n\t\t\t\t\t\t\t\t\t\".$frm->text('ban_ip', e107::getIPHandler()->ipDecode($banlist_ip), 200).\"\n\t\t\t\t\t\t\t\t\t{$rdns_warn}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\";\n\n\t\tif (($action == 'add') || ($action == 'whadd') || ($banlist_bantype <= 1) || ($banlist_bantype >= eIPHandler::BAN_TYPE_WHITELIST))\n\t\t{ // Its a manual or unknown entry - only allow edit of reason on those\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_7.\": </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->textarea('ban_reason', $banlist_reason, 4, 50).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\t\telseif ($action == 'edit')\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_7.\": </td>\n\t\t\t\t\t\t\t\t<td>{$banlist_reason}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\tif ($action == 'edit')\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_28.\": </td>\n\t\t\t\t\t\t\t\t<td>\".$ipAdministrator->getBanTypeString($banlist_bantype, FALSE).\" - \".$ipAdministrator->getBanTypeString($banlist_bantype, TRUE).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_19.\": </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\".$frm->textarea('ban_notes', $banlist_notes, 4, 50).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\";\n\n\t\tif ($action == 'edit' || $action == 'add')\n\t\t{\n\t\t\t$inhelp = (($action == 'edit') ? '<div class=\"field-help\">'.BANLAN_26.($banlist_banexpires ? strftime($pref['ban_date_format'], $banlist_banexpires) : LAN_NEVER).'</div>' : '');\n\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_18.\": </td>\n\t\t\t\t\t\t\t\t<td>\".ban_time_dropdown().$inhelp.\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t<div class='buttons-bar center'>\n\n\t\t\";\n\n\t\t/* FORM NOTE EXAMPLE - not needed here as this note is added as label-note (see below)\n\t\t$text .= \"\n\t\t\t<div class='form-note'>\n\t\t\t\t\".BANLAN_13.\"<a href='\".e_ADMIN_ABS.\"users.php'><img src='\".e_IMAGE_ABS.'admin_imaXXXges/'.\"users_16.png' alt='' /></a>\n\t\t\t</div>\n\n\t\t\";\n\t\t*/\n\n\t\tif ($action == 'edit' || $action == 'whedit')\n\t\t{\n\t\t\t$text .= \"<input type='hidden' name='old_ip' value='{$banlist_ip}' />\n\t\t\t\t\".$frm->admin_button('update_ban', LAN_UPDATE, 'update');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= $frm->admin_button('add_ban', ($action == 'add' ? BANLAN_8 : BANLAN_53), 'create');\n\t\t}\n\n\t\t$text .= \"</div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo  $mes->render().$text; \n\t//\te107::getRender()->tablerender($page_title[$action], $mes->render().$text);\n\t\tbreak;\t\t// End of 'Add' and 'Edit'\n\n\n\tcase 'transfer' :\n\t\t$message = '';\n\t\t$error = false;\n\t\tif (isset($_POST['ban_import']))\n\t\t{ // Got a file to import\n\t\t\trequire_once(e_HANDLER.'upload_handler.php');\n\t\t\tif (($files = process_uploaded_files(e_UPLOAD, FALSE, array('overwrite' => TRUE, 'max_file_count' => 1, 'file_mask' => 'csv'))) === FALSE)\n\t\t\t{ // Invalid file\n\t\t\t\t$error = true;\n\t\t\t\t$mes->addError(BANLAN_47);\n\t\t\t}\n\t\t\tif(empty($files) || vartrue($files[0]['error']))\n\t\t\t{\n\t\t\t\t$error = true;\n\t\t\t\tif(varset($files[0]['message']))\n\t\t\t\t\t$mes->addError($files[0]['message']);\n\t\t\t}\n\t\t\tif(!$error)\n\t\t\t{ // Got a file of some sort\n\t\t\t\t$message = process_csv(e_UPLOAD.$files[0]['name'],\n\t\t\t\t\t\t\t\t\t\tintval(varset($_POST['ban_over_import'], 0)),\n\t\t\t\t\t\t\t\t\t\tintval(varset($_POST['ban_over_expiry'], 0)),\n\t\t\t\t\t\t\t\t\t\t$separator_char[intval(varset($_POST['ban_separator'], 1))],\n\t\t\t\t\t\t\t\t\t\t$quote_char[intval(varset($_POST['ban_quote'], 3))]);\n\t\t\t\tbanlist_adminlog('07', 'File: '.e_UPLOAD.$files[0]['name'].'<br />'.$message);\n\t\t\t}\n\n\t\t}\n\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_ADMIN_ABS.\"banlist_export.php' id='core-banlist-transfer-form' >\n\t\t\t\t<fieldset id='core-banlist-transfer-export'>\n\t\t\t\t\t<legend>\".BANLAN_40.\"</legend>\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th colspan='2'>\".BANLAN_36.\"</th>\n\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\";\n\n\n\t\tforeach ($ipAdministrator->getValidReasonList() as $i) //FIXME $frm->label()\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='3'>\n\t\t\t\t\t\t\t\t\".$frm->checkbox(\"ban_types[{$i}]\", $i).$frm->label($ipAdministrator->getBanTypeString($i, FALSE), \"ban_types[{$i}]\", $i).\"\n\t\t\t\t\t\t\t\t<span class='field-help'>(\".$ipAdministrator->getBanTypeString($i, TRUE).\")</span>\n\t\t\t\t\t\t\t</td></tr>\n\t\t\t\";\n\t\t}\n\n\t\t$text .= \"<tr>\n\t\t\t<td>\".BANLAN_79.\"</td>\n\t\t\t<td>\".select_box('ban_separator', $separator_char).' '.BANLAN_37.\"</td>\n\t\t<td>\".select_box('ban_quote', $quote_char).' '.BANLAN_38.\"</td></tr>\";\n\t\t$text .= \"\n\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div class='buttons-bar center'>\".$frm->admin_button('ban_export', BANLAN_39, 'export', BANLAN_39).\"</div>\n\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\t// Now do the import options\n\t\t$text .= \"\n\t\t\t<form enctype='multipart/form-data' method='post' action='\".e_SELF.\"?transfer' id='ban_import_form' >\n\t\t\t\t<fieldset id='core-banlist-transfer-import'>\n\t\t\t\t\t<legend>\".BANLAN_41.\"</legend>\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:30%' />\n\t\t\t\t\t\t\t<col style='width:40%' />\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th colspan='2'>\".BANLAN_42.\"</th>\n\t\t\t\t\t\t\t\t<th>&nbsp;</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan='3'>\".$frm->checkbox('ban_over_import', 1, '', array('label' => BANLAN_43)).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan='3'>\".$frm->checkbox('ban_over_expiry', 1, '', array('label' => BANLAN_44)).\"</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\".BANLAN_46.\"</td>\n\t\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t\t\".$frm->file('file_userfile[]', array('size' => '40')).\"\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t<td>\".BANLAN_80.\"</td>\n\t\t\t<td>\".select_box('ban_separator', $separator_char).' '.BANLAN_37.\"</td>\n\t\t<td>\".select_box('ban_quote', $quote_char).' '.BANLAN_38.\"</td></tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t<div class='buttons-bar center'>\n\t\t\t\t\t\t\t\t\".$frm->admin_button('ban_import', BANLAN_45, 'import').\"\n\t\t\t\t\t\t\t\t<input type='hidden' name='e-token' value='\".e_TOKEN.\"' />\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo $mes->render().$text; \n\t//\te107::getRender()->tablerender(BANLAN_16.SEP.BANLAN_35, $mes->render().$text);\n\t\tbreak;\t\t// End case 'transfer'\n\n\tcase 'list' :\n\tcase 'white' :\n\tdefault :\n\t\t\n\t\tif(!E107_DEBUG_LEVEL)\n\t\t{\n\t\t\tbreak;\t\n\t\t}\n\t\t\n\t\tif (($action != 'list') && ($action != 'white'))\n\t\t\t$action = 'list';\n\n\t\t$edit_action = ($action == 'list' ? 'edit' : 'whedit');\n\t\t$del_action = ($action == 'list' ? 'remove' : 'whremove');\n\t\t$col_widths = array('list' => array(10, 5, 35, 30, 10, 10), 'white' => array(15, 40, 35, 10));\n\t\t$col_titles = array('list' => array(BANLAN_17, BANLAN_20, BANLAN_10, BANLAN_19, BANLAN_18, LAN_OPTIONS),\n\t\t\t\t\t\t\t'white' => array(BANLAN_55, BANLAN_56, BANLAN_19, LAN_OPTIONS));\n\t\t$no_values = array('list' => BANLAN_2, 'white' => BANLAN_54);\n\t\t$col_defs = array('list' => array('banlist_datestamp' => 0, 'banlist_bantype' => 0, 'ip_reason' => BANLAN_7, 'banlist_notes' => 0, 'banlist_banexpires' => 0, 'ban_options' => 0),\n\t\t\t\t\t\t'white' => array('banlist_datestamp' => 0, 'ip_reason' => BANLAN_57, 'banlist_notes' => 0, 'ban_options' => 0));\n\n\t\t$text = \"\n\t\t\t<form method='post' action='\".e_SELF.'?'.$action.\"' id='core-banlist-form'>\n\t\t\t\t<fieldset id='core-banlist'>\n\t\t\t\t\t<legend class='e-hideme'>\".($action == 'list' ? BANLAN_3 : BANLAN_61).\"</legend>\n\t\t\t\t\t\".$frm->hidden(\"ban_secure\", \"1\").\"\n\t\t\";\n\n\t\t$filter = ($action == 'white') ? 'banlist_bantype='.eIPHandler::BAN_TYPE_WHITELIST : 'banlist_bantype!='.eIPHandler::BAN_TYPE_WHITELIST;\n\n\n\t\tif(!$ban_total = $sql->db_Select(\"banlist\", \"*\", $filter.\" ORDER BY banlist_ip\"))\n\t\t{\n\t\t\t//$text .= \"<div class='center'>\".$no_values[$action].\"</div>\";\n\t\t\t$mes->addInfo($no_values[$action]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$text .= \"\n\t\t\t\t\t<table class='table adminlist'>\n\t\t\t\t\t\t<colgroup>\n\t\t\t\";\n\t\t\tforeach($col_widths[$action] as $fw)\n\t\t\t{\n\t\t\t\t$text .= \"\n\t\t\t\t\t\t\t\t<col style='width:{$fw}%' />\n\t\t\t\t\";\n\t\t\t}\n\t\t\t$text .= \"\n\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\";\n\t\t\t$cnt = 0;\n\t\t\tforeach($col_titles[$action] as $ct)\n\t\t\t{\n\t\t\t\t$cnt ++;\n\t\t\t\t$text .= \"<th\".(($cnt == count($col_widths[$action])) ? \" class='center last'\" : \"\").\">{$ct}</th>\";\n\t\t\t}\n\t\t\t$text .= \"</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\";\n\t\t\twhile($row = $sql->db_Fetch())\n\t\t\t{\n\t\t\t\t//extract($row);//FIXME - kill extract()\n\t\t\t\t$row['banlist_reason'] = str_replace('LAN_LOGIN_18', BANLAN_11, $row['banlist_reason']);\n\t\t\t\t$text .= \"<tr>\";\n\t\t\t\tforeach($col_defs[$action] as $cd => $fv)\n\t\t\t\t{\n\t\t\t\t\t$row_class = '';\n\t\t\t\t\tswitch($cd)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'banlist_datestamp':\n\t\t\t\t\t\t\t$val = ($row['banlist_datestamp'] ? strftime($pref['ban_date_format'], $row['banlist_datestamp']) : BANLAN_22);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_bantype':\n\t\t\t\t\t\t\t$val = \"<div class='nowrap' title='\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], TRUE).\"'>\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], FALSE).\" <a href='#' title='\".$ipAdministrator->getBanTypeString($row['banlist_bantype'], TRUE).\"' onclick='return false;'>\".E_16_USER.\"</a></div>\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'ip_reason':\n\t\t\t\t\t\t\t$val = e107::getIPHandler()->ipDecode($row['banlist_ip']).\"<br />\".$fv.\": \".$row['banlist_reason'];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_banexpires':\n\t\t\t\t\t\t\t$val = ($row['banlist_banexpires'] ? strftime($pref['ban_date_format'], $row['banlist_banexpires']).(($row['banlist_banexpires'] < time()) ? ' ('.BANLAN_34.')' : '') : LAN_NEVER).\"<br />\".ban_time_dropdown(\"onchange=\\\"e107Helper.urlJump('\".e_SELF.\"?newtime-{$row['banlist_ip']}-'+this.value)\\\"\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'ban_options':\n\t\t\t\t\t\t\t$row_class = ' class=\"center\"';\n\t\t\t\t\t\t\t$val = \"\n\t\t\t\t\t\t\t<a class='action edit' href='\".e_SELF.\"?{$edit_action}-{$row['banlist_ip']}'>\".ADMIN_EDIT_ICON.\"</a>\n<input class='action delete no-confirm' name='delete_ban_entry' value='\".e_SELF.\"?{$del_action}-{$row['banlist_ip']}' type='image' src='\".ADMIN_DELETE_ICON_PATH.\"' alt='\".LAN_DELETE.\"' title='\".$tp->toJS(LAN_CONFIRMDEL.\" [\".e107::getIPHandler()->ipDecode($row['banlist_ip']).\"]\").\"' />\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'banlist_notes':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$val = $row[$cd];\n\t\t\t\t\t}\n\n\t\t\t\t\t$text .= \"<td{$row_class}>{$val}</td>\";\n\t\t\t\t}\n\t\t\t\t$text .= '</tr>';\n\t\t\t}\n\t\t\t$text .= \"</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<script type='text/javascript'>\n\t\t\t\t\t(function () {\n\t\t\t\t\t\tvar del_sel = \\$\\$('input[name=delete_ban_entry]');\n\t\t\t\t\t\tdel_sel.each(function (element) {\n\t\t\t\t\t\t\tvar msg = element.readAttribute('title');\n\t\t\t\t\t\t\telement.writeAttribute('title', '\".LAN_DELETE.\"').writeAttribute('confirm-msg', msg);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdel_sel.invoke('observe', 'click', function (event) {\n\n\t\t\t\t\t\t\tvar element = event.element(), msg = element.readAttribute('confirm-msg');\n\t\t\t\t\t\t\tif(!e107Helper.confirm(msg)) { event.stop(); return; }\n\t\t\t\t\t\t\t\\$('core-banlist-form').writeAttribute('action', element.value).submit();\n\t\t\t\t\t\t});\n\t\t\t\t\t}())\n\t\t\t\t\t</script>\n\t\t\t\";\n\t\t}\n\t\t$text .= \"\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t\";\n\n\t\techo $mes->render().$text; \n\t//\te107::getRender()->tablerender(($action == 'list' ? BANLAN_3 : BANLAN_61), $mes->render().$text);\n\t\t// End of case 'list' and the default case\n}\t\t// End switch ($action)\n\n\nrequire_once(e_ADMIN.'footer.php');\n\n\n/**\n *\tAdmin menu options\n */\nfunction banlist_adminmenu()\n{\n\t$action = (e_QUERY) ? e_QUERY : 'list';\n\n\t$var['list']['text'] = BANLAN_14;\t\t// List existing bans\n\t$var['list']['link'] = e_SELF.'?list';\n\t$var['list']['perm'] = '4';\n\n\t$var['add']['text'] = BANLAN_25;\t\t// Add a new ban\n\t$var['add']['link'] = e_SELF.'?add';\n\t$var['add']['perm'] = '4';\n\n\t$var['white']['text'] = BANLAN_52;\t\t// List existing whitelist entries\n\t$var['white']['link'] = e_SELF.'?white';\n\t$var['white']['perm'] = '4';\n\n\t$var['whadd']['text'] = BANLAN_53;\t\t// Add a new whitelist entry\n\t$var['whadd']['link'] = e_SELF.'?whadd';\n\t$var['whadd']['perm'] = '4';\n\n\t$var['transfer']['text'] = BANLAN_35;\n\t$var['transfer']['link'] = e_SELF.'?transfer';\n\t$var['transfer']['perm'] = '4';\n\n\tif (getperms('0'))\n\t{\n\t\t$var['times']['text'] = BANLAN_15;\n\t\t$var['times']['link'] = e_SELF.'?times';\n\t\t$var['times']['perm'] = '0';\n\n\t\t$var['options']['text'] = LAN_OPTIONS;\n\t\t$var['options']['link'] = e_SELF.'?options';\n\t\t$var['options']['perm'] = '0';\n\n\t\t$var['banlog']['text'] = BANLAN_81;\n\t\t$var['banlog']['link'] = e_SELF.'?banlog';\n\t\t$var['banlog']['perm'] = '0';\n\t}\n\te107::getNav()->admin(BANLAN_16, $action, $var);\n}\n\n\n\n// Parse the date string used by the import/export - YYYYMMDD_HHMMSS\nfunction parse_date($instr)\n{\n\tif (strlen($instr) != 15)\n\t\treturn 0;\n\treturn mktime(substr($instr, 9, 2), substr($instr, 11, 2), substr($instr, 13, 2), substr($instr, 4, 2), substr($instr, 6, 2), substr($instr, 0, 4));\n}\n\n\n\n// Process the imported CSV file, update the database, delete the file.\n// Return a message\nfunction process_csv($filename, $override_imports, $override_expiry, $separator = ',', $quote = '\"')\n{\n\t$sql = e107::getDb();\n\t$pref['ban_durations'] = e107::getPref('ban_durations');\n\t$mes = e107::getMessage();\n\t\n\t//  echo \"Read CSV: {$filename} separator: {$separator}, quote: {$quote}  override imports: {$override_imports}  override expiry: {$override_expiry}<br />\";\n\t// Renumber imported bans\n\tif ($override_imports)\n\t\t$sql->db_Update('banlist', \"`banlist_bantype`=\".eIPHandler::BAN_TYPE_TEMPORARY.\" WHERE `banlist_bantype` = \".eIPHandler::BAN_TYPE_IMPORTED);\n\t$temp = file($filename);\n\t$line_num = 0;\n\tforeach ($temp as $line)\n\t{ // Process one entry\n\t\t$line = trim($line);\n\t\t$line_num++;\n\t\tif ($line)\n\t\t{\n\t\t\t$fields = explode($separator, $line);\n\t\t\t$field_num = 0;\n\t\t\t$field_list = array('banlist_bantype' => eIPHandler::BAN_TYPE_IMPORTED);\n\t\t\tforeach ($fields as $f)\n\t\t\t{\n\t\t\t\t$f = trim($f);\n\t\t\t\tif (substr($f, 0, 1) == $quote)\n\t\t\t\t{\n\t\t\t\t\tif (substr($f, -1, 1) == $quote)\n\t\t\t\t\t{ // Strip quotes\n\t\t\t\t\t\t$f = substr($f, 1, -1);\t\t// Strip off the quotes\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$mes->addError(BANLAN_49.$line_num);\n\t\t\t\t\t\treturn BANLAN_49.$line_num;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Now handle the field\n\t\t\t\t$field_num++;\n\t\t\t\tswitch ($field_num)\n\t\t\t\t{\n\t\t\t\t\tcase 1 :\t// IP address\n\t\t\t\t\t\t$field_list['banlist_ip'] = e107::getIPHandler()->ipEncode($f);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2 :\t// Original date of ban\n\t\t\t\t\t\t$field_list['banlist_datestamp'] = parse_date($f);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3 :\t// Expiry of ban - depends on $override_expiry\n\t\t\t\t\t\tif ($override_expiry)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$field_list['banlist_banexpires'] = parse_date($f);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{ // Use default ban time from now\n\t\t\t\t\t\t\t$field_list['banlist_banexpires'] = $pref['ban_durations'][eIPHandler::BAN_TYPE_IMPORTED] ? time() + (60*60*$pref['ban_durations'][eIPHandler::BAN_TYPE_IMPORTED]) : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4 :\t// Original ban type - we always ignore this and force to 'imported'\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5 :\t// Ban reason originally generated by E107\n\t\t\t\t\t\t$field_list['banlist_reason'] = $f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6 :\t// Any user notes added\n\t\t\t\t\t\t$field_list['banlist_notes'] = $f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\t// Just ignore any others\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qry = \"REPLACE INTO `#banlist` (\".implode(',', array_keys($field_list)).\") values ('\".implode(\"', '\", $field_list).\"')\";\n\t\t\t//\t  echo count($field_list).\" elements, query: \".$qry.\"<br />\";\n\t\t\tif (!$sql->gen($qry))\n\t\t\t{\n\t\t\t\t$mes->addError(BANLAN_50.$line_num);\n\t\t\t\treturn BANLAN_50.$line_num;\n\t\t\t}\n\t\t}\n\t}\n\t// Success here - may need to delete old imported bans\n\tif ($override_imports)\n\t\t$sql->db_Delete('banlist', \"`banlist_bantype` = \".eIPHandler::BAN_TYPE_TEMPORARY);\n\t@unlink($filename);\t\t// Delete file once done\n\t$mes->addSuccess(str_replace('[y]', $line_num, BANLAN_51).$filename);\n\treturn str_replace('[y]', $line_num, BANLAN_51).$filename;\n}\n\n\n\n/**\n *\tLog event to admin log\n *\n *\t@param string $msg_num - exactly two numeric characters corresponding to a log message\n *\t@param string $woffle - information for the body of the log entre\n *\n *\t@return none\n */\nfunction banlist_adminlog($msg_num = '00', $woffle = '')\n{\n\te107::getAdminLog()->log_event('BANLIST_'.$msg_num, $woffle, E_LOG_INFORMATIVE, '');\n}\n\n\n/**\n * Handle page DOM within the page header\n *\n * @return string JS source\n */\nfunction headerjs()\n{\n/*\n\trequire_once(e_HANDLER.'js_helper.php');\n\t$ret = \"\n\t\t<script type='text/javascript'>\n\t\t\t//add required core lan - delete confirm message\n\t\t\t(\".e_jshelper::toString(LAN_JSCONFIRM).\").addModLan('core', 'delete_confirm');\n\t\t\tif(typeof e107Admin == 'undefined') var e107Admin = {}\n\n\t\t\te107Admin.initRules = {\n\t\t\t\t'Helper': true,\n\t\t\t\t'AdminMenu': false\n\t\t\t}\n\t\t</script>\n\t\t<script type='text/javascript' src='\".e_JS.\"core/admin.js'></script>\n\t\";\n\n\treturn $ret;\n\n*/\n}\n\nrequire_once(e_ADMIN.\"footer.php\");\nexit;\n?>\n"], "filenames": ["e107_admin/banlist.php"], "buggy_code_start_loc": [82], "buggy_code_end_loc": [690], "fixing_code_start_loc": [82], "fixing_code_end_loc": [946], "type": "CWE-89", "message": "e107_admin/banlist.php in e107 2.1.8 allows SQL injection via the old_ip parameter.", "other": {"cve": {"id": "CVE-2018-16389", "sourceIdentifier": "cve@mitre.org", "published": "2018-09-12T16:29:02.490", "lastModified": "2018-11-02T18:35:38.090", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "e107_admin/banlist.php in e107 2.1.8 allows SQL injection via the old_ip parameter."}, {"lang": "es", "value": "e107_admin/banlist.php en e107 2.1.8 permite la inyecci\u00f3n SQL mediante el par\u00e1metro old_ip"}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:e107:e107:2.1.8:*:*:*:*:*:*:*", "matchCriteriaId": "6C0ECC71-9F7A-4634-B3DD-A6C60C1DA78C"}]}]}], "references": [{"url": "https://gist.github.com/ommadawn46/51e08e13e6980dcbcffb4322c29b93d0", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/e107inc/e107/commit/ec483e9379aa622bfcc1b853b189c74288771f27", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/e107inc/e107/commit/ec483e9379aa622bfcc1b853b189c74288771f27"}}