{"buggy_code": ["<table class=\"trace trace-as-text\">\n    <thead class=\"trace-head\">\n        <tr>\n            <th class=\"sf-toggle\" data-toggle-selector=\"#trace-text-<?= $index; ?>\" data-toggle-initial=\"<?= 1 === $index ? 'display' : ''; ?>\">\n                <h3 class=\"trace-class\">\n                    <?php if ($numExceptions > 1) { ?>\n                        <span class=\"text-muted\">[<?= $numExceptions - $index + 1; ?>/<?= $numExceptions; ?>]</span>\n                    <?php } ?>\n                    <?= ($parts = explode('\\\\', $exception['class'])) ? end($parts) : ''; ?>\n                    <span class=\"icon icon-close\"><?= $this->include('assets/images/icon-minus-square-o.svg'); ?></span>\n                    <span class=\"icon icon-open\"><?= $this->include('assets/images/icon-plus-square-o.svg'); ?></span>\n                </h3>\n            </th>\n        </tr>\n    </thead>\n\n    <tbody id=\"trace-text-<?= $index; ?>\">\n        <tr>\n            <td>\n                <?php if ($exception['trace']) { ?>\n                <pre class=\"stacktrace\">\n<?php\n                    echo $exception['class'].\":\\n\";\n                    if ($exception['message']) {\n                        echo $exception['message'].\"\\n\";\n                    }\n\n                    foreach ($exception['trace'] as $trace) {\n                        echo \"\\n  \";\n                        if ($trace['function']) {\n                            echo 'at '.$trace['class'].$trace['type'].$trace['function'].'('.(isset($trace['args']) ? $this->formatArgsAsText($trace['args']) : '').')';\n                        }\n                        if ($trace['file'] && $trace['line']) {\n                            echo($trace['function'] ? \"\\n     (\" : 'at ').strtr(strip_tags($this->formatFile($trace['file'], $trace['line'])), [' at line '.$trace['line'] => '']).':'.$trace['line'].($trace['function'] ? ')' : '');\n                        }\n                    }\n?>\n                </pre>\n                <?php } ?>\n            </td>\n        </tr>\n    </tbody>\n</table>\n"], "fixing_code": ["<table class=\"trace trace-as-text\">\n    <thead class=\"trace-head\">\n        <tr>\n            <th class=\"sf-toggle\" data-toggle-selector=\"#trace-text-<?= $index; ?>\" data-toggle-initial=\"<?= 1 === $index ? 'display' : ''; ?>\">\n                <h3 class=\"trace-class\">\n                    <?php if ($numExceptions > 1) { ?>\n                        <span class=\"text-muted\">[<?= $numExceptions - $index + 1; ?>/<?= $numExceptions; ?>]</span>\n                    <?php } ?>\n                    <?= ($parts = explode('\\\\', $exception['class'])) ? end($parts) : ''; ?>\n                    <span class=\"icon icon-close\"><?= $this->include('assets/images/icon-minus-square-o.svg'); ?></span>\n                    <span class=\"icon icon-open\"><?= $this->include('assets/images/icon-plus-square-o.svg'); ?></span>\n                </h3>\n            </th>\n        </tr>\n    </thead>\n\n    <tbody id=\"trace-text-<?= $index; ?>\">\n        <tr>\n            <td>\n                <?php if ($exception['trace']) { ?>\n                <pre class=\"stacktrace\">\n<?php\n                    echo $this->escape($exception['class']).\":\\n\";\n                    if ($exception['message']) {\n                        echo $this->escape($exception['message']).\"\\n\";\n                    }\n\n                    foreach ($exception['trace'] as $trace) {\n                        echo \"\\n  \";\n                        if ($trace['function']) {\n                            echo $this->escape('at '.$trace['class'].$trace['type'].$trace['function']).'('.(isset($trace['args']) ? $this->formatArgsAsText($trace['args']) : '').')';\n                        }\n                        if ($trace['file'] && $trace['line']) {\n                            echo($trace['function'] ? \"\\n     (\" : 'at ').strtr(strip_tags($this->formatFile($trace['file'], $trace['line'])), [' at line '.$trace['line'] => '']).':'.$trace['line'].($trace['function'] ? ')' : '');\n                        }\n                    }\n?>\n                </pre>\n                <?php } ?>\n            </td>\n        </tr>\n    </tbody>\n</table>\n"], "filenames": ["src/Symfony/Component/ErrorHandler/Resources/views/traces_text.html.php"], "buggy_code_start_loc": [23], "buggy_code_end_loc": [32], "fixing_code_start_loc": [23], "fixing_code_end_loc": [32], "type": "CWE-209", "message": "In Symfony before versions 5.0.5 and 4.4.5, some properties of the Exception were not properly escaped when the `ErrorHandler` rendered it stacktrace. In addition, the stacktrace were displayed even in a non-debug configuration. The ErrorHandler now escape alls properties of the exception, and the stacktrace is only display in debug configuration. This issue is patched in symfony/http-foundation versions 4.4.5 and 5.0.5", "other": {"cve": {"id": "CVE-2020-5274", "sourceIdentifier": "security-advisories@github.com", "published": "2020-03-30T20:15:19.633", "lastModified": "2020-04-01T20:34:09.397", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In Symfony before versions 5.0.5 and 4.4.5, some properties of the Exception were not properly escaped when the `ErrorHandler` rendered it stacktrace. In addition, the stacktrace were displayed even in a non-debug configuration. The ErrorHandler now escape alls properties of the exception, and the stacktrace is only display in debug configuration. This issue is patched in symfony/http-foundation versions 4.4.5 and 5.0.5"}, {"lang": "es", "value": "En Symfony versiones anteriores a 5.0.5 y 4.4.5, algunas propiedades de la Excepci\u00f3n no fueron escapados apropiadamente cuando el \"ErrorHandler\" la renderiz\u00f3 en stacktrace. Adem\u00e1s, el stacktrace fue desplegado incluso en una configuraci\u00f3n sin depuraci\u00f3n. ErrorHandler ahora escapa de todas las propiedades de la excepci\u00f3n, y el stacktrace se muestra solo en la configuraci\u00f3n de depuraci\u00f3n. Este problema est\u00e1 parcheado en Symfony/http-foundation versiones 4.4.5 y 5.0.5."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.6, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-209"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-209"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sensiolabs:symfony:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.4.0", "versionEndExcluding": "4.4.4", "matchCriteriaId": "A736C1DC-7AB3-4406-ABD8-60C143F225E4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:sensiolabs:symfony:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.0.0", "versionEndExcluding": "5.0.4", "matchCriteriaId": "03FB6307-56EA-4047-ABE0-4658CD8358FB"}]}]}], "references": [{"url": "https://github.com/symfony/symfony/commit/629d21b800a15dc649fb0ae9ed7cd9211e7e45db", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/symfony/symfony/commit/cf80224589ac05402d4f72f5ddf80900ec94d5ad", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/symfony/symfony/security/advisories/GHSA-m884-279h-32v2", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/symfony/symfony/commit/629d21b800a15dc649fb0ae9ed7cd9211e7e45db"}}