{"buggy_code": ["SET(PACKAGE libcue)\nSET(PACKAGE_NAME libcue)\nSET(PACKAGE_VERSION 2.2.1)\nSET(PACKAGE_SOVERSION 2)\n\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)\n\nPROJECT(libcue C)\n\ninclude(GNUInstallDirs)\n\n\nSET(PACKAGE_STRING \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\nADD_DEFINITIONS(-DPACKAGE_VERSION=\"${PACKAGE_VERSION}\")\nADD_DEFINITIONS(-DPACKAGE_STRING=\"${PACKAGE_STRING}\")\n\nSET (CUE_SOURCES\n\tcd.c\n\tcdtext.c\n\trem.c\n\ttime.c)\n\nCONFIGURE_FILE(libcue.pc.in libcue.pc @ONLY)\nINSTALL(FILES ${CMAKE_BINARY_DIR}/libcue.pc\n\tDESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\n\nINCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})\nINCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}) # for generated files\n\nFIND_PACKAGE(BISON)\nFIND_PACKAGE(FLEX)\nBISON_TARGET(CueParser\n\tcue_parser.y\n\t${CMAKE_BINARY_DIR}/cue_parser.c)\nFLEX_TARGET(CueScanner\n\tcue_scanner.l\n\t${CMAKE_BINARY_DIR}/cue_scanner.c)\nADD_FLEX_BISON_DEPENDENCY(CueScanner CueParser)\n\nADD_LIBRARY(cue ${CUE_SOURCES}\n\t${BISON_CueParser_OUTPUTS}\n\t${FLEX_CueScanner_OUTPUTS})\n\nSET_TARGET_PROPERTIES (cue\n\tPROPERTIES VERSION ${PACKAGE_VERSION}\n\tSOVERSION ${PACKAGE_SOVERSION}\n\tC_VISIBILITY_PRESET hidden)\n\nINSTALL(TARGETS cue\n\tRUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n\tLIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\tARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\nINSTALL(FILES ${CMAKE_SOURCE_DIR}/libcue.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\nif(CMAKE_HOST_UNIX)\n\tINSTALL(DIRECTORY DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/libcue)\n\tINSTALL(CODE \"\n\tEXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E create_symlink ../libcue.h\n\t\t\\$ENV{DESTDIR}/${CMAKE_INSTALL_FULL_INCLUDEDIR}/libcue/libcue.h)\n\t\")\nendif(CMAKE_HOST_UNIX)\n\nENABLE_TESTING()\nADD_EXECUTABLE(standard_cue ${CMAKE_SOURCE_DIR}/t/standard_cue.c)\nTARGET_LINK_LIBRARIES(standard_cue cue)\n\nADD_EXECUTABLE(single_file_idx_00 ${CMAKE_SOURCE_DIR}/t/single_idx_00.c)\nTARGET_LINK_LIBRARIES(single_file_idx_00 cue)\n\nADD_EXECUTABLE(multiple_files ${CMAKE_SOURCE_DIR}/t/multiple_files.c)\nTARGET_LINK_LIBRARIES(multiple_files cue)\n\nADD_EXECUTABLE(noncompliant ${CMAKE_SOURCE_DIR}/t/noncompliant.c)\nTARGET_LINK_LIBRARIES(noncompliant cue)\n\nADD_EXECUTABLE(issue10 ${CMAKE_SOURCE_DIR}/t/issue10.c)\nTARGET_LINK_LIBRARIES(issue10 cue)\n\nADD_EXECUTABLE(99_tracks ${CMAKE_SOURCE_DIR}/t/99_tracks.c)\nTARGET_LINK_LIBRARIES(99_tracks cue)\n\nINCLUDE(Dart)\n\nSET(DART_TESTING_TIMEOUT 5)\nADD_TEST(standard_cue_test standard_cue)\nADD_TEST(single_file_idx_00_test single_file_idx_00)\nADD_TEST(multiple_files_test multiple_files)\nADD_TEST(noncompliant_test noncompliant)\nADD_TEST(NAME issue10_test COMMAND issue10 WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/t)\nADD_TEST(NAME 99_tracks_test COMMAND 99_tracks WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/t)\n\n\nSET(CPACK_PACKAGE_VERSION \"${PACKAGE_VERSION}\")\nSET(CPACK_SOURCE_PACKAGE_FILE_NAME \"${PACKAGE_NAME}-${PACKAGE_VERSION}\")\nSET(CPACK_SOURCE_GENERATOR \"TBZ2\")\nSET(CPACK_SOURCE_IGNORE_FILES \".*~;\\\\\\\\.swp$;/\\\\\\\\.git/;build/\")\nINCLUDE(CPack)\n\nINCLUDE(CheckCSourceCompiles)\ncheck_c_source_compiles(\"\nvoid log_fn(const char *format, ...) __attribute__ ((format (printf, 1, 2)));\nint main(void) { return 0; }\n\" HAVE_FUNC_ATTRIBUTE_FORMAT)\n", "libcue (2.2.1)\n\t[Ilya Lipnitskiy]\n\t* cmake: Check for __attribute__ format\n\n\t[Fabrice Fontaine]\n\t* cmake: Don't check for C++ presence as libcue is C-only\n\n\t[Thomas Petazzoni]\n\t* cmake: Don't force SHARED when building the library\n\nlibcue (2.2.0)\n\t[Tom M]\n\t* cmake: Use GNUInstallDirs and don't hard-code install paths (PR #12)\n\n\t[John Lindgren]\n\t* cmake: Set RUNTIME to CMAKE_INSTALL_BINDIR (issue #13)\n\n\t[Wolfgang Hotwagner]\n\t* Fix memory corruption in cue_scanner.l (PR #15)\n\n\t[John Fitzgerald]\n\t* Use MAXINDEX instead of MAXTRACK when indexing INDEX entries\n\t* Allow for 100 INDEX entries\n\t* Replace fprintf(3) to stdout with printf(3)\n\n\t[Ilya Lipnitskiy]\n\t* pkgconfig: Use dynamic directories from GNUInstallDirs\n\t* Port 99 track fix from cuetools and add a test case\n\nlibcue (2.1.0)\n\t[Ilya Lipnitskiy]\n\t* Add FLAC token support (issue #9)\n\t* Clean up static vars in the parser to prevent double frees (issue #10)\n\nlibcue (2.0.1)\n\t[Peter Lemenkov]\n\t* Rename buffer to yy_buffer\n\n\t[Ilya Lipnitskiy]\n\t* Create the libcue/libcue.h symlink for compatibility\n\nlibcue (2.0.0)\n\n\t[John Lindgren]\n\t* Parse REM GENRE lines\n\n\t[Svyatoslav Mishyn]\n\t* Clean up time conversion functions\n\n\t[Ilya Lipnitskiy]\n\t* Add Travis-CI support\n\n\t* Move exported function declarations to libcue.h. Change default\n\t  symbol visibility to hidden. Only export parsing and accessor\n\t  functions. Make functions more const-correct\n\n\t* Add support for noncompliant CUEs produced by EAC\n\n\t* Return -1 instead of 0 for unknown values\n\n\t* Refactor CUE INDEX parsing to set pregap and previous track length\n\t  correctly\n\n\t* Add tests for various CUE formats\n\n\t* Move the project from automake to cmake\n\n\t* Clean up the changelog\n\nlibcue (1.4.0)\n\n\t[Avuton Olrich]\n\t* He helped a lot to make compilation on win32 work (it still would break\n\t  without him). Finding the parallel build bug is also accredited to him.\n\t  Thanks!\n\n\t[Jochen Keil]\n\t* force make to *not* build things in parallel since this tends to mess things up\n\n\t* update changelog\n\n\t* set version number to 1.4.0 (libtool)\n\n\t* update copyright\n\n\t* fix compiler warning: input() defined but not used\n\n\t* new flex behaviour: explicitly enable yylineno usage\n\n\t* new automake macro name\n\n\t* possible fix for compilation problems on win32\n\n\t* update COPYING and corrected copyright notices in several source code files\n\n\t* Update general COPYRIGHT notice as well as several file specific notifications\n\n\t* update ChangeLog and NEWS\n\nlibcue (1.3.0)\n\n\t[Jochen Keil]\n\t* set version number to 1.3.0 (libtool)\n\n\t* fix for invalid pointer\n\nlibcue (1.2.0)\n\n\t[Jochen Keil]\n\t* set version number to 1.2.0 (libtool)\n\n\t* update comment on libtool versioning\n\n\t* update copyright notifications\n\n\t* switch copyright licence to 2-clause BSD\n\n\t* update AUTHORS to reflect recent changes\n\n\t* dump old README\n\n\t* simple test program (not yet supported by autotools, needs flac lib\n\n\t* autoheader/config.h support for parser buffer size\n\n\t* update autotool build system\n\n\t* update main interface/api file\n\n\t* support for custom cue values hidden as rem comments\n\n\t* add buffer size to config.h\n\n\t* prevent the parser from memory leaking/replace strdup() with\n\t  fixed-size array and strncpy/implement yacc|bison macros for buffer\n\t  creation/deletion\n\n\t* prevent the lexer from memory leaking/replace strdup() with\n\t  fixed-size array and strncpy\n\n\t* cd_delete() and track_delete() methods\n\n\t* support for cdtext filename\n\n\t* major code clean up\n\n\t* initial clean up for libcue\n\ncuetools (1.3.1)\n\n\t[Svend Sorensen]\n\t* Applied most of Branden Robinson's Debian patch\n\t  (cuetools_1.3-2.diff.gz). This included many fixes and enhancements\n\t  to tools and manual pages. cuebreakpoints and cueconvert will exit if\n\t  they fail on any of the input files. cuebreakpoints, cueconvert, and\n\t  cuetools will exit with a nonzero return value if there was a failure\n\t  on an input file.\n\n\t* Added version option to all tools.\n\n\t* Single quoted string support has been removed.  This was broken, and I am not\n\t  sure of any software that supports single quoted strings in cue or toc files.\n\ncuetools (1.3)\n\n\t[Svend Sorensen]\n\t* Build system has been rewritten using automake/autoconf.\n\n\t* Added append, prepend, and split pregap modes to cuebreakpoints.\n\n\t* Fixed possible compilation error with Bison.\n\n\t* All tools accept long options.\n\n\t* Programs exit if --input-format or --output-format is an illegal value.\n\ncuetools (1.2)\n\n\t[Svend Sorensen]\n\t* cuebreakpoints was not printing the last track breakpoint.  This has been\n\t  fixed.\n\n\t* cueprint now prints a zero-length string for undefined values.  Flags, width,\n\t  and precision are applied to conversion characters which have no conversion.\n\n\t* Added a tagging script, cuetag.sh, which uses cueprint, vorbiscomment, and\n\t  mp3info to tag Ogg Vorbis and MP3 files.  This needs more testing and\n\t  documentation.\n\n\t* Added a track selection flag to cueprint.\n\ncuetools (1.1)\n\n\t[Svend Sorensen]\n\t* File formats documentation has been readded and updated (docs/formats.txt).\n\n\t* ``CDTEXTFILE`` is now a recognized (but ignored) keyword.\n\n\t* If only a disc or track template is specified on the command line, then only\n\t  the disc or track information is printed, respectively.\n\n\t* cueprint now supports flags and width and precision values for template\n"], "fixing_code": ["SET(PACKAGE libcue)\nSET(PACKAGE_NAME libcue)\nSET(PACKAGE_VERSION 2.3.0)\nSET(PACKAGE_SOVERSION 2)\n\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)\n\nPROJECT(libcue C)\n\ninclude(GNUInstallDirs)\n\n\nSET(PACKAGE_STRING \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\nADD_DEFINITIONS(-DPACKAGE_VERSION=\"${PACKAGE_VERSION}\")\nADD_DEFINITIONS(-DPACKAGE_STRING=\"${PACKAGE_STRING}\")\n\nSET (CUE_SOURCES\n\tcd.c\n\tcdtext.c\n\trem.c\n\ttime.c)\n\nCONFIGURE_FILE(libcue.pc.in libcue.pc @ONLY)\nINSTALL(FILES ${CMAKE_BINARY_DIR}/libcue.pc\n\tDESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)\n\nINCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})\nINCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}) # for generated files\n\nFIND_PACKAGE(BISON)\nFIND_PACKAGE(FLEX)\nBISON_TARGET(CueParser\n\tcue_parser.y\n\t${CMAKE_BINARY_DIR}/cue_parser.c)\nFLEX_TARGET(CueScanner\n\tcue_scanner.l\n\t${CMAKE_BINARY_DIR}/cue_scanner.c)\nADD_FLEX_BISON_DEPENDENCY(CueScanner CueParser)\n\nADD_LIBRARY(cue ${CUE_SOURCES}\n\t${BISON_CueParser_OUTPUTS}\n\t${FLEX_CueScanner_OUTPUTS})\n\nSET_TARGET_PROPERTIES (cue\n\tPROPERTIES VERSION ${PACKAGE_VERSION}\n\tSOVERSION ${PACKAGE_SOVERSION}\n\tC_VISIBILITY_PRESET hidden)\n\nINSTALL(TARGETS cue\n\tRUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n\tLIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\tARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\nINSTALL(FILES ${CMAKE_SOURCE_DIR}/libcue.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\nif(CMAKE_HOST_UNIX)\n\tINSTALL(DIRECTORY DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/libcue)\n\tINSTALL(CODE \"\n\tEXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E create_symlink ../libcue.h\n\t\t\\$ENV{DESTDIR}/${CMAKE_INSTALL_FULL_INCLUDEDIR}/libcue/libcue.h)\n\t\")\nendif(CMAKE_HOST_UNIX)\n\nENABLE_TESTING()\nADD_EXECUTABLE(standard_cue ${CMAKE_SOURCE_DIR}/t/standard_cue.c)\nTARGET_LINK_LIBRARIES(standard_cue cue)\n\nADD_EXECUTABLE(single_file_idx_00 ${CMAKE_SOURCE_DIR}/t/single_idx_00.c)\nTARGET_LINK_LIBRARIES(single_file_idx_00 cue)\n\nADD_EXECUTABLE(multiple_files ${CMAKE_SOURCE_DIR}/t/multiple_files.c)\nTARGET_LINK_LIBRARIES(multiple_files cue)\n\nADD_EXECUTABLE(noncompliant ${CMAKE_SOURCE_DIR}/t/noncompliant.c)\nTARGET_LINK_LIBRARIES(noncompliant cue)\n\nADD_EXECUTABLE(issue10 ${CMAKE_SOURCE_DIR}/t/issue10.c)\nTARGET_LINK_LIBRARIES(issue10 cue)\n\nADD_EXECUTABLE(99_tracks ${CMAKE_SOURCE_DIR}/t/99_tracks.c)\nTARGET_LINK_LIBRARIES(99_tracks cue)\n\nINCLUDE(Dart)\n\nSET(DART_TESTING_TIMEOUT 5)\nADD_TEST(standard_cue_test standard_cue)\nADD_TEST(single_file_idx_00_test single_file_idx_00)\nADD_TEST(multiple_files_test multiple_files)\nADD_TEST(noncompliant_test noncompliant)\nADD_TEST(NAME issue10_test COMMAND issue10 WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/t)\nADD_TEST(NAME 99_tracks_test COMMAND 99_tracks WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/t)\n\n\nSET(CPACK_PACKAGE_VERSION \"${PACKAGE_VERSION}\")\nSET(CPACK_SOURCE_PACKAGE_FILE_NAME \"${PACKAGE_NAME}-${PACKAGE_VERSION}\")\nSET(CPACK_SOURCE_GENERATOR \"TBZ2\")\nSET(CPACK_SOURCE_IGNORE_FILES \".*~;\\\\\\\\.swp$;/\\\\\\\\.git/;build/\")\nINCLUDE(CPack)\n\nINCLUDE(CheckCSourceCompiles)\ncheck_c_source_compiles(\"\nvoid log_fn(const char *format, ...) __attribute__ ((format (printf, 1, 2)));\nint main(void) { return 0; }\n\" HAVE_FUNC_ATTRIBUTE_FORMAT)\n", "libcue (2.3.0)\n\t[Vlad Stulikov, Vasiliy Sazonov]\n\t* Bug fix - no EOF handling\n\n\t[Kevin Backhouse]\n\t* Fix CVE-2023-43641\nlibcue (2.2.1)\n\t[Ilya Lipnitskiy]\n\t* cmake: Check for __attribute__ format\n\n\t[Fabrice Fontaine]\n\t* cmake: Don't check for C++ presence as libcue is C-only\n\n\t[Thomas Petazzoni]\n\t* cmake: Don't force SHARED when building the library\n\nlibcue (2.2.0)\n\t[Tom M]\n\t* cmake: Use GNUInstallDirs and don't hard-code install paths (PR #12)\n\n\t[John Lindgren]\n\t* cmake: Set RUNTIME to CMAKE_INSTALL_BINDIR (issue #13)\n\n\t[Wolfgang Hotwagner]\n\t* Fix memory corruption in cue_scanner.l (PR #15)\n\n\t[John Fitzgerald]\n\t* Use MAXINDEX instead of MAXTRACK when indexing INDEX entries\n\t* Allow for 100 INDEX entries\n\t* Replace fprintf(3) to stdout with printf(3)\n\n\t[Ilya Lipnitskiy]\n\t* pkgconfig: Use dynamic directories from GNUInstallDirs\n\t* Port 99 track fix from cuetools and add a test case\n\nlibcue (2.1.0)\n\t[Ilya Lipnitskiy]\n\t* Add FLAC token support (issue #9)\n\t* Clean up static vars in the parser to prevent double frees (issue #10)\n\nlibcue (2.0.1)\n\t[Peter Lemenkov]\n\t* Rename buffer to yy_buffer\n\n\t[Ilya Lipnitskiy]\n\t* Create the libcue/libcue.h symlink for compatibility\n\nlibcue (2.0.0)\n\n\t[John Lindgren]\n\t* Parse REM GENRE lines\n\n\t[Svyatoslav Mishyn]\n\t* Clean up time conversion functions\n\n\t[Ilya Lipnitskiy]\n\t* Add Travis-CI support\n\n\t* Move exported function declarations to libcue.h. Change default\n\t  symbol visibility to hidden. Only export parsing and accessor\n\t  functions. Make functions more const-correct\n\n\t* Add support for noncompliant CUEs produced by EAC\n\n\t* Return -1 instead of 0 for unknown values\n\n\t* Refactor CUE INDEX parsing to set pregap and previous track length\n\t  correctly\n\n\t* Add tests for various CUE formats\n\n\t* Move the project from automake to cmake\n\n\t* Clean up the changelog\n\nlibcue (1.4.0)\n\n\t[Avuton Olrich]\n\t* He helped a lot to make compilation on win32 work (it still would break\n\t  without him). Finding the parallel build bug is also accredited to him.\n\t  Thanks!\n\n\t[Jochen Keil]\n\t* force make to *not* build things in parallel since this tends to mess things up\n\n\t* update changelog\n\n\t* set version number to 1.4.0 (libtool)\n\n\t* update copyright\n\n\t* fix compiler warning: input() defined but not used\n\n\t* new flex behaviour: explicitly enable yylineno usage\n\n\t* new automake macro name\n\n\t* possible fix for compilation problems on win32\n\n\t* update COPYING and corrected copyright notices in several source code files\n\n\t* Update general COPYRIGHT notice as well as several file specific notifications\n\n\t* update ChangeLog and NEWS\n\nlibcue (1.3.0)\n\n\t[Jochen Keil]\n\t* set version number to 1.3.0 (libtool)\n\n\t* fix for invalid pointer\n\nlibcue (1.2.0)\n\n\t[Jochen Keil]\n\t* set version number to 1.2.0 (libtool)\n\n\t* update comment on libtool versioning\n\n\t* update copyright notifications\n\n\t* switch copyright licence to 2-clause BSD\n\n\t* update AUTHORS to reflect recent changes\n\n\t* dump old README\n\n\t* simple test program (not yet supported by autotools, needs flac lib\n\n\t* autoheader/config.h support for parser buffer size\n\n\t* update autotool build system\n\n\t* update main interface/api file\n\n\t* support for custom cue values hidden as rem comments\n\n\t* add buffer size to config.h\n\n\t* prevent the parser from memory leaking/replace strdup() with\n\t  fixed-size array and strncpy/implement yacc|bison macros for buffer\n\t  creation/deletion\n\n\t* prevent the lexer from memory leaking/replace strdup() with\n\t  fixed-size array and strncpy\n\n\t* cd_delete() and track_delete() methods\n\n\t* support for cdtext filename\n\n\t* major code clean up\n\n\t* initial clean up for libcue\n\ncuetools (1.3.1)\n\n\t[Svend Sorensen]\n\t* Applied most of Branden Robinson's Debian patch\n\t  (cuetools_1.3-2.diff.gz). This included many fixes and enhancements\n\t  to tools and manual pages. cuebreakpoints and cueconvert will exit if\n\t  they fail on any of the input files. cuebreakpoints, cueconvert, and\n\t  cuetools will exit with a nonzero return value if there was a failure\n\t  on an input file.\n\n\t* Added version option to all tools.\n\n\t* Single quoted string support has been removed.  This was broken, and I am not\n\t  sure of any software that supports single quoted strings in cue or toc files.\n\ncuetools (1.3)\n\n\t[Svend Sorensen]\n\t* Build system has been rewritten using automake/autoconf.\n\n\t* Added append, prepend, and split pregap modes to cuebreakpoints.\n\n\t* Fixed possible compilation error with Bison.\n\n\t* All tools accept long options.\n\n\t* Programs exit if --input-format or --output-format is an illegal value.\n\ncuetools (1.2)\n\n\t[Svend Sorensen]\n\t* cuebreakpoints was not printing the last track breakpoint.  This has been\n\t  fixed.\n\n\t* cueprint now prints a zero-length string for undefined values.  Flags, width,\n\t  and precision are applied to conversion characters which have no conversion.\n\n\t* Added a tagging script, cuetag.sh, which uses cueprint, vorbiscomment, and\n\t  mp3info to tag Ogg Vorbis and MP3 files.  This needs more testing and\n\t  documentation.\n\n\t* Added a track selection flag to cueprint.\n\ncuetools (1.1)\n\n\t[Svend Sorensen]\n\t* File formats documentation has been readded and updated (docs/formats.txt).\n\n\t* ``CDTEXTFILE`` is now a recognized (but ignored) keyword.\n\n\t* If only a disc or track template is specified on the command line, then only\n\t  the disc or track information is printed, respectively.\n\n\t* cueprint now supports flags and width and precision values for template\n"], "filenames": ["CMakeLists.txt", "ChangeLog"], "buggy_code_start_loc": [3, 0], "buggy_code_end_loc": [4, 0], "fixing_code_start_loc": [3, 1], "fixing_code_end_loc": [4, 7], "type": "CWE-787", "message": "libcue provides an API for parsing and extracting data from CUE sheets. Versions 2.2.1 and prior are vulnerable to out-of-bounds array access. A user of the GNOME desktop environment can be exploited by downloading a cue sheet from a malicious webpage. Because the file is saved to `~/Downloads`, it is then automatically scanned by tracker-miners. And because it has a .cue filename extension, tracker-miners use libcue to parse the file. The file exploits the vulnerability in libcue to gain code execution. This issue is patched in version 2.3.0.", "other": {"cve": {"id": "CVE-2023-43641", "sourceIdentifier": "security-advisories@github.com", "published": "2023-10-09T22:15:12.707", "lastModified": "2023-12-09T19:15:07.813", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "libcue provides an API for parsing and extracting data from CUE sheets. Versions 2.2.1 and prior are vulnerable to out-of-bounds array access. A user of the GNOME desktop environment can be exploited by downloading a cue sheet from a malicious webpage. Because the file is saved to `~/Downloads`, it is then automatically scanned by tracker-miners. And because it has a .cue filename extension, tracker-miners use libcue to parse the file. The file exploits the vulnerability in libcue to gain code execution. This issue is patched in version 2.3.0."}, {"lang": "es", "value": "libcue proporciona una API para analizar y extraer datos de hojas CUE. Las versiones 2.2.1 y anteriores son vulnerables al acceso a matrices fuera de los l\u00edmites. Un usuario del entorno de escritorio GNOME puede ser explotado descargando una hoja CUE de una p\u00e1gina web maliciosa. Debido a que el archivo se guarda en `~/Downloads`, los tracker-miners lo escanean autom\u00e1ticamente. Y debido a que tiene una extensi\u00f3n de nombre de archivo .cue, los tracker-miners usan libcue para analizar el archivo. El archivo explota la vulnerabilidad en libcue para obtener la ejecuci\u00f3n del c\u00f3digo. Este problema se solucion\u00f3 en la versi\u00f3n 2.3.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-787"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:lipnitsk:libcue:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.3.0", "matchCriteriaId": "AA6D33B0-FEB7-4FF4-A14E-AEE786CE96E6"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*", "matchCriteriaId": "E30D0E6F-4AE8-4284-8716-991DFA48CC5D"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*", "matchCriteriaId": "CC559B26-5DFC-4B7A-A27C-B77DE755DFF9"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*", "matchCriteriaId": "B8EDB836-4E6A-4B71-B9B2-AA3E03E0F646"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*", "matchCriteriaId": "FA6FEEC2-9F11-4643-8827-749718254FED"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*", "matchCriteriaId": "46D69DCC-AE4D-4EA5-861C-D60951444C6C"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/176128/libcue-2.2.1-Out-Of-Bounds-Access.html", "source": "security-advisories@github.com"}, {"url": "https://github.blog/2023-10-09-coordinated-disclosure-1-click-rce-on-gnome-cve-2023-43641/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/lipnitsk/libcue/commit/cfb98a060fd79dbc3463d85f0f29c3c335dfa0ea", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/lipnitsk/libcue/commit/fdf72c8bded8d24cfa0608b8e97f2eed210a920e", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/lipnitsk/libcue/security/advisories/GHSA-5982-x7hv-r9cj", "source": "security-advisories@github.com", "tags": ["Exploit"]}, {"url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00018.html", "source": "security-advisories@github.com", "tags": ["Mailing List"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/57JEYTRFG4PVGZZ7HIEFTX5I7OONFFMI/", "source": "security-advisories@github.com", "tags": ["Mailing List"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PGQOMFDBXGM3DOICCXKCUS76OTKTSPMN/", "source": "security-advisories@github.com", "tags": ["Mailing List"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XUS4HTNGGGUIFLYSKTODCRIOXLX5HGV3/", "source": "security-advisories@github.com", "tags": ["Mailing List"]}, {"url": "https://www.debian.org/security/2023/dsa-5524", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lipnitsk/libcue/commit/cfb98a060fd79dbc3463d85f0f29c3c335dfa0ea"}}