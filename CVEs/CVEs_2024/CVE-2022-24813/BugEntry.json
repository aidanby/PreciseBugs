{"buggy_code": ["<?php\n\nnamespace Miraheze\\CreateWiki\\RequestWiki;\n\nuse Config;\nuse Html;\nuse HTMLForm;\nuse HTMLFormField;\nuse IContextSource;\nuse Linker;\nuse MediaWiki\\MediaWikiServices;\nuse Miraheze\\CreateWiki\\CreateWikiOOUIForm;\nuse Miraheze\\CreateWiki\\WikiManager;\nuse MWException;\n\nclass RequestWikiRequestViewer {\n\n\t/** @var Config */\n\tprivate $config;\n\n\tpublic function __construct() {\n\t\t$this->config = MediaWikiServices::getInstance()->getConfigFactory()->makeConfig( 'createwiki' );\n\t}\n\n\tpublic function getFormDescriptor(\n\t\tWikiRequest $request,\n\t\tIContextSource $context\n\t) {\n\t\t$visibilityConds = [\n\t\t\t0 => 'read',\n\t\t\t1 => 'createwiki',\n\t\t\t2 => 'delete',\n\t\t\t3 => 'suppressrevision',\n\t\t];\n\n\t\t// Gets user from request\n\t\t$userR = $context->getUser();\n\n\t\t// if request isn't found, it doesn't exist\n\t\t// but if we can't view the request, it also doesn't exist\n\t\t$permissionManager = MediaWikiServices::getInstance()->getPermissionManager();\n\n\t\tif ( !$permissionManager->userHasRight( $userR, $visibilityConds[$request->visibility] ) ) {\n\t\t\t$context->getOutput()->addHTML( Html::errorBox( wfMessage( 'requestwiki-unknown' )->escaped() ) );\n\n\t\t\treturn [];\n\t\t}\n\n\t\t$status = ( $request->getStatus() === 'inreview' ) ? 'In review' : ucfirst( $request->getStatus() );\n\n\t\t$formDescriptor = [\n\t\t\t'sitename' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-sitename',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->sitename,\n\t\t\t],\n\t\t\t'url' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-url',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->url,\n\t\t\t],\n\t\t\t'language' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-language',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->language,\n\t\t\t],\n\t\t\t'requester' => [\n\t\t\t\t// @phan-suppress-next-line SecurityCheck-XSS\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-requester',\n\t\t\t\t'type' => 'info',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => $request->requester->getName() . Linker::userToolLinks( $request->requester->getId(), $request->requester->getName() ),\n\t\t\t\t'raw' => true,\n\t\t\t],\n\t\t\t'requestedDate' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-requested-date',\n\t\t\t\t'type' => 'info',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => $context->getLanguage()->timeanddate( $request->timestamp, true ),\n\t\t\t],\n\t\t\t'status' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-status',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$status,\n\t\t\t],\n\t\t\t'description' => [\n\t\t\t\t'type' => 'textarea',\n\t\t\t\t'rows' => 4,\n\t\t\t\t'readonly' => true,\n\t\t\t\t'label-message' => 'requestwikiqueue-request-header-requestercomment',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->description,\n\t\t\t\t'raw' => true,\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $request->getComments() as $comment ) {\n\t\t\t$formDescriptor['comment' . $comment['timestamp'] ] = [\n\t\t\t\t'type' => 'textarea',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'comments',\n\t\t\t\t'rows' => 4,\n\t\t\t\t// @phan-suppress-next-line SecurityCheck-XSS\n\t\t\t\t'label' => wfMessage( 'requestwikiqueue-request-header-wikicreatorcomment-withtimestamp' )->rawParams( $comment['user']->getName() )->params( $context->getLanguage()->timeanddate( $comment['timestamp'], true ) )->text(),\n\t\t\t\t'default' => $comment['comment'],\n\t\t\t];\n\t\t}\n\n\t\tif ( $permissionManager->userHasRight( $userR, 'createwiki' ) || $userR->getId() == $request->requester->getId() ) {\n\t\t\t$formDescriptor += [\n\t\t\t\t'comment' => [\n\t\t\t\t\t'type' => 'textarea',\n\t\t\t\t\t'rows' => 4,\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-comment',\n\t\t\t\t\t'section' => 'comments',\n\t\t\t\t],\n\t\t\t\t'submit-comment' => [\n\t\t\t\t\t'type' => 'submit',\n\t\t\t\t\t'default' => wfMessage( 'htmlform-submit' )->text(),\n\t\t\t\t\t'section' => 'comments',\n\t\t\t\t],\n\t\t\t\t'edit-sitename' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-sitename',\n\t\t\t\t\t'type' => 'text',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->sitename,\n\t\t\t\t],\n\t\t\t\t'edit-url' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-url',\n\t\t\t\t\t'type' => 'text',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->url,\n\t\t\t\t],\n\t\t\t\t'edit-language' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-language',\n\t\t\t\t\t'type' => 'language',\n\t\t\t\t\t'default' => (string)$request->language,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t],\n\t\t\t\t'edit-description' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-header-requestercomment',\n\t\t\t\t\t'type' => 'textarea',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'rows' => 4,\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->description,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t],\n\t\t\t];\n\n\t\t\tif ( $this->config->get( 'CreateWikiCategories' ) ) {\n\t\t\t\t$formDescriptor['edit-category'] = [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'createwiki-label-category',\n\t\t\t\t\t'options' => $this->config->get( 'CreateWikiCategories' ),\n\t\t\t\t\t'default' => (string)$request->category,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiUsePrivateWikis' ) ) {\n\t\t\t\t$formDescriptor['edit-private'] = [\n\t\t\t\t\t'type' => 'check',\n\t\t\t\t\t'label-message' => 'requestwiki-label-private',\n\t\t\t\t\t'default' => $request->private,\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiShowBiographicalOption' ) ) {\n\t\t\t\t$formDescriptor['edit-bio'] = [\n\t\t\t\t\t'type' => 'check',\n\t\t\t\t\t'label-message' => 'requestwiki-label-bio',\n\t\t\t\t\t'default' => $request->bio,\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiPurposes' ) ) {\n\t\t\t\t$formDescriptor['edit-purpose'] = [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwiki-label-purpose',\n\t\t\t\t\t'options' => $this->config->get( 'CreateWikiPurposes' ),\n\t\t\t\t\t'default' => trim( $request->purpose ),\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$formDescriptor['submit-edit'] = [\n\t\t\t\t'type' => 'submit',\n\t\t\t\t'default' => wfMessage( 'requestwikiqueue-request-label-edit-wiki' )->text(),\n\t\t\t\t'section' => 'edit',\n\t\t\t];\n\t\t}\n\n\t\tif ( $permissionManager->userHasRight( $userR, 'createwiki' ) ) {\n\t\t\t$visibilityOptions = [\n\t\t\t\t0 => wfMessage( 'requestwikiqueue-request-label-visibility-all' )->text(),\n\t\t\t\t1 => wfMessage( 'requestwikiqueue-request-label-visibility-hide' )->text(),\n\t\t\t];\n\n\t\t\tif ( $permissionManager->userHasRight( $userR, 'delete' ) ) {\n\t\t\t\t$visibilityOptions[2] = wfMessage( 'requestwikiqueue-request-label-visibility-delete' )->text();\n\t\t\t}\n\n\t\t\tif ( $permissionManager->userHasRight( $userR, 'suppressrevision' ) ) {\n\t\t\t\t$visibilityOptions[3] = wfMessage( 'requestwikiqueue-request-label-visibility-oversight' )->text();\n\t\t\t}\n\n\t\t\t// @phan-suppress-next-line SecurityCheck-PathTraversal\n\t\t\t$wm = new WikiManager( $request->dbname );\n\n\t\t\t$wmError = $wm->checkDatabaseName( $request->dbname );\n\n\t\t\t$formDescriptor += [\n\t\t\t\t'info-submission' => [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'default' => wfMessage( 'requestwikiqueue-request-info-submission' )->text(),\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'submission-action' => [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-action',\n\t\t\t\t\t'options' => [\n\t\t\t\t\t\twfMessage( 'requestwikiqueue-approve' )->text() => 'approve',\n\t\t\t\t\t\twfMessage( 'requestwikiqueue-decline' )->text() => 'decline',\n\t\t\t\t\t],\n\t\t\t\t\t'default' => $request->getStatus(),\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'visibility' => [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-visibility',\n\t\t\t\t\t'options' => array_flip( $visibilityOptions ),\n\t\t\t\t\t'default' => $request->visibility,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'reason' => [\n\t\t\t\t\t'label-message' => 'createwiki-label-reason',\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'submit-handle' => [\n\t\t\t\t\t'type' => 'submit',\n\t\t\t\t\t'default' => wfMessage( 'htmlform-submit' )->text(),\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t];\n\n\t\t\tif ( $this->config->get( 'CreateWikiCannedResponses' ) ) {\n\t\t\t\t$formDescriptor['reason']['type'] = 'selectorother';\n\t\t\t\t$formDescriptor['reason']['options'] = $this->config->get( 'CreateWikiCannedResponses' );\n\n\t\t\t\t$formDescriptor['reason']['default'] = HTMLFormField::flattenOptions(\n\t\t\t\t\t$this->config->get( 'CreateWikiCannedResponses' )\n\t\t\t\t)[0];\n\t\t\t} else {\n\t\t\t\t$formDescriptor['reason']['type'] = 'textarea';\n\t\t\t\t$formDescriptor['reason']['rows'] = 4;\n\t\t\t}\n\n\t\t\tif ( $wmError ) {\n\t\t\t\t$formDescriptor['submit-error-info'] = [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t\t'default' => $wmError,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t];\n\n\t\t\t\t$formDescriptor['submission-action']['default'] = 'decline';\n\t\t\t\t$formDescriptor['submission-action']['disabled'] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn $formDescriptor;\n\t}\n\n\t/**\n\t * @param string $id\n\t * @param IContextSource $context\n\t * @param string $formClass\n\t */\n\tpublic function getForm(\n\t\tstring $id,\n\t\tIContextSource $context,\n\t\t$formClass = CreateWikiOOUIForm::class\n\t) {\n\t\t$context->getOutput()->addModules( 'ext.createwiki.oouiform' );\n\n\t\ttry {\n\t\t\t$request = new WikiRequest( (int)$id );\n\t\t} catch ( MWException $e ) {\n\t\t\t$context->getOutput()->addHTML( Html::errorBox( wfMessage( 'requestwiki-unknown' )->escaped() ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$formDescriptor = $this->getFormDescriptor( $request, $context );\n\n\t\t$htmlForm = new $formClass( $formDescriptor, $context, 'requestwikiqueue' );\n\n\t\t$htmlForm->setId( 'mw-baseform-requestviewer' );\n\t\t$htmlForm->suppressDefaultSubmit();\n\t\t$htmlForm->setSubmitCallback(\n\t\t\tfunction ( array $formData, HTMLForm $form ) use ( $request ) {\n\t\t\t\treturn $this->submitForm( $formData, $form, $request );\n\t\t\t}\n\t\t);\n\n\t\treturn $htmlForm;\n\t}\n\n\tprotected function submitForm(\n\t\tarray $formData,\n\t\tHTMLForm $form,\n\t\tWikiRequest $request\n\t) {\n\t\t$out = $form->getContext()->getOutput();\n\n\t\tif ( isset( $formData['submit-comment'] ) ) {\n\t\t\t$request->addComment( $formData['comment'], $form->getUser() );\n\t\t} elseif ( isset( $formData['submit-edit'] ) ) {\n\t\t\t$subdomain = $formData['edit-url'];\n\t\t\t$err = '';\n\t\t\t$status = $request->parseSubdomain( $subdomain, $err );\n\n\t\t\tif ( $status === false ) {\n\t\t\t\tif ( $err !== '' ) {\n\t\t\t\t\t$out->addHTML( Html::errorBox( wfMessage( 'createwiki-error-' . $err )->parse() ) );\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$request->sitename = $formData['edit-sitename'];\n\t\t\t$request->language = $formData['edit-language'];\n\t\t\t$request->purpose = $formData['edit-purpose'];\n\t\t\t$request->description = $formData['edit-description'];\n\t\t\t$request->category = $formData['edit-category'];\n\t\t\t$request->private = $formData['edit-private'];\n\t\t\t$request->bio = $formData['edit-bio'];\n\t\t\t$request->reopen( $form->getUser() );\n\t\t} elseif ( isset( $formData['submit-handle'] ) ) {\n\t\t\t$request->visibility = $formData['visibility'];\n\n\t\t\tif ( $formData['submission-action'] == 'approve' ) {\n\t\t\t\t$request->approve( $form->getUser(), $formData['reason'] );\n\t\t\t} else {\n\t\t\t\t$request->decline( $formData['reason'], $form->getUser() );\n\t\t\t}\n\t\t}\n\n\t\t$out->addHTML( Html::successBox( wfMessage( 'requestwiki-edit-success' )->escaped() ) );\n\n\t\treturn true;\n\t}\n}\n"], "fixing_code": ["<?php\n\nnamespace Miraheze\\CreateWiki\\RequestWiki;\n\nuse Config;\nuse Html;\nuse HTMLForm;\nuse HTMLFormField;\nuse IContextSource;\nuse Linker;\nuse MediaWiki\\MediaWikiServices;\nuse Miraheze\\CreateWiki\\CreateWikiOOUIForm;\nuse Miraheze\\CreateWiki\\WikiManager;\nuse MWException;\n\nclass RequestWikiRequestViewer {\n\n\t/** @var Config */\n\tprivate $config;\n\n\tpublic function __construct() {\n\t\t$this->config = MediaWikiServices::getInstance()->getConfigFactory()->makeConfig( 'createwiki' );\n\t}\n\n\tpublic function getFormDescriptor(\n\t\tWikiRequest $request,\n\t\tIContextSource $context\n\t) {\n\t\t$visibilityConds = [\n\t\t\t0 => 'read',\n\t\t\t1 => 'createwiki',\n\t\t\t2 => 'delete',\n\t\t\t3 => 'suppressrevision',\n\t\t];\n\n\t\t// Gets user from request\n\t\t$userR = $context->getUser();\n\n\t\t// if request isn't found, it doesn't exist\n\t\t// but if we can't view the request, it also doesn't exist\n\t\t$permissionManager = MediaWikiServices::getInstance()->getPermissionManager();\n\n\t\tif ( !$permissionManager->userHasRight( $userR, $visibilityConds[$request->visibility] ) ) {\n\t\t\t$context->getOutput()->addHTML( Html::errorBox( wfMessage( 'requestwiki-unknown' )->escaped() ) );\n\n\t\t\treturn [];\n\t\t}\n\n\t\t$status = ( $request->getStatus() === 'inreview' ) ? 'In review' : ucfirst( $request->getStatus() );\n\n\t\t$formDescriptor = [\n\t\t\t'sitename' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-sitename',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->sitename,\n\t\t\t],\n\t\t\t'url' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-url',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->url,\n\t\t\t],\n\t\t\t'language' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-language',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->language,\n\t\t\t],\n\t\t\t'requester' => [\n\t\t\t\t// @phan-suppress-next-line SecurityCheck-XSS\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-requester',\n\t\t\t\t'type' => 'info',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => $request->requester->getName() . Linker::userToolLinks( $request->requester->getId(), $request->requester->getName() ),\n\t\t\t\t'raw' => true,\n\t\t\t],\n\t\t\t'requestedDate' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-requested-date',\n\t\t\t\t'type' => 'info',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => $context->getLanguage()->timeanddate( $request->timestamp, true ),\n\t\t\t],\n\t\t\t'status' => [\n\t\t\t\t'label-message' => 'requestwikiqueue-request-label-status',\n\t\t\t\t'type' => 'text',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$status,\n\t\t\t],\n\t\t\t'description' => [\n\t\t\t\t'type' => 'textarea',\n\t\t\t\t'rows' => 4,\n\t\t\t\t'readonly' => true,\n\t\t\t\t'label-message' => 'requestwikiqueue-request-header-requestercomment',\n\t\t\t\t'section' => 'request',\n\t\t\t\t'default' => (string)$request->description,\n\t\t\t\t'raw' => true,\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $request->getComments() as $comment ) {\n\t\t\t$formDescriptor['comment' . $comment['timestamp'] ] = [\n\t\t\t\t'type' => 'textarea',\n\t\t\t\t'readonly' => true,\n\t\t\t\t'section' => 'comments',\n\t\t\t\t'rows' => 4,\n\t\t\t\t// @phan-suppress-next-line SecurityCheck-XSS\n\t\t\t\t'label' => wfMessage( 'requestwikiqueue-request-header-wikicreatorcomment-withtimestamp' )->rawParams( $comment['user']->getName() )->params( $context->getLanguage()->timeanddate( $comment['timestamp'], true ) )->text(),\n\t\t\t\t'default' => $comment['comment'],\n\t\t\t];\n\t\t}\n\n\t\tif ( $permissionManager->userHasRight( $userR, 'createwiki' ) || $userR->getId() == $request->requester->getId() ) {\n\t\t\t$formDescriptor += [\n\t\t\t\t'comment' => [\n\t\t\t\t\t'type' => 'textarea',\n\t\t\t\t\t'rows' => 4,\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-comment',\n\t\t\t\t\t'section' => 'comments',\n\t\t\t\t],\n\t\t\t\t'submit-comment' => [\n\t\t\t\t\t'type' => 'submit',\n\t\t\t\t\t'default' => wfMessage( 'htmlform-submit' )->text(),\n\t\t\t\t\t'section' => 'comments',\n\t\t\t\t],\n\t\t\t\t'edit-sitename' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-sitename',\n\t\t\t\t\t'type' => 'text',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->sitename,\n\t\t\t\t],\n\t\t\t\t'edit-url' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-url',\n\t\t\t\t\t'type' => 'text',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->url,\n\t\t\t\t],\n\t\t\t\t'edit-language' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-language',\n\t\t\t\t\t'type' => 'language',\n\t\t\t\t\t'default' => (string)$request->language,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t],\n\t\t\t\t'edit-description' => [\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-header-requestercomment',\n\t\t\t\t\t'type' => 'textarea',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t\t'rows' => 4,\n\t\t\t\t\t'required' => true,\n\t\t\t\t\t'default' => (string)$request->description,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t],\n\t\t\t];\n\n\t\t\tif ( $this->config->get( 'CreateWikiCategories' ) ) {\n\t\t\t\t$formDescriptor['edit-category'] = [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'createwiki-label-category',\n\t\t\t\t\t'options' => $this->config->get( 'CreateWikiCategories' ),\n\t\t\t\t\t'default' => (string)$request->category,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiUsePrivateWikis' ) ) {\n\t\t\t\t$formDescriptor['edit-private'] = [\n\t\t\t\t\t'type' => 'check',\n\t\t\t\t\t'label-message' => 'requestwiki-label-private',\n\t\t\t\t\t'default' => $request->private,\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiShowBiographicalOption' ) ) {\n\t\t\t\t$formDescriptor['edit-bio'] = [\n\t\t\t\t\t'type' => 'check',\n\t\t\t\t\t'label-message' => 'requestwiki-label-bio',\n\t\t\t\t\t'default' => $request->bio,\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( $this->config->get( 'CreateWikiPurposes' ) ) {\n\t\t\t\t$formDescriptor['edit-purpose'] = [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwiki-label-purpose',\n\t\t\t\t\t'options' => $this->config->get( 'CreateWikiPurposes' ),\n\t\t\t\t\t'default' => trim( $request->purpose ),\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'edit',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$formDescriptor['submit-edit'] = [\n\t\t\t\t'type' => 'submit',\n\t\t\t\t'default' => wfMessage( 'requestwikiqueue-request-label-edit-wiki' )->text(),\n\t\t\t\t'section' => 'edit',\n\t\t\t];\n\t\t}\n\n\t\tif ( $permissionManager->userHasRight( $userR, 'createwiki' ) ) {\n\t\t\t$visibilityOptions = [\n\t\t\t\t0 => wfMessage( 'requestwikiqueue-request-label-visibility-all' )->text(),\n\t\t\t\t1 => wfMessage( 'requestwikiqueue-request-label-visibility-hide' )->text(),\n\t\t\t];\n\n\t\t\tif ( $permissionManager->userHasRight( $userR, 'delete' ) ) {\n\t\t\t\t$visibilityOptions[2] = wfMessage( 'requestwikiqueue-request-label-visibility-delete' )->text();\n\t\t\t}\n\n\t\t\tif ( $permissionManager->userHasRight( $userR, 'suppressrevision' ) ) {\n\t\t\t\t$visibilityOptions[3] = wfMessage( 'requestwikiqueue-request-label-visibility-oversight' )->text();\n\t\t\t}\n\n\t\t\t// @phan-suppress-next-line SecurityCheck-PathTraversal\n\t\t\t$wm = new WikiManager( $request->dbname );\n\n\t\t\t$wmError = $wm->checkDatabaseName( $request->dbname );\n\n\t\t\t$formDescriptor += [\n\t\t\t\t'info-submission' => [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'default' => wfMessage( 'requestwikiqueue-request-info-submission' )->text(),\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'submission-action' => [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-action',\n\t\t\t\t\t'options' => [\n\t\t\t\t\t\twfMessage( 'requestwikiqueue-approve' )->text() => 'approve',\n\t\t\t\t\t\twfMessage( 'requestwikiqueue-decline' )->text() => 'decline',\n\t\t\t\t\t],\n\t\t\t\t\t'default' => $request->getStatus(),\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'visibility' => [\n\t\t\t\t\t'type' => 'select',\n\t\t\t\t\t'label-message' => 'requestwikiqueue-request-label-visibility',\n\t\t\t\t\t'options' => array_flip( $visibilityOptions ),\n\t\t\t\t\t'default' => $request->visibility,\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'reason' => [\n\t\t\t\t\t'label-message' => 'createwiki-label-reason',\n\t\t\t\t\t'cssclass' => 'createwiki-infuse',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t\t'submit-handle' => [\n\t\t\t\t\t'type' => 'submit',\n\t\t\t\t\t'default' => wfMessage( 'htmlform-submit' )->text(),\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t],\n\t\t\t];\n\n\t\t\tif ( $this->config->get( 'CreateWikiCannedResponses' ) ) {\n\t\t\t\t$formDescriptor['reason']['type'] = 'selectorother';\n\t\t\t\t$formDescriptor['reason']['options'] = $this->config->get( 'CreateWikiCannedResponses' );\n\n\t\t\t\t$formDescriptor['reason']['default'] = HTMLFormField::flattenOptions(\n\t\t\t\t\t$this->config->get( 'CreateWikiCannedResponses' )\n\t\t\t\t)[0];\n\t\t\t} else {\n\t\t\t\t$formDescriptor['reason']['type'] = 'textarea';\n\t\t\t\t$formDescriptor['reason']['rows'] = 4;\n\t\t\t}\n\n\t\t\tif ( $wmError ) {\n\t\t\t\t$formDescriptor['submit-error-info'] = [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'section' => 'handle',\n\t\t\t\t\t'default' => $wmError,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t];\n\n\t\t\t\t$formDescriptor['submission-action']['default'] = 'decline';\n\t\t\t\t$formDescriptor['submission-action']['disabled'] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn $formDescriptor;\n\t}\n\n\t/**\n\t * @param string $id\n\t * @param IContextSource $context\n\t * @param string $formClass\n\t */\n\tpublic function getForm(\n\t\tstring $id,\n\t\tIContextSource $context,\n\t\t$formClass = CreateWikiOOUIForm::class\n\t) {\n\t\t$context->getOutput()->addModules( 'ext.createwiki.oouiform' );\n\n\t\ttry {\n\t\t\t$request = new WikiRequest( (int)$id );\n\t\t} catch ( MWException $e ) {\n\t\t\t$context->getOutput()->addHTML( Html::errorBox( wfMessage( 'requestwiki-unknown' )->escaped() ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$formDescriptor = $this->getFormDescriptor( $request, $context );\n\n\t\t$htmlForm = new $formClass( $formDescriptor, $context, 'requestwikiqueue' );\n\n\t\t$htmlForm->setId( 'mw-baseform-requestviewer' );\n\t\t$htmlForm->suppressDefaultSubmit();\n\t\t$htmlForm->setSubmitCallback(\n\t\t\tfunction ( array $formData, HTMLForm $form ) use ( $request ) {\n\t\t\t\treturn $this->submitForm( $formData, $form, $request );\n\t\t\t}\n\t\t);\n\n\t\treturn $htmlForm;\n\t}\n\n\tprotected function submitForm(\n\t\tarray $formData,\n\t\tHTMLForm $form,\n\t\tWikiRequest $request\n\t) {\n\t\t$out = $form->getContext()->getOutput();\n\t\t$user = $form->getUser();\n\n\t\tif ( $user->isAnon() ) {\n\t\t\t$out->addHTML( Html::errorBox( wfMessage( 'exception-nologin-text' )->parse() ) );\n\t\t\t\n\t\t\treturn false;\n\t\t} elseif ( isset( $formData['submit-comment'] ) ) {\n\t\t\t$request->addComment( $formData['comment'], $user );\n\t\t} elseif ( isset( $formData['submit-edit'] ) ) {\n\t\t\t$subdomain = $formData['edit-url'];\n\t\t\t$err = '';\n\t\t\t$status = $request->parseSubdomain( $subdomain, $err );\n\n\t\t\tif ( $status === false ) {\n\t\t\t\tif ( $err !== '' ) {\n\t\t\t\t\t$out->addHTML( Html::errorBox( wfMessage( 'createwiki-error-' . $err )->parse() ) );\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$request->sitename = $formData['edit-sitename'];\n\t\t\t$request->language = $formData['edit-language'];\n\t\t\t$request->purpose = $formData['edit-purpose'];\n\t\t\t$request->description = $formData['edit-description'];\n\t\t\t$request->category = $formData['edit-category'];\n\t\t\t$request->private = $formData['edit-private'];\n\t\t\t$request->bio = $formData['edit-bio'];\n\t\t\t$request->reopen( $form->getUser() );\n\t\t} elseif ( isset( $formData['submit-handle'] ) ) {\n\t\t\t$request->visibility = $formData['visibility'];\n\n\t\t\tif ( $formData['submission-action'] == 'approve' ) {\n\t\t\t\t$request->approve( $user, $formData['reason'] );\n\t\t\t} else {\n\t\t\t\t$request->decline( $formData['reason'], $user );\n\t\t\t}\n\t\t}\n\n\t\t$out->addHTML( Html::successBox( wfMessage( 'requestwiki-edit-success' )->escaped() ) );\n\n\t\treturn true;\n\t}\n}\n"], "filenames": ["includes/RequestWiki/RequestWikiRequestViewer.php"], "buggy_code_start_loc": [334], "buggy_code_end_loc": [365], "fixing_code_start_loc": [334], "fixing_code_end_loc": [370], "type": "CWE-287", "message": "CreateWiki is Miraheze's MediaWiki extension for requesting & creating wikis. Without the patch for this issue, anonymous comments can be made using Special:RequestWikiQueue when sent directly via POST. A patch for this issue is available in the `master` branch of CreateWiki's GitHub repository.", "other": {"cve": {"id": "CVE-2022-24813", "sourceIdentifier": "security-advisories@github.com", "published": "2022-04-04T18:15:07.993", "lastModified": "2022-04-13T12:23:44.603", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "CreateWiki is Miraheze's MediaWiki extension for requesting & creating wikis. Without the patch for this issue, anonymous comments can be made using Special:RequestWikiQueue when sent directly via POST. A patch for this issue is available in the `master` branch of CreateWiki's GitHub repository."}, {"lang": "es", "value": "CreateWiki es la extensi\u00f3n MediaWiki de Miraheze para solicitar y crear wikis. Sin el parche para este problema, pueden hacerse comentarios an\u00f3nimos usando Special:RequestWikiQueue cuando son enviados directamente por medio de POST. Un parche para este problema est\u00e1 disponible en la rama \"master\" del repositorio GitHub de CreateWiki"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}, {"lang": "en", "value": "CWE-288"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:miraheze:createwiki:*:*:*:*:*:*:*:*", "versionEndExcluding": "2022-04-02", "matchCriteriaId": "BEBF463E-6819-4859-872C-3C8A861AA2AD"}]}]}], "references": [{"url": "https://github.com/miraheze/CreateWiki/commit/d0ae79843d689832ccac765d6b1721e668d99ab9", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/miraheze/CreateWiki/security/advisories/GHSA-9xvw-w66v-prvg", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://phabricator.miraheze.org/T9018", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/miraheze/CreateWiki/commit/d0ae79843d689832ccac765d6b1721e668d99ab9"}}