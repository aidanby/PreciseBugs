{"buggy_code": ["// This may look like C code, but it is really -*- C++ -*-\n//\n// Copyright Bob Friesenhahn, 1999, 2000, 2003\n//\n// Test STL appendImages function\n//\n\n#include <Magick++.h>\n#include <string>\n#include <iostream>\n#include <list>\n#include <vector>\n\nusing namespace std;\n\nusing namespace Magick;\n\nint main( int /*argc*/, char ** argv)\n{\n\n  // Initialize ImageMagick install location for Windows\n  InitializeMagick(*argv);\n\n  int failures=0;\n\n  try {\n\n    string srcdir(\"\");\n    if(getenv(\"SRCDIR\") != 0)\n      srcdir = getenv(\"SRCDIR\");\n\n    //\n    // Test appendImages\n    //\n\n    list<Image> imageList;\n    readImages( &imageList, srcdir + \"test_image_anim.miff\" );\n\n    Image appended;\n\n    // Horizontal\n    appendImages( &appended, imageList.begin(), imageList.end() );\n    // appended.display();\n    if (( appended.signature() != \"3a90bb0bb8f69f6788ab99e9e25598a0d6c5cdbbb797f77ad68011e0a8b1689d\" ) &&\n        ( appended.signature() != \"c15fcd1e739b73638dc4e36837bdb53f7087359544664caf7b1763928129f3c7\" ) &&\n        ( appended.signature() != \"229ff72f812e5f536245dc3b4502a0bc2ab2363f67c545863a85ab91ebfbfb83\" ) &&\n        ( appended.signature() != \"b98c42c55fc4e661cb3684154256809c03c0c6b53da2738b6ce8066e1b6ddef0\" ))\n      {\n\t++failures;\n\tcout << \"Line: \" << __LINE__\n\t     << \"  Horizontal append failed, signature = \"\n\t     << appended.signature() << endl;\n\tappended.write(\"appendImages_horizontal_out.miff\");\n\t// appended.display();\n      }\n\n    // Vertical\n    appendImages( &appended, imageList.begin(), imageList.end(), true );\n    if (( appended.signature() != \"d73d25ccd6011936d08b6d0d89183b7a61790544c2195269aff4db2f782ffc08\" ) &&\n        ( appended.signature() != \"0909f7ffa7c6ea410fb2ebfdbcb19d61b19c4bd271851ce3bd51662519dc2b58\" ) &&\n        ( appended.signature() != \"11b97ba6ac1664aa1c2faed4c86195472ae9cce2ed75402d975bb4ffcf1de751\" ) &&\n        ( appended.signature() != \"cae4815eeb3cb689e73b94d897a9957d3414d1d4f513e8b5e52579b05d164bfe\" ))\n      {\n\t++failures;\n\tcout << \"Line: \" << __LINE__\n\t     << \"  Vertical append failed, signature = \"\n\t     << appended.signature() << endl;\n\tappended.write(\"appendImages_vertical_out.miff\");\n\t// appended.display();\n      }\n    \n  }\n\n  catch( Exception &error_ )\n    {\n      cout << \"Caught exception: \" << error_.what() << endl;\n      return 1;\n    }\n  catch( exception &error_ )\n    {\n      cout << \"Caught exception: \" << error_.what() << endl;\n      return 1;\n    }\n\n  if ( failures )\n    {\n      cout << failures << \" failures\" << endl;\n      return 1;\n    }\n  \n  return 0;\n}\n\n"], "fixing_code": ["// This may look like C code, but it is really -*- C++ -*-\n//\n// Copyright Bob Friesenhahn, 1999, 2000, 2003\n//\n// Test STL appendImages function\n//\n\n#include <Magick++.h>\n#include <string>\n#include <iostream>\n#include <list>\n#include <vector>\n\nusing namespace std;\n\nusing namespace Magick;\n\nint main( int /*argc*/, char ** argv)\n{\n\n  // Initialize ImageMagick install location for Windows\n  InitializeMagick(*argv);\n\n  int failures=0;\n\n  try {\n\n    string srcdir(\"\");\n    if(getenv(\"SRCDIR\") != 0)\n      srcdir = getenv(\"SRCDIR\");\n\n    //\n    // Test appendImages\n    //\n\n    list<Image> imageList;\n    readImages( &imageList, srcdir + \"test_image_anim.miff\" );\n\n    Image appended;\n\n    // Horizontal\n    appendImages( &appended, imageList.begin(), imageList.end() );\n    // appended.display();\n    if (( appended.signature() != \"3a90bb0bb8f69f6788ab99e9e25598a0d6c5cdbbb797f77ad68011e0a8b1689d\" ) &&\n        ( appended.signature() != \"c15fcd1e739b73638dc4e36837bdb53f7087359544664caf7b1763928129f3c7\" ) &&\n        ( appended.signature() != \"229ff72f812e5f536245dc3b4502a0bc2ab2363f67c545863a85ab91ebfbfb83\" ) &&\n        ( appended.signature() != \"b98c42c55fc4e661cb3684154256809c03c0c6b53da2738b6ce8066e1b6ddef0\" ))\n      {\n\t++failures;\n\tcout << \"Line: \" << __LINE__\n\t     << \"  Horizontal append failed, signature = \"\n\t     << appended.signature() << endl;\n\tappended.write(\"appendImages_horizontal_out.miff\");\n\t// appended.display();\n      }\n\n    // Vertical\n    appendImages( &appended, imageList.begin(), imageList.end(), true );\n    if (( appended.signature() != \"d73d25ccd6011936d08b6d0d89183b7a61790544c2195269aff4db2f782ffc08\" ) &&\n        ( appended.signature() != \"f3590c183018757da798613a23505ab9600b35935988eee12f096cb6219f2bc3\" ) &&\n        ( appended.signature() != \"11b97ba6ac1664aa1c2faed4c86195472ae9cce2ed75402d975bb4ffcf1de751\" ) &&\n        ( appended.signature() != \"cae4815eeb3cb689e73b94d897a9957d3414d1d4f513e8b5e52579b05d164bfe\" ))\n      {\n\t++failures;\n\tcout << \"Line: \" << __LINE__\n\t     << \"  Vertical append failed, signature = \"\n\t     << appended.signature() << endl;\n\tappended.write(\"appendImages_vertical_out.miff\");\n\t// appended.display();\n      }\n    \n  }\n\n  catch( Exception &error_ )\n    {\n      cout << \"Caught exception: \" << error_.what() << endl;\n      return 1;\n    }\n  catch( exception &error_ )\n    {\n      cout << \"Caught exception: \" << error_.what() << endl;\n      return 1;\n    }\n\n  if ( failures )\n    {\n      cout << failures << \" failures\" << endl;\n      return 1;\n    }\n  \n  return 0;\n}\n\n"], "filenames": ["Magick++/tests/appendImages.cpp"], "buggy_code_start_loc": [60], "buggy_code_end_loc": [61], "fixing_code_start_loc": [60], "fixing_code_end_loc": [61], "type": "CWE-369", "message": "The quantum handling code in ImageMagick allows remote attackers to cause a denial of service (divide-by-zero error or out-of-bounds write) via a crafted file.", "other": {"cve": {"id": "CVE-2016-7530", "sourceIdentifier": "security@debian.org", "published": "2017-04-20T18:59:01.263", "lastModified": "2017-05-09T12:39:19.320", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The quantum handling code in ImageMagick allows remote attackers to cause a denial of service (divide-by-zero error or out-of-bounds write) via a crafted file."}, {"lang": "es", "value": "El c\u00f3digo de manejo cu\u00e1ntico en ImageMagick permite a atacantes remotos provocar una denegaci\u00f3n de servicio (error de divisi\u00f3n por cero o escritura fuera de l\u00edmites) a trav\u00e9s de un archivo manipulado."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-369"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:imagemagick:imagemagick:-:*:*:*:*:*:*:*", "matchCriteriaId": "6E6BE7A5-6FF7-4916-B671-9EE11CA54F65"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2016/09/22/2", "source": "security@debian.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/93131", "source": "security@debian.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://bugs.launchpad.net/bugs/1539053", "source": "security@debian.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://bugs.launchpad.net/bugs/1539067", "source": "security@debian.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1378762", "source": "security@debian.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/ImageMagick/ImageMagick/commit/63346f34f9d19179599b5b256e5e8d3dda46435c", "source": "security@debian.org", "tags": ["Patch"]}, {"url": "https://github.com/ImageMagick/ImageMagick/commit/b5ed738f8060266bf4ae521f7e3ed145aa4498a3", "source": "security@debian.org", "tags": ["Patch"]}, {"url": "https://github.com/ImageMagick/ImageMagick/commit/c4e63ad30bc42da691f2b5f82a24516dd6b4dc70", "source": "security@debian.org", "tags": ["Patch"]}, {"url": "https://github.com/ImageMagick/ImageMagick/issues/105", "source": "security@debian.org", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "https://github.com/ImageMagick/ImageMagick/issues/110", "source": "security@debian.org", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/ImageMagick/ImageMagick/commit/63346f34f9d19179599b5b256e5e8d3dda46435c"}}