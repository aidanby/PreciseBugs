{"buggy_code": ["<?php\n/**\n* This is the User Control Panel Object.\n*\n* Copyright (C) 2013 Schmooze Com, INC\n* Copyright (C) 2013 Andrew Nagy <andrew.nagy@schmoozecom.com>\n*\n* This program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*\n* @package   FreePBX UCP BMO\n* @author   Andrew Nagy <andrew.nagy@schmoozecom.com>\n* @license   AGPL v3\n*/\nnamespace UCP\\Modules;\nuse \\UCP\\Modules as Modules;\n\nclass Cdr extends Modules{\n\tprotected $module = 'Cdr';\n\tprivate $activeConferences = array();\n\tprivate $limit = 15;\n\tprivate $break = 5;\n\n\tfunction __construct($Modules) {\n\t\t$this->Modules = $Modules;\n\t\t$this->cdr = $this->UCP->FreePBX->Cdr;\n\t\t$this->user = $this->UCP->User->getUser();\n\t\tif($this->UCP->Session->isMobile || $this->UCP->Session->isTablet) {\n\t\t\t$this->limit = 7;\n\t\t}\n\t}\n\n\tpublic function getWidgetList() {\n\t\t$widgets = array();\n\n\t\t$user = $this->UCP->User->getUser();\n\t\t$enabled = $this->UCP->getCombinedSettingByID($user['id'],'Cdr','enable');\n\t\tif (!$enabled) {\n\t\t\treturn array();\n\t\t}\n\t\t$extensions = $this->UCP->getCombinedSettingByID($user['id'],'Cdr','assigned');\n\n\t\tif (!empty($extensions)) {\n\t\t\tforeach($extensions as $extension) {\n\t\t\t\t$data = $this->UCP->FreePBX->Core->getDevice($extension);\n\t\t\t\tif(empty($data) || empty($data['description'])) {\n\t\t\t\t\t$data = $this->UCP->FreePBX->Core->getUser($extension);\n\t\t\t\t\t$name = $data['name'];\n\t\t\t\t} else {\n\t\t\t\t\t$name = $data['description'];\n\t\t\t\t}\n\n\t\t\t\t$widgets[$extension] = array(\n\t\t\t\t\t\"display\" => $name,\n\t\t\t\t\t\"description\" => sprintf(_(\"Call History for %s\"),$name),\n\t\t\t\t\t\"defaultsize\" => array(\"height\" => 7, \"width\" => 6),\n\t\t\t\t\t\"minsize\" => array(\"height\" => 6, \"width\" => 3)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($widgets)) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn array(\n\t\t\t\"rawname\" => \"cdr\",\n\t\t\t\"display\" => _(\"Call History\"),\n\t\t\t\"icon\" => \"fa fa-hourglass-half\",\n\t\t\t\"list\" => $widgets\n\t\t);\n\t}\n\n\tpublic function getStaticSettings() {\n\t\t$sf = $this->UCP->FreePBX->Media->getSupportedFormats();\n\t\treturn array(\n\t\t\t\"showPlayback\" => $this->_checkPlayback() ? \"1\" : \"0\",\n\t\t\t\"showDownload\" => $this->_checkDownload() ? \"1\" : \"0\",\n\t\t\t\"supportedHTML5\" => implode(\",\",$this->UCP->FreePBX->Media->getSupportedHTML5Formats())\n\t\t);\n\t}\n\n\tpublic function getWidgetDisplay($id,$uuid) {\n\t\tif (!$this->_checkExtension($id)) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$displayvars = array(\n\t\t\t'ext' => $id,\n\t\t\t'activeList' => $view,\n\t\t\t'calls' => $this->postProcessCalls($this->cdr->getCalls($id, 1, 'desc', 'date', '', $this->limit), $id),\n\t\t\t\"showPlayback\" => $this->_checkPlayback(),\n\t\t\t\"showDownload\" => $this->_checkDownload(),\n\t\t\t\"extension\" => $id,\n\t\t\t\"supportedHTML5\" => implode(\",\",$this->UCP->FreePBX->Media->getSupportedHTML5Formats())\n\t\t);\n\n\t\t$html.= $this->load_view(__DIR__.'/views/widget.php',$displayvars);\n\n\t\t$display = array(\n\t\t\t'title' => _(\"Call History\"),\n\t\t\t'html' => $html\n\t\t);\n\n\t\treturn $display;\n\t}\n\n\tfunction poll($data) {\n\t\treturn array('status' => false);\n\t}\n\n\t/**\n\t* Determine what commands are allowed\n\t*\n\t* Used by Ajax Class to determine what commands are allowed by this class\n\t*\n\t* @param string $command The command something is trying to perform\n\t* @param string $settings The Settings being passed through $_POST or $_PUT\n\t* @return bool True if pass\n\t*/\n\tfunction ajaxRequest($command, $settings) {\n\t\tswitch($command) {\n\t\t\tcase 'grid':\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\t\tcase 'download':\n\t\t\t\treturn $this->_checkDownload($_REQUEST['ext']);\n\t\t\tbreak;\n\t\t\tcase 'gethtml5':\n\t\t\tcase 'playback':\n\t\t\t\treturn $this->_checkPlayback($_REQUEST['ext']);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t* The Handler for all ajax events releated to this class\n\t*\n\t* Used by Ajax Class to process commands\n\t*\n\t* @return mixed Output if success, otherwise false will generate a 500 error serverside\n\t*/\n\tfunction ajaxHandler() {\n\t\t$return = array(\"status\" => false, \"message\" => \"\");\n\t\tswitch($_REQUEST['command']) {\n\t\t\tcase \"grid\":\n\t\t\t\t$limit = $_REQUEST['limit'];\n\t\t\t\t$ext = $_REQUEST['extension'];\n\t\t\t\t$order = $_REQUEST['order'];\n\t\t\t\t$orderby = !empty($_REQUEST['sort']) ? $_REQUEST['sort'] : \"date\";\n\t\t\t\t$search = !empty($_REQUEST['search']) ? $_REQUEST['search'] : \"\";\n\t\t\t\t$pages = $this->cdr->getPages($ext,$search,$limit);\n\t\t\t\t$offset = $_REQUEST['offset'];\n\t\t\t\t$page = ($offset / $limit) + 1;\n\t\t\t\t$total = $this->cdr->getTotalCalls($ext,$search);\n\t\t\t\t$data = $this->postProcessCalls($this->cdr->getCalls($ext,$page,$orderby,$order,$search,$limit),$ext);\n\t\t\t\treturn array(\n\t\t\t\t\t\"total\" => $total,\n\t\t\t\t\t\"rows\" => $data\n\t\t\t\t);\n\t\t\tbreak;\n\t\t\tcase 'gethtml5':\n\t\t\t\t$media = $this->UCP->FreePBX->Media();\n\t\t\t\t$record = $this->UCP->FreePBX->Cdr->getRecordByIDExtension($_REQUEST['id'],$_REQUEST['ext']);\n\t\t\t\tif(!file_exists($record['recordingfile'])) {\n\t\t\t\t\treturn array(\"status\" => false, \"message\" => _(\"File does not exist\"));\n\t\t\t\t}\n\t\t\t\t$media->load($record['recordingfile']);\n\t\t\t\t$files = $media->generateHTML5();\n\t\t\t\t$final = array();\n\t\t\t\tforeach($files as $format => $name) {\n\t\t\t\t\t$final[$format] = \"index.php?quietmode=1&module=cdr&command=playback&file=\".$name.\"&ext=\".$_REQUEST['ext'];\n\t\t\t\t}\n\t\t\t\treturn array(\"status\" => true, \"files\" => $final);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\treturn $return;\n\t}\n\n\t/**\n\t* The Handler for quiet events\n\t*\n\t* Used by Ajax Class to process commands in which custom processing is needed\n\t*\n\t* @return mixed Output if success, otherwise false will generate a 500 error serverside\n\t*/\n\tfunction ajaxCustomHandler() {\n\t\tswitch($_REQUEST['command']) {\n\t\t\tcase \"download\":\n\t\t\t\t$msgid = $_REQUEST['msgid'];\n\t\t\t\t$ext = $_REQUEST['ext'];\n\t\t\t\t$this->downloadFile($msgid,$ext);\n\t\t\t\treturn true;\n\t\t\tcase \"playback\":\n\t\t\t\t$media = $this->UCP->FreePBX->Media();\n\t\t\t\t$media->getHTML5File($_REQUEST['file']);\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate function postProcessCalls($calls,$self) {\n\t\tforeach($calls as &$call) {\n\t\t\t$app = strtolower($call['lastapp']);\n\t\t\tswitch($app) {\n\t\t\t\tcase 'dial':\n\t\t\t\t\tswitch($call['disposition']) {\n\t\t\t\t\t\tcase 'ANSWERED':\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NO ANSWER':\n\t\t\t\t\t\t\t//Remove the recording reference as these are almost always errors (from what I've seen)\n\t\t\t\t\t\t\t$call['recordingfile'] = '';\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'BUSY':\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-clock-o';\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-clock-o';\n\t\t\t\t\t\t\t\t$call['text'] = $call['clid'];\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!empty($call['text']) && preg_match('/LC\\-(\\d*)/i',$call['text'],$matches)) {\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($matches[1]);\n\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$matches[1].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $matches[1];\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'voicemail':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t}\n\t\t\t\t\tif(preg_match('/^vmu(\\d*)/i',$call['text'],$matches)) {\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($matches[1]);\n\t\t\t\t\t\t$desc = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$matches[1].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $matches[1];\n\t\t\t\t\t\t$call['text'] = $desc . ' ' . _('Voicemail');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$id = trim($call['text']);\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($id);\n\t\t\t\t\t\t$desc = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$id.\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $id;\n\t\t\t\t\t\t$call['text'] = $desc . ' ' . _('Voicemail');\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'confbridge':\n\t\t\t\tcase 'meetme':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$conference = $this->UCP->FreePBX->Conferences->getConference($call['dst']);\n\t\t\t\t\t\t$call['text'] = _('Conference') . ' ' . (!empty($conference['description']) ? htmlentities('\"'.$conference['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst']);\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = _('Conference') . ' ' . htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$call['text'] = $call['src'];\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'hangup':\n\t\t\t\t\tswitch($call['dst']) {\n\t\t\t\t\t\tcase 'STARTMEETME':\n\t\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t\t$call['text'] = $call['src'] . ' ' . _('kicked from conference');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'denied':\n\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t$call['text'] = $call['src'] . ' ' . _('denied by COS');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'playback':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(empty($call['text'])) {\n\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t} else {\n\t\t\t\t$call['text'] = $this->cleanUTF8($call['text']);\n\t\t\t\t$call['text'] = preg_replace(\"/&lt;(.*)&gt;/i\",\"&lt;<span class='clickable' data-type='number' data-primary='phone'>$1</span>&gt;\",$call['text']);\n\t\t\t}\n\t\t\t$call['formattedTime'] = $this->UCP->View->getDateTime($call['timestamp']);\n\t\t}\n\t\treturn $calls;\n\t}\n\n\t/**\n\t * If you have come across the cursed \u2018Invalid Character\u2018 error while\n\t * using PHP\u2019s XML or JSON parser then you may be interested in this.\n\t *\n\t * Unfortunately, PHP\u2019s XML and JSON parsers do not ignore non-UTF8\n\t * characters, but rather they stop and throw a rather unhelpful error.\n\t * I found the below code form net and work excellently for me.\n\t *\n\t * http://stackoverflow.com/a/37438731\n\t *\n\t * @param  string $string String to check\n\t * @return string         Fixed characters\n\t */\n\tprivate function cleanUTF8($string) {\n\t\t//reject overly long 2 byte sequences, as well as characters above U+10000 and replace with ?\n\t\t$string = preg_replace('/[\\x00-\\x08\\x10\\x0B\\x0C\\x0E-\\x19\\x7F]'.\n\t\t '|[\\x00-\\x7F][\\x80-\\xBF]+'.\n\t\t '|([\\xC0\\xC1]|[\\xF0-\\xFF])[\\x80-\\xBF]*'.\n\t\t '|[\\xC2-\\xDF]((?![\\x80-\\xBF])|[\\x80-\\xBF]{2,})'.\n\t\t '|[\\xE0-\\xEF](([\\x80-\\xBF](?![\\x80-\\xBF]))|(?![\\x80-\\xBF]{2})|[\\x80-\\xBF]{3,})/S',\n\t\t '?', $string );\n\n\t\t//reject overly long 3 byte sequences and UTF-16 surrogates and replace with ?\n\t\t$string = preg_replace('/\\xE0[\\x80-\\x9F][\\x80-\\xBF]'.\n\t\t '|\\xED[\\xA0-\\xBF][\\x80-\\xBF]/S','?', $string );\n\n\t\t return $string;\n\t}\n\n\t/**\n\t * Download a file to listen to on your desktop\n\t * @param  string $msgid The message id\n\t * @param  int $ext   Extension wanting to listen to\n\t */\n\tprivate function downloadFile($msgid,$ext) {\n\t\tif(!$this->_checkExtension($ext)) {\n\t\t\theader(\"HTTP/1.0 403 Forbidden\");\n\t\t\techo _(\"Forbidden\");\n\t\t\texit;\n\t\t}\n\t\t$record = $this->UCP->FreePBX->Cdr->getRecordByIDExtension($msgid,$ext);\n\t\tif(!file_exists($record['recordingfile'])) {\n\t\t\theader(\"HTTP/1.0 404 Not Found\");\n\t\t\techo _(\"Not Found\");\n\t\t\texit;\n\t\t}\n\t\t$media = $this->UCP->FreePBX->Media;\n\t\t$mimetype = $media->getMIMEtype($record['recordingfile']);\n\t\theader(\"Content-length: \" . filesize($record['recordingfile']));\n\t\theader(\"Cache-Control: no-cache, must-revalidate\"); // HTTP/1.1\n\t\theader(\"Expires: Sat, 26 Jul 1997 05:00:00 GMT\"); // Date in the past\n\t\theader('Content-Disposition: attachment;filename=\"' . basename($record['recordingfile']).'\"');\n\t\theader('Content-type: ' . $mimetype);\n\t\treadfile($record['recordingfile']);\n\t}\n\n\tprivate function _checkExtension($extension) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\t$extensions = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','assigned');\n\t\treturn in_array($extension,$extensions);\n\t}\n\n\tprivate function _checkDownload($extension=null) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!is_null($extension) && $this->_checkExtension($extension)) {\n\t\t\t$dl = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','download');\n\t\t\treturn is_null($dl) ? true : $dl;\n\t\t} elseif(is_null($extension)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate function _checkPlayback($extension=null) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!is_null($extension) && $this->_checkExtension($extension)) {\n\t\t\t$pb = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','playback');\n\t\t\treturn is_null($pb) ? true : $pb;\n\t\t} elseif(is_null($extension)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n", "<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_enable\"><?php echo _(\"Allow CDR\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_enable\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"cdr_enable\" id=\"cdr_enable_yes\" value=\"yes\" <?php echo ($enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t<label for=\"cdr_enable_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"cdr_enable\" id=\"cdr_enable_no\" value=\"no\" <?php echo (!is_null($enable) && !$enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t<label for=\"cdr_enable_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"cdr_enable_inherit\" name=\"cdr_enable\" value='inherit' <?php echo is_null($enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_enable_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_enable-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Enable CDR (Call History) in UCP for this user\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"ucp_cdr\"><?php echo _(\"CDR Access\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"ucp_cdr\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<select data-placeholder=\"Extensions\" id=\"ucp_cdr\" class=\"form-control chosenmultiselect ucp-cdr\" name=\"ucp_cdr[]\" multiple=\"multiple\" <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<?php foreach($ausers as $key => $value) {?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo $key?>\" <?php echo in_array($key,$cdrassigned) ? 'selected' : '' ?>><?php echo $value?></option>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"ucp_cdr-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"These are the assigned and active extensions which will show up for this user to control and edit in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_download\"><?php echo _(\"Allow CDR Downloads\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_download\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_download\" id=\"cdr_download_yes\" value=\"yes\" <?php echo ($download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_download_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_download\" id=\"cdr_download_no\" value=\"no\" <?php echo (!is_null($download) && !$download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_download_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" id=\"cdr_download_inherit\" name=\"cdr_download\" value='inherit' <?php echo is_null($download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_download_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_download-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Allow users to download recordings in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_playback\"><?php echo _(\"Allow CDR Playback\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_playback\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_playback\" id=\"cdr_playback_yes\" value=\"yes\" <?php echo ($playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_playback_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_playback\" id=\"cdr_playback_no\" value=\"no\" <?php echo (!is_null($playback) && !$playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_playback_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" id=\"cdr_playback_inherit\" name=\"cdr_playback\" value='inherit' <?php echo is_null($playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_playback_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_playback-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Allow this user to playback recordings in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<script>\n\t$(\"input[name=cdr_enable]\").change(function() {\n\t\tif($(this).val() == \"yes\" || $(this).val() == \"inherit\") {\n\t\t\t$(\".ucp-cdr\").prop(\"disabled\",false).trigger(\"chosen:updated\");;\n\t\t} else {\n\t\t\t$(\".ucp-cdr\").prop(\"disabled\",true).trigger(\"chosen:updated\");;\n\t\t}\n\t});\n</script>\n"], "fixing_code": ["<?php\n/**\n* This is the User Control Panel Object.\n*\n* Copyright (C) 2013 Schmooze Com, INC\n* Copyright (C) 2013 Andrew Nagy <andrew.nagy@schmoozecom.com>\n*\n* This program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*\n* @package   FreePBX UCP BMO\n* @author   Andrew Nagy <andrew.nagy@schmoozecom.com>\n* @license   AGPL v3\n*/\nnamespace UCP\\Modules;\nuse \\UCP\\Modules as Modules;\n\nclass Cdr extends Modules{\n\tprotected $module = 'Cdr';\n\tprivate $activeConferences = array();\n\tprivate $limit = 15;\n\tprivate $break = 5;\n\n\tfunction __construct($Modules) {\n\t\t$this->Modules = $Modules;\n\t\t$this->cdr = $this->UCP->FreePBX->Cdr;\n\t\t$this->user = $this->UCP->User->getUser();\n\t\tif($this->UCP->Session->isMobile || $this->UCP->Session->isTablet) {\n\t\t\t$this->limit = 7;\n\t\t}\n\t}\n\n\tpublic function getWidgetList() {\n\t\t$widgets = array();\n\n\t\t$user = $this->UCP->User->getUser();\n\t\t$enabled = $this->UCP->getCombinedSettingByID($user['id'],'Cdr','enable');\n\t\tif (!$enabled) {\n\t\t\treturn array();\n\t\t}\n\t\t$extensions = $this->UCP->getCombinedSettingByID($user['id'],'Cdr','assigned');\n\n\t\tif (!empty($extensions)) {\n\t\t\tforeach($extensions as $extension) {\n\t\t\t\t$data = $this->UCP->FreePBX->Core->getDevice($extension);\n\t\t\t\tif(empty($data) || empty($data['description'])) {\n\t\t\t\t\t$data = $this->UCP->FreePBX->Core->getUser($extension);\n\t\t\t\t\t$name = $data['name'];\n\t\t\t\t} else {\n\t\t\t\t\t$name = $data['description'];\n\t\t\t\t}\n\n\t\t\t\t$widgets[$extension] = array(\n\t\t\t\t\t\"display\" => $name,\n\t\t\t\t\t\"description\" => sprintf(_(\"Call History for %s\"),$name),\n\t\t\t\t\t\"defaultsize\" => array(\"height\" => 7, \"width\" => 6),\n\t\t\t\t\t\"minsize\" => array(\"height\" => 6, \"width\" => 3)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($widgets)) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn array(\n\t\t\t\"rawname\" => \"cdr\",\n\t\t\t\"display\" => _(\"Call History\"),\n\t\t\t\"icon\" => \"fa fa-hourglass-half\",\n\t\t\t\"list\" => $widgets\n\t\t);\n\t}\n\n\tpublic function getStaticSettings() {\n\t\t$sf = $this->UCP->FreePBX->Media->getSupportedFormats();\n\t\treturn array(\n\t\t\t\"showPlayback\" => $this->_checkPlayback() ? \"1\" : \"0\",\n\t\t\t\"showDownload\" => $this->_checkDownload() ? \"1\" : \"0\",\n\t\t\t\"supportedHTML5\" => implode(\",\",$this->UCP->FreePBX->Media->getSupportedHTML5Formats())\n\t\t);\n\t}\n\n\tpublic function getWidgetDisplay($id,$uuid) {\n\t\tif (!$this->_checkExtension($id)) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$displayvars = array(\n\t\t\t'ext' => $id,\n\t\t\t'activeList' => $view,\n\t\t\t'calls' => $this->postProcessCalls($this->cdr->getCalls($id, 1, 'desc', 'date', '', $this->limit), $id),\n\t\t\t\"showPlayback\" => $this->_checkPlayback(),\n\t\t\t\"showDownload\" => $this->_checkDownload(),\n\t\t\t\"extension\" => $id,\n\t\t\t\"supportedHTML5\" => implode(\",\",$this->UCP->FreePBX->Media->getSupportedHTML5Formats())\n\t\t);\n\n\t\t$html.= $this->load_view(__DIR__.'/views/widget.php',$displayvars);\n\n\t\t$display = array(\n\t\t\t'title' => _(\"Call History\"),\n\t\t\t'html' => $html\n\t\t);\n\n\t\treturn $display;\n\t}\n\n\tfunction poll($data) {\n\t\treturn array('status' => false);\n\t}\n\n\t/**\n\t* Determine what commands are allowed\n\t*\n\t* Used by Ajax Class to determine what commands are allowed by this class\n\t*\n\t* @param string $command The command something is trying to perform\n\t* @param string $settings The Settings being passed through $_POST or $_PUT\n\t* @return bool True if pass\n\t*/\n\tfunction ajaxRequest($command, $settings) {\n\t\tswitch($command) {\n\t\t\tcase 'grid':\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\t\tcase 'download':\n\t\t\t\treturn $this->_checkDownload($_REQUEST['ext']);\n\t\t\tbreak;\n\t\t\tcase 'gethtml5':\n\t\t\tcase 'playback':\n\t\t\t\treturn $this->_checkPlayback($_REQUEST['ext']);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t* The Handler for all ajax events releated to this class\n\t*\n\t* Used by Ajax Class to process commands\n\t*\n\t* @return mixed Output if success, otherwise false will generate a 500 error serverside\n\t*/\n\tfunction ajaxHandler() {\n\t\t$return = array(\"status\" => false, \"message\" => \"\");\n\t\tswitch($_REQUEST['command']) {\n\t\t\tcase \"grid\":\n\t\t\t\t$limit = filter_var($_REQUEST['limit'], FILTER_SANITIZE_NUMBER_INT);\n\t\t\t\t$ext = $_REQUEST['extension'];\n\t\t\t\t$order = $_REQUEST['order'];\n\t\t\t\t$orderby = !empty($_REQUEST['sort']) ? $_REQUEST['sort'] : \"date\";\n\t\t\t\t$search = !empty($_REQUEST['search']) ? $_REQUEST['search'] : \"\";\n\t\t\t\t$pages = $this->cdr->getPages($ext,$search,$limit);\n\t\t\t\t$offset = filter_var($_REQUEST['offset'], FILTER_SANITIZE_NUMBER_INT);\n\t\t\t\t$page = ($offset / $limit) + 1;\n\t\t\t\t$total = $this->cdr->getTotalCalls($ext,$search);\n\t\t\t\t$data = $this->postProcessCalls($this->cdr->getCalls($ext,$page,$orderby,$order,$search,$limit),$ext);\n\t\t\t\treturn array(\n\t\t\t\t\t\"total\" => $total,\n\t\t\t\t\t\"rows\" => $data\n\t\t\t\t);\n\t\t\tbreak;\n\t\t\tcase 'gethtml5':\n\t\t\t\t$media = $this->UCP->FreePBX->Media();\n\t\t\t\t$record = $this->UCP->FreePBX->Cdr->getRecordByIDExtension($_REQUEST['id'],$_REQUEST['ext']);\n\t\t\t\tif(!file_exists($record['recordingfile'])) {\n\t\t\t\t\treturn array(\"status\" => false, \"message\" => _(\"File does not exist\"));\n\t\t\t\t}\n\t\t\t\t$media->load($record['recordingfile']);\n\t\t\t\t$files = $media->generateHTML5();\n\t\t\t\t$final = array();\n\t\t\t\tforeach($files as $format => $name) {\n\t\t\t\t\t$final[$format] = \"index.php?quietmode=1&module=cdr&command=playback&file=\".$name.\"&ext=\".$_REQUEST['ext'];\n\t\t\t\t}\n\t\t\t\treturn array(\"status\" => true, \"files\" => $final);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\treturn $return;\n\t}\n\n\t/**\n\t* The Handler for quiet events\n\t*\n\t* Used by Ajax Class to process commands in which custom processing is needed\n\t*\n\t* @return mixed Output if success, otherwise false will generate a 500 error serverside\n\t*/\n\tfunction ajaxCustomHandler() {\n\t\tswitch($_REQUEST['command']) {\n\t\t\tcase \"download\":\n\t\t\t\t$msgid = $_REQUEST['msgid'];\n\t\t\t\t$ext = $_REQUEST['ext'];\n\t\t\t\t$this->downloadFile($msgid,$ext);\n\t\t\t\treturn true;\n\t\t\tcase \"playback\":\n\t\t\t\t$media = $this->UCP->FreePBX->Media();\n\t\t\t\t$media->getHTML5File($_REQUEST['file']);\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate function postProcessCalls($calls,$self) {\n\t\tforeach($calls as &$call) {\n\t\t\t$app = strtolower($call['lastapp']);\n\t\t\tswitch($app) {\n\t\t\t\tcase 'dial':\n\t\t\t\t\tswitch($call['disposition']) {\n\t\t\t\t\t\tcase 'ANSWERED':\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NO ANSWER':\n\t\t\t\t\t\t\t//Remove the recording reference as these are almost always errors (from what I've seen)\n\t\t\t\t\t\t\t$call['recordingfile'] = '';\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'BUSY':\n\t\t\t\t\t\t\tif($call['src'] == $self || strpos($call['channel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($call['dst']);\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-clock-o';\n\t\t\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst'];\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self || strpos($call['dstchannel'], \"/\".$self.\"-\") !== false) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-clock-o';\n\t\t\t\t\t\t\t\t$call['text'] = $call['clid'];\n\t\t\t\t\t\t\t} elseif($call['cnum'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!empty($call['text']) && preg_match('/LC\\-(\\d*)/i',$call['text'],$matches)) {\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($matches[1]);\n\t\t\t\t\t\t$call['text'] = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$matches[1].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $matches[1];\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'voicemail':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['icons'][] = 'fa-envelope';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t}\n\t\t\t\t\tif(preg_match('/^vmu(\\d*)/i',$call['text'],$matches)) {\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($matches[1]);\n\t\t\t\t\t\t$desc = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$matches[1].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $matches[1];\n\t\t\t\t\t\t$call['text'] = $desc . ' ' . _('Voicemail');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$id = trim($call['text']);\n\t\t\t\t\t\t$device = $this->UCP->FreePBX->Core->getDevice($id);\n\t\t\t\t\t\t$desc = !empty($device['description']) ? htmlentities('\"'.$device['description'].'\"' . \" <\".$id.\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $id;\n\t\t\t\t\t\t$call['text'] = $desc . ' ' . _('Voicemail');\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'confbridge':\n\t\t\t\tcase 'meetme':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$conference = $this->UCP->FreePBX->Conferences->getConference($call['dst']);\n\t\t\t\t\t\t$call['text'] = _('Conference') . ' ' . (!empty($conference['description']) ? htmlentities('\"'.$conference['description'].'\"' . \" <\".$call['dst'].\">\",ENT_COMPAT | ENT_HTML401, \"UTF-8\") : $call['dst']);\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = _('Conference') . ' ' . htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t$call['text'] = $call['src'];\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'hangup':\n\t\t\t\t\tswitch($call['dst']) {\n\t\t\t\t\t\tcase 'STARTMEETME':\n\t\t\t\t\t\t\t$call['icons'][] = 'fa-users';\n\t\t\t\t\t\t\t$call['text'] = $call['src'] . ' ' . _('kicked from conference');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'denied':\n\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t$call['text'] = $call['src'] . ' ' . _('denied by COS');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-ban';\n\t\t\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t\t\t$call['text'] = htmlentities($call['clid'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tcase 'playback':\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif($call['src'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-right out';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['dst'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} elseif($call['dst'] == $self) {\n\t\t\t\t\t\t$call['icons'][] = 'fa-arrow-left in';\n\t\t\t\t\t\t$call['text'] = htmlentities($call['src'],ENT_COMPAT | ENT_HTML401, \"UTF-8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(empty($call['text'])) {\n\t\t\t\t$call['text'] = _('Unknown') . ' (' . $call['uniqueid'] . ')';\n\t\t\t} else {\n\t\t\t\t$call['text'] = $this->cleanUTF8($call['text']);\n\t\t\t\t$call['text'] = preg_replace(\"/&lt;(.*)&gt;/i\",\"&lt;<span class='clickable' data-type='number' data-primary='phone'>$1</span>&gt;\",$call['text']);\n\t\t\t}\n\t\t\t$call['formattedTime'] = $this->UCP->View->getDateTime($call['timestamp']);\n\t\t}\n\t\treturn $calls;\n\t}\n\n\t/**\n\t * If you have come across the cursed \u2018Invalid Character\u2018 error while\n\t * using PHP\u2019s XML or JSON parser then you may be interested in this.\n\t *\n\t * Unfortunately, PHP\u2019s XML and JSON parsers do not ignore non-UTF8\n\t * characters, but rather they stop and throw a rather unhelpful error.\n\t * I found the below code form net and work excellently for me.\n\t *\n\t * http://stackoverflow.com/a/37438731\n\t *\n\t * @param  string $string String to check\n\t * @return string         Fixed characters\n\t */\n\tprivate function cleanUTF8($string) {\n\t\t//reject overly long 2 byte sequences, as well as characters above U+10000 and replace with ?\n\t\t$string = preg_replace('/[\\x00-\\x08\\x10\\x0B\\x0C\\x0E-\\x19\\x7F]'.\n\t\t '|[\\x00-\\x7F][\\x80-\\xBF]+'.\n\t\t '|([\\xC0\\xC1]|[\\xF0-\\xFF])[\\x80-\\xBF]*'.\n\t\t '|[\\xC2-\\xDF]((?![\\x80-\\xBF])|[\\x80-\\xBF]{2,})'.\n\t\t '|[\\xE0-\\xEF](([\\x80-\\xBF](?![\\x80-\\xBF]))|(?![\\x80-\\xBF]{2})|[\\x80-\\xBF]{3,})/S',\n\t\t '?', $string );\n\n\t\t//reject overly long 3 byte sequences and UTF-16 surrogates and replace with ?\n\t\t$string = preg_replace('/\\xE0[\\x80-\\x9F][\\x80-\\xBF]'.\n\t\t '|\\xED[\\xA0-\\xBF][\\x80-\\xBF]/S','?', $string );\n\n\t\t return $string;\n\t}\n\n\t/**\n\t * Download a file to listen to on your desktop\n\t * @param  string $msgid The message id\n\t * @param  int $ext   Extension wanting to listen to\n\t */\n\tprivate function downloadFile($msgid,$ext) {\n\t\tif(!$this->_checkExtension($ext)) {\n\t\t\theader(\"HTTP/1.0 403 Forbidden\");\n\t\t\techo _(\"Forbidden\");\n\t\t\texit;\n\t\t}\n\t\t$record = $this->UCP->FreePBX->Cdr->getRecordByIDExtension($msgid,$ext);\n\t\tif(!file_exists($record['recordingfile'])) {\n\t\t\theader(\"HTTP/1.0 404 Not Found\");\n\t\t\techo _(\"Not Found\");\n\t\t\texit;\n\t\t}\n\t\t$media = $this->UCP->FreePBX->Media;\n\t\t$mimetype = $media->getMIMEtype($record['recordingfile']);\n\t\theader(\"Content-length: \" . filesize($record['recordingfile']));\n\t\theader(\"Cache-Control: no-cache, must-revalidate\"); // HTTP/1.1\n\t\theader(\"Expires: Sat, 26 Jul 1997 05:00:00 GMT\"); // Date in the past\n\t\theader('Content-Disposition: attachment;filename=\"' . basename($record['recordingfile']).'\"');\n\t\theader('Content-type: ' . $mimetype);\n\t\treadfile($record['recordingfile']);\n\t}\n\n\tprivate function _checkExtension($extension) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\t$extensions = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','assigned');\n\t\treturn in_array($extension,$extensions);\n\t}\n\n\tprivate function _checkDownload($extension=null) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!is_null($extension) && $this->_checkExtension($extension)) {\n\t\t\t$dl = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','download');\n\t\t\treturn is_null($dl) ? true : $dl;\n\t\t} elseif(is_null($extension)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate function _checkPlayback($extension=null) {\n\t\t$enabled = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','enable');\n\t\tif(!$enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tif(!is_null($extension) && $this->_checkExtension($extension)) {\n\t\t\t$pb = $this->UCP->getCombinedSettingByID($this->user['id'],'Cdr','playback');\n\t\t\treturn is_null($pb) ? true : $pb;\n\t\t} elseif(is_null($extension)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n", "<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_enable\"><?php echo _(\"Allow CDR\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_enable\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"cdr_enable\" id=\"cdr_enable_yes\" value=\"yes\" <?php echo ($enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t<label for=\"cdr_enable_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"cdr_enable\" id=\"cdr_enable_no\" value=\"no\" <?php echo (!is_null($enable) && !$enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t<label for=\"cdr_enable_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"cdr_enable_inherit\" name=\"cdr_enable\" value='inherit' <?php echo is_null($enable) ? 'checked' : ''?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_enable_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_enable-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Enable CDR (Call History) in UCP for this user\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"ucp_cdr\"><?php echo _(\"CDR Access\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"ucp_cdr\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<select data-placeholder=\"Extensions\" id=\"ucp_cdr\" class=\"form-control chosenmultiselect ucp-cdr\" name=\"ucp_cdr[]\" multiple=\"multiple\" <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<?php foreach($ausers as $key => $value) {?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo htmlentities($key)?>\" <?php echo in_array($key,$cdrassigned) ? 'selected' : '' ?>><?php echo htmlentities($value)?></option>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"ucp_cdr-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"These are the assigned and active extensions which will show up for this user to control and edit in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_download\"><?php echo _(\"Allow CDR Downloads\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_download\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_download\" id=\"cdr_download_yes\" value=\"yes\" <?php echo ($download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_download_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_download\" id=\"cdr_download_no\" value=\"no\" <?php echo (!is_null($download) && !$download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_download_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" id=\"cdr_download_inherit\" name=\"cdr_download\" value='inherit' <?php echo is_null($download) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_download_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_download-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Allow users to download recordings in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"element-container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t<label class=\"control-label\" for=\"cdr_playback\"><?php echo _(\"Allow CDR Playback\")?></label>\n\t\t\t\t\t\t<i class=\"fa fa-question-circle fpbx-help-icon\" data-for=\"cdr_playback\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t<span class=\"radioset\">\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_playback\" id=\"cdr_playback_yes\" value=\"yes\" <?php echo ($playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_playback_yes\"><?php echo _('Yes')?></label>\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" name=\"cdr_playback\" id=\"cdr_playback_no\" value=\"no\" <?php echo (!is_null($playback) && !$playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t<label for=\"cdr_playback_no\"><?php echo _('No')?></label>\n\t\t\t\t\t\t\t<?php if($mode == \"user\") {?>\n\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"ucp-cdr\" id=\"cdr_playback_inherit\" name=\"cdr_playback\" value='inherit' <?php echo is_null($playback) ? 'checked' : ''?> <?php echo (!is_null($enable) && !$enable) ? \"disabled\" : \"\"?>>\n\t\t\t\t\t\t\t\t<label for=\"cdr_playback_inherit\"><?php echo _('Inherit')?></label>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<span id=\"cdr_playback-help\" class=\"help-block fpbx-help-block\"><?php echo _(\"Allow this user to playback recordings in UCP\")?></span>\n\t\t</div>\n\t</div>\n</div>\n<script>\n\t$(\"input[name=cdr_enable]\").change(function() {\n\t\tif($(this).val() == \"yes\" || $(this).val() == \"inherit\") {\n\t\t\t$(\".ucp-cdr\").prop(\"disabled\",false).trigger(\"chosen:updated\");;\n\t\t} else {\n\t\t\t$(\".ucp-cdr\").prop(\"disabled\",true).trigger(\"chosen:updated\");;\n\t\t}\n\t});\n</script>\n"], "filenames": ["ucp/Cdr.class.php", "views/ucp_config.php"], "buggy_code_start_loc": [160, 44], "buggy_code_end_loc": [167, 45], "fixing_code_start_loc": [160, 44], "fixing_code_end_loc": [167, 45], "type": "CWE-89", "message": "A vulnerability was found in FreePBX cdr 14.0. It has been classified as critical. This affects the function ajaxHandler of the file ucp/Cdr.class.php. The manipulation of the argument limit/offset leads to sql injection. Upgrading to version 14.0.5.21 is able to address this issue. The name of the patch is f1a9eea2dfff30fb99d825bac194a676a82b9ec8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216771.", "other": {"cve": {"id": "CVE-2020-36630", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-25T20:15:25.100", "lastModified": "2023-01-05T01:51:01.657", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in FreePBX cdr 14.0. It has been classified as critical. This affects the function ajaxHandler of the file ucp/Cdr.class.php. The manipulation of the argument limit/offset leads to sql injection. Upgrading to version 14.0.5.21 is able to address this issue. The name of the patch is f1a9eea2dfff30fb99d825bac194a676a82b9ec8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216771."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sangoma:freepbx:*:*:*:*:*:*:*:*", "versionStartIncluding": "14.0", "versionEndExcluding": "14.0.5.21", "matchCriteriaId": "9DF249FA-1F7D-4B99-AA29-FEEDE1D78861"}]}]}], "references": [{"url": "https://github.com/FreePBX/cdr/commit/f1a9eea2dfff30fb99d825bac194a676a82b9ec8", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/FreePBX/cdr/releases/tag/release%2F14.0.5.21", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216771", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216771", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/FreePBX/cdr/commit/f1a9eea2dfff30fb99d825bac194a676a82b9ec8"}}