{"buggy_code": ["\\A{history} Changelog and Release Notes\n\n\\H{v3.09} 3.09\n\nReleased on ????, 20??\n\n\\S1{v3.09-rl} Release Notes\n\n????\n\n\\S1{v3.09-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Added \\R{assert}{!assert}\n\n\\b Fixed \\cw{!uninstfinalize} bug on large uninstallers (\\W{http://sf.net/p/nsis/bugs/1279}{bug #1279})\n\n\\b Fixed creation of missing special folders on old Windows versions where SHGetFolderPath is not available.\n\n\\b Fixed plug-in call overwriting \\cw{SetDetailsPrint lastused} (\\W{http://sf.net/p/nsis/bugs/1271}{bug #1271})\n\n\\b Fixed \\cw{!appendfile} not writing to non-empty files with a BOM\n\n\\b Fixed LogicLib \\cw{$\\{Switch\\}} Unicode bug\\#{ stackoverflow.com/q/73530905/ }\n\n\\b Fixed MakeNSISW editor zoom level bug (\\W{http://sf.net/p/nsis/bugs/1282}{bug #1282})\n\n\\S2{} Translations\n\n\\b Updated Brazilian Portuguese (\\W{http://sf.net/p/nsis/bugs/1269}{bug #1269})\n\n\\b Updated Ukrainian (\\W{http://sf.net/p/nsis/patches/308}{patch #308})\n\n\\S2{} Build System\n\n\\b Fixed halibut \\#{fprintf format security}compiler warnings (\\W{http://sf.net/p/nsis/patches/304}{patch #304})\n\n\\b Fixed various issues with very old and new GCC versions (\\W{http://sf.net/p/nsis/bugs/1275}{bug #1275}, \\W{http://sf.net/p/nsis/patches/307}{patch #307})\n\n\\b Disable stub relocations in newer GCC (\\W{http://sf.net/p/nsis/bugs/1283}{bug #1283})\n\n\\H{v3.08} 3.08\n\nReleased on September 25th, 2021\n\n\\S1{v3.08-rl} Release Notes\n\nThis release is filled with features that a lot of people have been requesting for a while. Enjoy!\n\n\\S1{v3.08-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{uninstfinalize}{!uninstfinalize} (\\W{http://sf.net/p/nsis/patches/280}{patch #280}, \\W{http://sf.net/p/nsis/bugs/1241}{bug #1241})\n\n\\S2{} Minor Changes\n\n\\b Added \\cw{$USER..} and \\cw{$COMMON..} alias constants\n\n\\b Added \\R{getdllversion}{GetDLLVersion} /ProductVersion switch\n\n\\b Added \\R{getwinver}{GetWinVer} instruction\n\n\\b Disallow start maximized mode\n\n\\b Added /LAUNCH compiler switch\n\n\\b PEAddResource now supports the res:// protocol\n\n\\b System::Store can push/pop the flags state\n\n\\H{v3.07} 3.07\n\nReleased on July 24th, 2021\n\n\\S1{v3.07-rl} Release Notes\n\nUnicode is now the default.\n\n\\S1{v3.07-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{aunicodetarget}{Unicode} now defaults to \\cw{true}\n\n\\S2{} Minor Changes\n\n\\b Added nsExec /MBCS switch\n\n\\b Memento now supports overridable storage macros\n\n\\b Fixed Unicode compiler crash (\\W{http://sf.net/p/nsis/bugs/1254}{bug #1254}, \\W{http://sf.net/p/nsis/patches/300}{patch #300})\n\n\\b Fixed !addplugindir relative path bug (\\W{http://sf.net/p/nsis/bugs/1264}{bug #1264})\n\n\\b Fixed StrClb Unicode bug (\\W{http://sf.net/p/nsis/patches/302}{patch #302})\n\n\\b Fixed $\\{GetTime\\} hour padding (\\W{http://sf.net/p/nsis/bugs/980}{bug #980})\n\n\\S2{} Translations\n\n\\b Updated Albanian (\\W{http://sf.net/p/nsis/patches/303}{patch #303}), Corsican\\#{(forum)} and Japanese (maboroshin PR\\#{github.com/maboroshin})\n\n\\b Fixed clipped Chinese text (\\W{http://sf.net/p/nsis/bugs/1261}{bug #1261})\n\n\\H{v3.06.1} 3.06.1\n\nReleased on July 31st, 2020\n\n\\S1{v3.06.1-rl} Release Notes\n\n20th anniversary! The first public release of NSIS was v1.0f on July 31st, 2000.\n\n\\S1{v3.06.1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed \\R{setbrandingimage}{SetBrandingImage} crash\n\n\\H{v3.06} 3.06\n\nReleased on July 31st, 2020\n\n\\S1{v3.06-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\cw{DeleteRegKey /ifempty} now also checks for values, not just subkeys. Use \\cw{/ifnosubkeys} for the old behavior.\n\n\\b Added \\R{getknownfolderpath}{GetKnownFolderPath}\n\n\\b Added UnpinShortcut macro (Integration.nsh)\n\n\\S2{} Minor Changes\n\n\\b Added \\R{ifshellvarcontextall}{IfShellVarContextAll} and \\R{ifrtllanguage}{IfRtlLanguage}\n\n\\# Undocumented: \\b Added GetShellVarContext, IfAltRegView and GetRegView | Documenting these would require documenting the parameter name to number mapping\n\n\\# Undocumented: \\b Added ManifestAppendCustomString\n\n\\b Added \\cw{!define /intfmt}\n\n\\b Added Date/Time \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} controls and macros\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed INSTALLMODE_FUNCTION and added INSTALLMODEPAGE_SHOWUSERNAME\n\n\\S2{} Translations\n\n\\b Updated German (SebStange PR\\#{github.com/SebStange}) and Simplified Chinese (\\W{http://sf.net/p/nsis/patches/297}{patch #297})\n\n\\S2{} Build System\n\n\\b Primitive SOURCE_DATE_EPOCH support (\\W{http://sf.net/p/nsis/patches/294}{patch #294})\n\n\\b Python 3 fixes (\\W{http://sf.net/p/nsis/patches/296}{patch #296})\n\n\\b GCC 10 memmove workaround (\\W{http://sf.net/p/nsis/bugs/1248}{bug #1248})\n\n\\H{v3.05} 3.05\n\nReleased on December 15th, 2019\n\n\\S1{v3.05-rl} Release Notes\n\nANSI targets are deprecated, consider moving to Unicode.\n\n\\S1{v3.05-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{apeaddresource}{PEAddResource} and \\R{aperemoveresource}{PERemoveResource}\n\n\\b Added \\R{loadandsetimage}{LoadAndSetImage}\n\n\\b Allow quoted library path in System::Call (\\W{http://sf.net/p/nsis/bugs/546}{bug #546} and \\W{http://sf.net/p/nsis/bugs/1225}{bug #1225})\n\n\\b Improved \\L{../Docs/nsExec/nsExec.txt}{nsExec} Unicode and tab output parsing (\\W{http://sf.net/p/nsis/bugs/1232}{bug #1232})\n\n\\S2{} Minor Changes\n\n\\b Added experimental \\R{amanifestlongpathaware}{ManifestLongPathAware} attribute\n\n\\# Undocumented: \\b Added ManifestMaxVersionTested\n\n\\b %1 in \\R{finalize}{!finalize} command can be specified multiple times\n\n\\b Fixed -O stderr stream issue (\\W{http://sf.net/p/nsis/bugs/1221}{bug #1221})\n\n\\b Fixed \\R{library_install}{InstallLib} .NSI space-in-path bug (\\W{http://sf.net/p/nsis/bugs/1222}{bug #1222})\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} now supports a \"using\" idiom to help with forward-declaration of functions (\\W{http://sf.net/p/nsis/bugs/1229}{bug #1229})\n\n\\b Added \\R{ssectioninsttype}{SectionInstType}\n\n\\b Zero uninitialized data in icon group (\\W{http://sf.net/p/nsis/bugs/1230}{bug #1230})\n\n\\b Automatically doubles ampersands in the \\R{aname}{Name} attribute\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} CB/LB_Get/SetItemData macros (\\W{http://sf.net/p/nsis/bugs/1238}{bug #1238})\n\n\\S2{} Translations\n\n\\b Updated Hindi (\\W{http://sf.net/p/nsis/patches/291}{patch #291}) and Portuguese (\\W{http://sf.net/p/nsis/bugs/1219}{bug #1219})\n\n\\H{v3.04} 3.04\n\nReleased on December 15th, 2018\n\n\\S1{v3.04-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added IsNativeMachineArchitecture helper macros to x64.nsh\n\n\\b Added experimental WinVer \"Windows as a Service\" detection macros\n\n\\b Added MakeNSISW window info \"spy\" tool\n\n\\S2{} Minor Changes\n\n\\b Added MUI_TEXTCOLOR setting\n\n\\b nsDialogs::OnNotify can now return values back to Windows\n\n\\b Added LIBRARY_INSTALL_EQUAL_VERSION \\R{library_install}{InstallLib} option\n\n\\b Added NTMARTA to preload list to fix rare Windows 7 security issue (\\W{http://sf.net/p/nsis/bugs/1204}{bug #1204})\n\n\\b AddBrandingImage now supports dialog units\n\n\\# Undocumented: \\b Added ManifestDisableWindowFiltering and ManifestGdiScaling\n\n\\b Fixed !macroundef of last defined macro bug\n\n\\b Fixed \\L{../Docs/MultiUser/Readme.html}{MultiUser} caption string bug (\\W{http://sf.net/p/nsis/bugs/1012}{bug #1012})\n\n\\b !undef issues warnings instead of errors\n\n\\b MakeNSIS prints -CMDHELP to stdout (\\W{http://sf.net/p/nsis/bugs/1203}{bug #1203})\n\n\\b Removed LibraryLocal utility\n\n\\S2{} Translations\n\n\\b Added Hind\\u012b{i} (\\W{http://sf.net/p/nsis/patches/289}{patch #289})\n\n\\b Updated Belarusian, German (\\W{http://sf.net/p/nsis/bugs/1023}{bug #1023}), Mongolian and Spanish (\\W{http://sf.net/p/nsis/bugs/1205}{bug #1205})\n\n\\H{v3.03} 3.03\n\nReleased on January 29th, 2018\n\n\\S1{v3.03-rn} Release Notes\n\n\\b Building NSIS with Python 2.6 or older is no longer supported\n\n\\S1{v3.03-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added more NSD controls and macros (\\W{http://sf.net/p/nsis/feature-requests/543}{RFE #543})\n\n\\b Added \\R{ppgettlbversion}{!gettlbversion}\n\n\\b \\R{library}{Library} TLB and VxD version support on POSIX (\\W{http://sf.net/p/nsis/patches/284}{patch #284})\n\n\\S2{} Minor Changes\n\n\\b Added System plug-in v2 syntax option\n\n\\b Added System plug-in B and H types\n\n\\b Added \\R{intptrcmp}{IntPtrCmp}, IntPtrCmpU, and \\R{intptrop}{IntPtrOp}\n\n\\b Added Int64Cmp, Int64CmpU and Int64Fmt (64-bit only)\n\n\\b Added IntOp and System::Int64Op >>> operator\n\n\\b Added more !define /math operators\n\n\\# Undocumented: \\b Added ManifestDPIAwareness\n\n\\b Added WinVer.nsh IsDomainController (\\W{http://sf.net/p/nsis/patches/286}{patch #286})\n\n\\b Plug-ins now set the ASLR, DEP, LAA, NOSEH and TS PE flags (\\W{http://sf.net/p/nsis/bugs/1188}{bug #1188})\n\n\\b MakeNSIS exits with code 0 for various information commands (\\W{http://sf.net/p/nsis/bugs/1193}{bug #1193})\n\n\\b Added error and warning states to !pragma warning\n\n\\b Removed unused NSD_LB_Clear macro parameter\n\n\\S2{} Translations\n\n\\b Added Tatar (\\W{http://sf.net/p/nsis/patches/281}{patch #281})\n\n\\b Fixed and updated Scottish Gaelic (\\W{http://sf.net/p/nsis/patches/285}{patch #285}, \\W{http://sf.net/p/nsis/bugs/1197}{bug #1197})\n\n\\b Updated Italian (\\W{http://sf.net/p/nsis/bugs/1194}{bug #1194})\n\n\\S2{} Build System\n\n\\b Added support for Python 3\n\n\\b Dropped support for Python 2.6 and older\n\n\\H{v3.02.1} 3.02.1\n\nReleased on July 31st, 2017\n\n\\S1{v3.02.1-cl} Changelog\n\n\\S2{} Translations\n\n\\b Fixed Chinese (Traditional) and Romanian translation bugs (\\W{http://sf.net/p/nsis/bugs/1189}{bug #1189} and \\W{http://sf.net/p/nsis/bugs/1191}{bug #1191})\n\n\\b Fixed Scots Gaelic MUI finish page translation\n\n\\H{v3.02} 3.02\n\nReleased on July 23rd, 2017\n\n\\S1{v3.02-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed NSIS3 RegTool Win9x bug\n\n\\b Added the HKCR32, HKCR64, HKCU32, HKCU64, HKLM32 and HKLM64 root keys\n\n\\b Unsupported \\R{setregview}{SetRegView} mode now fails all registry operations\n\n\\b Added \\R{execshellwait}{ExecShellWait}\n\n\\b Added \\R{writeregmultistr}{WriteRegMultiStr} (\\W{http://sf.net/p/nsis/feature-requests/382}{RFE #382}, \\W{http://sf.net/p/nsis/patches/219}{patch #219}) and WriteRegNone\n\n\\b Added \\R{pragma}{!pragma warning} (\\W{http://sf.net/p/nsis/patches/267}{patch #267})\n\n\\b \\R{varconstant}{$LocalAppData} now resolves to the ProgramData folder in the \\R{setshellvarcontext}{SetShellVarContext all} context\n\n\\S2{} Minor Changes\n\n\\b Variables used in \\R{acaption}{Caption} can now be set in \\R{onguiinit}{.onGUIInit} (\\W{http://sf.net/p/nsis/feature-requests/539}{RFE #539})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser} now supports \\R{varconstant}{$ProgramFiles64} (\\W{http://sf.net/p/nsis/bugs/843}{bug #843})\n\n\\b Added support for MUI_UNCONFIRMPAGE_VARIABLE (\\W{http://sf.net/p/nsis/feature-requests/511}{RFE #511}) and MUI_PAGE_CUSTOMFUNCTION_DESTROYED\n\n\\b Unicode \\L{../Docs/nsExec/nsExec.txt}{nsExec} now supports the /OEM switch (\\W{http://sf.net/p/nsis/bugs/1171}{bug #1171})\n\n\\S2{} Translations\n\n\\b Chinese (Traditional) updates by Walter Cheuk\n\n\\b Minor French improvements (\\W{http://sf.net/p/nsis/patches/221}{patch #221})\n\n\\H{v3.01} 3.01\n\nReleased on December 11th, 2016\n\n\\S1{v3.01-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Error messages are now written to stderr by default\n\n\\b New icons by Jan T. Sott\n\n\\S2{} Minor Changes\n\n\\b \\R{setctlcolors}{SetCtlColors} now supports Windows color constant values\n\n\\b StrCpy \"\" maxlen handling (\\W{http://sf.net/p/nsis/bugs/1122}{bug #1122})\n\n\\b Fixed buffer size bug in winchar.cpp (\\W{http://sf.net/p/nsis/patches/271}{patch #271})\n\n\\S2{} Translations\n\n\\b Added Corsican (\\W{http://sf.net/p/nsis/patches/268}{patch #268})\n\n\\b PortugueseBR fixes (\\W{http://sf.net/p/nsis/patches/276}{patch #276})\n\n\\b Updated Danish translation (\\W{http://sf.net/p/nsis/bugs/1164}{bug #1164})\n\n\\b Arabic, Norwegian, Portuguese, Ukrainian and Swedish \\L{../Docs/MultiUser/Readme.html}{MultiUser} fixes (\\W{http://sf.net/p/nsis/patches/278}{patch #278}, \\W{http://sf.net/p/nsis/patches/279}{patch #279}, \\W{http://sf.net/p/nsis/patches/274}{patch #274}, \\W{http://sf.net/p/nsis/patches/275}{patch #275} & \\W{http://sf.net/p/nsis/patches/277}{patch #277})\n\n\\H{v3.0} 3.0\n\nReleased on July 24th, 2016\n\n\\S1{v3.0-rl} Release Notes\n\nLong-awaited version 3 of NSIS is finally ready. It comes with optional \\R{aunicodetarget}{Unicode} support, still works on all the same versions of Windows, supports Windows 10, and adds a lot of other small features and fixes. Huge thanks goes out to Anders and Wizou for making this happen and Jim Park for the original patch.\n\n\\S1{v3.0-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b \\R{finalize}{!finalize} command now supports the same compare operators as !system (\\W{http://sf.net/p/nsis/bugs/1148}{bug #1148})\n\n\\S2{} Translations\n\n\\b PortugueseBR fixes (\\W{http://sf.net/p/nsis/bugs/1149}{bug #1149})\n\n\\H{v3.0rc2} 3.0 Release Candidate 2\n\nReleased on July 8th, 2016\n\n\\S1{v3.0rc2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed LogicLib nested $\\{Select\\} bug\n\n\\b \\R{makensis}{!makensis} command must force Unicode output to be UTF-8 (\\W{http://sf.net/p/nsis/bugs/1147}{bug #1147})\n\n\\S2{} Minor Changes\n\n\\b Zip2Exe aborts if the zip file is encrypted (\\W{http://sf.net/p/nsis/bugs/1141}{bug #1141})\n\n\\b Added LogicLib & operator\n\n\\b NSIS Menu POSIX fixes (\\W{http://sf.net/p/nsis/bugs/1144}{bug #1144})\n\n\\S2{} Translations\n\n\\b PortugueseBR fixes (deguix)\n\n\\b Minor tweaks to Danish.nlf (scootergrisen) (\\W{http://sf.net/p/nsis/bugs/1140}{bug #1140})\n\n\\H{v3.0rc1} 3.0 Release Candidate 1\n\nReleased on April 3rd, 2016\n\n\\S1{v3.0rc1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed \\R{appendfile}{!appendfile} on POSIX and LogicLib $\\{Switch\\}\n\n\\b More security hardening to prevent dll hijacking\n\n\\S2{} Minor Changes\n\n\\b Documentation improvements\n\n\\b The name of the uninstaller created in %TEMP%\\\\~nsu.tmp has changed from %UNIQUE%u_.exe to Un_%UNIQUE%.exe\n\n\\b Various warning and error improvements\n\n\\S2{} Translations\n\n\\b Added missing MULTIUSER_* entries to Japanese.nsh (\\W{http://sf.net/p/nsis/patches/266}{patch #266})\n\n\\H{v3.0b3} 3.0 Beta 3\n\nReleased on December 26th, 2015\n\n\\S1{v3.0b3-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{arequestexecutionlevel}{RequestExecutionLevel} now defaults to \\c{admin}\n\n\\b LoadLibrary security hardening to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\b \\R{FileReadUTF16LE}{FileReadUTF16LE} now skips the optional BOM at the start of a file\n\n\\S2{} Minor Changes\n\n\\b Fixed System plugin GUID type output bug on Win98\n\n\\b \\R{FileWriteUTF16LE}{FileWriteUTF16LE} can add a BOM with the /BOM switch\n\n\\b \\R{createshortcut}{CreateShortcut} icon index can now be larger than 255 (\\W{http://sf.net/p/nsis/bugs/1123/}{bug #1123})\n\n\\b \\R{system}{!system} and \\R{execute}{!execute} now provide an empty StdIn pipe to work around bugs in some Windows utilities\n\n\\b Added support for 0o octal radix prefix on number literals in the preprocessor\n\n\\b The single parameter version of \\R{if}{!if} now also supports floats\n\n\\b Preprocessor now warns when invalid floating point numbers are used in math operations\n\n\\b MakeNSISW now uses WinInet when checking for updates\n\n\\S2{} Translations\n\n\\b Brazilian Portuguese updated (Felipe) (\\W{http://sf.net/p/nsis/patches/263/}{patch #263})\n\n\\b Polish updated (Pawe\\u0142{l} Porwisz)\n\n\\H{v3.0b2} 3.0 Beta 2\n\nReleased on August 4th, 2015\n\n\\S1{v3.0b2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Preliminary Windows 10 support\n\n\\S2{} Minor Changes\n\n\\b Added !appendfile /RawNL switch\n\n\\b Added PESubsysVer attribute\n\n\\b Exec[Wait] sets the CREATE_DEFAULT_ERROR_MODE flag when creating a process\n\n\\b Fixed 4+ TiB freespace calculation bug (\\W{http://sf.net/p/nsis/bugs/1115/}{bug #1115})\n\n\\b Fixed CreateShortcut /NoWorkingDir parsing bug (\\W{http://sf.net/p/nsis/bugs/1110/}{bug #1110})\n\n\\b Fixed minor issues in the Pascal NSIS plug-in SDK and removed the \\cw{extrap} global variable\n\n\\b nsDialogs and InstallOptions now use the system link color\n\n\\S2{} Build System\n\n\\b Linux stdcall warning fix (\\W{http://sf.net/p/nsis/patches/261}{patch #261})\n\n\\b Linux test-scripts fix (\\W{http://sf.net/p/nsis/patches/260}{patch #260})\n\n\\b Win64 fixes (including \\W{http://sf.net/p/nsis/patches/258}{patch #258}, \\W{http://sf.net/p/nsis/bugs/1105/}{bug #1105})\n\n\\b Visual C 2012 fixes\n\n\\H{v3.0b1} 3.0 Beta 1\n\nReleased on October 6th, 2014\n\n\\S1{v3.0b1-rl} Release Notes\n\n\\b This release addresses a lot of build issues, reintroduces the \\W{https://drone.io/github.com/kichik/nsis}{nightly builds} and adds automatic nightly test execution\n\n\\S1{v3.0b1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b !insertmacro allows macro recursion (\\W{http://sf.net/p/nsis/feature-requests/497}{RFE #497})\n\n\\b Added \\R{makensis}{!makensis} command\n\n\\b Added new MUI2 bitmap stretch modes, *_NOSTRETCH is now deprecated (\\W{http://sf.net/p/nsis/feature-requests/521}{RFE #521})\n\n\\b \\c{InitiateShutdown()} is used to reboot the machine if available (\\W{http://sf.net/p/nsis/patches/247}{patch #247})\n\n\\b Added PPO and SafePPO preprocess-only compiler switches\n\n\\b MakeNSIS WM_COPYDATA messages now use the QH_OUTPUTCHARSET encoding with CP_ACP as the default for compatibility with old IDEs.\n\n\\S2{} Minor Changes\n\n\\b Added IsWow64 to x64.nsh\n\n\\b Added PEDllCharacteristics attribute\n\n\\b Added System::Call direct register memory access type. (\\W{http://sf.net/p/nsis/patches/249}{patch #249})\n\n\\b Added WX compiler switch\n\n\\b Allow skipping ExDLL build with SKIPPLUGINS ((\\W{http://sf.net/p/nsis/patches/254}{patch #254}))\n\n\\b Changed default DllCharacteristics to TS_AWARE+NO_SEH+NX_COMPAT+DYNAMIC_BASE\n\n\\b Fixed Mac OS X builds (\\W{http://sf.net/p/nsis/patches/253}{patch #253} and \\W{http://sf.net/p/nsis/bugs/1085}{bug #1085})\n\n\\b Fixed POSIX !searchparse bug (\\W{http://sf.net/p/nsis/patches/251}{patch #251})\n\n\\b Fixed !macroundef\n\n\\b Fixed test-code build target on POSIX and enabled it in nightly builds (\\W{http://sf.net/p/nsis/bugs/1088/}{bug #1098})\n\n\\b Fixed Visual Studio 2012 builds\n\n\\S2{} Translations\n\n\\b Added Armenian (Hrant Ohanyan)\n\n\\H{v3.0b0} 3.0 Beta 0\n\nReleased on May 11th, 2014\n\n\\S1{v3.0b0-rl} Release Notes\n\n\\b POSIX builds work again! Please let us know if your favorite platform is still having build issues. We mainly test on Linux.\n\n\\S1{v3.0b0-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Basic AMD64 System::Call support\n\n\\b Fixed POSIX builds\n\n\\S2{} Minor Changes\n\n\\b Added CreateShortcut /NoWorkingDir parameter\n\n\\b Added Int<32|64|Ptr><Op|Cmp[U]> helper macros to Util.nsh\n\n\\b Added P<, P<=, P=, P<>, P>= and P> LogicLib ptrdiff_t tests\n\n\\b Try harder to find duplicate strings in string block (\\W{http://sf.net/p/nsis/bugs/1088/}{bug #1088})\n\n\\b !system will decode child output as OEMCP if GetConsoleOutputCP() == GetOEMCP()\n\n\\b !system and !execute can store the exit code in a define\n\n\\b !execute supports comparing the exit code with the same syntax as !system\n\n\\b Preprocessor supports \\cw{0n} and \\cw{0b} radix prefix on number literals\n\n\\H{v3.0a2} 3.0 Alpha 2\n\nReleased on December 24th, 2013\n\n\\S1{v3.0a2-rl} Release Notes\n\nIt's the holiday gift you've been waiting for!\n\n\\S2{} Known Issues\n\n\\b The POSIX build is getting much closer, but still currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\S1{v3.0a2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b !include defaults to UTF-8 after \\cw{Unicode True}\n\n\\b Preprocessor does not parse all branches and will not validate code that is never executed (\\W{http://sf.net/p/nsis/bugs/1086/}{bug #1086})\n\n\\S2{} Minor Changes\n\n\\b FileRead in Unicode installers can handle DBCS, conversion output is limited to UCS-2.\n\n\\b FileRead in Unicode installers now uses the Unicode replacement character (U+FFFD) for invalid characters and not '?'.\n\n\\b FileReadByte no longer performs a Unicode conversion on non-ASCII characters\n\n\\b Windows 8.1 & 2012R2 support in WinVer.nsh\n\n\\b Fixed !define Unicode null terminator bug (\\W{http://sf.net/p/nsis/bugs/1079/}{bug #1079})\n\n\\b Unicode stubs create WCHAR richedit controls (\\W{http://sf.net/p/nsis/bugs/1080/}{bug #1080})\n\n\\b Fixed MakeNSISW default pushbutton and tab order\n\n\\b Fixed incorrect page count in compiler statistics\n\n\\H{v3.0a1} 3.0 Alpha 1\n\nReleased on July 14th, 2013\n\n\\S1{v3.0a1-rl} Release Notes\n\n\\S2{} Known Issues\n\n\\b The POSIX build is currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\b \\R{FileRead}{FileRead} may return '?' for MBCS letters with \\R{aunicodetarget}{Unicode} true\n\n\\S1{v3.0a1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Default verbosity is /V3 without logo, MakeNSISW still uses /V4.\n\n\\b \\R{amanifestsupportedos}{ManifestSupportedOS} added support for the Windows 8.1 GUID and it is set by default to avoid GetVersionEx compatibility behavior.\n\n\\S2{} Minor Changes\n\n\\b Fixed !finalize %1\n\n\\b Fixed !searchparse (\\W{https://sourceforge.net/p/nsis/bugs/1073/}{bug #1073})\n\n\\b Made installers always respect /S on command line, even when installer file can't be read (\\W{https://sourceforge.net/p/nsis/bugs/1076/}{bug #1076})\n\n\\b Minor MakeNSISW fixes and tweaks\n\n\\b Added Zip2Exe Unicode checkbox\n\n\\H{v3.0a0} 3.0 Alpha 0\n\nReleased on May 19th, 2013\n\n\\S1{v3.0a0-rl} Release Notes\n\n\\b MakeNSIS can now generate ANSI and \\R{intro-unicode}{Unicode} installers. Source files can be UTF8SIG, UTF16BOM or traditional MBCS text files (which are converted to Unicode with ACP unless you specify a different codepage). The default plugins are now stored in sub-folders based on their CPU target and character set encoding.\n\n\\S2{} Known Issues\n\n\\b The POSIX build is currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\b \\R{FileRead}{FileRead} may return '?' for MBCS letters with \\R{aunicodetarget}{Unicode} true\n\n\\S1{v3.0a0-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added the \\R{aunicodetarget}{Unicode} attribute (\\W{http://sourceforge.net/support/tracker.php?aid=1238132}{RFE #1238132}, \\W{http://sourceforge.net/support/tracker.php?aid=1795257}{patch #1795257})\n\n\\b Added support for Windows 8 and Windows Server 2012\n\n\\b MakeNSIS can read UTF8SIG and UTF16BOM script files (\\W{http://sourceforge.net/support/tracker.php?aid=2026892}{RFE #2026892})\n\n\\b All NLF and NSH language files are stored as UTF-16LE (\\W{http://sourceforge.net/support/tracker.php?aid=1879642}{RFE #1879642})\n\n\\b Scripts can control the SupportedOS list in the application manifest using \\R{amanifestsupportedos}{ManifestSupportedOS} (\\W{http://sourceforge.net/support/tracker.php?aid=2725883}{bug #2725883}, \\W{http://sourceforge.net/support/tracker.php?aid=3020103}{RFE #3020103})\n\n\\b Installers can claim DPI-awareness with \\R{amanifestdpiaware}{ManifestDPIAware} (\\W{http://sourceforge.net/support/tracker.php?aid=2897169}{bug #2897169})\n\n\\b The index of the changed section is stored in $0 during .onSelChange callbacks (\\W{http://sourceforge.net/support/tracker.php?aid=1634936}{RFE #1634936})\n\n\\b $\\{U+1\\}...$\\{U+10FFFF\\} are treated as a Unicode character unless there is already a define with that name (\\W{http://sourceforge.net/support/tracker.php?aid=2084797}{RFE #2084797})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{ppgetdllversion}{!getdllversion} (\\W{http://sourceforge.net/support/tracker.php?aid=2809308}{bug #2809308})\n\n\\b Added !appendfile /CHARSET parameter\n\n\\b Added \\R{if}{!if} support for /fileexists, case sensitive comparisons, hex and float\n\n\\b Added more definitions to WinMessages.nsh\n\n\\b %temp%\\\\Low will be used if the installer cannot write to %temp% nor %windir%\\\\Temp (\\W{http://sourceforge.net/support/tracker.php?aid=2909242}{bug #2909242}, \\W{http://sourceforge.net/support/tracker.php?aid=2912824}{patch #2912824})\n\n\\b Added $\\{NSIS_PACKEDVERSION\\}, the NSIS version packed as a hex number (\\W{http://sourceforge.net/support/tracker.php?aid=2680832}{patch #2680832})\n\n\\b Added \\R{prescopemacro}{$\\{__MACRO__\\}} and \\R{precounter}{$\\{__COUNTER__\\}} predefines\n\n\\b Added UnsafeStrCpy instruction, it can write to special variables like $PLUGINSDIR\n\n\\b Added \\R{vifileversion}{VIFileVersion}\n\n\\b Added \\R{finalize}{!finalize} for post-build commands (like signing the installer)\n\n\\b Plugins in $\\{NSISDIR\\}\\\\Plugins have to be reserved with \\c{ReserveFile /plugin}\n\n\\b MakeNSIS /NOTIFYHWND uses a (optional) new event name to abort compilation, see build.cpp/h for details.\n\n\\b Reduced !include/!insertmacro recursion stack usage (\\W{http://sourceforge.net/support/tracker.php?aid=3067954}{bug #3067954})\n\n\\b Fixed minor MakeNSIS leaks (\\W{http://sourceforge.net/support/tracker.php?aid=3474662}{bug #3474662})\n\n\\b Fixed MUI_FINISHPAGE_TITLE_3LINES padding when reboot is required (\\W{http://sourceforge.net/support/tracker.php?aid=3400067}{bug #3400067}, \\W{http://sourceforge.net/support/tracker.php?aid=3408407}{bug #3408407})\n\n\\b Fixed removal of read only attribute even if Delete or RMDir fails (\\W{http://sourceforge.net/support/tracker.php?aid=3072159}{bug #3072159})\n\n\\b Fixed $\\{__SECTION__\\} in hidden sections (\\W{http://sourceforge.net/support/tracker.php?aid=1787648}{RFE #1787648})\n\n\\b Various documentation fixes (\\W{http://sourceforge.net/support/tracker.php?aid=3063566}{bug #3063566}, \\W{http://sourceforge.net/support/tracker.php?aid=3567313}{bug #3567313}, \\W{http://sourceforge.net/support/tracker.php?aid=3307144}{patch #3307144})\n\n\\b Lots of other small fixes...\n\n\\S2{} Translations\n\n\\b Changed LANGFILE macro in LangFile.nsh\n\n\\b Warnings are now displayed for missing strings (LANGFILE_INCLUDE_WITHDEFAULT)\n\n\\b Added Georgian (David Huriev)\n\n\\b Added Pashto (Pakhtosoft)\n\n\\b Added Scottish Gaelic (GunChleoc)\n\n\\b Fixed Korean MUI_[UN]TEXT_FINISH_INFO_* (\\W{http://sourceforge.net/support/tracker.php?aid=3541515}{bug #3541515})\n\n\\H{v2.51} 2.51\n\nReleased on April 1st, 2016\n\n\\S1{v2.51-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b More security hardening to prevent dll hijacking\n\n\\b Backported support for system 'p' type and logiclib P and Z tests\n\n\\S2{} Translations\n\n\\b Added missing MULTIUSER_* entries to Japanese.nsh (\\W{http://sf.net/p/nsis/patches/266}{patch #266})\n\n\\H{v2.50} 2.50\n\nReleased on December 26th, 2015\n\n\\S1{v2.50-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{arequestexecutionlevel}{RequestExecutionLevel} now defaults to \\c{admin}\n\n\\S2{} Minor Changes\n\n\\b Preload certain system libraries to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\H{v2.49} 2.49\n\nReleased on December 16th, 2015\n\n\\S1{v2.49-cl} Changelog\n\n\\b Fixed CreateShortcut failure on Vista caused by security changes in 2.47\n\n\\H{v2.48} 2.48\n\nReleased on December 10th, 2015\n\n\\S1{v2.48-cl} Changelog\n\n\\b Fixed CHM (\\W{http://sf.net/p/nsis/bugs/1129/}{bug #1129})\n\n\\H{v2.47} 2.47\n\nReleased on December 8th, 2015\n\n\\S1{v2.47-rl} Release Notes\n\n\\b This is a maintenance and security release\n\n\\S1{v2.47-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b LoadLibrary security hardening to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\b \\c{InitiateShutdown()} is used to reboot the machine if available (\\W{http://sf.net/p/nsis/patches/247}{patch #247})\n\n\\S2{} Minor Changes\n\n\\b Fixed 4+ TiB freespace calculation bug (\\W{http://sf.net/p/nsis/bugs/1115/}{bug #1115})\n\n\\b Windows 8 & 2012 support in WinVer.nsh\n\n\\H{v2.46} 2.46\n\nReleased on December 6th, 2009\n\n\\S1{v2.46-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2803622}{bug #2803622})\n\n\\b Fixed Vista error message when canceling uninstaller (\\W{http://sourceforge.net/support/tracker.php?aid=2803097}{bug #2803097})\n\n\\b Resolve warning for LogicLib's endless Do..Loop (\\W{http://sourceforge.net/support/tracker.php?aid=2849872}{bug #2849872})\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: fixed random number prefixes when clicking on an empty spot (\\W{http://sourceforge.net/support/tracker.php?aid=2810188}{bug #2810188})\n\n\\b Updates to NSIS.pas for plug-in development (\\W{http://sourceforge.net/support/tracker.php?aid=2802794}{patch #2802794})\n\n\\S2{} Translations\n\n\\b PortugueseBR typo (\\W{http://sourceforge.net/support/tracker.php?aid=2826598}{patch #2826598})\n\n\\b Removed double spaces in Italian (\\W{http://sourceforge.net/support/tracker.php?aid=2873598}{bug #2873598})\n\n\\S2{} Build System\n\n\\b Fixed mingw builds of \\L{../Docs/Math/Math.txt}{Math} plug-in (\\W{http://sourceforge.net/support/tracker.php?aid=2835731}{patch #2835731})\n\n\\H{v2.45} 2.45\n\nReleased on June 6th, 2009\n\n\\S1{v2.45-rl} Release Notes\n\n\\b Support for Microsoft's upcoming release of Windows 7 has been added based on RC1 testing and documentation. Please report any related issues and don't forget to use \\R{arequestexecutionlevel}{RequestExecutionLevel}.\n\n\\S1{v2.45-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added support for Windows 7 installers - use \\R{arequestexecutionlevel}{RequestExecutionLevel}, just like with Vista (\\W{http://sourceforge.net/support/tracker.php?aid=2725883}{bug #2725883})\n\n\\b Added WinVer.nsh Windows 7 and Windows 2008 R2 support\n\n\\b Installers now identify as Terminal Services aware (IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE) so $WINDIR will no longer be under the user's profile when installing on Terminal Services\n\n\\b Less UAC annoyance in Add/Remove control panel (\\W{http://sourceforge.net/support/tracker.php?aid=2697027}{bug #2697027})\n\n\\S2{} Minor Changes\n\n\\b Added wildcard and /nonfatal support for \\R{delfile}{!delfile} (\\W{http://sourceforge.net/support/tracker.php?aid=1505425}{RFE #1505425})\n\n\\b Fixed \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2680110}{bug #2680110})\n\n\\b Fixed input validation for \\R{createfont}{CreateFont} (\\W{http://sourceforge.net/support/tracker.php?aid=2801024}{bug #2801024})\n\n\\b Fixed NSIS Menu handling of working directory (\\W{http://sourceforge.net/support/tracker.php?aid=2781948}{bug #2781948})\n\n\\b Fixed Vista issues with shell folders ($DOCUMENTS, $PROFILE, etc.) on root directories (\\W{http://sourceforge.net/support/tracker.php?aid=2138075}{bug #2138075})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2705878}{bug #2705878}, \\W{http://sourceforge.net/support/tracker.php?aid=2606525}{bug #2606525})\n\n\\b Use SW_SHOWDEFAULT for \\R{execshell}{ExecShell} by default (\\W{http://sourceforge.net/support/tracker.php?aid=2796189}{bug #2796189})\n\n\\S2{} Modern UI\n\n\\b Call finish page show function only after the page is fully initialized (\\W{http://sourceforge.net/support/tracker.php?aid=2720968}{bug #2720968})\n\n\\b Fixed translation of uninstaller directory page (\\W{http://sourceforge.net/support/tracker.php?aid=2690112}{bug #2690112})\n\n\\b Fixed installation type text position in components page (\\W{http://sourceforge.net/support/tracker.php?aid=2801317}{patch #2801317})\n\n\\b Fixed missing MUI_INNERTEXT_COMPONENTS_DESCRIPTION_TITLE  (\\W{http://sourceforge.net/support/tracker.php?aid=2788620}{bug #2788620})\n\n\\S2{} Translations\n\n\\b Updated Indonesian (\\W{http://sourceforge.net/support/tracker.php?aid=2790571}{patch #2790571})\n\n\\b Updated Portuguese BR (\\W{http://sourceforge.net/support/tracker.php?aid=2642542}{patch #2642542})\n\n\\S2{} Build System\n\n\\b Fixed some GCC warnings\n\n\\H{v2.44} 2.44\n\nReleased on February 21st, 2009\n\n\\S1{v2.44-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.43 causing script build issues with some icons (\\W{http://sourceforge.net/support/tracker.php?aid=2572035}{bug #2572035})\n\n\\S2{} Minor Changes\n\n\\b Fixed nsDialogs CreateTimer documentation (\\W{http://sourceforge.net/support/tracker.php?aid=2595565}{bug #2595565})\n\n\\b Global labels didn't work when declared in unused functions (\\W{http://sourceforge.net/support/tracker.php?aid=2593369}{bug #2593369})\n\n\\H{v2.43} 2.43\n\nReleased on February 5th, 2009\n\n\\S1{v2.43-rl} Release Notes\n\n\\b A few minor changes were made to the new plug-in API that break backward compatibility. Header and library paths were changed and RegisterPluginCallback has changed its return value.\n\n\\S1{v2.43-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Added WinCore.nsh, WinDef.nsh, WinError.nsh, WinNT.nsh and WinUser.nsh for more useful Windows definitions\n\n\\b Fixed a crash caused by \\R{packhdr}{!packhdr} compressing resources (\\W{http://sourceforge.net/support/tracker.php?aid=2533431}{bug #2533431})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2564005}{bug #2564005})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed MUI_DIRECTORYPAGE_BGCOLOR (\\W{http://sourceforge.net/support/tracker.php?aid=2494528}{bug #2494528})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Fixed installer showing on the background when Banner was used in .onInit\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Added Ctrl+K hotkey for build cancellation (\\W{http://sourceforge.net/support/tracker.php?aid=2557392}{RFE #2557392})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added NSD_SetIcon (\\W{http://sourceforge.net/support/tracker.php?aid=2500960}{patch #2500960})\n\n\\S2{} Translations\n\n\\b Added Esperanto\n\n\\b Bulgarian fixes\n\n\\S2{} Plug-in API\n\n\\b Added VS2008 project files\n\n\\b Better installation of header and library files under POSIX - see INSTALL file for more information\n\n\\b Header and library files were moved to a subdirectory named \\e{nsis} to prevent collisions\n\n\\b \\e{RegisterPluginCallback} now returns \\e{int} instead of \\e{BOOL} for a wider range of error reporting\n\n\\S2{} Build System\n\n\\b Added fink's mingw prefixes (\\W{http://sourceforge.net/support/tracker.php?aid=2495138}{bug #2495138})\n\n\\b Fixed BOOL build issue on OS X (\\W{http://sourceforge.net/support/tracker.php?aid=2497290}{bug #2497290})\n\n\\b Fixed iconv dependency detection on OS X (\\W{http://sourceforge.net/support/tracker.php?aid=2494539}{bug #2494539})\n\n\\b Fixed Solaris builds (\\W{http://sourceforge.net/support/tracker.php?aid=2497172}{patch #2497172})\n\n\\H{v2.42} 2.42\n\nReleased on December 20th, 2008\n\n\\S1{v2.42-rl} Release Notes\n\n\\b Merry Christmas and a happy Hanukkah!\n\n\\b Plug-in developers should check out the new plug-in API in Examples\\\\Plugin and convert their plug-ins, especially in case they require staying loaded.\n\n\\S1{v2.42-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Deprecated /NOUNLOAD and SetPluginsUnload to make scripts simpler and safer (\\W{http://sourceforge.net/support/tracker.php?aid=1912699}{patch #1912699})\n\n\\b \\R{headers}{Useful header functions} no longer require usage declaration and different syntax for uninstaller functions\n\n\\b Revamped plug-in API now comes in the form of pluginapi.lib, API version information and more common functions (\\W{http://sourceforge.net/support/tracker.php?aid=2359978}{patch #2359978})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{searchreplace}{!searchreplace} preprocessor command for compile time text search/replaces\n\n\\b Added support for \\R{library}{registration} of EXE COM servers (\\W{http://sourceforge.net/support/tracker.php?aid=2315740}{RFE #2315740})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2386821}{bug #2386821})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added timer support (\\W{http://sourceforge.net/support/tracker.php?aid=2135855}{patch #2135855})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added progress bar support\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Added IsServer, IsWin2003R2, IsStarterEdition, OSHasMediaCenter and OSHasTabletSupport\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Fixed 95/NT4 ambiguity (\\W{http://sourceforge.net/support/tracker.php?aid=2053642}{bug #2053642})\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Proper Windows XP x64 detection (\\W{http://sourceforge.net/support/tracker.php?aid=2053700}{bug #2053700})\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Windows 2008 detection support (\\W{http://sourceforge.net/support/tracker.php?aid=1949260}{RFE #1949260})\n\n\\S2{} Translations\n\n\\b Minor English grammar improvements (\\W{http://sourceforge.net/support/tracker.php?aid=2323452}{bug #2323452})\n\n\\S2{} Build System\n\n\\b Full \\L{../Docs/System/System.html}{System} compatibility with GCC (\\W{http://sourceforge.net/support/tracker.php?aid=2193442}{patch #2193442})\n\n\\H{v2.41} 2.41\n\nReleased on November 20th, 2008\n\n\\S1{v2.41-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed LangDLL memory leaks for invalid input (\\W{http://sourceforge.net/support/tracker.php?aid=1939573}{bug #1939573})\n\n\\b Fixed uninstaller generation on big-endian systems (\\W{http://sourceforge.net/support/tracker.php?aid=2166401}{bug #2166401}, \\W{http://sourceforge.net/support/tracker.php?aid=2167958}{bug #2167958})\n\n\\S2{} Translations\n\n\\b Brazilian Portuguese corrections\n\n\\b Consistency fixes for Simplified Chinese (\\W{http://sourceforge.net/support/tracker.php?aid=2189117}{patch #2189117})\n\n\\S2{} Build System\n\n\\b Added support for SCons 1.1.0\n\n\\b Fixed directory and components page text issues on VC8 builds (\\W{http://sourceforge.net/support/tracker.php?aid=1982084}{patch #1982084})\n\n\\b System's Resource.dll now built from source\n\n\\H{v2.40} 2.40\n\nReleased on October 10th, 2008\n\n\\S1{v2.40-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Service pack macros added to WinVer in version 2.39 now work (\\W{http://sourceforge.net/support/tracker.php?aid=2070708}{bug #2070708}, \\W{http://sourceforge.net/support/tracker.php?aid=2095363}{patch #2095363})\n\n\\S2{} Minor Changes\n\n\\b Added initial folder selection option for \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFileDialog (\\W{http://sourceforge.net/support/tracker.php?aid=2016003}{patch #2016003})\n\n\\b Fixed \\R{getparameters}{GetParameters} handling of MBCS characters (\\W{http://sourceforge.net/support/tracker.php?aid=2067946}{bug #2067946})\n\n\\b Fixed incorrect $\\{NSD_OnBack\\} documentation (\\W{http://sourceforge.net/support/tracker.php?aid=2059651}{bug #2059651})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Set focus to checkboxes on the finish page (\\W{http://sourceforge.net/support/tracker.php?aid=2110357}{bug #2110357})\n\n\\S2{} Translations\n\n\\b Portuguese corrections (\\W{http://sourceforge.net/support/tracker.php?aid=2086988}{bug #2086988})\n\n\\b Simplified Chinese corrections (\\W{http://sourceforge.net/support/tracker.php?aid=2056906}{patch #2056906})\n\n\\H{v2.39} 2.39\n\nReleased on August 16th, 2008\n\n\\S1{v2.39-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{define}{!define} \\e{/file} and \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2016254}{patch #2016254})\n\n\\b Added service pack macros (AtLeastServicePack, IsServicePack, AtMostServicePack) to WinVer.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=2036802}{patch #2036802})\n\n\\S2{} Minor Changes\n\n\\b Added more \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} list box handling macros (\\W{http://sourceforge.net/support/tracker.php?aid=2041919}{patch #2041919})\n\n\\b Added Unicode version compatible \\L{../Docs/System/System.html}{System} string type (\\W{http://sourceforge.net/support/tracker.php?aid=2025721}{patch #2025721}, \\W{http://sourceforge.net/support/tracker.php?aid=1961307}{RFE #1961307})\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} atom leak (\\W{http://sourceforge.net/support/tracker.php?aid=2053522}{bug #2053522})\n\n\\b Minor documentation improvements\n\n\\b Show hand cursor for \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} links (\\W{http://sourceforge.net/support/tracker.php?aid=2004129}{patch #2004129})\n\n\\H{v2.38} 2.38\n\nReleased on July 12th, 2008\n\n\\S1{v2.38-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug in nsDialogs that caused it to pollute the stack if callbacks are not set for each control (\\W{http://sourceforge.net/support/tracker.php?aid=2013317}{bug #2013317})\n\n\\S2{} Minor Changes\n\n\\b Added IfNotThen support for LogicLib (\\W{http://sourceforge.net/support/tracker.php?aid=1990761}{patch #1990761})\n\n\\b Added support for NTFS mounts points on the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1946112}{bug #1946112})\n\n\\b Fixed branding image control detection on Debian, due to improper identification of static controls (\\W{http://sourceforge.net/support/tracker.php?aid=1951417}{bug #1951417})\n\n\\b Log actual creation of directories and not just failures and final directory (\\W{http://sourceforge.net/support/tracker.php?aid=1992325}{patch #1992325})\n\n\\b Made log close when \\e{LogSet off} is used (\\W{http://sourceforge.net/support/tracker.php?aid=1986692}{patch #1986692})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1990955}{bug #1990955})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed MULTIUSER_INSTALLMODE_INSTDIR handling for the uninstaller\n\n\\S2{} Modern UI\n\n\\b Document page leave callback function (\\W{http://sourceforge.net/support/tracker.php?aid=1964719}{bug #1964719})\n\n\\b Fixed MUI_FINISHPAGE_CANCEL_ENABLED\n\n\\b Fixed wasted variable warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1995024}{bug #1995024})\n\n\\S2{} Translations\n\n\\b Fixed French translation of MUI_UNTEXT_FINISH_INFO_REBOOT (\\W{http://sourceforge.net/support/tracker.php?aid=1967032}{patch #1967032})\n\n\\b Removed non-ANSI characters from French display name (\\W{http://sourceforge.net/support/tracker.php?aid=1979491}{bug #1979491})\n\n\\b Updated Slovenian (\\W{http://sourceforge.net/support/tracker.php?aid=2014106}{patch #2014106})\n\n\\H{v2.37} 2.37\n\nReleased on May 3rd, 2008\n\n\\S1{v2.37-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.32 that caused blurry icons on Windows versions prior to XP (\\W{http://sourceforge.net/support/tracker.php?aid=1956350}{bug #1956350})\n\n\\b Use $PROGRAMFILES as a default for $PROGRAMFILES64 instead of \"C:\\\\Program Files\" (\\W{http://sourceforge.net/support/tracker.php?aid=1947702}{bug #1947702})\n\n\\S2{} Minor Changes\n\n\\b Automatically select language in case there is only one available choice (\\W{http://sourceforge.net/support/tracker.php?aid=1939571}{bug #1939571})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed build errors with manual inclusion of StrFunc.nsh\n\n\\b Support for compression of files up to 2GB (\\W{http://sourceforge.net/support/tracker.php?aid=1948700}{patch #1948700})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed $\\{NSD_OnBack\\} (\\W{http://sourceforge.net/support/tracker.php?aid=1947388}{bug #1947388})\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFileDialog return value for user cancellation (\\W{http://sourceforge.net/support/tracker.php?aid=1955803}{bug #1955803})\n\n\\b Fixed possible \\L{../Docs/BgImage/BgImage.txt}{BgImage} crash when calling BgImage::Destroy more than once (\\W{http://sourceforge.net/support/tracker.php?aid=1951248}{patch #1951248})\n\n\\b Minor documentation improvements\n\n\\S2{} Translation\n\n\\b Brazilian Portuguese updates\n\n\\b Polish updates (\\W{http://sourceforge.net/support/tracker.php?aid=1927421}{patch #1927421})\n\n\\b Slovak updates (\\W{http://sourceforge.net/support/tracker.php?aid=1939669}{patch #1939669})\n\n\\b Spanish updates\n\n\\S2{} Build System\n\n\\b SCons requirement upgraded to 0.98\n\n\\H{v2.36} 2.36\n\nReleased on March 29th, 2008\n\n\\S1{v2.36-rl} Release Notes\n\n\\b nsDialogs is picking up its pace and offers lots of new macros in this release. Keep the patches and requests coming!\n\n\\S1{v2.36-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Support for x64 disabled redirection (\\W{http://sourceforge.net/support/tracker.php?aid=1778973}{RFE #1778973}, \\W{http://sourceforge.net/support/tracker.php?aid=1889317}{bug #1889317})\n\n\\S2{} Modern UI\n\n\\b Added missing MUI_UNFUNCTION_DESCRIPTION_BEGIN and MUI_UNFUNCTION_DESCRIPTION_END\n\n\\b Fixed start menu page setting the error flag (\\W{http://sourceforge.net/support/tracker.php?aid=1891106}{bug #1891106})\n\n\\S2{} nsDialogs\n\n\\b NSD_AddStyle and NSD_AddExStyle for easy customization (\\W{http://sourceforge.net/support/tracker.php?aid=1900588}{patch #1900588})\n\n\\b NSD_CB_AddString, NSD_CB_SelectString, NSD_LB_AddString and NSD_LB_SelectString for easier handling of combo and list boxes\n\n\\b NSD_CreateNumber and NSD_SetTextLimit for limited input fields\n\n\\b NSD_SetImage, NSD_SetStretchedImage, NSD_ClearImage and NSD_FreeImage for image handling\n\n\\b NSD_SetState, NSD_GetState, NSD_Check and NSD_Uncheck for handling of check boxes and radio buttons (\\W{http://sourceforge.net/support/tracker.php?aid=1900588}{patch #1900588})\n\n\\b NSD_SetText for easily setting control's text\n\n\\b OnClick support for labels (\\W{http://sourceforge.net/support/tracker.php?aid=1908732}{bug #1908732})\n\n\\b Support for edit box change notification in combo box\n\n\\S2{} Minor Changes\n\n\\b Fixed exception handling of UPX compressed icons (\\W{http://sourceforge.net/support/tracker.php?aid=1896500}{bug #1896500})\n\n\\b Fixed InstallDirRegKey example in bigtest.nsi\n\n\\b Fixed Memento's documentation to include $\\{MementoSectionDone\\}\n\n\\b Fixed rare decompression error with 0x4001 bytes of compressed data (\\W{http://sourceforge.net/support/tracker.php?aid=1874297}{bug #1874297})\n\n\\b LangFile.nsh: Added LANGFILE_INCLUDE_WITHDEFAULT to load language file with defaults being obtained from a default file. This replaces the LANGFILE_DEFAULT setting and makes it easier to use LangFile.nsh for multiple sets of languages file without having to care about the different LANGFILE_DEFAULT settings.\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1891266}{bug #1891266}, \\W{http://sourceforge.net/support/tracker.php?aid=1894033}{bug #1894033}, \\W{http://sourceforge.net/support/tracker.php?aid=1896803}{bug #1896803})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed error when a custom installation mode initialization function is used only for the installer\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed default installation mode based on registry key (\\W{http://sourceforge.net/support/tracker.php?aid=1913029}{bug #1913029})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed no uninstaller handling (MULTIUSER_NOUNINSTALL)\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Avoid opening executables with identical folder names when opening script's folder (\\W{http://sourceforge.net/support/tracker.php?aid=1891066}{bug #1891066})\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Fixed return code handling so 259 won't cause an infinite loop (\\W{http://sourceforge.net/support/tracker.php?aid=1909458}{bug #1909458})\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Added MD5 functions (\\W{http://sourceforge.net/support/tracker.php?aid=1900226}{RFE #1900226})\n\n\\S2{} Translation\n\n\\b Albanian updates (\\W{http://sourceforge.net/support/tracker.php?aid=1919360}{patch #1919360})\n\n\\b French fixes (\\W{http://sourceforge.net/support/tracker.php?aid=1916564}{patch #1916564})\n\n\\b Polish updates (\\W{http://sourceforge.net/support/tracker.php?aid=1894983}{patch #1894983})\n\n\\S2{} Build System\n\n\\b Fixed build of NSIS Menu with wxGTK (\\W{http://sourceforge.net/support/tracker.php?aid=1900233}{bug #1900233})\n\n\\b Use CRLF for DSW and DSP files to avoid corruption messages\n\n\\b Various build fixes for GCC 4.3, amd64 and Linux in general\n\n\\H{v2.35} 2.35\n\nReleased on February 8th, 2008\n\n\\S1{v2.35-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Docs/MultiUser/Readme.html}{MultiUser} - installer configuration for multi-user Windows environments\n\n\\b More user friendly corrupted installer message (\\W{http://sourceforge.net/support/tracker.php?aid=1795426}{RFE #1795426})\n\n\\b Switched all examples to Modern UI 2\n\n\\S2{} Minor Changes\n\n\\b Fixed uninitialized memory leaking into resources (\\W{http://sourceforge.net/support/tracker.php?aid=1874297}{bug #1874297})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1861941}{bug #1861941}, \\W{http://sourceforge.net/support/tracker.php?aid=1883917}{bug #1883917})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fit images in welcome/finish page by default and fix support for MUI_(UN)WELCOMEFINISHPAGE_BITMAP_NOSTRETCH (\\W{http://sourceforge.net/support/tracker.php?aid=1875945}{bug #1875945})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed default finish page reboot selection (\\W{http://sourceforge.net/support/tracker.php?aid=1864690}{bug #1864690})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed MUI_STARTMENU_GETFOLDER (\\W{http://sourceforge.net/support/tracker.php?aid=1864507}{bug #1864507})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed unreferenced mui.StartMenuPage.Create warning (\\W{http://sourceforge.net/support/tracker.php?aid=1861944}{bug #1861944})\n\n\\b New simplified code for \\R{library_vb6}{installation of VisualBasic 6 runtime}\n\n\\b Simplified NSIS Menu providing easier access to all documentation\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added keyboard cues support for LINK controls in \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} (\\W{http://sourceforge.net/support/tracker.php?aid=1871856}{patch #1871856})\n\n\\b Fixed a rare nsDialogs crash on Windows 98 with non-standard builds of nsDialogs (\\W{http://sourceforge.net/support/tracker.php?aid=1889720}{bug #1889720})\n\n\\H{v2.34} 2.34\n\nReleased on December 24th, 2007\n\n\\S1{v2.34-rl} Release Notes\n\n\\b Thanks to user input on \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}, it is now ready for mass consumption at no better time than the holiday season. The installer for NSIS itself now exploits the wonders of MUI2 and \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} and so should you.\n\n\\S1{v2.34-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Simpler code, easier to extend and makes use of the faster \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}\n\n\\S2{} Minor Changes\n\n\\b Added IfNot support for LogicLib (\\W{http://sourceforge.net/support/tracker.php?aid=1846785}{patch #1846785})\n\n\\b Added some deprecation messages in MUI2 (\\W{http://sourceforge.net/support/tracker.php?aid=1784470}{bug #1784470})\n\n\\b Allow overwrite of LANGFILE_*_NAME defines in new LangFile.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1848952}{bug #1848952})\n\n\\b Better RTL support in instfiles and components page (\\W{http://sourceforge.net/support/tracker.php?aid=1841573}{bug #1841573})\n\n\\b Don't warn of comments containing line-continuation character when it has no effect (\\W{http://sourceforge.net/support/tracker.php?aid=1701051}{bug #1701051}, \\W{http://sourceforge.net/support/tracker.php?aid=1686589}{RFE #1686589})\n\n\\b Fixed deletion of files with relative paths, a.k.a the EVE bug (\\W{http://sourceforge.net/support/tracker.php?aid=1851273}{bug #1851273})\n\n\\b Fixed input verification of \\R{sgetcurinsttype}{GetCurInstType} and \\R{getfullpathname}{GetFullPathName}\n\n\\b Fixed \\R{wordfind}{WordFind} handling of MBCS characters (\\W{http://sourceforge.net/support/tracker.php?aid=1852141}{bug #1852141})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1842326}{bug #1842326})\n\n\\b Use CRLF in examples (\\W{http://sourceforge.net/support/tracker.php?aid=1835866}{bug #1835866})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added missing stack handling in \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} examples\n\n\\b Added NSD_GetState for checkboxes and radio buttons, NSD_SetFocus, NSD_CreatePassword and NSD_CreateDropList (\\W{http://sourceforge.net/support/tracker.php?aid=1848940}{patch #1848940})\n\n\\b Fixed documentation of \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFolderDialog (\\W{http://sourceforge.net/support/tracker.php?aid=1841120}{bug #1841120})\n\n\\b Fixed NSD_CreateComboBox so it'd work like InstallOptions (\\W{http://sourceforge.net/support/tracker.php?aid=1851136}{bug #1851136})\n\n\\S2{} Translations\n\n\\b Bulgarian updates\n\n\\b German fixes\n\n\\S2{} Build System\n\n\\b Fixed build issues on Mac OS (\\W{http://sourceforge.net/support/tracker.php?aid=1851365}{bug #1851365})\n\n\\b Fixed endianity issues introduced in version 2.32 (\\W{http://sourceforge.net/support/tracker.php?aid=1851365}{bug #1851365})\n\n\\H{v2.33} 2.33\n\nReleased on November 17th, 2007\n\n\\S1{v2.33-rl} Release Notes\n\n\\b This is a quick fix release for a bug, introduced in 2.32, that prevented the welcome page to display properly on Windows 9x. The problem was caused by the move from CVS to Subversion that messed with the line-breaks format of the INI files.\n\n\\S1{v2.33-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed a bug, introduced in 2.32, that caused display problems for the welcome and finish pages on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1831677}{bug #1831677})\n\n\\S2{} Minor Changes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Allow MUI_LANGDLL_ALLLANGUAGES to be defined after insertion of MUI_LANGUAGE macro\n\n\\S2{} Utilities and Plug-ins\n\n\\b Made \\L{../Docs/nsExec/nsExec.txt}{nsExec}'s internal process always exit cleanly to avoid false return values and delays (reported in the \\W{http://forums.winamp.com/showthread.php?threadid=279683}{forum})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added OnClick support for static controls\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Fixed VPatchFile macro path handling (\\W{http://sourceforge.net/support/tracker.php?aid=1829540}{bug #1829540})\n\n\\S2{} Translations\n\n\\b Spanish updates\n\n\\S2{} Build System\n\n\\b Separate strip options for win32 and cross-platform binaries\n\n\\H{v2.32} 2.32\n\nReleased on November 9th, 2007\n\n\\S1{v2.32-rl} Release Notes\n\n\\b Vista PNG icons are now supported without the need for any special tricks.\n\n\\S1{v2.32-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added support for mismatching installer and uninstaller icons\n\n\\b NSIS source code is now hosted on Subversion instead of CVS\n\n\\S2{} Minor Changes\n\n\\b Fixed synchronization that could allow the user to cause extraction errors in rare cases (reported in the \\W{http://forums.winamp.com/showthread.php?s=&threadid=274333}{forum})\n\n\\b Fixed syntax validation of \\R{var}{Var}\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1811876}{bug #1811876}, \\W{http://sourceforge.net/support/tracker.php?aid=1819946}{bug #1819946})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed 3-line title on welcome/finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed components page description and lock\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed default language selection from registry\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed MUI_DIRECTORYPAGE_BGCOLOR\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added link support\n\n\\S2{} Translations\n\n\\b Bulgarian corrections\n\n\\b Fixed Japanese and Norwegian Nynorsk MUI line breaks (\\W{http://sourceforge.net/support/tracker.php?aid=1817289}{bug #1817289})\n\n\\S2{} Build System\n\n\\b Check compiler's \\e{-m32} flag before the linker's to avoid gcc segfault\n\n\\H{v2.31} 2.31\n\nReleased on September 29th, 2007\n\n\\S1{v2.31-rl} Release Notes\n\n\\b Please continue to report any issues and suggestions regarding \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}. Input for the previous version was very helpful in improving MUI2.\n\n\\S1{v2.31-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Added BST_* definitions to WinMessages.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1792422}{bug #1792422})\n\n\\b Added \\R{setregview}{SetRegView} \\e{lastused}\n\n\\b Minor documentation improvements\n\n\\b \\R{library}{Library} will now revert registry view settings (\\R{setregview}{SetRegView}) after it's finished\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed empty welcome page with Chinese (\\W{http://sourceforge.net/support/tracker.php?aid=1786899}{bug #1786899})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed finish button text (\\W{http://sourceforge.net/support/tracker.php?aid=1789492}{bug #1789492})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed uninstaller comportments page text (\\W{http://sourceforge.net/support/tracker.php?aid=1793811}{bug #1793811})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed unused function warnings\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed header bitmap issues, including NOSTRETCH and compilation errors\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed language selection dialog\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed reboot finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed unloading of nsDialogs on finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed unused variable warnings\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed command line parsing error (\\W{http://sourceforge.net/support/tracker.php?aid=1796053}{bug #1796053})\n\n\\S2{} Translations\n\n\\b Korean corrections\n\n\\b Persian improvements (\\W{http://sourceforge.net/support/tracker.php?aid=1776386}{patch #1776386})\n\n\\b Romanian improvements (\\W{http://sourceforge.net/support/tracker.php?aid=1783853}{patch #1783853})\n\n\\S2{} Build System\n\n\\b Fixed build failures with MinGW's GCC 4 (\\W{http://sourceforge.net/support/tracker.php?aid=1800834}{bug #1800834})\n\n\\H{v2.30} 2.30\n\nReleased on August 25th, 2007\n\n\\S1{v2.30-rl} Release Notes\n\n\\b This release includes a beta of \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}. Please report any issues and suggestions.\n\n\\b The format of Modern UI language files has been modified to better support external strings. Private language files should be converted (and submitted as a \\W{http://sourceforge.net/tracker/?group_id=22049&atid=373087}{patch} in the spirit of open source).\n\n\\S1{v2.30-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in version 2.29 that caused invalid $SMPROGRAMS value on Windows 98 (\\W{http://sourceforge.net/support/tracker.php?aid=1766268}{bug #1766268})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Simpler code, easier to extend and makes use of nsDialogs\n\n\\S2{} Minor Changes\n\n\\b Added InstallOptions.nsh with relevant usage macros, based on the old Modern UI macros\n\n\\b Added LangFile.nsh allowing creation of language files that can be included with a single command with defaults for missing strings (when LANGFILE_DEFAULT is set)\n\n\\b Added LB_ERR and CB_ERR to WinMessages.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1771644}{bug #1771644})\n\n\\b Fixed \\R{createdirectory}{CreateDirectory} logging (\\W{http://sourceforge.net/support/tracker.php?aid=1768584}{patch #1768584})\n\n\\b Fixed escaping of quotes with $\\\\ in macros (\\W{http://sourceforge.net/support/tracker.php?aid=1713708}{bug #1713708})\n\n\\b Minor documentation improvements\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: New language files structure based on LangFile.nsh\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: MUI_LANGDLL_DISPLAY now reads previous settings on silent installations as well\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: Added MUI_CUSTOMFUNCTION_MOUSEOVERSECTION (\\W{http://sourceforge.net/support/tracker.php?aid=1762003}{patch #1762003})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Various nsDialogs improvements including RTL support, more macros in nsDialogs.nsh and \\L{../Docs/nsDialogs/Readme.html}{initial documentation}\n\n\\S2{} Translations\n\n\\b Catalan returns\n\n\\b Danish corrections\n\n\\b Slovak corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1762627}{patch #1762627})\n\n\\S2{} Build System\n\n\\b More HPUX fixes (\\W{http://sourceforge.net/support/tracker.php?aid=1755148}{bug #1755148}, \\W{http://sourceforge.net/support/tracker.php?aid=1753063}{bug #1753063}, \\W{http://sourceforge.net/support/tracker.php?aid=1758873}{bug #1758873}, \\W{http://sourceforge.net/support/tracker.php?aid=1758863}{patch #1758863})\n\n\\b Ignore known failing tests by default on POSIX\n\n\\H{v2.29} 2.29\n\nReleased on July 14th, 2007\n\n\\S1{v2.29-rl} Release Notes\n\n\\b The most notable addition in this release is nsDialogs - a faster and far more capable replacement for InstallOptions. It allows creating controls of any type directly from the script and removes the need to mess with slow INI files. It integrates directly into the script by calling functions for notification, including change notification for edit boxes. \\W{https://nsis.sourceforge.io/Community}{Speak up} if you have any suggestions/comments/patches for it.\n\n\\S1{v2.29-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Examples/nsDialogs}{nsDialogs} - a replacement for InstallOptions\n\n\\S2{} Minor Changes\n\n\\b Disable Windows error messages for the entire installer and not just for an incomplete list of fail-points (\\W{http://sourceforge.net/support/tracker.php?aid=1741061}{bug #1741061})\n\n\\b Fixed incorrect large version handling of \\R{getfileversion}{GetFileVersion} (\\W{http://sourceforge.net/support/tracker.php?aid=1742255}{bug #1742255}, \\W{http://sourceforge.net/support/tracker.php?aid=1742562}{patch #1742562})\n\n\\b Fixed the ReverseSection macro in Sections.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1742793}{bug #1742793})\n\n\\b Minor documentation improvements\n\n\\b Simplified \\R{readreg_multi_sz}{REG_MULTI_SZ reader}\n\n\\b Use SHGetFolderPath where available to better support all users' folders\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Avoid possible hangs when called from page callbacks (\\W{http://sourceforge.net/support/tracker.php?aid=1743801}{bug #1743801})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: added /TRANSLATE2 for more \"translator-friendly\" strings (\\W{http://sourceforge.net/support/tracker.php?aid=1656076}{patch #1656076})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: support downloads over 2gb (\\W{http://sourceforge.net/support/tracker.php?aid=1723131}{patch #1723131})\n\n\\S2{} Translations\n\n\\b Added International Spanish\n\n\\S2{} Build System\n\n\\b Added support for HPUX (\\W{http://sourceforge.net/support/tracker.php?aid=1714416}{patch #1714416})\n\n\\H{v2.28} 2.28\n\nReleased on June 8th, 2007\n\n\\S1{v2.28-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added a workaround for a Windows 2000 bug that caused infinite loops when hitting a key on the instfiles page (\\W{http://sourceforge.net/support/tracker.php?aid=1733692}{bug #1733692})\n\n\\S2{} Minor Changes\n\n\\b Improved compiler error strings (\\W{http://sourceforge.net/support/tracker.php?aid=1722147}{patch #1722147})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_STARTMENUPAGE_BGCOLOR and MUI_DIRECTORYPAGE_BGCOLOR (\\W{http://sourceforge.net/support/tracker.php?aid=1706187}{patch #1706187})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_LANGDLL_ALLLANGUAGES that forces the language selection dialog to display all languages (\\W{http://sourceforge.net/support/tracker.php?aid=1724876}{patch #1724876})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: corrected documentation of TxtColor (\\W{http://sourceforge.net/support/tracker.php?aid=1716614}{bug #1716614})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: added compatibility with some buggy servers that don't close the connection (\\W{http://sourceforge.net/support/tracker.php?aid=1713562}{bug #1713562})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: fixed 100% CPU usage during domain resolution (\\W{http://sourceforge.net/support/tracker.php?aid=1713560}{bug #1713560})\n\n\\S2{} Translations\n\n\\b Valencian and Catalan are no longer installed (\\W{http://sourceforge.net/support/tracker.php?aid=1558822}{patch #1558822})\n\n\\S2{} Build System\n\n\\b Added IGNORETESTS for ignoring certain test files\n\n\\b Added wxWidgets to the requirement list\n\n\\b \\L{../Docs/System/System.html}{System} now builds with GCC, but without System::Get and System::Call (\\W{http://sourceforge.net/support/tracker.php?aid=1711089}{patch #1711089})\n\n\\H{v2.27} 2.27\n\nReleased on May 5th, 2007\n\n\\S1{v2.27-rl} Release Notes\n\n\\b This is a quick-fix release that addresses a bug introduced in the last version, 2.26, that caused $PROGRAMFILES and $COMMONFILES to translate into random strings in the uninstaller.\n\n\\S1{v2.27-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.26 that made $PROGRAMFILES and $COMMONFILES unavailable in the uninstaller\n\n\\S2{} Minor Changes\n\n\\b Disable the X button on InstallOptions pages when CancelEnabled is 0\n\n\\b Fixed incomplete \\R{messagebox}{MessageBox} usage line (\\W{http://sourceforge.net/support/tracker.php?aid=1709460}{bug #1709460})\n\n\\S2{} Build System\n\n\\b Added \\c{TOOLSET} option to allow selection of specific build tools (e.g. \\c{scons TOOLSET=mingw})\n\n\\H{v2.26} 2.26\n\nReleased on April 27th, 2007\n\n\\S1{v2.26-rl} Release Notes\n\n\\b Installation on x64 systems is now fully supported with $PROGRAMFILES64, \\R{setregview}{SetRegView} and \\R{library}{Library}'s LIBRARY_X64 option.\n\n\\S1{v2.26-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added LIBRARY_X64 option for \\R{library_install}{InstallLib} and \\R{library_uninstall}{UnInstallLib} for installing and uninstalling x64 libraries\n\n\\b Added \\R{varconstant}{$PROGRAMFILES32}, \\R{varconstant}{$PROGRAMFILES64}, \\R{varconstant}{$COMMONFILES32} and \\R{varconstant}{$COMMONFILES64}\n\n\\S2{} Minor Changes\n\n\\b Added \\R{varconstant}{$EXEPATH} and \\R{varconstant}{$EXEFILE}\n\n\\b Added $(^Language) language string which holds the language name (\\W{http://sourceforge.net/support/tracker.php?aid=1235616}{RFE #1235616})\n\n\\b Added LIBRARY_IGNORE_VERSION option for \\R{library_install}{InstallLib} (\\W{http://sourceforge.net/support/tracker.php?aid=1699435}{patch #1699435})\n\n\\b Added VXD support for \\R{getdllversionlocal}{GetDLLVersionLocal} on Windows NT4/2000/XP/Vista (\\W{http://sourceforge.net/support/tracker.php?aid=1706624}{patch #1706624})\n\n\\b Avoid \\R{library}{Library} warning when UnInstallLib is unused (\\W{http://sourceforge.net/support/tracker.php?aid=1692761}{bug #1692761})\n\n\\b Fixed error handling of \\R{copyfiles}{CopyFiles} on Windows NT4 (\\W{http://sourceforge.net/support/tracker.php?aid=774966}{bug #774966})\n\n\\b Fixed font name encoding broken since 2.24\n\n\\b Fixed \\L{../Examples/LogicLib.nsi}{LogicLib} duplicate labels across included files\n\n\\b Fixed preservation of folder attributes with \\c{\\R{file}{File} /a} (\\W{http://sourceforge.net/support/tracker.php?aid=1699474}{bug #1699474})\n\n\\b Improved unused variable warning (\\W{http://sourceforge.net/support/tracker.php?aid=1701050}{bug #1701050})\n\n\\b \\R{library}{Library} macros no longer require version information for DLL files on POSIX\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=971467}{RFE #971467})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_FINISHPAGE_CANCEL_ENABLED\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_FINISHPAGE_REBOOTLATER_DEFAULT (\\W{http://sourceforge.net/support/tracker.php?aid=1143843}{RFE #1143843})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: block unsupported languages in the language selection dialog (\\W{http://sourceforge.net/support/tracker.php?aid=1564986}{RFE #1564986})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: disable Cancel button on the finish page (\\W{http://sourceforge.net/support/tracker.php?aid=1267491}{bug #1267491})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: reduce flicker caused by MUI_HEADER_TRANSPARENT_TEXT (\\W{http://sourceforge.net/support/tracker.php?aid=1696610}{patch #1696610})\n\n\\b Support \\R{quit}{Quit} in \\R{pagecallbacks_explain}{show page functions}\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{setregview}{SetRegView} to allow access to the x64 registry view\n\n\\b Installer icon support for \\R{messagebox}{MessageBox} using MB_USERICON (\\W{http://sourceforge.net/support/tracker.php?aid=1682748}{patch #1682748}, \\W{http://sourceforge.net/support/tracker.php?aid=1530388}{RFE #1530388})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.47}: line breaks support in Link controls (\\W{http://sourceforge.net/support/tracker.php?aid=1683186}{patch #1683186}, \\W{http://sourceforge.net/support/tracker.php?aid=1495949}{RFE #1495949}), added HLine and VLine controls (\\W{http://sourceforge.net/support/tracker.php?aid=1683189}{patch #1683189})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: fixed broken command line parameter handling introduced in the last version (\\W{http://sourceforge.net/support/tracker.php?aid=1696534}{bug #1696534})\n\n\\b \\L{../Examples/UserInfo/UserInfo.nsi}{UserInfo}: return effective user group on Vista, added GetOriginalAccountType (\\W{http://sourceforge.net/support/tracker.php?aid=1687456}{patch #1687456}, \\W{http://sourceforge.net/support/tracker.php?aid=1684777}{bug #1684777})\n\n\\S2{} Translations\n\n\\b Added Afrikaans translation (\\W{http://sourceforge.net/support/tracker.php?aid=1699558}{patch #1699558})\n\n\\b French corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1676101}{patch #1676101})\n\n\\b German corrections\n\n\\S2{} Build System\n\n\\b Added SKIPTESTS option\n\n\\b Avoid a lot of code warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1676243}{bug #1676243})\n\n\\b Detect wxWidgets instead of assuming its existence on POSIX (\\W{http://sourceforge.net/support/tracker.php?aid=1672315}{bug #1672315})\n\n\\b Fixed big-endian platform support broken since 2.24\n\n\\H{v2.25} 2.25\n\nReleased on March 31st, 2007\n\n\\S1{v2.25-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Include/Memento.nsh}{Memento.nsh} for easy persistency of user selections across different runs of the installer (\\W{http://sourceforge.net/support/tracker.php?aid=1677624}{RFE #1677624})\n\n\\b Fixed a bug introduced in 2.24 that allowed the license page to be skipped even with agreement check box or radio buttons (\\W{http://sourceforge.net/support/tracker.php?aid=1664428}{bug #1664428})\n\n\\S2{} Minor Changes\n\n\\b Added Vista manifest to StartMenu.nsi example to avoid backward compatibility mode that moves shortcuts (\\W{http://sourceforge.net/support/tracker.php?aid=1664957}{bug #1664957})\n\n\\b Both dashes and slashes are supported as switch prefixes on makensis.exe (\\W{http://sourceforge.net/support/tracker.php?aid=1661503}{bug #1661503})\n\n\\b Delete uninstaller temporary directory on reboot (\\W{http://sourceforge.net/support/tracker.php?aid=1660626}{patch #1660626})\n\n\\b Distribute \\L{../Examples/Plugin}{Plug-in example} with the NSIS package and not only with the source code\n\n\\b Fixed lossy Unicode conversion of dialog template strings (\\W{http://sourceforge.net/support/tracker.php?aid=1662190}{bug #1662190})\n\n\\b Fixed \\L{../Include/Sections.nsh}{Sections.nsh} macros support for $0 as input (\\W{http://sourceforge.net/support/tracker.php?aid=1664648}{bug #1664648})\n\n\\b Fixed uninstallers support for the /D= command line switch\n\n\\b Improved logging of WriteReg commands\n\n\\b Minor documentation updates and fixes (including  \\W{http://sourceforge.net/support/tracker.php?aid=1662419}{patch #1662419})\n\n\\S2{} New/Changed Commands\n\n\\b Added bitwise operators support for \\R{define}{!define} /math (\\W{http://sourceforge.net/support/tracker.php?aid=1669513}{RFE #1669513})\n\n\\b \\R{scopepredefines}{__PAGEEX__} contains the page type (\\W{http://sourceforge.net/support/tracker.php?aid=1644712}{patch #1644712})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.46}: Use installer's name for message boxes (\\W{http://sourceforge.net/support/tracker.php?aid=1661677}{bug #1661677})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Use Escape button to close (\\W{http://sourceforge.net/support/tracker.php?aid=1666501}{RFE #1666501})\n\n\\b \\L{../Docs/Math/Math.txt}{Math}: Removed mathcrt.lib\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: Refuse empty paths (\\W{http://sourceforge.net/support/tracker.php?aid=1684751}{bug #1684751})\n\n\\S2{} Translations\n\n\\b Fixed Galician language files (\\W{http://sourceforge.net/support/tracker.php?aid=1663795}{bug #1663795})\n\n\\S2{} Build System\n\n\\b Added APPEND_LIBPATH and APPEND_CPPATH instead of the malfunctioning CPPPATH and LIBPATH\n\n\\b Added ChangeLog to source code package (\\W{http://sourceforge.net/support/tracker.php?aid=1680508}{patch #1680508})\n\n\\b Avoid some warnings on VS2005 (\\W{http://sourceforge.net/support/tracker.php?aid=1667950}{patch #1667950})\n\n\\b Fixed lzma test segfault on POSIX (\\W{http://sourceforge.net/support/tracker.php?aid=1666873}{bug #1666873})\n\n\\b More strict-aliasing compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1635841}{bug #1635841})\n\n\\b NSIS Menu finally built from source\n\n\\H{v2.24} 2.24\n\nReleased on February 17th, 2007\n\n\\S1{v2.24-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{library}{Library} uninstall-reinstall-reboot problems workaround (\\W{http://sourceforge.net/support/tracker.php?aid=1097642}{bug #1097642})\n\n\\b Minimized number of cases where an error message appears in silent mode\n\n\\b New compiler predefines for \\R{scopepredefines}{code scope} (\\W{http://sourceforge.net/support/tracker.php?aid=1644712}{patch #1644712})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{usagereference}{/P command line option} for setting process priority of makensis (\\W{http://sourceforge.net/support/tracker.php?aid=1638974}{patch #1638974})\n\n\\b Added support for 64-bit PE on POSIX to \\R{getdllversionlocal}{GetDLLVersionLocal} (\\W{http://sourceforge.net/support/tracker.php?aid=1643633}{patch #1643633})\n\n\\b Append last part of \\R{ainstalldir}{InstallDir} only to $INSTDIR on directory pages (\\W{http://sourceforge.net/support/tracker.php?aid=1174184}{bug #1174184})\n\n\\b Avoid permissions change of output files for \\R{linefind}{LineFind} and \\R{filejoin}{FileJoin} (\\W{http://sourceforge.net/support/tracker.php?aid=1631773}{bug #1631773})\n\n\\b Fixed erroneous warnings on uninstall sections (\\W{http://sourceforge.net/support/tracker.php?aid=1631889}{bug #1631889})\n\n\\b Fixed lossy Unicode conversion in resource editor (\\W{http://sourceforge.net/support/tracker.php?aid=1083492}{bug #1083492})\n\n\\b Ignore invalid preprocessor commands in ignored block or comments\n\n\\b Made \\R{viaddversionkey}{VIAddVersionKey} only query language tables instead of creating them and generating warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1626504}{bug #1626504})\n\n\\b Minor documentation updates and fixes (including  \\W{http://sourceforge.net/support/tracker.php?aid=1642107}{bug #1642107}, \\W{http://sourceforge.net/support/tracker.php?aid=1649187}{patch #1649187})\n\n\\b Warn when continuing a comment line using backslash (\\W{http://sourceforge.net/support/tracker.php?aid=1554178}{bug #1554178})\n\n\\S2{} New/Changed Commands\n\n\\b \\R{regdll}{RegDLL} and \\R{unregdll}{UnregDLL} now use LOAD_WITH_ALTERED_SEARCH_PATH, so there's no need to use \\R{setoutpath}{SetOutPath} to set the working directory (\\W{http://sourceforge.net/support/tracker.php?aid=1638191}{bug #1638191})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.45}: Added FOCUS flag (\\W{http://sourceforge.net/support/tracker.php?aid=1634704}{patch #1634704}) and fixed paste with ONLY_NUMBERS flag (\\W{http://sourceforge.net/support/tracker.php?aid=1652075}{bug #1652075})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: settings in HKCU instead of HKLM (\\W{http://sourceforge.net/support/tracker.php?aid=1411970}{bug #1411970}) and MRU menu accelerators\n\n\\S2{} Translations\n\n\\b Added Galician translation (\\W{http://sourceforge.net/support/tracker.php?aid=1631765}{patch #1631765})\n\n\\S2{} Build System\n\n\\b Added a workaround for building on x64 POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1646170}{bug #1646170})\n\n\\b Added a workaround for strict-aliasing compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1635841}{bug #1635841})\n\n\\b Added compression tests\n\n\\b Added STRIP, APPEND_CCFLAGS and APPEND_LINKFLAGS build options\n\n\\b Fixed SCons 0.96.94 compatibility\n\n\\H{v2.23} 2.23\n\nReleased on January 13th, 2007\n\n\\S1{v2.23-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed compiler crash on Mac OS X (\\W{http://sourceforge.net/support/tracker.php?aid=1611866}{patch #1611866})\n\n\\b Fixed deletion of start menu icons in NSIS installer on Vista (\\W{http://sourceforge.net/support/tracker.php?aid=1611251}{bug #1611251})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed incorrect \\L{../Docs/nsExec/nsExec.txt}{nsExec} message handling in silent mode (\\W{http://sourceforge.net/support/tracker.php?aid=1605581}{bug #1605581})\n\n\\b Fixed \\L{../Docs/System/System.html}{System} crash when System::Store is called on an empty private stack (\\W{http://sourceforge.net/support/tracker.php?aid=1620178}{bug #1620178})\n\n\\b Fixed \\L{../Docs/System/System.html}{System} crash with parenthesis in filename (\\W{http://sourceforge.net/support/tracker.php?aid=1616267}{bug #1616267})\n\n\\b Minor VPatch documentation enhancements (\\W{http://sourceforge.net/support/tracker.php?aid=1624292}{patch #1624292})\n\n\\S2{} Build System\n\n\\b Fixed build failures on mingw32 (\\W{http://sourceforge.net/support/tracker.php?aid=1610773}{bug #1610773})\n\n\\b Fixed build problems with MSTOOLKIT=yes\n\n\\H{v2.22} 2.22\n\nReleased on November 27th, 2006\n\n\\S1{v2.22-rl} Release Notes\n\n\\b Some changes have been made to the credit and license files in order to avoid copyrights and license related confusions. This does not change in any way how NSIS should or could be used. NSIS itself is still licensed with the permissive BSD-like \\W{https://nsis.sourceforge.io/License}{zlib license}.\n\n\\b Upgrade is recommended for early adopters of WinVer.nsh, due to a bug in Windows 98 and ME detection.\n\n\\S1{v2.22-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed context menu not disappearing when moving from instfiles page (\\W{http://sourceforge.net/support/tracker.php?aid=1115825}{bug #1115825})\n\n\\b Fixed \\L{../Include/WinVer.nsh}{WinVer.nsh}'s detection of Windows 98 and ME (reported on the \\W{http://forums.winamp.com/showthread.php?s=&threadid=257994&highlight=winver.nsh}{forum})\n\n\\b Fixed \\R{writeuninstaller}{WriteUninstaller} failure to overwrite read-only uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1542530}{bug #1542530})\n\n\\b Licensed lzma under \\R{cpl-license}{CPL} with a \\R{lzma-special-exception}{special exception}, instead of LGPL\n\n\\b Minor documentation updates and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1584618}{bug #1584618}, \\W{http://sourceforge.net/support/tracker.php?aid=1589877}{bug #1589877})\n\n\\b Updated comments in MUI examples (\\W{http://sourceforge.net/support/tracker.php?aid=1595500}{bug #1595500})\n\n\\S2{} New/Changed Commands\n\n\\b Added `highest` option for \\R{arequestexecutionlevel}{RequestExecutionLevel}\n\n\\S2{} Translations\n\n\\b Added Uzbek translation\n\n\\b Fixed corruption in Lithuanian (\\W{http://sourceforge.net/support/tracker.php?aid=1602673}{bug #1602673})\n\n\\b Minor Breton fixes\n\n\\b Slovenian corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1590108}{patch #1590108})\n\n\\S2{} Build System\n\n\\b Added \\W{https://web.archive.org/web/20060203051838/http://msdn.microsoft.com:80/vstudio/express/visualc/}{Microsoft Visual C++ 2005 Express} support\n\n\\b SCons requirement upgraded to 0.96.93\n\n\\H{v2.21} 2.21\n\nReleased on October 20th, 2006\n\n\\S1{v2.21-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Include/WinVer.nsh}{WinVer.nsh} for easy Windows version comparisons\n\n\\b Upgraded to lzma sdk 4.43 for faster compression\n\n\\S2{} Minor Changes\n\n\\b Added Vista support to GetWindowsVersion\n\n\\b Added \\L{../Include/x64.nsh}{x64.nsh} including a few simple macros for handling x64 installations\n\n\\b Fixed a handle leak in \\R{locate}{Locate}\n\n\\b Minor documentation updates and fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.76}: Added MUI_ABORTWARNING_CANCEL_DEFAULT (\\W{http://sourceforge.net/support/tracker.php?aid=1547844}{RFE #1547844})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{arequestexecutionlevel}{RequestExecutionLevel} (\\W{http://sourceforge.net/support/tracker.php?aid=1524709}{RFE #1524709})\n\n\\S2{} Translations\n\n\\b Added Valencian translation (\\W{http://sourceforge.net/support/tracker.php?aid=1558822}{patch #1558822})\n\n\\b Bulgarian corrections\n\n\\b Slovenian corrections\n\n\\S2{} Build System\n\n\\b SCons requirement upgraded to 0.96.92\n\n\\H{v2.20} 2.20\n\nReleased on September 9th, 2006\n\n\\S1{v2.20-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Better LogicLib errors (\\W{http://sourceforge.net/support/tracker.php?aid=1537976}{bug #1537976})\n\n\\b Fixed incomplete plug-in call error messages (\\W{http://sourceforge.net/support/tracker.php?aid=1535995}{bug #1535995})\n\n\\b Fixed incorrect file timestamp querying on big-endian platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1536377}{bug #1536377})\n\n\\b Minor documentation updates and fixes\n\n\\S2{} Translations\n\n\\b Danish corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1548190}{bug #1548190})\n\n\\b Fixed incorrectly encoded Turkish translation (\\W{http://sourceforge.net/support/tracker.php?aid=1542765}{bug #1542765})\n\n\\b French corrections\n\n\\b Italian corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1546183}{bug #1546183})\n\n\\b Spanish corrections\n\n\\b Swedish corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1542680}{bug #1542680})\n\n\\b Ukrainian corrections\n\n\\S2{} Build System\n\n\\b Fixed NSIS_CONFIG_CONST_DATA_PATH being ignored on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1515592}{bug #1515592})\n\n\\H{v2.19} 2.19\n\nReleased on August 6th, 2006\n\n\\S1{v2.19-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed \\R{system}{!system} and \\R{packhdr}{!packhdr} failure with quoted long file names (\\W{http://sourceforge.net/support/tracker.php?aid=1509909}{bug #1509909})\n\n\\b Fixed build problems on 64bit platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1504772}{bug #1504772})\n\n\\b Fixed negative total size for data larger than 2GB in script compilation summary (\\W{http://sourceforge.net/support/tracker.php?aid=1468852}{bug #1468852})\n\n\\b Minor documentation updates and fixes\n\n\\b Replaced \\R{detect.netframework}{IsDotNETInstalled} with a simpler and better version\n\n\\S2{} New/Changed Commands\n\n\\b Made \\R{if}{!if} compare strings case insensitively, like \\R{strcmp}{StrCmp} and \\R{ifdef}{!ifdef}\n\n\\S2{} Plug-ins\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: fixed random DNS errors (\\W{http://forums.winamp.com/showthread.php?s=&threadid=247723}{reported in the forums})\n\n\\b \\L{../Docs/System/System.html}{System}: fixed a bug that caused stack corruption and stopped the installer from deleting System.dll when a function with no arguments was called (\\W{http://sourceforge.net/support/tracker.php?aid=1535005}{bug #1535005})\n\n\\b \\L{../Docs/System/System.html}{System}: fixed wrong return values for functions that return \\c{short} or \\c{char} (\\W{http://sourceforge.net/support/tracker.php?aid=1535007}{bug #1535007})\n\n\\S2{} Translations\n\n\\b Added Norwegian Nynorsk translation (\\W{http://sourceforge.net/support/tracker.php?aid=1503208}{patch #1503208})\n\n\\b Fixed typos in the French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1531874}{bug #1531874})\n\n\\H{v2.18} 2.18\n\nReleased on July 1st, 2006\n\n\\S1{v2.18-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b CRC32 implementation used potentially non-32bit types (\\W{http://sourceforge.net/support/tracker.php?aid=1504758}{bug #1504758})\n\n\\b Fixed errors on multiple inclusion of \\R{headers}{useful headers}\n\n\\b Fixed \\R{getfileattributes}{GetFileAttributes}\n\n\\b Fixed incorrect text on browse dialog with \\R{onverifyinstdir}{.onVerifyInstDir} (\\W{http://sourceforge.net/support/tracker.php?aid=1504297}{bug #1504297})\n\n\\b Fixed \\R{library}{Library}'s implementation on POSIX\n\n\\b Minor documentation updates and fixes\n\n\\S2{} Translations\n\n\\b Added Irish translation (\\W{http://sourceforge.net/support/tracker.php?aid=1503639}{patch #1503639})\n\n\\b Catalan corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1504104}{bug #1504104})\n\n\\b Dutch corrections\n\n\\b Finnish corrections (Mozilla bug #341643)\n\n\\b Fixed Serbian grammar and typos\n\n\\b Italian corrections (Mozilla bug #340450)\n\n\\b Polish corrections (Mozilla bug #224532)\n\n\\b Portuguese (Brazil) corrections (Mozilla bug #340885)\n\n\\b Romanian corrections (Mozilla bug #340645)\n\n\\b Thai corrections\n\n\\b Turkish corrections (Mozilla bug #340511)\n\n\\H{v2.17} 2.17\n\nReleased on May 19th, 2006\n\n\\S1{v2.17-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed build failures and segfaults on PowerPC Mac OS X (\\W{http://sourceforge.net/support/tracker.php?aid=1474597}{bug #1474597}, \\W{http://sourceforge.net/support/tracker.php?aid=1481044}{bug #1481044})\n\n\\b Fixed \\R{library}{Library}'s TLB version interpretation  (\\W{http://sourceforge.net/support/tracker.php?aid=1471341}{bug #1471341})\n\n\\b Fixed possible stack corruption when using TypeLib.dll on an invalid TLB\n\n\\b Fixed \\R{rmdir}{RMDir} deletion failure of read-only folders (\\W{http://sourceforge.net/support/tracker.php?aid=1481664}{bug #1481664})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed toolbar compressor selection menu, broken in the previous version (\\W{http://sourceforge.net/support/tracker.php?aid=1466486}{bug #1466486})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1469306}{bug #1469306}, \\W{http://sourceforge.net/support/tracker.php?aid=1491616}{bug #1491616})\n\n\\S2{} Translations\n\n\\b Added missing Basque and Welsh files (\\W{http://sourceforge.net/support/tracker.php?aid=1469471}{bug #1469471})\n\n\\b Brazilian Portuguese updates\n\n\\b Bulgarian fixes\n\n\\b Fixed a typo in Hebrew translation (\\W{http://sourceforge.net/support/tracker.php?aid=1474587 }{bug #1474587})\n\n\\b Icelandic fixes and improvements\n\n\\H{v2.16} 2.16\n\nReleased on April 7th, 2006\n\n\\S1{v2.16-rn} Release Notes\n\n\\b The script compiler, makensis, builds and works on big-endian platforms. This change enlarges the portability range of NSIS to theoretically every POSIX platform. Please \\W{http://sourceforge.net/tracker/?group_id=22049&atid=373085}{report} any incompatibility with specific platforms or build-tools.\n\n\\b The internal changes made to support big-endian platforms also pave the road to x64 installers. There is now a central function which writes data to disk. This function currently only converts the endianity of integers, but it can be changed to selectively write 64-bit integers. Hopefully, there'll soon be a simple method of compiling a script to both x86 and x64 installers.\n\n\\b Changing Source/exehead/fileform.h to alter the internal structure of installers is no longer enough. The compiler has its own definitions of the structures which must also be changed in Source/fileform.cpp. In the future, fileform.cpp should be automatically generated from fileform.h, but for now, the synchronization must be done manually.\n\n\\S1{v2.16-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Big-endian platforms are now fully supported by makensis\n\n\\b \\R{library}{Library} now available on non-Windows platforms as well, although it requires the installed DLL to have version information\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW 2.1}: added \"Cancel compilation\" menu item\n\n\\S2{} New/Changed Commands\n\n\\b Added /utcdate switch to \\R{define}{!define} for UTC dates (\\W{http://sourceforge.net/support/tracker.php?aid=1459210}{RFE #1459210})\n\n\\S2{} Minor Changes\n\n\\b Added an optional timestamp in the log - NSIS_CONFIG_LOG_TIMESTAMP build setting (\\W{http://sourceforge.net/support/tracker.php?aid=1460586}{RFE #1460586})\n\n\\b Added NSIS_WIN32_MAKENSIS define, defined only when compiling on Windows\n\n\\b Exported validate_filename to plug-ins\n\n\\b Fixed a crash in CResourceEditor when adding resources to a PE that already contains named resources\n\n\\b Fixed a small resource leak in the TypeLib::GetLibVersion plug-in function\n\n\\b Fixed CResourceEditor input sanity checks\n\n\\b Fixed incorrect \\R{FileOpen}{FileOpen} input validation (\\W{http://sourceforge.net/support/tracker.php?aid=1459789}{bug #1459789})\n    \n\\b Fixed \\R{library}{Library} failure with DLLs marked as read-only\n\n\\b Fixed lzma's POSIX implementation thread synchronization issues and resource leaks\n\n\\b Fixed makensis self-path detection on non-Windows platforms (NSIS_CONFIG_CONST_DATA_PATH=no)\n\n\\b Fixed replace_icon and generate_uninstall_icon_data icon validation\n\n\\b Made external CHM links safer to script exceptions (\\W{http://sourceforge.net/support/tracker.php?aid=1449879}{bug #1449879})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1077439}{bug #1077439}, \\W{http://sourceforge.net/support/tracker.php?aid=1448374}{bug #1448374}, \\W{http://sourceforge.net/support/tracker.php?aid=1464446}{RFE #1464446})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.75}: added show function for the start menu page (\\W{http://sourceforge.net/support/tracker.php?aid=1448176}{RFE #1448176}), added MUI_HEADER_TRANSPARENT_TEXT for transparent header texts (\\W{http://sourceforge.net/support/tracker.php?aid=1447766}{RFE #1447766})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: better header detection for better compatibility with proxies like WinProxy (\\W{http://sourceforge.net/support/tracker.php?aid=1445735}{bug #1445735}), fail if no headers are sent, faster downloads (\\W{http://sourceforge.net/support/tracker.php?aid=1465378}{patch #1465378})\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: validate user input (\\W{http://sourceforge.net/support/tracker.php?aid=1440636}{bug #1440636})\n\n\\S2{} Translations\n\n\\b Added Basque translation\n\n\\b Minor Slovenian fixes\n\n\\S2{} Build System\n\n\\b Added code tests for CResourceEditor and CDialogTemplate\n\n\\b Automatically pass build settings to script, eliminating the need to edit build.cpp for new settings\n\n\\b Fixed $PREFIX expansion during installation on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1456943}{bug #1456943})\n\n\\b Fixed CHM dependencies\n\n\\b Fixed compatibility issue with EclipseNSIS (version wasn't prefixed with 'v')\n\n\\b Fixed GCC 4.1 compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1456861}{patch #1456861})\n\n\\b Test for -Wl,-Map availability\n\n\\H{v2.15} 2.15\n\nReleased on March 4th, 2006\n\n\\S1{v2.15-cl} Changelog\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{if}{!if} for more complex compile-time flow control (\\W{http://sourceforge.net/support/tracker.php?aid=1412982}{patch #1412982})\n\n\\b Added /math switch to \\R{define}{!define} for simple compile-time mathematical operations (\\W{http://sourceforge.net/support/tracker.php?aid=1372561}{patch #1372561})\n\n\\S2{} Minor Changes\n\n\\b Added more replacement options to \\R{wordreplace}{WordReplace}\n\n\\b Added NSIS_CONFIG_LOG_STDOUT configuration option for logging to stdout\n\n\\b Added path translation for \\R{addincludedir}{!addincludedir} (\\W{http://sourceforge.net/support/tracker.php?aid=1431958}{bug #1431958})\n\n\\b \\R{configread}{ConfigRead} now sets the error flag, if the entry wasn't found\n\n\\b Documented \\R{nop}{Nop}\n\n\\b Edit box in the installation directory selection page is now always LTR, even for RTL languages\n\n\\b Fixed improper iterator usage in dir_reader (\\W{http://sourceforge.net/support/tracker.php?aid=1431593}{bug #1431593})\n\n\\b Fixed \\c{\\R{messagebox}{MessageBox} MB_TOPMOST} not showing up, if used as the first sections' instruction  (\\W{http://sourceforge.net/support/tracker.php?aid=1400995}{bug #1400995})\n\n\\b Fixed \\R{rmdir}{RMDir} skipping files with names starting with two dots (\\W{http://sourceforge.net/support/tracker.php?aid=1420657}{bug #1420657})\n\n\\b \\R{getoptions}{GetOptions} now sets the error flag, if the option wasn't found\n\n\\b Made \\R{include}{!include} stop searching the include directories after a match is found (\\W{http://sourceforge.net/support/tracker.php?aid=1441877}{bug #1441877})\n\n\\b Made \\R{headers}{header functions} use /NOUNLOAD for faster plug-in calls\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1420352}{bug #1420352}, \\W{http://sourceforge.net/support/tracker.php?aid=1432423}{bug #1432423})\n\n\\b More informative \\R{aicon}{Icon} error messages (\\W{http://sourceforge.net/support/tracker.php?aid=1174742}{bug #1174742})\n\n\\b New case-sensitive functions in headers: \\R{wordfinds}{WordFindS}, \\R{wordfind2xs}{WordFind2XS}, \\R{wordfind3xs}{WordFind3XS}, \\R{wordreplaces}{WordReplaceS}, \\R{wordadds}{WordAddS}, \\R{wordinserts}{WordInsertS}, \\R{strfilters}{StrFilterS}, \\R{textcompares}{TextCompareS}, \\R{configreads}{ConfigReadS}, \\R{configwrites}{ConfigWriteS}, \\R{getoptionss}{GetOptionsS}\n\n\\S2{} Translations\n\n\\b Added proper language identifier for Breton\n\n\\b Breton translation improvements\n\n\\b Bulgarian translation improvements\n\n\\b Fixed Czech grammar mistakes (\\W{http://sourceforge.net/support/tracker.php?aid=1427189}{patch #1427189})\n\n\\b Fixed Italian typo (\\W{http://sourceforge.net/support/tracker.php?aid=1416988}{patch #1416988})\n\n\\b Updated Mongolian\n\n\\S2{} Build System\n\n\\b Fixed __BIG_ENDIAN__ definition\n\n\\b Fixed improper handling of paths passed to the compiler (\\W{http://sourceforge.net/support/tracker.php?aid=1434215}{bug #1434215})\n\n\\b Improved GCC 4.2 compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1434174}{patch #1434174})\n\n\\b Moved NSIS_VARS_SECTION from config.h to scons\n\n\\b Write all configuration to sconf.h instead of passing it on the command line\n\n\\H{v2.14} 2.14\n\nReleased on January 24th, 2006\n\n\\S1{v2.14-rn} Release Notes\n\n\\b This release fixes a critical bug that caused installers using plug-ins to fail loading on Windows 9x and NT. Upgrading from 2.13 is highly recommended.\n\n\\S1{v2.14-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug that corrupted $TEMP under Windows 9x and NT and caused \\R{initpluginsdir}{InitPluginsDir} to fail (\\W{http://sourceforge.net/support/tracker.php?aid=1412159}{bug #1412159})\n\n\\S2{} Minor Changes\n\n\\b Fixed a possible buffer overflow caused by long values of $0, when using large NSIS_MAX_STRLEN builds (above 4096)\n\n\\H{v2.13} 2.13\n\nReleased on January 21st, 2006\n\n\\S1{v2.13-rn} Release Notes\n\n\\b Language detection has changed. The default language is now set to the user's user-interface language instead of the locale language, as suggested by \\W{http://web.archive.org/web/20050913082611/http://msdn.microsoft.com/library/en-us/intl/nls_0xrn.asp}{MSDN}. To restore the old behavior, use \\c{System::Call \"kernel32::GetUserDefaultLangID()i.a\"} in \\R{oninit}{.onInit}.\n\n\\S1{v2.13-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Default $LANGUAGE value is now based on user's UI language instead of locale (\\W{http://sourceforge.net/support/tracker.php?aid=1324734}{bug #1324734})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{strcmps}{StrCmpS} for case sensitive string comparison (\\W{http://sourceforge.net/support/tracker.php?aid=1381929}{patch #1381929})\n\n\\S2{} Minor Changes\n\n\\b Added system time support to \\R{filefunc}{GetTime}\n\n\\b Fixed components page checkbox redraw problem under Windows 95 (\\W{http://sourceforge.net/support/tracker.php?aid=1397031}{bug #1397031})\n\n\\b Fixed constant maximum string length in \\R{FileRead}{FileRead} (changed from 1024 to NSIS_MAX_STRLEN)\n\n\\b Fixed empty $INSTDIR value in directory page show callback function (\\W{http://sourceforge.net/support/tracker.php?aid=1209843}{bug #1209843})\n\n\\b Fixed relative jumps ignoring \\c{\\R{file}{File} /nonfatal} (\\W{http://sourceforge.net/support/tracker.php?aid=1299100}{bug #1299100})\n\n\\b Fixed typo in NSIS Menu (\\W{http://sourceforge.net/support/tracker.php?aid=1387748}{bug #1387748})\n\n\\b Issue a warning when \\c{\\R{abrandingtext}{BrandingText} /TRIM*} actually expands the label (\\W{http://sourceforge.net/support/tracker.php?aid=1362443}{bug #1362443})\n\n\\b Made \\c{\\R{rmdir}{RMDir} /r} remove Unicode paths as well using short names (\\W{http://sourceforge.net/support/tracker.php?aid=1378785}{bug #1378785})\n\n\\b Minor documentation improvements and fixes\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed System plug-in \\L{../Docs/System/System.html}{documentation} of callback functions (\\W{http://sourceforge.net/support/tracker.php?aid=1403608}{bug #1403608})\n\n\\b Fixed System plug-in heap corruption (\\W{http://sourceforge.net/support/tracker.php?aid=1403601}{bug #1403601})\n\n\\S2{} Translations\n\n\\b Mongolian translation improvements\n\n\\S2{} Build System\n\n\\b Better installation under POSIX with proper $\\{NSISDIR\\} detection and appropriate directory paths (/usr/bin, /usr/share/doc, etc.)\n\n\\H{v2.12} 2.12\n\nReleased on December 17th, 2005\n\n\\S1{v2.12-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed compile-time assertion failure for big uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1380447}{bug #1380447})\n\n\\b \\R{tutorial}{Tutorial} enhancements (including \\W{http://sourceforge.net/support/tracker.php?aid=1366431}{bug #1366431})\n\n\\S2{} New/Changed Commands\n\n\\b Added /NONFATAL switch to \\R{include}{!include} (\\W{http://sourceforge.net/support/tracker.php?aid=1372048}{patch #1372048})\n\n\\S2{} Minor Changes\n\n\\b Clearer error message for double label definition (\\W{http://sourceforge.net/support/tracker.php?aid=1374675}{patch #1374675})\n\n\\b Fixed browsed network root directory not being accepted (\\W{http://sourceforge.net/support/tracker.php?aid=1331292}{bug #1331292})\n\n\\b Fixed incorrect \\R{acompletedtext}{CompletedText} parsing (\\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Fixed sdbarker_tiny.exe's compatibility with NSIS_CONFIG_LOG (\\W{http://sourceforge.net/support/tracker.php?aid=1365869}{bug #1365869})\n\n\\b Implemented nicer registry commands log (\\W{http://sourceforge.net/support/tracker.php?aid=1340255}{patch #1340255})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1355653}{patch #1355653}, \\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Multi-line comments are no longer ignored inside !ifdef'd block\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added drag & drop support for zip2exe\n\n\\b Better drag & drop error handling in MakeNSISw\n\n\\b Fixed Math plug-in array issues (\\W{http://sourceforge.net/support/tracker.php?aid=1235875}{bug #1235875})\n\n\\S2{} Translations\n\n\\b Added browse button Danish translation\n\n\\b Breton translation fixes and improvements\n\n\\b Fixed finish button Swedish translation\n\n\\S2{} Build System\n\n\\b Fixed endianness detection problem on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1370179}{bug #1370179})\n\n\\b Generated installers use nsis-VERSION-setup.exe template\n\n\\H{v2.11} 2.11\n\nReleased on November 12th, 2005\n\n\\S1{v2.11-rl} Release Notes\n\n\\b Rebuilding existing installers that use \\c{\\R{asetoverwrite}{SetOverwrite} ifdiff}, might falsely overwrite files once\n\n\\S1{v2.11-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added a workaround for a bug that prevented detection of some special folders (e.g. \\R{varother}{$DESKTOP} for all users) on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1008632}{bug #1008632})\n\n\\b Fixed a crash caused by copying very long details to clipboard in the installation log page (\\W{http://sourceforge.net/support/tracker.php?aid=1314004}{bug #1314004})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{tempfile}{!tempfile}, \\R{delfile}{!delfile} and \\R{appendfile}{!appendfile} for cross-platform handling of text files during compilation\n\n\\b Fixed \\R{achangeui}{ChangeUI} input handling (\\W{http://sourceforge.net/support/tracker.php?aid=1348473}{patch #1348473})\n\n\\b \\R{ssectionin}{SectionIn} RO is no longer case sensitive\n\n\\S2{} Minor Changes\n\n\\b Added support URL to the NSIS package entry in the Add/Remove control panel (\\W{http://sourceforge.net/support/tracker.php?aid=1349867}{RFE #1349867})\n\n\\b Fixed comment handling (\\W{http://sourceforge.net/support/tracker.php?aid=1324898}{patch #1324898})\n\n\\b Fixed duplicate RegTool test in \\R{library}{Library}\n\n\\b Fixed invalid language selection according to \\R{varother}{$LANGUAGE} in \\R{oninit}{.onInit} when only primary language match is found (\\W{http://sourceforge.net/support/tracker.php?aid=1328629}{bug #1328629})\n\n\\b Fixed missing RegTool error after install-reboot-install-reboot sequence with \\R{library}{Library}\n\n\\b Fixed portability issues with \\L{../Examples/LogicLib.nsi}{LogicLib} (\\W{http://sourceforge.net/support/tracker.php?aid=1320297}{bug #1320297}, \\W{http://sourceforge.net/support/tracker.php?aid=1248336}{patch #1248336})\n\n\\b Fixed \\c{\\R{asetoverwrite}{SetOverwrite} ifdiff} always overwriting on FAT file system (\\W{http://sourceforge.net/support/tracker.php?aid=1338423}{bug #1338423})\n\n\\b Fixed wrong size of red.bmp check box image\n\n\\b Larger browse button for localized texts (\\W{http://sourceforge.net/support/tracker.php?aid=1314682}{bug #1314682})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Sort language names in language selection dialog\n\n\\b Use the temporary directory for \\R{library}{Library} temporary files, instead of the possibly write-protected installation directory\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added /OEM switch for OEM to ANSI conversion in \\L{../Docs/nsExec/nsExec.txt}{nsExec} (\\W{http://sourceforge.net/support/tracker.php?aid=1346737}{patch #1346737})\n\n\\b Added /PROXY switch for manual proxy configuration in \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl} (\\W{http://sourceforge.net/support/tracker.php?aid=1334166}{patch #1334166})\n\n\\b Added solid compression check box to zip2exe (\\W{http://sourceforge.net/support/tracker.php?aid=1334155}{patch #1334155})\n\n\\b Added stdin in MakeNSISw to allow xcopy to run\n\n\\b Added timestamp handling to zip2exe (\\W{http://sourceforge.net/support/tracker.php?aid=1349853}{bug #1349853})\n\n\\b Fixed input validation of \\L{../Docs/nsExec/nsExec.txt}{nsExec}\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.44}: Added HWND and HWND2 entries to the INI file to avoid messy calculations of the correct control id\n\n\\S2{} Translations\n\n\\b Slovenian translation fixes and improvements\n\n\\S2{} Build System\n\n\\b Added a workaround for linking errors caused by a bad library included in recent Platform SDK versions\n\n\\b Check for and use -pthread linker flag\n\n\\b Improved FreeBSD portability\n\n\\b Nicer error message for SCons version older than 0.96.90\n\n\\H{v2.10} 2.10\n\nReleased on October 4th, 2005\n\n\\S1{v2.10-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added auto completion to the directory page\n\n\\b Fixed a bug, introduced in 2.09, that caused \\R{aallowrootdirinstall}{AllowRootDirInstall} to fail\n\n\\b Fixed a thread leak in the POSIX implementation of LZMA\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch 3.1}: MD5 checksums, better performance, and some bug fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1219806}{bug #1219806})\n\n\\S2{} Minor Changes\n\n\\b Added rounding of required and available size on the directory page (1.59 => 1.6 instead of 1.5)\n\n\\b Added WS_EX_LEFTSCROLLBAR style in RTL mode (\\W{http://sourceforge.net/support/tracker.php?aid=1283528}{bug #1283528})\n\n\\b Fixed alteration of the working directory by FileRequest in InstallOptions (\\W{http://sourceforge.net/support/tracker.php?aid=1287731}{bug #1287731})\n\n\\b Fixed bad mnemonic key in MakeNSISw menu (\\W{http://sourceforge.net/support/tracker.php?aid=1288159}{bug #1288159})\n\n\\b Fixed negative size values showing up after the decimal point in the directory page for very big sizes\n\n\\b Minor documentation improvements and fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.74}: Fixed compile error when checkboxes are used on multiple finish pages\n\n\\S2{} Translations\n\n\\b Fixed a bug in Slovenian translation that caused lots of missing language string warnings\n\n\\b Fixed typos in Serbian translation\n\n\\b Fixed typos in Thai translation\n\n\\b Updated Simplified Chinese translation\n\n\\S2{} Build System\n\n\\b Automatic fix for \\W{http://forums.winamp.com/showthread.php?s=&threadid=179848}{VC6 SP6 compile error}\n\n\\b Moved most of the configuration from config.h to the build system\n\n\\b Removed all optimizations and symbol stripping in debug mode\n\n\\b SCons requirement updated to 0.96.91\n\n\\b VPatch can be built on POSIX as well\n\n\\H{v2.09} 2.09\n\nReleased on August 26th, 2005\n\n\\S1{v2.09-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.08, that prevented uninstallers from deleting $INSTDIR\n\n\\b Fixed a bug that caused \"C:\\\\ \" to be considered a valid installation directory, even without \\R{aallowrootdirinstall}{AllowRootDirInstall}\n\n\\S2{} New/Changed Commands\n\n\\b \\R{var}{Var} can now be used in sections and functions, but only with the /GLOBAL flag\n\n\\S2{} Minor Changes\n\n\\b Applied \\W{http://sourceforge.net/support/tracker.php?aid=1248335}{patch #1248335} for greater portability of examples\n\n\\b \\R{filefunc}{FileFunc}: workaround for GetLongPathName which is not available on Windows 95 (Instructor)\n\n\\b Fixed an unused label warning in \\R{library}{Library}\n\n\\b Fixed duplicate label errors in \\L{../Examples/LogicLib.nsi}{LogicLib} and \\R{library}{Library} when used in different files (\\W{http://sourceforge.net/support/tracker.php?aid=1243865}{bug #1243865})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.73}: fixed checkboxes on uninstaller finish page or multiple finish pages\n\n\\b \\R{wordfunc}{WordFunc}: fixed incorrect replacement of first word in WordReplace, under some conditions (Instructor)\n\n\\S2{} Translations\n\n\\b Renamed Malaysian to Malay\n\n\\b Update Thai translation to the latest version\n\n\\b Updated Kurdish MUI translation to the latest version\n\n\\S2{} Build System\n\n\\b Fixed a number of build problems on POSIX platforms which caused plug-ins to malfunction and installers to crash\n\n\\H{v2.08} 2.08\n\nReleased on July 23rd, 2005\n\n\\S1{v2.08-rn} Release Notes\n\n\\b The Archive has been replaced with a \\W{https://nsis.sourceforge.io/wiki/}{Wiki}. The new Wiki allows everyone to edit all pages so there's no longer need to hunt for the original author. It also allows everyone to upload plug-ins and not just administrators. And as if that's not enough, it looks better and provides easier and more feature-rich syntax.\n\n\\S1{v2.08-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added Instructor's \\R{headers}{header files of useful functions}\n\n\\b \\R{library}{Library} improvements: ordered registration after reboot, smaller RegTool and separate process for each registration to avoid conflicts (thanks stb)\n\n\\S2{} Minor Changes\n\n\\b Added Bosnian and Kurdish translations\n\n\\b Added per-user nsisconf.nsh file in %APPDATA% or $HOME, depending on the platform (\\W{http://sourceforge.net/support/tracker.php?aid=1223041}{patch #1223041})\n\n\\b Documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1202495}{bug #1202495}, \\W{http://sourceforge.net/support/tracker.php?aid=1227610}{bug #1227610}, \n\\W{http://sourceforge.net/support/tracker.php?aid=1238686}{bug #1238686}, \\W{http://sourceforge.net/support/tracker.php?aid=1225167}{patch #1225167}, \\W{http://sourceforge.net/support/tracker.php?aid=1240601}{RFE #1240601})\n\n\\b Fixed _?= being ignored, if the uninstaller path is not quoted and is separated with only space from _?=\n\n\\b Fixed \\R{library}{Library} failing on paths with spaces (\\W{http://sourceforge.net/support/tracker.php?aid=1234283}{bug #1234283})\n\n\\b Fixed UpgradeDLL compilation error (\\W{http://sourceforge.net/support/tracker.php?aid=1230336}{bug #1230336})\n\n\\b Improved French, Ukrainian and Luxembourgish translation\n\n\\b Made \\R{rmdir}{RMDir} set the error flag, if passed an invalid directory path (\\W{http://sourceforge.net/support/tracker.php?aid=1227553}{bug #1227553})\n\n\\b Made uninstallers copy themselves into a subdirectory of the temporary directory to avoid DLLs left in the temporary directory from being loaded by the uninstaller (\\W{http://sourceforge.net/support/tracker.php?aid=1214319}{patch #1214319})\n\n\\b Missing \\R{langstring}{LangString} warning now uses the language name, if possible\n\n\\b zip2exe: fixed restriction of extraction path length and updated to \\W{http://www.zlib.net/}{zlib} 1.2.3 (\\W{http://sourceforge.net/support/tracker.php?aid=1226381}{bug #1226381})\n\n\\S2{} Build System\n\n\\b Added linker script to assure correct order of sections when building using GNU tools\n\n\\b Added \\c{test} target\n\n\\b UIs are now built from source\n\n\\H{v2.07} 2.07\n\nReleased on June 20th, 2005\n\n\\S1{v2.07-rn} Release Notes\n\n\\b NSIS Update was removed and the update check was moved back to MakeNSISw (Help -> NSIS Update). Use the \\R{build_nightly}{nightly builds} to get the latest compiled binaries from CVS.\n\n\\b Solid compression is no longer the default for bzip2 and lzma, use \\c{SetCompressor /SOLID bzip2} or \\c{SetCompressor /SOLID lzma} for solid compression.\n\n\\b Source code is no longer supplied with the installer package. Source code can be downloaded from CVS or from the \\W{https://nsis.sourceforge.io/download/}{download page}.\n\n\\b The directory structure of the installation has been changed. All documentation is now in the Docs folder and all examples are in the Examples folder.\n\n\\S1{v2.07-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added /SOLID switch for \\R{asetcompressor}{SetCompressor}\n\n\\b New build system (see \\k{build})\n\n\\b Stubs (exeheads) are no longer compiled into makensis.exe, but kept in the Stubs folder\n\n\\S2{} New/Changed Commands\n\n\\b \\R{enumregvalue}{EnumRegValue} sets the error flag, if the enumeration index is out of range (\\W{http://sourceforge.net/support/tracker.php?aid=1178756}{bug #1178756})\n\n\\b \\R{expandenvstrings}{ExpandEnvStrings} now sets the error flag as the documentation states\n\n\\b Made \\R{file}{File} /oname throw an error if the first character is a quote\n\n\\S2{} Minor Changes\n\n\\b Added \\R{varconstant}{$LOCALAPPDATA} (\\W{http://sourceforge.net/support/tracker.php?aid=1172123}{RFE #1172123})\n\n\\b Changed MUI dialogs charset from ANSI_CHARSET to DEFAULT_CHARSET (\\W{http://sourceforge.net/support/tracker.php?aid=1193736}{bug #1193736}, \\W{http://sourceforge.net/support/tracker.php?aid=1201712}{bug #1201712})\n\n\\b Fixed \\R{varother}{$INSTDIR} changing, even if user clicked Cancel in browse dialog\n\n\\b Fixed a crash in makensis when using \\R{awindowicon}{WindowIcon} off (\\W{http://sourceforge.net/support/tracker.php?aid=1123353}{bug #1123353})\n\n\\b Fixed \\R{call}{Call} :label in uninstall code\n\n\\b Fixed compilation error without NSIS_CONFIG_COMPONENTPAGE\n\n\\b Fixed compilation errors on various platforms (including \\W{http://sourceforge.net/support/tracker.php?aid=1179116}{patch #1179116}, \\W{http://sourceforge.net/support/tracker.php?aid=1193692}{patch #1193692})\n\n\\b Fixed \\R{createdirectory}{CreateDirectory} setting the error flag for directories with two consecutive backslashes (\\W{http://sourceforge.net/support/tracker.php?aid=1119442}{bug #1119442})\n\n\\b Fixed \\R{library}{InstallLib} setting the error flag for new shared libraries (\\W{http://sourceforge.net/support/tracker.php?aid=1181951}{bug #1181951})\n\n\\b Fixed letters case in examples (\\W{http://sourceforge.net/support/tracker.php?aid=1184571}{patch #1184571})\n\n\\b Fixed logging state being reset after the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1168711}{bug #1168711})\n\n\\b Fixed overlapping icon in welcome page (\\W{http://sourceforge.net/support/tracker.php?aid=1221772}{bug #1221772})\n\n\\b Fixed \\R{rmdir}{RMDir} /REBOOTOK setting the reboot flag when trying to delete non-existent directory (\\W{http://sourceforge.net/support/tracker.php?aid=1073792}{bug #1073792})\n\n\\b Minor documentation fixes and improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1220940}{bug #1220940})\n\n\\b Removed NSIS Update, MakeNSISw checks for new versions again\n\n\\S2{} Include Files\n\n\\b More messages in \\L{../Include/WinMessages.nsh}{WinMessages.nsh} (Shengalts Aleksander)\n\n\\b Some more useful macros in \\L{../Include/Colors.nsh}{Colors.nsh} (Joel)\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed halibut segfaults on PowerPC (\\W{http://sourceforge.net/support/tracker.php?aid=1180886}{patch #1180886})\n\n\\b \\L{../Docs/Math/Math.txt}{Math}: Fixed memory leak (brainsucker)\n\n\\b zip2exe: upgraded to zlib 1.2.2\n\n\\S2{} Translations\n\n\\b Added Malaysian translation (Azwa)\n\n\\b Added Welsh translation (Rhoslyn Prys)\n\n\\b Fixed Breton NLF file (credits weren't commented)\n\n\\b Fixed duplicate accelerator in French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1168652}{bug #1168652})\n\n\\b Improved French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1220277}{bug #1220277})\n\n\\b Updated Russian translation (Dmitry)\n\n\\b Updated translation credits (\\W{http://sourceforge.net/support/tracker.php?aid=1223362}{patch #1223362})\n\n\\H{v2.06} 2.06\n\nReleased on March 19th, 2005\n\n\\S1{v2.06-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug, introduced in 2.05, that made components selection not function properly if the first section in the script was a section group\n\n\\b Fixed a bug, introduced in 2.05, that corrupted the state of section groups inside section groups (\\W{http://sourceforge.net/support/tracker.php?aid=1155836}{bug #1155836})\n\n\\S2{} New/Changed Commands\n\n\\b Added MB_RTLREADING style to \\R{messagebox}{MessageBox} (\\W{http://sourceforge.net/support/tracker.php?aid=1159701}{RFE #1159701})\n\n\\b All registry instructions now accept SHCTX which is replaced with HKLM or HKCU at runtime according to \\R{setshellvarcontext}{SetShellVarContext} (\\W{http://sourceforge.net/support/tracker.php?aid=1124901}{RFE #1124901})\n\n\\S2{} Minor Changes\n\n\\b Added Belarusian and Icelandic language files\n\n\\b Added components.c to the Makefile (\\W{http://sourceforge.net/support/tracker.php?aid=1123154}{patch #1123154})\n\n\\b Added missing \\R{clearerrors}{ClearErrors} in GetWindowsVersion (\\W{http://sourceforge.net/support/tracker.php?aid=1155588}{bug #1155588})\n\n\\b Fixed a bug in install.sh that made it try to install a non existing directory\n\n\\b Fixed a bug in the Russian language file distributed with 2.05\n\n\\b Fixed a bug that caused \\R{asetfont}{SetFont} to not function properly with RTL languages on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1159700}{bug #1159700})\n\n\\b Fixed a bug, introduced in 2.05, that caused problems with \\R{ainsttype}{InstType} /COMPONENTSONLYONCUSTOM (\\W{http://sourceforge.net/support/tracker.php?aid=1155060}{bug #1155060})\n\n\\b Fixed a crash caused by compiling large uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1144763}{bug #1144763})\n\n\\b Fixed compile error without NSIS_CONFIG_CRC_SUPPORT\n\n\\b Fixed compile errors of MinGW on POSIX for source code under Contrib (\\W{http://sourceforge.net/support/tracker.php?aid=1164307}{patch #1164307})\n\n\\b Fixed plug-ins directory initialization for extremely restricted guest users with no directory listing access to the temporary directory\n\n\\b Made install.sh not use $(tempfile) and install files under /usr/share instead of /lib (\\W{http://sourceforge.net/support/tracker.php?aid=1120399}{patch #1120399})\n\n\\b Minor documentation updates and fixes\n\n\\b Updated Slovenian, Serbian and Serbian Latin language files\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}: Fixed a small memory leak (Thanks Takhir)\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: Added support for \\R{setctlcolors}{SetCtlColors} (\\W{http://sourceforge.net/support/tracker.php?aid=711900}{RFE #711900})\n\n\\H{v2.05} 2.05\n\nReleased on February 4th, 2005\n\n\\S1{v2.05-rn} Release Notes\n\n\\b A lot of changes were made to the behavior of sections/components and related instructions. The changes were thoroughly tested, but may still cause minor incompatibilities with old scripts. Please let us know if your script no longer functions as expected with these changes.\n\n\\S1{v2.05-cl} Changelog\n\n\\S2{} New/Changed Commands\n\n\\b Renamed SubSection and SubSectionEnd to \\R{ssectiongroup}{SectionGroup} and \\R{ssectiongroupend}{SectionGroupEnd}\n\n\\b \\R{sectionsetflags}{SectionSetFlags}, when used on a section group, toggles its children too\n\n\\b \\R{sectionsettext}{SectionSetText} works better with variables (parses immediately and treats an empty variable as an empty string)\n\n\\b \\R{ssetcurinsttype}{SetCurInstType} works without the components page\n\n\\S2{} Minor Changes\n\n\\b Added Breton translation\n\n\\b \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}: Fixed double delay time in some cases\n\n\\b Documentation fixes and enhancements (including \\W{http://sourceforge.net/support/tracker.php?aid=1098454}{patch #1098454})\n\n\\b Fixed case sensitive name comparison with \\R{file}{File} /x, when not using wildcards\n\n\\b Fixed extraction status ending prior to 100%\n\n\\b Fixed negative values of available space in the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1114876}{bug #1114876})\n\n\\b Fixed system.nsi example crash (\\W{http://sourceforge.net/support/tracker.php?aid=1102255}{bug #1102255})\n\n\\b Fixed unused label warnings with \\R{library}{Library macros}\n\n\\b Improved some error messages\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.42}: Added an image displaying example, added TRANSPARENT flag for BITMAP fields (\\W{http://sourceforge.net/support/tracker.php?aid=1079715}{RFE #1079715} - funded by Chris Morgan)\n\n\\b Invisible sections weren't always affected by a change of the installation type (\\W{http://sourceforge.net/support/tracker.php?aid=1045722}{bug #1045722})\n\n\\b Language file fixes\n\n\\b Made pages refresh after an aborted leave function\n\n\\b Partially selected section groups can now be toggled\n\n\\H{v2.04} 2.04\n\nReleased on January 7th, 2005\n\n\\S1{v2.04-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed $0 changed by \\R{file}{File} /r\n\n\\b Fixed empty directory not included by \\R{file}{File} /r\n\n\\b Fixed invalid directory creation by \\R{file}{File} /r on POSIX\n\n\\b Fixed Unicode conversion problems on POSIX\n\n\\S2{} Minor Changes\n\n\\b Added new test for dir_reader::matches\n\n\\b Fixed LibraryLocal failure with UNC paths\n\n\\b Fixed VC 7.1 and GCC 3.4 compile errors\n\n\\b Language file fixes\n\n\\H{v2.03} 2.03\n\nReleased on December 3rd, 2004\n\n\\S1{v2.03-rn} Release Notes\n\n\\b If you're using \\c{File /r folder} in your script, it's recommended you replace it with \\c{File /r folder\\\\*} for faster compilation and so no other folders named \\e{folder} will be included\n\n\\b Command line switches prefix on POSIX has changed to a dash\n\n\\b The plug-in API change is backward compatible\n\n\\S1{v2.03-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added another parameter to plug-in functions with a pointer to exec_flags and ExecuteCodeSegment\n\n\\b Fixed handling of absolute paths on POSIX\n\n\\b Made \\R{regdll}{RegDLL} load and unload a DLL exactly once to fix crashes with COM DLLs registration\n\n\\S2{} New/Changed Commands\n\n\\b Added /date switch to !define for definition of date and time constants\n\n\\b Added /x switch for \\R{file}{File} and \\R{reservefile}{ReserveFile} to exclude files and directories\n\n\\b Made \\R{file}{File}'s /r switch always search in subdirectories, even if the given path points to an existing directory\n\n\\S2{} Minor Changes\n\n\\b Added LIBRARY_SHELL_EXTENSION and LIBRARY_COM to \\R{library}{Library}\n\n\\b Added missing #include\n\n\\b Added NSIS_LZMA_COMPRESS_WHOLE to the script define list\n\n\\b Documentation fixes and improvements\n\n\\b Fixed an access violation in case of a script jump beyond the last entry\n\n\\b Fixed keyboard navigation in the instfiles page while installing\n\n\\b Fixed unpacking window not showing when \\R{abggradient}{BGGradient} is used\n\n\\b Fixed unused label warning in \\R{library}{Library.nsh}\n\n\\b Language file fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.72}: Fixed state of Cancel button on Finish page when used in installer and uninstaller, added a string for NSIS_CONFIG_COMPONENTPAGE_ALTERNATIVE\n\n\\b nsisconf.nsh was not always parsed when compiling using MakeNSISw\n\n\\H{v2.02} 2.02\n\nReleased on October 23rd, 2004\n\n\\S1{v2.02-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added lots of small usage examples to the documentation\n\n\\b Made \\R{jumps}{relative jumps} work with instructions that add multiple entries\n\n\\b Made the datablock optimizer much faster\n\n\\b Made the installer deny reboots while running (\\W{http://msdn.microsoft.com/en-us/library/aa376890}{WM_QUERYENDSESSION})\n\n\\b Made the \\R{reboot}{Reboot} command first quit and then reboot so everything is always cleaned-up\n\n\\S2{} New/Changed Commands\n\n\\b Added << and >> to \\R{intop}{IntOp}\n\n\\b Added \\R{geterrorlevel}{GetErrorLevel} and \\R{seterrorlevel}{SetErrorLevel}\n\n\\b Fixed \\R{copyfiles}{CopyFiles} usage checking problem\n\n\\b Made \\R{reboot}{Reboot} call \\R{onrebootfailed}{.onRebootFailed} and quit on failure instead of setting the error flag\n\n\\S2{} Minor Changes\n\n\\b Added Albanian language files\n\n\\b Added NSIS_CONFIG_COMPONENTPAGE_ALTERNATIVE configuration option which makes components only be toggled when the user clicks on the checkbox and makes \\R{onmouseoversection}{.onMouseOverSection} only be called when the user selects a component\n\n\\b Added some CppUnit tests\n\n\\b Both _?= and /D= now require a space before them so they can safely remove the space from $CMDLINE\n\n\\b Fixed a bug that caused the uninstaller CRC-check to fail if \\R{packhdr}{!packhdr} created a non-512-bytes-aligned exehead\n\n\\b Fixed a compiler crash caused by using \\R{getcurrentaddress}{GetCurrentAddress}\n\n\\b Fixed errors when using '\\R{file}{File} /r .' on Windows\n\n\\b Fixed gcc 3.4 compile errors\n\n\\b Fixed inconsistencies between error levels and the \\R{errorlevels}{documentation}\n\n\\b Fixed some minor memory leaks\n\n\\b Language file fixes\n\n\\b Makefile improvements\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.71}: Made the selected language only be saved if the installation was successful\n\n\\b Some code refactoring\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc}: Rewrote StrSort and fixed StrStrAdv. See the \\L{../Docs/StrFunc/StrFunc.txt}{readme} for a complete changelog\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Fixed some cases where the banner would not show on the foreground\n\n\\H{v2.01} 2.01\n\nReleased on September 24th, 2004\n\n\\S1{v2.01-rn} Release Notes\n\n\\b See \\R{build_posix}{Compiling NSIS Sources} for information about compiling makensis on POSIX platforms\n\n\\b NSIS doesn't create installers for Linux/Mac OS X etc., but you can compile Windows installers on these platforms\n\n\\b UpgradeDLL is still provided in UpgradeDLL.nsh for backwards compatibility\n\n\\S1{v2.01-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Compiler (makensis) supports POSIX platforms (Linux, *BSD, Mac OS X, etc.)\n\n\\b \\R{library}{New system} for DLL/TLB library setup\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{abgfont}{BGFont} that allows setting the background text font\n\n\\b Added SW_HIDE to \\R{execshell}{ExecShell}'s accepted show modes\n\n\\b \\R{rmdir}{RMDir} can now be used with both /r and /REBOOTOK at the same time\n\n\\b Extended maximum binary data for \\R{writeregbin}{WriteRegBin} to 3 * NSIS_MAX_STRLEN\n\n\\b Added \\R{execute}{!execute}\n\n\\S2{} Minor Changes\n\n\\b LZMA exehead is now 34KB and should also decompress faster\n\n\\b Windows 95 (OSR2)/98/ME no longer see drive free space capped to 2GB\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern User Interface}: New orange theme by MoNKi\n\n\\b Speedup background gradient painting\n\n\\b \\L{../Examples/LogicLib.nsi}{LogicLib} 2.5: Added AndIf, AndUnless, OrIf, OrUnless. Avoids unused variable warnings by requiring !defines before using certain features.\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc}: Added support for uninstaller, some fixes and improvements. See the \\L{../Docs/StrFunc/StrFunc.txt}{readme} for a complete changelog\n\n\\b The plug-ins folder is properly removed when the system is rebooted\n\n\\b \\R{setoutpath}{SetOutPath} \"-\" works again\n\n\\b Fixed a bug which made plug-ins that didn't have lower case extension not be found\n\n\\b Fixed a bug that caused directories with drives that had their current directory set to an invalid directory to not be accepted in the directory selection page\n\n\\b Fixed a crash in makensis caused by defining a macro in a file included by another macro\n\n\\b makensis shows meaningful errors for compression errors instead of just magic numbers\n\n\\b Fixed a bug with \\R{aallowrootdirinstall}{AllowRootDirInstall} used along with \\R{ainstalldirregkey}{InstallDirRegKey} that caused the directory in the registry to be ignored\n\n\\b Fixed \\R{FileRead}{FileRead} setting the error flag when a null character is the first character it reads\n\n\\b Fixed a bug which caused the background gradient to paint slowly\n\n\\b \\R{file}{File} paths relative to the root folder work again\n\n\\b Added \\L{../Include/Colors.nsh}{Colors.nsh}\n\n\\b Made Times New Roman default font for the background text because it should always have support for the locale's language\n\n\\b Fixed compilation of NSISdl under VS.NET\n\n\\b \\R{setctlcolors}{SetCtlColors} /BRANDING wasn't working right, if just one of the background or text color were specified\n\n\\b Language file fixes and improvements\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/System/System.html}{System}: New, hopefully more informative, documentation; fixed some bugs\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Added getWindow to allow greater control over the banner window\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.41}: Bitmaps are now automatically centered, fixed a bug which prevented enabling the next button from the leave function of InstallOptions pages, fixed a rare freeze\n\n\\b Zip2Exe 0.32: Fixed codepage problems\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Always create a valid input handle, fixed a problem when called from a path with spaces\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Close all open file handles when one of them fail to open\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: Added /NOIEPROXY (based on memph's code)\n\n\\H{v2.0} 2.0\n\nReleased on February 7th, 2004\n\n\\S1{v2.0-rn} Release Notes\n\n\\b Finnish, Bulgarian and Thai language files are outdated and do not contain all needed translations\n\n\\S1{v2.0-cl} Changelog\n\n\\S2{} Changes from 1.98\n\n\\b \\R{langs}{Multiple languages in one installer support} (with RTL support)\n\n\\b \\R{plugindlls}{Easier plug-in system}\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern User Interface} (optional)\n\n\\b \\W{http://www.7-zip.org/}{LZMA} compression which provides installers 20% smaller than bzip2\n\n\\b \\R{pages}{Easier paging system} (no more .onNextPage, .onPrevPage)\n\n\\b Components are presented as a tree which allows sub components\n\n\\b \\R{varuser}{User variables} ($VARNAME)\n\n\\b \\R{aicon}{Icon} and \\R{auninstallicon}{UninstallIcon} support any color depth and sizes, not just 32x32x16\n\n\\b \\R{acheckbitmap}{CheckBitmap} supports any color depth\n\n\\b Improved large files handling\n\n\\b \\R{alicensedata}{License data} can be RTF\n\n\\b CHM documentation for easy browsing\n\n\\b \\R{silent}{Better silent support}\n\n\\b New include files for easier scripting: \\L{../Examples/LogicLib.nsi}{LogicLib}, \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} and \\L{../Include/Sections.nsh}{Sections}\n\n\\b Improved plug-ins: \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}, \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl} and \\L{../Docs/Splash/splash.txt}{Splash}\n\n\\b New plug-ins: \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}, \\L{../Docs/Banner/Readme.txt}{Banner}, \\L{../Docs/BgImage/BgImage.txt}{BgImage}, \\L{../Docs/Dialer/Dialer.txt}{Dialer}, \\L{../Examples/languages.nsi}{LangDLL}, \\L{../Docs/Math/Math.txt}{Math}, \\L{../Docs/nsExec/nsExec.txt}{nsExec}, \\L{../Docs/StartMenu/Readme.txt}{StartMenu}, \\L{../Docs/System/System.html}{System}, \\L{../Examples/UserInfo/UserInfo.nsi}{UserInfo} and \\L{../Docs/VPatch/Readme.html}{VPatch}\n\n\\b New and improved utilities: \\L{../Docs/makensisw/Readme.txt}{MakeNSISw}, NSIS Menu (NSIS.exe), NSIS Update (Bin\\\\NSIS Update.exe) and zip2exe (Bin\\\\zip2exe.exe)\n\n\\b New commands: \\R{addplugindir}{!addplugindir}, \\R{echo}{!echo}, \\R{ifmacrodef}{!ifmacrodef}, \\R{ifmacrondef}{!ifmacrondef}, \\R{verbose}{!verbose}, \\R{aaddbrandingimage}{AddBrandingImage}, \\R{asetallowskipfiles}{AllowSkipFiles}, \\R{achangeui}{ChangeUI}, \\R{acheckbitmap}{CheckBitmap}, \\R{createfont}{CreateFont}, \\R{adirvar}{DirVar}, \\R{adirverify}{DirVerify}, \\R{enablewindow}{EnableWindow}, \\R{afilebufsize}{FileBufSize}, \\R{flushini}{FlushINI}, \\R{sgetcurinsttype}{GetCurInstType}, \\R{getdlgitem}{GetDlgItem}, \\R{getinstdirerror}{GetInstDirError}, \\R{ifabort}{IfAbort}, \\R{ifsilent}{IfSilent}, \\R{initpluginsdir}{InitPluginsDir}, \\R{sinsttypegettext}{InstTypeGetText}, \\R{sinsttypesettext}{InstTypeSetText}, \\R{langstring}{LangString}, \\R{alicensebkcolor}{LicenseBkColor}, \\R{alicenseforceselection}{LicenseForceSelection}, \\R{licenselangstring}{LicenseLangString}, \\R{loadlanguagefile}{LoadLanguageFile}, \\R{lockwindow}{LockWindow}, \\R{page}{Page}, \\R{pageex}{PageEx}, \\R{reservefile}{ReserveFile}, \\R{sectiongetinsttypes}{SectionGetInstTypes}, \\R{ssectiongetsize}{SectionGetSize}, \\R{sectionsetinsttypes}{SectionSetInstTypes}, \\R{ssectionsetsize}{SectionSetSize}, \\R{setbrandingimage}{SetBrandingImage}, SetCompressionLevel, \\R{asetcompressor}{SetCompressor}, \\R{asetcompressordictsize}{SetCompressorDictSize}, \\R{setctlcolors}{SetCtlColors}, \\R{ssetcurinsttype}{SetCurInstType}, SetPluginUnload, \\R{setsilent}{SetSilent}, \\R{showwindow}{ShowWindow}, SubSection (replaced by \\R{ssectiongroup}{SectionGroup}), SubSectionEnd (replaced by \\R{ssectiongroupend}{SectionGroupEnd}), \\R{var}{Var}, \\R{viaddversionkey}{VIAddVersionKey}, \\R{viproductversion}{VIProductVersion} and \\R{axpstyle}{XPStyle}\n\n\\b Removed commands: DirShow, DisabledBitmap, EnabledBitmap and SectionDivider\n\n\\b All this and a smaller overhead! =)\n\n\\b A lot more... See below for more information\n\n\\S2{} Changes from RC4\n\n\\b Command line parser ignored any switches after tokens that are not switches\n\n\\b Last part of the path specified in \\R{ainstalldir}{InstallDir} was appended even if selected folder name was the same\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.70}: Improved documentation, new Init custom function for Welcome and Finish page\n\n\\b Added \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} by deguix\n\n\\b Updated and fixed language files\n\n\\b Updated, fixed and improved documentation\n\n\\H{v2.0rc4} 2.0 Release Candidate 4\n\nReleased on February 2nd, 2004\n\n\\S1{v2.0rc4-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed MBCS mishandling in exehead, InstallOptions and nsExec\n\n\\S2{} Minor Changes\n\n\\b Language files updates and fixes\n\n\\b Fixed logging (NSIS_CONFIG_LOG)\n\n\\b Fixed compile errors caused by removing some config.h options\n\n\\b NSIS compiles without PSDK again\n\n\\b Documentation fixes\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: All potential and rare crashes should be completely fixed now\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: Fixed a rare crash related to ListItems and a small memory leak when using ValidateText\n\n\\H{v2.0rc3} 2.0 Release Candidate 3\n\nReleased on January 26th, 2004\n\n\\S1{v2.0rc3-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed some bugs with LZMA/bzip2 and non-solid compression\n\n\\b Fixed a bug that caused escaping not to be ignored on extended !define lines\n\n\\b Language files updates and fixes\n\n\\b Fixed installer crash when certain language strings were not referenced in all languages\n\n\\b Some new and improved graphics\n\n\\b Made CreateShortcut case insensitive when parsing hot key\n\n\\b Some documentation improvements and fix-ups\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.69}: Made all uninstaller pages work without installer pages and fixed top text on uninstaller license page\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed resize bug, fixed some UI issues in the settings dialog\n\n\\b NSIS Update: Improved UI\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: Fixed minor problems with the new NOTIFY flag\n\n\\H{v2.0rc2} 2.0 Release Candidate 2\n\nReleased on January 5th, 2004\n\n\\S1{v2.0rc2-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Set focus to the main control in each page to ease keyboard control (plug-ins too)\n\n\\b LangStrings and user variables limit is now 16383 and is enforced\n\n\\b Fixed control colors set using \\R{setctlcolors}{SetCtlColors} not changing when the system colors were changed\n\n\\b Log window now responds to the context menu key\n\n\\b Fixed a bug which caused beeping when the space key is hit on the components tree\n\n\\b Added code to prevent weird usage of WM_COMMAND which can cause weird behavior\n\n\\b Fixed compile errors when NSIS_CONFIG_COMPONENTPAGE, NSIS_CONFIG_PLUGIN_SUPPORT or NSIS_SUPPORT_HWNDS are not defined\n\n\\b More language files updated to the latest version\n\n\\b Fixed CHM's script errors\n\n\\b Documentation improvements\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.4}: NOTIFY for link, drop list and list box; UI fixes and improvements. See IO's \\L{../Docs/InstallOptions/Changelog.txt}{change log} for a complete list\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Improved user interface, added support for named symbol sets and fixed best compressor selector\n\n\\H{v2.0rc1} 2.0 Release Candidate 1\n\nReleased on December 27th, 2003\n\n\\S1{v2.0rc1-rn} Release Notes\n\n\\b Trying the LZMA compression method for your installer is recommended. It often gives a 20% better compression ratio.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.68}: The setting to change the title size on the Welcome page and Finish page has been changed\n\n\\S1{v2.0rc1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b LZMA compression support. Added \\R{asetcompressordictsize}{SetCompresssorDictSize}.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.68}: New settings for extra space for title and text on Welcome page and Finish page, improved handling of verbose settings, language file string for uninstaller reboot information, more\n\n\\b Shell folders are now detected using shell API functions and not the registry. This is the recommended method by Microsoft. New constants have been added in the process ($FONTS, $SENDTO and more...). See \\k{varconstant} for more details.\n\n\\b Added \\L{../Examples/LogicLib.nsi}{LogicLib} to distribution (easier conditional execution etc.)\n\n\\b Added \\R{adirverify}{DirVerify} and \\R{getinstdirerror}{GetInstDirError} to allow custom error checking when the installation directory is invalid or the drive does not have enough space\n\n\\b Support for reading environmental variables at compile time: \\R{compenvvar}{$%envVarName%}\n\n\\b Added /SD parameter for \\R{messagebox}{MessageBox}. Allows to set default for silent installers.\n\n\\b New conditional compilation options: \\R{ifmacrodef}{!ifmacrodef} and \\R{ifmacrondef}{!ifmacrondef}.\n\n\\b New sections macros for mutually exclusive section selection\n\n\\b Improved RTL support by adding WS_EX_RTLREADING wherever possible\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.3}: Added new control type \"Button\", added new flag \"NOTIFY\", added new flag \"NOWORDWRAP\" for multi-line text boxes, reduced size down to 12K\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: More options to set the compression method\n\n\\b Zip2Exe 0.31: Fixed compression setting, LZMA compression support\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch 2.1}: Better error handling and exit code for GenPat\n\n\\H{v2.0b4} 2.0 Beta 4\n\nReleased on November 19th, 2003\n\n\\S1{v2.0b4-rn} Release Notes\n\n\\b The /LANG parameter is no longer available for any text setting instructions. You must use a \\R{langstring}{LangString} if you want to make a certain text multilingual. This means you can also set one text for all languages. To make the license data multilingual you should use \\R{licenselangstring}{LicenseLangString}.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.67}: Because of the new syntax for pages, renaming of settings and variable names etc., you have to make some changes to your scripts, see the \\L{../Docs/Modern UI/Readme.html}{Modern UI Readme} for details.\n\n\\b \\R{page}{Custom Pages} now have a leave function. As this parameter is placed before the caption you have to add another \"\" empty string for the title to work.\n\n\\b \\R{onselchange}{.onSelChange} is no longer called when the components page is created.\n\n\\b The icons folder has been renamed to Graphics and was reorganized. If you were using any files from Contrib\\\\Icons in your script, you should update it to point to the new image or icon path.\n\n\\b UpgradeDLL has been changed, it's \\e{highly recommend} that you include the new version in your script using \\c{!include \"UpgradeDLL.nsh\"} instead of the old one.\n\n\\S1{v2.0b4-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b CHM documentation - searchable and comes with an index\n\n\\b User variables ($VARNAME) that can be declared with the \\R{var}{Var} command\n\n\\b Support for all pages in both installer and uninstaller. Components, directory and license pages can be used for the uninstaller\n\n\\b Improved large files handling (way lower requirements to compile a 2GB installer now)\n\n\\b Full support for RTL languages, including support for LTR and RTL languages in one installer\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.67}: New system & syntax for pages, settings (support for multiple pages of the same type, page specific settings, more customization options etc.), Welcome/Finish pages for uninstaller, \\R{alicenseforceselection}{LicenseForceSelection} support, new options for Finish page / language selection dialog, fixes, more\n\n\\b Extraction progress\n\n\\b No more unprocessed strings, variables can be used everywhere\n\n\\b Leave function for custom \\R{pages}{pages}: Input on InstallOptions pages can be validated using script code\n\n\\b Interface improvements: Better ClearType support, no more flickering\n\n\\b \\R{onmouseoversection}{OnMouseOver text} is only displayed when mouse over section\n\n\\b NLF language files (v6): language specific fonts, RTL and more strings\n\n\\b Inner LangStrings can be used in the script\n\n\\b No more /LANG, only LangStrings - easier to set one string to all languages\n\n\\b LangStrings are no longer installer/uninstaller specific (no un.)\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{pageex}{PageEx}, \\R{pagecallbacks}{PageCallbacks} and \\R{adirvar}{DirVar} - it's now a lot easier to add the same page type twice\n\n\\b Added \\R{afilebufsize}{FileBufSize}\n\n\\b Added \\R{viaddversionkey}{VIAddVersionKey}: add version information resource to the installer\n\n\\b Added \\R{asetallowskipfiles}{AllowSkipFiles}: set whether the user should be able to skip a file when overwriting failed\n\n\\b Added \\R{alicenseforceselection}{LicenseForceSelection}: checkbox or radio buttons on license page to let user agree with license or not\n\n\\b Added \\R{ssectionsetsize}{SectionSetSize}, \\R{ssectiongetsize}{SectionGetSize}, \\R{ssetcurinsttype}{SetCurInstType} and \\R{sgetcurinsttype}{GetCurInstType}\n\n\\b Replaced SetBkColor with \\R{setctlcolors}{SetCtlColors} which can set text color too\n\n\\b Added \\R{ifsilent}{IfSilent} and \\R{setsilent}{SetSilent} to allow better /S interaction\n\n\\b Added support for standard predefines: $\\{__DATE__\\}, $\\{__TIME__\\}, $\\{__TIMESTAMP__\\}, $\\{__FILE__\\}, $\\{__LINE__\\}\n\n\\b Added ifdiff and lastusd for \\R{asetoverwrite}{SetOverwrite}\n\n\\b /o Switch for \\R{ssection}{Section} provides ability to unselect the section by default\n\n\\b New parameter for DirText to set the browse dialog text\n\n\\b Added \\R{rmdir}{RMDir /REBOOTOK}: remove folders on reboot\n\n\\b \\R{ainsttype}{InstType} /NOCUSTOM and /COMPONENTSONLYONCUSTOM work together\n\n\\b Added base_dir for \\R{gettempfilename}{GetTempFileName}\n\n\\S2{} Minor Changes\n\n\\b RO sections can now be in \\R{ainsttype}{InstTypes} too (defaults to old behavior)\n\n\\b Increased limit of InstTypes to 32\n\n\\b Improved macros & functions: UpgradeDLL, GetParent, GetParameters. Using the new versions is recommended.\n\n\\b Fixed SetOutPath not setting current directory if the directory didn't exist before\n\n\\b Components tree: fixed problems with sub-sections with RO sections as children, SF_EXPAND now refreshes the components tree and added SF_PSELECTED for partially selected sub-sections\n\n\\b Improved \\R{aaddbrandingimage}{AddBrandingImage}: doesn't depend on the UI, can set image on the bottom and on the right, support for custom padding value\n\n\\b Better installation directory verification\n\n\\b Fixed all known problems with temporary files and directories\n\n\\b Documentation fixes\n\n\\b Minor bug fixes\n\n\\b Code clean-ups and some more comments\n\n\\b More...\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW 2.0}: UI to define symbols, easy access to recent scripts, toolbar and more\n\n\\b Zip2Exe 0.3: based on header files, improved interface, Modern UI support, new script code, improved folder detection\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.2}: added LINK control, added EXTENDEDSELECT flag for list boxes which replaces MULTISELECT that now acts exactly as the real style flag ([double] click turns on or off selection), fixes\n\n\\b BgImage plug-in stability fixes\n\n\\b Added vPatch: patch generator and plug-in that applies the patches\n\n\\b Banner plug-in improvements: responds to messages and some new /set tricks by brainsucker\n\n\\b AdvSpalsh plug-in improvements: smaller, better transparency support and a possible bug fix\n\n\\b System plug-in improvements: Unicode, GUID and COM support \n\n\\b nsExec plug-in improvements: ability to run 16 bit code and tabs to spaces conversion\n\n\\b Math plug-in\n\n\\b Delphi unit for NSIS plug-ins\n\n\\H{v2.0b3} 2.0 Beta 3\n\nReleased on March 16th, 2003\n\n\\b Modern UI 1.63: Header bitmap support, new defines to change the description area, single macro for language selection dialog, more!\n\n\\b New tutorial in the documentation\n\n\\b define_if_last in \\R{page}{Page} command also works when a define has not been specified for all \\R{page}{Page} commands.\\\\<br\\\\>This fixes the problem with the Modern UI \"Click Next\" / \"Click Install\" texts.\n\n\\b Added \\R{sectionsetinsttypes}{SectionSetInstTypes} and \\R{sectiongetinsttypes}{SectionGetInstTypes}\n\n\\b \\R{reboot}{Reboot} command does not force a reboot anymore (allows the user to save work)\n\n\\b !if[n]def/!else fixes\n\n\\b \\R{logset}{LogSet} on now really starts logging\n\n\\b Cancel button available on all pages after the instfiles page but the last page unless /ENABLECANCEL was used in its \\R{page}{Page} command\n\n\\b License page: No more limit on RTF size\n\n\\b LangDLL: Option to auto-count number of languages, shell font support\n\n\\b \\R{page}{Page} and \\R{uninstpage}{UninstPage} can not be used inside sections/functions\n\n\\b \\R{createdirectory}{CreateDirectory} now uses the error flag\n\n\\b \\R{enumregkey}{EnumRegKey}/Value output_var check fixed\n\n\\b Updated translations\n\n\\b Dreaded BSOD after plug-ins enumeration finally banished\n\n\\b Minimize button and \\R{abggradient}{BGGradient} and BGImage compatibility fixes\n\n\\b \\R{writeinistr}{WriteINIStr} with empty value works again\n\n\\b Added \\R{flushini}{FlushINI}\n\n\\H{v2.0b2} 2.0 Beta 2\n\nReleased on February 26th, 2003\n\n\\b NSIS Menu: links to all NSIS utilities, documentation and websites\n\n\\b NSIS Update: check for new releases, download latest development files\n\n\\b Dialer plugin to connect to the internet\n\n\\b Improved filename validation\n\n\\b VC7 compiler compatibility issues fixed\n\n\\b \\R{createdirectory}{CreateDirectory} sets error flag\n\n\\b InstallOptions: INI File State value fixed\n\n\\b Updated translations\n\n\\b Minor fixes\n\n\\H{v2.0b1} 2.0 Beta 1\n\nReleased on February 9th, 2003\n\n\\b User interface improvements: better order/grouping of controls, button selection problems fixed, added minimize box, transparent \\R{abrandingtext}{BrandingText}\n\n\\b \\R{langstring}{LangString} improvements: can be used before they have been defined, warning if not present in all language tables\n\n\\b New version of the Modern User Interface with UI improvements, bugfixes and some small new features\n\n\\b InstallOptions 2.0 with support for custom font and DPI settings, groupboxes, grouped controls, lots of bugfixes etc.\n\n\\b No more random compression ratios\n\n\\b \\R{setoutpath}{SetOutPath} now sets the working directory\n\n\\b File names are validated, directory given by the user will now always work\n\n\\b $QUICKLAUNCH now works with \\R{setshellvarcontext}{SetShellVarContext} all\n\n\\b Automatically appended directory name in the directory selection dialog will no longer contain squares if not all characters are ASCII.\n\n\\b Fixed a bug with remote drives and available space (\\\\\\\\remote\\\\drive)\n\n\\b Plug-in function's names are now case insensitive\n\n\\b Fixed a bug with specifying \\R{aicon}{Icon} twice\n\n\\b Include dirs (!addincludedir)\n\n\\b On leave function for pages\n\n\\b Installers can now really contain more than one branding image\n\n\\b All !if/!else/!endif problems should be solved now\n\n\\b SetFont \"MS Shell Dlg\" adds the DS_SHELLFONT style\n\n\\b Win9x rename on reboot now also works when the destination file does not exist\n\n\\b \\R{deleteregkey}{DeleteRegKey} works on default value\n\n\\b nsExec can be called from an installer executed by CreateProcess\n\n\\b \\R{writeuninstaller}{WriteUninstaller} sets error code\n\n\\b Banner.dll compatible with Modern UI\n\n\\b Fixed focus problems in MakeNSISw\n\n\\b Updated and new translations\n\n\\b Some new bitmaps for the MUI by Virtlink\n\n\\b Faster and better MakeNSISw integration\n\n\\b \\R{detect.netframework}{New .NET Framework detection function}\n\n\\b Minor bugfixes\n\n\\b Code clean-ups (compiles on VC7)\n\n\\H{v2.0b0} 2.0 Beta 0\n\nReleased on December 6th, 2002\n\n\\b New paging system\n\n\\b Added \\R{page}{Page} and  \\R{uninstpage}{UninstPage}\n\n\\b Removed .onNextPage, .onPrevPage, .onInitDialog\n\n\\b New easier version of the Modern User Interface with better multilanguage support, InstallOptions integration, welcome and finish page etc.\n\n\\b Custom pages no longer flicker when created\n\n\\b Added accelerator keys\n\n\\b Added \\R{langstring}{LangString} and LangStringUP for user defined multilingual strings\n\n\\b Added support for transparent check marks\n\n\\b Added InitPluginsDir\n\n\\b Renamed nsisconf.nsi to nsisconf.nsh\n\n\\b Added CreateShortcut comment/description parameter\n\n\\b Splash.exe is now a plugin (splash.dll)\n\n\\b Added new plugins: System, AdvSplash, nsExec, UserInfo, BgImage, Banner and StartMenu\n\n\\b !ifdef and friends can now be used in macros\n\n\\b \\R{sendmessage}{SendMessage} can send strings (put \\cw{STR:} before a param) and supports timeouts\n\n\\b Right mouse button \"Copy to clipboard\" context menu for the Details window\n\n\\b Plugin syntax now requires dll name, e.g. dll::func not just func\n\n\\b Licence text receives initial focus (page up & down work immediately, return key still works)\n\n\\b Made Win9x move/delete on reboot support proper and function like on Win2k\n\n\\b Now always loads RichEdit v2 if present (links work on Win9x)\n\n\\b \\R{deleteregkey}{DeleteRegKey} now complains if given a third parameter (other than /ifempty)\n\n\\b \\R{regdll}{RegDLL} now works with DLLs dependent on DLLs from the same directory\n\n\\b $\\{LANG_langName\\} defined as the language id when loading a NLF\n\n\\b Fixed a few bugs that caused the installer to load slower than before\n\n\\b Uninstall can now get command line parameters too\n\n\\b Added ReserveFile\n\n\\b Added ExDLL.h\n\n\\b Included makensisw 1.9 (lots of changes)\n\n\\b Updated InstallOptions\n\n\\b Updated ZIP2EXE\n\n\\b Updated HTTP download plugin, NSIS-dl (timeout added, better proxy detection)\n\n\\b A lot of new language files\n\n\\b A lot of new icons and check marks\n\n\\b Changed section flags values\n\n\\b \\R{sectionsetflags}{SectionSetFlags} can now set bold too\n\n\\b \\R{sectionsetflags}{SectionSetFlags} now works in silent installers too\n\n\\b SectionSetName for sub sections doesn't need '-' in front of the name\n\n\\b Added SetPluginUnload\n\n\\b Hidden section can now use \\R{ssectionin}{SectionIn} too\n\n\\b \\R{file}{File} /nonfatal switch added\n\n\\b Plugins no longer add size to their containing section\n\n\\b Defines can now be used inside define names ($\\{bla$\\{blo\\}\\})\n\n\\b New docs format (WOOHA!)\n\n\\b EXE header size a lot smaller, 33.5KB for bzip2 and 34KB for zlib\n\n\\b Lots of other bugs fixed...\n\n\\H{v2.0a7} 2.0 Alpha 7\n\nReleased on August 29th, 2002\n\n\\b Can now select the language from .onInit ($LANGUAGE is a variable)\n\n\\b Added CreateFont\n\n\\b Added \\R{onmouseoversection}{.onMouseOverSection}\n\n\\b Added .onInitDialog and un.onInitDialog\n\n\\b Added SetStaticBkColor\n\n\\b Disabled UseOuterUIItem\n\n\\b SendMessage WM_SETTEXT treats lParam as a string and not a number\n\n\\b \\R{copyfiles}{CopyFiles} script message no longer always prints (silent)\n\n\\b Custom install type text can now be changed\n\n\\b \\R{achangeui}{ChangeUI} can now change IDD_VERIFY\n\n\\b Default license color now fits the user system\n\n\\b Summary reports the right number of required sections\n\n\\b Checkbox is only required in IDD_DIR if logging is enabled\n\n\\b Not using /LANG now really causes the script compiler to use the last used language\n\n\\b Fixed a bug with MBCS and the uninstaller text\n\n\\b MBCS to Unicode and Unicode to MBCS conversion bugs fixed\n\n\\b Fixed a bug that caused RTF not to show on Windows 9x\n\n\\b Added a dialog that shows up if compress whole is used and initial decompressing lasts longer than a second\n\n\\b Updated to InstallOptions 1.3\n\n\\b MakeNSISw 1.7 included\n\n\\b Added modern UI by Joost Verburg (Examples\\\\Modern UI)\n\n\\b Added new full color icons by adni18\n\n\\b Added Dutch, Korean, Russian, Swedish and Traditional Chinese language files\n\n\\b Updated Spanish language file version (thanks to LsMoNKi)\n\n\\b Added /TRIM(LEFT|RIGHT|CENTER) for BrandingText\n\n\\b EXE header size down to 36.5KB\n\n\\b Added yi-pixel.ico and yi-pixel-uninstall.ico by Jan T. Sott\n\n\\b Fixed a bug with macros at the end of the file\n\n\\b Sub-sections can now have defined names too\n\n\\b Added LangDLL.dll plugin\n\n\\b \\R{callinstdll}{CallInstDLL} /NOUNLOAD added (works on plugin calls too)\n\n\\H{v2.0a6} 2.0 Alpha 6\n\nReleased on August 10th, 2002\n\n\\b Fixed two bugs with the plug-in mechanism\n\n\\b Fixed infinite loop bug\n\n\\H{v2.0a5} 2.0 Alpha 5\n\nReleased on August 9th, 2002\n\n\\b Added UseOuterUIItem\n\n\\b Enhanced \\R{achangeui}{ChangeUI}\n\n\\b Enhanced SetDlgItemText\n\n\\b Added one-section.nsi example file\n\n\\b Optimized Ximon's code for plug-in DLLs (back to 37KB)\n\n\\b If default user language doesn't fit exactly, will try to find primary language match\n\n\\b Fixed some strings that got replaced (space available and required etc.)\n\n\\b Compiles without MS Platform SDK\n\n\\b Included Spanish.nlf\n\n\\b Included MagicLime.exe by snowchyld\n\n\\H{v2.0a4} 2.0 Alpha 4\n\nReleased on August 5th, 2002\n\n\\b Added automatic detection, packing, unpacking and deletion of plugin dlls\n\n\\b Added simplified calling syntax for plugin dlls\n\n\\b Added PluginDir\n\n\\H{v2.0a3} 2.0 Alpha 3\n\nReleased on August 4th, 2002\n\n\\b Added \\R{loadlanguagefile}{LoadLanguageFile}\n\n\\b Added $LANGUAGE\n\n\\b Added /LANG option to string setters (\\R{aname}{Name}, \\R{acaption}{Caption}, etc.)\n\n\\b 'LogSet on' now builds a log file if not already created\n\n\\H{v2.0a2} 2.0 Alpha 2\n\nReleased on July 31st, 2002\n\n\\b Added $\\{NSISDIR\\}\n\n\\b Added \\R{axpstyle}{XPStyle}\n\n\\b Added \\R{asetfont}{SetFont}\n\n\\b Added \\R{achangeui}{ChangeUI}\n\n\\b Added AddBrandingImage, and \\R{setbrandingimage}{SetBrandingImage}\n\n\\b Added  \\R{asetcompressor}{SetCompressor} (no more makensis-bz2.exe)\n\n\\b Added \\R{alicensebkcolor}{LicenseBkColor}\n\n\\b 'SpaceTexts none' now causes no space texts to appear\n\n\\b \\R{aicon}{Icon} and \\R{auninstallicon}{UninstallIcon} now support icons of any type\n\n\\b \\R{acheckbitmap}{CheckBitmap} now support bitmaps with any color table/depth\n\n\\b Unused resources are removed before writing out the installer\n\n\\b Documented \\R{error}{!error} and \\R{warning}{!warning}\n\n\\b Added \\R{echo}{!echo} and \\R{verbose}{!verbose}\n\n\\b Added force option for \\R{acrccheck}{CRCCheck}\n\n\\b Updated to Makensisw 1.6\n\n\\b Updated to InstallOptions 1.2\n\n\\b Installer can now be compressed using UPX\n\n\\b A hint is shown if a line is longer than the detail window\n\n\\b Modern style folder select dialog\n\n\\b License data can now be RTF\n\n\\b \\R{awindowicon}{WindowIcon} is now handled in the compiler\n\n\\b Removed debug version (it never worked anyway)\n\n\\b Faster compile time (WIN32_LEAN_AND_MEAN)\n\n\\H{v2.0a1} 2.0 Alpha 1\n\nReleased on July 9th, 2002\n\n\\b Added expand node option to \\R{ssection}{Section} and SubSection\n\n\\b Added preserve file attribute option to \\R{file}{File} command\n\n\\b Copy-All bug fix in Makensisw\n\n\\b Added NSISDIR to the define list\n\n\\b Reorganized NSIS directory structure\n\n\\H{v2.0a0} 2.0 Alpha 0\n\nReleased on May 22nd, 2002\n\n\\b TreeView component list (care of Jeff Doozan)\n\n\\b No more SectionDivider, but SubSection and SubSectionEnd.\n\n\\b No more EnabledBitmap/DisabledBitmap, just \\R{acheckbitmap}{CheckBitmap}. (with tons of button states)\n\n\\b Bugfixes of brokenness.\n\n\\b Added ! for \\R{ssection}{Section}/SubSection to make bold.\n\n\\b Made config.h have hacks for easier building for me. :)\n\n\\H{cl-older} Older Versions\n\n\\W{http://wayback.archive.org/web/20100820151646/http://www.nullsoft.com/free/nsis/version-history.html}{NSIS 1.x version history}\n", "/*\r\n * build.cpp\r\n * \r\n * This file is a part of NSIS.\r\n * \r\n * Copyright (C) 1999-2023 Nullsoft and Contributors\r\n * \r\n * Licensed under the zlib/libpng license (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * \r\n * Licence details can be found in the file COPYING.\r\n * \r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.\r\n *\r\n * Unicode support added by Jim Park -- 08/07/2007\r\n */\r\n\r\n#include \"tchar.h\"\r\n#include \"Platform.h\"\r\n#include <stdio.h>\r\n#include \"exehead/config.h\"\r\n\r\n#include <nsis-version.h>\r\n\r\n#include \"build.h\"\r\n#include \"util.h\"\r\n#include \"fileform.h\"\r\n#include \"writer.h\"\r\n#include \"crc32.h\"\r\n#include \"manifest.h\"\r\n#include \"icon.h\"\r\n#include \"utf.h\" // For NStream\r\n#include \"BinInterop.h\"\r\n\r\n#include \"exehead/api.h\"\r\n#include \"exehead/resource.h\"\r\n\r\n#include <stdexcept>\r\n\r\n#include \"ResourceEditor.h\"\r\n#include \"DialogTemplate.h\"\r\n#include \"ResourceVersionInfo.h\"\r\n#include \"tstring.h\"\r\n\r\n#include <stdio.h>\r\n#include <stdarg.h>\r\n#ifndef _WIN32\r\n#  include <locale.h>\r\n#  include <unistd.h>\r\n#  include <limits.h>\r\n#  include <stdlib.h>\r\n#endif\r\n\r\n#include <cassert> // for assert\r\n\r\n#define RET_UNLESS_OK( function_rc ) do { \\\r\n  int rc = (function_rc); \\\r\n  if ( rc != PS_OK) \\\r\n    return rc; \\\r\n} while (false)\r\n\r\nusing namespace std;\r\n\r\nnamespace { // begin anonymous namespace\r\n\r\nbool isSimpleChar(TCHAR ch)\r\n{\r\n  return (ch == _T('.') ) || (ch == _T('_') ) || (ch >= _T('0') && ch <= _T('9')) || (ch >= _T('A') && ch <= _T('Z')) || (ch >= _T('a') && ch <= _T('z'));\r\n}\r\n\r\n} // end of anonymous namespace\r\n\r\nnamespace MakensisAPI {\r\n#ifdef _WIN64\r\n  const TCHAR* SigintEventNameFmt = _T(\"makensis win32 sigint event %Iu\"); // %u is the notify HWND, this is to make sure we abort the correct instance\r\n#else\r\n  const TCHAR* SigintEventNameFmt = _T(\"makensis win32 sigint event %u\");\r\n#endif\r\n  const TCHAR* SigintEventNameLegacy = _T(\"makensis win32 signint event\"); // \"sigNint\" typo is part of the API now and cannot be changed\r\n}\r\n\r\nconst WORD DefaultPEDllCharacteristics = IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE|IMAGE_DLLCHARACTERISTICS_NO_SEH|IMAGE_DLLCHARACTERISTICS_NX_COMPAT|IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE; //forums.winamp.com/showthread.php?t=344755\r\n\r\nvoid CEXEBuild::define(const TCHAR *p, const TCHAR *v)\r\n{\r\n  definedlist.add(p,v);\r\n}\r\n\r\nCEXEBuild::~CEXEBuild()\r\n{\r\n  free_loaded_icon(installer_icon);\r\n  free_loaded_icon(uninstaller_icon);\r\n\r\n  delete [] m_exehead;\r\n\r\n  int nlt = lang_tables.getlen() / sizeof(LanguageTable);\r\n  LanguageTable *nla = (LanguageTable*)lang_tables.get();\r\n\r\n  for (int i = 0; i < nlt; i++)\r\n    DeleteLangTable(nla+i);\r\n\r\n  if (postbuild_cmds) postbuild_cmds->delete_all();\r\n  if (postubuild_cmds) postubuild_cmds->delete_all();\r\n}\r\n\r\nCEXEBuild::CEXEBuild(signed char pponly, bool warnaserror) :\r\n  preprocessonly(pponly),\r\n  m_exehead(0),\r\n  m_exehead_size(0)\r\n{\r\n  set_verbosity(3);\r\n  if (warnaserror) diagstate.set_warning_as_error();\r\n\r\n  curlinereader=0;\r\n  curfilename=0, linecnt=0;\r\n  cur_ifblock=NULL;\r\n  last_line_had_slash=0;\r\n  inside_comment=false;\r\n  multiple_entries_instruction=0;\r\n\r\n  build_include_depth=0;\r\n\r\n  has_called_write_output=false;\r\n\r\n  ns_func.add(_T(\"\"),0); // make sure offset 0 is special on these (i.e. never used by a label)\r\n  ns_label.add(_T(\"\"),0);\r\n\r\n  definedlist.add(_T(\"NSIS_VERSION\"), NSIS_VERSION);\r\n  definedlist.add(_T(\"NSIS_PACKEDVERSION\"), NSIS_PACKEDVERSION);\r\n\r\n  m_target_type=TARGET_X86UNICODE;\r\n#ifdef _WIN32\r\n  if (sizeof(void*) > 4) m_target_type = TARGET_AMD64; // BUGBUG: scons 'TARGET_ARCH' should specify the default\r\n#endif\r\n#ifdef _M_ARM64\r\n  m_target_type = TARGET_ARM64; // BUGBUG: scons 'TARGET_ARCH' should specify the default\r\n#endif\r\n  build_unicode=TARGET_X86ANSI != m_target_type;\r\n  build_lockedunicodetarget=false;\r\n\r\n  // automatically generated header file containing all defines\r\n#include <nsis-defines.h>\r\n\r\n  // no longer optional\r\n  definedlist.add(_T(\"NSIS_SUPPORT_STANDARD_PREDEFINES\"));\r\n  definedlist.add(_T(\"NSIS_SUPPORT_NAMED_USERVARS\"));\r\n  definedlist.add(_T(\"NSIS_SUPPORT_LANG_IN_STRINGS\"));\r\n\r\n#ifdef _WIN32\r\n  definedlist.add(_T(\"NSIS_WIN32_MAKENSIS\"));\r\n#endif\r\n#ifdef _UNICODE\r\n  definedlist.add(_T(\"NSIS_UNICODE_MAKENSIS\")); // This define might go away once makensis.exe is always unicode\r\n#endif\r\n  if (sizeof(void*) > 4) definedlist.add(_T(\"NSIS_MAKENSIS64\"));\r\n\r\n  db_opt_save=db_opt_save_u=db_full_size=db_full_size_u=0;\r\n  db_comp_save=db_comp_save_u=0;\r\n\r\n  // Added by Amir Szekely 31st July 2002\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  compressor = &zlib_compressor;\r\n#endif\r\n  build_compressor_set = false;\r\n  build_compressor_final = false;\r\n  build_compress_whole = false;\r\n  build_compress=1;\r\n  build_compress_level=9;\r\n  build_compress_dict_size=1<<23;\r\n\r\n  cur_entries=&build_entries;\r\n  cur_instruction_entry_map=&build_instruction_entry_map;\r\n  cur_datablock=&build_datablock;\r\n  cur_datablock_cache=&build_datablock_cache;\r\n  cur_functions=&build_functions;\r\n  cur_labels=&build_labels;\r\n  cur_sections=&build_sections;\r\n  cur_header=&build_header;\r\n  cur_strlist=&build_strlist;\r\n  cur_langtables=&build_langtables;\r\n  cur_ctlcolors=&build_ctlcolors;\r\n  cur_pages=&build_pages;\r\n  cur_page=0;\r\n  cur_page_type=-1;\r\n\r\n  build_filebuflen=32<<20; // 32mb\r\n\r\n  sectiongroup_open_cnt=0;\r\n  build_cursection_isfunc=0;\r\n  build_cursection=NULL;\r\n  // init public data.\r\n  build_packname[0]=build_packcmd[0]=build_output_filename[0]=0;\r\n  postbuild_cmds=postubuild_cmds=NULL;\r\n\r\n  // Added by ramon 23 May 2003\r\n  build_allowskipfiles=1;\r\n\r\n  // Added by ramon 6 jun 2003\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\n  version_fixedflags=0;\r\n#endif\r\n\r\n  build_overwrite=build_last_overwrite=0;\r\n  build_crcchk=1;\r\n  build_datesave=1;\r\n  build_optimize_datablock=1;\r\n\r\n  memset(&build_header,-1,sizeof(build_header));\r\n\r\n  build_header.install_reg_rootkey=0;\r\n  build_header.flags=CH_FLAGS_NO_ROOT_DIR;\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  build_header.lb_bg=RGB(0,0,0);\r\n  build_header.lb_fg=RGB(0,255,0);\r\n#endif\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n  build_header.license_bg=-COLOR_BTNFACE;\r\n#endif\r\n  build_header.install_directory_ptr=0;\r\n  build_header.install_directory_auto_append=0;\r\n  build_header.install_reg_key_ptr=0;\r\n  build_header.install_reg_value_ptr=0;\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  memset(build_header.install_types,0,sizeof(build_header.install_types));\r\n#endif\r\n  memset(&build_header.blocks,0,sizeof(build_header.blocks));\r\n\r\n  uninstall_mode=0;\r\n  uninstall_size_full=0;\r\n  uninstall_size=UINT_MAX;\r\n\r\n  memset(&build_uninst,-1,sizeof(build_uninst));\r\n\r\n  build_header.install_reg_rootkey=0;\r\n  build_uninst.flags=0;\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  build_uninst.lb_bg=RGB(0,0,0);\r\n  build_uninst.lb_fg=RGB(0,255,0);\r\n#endif\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n  build_uninst.license_bg=-COLOR_BTNFACE;\r\n#endif\r\n  build_uninst.install_directory_ptr=0;\r\n  build_uninst.install_directory_auto_append=0;\r\n  build_uninst.install_reg_key_ptr=0;\r\n  build_uninst.install_reg_value_ptr=0;\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  memset(build_uninst.install_types,0,sizeof(build_uninst.install_types));\r\n#endif\r\n  memset(&build_uninst.blocks,0,sizeof(build_uninst.blocks));\r\n\r\n  uninstaller_writes_used=0;\r\n\r\n  build_strlist.addemptystring();\r\n  ubuild_strlist.addemptystring();\r\n\r\n  build_langstring_num=0;\r\n  ubuild_langstring_num=0;\r\n\r\n  build_font[0]=0;\r\n  build_font_size=0;\r\n\r\n  m_unicon_size=0;\r\n\r\n  branding_image_found=false;\r\n\r\n  no_space_texts=false;\r\n\r\n  m_currentmacroname=NULL;\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  build_plugin_unload=0;\r\n  m_pPlugins=0;\r\n#endif\r\n\r\n  last_used_lang=NSIS_DEFAULT_LANG;\r\n\r\n  res_editor=0;\r\n\r\n  PEDllCharacteristics = DefaultPEDllCharacteristics;\r\n  PESubsysVerMaj = PESubsysVerMin = (WORD) -1;\r\n  manifest_flags = manifest::flags_default;\r\n  manifest_comctl = manifest::comctl_old;\r\n  manifest_exec_level = manifest::exec_level_admin;\r\n  manifest_dpiaware = manifest::dpiaware_notset;\r\n  manifest_lpaware = manifest::lpaware_notset;\r\n  manifest_sosl.setdefault();\r\n\r\n  enable_last_page_cancel=0;\r\n  uenable_last_page_cancel=0;\r\n\r\n  license_res_id=IDD_LICENSE;\r\n\r\n  disable_window_icon=0;\r\n\r\n  notify_hwnd=0;\r\n\r\n#ifdef NSIS_SUPPORT_BGBG\r\n  bg_default_font.lfHeight=40;\r\n  bg_default_font.lfWidth=0;\r\n  bg_default_font.lfEscapement=0;\r\n  bg_default_font.lfOrientation=0;\r\n  bg_default_font.lfWeight=FW_BOLD;\r\n  bg_default_font.lfItalic=TRUE;\r\n  bg_default_font.lfUnderline=FALSE;\r\n  bg_default_font.lfStrikeOut=FALSE;\r\n  bg_default_font.lfCharSet=DEFAULT_CHARSET;\r\n  bg_default_font.lfOutPrecision=OUT_DEFAULT_PRECIS;\r\n  bg_default_font.lfClipPrecision=CLIP_DEFAULT_PRECIS;\r\n  bg_default_font.lfQuality=DEFAULT_QUALITY;\r\n  bg_default_font.lfPitchAndFamily=DEFAULT_PITCH;\r\n  my_strncpy(bg_default_font.lfFaceName,_T(\"Times New Roman\"),LF_FACESIZE);\r\n  memcpy(&bg_font,&bg_default_font,sizeof(LOGFONT));\r\n#endif\r\n\r\n  defcodepage_set=false;\r\n  uDefCodePage=CP_ACP;\r\n\r\n  InitLangTables();\r\n\r\n  // Register static user variables $0, $1 and so on\r\n  // with ONE of reference count, to avoid warning on these vars\r\n  TCHAR Aux[3];\r\n  int i;\r\n  for (i = 0; i < 10; i++)    // 0 - 9\r\n  {\r\n    wsprintf(Aux, _T(\"%d\"), i);\r\n    m_UserVarNames.add(Aux,1);\r\n  }\r\n  for (i = 0; i < 10; i++)        // 10 - 19\r\n  {\r\n    wsprintf(Aux, _T(\"R%d\"), i);\r\n    m_UserVarNames.add(Aux,1);\r\n  }\r\n  m_UserVarNames.add(_T(\"CMDLINE\"),1);       // 20 everything before here doesn't have trailing slash removal\r\n  m_UserVarNames.add(_T(\"INSTDIR\"),1);       // 21\r\n  m_UserVarNames.add(_T(\"OUTDIR\"),1);        // 22\r\n  m_UserVarNames.add(_T(\"EXEDIR\"),1);        // 23\r\n  m_UserVarNames.add(_T(\"LANGUAGE\"),1);      // 24\r\n  m_UserVarNames.add(_T(\"TEMP\"),-1);         // 25\r\n  m_UserVarNames.add(_T(\"PLUGINSDIR\"),-1);   // 26\r\n  m_UserVarNames.add(_T(\"EXEPATH\"),-1);      // 27\r\n  m_UserVarNames.add(_T(\"EXEFILE\"),-1);      // 28\r\n  m_UserVarNames.add(_T(\"HWNDPARENT\"),-1);   // 29\r\n  m_UserVarNames.add(_T(\"_CLICK\"),-1);       // 30\r\n  m_UserVarNames.add(_T(\"_OUTDIR\"),1);       // 31 Note: nsDialogs also uses this\r\n\r\n  m_iBaseVarsNum = m_UserVarNames.getnum();\r\n\r\n  m_ShellConstants.add(_T(\"WINDIR\"),CSIDL_WINDOWS,CSIDL_WINDOWS);\r\n  m_ShellConstants.add(_T(\"SYSDIR\"),CSIDL_SYSTEM,CSIDL_SYSTEM);\r\n  m_ShellConstants.add(_T(\"SMPROGRAMS\"),CSIDL_PROGRAMS, CSIDL_COMMON_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"SMSTARTUP\"),CSIDL_STARTUP, CSIDL_COMMON_STARTUP);\r\n  m_ShellConstants.add(_T(\"DESKTOP\"),CSIDL_DESKTOPDIRECTORY, CSIDL_COMMON_DESKTOPDIRECTORY);\r\n  m_ShellConstants.add(_T(\"STARTMENU\"),CSIDL_STARTMENU, CSIDL_COMMON_STARTMENU);\r\n  m_ShellConstants.add(_T(\"QUICKLAUNCH\"), CSIDL_APPDATA, CSIDL_APPDATA);\r\n  m_ShellConstants.add(_T(\"DOCUMENTS\"),CSIDL_PERSONAL, CSIDL_COMMON_DOCUMENTS);\r\n  m_ShellConstants.add(_T(\"SENDTO\"),CSIDL_SENDTO, CSIDL_SENDTO);\r\n  m_ShellConstants.add(_T(\"RECENT\"),CSIDL_RECENT, CSIDL_RECENT);\r\n  m_ShellConstants.add(_T(\"FAVORITES\"),CSIDL_FAVORITES, CSIDL_COMMON_FAVORITES);\r\n  m_ShellConstants.add(_T(\"MUSIC\"),CSIDL_MYMUSIC, CSIDL_COMMON_MUSIC);\r\n  m_ShellConstants.add(_T(\"PICTURES\"),CSIDL_MYPICTURES, CSIDL_COMMON_PICTURES);\r\n  m_ShellConstants.add(_T(\"VIDEOS\"),CSIDL_MYVIDEO, CSIDL_COMMON_VIDEO);\r\n  m_ShellConstants.add(_T(\"NETHOOD\"), CSIDL_NETHOOD, CSIDL_NETHOOD);\r\n  m_ShellConstants.add(_T(\"FONTS\"), CSIDL_FONTS, CSIDL_FONTS);\r\n  m_ShellConstants.add(_T(\"TEMPLATES\"), CSIDL_TEMPLATES, CSIDL_COMMON_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"APPDATA\"), CSIDL_APPDATA, CSIDL_COMMON_APPDATA); // Note: There is no all-users roaming appdata folder.\r\n  m_ShellConstants.add(_T(\"LOCALAPPDATA\"), CSIDL_LOCAL_APPDATA, CSIDL_COMMON_APPDATA);\r\n  m_ShellConstants.add(_T(\"PRINTHOOD\"), CSIDL_PRINTHOOD, CSIDL_PRINTHOOD);\r\n  //m_ShellConstants.add(_T(\"ALTSTARTUP\"), CSIDL_ALTSTARTUP, CSIDL_COMMON_ALTSTARTUP);\r\n  m_ShellConstants.add(_T(\"INTERNET_CACHE\"), CSIDL_INTERNET_CACHE, CSIDL_INTERNET_CACHE);\r\n  m_ShellConstants.add(_T(\"COOKIES\"), CSIDL_COOKIES, CSIDL_COOKIES);\r\n  m_ShellConstants.add(_T(\"HISTORY\"), CSIDL_HISTORY, CSIDL_HISTORY);\r\n  m_ShellConstants.add(_T(\"PROFILE\"), CSIDL_PROFILE, CSIDL_PROFILE);\r\n  m_ShellConstants.add(_T(\"ADMINTOOLS\"), CSIDL_ADMINTOOLS, CSIDL_COMMON_ADMINTOOLS);\r\n  m_ShellConstants.add(_T(\"RESOURCES\"), CSIDL_RESOURCES, CSIDL_RESOURCES);\r\n  m_ShellConstants.add(_T(\"RESOURCES_LOCALIZED\"), CSIDL_RESOURCES_LOCALIZED, CSIDL_RESOURCES_LOCALIZED);\r\n  m_ShellConstants.add(_T(\"CDBURN_AREA\"), CSIDL_CDBURN_AREA, CSIDL_CDBURN_AREA);\r\n\r\n  // Constants that are not affected by SetShellVarContext\r\n  m_ShellConstants.add(_T(\"USERAPPDATA\"), CSIDL_APPDATA, CSIDL_APPDATA|0x40); // 0x40 to differentiate it from $QUICKLAUNCH\r\n  m_ShellConstants.add(_T(\"USERLOCALAPPDATA\"), CSIDL_LOCAL_APPDATA, CSIDL_LOCAL_APPDATA);\r\n  m_ShellConstants.add(_T(\"USERTEMPLATES\"), CSIDL_TEMPLATES, CSIDL_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"USERSTARTMENU\"), CSIDL_STARTMENU, CSIDL_STARTMENU);\r\n  m_ShellConstants.add(_T(\"USERSMPROGRAMS\"), CSIDL_PROGRAMS, CSIDL_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"USERDESKTOP\"), CSIDL_DESKTOPDIRECTORY, CSIDL_DESKTOPDIRECTORY);\r\n  m_ShellConstants.add(_T(\"COMMONLOCALAPPDATA\"), CSIDL_COMMON_APPDATA, CSIDL_COMMON_APPDATA);\r\n  m_ShellConstants.add(_T(\"COMMONPROGRAMDATA\"), CSIDL_COMMON_APPDATA, CSIDL_COMMON_APPDATA); // a.k.a. %ProgramData%\r\n  m_ShellConstants.add(_T(\"COMMONTEMPLATES\"), CSIDL_COMMON_TEMPLATES, CSIDL_COMMON_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"COMMONSTARTMENU\"), CSIDL_COMMON_STARTMENU, CSIDL_COMMON_STARTMENU);\r\n  m_ShellConstants.add(_T(\"COMMONSMPROGRAMS\"), CSIDL_COMMON_PROGRAMS, CSIDL_COMMON_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"COMMONDESKTOP\"), CSIDL_COMMON_DESKTOPDIRECTORY, CSIDL_COMMON_DESKTOPDIRECTORY);\r\n\r\n  // PROGRAMFILES&COMMONFILES does a registry lookup and the required string offsets are filled in later.\r\n  // We do this later because the unicode mode has to be locked when we call add_string...\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES\"),   0, 0);\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES32\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES64\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES\"),   0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES32\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES64\"), 0, 0);\r\n\r\n  set_uninstall_mode(0);\r\n  set_code_type_predefines();\r\n}\r\n\r\nvoid CEXEBuild::initialize(const TCHAR *makensis_path)\r\n{\r\n  tstring nsis_dir;\r\n  const TCHAR *dir = _tgetenv(_T(\"NSISDIR\"));\r\n  if (dir) nsis_dir = dir;\r\n  else {\r\n#ifndef NSIS_CONFIG_CONST_DATA_PATH\r\n    nsis_dir = get_dir_name(get_executable_dir(makensis_path));\r\n#else\r\n    nsis_dir = _T(PREFIX_DATA);\r\n#endif\r\n  }\r\n  definedlist.add(_T(\"NSISDIR\"), nsis_dir.c_str());\r\n\r\n  tstring includes_dir = nsis_dir;\r\n  includes_dir += PLATFORM_PATH_SEPARATOR_STR _T(\"Include\");\r\n  include_dirs.add(includes_dir.c_str(),0);\r\n\r\n  stubs_dir = nsis_dir;\r\n  stubs_dir += PLATFORM_PATH_SEPARATOR_STR _T(\"Stubs\");\r\n\r\n  if (set_compressor(_T(\"zlib\"), false) != PS_OK || set_target_architecture_data() != PS_OK)\r\n  {\r\n    throw runtime_error(\"error setting default stub\");\r\n  }\r\n\r\n  tstring uninst = stubs_dir + PLATFORM_PATH_SEPARATOR_STR + _T(\"uninst\");\r\n  uninstaller_icon = load_icon_file(uninst.c_str());\r\n  changed_target = false;\r\n}\r\n\r\n\r\nint CEXEBuild::getcurdbsize() { return cur_datablock->getlen(); }\r\n\r\n\r\nvoid CEXEBuild::init_shellconstantvalues()\r\n{\r\n  static bool done = false;\r\n  if (done) return ; else done = true;\r\n\r\n  const int orgunmode = uninstall_mode, t64 = is_target_64bit(), reg = 0x80, r32 = t64 ? 0xC0 : reg, r64 = r32 ^ 0x40;\r\n  set_uninstall_mode(0);\r\n  // Note: The order matters because some of the strings are preprocessed and cf must be <= 0x40\r\n  unsigned int pf       = add_asciistring(_T(\"ProgramFilesDir\"), 0);\r\n  unsigned int cf       = add_asciistring(_T(\"CommonFilesDir\"), 0);\r\n  unsigned int pf_def   = add_asciistring(_T(\"C:\\\\Program Files\")); // Ultimate fallback\r\n  // TODO: 64-bit targets could use CSIDL_PROGRAM_FILES+CSIDL_PROGRAM_FILESX86?\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES\"),   reg | pf, pf_def);\r\n  unsigned int pf_var = add_asciistring(_T(\"$PROGRAMFILES\")); // Fallback for the 32/64 specific constants if the WOW registry view fails\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES32\"), r32 | pf, reg != r32 ? pf_var : pf_def);\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES64\"), r64 | pf, reg != r64 ? pf_var : pf_def);\r\n  unsigned int cf_def   = add_asciistring(_T(\"$PROGRAMFILES\\\\Common Files\"));\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES\"),    reg | cf, cf_def);\r\n  unsigned int cf_var = add_asciistring(_T(\"$COMMONFILES\"));\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES32\"),  r32 | cf, reg != r32 ? cf_var : cf_def);\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES64\"),  r64 | cf, reg != r64 ? cf_var : cf_def);\r\n\r\n  if ( (pf >= 0x40 || pf_def >= 0xFF || pf_var > 0xFF) // BUGBUG: pf_def should be \">\"?\r\n    || (cf >  0x40 || cf_def >  0xFF || cf_var > 0xFF) )\r\n  {\r\n    // see Source\\exehead\\util.c for implementation details\r\n    // basically, it knows it needs to get folders from the registry when the 0x80 is on\r\n    const char* msg = \"Internal compiler error: too many strings added to strings block before adding shell constants!\";\r\n    ERROR_MSG(_T(\"%\") NPRIns, msg);\r\n    throw out_of_range(msg);\r\n  }\r\n\r\n  set_uninstall_mode(1);\r\n  unsigned int unpf = add_asciistring(_T(\"ProgramFilesDir\"), 0);\r\n  unsigned int uncf = add_asciistring(_T(\"CommonFilesDir\"), 0);\r\n  unsigned int unpf_def = add_asciistring(_T(\"C:\\\\Program Files\"));\r\n  unsigned int unpf_var = add_asciistring(_T(\"$PROGRAMFILES\"));\r\n  unsigned int uncf_def = add_asciistring(_T(\"$PROGRAMFILES\\\\Common Files\"));\r\n  unsigned int uncf_var = add_asciistring(_T(\"$COMMONFILES\"));\r\n  set_uninstall_mode(orgunmode);\r\n\r\n  if ( unpf != pf || unpf_def != pf_def || unpf_var != pf_var\r\n    || uncf != cf || uncf_def != cf_def || uncf_var != cf_var )\r\n  {\r\n    const char* msg = \"Internal compiler error: installer's shell constants are different than uninstallers!\";\r\n    ERROR_MSG(_T(\"%\") NPRIns, msg);\r\n    throw out_of_range(msg);\r\n  }\r\n}\r\n\r\n// returns offset in stringblock\r\nint CEXEBuild::add_string(const TCHAR *string, int process/*=1*/, UINT codepage/*=-2*/)\r\n{\r\n  if (!string || !*string) return 0;\r\n  build_lockedunicodetarget = true;\r\n  init_shellconstantvalues();\r\n  if ((UINT)-2 == codepage)\r\n  {\r\n    codepage = curlinereader ? curlinereader->StreamEncoding().GetCodepage() : CP_UTF8;\r\n    // If the current source file is Unicode we have to pick a real codepage for ANSI!\r\n    // It might not be the correct codepage but it's the best we can do.\r\n    // Not using CP_ACP to avoid heisenbugs when compiled on a different system.\r\n    if (NStreamEncoding::IsUnicodeCodepage(codepage)) codepage = 1252;\r\n  }\r\n  if (*string == _T('$') && *(string+1) == _T('('))\r\n  {\r\n    int idx = 0;\r\n    TCHAR *cp = _tcsdup(string+2);\r\n    TCHAR *p = _tcschr(cp, _T(')'));\r\n    if (p && p[1] == _T('\\0') ) { // if string is only a language str identifier\r\n      *p = 0;\r\n      idx = DefineLangString(cp, process);\r\n    }\r\n    free(cp);\r\n    if (idx < 0) return idx;\r\n  }\r\n\r\n  int i;\r\n  if (process)\r\n  {\r\n    ExpandoString<TCHAR, NSIS_MAX_STRLEN*4> buf;\r\n    // NOTE: It is impossible to know how much preprocessing will increase the size, we have to guess\r\n    buf.Reserve(_tcsclen(string) * 2);\r\n    preprocess_string(buf, string, codepage); // BUGBUG: This could overflow buf\r\n    i = cur_strlist->add(buf, (WORD)codepage, true);\r\n  }\r\n  else\r\n    i = cur_strlist->add(string, (WORD)codepage, false);\r\n  return i;\r\n}\r\n\r\nint CEXEBuild::add_asciistring(const TCHAR *string, int process/*=1*/)\r\n{\r\n  return add_string(string, process, 1252);\r\n}\r\n\r\nint CEXEBuild::add_intstring(const int i) // returns offset in stringblock\r\n{\r\n  TCHAR buf[32];\r\n  wsprintf(buf, _T(\"%d\"), i);\r\n  return add_asciistring(buf, false);\r\n}\r\n\r\n#ifdef _UNICODE\r\nchar* convert_processed_string_to_ansi(char *out, const TCHAR *in, WORD codepage)\r\n{\r\n    const TCHAR *p=in;\r\n    for (;;)\r\n    {\r\n        _TUCHAR i = (_TUCHAR)*p++;\r\n        if (NS_IS_CODE(i)) // Note: this includes '\\0'\r\n        {\r\n            // convert all character up to, and including this code\r\n            int c = (int)(p-in), cb = WideCharToMultiByte(codepage, 0, in, c, out, c*2, NULL, NULL);\r\n            if (!cb && i) return 0;\r\n            out += cb;\r\n            if (i == _T('\\0'))\r\n                break;\r\n            else if (i == NS_SKIP_CODE)\r\n                // BUGBUG: Shouldn't the escaped code be converted from wchar_t to codepage as well?\r\n                *out++ = (char) *in++; // simply copy escaped code (01..04)\r\n            else\r\n            {\r\n                WORD w = *p++; // special NSIS code is following by a WORD we need to output unchanged\r\n                *out++ = LOBYTE(w);\r\n                *out++ = HIBYTE(w);\r\n            }\r\n            in = p;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n#endif\r\n\r\n// based on Dave Laundon's code\r\nint CEXEBuild::preprocess_string(TCHAR *out, const TCHAR *in, WORD codepage/*=CP_ACP*/)\r\n{\r\n  const TCHAR *p=in;\r\n  while (*p)\r\n  {\r\n    const TCHAR *np;\r\n#ifdef _UNICODE\r\n    np = CharNext(p);\r\n#else\r\n    np = CharNextExA(codepage, p, 0);\r\n#endif\r\n    if (np - p > 1) // multibyte TCHAR\r\n    {\r\n      size_t len = np - p;\r\n      while (len--)\r\n      {\r\n        _TUCHAR i = (_TUCHAR)*p++;\r\n        if (NS_IS_CODE(i)) {\r\n          *out++ = (TCHAR)NS_SKIP_CODE;\r\n        }\r\n        *out++=(TCHAR)i;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    _TUCHAR i = (_TUCHAR)*p;\r\n\r\n    p=np; // increment p.\r\n\r\n    // Test for characters extending into the variable codes\r\n    if (NS_IS_CODE(i)) {\r\n      *out++ = (TCHAR)NS_SKIP_CODE;\r\n      // out does get the NS_CODE as well because of\r\n      // \"*out++=(TCHAR)i\" at the end.\r\n    }\r\n    else if (i == _T('$'))\r\n    {\r\n      if (*p == _T('$'))\r\n        p++; // Can simply convert $$ to $ now\r\n      else\r\n      {\r\n        // starts with a $ but not $$.\r\n        bool bProceced=false;\r\n        if (*p)\r\n        {\r\n          const TCHAR *pUserVarName = p;\r\n          while (isSimpleChar(*pUserVarName))\r\n            pUserVarName++;\r\n\r\n          while (pUserVarName > p)\r\n          {\r\n            if (m_ShellConstants.get(p, truncate_cast(int, (size_t)(pUserVarName - p))) >= 0)\r\n              break; // Woops it's a shell constant\r\n\r\n            int idxUserVar = m_UserVarNames.get(p, truncate_cast(int, (size_t)(pUserVarName - p)));\r\n            if (idxUserVar >= 0)\r\n            {\r\n              // Well, using variables inside string formatting doesn't mean\r\n              // using the variable, because it will be always an empty string\r\n              // which is also memory wasting\r\n              // So the line below must be commented !??\r\n              //m_UserVarNames.inc_reference(idxUserVar);\r\n              *out++ = (TCHAR) NS_VAR_CODE; // Named user variable;\r\n              WORD w = FIX_ENDIAN_INT16(CODE_SHORT(idxUserVar));\r\n              unsigned int w4 = sizeof(TCHAR) > 2 ? FIX_ENDIAN_INT32(CODE_SHORT(idxUserVar)) : w; // Maybe this is too much endian fixing?\r\n              if (sizeof(TCHAR) < 2) *((WORD*)out) = w, out += 2; else *out = (TCHAR) w4, out++;\r\n              p += pUserVarName-p; // zip past the user var string.\r\n              bProceced = true;\r\n              break;\r\n            }\r\n            pUserVarName--;\r\n          }\r\n        }// if ( *p )\r\n        if (!bProceced && *p)\r\n        {\r\n          const TCHAR *pShellConstName = p;\r\n          while (isSimpleChar(*pShellConstName))\r\n            pShellConstName++;\r\n\r\n          while (pShellConstName > p)\r\n          {\r\n            // Look for the identifier in the shell constants list of strings.\r\n            int idxConst = m_ShellConstants.get((TCHAR*)p, truncate_cast(int, (size_t)(pShellConstName - p)));\r\n\r\n            // If found...\r\n            if (idxConst >= 0)\r\n            {\r\n              init_shellconstantvalues();\r\n              int CSIDL_Value_current = m_ShellConstants.get_value1(idxConst);\r\n              int CSIDL_Value_all = m_ShellConstants.get_value2(idxConst);\r\n              *out++=(TCHAR)NS_SHELL_CODE; // Constant code identifier\r\n#ifdef _UNICODE\r\n            *out++=MAKEWORD(CSIDL_Value_current, CSIDL_Value_all);\r\n#else\r\n            *out++=(TCHAR)CSIDL_Value_current;\r\n            *out++=(TCHAR)CSIDL_Value_all;\r\n#endif\r\n              p = pShellConstName; // zip past the shell constant string.\r\n              bProceced = true;\r\n              break;\r\n            }\r\n\r\n            // We are looking from the longest identifier first and work\r\n            // smaller.\r\n            pShellConstName--;\r\n          }\r\n        }\r\n        if ( !bProceced && *p == _T('(') )\r\n        {\r\n          int idx = -1;\r\n          TCHAR *cp = _tcsdup(p+1); // JP: Bad... should avoid memory alloc.\r\n          TCHAR *pos = _tcschr(cp, _T(')'));\r\n          if (pos)\r\n          {\r\n            *pos = 0;\r\n            idx = DefineLangString(cp);\r\n            if (idx < 0)\r\n            {\r\n              *out++ = (TCHAR)NS_LANG_CODE; // Next word is lang-string Identifier\r\n              WORD w = FIX_ENDIAN_INT16(CODE_SHORT(-idx-1));\r\n              unsigned int w4 = sizeof(TCHAR) > 2 ? FIX_ENDIAN_INT32(CODE_SHORT(-idx-1)) : w; // Maybe this is too much endian fixing?\r\n              if (sizeof(TCHAR) < 2) *((WORD*)out) = w, out += 2; else *out = (TCHAR) w4, out++;\r\n              p += _tcslen(cp) + 2;\r\n              bProceced = true;\r\n            }\r\n          }\r\n          free(cp);\r\n        }\r\n        if ( bProceced )\r\n          continue; // outermost while\r\n        else\r\n        {\r\n          TCHAR tbuf[64], cBracket = _T('\\0');\r\n          bool bDoWarning = true;\r\n\r\n          if ( *p == _T('[') ) cBracket = _T(']');\r\n          else if ( *p == _T('(') ) cBracket = _T(')');\r\n          else if ( *p == _T('{') ) cBracket = _T('}');\r\n\r\n          my_strncpy(tbuf,p,COUNTOF(tbuf));\r\n\r\n          if ( cBracket != 0 )\r\n          {\r\n            if (_tcschr(tbuf,cBracket)) (_tcschr(tbuf,cBracket)+1)[0]=0;\r\n            if ( tbuf[0] == _T('{') && tbuf[_tcslen(tbuf)-1] == _T('}') )\r\n            {\r\n              TCHAR *tstIfDefine = _tcsdup(tbuf+1);\r\n              tstIfDefine[_tcslen(tstIfDefine)-1] = _T('\\0');\r\n              bDoWarning = definedlist.find(tstIfDefine) == NULL;\r\n              // If it's a defined identifier, then don't warn.\r\n            }\r\n          }\r\n          else\r\n          {\r\n            if (_tcsstr(tbuf,_T(\" \"))) _tcsstr(tbuf,_T(\" \"))[0]=0;\r\n          }\r\n          if ( bDoWarning )\r\n            warning_fl(DW_VAR_IGNORED_UNKNOWN, _T(\"unknown variable/constant \\\"%\") NPRIs _T(\"\\\" detected, ignoring\"),tbuf);\r\n          i = _T('$'); // redundant since i is already '$' and has not changed.\r\n        }\r\n      } // else\r\n    } // else if (i == _T('$'))\r\n    *out++=(TCHAR)i;\r\n  } // outside while\r\n  *out=0;\r\n  return 0;\r\n}\r\n\r\n// what it does is, when you pass it the offset of the last item added, it will determine if\r\n// that data is already present in the datablock, and if so, reference it instead (and shorten\r\n// the datablock as necessary). Reduces overhead if you want to add files to a couple places.\r\n// Woo, an optimizing installer generator, now we're styling.\r\n\r\nint CEXEBuild::datablock_optimize(int start_offset, int first_int)\r\n{\r\n  int this_len = cur_datablock->getlen() - start_offset;\r\n\r\n  cached_db_size this_size = {first_int, start_offset};\r\n  this->cur_datablock_cache->add(&this_size, sizeof(cached_db_size));\r\n\r\n  if (!this->build_optimize_datablock || this_len < (int) sizeof(int))\r\n    return start_offset;\r\n\r\n#ifdef DEBUG\r\n  assert(dynamic_cast<MMapBuf*>(cur_datablock));\r\n#endif\r\n  MMapBuf *db = static_cast<MMapBuf*>(cur_datablock);\r\n  db->setro(TRUE);\r\n\r\n  cached_db_size *db_sizes = (cached_db_size *) this->cur_datablock_cache->get();\r\n  int db_sizes_num = this->cur_datablock_cache->getlen() / sizeof(cached_db_size);\r\n  db_sizes_num--; // don't compare with the one we just added\r\n\r\n  for (int i = 0; i < db_sizes_num; i++)\r\n  {\r\n    if (db_sizes[i].first_int == first_int)\r\n    {\r\n      int pos = db_sizes[i].start_offset;\r\n      int left = this_len;\r\n      while (left > 0)\r\n      {\r\n        int l = min(left, build_filebuflen);\r\n        void *newstuff = db->get(start_offset + this_len - left, l);\r\n        void *oldstuff = db->getmore(pos + this_len - left, l);\r\n\r\n        int res = memcmp(newstuff, oldstuff, l);\r\n\r\n        db->release(oldstuff, l);\r\n        db->release();\r\n\r\n        if (res) break;\r\n\r\n        left -= l;\r\n      }\r\n\r\n      if (!left)\r\n      {\r\n        db_opt_save += this_len;\r\n        db->resize(max(start_offset, pos + this_len));\r\n        db->setro(FALSE);\r\n        this->cur_datablock_cache->resize(cur_datablock_cache->getlen() - sizeof(cached_db_size));\r\n        return pos;\r\n      }\r\n    }\r\n  }\r\n\r\n  db->setro(FALSE);\r\n  return start_offset;\r\n}\r\n\r\nbool CEXEBuild::datablock_finddata(IMMap&mmap, int mmstart, int size, int*ofs)\r\n{\r\n  const int first_int = size;\r\n  size &= ~ 0x80000000;\r\n#ifdef DEBUG\r\n  assert(dynamic_cast<MMapBuf*>(cur_datablock));\r\n#endif\r\n  MMapBuf *db = static_cast<MMapBuf*>(cur_datablock);\r\n  cached_db_size *db_sizes = (cached_db_size *) this->cur_datablock_cache->get();\r\n  int db_sizes_num = this->cur_datablock_cache->getlen() / sizeof(cached_db_size);\r\n  for (int i = 0; i < db_sizes_num; i++)\r\n  {\r\n    if (db_sizes[i].first_int != first_int) continue;\r\n    int left = size, oldpos = db_sizes[i].start_offset;\r\n    while (left > 0)\r\n    {\r\n      int cbCmp = min(left, build_filebuflen);\r\n      void *newstuff = mmap.get(mmstart + size - left, cbCmp);\r\n      void *oldstuff = db->get(sizeof(int) + oldpos + size - left, cbCmp);\r\n      int res = memcmp(newstuff, oldstuff, cbCmp);\r\n      mmap.release(), db->release();\r\n      if (res) break;\r\n      left -= cbCmp;\r\n    }\r\n    if (!left)\r\n    {\r\n      if (ofs) *ofs = oldpos;\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nint CEXEBuild::add_db_data(IMMap *mmap) // returns offset\r\n{\r\n  build_compressor_set = true;\r\n\r\n  int done = 0;\r\n\r\n  if (!mmap)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_db_data() called with invalid mapped file\\n\"));\r\n    return -1;\r\n  }\r\n\r\n  int length = mmap->getsize();\r\n\r\n  if (length < 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_db_data() called with length=%d\\n\"), length);\r\n    return -1;\r\n  }\r\n\r\n  // Jim Park: This kind of stuff looks scary and it is.  cur_datablock is\r\n  // most likely to point to a MMapBuf type right now so it works.\r\n  MMapBuf *db = (MMapBuf *) this->cur_datablock;\r\n\r\n  int st = db->getlen();\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (length && !build_compress_whole && build_compress)\r\n  {\r\n    // grow datablock so that there is room to compress into\r\n    int bufferlen, of = false, tmp = 0;\r\n    of |= !si_add(tmp, length, 1024);\r\n    of |= !si_add(tmp, tmp, length / 4); // give a nice 25% extra space\r\n    if (!of)\r\n    {\r\n      bufferlen = tmp;\r\n      of |= !si_add(tmp, st, bufferlen);\r\n      of |= !si_add(tmp, tmp, sizeof(int));\r\n    }\r\n    if (of) // we've hit a signed integer overflow (file is over 1.6 GB)\r\n      bufferlen = INT_MAX - st - sizeof(int); // so maximize compressor room and hope the file compresses well\r\n\r\n    db->resize(st + bufferlen + sizeof(int));\r\n\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      extern void quit(); quit();\r\n    }\r\n\r\n    int avail_in = length;\r\n    int avail_out = bufferlen;\r\n    int ret;\r\n    while (avail_in > 0)\r\n    {\r\n      int in_len = min(this->build_filebuflen, avail_in);\r\n      int out_len = min(this->build_filebuflen, avail_out);\r\n\r\n      compressor->SetNextIn((char*) mmap->get(length - avail_in, in_len), in_len);\r\n      compressor->SetNextOut((char*) db->get(st + sizeof(int) + bufferlen - avail_out, out_len), out_len);\r\n      if ((ret = compressor->Compress(0)) < 0)\r\n      {\r\n        ERROR_MSG(_T(\"Error: add_db_data() - compress() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n        return -1;\r\n      }\r\n      mmap->release();\r\n      db->flush(out_len);\r\n      db->release();\r\n      avail_in -= in_len - compressor->GetAvailIn();\r\n      avail_out -= out_len - compressor->GetAvailOut();\r\n\r\n      if (!avail_out)\r\n        // not enough space in the output buffer - no compression is better\r\n        break;\r\n    }\r\n\r\n    // if not enough space in the output buffer - no compression is better\r\n    if (avail_out)\r\n    {\r\n      char *out;\r\n\r\n      char a;\r\n      compressor->SetNextIn(&a,0);\r\n\r\n      do\r\n      {\r\n        int out_len = min(build_filebuflen, avail_out);\r\n\r\n        out = (char *) db->get(st + sizeof(int) + bufferlen - avail_out, out_len);\r\n\r\n        compressor->SetNextOut(out, out_len);\r\n        if ((ret = compressor->Compress(C_FINISH)) < 0)\r\n        {\r\n          ERROR_MSG(_T(\"Error: add_db_data() - compress() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n          return -1;\r\n        }\r\n\r\n        db->flush(out_len);\r\n        db->release();\r\n\r\n        avail_out -= out_len - compressor->GetAvailOut();\r\n      }\r\n      while (compressor->GetNextOut() - out > 0 && avail_out > 0);\r\n\r\n      compressor->End();\r\n\r\n      int used = bufferlen - avail_out;\r\n\r\n      // never store compressed if output buffer is full (compression increased the size...)\r\n      if (avail_out && (build_compress == 2 || used < length))\r\n      {\r\n        done=1;\r\n        db->resize(st + used + sizeof(int));\r\n\r\n        *(int*)db->get(st, sizeof(int)) = FIX_ENDIAN_INT32(used | 0x80000000);\r\n        db->release();\r\n\r\n        int nst = datablock_optimize(st, used | 0x80000000);\r\n        if (nst == st) db_comp_save += length - used;\r\n        else st = nst;\r\n      }\r\n    }\r\n    else\r\n      compressor->End();\r\n  }\r\n#endif // NSIS_CONFIG_COMPRESSION_SUPPORT\r\n\r\n  if (!done)\r\n  {\r\n    // Adding the same file twice can push cur_datablock over the limit\r\n    // because datablock_optimize() happens too late. Let's try to find a dupe early.\r\n    if (this->build_optimize_datablock && st + length < 0)\r\n    {\r\n      int oldst;\r\n      if (datablock_finddata(*mmap, 0, length, &oldst))\r\n        return (db_full_size += length, db_opt_save += length, oldst);\r\n    }\r\n\r\n    db->resize(st + sizeof(int) + length);\r\n    int *plen = (int *) db->get(st, sizeof(int));\r\n    *plen = FIX_ENDIAN_INT32(length);\r\n    db->release();\r\n\r\n    int left = length;\r\n    while (left > 0)\r\n    {\r\n      int l = min(build_filebuflen, left);\r\n      int *p = (int *) db->get(st + sizeof(int) + length - left, l);\r\n      memcpy(p, mmap->get(length - left, l), l);\r\n      db->flush(l);\r\n      db->release();\r\n      mmap->release();\r\n      left -= l;\r\n    }\r\n\r\n    st = datablock_optimize(st, length);\r\n  }\r\n\r\n  db_full_size += length + sizeof(int);\r\n  return st;\r\n}\r\n\r\nint CEXEBuild::add_db_data(const char *data, int length) // returns offset\r\n{\r\n  MMapFake fakemap;\r\n  fakemap.set(data, length);\r\n  return add_db_data(&fakemap);\r\n}\r\n\r\nint CEXEBuild::add_data(const char *data, int length, IGrowBuf *dblock) // returns offset\r\n{\r\n  build_compressor_set=true;\r\n\r\n  int done=0;\r\n\r\n  if (length < 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_data() called with length=%d\\n\"),length);\r\n    return -1;\r\n  }\r\n\r\n  int st=dblock->getlen();\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (!build_compress_whole && build_compress)\r\n  {\r\n    // grow datablock so that there is room to compress into\r\n    int bufferlen=length+1024+length/4; // give a nice 25% extra space\r\n    dblock->resize(st+bufferlen+sizeof(int));\r\n\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      extern void quit(); quit();\r\n    }\r\n\r\n    compressor->SetNextIn((char*)data, length);\r\n    compressor->SetNextOut((char*)dblock->get() + st + sizeof(int), bufferlen);\r\n\r\n    compressor->Compress(C_FINISH);\r\n\r\n    int used=bufferlen-compressor->GetAvailOut();\r\n\r\n    // never store compressed if output buffer is full\r\n    if (compressor->GetAvailOut() && (build_compress == 2 || used < length))\r\n    {\r\n      done=1;\r\n      dblock->resize(st+used+sizeof(int));\r\n\r\n      *((int*)((char *)dblock->get()+st)) = FIX_ENDIAN_INT32(used|0x80000000);\r\n    }\r\n    compressor->End();\r\n  }\r\n#endif // NSIS_CONFIG_COMPRESSION_SUPPORT\r\n\r\n  if (!done)\r\n  {\r\n    dblock->resize(st);\r\n    int rl = FIX_ENDIAN_INT32(length);\r\n    dblock->add(&rl,sizeof(int));\r\n    dblock->add(data,length);\r\n  }\r\n\r\n  return st;\r\n}\r\n\r\nint CEXEBuild::add_label(const TCHAR *name)\r\n{\r\n  if (!build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Label declaration not valid outside of function/section\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if ((name[0] >= _T('0') && name[0] <= _T('9')) || name[0] == _T('-') || name[0] == _T(' ') || name[0] == _T(':'))\r\n  {\r\n    ERROR_MSG(_T(\"Error: labels must not begin with 0-9, -, :, or a space.\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  int cs=build_cursection->code;\r\n  int ce=cs+build_cursection->code_size;\r\n\r\n  TCHAR *p=_tcsdup(name);\r\n  if (p[_tcslen(p)-1] == _T(':')) p[_tcslen(p)-1]=0;\r\n  int offs=ns_label.add(p,0);\r\n  free(p);\r\n\r\n  int n=cur_labels->getlen()/sizeof(section);\r\n\r\n  // Check to see if the label already exists.\r\n  if (n)\r\n  {\r\n    section *t=(section*)cur_labels->get();\r\n    while (n--)\r\n    {\r\n      // Labels beginning with '.' are global and can be jumped to from any function or section.\r\n      if ((*name == _T('.') || (t->code >= cs && t->code <= ce))  &&\r\n          t->name_ptr==offs)\r\n      {\r\n        if (*name == _T('.')) ERROR_MSG(_T(\"Error: global label \\\"%\") NPRIs _T(\"\\\" already declared\\n\"),name);\r\n        else\r\n        {\r\n          const TCHAR *szType = _T(\"section\");\r\n          if (build_cursection_isfunc)\r\n            szType = _T(\"function\");\r\n          ERROR_MSG(_T(\"Error: label \\\"%\") NPRIs _T(\"\\\" already declared in %\") NPRIs _T(\"\\n\"),name,szType);\r\n        }\r\n        return PS_ERROR;\r\n      }\r\n      t++;\r\n    }\r\n  }\r\n\r\n  section s={0};\r\n  s.name_ptr = offs;\r\n  s.code = ce;\r\n  cur_labels->add(&s,sizeof(s));\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_function(const TCHAR *funname)\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function open when creating function (use FunctionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section open when creating function (use SectionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (cur_page)\r\n  {\r\n    ERROR_MSG(_T(\"Error: PageEx open when creating function (use PageExEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (!funname[0])\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function must have a name\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  set_uninstall_mode(!_tcsnicmp(funname,_T(\"un.\"),3));\r\n\r\n  // ns_func contains all the function names defined.\r\n  int addr=ns_func.add(funname,0);\r\n  int n=cur_functions->getlen()/sizeof(section), x;\r\n  section *tmp=(section*)cur_functions->get();\r\n  for (x = 0; x < n; x ++)\r\n  {\r\n    if (tmp[x].name_ptr == addr)\r\n    {\r\n      ERROR_MSG(_T(\"Error: Function named \\\"%\") NPRIs _T(\"\\\" already exists.\\n\"),funname);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  cur_functions->resize((n+1)*sizeof(section));\r\n  build_cursection=((section*)cur_functions->get())+n;\r\n  build_cursection_isfunc=1;\r\n  build_cursection->name_ptr=addr;\r\n  build_cursection->code=cur_entries->getlen()/sizeof(entry);\r\n  build_cursection->code_size=0;\r\n  build_cursection->install_types=0;\r\n  build_cursection->flags=0;\r\n  build_cursection->size_kb=0;\r\n  memset(build_cursection->name,0,sizeof(build_cursection->name));\r\n  \r\n  if (uninstall_mode)\r\n    set_code_type_predefines(funname+3);\r\n  else\r\n    set_code_type_predefines(funname);\r\n  \r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::function_end()\r\n{\r\n  if (!build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: No function open, FunctionEnd called\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  // add ret.\r\n  add_entry_direct(EW_RET);\r\n\r\n  build_cursection_isfunc=0;\r\n  build_cursection=NULL;\r\n\r\n  set_uninstall_mode(0);\r\n  \r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n\r\n\r\nint CEXEBuild::section_add_flags(int flags)\r\n{\r\n  if (!build_cursection || build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't modify flags when no section is open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  build_cursection->flags |= flags;\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::section_add_install_type(int inst_type)\r\n{\r\n  if (!build_cursection || build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't modify flags when no section is open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection->install_types == ~0)\r\n    build_cursection->install_types = 0;\r\n  build_cursection->install_types |= inst_type;\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::section_add_size_kb(int kb)\r\n{\r\n  if (build_cursection)\r\n  {\r\n    build_cursection->size_kb+=kb;\r\n  }\r\n}\r\n\r\nint CEXEBuild::section_end()\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionEnd specified in function (not section)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (!build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionEnd specified and no sections open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  add_entry_direct(EW_RET);\r\n  build_cursection->code_size--;\r\n  build_cursection=NULL;\r\n  if (!sectiongroup_open_cnt)\r\n    set_uninstall_mode(0);\r\n  \r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_section(const TCHAR *secname, const TCHAR *defname, int expand/*=0*/)\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section can't create section (already in function, use FunctionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (cur_page) {\r\n    ERROR_MSG(_T(\"Error: PageEx already open, call PageExEnd first\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section already open, call SectionEnd first\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  section new_section;\r\n  new_section.flags = SF_SELECTED;\r\n  new_section.flags |= expand ? SF_EXPAND : 0;\r\n  new_section.code_size = 0;\r\n  new_section.size_kb = 0;\r\n\r\n  TCHAR *name = (TCHAR*)secname;\r\n\r\n  if (name[0] == _T('\\x1F'))    // SectionGroup/SectionGroupEnd\r\n  {\r\n    if (name[1])\r\n    {\r\n      new_section.flags |= SF_SECGRP;\r\n      name++;\r\n    }\r\n    else\r\n      new_section.flags |= SF_SECGRPEND;\r\n  }\r\n\r\n  int hidden = (name[0] == _T('-'));\r\n  if (hidden)\r\n    name++;\r\n  \r\n  if (name[0] == _T('!'))\r\n  {\r\n    name++;\r\n    new_section.flags |= SF_BOLD;\r\n  }\r\n\r\n  int old_uninstall_mode = uninstall_mode;\r\n\r\n  set_uninstall_mode(0);\r\n\r\n  if (!_tcsnicmp(name, _T(\"un.\"), 3))\r\n  {\r\n    set_uninstall_mode(1);\r\n    name += 3;\r\n  }\r\n\r\n  if (!_tcsicmp(name, _T(\"uninstall\")))\r\n  {\r\n    set_uninstall_mode(1);\r\n  }\r\n\r\n  if ((new_section.flags & SF_SECGRPEND) && sectiongroup_open_cnt && old_uninstall_mode)\r\n  {\r\n    set_uninstall_mode(1);\r\n  }\r\n\r\n  if (sectiongroup_open_cnt)\r\n  {\r\n    if (uninstall_mode != old_uninstall_mode)\r\n    {\r\n      ERROR_MSG(_T(\"Error: Can't create %\") NPRIs _T(\" section in %\") NPRIs _T(\" section group (use SectionGroupEnd first)\\n\"), uninstall_mode ? _T(\"uninstaller\") : _T(\"installer\"), old_uninstall_mode ? _T(\"uninstaller\") : _T(\"installer\"));\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  new_section.code = cur_entries->getlen() / sizeof(entry);\r\n\r\n  new_section.install_types = (!hidden && *name) ? 0 : ~0;\r\n  new_section.name_ptr = hidden ? 0 : add_string(name);\r\n  memset(&new_section.name,0,sizeof(new_section.name));\r\n\r\n  cur_sections->add(&new_section, sizeof(section));\r\n  build_cursection = (section *) cur_sections->get() + cur_header->blocks[NB_SECTIONS].num;\r\n\r\n  if (defname[0])\r\n  {\r\n    TCHAR buf[1024];\r\n    wsprintf(buf, _T(\"%d\"), cur_header->blocks[NB_SECTIONS].num);\r\n    if (definedlist.add(defname, buf))\r\n    {\r\n      ERROR_MSG(_T(\"Error: \\\"%\") NPRIs _T(\"\\\" already defined, can't assign section index!\\n\"), defname);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  cur_header->blocks[NB_SECTIONS].num++;\r\n\r\n  if (new_section.flags & (SF_SECGRP | SF_SECGRPEND))\r\n  {\r\n    add_entry_direct(EW_RET);\r\n    build_cursection->code_size = 0;\r\n\r\n    build_cursection = 0;\r\n\r\n    if (new_section.flags & SF_SECGRPEND)\r\n    {\r\n      sectiongroup_open_cnt--;\r\n      if (sectiongroup_open_cnt < 0)\r\n      {\r\n        ERROR_MSG(_T(\"SectionGroupEnd: no SectionGroups are open\\n\"));\r\n        return PS_ERROR;\r\n      }\r\n      if (!sectiongroup_open_cnt)\r\n      {\r\n        set_uninstall_mode(0);\r\n      }\r\n    }\r\n    else\r\n      sectiongroup_open_cnt++;\r\n  }\r\n  \r\n  set_code_type_predefines(name);\r\n    \r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_entry(const entry *ent)\r\n{\r\n  if (!build_cursection && !uninstall_mode)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Can't add entry, no section or function is open!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  cur_entries->add(ent,sizeof(entry));\r\n  cur_instruction_entry_map->add(&multiple_entries_instruction,sizeof(int));\r\n  build_cursection->code_size++;\r\n  cur_header->blocks[NB_ENTRIES].num++;\r\n\r\n  multiple_entries_instruction=1;\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_entry_direct(int which, int o0, int o1, int o2, int o3, int o4, int o5 /*o#=0*/)\r\n{\r\n  entry ent;\r\n  ent.which = which;\r\n  ent.offsets[0] = o0;\r\n  ent.offsets[1] = o1;\r\n  ent.offsets[2] = o2;\r\n  ent.offsets[3] = o3;\r\n  ent.offsets[4] = o4;\r\n  ent.offsets[5] = o5;\r\n  return add_entry(&ent);\r\n}\r\n\r\nint CEXEBuild::resolve_jump_int(const TCHAR *fn, int *a, int offs, int start, int end)\r\n{\r\n  if (*a > 0)\r\n  {\r\n    TCHAR *lname=(TCHAR*)ns_label.get()+*a;\r\n    if (lname[0] == _T('-') || lname[0]==_T('+'))\r\n    {\r\n      int jump = _ttoi(lname);\r\n      int *skip_map = (int *) cur_instruction_entry_map->get();\r\n      int maxoffs = cur_instruction_entry_map->getlen() / (int) sizeof(int);\r\n\r\n      int direction = 1;\r\n      if (jump < 0)\r\n        direction = -1;\r\n\r\n      for (; jump != 0; jump -= direction)\r\n      {\r\n        offs += direction;\r\n        if (offs >= 0 && offs < maxoffs)\r\n        {\r\n          while (skip_map[offs])\r\n          {\r\n            offs += direction;\r\n          }\r\n        }\r\n      }\r\n\r\n      *a = offs + 1;\r\n    }\r\n    else\r\n    {\r\n      section *s = (section*)cur_labels->get();\r\n      int n=cur_labels->getlen()/sizeof(section);\r\n      while (n-->0)\r\n      {\r\n        if ((*lname == _T('.') || (s->code >= start && s->code <= end)) && s->name_ptr == *a)\r\n        {\r\n          *a = s->code+1;     // jumps are to the absolute position, +1 (to differentiate between no jump, and jumping to offset 0)\r\n          s->flags++;\r\n          if (*lname == _T('.'))\r\n          {\r\n            // bug #2593369 - mark functions with used global labels as used\r\n            // XXX this puts another hole in function reference counting\r\n            //     a recursive function, for example, will never be optimized\r\n            int nf=cur_functions->getlen()/sizeof(section);\r\n            section *func=(section *)cur_functions->get();\r\n            while (nf-- > 0)\r\n            {\r\n              int fstart = func->code;\r\n              int fend = func->code + func->code_size;\r\n              if (s->code >= fstart && s->code <= fend)\r\n              {\r\n                func->flags++;\r\n                break;\r\n              }\r\n              func++;\r\n            }\r\n          }\r\n          return 0;\r\n        }\r\n        s++;\r\n      }\r\n\r\n      ERROR_MSG(_T(\"Error: could not resolve label \\\"%\") NPRIs _T(\"\\\" in %\") NPRIs _T(\"\\n\"),lname,fn);\r\n      return 1;\r\n    }\r\n  }\r\n  else if (*a < 0) // to jump to a user variable target, -variable_index-1 is already stored.\r\n  {\r\n  }\r\n  // otherwise, *a is 0, which means no jump and we also leave it intact\r\n  return 0;\r\n}\r\n\r\nint CEXEBuild::resolve_call_int(const TCHAR *fn, const TCHAR *str, int fptr, int *ofs)\r\n{\r\n  if (fptr < 0) return 0;\r\n  int nf=cur_functions->getlen()/sizeof(section);\r\n  section *sec=(section *)cur_functions->get();\r\n  while (nf-- > 0)\r\n  {\r\n    if (sec->name_ptr>0 && sec->name_ptr == fptr)\r\n    {\r\n      ofs[0]=sec->code;\r\n      sec->flags++;\r\n      return 0;\r\n    }\r\n    sec++;\r\n  }\r\n  ERROR_MSG(_T(\"Error: resolving %\") NPRIs _T(\" function \\\"%\") NPRIs _T(\"\\\" in %\") NPRIs _T(\"\\n\"),str,(TCHAR*)ns_func.get()+fptr,fn);\r\n  ERROR_MSG(_T(\"Note: uninstall functions must begin with \\\"un.\\\", and install functions must not\\n\"));\r\n  return 1;\r\n}\r\n\r\nint CEXEBuild::resolve_instruction(const TCHAR *fn, const TCHAR *str, entry *w, int offs, int start, int end)\r\n{\r\n  if (w->which == EW_NOP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n  }\r\n#ifdef NSIS_SUPPORT_MESSAGEBOX\r\n  else if (w->which == EW_MESSAGEBOX)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[5],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n  else if (w->which == EW_IFFILEEXISTS)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n  }\r\n  else if (w->which == EW_IFFLAG)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n  }\r\n#ifdef NSIS_SUPPORT_STROPTS\r\n  else if (w->which == EW_STRCMP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n#ifdef NSIS_SUPPORT_INTOPTS\r\n  else if (w->which == EW_INTCMP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[4],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n#ifdef NSIS_SUPPORT_HWNDS\r\n  else if (w->which == EW_ISWINDOW)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n  else if (w->which == EW_CALL)\r\n  {\r\n    if (w->offsets[0] >= 0 && w->offsets[1]) // get as jump\r\n    {\r\n      if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n    }\r\n    else\r\n    {\r\n      if (w->offsets[0] >= 0 && resolve_call_int(fn,str,w->offsets[0],w->offsets)) return 1;\r\n      // if w->offsets[0] >= 0, EW_CALL requires that it 1-based.\r\n      // otherwise, if < 0, it needs an increment anyway (since it\r\n      // was encoded with a -2 base, to prevent it looking like an\r\n      // empty string \"\")\r\n      w->offsets[0]++;\r\n    }\r\n  }\r\n#ifdef NSIS_SUPPORT_STROPTS\r\n  else if (w->which == EW_GETFUNCTIONADDR)\r\n  {\r\n    if (w->offsets[1] < 0)\r\n    {\r\n      ERROR_MSG(_T(\"Error: GetFunctionAddress requires a real function to get address of.\\n\"));\r\n      return 1;\r\n    }\r\n\r\n    if (resolve_call_int(fn,str,w->offsets[1],&w->offsets[1])) return 1;\r\n\r\n    w->which=EW_ASSIGNVAR;\r\n    w->offsets[1]=add_intstring(w->offsets[1]+1); // +1 here to make 1-based.\r\n  }\r\n  else if (w->which == EW_GETLABELADDR)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    w->which=EW_ASSIGNVAR;\r\n    w->offsets[1]=add_intstring(w->offsets[1]);\r\n  }\r\n#endif\r\n  return 0;\r\n}\r\n\r\nint CEXEBuild::resolve_coderefs(const TCHAR *str)\r\n{\r\n  // resolve jumps&calls\r\n  {\r\n    section *sec=(section *)cur_functions->get();\r\n    int l=cur_functions->getlen()/sizeof(section);\r\n    entry *w=(entry *)cur_entries->get();\r\n    while (l-- > 0)\r\n    {\r\n      int x;\r\n      for (x = sec->code; x < sec->code+sec->code_size; x ++)\r\n      {\r\n        TCHAR fname[1024];\r\n        wsprintf(fname,_T(\"function \\\"%\") NPRIs _T(\"\\\"\"),ns_func.get()+sec->name_ptr);\r\n        if (resolve_instruction(fname,str,w+x,x,sec->code,sec->code+sec->code_size)) return 1;\r\n      }\r\n      sec++;\r\n    }\r\n\r\n    int cnt=0;\r\n    sec=(section *)cur_sections->get();\r\n    l=cur_sections->getlen()/sizeof(section);\r\n    while (l-- > 0)\r\n    {\r\n      int x=sec->name_ptr;\r\n      TCHAR fname[1024];\r\n      tstring section_name;\r\n      if (x < 0)\r\n      {\r\n        // lang string\r\n        section_name = _T(\"$(lang string)\");\r\n      }\r\n      else\r\n      {\r\n        // normal string\r\n        cur_strlist->get(x,section_name);\r\n      }\r\n      if (x) wsprintf(fname,_T(\"%\") NPRIs _T(\" section \\\"%\") NPRIs _T(\"\\\" (%d)\"),str,section_name.c_str(),cnt);\r\n      else wsprintf(fname,_T(\"unnamed %\") NPRIs _T(\" section (%d)\"),str,cnt);\r\n      for (x = sec->code; x < sec->code+sec->code_size; x ++)\r\n      {\r\n        if (resolve_instruction(fname,str,w+x,x,sec->code,sec->code+sec->code_size))\r\n          return 1;\r\n      }\r\n      sec++;\r\n      cnt++;\r\n    }\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n    if (cur_pages->getlen()) {\r\n      page *p=(page *)cur_pages->get();\r\n      int i = 0;\r\n      while (i < cur_header->blocks[NB_PAGES].num) {\r\n        TCHAR pagestr[1024];\r\n        wsprintf(pagestr, _T(\"%\") NPRIs _T(\" pages\"), str);\r\n        if (resolve_call_int(pagestr,p->dlg_id?_T(\"pre-page\"):_T(\"create-page\"),p->prefunc,&p->prefunc)) return 1;\r\n        if (resolve_call_int(pagestr,_T(\"show-page\"),p->showfunc,&p->showfunc)) return 1;\r\n        if (resolve_call_int(pagestr,_T(\"leave-page\"),p->leavefunc,&p->leavefunc)) return 1;\r\n        p++;\r\n        i++;\r\n      }\r\n    }\r\n#endif\r\n#endif\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n  // resolve callbacks\r\n  {\r\n    struct {\r\n      const TCHAR *name;\r\n      int *p;\r\n    } callbacks[] = {\r\n      {_T(\"%\") NPRIs _T(\".onInit\"), &cur_header->code_onInit},\r\n      {_T(\"%\") NPRIs _T(\".on%\") NPRIs _T(\"InstSuccess\"), &cur_header->code_onInstSuccess},\r\n      {_T(\"%\") NPRIs _T(\".on%\") NPRIs _T(\"InstFailed\"), &cur_header->code_onInstFailed},\r\n      {_T(\"%\") NPRIs _T(\".onUserAbort\"), &cur_header->code_onUserAbort},\r\n      {_T(\"%\") NPRIs _T(\".onVerifyInstDir\"), &cur_header->code_onVerifyInstDir},\r\n#ifdef NSIS_CONFIG_ENHANCEDUI_SUPPORT\r\n      {_T(\"%\") NPRIs _T(\".onGUIInit\"), &cur_header->code_onGUIInit},\r\n      {_T(\"%\") NPRIs _T(\".onGUIEnd\"), &cur_header->code_onGUIEnd},\r\n      {_T(\"%\") NPRIs _T(\".onMouseOverSection\"), &cur_header->code_onMouseOverSection},\r\n#endif//NSIS_CONFIG_ENHANCEDUI_SUPPORT\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n      {_T(\"%\") NPRIs _T(\".onSelChange\"), &cur_header->code_onSelChange},\r\n#endif//NSIS_CONFIG_COMPONENTPAGE\r\n#ifdef NSIS_SUPPORT_REBOOT\r\n      {_T(\"%\") NPRIs _T(\".onRebootFailed\"), &cur_header->code_onRebootFailed},\r\n#endif//NSIS_SUPPORT_REBOOT\r\n      {0, 0}\r\n    };\r\n\r\n    for (int i = 0; callbacks[i].name; i++) {\r\n      const TCHAR *un = uninstall_mode ? _T(\"un\") : _T(\"\");\r\n      TCHAR fname[1024];\r\n      wsprintf(fname, callbacks[i].name, un, un);\r\n      TCHAR cbstr[1024];\r\n      wsprintf(cbstr, _T(\"%\") NPRIs _T(\" callback\"), str);\r\n      TCHAR cbstr2[1024];\r\n      wsprintf(cbstr2, _T(\"%\") NPRIs _T(\".callbacks\"), un);\r\n\r\n      if (resolve_call_int(cbstr,cbstr2,ns_func.find(fname,0),callbacks[i].p))\r\n        return PS_ERROR;\r\n    }\r\n  }\r\n#endif//NSIS_SUPPORT_CODECALLBACKS\r\n\r\n  // optimize unused functions\r\n  {\r\n    section *sec=(section *)cur_functions->get();\r\n    int l=cur_functions->getlen()/sizeof(section);\r\n    entry *w=(entry*)cur_entries->get();\r\n    while (l-- > 0)\r\n    {\r\n      if (sec->name_ptr)\r\n      {\r\n        if (!sec->flags)\r\n        {\r\n          if (sec->code_size>0)\r\n          {\r\n            warning(DW_UNUSED_FUNCTION, _T(\"%\") NPRIs _T(\" function \\\"%\") NPRIs _T(\"\\\" not referenced - zeroing code (%d-%d) out\\n\"),str,\r\n              ns_func.get()+sec->name_ptr,\r\n              sec->code,sec->code+sec->code_size);\r\n            memset(w+sec->code,0,sec->code_size*sizeof(entry));\r\n          }\r\n        }\r\n      }\r\n      sec++;\r\n    }\r\n  }\r\n\r\n  // give warnings on unused labels\r\n  {\r\n    section *t=(section*)cur_labels->get();\r\n    int n=cur_labels->getlen()/sizeof(section);\r\n    while (n-->0)\r\n    {\r\n      if (!t->flags)\r\n      {\r\n        TCHAR *n=(TCHAR*)ns_label.get()+t->name_ptr;\r\n        if (*n == _T('.')) warning(DW_UNUSED_GLOBALLABEL, _T(\"global label \\\"%\") NPRIs _T(\"\\\" not used\"),n);\r\n        else warning(DW_UNUSED_LABEL, _T(\"label \\\"%\") NPRIs _T(\"\\\" not used\"),n);\r\n      }\r\n      t++;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\nint CEXEBuild::add_page(int type)\r\n{\r\n  page pg = {\r\n    0,\r\n    0,\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n    -1,\r\n    -1,\r\n    -1,\r\n#endif\r\n    0,\r\n  };\r\n\r\n#ifndef NSIS_CONFIG_LICENSEPAGE\r\n  if (type == PAGE_LICENSE)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"license\", \"NSIS_CONFIG_LICENSEPAGE\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n#ifndef NSIS_CONFIG_COMPONENTPAGE\r\n  if (type == PAGE_COMPONENTS)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"components\", \"NSIS_CONFIG_COMPONENTPAGE\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n#ifndef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (type == PAGE_COMPONENTS)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"uninstConfirm\", \"NSIS_CONFIG_UNINSTALL_SUPPORT\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n\r\n  struct {\r\n    int wndproc_id;\r\n    int dlg_id;\r\n    const TCHAR *name;\r\n  } ids[] = {\r\n    {PWP_CUSTOM, 0, _T(\"custom\")}, // custom\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n    {PWP_LICENSE, IDD_LICENSE, _T(\"license\")}, // license\r\n#else\r\n    {0, IDD_LICENSE, _T(\"license\")}, // license\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    {PWP_SELCOM, IDD_SELCOM, _T(\"components\")}, // components\r\n#else\r\n    {0, IDD_SELCOM, _T(\"components\")}, // components\r\n#endif\r\n    {PWP_DIR, IDD_DIR, _T(\"directory\")}, // directory\r\n    {PWP_INSTFILES, IDD_INSTFILES, _T(\"instfiles\")}, // instfiles\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    {PWP_UNINST, IDD_UNINST, _T(\"uninstConfirm\")}, // uninstConfirm\r\n#else\r\n    {0, IDD_UNINST, _T(\"uninstConfirm\")}, // uninstConfirm\r\n#endif\r\n    {PWP_COMPLETED, -1, NULL} // completed\r\n  };\r\n\r\n  pg.wndproc_id = ids[type].wndproc_id;\r\n  pg.dlg_id = ids[type].dlg_id;\r\n\r\n  cur_pages->add(&pg,sizeof(page));\r\n\r\n  cur_page = (page *)cur_pages->get() + cur_header->blocks[NB_PAGES].num++;\r\n  cur_page_type = type;\r\n  \r\n  set_code_type_predefines(ids[type].name);\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::page_end()\r\n{\r\n  cur_page = 0;\r\n\r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\nint CEXEBuild::AddVersionInfo()\r\n{\r\n  GrowBuf VerInfoStream;\r\n\r\n  // Should probably check for (4 & version_fixedflags) here, but VIProductVersion without VIAddVersionKey\r\n  // fails silently, so VIFileVersion does the same...\r\n  if ( rVersionInfo.GetStringTablesCount() > 0 )\r\n  {\r\n    if ( !(1 & version_fixedflags) )\r\n    {\r\n      ERROR_MSG(_T(\"Error: VIProductVersion is required when other version information functions are used.\\n\"));\r\n      return PS_ERROR;\r\n    }\r\n    else\r\n    {\r\n      if ( !(2 & version_fixedflags) )\r\n      {\r\n        // This error string should match the one used by the TOK_VI_SETFILEVERSION handler\r\n        ERROR_MSG(_T(\"Error: invalid %\") NPRIs _T(\" format, should be X.X.X.X\\n\"),_T(\"VIProductVersion\"));\r\n        return PS_ERROR;\r\n      }\r\n\r\n      try\r\n      {\r\n        init_res_editor();\r\n        for ( int i = 0; i < rVersionInfo.GetStringTablesCount(); i++ )\r\n        {\r\n          LANGID lang_id = rVersionInfo.GetLangID(i);\r\n          int code_page = rVersionInfo.GetCodePage(i);\r\n\r\n          const TCHAR *lang_name = GetLangNameAndCPForVersionResource(lang_id, NULL, false);\r\n\r\n          const TCHAR *recverkeys = \r\n            _T(\"FileVersion\\0\")\r\n            _T(\"FileDescription\\0\")\r\n            _T(\"LegalCopyright\\0\");\r\n          for(;;)\r\n          {\r\n            if ( !*recverkeys ) break;\r\n            if ( !rVersionInfo.FindKey(lang_id, code_page, recverkeys) )\r\n              warning(DW_VI_MISSINGSTDKEY, _T(\"Generating version information for language \\\"%04d-%\") NPRIs _T(\"\\\" without standard key \\\"%\") NPRIs _T(\"\\\"\"), lang_id, lang_name, recverkeys);\r\n            recverkeys += _tcsclen(recverkeys) + 1;\r\n          }\r\n\r\n          rVersionInfo.ExportToStream(VerInfoStream, i);\r\n          res_editor->UpdateResource(RT_VERSION, 1, lang_id, (BYTE*)VerInfoStream.get(), VerInfoStream.getlen());\r\n        }\r\n      }\r\n      catch (exception& err) {\r\n        ERROR_MSG(_T(\"Error adding version information: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n        return PS_ERROR;\r\n      }\r\n    }\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_SUPPORT_VERSION_INFO\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\nint CEXEBuild::ProcessPages()\r\n{\r\n  SCRIPT_MSG(_T(\"Processing pages... \"));\r\n\r\n  int license_normal=0;\r\n  int license_fsrb=0;\r\n  int license_fscb=0;\r\n  int selcom=0;\r\n  int dir=0;\r\n  int uninstconfirm=0;\r\n  int instlog=0, instlog_used;\r\n  int main=0;\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\nagain:\r\n#endif\r\n\r\n  instlog_used = 0;\r\n\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  if ((cur_header->flags & (CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) == 0)\r\n#endif\r\n  {\r\n    main++;\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n#define LS(inst, uninst) (uninstall_mode ? uninst : inst)\r\n#else\r\n#define LS(inst, uninst) inst\r\n#endif\r\n\r\n    DefineInnerLangString(NLF_BRANDING);\r\n\r\n    if (!cur_pages->getlen()) {\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n      if (uninstall_mode) {\r\n        if (HasUserDefined(NLF_UNINST_TEXT)) {\r\n          add_page(PAGE_UNINSTCONFIRM);\r\n          page_end();\r\n        }\r\n        add_page(PAGE_INSTFILES);\r\n        page_end();\r\n        add_page(PAGE_COMPLETED);\r\n        page_end();\r\n      }\r\n      else\r\n#endif\r\n      {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n        if (HasUserDefined(NLF_LICENSE_TEXT) && HasUserDefined(NLF_LICENSE_DATA)) {\r\n          add_page(PAGE_LICENSE);\r\n          page_end();\r\n        }\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n        if (HasUserDefined(NLF_COMP_TEXT)) {\r\n          add_page(PAGE_COMPONENTS);\r\n          page_end();\r\n        }\r\n#endif\r\n        if (HasUserDefined(NLF_DIR_TEXT)) {\r\n          add_page(PAGE_DIRECTORY);\r\n          page_end();\r\n        }\r\n        add_page(PAGE_INSTFILES);\r\n        page_end();\r\n        add_page(PAGE_COMPLETED);\r\n        page_end();\r\n      }\r\n    }\r\n    // start processing the pages\r\n    {\r\n      int i = 0;\r\n      page *p = (page *) cur_pages->get();\r\n\r\n      for (i = 0; i < cur_header->blocks[NB_PAGES].num; i++, p++) {\r\n        page *pp = 0;\r\n\r\n        if (i) {\r\n          pp = p - 1;\r\n\r\n          // set back button\r\n          p->flags |= PF_BACK_SHOW;\r\n          if (pp->wndproc_id != PWP_COMPLETED && p->wndproc_id != PWP_COMPLETED && p->wndproc_id != PWP_INSTFILES)\r\n            p->flags |= PF_BACK_ENABLE;\r\n          if (!p->back)\r\n            p->back = DefineInnerLangString(NLF_BTN_BACK);\r\n\r\n          // set previous page's next button\r\n          if (!pp->next) {\r\n            int str = 0;\r\n\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n            if (pp->wndproc_id == PWP_LICENSE && (!(pp->flags & PF_LICENSE_FORCE_SELECTION) || HasUserDefined(NLF_BTN_LICENSE)))\r\n              str = NLF_BTN_LICENSE;\r\n            else\r\n#endif\r\n            if (p->wndproc_id == PWP_INSTFILES)\r\n              str = LS(NLF_BTN_INSTALL, NLF_BTN_UNINSTALL);\r\n            else\r\n              str = NLF_BTN_NEXT;\r\n\r\n            pp->next = DefineInnerLangString(str);\r\n          }\r\n\r\n          // set previous page's click next text\r\n          if (!pp->clicknext) {\r\n            int str = 0;\r\n\r\n            if (p->wndproc_id == PWP_INSTFILES)\r\n              str = LS(NLF_CLICK_INSTALL, NLF_CLICK_UNINSTALL);\r\n            else\r\n              str = NLF_CLICK_NEXT;\r\n\r\n            pp->clicknext = DefineInnerLangString(str);\r\n          }\r\n        }\r\n\r\n        // enable next button\r\n        if (p->wndproc_id != PWP_INSTFILES)\r\n          p->flags |= PF_NEXT_ENABLE;\r\n\r\n        // set cancel button\r\n        if (!p->cancel)\r\n          p->cancel = DefineInnerLangString(NLF_BTN_CANCEL);\r\n        if (p->wndproc_id != PWP_INSTFILES && p->wndproc_id != PWP_COMPLETED)\r\n          p->flags |= PF_CANCEL_ENABLE;\r\n\r\n        // set caption\r\n        struct {\r\n          int caption;\r\n          int ucaption;\r\n        } captions[] = {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n          {NLF_SUBCAPTION_LICENSE, NLF_SUBCAPTION_LICENSE},\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n          {NLF_SUBCAPTION_OPTIONS, NLF_SUBCAPTION_OPTIONS},\r\n#endif\r\n          {NLF_SUBCAPTION_DIR, NLF_SUBCAPTION_DIR},\r\n          {NLF_SUBCAPTION_INSTFILES, NLF_USUBCAPTION_INSTFILES},\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n          {NLF_USUBCAPTION_CONFIRM, NLF_USUBCAPTION_CONFIRM},\r\n#endif\r\n          {NLF_SUBCAPTION_COMPLETED, NLF_USUBCAPTION_COMPLETED}\r\n        };\r\n\r\n        if (!p->caption && p->wndproc_id != PWP_CUSTOM) {\r\n          p->caption = DefineInnerLangString(LS(captions[p->wndproc_id].caption, captions[p->wndproc_id].ucaption));\r\n        }\r\n\r\n        // set texts\r\n        switch (p->dlg_id) {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n          case IDD_LICENSE:\r\n          case IDD_LICENSE_FSRB:\r\n          case IDD_LICENSE_FSCB:\r\n          {\r\n            if (!(p->flags & PF_PAGE_EX))\r\n              p->dlg_id = license_res_id;\r\n            if (!(p->flags & (PF_LICENSE_FORCE_SELECTION | PF_LICENSE_NO_FORCE_SELECTION)))\r\n              p->dlg_id = license_res_id;\r\n\r\n            p->flags |= PF_NO_NEXT_FOCUS;\r\n\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_LICENSE_DATA, 0);\r\n\r\n            if (p->dlg_id == IDD_LICENSE) {\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT, NLF_ULICENSE_TEXT));\r\n\r\n              license_normal++;\r\n            }\r\n            else if (p->dlg_id == IDD_LICENSE_FSCB) {\r\n              p->flags |= PF_LICENSE_FORCE_SELECTION;\r\n\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT_FSCB, NLF_ULICENSE_TEXT_FSCB));\r\n              if (!p->parms[2])\r\n                p->parms[2] = DefineInnerLangString(NLF_BTN_LICENSE_AGREE);\r\n\r\n              license_fscb++;\r\n            }\r\n            else if (p->dlg_id == IDD_LICENSE_FSRB) {\r\n              p->flags |= PF_LICENSE_FORCE_SELECTION;\r\n\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT_FSRB, NLF_ULICENSE_TEXT_FSRB));\r\n              if (!p->parms[2])\r\n                p->parms[2] = DefineInnerLangString(NLF_BTN_LICENSE_AGREE);\r\n              if (!p->parms[3])\r\n                p->parms[3] = DefineInnerLangString(NLF_BTN_LICENSE_DISAGREE);\r\n\r\n              license_fsrb++;\r\n            }\r\n            break;\r\n          }\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n          case IDD_SELCOM:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(LS(NLF_COMP_TEXT, NLF_UCOMP_TEXT));\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT1, NLF_UCOMP_SUBTEXT1));\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT2, NLF_UCOMP_SUBTEXT2));\r\n            if (!p->parms[3] && !uninstall_mode && HasUserDefined(NLF_COMP_SUBTEXT1))\r\n              p->parms[3] = p->parms[1];\r\n            if (!p->parms[4] && !uninstall_mode && HasUserDefined(NLF_COMP_SUBTEXT2))\r\n              p->parms[4] = p->parms[2];\r\n            else if (!p->parms[4])\r\n              p->parms[4] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT1_NO_INST_TYPES, NLF_UCOMP_SUBTEXT1_NO_INST_TYPES));\r\n\r\n            DefineInnerLangString(NLF_SPACE_REQ);\r\n            DefineInnerLangString(NLF_BYTE);\r\n            DefineInnerLangString(NLF_KILO);\r\n            DefineInnerLangString(NLF_MEGA);\r\n            DefineInnerLangString(NLF_GIGA);\r\n\r\n            selcom++;\r\n            break;\r\n          }\r\n#endif\r\n          case IDD_DIR:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(LS(NLF_DIR_TEXT, NLF_UDIR_TEXT));\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(LS(NLF_DIR_SUBTEXT, NLF_UDIR_SUBTEXT));\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(NLF_BTN_BROWSE);\r\n            if (!p->parms[3])\r\n              p->parms[3] = DefineInnerLangString(LS(NLF_DIR_BROWSETEXT, NLF_UDIR_BROWSETEXT));\r\n            if (!p->parms[4])\r\n              p->parms[4] = m_UserVarNames.get(_T(\"INSTDIR\"));\r\n            else\r\n              p->parms[4]--;\r\n\r\n            DefineInnerLangString(NLF_SPACE_AVAIL);\r\n            DefineInnerLangString(NLF_SPACE_REQ);\r\n            DefineInnerLangString(NLF_BYTE);\r\n            DefineInnerLangString(NLF_KILO);\r\n            DefineInnerLangString(NLF_MEGA);\r\n            DefineInnerLangString(NLF_GIGA);\r\n#ifdef NSIS_CONFIG_LOG\r\n            DefineInnerLangString(NLF_LOG_INSTALL_PROCESS);\r\n#endif\r\n\r\n            dir++;\r\n            break;\r\n          }\r\n          case IDD_INSTFILES:\r\n          {\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_BTN_DETAILS);\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(NLF_COMPLETED);\r\n\r\n            DefineInnerLangString(NLF_COPY_DETAILS);\r\n\r\n            instlog++;\r\n            instlog_used++;\r\n            break;\r\n          }\r\n          case IDD_UNINST:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(NLF_UNINST_TEXT);\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_UNINST_SUBTEXT);\r\n            if (!p->parms[4])\r\n              p->parms[4] = m_UserVarNames.get(_T(\"INSTDIR\"));\r\n            else\r\n              p->parms[4]--;\r\n\r\n            uninstconfirm++;\r\n            break;\r\n          }\r\n        }\r\n\r\n        p->flags &= ~PF_PAGE_EX;\r\n      }\r\n\r\n      p--;\r\n\r\n      if (!p->next)\r\n        p->next = DefineInnerLangString(NLF_BTN_CLOSE);\r\n      if (p->wndproc_id == PWP_COMPLETED)\r\n        (p-1)->next = DefineInnerLangString(NLF_BTN_CLOSE);\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n      if (uninstall_mode) {\r\n        if (!uenable_last_page_cancel && instlog_used)\r\n          p->flags &= ~PF_CANCEL_ENABLE;\r\n      }\r\n      else\r\n#endif\r\n      {\r\n        if (!enable_last_page_cancel && instlog_used)\r\n          p->flags &= ~PF_CANCEL_ENABLE;\r\n      }\r\n\r\n      if (!instlog_used) {\r\n        warning(DW_INSTFILESPAGE_NOT_USED, _T(\"%\") NPRIs _T(\"age instfiles not used, no sections will be executed!\"), uninstall_mode ? _T(\"Uninstall p\") : _T(\"P\"));\r\n      }\r\n    }\r\n  }\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!uninstall_mode) {\r\n      set_uninstall_mode(1);\r\n      goto again;\r\n    }\r\n    else\r\n      set_uninstall_mode(0);\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n\r\n\r\n  SCRIPT_MSG(_T(\"Done!\\n\"));\r\n\r\n#define REMOVE_ICON(id) if (disable_window_icon) { \\\r\n    BYTE* dlg = res_editor->GetResource(RT_DIALOG, id, NSIS_DEFAULT_LANG); \\\r\n    if (dlg) { \\\r\n      CDialogTemplate dt(dlg,build_unicode,uDefCodePage); \\\r\n      res_editor->FreeResource(dlg); \\\r\n      if (dt.RemoveItem(IDC_ULICON)) { \\\r\n        DialogItemTemplate* text = dt.GetItem(IDC_INTROTEXT); \\\r\n        DialogItemTemplate* prog = dt.GetItem(IDC_PROGRESS); \\\r\n        if (text) { \\\r\n          text->sWidth += text->sX; \\\r\n          text->sX = 0; \\\r\n        } \\\r\n        if (prog) { \\\r\n          prog->sWidth += prog->sX; \\\r\n          prog->sX = 0; \\\r\n        } \\\r\n         \\\r\n        DWORD dwSize; \\\r\n        dlg = dt.Save(dwSize); \\\r\n        res_editor->UpdateResource(RT_DIALOG, id, NSIS_DEFAULT_LANG, dlg, dwSize); \\\r\n        dt.FreeSavedTemplate(dlg); \\\r\n      } \\\r\n    } \\\r\n  }\r\n\r\n  try {\r\n    SCRIPT_MSG(_T(\"Removing unused resources... \"));\r\n    init_res_editor();\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n    if (!license_normal) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE);\r\n    if (!license_fsrb) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE_FSRB, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE_FSRB);\r\n    if (!license_fscb) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE_FSCB, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE_FSCB);\r\n#endif // NSIS_CONFIG_LICENSEPAGE\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    if (!selcom) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_SELCOM, NSIS_DEFAULT_LANG, 0, 0);\r\n      res_editor->UpdateResource(RT_BITMAP, IDB_BITMAP1, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_SELCOM);\r\n#endif // NSIS_CONFIG_COMPONENTPAGE\r\n    if (!dir) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_DIR, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_DIR);\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!uninstconfirm) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_UNINST, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_UNINST);\r\n#endif // NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!instlog) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_INSTFILES, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_INSTFILES);\r\n    if (!main) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_INST, NSIS_DEFAULT_LANG, 0, 0);\r\n      if (!build_compress_whole && !build_crcchk)\r\n        res_editor->UpdateResource(RT_DIALOG, IDD_VERIFY, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n\r\n    SCRIPT_MSG(_T(\"Done!\\n\"));\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\nvoid CEXEBuild::PrepareInstTypes()\r\n{\r\n  if (!(cur_header->flags & CH_FLAGS_NO_CUSTOM))\r\n    cur_header->install_types[NSIS_MAX_INST_TYPES] = DefineInnerLangString(NLF_COMP_CUSTOM);\r\n\r\n  // set insttype list for RO sections that didn't use SectionIn\r\n  int i = cur_header->blocks[NB_SECTIONS].num;\r\n  section *sections = (section *) cur_sections->get();\r\n\r\n  while (i--)\r\n  {\r\n    if (sections[i].flags & SF_RO && !sections[i].install_types)\r\n      sections[i].install_types = ~0;\r\n  }\r\n\r\n  // set selection to first insttype\r\n  if (cur_header->install_types[0])\r\n  {\r\n    int i = cur_header->blocks[NB_SECTIONS].num;\r\n    section *sections = (section *) cur_sections->get();\r\n\r\n    // if /o was used abort since the user did his manual choice\r\n    while (i--)\r\n      if ((sections[i].flags & SF_SELECTED) == 0)\r\n        return;\r\n\r\n    i = cur_header->blocks[NB_SECTIONS].num;\r\n\r\n    while (i--)\r\n      if ((sections[i].install_types & 1) == 0)\r\n        sections[i].flags &= ~SF_SELECTED;\r\n  }\r\n}\r\n#endif\r\n\r\nvoid CEXEBuild::AddStandardStrings()\r\n{\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (uninstall_mode)\r\n  {\r\n    cur_header->str_uninstchild = add_asciistring(_T(\"$TEMP\\\\Un_$1.exe\"));\r\n    cur_header->str_uninstcmd = add_asciistring(_T(\"\\\"$TEMP\\\\Un_$1.exe\\\" $0 _?=$INSTDIR\\\\\"));\r\n  }\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n  cur_header->str_wininit = is_target_64bit() ? 0 : add_asciistring(_T(\"$WINDIR\\\\wininit.ini\"));\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n}\r\n\r\nwriter_target_info CEXEBuild::mk_writer_target_info() { return writer_target_info(build_unicode, is_target_64bit()); }\r\n\r\nvoid CEXEBuild::PrepareHeaders(IGrowBuf *hdrbuf)\r\n{\r\n  const writer_target_info ti = mk_writer_target_info();\r\n  const unsigned int cbHdr = get_header_size();\r\n  GrowBuf blocks_buf;\r\n  growbuf_writer_sink sink(&blocks_buf, ti);\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  cur_header->blocks[NB_PAGES].offset = cbHdr + blocks_buf.getlen();\r\n  page_writer::write_block(cur_pages, &sink);\r\n#endif\r\n\r\n  cur_header->blocks[NB_SECTIONS].offset = cbHdr + blocks_buf.getlen();\r\n  section_writer::write_block(cur_sections, &sink);\r\n\r\n  cur_header->blocks[NB_ENTRIES].offset = cbHdr + blocks_buf.getlen();\r\n  entry_writer::write_block(cur_entries, &sink);\r\n\r\n  cur_header->blocks[NB_STRINGS].offset = cbHdr + blocks_buf.getlen();\r\n  blocks_buf.add(cur_strlist->getstorageptr(), cur_strlist->gettotalsize());\r\n\r\n  cur_header->blocks[NB_LANGTABLES].offset = cbHdr + blocks_buf.getlen();\r\n  lang_table_writer::write_block(cur_langtables, &sink, cur_header->langtable_size);\r\n\r\n  cur_header->blocks[NB_CTLCOLORS].offset = cbHdr + blocks_buf.getlen();\r\n  ctlcolors_writer::write_block(cur_ctlcolors, &sink);\r\n\r\n#ifdef NSIS_SUPPORT_BGBG\r\n  if (cur_header->bg_color1 != -1)\r\n  {\r\n    bg_font.lfFaceName[LF_FACESIZE-1] = 0;\r\n\r\n    cur_header->blocks[NB_BGFONT].offset = cbHdr + blocks_buf.getlen();\r\n\r\n    LOGFONT_writer w(&sink);\r\n    w.write(&bg_font);\r\n  }\r\n#endif\r\n\r\n  growbuf_writer_sink sink2(hdrbuf, ti);\r\n  header_writer header(&sink2);\r\n  header.write(cur_header, ti);\r\n\r\n  sink2.write_growbuf(&blocks_buf);\r\n}\r\n\r\nint CEXEBuild::SetVarsSection()\r\n{\r\n  try {\r\n    init_res_editor();\r\n\r\n    VerifyDeclaredUserVarRefs(&m_UserVarNames);\r\n    int MaxUserVars = m_UserVarNames.getnum();\r\n    int stringSize = NSIS_MAX_STRLEN * (build_unicode?2:1);\r\n    if (!res_editor->SetPESectionVirtualSize(NSIS_VARS_SECTION, MaxUserVars * stringSize))\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12346: invalid exehead cannot find section \\\"%\") NPRIs _T(\"\\\"!\\n\"), _T(NSIS_VARS_SECTION));\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::SetManifest()\r\n{\r\n  try {\r\n    init_res_editor();\r\n    manifest::SPECIFICATION spec = { (manifest::flags) manifest_flags, manifest_dpiaware, manifest_dpiawareness.c_str(), manifest_lpaware, &manifest_sosl, manifest_maxversiontested.c_str() };\r\n    string manifest = manifest::generate(manifest_comctl, manifest_exec_level, spec);\r\n\r\n    if (manifest == \"\")\r\n      return PS_OK;\r\n\r\n    if (!build_unicode && manifest_lpaware >= manifest::lpaware_true)\r\n      throw std::runtime_error(\"Incompatible option\");\r\n\r\n    // TODO: Ideally we should allow this but we must be sure that the manifest is custom and not a manifest from the stub\r\n    //if (res_editor->ResourceExists(MAKEINTRESOURCE(24), 1, CResourceEditor::ANYLANGID))\r\n    //  return PS_OK; // Allow user to completely override the manifest with PEAddResource\r\n\r\n    // Saved directly as binary into the exe.\r\n    res_editor->UpdateResource(MAKEINTRESOURCE(24), 1, NSIS_DEFAULT_LANG, (LPBYTE) const_cast<char*>(manifest.c_str()), (DWORD) manifest.length());\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"Error setting manifest: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::UpdatePEHeader()\r\n{\r\n  try {\r\n    PIMAGE_NT_HEADERS headers = CResourceEditor::GetNTHeaders(m_exehead);\r\n    // workaround for bug #2697027, #2725883, #2803097\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MajorImageVersion) = FIX_ENDIAN_INT16(6);\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MinorImageVersion) = FIX_ENDIAN_INT16(0);\r\n    // Override SubsystemVersion?\r\n    if (PESubsysVerMaj != (WORD) -1)\r\n    {\r\n      *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MajorSubsystemVersion) = FIX_ENDIAN_INT16(PESubsysVerMaj);\r\n      *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MinorSubsystemVersion) = FIX_ENDIAN_INT16(PESubsysVerMin);\r\n    }\r\n    // DllCharacteristics\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, DllCharacteristics) = FIX_ENDIAN_INT16(PEDllCharacteristics);\r\n  } catch (std::runtime_error& err) {\r\n    ERROR_MSG(_T(\"Error updating PE headers: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::set_default_output_filename(const tstring& filename)\r\n{\r\n    if (build_output_filename[0] == 0)\r\n        my_strncpy(build_output_filename,filename.c_str(),COUNTOF(build_output_filename));\r\n}\r\n\r\nint CEXEBuild::check_write_output_errors() const\r\n{\r\n  if (has_called_write_output)\r\n  {\r\n    ERROR_MSG(_T(\"Error (write_output): write_output already called, can't continue\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_output_filename[0])\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: never had OutFile command\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_sections.getlen())\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: no sections specified\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_entries.getlen())\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: no entries specified\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (sectiongroup_open_cnt)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionGroup left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (cur_page)\r\n  {\r\n    ERROR_MSG(_T(\"Error: PageEx left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  // deal with functions, for both install and uninstall modes.\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::prepare_uninstaller() {\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (ubuild_entries.getlen())\r\n  {\r\n    if (!uninstaller_writes_used)\r\n    {\r\n      warning(DW_UNCODE_WITHOUT_UNEXE, _T(\"Uninstaller script code found but WriteUninstaller never used - no uninstaller will be created.\"));\r\n      return PS_OK;\r\n    }\r\n\r\n    build_uninst.flags|=build_header.flags&(CH_FLAGS_PROGRESS_COLORED|CH_FLAGS_NO_ROOT_DIR);\r\n\r\n    set_uninstall_mode(1);\r\n\r\n    DefineInnerLangString(NLF_UCAPTION);\r\n\r\n    if (resolve_coderefs(_T(\"uninstall\")))\r\n      return PS_ERROR;\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    // set sections to the first insttype\r\n    PrepareInstTypes();\r\n#endif\r\n\r\n    // Add standard strings to string table\r\n    AddStandardStrings();\r\n\r\n    set_uninstall_mode(0);\r\n  }\r\n  else if (uninstaller_writes_used)\r\n  {\r\n    ERROR_MSG(_T(\"Error: no Uninstall section specified, but WriteUninstaller used %d time(s)\\n\"),uninstaller_writes_used);\r\n    return PS_ERROR;\r\n  }\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::pack_exe_header()\r\n{\r\n  if (!(build_packname[0] && build_packcmd[0])) {\r\n    // header not asked to be packed\r\n    return PS_OK;\r\n  }\r\n\r\n  // write out exe header, pack, read back in, and\r\n  // update the header info\r\n  if (m_exehead_size != write_octets_to_file(build_packname, m_exehead, m_exehead_size))\r\n  {\r\n    ERROR_MSG(_T(\"Error: writing temporary file \\\"%\") NPRIs _T(\"\\\" for pack\\n\"),build_packname);\r\n    return PS_ERROR;\r\n  }\r\n  int ec = sane_system(build_packcmd);\r\n  if (ec == -1)\r\n  {\r\n    _tremove(build_packname);\r\n    ERROR_MSG(_T(\"Error: calling packer on \\\"%\") NPRIs _T(\"\\\"\\n\"),build_packname);\r\n    return PS_ERROR;\r\n  }\r\n  if (ec != 0)\r\n    warning(DW_PACKHDR_RETNONZERO, _T(\"Packer returned %d, \\\"%\") NPRIs _T(\"\\\" might still be unpacked\\n\"),ec,build_packname);\r\n\r\n  int result = update_exehead(build_packname);\r\n  _tremove(build_packname);\r\n\r\n  if (result != PS_OK)\r\n  {\r\n    ERROR_MSG(_T(\"Error: reading temporary file \\\"%\") NPRIs _T(\"\\\" after pack\\n\"),build_packname);\r\n    return result;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::write_output(void)\r\n{\r\n#ifndef NSIS_CONFIG_CRC_SUPPORT\r\n  build_crcchk=0;\r\n#endif\r\n\r\n  RET_UNLESS_OK( check_write_output_errors() );\r\n\r\n  has_called_write_output=true;\r\n  if (!changed_target && !build_unicode)\r\n    warning(DW_GENERIC_DEPRECATED, _T(\"ANSI targets are deprecated\"));\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  RET_UNLESS_OK( add_plugins_dir_initializer() );\r\n#endif //NSIS_CONFIG_PLUGIN_SUPPORT\r\n\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\n  RET_UNLESS_OK( AddVersionInfo() );\r\n#endif //NSIS_SUPPORT_VERSION_INFO\r\n\r\n  RET_UNLESS_OK( prepare_uninstaller() );\r\n\r\n  DefineInnerLangString(NLF_CAPTION);\r\n  if (resolve_coderefs(_T(\"install\")))\r\n    return PS_ERROR;\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  // set sections to the first insttype\r\n  PrepareInstTypes();\r\n#endif\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  RET_UNLESS_OK( ProcessPages() );\r\n#endif //NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\n  // Generate language tables\r\n  RET_UNLESS_OK( GenerateLangTables() );\r\n\r\n  // Setup user variables PE section\r\n  RET_UNLESS_OK( SetVarsSection() );\r\n\r\n  // Set XML manifest\r\n  RET_UNLESS_OK( SetManifest() );\r\n\r\n  // Add standard strings to string table\r\n  AddStandardStrings();\r\n\r\n  try {\r\n    // Load icon from exe, if needed\r\n    if (installer_icon.empty())\r\n    {\r\n      init_res_editor();\r\n      installer_icon = load_icon_res(res_editor, IDI_ICON2);\r\n    }\r\n\r\n    // Set icon\r\n    set_main_icon(res_editor, IDI_ICON2, installer_icon, uninstaller_icon);\r\n\r\n    // Save all changes to the exe header\r\n    close_res_editor();\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  // Final PE touch-ups\r\n  RET_UNLESS_OK( UpdatePEHeader() );\r\n\r\n  RET_UNLESS_OK( pack_exe_header() );\r\n\r\n\r\n  build_optimize_datablock=0;\r\n\r\n  UINT data_block_size_before_uninst = build_datablock.getlen();\r\n\r\n  RET_UNLESS_OK( uninstall_generate() );\r\n\r\n  unsigned char limit = 0; // Limit the number of retries in case the host has some kind of bug\r\nretry_output:\r\n  {\r\n    tstring full_path = get_full_path(build_output_filename), fnamebuf = get_file_name(build_output_filename);\r\n    notify(MakensisAPI::NOTIFY_OUTPUT, full_path.c_str());\r\n    INFO_MSG(_T(\"\\nOutput: \\\"%\") NPRIs _T(\"\\\"\\n\"), full_path.c_str());\r\n    const TCHAR *fname = fnamebuf.c_str();\r\n    // Warn when special compatibility names are used. See also: http://github.com/wixtoolset/wix4/commit/3f4341b8ac4d13dffb1d6ba773d48ccc0ab07cf8\r\n    if (!_tcsicmp(fname, _T(\"setup.exe\")))\r\n    {\r\n      const bool orgdispwarn = display_warnings;\r\n      display_warnings = false; // Don't display warning inline in the middle of our statistics output.\r\n      warning(DW_INSECURE_OUTFILENAME, _T(\"Insecure filename \\\"%\") NPRIs _T(\"\\\", Windows will unsafely load compatibility shims into the process.\"), fname);\r\n      display_warnings = orgdispwarn;\r\n    }\r\n  }\r\n\r\n  FILE *fp = FOPEN(build_output_filename,(\"w+b\"));\r\n  if (!fp)\r\n  {\r\n    ERROR_MSG(_T(\"Can't open output file\\n\"));\r\n    if (++limit && prompt_for_output_path(build_output_filename, COUNTOF(CEXEBuild::build_output_filename))) goto retry_output;\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (fwrite(m_exehead,1,m_exehead_size,fp) != m_exehead_size)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),m_exehead_size);\r\n    fclose(fp);\r\n    return PS_ERROR;\r\n  }\r\n\r\n  crc32_t crc=0;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n  #ifdef NSIS_CONFIG_CRC_ANAL\r\n    crc=CRC32(crc,m_exehead,(DWORD)m_exehead_size);\r\n  #else\r\n    crc=CRC32(crc,m_exehead+512,(DWORD)m_exehead_size-512);\r\n  #endif\r\n#endif\r\n\r\n  firstheader fh={0,};\r\n  fh.nsinst[0]=FH_INT1;\r\n  fh.nsinst[1]=FH_INT2;\r\n  fh.nsinst[2]=FH_INT3;\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n  fh.flags=(build_crcchk?(build_crcchk==2?FH_FLAGS_FORCE_CRC:0):FH_FLAGS_NO_CRC);\r\n#else\r\n  fh.flags=0;\r\n#endif\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  if (build_header.flags&(CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) fh.flags |= FH_FLAGS_SILENT;\r\n#endif\r\n  fh.siginfo=FH_SIG;\r\n\r\n  int installinfo_compressed;\r\n  int fd_start = 0;\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (build_compress_whole)\r\n  {\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n#endif\r\n\r\n  {\r\n    GrowBuf ihd;\r\n    {\r\n      GrowBuf hdrcomp;\r\n\r\n      PrepareHeaders(&hdrcomp);\r\n\r\n      if (add_data((char*)hdrcomp.get(),hdrcomp.getlen(),&ihd) < 0)\r\n        return PS_ERROR;\r\n\r\n      fh.length_of_header=hdrcomp.getlen();\r\n      installinfo_compressed=ihd.getlen();\r\n    }\r\n\r\n    if (!build_compress_whole)\r\n      fh.length_of_all_following_data=ihd.getlen()+build_datablock.getlen()+(int)sizeof(firstheader)+(build_crcchk?sizeof(crc32_t):0);\r\n    else\r\n      fd_start=ftell(fp);\r\n\r\n    try\r\n    {\r\n      file_writer_sink sink(fp, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n    catch (...)\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(fh));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    if (build_compress_whole) {\r\n      if (deflateToFile(fp,(char*)ihd.get(),ihd.getlen()))\r\n      {\r\n        fclose(fp);\r\n        return PS_ERROR;\r\n      }\r\n    }\r\n    else\r\n#endif\r\n    {\r\n      if (fwrite(ihd.get(),1,ihd.getlen(),fp) != (unsigned int)ihd.getlen())\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),ihd.getlen());\r\n        fclose(fp);\r\n        return PS_ERROR;\r\n      }\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n      crc_writer_sink crc_sink((crc32_t *) &crc);\r\n      firstheader_writer w(&crc_sink);\r\n      w.write(&fh);\r\n\r\n      crc=CRC32(crc,(unsigned char*)ihd.get(),ihd.getlen());\r\n#endif\r\n    }\r\n  }\r\n\r\n  INFO_MSG(_T(\"Install: \"));\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  int np=build_header.blocks[NB_PAGES].num;\r\n  if (PAGE_COMPLETED != PAGE_INSTFILES && np) --np; // Special page not part of count\r\n  INFO_MSG(_T(\"%d page%\") NPRIs _T(\" (%d bytes), \"),np,np==1?_T(\"\"):_T(\"s\"),np*sizeof(page));\r\n#endif\r\n#define IsRequiredSection(s) ( (!(s).name_ptr && ((s).flags & SF_SELECTED)) || (((s).flags & (SF_RO|SF_SELECTED)) == (SF_RO|SF_SELECTED)))\r\n  {\r\n    int ns=build_sections.getlen()/sizeof(section), x;\r\n    section *s=(section*)build_sections.get();\r\n    unsigned int req=0;\r\n    for (x = 0; x < ns; x ++) if (IsRequiredSection(s[x])) ++req;\r\n    INFO_MSG(_T(\"%d section%\") NPRIs,ns,ns==1?_T(\"\"):_T(\"s\"));\r\n    if (req) INFO_MSG(_T(\" (%u required)\"),req);\r\n    INFO_MSG(_T(\" (%d bytes), \"), build_sections.getlen());\r\n  }\r\n  int ne=build_header.blocks[NB_ENTRIES].num;\r\n  INFO_MSG(_T(\"%d instruction%\") NPRIs _T(\" (%d bytes), \"),ne,ne==1?_T(\"\"):_T(\"s\"),ne*sizeof(entry));\r\n  int ns=build_strlist.getnum();\r\n  INFO_MSG(_T(\"%d string%\") NPRIs _T(\" (%d bytes), \"),ns,ns==1?_T(\"\"):_T(\"s\"),build_strlist.gettotalsize());\r\n  int nlt=build_header.blocks[NB_LANGTABLES].num;\r\n  INFO_MSG(_T(\"%d language table%\") NPRIs _T(\" (%d bytes).\\n\"),nlt,nlt==1?_T(\"\"):_T(\"s\"),build_langtables.getlen());\r\n  if (ubuild_entries.getlen())\r\n  {\r\n    INFO_MSG(_T(\"Uninstall: \"));\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n    np=build_uninst.blocks[NB_PAGES].num;\r\n    if (PAGE_COMPLETED != PAGE_INSTFILES && np) --np; // Special page not part of count\r\n    INFO_MSG(_T(\"%d page%\") NPRIs _T(\" (%d bytes), \"),np,np==1?_T(\"\"):_T(\"s\"),ubuild_pages.getlen());\r\n#endif\r\n    {\r\n      int ns=ubuild_sections.getlen()/sizeof(section), x;\r\n      section *s=(section*)ubuild_sections.get();\r\n      unsigned int req=0;\r\n      for (x = 0; x < ns; x ++) if (IsRequiredSection(s[x])) ++req;\r\n      INFO_MSG(_T(\"%d section%\") NPRIs,ns,ns==1?_T(\"\"):_T(\"s\"));\r\n      if (req) INFO_MSG(_T(\" (%u required)\"),req);\r\n      INFO_MSG(_T(\" (%d bytes), \"), ubuild_sections.getlen());\r\n    }\r\n    ne=build_uninst.blocks[NB_ENTRIES].num;\r\n    INFO_MSG(_T(\"%d instruction%\") NPRIs _T(\" (%d bytes), \"),ne,ne==1?_T(\"\"):_T(\"s\"),ubuild_entries.getlen());\r\n    ns=ubuild_strlist.getnum();\r\n    INFO_MSG(_T(\"%d string%\") NPRIs _T(\" (%d bytes), \"),ns,ns==1?_T(\"\"):_T(\"s\"),ubuild_strlist.gettotalsize());\r\n    nlt=build_uninst.blocks[NB_LANGTABLES].num;\r\n    INFO_MSG(_T(\"%d language table%\") NPRIs _T(\" (%d bytes).\\n\"),nlt,nlt==1?_T(\"\"):_T(\"s\"),ubuild_langtables.getlen());\r\n  }\r\n\r\n\r\n  if (db_opt_save)\r\n  {\r\n    size_t total_out_size_estimate=\r\n      m_exehead_size+sizeof(fh)+build_datablock.getlen()+(build_crcchk?sizeof(crc32_t):0);\r\n    int pc=(int)((db_opt_save*1000)/(db_opt_save+total_out_size_estimate));\r\n    FriendlySize fs(db_opt_save);\r\n    INFO_MSG(_T(\"Datablock optimizer saved %u%\") NPRIs _T(\" (~%d.%d%%).\\n\"),\r\n      fs.UInt(),fs.Scale(),pc/10,pc%10);\r\n  }\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  INFO_MSG(_T(\"\\nUsing %\") NPRIs _T(\"%\") NPRIs _T(\" compression.\\n\\n\"), compressor->GetName(), build_compress_whole?_T(\" (compress whole)\"):_T(\"\"));\r\n#endif\r\n\r\n  unsigned int total_usize=(unsigned int) m_exehead_original_size;\r\n\r\n  INFO_MSG(_T(\"EXE header size:          %10u / %u bytes\\n\"),m_exehead_size,m_exehead_original_size);\r\n\r\n  if (build_compress_whole) {\r\n    INFO_MSG(_T(\"Install code:                          (%d bytes)\\n\"),\r\n      sizeof(fh)+fh.length_of_header);\r\n  }\r\n  else {\r\n    INFO_MSG(_T(\"Install code:             %10d / %d bytes\\n\"),\r\n      sizeof(fh)+installinfo_compressed,\r\n      sizeof(fh)+fh.length_of_header);\r\n  }\r\n\r\n  total_usize+=sizeof(fh)+fh.length_of_header;\r\n\r\n  {\r\n    unsigned int dbsize;\r\n    UINT64 dbsizeu;\r\n    dbsize = build_datablock.getlen();\r\n    if (uninstall_size > 0 && uninstall_size < UINT_MAX) dbsize -= uninstall_size;\r\n\r\n    if (build_compress_whole) {\r\n      dbsizeu = dbsize;\r\n      INFO_MSG(_T(\"Install data:                          (%u bytes)\\n\"),dbsize); // dbsize==dbsizeu and is easy to print\r\n    }\r\n    else {\r\n      dbsizeu = db_full_size - uninstall_size_full;\r\n      FriendlySize us(dbsizeu, GFSF_BYTESIFPOSSIBLE); // uncompressed installer size\r\n      FriendlySize cs(dbsize, GFSF_BYTESIFPOSSIBLE | (us.UInt()==dbsizeu ? GFSF_HIDEBYTESCALE : 0)); // compressed installer size\r\n      INFO_MSG(_T(\"Install data:             %10u%\") NPRIs _T(\" / %u%\") NPRIs _T(\"\\n\"),\r\n        cs.UInt(),cs.Scale(),us.UInt(),us.Scale()); // \"123 / 456 bytes\" or \"123 KiB / 456 MiB\"\r\n    }\r\n    UINT future = (build_crcchk ? sizeof(int) : 0) + (uninstall_size > 0 && uninstall_size < UINT_MAX ? uninstall_size_full : 0);\r\n    UINT maxsize = (~(UINT)0) - (total_usize + future), totsizadd = dbsizeu < maxsize ? (UINT)dbsizeu : maxsize;\r\n    total_usize += totsizadd; // Might not be accurate, it is more important to not overflow the additions coming up\r\n  }\r\n\r\n  if (uninstall_size < UINT_MAX)\r\n  {\r\n    if (build_compress_whole)\r\n      INFO_MSG(_T(\"Uninstall code+data:                   (%u bytes)\\n\"),uninstall_size_full);\r\n    else\r\n      INFO_MSG(_T(\"Uninstall code+data:      %10u / %u bytes\\n\"),uninstall_size,uninstall_size_full);\r\n    total_usize += uninstall_size_full;\r\n  }\r\n\r\n  if (build_compress_whole) {\r\n    INFO_MSG(_T(\"Compressed data:          \"));\r\n  }\r\n\r\n  if (build_datablock.getlen())\r\n  {\r\n    build_datablock.setro(TRUE);\r\n    int dbl = build_datablock.getlen();\r\n    int left = dbl;\r\n    while (left > 0)\r\n    {\r\n      int l = min(build_filebuflen, left);\r\n      char *dbptr = (char *) build_datablock.get(dbl - left, l);\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n      if (build_compress_whole)\r\n      {\r\n        if (deflateToFile(fp,dbptr,l))\r\n        {\r\n          fclose(fp);\r\n          return PS_ERROR;\r\n        }\r\n      }\r\n      else\r\n#endif\r\n      {\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n        crc=CRC32(crc,(unsigned char *)dbptr,l);\r\n#endif\r\n        if ((int)fwrite(dbptr,1,l,fp) != l)\r\n        {\r\n          ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),l);\r\n          fclose(fp);\r\n          return PS_ERROR;\r\n        }\r\n        fflush(fp);\r\n      }\r\n      build_datablock.release();\r\n      left -= l;\r\n    }\r\n    build_datablock.setro(FALSE);\r\n    build_datablock.clear();\r\n  }\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (build_compress_whole)\r\n  {\r\n    if (deflateToFile(fp,NULL,0))\r\n    {\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n    compressor->End();\r\n\r\n    unsigned fend = ftell(fp);\r\n\r\n    fh.length_of_all_following_data=ftell(fp)-fd_start+(build_crcchk?sizeof(crc32_t):0);\r\n    INFO_MSG(\r\n      _T(\"%10d / %d bytes\\n\"),\r\n      ftell(fp) - fd_start,\r\n      data_block_size_before_uninst + fh.length_of_header + sizeof(firstheader) + uninstall_size_full\r\n    );\r\n\r\n    fseek(fp,fd_start,SEEK_SET);\r\n\r\n    try\r\n    {\r\n      file_writer_sink sink(fp, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n    catch (...)\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(fh));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    if (build_crcchk)\r\n    {\r\n      // check rest of CRC\r\n      fseek(fp,fd_start,SEEK_SET);\r\n      for (;;)\r\n      {\r\n        char buf[32768];\r\n        unsigned int l=(unsigned int)fread(buf,1,sizeof(buf),fp);\r\n        if (!l) break;\r\n        crc=CRC32(crc,(unsigned char *)buf,l);\r\n      }\r\n    }\r\n#endif\r\n    fseek(fp,fend,SEEK_SET); // reset eof flag\r\n  }\r\n#endif\r\n\r\n  if (build_crcchk)\r\n  {\r\n    total_usize+=sizeof(int);\r\n    int rcrc = FIX_ENDIAN_INT32(crc);\r\n    if (fwrite(&rcrc,1,sizeof(crc32_t),fp) != sizeof(crc32_t))\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(crc32_t));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n    INFO_MSG(_T(\"CRC (0x%08X):                  4 / 4 bytes\\n\"),crc);\r\n  }\r\n  INFO_MSG(_T(\"\\n\"));\r\n  {\r\n    long fileend = ftell(fp);\r\n    UINT pc=(UINT)(((UINT64)fileend*1000)/(total_usize));\r\n    INFO_MSG(_T(\"Total size:               %10u / %u bytes (%u.%u%%)\\n\"),\r\n      fileend,total_usize,pc/10,pc%10);\r\n  }\r\n  fclose(fp);\r\n  RET_UNLESS_OK(run_postbuild_cmds(postbuild_cmds, build_output_filename, _T(\"Finalize\")));\r\n  print_warnings();\r\n  return PS_OK;\r\n}\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\nint CEXEBuild::deflateToFile(FILE *fp, char *buf, int len) // len==0 to flush\r\n{\r\n  build_compressor_set=true;\r\n\r\n  char obuf[65536];\r\n  bool flush=false;\r\n  compressor->SetNextIn(buf,len);\r\n  if (!buf||!len)\r\n  {\r\n    char a;\r\n    compressor->SetNextIn(&a,0);\r\n    flush=C_FINISH;\r\n  }\r\n  for (;;)\r\n  {\r\n    compressor->SetNextOut(obuf,sizeof(obuf));\r\n    int ret=compressor->Compress(flush);\r\n    if (ret<0 && (ret!=-1 || !flush))\r\n    {\r\n      ERROR_MSG(_T(\"Error: deflateToFile: deflate() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n      return 1;\r\n    }\r\n    size_t l=compressor->GetNextOut()-obuf;\r\n    if (l)\r\n    {\r\n      if (fwrite(obuf,1,l,fp) != l)\r\n      {\r\n        ERROR_MSG(_T(\"Error: deflateToFile fwrite(%lu) failed\\n\"),(unsigned long)l);\r\n        return 1;\r\n      }\r\n      fflush(fp);\r\n    }\r\n    if (!compressor->GetAvailIn() && (!flush || !l)) break;\r\n  }\r\n  return 0;\r\n}\r\n#endif\r\n\r\nint CEXEBuild::uninstall_generate()\r\n{\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (ubuild_entries.getlen() && uninstaller_writes_used)\r\n  {\r\n    SCRIPT_MSG(_T(\"Generating uninstaller... \"));\r\n\r\n    const int start_offset = postubuild_cmds ? truncate_cast(int, m_exehead_size) : 0;\r\n    entry *ent = (entry *) build_entries.get();\r\n    if (!ent) return PS_ERROR; // Check this early\r\n\r\n    MMapBuf udata;\r\n    firstheader fh={0,};\r\n\r\n    GrowBuf uhd;\r\n    {\r\n      GrowBuf udata_exehead;\r\n\r\n      set_uninstall_mode(1);\r\n\r\n      PrepareHeaders(&udata_exehead);\r\n\r\n      fh.length_of_header=udata_exehead.getlen();\r\n      int err=add_data((char*)udata_exehead.get(),udata_exehead.getlen(),&uhd);\r\n      set_uninstall_mode(0);\r\n      if (err < 0) return PS_ERROR;\r\n    }\r\n\r\n    crc32_t crc=0;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    bool calc_crc = true;\r\n#else\r\n    bool calc_crc = false;\r\n#endif\r\n\r\n    // Get offsets of icons to replace for uninstall\r\n    // Also makes sure that the icons are there and in the right size.\r\n    LPBYTE unicon_data = generate_uninstall_icon_data(installer_icon, uninstaller_icon, m_unicon_size);\r\n    if (generate_unicons_offsets(m_exehead, m_exehead_size, unicon_data, IDI_ICON2) == 0)\r\n    {\r\n      delete [] unicon_data;\r\n      return PS_ERROR;\r\n    }\r\n\r\n    int uns = uninstaller_writes_used;\r\n    int uninstdata_offset = build_datablock.getlen();\r\n    for (int ents = build_header.blocks[NB_ENTRIES].num; ents--; ent++)\r\n    {\r\n      if (ent->which == EW_WRITEUNINSTALLER)\r\n      {\r\n        ent->offsets[1] = uninstdata_offset;\r\n        ent->offsets[2] = start_offset ? 0 : (int) m_unicon_size;\r\n        if (!--uns)\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (!start_offset && add_db_data((char *)unicon_data,m_unicon_size) < 0)\r\n    {\r\n      delete [] unicon_data;\r\n      return PS_ERROR;\r\n    }\r\n\r\n    if (start_offset || calc_crc)\r\n    {\r\n      // create the uninstaller\r\n      LPBYTE uninst_header = (LPBYTE) malloc(m_exehead_size);\r\n      if (!uninst_header)\r\n      {\r\n        delete [] unicon_data;\r\n        return PS_ERROR;\r\n      }\r\n\r\n      memcpy(uninst_header, m_exehead, m_exehead_size);\r\n\r\n      // patch the icons\r\n      LPBYTE seeker = unicon_data;\r\n      while (*seeker) {\r\n        DWORD dwSize = FIX_ENDIAN_INT32(*(LPDWORD) seeker);\r\n        seeker += sizeof(DWORD);\r\n        DWORD dwOffset = FIX_ENDIAN_INT32(*(LPDWORD) seeker);\r\n        seeker += sizeof(DWORD);\r\n        memcpy(uninst_header + dwOffset, seeker, dwSize);\r\n        seeker += dwSize;\r\n      }\r\n\r\n      if (calc_crc)\r\n      {\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n#ifdef NSIS_CONFIG_CRC_ANAL\r\n        crc=CRC32(crc, uninst_header, (DWORD)m_exehead_size);\r\n#else\r\n        crc=CRC32(crc, uninst_header + 512, (DWORD)m_exehead_size - 512);\r\n#endif\r\n#endif\r\n      }\r\n\r\n      // write the exehead\r\n      if (start_offset)\r\n        udata.add((char *)uninst_header, truncate_cast(int, m_exehead_size));\r\n\r\n      free(uninst_header);\r\n    }\r\n    delete [] unicon_data;\r\n\r\n    fh.nsinst[0]=FH_INT1;\r\n    fh.nsinst[1]=FH_INT2;\r\n    fh.nsinst[2]=FH_INT3;\r\n    fh.flags=FH_FLAGS_UNINSTALL;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    fh.flags|=(build_crcchk?(build_crcchk==2?FH_FLAGS_FORCE_CRC:0):FH_FLAGS_NO_CRC);\r\n#endif\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n    if (build_uninst.flags&(CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) fh.flags |= FH_FLAGS_SILENT;\r\n#endif\r\n    fh.siginfo=FH_SIG;\r\n    fh.length_of_all_following_data=\r\n      uhd.getlen()+ubuild_datablock.getlen()+(int)sizeof(firstheader)+(build_crcchk?sizeof(crc32_t):0);\r\n\r\n    {\r\n      growbuf_writer_sink sink(&udata, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n\r\n    ubuild_datablock.setro(TRUE);\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    if (build_compress_whole) {\r\n      // compress uninstaller too\r\n      {\r\n        char obuf[65536];\r\n        int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n        if (n != C_OK)\r\n        {\r\n          ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n          extern void quit(); quit();\r\n        }\r\n\r\n        compressor->SetNextIn((char*)uhd.get(), uhd.getlen());\r\n        while (compressor->GetAvailIn())\r\n        {\r\n          compressor->SetNextOut(obuf, sizeof(obuf));\r\n          compressor->Compress(0);\r\n          if (compressor->GetNextOut() - obuf > 0)\r\n          {\r\n            udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          }\r\n        }\r\n\r\n        int avail_in = ubuild_datablock.getlen();\r\n        int in_pos = 0;\r\n        while (avail_in > 0) {\r\n          int l = min(avail_in, build_filebuflen);\r\n\r\n          char *p = (char*)ubuild_datablock.get(in_pos, l);\r\n          compressor->SetNextIn(p, l);\r\n\r\n          while (compressor->GetAvailIn())\r\n          {\r\n            compressor->SetNextOut(obuf, sizeof(obuf));\r\n            compressor->Compress(0);\r\n            if (compressor->GetNextOut() - obuf > 0)\r\n              udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          }\r\n\r\n          ubuild_datablock.release();\r\n\r\n          avail_in -= l;\r\n          in_pos += l;\r\n        }\r\n\r\n        for (;;)\r\n        {\r\n          compressor->SetNextOut(obuf, sizeof(obuf));\r\n          compressor->Compress(C_FINISH);\r\n          if (compressor->GetNextOut() - obuf > 0)\r\n            udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          else break;\r\n        }\r\n        compressor->End();\r\n      }\r\n\r\n      firstheader *ufh=(firstheader *)udata.get(start_offset, sizeof(firstheader));\r\n      ufh->length_of_all_following_data=FIX_ENDIAN_INT32((udata.getlen()-start_offset)+(build_crcchk?sizeof(crc32_t):0));\r\n      udata.release();\r\n    }\r\n    else\r\n#endif//NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    {\r\n      udata.add(uhd.get(), uhd.getlen());\r\n\r\n      int st = udata.getlen();\r\n      int length = ubuild_datablock.getlen();\r\n      int left = length;\r\n      udata.resize(st + left);\r\n      while (left > 0)\r\n      {\r\n        int l = min(build_filebuflen, left);\r\n        void *p = ubuild_datablock.get(length - left, l);\r\n        memcpy(udata.get(st + length - left, l), p, l);\r\n        udata.flush(l);\r\n        udata.release();\r\n        ubuild_datablock.release();\r\n        left -= l;\r\n      }\r\n    }\r\n\r\n    ubuild_datablock.clear();\r\n\r\n    udata.setro(TRUE);\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    if (build_crcchk)\r\n    {\r\n      int pos = 0;\r\n      int left = udata.getlen() - start_offset;\r\n      while (left > 0)\r\n      {\r\n        int l = min(build_filebuflen, left);\r\n        crc = CRC32(crc, (unsigned char *) udata.get(pos + start_offset, l), l);\r\n        udata.release();\r\n        pos += l;\r\n        left -= l;\r\n      }\r\n      udata.setro(FALSE);\r\n      FIX_ENDIAN_INT32_INPLACE(crc);\r\n      udata.add(&crc, sizeof(crc));\r\n      udata.setro(TRUE);\r\n    }\r\n#endif\r\n\r\n    if (start_offset)\r\n    {\r\n      TCHAR* fpath;\r\n      if (!(fpath = create_tempfile_path()))\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't get temporary path\\n\"));\r\n        return PS_ERROR;\r\n      }\r\n      MANAGE_WITH(fpath, free);\r\n      FILE *hfile = FOPEN(fpath, (\"wb\"));\r\n      if (!hfile)\r\n      {\r\n        ERROR_MSG(_T(\"Error: failed opening file \\\"%\") NPRIs _T(\"\\\"\\n\"), fpath);\r\n        return PS_ERROR;\r\n      }\r\n      int succ = udata.write_to_external_file(hfile);\r\n      fclose(hfile);\r\n      if (!succ)\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"), udata.getlen());\r\n        return PS_ERROR;\r\n      }\r\n      udata.clear();\r\n\r\n      if (PS_OK != run_postbuild_cmds(postubuild_cmds, fpath, _T(\"UninstFinalize\")))\r\n      {\r\n        return PS_ERROR;\r\n      }\r\n\r\n      MMapFile udata_in;\r\n      UINT64 udata_size;\r\n      if (!(udata_size = udata_in.setfile(fpath)))\r\n      {\r\n        ERROR_MSG(_T(\"Error: failed creating mmap of \\\"%\") NPRIs _T(\"\\\"\\n\"), fpath);\r\n        return PS_ERROR;\r\n      }\r\n      if (udata_size > NSIS_MAX_EXEFILESIZE || add_db_data(&udata_in) < 0)\r\n        return PS_ERROR;\r\n\r\n      assert(NSIS_MAX_EXEFILESIZE <= ~(UINT32)0);\r\n      uninstall_size_full = (UINT32) udata_size;\r\n      udata_in.clear();\r\n      _tremove(fpath);\r\n    }\r\n    else\r\n    {\r\n      if (add_db_data(&udata) < 0)\r\n        return PS_ERROR;\r\n\r\n      //uninstall_size_full=fh.length_of_all_following_data + sizeof(int) + unicondata_size - 32 + sizeof(int);\r\n      uninstall_size_full = fh.length_of_all_following_data+(int)m_unicon_size;\r\n    }\r\n\r\n    // compressed size\r\n    uninstall_size=build_datablock.getlen()-uninstdata_offset;\r\n    SCRIPT_MSG(_T(\"Done!\\n\"));\r\n  }\r\n#endif\r\n  return PS_OK;\r\n}\r\n\r\n#define SWAP(x,y,i) { i _ii; _ii=x; x=y; y=_ii; }\r\n\r\nvoid CEXEBuild::set_uninstall_mode(int un)\r\n{\r\n  if (un != uninstall_mode)\r\n  {\r\n    uninstall_mode=un;\r\n    if (un)\r\n    {\r\n      cur_datablock=&ubuild_datablock;\r\n      cur_datablock_cache=&ubuild_datablock_cache;\r\n      cur_entries=&ubuild_entries;\r\n      cur_instruction_entry_map=&ubuild_instruction_entry_map;\r\n      cur_functions=&ubuild_functions;\r\n      cur_labels=&ubuild_labels;\r\n      cur_pages=&ubuild_pages;\r\n      cur_sections=&ubuild_sections;\r\n      cur_header=&build_uninst;\r\n      cur_strlist=&ubuild_strlist;\r\n      cur_langtables=&ubuild_langtables;\r\n      cur_ctlcolors=&ubuild_ctlcolors;\r\n\r\n      definedlist.add(_T(\"__UNINSTALL__\"));\r\n    }\r\n    else\r\n    {\r\n      cur_datablock=&build_datablock;\r\n      cur_datablock_cache=&build_datablock_cache;\r\n      cur_entries=&build_entries;\r\n      cur_instruction_entry_map=&build_instruction_entry_map;\r\n      cur_functions=&build_functions;\r\n      cur_labels=&build_labels;\r\n      cur_pages=&build_pages;\r\n      cur_sections=&build_sections;\r\n      cur_header=&build_header;\r\n      cur_strlist=&build_strlist;\r\n      cur_langtables=&build_langtables;\r\n      cur_ctlcolors=&build_ctlcolors;\r\n\r\n      definedlist.del(_T(\"__UNINSTALL__\"));\r\n    }\r\n\r\n    SWAP(db_opt_save_u,db_opt_save,UINT64);\r\n    SWAP(db_comp_save_u,db_comp_save,int);\r\n    SWAP(db_full_size_u,db_full_size,UINT64);\r\n  }\r\n}\r\n\r\nextern FILE *g_output;\r\n\r\n/* Useful for debugging.\r\nbool IsStringASCII(const TCHAR* s)\r\n{\r\n  while (*s) { if (!_istascii(*s++)) return false; }\r\n  return true;\r\n}\r\n*/\r\n\r\nint CEXEBuild::get_verbosity() const\r\n{\r\n  int v = 0;\r\n  if (display_errors)\r\n  {\r\n    v++;\r\n    if (display_warnings)\r\n    {\r\n      v++;\r\n      if (display_info)\r\n      {\r\n        v++;\r\n        if (display_script)\r\n        {\r\n          v++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nvoid CEXEBuild::set_verbosity(int lvl)\r\n{\r\n  if (preprocessonly) lvl = STD_MIN(lvl, 1);\r\n  display_errors = lvl > 0;\r\n  display_warnings = lvl > 1;\r\n  display_info = lvl > 2;\r\n  display_script = lvl > 3;\r\n  extern int g_display_errors;\r\n  g_display_errors = display_errors;\r\n}\r\n\r\nint CEXEBuild::parse_pragma(LineParser &line)\r\n{\r\n  const int rvSucc = PS_OK, rvWarn = PS_WARNING, rvErr = PS_WARNING; // rvErr is not PS_ERROR because we want !pragma parsing to be very forgiving.\r\n  const TCHAR badParamMsg[] = _T(\"Unknown pragma\");\r\n\r\n  if (line.gettoken_enum(1, _T(\"internal\\0\")) == 0)\r\n  {\r\n    if (line.gettoken_enum(2, _T(\"x\\0\")) == 0)\r\n    {\r\n      const TCHAR *name = line.gettoken_str(3);\r\n      int succ, num = line.gettoken_intx(4, &succ);SCRIPT_MSG(_T(\"%#x %d\\n\"),num,succ);\r\n      return ((succ ? definedlist.set_si32(name, num) : definedlist.set(name, _T(\"\"))), rvSucc);\r\n    }\r\n    return rvErr;\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"verifyloadimage\\0\")) == 0)\r\n  {\r\n    bool valid = LoadImageCanLoadFile(line.gettoken_str(2));\r\n    return valid ? rvSucc : (warning_fl(DW_BADFORMAT_EXTERNAL_FILE, _T(\"Unsupported format %\") NPRIs, line.gettoken_str(2)), rvWarn);\r\n  }\r\n\r\n  // 2.47 shipped with a corrupted CHM file (bug #1129). This minimal verification command exists because the !searchparse hack we added does not work with codepage 936!\r\n  if (line.gettoken_enum(1, _T(\"verifychm\\0\")) == 0)\r\n  {\r\n    struct { UINT32 Sig, Ver, cbH; } chm;\r\n    NIStream f;\r\n    bool valid = f.OpenFileForReading(line.gettoken_str(2), NStreamEncoding::BINARY);\r\n    valid = valid && 12 == f.ReadOctets(&chm, 12);\r\n    valid = valid && FIX_ENDIAN_INT32(chm.Sig) == 0x46535449 && (FIX_ENDIAN_INT32(chm.Ver)|1) == 3; // 'ITSF' v2..3\r\n    return valid ? rvSucc : (ERROR_MSG(_T(\"Error: Invalid format\\n\")), PS_ERROR);\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"w\\150i\\160\\0\")) == 0)\r\n  {\r\n    int succ, ec = line.gettoken_int(2, &succ);\r\n    SCRIPT_MSG(_T(\"%\") NPRIns _T(\"\\n\"), \"N\\123I\\123, i\\164 \\162eall\\171 install\\163 ll\\141\\155as wit\\150o\\165t s\\141fety \\147l\\141\\163s!\");\r\n    exit(succ ? ec : 1);\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"warning\\0\")) == -1)\r\n    return (warning_fl(DW_PP_PRAGMA_UNKNOWN, _T(\"Unknown pragma\")), rvErr);\r\n\r\n  enum { woperr = 0, wopwar, wopdis, wopena, wopdef, woppus, woppop, invalidwop };\r\n  int warnOp = line.gettoken_enum(2, _T(\"error\\0warning\\0disable\\0enable\\0default\\0push\\0pop\\0\")), ret = rvSucc;\r\n  if (warnOp < 0)\r\n    ret = rvErr, warning_fl(DW_PP_PRAGMA_UNKNOWN, badParamMsg); // Unknown warning pragma action\r\n  else if (warnOp == woppus) // warning: push\r\n    diagstate.push();\r\n  else if (warnOp == woppop) // warning: pop\r\n  {\r\n    if (!diagstate.pop())\r\n      ret = rvWarn, warning_fl(DW_PP_PRAGMA_INVALID, _T(\"Unexpected\"));\r\n  }\r\n  else // warning: error/warning/disable/enable/default <%code%|all> [..]\r\n  {\r\n    for (int ti = 3; ti < line.getnumtokens(); ++ti)\r\n    {\r\n      DIAGCODE code = static_cast<DIAGCODE>(line.gettoken_int(ti));\r\n      bool all = line.gettoken_enum(ti, _T(\"all\\0\")) == 0, isCode = diagstate.is_valid_code(code);\r\n      switch((isCode||all) ? warnOp : invalidwop)\r\n      {\r\n      case woperr: all ? diagstate.set_all(DiagState::werror) : diagstate.error(code); break;\r\n      case wopwar: all ? diagstate.set_all(DiagState::wwarning) : diagstate.warning(code); break;\r\n      case wopdis: all ? diagstate.set_all(DiagState::wdisabled) : diagstate.disable(code); break;\r\n      case wopena: all ? diagstate.set_all(DiagState::wenabled) : diagstate.enable(code); break;\r\n      case wopdef: all ? diagstate.set_all(DiagState::get_default_state()) : diagstate.def(code); break;\r\n      default: ret = rvWarn, warning_fl(DW_PP_PRAGMA_INVALID, _T(\"Invalid number: \\\"%\") NPRIs _T(\"\\\"\"), line.gettoken_str(ti));\r\n      }\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nvoid DiagState::push()\r\n{\r\n  DiagState *p = new DiagState();\r\n  *p = *this; // Copy the current state\r\n  p->m_pStack = m_pStack, m_pStack = p; // ...and push it on the stack\r\n}\r\nbool DiagState::pop()\r\n{\r\n  if (!m_pStack) return false;\r\n  DiagState *pPop = m_pStack; // Get the item on the top of the stack\r\n  *this = *pPop; // ...and assign it as the current state\r\n  pPop->m_pStack = 0; // The pop'ed item no longer owns the next item on the stack\r\n  delete pPop;\r\n  return true;\r\n}\r\n\r\nvoid CEXEBuild::warninghelper(DIAGCODE dc, bool fl, const TCHAR *fmt, va_list args)\r\n{\r\n  bool showcode = dc != DIAGCODE_INTERNAL_HIDEDIAGCODE;\r\n  if (diagstate.is_disabled(dc)) return ;\r\n  bool aserror = diagstate.is_error(dc);\r\n\r\n  TCHAR codbuf[11+2+!0];\r\n  _stprintf(codbuf, showcode ? _T(\"%u: \") : _T(\"\"), static_cast<unsigned int>(dc));\r\n  ExpandoString<TCHAR, COUNTOF(codbuf) + NSIS_MAX_STRLEN + 100> msgbuf;\r\n  ExpandoString<TCHAR, COUNTOF(codbuf) + 200> fmtbuf;\r\n  fmtbuf.StrFmt(_T(\"%\") NPRIs _T(\"%\") NPRIs, codbuf, fmt);\r\n  size_t cchMsg = msgbuf.StrVFmt(fmtbuf.GetPtr(), args);\r\n  if (fl)\r\n  {\r\n    msgbuf.Reserve(cchMsg+2+_tcslen(curfilename)+1+11+1+!0);\r\n    _stprintf(&msgbuf[cchMsg], _T(\" (%\") NPRIs _T(\":%u)\"), curfilename, linecnt);\r\n  }\r\n  const TCHAR *msg = msgbuf.GetPtr();\r\n\r\n  m_warnings.add(msg,0); // Add to list of warnings to display at the end\r\n\r\n  MakensisAPI::datatransfer_e hostevent = MakensisAPI::NOTIFY_WARNING;\r\n  if (aserror)\r\n    hostevent = MakensisAPI::NOTIFY_ERROR, display_warnings = display_errors;\r\n\r\n  notify(hostevent, msg); // Notify the host\r\n\r\n  if (display_warnings) // Print \"warning %msgwithcodeprefix%\" or \"warning: %msg%\"\r\n    PrintColorFmtMsg_WARN(_T(\"warning%\") NPRIs _T(\"%\") NPRIs _T(\"\\n\"), showcode ? _T(\" \") : _T(\": \"), msg);\r\n\r\n  if (aserror)\r\n  {\r\n    ERROR_MSG(_T(\"Error: warning treated as error\\n\"));\r\n    extern int g_display_errors;\r\n    if (!has_called_write_output) g_display_errors = false; // This is a hack to avoid the \"stale file in %temp%\" warning.\r\n    extern void quit(); quit();\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::warning(DIAGCODE dc, const TCHAR *s, ...)\r\n{\r\n  va_list val;\r\n  va_start(val, s);\r\n  warninghelper(dc, false, s, val);\r\n  va_end(val);\r\n}\r\n\r\nvoid CEXEBuild::warning_fl(DIAGCODE dc, const TCHAR *s, ...)\r\n{\r\n  va_list val;\r\n  va_start(val, s);\r\n  warninghelper(dc, true, s, val);\r\n  va_end(val);\r\n}\r\n\r\nvoid CEXEBuild::ERROR_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_errors || notify_hwnd)\r\n  {\r\n    ExpandoString<TCHAR, NSIS_MAX_STRLEN + 100> buf;\r\n    va_list val;\r\n    va_start(val,s);\r\n    buf.StrVFmt(s,val);\r\n    va_end(val);\r\n\r\n    notify(MakensisAPI::NOTIFY_ERROR, buf.GetPtr());\r\n    if (display_errors)\r\n    {\r\n      PrintColorFmtMsg_ERR(_T(\"%\") NPRIs, buf.GetPtr());\r\n    }\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::SCRIPT_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_script)\r\n  {\r\n    va_list val;\r\n    va_start(val,s);\r\n    _vftprintf(g_output,s,val);\r\n    va_end(val);\r\n    fflush(g_output);\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::INFO_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_info)\r\n  {\r\n    va_list val;\r\n    va_start(val,s);\r\n    _vftprintf(g_output,s,val);\r\n    va_end(val);\r\n    fflush(g_output);\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::print_warnings()\r\n{\r\n  int nw=0,x=m_warnings.getcount();\r\n  if (!x || !display_warnings) return;\r\n  TCHAR *p=m_warnings.get();\r\n  while (x>0) if (!p[--x]) nw++;\r\n  SetPrintColorWARN();\r\n  _ftprintf(g_output,_T(\"\\n%d warning%\") NPRIs _T(\":\\n\"),nw,nw==1?_T(\"\"):_T(\"s\"));\r\n  for (x = 0; x < nw; x ++)\r\n  {\r\n    _ftprintf(g_output,_T(\"  %\") NPRIs _T(\"\\n\"),p);\r\n    p+=_tcslen(p)+1;\r\n  }\r\n  FlushOutputAndResetPrintColor();\r\n}\r\n\r\nvoid CEXEBuild::notify(MakensisAPI::datatransfer_e code, const TCHAR *data) const\r\n{\r\n#ifdef _WIN32\r\n  if (notify_hwnd)\r\n  {\r\n    DWORD cb = (DWORD) (_tcslen(data)+1) * sizeof(TCHAR);\r\n#ifdef _UNICODE\r\n    extern NStreamEncoding g_outputenc;\r\n    extern void quit();\r\n    CharEncConv cec;\r\n    if (!g_outputenc.IsUTF16LE())\r\n    {\r\n      size_t cbConv;\r\n      if (!cec.Initialize(g_outputenc.GetCodepage(), -1) || !(data = (const TCHAR*) cec.Convert(data, cb, &cbConv)))\r\n        PrintColorFmtMsg_ERR(_T(\"conversion failed!\\n\")), quit(); // Cannot use ERROR_MSG() here!\r\n      cb = (DWORD) (cbConv + NStreamEncoding::GetCodeUnitSize(g_outputenc.GetCodepage())); // cbConv does not include the \\0.\r\n    }\r\n#endif\r\n    COPYDATASTRUCT cds = {(DWORD) code, cb, (void*) data};\r\n    SendMessage(notify_hwnd, WM_COPYDATA, 0, (LPARAM)&cds);\r\n  }\r\n#endif\r\n}\r\n\r\nbool CEXEBuild::hostapi_request_data(MakensisAPI::datatransfer_e operation, UINT minver, HOSTAPIREQUESTDATAPROC proc, void*cookie, const void* input, size_t inputsize) const\r\n{\r\n  using namespace MakensisAPI;\r\n#ifdef _WIN32\r\n  struct helper {\r\n    static INT_PTR CALLBACK Proc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)\r\n    {\r\n      size_t *data = (size_t*) GetWindowLongPtr(hWnd, DWLP_USER);\r\n      if (Msg == WM_CLOSE)\r\n      {\r\n        if (lParam) SendMessage((HWND) wParam, WM_COPYDATA, (SIZE_T) hWnd, lParam);\r\n        return DestroyWindow(hWnd) | PostMessage(NULL, WM_QUIT, 0, 0);\r\n      }\r\n      return data && ((CEXEBuild::HOSTAPIREQUESTDATAPROC)data[0])((void*) data[1], hWnd, Msg, wParam, lParam); // We don't set DWLP_MSGRESULT nor care about the return value\r\n    }\r\n  };\r\n  if (!notify_hwnd || (minver && (UINT) SendMessage(notify_hwnd, QUERYHOST, QH_SUPPORTEDVERSION, 0) < minver)) return false;\r\n  size_t data[] = { (size_t) proc, (size_t) cookie };\r\n  COPYDATASTRUCT cds = { (DWORD) operation, (DWORD) inputsize, (void*) input };\r\n  HWND hWnd = CreateWindowEx(WS_EX_TOOLWINDOW, WC_DIALOG, NULL, WS_POPUP|WS_DISABLED, 0, 0, 0, 0, NULL, NULL, NULL, NULL);\r\n  SetWindowLongPtr(hWnd, DWLP_USER, (LONG_PTR) data);\r\n  SetWindowLongPtr(hWnd, DWLP_DLGPROC, (LONG_PTR) helper::Proc);\r\n  SendMessage(hWnd, WM_CLOSE, (SIZE_T) notify_hwnd, (SIZE_T) &cds);\r\n  if (hWnd) for (MSG msg; (int) GetMessage(&msg, NULL, 0, 0) > 0;) DispatchMessage(&msg);\r\n  return !!hWnd;\r\n#else\r\n  return false;\r\n#endif\r\n}\r\n\r\nbool CEXEBuild::prompt_for_output_path(TCHAR*path, UINT pathcap) const\r\n{\r\n  using namespace MakensisAPI;\r\n#ifdef _WIN32\r\n  struct handler {\r\n    static bool CALLBACK proc(void*cookie, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)\r\n    {\r\n      size_t *io = (size_t*) cookie;\r\n      COPYDATASTRUCT*pCDS = (COPYDATASTRUCT*) lParam;\r\n      if (Msg == WM_COPYDATA && pCDS->cbData > sizeof(TCHAR) && pCDS->cbData <= io[2] * sizeof(TCHAR))\r\n      {\r\n        _tcscpy((TCHAR*) io[1], (TCHAR*) ((COPYDATASTRUCT*)lParam)->lpData);\r\n        return (io[0] = (pCDS->dwData == MakensisAPI::PROMPT_FILEPATH));\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n  size_t io[] = { false, (size_t) path, pathcap }, cb;\r\n  TinyGrowBuf inputbuf((IGrowBuf::size_type) (cb = FIELD_OFFSET(PROMPT_FILEPATH_DATA, Path[pathcap])));\r\n  PROMPT_FILEPATH_DATA *p = (PROMPT_FILEPATH_DATA*) inputbuf.get();\r\n  p->Platform = (sizeof(void*) * 8) | sizeof(TCHAR), p->Reserved = 0;\r\n  _tcscpy(p->Path, path);\r\n  return hostapi_request_data(PROMPT_FILEPATH, 0x03006000, handler::proc, io, p, cb) && io[0];\r\n#else\r\n  return false;\r\n#endif\r\n}\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\nint CEXEBuild::initialize_default_plugins(bool newtargetarc)\r\n{\r\n  if (!m_pPlugins)\r\n  {\r\n    plugin_used = uninst_plugin_used = false;\r\n    newtargetarc = true;\r\n  }\r\n  if (!newtargetarc) return PS_OK;\r\n\r\n  m_pPlugins = &m_plugins[m_target_type];\r\n\r\n  tstring searchPath = definedlist.find(_T(\"NSISDIR\"));\r\n  searchPath += PLATFORM_PATH_SEPARATOR_STR _T(\"Plugins\") PLATFORM_PATH_SEPARATOR_STR;\r\n  searchPath += get_target_suffix();\r\n\r\n  SCRIPT_MSG(_T(\"Processing default plugins: \\\"%\") NPRIs PLATFORM_PATH_SEPARATOR_STR _T(\"*.dll\\\"\\n\"), searchPath.c_str());\r\n  if (!m_pPlugins->Initialize(searchPath.c_str(), is_target_64bit(), !!display_script))\r\n  {\r\n    ERROR_MSG(_T(\"Error initializing default plugins!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  SCRIPT_MSG(_T(\"\\n\"));\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_plugins_dir_initializer(void)\r\n{\r\n  if (!plugin_used && !uninst_plugin_used) return PS_OK;\r\n\r\n  SCRIPT_MSG(_T(\"Adding plug-ins initializing function... \"));\r\n\r\n  bool uninstall = !plugin_used;\r\n\r\n  int ret;\r\n  int zero_offset;\r\n\r\n  int var_zero;\r\n  var_zero=m_UserVarNames.get(_T(\"0\"));\r\n\r\nagain:\r\n  // Function [un.]Initialize_____Plugins\r\n  ret=add_function(uninstall?_T(\"un.Initialize_____Plugins\"):_T(\"Initialize_____Plugins\"));\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // don't move this, depends on [un.]\r\n  zero_offset=add_asciistring(_T(\"$0\"));\r\n\r\n  // SetDetailsPrint none (don't update lastused)\r\n  ret=add_entry_direct(EW_SETFLAG, FLAG_OFFSET(status_update), add_intstring(6), -1);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // StrCmp $PLUGINSDIR \"\"\r\n  ret=add_entry_direct(EW_STRCMP, add_asciistring(_T(\"$PLUGINSDIR\")), 0, 0, ns_label.add(_T(\"Initialize_____Plugins_done\"),0));\r\n  if (ret != PS_OK) return ret;\r\n  // Push $0\r\n  ret=add_entry_direct(EW_PUSHPOP, zero_offset);\r\n  if (ret != PS_OK) return ret;\r\n  // ClearErrors\r\n  ret=add_entry_direct(EW_SETFLAG, FLAG_OFFSET(exec_error));\r\n  if (ret != PS_OK) return ret;\r\n  // GetTempFileName $0\r\n  ret=add_entry_direct(EW_GETTEMPFILENAME, var_zero, add_asciistring(_T(\"$TEMP\")));\r\n  if (ret != PS_OK) return ret;\r\n  // Delete $0 [simple, nothing that could clash with special temp permissions]\r\n  ret=add_entry_direct(EW_DELETEFILE, zero_offset, DEL_SIMPLE);\r\n  if (ret != PS_OK) return ret;\r\n  // CreateDirectory $0 - a dir instead of that temp file\r\n  ret=add_entry_direct(EW_CREATEDIR, zero_offset, 0, 1);\r\n  if (ret != PS_OK) return ret;\r\n  // IfErrors Initialize_____Plugins_error - detect errors\r\n  ret=add_entry_direct(EW_IFFLAG, ns_label.add(_T(\"Initialize_____Plugins_error\"),0), 0, FLAG_OFFSET(exec_error));\r\n  if (ret != PS_OK) return ret;\r\n  // Copy $0 to $PLUGINSDIR\r\n  ret=add_entry_direct(EW_ASSIGNVAR, m_UserVarNames.get(_T(\"PLUGINSDIR\")), zero_offset);\r\n  if (ret != PS_OK) return ret;\r\n  // Pop $0\r\n  ret=add_entry_direct(EW_PUSHPOP, var_zero, 1);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // done\r\n  if (add_label(_T(\"Initialize_____Plugins_done\"))) return PS_ERROR;\r\n  // Return\r\n  ret=add_entry_direct(EW_RET);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // error\r\n  if (add_label(_T(\"Initialize_____Plugins_error\"))) return PS_ERROR;\r\n  // error message box\r\n  ret=add_entry_direct(EW_MESSAGEBOX, MB_OK|MB_ICONSTOP|(IDOK<<21), add_asciistring(_T(\"Error! Can't initialize plug-ins directory. Please try again later.\")));\r\n  if (ret != PS_OK) return ret;\r\n  // Quit\r\n  ret=add_entry_direct(EW_QUIT);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // FunctionEnd\r\n  ret=function_end();\r\n  if (ret != PS_OK) return ret;\r\n\r\n  if (uninst_plugin_used && !uninstall) {\r\n    uninstall = true;\r\n    goto again;\r\n  }\r\n\r\n  SCRIPT_MSG(_T(\"Done!\\n\"));\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_CONFIG_PLUGIN_SUPPORT\r\n\r\nvoid CEXEBuild::init_res_editor()\r\n{\r\n  build_compressor_set = true;\r\n  if (!res_editor)\r\n    res_editor = new CResourceEditor(m_exehead, (DWORD)m_exehead_size);\r\n}\r\n\r\nvoid CEXEBuild::close_res_editor()\r\n{\r\n  if (!res_editor) return;\r\n  DWORD newsize;\r\n\r\n  // get size\r\n  newsize = res_editor->Save(NULL, newsize);\r\n  unsigned char *new_header = new unsigned char[newsize];\r\n\r\n  // save\r\n  int rc = res_editor->Save(new_header, newsize);\r\n  assert(rc == 0);\r\n\r\n  update_exehead(new_header, newsize);\r\n\r\n  // TODO: resource-controlling class\r\n  delete [] new_header;\r\n\r\n  delete res_editor;\r\n  res_editor=0;\r\n}\r\n\r\nint CEXEBuild::DeclaredUserVar(const TCHAR *szVarName)\r\n{\r\n  if (m_ShellConstants.get((TCHAR*)szVarName) >= 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: name \\\"%\") NPRIs _T(\"\\\" in use by constant\\n\"), szVarName);\r\n    return PS_ERROR;\r\n  }\r\n\r\n  int idxUserVar = m_UserVarNames.get((TCHAR*)szVarName);\r\n  if (idxUserVar >= 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable \\\"%\") NPRIs _T(\"\\\" already declared\\n\"), szVarName);\r\n    return PS_ERROR;\r\n  }\r\n  const TCHAR *pVarName = szVarName;\r\n  size_t iVarLen = _tcslen(szVarName);\r\n\r\n  if (iVarLen > 60)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable name too long!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  else if (!iVarLen)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable with empty name!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  else\r\n  {\r\n    while (*pVarName)\r\n    {\r\n      if (!isSimpleChar(*pVarName))\r\n      {\r\n        ERROR_MSG(_T(\"Error: invalid characters in variable name \\\"%\") NPRIs _T(\"\\\", use only characters [a-z][A-Z][0-9], '.' and '_'\\n\"), szVarName);\r\n        return PS_ERROR;\r\n      }\r\n      pVarName++;\r\n    }\r\n  }\r\n\r\n  m_UserVarNames.add(szVarName);\r\n  if (m_UserVarNames.getnum() > MAX_CODED)\r\n  {\r\n    ERROR_MSG(_T(\"Error: too many user variables declared. Maximum allowed is %u.\\n\"), MAX_CODED - m_iBaseVarsNum);\r\n    return PS_ERROR;\r\n  }\r\n  return PS_OK;\r\n}\r\n\r\n\r\nint CEXEBuild::GetUnsafeUserVarIndex(LineParser &line, int token)\r\n{\r\n  TCHAR *p = line.gettoken_str(token);\r\n  int idx = IsVarPrefix(p) ? m_UserVarNames.get(++p) : -1;\r\n  if (idx >= 0 && m_UserVarNames.get_reference(idx) >= 0) m_UserVarNames.inc_reference(idx);\r\n  return idx;\r\n}\r\nint CEXEBuild::GetUserVarIndex(LineParser &line, int token)\r\n{\r\n  TCHAR *p = line.gettoken_str(token);\r\n  if (IsVarPrefix(p))\r\n  {\r\n    int idxUserVar = m_UserVarNames.get(p+1);\r\n    if (idxUserVar >= 0 && m_UserVarNames.get_reference(idxUserVar) >= 0)\r\n    {\r\n      m_UserVarNames.inc_reference(idxUserVar);\r\n      return idxUserVar;\r\n    }\r\n    else\r\n    {\r\n      int idxConst = m_ShellConstants.get(p+1);\r\n      if (idxConst >= 0)\r\n      {\r\n        ERROR_MSG(_T(\"Error: cannot change constants : %\") NPRIs _T(\"\\n\"), p);\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nvoid CEXEBuild::VerifyDeclaredUserVarRefs(UserVarsStringList *pVarsStringList)\r\n{\r\n  for (int i = m_iBaseVarsNum; i < pVarsStringList->getnum(); i++)\r\n  {\r\n    if (!pVarsStringList->get_reference(i))\r\n    {\r\n      warning(DW_VAR_NOREF, _T(\"Variable \\\"%\") NPRIs _T(\"\\\" not referenced or never set, wasting memory!\"), pVarsStringList->idx2name(i));\r\n    }\r\n  }\r\n}\r\n\r\nbool CEXEBuild::IsIntOrUserVar(const LineParser &line, int token) const\r\n{\r\n  const TCHAR *p = line.gettoken_str(token);\r\n  if (IsVarPrefix(p))\r\n  {\r\n    int idxUserVar = m_UserVarNames.get(p+1);\r\n    return (idxUserVar >= 0 && m_UserVarNames.get_reference(idxUserVar) >= 0);\r\n  }\r\n  int succ;\r\n  line.gettoken_int(token, &succ);\r\n  return succ != false;\r\n}\r\n\r\nint CEXEBuild::set_target_architecture_data()\r\n{\r\n  build_strlist.setunicode(build_unicode), ubuild_strlist.setunicode(build_unicode);\r\n  size_t t64 = is_target_64bit(), i;\r\n\r\n  WORD dc = DefaultPEDllCharacteristics;\r\n  if ((dc & IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) && t64) dc |= IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA;\r\n  if (m_target_type == TARGET_ARM64) dc &= ~IMAGE_DLLCHARACTERISTICS_NO_SEH; // ARM64 forces exception directory?\r\n  PEDllCharacteristics = dc;\r\n\r\n  if (build_unicode)\r\n  {\r\n    definedlist.set(_T(\"NSIS_UNICODE\"));\r\n    definedlist.set(_T(\"NSIS_CHAR_SIZE\"), _T(\"2\"));\r\n  }\r\n  else\r\n  {\r\n    definedlist.del(_T(\"NSIS_UNICODE\"));\r\n    definedlist.set(_T(\"NSIS_CHAR_SIZE\"), _T(\"1\"));\r\n  }\r\n  definedlist.set(_T(\"NSIS_PTR_SIZE\"), t64 ? _T(\"8\") : _T(\"4\"));\r\n\r\n  const TCHAR* tsuff = get_target_suffix(m_target_type, _T(\"\"));\r\n  if (!*tsuff) return PS_ERROR;\r\n  tstring cpu = get_string_prefix(tsuff, _T(\"-\"));\r\n  definedlist.set(_T(\"NSIS_CPU\"), cpu.c_str()); // Used by Library.nsh to pick the correct RegTool\r\n\r\n  struct { TARGETTYPE tt; const TCHAR *def; const TCHAR *val; } static const tdef[] = {\r\n    { TARGET_X86ANSI,    _T(\"NSIS_IX86\"),  _T(\"300\") },\r\n    { TARGET_X86UNICODE, _T(\"NSIS_IX86\"),  _T(\"400\") },\r\n    { TARGET_AMD64,      _T(\"NSIS_AMD64\"), _T(\"1\")   },\r\n    { TARGET_ARM64,      _T(\"NSIS_ARM64\"), _T(\"1\")   }\r\n  };\r\n  for (i = 0; i < COUNTOF(tdef); ++i) definedlist.del(tdef[i].def);\r\n  unsigned int success = false;\r\n  for (i = 0; i < COUNTOF(tdef); ++i) if (tdef[i].tt == m_target_type) definedlist.set(tdef[i].def, tdef[i].val), ++success;\r\n\r\n  return success ? PS_OK : PS_ERROR;\r\n}\r\n\r\nconst TCHAR* CEXEBuild::get_target_suffix(CEXEBuild::TARGETTYPE tt, const TCHAR*defval) const\r\n{\r\n  switch(tt)\r\n  {\r\n  case TARGET_X86ANSI   : return _T(\"x86-ansi\");\r\n  case TARGET_X86UNICODE: return _T(\"x86-unicode\");\r\n  case TARGET_AMD64     : return _T(\"amd64-unicode\");\r\n  case TARGET_ARM64     : return _T(\"arm64-unicode\");\r\n  default: return defval;\r\n  }\r\n}\r\n\r\nint CEXEBuild::change_target_architecture(TARGETTYPE tt)\r\n{\r\n  const bool wide = TARGET_X86ANSI != tt;\r\n  if (build_compressor_set || (build_unicode != wide && build_lockedunicodetarget))\r\n  {\r\n    ERROR_MSG(_T(\"Error: Can't change target %\") NPRIs _T(\" after data already got compressed or header already changed!\\n\"), _T(\"architecture\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (TARGET_X86ANSI == m_target_type || TARGET_X86UNICODE == m_target_type)\r\n    m_previous_x86_unicode = build_unicode;\r\n  m_target_type = tt;\r\n  build_unicode = wide;\r\n\r\n  int ec = set_target_architecture_data();\r\n  if (PS_OK == ec) ec = load_stub();\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  if (PS_OK == ec) ec = initialize_default_plugins(true);\r\n#endif\r\n  changed_target = true;\r\n  return ec;\r\n}\r\n\r\nint CEXEBuild::set_compressor(const tstring& compressor, const bool solid) {\r\n  stub_filename = stubs_dir + PLATFORM_PATH_SEPARATOR_STR + compressor;\r\n  if (solid)\r\n    stub_filename += _T(\"_solid\");\r\n  return load_stub();\r\n}\r\n\r\nCEXEBuild::TARGETTYPE CEXEBuild::get_target_type(const TCHAR*s) const\r\n{\r\n  for(int i = CEXEBuild::TARGETFIRST; i < CEXEBuild::TARGETCOUNT; ++i)\r\n  {\r\n    CEXEBuild::TARGETTYPE tt = (CEXEBuild::TARGETTYPE) i;\r\n    if (!_tcsicmp(get_target_suffix(tt, _T(\"\")),s) && *s) return tt;\r\n  }\r\n  return TARGET_UNKNOWN;\r\n}\r\n\r\nvoid CEXEBuild::print_bad_targettype_parameter(const TCHAR*cmdname, const TCHAR*prefix) const\r\n{\r\n  tstring errstr = cmdname;\r\n  errstr += _T(\": Target parameter must be one of: \"), errstr += prefix;\r\n  for(int comma = 0, i = CEXEBuild::TARGETFIRST; i < CEXEBuild::TARGETCOUNT; ++i)\r\n  {\r\n    const TCHAR *ts = get_target_suffix((CEXEBuild::TARGETTYPE) i, 0);\r\n    if (!ts) continue;\r\n    if (comma++) errstr += _T(\", \"), errstr += prefix;\r\n    errstr += ts;\r\n  }\r\n  ERROR_MSG(_T(\"Error: %\") NPRIs _T(\"\\n\"), errstr.c_str());\r\n}\r\n\r\nint CEXEBuild::load_stub()\r\n{\r\n  return update_exehead(stub_filename+_T(\"-\")+get_target_suffix(), &m_exehead_original_size);\r\n}\r\n\r\nint CEXEBuild::update_exehead(const tstring& file, size_t *size/*=NULL*/) {\r\n  unsigned long exehead_size;\r\n  unsigned char *exehead = alloc_and_read_file(file.c_str(), exehead_size);\r\n  if (!exehead)\r\n  {\r\n    ERROR_MSG(_T(\"Error: reading stub \\\"%\") NPRIs _T(\"\\\"\\n\"), file.c_str());\r\n    return PS_ERROR;\r\n  }\r\n  update_exehead(exehead, exehead_size);\r\n  if (size) *size = exehead_size;\r\n  free(exehead);\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::update_exehead(const unsigned char *new_exehead, size_t new_size) {\r\n  assert(m_exehead != new_exehead);\r\n\r\n  // align exehead to 512\r\n  m_exehead_size = align_to_512(new_size);\r\n\r\n  delete [] m_exehead;\r\n  m_exehead = new unsigned char[m_exehead_size];\r\n\r\n  // copy exehead\r\n  memcpy(m_exehead, new_exehead, new_size);\r\n\r\n  // zero rest of exehead\r\n  memset(m_exehead + new_size, 0, m_exehead_size - new_size);\r\n}\r\n\r\nvoid CEXEBuild::set_code_type_predefines(const TCHAR *value)\r\n{\r\n  definedlist.del(_T(\"__SECTION__\"));\r\n  definedlist.del(_T(\"__FUNCTION__\"));\r\n  definedlist.del(_T(\"__PAGEEX__\"));\r\n  definedlist.del(_T(\"__GLOBAL__\"));\r\n\r\n  switch (GetCurrentTokenPlace())\r\n  {\r\n    case TP_SEC:\r\n      definedlist.add(_T(\"__SECTION__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    case TP_FUNC:\r\n      definedlist.add(_T(\"__FUNCTION__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    case TP_PAGEEX:\r\n      definedlist.add(_T(\"__PAGEEX__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    default:\r\n      definedlist.add(_T(\"__GLOBAL__\"));\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::postbuild_cmd::delete_all()\r\n{\r\n  for (struct postbuild_cmd *p = this, *tmp; p;)\r\n  {\r\n    tmp = p, p = p->next;\r\n    delete [] tmp;\r\n  }\r\n}\r\n\r\nCEXEBuild::postbuild_cmd* CEXEBuild::postbuild_cmd::make(const TCHAR *cmdstr, int cmpop, int cmpval)\r\n{\r\n  postbuild_cmd *p = (postbuild_cmd*) (new BYTE[FIELD_OFFSET(postbuild_cmd, cmd[_tcsclen(cmdstr)+!0])]);\r\n  p->next = NULL, _tcscpy(p->cmd, cmdstr);\r\n  p->cmpop = cmpop, p->cmpval = cmpval;\r\n  return p;\r\n}\r\n\r\nint CEXEBuild::run_postbuild_cmds(const postbuild_cmd *cmds, const TCHAR *templatearg_pc1, const TCHAR* commandname)\r\n{\r\n  for (const postbuild_cmd *cmd = cmds; cmd; cmd = cmd->next)\r\n  {\r\n    const TCHAR *cmdstr = cmd->cmd, *searchstart = cmdstr;\r\n    TCHAR *arg, *cmdstrbuf = NULL, *tmpbuf;\r\n    for (; (arg = _tcsstr(const_cast<TCHAR*>(searchstart), _T(\"%1\")));) // While found, replace %1 with templatearg_pc1\r\n    {\r\n      const size_t cchtpc1 = _tcslen(templatearg_pc1);\r\n      tmpbuf = (TCHAR*) malloc((_tcslen(cmdstr) + cchtpc1 + !0) * sizeof(TCHAR));\r\n      if (!tmpbuf)\r\n      {\r\n        ERROR_MSG(_T(\"Error: Can't allocate memory for %\") NPRIs _T(\" command\\n\"), commandname);\r\n        return PS_ERROR;\r\n      }\r\n      arg -= ((UINT_PTR)cmdstr)/sizeof(TCHAR), arg += ((UINT_PTR)tmpbuf)/sizeof(TCHAR);\r\n      _tcscpy(tmpbuf, cmdstr);\r\n      free(cmdstrbuf);\r\n      memmove(arg + cchtpc1, arg + 2, (_tcslen(arg + 2) + !0) * sizeof(TCHAR));\r\n      memmove(arg, templatearg_pc1, cchtpc1 * sizeof(TCHAR));\r\n      // BUGBUG: Should we call PathConvertWinToPosix on templatearg_pc1?\r\n      cmdstr = cmdstrbuf = tmpbuf, searchstart = arg + cchtpc1;\r\n    }\r\n    SCRIPT_MSG(_T(\"\\n%\") NPRIs _T(\" command: %\") NPRIs _T(\"\\n\"), commandname, cmdstr);\r\n    int ret = sane_system(cmdstr);\r\n    if (!check_external_exitcode(ret, cmd->cmpop, cmd->cmpval))\r\n    {\r\n      ERROR_MSG(_T(\"%\") NPRIs _T(\" command returned %d, aborting\\n\"), commandname, ret);\r\n      return PS_ERROR;\r\n    }\r\n    if (ret != 0) INFO_MSG(_T(\"%\") NPRIs _T(\" command returned %d\\n\"), commandname, ret);\r\n    free(cmdstrbuf);\r\n  }\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::check_external_exitcode(int exitcode, int op, int val)\r\n{\r\n  switch(op)\r\n  {\r\n  case 0: return exitcode < val;\r\n  case 1: return exitcode > val;\r\n  case 2: return exitcode != val;\r\n  case 3: return exitcode == val;\r\n  case 4: return -1; // ignore\r\n  }\r\n  return 0;\r\n}\r\n", "/*\n * main.c: executable header main code\n * \n * This file is a part of NSIS.\n * \n * Copyright (C) 1999-2023 Nullsoft and Contributors\n * \n * Licensed under the zlib/libpng license (the \"License\");\n * you may not use this file except in compliance with the License.\n * \n * Licence details can be found in the file COPYING.\n * \n * This software is provided 'as-is', without any express or implied\n * warranty.\n */\n\n#include \"../Platform.h\"\n#include <shlobj.h>\n#include \"resource.h\"\n#include \"util.h\"\n#include \"fileform.h\"\n#include \"state.h\"\n#include \"ui.h\"\n#include \"lang.h\"\n#include \"exec.h\"\n#include \"plugin.h\"\n\n#ifndef LOAD_LIBRARY_SEARCH_USER_DIRS\n#define LOAD_LIBRARY_SEARCH_USER_DIRS 0x00000400\n#define LOAD_LIBRARY_SEARCH_SYSTEM32  0x00000800\n#endif\n#ifndef SHTDN_REASON_FLAG_PLANNED\n#define SHTDN_REASON_FLAG_PLANNED 0x80000000\n#endif\n#ifndef SHTDN_REASON_MAJOR_APPLICATION\n#define SHTDN_REASON_MAJOR_APPLICATION 0x00040000\n#endif\n#ifndef SHTDN_REASON_MINOR_INSTALLATION\n#define SHTDN_REASON_MINOR_INSTALLATION 0x0002\n#endif\n#ifndef SHUTDOWN_RESTART\n#define SHUTDOWN_RESTART 0x00000004\n#endif\n#ifndef SHUTDOWN_FORCE_OTHERS\n#define SHUTDOWN_FORCE_OTHERS 0x00000001\n#endif\n#ifndef SHUTDOWN_GRACE_OVERRIDE\n#define SHUTDOWN_GRACE_OVERRIDE 0x00000020\n#endif\n\n#if defined(_MSC_VER) && _MSC_VER >= 1200\nEXTERN_C IMAGE_DOS_HEADER __ImageBase;\n#define HINST_THISCOMPONENT ( (HINSTANCE) &__ImageBase )\n#define HINST_APPLICATION HINST_THISCOMPONENT\n#else\n#define HINST_APPLICATION ( (HINSTANCE) GetModuleHandle(NULL) )\n#endif\n\n#if !defined(NSIS_CONFIG_VISIBLE_SUPPORT) && !defined(NSIS_CONFIG_SILENT_SUPPORT)\n#error One of NSIS_CONFIG_SILENT_SUPPORT or NSIS_CONFIG_VISIBLE_SUPPORT must be defined.\n#endif\n#ifdef NSIS_COMPRESS_WHOLE\nextern HANDLE dbd_hFile;\n#endif\n\nTCHAR g_caption[NSIS_MAX_STRLEN*2]; // Why does this have to be NSIS_MAX_STRLEN*2?\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\nHWND g_hwnd;\nHANDLE g_hInstance;\n#endif\nvoid *g_SHGetFolderPath;\nDWORD g_WinVer;\n\nvoid NSISCALL CleanUp();\n\nTCHAR *ValidateTempDir()\n{\n  validate_filename(state_temp_dir);\n  if (!validpathspec(state_temp_dir))\n    return NULL;\n  addtrailingslash(state_temp_dir);\n  CreateNormalDirectory(state_temp_dir);\n  // state_language is used as a temp var here\n  return my_GetTempFileName(state_language, state_temp_dir);\n}\n\n\nNSIS_ENTRYPOINT_GUINOCRT\nEXTERN_C void NSISWinMainNOCRT()\n{\n  int ret = 0;\n  const TCHAR *m_Err = _LANG_ERRORWRITINGTEMP;\n  int cl_flags = 0;\n\n  TCHAR *realcmds;\n  TCHAR seekchar=_T(' ');\n  TCHAR *cmdline;\n  OSVERSIONINFOEX ovi;\n\n  SetErrorMode(SEM_NOOPENFILEERRORBOX | SEM_FAILCRITICALERRORS);\n\n  // Get the version as reported by Windows\n  if (sizeof(void*) < 8)\n  {\n    *((UINT32*)&ovi.szCSDVersion[0]) = 0; // Zero out SP\n    *((UINT64*)&ovi.wServicePackMajor) = 0; // wServicePackMajor, wSuiteMask and wProductType\n  }\n  ovi.dwOSVersionInfoSize = sizeof(OSVERSIONINFOEX);\n  if (!GetVersionEx((OSVERSIONINFO*) &ovi) && sizeof(void*) < 8)\n  {\n    ovi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n    GetVersionEx((OSVERSIONINFO*) &ovi);\n    if (sizeof(TCHAR) == 2 || ovi.dwPlatformId == VER_PLATFORM_WIN32_NT)\n    {\n      ovi.wProductType = 4; // TODO: For < NT4SP6, look it up in the registry. 4 means not W9x and not VER_NT_*\n      ovi.wServicePackMajor = ovi.szCSDVersion[0] == 'S' ? ovi.szCSDVersion[13] - '0' : 0;\n    }\n  }\n  if (sizeof(TCHAR) == 1 && ovi.dwPlatformId < VER_PLATFORM_WIN32_NT)\n  {\n    ovi.wProductType = 0;\n    ovi.wServicePackMajor = ovi.szCSDVersion[1] >= 'A' ? ovi.szCSDVersion[1] - ('A'-1) : 0; // A, B or C\n  }\n  if (sizeof(void*) < 8 && ovi.dwMajorVersion < 10) // Ideally (sizeof(TCHAR) == 1 && ovi.dwMajorVersion < 5) but the compatibility tab emulates this bug\n  {\n    ovi.dwBuildNumber &= 0xffff; // Remove W9x garbage\n  }\n  // Save the packed version information\n  {\n    UINT32 *p = &g_osinfo.WVBuild;\n    p[0] = ovi.dwBuildNumber;\n    p[1] = MAKELONG(MAKEWORD(ovi.wProductType, ovi.wServicePackMajor), MAKEWORD(ovi.dwMinorVersion, ovi.dwMajorVersion));\n  }\n\n  {\n    // bug #1125: Don't load modules from the application nor current directory.\n    // SetDefaultDllDirectories() allows us to restrict implicitly loaded and \n    // dynamically loaded modules to just %windir%\\System32 and directories \n    // added with AddDllDirectory(). This prevents DLL search order attacks (CAPEC-471).\n    // CoCreateInstance(CLSID_ShellLink, ...) fails on Vista if SetDefaultDllDirectories is called\n    BOOL avoidwinbug = IsWinVista();\n    if (!avoidwinbug)\n    {\n      FARPROC fp = myGetProcAddress(MGA_SetDefaultDllDirectories);\n      if (fp) ((BOOL(WINAPI*)(DWORD))fp)(LOAD_LIBRARY_SEARCH_SYSTEM32|LOAD_LIBRARY_SEARCH_USER_DIRS);\n    }\n    // SetDefaultDllDirectories might not be available so we try to preload various libraries as \n    // best we can before Windows gets a chance to mess things up by loading from the wrong directory.\n    {\n      static const char preload[] = \n        \"UXTHEME\\0\" // Vista: OleInitialize calls NtUserCreateWindowEx and that pulls in UXTheme.dll\n        \"USERENV\\0\" // Vista: SHGetFileInfo ends up in SHELL32.kfapi::GetUserProfileDir and that pulls in UserEnv.dll\n        \"SETUPAPI\\0\" // XP: SHGetFileInfo ends up in CMountPoint::_InitLocalDriveHelper and that pulls in SetupAPI.dll\n        \"APPHELP\\0\" // Vista: SHGetFileInfo ... SHELL32.SHILAliasTranslate ... SHELL32.ApphelpCheckShellObject\n        \"PROPSYS\\0\" // Vista: SHGetFileInfo ... SHELL32.SHILAliasTranslate ... SHLWAPI.#187 ... SHLWAPI.#505/SHPropertyBag_ReadGUID\n        \"DWMAPI\\0\" // Win7 without KB2533623: UXTheme pulls in DWMAPI.dll\n        \"CRYPTBASE\\0\" // Win7 without KB2533623: OleInitialize ... RPCRT4.UuidCreate ... RPCRT4.GenerateRandomNumber\n        \"OLEACC\\0\" // Vista: SHFileOperation ... SHELL32.CProgressDialogUI::_Setup ... SHELL32.GetRoleTextW\n        \"CLBCATQ\\0\" // XP.SP2&SP3: SHAutoComplete ... OLE32!InitializeCatalogIfNecessary ... OLE32!CComCatalog::TryToLoadCLB\n        \"NTMARTA\\0\" // Win7 without KB2533623 (Bug #1204): SHGetFileInfo ... SetEntriesInAcl ... ADVAPI32!AccProvpLoadMartaFunctions\n#ifndef NSIS_SUPPORT_GETDLLVERSION\n        \"VERSION\\0\"\n#endif\n      ;\n      const char *dll;\n      for (dll = preload; dll[0]; dll += lstrlenA(dll) + 1)\n        LoadSystemLibrary(dll);\n    }\n  }\n\n  // Because myGetProcAddress now loads dlls with a full path \n  // under GetSystemDirectory() the previous issues in <= v3.0b2 with \n  // 'SetOutPath' and/or 'File \"shfolder.dll\"' no longer apply.\n  // All MGA dlls still need to be loaded early here because installers \n  // running under WoW64 might disable WoW64 FS redirection in .onInit and \n  // because GetSystemDirectory() can return the native system32 path we need\n  // the redirection to be turned off so LoadLibrary uses the correct folder.\n  // Note: We also import directly from KERNEL32, ADVAPI32 and SHELL32 so they \n  // are exempt from this requirement and SHELL32 imports from SHLWAPI on \n  // WoW64 systems and it is also on the KnownDLLs list so \n  // SHLWAPI also gets a pass and that just leaves \n#ifdef NSIS_SUPPORT_GETDLLVERSION\n  myGetProcAddress(MGA_GetFileVersionInfo); // VERSION\n#endif\n  g_SHGetFolderPath = myGetProcAddress(MGA_SHGetFolderPath); // and SHFOLDER\n\n#ifndef _WIN64\n  {\n    // KEY_WOW64_xxKEY flags causes registry functions to fail on WinNT4 & Win2000.\n    // We don't filter them out because all registry instructions are supposed to fail when \n    // accessing a unsupported view and RegKey* takes care of that by looking at the WOW64 flag.\n    FARPROC fp = myGetProcAddress(MGA_IsOS);\n    enum { os_wow6432 = 30 };\n    if (fp && ((BOOL(WINAPI*)(UINT))fp)(os_wow6432)) g_osinfo.WVProd |= NSIS_OSINFO_PROD_WOW64FLAG;\n  }\n#endif\n\n  InitCommonControls();\n\n#if defined(NSIS_SUPPORT_ACTIVEXREG) || defined(NSIS_SUPPORT_CREATESHORTCUT)\n  {\n    extern HRESULT g_hres;\n    g_hres=OleInitialize(NULL);\n  }\n#endif\n\n\n  {\n    // workaround for bug #1008632\n    // http://sourceforge.net/tracker/index.php?func=detail&aid=1008632&group_id=22049&atid=373085\n    //\n    // without this, SHGetSpecialFolderLocation doesn't always recognize\n    // some special folders, like the desktop folder for all users, on\n    // Windows 9x. unlike SHGetSpecialFolderPath, which is not available\n    // on all versions of Windows, SHGetSpecialFolderLocation doesn't try\n    // too hard to make sure the caller gets what he asked for. so we give\n    // it a little push in the right direction by doing part of the work\n    // for it.\n    //\n    // part of what SHGetFileInfo does, is to convert a path into an idl.\n    // to do this conversion, it first needs to initialize the list of \n    // special idls, which are exactly the idls we use to get the paths\n    // of special folders (CSIDL_*).\n\n    SHFILEINFO shfi;\n    SHGetFileInfo(_T(\"\"), 0, &shfi, sizeof(SHFILEINFO), 0);\n  }\n\n  mystrcpy(g_caption,_LANG_GENERIC_ERROR);\n\n  mystrcpy(state_command_line, GetCommandLine());\n\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\n  g_hInstance = HINST_APPLICATION;\n#endif//NSIS_CONFIG_VISIBLE_SUPPORT\n\n  cmdline = state_command_line;\n  if (*cmdline == _T('\\\"')) seekchar = *cmdline++;\n\n  cmdline=findchar(cmdline, seekchar);\n  cmdline=CharNext(cmdline);\n  realcmds=cmdline;\n\n  while (*cmdline)\n  {\n    // skip over any spaces\n    while (*cmdline == _T(' ')) cmdline++;\n    \n    // get char we should look for to get the next parm\n    seekchar = _T(' ');\n    if (cmdline[0] == _T('\\\"'))\n    {\n      cmdline++;\n      seekchar = _T('\\\"');\n    }\n\n    // is it a switch?\n    if (cmdline[0] == _T('/'))\n    {\n      cmdline++;\n\n#define END_OF_ARG(c) (c == _T(' ') || c == _T('\\0'))\n\n#if defined(NSIS_CONFIG_VISIBLE_SUPPORT) && defined(NSIS_CONFIG_SILENT_SUPPORT)\n      if (cmdline[0] == _T('S') && END_OF_ARG(cmdline[1]))\n        g_exec_flags.silent = 1; // bug #1076 - just set the silent flag. the user really wants it silent.\n                                 // loadHeaders() will not reset this as it uses |= to apply the script flags.\n                                 // there is also no option to force non-silent like `CRCCheck force`\n#endif//NSIS_CONFIG_SILENT_SUPPORT && NSIS_CONFIG_VISIBLE_SUPPORT\n#ifdef NSIS_CONFIG_CRC_SUPPORT\n      if (CMP4CHAR(cmdline, _T(\"NCRC\")) && END_OF_ARG(cmdline[4]))\n        cl_flags |= FH_FLAGS_NO_CRC;\n#endif//NSIS_CONFIG_CRC_SUPPORT\n\n      if (CMP4CHAR(cmdline-2, _T(\" /D=\")))\n      {\n        *(cmdline-2)=_T('\\0'); // keep this from being passed to uninstaller if necessary\n        mystrcpy(state_install_directory,cmdline+2);\n        break; // /D= must always be last\n      }\n    }\n\n    // skip over our parm\n    cmdline = findchar(cmdline, seekchar);\n    // skip the quote\n    if (*cmdline == _T('\\\"'))\n      cmdline++;\n  }\n\n  GetTempPath(NSIS_MAX_STRLEN, state_temp_dir);\n  if (!ValidateTempDir())\n  {\n    GetWindowsDirectory(state_temp_dir, NSIS_MAX_STRLEN - 5); // leave space for \\Temp\n    mystrcat(state_temp_dir, _T(\"\\\\Temp\"));\n    if (!ValidateTempDir())\n    {\n      // Bug #2909242:\n      // When running at <= Low IL we cannot write to %Temp% but we can try the temp folder used by IE.\n      // There does not seem to be a API to get the low temp dir directly, so we build the path on our own\n\n      GetTempPath(NSIS_MAX_STRLEN - 4, state_temp_dir); // leave space for \\Low\n      mystrcat(state_temp_dir, _T(\"Low\"));\n\n      // If we don't call SetEnvironmentVariable \n      // child processes will use %temp% and not %temp%\\Low\n      // and some apps probably can't handle a read only %temp%\n      // Do it before ValidateTempDir() because it appends a backslash.\n      // TODO: Should this be moved to ValidateTempDir() so it also updates for %windir%\\Temp?\n      SetEnvironmentVariable(_T(\"TEMP\"), state_temp_dir);\n      SetEnvironmentVariable(_T(\"TMP\"), state_temp_dir);\n\n      if (!ValidateTempDir())\n      {\n        goto end;\n      }\n    }\n  }\n  DeleteFile(state_language);\n\n  m_Err = loadHeaders(cl_flags);\n  if (m_Err) goto end;\n\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\n  if (g_is_uninstaller)\n  {\n    TCHAR *p = findchar(state_command_line, 0);\n\n    // state_command_line has state_install_directory right after it in memory, so reading\n    // a bit over state_command_line won't do any harm\n    while (p >= state_command_line && !CMP4CHAR(p, _T(\" _?=\"))) p--;\n\n    m_Err = _LANG_UNINSTINITERROR;\n\n    if (p >= state_command_line)\n    {\n      *p=0; // terminate before \"_?=\"\n      p+=4; // skip over \" _?=\"\n      if (is_valid_instpath(p))\n      {\n        mystrcpy(state_install_directory, p);\n        mystrcpy(state_output_directory, p);\n        m_Err = 0;\n      }\n      else\n      {\n        goto end;\n      }\n    }\n    else\n    {\n      int x, admin = UserIsAdminGrpMember();\n\n      mystrcat(state_temp_dir,_T(\"~nsu\"));\n      if (admin) mystrcat(state_temp_dir,_T(\"A\")); // Don't lock down the directory used by non-admins\n      mystrcat(state_temp_dir,_T(\".tmp\"));\n\n      // check if already running from uninstaller temp dir\n      // this prevents recursive uninstaller calls\n      if (!lstrcmpi(state_temp_dir,state_exe_directory))\n        goto end;\n\n      admin ? CreateRestrictedDirectory(state_temp_dir) : CreateNormalDirectory(state_temp_dir);\n      SetCurrentDirectory(state_temp_dir);\n\n      if (!(*state_install_directory))\n        mystrcpy(state_install_directory,state_exe_directory);\n\n      mystrcpy(g_usrvars[0], realcmds);\n      SET2CHAR(g_usrvars[1], _T(\"A\\0\"));\n\n      for (x = 0; x < 26; x ++)\n      {\n        static TCHAR buf2[NSIS_MAX_STRLEN];\n\n        GetNSISString(buf2,g_header->str_uninstchild); // $TEMP\\Un_$1.exe\n\n        DeleteFile(buf2); // clean up after all the other ones if they are there\n\n        if (m_Err) // not done yet\n        {\n          // copy file\n          if (CopyFile(state_exe_path,buf2,TRUE))\n          {\n            HANDLE hProc;\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\n            MoveFileOnReboot(buf2,NULL);\n#endif\n            GetNSISString(buf2,g_header->str_uninstcmd); // '\"$TEMP\\Un_$1.exe\" $0 _?=$INSTDIR\\'\n            hProc=myCreateProcess(buf2);\n            if (hProc)\n            {\n              CloseHandle(hProc);\n              // success\n              m_Err = 0;\n            }\n          }\n        }\n        (*(((NSIS_STRING *)g_usrvars)[1]))++;\n      }\n\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\n      MoveFileOnReboot(state_temp_dir,NULL);\n#endif\n\n      goto end;\n    }\n  }\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\n\n  g_exec_flags.errlvl = -1;\n  ret = ui_doinstall();\n\n#ifdef NSIS_CONFIG_LOG\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\n  log_write(1);\n#endif//!NSIS_CONFIG_LOG_ODS && !NSIS_CONFIG_LOG_STDOUT\n#endif//NSIS_CONFIG_LOG\nend:\n\n  CleanUp();\n\n#if defined(NSIS_SUPPORT_ACTIVEXREG) || defined(NSIS_SUPPORT_CREATESHORTCUT)\n  OleUninitialize();\n#endif\n\n  if (m_Err)\n  {\n    my_MessageBox(m_Err, MB_OK | MB_ICONSTOP | (IDOK << 21));\n    ExitProcess(2);\n  }\n\n#ifdef NSIS_SUPPORT_REBOOT\n  if (g_exec_flags.reboot_called)\n  {\n    const DWORD reason = SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_MAJOR_APPLICATION | SHTDN_REASON_MINOR_INSTALLATION;\n    BOOL (WINAPI *IS)(LPTSTR,LPTSTR,DWORD,DWORD,DWORD);\n    HANDLE hToken;\n    TOKEN_PRIVILEGES tkp;\n    if (OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken))\n    {\n      LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME, &tkp.Privileges[0].Luid);\n      tkp.PrivilegeCount = 1;\n      tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\n      AdjustTokenPrivileges(hToken, FALSE, &tkp, 0, (PTOKEN_PRIVILEGES)NULL, 0);\n    }\n\n    IS=myGetProcAddress(MGA_InitiateShutdown);\n    if ( (IS && !IS(NULL, NULL, 0, SHUTDOWN_RESTART | SHUTDOWN_FORCE_OTHERS | SHUTDOWN_GRACE_OVERRIDE, reason))\n      || (!ExitWindowsEx(EWX_REBOOT, reason))\n      )\n      ExecuteCallbackFunction(CB_ONREBOOTFAILED);\n  }\n#endif//NSIS_SUPPORT_REBOOT\n\n  if (g_exec_flags.errlvl != -1)\n    ret = g_exec_flags.errlvl;\n\n  ExitProcess(ret);\n}\n\nvoid NSISCALL CleanUp()\n{\n  if (g_db_hFile != INVALID_HANDLE_VALUE)\n  {\n    CloseHandle(g_db_hFile);\n    g_db_hFile = INVALID_HANDLE_VALUE;\n  }\n#ifdef NSIS_COMPRESS_WHOLE\n  if (dbd_hFile != INVALID_HANDLE_VALUE)\n  {\n    CloseHandle(dbd_hFile);\n    dbd_hFile = INVALID_HANDLE_VALUE;\n  }\n#endif\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\n  // Notify plugins that we are about to unload\n  Plugins_UnloadAll();\n\n  // Clean up after plug-ins\n  myDelete(state_plugins_dir, DEL_DIR | DEL_RECURSE | DEL_REBOOT);\n#endif // NSIS_CONFIG_PLUGIN_SUPPORT\n#ifdef DEBUG\n  // GlobalFree(g_header); ?\n#endif\n}\n", "/*\r\n * util.c\r\n * \r\n * This file is a part of NSIS.\r\n * \r\n * Copyright (C) 1999-2023 Nullsoft and Contributors\r\n * \r\n * Licensed under the zlib/libpng license (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * \r\n * Licence details can be found in the file COPYING.\r\n * \r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.\r\n *\r\n * Unicode support by Jim Park -- 08/11/2007\r\n */\r\n\r\n#include \"../Platform.h\"\r\n#include <shellapi.h>\r\n#include \"util.h\"\r\n#include \"state.h\"\r\n#include \"config.h\"\r\n#include \"lang.h\"\r\n#include \"fileform.h\"\r\n#include \"exec.h\"\r\n#include \"ui.h\"\r\n#include \"resource.h\"\r\n#include \"../tchar.h\"\r\n\r\n#ifdef NSIS_CONFIG_LOG\r\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\r\nTCHAR g_log_file[1024];\r\n#endif\r\n#endif\r\n\r\n// *** DO NOT DECLARE MORE VARIABLES INSIDE THESE PRAGMAS ***\r\n// This will produce a special section called \".ndata\" (stands for nsis data)\r\n// this way makensis during build time, can search for this section by name\r\n// and change the virtual size of this section\r\n// which results in extra memory for extra variables without code to do allocation :)\r\n// nsis then removes the \"DISCARDABLE\" style from section (for safe)\r\n#ifdef _MSC_VER\r\n#  pragma bss_seg(NSIS_VARS_SECTION)\r\nNSIS_STRING g_usrvarssection[1];\r\n#  pragma bss_seg()\r\n#  pragma comment(linker, \"/section:\" NSIS_VARS_SECTION \",rwd\")\r\n#else\r\n#  ifdef __GNUC__\r\n// GCC does not treat g_usrvarssection as a bss section so we keep the size as small as possible.\r\n// NSIS_STRING g_usrvarssection[31] is required to remove this hack but that really bloats the exehead.\r\nTCHAR g_usrvarssection[1] __attribute__((section (NSIS_VARS_SECTION)));\r\nconst NSIS_STRING*const g_usrvarsstart = (const NSIS_STRING*const) g_usrvarssection;\r\n#  else\r\n#    error Unknown compiler. You must implement the separate PE section yourself.\r\n#  endif\r\n#endif\r\n\r\nconst UINT32 g_restrictedacl[] = {\r\n  0x00340002, 0x00000002, // ACL (ACL_REVISION2, 2 ACEs)\r\n  0x00180300, // ACCESS_ALLOWED_ACE:ACE_HEADER (ACCESS_ALLOWED_ACE_TYPE, CONTAINER_INHERIT_ACE|OBJECT_INHERIT_ACE)\r\n  0x10000000, // ACCESS_ALLOWED_ACE:ACCESS_MASK: GENERIC_ALL\r\n  0x00000201, 0x05000000, 0x00000020, 0x00000220, // ACCESS_ALLOWED_ACE:SID (BUILTIN\\Administrators) NOTE: GetAdminGrpSid() relies on this being the first SID in the ACL\r\n  0x00140300, // ACCESS_ALLOWED_ACE:ACE_HEADER (ACCESS_ALLOWED_ACE_TYPE, CONTAINER_INHERIT_ACE|OBJECT_INHERIT_ACE)\r\n  0x00130041, // ACCESS_ALLOWED_ACE:ACCESS_MASK: DELETE|READ_CONTROL|SYNCHRONIZE|FILE_DELETE_CHILD|FILE_LIST_DIRECTORY\r\n  0x00000101, 0x01000000, 0x00000000 // ACCESS_ALLOWED_ACE:SID (WORLD\\Everyone)\r\n};\r\n\r\nDWORD NSISCALL CreateRestrictedDirectory(LPCTSTR path)\r\n{\r\n  const SECURITY_INFORMATION si = OWNER_SECURITY_INFORMATION|GROUP_SECURITY_INFORMATION|DACL_SECURITY_INFORMATION|PROTECTED_DACL_SECURITY_INFORMATION;\r\n  PSID admingrpsid = GetAdminGrpSid();\r\n  SECURITY_DESCRIPTOR sd = { 1, 0, SE_DACL_PRESENT, admingrpsid, admingrpsid, NULL, GetAdminGrpAcl() };\r\n  SECURITY_ATTRIBUTES sa = { sizeof(SECURITY_ATTRIBUTES), &sd, FALSE };\r\n  DWORD ec = CreateDirectory(path, &sa) ? ERROR_SUCCESS : GetLastError();\r\n  if (ERROR_ALREADY_EXISTS == ec)\r\n    ec = SetFileSecurity(path, si, &sd) ? ERROR_SUCCESS : GetLastError();\r\n  return ec;\r\n}\r\nDWORD NSISCALL CreateNormalDirectory(LPCTSTR path)\r\n{\r\n  return CreateDirectory(path, NULL) ? ERROR_SUCCESS : GetLastError();\r\n}\r\n\r\nBOOL NSISCALL UserIsAdminGrpMember()\r\n{\r\n  FARPROC iuaa = myGetProcAddress(MGA_IsUserAnAdmin);\r\n  return iuaa && ((BOOL(WINAPI*)())iuaa)();\r\n}\r\n\r\nHANDLE NSISCALL myCreateProcess(TCHAR *cmd)\r\n{\r\n  PROCESS_INFORMATION ProcInfo;\r\n  static STARTUPINFO StartUp;\r\n  StartUp.cb=sizeof(StartUp);\r\n  if (!CreateProcess(NULL, cmd, NULL, NULL, FALSE, CREATE_DEFAULT_ERROR_MODE, NULL, NULL, &StartUp, &ProcInfo))\r\n    return NULL;\r\n  CloseHandle(ProcInfo.hThread);\r\n  return ProcInfo.hProcess;\r\n}\r\n\r\nBOOL NSISCALL myShellExecuteEx(SHELLEXECUTEINFO*pSEI)\r\n{\r\n  pSEI->cbSize = sizeof(SHELLEXECUTEINFO);\r\n  pSEI->lpIDList = NULL; // Must set this because SEE_MASK_INVOKEIDLIST might be set by ExecShell[Wait]\r\n  return ShellExecuteEx(pSEI);\r\n}\r\n\r\n/*BOOL NSISCALL my_SetWindowText(HWND hWnd, const TCHAR *val)\r\n{\r\n  return SendMessage(hWnd,WM_SETTEXT,0,(LPARAM)val);\r\n}*/\r\n\r\nBOOL NSISCALL my_SetDialogItemText(HWND dlg, UINT idx, const TCHAR *val)\r\n{\r\n  return SetDlgItemText(dlg,idx,val);\r\n//  return my_SetWindowText(GetDlgItem(dlg, idx), val);\r\n}\r\n\r\nint NSISCALL my_GetDialogItemText(UINT idx, TCHAR *val)\r\n{\r\n  extern HWND m_curwnd;\r\n  return GetDlgItemText(m_curwnd, idx, val, NSIS_MAX_STRLEN);\r\n//  return my_GetWindowText(GetDlgItem(m_curwnd, idx), val, NSIS_MAX_STRLEN);\r\n}\r\n\r\nint NSISCALL my_MessageBox(const TCHAR *text, UINT type) {\r\n  int _type = type & 0x001FFFFF;\r\n  static MSGBOXPARAMS mbp = {\r\n    sizeof(MSGBOXPARAMS),\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    MAKEINTRESOURCE(IDI_ICON2),\r\n    0,\r\n    0,\r\n    0\r\n  };\r\n  \r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  // default for silent installers\r\n  if (g_exec_flags.silent && type >> 21)\r\n    return type >> 21;\r\n#endif\r\n  // no silent or no default, just show\r\n  if (g_exec_flags.rtl)\r\n    _type ^= MB_RIGHT | MB_RTLREADING;\r\n\r\n  mbp.hwndOwner = g_hwnd;\r\n  mbp.hInstance = g_hInstance;\r\n  mbp.lpszText = text;\r\n  mbp.lpszCaption = g_caption; // Should call update_caption() here?\r\n  mbp.dwStyle = _type;\r\n  \r\n  return MessageBoxIndirect(&mbp);\r\n}\r\n\r\nBOOL NSISCALL delete_with_ro_attr_handling(LPCTSTR fileordir,int flags) \r\n{\r\n  const DWORD attr=remove_ro_attr(fileordir);\r\n  if (attr != INVALID_FILE_ATTRIBUTES) \r\n  {\r\n    if (flags & DEL_DIR)\r\n    {\r\n      if (RemoveDirectory(fileordir)) return TRUE;\r\n    }\r\n    else\r\n    {\r\n      if (DeleteFile(fileordir)) return TRUE;\r\n    }\r\n\r\n    // Not sure if wininit.ini and MoveFileEx handle RO attr in the same \r\n    // way so we just play it safe\r\n    if (!(flags & DEL_REBOOT)) SetFileAttributes(fileordir,attr);\r\n  }\r\n  return FALSE;\r\n}\r\n\r\nvoid NSISCALL myDelete(TCHAR *buf, int flags)\r\n{\r\n  static TCHAR lbuf[NSIS_MAX_STRLEN];\r\n  const int rebootflag=(flags & DEL_REBOOT);\r\n\r\n  HANDLE h;\r\n  WIN32_FIND_DATA fd;\r\n  TCHAR *fn;\r\n  int valid_dir=is_valid_instpath(buf);\r\n\r\n  if ((flags & DEL_SIMPLE))\r\n  {\r\n    g_exec_flags.exec_error += !DeleteFile(buf);\r\n    return;\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n  if (!(flags & DEL_DIR) || (valid_dir && (flags & DEL_RECURSE)))\r\n#endif//NSIS_SUPPORT_RMDIR\r\n  {\r\n    mystrcpy(lbuf,buf);\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n    if (flags & DEL_DIR)\r\n      mystrcat(lbuf,_T(\"\\\\*.*\"));\r\n    else\r\n#endif//NSIS_SUPPORT_RMDIR\r\n      trimslashtoend(buf);\r\n\r\n    // only append backslash if the path isn't relative to the working directory [bug #1851273]\r\n    if (*buf || *lbuf == _T('\\\\'))\r\n      mystrcat(buf,_T(\"\\\\\"));\r\n\r\n    fn=buf+mystrlen(buf);\r\n\r\n    h = FindFirstFile(lbuf,&fd);\r\n    if (h != INVALID_HANDLE_VALUE)\r\n    {\r\n      do\r\n      {\r\n        TCHAR *fdfn = fd.cFileName;\r\n#ifndef _UNICODE\r\n        if (*findchar(fdfn, _T('?')) && *fd.cAlternateFileName)\r\n          // name contains unicode, use short name\r\n          fdfn = fd.cAlternateFileName;\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n        if (fdfn[0] == _T('.') && !fdfn[1]) continue;\r\n        if (fdfn[0] == _T('.') && fdfn[1] == _T('.') && !fdfn[2]) continue;\r\n#endif//NSIS_SUPPORT_RMDIR\r\n        {\r\n          mystrcpy(fn,fdfn);\r\n          if (fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)\r\n          {\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n            if ((flags & (DEL_DIR | DEL_RECURSE)) == (DEL_DIR | DEL_RECURSE))\r\n            {\r\n              myDelete(buf,flags);\r\n            }\r\n#endif//NSIS_SUPPORT_RMDIR\r\n          }\r\n          else\r\n          {\r\n            log_printf2(_T(\"Delete: DeleteFile(\\\"%s\\\")\"),buf);\r\n            \r\n            if (!delete_with_ro_attr_handling(buf,rebootflag))\r\n            {\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n              if (rebootflag)\r\n              {\r\n                log_printf2(_T(\"Delete: DeleteFile on Reboot(\\\"%s\\\")\"),buf);\r\n                update_status_text(LANG_DELETEONREBOOT,buf);\r\n                MoveFileOnReboot(buf,NULL);\r\n              }\r\n              else\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n              {\r\n                log_printf2(_T(\"Delete: DeleteFile failed(\\\"%s\\\")\"),buf);\r\n                g_exec_flags.exec_error++;\r\n              }\r\n            }\r\n            else\r\n              update_status_text(LANG_DELETEFILE,buf);\r\n          }\r\n        }\r\n      } while (FindNextFile(h,&fd));\r\n      FindClose(h);\r\n    }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n    if (flags & DEL_DIR)\r\n      fn[-1]=0;\r\n#endif//NSIS_SUPPORT_RMDIR\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n  if ((flags & DEL_DIR))\r\n  {\r\n    if (!valid_dir)\r\n    {\r\n      log_printf2(_T(\"RMDir: RemoveDirectory invalid input(\\\"%s\\\")\"),buf);\r\n      g_exec_flags.exec_error++;\r\n    }\r\n    else if (file_exists(buf))\r\n    {\r\n      addtrailingslash(buf);\r\n      log_printf2(_T(\"RMDir: RemoveDirectory(\\\"%s\\\")\"),buf);\r\n      if (!delete_with_ro_attr_handling(buf,DEL_DIR|rebootflag))\r\n      {\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n        if (rebootflag)\r\n        {\r\n          log_printf2(_T(\"RMDir: RemoveDirectory on Reboot(\\\"%s\\\")\"),buf);\r\n          update_status_text(LANG_DELETEONREBOOT,buf);\r\n          MoveFileOnReboot(buf,NULL);\r\n        }\r\n        else\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n        {\r\n          log_printf2(_T(\"RMDir: RemoveDirectory failed(\\\"%s\\\")\"),buf);\r\n          g_exec_flags.exec_error++;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        update_status_text(LANG_REMOVEDIR,buf);\r\n      }\r\n    }\r\n  }\r\n#endif//NSIS_SUPPORT_RMDIR\r\n}\r\n\r\nTCHAR *NSISCALL addtrailingslash(TCHAR *str)\r\n{\r\n  if (lastchar(str)!=_T('\\\\')) mystrcat(str,_T(\"\\\\\"));\r\n  return str;\r\n}\r\n\r\n/*char NSISCALL lastchar(const char *str)\r\n{\r\n  return *CharPrev(str,str+mystrlen(str));\r\n}*/\r\n\r\nTCHAR * NSISCALL findchar(TCHAR *str, TCHAR c)\r\n{\r\n  while (*str && *str != c)\r\n  {\r\n    str = CharNext(str);\r\n  }\r\n  return str;\r\n}\r\n\r\n// Separates a full path to the directory portion and file name portion\r\n// and returns the pointer to the filename portion.\r\nTCHAR * NSISCALL trimslashtoend(TCHAR *buf)\r\n{\r\n  TCHAR *p = buf + mystrlen(buf);\r\n  do\r\n  {\r\n    if (*p == _T('\\\\'))\r\n      break;\r\n    p = CharPrev(buf, p);\r\n  } while (p > buf);\r\n\r\n  *p = 0;\r\n\r\n  return p + 1;\r\n}\r\n\r\nint NSISCALL validpathspec(TCHAR *ubuf)\r\n{\r\n  TCHAR dl = ubuf[0] | 0x20; // convert alleged drive letter to lower case\r\n  return ((ubuf[0] == _T('\\\\') && ubuf[1] == _T('\\\\')) ||\r\n          (dl >= _T('a') && dl <= _T('z') && ubuf[1] == _T(':')));\r\n}\r\n\r\nTCHAR * NSISCALL skip_root(TCHAR *path)\r\n{\r\n  TCHAR *p = CharNext(path);\r\n  TCHAR *p2 = CharNext(p);\r\n\r\n  if (*path && p[0] == _T(':') && p[1] == _T('\\\\'))\r\n  {\r\n    return CharNext(p2);\r\n  }\r\n  else if (path[0] == _T('\\\\') && path[1] == _T('\\\\'))\r\n  {\r\n    // skip host and share name\r\n    int x = 2;\r\n    while (x--)\r\n    {\r\n      p2 = findchar(p2, _T('\\\\'));\r\n      if (!*p2)\r\n        return NULL;\r\n      p2++; // skip backslash\r\n    }\r\n\r\n    return p2;\r\n  }\r\n  else\r\n    return NULL;\r\n}\r\n\r\nint NSISCALL is_valid_instpath(TCHAR *s)\r\n{\r\n  static TCHAR tmp[NSIS_MAX_STRLEN];\r\n  TCHAR *root;\r\n\r\n  mystrcpy(tmp, s);\r\n\r\n  root = skip_root(tmp);\r\n\r\n  if (!root)\r\n    return 0;\r\n\r\n  // must be called after skip_root or AllowRootDirInstall won't work.\r\n  // validate_filename removes trailing backslashes and so converts\r\n  // \"C:\\\" to \"C:\" which is not a valid directory. skip_root returns\r\n  // NULL for \"C:\" so the above test returns 0.\r\n  // validate_filename is called so directories such as \"C:\\ \" will\r\n  // not pass as a valid non-root directory.\r\n  validate_filename(root);\r\n\r\n  if ((g_flags & CH_FLAGS_NO_ROOT_DIR) && (!*root || *root == _T('\\\\')))\r\n    return 0;\r\n\r\n  while (mystrlen(tmp) > root - tmp)\r\n  {\r\n    WIN32_FIND_DATA *fd = file_exists(tmp);\r\n    // if the directory bit not set then it's a file, which is not a valid inst dir...\r\n    // GetFileAttributes is not used because it doesn't work with certain files (error 32)\r\n    // as for concerns of the user using * or ?, that's invalid anyway...\r\n    if (fd && !(fd->dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY))\r\n      return 0;\r\n    trimslashtoend(tmp);\r\n  }\r\n\r\n  // if the root drive exists\r\n  addtrailingslash(tmp); // don't check the current directory, check the root directory\r\n  if (GetFileAttributes(tmp) == INVALID_FILE_ATTRIBUTES)\r\n    return 0;\r\n\r\n  return 1;\r\n}\r\n\r\n// Used strictly for the wininit.ini file which is an ASCII file.\r\nchar * NSISCALL mystrstriA(char *a, const char *b)\r\n{\r\n  int l = lstrlenA(b);\r\n  while (lstrlenA(a) >= l)\r\n  {\r\n    char c = a[l];\r\n    a[l] = 0;\r\n    if (!lstrcmpiA(a, b))\r\n    {\r\n      a[l] = c;\r\n      return a;\r\n    }\r\n    a[l] = c;\r\n    a = CharNextA(a);\r\n  }\r\n  return NULL;\r\n}\r\n\r\n\r\n#ifndef _NSIS_NODEFLIB_CRTMEMCPY\r\n// mini_memcpy takes the number of bytes to copy.\r\nvoid NSISCALL mini_memcpy(void *out, const void *in, UINT_PTR cb)\r\n{\r\n  char *dst = (char*) out, *src = (char*) in;\r\n  while (cb-- > 0) *dst++ = *src++;\r\n}\r\n#endif\r\n\r\nDWORD NSISCALL remove_ro_attr(LPCTSTR file)\r\n{\r\n  const DWORD attr = GetFileAttributes(file);\r\n  if (attr != INVALID_FILE_ATTRIBUTES)\r\n    SetFileAttributes(file,attr&(~FILE_ATTRIBUTE_READONLY));\r\n  return attr;\r\n}\r\n\r\nHANDLE NSISCALL myOpenFile(const TCHAR *fn, DWORD da, DWORD cd)\r\n{\r\n  int attr = GetFileAttributes(fn);\r\n  return CreateFile(\r\n    fn,\r\n    da,\r\n    FILE_SHARE_READ,\r\n    NULL,\r\n    cd,\r\n    attr == INVALID_FILE_ATTRIBUTES ? 0 : attr,\r\n    NULL\r\n  );\r\n}\r\n\r\nTCHAR * NSISCALL my_GetTempFileName(TCHAR *buf, const TCHAR *dir)\r\n{\r\n  int n = 100;\r\n  while (n--)\r\n  {\r\n    TCHAR prefix[4] = _T(\"nsa\");\r\n    prefix[2] += (TCHAR)(GetTickCount() % 26);\r\n    if (GetTempFileName(dir, prefix, 0, buf))\r\n      return buf;\r\n  }\r\n  *buf = 0;\r\n  return 0;\r\n}\r\n\r\nBOOL NSISCALL myReadFile(HANDLE h, LPVOID buf, DWORD cb)\r\n{\r\n  DWORD cbio;\r\n  return ReadFile(h, buf, cb, &cbio, NULL) && cb == cbio;\r\n}\r\n\r\nBOOL NSISCALL myWriteFile(HANDLE h, const void*buf, DWORD cb)\r\n{\r\n  DWORD cbio;\r\n  return WriteFile(h, buf, cb, &cbio, NULL) && cb == cbio;\r\n}\r\n\r\n// Reading skips the BOM if present, writing writes it to a empty file\r\nHRESULT NSISCALL UTF16LEBOM(HANDLE h, INT_PTR ForWrite)\r\n{\r\n  DWORD orgpos = SetFilePointer(h, 0, NULL, FILE_CURRENT);\r\n  if (0 == orgpos)\r\n  {\r\n    BYTE bom[2];\r\n    if (myReadFile(h, bom, 2) && (0xfeff == *(USHORT*) &bom[0]))\r\n    {\r\n      return S_OK;\r\n    }\r\n    else if (ForWrite)\r\n    {\r\n      if (0 == SetFilePointer(h, 0, NULL, FILE_CURRENT)) // Is the file empty?\r\n      {\r\n        static const BYTE bom16le[] = { 0xff, 0xfe };\r\n        return myWriteFile(h, bom16le, 2) ? S_OK : E_FAIL;\r\n      }\r\n    }\r\n    SetFilePointer(h, 0, NULL, FILE_BEGIN); // The file may have started with something that was not a BOM, undo the read\r\n  }\r\n  return S_FALSE;\r\n}\r\n\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n#ifndef _WIN64\r\n/** Modifies the wininit.ini file to rename / delete a file.\r\n *\r\n * @param prevName The previous / current name of the file.\r\n * @param newName The new name to move the file to.  If NULL, the current file\r\n * will be deleted.\r\n */\r\nvoid RenameViaWininit(const TCHAR* prevName, const TCHAR* newName)\r\n{\r\n  static char szRenameLine[1024];\r\n  static TCHAR wininit[1024];\r\n  static TCHAR tmpbuf[1024];\r\n\r\n  int cchRenameLine;\r\n  LPCSTR szRenameSec = \"[Rename]\\r\\n\"; // rename section marker\r\n  HANDLE hfile;\r\n  DWORD dwFileSize, dwRenameLinePos;\r\n  char *pszWinInit;   // Contains the file contents of wininit.ini\r\n\r\n  int spn;   // length of the short path name in TCHARs.\r\n\r\n  // Optimized mystrcpy(tmpbuf, _T(\"NUL\")):\r\n  if (sizeof(TCHAR) == 1)\r\n    *(UINT32*)tmpbuf = ((UINT32)'N' <<  0) | ((UINT32)'U' <<  8) | ((UINT32)'L' << 16) | ((UINT32)'\\0' << 24);\r\n  else\r\n    *(UINT64*)tmpbuf = ((UINT64)'N' <<  0) | ((UINT64)'U' << 16) | ((UINT64)'L' << 32) | ((UINT64)'\\0' << 48);\r\n\r\n  if (newName) {\r\n    // create the file if it's not already there to prevent GetShortPathName from failing\r\n    CloseHandle(myOpenFile(newName,0,CREATE_NEW));\r\n    spn = GetShortPathName(newName,tmpbuf,1024);\r\n    if (!spn || spn > 1024)\r\n      return;\r\n  }\r\n  // wininit is used as a temporary here\r\n  spn = GetShortPathName(prevName,wininit,1024);\r\n  if (!spn || spn > 1024)\r\n    return;\r\n#ifdef _UNICODE\r\n  cchRenameLine = wsprintfA(szRenameLine, \"%ls=%ls\\r\\n\", tmpbuf, wininit);\r\n#else\r\n  cchRenameLine = wsprintfA(szRenameLine, \"%s=%s\\r\\n\", tmpbuf, wininit);\r\n#endif\r\n  // Get the path to the wininit.ini file.\r\n  GetNSISString(wininit, g_header->str_wininit);\r\n\r\n  hfile = myOpenFile(wininit, GENERIC_READ | GENERIC_WRITE, OPEN_ALWAYS);\r\n\r\n  if (hfile != INVALID_HANDLE_VALUE)\r\n  {\r\n    // We are now working on the Windows wininit file\r\n    dwFileSize = GetFileSize(hfile, NULL);\r\n    pszWinInit = (char*) GlobalAlloc(GPTR, dwFileSize + cchRenameLine + 10);\r\n\r\n    if (pszWinInit != NULL)\r\n    {\r\n      if (myReadFile(hfile, pszWinInit, dwFileSize))\r\n      {\r\n        // Look for the rename section in the current file.\r\n        LPSTR pszRenameSecInFile = mystrstriA(pszWinInit, szRenameSec);\r\n        if (pszRenameSecInFile == NULL)\r\n        {\r\n          // No rename section.  So we add it to the end of file.\r\n          lstrcpyA(pszWinInit+dwFileSize, szRenameSec);\r\n          dwFileSize += 10;\r\n          dwRenameLinePos = dwFileSize;\r\n        }\r\n        else\r\n        {\r\n          // There is a rename section, but is there another section after it?\r\n          char *pszFirstRenameLine = pszRenameSecInFile+10;\r\n          char *pszNextSec = mystrstriA(pszFirstRenameLine,\"\\n[\");\r\n          if (pszNextSec)\r\n          {\r\n            char *p = pszWinInit + dwFileSize;\r\n            char *pEnd = pszWinInit + dwFileSize + cchRenameLine;\r\n\r\n            while (p > pszNextSec)\r\n            {\r\n              *pEnd-- = *p--;\r\n            }\r\n\r\n            dwRenameLinePos = BUGBUG64TRUNCATE(DWORD, pszNextSec - pszWinInit) + 1; // +1 for the \\n\r\n          }\r\n          // rename section is last, stick item at end of file\r\n          else dwRenameLinePos = dwFileSize;\r\n        }\r\n\r\n        mini_memcpy(&pszWinInit[dwRenameLinePos], szRenameLine, cchRenameLine);\r\n        dwFileSize += cchRenameLine;\r\n\r\n        SetFilePointer(hfile, 0, NULL, FILE_BEGIN);\r\n        myWriteFile(hfile, pszWinInit, dwFileSize);\r\n\r\n        GlobalFree(pszWinInit);\r\n      }\r\n    }\r\n    \r\n    CloseHandle(hfile);\r\n  }\r\n}\r\n#endif\r\n\r\n/**\r\n * MoveFileOnReboot tries to move a file by the name of pszExisting to the\r\n * name pszNew.\r\n *\r\n * @param pszExisting The old name of the file.\r\n * @param pszNew The new name of the file.\r\n */\r\nvoid NSISCALL MoveFileOnReboot(LPCTSTR pszExisting, LPCTSTR pszNew)\r\n{\r\n#ifndef _WIN64 // Shut up GCC unused warning\r\n  BOOL fOk =\r\n#endif\r\n    MoveFileEx(pszExisting, pszNew, MOVEFILE_DELAY_UNTIL_REBOOT|MOVEFILE_REPLACE_EXISTING);\r\n#ifndef _WIN64\r\n  if (!fOk)\r\n  {\r\n    RenameViaWininit(pszExisting, pszNew);\r\n  }\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_REBOOT\r\n  g_exec_flags.exec_reboot++;\r\n#endif\r\n}\r\n#endif\r\n\r\n#define GetAltViewREGSAM() ( sizeof(void*) > 4 ? KEY_WOW64_32KEY : KEY_WOW64_64KEY )\r\nHKEY NSISCALL GetRegKeyAndSAM(HKEY hKey, REGSAM*pRS)\r\n{\r\n  const REGSAM samviewmask = (KEY_WOW64_32KEY|KEY_WOW64_64KEY);\r\n  const REGSAM incompatsamview = SystemSupportsAltRegView() ? 0 : GetAltViewREGSAM();\r\n  REGSAM sam = *pRS, incompatsam = incompatsamview;\r\n#ifdef C_ASSERT\r\n  {C_ASSERT(REGROOTVIEWTOSAMVIEW(REGROOTVIEW32|REGROOTVIEW64) == (KEY_WOW64_32KEY|KEY_WOW64_64KEY));}\r\n#endif\r\n  if ((sam & KEY_FORCEVIEW) && IsRegRootkeyForcedView(hKey))\r\n  {\r\n    REGSAM keysamview = REGROOTVIEWTOSAMVIEW(hKey);\r\n    if (keysamview == samviewmask) keysamview = (g_exec_flags.alter_reg_view & ~incompatsamview); // HKxxANY tries to honor SetRegView\r\n    sam &= ~samviewmask, sam |= (keysamview & ~(sizeof(void*) > 4 ? 0 : KEY_WOW64_32KEY)); // HKxx32 has the *_32KEY bit set but WinNT4&2000 cannot handle any KEY_WOW64_xxKEY flags.\r\n    hKey = (HKEY) ( (UINT_PTR) hKey & ~(REGROOTVIEW32|REGROOTVIEW64) );\r\n  }\r\n  else if (sam & KEY_ALTERVIEW)\r\n  {\r\n    sam |= g_exec_flags.alter_reg_view; // We don't mask away the incompatsamview bits because the operation is supposed to fail if the view is not supported.\r\n  }\r\n  *pRS = sam & ~(NSIS_REGSAM_PRIVATEMASK); // Filter away internal flags\r\n  return (incompatsam & sam) ? NULL : hKey; // Fail if the requested view is not supported\r\n}\r\nLONG NSISCALL RegKeyOpen(HKEY hBase, LPCTSTR SubKey, REGSAM RS, HKEY*phKey)\r\n{\r\n  if (!(hBase = GetRegKeyAndSAM(hBase, &RS))) return ERROR_INVALID_HANDLE; // ERROR_CANTOPEN?\r\n  return RegOpenKeyEx(hBase, SubKey, 0, RS, phKey);\r\n}\r\nLONG NSISCALL RegKeyCreate(HKEY hBase, LPCTSTR SubKey, REGSAM RS, HKEY*phKey)\r\n{\r\n  if (!(hBase = GetRegKeyAndSAM(hBase, &RS))) return ERROR_INVALID_HANDLE; // ERROR_CANTOPEN?\r\n  return RegCreateKeyEx(hBase, SubKey, 0, 0, 0, RS, 0, phKey, 0);\r\n}\r\n\r\nvoid NSISCALL myRegGetStr(HKEY root, const TCHAR *sub, const TCHAR *name, TCHAR *out, UINT altview)\r\n{\r\n  HKEY hKey;\r\n  DWORD cb = NSIS_MAX_STRLEN*sizeof(TCHAR), rt, ec;\r\n  REGSAM samview = altview ? GetAltViewREGSAM() : 0;\r\n  if ((ec = RegKeyOpen(root, sub, KEY_READ|samview, &hKey)) == ERROR_SUCCESS)\r\n  {\r\n    ec = RegQueryValueEx(hKey, name, NULL, &rt, (LPBYTE)out, &cb);\r\n    RegCloseKey(hKey);\r\n    out[NSIS_MAX_STRLEN-1] = 0; // Make sure the string is terminated. This could potentially truncate a long string by 1 character!\r\n  }\r\n  if (ec != ERROR_SUCCESS || (rt != REG_SZ && rt != REG_EXPAND_SZ)) *out = 0; // Empty string on failure\r\n}\r\n\r\nvoid NSISCALL iptrtostr(TCHAR *s, INT_PTR d)\r\n{\r\n#ifdef _WIN64\r\n  static const TCHAR c[] = _T(\"%Id\"); \r\n#else\r\n  static const TCHAR c[] = _T(\"%d\");\r\n#endif\r\n  wsprintf(s,c,d);\r\n}\r\n\r\nINT_PTR NSISCALL strtoiptr(const TCHAR *s)\r\n{\r\n  UINT_PTR v=0;\r\n  INT_PTR sign=1; // sign of positive\r\n  TCHAR m=10; // base of 10\r\n  TCHAR t=_T('9'); // cap top of numbers at 9\r\n\r\n  if (*s == _T('-'))\r\n  {\r\n    s++;  //skip over -\r\n    sign=-1; // sign flip\r\n  }\r\n\r\n  if (*s == _T('0'))\r\n  {\r\n    s++; // skip over 0\r\n    if (s[0] >= _T('0') && s[0] <= _T('7'))\r\n    {\r\n      m=8; // base of 8\r\n      t=_T('7'); // cap top at 7\r\n    }\r\n    if ((s[0] & ~0x20) == _T('X'))\r\n    {\r\n      m=16; // base of 16\r\n      s++; // advance over 'x'\r\n    }\r\n  }\r\n\r\n  for (;;)\r\n  {\r\n    int c=*s++;\r\n    if (c >= _T('0') && c <= t) c-=_T('0');\r\n    // clever little trick to do both upper and lowercase A-F.\r\n    else if (m==16 && (c & ~0x20) >= _T('A') && (c & ~0x20) <= _T('F')) c = (c & 7) + 9;\r\n    else break;\r\n    v*=m;\r\n    v+=c;\r\n  }\r\n  return ((INT_PTR)v)*sign;\r\n}\r\n\r\n// Straight copies of selected shell functions.  Calling local functions\r\n// requires less code than DLL functions.  For the savings to outweigh the cost\r\n// of a new function there should be about a couple of dozen or so calls.\r\nTCHAR * NSISCALL mystrcpy(TCHAR *out, const TCHAR *in)\r\n{\r\n  return lstrcpyn(out, in, NSIS_MAX_STRLEN);\r\n}\r\n\r\nint NSISCALL mystrlen(const TCHAR *in)\r\n{\r\n  return lstrlen(in);\r\n}\r\n\r\nTCHAR * NSISCALL mystrcat(TCHAR *out, const TCHAR *concat)\r\n{\r\n  return lstrcat(out, concat);\r\n}\r\n\r\nint StrWideToACP(LPCWSTR Src, char* Dst, int DstCap)\r\n{\r\n  return WideCharToMultiByte(CP_ACP, 0, Src, -1, Dst, DstCap, NULL, NULL);\r\n}\r\n\r\n#ifndef UNICODE\r\nvoid strcpyWideToT(TCHAR *out, LPCWSTR in)\r\n{\r\n  StrWideToACP(in, out, NSIS_MAX_STRLEN);\r\n}\r\n#endif\r\n\r\n#if !defined(_WIN64) && !defined(UNICODE)\r\nHRESULT ComIIDFromString(LPCTSTR str, IID*out)\r\n{\r\n  WCHAR buf[130];\r\n  signed char i;\r\n  for (i = 0; i >= 0; ++i)\r\n    if (!(buf[i] = str[i]))\r\n      return IIDFromString(buf, out);\r\n  return E_FAIL;\r\n}\r\n#endif\r\n\r\nTCHAR ps_tmpbuf[NSIS_MAX_STRLEN*2];\r\n\r\nconst TCHAR SYSREGKEY[]   = _T(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\");\r\nconst TCHAR QUICKLAUNCH[] = _T(\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\r\n\r\ntypedef HRESULT (WINAPI* PFNSHGETFOLDERPATH)(HWND, int, HANDLE, DWORD, LPTSTR);\r\nextern void *g_SHGetFolderPath;\r\ntypedef LPITEMIDLIST (WINAPI* PFNSHCLONESPECIALIDLIST)(HWND, int, BOOL);\r\n\r\n// Based on Dave Laundon's simplified process_string\r\n// The string actually has a lot of different data encoded into it.  This\r\n// function extracts the special data out and puts it into outbuf.\r\nTCHAR * NSISCALL GetNSISString(TCHAR *outbuf, int strtab)\r\n{\r\n  // This looks at the g_block (copied from header->blocks) and\r\n  // indexes into the language\r\n  TCHAR *in = (TCHAR*)GetNSISStringNP(GetNSISTab(strtab));\r\n  TCHAR *out = ps_tmpbuf;\r\n\r\n  // Still working within ps_tmpbuf, so set out to the\r\n  // current position that is passed in.\r\n  if (outbuf >= ps_tmpbuf && \r\n     (size_t) (outbuf - ps_tmpbuf) < COUNTOF(ps_tmpbuf))\r\n  {\r\n    out = outbuf;\r\n    outbuf = 0;\r\n  }\r\n\r\n  while (*in && out - ps_tmpbuf < NSIS_MAX_STRLEN)\r\n  {\r\n    _TUCHAR nVarIdx = (_TUCHAR)*in++;\r\n    int nData;\r\n    int fldrs[4];\r\n    if (nVarIdx < NS_SKIP_CODE)\r\n    {\r\n      // The next 2 BYTEs in the string might be coding either a value 0..MAX_CODED (nData), or 2 CSIDL of Special folders (for NS_SHELL_CODE)\r\n      nData = DECODE_SHORT(in);\r\n      // There are 2 CSIDL parameters for each context and query must be used before create \r\n      // because of bug #820 (CSIDL_FLAG_CREATE failures on root paths are cached in Vista).\r\n#ifdef _UNICODE\r\n      fldrs[1] = LOBYTE(*in); // current user\r\n      fldrs[0] = fldrs[1] | CSIDL_FLAG_CREATE;\r\n      fldrs[3] = HIBYTE(*in); // all users\r\n      fldrs[2] = fldrs[3] | CSIDL_FLAG_CREATE;\r\n#else\r\n      fldrs[0] = in[0] | CSIDL_FLAG_CREATE; // current user\r\n      fldrs[1] = in[0];\r\n      fldrs[2] = in[1] | CSIDL_FLAG_CREATE; // all users\r\n      fldrs[3] = in[1];\r\n#endif\r\n      in += sizeof(SHORT)/sizeof(TCHAR);\r\n\r\n      if (nVarIdx == NS_SHELL_CODE)\r\n      {\r\n        LPITEMIDLIST idl;\r\n\r\n        int x = 2;\r\n        BOOL isWin9598 = IsWin9598();\r\n        /*\r\n        SHGetFolderPath as provided by shfolder.dll is used to get special folders\r\n        unless the installer is running on Windows 95/98. For 95/98 shfolder.dll is\r\n        only used for the Application Data and Documents folder (if the DLL exists).\r\n        Otherwise, the old SHGetSpecialFolderLocation API is called.\r\n\r\n        The reason for not using shfolder.dll for all folders on 95/98 is that some\r\n        unsupported folders (such as the Start Menu folder for all users) are\r\n        simulated instead of returning an error so we can fall back on the current\r\n        user folder.\r\n\r\n        SHGetFolderPath in shell32.dll could be called directly for Windows versions\r\n        later than 95/98 but there is no need to do so, because shfolder.dll is still\r\n        provided and calls shell32.dll.\r\n        */\r\n        BOOL use_shfolder =\r\n          // Use shfolder if not on 95/98\r\n          !isWin9598 ||\r\n          // Unless the Application Data or Documents folder is requested\r\n          (\r\n            (fldrs[3] == CSIDL_COMMON_APPDATA) ||\r\n            (fldrs[3] == CSIDL_COMMON_DOCUMENTS)\r\n          );\r\n\r\n        /* Carry on... shfolder stuff is over. */\r\n\r\n        if (g_exec_flags.all_user_var)\r\n        {\r\n          x = 4; // Get common folder > Create common folder > Get user folder > Create user folder\r\n        }\r\n\r\n        if (fldrs[1] & 0x80)\r\n        {\r\n          myRegGetStr(HKEY_LOCAL_MACHINE, SYSREGKEY, GetNSISStringNP(fldrs[1] & 0x3F), out, fldrs[1] & 0x40);\r\n          if (!*out)\r\n            GetNSISString(out, fldrs[3]);\r\n          x = 0;\r\n        }\r\n        else if (fldrs[1] == CSIDL_SYSTEM) // Does not work on 95, 98 nor NT4. Works on ME and 2000+.\r\n        {\r\n          GetSystemDirectory(out, NSIS_MAX_STRLEN);\r\n          x = 0;\r\n        }\r\n        else if (fldrs[1] == CSIDL_WINDOWS) // Does not work on 95, 98 nor NT4. Works on ME and 2000+.\r\n        {\r\n          GetWindowsDirectory(out, NSIS_MAX_STRLEN);\r\n          x = 0;\r\n        }\r\n\r\n        while (x--)\r\n        {\r\n          PFNSHCLONESPECIALIDLIST SHCSILFunc;\r\n          int idandflags = fldrs[x] & ~0x40, create = idandflags & CSIDL_FLAG_CREATE;\r\n\r\n          if (g_SHGetFolderPath && use_shfolder)\r\n          {\r\n            PFNSHGETFOLDERPATH SHGetFolderPathFunc = (PFNSHGETFOLDERPATH) g_SHGetFolderPath;\r\n            if (!SHGetFolderPathFunc(g_hwnd, idandflags, NULL, SHGFP_TYPE_CURRENT, out))\r\n            {\r\n              break;\r\n            }\r\n          }\r\n\r\n          // This function exists in 95 & NT4 but was undocumented back then so we have to import it by ordinal.\r\n          SHCSILFunc = (PFNSHCLONESPECIALIDLIST) myGetProcAddress(MGA_SHCloneSpecialIDList);\r\n          idl = SHCSILFunc(g_hwnd, LOBYTE(idandflags), create);\r\n          if (idl)\r\n          {\r\n            BOOL res = SHGetPathFromIDList(idl, out);\r\n            CoTaskMemFree(idl);\r\n            if (res) break;\r\n          }\r\n\r\n          *out=0;\r\n        }\r\n\r\n        if (*out)\r\n        {\r\n          // all users' version is CSIDL_APPDATA only for $QUICKLAUNCH\r\n          // for normal $APPDATA, it'd be CSIDL_APPDATA_COMMON\r\n          if (fldrs[3] == CSIDL_APPDATA)\r\n          {\r\n            mystrcat(out, QUICKLAUNCH); // append suffix path for $QUICKLAUNCH\r\n          }\r\n        }\r\n        validate_filename(out);\r\n      }\r\n      else if (nVarIdx == NS_VAR_CODE)\r\n      {\r\n        if (nData == 29) // $HWNDPARENT\r\n          iptrtostr(out, (INT_PTR) g_hwnd);\r\n        else\r\n          mystrcpy(out, g_usrvars[nData]);\r\n        // validate the directory name\r\n        if ((unsigned int)(nData - 21) < 7) {\r\n          // validate paths for $INSTDIR, $OUTDIR, $EXEDIR, $LANGUAGE, $TEMP, $PLUGINSDIR and $EXEPATH\r\n          // $LANGUAGE is just a number anyway...\r\n          validate_filename(out);\r\n        }\r\n      } // == VAR_CODES_START\r\n      else if (nVarIdx == NS_LANG_CODE)\r\n      {\r\n        GetNSISString(out, -nData-1);\r\n      }\r\n      out += mystrlen(out);\r\n    }\r\n    else if (nVarIdx == NS_SKIP_CODE)\r\n    {\r\n      *out++ = *in++;\r\n    }\r\n    else // Normal char\r\n    {\r\n      *out++ = nVarIdx;\r\n    }\r\n  } // while\r\n  *out = 0;\r\n  if (outbuf)\r\n    return mystrcpy(outbuf, ps_tmpbuf);\r\n  return ps_tmpbuf;\r\n}\r\n\r\nvoid NSISCALL validate_filename(TCHAR *in) {\r\n  TCHAR *nono = _T(\"*?|<>/\\\":\");\r\n  TCHAR *out;\r\n  TCHAR *out_save;\r\n\r\n  // ignoring spaces is wrong, _T(\" C:\\blah\") is invalid\r\n  //while (*in == _T(' ')) in = CharNext(in);\r\n\r\n  if (in[0] == _T('\\\\') && in[1] == _T('\\\\') && in[2] == _T('?') && in[3] == _T('\\\\'))\r\n  {\r\n    // at least four bytes\r\n    in += 4;\r\n  }\r\n  if (*in)\r\n  {\r\n    // at least two bytes\r\n    if (validpathspec(in)) in += 2;\r\n  }\r\n  out = out_save = in;\r\n  while (*in)\r\n  {\r\n    if ((_TUCHAR)*in > 31 && !*findchar(nono, *in))\r\n    {\r\n      mini_memcpy(out, in, CharNext(in) - in);\r\n      out = CharNext(out);\r\n    }\r\n    in = CharNext(in);\r\n  }\r\n  *out = 0;\r\n  // now trim rightmost backslashes & spaces\r\n  do\r\n  {\r\n    out = CharPrev(out_save, out);\r\n    if (*out == _T(' ') || *out == _T('\\\\'))\r\n      *out = 0;\r\n    else\r\n      break;\r\n  } while (out_save < out);\r\n}\r\n\r\n#ifdef NSIS_CONFIG_LOG\r\nint log_dolog;\r\nTCHAR log_text[2048]; // 1024 for each wsprintf\r\n\r\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\r\nvoid NSISCALL log_write(int close)\r\n{\r\n  static HANDLE fp=INVALID_HANDLE_VALUE;\r\n  if (close)\r\n  {\r\n    if (fp!=INVALID_HANDLE_VALUE)\r\n    {\r\n      CloseHandle(fp);\r\n    }\r\n    fp=INVALID_HANDLE_VALUE;\r\n    return;\r\n  }\r\n  if (log_dolog)\r\n  {\r\n    if (g_log_file[0] && fp==INVALID_HANDLE_VALUE)\r\n    {\r\n      fp = myOpenFile(g_log_file,GENERIC_WRITE,OPEN_ALWAYS);\r\n      if (fp!=INVALID_HANDLE_VALUE)\r\n        SetFilePointer(fp,0,NULL,FILE_END);\r\n    }\r\n    if (fp!=INVALID_HANDLE_VALUE)\r\n    {\r\n      mystrcat(log_text,_T(\"\\r\\n\"));\r\n      myWriteFile(fp,log_text,mystrlen(log_text)*sizeof(TCHAR));\r\n    }\r\n  }\r\n}\r\n#endif//!NSIS_CONFIG_LOG_ODS && !NSIS_CONFIG_LOG_STDOUT\r\n\r\nconst TCHAR * _RegKeyHandleToName(HKEY hKey)\r\n{\r\n  if (hKey == HKEY_CLASSES_ROOT) return _T(\"HKEY_CLASSES_ROOT\");\r\n  if (hKey == HKEY_CURRENT_USER) return _T(\"HKEY_CURRENT_USER\");\r\n  if (hKey == HKEY_LOCAL_MACHINE) return _T(\"HKEY_LOCAL_MACHINE\");\r\n  if (hKey == HKEY_USERS) return _T(\"HKEY_USERS\");\r\n  if (hKey == HKEY_PERFORMANCE_DATA) return _T(\"HKEY_PERFORMANCE_DATA\");\r\n  if (hKey == HKEY_CURRENT_CONFIG) return _T(\"HKEY_CURRENT_CONFIG\");\r\n  if (hKey == HKEY_DYN_DATA) return _T(\"HKEY_DYN_DATA\");\r\n  if (hKey == HKSHCTX) return _T(\"HKSHCTX\");\r\n  if (hKey == HKSHCTX32) return _T(\"HKSHCTX32\");\r\n  if (hKey == HKSHCTX64) return _T(\"HKSHCTX64\");\r\n  if (hKey == HKCR32) return _T(\"HKCR32\");\r\n  if (hKey == HKCR64) return _T(\"HKCR64\");\r\n  if (hKey == HKCU32) return _T(\"HKCU32\");\r\n  if (hKey == HKCU64) return _T(\"HKCU64\");\r\n  if (hKey == HKLM32) return _T(\"HKLM32\");\r\n  if (hKey == HKLM64) return _T(\"HKLM64\");\r\n  if (hKey == HKSHCTXANY) return _T(\"HKSHCTXANY\");\r\n  if (hKey == HKCRANY) return _T(\"HKCRANY\");\r\n  if (hKey == HKCUANY) return _T(\"HKCUANY\");\r\n  if (hKey == HKLMANY) return _T(\"HKLMANY\");\r\n  return _T(\"HK??\");\r\n}\r\n\r\nvoid _LogData2Hex(TCHAR *buf, size_t cchbuf, BYTE *data, size_t cbdata)\r\n{\r\n  TCHAR *p = buf;\r\n  int dots = 0;\r\n  size_t i, bufbytes = cchbuf / 3; // 2 hex digits, one space/null\r\n\r\n  if (cbdata > bufbytes)\r\n    bufbytes--, dots++;\r\n  else\r\n    bufbytes = cbdata;\r\n\r\n  for (i = 0; i < bufbytes; i++)\r\n  {\r\n    wsprintf(p, _T(\"%02x%c\"), data[i], (i == bufbytes - 1) ? _T('\\0') : _T(' '));\r\n    p += 3;\r\n  }\r\n\r\n  if (dots) mystrcat(buf, _T(\"...\"));\r\n}\r\n\r\n#ifdef NSIS_CONFIG_LOG_TIMESTAMP\r\nvoid log_timestamp(TCHAR *buf)\r\n{\r\n  SYSTEMTIME st;\r\n  GetLocalTime(&st);\r\n  wsprintf(buf,_T(\"[%04hu/%02hu/%02hu %02hu:%02hu:%02hu] \"), st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute, st.wSecond);\r\n}\r\n#else\r\n#  define log_timestamp(x)\r\n#endif//NSIS_CONFIG_LOG_TIMESTAMP\r\n\r\nvoid log_printf(TCHAR *format, ...)\r\n{\r\n#if defined(NSIS_CONFIG_LOG_STDOUT)\r\n  HANDLE hStdOut;\r\n#endif\r\n  va_list val;\r\n  va_start(val,format);\r\n\r\n  log_text[0] = _T('\\0');\r\n  log_timestamp(log_text);\r\n  wvsprintf(log_text+mystrlen(log_text),format,val);\r\n\r\n  va_end(val);\r\n#if defined(NSIS_CONFIG_LOG_ODS)\r\n  if (log_dolog)\r\n    OutputDebugString(log_text);\r\n#elif defined(NSIS_CONFIG_LOG_STDOUT)\r\n  if (log_dolog && (hStdOut = GetStdHandle(STD_OUTPUT_HANDLE)) != INVALID_HANDLE_VALUE)\r\n  {\r\n    const DWORD cch = lstrlen(log_text), cb = cch * sizeof(TCHAR);\r\n#ifdef UNICODE\r\n    DWORD conmode, cchio;\r\n    if (GetConsoleMode(hStdOut, &conmode))\r\n    {\r\n      WriteConsoleW(hStdOut, log_text, cch, &cchio, 0);\r\n      myWriteFile(hStdOut, \"\\n\", 1);\r\n    }\r\n    else\r\n#endif //~ UNICODE\r\n    {\r\n      myWriteFile(hStdOut, log_text, cb);\r\n      myWriteFile(hStdOut, _T(\"\\n\"), 1 * sizeof(TCHAR));\r\n    }\r\n  }\r\n#else\r\n  log_write(0);\r\n#endif\r\n}\r\n#endif//NSIS_CONFIG_LOG\r\n\r\n// Jim Park: This function is non-reentrant because of the static.\r\nWIN32_FIND_DATA * NSISCALL file_exists(TCHAR *buf)\r\n{\r\n  HANDLE h;\r\n  static WIN32_FIND_DATA fd;\r\n  h = FindFirstFile(buf,&fd);\r\n  if (h != INVALID_HANDLE_VALUE)\r\n  {\r\n    FindClose(h);\r\n    return &fd;\r\n  }\r\n  return NULL;\r\n}\r\n\r\n// Jim Park: Keep these as chars since there's only ANSI version of\r\n// GetProcAddress.\r\nstruct MGA_FUNC\r\n{\r\n  const char *dll;\r\n  const char *func;\r\n};\r\n\r\nstruct MGA_FUNC MGA_FUNCS[] = {\r\n#ifdef _UNICODE\r\n  {\"KERNEL32\", \"SetDefaultDllDirectories\"},\r\n#ifndef _WIN64\r\n  {\"KERNEL32\", \"GetDiskFreeSpaceExW\"},\r\n  {\"KERNEL32\", \"GetUserDefaultUILanguage\"},\r\n#endif\r\n#if !defined(_WIN64) || defined(_M_IA64)\r\n  {\"ADVAPI32\", \"RegDeleteKeyExW\"},\r\n#endif\r\n  {\"ADVAPI32\", \"InitiateShutdownW\"},\r\n  {\"SHELL32\", \"SHGetKnownFolderPath\"},\r\n  {\"SHELL32\", (CHAR*) 680}, // IsUserAnAdmin\r\n  {\"SHELL32\", (CHAR*) 89}, // SHCloneSpecialIDList\r\n#ifndef _WIN64\r\n  {\"SHLWAPI\", (CHAR*) 437}, // IsOS\r\n#endif\r\n  {\"SHLWAPI\",  \"SHAutoComplete\"},\r\n  {\"SHFOLDER\", \"SHGetFolderPathW\"},\r\n#ifdef NSIS_SUPPORT_GETDLLVERSION\r\n  {\"VERSION\",  \"GetFileVersionInfoSizeW\"},\r\n  {\"VERSION\",  \"GetFileVersionInfoW\"},\r\n  {\"VERSION\",  \"VerQueryValueW\"}\r\n#endif\r\n};\r\n#else\r\n  {\"KERNEL32\", \"SetDefaultDllDirectories\"},\r\n  {\"KERNEL32\", \"GetDiskFreeSpaceExA\"},\r\n  {\"KERNEL32\", \"GetUserDefaultUILanguage\"},\r\n  {\"ADVAPI32\", \"RegDeleteKeyExA\"},\r\n  {\"ADVAPI32\", \"InitiateShutdownA\"},\r\n  {\"SHELL32\", \"SHGetKnownFolderPath\"},\r\n  {\"SHELL32\", (CHAR*) 680}, // IsUserAnAdmin\r\n  {\"SHELL32\", (CHAR*) 89}, // SHCloneSpecialIDList\r\n#ifndef _WIN64\r\n  {\"SHLWAPI\", (CHAR*) 437}, // IsOS\r\n#endif\r\n  {\"SHLWAPI\",  \"SHAutoComplete\"},\r\n  {\"SHFOLDER\", \"SHGetFolderPathA\"},\r\n#ifdef NSIS_SUPPORT_GETDLLVERSION\r\n  {\"VERSION\",  \"GetFileVersionInfoSizeA\"},\r\n  {\"VERSION\",  \"GetFileVersionInfoA\"},\r\n  {\"VERSION\",  \"VerQueryValueA\"}\r\n#endif\r\n};\r\n#endif\r\n\r\nHMODULE NSISCALL LoadSystemLibrary(LPCSTR name)\r\n{\r\n  LPCTSTR fmt = sizeof(*fmt) > 1 ? TEXT(\"%s%S.dll\") : TEXT(\"%s%s.dll\"); // The module name is always ANSI\r\n  BYTE bytebuf[(MAX_PATH+1+20+1+3+!0) * sizeof(*fmt)]; // 20+4 is more than enough for \r\n  LPTSTR path = (LPTSTR) bytebuf;                      // the dllnames we are using.\r\n\r\n  UINT cch = GetSystemDirectory(path, MAX_PATH);\r\n  if (cch > MAX_PATH) // MAX_PATH was somehow not large enough and we don't support \r\n    cch = 0;          // \\\\?\\ paths so we have to settle for just the name.\r\n  wsprintf(path + cch, fmt, TEXT(\"\\\\\") + (!cch || path[cch-1] == '\\\\'), name);\r\n\r\n  return LoadLibraryEx(path, NULL, LOAD_WITH_ALTERED_SEARCH_PATH);\r\n}\r\n\r\n/**\r\n * Given a function enum, it will load the appropriate DLL and get the\r\n * process address of the function and return the pointer.  It's up to\r\n * the caller to know how to call that function, however.\r\n *\r\n * @param func Enum value that indexes the MGA_FUNCS array.\r\n * @return Pointer to the function identified by the enum value.\r\n */\r\nvoid* NSISCALL myGetProcAddress(const enum myGetProcAddressFunctions func)\r\n{\r\n  const char *dllname = MGA_FUNCS[func].dll;\r\n  HMODULE hModule;\r\n\r\n  hModule = GetModuleHandleA(dllname);    // Avoid LoadLibrary if possible because \r\n  if (!hModule)                           // it can crash on 64-bit dlls if \r\n    hModule = LoadSystemLibrary(dllname); // WoW64 FS redirection is off.\r\n\r\n  return hModule\r\n    ? GetProcAddress(hModule, MGA_FUNCS[func].func)\r\n    : (FARPROC) hModule; // Optimized \"return NULL;\"\r\n}\r\n\r\nvoid NSISCALL MessageLoop(UINT uCheckedMsg)\r\n{\r\n  MSG msg;\r\n  while (PeekMessage(&msg, NULL, uCheckedMsg, uCheckedMsg, PM_REMOVE))\r\n    DispatchMessage(&msg);\r\n}\r\n\r\n/**\r\n * This function is useful for Unicode support.  Since the Windows\r\n * GetProcAddress function always takes a char*, this function wraps\r\n * the windows call and does the appropriate translation when\r\n * appropriate.\r\n *\r\n * @param dllHandle Handle to the DLL loaded by LoadLibrary[Ex].\r\n * @param funcName The name of the function to get the address of.\r\n * @return The pointer to the function.  Null if failure.\r\n */\r\nvoid * NSISCALL NSISGetProcAddress(HANDLE dllHandle, TCHAR* funcName)\r\n{\r\n#ifdef _UNICODE\r\n  char ansiName[256];\r\n  if (StrWideToACP(funcName, ansiName, 256) != 0)\r\n    return GetProcAddress(dllHandle, ansiName);\r\n  return NULL;\r\n#else\r\n  return GetProcAddress(dllHandle, funcName);\r\n#endif\r\n}\r\n\r\nDWORD NSISCALL WaitForProcess(HANDLE hProcess)\r\n{\r\n  DWORD excod;\r\n  while (WaitForSingleObject(hProcess, 100) == WAIT_TIMEOUT)\r\n    MessageLoop(WM_PAINT);\r\n\r\n  GetExitCodeProcess(hProcess, &excod);\r\n  return excod;\r\n}\r\n"], "fixing_code": ["\\A{history} Changelog and Release Notes\n\n\\H{v3.09} 3.09\n\nReleased on ????, 20??\n\n\\S1{v3.09-rl} Release Notes\n\n????\n\n\\S1{v3.09-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Use isolated uninstaller directory for every instance\n\n\\S2{} Minor Changes\n\n\\b Added \\R{assert}{!assert}\n\n\\b Fixed \\cw{!uninstfinalize} bug on large uninstallers (\\W{http://sf.net/p/nsis/bugs/1279}{bug #1279})\n\n\\b Fixed creation of missing special folders on old Windows versions where SHGetFolderPath is not available.\n\n\\b Fixed plug-in call overwriting \\cw{SetDetailsPrint lastused} (\\W{http://sf.net/p/nsis/bugs/1271}{bug #1271})\n\n\\b Fixed \\cw{!appendfile} not writing to non-empty files with a BOM\n\n\\b Fixed LogicLib \\cw{$\\{Switch\\}} Unicode bug\\#{ stackoverflow.com/q/73530905/ }\n\n\\b Fixed MakeNSISW editor zoom level bug (\\W{http://sf.net/p/nsis/bugs/1282}{bug #1282})\n\n\\S2{} Translations\n\n\\b Updated Brazilian Portuguese (\\W{http://sf.net/p/nsis/bugs/1269}{bug #1269})\n\n\\b Updated Ukrainian (\\W{http://sf.net/p/nsis/patches/308}{patch #308})\n\n\\S2{} Build System\n\n\\b Fixed halibut \\#{fprintf format security}compiler warnings (\\W{http://sf.net/p/nsis/patches/304}{patch #304})\n\n\\b Fixed various issues with very old and new GCC versions (\\W{http://sf.net/p/nsis/bugs/1275}{bug #1275}, \\W{http://sf.net/p/nsis/patches/307}{patch #307})\n\n\\b Disable stub relocations in newer GCC (\\W{http://sf.net/p/nsis/bugs/1283}{bug #1283})\n\n\\H{v3.08} 3.08\n\nReleased on September 25th, 2021\n\n\\S1{v3.08-rl} Release Notes\n\nThis release is filled with features that a lot of people have been requesting for a while. Enjoy!\n\n\\S1{v3.08-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{uninstfinalize}{!uninstfinalize} (\\W{http://sf.net/p/nsis/patches/280}{patch #280}, \\W{http://sf.net/p/nsis/bugs/1241}{bug #1241})\n\n\\S2{} Minor Changes\n\n\\b Added \\cw{$USER..} and \\cw{$COMMON..} alias constants\n\n\\b Added \\R{getdllversion}{GetDLLVersion} /ProductVersion switch\n\n\\b Added \\R{getwinver}{GetWinVer} instruction\n\n\\b Disallow start maximized mode\n\n\\b Added /LAUNCH compiler switch\n\n\\b PEAddResource now supports the res:// protocol\n\n\\b System::Store can push/pop the flags state\n\n\\H{v3.07} 3.07\n\nReleased on July 24th, 2021\n\n\\S1{v3.07-rl} Release Notes\n\nUnicode is now the default.\n\n\\S1{v3.07-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{aunicodetarget}{Unicode} now defaults to \\cw{true}\n\n\\S2{} Minor Changes\n\n\\b Added nsExec /MBCS switch\n\n\\b Memento now supports overridable storage macros\n\n\\b Fixed Unicode compiler crash (\\W{http://sf.net/p/nsis/bugs/1254}{bug #1254}, \\W{http://sf.net/p/nsis/patches/300}{patch #300})\n\n\\b Fixed !addplugindir relative path bug (\\W{http://sf.net/p/nsis/bugs/1264}{bug #1264})\n\n\\b Fixed StrClb Unicode bug (\\W{http://sf.net/p/nsis/patches/302}{patch #302})\n\n\\b Fixed $\\{GetTime\\} hour padding (\\W{http://sf.net/p/nsis/bugs/980}{bug #980})\n\n\\S2{} Translations\n\n\\b Updated Albanian (\\W{http://sf.net/p/nsis/patches/303}{patch #303}), Corsican\\#{(forum)} and Japanese (maboroshin PR\\#{github.com/maboroshin})\n\n\\b Fixed clipped Chinese text (\\W{http://sf.net/p/nsis/bugs/1261}{bug #1261})\n\n\\H{v3.06.1} 3.06.1\n\nReleased on July 31st, 2020\n\n\\S1{v3.06.1-rl} Release Notes\n\n20th anniversary! The first public release of NSIS was v1.0f on July 31st, 2000.\n\n\\S1{v3.06.1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed \\R{setbrandingimage}{SetBrandingImage} crash\n\n\\H{v3.06} 3.06\n\nReleased on July 31st, 2020\n\n\\S1{v3.06-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\cw{DeleteRegKey /ifempty} now also checks for values, not just subkeys. Use \\cw{/ifnosubkeys} for the old behavior.\n\n\\b Added \\R{getknownfolderpath}{GetKnownFolderPath}\n\n\\b Added UnpinShortcut macro (Integration.nsh)\n\n\\S2{} Minor Changes\n\n\\b Added \\R{ifshellvarcontextall}{IfShellVarContextAll} and \\R{ifrtllanguage}{IfRtlLanguage}\n\n\\# Undocumented: \\b Added GetShellVarContext, IfAltRegView and GetRegView | Documenting these would require documenting the parameter name to number mapping\n\n\\# Undocumented: \\b Added ManifestAppendCustomString\n\n\\b Added \\cw{!define /intfmt}\n\n\\b Added Date/Time \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} controls and macros\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed INSTALLMODE_FUNCTION and added INSTALLMODEPAGE_SHOWUSERNAME\n\n\\S2{} Translations\n\n\\b Updated German (SebStange PR\\#{github.com/SebStange}) and Simplified Chinese (\\W{http://sf.net/p/nsis/patches/297}{patch #297})\n\n\\S2{} Build System\n\n\\b Primitive SOURCE_DATE_EPOCH support (\\W{http://sf.net/p/nsis/patches/294}{patch #294})\n\n\\b Python 3 fixes (\\W{http://sf.net/p/nsis/patches/296}{patch #296})\n\n\\b GCC 10 memmove workaround (\\W{http://sf.net/p/nsis/bugs/1248}{bug #1248})\n\n\\H{v3.05} 3.05\n\nReleased on December 15th, 2019\n\n\\S1{v3.05-rl} Release Notes\n\nANSI targets are deprecated, consider moving to Unicode.\n\n\\S1{v3.05-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{apeaddresource}{PEAddResource} and \\R{aperemoveresource}{PERemoveResource}\n\n\\b Added \\R{loadandsetimage}{LoadAndSetImage}\n\n\\b Allow quoted library path in System::Call (\\W{http://sf.net/p/nsis/bugs/546}{bug #546} and \\W{http://sf.net/p/nsis/bugs/1225}{bug #1225})\n\n\\b Improved \\L{../Docs/nsExec/nsExec.txt}{nsExec} Unicode and tab output parsing (\\W{http://sf.net/p/nsis/bugs/1232}{bug #1232})\n\n\\S2{} Minor Changes\n\n\\b Added experimental \\R{amanifestlongpathaware}{ManifestLongPathAware} attribute\n\n\\# Undocumented: \\b Added ManifestMaxVersionTested\n\n\\b %1 in \\R{finalize}{!finalize} command can be specified multiple times\n\n\\b Fixed -O stderr stream issue (\\W{http://sf.net/p/nsis/bugs/1221}{bug #1221})\n\n\\b Fixed \\R{library_install}{InstallLib} .NSI space-in-path bug (\\W{http://sf.net/p/nsis/bugs/1222}{bug #1222})\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} now supports a \"using\" idiom to help with forward-declaration of functions (\\W{http://sf.net/p/nsis/bugs/1229}{bug #1229})\n\n\\b Added \\R{ssectioninsttype}{SectionInstType}\n\n\\b Zero uninitialized data in icon group (\\W{http://sf.net/p/nsis/bugs/1230}{bug #1230})\n\n\\b Automatically doubles ampersands in the \\R{aname}{Name} attribute\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} CB/LB_Get/SetItemData macros (\\W{http://sf.net/p/nsis/bugs/1238}{bug #1238})\n\n\\S2{} Translations\n\n\\b Updated Hindi (\\W{http://sf.net/p/nsis/patches/291}{patch #291}) and Portuguese (\\W{http://sf.net/p/nsis/bugs/1219}{bug #1219})\n\n\\H{v3.04} 3.04\n\nReleased on December 15th, 2018\n\n\\S1{v3.04-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added IsNativeMachineArchitecture helper macros to x64.nsh\n\n\\b Added experimental WinVer \"Windows as a Service\" detection macros\n\n\\b Added MakeNSISW window info \"spy\" tool\n\n\\S2{} Minor Changes\n\n\\b Added MUI_TEXTCOLOR setting\n\n\\b nsDialogs::OnNotify can now return values back to Windows\n\n\\b Added LIBRARY_INSTALL_EQUAL_VERSION \\R{library_install}{InstallLib} option\n\n\\b Added NTMARTA to preload list to fix rare Windows 7 security issue (\\W{http://sf.net/p/nsis/bugs/1204}{bug #1204})\n\n\\b AddBrandingImage now supports dialog units\n\n\\# Undocumented: \\b Added ManifestDisableWindowFiltering and ManifestGdiScaling\n\n\\b Fixed !macroundef of last defined macro bug\n\n\\b Fixed \\L{../Docs/MultiUser/Readme.html}{MultiUser} caption string bug (\\W{http://sf.net/p/nsis/bugs/1012}{bug #1012})\n\n\\b !undef issues warnings instead of errors\n\n\\b MakeNSIS prints -CMDHELP to stdout (\\W{http://sf.net/p/nsis/bugs/1203}{bug #1203})\n\n\\b Removed LibraryLocal utility\n\n\\S2{} Translations\n\n\\b Added Hind\\u012b{i} (\\W{http://sf.net/p/nsis/patches/289}{patch #289})\n\n\\b Updated Belarusian, German (\\W{http://sf.net/p/nsis/bugs/1023}{bug #1023}), Mongolian and Spanish (\\W{http://sf.net/p/nsis/bugs/1205}{bug #1205})\n\n\\H{v3.03} 3.03\n\nReleased on January 29th, 2018\n\n\\S1{v3.03-rn} Release Notes\n\n\\b Building NSIS with Python 2.6 or older is no longer supported\n\n\\S1{v3.03-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added more NSD controls and macros (\\W{http://sf.net/p/nsis/feature-requests/543}{RFE #543})\n\n\\b Added \\R{ppgettlbversion}{!gettlbversion}\n\n\\b \\R{library}{Library} TLB and VxD version support on POSIX (\\W{http://sf.net/p/nsis/patches/284}{patch #284})\n\n\\S2{} Minor Changes\n\n\\b Added System plug-in v2 syntax option\n\n\\b Added System plug-in B and H types\n\n\\b Added \\R{intptrcmp}{IntPtrCmp}, IntPtrCmpU, and \\R{intptrop}{IntPtrOp}\n\n\\b Added Int64Cmp, Int64CmpU and Int64Fmt (64-bit only)\n\n\\b Added IntOp and System::Int64Op >>> operator\n\n\\b Added more !define /math operators\n\n\\# Undocumented: \\b Added ManifestDPIAwareness\n\n\\b Added WinVer.nsh IsDomainController (\\W{http://sf.net/p/nsis/patches/286}{patch #286})\n\n\\b Plug-ins now set the ASLR, DEP, LAA, NOSEH and TS PE flags (\\W{http://sf.net/p/nsis/bugs/1188}{bug #1188})\n\n\\b MakeNSIS exits with code 0 for various information commands (\\W{http://sf.net/p/nsis/bugs/1193}{bug #1193})\n\n\\b Added error and warning states to !pragma warning\n\n\\b Removed unused NSD_LB_Clear macro parameter\n\n\\S2{} Translations\n\n\\b Added Tatar (\\W{http://sf.net/p/nsis/patches/281}{patch #281})\n\n\\b Fixed and updated Scottish Gaelic (\\W{http://sf.net/p/nsis/patches/285}{patch #285}, \\W{http://sf.net/p/nsis/bugs/1197}{bug #1197})\n\n\\b Updated Italian (\\W{http://sf.net/p/nsis/bugs/1194}{bug #1194})\n\n\\S2{} Build System\n\n\\b Added support for Python 3\n\n\\b Dropped support for Python 2.6 and older\n\n\\H{v3.02.1} 3.02.1\n\nReleased on July 31st, 2017\n\n\\S1{v3.02.1-cl} Changelog\n\n\\S2{} Translations\n\n\\b Fixed Chinese (Traditional) and Romanian translation bugs (\\W{http://sf.net/p/nsis/bugs/1189}{bug #1189} and \\W{http://sf.net/p/nsis/bugs/1191}{bug #1191})\n\n\\b Fixed Scots Gaelic MUI finish page translation\n\n\\H{v3.02} 3.02\n\nReleased on July 23rd, 2017\n\n\\S1{v3.02-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed NSIS3 RegTool Win9x bug\n\n\\b Added the HKCR32, HKCR64, HKCU32, HKCU64, HKLM32 and HKLM64 root keys\n\n\\b Unsupported \\R{setregview}{SetRegView} mode now fails all registry operations\n\n\\b Added \\R{execshellwait}{ExecShellWait}\n\n\\b Added \\R{writeregmultistr}{WriteRegMultiStr} (\\W{http://sf.net/p/nsis/feature-requests/382}{RFE #382}, \\W{http://sf.net/p/nsis/patches/219}{patch #219}) and WriteRegNone\n\n\\b Added \\R{pragma}{!pragma warning} (\\W{http://sf.net/p/nsis/patches/267}{patch #267})\n\n\\b \\R{varconstant}{$LocalAppData} now resolves to the ProgramData folder in the \\R{setshellvarcontext}{SetShellVarContext all} context\n\n\\S2{} Minor Changes\n\n\\b Variables used in \\R{acaption}{Caption} can now be set in \\R{onguiinit}{.onGUIInit} (\\W{http://sf.net/p/nsis/feature-requests/539}{RFE #539})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser} now supports \\R{varconstant}{$ProgramFiles64} (\\W{http://sf.net/p/nsis/bugs/843}{bug #843})\n\n\\b Added support for MUI_UNCONFIRMPAGE_VARIABLE (\\W{http://sf.net/p/nsis/feature-requests/511}{RFE #511}) and MUI_PAGE_CUSTOMFUNCTION_DESTROYED\n\n\\b Unicode \\L{../Docs/nsExec/nsExec.txt}{nsExec} now supports the /OEM switch (\\W{http://sf.net/p/nsis/bugs/1171}{bug #1171})\n\n\\S2{} Translations\n\n\\b Chinese (Traditional) updates by Walter Cheuk\n\n\\b Minor French improvements (\\W{http://sf.net/p/nsis/patches/221}{patch #221})\n\n\\H{v3.01} 3.01\n\nReleased on December 11th, 2016\n\n\\S1{v3.01-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Error messages are now written to stderr by default\n\n\\b New icons by Jan T. Sott\n\n\\S2{} Minor Changes\n\n\\b \\R{setctlcolors}{SetCtlColors} now supports Windows color constant values\n\n\\b StrCpy \"\" maxlen handling (\\W{http://sf.net/p/nsis/bugs/1122}{bug #1122})\n\n\\b Fixed buffer size bug in winchar.cpp (\\W{http://sf.net/p/nsis/patches/271}{patch #271})\n\n\\S2{} Translations\n\n\\b Added Corsican (\\W{http://sf.net/p/nsis/patches/268}{patch #268})\n\n\\b PortugueseBR fixes (\\W{http://sf.net/p/nsis/patches/276}{patch #276})\n\n\\b Updated Danish translation (\\W{http://sf.net/p/nsis/bugs/1164}{bug #1164})\n\n\\b Arabic, Norwegian, Portuguese, Ukrainian and Swedish \\L{../Docs/MultiUser/Readme.html}{MultiUser} fixes (\\W{http://sf.net/p/nsis/patches/278}{patch #278}, \\W{http://sf.net/p/nsis/patches/279}{patch #279}, \\W{http://sf.net/p/nsis/patches/274}{patch #274}, \\W{http://sf.net/p/nsis/patches/275}{patch #275} & \\W{http://sf.net/p/nsis/patches/277}{patch #277})\n\n\\H{v3.0} 3.0\n\nReleased on July 24th, 2016\n\n\\S1{v3.0-rl} Release Notes\n\nLong-awaited version 3 of NSIS is finally ready. It comes with optional \\R{aunicodetarget}{Unicode} support, still works on all the same versions of Windows, supports Windows 10, and adds a lot of other small features and fixes. Huge thanks goes out to Anders and Wizou for making this happen and Jim Park for the original patch.\n\n\\S1{v3.0-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b \\R{finalize}{!finalize} command now supports the same compare operators as !system (\\W{http://sf.net/p/nsis/bugs/1148}{bug #1148})\n\n\\S2{} Translations\n\n\\b PortugueseBR fixes (\\W{http://sf.net/p/nsis/bugs/1149}{bug #1149})\n\n\\H{v3.0rc2} 3.0 Release Candidate 2\n\nReleased on July 8th, 2016\n\n\\S1{v3.0rc2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed LogicLib nested $\\{Select\\} bug\n\n\\b \\R{makensis}{!makensis} command must force Unicode output to be UTF-8 (\\W{http://sf.net/p/nsis/bugs/1147}{bug #1147})\n\n\\S2{} Minor Changes\n\n\\b Zip2Exe aborts if the zip file is encrypted (\\W{http://sf.net/p/nsis/bugs/1141}{bug #1141})\n\n\\b Added LogicLib & operator\n\n\\b NSIS Menu POSIX fixes (\\W{http://sf.net/p/nsis/bugs/1144}{bug #1144})\n\n\\S2{} Translations\n\n\\b PortugueseBR fixes (deguix)\n\n\\b Minor tweaks to Danish.nlf (scootergrisen) (\\W{http://sf.net/p/nsis/bugs/1140}{bug #1140})\n\n\\H{v3.0rc1} 3.0 Release Candidate 1\n\nReleased on April 3rd, 2016\n\n\\S1{v3.0rc1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed \\R{appendfile}{!appendfile} on POSIX and LogicLib $\\{Switch\\}\n\n\\b More security hardening to prevent dll hijacking\n\n\\S2{} Minor Changes\n\n\\b Documentation improvements\n\n\\b The name of the uninstaller created in %TEMP%\\\\~nsu.tmp has changed from %UNIQUE%u_.exe to Un_%UNIQUE%.exe\n\n\\b Various warning and error improvements\n\n\\S2{} Translations\n\n\\b Added missing MULTIUSER_* entries to Japanese.nsh (\\W{http://sf.net/p/nsis/patches/266}{patch #266})\n\n\\H{v3.0b3} 3.0 Beta 3\n\nReleased on December 26th, 2015\n\n\\S1{v3.0b3-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{arequestexecutionlevel}{RequestExecutionLevel} now defaults to \\c{admin}\n\n\\b LoadLibrary security hardening to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\b \\R{FileReadUTF16LE}{FileReadUTF16LE} now skips the optional BOM at the start of a file\n\n\\S2{} Minor Changes\n\n\\b Fixed System plugin GUID type output bug on Win98\n\n\\b \\R{FileWriteUTF16LE}{FileWriteUTF16LE} can add a BOM with the /BOM switch\n\n\\b \\R{createshortcut}{CreateShortcut} icon index can now be larger than 255 (\\W{http://sf.net/p/nsis/bugs/1123/}{bug #1123})\n\n\\b \\R{system}{!system} and \\R{execute}{!execute} now provide an empty StdIn pipe to work around bugs in some Windows utilities\n\n\\b Added support for 0o octal radix prefix on number literals in the preprocessor\n\n\\b The single parameter version of \\R{if}{!if} now also supports floats\n\n\\b Preprocessor now warns when invalid floating point numbers are used in math operations\n\n\\b MakeNSISW now uses WinInet when checking for updates\n\n\\S2{} Translations\n\n\\b Brazilian Portuguese updated (Felipe) (\\W{http://sf.net/p/nsis/patches/263/}{patch #263})\n\n\\b Polish updated (Pawe\\u0142{l} Porwisz)\n\n\\H{v3.0b2} 3.0 Beta 2\n\nReleased on August 4th, 2015\n\n\\S1{v3.0b2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Preliminary Windows 10 support\n\n\\S2{} Minor Changes\n\n\\b Added !appendfile /RawNL switch\n\n\\b Added PESubsysVer attribute\n\n\\b Exec[Wait] sets the CREATE_DEFAULT_ERROR_MODE flag when creating a process\n\n\\b Fixed 4+ TiB freespace calculation bug (\\W{http://sf.net/p/nsis/bugs/1115/}{bug #1115})\n\n\\b Fixed CreateShortcut /NoWorkingDir parsing bug (\\W{http://sf.net/p/nsis/bugs/1110/}{bug #1110})\n\n\\b Fixed minor issues in the Pascal NSIS plug-in SDK and removed the \\cw{extrap} global variable\n\n\\b nsDialogs and InstallOptions now use the system link color\n\n\\S2{} Build System\n\n\\b Linux stdcall warning fix (\\W{http://sf.net/p/nsis/patches/261}{patch #261})\n\n\\b Linux test-scripts fix (\\W{http://sf.net/p/nsis/patches/260}{patch #260})\n\n\\b Win64 fixes (including \\W{http://sf.net/p/nsis/patches/258}{patch #258}, \\W{http://sf.net/p/nsis/bugs/1105/}{bug #1105})\n\n\\b Visual C 2012 fixes\n\n\\H{v3.0b1} 3.0 Beta 1\n\nReleased on October 6th, 2014\n\n\\S1{v3.0b1-rl} Release Notes\n\n\\b This release addresses a lot of build issues, reintroduces the \\W{https://drone.io/github.com/kichik/nsis}{nightly builds} and adds automatic nightly test execution\n\n\\S1{v3.0b1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b !insertmacro allows macro recursion (\\W{http://sf.net/p/nsis/feature-requests/497}{RFE #497})\n\n\\b Added \\R{makensis}{!makensis} command\n\n\\b Added new MUI2 bitmap stretch modes, *_NOSTRETCH is now deprecated (\\W{http://sf.net/p/nsis/feature-requests/521}{RFE #521})\n\n\\b \\c{InitiateShutdown()} is used to reboot the machine if available (\\W{http://sf.net/p/nsis/patches/247}{patch #247})\n\n\\b Added PPO and SafePPO preprocess-only compiler switches\n\n\\b MakeNSIS WM_COPYDATA messages now use the QH_OUTPUTCHARSET encoding with CP_ACP as the default for compatibility with old IDEs.\n\n\\S2{} Minor Changes\n\n\\b Added IsWow64 to x64.nsh\n\n\\b Added PEDllCharacteristics attribute\n\n\\b Added System::Call direct register memory access type. (\\W{http://sf.net/p/nsis/patches/249}{patch #249})\n\n\\b Added WX compiler switch\n\n\\b Allow skipping ExDLL build with SKIPPLUGINS ((\\W{http://sf.net/p/nsis/patches/254}{patch #254}))\n\n\\b Changed default DllCharacteristics to TS_AWARE+NO_SEH+NX_COMPAT+DYNAMIC_BASE\n\n\\b Fixed Mac OS X builds (\\W{http://sf.net/p/nsis/patches/253}{patch #253} and \\W{http://sf.net/p/nsis/bugs/1085}{bug #1085})\n\n\\b Fixed POSIX !searchparse bug (\\W{http://sf.net/p/nsis/patches/251}{patch #251})\n\n\\b Fixed !macroundef\n\n\\b Fixed test-code build target on POSIX and enabled it in nightly builds (\\W{http://sf.net/p/nsis/bugs/1088/}{bug #1098})\n\n\\b Fixed Visual Studio 2012 builds\n\n\\S2{} Translations\n\n\\b Added Armenian (Hrant Ohanyan)\n\n\\H{v3.0b0} 3.0 Beta 0\n\nReleased on May 11th, 2014\n\n\\S1{v3.0b0-rl} Release Notes\n\n\\b POSIX builds work again! Please let us know if your favorite platform is still having build issues. We mainly test on Linux.\n\n\\S1{v3.0b0-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Basic AMD64 System::Call support\n\n\\b Fixed POSIX builds\n\n\\S2{} Minor Changes\n\n\\b Added CreateShortcut /NoWorkingDir parameter\n\n\\b Added Int<32|64|Ptr><Op|Cmp[U]> helper macros to Util.nsh\n\n\\b Added P<, P<=, P=, P<>, P>= and P> LogicLib ptrdiff_t tests\n\n\\b Try harder to find duplicate strings in string block (\\W{http://sf.net/p/nsis/bugs/1088/}{bug #1088})\n\n\\b !system will decode child output as OEMCP if GetConsoleOutputCP() == GetOEMCP()\n\n\\b !system and !execute can store the exit code in a define\n\n\\b !execute supports comparing the exit code with the same syntax as !system\n\n\\b Preprocessor supports \\cw{0n} and \\cw{0b} radix prefix on number literals\n\n\\H{v3.0a2} 3.0 Alpha 2\n\nReleased on December 24th, 2013\n\n\\S1{v3.0a2-rl} Release Notes\n\nIt's the holiday gift you've been waiting for!\n\n\\S2{} Known Issues\n\n\\b The POSIX build is getting much closer, but still currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\S1{v3.0a2-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b !include defaults to UTF-8 after \\cw{Unicode True}\n\n\\b Preprocessor does not parse all branches and will not validate code that is never executed (\\W{http://sf.net/p/nsis/bugs/1086/}{bug #1086})\n\n\\S2{} Minor Changes\n\n\\b FileRead in Unicode installers can handle DBCS, conversion output is limited to UCS-2.\n\n\\b FileRead in Unicode installers now uses the Unicode replacement character (U+FFFD) for invalid characters and not '?'.\n\n\\b FileReadByte no longer performs a Unicode conversion on non-ASCII characters\n\n\\b Windows 8.1 & 2012R2 support in WinVer.nsh\n\n\\b Fixed !define Unicode null terminator bug (\\W{http://sf.net/p/nsis/bugs/1079/}{bug #1079})\n\n\\b Unicode stubs create WCHAR richedit controls (\\W{http://sf.net/p/nsis/bugs/1080/}{bug #1080})\n\n\\b Fixed MakeNSISW default pushbutton and tab order\n\n\\b Fixed incorrect page count in compiler statistics\n\n\\H{v3.0a1} 3.0 Alpha 1\n\nReleased on July 14th, 2013\n\n\\S1{v3.0a1-rl} Release Notes\n\n\\S2{} Known Issues\n\n\\b The POSIX build is currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\b \\R{FileRead}{FileRead} may return '?' for MBCS letters with \\R{aunicodetarget}{Unicode} true\n\n\\S1{v3.0a1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Default verbosity is /V3 without logo, MakeNSISW still uses /V4.\n\n\\b \\R{amanifestsupportedos}{ManifestSupportedOS} added support for the Windows 8.1 GUID and it is set by default to avoid GetVersionEx compatibility behavior.\n\n\\S2{} Minor Changes\n\n\\b Fixed !finalize %1\n\n\\b Fixed !searchparse (\\W{https://sourceforge.net/p/nsis/bugs/1073/}{bug #1073})\n\n\\b Made installers always respect /S on command line, even when installer file can't be read (\\W{https://sourceforge.net/p/nsis/bugs/1076/}{bug #1076})\n\n\\b Minor MakeNSISW fixes and tweaks\n\n\\b Added Zip2Exe Unicode checkbox\n\n\\H{v3.0a0} 3.0 Alpha 0\n\nReleased on May 19th, 2013\n\n\\S1{v3.0a0-rl} Release Notes\n\n\\b MakeNSIS can now generate ANSI and \\R{intro-unicode}{Unicode} installers. Source files can be UTF8SIG, UTF16BOM or traditional MBCS text files (which are converted to Unicode with ACP unless you specify a different codepage). The default plugins are now stored in sub-folders based on their CPU target and character set encoding.\n\n\\S2{} Known Issues\n\n\\b The POSIX build is currently broken\n\n\\b LangDLL doesn't display localized language name with \\R{aunicodetarget}{Unicode} false\n\n\\b \\R{FileRead}{FileRead} may return '?' for MBCS letters with \\R{aunicodetarget}{Unicode} true\n\n\\S1{v3.0a0-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added the \\R{aunicodetarget}{Unicode} attribute (\\W{http://sourceforge.net/support/tracker.php?aid=1238132}{RFE #1238132}, \\W{http://sourceforge.net/support/tracker.php?aid=1795257}{patch #1795257})\n\n\\b Added support for Windows 8 and Windows Server 2012\n\n\\b MakeNSIS can read UTF8SIG and UTF16BOM script files (\\W{http://sourceforge.net/support/tracker.php?aid=2026892}{RFE #2026892})\n\n\\b All NLF and NSH language files are stored as UTF-16LE (\\W{http://sourceforge.net/support/tracker.php?aid=1879642}{RFE #1879642})\n\n\\b Scripts can control the SupportedOS list in the application manifest using \\R{amanifestsupportedos}{ManifestSupportedOS} (\\W{http://sourceforge.net/support/tracker.php?aid=2725883}{bug #2725883}, \\W{http://sourceforge.net/support/tracker.php?aid=3020103}{RFE #3020103})\n\n\\b Installers can claim DPI-awareness with \\R{amanifestdpiaware}{ManifestDPIAware} (\\W{http://sourceforge.net/support/tracker.php?aid=2897169}{bug #2897169})\n\n\\b The index of the changed section is stored in $0 during .onSelChange callbacks (\\W{http://sourceforge.net/support/tracker.php?aid=1634936}{RFE #1634936})\n\n\\b $\\{U+1\\}...$\\{U+10FFFF\\} are treated as a Unicode character unless there is already a define with that name (\\W{http://sourceforge.net/support/tracker.php?aid=2084797}{RFE #2084797})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{ppgetdllversion}{!getdllversion} (\\W{http://sourceforge.net/support/tracker.php?aid=2809308}{bug #2809308})\n\n\\b Added !appendfile /CHARSET parameter\n\n\\b Added \\R{if}{!if} support for /fileexists, case sensitive comparisons, hex and float\n\n\\b Added more definitions to WinMessages.nsh\n\n\\b %temp%\\\\Low will be used if the installer cannot write to %temp% nor %windir%\\\\Temp (\\W{http://sourceforge.net/support/tracker.php?aid=2909242}{bug #2909242}, \\W{http://sourceforge.net/support/tracker.php?aid=2912824}{patch #2912824})\n\n\\b Added $\\{NSIS_PACKEDVERSION\\}, the NSIS version packed as a hex number (\\W{http://sourceforge.net/support/tracker.php?aid=2680832}{patch #2680832})\n\n\\b Added \\R{prescopemacro}{$\\{__MACRO__\\}} and \\R{precounter}{$\\{__COUNTER__\\}} predefines\n\n\\b Added UnsafeStrCpy instruction, it can write to special variables like $PLUGINSDIR\n\n\\b Added \\R{vifileversion}{VIFileVersion}\n\n\\b Added \\R{finalize}{!finalize} for post-build commands (like signing the installer)\n\n\\b Plugins in $\\{NSISDIR\\}\\\\Plugins have to be reserved with \\c{ReserveFile /plugin}\n\n\\b MakeNSIS /NOTIFYHWND uses a (optional) new event name to abort compilation, see build.cpp/h for details.\n\n\\b Reduced !include/!insertmacro recursion stack usage (\\W{http://sourceforge.net/support/tracker.php?aid=3067954}{bug #3067954})\n\n\\b Fixed minor MakeNSIS leaks (\\W{http://sourceforge.net/support/tracker.php?aid=3474662}{bug #3474662})\n\n\\b Fixed MUI_FINISHPAGE_TITLE_3LINES padding when reboot is required (\\W{http://sourceforge.net/support/tracker.php?aid=3400067}{bug #3400067}, \\W{http://sourceforge.net/support/tracker.php?aid=3408407}{bug #3408407})\n\n\\b Fixed removal of read only attribute even if Delete or RMDir fails (\\W{http://sourceforge.net/support/tracker.php?aid=3072159}{bug #3072159})\n\n\\b Fixed $\\{__SECTION__\\} in hidden sections (\\W{http://sourceforge.net/support/tracker.php?aid=1787648}{RFE #1787648})\n\n\\b Various documentation fixes (\\W{http://sourceforge.net/support/tracker.php?aid=3063566}{bug #3063566}, \\W{http://sourceforge.net/support/tracker.php?aid=3567313}{bug #3567313}, \\W{http://sourceforge.net/support/tracker.php?aid=3307144}{patch #3307144})\n\n\\b Lots of other small fixes...\n\n\\S2{} Translations\n\n\\b Changed LANGFILE macro in LangFile.nsh\n\n\\b Warnings are now displayed for missing strings (LANGFILE_INCLUDE_WITHDEFAULT)\n\n\\b Added Georgian (David Huriev)\n\n\\b Added Pashto (Pakhtosoft)\n\n\\b Added Scottish Gaelic (GunChleoc)\n\n\\b Fixed Korean MUI_[UN]TEXT_FINISH_INFO_* (\\W{http://sourceforge.net/support/tracker.php?aid=3541515}{bug #3541515})\n\n\\H{v2.51} 2.51\n\nReleased on April 1st, 2016\n\n\\S1{v2.51-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b More security hardening to prevent dll hijacking\n\n\\b Backported support for system 'p' type and logiclib P and Z tests\n\n\\S2{} Translations\n\n\\b Added missing MULTIUSER_* entries to Japanese.nsh (\\W{http://sf.net/p/nsis/patches/266}{patch #266})\n\n\\H{v2.50} 2.50\n\nReleased on December 26th, 2015\n\n\\S1{v2.50-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{arequestexecutionlevel}{RequestExecutionLevel} now defaults to \\c{admin}\n\n\\S2{} Minor Changes\n\n\\b Preload certain system libraries to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\H{v2.49} 2.49\n\nReleased on December 16th, 2015\n\n\\S1{v2.49-cl} Changelog\n\n\\b Fixed CreateShortcut failure on Vista caused by security changes in 2.47\n\n\\H{v2.48} 2.48\n\nReleased on December 10th, 2015\n\n\\S1{v2.48-cl} Changelog\n\n\\b Fixed CHM (\\W{http://sf.net/p/nsis/bugs/1129/}{bug #1129})\n\n\\H{v2.47} 2.47\n\nReleased on December 8th, 2015\n\n\\S1{v2.47-rl} Release Notes\n\n\\b This is a maintenance and security release\n\n\\S1{v2.47-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b LoadLibrary security hardening to prevent dll hijacking (\\W{http://sf.net/p/nsis/bugs/1125}{bug #1125})\n\n\\b \\c{InitiateShutdown()} is used to reboot the machine if available (\\W{http://sf.net/p/nsis/patches/247}{patch #247})\n\n\\S2{} Minor Changes\n\n\\b Fixed 4+ TiB freespace calculation bug (\\W{http://sf.net/p/nsis/bugs/1115/}{bug #1115})\n\n\\b Windows 8 & 2012 support in WinVer.nsh\n\n\\H{v2.46} 2.46\n\nReleased on December 6th, 2009\n\n\\S1{v2.46-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2803622}{bug #2803622})\n\n\\b Fixed Vista error message when canceling uninstaller (\\W{http://sourceforge.net/support/tracker.php?aid=2803097}{bug #2803097})\n\n\\b Resolve warning for LogicLib's endless Do..Loop (\\W{http://sourceforge.net/support/tracker.php?aid=2849872}{bug #2849872})\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: fixed random number prefixes when clicking on an empty spot (\\W{http://sourceforge.net/support/tracker.php?aid=2810188}{bug #2810188})\n\n\\b Updates to NSIS.pas for plug-in development (\\W{http://sourceforge.net/support/tracker.php?aid=2802794}{patch #2802794})\n\n\\S2{} Translations\n\n\\b PortugueseBR typo (\\W{http://sourceforge.net/support/tracker.php?aid=2826598}{patch #2826598})\n\n\\b Removed double spaces in Italian (\\W{http://sourceforge.net/support/tracker.php?aid=2873598}{bug #2873598})\n\n\\S2{} Build System\n\n\\b Fixed mingw builds of \\L{../Docs/Math/Math.txt}{Math} plug-in (\\W{http://sourceforge.net/support/tracker.php?aid=2835731}{patch #2835731})\n\n\\H{v2.45} 2.45\n\nReleased on June 6th, 2009\n\n\\S1{v2.45-rl} Release Notes\n\n\\b Support for Microsoft's upcoming release of Windows 7 has been added based on RC1 testing and documentation. Please report any related issues and don't forget to use \\R{arequestexecutionlevel}{RequestExecutionLevel}.\n\n\\S1{v2.45-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added support for Windows 7 installers - use \\R{arequestexecutionlevel}{RequestExecutionLevel}, just like with Vista (\\W{http://sourceforge.net/support/tracker.php?aid=2725883}{bug #2725883})\n\n\\b Added WinVer.nsh Windows 7 and Windows 2008 R2 support\n\n\\b Installers now identify as Terminal Services aware (IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE) so $WINDIR will no longer be under the user's profile when installing on Terminal Services\n\n\\b Less UAC annoyance in Add/Remove control panel (\\W{http://sourceforge.net/support/tracker.php?aid=2697027}{bug #2697027})\n\n\\S2{} Minor Changes\n\n\\b Added wildcard and /nonfatal support for \\R{delfile}{!delfile} (\\W{http://sourceforge.net/support/tracker.php?aid=1505425}{RFE #1505425})\n\n\\b Fixed \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2680110}{bug #2680110})\n\n\\b Fixed input validation for \\R{createfont}{CreateFont} (\\W{http://sourceforge.net/support/tracker.php?aid=2801024}{bug #2801024})\n\n\\b Fixed NSIS Menu handling of working directory (\\W{http://sourceforge.net/support/tracker.php?aid=2781948}{bug #2781948})\n\n\\b Fixed Vista issues with shell folders ($DOCUMENTS, $PROFILE, etc.) on root directories (\\W{http://sourceforge.net/support/tracker.php?aid=2138075}{bug #2138075})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2705878}{bug #2705878}, \\W{http://sourceforge.net/support/tracker.php?aid=2606525}{bug #2606525})\n\n\\b Use SW_SHOWDEFAULT for \\R{execshell}{ExecShell} by default (\\W{http://sourceforge.net/support/tracker.php?aid=2796189}{bug #2796189})\n\n\\S2{} Modern UI\n\n\\b Call finish page show function only after the page is fully initialized (\\W{http://sourceforge.net/support/tracker.php?aid=2720968}{bug #2720968})\n\n\\b Fixed translation of uninstaller directory page (\\W{http://sourceforge.net/support/tracker.php?aid=2690112}{bug #2690112})\n\n\\b Fixed installation type text position in components page (\\W{http://sourceforge.net/support/tracker.php?aid=2801317}{patch #2801317})\n\n\\b Fixed missing MUI_INNERTEXT_COMPONENTS_DESCRIPTION_TITLE  (\\W{http://sourceforge.net/support/tracker.php?aid=2788620}{bug #2788620})\n\n\\S2{} Translations\n\n\\b Updated Indonesian (\\W{http://sourceforge.net/support/tracker.php?aid=2790571}{patch #2790571})\n\n\\b Updated Portuguese BR (\\W{http://sourceforge.net/support/tracker.php?aid=2642542}{patch #2642542})\n\n\\S2{} Build System\n\n\\b Fixed some GCC warnings\n\n\\H{v2.44} 2.44\n\nReleased on February 21st, 2009\n\n\\S1{v2.44-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.43 causing script build issues with some icons (\\W{http://sourceforge.net/support/tracker.php?aid=2572035}{bug #2572035})\n\n\\S2{} Minor Changes\n\n\\b Fixed nsDialogs CreateTimer documentation (\\W{http://sourceforge.net/support/tracker.php?aid=2595565}{bug #2595565})\n\n\\b Global labels didn't work when declared in unused functions (\\W{http://sourceforge.net/support/tracker.php?aid=2593369}{bug #2593369})\n\n\\H{v2.43} 2.43\n\nReleased on February 5th, 2009\n\n\\S1{v2.43-rl} Release Notes\n\n\\b A few minor changes were made to the new plug-in API that break backward compatibility. Header and library paths were changed and RegisterPluginCallback has changed its return value.\n\n\\S1{v2.43-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Added WinCore.nsh, WinDef.nsh, WinError.nsh, WinNT.nsh and WinUser.nsh for more useful Windows definitions\n\n\\b Fixed a crash caused by \\R{packhdr}{!packhdr} compressing resources (\\W{http://sourceforge.net/support/tracker.php?aid=2533431}{bug #2533431})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2564005}{bug #2564005})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed MUI_DIRECTORYPAGE_BGCOLOR (\\W{http://sourceforge.net/support/tracker.php?aid=2494528}{bug #2494528})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Fixed installer showing on the background when Banner was used in .onInit\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Added Ctrl+K hotkey for build cancellation (\\W{http://sourceforge.net/support/tracker.php?aid=2557392}{RFE #2557392})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added NSD_SetIcon (\\W{http://sourceforge.net/support/tracker.php?aid=2500960}{patch #2500960})\n\n\\S2{} Translations\n\n\\b Added Esperanto\n\n\\b Bulgarian fixes\n\n\\S2{} Plug-in API\n\n\\b Added VS2008 project files\n\n\\b Better installation of header and library files under POSIX - see INSTALL file for more information\n\n\\b Header and library files were moved to a subdirectory named \\e{nsis} to prevent collisions\n\n\\b \\e{RegisterPluginCallback} now returns \\e{int} instead of \\e{BOOL} for a wider range of error reporting\n\n\\S2{} Build System\n\n\\b Added fink's mingw prefixes (\\W{http://sourceforge.net/support/tracker.php?aid=2495138}{bug #2495138})\n\n\\b Fixed BOOL build issue on OS X (\\W{http://sourceforge.net/support/tracker.php?aid=2497290}{bug #2497290})\n\n\\b Fixed iconv dependency detection on OS X (\\W{http://sourceforge.net/support/tracker.php?aid=2494539}{bug #2494539})\n\n\\b Fixed Solaris builds (\\W{http://sourceforge.net/support/tracker.php?aid=2497172}{patch #2497172})\n\n\\H{v2.42} 2.42\n\nReleased on December 20th, 2008\n\n\\S1{v2.42-rl} Release Notes\n\n\\b Merry Christmas and a happy Hanukkah!\n\n\\b Plug-in developers should check out the new plug-in API in Examples\\\\Plugin and convert their plug-ins, especially in case they require staying loaded.\n\n\\S1{v2.42-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Deprecated /NOUNLOAD and SetPluginsUnload to make scripts simpler and safer (\\W{http://sourceforge.net/support/tracker.php?aid=1912699}{patch #1912699})\n\n\\b \\R{headers}{Useful header functions} no longer require usage declaration and different syntax for uninstaller functions\n\n\\b Revamped plug-in API now comes in the form of pluginapi.lib, API version information and more common functions (\\W{http://sourceforge.net/support/tracker.php?aid=2359978}{patch #2359978})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{searchreplace}{!searchreplace} preprocessor command for compile time text search/replaces\n\n\\b Added support for \\R{library}{registration} of EXE COM servers (\\W{http://sourceforge.net/support/tracker.php?aid=2315740}{RFE #2315740})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=2386821}{bug #2386821})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added timer support (\\W{http://sourceforge.net/support/tracker.php?aid=2135855}{patch #2135855})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added progress bar support\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Added IsServer, IsWin2003R2, IsStarterEdition, OSHasMediaCenter and OSHasTabletSupport\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Fixed 95/NT4 ambiguity (\\W{http://sourceforge.net/support/tracker.php?aid=2053642}{bug #2053642})\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Proper Windows XP x64 detection (\\W{http://sourceforge.net/support/tracker.php?aid=2053700}{bug #2053700})\n\n\\b \\L{../Include/WinVer.nsh}{WinVer.nsh}: Windows 2008 detection support (\\W{http://sourceforge.net/support/tracker.php?aid=1949260}{RFE #1949260})\n\n\\S2{} Translations\n\n\\b Minor English grammar improvements (\\W{http://sourceforge.net/support/tracker.php?aid=2323452}{bug #2323452})\n\n\\S2{} Build System\n\n\\b Full \\L{../Docs/System/System.html}{System} compatibility with GCC (\\W{http://sourceforge.net/support/tracker.php?aid=2193442}{patch #2193442})\n\n\\H{v2.41} 2.41\n\nReleased on November 20th, 2008\n\n\\S1{v2.41-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed LangDLL memory leaks for invalid input (\\W{http://sourceforge.net/support/tracker.php?aid=1939573}{bug #1939573})\n\n\\b Fixed uninstaller generation on big-endian systems (\\W{http://sourceforge.net/support/tracker.php?aid=2166401}{bug #2166401}, \\W{http://sourceforge.net/support/tracker.php?aid=2167958}{bug #2167958})\n\n\\S2{} Translations\n\n\\b Brazilian Portuguese corrections\n\n\\b Consistency fixes for Simplified Chinese (\\W{http://sourceforge.net/support/tracker.php?aid=2189117}{patch #2189117})\n\n\\S2{} Build System\n\n\\b Added support for SCons 1.1.0\n\n\\b Fixed directory and components page text issues on VC8 builds (\\W{http://sourceforge.net/support/tracker.php?aid=1982084}{patch #1982084})\n\n\\b System's Resource.dll now built from source\n\n\\H{v2.40} 2.40\n\nReleased on October 10th, 2008\n\n\\S1{v2.40-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Service pack macros added to WinVer in version 2.39 now work (\\W{http://sourceforge.net/support/tracker.php?aid=2070708}{bug #2070708}, \\W{http://sourceforge.net/support/tracker.php?aid=2095363}{patch #2095363})\n\n\\S2{} Minor Changes\n\n\\b Added initial folder selection option for \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFileDialog (\\W{http://sourceforge.net/support/tracker.php?aid=2016003}{patch #2016003})\n\n\\b Fixed \\R{getparameters}{GetParameters} handling of MBCS characters (\\W{http://sourceforge.net/support/tracker.php?aid=2067946}{bug #2067946})\n\n\\b Fixed incorrect $\\{NSD_OnBack\\} documentation (\\W{http://sourceforge.net/support/tracker.php?aid=2059651}{bug #2059651})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Set focus to checkboxes on the finish page (\\W{http://sourceforge.net/support/tracker.php?aid=2110357}{bug #2110357})\n\n\\S2{} Translations\n\n\\b Portuguese corrections (\\W{http://sourceforge.net/support/tracker.php?aid=2086988}{bug #2086988})\n\n\\b Simplified Chinese corrections (\\W{http://sourceforge.net/support/tracker.php?aid=2056906}{patch #2056906})\n\n\\H{v2.39} 2.39\n\nReleased on August 16th, 2008\n\n\\S1{v2.39-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\R{define}{!define} \\e{/file} and \\R{searchparse}{!searchparse} (\\W{http://sourceforge.net/support/tracker.php?aid=2016254}{patch #2016254})\n\n\\b Added service pack macros (AtLeastServicePack, IsServicePack, AtMostServicePack) to WinVer.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=2036802}{patch #2036802})\n\n\\S2{} Minor Changes\n\n\\b Added more \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} list box handling macros (\\W{http://sourceforge.net/support/tracker.php?aid=2041919}{patch #2041919})\n\n\\b Added Unicode version compatible \\L{../Docs/System/System.html}{System} string type (\\W{http://sourceforge.net/support/tracker.php?aid=2025721}{patch #2025721}, \\W{http://sourceforge.net/support/tracker.php?aid=1961307}{RFE #1961307})\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} atom leak (\\W{http://sourceforge.net/support/tracker.php?aid=2053522}{bug #2053522})\n\n\\b Minor documentation improvements\n\n\\b Show hand cursor for \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} links (\\W{http://sourceforge.net/support/tracker.php?aid=2004129}{patch #2004129})\n\n\\H{v2.38} 2.38\n\nReleased on July 12th, 2008\n\n\\S1{v2.38-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug in nsDialogs that caused it to pollute the stack if callbacks are not set for each control (\\W{http://sourceforge.net/support/tracker.php?aid=2013317}{bug #2013317})\n\n\\S2{} Minor Changes\n\n\\b Added IfNotThen support for LogicLib (\\W{http://sourceforge.net/support/tracker.php?aid=1990761}{patch #1990761})\n\n\\b Added support for NTFS mounts points on the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1946112}{bug #1946112})\n\n\\b Fixed branding image control detection on Debian, due to improper identification of static controls (\\W{http://sourceforge.net/support/tracker.php?aid=1951417}{bug #1951417})\n\n\\b Log actual creation of directories and not just failures and final directory (\\W{http://sourceforge.net/support/tracker.php?aid=1992325}{patch #1992325})\n\n\\b Made log close when \\e{LogSet off} is used (\\W{http://sourceforge.net/support/tracker.php?aid=1986692}{patch #1986692})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1990955}{bug #1990955})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed MULTIUSER_INSTALLMODE_INSTDIR handling for the uninstaller\n\n\\S2{} Modern UI\n\n\\b Document page leave callback function (\\W{http://sourceforge.net/support/tracker.php?aid=1964719}{bug #1964719})\n\n\\b Fixed MUI_FINISHPAGE_CANCEL_ENABLED\n\n\\b Fixed wasted variable warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1995024}{bug #1995024})\n\n\\S2{} Translations\n\n\\b Fixed French translation of MUI_UNTEXT_FINISH_INFO_REBOOT (\\W{http://sourceforge.net/support/tracker.php?aid=1967032}{patch #1967032})\n\n\\b Removed non-ANSI characters from French display name (\\W{http://sourceforge.net/support/tracker.php?aid=1979491}{bug #1979491})\n\n\\b Updated Slovenian (\\W{http://sourceforge.net/support/tracker.php?aid=2014106}{patch #2014106})\n\n\\H{v2.37} 2.37\n\nReleased on May 3rd, 2008\n\n\\S1{v2.37-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.32 that caused blurry icons on Windows versions prior to XP (\\W{http://sourceforge.net/support/tracker.php?aid=1956350}{bug #1956350})\n\n\\b Use $PROGRAMFILES as a default for $PROGRAMFILES64 instead of \"C:\\\\Program Files\" (\\W{http://sourceforge.net/support/tracker.php?aid=1947702}{bug #1947702})\n\n\\S2{} Minor Changes\n\n\\b Automatically select language in case there is only one available choice (\\W{http://sourceforge.net/support/tracker.php?aid=1939571}{bug #1939571})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed build errors with manual inclusion of StrFunc.nsh\n\n\\b Support for compression of files up to 2GB (\\W{http://sourceforge.net/support/tracker.php?aid=1948700}{patch #1948700})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed $\\{NSD_OnBack\\} (\\W{http://sourceforge.net/support/tracker.php?aid=1947388}{bug #1947388})\n\n\\b Fixed \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFileDialog return value for user cancellation (\\W{http://sourceforge.net/support/tracker.php?aid=1955803}{bug #1955803})\n\n\\b Fixed possible \\L{../Docs/BgImage/BgImage.txt}{BgImage} crash when calling BgImage::Destroy more than once (\\W{http://sourceforge.net/support/tracker.php?aid=1951248}{patch #1951248})\n\n\\b Minor documentation improvements\n\n\\S2{} Translation\n\n\\b Brazilian Portuguese updates\n\n\\b Polish updates (\\W{http://sourceforge.net/support/tracker.php?aid=1927421}{patch #1927421})\n\n\\b Slovak updates (\\W{http://sourceforge.net/support/tracker.php?aid=1939669}{patch #1939669})\n\n\\b Spanish updates\n\n\\S2{} Build System\n\n\\b SCons requirement upgraded to 0.98\n\n\\H{v2.36} 2.36\n\nReleased on March 29th, 2008\n\n\\S1{v2.36-rl} Release Notes\n\n\\b nsDialogs is picking up its pace and offers lots of new macros in this release. Keep the patches and requests coming!\n\n\\S1{v2.36-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Support for x64 disabled redirection (\\W{http://sourceforge.net/support/tracker.php?aid=1778973}{RFE #1778973}, \\W{http://sourceforge.net/support/tracker.php?aid=1889317}{bug #1889317})\n\n\\S2{} Modern UI\n\n\\b Added missing MUI_UNFUNCTION_DESCRIPTION_BEGIN and MUI_UNFUNCTION_DESCRIPTION_END\n\n\\b Fixed start menu page setting the error flag (\\W{http://sourceforge.net/support/tracker.php?aid=1891106}{bug #1891106})\n\n\\S2{} nsDialogs\n\n\\b NSD_AddStyle and NSD_AddExStyle for easy customization (\\W{http://sourceforge.net/support/tracker.php?aid=1900588}{patch #1900588})\n\n\\b NSD_CB_AddString, NSD_CB_SelectString, NSD_LB_AddString and NSD_LB_SelectString for easier handling of combo and list boxes\n\n\\b NSD_CreateNumber and NSD_SetTextLimit for limited input fields\n\n\\b NSD_SetImage, NSD_SetStretchedImage, NSD_ClearImage and NSD_FreeImage for image handling\n\n\\b NSD_SetState, NSD_GetState, NSD_Check and NSD_Uncheck for handling of check boxes and radio buttons (\\W{http://sourceforge.net/support/tracker.php?aid=1900588}{patch #1900588})\n\n\\b NSD_SetText for easily setting control's text\n\n\\b OnClick support for labels (\\W{http://sourceforge.net/support/tracker.php?aid=1908732}{bug #1908732})\n\n\\b Support for edit box change notification in combo box\n\n\\S2{} Minor Changes\n\n\\b Fixed exception handling of UPX compressed icons (\\W{http://sourceforge.net/support/tracker.php?aid=1896500}{bug #1896500})\n\n\\b Fixed InstallDirRegKey example in bigtest.nsi\n\n\\b Fixed Memento's documentation to include $\\{MementoSectionDone\\}\n\n\\b Fixed rare decompression error with 0x4001 bytes of compressed data (\\W{http://sourceforge.net/support/tracker.php?aid=1874297}{bug #1874297})\n\n\\b LangFile.nsh: Added LANGFILE_INCLUDE_WITHDEFAULT to load language file with defaults being obtained from a default file. This replaces the LANGFILE_DEFAULT setting and makes it easier to use LangFile.nsh for multiple sets of languages file without having to care about the different LANGFILE_DEFAULT settings.\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1891266}{bug #1891266}, \\W{http://sourceforge.net/support/tracker.php?aid=1894033}{bug #1894033}, \\W{http://sourceforge.net/support/tracker.php?aid=1896803}{bug #1896803})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed error when a custom installation mode initialization function is used only for the installer\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed default installation mode based on registry key (\\W{http://sourceforge.net/support/tracker.php?aid=1913029}{bug #1913029})\n\n\\b \\L{../Docs/MultiUser/Readme.html}{MultiUser}: Fixed no uninstaller handling (MULTIUSER_NOUNINSTALL)\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Avoid opening executables with identical folder names when opening script's folder (\\W{http://sourceforge.net/support/tracker.php?aid=1891066}{bug #1891066})\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Fixed return code handling so 259 won't cause an infinite loop (\\W{http://sourceforge.net/support/tracker.php?aid=1909458}{bug #1909458})\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Added MD5 functions (\\W{http://sourceforge.net/support/tracker.php?aid=1900226}{RFE #1900226})\n\n\\S2{} Translation\n\n\\b Albanian updates (\\W{http://sourceforge.net/support/tracker.php?aid=1919360}{patch #1919360})\n\n\\b French fixes (\\W{http://sourceforge.net/support/tracker.php?aid=1916564}{patch #1916564})\n\n\\b Polish updates (\\W{http://sourceforge.net/support/tracker.php?aid=1894983}{patch #1894983})\n\n\\S2{} Build System\n\n\\b Fixed build of NSIS Menu with wxGTK (\\W{http://sourceforge.net/support/tracker.php?aid=1900233}{bug #1900233})\n\n\\b Use CRLF for DSW and DSP files to avoid corruption messages\n\n\\b Various build fixes for GCC 4.3, amd64 and Linux in general\n\n\\H{v2.35} 2.35\n\nReleased on February 8th, 2008\n\n\\S1{v2.35-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Docs/MultiUser/Readme.html}{MultiUser} - installer configuration for multi-user Windows environments\n\n\\b More user friendly corrupted installer message (\\W{http://sourceforge.net/support/tracker.php?aid=1795426}{RFE #1795426})\n\n\\b Switched all examples to Modern UI 2\n\n\\S2{} Minor Changes\n\n\\b Fixed uninitialized memory leaking into resources (\\W{http://sourceforge.net/support/tracker.php?aid=1874297}{bug #1874297})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1861941}{bug #1861941}, \\W{http://sourceforge.net/support/tracker.php?aid=1883917}{bug #1883917})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fit images in welcome/finish page by default and fix support for MUI_(UN)WELCOMEFINISHPAGE_BITMAP_NOSTRETCH (\\W{http://sourceforge.net/support/tracker.php?aid=1875945}{bug #1875945})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed default finish page reboot selection (\\W{http://sourceforge.net/support/tracker.php?aid=1864690}{bug #1864690})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed MUI_STARTMENU_GETFOLDER (\\W{http://sourceforge.net/support/tracker.php?aid=1864507}{bug #1864507})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Fixed unreferenced mui.StartMenuPage.Create warning (\\W{http://sourceforge.net/support/tracker.php?aid=1861944}{bug #1861944})\n\n\\b New simplified code for \\R{library_vb6}{installation of VisualBasic 6 runtime}\n\n\\b Simplified NSIS Menu providing easier access to all documentation\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added keyboard cues support for LINK controls in \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} (\\W{http://sourceforge.net/support/tracker.php?aid=1871856}{patch #1871856})\n\n\\b Fixed a rare nsDialogs crash on Windows 98 with non-standard builds of nsDialogs (\\W{http://sourceforge.net/support/tracker.php?aid=1889720}{bug #1889720})\n\n\\H{v2.34} 2.34\n\nReleased on December 24th, 2007\n\n\\S1{v2.34-rl} Release Notes\n\n\\b Thanks to user input on \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}, it is now ready for mass consumption at no better time than the holiday season. The installer for NSIS itself now exploits the wonders of MUI2 and \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} and so should you.\n\n\\S1{v2.34-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}: Simpler code, easier to extend and makes use of the faster \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}\n\n\\S2{} Minor Changes\n\n\\b Added IfNot support for LogicLib (\\W{http://sourceforge.net/support/tracker.php?aid=1846785}{patch #1846785})\n\n\\b Added some deprecation messages in MUI2 (\\W{http://sourceforge.net/support/tracker.php?aid=1784470}{bug #1784470})\n\n\\b Allow overwrite of LANGFILE_*_NAME defines in new LangFile.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1848952}{bug #1848952})\n\n\\b Better RTL support in instfiles and components page (\\W{http://sourceforge.net/support/tracker.php?aid=1841573}{bug #1841573})\n\n\\b Don't warn of comments containing line-continuation character when it has no effect (\\W{http://sourceforge.net/support/tracker.php?aid=1701051}{bug #1701051}, \\W{http://sourceforge.net/support/tracker.php?aid=1686589}{RFE #1686589})\n\n\\b Fixed deletion of files with relative paths, a.k.a the EVE bug (\\W{http://sourceforge.net/support/tracker.php?aid=1851273}{bug #1851273})\n\n\\b Fixed input verification of \\R{sgetcurinsttype}{GetCurInstType} and \\R{getfullpathname}{GetFullPathName}\n\n\\b Fixed \\R{wordfind}{WordFind} handling of MBCS characters (\\W{http://sourceforge.net/support/tracker.php?aid=1852141}{bug #1852141})\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1842326}{bug #1842326})\n\n\\b Use CRLF in examples (\\W{http://sourceforge.net/support/tracker.php?aid=1835866}{bug #1835866})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added missing stack handling in \\L{../Docs/nsDialogs/Readme.html}{nsDialogs} examples\n\n\\b Added NSD_GetState for checkboxes and radio buttons, NSD_SetFocus, NSD_CreatePassword and NSD_CreateDropList (\\W{http://sourceforge.net/support/tracker.php?aid=1848940}{patch #1848940})\n\n\\b Fixed documentation of \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}::SelectFolderDialog (\\W{http://sourceforge.net/support/tracker.php?aid=1841120}{bug #1841120})\n\n\\b Fixed NSD_CreateComboBox so it'd work like InstallOptions (\\W{http://sourceforge.net/support/tracker.php?aid=1851136}{bug #1851136})\n\n\\S2{} Translations\n\n\\b Bulgarian updates\n\n\\b German fixes\n\n\\S2{} Build System\n\n\\b Fixed build issues on Mac OS (\\W{http://sourceforge.net/support/tracker.php?aid=1851365}{bug #1851365})\n\n\\b Fixed endianity issues introduced in version 2.32 (\\W{http://sourceforge.net/support/tracker.php?aid=1851365}{bug #1851365})\n\n\\H{v2.33} 2.33\n\nReleased on November 17th, 2007\n\n\\S1{v2.33-rl} Release Notes\n\n\\b This is a quick fix release for a bug, introduced in 2.32, that prevented the welcome page to display properly on Windows 9x. The problem was caused by the move from CVS to Subversion that messed with the line-breaks format of the INI files.\n\n\\S1{v2.33-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed a bug, introduced in 2.32, that caused display problems for the welcome and finish pages on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1831677}{bug #1831677})\n\n\\S2{} Minor Changes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Allow MUI_LANGDLL_ALLLANGUAGES to be defined after insertion of MUI_LANGUAGE macro\n\n\\S2{} Utilities and Plug-ins\n\n\\b Made \\L{../Docs/nsExec/nsExec.txt}{nsExec}'s internal process always exit cleanly to avoid false return values and delays (reported in the \\W{http://forums.winamp.com/showthread.php?threadid=279683}{forum})\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added OnClick support for static controls\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Fixed VPatchFile macro path handling (\\W{http://sourceforge.net/support/tracker.php?aid=1829540}{bug #1829540})\n\n\\S2{} Translations\n\n\\b Spanish updates\n\n\\S2{} Build System\n\n\\b Separate strip options for win32 and cross-platform binaries\n\n\\H{v2.32} 2.32\n\nReleased on November 9th, 2007\n\n\\S1{v2.32-rl} Release Notes\n\n\\b Vista PNG icons are now supported without the need for any special tricks.\n\n\\S1{v2.32-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added support for mismatching installer and uninstaller icons\n\n\\b NSIS source code is now hosted on Subversion instead of CVS\n\n\\S2{} Minor Changes\n\n\\b Fixed synchronization that could allow the user to cause extraction errors in rare cases (reported in the \\W{http://forums.winamp.com/showthread.php?s=&threadid=274333}{forum})\n\n\\b Fixed syntax validation of \\R{var}{Var}\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1811876}{bug #1811876}, \\W{http://sourceforge.net/support/tracker.php?aid=1819946}{bug #1819946})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed 3-line title on welcome/finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed components page description and lock\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed default language selection from registry\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed MUI_DIRECTORYPAGE_BGCOLOR\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/nsDialogs/Readme.html}{nsDialogs}: Added link support\n\n\\S2{} Translations\n\n\\b Bulgarian corrections\n\n\\b Fixed Japanese and Norwegian Nynorsk MUI line breaks (\\W{http://sourceforge.net/support/tracker.php?aid=1817289}{bug #1817289})\n\n\\S2{} Build System\n\n\\b Check compiler's \\e{-m32} flag before the linker's to avoid gcc segfault\n\n\\H{v2.31} 2.31\n\nReleased on September 29th, 2007\n\n\\S1{v2.31-rl} Release Notes\n\n\\b Please continue to report any issues and suggestions regarding \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}. Input for the previous version was very helpful in improving MUI2.\n\n\\S1{v2.31-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Added BST_* definitions to WinMessages.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1792422}{bug #1792422})\n\n\\b Added \\R{setregview}{SetRegView} \\e{lastused}\n\n\\b Minor documentation improvements\n\n\\b \\R{library}{Library} will now revert registry view settings (\\R{setregview}{SetRegView}) after it's finished\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed empty welcome page with Chinese (\\W{http://sourceforge.net/support/tracker.php?aid=1786899}{bug #1786899})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed finish button text (\\W{http://sourceforge.net/support/tracker.php?aid=1789492}{bug #1789492})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed uninstaller comportments page text (\\W{http://sourceforge.net/support/tracker.php?aid=1793811}{bug #1793811})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: Fixed unused function warnings\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed header bitmap issues, including NOSTRETCH and compilation errors\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed language selection dialog\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed reboot finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed unloading of nsDialogs on finish page\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Fixed unused variable warnings\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed command line parsing error (\\W{http://sourceforge.net/support/tracker.php?aid=1796053}{bug #1796053})\n\n\\S2{} Translations\n\n\\b Korean corrections\n\n\\b Persian improvements (\\W{http://sourceforge.net/support/tracker.php?aid=1776386}{patch #1776386})\n\n\\b Romanian improvements (\\W{http://sourceforge.net/support/tracker.php?aid=1783853}{patch #1783853})\n\n\\S2{} Build System\n\n\\b Fixed build failures with MinGW's GCC 4 (\\W{http://sourceforge.net/support/tracker.php?aid=1800834}{bug #1800834})\n\n\\H{v2.30} 2.30\n\nReleased on August 25th, 2007\n\n\\S1{v2.30-rl} Release Notes\n\n\\b This release includes a beta of \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2}. Please report any issues and suggestions.\n\n\\b The format of Modern UI language files has been modified to better support external strings. Private language files should be converted (and submitted as a \\W{http://sourceforge.net/tracker/?group_id=22049&atid=373087}{patch} in the spirit of open source).\n\n\\S1{v2.30-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in version 2.29 that caused invalid $SMPROGRAMS value on Windows 98 (\\W{http://sourceforge.net/support/tracker.php?aid=1766268}{bug #1766268})\n\n\\b \\L{../Docs/Modern UI 2/Readme.html}{Modern UI 2 beta}: Simpler code, easier to extend and makes use of nsDialogs\n\n\\S2{} Minor Changes\n\n\\b Added InstallOptions.nsh with relevant usage macros, based on the old Modern UI macros\n\n\\b Added LangFile.nsh allowing creation of language files that can be included with a single command with defaults for missing strings (when LANGFILE_DEFAULT is set)\n\n\\b Added LB_ERR and CB_ERR to WinMessages.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1771644}{bug #1771644})\n\n\\b Fixed \\R{createdirectory}{CreateDirectory} logging (\\W{http://sourceforge.net/support/tracker.php?aid=1768584}{patch #1768584})\n\n\\b Fixed escaping of quotes with $\\\\ in macros (\\W{http://sourceforge.net/support/tracker.php?aid=1713708}{bug #1713708})\n\n\\b Minor documentation improvements\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: New language files structure based on LangFile.nsh\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: MUI_LANGDLL_DISPLAY now reads previous settings on silent installations as well\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.80}: Added MUI_CUSTOMFUNCTION_MOUSEOVERSECTION (\\W{http://sourceforge.net/support/tracker.php?aid=1762003}{patch #1762003})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Various nsDialogs improvements including RTL support, more macros in nsDialogs.nsh and \\L{../Docs/nsDialogs/Readme.html}{initial documentation}\n\n\\S2{} Translations\n\n\\b Catalan returns\n\n\\b Danish corrections\n\n\\b Slovak corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1762627}{patch #1762627})\n\n\\S2{} Build System\n\n\\b More HPUX fixes (\\W{http://sourceforge.net/support/tracker.php?aid=1755148}{bug #1755148}, \\W{http://sourceforge.net/support/tracker.php?aid=1753063}{bug #1753063}, \\W{http://sourceforge.net/support/tracker.php?aid=1758873}{bug #1758873}, \\W{http://sourceforge.net/support/tracker.php?aid=1758863}{patch #1758863})\n\n\\b Ignore known failing tests by default on POSIX\n\n\\H{v2.29} 2.29\n\nReleased on July 14th, 2007\n\n\\S1{v2.29-rl} Release Notes\n\n\\b The most notable addition in this release is nsDialogs - a faster and far more capable replacement for InstallOptions. It allows creating controls of any type directly from the script and removes the need to mess with slow INI files. It integrates directly into the script by calling functions for notification, including change notification for edit boxes. \\W{https://nsis.sourceforge.io/Community}{Speak up} if you have any suggestions/comments/patches for it.\n\n\\S1{v2.29-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Examples/nsDialogs}{nsDialogs} - a replacement for InstallOptions\n\n\\S2{} Minor Changes\n\n\\b Disable Windows error messages for the entire installer and not just for an incomplete list of fail-points (\\W{http://sourceforge.net/support/tracker.php?aid=1741061}{bug #1741061})\n\n\\b Fixed incorrect large version handling of \\R{getfileversion}{GetFileVersion} (\\W{http://sourceforge.net/support/tracker.php?aid=1742255}{bug #1742255}, \\W{http://sourceforge.net/support/tracker.php?aid=1742562}{patch #1742562})\n\n\\b Fixed the ReverseSection macro in Sections.nsh (\\W{http://sourceforge.net/support/tracker.php?aid=1742793}{bug #1742793})\n\n\\b Minor documentation improvements\n\n\\b Simplified \\R{readreg_multi_sz}{REG_MULTI_SZ reader}\n\n\\b Use SHGetFolderPath where available to better support all users' folders\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Avoid possible hangs when called from page callbacks (\\W{http://sourceforge.net/support/tracker.php?aid=1743801}{bug #1743801})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: added /TRANSLATE2 for more \"translator-friendly\" strings (\\W{http://sourceforge.net/support/tracker.php?aid=1656076}{patch #1656076})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: support downloads over 2gb (\\W{http://sourceforge.net/support/tracker.php?aid=1723131}{patch #1723131})\n\n\\S2{} Translations\n\n\\b Added International Spanish\n\n\\S2{} Build System\n\n\\b Added support for HPUX (\\W{http://sourceforge.net/support/tracker.php?aid=1714416}{patch #1714416})\n\n\\H{v2.28} 2.28\n\nReleased on June 8th, 2007\n\n\\S1{v2.28-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added a workaround for a Windows 2000 bug that caused infinite loops when hitting a key on the instfiles page (\\W{http://sourceforge.net/support/tracker.php?aid=1733692}{bug #1733692})\n\n\\S2{} Minor Changes\n\n\\b Improved compiler error strings (\\W{http://sourceforge.net/support/tracker.php?aid=1722147}{patch #1722147})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_STARTMENUPAGE_BGCOLOR and MUI_DIRECTORYPAGE_BGCOLOR (\\W{http://sourceforge.net/support/tracker.php?aid=1706187}{patch #1706187})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_LANGDLL_ALLLANGUAGES that forces the language selection dialog to display all languages (\\W{http://sourceforge.net/support/tracker.php?aid=1724876}{patch #1724876})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: corrected documentation of TxtColor (\\W{http://sourceforge.net/support/tracker.php?aid=1716614}{bug #1716614})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: added compatibility with some buggy servers that don't close the connection (\\W{http://sourceforge.net/support/tracker.php?aid=1713562}{bug #1713562})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: fixed 100% CPU usage during domain resolution (\\W{http://sourceforge.net/support/tracker.php?aid=1713560}{bug #1713560})\n\n\\S2{} Translations\n\n\\b Valencian and Catalan are no longer installed (\\W{http://sourceforge.net/support/tracker.php?aid=1558822}{patch #1558822})\n\n\\S2{} Build System\n\n\\b Added IGNORETESTS for ignoring certain test files\n\n\\b Added wxWidgets to the requirement list\n\n\\b \\L{../Docs/System/System.html}{System} now builds with GCC, but without System::Get and System::Call (\\W{http://sourceforge.net/support/tracker.php?aid=1711089}{patch #1711089})\n\n\\H{v2.27} 2.27\n\nReleased on May 5th, 2007\n\n\\S1{v2.27-rl} Release Notes\n\n\\b This is a quick-fix release that addresses a bug introduced in the last version, 2.26, that caused $PROGRAMFILES and $COMMONFILES to translate into random strings in the uninstaller.\n\n\\S1{v2.27-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.26 that made $PROGRAMFILES and $COMMONFILES unavailable in the uninstaller\n\n\\S2{} Minor Changes\n\n\\b Disable the X button on InstallOptions pages when CancelEnabled is 0\n\n\\b Fixed incomplete \\R{messagebox}{MessageBox} usage line (\\W{http://sourceforge.net/support/tracker.php?aid=1709460}{bug #1709460})\n\n\\S2{} Build System\n\n\\b Added \\c{TOOLSET} option to allow selection of specific build tools (e.g. \\c{scons TOOLSET=mingw})\n\n\\H{v2.26} 2.26\n\nReleased on April 27th, 2007\n\n\\S1{v2.26-rl} Release Notes\n\n\\b Installation on x64 systems is now fully supported with $PROGRAMFILES64, \\R{setregview}{SetRegView} and \\R{library}{Library}'s LIBRARY_X64 option.\n\n\\S1{v2.26-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added LIBRARY_X64 option for \\R{library_install}{InstallLib} and \\R{library_uninstall}{UnInstallLib} for installing and uninstalling x64 libraries\n\n\\b Added \\R{varconstant}{$PROGRAMFILES32}, \\R{varconstant}{$PROGRAMFILES64}, \\R{varconstant}{$COMMONFILES32} and \\R{varconstant}{$COMMONFILES64}\n\n\\S2{} Minor Changes\n\n\\b Added \\R{varconstant}{$EXEPATH} and \\R{varconstant}{$EXEFILE}\n\n\\b Added $(^Language) language string which holds the language name (\\W{http://sourceforge.net/support/tracker.php?aid=1235616}{RFE #1235616})\n\n\\b Added LIBRARY_IGNORE_VERSION option for \\R{library_install}{InstallLib} (\\W{http://sourceforge.net/support/tracker.php?aid=1699435}{patch #1699435})\n\n\\b Added VXD support for \\R{getdllversionlocal}{GetDLLVersionLocal} on Windows NT4/2000/XP/Vista (\\W{http://sourceforge.net/support/tracker.php?aid=1706624}{patch #1706624})\n\n\\b Avoid \\R{library}{Library} warning when UnInstallLib is unused (\\W{http://sourceforge.net/support/tracker.php?aid=1692761}{bug #1692761})\n\n\\b Fixed error handling of \\R{copyfiles}{CopyFiles} on Windows NT4 (\\W{http://sourceforge.net/support/tracker.php?aid=774966}{bug #774966})\n\n\\b Fixed font name encoding broken since 2.24\n\n\\b Fixed \\L{../Examples/LogicLib.nsi}{LogicLib} duplicate labels across included files\n\n\\b Fixed preservation of folder attributes with \\c{\\R{file}{File} /a} (\\W{http://sourceforge.net/support/tracker.php?aid=1699474}{bug #1699474})\n\n\\b Improved unused variable warning (\\W{http://sourceforge.net/support/tracker.php?aid=1701050}{bug #1701050})\n\n\\b \\R{library}{Library} macros no longer require version information for DLL files on POSIX\n\n\\b Minor documentation improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=971467}{RFE #971467})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_FINISHPAGE_CANCEL_ENABLED\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: added MUI_FINISHPAGE_REBOOTLATER_DEFAULT (\\W{http://sourceforge.net/support/tracker.php?aid=1143843}{RFE #1143843})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: block unsupported languages in the language selection dialog (\\W{http://sourceforge.net/support/tracker.php?aid=1564986}{RFE #1564986})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: disable Cancel button on the finish page (\\W{http://sourceforge.net/support/tracker.php?aid=1267491}{bug #1267491})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI}: reduce flicker caused by MUI_HEADER_TRANSPARENT_TEXT (\\W{http://sourceforge.net/support/tracker.php?aid=1696610}{patch #1696610})\n\n\\b Support \\R{quit}{Quit} in \\R{pagecallbacks_explain}{show page functions}\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{setregview}{SetRegView} to allow access to the x64 registry view\n\n\\b Installer icon support for \\R{messagebox}{MessageBox} using MB_USERICON (\\W{http://sourceforge.net/support/tracker.php?aid=1682748}{patch #1682748}, \\W{http://sourceforge.net/support/tracker.php?aid=1530388}{RFE #1530388})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.47}: line breaks support in Link controls (\\W{http://sourceforge.net/support/tracker.php?aid=1683186}{patch #1683186}, \\W{http://sourceforge.net/support/tracker.php?aid=1495949}{RFE #1495949}), added HLine and VLine controls (\\W{http://sourceforge.net/support/tracker.php?aid=1683189}{patch #1683189})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: fixed broken command line parameter handling introduced in the last version (\\W{http://sourceforge.net/support/tracker.php?aid=1696534}{bug #1696534})\n\n\\b \\L{../Examples/UserInfo/UserInfo.nsi}{UserInfo}: return effective user group on Vista, added GetOriginalAccountType (\\W{http://sourceforge.net/support/tracker.php?aid=1687456}{patch #1687456}, \\W{http://sourceforge.net/support/tracker.php?aid=1684777}{bug #1684777})\n\n\\S2{} Translations\n\n\\b Added Afrikaans translation (\\W{http://sourceforge.net/support/tracker.php?aid=1699558}{patch #1699558})\n\n\\b French corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1676101}{patch #1676101})\n\n\\b German corrections\n\n\\S2{} Build System\n\n\\b Added SKIPTESTS option\n\n\\b Avoid a lot of code warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1676243}{bug #1676243})\n\n\\b Detect wxWidgets instead of assuming its existence on POSIX (\\W{http://sourceforge.net/support/tracker.php?aid=1672315}{bug #1672315})\n\n\\b Fixed big-endian platform support broken since 2.24\n\n\\H{v2.25} 2.25\n\nReleased on March 31st, 2007\n\n\\S1{v2.25-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Include/Memento.nsh}{Memento.nsh} for easy persistency of user selections across different runs of the installer (\\W{http://sourceforge.net/support/tracker.php?aid=1677624}{RFE #1677624})\n\n\\b Fixed a bug introduced in 2.24 that allowed the license page to be skipped even with agreement check box or radio buttons (\\W{http://sourceforge.net/support/tracker.php?aid=1664428}{bug #1664428})\n\n\\S2{} Minor Changes\n\n\\b Added Vista manifest to StartMenu.nsi example to avoid backward compatibility mode that moves shortcuts (\\W{http://sourceforge.net/support/tracker.php?aid=1664957}{bug #1664957})\n\n\\b Both dashes and slashes are supported as switch prefixes on makensis.exe (\\W{http://sourceforge.net/support/tracker.php?aid=1661503}{bug #1661503})\n\n\\b Delete uninstaller temporary directory on reboot (\\W{http://sourceforge.net/support/tracker.php?aid=1660626}{patch #1660626})\n\n\\b Distribute \\L{../Examples/Plugin}{Plug-in example} with the NSIS package and not only with the source code\n\n\\b Fixed lossy Unicode conversion of dialog template strings (\\W{http://sourceforge.net/support/tracker.php?aid=1662190}{bug #1662190})\n\n\\b Fixed \\L{../Include/Sections.nsh}{Sections.nsh} macros support for $0 as input (\\W{http://sourceforge.net/support/tracker.php?aid=1664648}{bug #1664648})\n\n\\b Fixed uninstallers support for the /D= command line switch\n\n\\b Improved logging of WriteReg commands\n\n\\b Minor documentation updates and fixes (including  \\W{http://sourceforge.net/support/tracker.php?aid=1662419}{patch #1662419})\n\n\\S2{} New/Changed Commands\n\n\\b Added bitwise operators support for \\R{define}{!define} /math (\\W{http://sourceforge.net/support/tracker.php?aid=1669513}{RFE #1669513})\n\n\\b \\R{scopepredefines}{__PAGEEX__} contains the page type (\\W{http://sourceforge.net/support/tracker.php?aid=1644712}{patch #1644712})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.46}: Use installer's name for message boxes (\\W{http://sourceforge.net/support/tracker.php?aid=1661677}{bug #1661677})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Use Escape button to close (\\W{http://sourceforge.net/support/tracker.php?aid=1666501}{RFE #1666501})\n\n\\b \\L{../Docs/Math/Math.txt}{Math}: Removed mathcrt.lib\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: Refuse empty paths (\\W{http://sourceforge.net/support/tracker.php?aid=1684751}{bug #1684751})\n\n\\S2{} Translations\n\n\\b Fixed Galician language files (\\W{http://sourceforge.net/support/tracker.php?aid=1663795}{bug #1663795})\n\n\\S2{} Build System\n\n\\b Added APPEND_LIBPATH and APPEND_CPPATH instead of the malfunctioning CPPPATH and LIBPATH\n\n\\b Added ChangeLog to source code package (\\W{http://sourceforge.net/support/tracker.php?aid=1680508}{patch #1680508})\n\n\\b Avoid some warnings on VS2005 (\\W{http://sourceforge.net/support/tracker.php?aid=1667950}{patch #1667950})\n\n\\b Fixed lzma test segfault on POSIX (\\W{http://sourceforge.net/support/tracker.php?aid=1666873}{bug #1666873})\n\n\\b More strict-aliasing compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1635841}{bug #1635841})\n\n\\b NSIS Menu finally built from source\n\n\\H{v2.24} 2.24\n\nReleased on February 17th, 2007\n\n\\S1{v2.24-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b \\R{library}{Library} uninstall-reinstall-reboot problems workaround (\\W{http://sourceforge.net/support/tracker.php?aid=1097642}{bug #1097642})\n\n\\b Minimized number of cases where an error message appears in silent mode\n\n\\b New compiler predefines for \\R{scopepredefines}{code scope} (\\W{http://sourceforge.net/support/tracker.php?aid=1644712}{patch #1644712})\n\n\\S2{} Minor Changes\n\n\\b Added \\R{usagereference}{/P command line option} for setting process priority of makensis (\\W{http://sourceforge.net/support/tracker.php?aid=1638974}{patch #1638974})\n\n\\b Added support for 64-bit PE on POSIX to \\R{getdllversionlocal}{GetDLLVersionLocal} (\\W{http://sourceforge.net/support/tracker.php?aid=1643633}{patch #1643633})\n\n\\b Append last part of \\R{ainstalldir}{InstallDir} only to $INSTDIR on directory pages (\\W{http://sourceforge.net/support/tracker.php?aid=1174184}{bug #1174184})\n\n\\b Avoid permissions change of output files for \\R{linefind}{LineFind} and \\R{filejoin}{FileJoin} (\\W{http://sourceforge.net/support/tracker.php?aid=1631773}{bug #1631773})\n\n\\b Fixed erroneous warnings on uninstall sections (\\W{http://sourceforge.net/support/tracker.php?aid=1631889}{bug #1631889})\n\n\\b Fixed lossy Unicode conversion in resource editor (\\W{http://sourceforge.net/support/tracker.php?aid=1083492}{bug #1083492})\n\n\\b Ignore invalid preprocessor commands in ignored block or comments\n\n\\b Made \\R{viaddversionkey}{VIAddVersionKey} only query language tables instead of creating them and generating warnings (\\W{http://sourceforge.net/support/tracker.php?aid=1626504}{bug #1626504})\n\n\\b Minor documentation updates and fixes (including  \\W{http://sourceforge.net/support/tracker.php?aid=1642107}{bug #1642107}, \\W{http://sourceforge.net/support/tracker.php?aid=1649187}{patch #1649187})\n\n\\b Warn when continuing a comment line using backslash (\\W{http://sourceforge.net/support/tracker.php?aid=1554178}{bug #1554178})\n\n\\S2{} New/Changed Commands\n\n\\b \\R{regdll}{RegDLL} and \\R{unregdll}{UnregDLL} now use LOAD_WITH_ALTERED_SEARCH_PATH, so there's no need to use \\R{setoutpath}{SetOutPath} to set the working directory (\\W{http://sourceforge.net/support/tracker.php?aid=1638191}{bug #1638191})\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.45}: Added FOCUS flag (\\W{http://sourceforge.net/support/tracker.php?aid=1634704}{patch #1634704}) and fixed paste with ONLY_NUMBERS flag (\\W{http://sourceforge.net/support/tracker.php?aid=1652075}{bug #1652075})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: settings in HKCU instead of HKLM (\\W{http://sourceforge.net/support/tracker.php?aid=1411970}{bug #1411970}) and MRU menu accelerators\n\n\\S2{} Translations\n\n\\b Added Galician translation (\\W{http://sourceforge.net/support/tracker.php?aid=1631765}{patch #1631765})\n\n\\S2{} Build System\n\n\\b Added a workaround for building on x64 POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1646170}{bug #1646170})\n\n\\b Added a workaround for strict-aliasing compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1635841}{bug #1635841})\n\n\\b Added compression tests\n\n\\b Added STRIP, APPEND_CCFLAGS and APPEND_LINKFLAGS build options\n\n\\b Fixed SCons 0.96.94 compatibility\n\n\\H{v2.23} 2.23\n\nReleased on January 13th, 2007\n\n\\S1{v2.23-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed compiler crash on Mac OS X (\\W{http://sourceforge.net/support/tracker.php?aid=1611866}{patch #1611866})\n\n\\b Fixed deletion of start menu icons in NSIS installer on Vista (\\W{http://sourceforge.net/support/tracker.php?aid=1611251}{bug #1611251})\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed incorrect \\L{../Docs/nsExec/nsExec.txt}{nsExec} message handling in silent mode (\\W{http://sourceforge.net/support/tracker.php?aid=1605581}{bug #1605581})\n\n\\b Fixed \\L{../Docs/System/System.html}{System} crash when System::Store is called on an empty private stack (\\W{http://sourceforge.net/support/tracker.php?aid=1620178}{bug #1620178})\n\n\\b Fixed \\L{../Docs/System/System.html}{System} crash with parenthesis in filename (\\W{http://sourceforge.net/support/tracker.php?aid=1616267}{bug #1616267})\n\n\\b Minor VPatch documentation enhancements (\\W{http://sourceforge.net/support/tracker.php?aid=1624292}{patch #1624292})\n\n\\S2{} Build System\n\n\\b Fixed build failures on mingw32 (\\W{http://sourceforge.net/support/tracker.php?aid=1610773}{bug #1610773})\n\n\\b Fixed build problems with MSTOOLKIT=yes\n\n\\H{v2.22} 2.22\n\nReleased on November 27th, 2006\n\n\\S1{v2.22-rl} Release Notes\n\n\\b Some changes have been made to the credit and license files in order to avoid copyrights and license related confusions. This does not change in any way how NSIS should or could be used. NSIS itself is still licensed with the permissive BSD-like \\W{https://nsis.sourceforge.io/License}{zlib license}.\n\n\\b Upgrade is recommended for early adopters of WinVer.nsh, due to a bug in Windows 98 and ME detection.\n\n\\S1{v2.22-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed context menu not disappearing when moving from instfiles page (\\W{http://sourceforge.net/support/tracker.php?aid=1115825}{bug #1115825})\n\n\\b Fixed \\L{../Include/WinVer.nsh}{WinVer.nsh}'s detection of Windows 98 and ME (reported on the \\W{http://forums.winamp.com/showthread.php?s=&threadid=257994&highlight=winver.nsh}{forum})\n\n\\b Fixed \\R{writeuninstaller}{WriteUninstaller} failure to overwrite read-only uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1542530}{bug #1542530})\n\n\\b Licensed lzma under \\R{cpl-license}{CPL} with a \\R{lzma-special-exception}{special exception}, instead of LGPL\n\n\\b Minor documentation updates and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1584618}{bug #1584618}, \\W{http://sourceforge.net/support/tracker.php?aid=1589877}{bug #1589877})\n\n\\b Updated comments in MUI examples (\\W{http://sourceforge.net/support/tracker.php?aid=1595500}{bug #1595500})\n\n\\S2{} New/Changed Commands\n\n\\b Added `highest` option for \\R{arequestexecutionlevel}{RequestExecutionLevel}\n\n\\S2{} Translations\n\n\\b Added Uzbek translation\n\n\\b Fixed corruption in Lithuanian (\\W{http://sourceforge.net/support/tracker.php?aid=1602673}{bug #1602673})\n\n\\b Minor Breton fixes\n\n\\b Slovenian corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1590108}{patch #1590108})\n\n\\S2{} Build System\n\n\\b Added \\W{https://web.archive.org/web/20060203051838/http://msdn.microsoft.com:80/vstudio/express/visualc/}{Microsoft Visual C++ 2005 Express} support\n\n\\b SCons requirement upgraded to 0.96.93\n\n\\H{v2.21} 2.21\n\nReleased on October 20th, 2006\n\n\\S1{v2.21-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added \\L{../Include/WinVer.nsh}{WinVer.nsh} for easy Windows version comparisons\n\n\\b Upgraded to lzma sdk 4.43 for faster compression\n\n\\S2{} Minor Changes\n\n\\b Added Vista support to GetWindowsVersion\n\n\\b Added \\L{../Include/x64.nsh}{x64.nsh} including a few simple macros for handling x64 installations\n\n\\b Fixed a handle leak in \\R{locate}{Locate}\n\n\\b Minor documentation updates and fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.76}: Added MUI_ABORTWARNING_CANCEL_DEFAULT (\\W{http://sourceforge.net/support/tracker.php?aid=1547844}{RFE #1547844})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{arequestexecutionlevel}{RequestExecutionLevel} (\\W{http://sourceforge.net/support/tracker.php?aid=1524709}{RFE #1524709})\n\n\\S2{} Translations\n\n\\b Added Valencian translation (\\W{http://sourceforge.net/support/tracker.php?aid=1558822}{patch #1558822})\n\n\\b Bulgarian corrections\n\n\\b Slovenian corrections\n\n\\S2{} Build System\n\n\\b SCons requirement upgraded to 0.96.92\n\n\\H{v2.20} 2.20\n\nReleased on September 9th, 2006\n\n\\S1{v2.20-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Better LogicLib errors (\\W{http://sourceforge.net/support/tracker.php?aid=1537976}{bug #1537976})\n\n\\b Fixed incomplete plug-in call error messages (\\W{http://sourceforge.net/support/tracker.php?aid=1535995}{bug #1535995})\n\n\\b Fixed incorrect file timestamp querying on big-endian platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1536377}{bug #1536377})\n\n\\b Minor documentation updates and fixes\n\n\\S2{} Translations\n\n\\b Danish corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1548190}{bug #1548190})\n\n\\b Fixed incorrectly encoded Turkish translation (\\W{http://sourceforge.net/support/tracker.php?aid=1542765}{bug #1542765})\n\n\\b French corrections\n\n\\b Italian corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1546183}{bug #1546183})\n\n\\b Spanish corrections\n\n\\b Swedish corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1542680}{bug #1542680})\n\n\\b Ukrainian corrections\n\n\\S2{} Build System\n\n\\b Fixed NSIS_CONFIG_CONST_DATA_PATH being ignored on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1515592}{bug #1515592})\n\n\\H{v2.19} 2.19\n\nReleased on August 6th, 2006\n\n\\S1{v2.19-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed \\R{system}{!system} and \\R{packhdr}{!packhdr} failure with quoted long file names (\\W{http://sourceforge.net/support/tracker.php?aid=1509909}{bug #1509909})\n\n\\b Fixed build problems on 64bit platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1504772}{bug #1504772})\n\n\\b Fixed negative total size for data larger than 2GB in script compilation summary (\\W{http://sourceforge.net/support/tracker.php?aid=1468852}{bug #1468852})\n\n\\b Minor documentation updates and fixes\n\n\\b Replaced \\R{detect.netframework}{IsDotNETInstalled} with a simpler and better version\n\n\\S2{} New/Changed Commands\n\n\\b Made \\R{if}{!if} compare strings case insensitively, like \\R{strcmp}{StrCmp} and \\R{ifdef}{!ifdef}\n\n\\S2{} Plug-ins\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: fixed random DNS errors (\\W{http://forums.winamp.com/showthread.php?s=&threadid=247723}{reported in the forums})\n\n\\b \\L{../Docs/System/System.html}{System}: fixed a bug that caused stack corruption and stopped the installer from deleting System.dll when a function with no arguments was called (\\W{http://sourceforge.net/support/tracker.php?aid=1535005}{bug #1535005})\n\n\\b \\L{../Docs/System/System.html}{System}: fixed wrong return values for functions that return \\c{short} or \\c{char} (\\W{http://sourceforge.net/support/tracker.php?aid=1535007}{bug #1535007})\n\n\\S2{} Translations\n\n\\b Added Norwegian Nynorsk translation (\\W{http://sourceforge.net/support/tracker.php?aid=1503208}{patch #1503208})\n\n\\b Fixed typos in the French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1531874}{bug #1531874})\n\n\\H{v2.18} 2.18\n\nReleased on July 1st, 2006\n\n\\S1{v2.18-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b CRC32 implementation used potentially non-32bit types (\\W{http://sourceforge.net/support/tracker.php?aid=1504758}{bug #1504758})\n\n\\b Fixed errors on multiple inclusion of \\R{headers}{useful headers}\n\n\\b Fixed \\R{getfileattributes}{GetFileAttributes}\n\n\\b Fixed incorrect text on browse dialog with \\R{onverifyinstdir}{.onVerifyInstDir} (\\W{http://sourceforge.net/support/tracker.php?aid=1504297}{bug #1504297})\n\n\\b Fixed \\R{library}{Library}'s implementation on POSIX\n\n\\b Minor documentation updates and fixes\n\n\\S2{} Translations\n\n\\b Added Irish translation (\\W{http://sourceforge.net/support/tracker.php?aid=1503639}{patch #1503639})\n\n\\b Catalan corrections (\\W{http://sourceforge.net/support/tracker.php?aid=1504104}{bug #1504104})\n\n\\b Dutch corrections\n\n\\b Finnish corrections (Mozilla bug #341643)\n\n\\b Fixed Serbian grammar and typos\n\n\\b Italian corrections (Mozilla bug #340450)\n\n\\b Polish corrections (Mozilla bug #224532)\n\n\\b Portuguese (Brazil) corrections (Mozilla bug #340885)\n\n\\b Romanian corrections (Mozilla bug #340645)\n\n\\b Thai corrections\n\n\\b Turkish corrections (Mozilla bug #340511)\n\n\\H{v2.17} 2.17\n\nReleased on May 19th, 2006\n\n\\S1{v2.17-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed build failures and segfaults on PowerPC Mac OS X (\\W{http://sourceforge.net/support/tracker.php?aid=1474597}{bug #1474597}, \\W{http://sourceforge.net/support/tracker.php?aid=1481044}{bug #1481044})\n\n\\b Fixed \\R{library}{Library}'s TLB version interpretation  (\\W{http://sourceforge.net/support/tracker.php?aid=1471341}{bug #1471341})\n\n\\b Fixed possible stack corruption when using TypeLib.dll on an invalid TLB\n\n\\b Fixed \\R{rmdir}{RMDir} deletion failure of read-only folders (\\W{http://sourceforge.net/support/tracker.php?aid=1481664}{bug #1481664})\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed toolbar compressor selection menu, broken in the previous version (\\W{http://sourceforge.net/support/tracker.php?aid=1466486}{bug #1466486})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1469306}{bug #1469306}, \\W{http://sourceforge.net/support/tracker.php?aid=1491616}{bug #1491616})\n\n\\S2{} Translations\n\n\\b Added missing Basque and Welsh files (\\W{http://sourceforge.net/support/tracker.php?aid=1469471}{bug #1469471})\n\n\\b Brazilian Portuguese updates\n\n\\b Bulgarian fixes\n\n\\b Fixed a typo in Hebrew translation (\\W{http://sourceforge.net/support/tracker.php?aid=1474587 }{bug #1474587})\n\n\\b Icelandic fixes and improvements\n\n\\H{v2.16} 2.16\n\nReleased on April 7th, 2006\n\n\\S1{v2.16-rn} Release Notes\n\n\\b The script compiler, makensis, builds and works on big-endian platforms. This change enlarges the portability range of NSIS to theoretically every POSIX platform. Please \\W{http://sourceforge.net/tracker/?group_id=22049&atid=373085}{report} any incompatibility with specific platforms or build-tools.\n\n\\b The internal changes made to support big-endian platforms also pave the road to x64 installers. There is now a central function which writes data to disk. This function currently only converts the endianity of integers, but it can be changed to selectively write 64-bit integers. Hopefully, there'll soon be a simple method of compiling a script to both x86 and x64 installers.\n\n\\b Changing Source/exehead/fileform.h to alter the internal structure of installers is no longer enough. The compiler has its own definitions of the structures which must also be changed in Source/fileform.cpp. In the future, fileform.cpp should be automatically generated from fileform.h, but for now, the synchronization must be done manually.\n\n\\S1{v2.16-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Big-endian platforms are now fully supported by makensis\n\n\\b \\R{library}{Library} now available on non-Windows platforms as well, although it requires the installed DLL to have version information\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW 2.1}: added \"Cancel compilation\" menu item\n\n\\S2{} New/Changed Commands\n\n\\b Added /utcdate switch to \\R{define}{!define} for UTC dates (\\W{http://sourceforge.net/support/tracker.php?aid=1459210}{RFE #1459210})\n\n\\S2{} Minor Changes\n\n\\b Added an optional timestamp in the log - NSIS_CONFIG_LOG_TIMESTAMP build setting (\\W{http://sourceforge.net/support/tracker.php?aid=1460586}{RFE #1460586})\n\n\\b Added NSIS_WIN32_MAKENSIS define, defined only when compiling on Windows\n\n\\b Exported validate_filename to plug-ins\n\n\\b Fixed a crash in CResourceEditor when adding resources to a PE that already contains named resources\n\n\\b Fixed a small resource leak in the TypeLib::GetLibVersion plug-in function\n\n\\b Fixed CResourceEditor input sanity checks\n\n\\b Fixed incorrect \\R{FileOpen}{FileOpen} input validation (\\W{http://sourceforge.net/support/tracker.php?aid=1459789}{bug #1459789})\n    \n\\b Fixed \\R{library}{Library} failure with DLLs marked as read-only\n\n\\b Fixed lzma's POSIX implementation thread synchronization issues and resource leaks\n\n\\b Fixed makensis self-path detection on non-Windows platforms (NSIS_CONFIG_CONST_DATA_PATH=no)\n\n\\b Fixed replace_icon and generate_uninstall_icon_data icon validation\n\n\\b Made external CHM links safer to script exceptions (\\W{http://sourceforge.net/support/tracker.php?aid=1449879}{bug #1449879})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1077439}{bug #1077439}, \\W{http://sourceforge.net/support/tracker.php?aid=1448374}{bug #1448374}, \\W{http://sourceforge.net/support/tracker.php?aid=1464446}{RFE #1464446})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.75}: added show function for the start menu page (\\W{http://sourceforge.net/support/tracker.php?aid=1448176}{RFE #1448176}), added MUI_HEADER_TRANSPARENT_TEXT for transparent header texts (\\W{http://sourceforge.net/support/tracker.php?aid=1447766}{RFE #1447766})\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: better header detection for better compatibility with proxies like WinProxy (\\W{http://sourceforge.net/support/tracker.php?aid=1445735}{bug #1445735}), fail if no headers are sent, faster downloads (\\W{http://sourceforge.net/support/tracker.php?aid=1465378}{patch #1465378})\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: validate user input (\\W{http://sourceforge.net/support/tracker.php?aid=1440636}{bug #1440636})\n\n\\S2{} Translations\n\n\\b Added Basque translation\n\n\\b Minor Slovenian fixes\n\n\\S2{} Build System\n\n\\b Added code tests for CResourceEditor and CDialogTemplate\n\n\\b Automatically pass build settings to script, eliminating the need to edit build.cpp for new settings\n\n\\b Fixed $PREFIX expansion during installation on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1456943}{bug #1456943})\n\n\\b Fixed CHM dependencies\n\n\\b Fixed compatibility issue with EclipseNSIS (version wasn't prefixed with 'v')\n\n\\b Fixed GCC 4.1 compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1456861}{patch #1456861})\n\n\\b Test for -Wl,-Map availability\n\n\\H{v2.15} 2.15\n\nReleased on March 4th, 2006\n\n\\S1{v2.15-cl} Changelog\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{if}{!if} for more complex compile-time flow control (\\W{http://sourceforge.net/support/tracker.php?aid=1412982}{patch #1412982})\n\n\\b Added /math switch to \\R{define}{!define} for simple compile-time mathematical operations (\\W{http://sourceforge.net/support/tracker.php?aid=1372561}{patch #1372561})\n\n\\S2{} Minor Changes\n\n\\b Added more replacement options to \\R{wordreplace}{WordReplace}\n\n\\b Added NSIS_CONFIG_LOG_STDOUT configuration option for logging to stdout\n\n\\b Added path translation for \\R{addincludedir}{!addincludedir} (\\W{http://sourceforge.net/support/tracker.php?aid=1431958}{bug #1431958})\n\n\\b \\R{configread}{ConfigRead} now sets the error flag, if the entry wasn't found\n\n\\b Documented \\R{nop}{Nop}\n\n\\b Edit box in the installation directory selection page is now always LTR, even for RTL languages\n\n\\b Fixed improper iterator usage in dir_reader (\\W{http://sourceforge.net/support/tracker.php?aid=1431593}{bug #1431593})\n\n\\b Fixed \\c{\\R{messagebox}{MessageBox} MB_TOPMOST} not showing up, if used as the first sections' instruction  (\\W{http://sourceforge.net/support/tracker.php?aid=1400995}{bug #1400995})\n\n\\b Fixed \\R{rmdir}{RMDir} skipping files with names starting with two dots (\\W{http://sourceforge.net/support/tracker.php?aid=1420657}{bug #1420657})\n\n\\b \\R{getoptions}{GetOptions} now sets the error flag, if the option wasn't found\n\n\\b Made \\R{include}{!include} stop searching the include directories after a match is found (\\W{http://sourceforge.net/support/tracker.php?aid=1441877}{bug #1441877})\n\n\\b Made \\R{headers}{header functions} use /NOUNLOAD for faster plug-in calls\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1420352}{bug #1420352}, \\W{http://sourceforge.net/support/tracker.php?aid=1432423}{bug #1432423})\n\n\\b More informative \\R{aicon}{Icon} error messages (\\W{http://sourceforge.net/support/tracker.php?aid=1174742}{bug #1174742})\n\n\\b New case-sensitive functions in headers: \\R{wordfinds}{WordFindS}, \\R{wordfind2xs}{WordFind2XS}, \\R{wordfind3xs}{WordFind3XS}, \\R{wordreplaces}{WordReplaceS}, \\R{wordadds}{WordAddS}, \\R{wordinserts}{WordInsertS}, \\R{strfilters}{StrFilterS}, \\R{textcompares}{TextCompareS}, \\R{configreads}{ConfigReadS}, \\R{configwrites}{ConfigWriteS}, \\R{getoptionss}{GetOptionsS}\n\n\\S2{} Translations\n\n\\b Added proper language identifier for Breton\n\n\\b Breton translation improvements\n\n\\b Bulgarian translation improvements\n\n\\b Fixed Czech grammar mistakes (\\W{http://sourceforge.net/support/tracker.php?aid=1427189}{patch #1427189})\n\n\\b Fixed Italian typo (\\W{http://sourceforge.net/support/tracker.php?aid=1416988}{patch #1416988})\n\n\\b Updated Mongolian\n\n\\S2{} Build System\n\n\\b Fixed __BIG_ENDIAN__ definition\n\n\\b Fixed improper handling of paths passed to the compiler (\\W{http://sourceforge.net/support/tracker.php?aid=1434215}{bug #1434215})\n\n\\b Improved GCC 4.2 compatibility (\\W{http://sourceforge.net/support/tracker.php?aid=1434174}{patch #1434174})\n\n\\b Moved NSIS_VARS_SECTION from config.h to scons\n\n\\b Write all configuration to sconf.h instead of passing it on the command line\n\n\\H{v2.14} 2.14\n\nReleased on January 24th, 2006\n\n\\S1{v2.14-rn} Release Notes\n\n\\b This release fixes a critical bug that caused installers using plug-ins to fail loading on Windows 9x and NT. Upgrading from 2.13 is highly recommended.\n\n\\S1{v2.14-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug that corrupted $TEMP under Windows 9x and NT and caused \\R{initpluginsdir}{InitPluginsDir} to fail (\\W{http://sourceforge.net/support/tracker.php?aid=1412159}{bug #1412159})\n\n\\S2{} Minor Changes\n\n\\b Fixed a possible buffer overflow caused by long values of $0, when using large NSIS_MAX_STRLEN builds (above 4096)\n\n\\H{v2.13} 2.13\n\nReleased on January 21st, 2006\n\n\\S1{v2.13-rn} Release Notes\n\n\\b Language detection has changed. The default language is now set to the user's user-interface language instead of the locale language, as suggested by \\W{http://web.archive.org/web/20050913082611/http://msdn.microsoft.com/library/en-us/intl/nls_0xrn.asp}{MSDN}. To restore the old behavior, use \\c{System::Call \"kernel32::GetUserDefaultLangID()i.a\"} in \\R{oninit}{.onInit}.\n\n\\S1{v2.13-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Default $LANGUAGE value is now based on user's UI language instead of locale (\\W{http://sourceforge.net/support/tracker.php?aid=1324734}{bug #1324734})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{strcmps}{StrCmpS} for case sensitive string comparison (\\W{http://sourceforge.net/support/tracker.php?aid=1381929}{patch #1381929})\n\n\\S2{} Minor Changes\n\n\\b Added system time support to \\R{filefunc}{GetTime}\n\n\\b Fixed components page checkbox redraw problem under Windows 95 (\\W{http://sourceforge.net/support/tracker.php?aid=1397031}{bug #1397031})\n\n\\b Fixed constant maximum string length in \\R{FileRead}{FileRead} (changed from 1024 to NSIS_MAX_STRLEN)\n\n\\b Fixed empty $INSTDIR value in directory page show callback function (\\W{http://sourceforge.net/support/tracker.php?aid=1209843}{bug #1209843})\n\n\\b Fixed relative jumps ignoring \\c{\\R{file}{File} /nonfatal} (\\W{http://sourceforge.net/support/tracker.php?aid=1299100}{bug #1299100})\n\n\\b Fixed typo in NSIS Menu (\\W{http://sourceforge.net/support/tracker.php?aid=1387748}{bug #1387748})\n\n\\b Issue a warning when \\c{\\R{abrandingtext}{BrandingText} /TRIM*} actually expands the label (\\W{http://sourceforge.net/support/tracker.php?aid=1362443}{bug #1362443})\n\n\\b Made \\c{\\R{rmdir}{RMDir} /r} remove Unicode paths as well using short names (\\W{http://sourceforge.net/support/tracker.php?aid=1378785}{bug #1378785})\n\n\\b Minor documentation improvements and fixes\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed System plug-in \\L{../Docs/System/System.html}{documentation} of callback functions (\\W{http://sourceforge.net/support/tracker.php?aid=1403608}{bug #1403608})\n\n\\b Fixed System plug-in heap corruption (\\W{http://sourceforge.net/support/tracker.php?aid=1403601}{bug #1403601})\n\n\\S2{} Translations\n\n\\b Mongolian translation improvements\n\n\\S2{} Build System\n\n\\b Better installation under POSIX with proper $\\{NSISDIR\\} detection and appropriate directory paths (/usr/bin, /usr/share/doc, etc.)\n\n\\H{v2.12} 2.12\n\nReleased on December 17th, 2005\n\n\\S1{v2.12-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed compile-time assertion failure for big uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1380447}{bug #1380447})\n\n\\b \\R{tutorial}{Tutorial} enhancements (including \\W{http://sourceforge.net/support/tracker.php?aid=1366431}{bug #1366431})\n\n\\S2{} New/Changed Commands\n\n\\b Added /NONFATAL switch to \\R{include}{!include} (\\W{http://sourceforge.net/support/tracker.php?aid=1372048}{patch #1372048})\n\n\\S2{} Minor Changes\n\n\\b Clearer error message for double label definition (\\W{http://sourceforge.net/support/tracker.php?aid=1374675}{patch #1374675})\n\n\\b Fixed browsed network root directory not being accepted (\\W{http://sourceforge.net/support/tracker.php?aid=1331292}{bug #1331292})\n\n\\b Fixed incorrect \\R{acompletedtext}{CompletedText} parsing (\\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Fixed sdbarker_tiny.exe's compatibility with NSIS_CONFIG_LOG (\\W{http://sourceforge.net/support/tracker.php?aid=1365869}{bug #1365869})\n\n\\b Implemented nicer registry commands log (\\W{http://sourceforge.net/support/tracker.php?aid=1340255}{patch #1340255})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1355653}{patch #1355653}, \\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Multi-line comments are no longer ignored inside !ifdef'd block\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added drag & drop support for zip2exe\n\n\\b Better drag & drop error handling in MakeNSISw\n\n\\b Fixed Math plug-in array issues (\\W{http://sourceforge.net/support/tracker.php?aid=1235875}{bug #1235875})\n\n\\S2{} Translations\n\n\\b Added browse button Danish translation\n\n\\b Breton translation fixes and improvements\n\n\\b Fixed finish button Swedish translation\n\n\\S2{} Build System\n\n\\b Fixed endianness detection problem on POSIX platforms (\\W{http://sourceforge.net/support/tracker.php?aid=1370179}{bug #1370179})\n\n\\b Generated installers use nsis-VERSION-setup.exe template\n\n\\H{v2.11} 2.11\n\nReleased on November 12th, 2005\n\n\\S1{v2.11-rl} Release Notes\n\n\\b Rebuilding existing installers that use \\c{\\R{asetoverwrite}{SetOverwrite} ifdiff}, might falsely overwrite files once\n\n\\S1{v2.11-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added a workaround for a bug that prevented detection of some special folders (e.g. \\R{varother}{$DESKTOP} for all users) on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1008632}{bug #1008632})\n\n\\b Fixed a crash caused by copying very long details to clipboard in the installation log page (\\W{http://sourceforge.net/support/tracker.php?aid=1314004}{bug #1314004})\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{tempfile}{!tempfile}, \\R{delfile}{!delfile} and \\R{appendfile}{!appendfile} for cross-platform handling of text files during compilation\n\n\\b Fixed \\R{achangeui}{ChangeUI} input handling (\\W{http://sourceforge.net/support/tracker.php?aid=1348473}{patch #1348473})\n\n\\b \\R{ssectionin}{SectionIn} RO is no longer case sensitive\n\n\\S2{} Minor Changes\n\n\\b Added support URL to the NSIS package entry in the Add/Remove control panel (\\W{http://sourceforge.net/support/tracker.php?aid=1349867}{RFE #1349867})\n\n\\b Fixed comment handling (\\W{http://sourceforge.net/support/tracker.php?aid=1324898}{patch #1324898})\n\n\\b Fixed duplicate RegTool test in \\R{library}{Library}\n\n\\b Fixed invalid language selection according to \\R{varother}{$LANGUAGE} in \\R{oninit}{.onInit} when only primary language match is found (\\W{http://sourceforge.net/support/tracker.php?aid=1328629}{bug #1328629})\n\n\\b Fixed missing RegTool error after install-reboot-install-reboot sequence with \\R{library}{Library}\n\n\\b Fixed portability issues with \\L{../Examples/LogicLib.nsi}{LogicLib} (\\W{http://sourceforge.net/support/tracker.php?aid=1320297}{bug #1320297}, \\W{http://sourceforge.net/support/tracker.php?aid=1248336}{patch #1248336})\n\n\\b Fixed \\c{\\R{asetoverwrite}{SetOverwrite} ifdiff} always overwriting on FAT file system (\\W{http://sourceforge.net/support/tracker.php?aid=1338423}{bug #1338423})\n\n\\b Fixed wrong size of red.bmp check box image\n\n\\b Larger browse button for localized texts (\\W{http://sourceforge.net/support/tracker.php?aid=1314682}{bug #1314682})\n\n\\b Minor documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1349810}{bug #1349810})\n\n\\b Sort language names in language selection dialog\n\n\\b Use the temporary directory for \\R{library}{Library} temporary files, instead of the possibly write-protected installation directory\n\n\\S2{} Utilities and Plug-ins\n\n\\b Added /OEM switch for OEM to ANSI conversion in \\L{../Docs/nsExec/nsExec.txt}{nsExec} (\\W{http://sourceforge.net/support/tracker.php?aid=1346737}{patch #1346737})\n\n\\b Added /PROXY switch for manual proxy configuration in \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl} (\\W{http://sourceforge.net/support/tracker.php?aid=1334166}{patch #1334166})\n\n\\b Added solid compression check box to zip2exe (\\W{http://sourceforge.net/support/tracker.php?aid=1334155}{patch #1334155})\n\n\\b Added stdin in MakeNSISw to allow xcopy to run\n\n\\b Added timestamp handling to zip2exe (\\W{http://sourceforge.net/support/tracker.php?aid=1349853}{bug #1349853})\n\n\\b Fixed input validation of \\L{../Docs/nsExec/nsExec.txt}{nsExec}\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.44}: Added HWND and HWND2 entries to the INI file to avoid messy calculations of the correct control id\n\n\\S2{} Translations\n\n\\b Slovenian translation fixes and improvements\n\n\\S2{} Build System\n\n\\b Added a workaround for linking errors caused by a bad library included in recent Platform SDK versions\n\n\\b Check for and use -pthread linker flag\n\n\\b Improved FreeBSD portability\n\n\\b Nicer error message for SCons version older than 0.96.90\n\n\\H{v2.10} 2.10\n\nReleased on October 4th, 2005\n\n\\S1{v2.10-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added auto completion to the directory page\n\n\\b Fixed a bug, introduced in 2.09, that caused \\R{aallowrootdirinstall}{AllowRootDirInstall} to fail\n\n\\b Fixed a thread leak in the POSIX implementation of LZMA\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch 3.1}: MD5 checksums, better performance, and some bug fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1219806}{bug #1219806})\n\n\\S2{} Minor Changes\n\n\\b Added rounding of required and available size on the directory page (1.59 => 1.6 instead of 1.5)\n\n\\b Added WS_EX_LEFTSCROLLBAR style in RTL mode (\\W{http://sourceforge.net/support/tracker.php?aid=1283528}{bug #1283528})\n\n\\b Fixed alteration of the working directory by FileRequest in InstallOptions (\\W{http://sourceforge.net/support/tracker.php?aid=1287731}{bug #1287731})\n\n\\b Fixed bad mnemonic key in MakeNSISw menu (\\W{http://sourceforge.net/support/tracker.php?aid=1288159}{bug #1288159})\n\n\\b Fixed negative size values showing up after the decimal point in the directory page for very big sizes\n\n\\b Minor documentation improvements and fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.74}: Fixed compile error when checkboxes are used on multiple finish pages\n\n\\S2{} Translations\n\n\\b Fixed a bug in Slovenian translation that caused lots of missing language string warnings\n\n\\b Fixed typos in Serbian translation\n\n\\b Fixed typos in Thai translation\n\n\\b Updated Simplified Chinese translation\n\n\\S2{} Build System\n\n\\b Automatic fix for \\W{http://forums.winamp.com/showthread.php?s=&threadid=179848}{VC6 SP6 compile error}\n\n\\b Moved most of the configuration from config.h to the build system\n\n\\b Removed all optimizations and symbol stripping in debug mode\n\n\\b SCons requirement updated to 0.96.91\n\n\\b VPatch can be built on POSIX as well\n\n\\H{v2.09} 2.09\n\nReleased on August 26th, 2005\n\n\\S1{v2.09-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug introduced in 2.08, that prevented uninstallers from deleting $INSTDIR\n\n\\b Fixed a bug that caused \"C:\\\\ \" to be considered a valid installation directory, even without \\R{aallowrootdirinstall}{AllowRootDirInstall}\n\n\\S2{} New/Changed Commands\n\n\\b \\R{var}{Var} can now be used in sections and functions, but only with the /GLOBAL flag\n\n\\S2{} Minor Changes\n\n\\b Applied \\W{http://sourceforge.net/support/tracker.php?aid=1248335}{patch #1248335} for greater portability of examples\n\n\\b \\R{filefunc}{FileFunc}: workaround for GetLongPathName which is not available on Windows 95 (Instructor)\n\n\\b Fixed an unused label warning in \\R{library}{Library}\n\n\\b Fixed duplicate label errors in \\L{../Examples/LogicLib.nsi}{LogicLib} and \\R{library}{Library} when used in different files (\\W{http://sourceforge.net/support/tracker.php?aid=1243865}{bug #1243865})\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.73}: fixed checkboxes on uninstaller finish page or multiple finish pages\n\n\\b \\R{wordfunc}{WordFunc}: fixed incorrect replacement of first word in WordReplace, under some conditions (Instructor)\n\n\\S2{} Translations\n\n\\b Renamed Malaysian to Malay\n\n\\b Update Thai translation to the latest version\n\n\\b Updated Kurdish MUI translation to the latest version\n\n\\S2{} Build System\n\n\\b Fixed a number of build problems on POSIX platforms which caused plug-ins to malfunction and installers to crash\n\n\\H{v2.08} 2.08\n\nReleased on July 23rd, 2005\n\n\\S1{v2.08-rn} Release Notes\n\n\\b The Archive has been replaced with a \\W{https://nsis.sourceforge.io/wiki/}{Wiki}. The new Wiki allows everyone to edit all pages so there's no longer need to hunt for the original author. It also allows everyone to upload plug-ins and not just administrators. And as if that's not enough, it looks better and provides easier and more feature-rich syntax.\n\n\\S1{v2.08-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added Instructor's \\R{headers}{header files of useful functions}\n\n\\b \\R{library}{Library} improvements: ordered registration after reboot, smaller RegTool and separate process for each registration to avoid conflicts (thanks stb)\n\n\\S2{} Minor Changes\n\n\\b Added Bosnian and Kurdish translations\n\n\\b Added per-user nsisconf.nsh file in %APPDATA% or $HOME, depending on the platform (\\W{http://sourceforge.net/support/tracker.php?aid=1223041}{patch #1223041})\n\n\\b Documentation improvements and fixes (including \\W{http://sourceforge.net/support/tracker.php?aid=1202495}{bug #1202495}, \\W{http://sourceforge.net/support/tracker.php?aid=1227610}{bug #1227610}, \n\\W{http://sourceforge.net/support/tracker.php?aid=1238686}{bug #1238686}, \\W{http://sourceforge.net/support/tracker.php?aid=1225167}{patch #1225167}, \\W{http://sourceforge.net/support/tracker.php?aid=1240601}{RFE #1240601})\n\n\\b Fixed _?= being ignored, if the uninstaller path is not quoted and is separated with only space from _?=\n\n\\b Fixed \\R{library}{Library} failing on paths with spaces (\\W{http://sourceforge.net/support/tracker.php?aid=1234283}{bug #1234283})\n\n\\b Fixed UpgradeDLL compilation error (\\W{http://sourceforge.net/support/tracker.php?aid=1230336}{bug #1230336})\n\n\\b Improved French, Ukrainian and Luxembourgish translation\n\n\\b Made \\R{rmdir}{RMDir} set the error flag, if passed an invalid directory path (\\W{http://sourceforge.net/support/tracker.php?aid=1227553}{bug #1227553})\n\n\\b Made uninstallers copy themselves into a subdirectory of the temporary directory to avoid DLLs left in the temporary directory from being loaded by the uninstaller (\\W{http://sourceforge.net/support/tracker.php?aid=1214319}{patch #1214319})\n\n\\b Missing \\R{langstring}{LangString} warning now uses the language name, if possible\n\n\\b zip2exe: fixed restriction of extraction path length and updated to \\W{http://www.zlib.net/}{zlib} 1.2.3 (\\W{http://sourceforge.net/support/tracker.php?aid=1226381}{bug #1226381})\n\n\\S2{} Build System\n\n\\b Added linker script to assure correct order of sections when building using GNU tools\n\n\\b Added \\c{test} target\n\n\\b UIs are now built from source\n\n\\H{v2.07} 2.07\n\nReleased on June 20th, 2005\n\n\\S1{v2.07-rn} Release Notes\n\n\\b NSIS Update was removed and the update check was moved back to MakeNSISw (Help -> NSIS Update). Use the \\R{build_nightly}{nightly builds} to get the latest compiled binaries from CVS.\n\n\\b Solid compression is no longer the default for bzip2 and lzma, use \\c{SetCompressor /SOLID bzip2} or \\c{SetCompressor /SOLID lzma} for solid compression.\n\n\\b Source code is no longer supplied with the installer package. Source code can be downloaded from CVS or from the \\W{https://nsis.sourceforge.io/download/}{download page}.\n\n\\b The directory structure of the installation has been changed. All documentation is now in the Docs folder and all examples are in the Examples folder.\n\n\\S1{v2.07-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added /SOLID switch for \\R{asetcompressor}{SetCompressor}\n\n\\b New build system (see \\k{build})\n\n\\b Stubs (exeheads) are no longer compiled into makensis.exe, but kept in the Stubs folder\n\n\\S2{} New/Changed Commands\n\n\\b \\R{enumregvalue}{EnumRegValue} sets the error flag, if the enumeration index is out of range (\\W{http://sourceforge.net/support/tracker.php?aid=1178756}{bug #1178756})\n\n\\b \\R{expandenvstrings}{ExpandEnvStrings} now sets the error flag as the documentation states\n\n\\b Made \\R{file}{File} /oname throw an error if the first character is a quote\n\n\\S2{} Minor Changes\n\n\\b Added \\R{varconstant}{$LOCALAPPDATA} (\\W{http://sourceforge.net/support/tracker.php?aid=1172123}{RFE #1172123})\n\n\\b Changed MUI dialogs charset from ANSI_CHARSET to DEFAULT_CHARSET (\\W{http://sourceforge.net/support/tracker.php?aid=1193736}{bug #1193736}, \\W{http://sourceforge.net/support/tracker.php?aid=1201712}{bug #1201712})\n\n\\b Fixed \\R{varother}{$INSTDIR} changing, even if user clicked Cancel in browse dialog\n\n\\b Fixed a crash in makensis when using \\R{awindowicon}{WindowIcon} off (\\W{http://sourceforge.net/support/tracker.php?aid=1123353}{bug #1123353})\n\n\\b Fixed \\R{call}{Call} :label in uninstall code\n\n\\b Fixed compilation error without NSIS_CONFIG_COMPONENTPAGE\n\n\\b Fixed compilation errors on various platforms (including \\W{http://sourceforge.net/support/tracker.php?aid=1179116}{patch #1179116}, \\W{http://sourceforge.net/support/tracker.php?aid=1193692}{patch #1193692})\n\n\\b Fixed \\R{createdirectory}{CreateDirectory} setting the error flag for directories with two consecutive backslashes (\\W{http://sourceforge.net/support/tracker.php?aid=1119442}{bug #1119442})\n\n\\b Fixed \\R{library}{InstallLib} setting the error flag for new shared libraries (\\W{http://sourceforge.net/support/tracker.php?aid=1181951}{bug #1181951})\n\n\\b Fixed letters case in examples (\\W{http://sourceforge.net/support/tracker.php?aid=1184571}{patch #1184571})\n\n\\b Fixed logging state being reset after the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1168711}{bug #1168711})\n\n\\b Fixed overlapping icon in welcome page (\\W{http://sourceforge.net/support/tracker.php?aid=1221772}{bug #1221772})\n\n\\b Fixed \\R{rmdir}{RMDir} /REBOOTOK setting the reboot flag when trying to delete non-existent directory (\\W{http://sourceforge.net/support/tracker.php?aid=1073792}{bug #1073792})\n\n\\b Minor documentation fixes and improvements (including \\W{http://sourceforge.net/support/tracker.php?aid=1220940}{bug #1220940})\n\n\\b Removed NSIS Update, MakeNSISw checks for new versions again\n\n\\S2{} Include Files\n\n\\b More messages in \\L{../Include/WinMessages.nsh}{WinMessages.nsh} (Shengalts Aleksander)\n\n\\b Some more useful macros in \\L{../Include/Colors.nsh}{Colors.nsh} (Joel)\n\n\\S2{} Utilities and Plug-ins\n\n\\b Fixed halibut segfaults on PowerPC (\\W{http://sourceforge.net/support/tracker.php?aid=1180886}{patch #1180886})\n\n\\b \\L{../Docs/Math/Math.txt}{Math}: Fixed memory leak (brainsucker)\n\n\\b zip2exe: upgraded to zlib 1.2.2\n\n\\S2{} Translations\n\n\\b Added Malaysian translation (Azwa)\n\n\\b Added Welsh translation (Rhoslyn Prys)\n\n\\b Fixed Breton NLF file (credits weren't commented)\n\n\\b Fixed duplicate accelerator in French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1168652}{bug #1168652})\n\n\\b Improved French translation (\\W{http://sourceforge.net/support/tracker.php?aid=1220277}{bug #1220277})\n\n\\b Updated Russian translation (Dmitry)\n\n\\b Updated translation credits (\\W{http://sourceforge.net/support/tracker.php?aid=1223362}{patch #1223362})\n\n\\H{v2.06} 2.06\n\nReleased on March 19th, 2005\n\n\\S1{v2.06-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed a bug, introduced in 2.05, that made components selection not function properly if the first section in the script was a section group\n\n\\b Fixed a bug, introduced in 2.05, that corrupted the state of section groups inside section groups (\\W{http://sourceforge.net/support/tracker.php?aid=1155836}{bug #1155836})\n\n\\S2{} New/Changed Commands\n\n\\b Added MB_RTLREADING style to \\R{messagebox}{MessageBox} (\\W{http://sourceforge.net/support/tracker.php?aid=1159701}{RFE #1159701})\n\n\\b All registry instructions now accept SHCTX which is replaced with HKLM or HKCU at runtime according to \\R{setshellvarcontext}{SetShellVarContext} (\\W{http://sourceforge.net/support/tracker.php?aid=1124901}{RFE #1124901})\n\n\\S2{} Minor Changes\n\n\\b Added Belarusian and Icelandic language files\n\n\\b Added components.c to the Makefile (\\W{http://sourceforge.net/support/tracker.php?aid=1123154}{patch #1123154})\n\n\\b Added missing \\R{clearerrors}{ClearErrors} in GetWindowsVersion (\\W{http://sourceforge.net/support/tracker.php?aid=1155588}{bug #1155588})\n\n\\b Fixed a bug in install.sh that made it try to install a non existing directory\n\n\\b Fixed a bug in the Russian language file distributed with 2.05\n\n\\b Fixed a bug that caused \\R{asetfont}{SetFont} to not function properly with RTL languages on Windows 9x (\\W{http://sourceforge.net/support/tracker.php?aid=1159700}{bug #1159700})\n\n\\b Fixed a bug, introduced in 2.05, that caused problems with \\R{ainsttype}{InstType} /COMPONENTSONLYONCUSTOM (\\W{http://sourceforge.net/support/tracker.php?aid=1155060}{bug #1155060})\n\n\\b Fixed a crash caused by compiling large uninstallers (\\W{http://sourceforge.net/support/tracker.php?aid=1144763}{bug #1144763})\n\n\\b Fixed compile error without NSIS_CONFIG_CRC_SUPPORT\n\n\\b Fixed compile errors of MinGW on POSIX for source code under Contrib (\\W{http://sourceforge.net/support/tracker.php?aid=1164307}{patch #1164307})\n\n\\b Fixed plug-ins directory initialization for extremely restricted guest users with no directory listing access to the temporary directory\n\n\\b Made install.sh not use $(tempfile) and install files under /usr/share instead of /lib (\\W{http://sourceforge.net/support/tracker.php?aid=1120399}{patch #1120399})\n\n\\b Minor documentation updates and fixes\n\n\\b Updated Slovenian, Serbian and Serbian Latin language files\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}: Fixed a small memory leak (Thanks Takhir)\n\n\\b \\L{../Docs/StartMenu/Readme.txt}{StartMenu}: Added support for \\R{setctlcolors}{SetCtlColors} (\\W{http://sourceforge.net/support/tracker.php?aid=711900}{RFE #711900})\n\n\\H{v2.05} 2.05\n\nReleased on February 4th, 2005\n\n\\S1{v2.05-rn} Release Notes\n\n\\b A lot of changes were made to the behavior of sections/components and related instructions. The changes were thoroughly tested, but may still cause minor incompatibilities with old scripts. Please let us know if your script no longer functions as expected with these changes.\n\n\\S1{v2.05-cl} Changelog\n\n\\S2{} New/Changed Commands\n\n\\b Renamed SubSection and SubSectionEnd to \\R{ssectiongroup}{SectionGroup} and \\R{ssectiongroupend}{SectionGroupEnd}\n\n\\b \\R{sectionsetflags}{SectionSetFlags}, when used on a section group, toggles its children too\n\n\\b \\R{sectionsettext}{SectionSetText} works better with variables (parses immediately and treats an empty variable as an empty string)\n\n\\b \\R{ssetcurinsttype}{SetCurInstType} works without the components page\n\n\\S2{} Minor Changes\n\n\\b Added Breton translation\n\n\\b \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}: Fixed double delay time in some cases\n\n\\b Documentation fixes and enhancements (including \\W{http://sourceforge.net/support/tracker.php?aid=1098454}{patch #1098454})\n\n\\b Fixed case sensitive name comparison with \\R{file}{File} /x, when not using wildcards\n\n\\b Fixed extraction status ending prior to 100%\n\n\\b Fixed negative values of available space in the directory page (\\W{http://sourceforge.net/support/tracker.php?aid=1114876}{bug #1114876})\n\n\\b Fixed system.nsi example crash (\\W{http://sourceforge.net/support/tracker.php?aid=1102255}{bug #1102255})\n\n\\b Fixed unused label warnings with \\R{library}{Library macros}\n\n\\b Improved some error messages\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.42}: Added an image displaying example, added TRANSPARENT flag for BITMAP fields (\\W{http://sourceforge.net/support/tracker.php?aid=1079715}{RFE #1079715} - funded by Chris Morgan)\n\n\\b Invisible sections weren't always affected by a change of the installation type (\\W{http://sourceforge.net/support/tracker.php?aid=1045722}{bug #1045722})\n\n\\b Language file fixes\n\n\\b Made pages refresh after an aborted leave function\n\n\\b Partially selected section groups can now be toggled\n\n\\H{v2.04} 2.04\n\nReleased on January 7th, 2005\n\n\\S1{v2.04-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed $0 changed by \\R{file}{File} /r\n\n\\b Fixed empty directory not included by \\R{file}{File} /r\n\n\\b Fixed invalid directory creation by \\R{file}{File} /r on POSIX\n\n\\b Fixed Unicode conversion problems on POSIX\n\n\\S2{} Minor Changes\n\n\\b Added new test for dir_reader::matches\n\n\\b Fixed LibraryLocal failure with UNC paths\n\n\\b Fixed VC 7.1 and GCC 3.4 compile errors\n\n\\b Language file fixes\n\n\\H{v2.03} 2.03\n\nReleased on December 3rd, 2004\n\n\\S1{v2.03-rn} Release Notes\n\n\\b If you're using \\c{File /r folder} in your script, it's recommended you replace it with \\c{File /r folder\\\\*} for faster compilation and so no other folders named \\e{folder} will be included\n\n\\b Command line switches prefix on POSIX has changed to a dash\n\n\\b The plug-in API change is backward compatible\n\n\\S1{v2.03-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added another parameter to plug-in functions with a pointer to exec_flags and ExecuteCodeSegment\n\n\\b Fixed handling of absolute paths on POSIX\n\n\\b Made \\R{regdll}{RegDLL} load and unload a DLL exactly once to fix crashes with COM DLLs registration\n\n\\S2{} New/Changed Commands\n\n\\b Added /date switch to !define for definition of date and time constants\n\n\\b Added /x switch for \\R{file}{File} and \\R{reservefile}{ReserveFile} to exclude files and directories\n\n\\b Made \\R{file}{File}'s /r switch always search in subdirectories, even if the given path points to an existing directory\n\n\\S2{} Minor Changes\n\n\\b Added LIBRARY_SHELL_EXTENSION and LIBRARY_COM to \\R{library}{Library}\n\n\\b Added missing #include\n\n\\b Added NSIS_LZMA_COMPRESS_WHOLE to the script define list\n\n\\b Documentation fixes and improvements\n\n\\b Fixed an access violation in case of a script jump beyond the last entry\n\n\\b Fixed keyboard navigation in the instfiles page while installing\n\n\\b Fixed unpacking window not showing when \\R{abggradient}{BGGradient} is used\n\n\\b Fixed unused label warning in \\R{library}{Library.nsh}\n\n\\b Language file fixes\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.72}: Fixed state of Cancel button on Finish page when used in installer and uninstaller, added a string for NSIS_CONFIG_COMPONENTPAGE_ALTERNATIVE\n\n\\b nsisconf.nsh was not always parsed when compiling using MakeNSISw\n\n\\H{v2.02} 2.02\n\nReleased on October 23rd, 2004\n\n\\S1{v2.02-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Added lots of small usage examples to the documentation\n\n\\b Made \\R{jumps}{relative jumps} work with instructions that add multiple entries\n\n\\b Made the datablock optimizer much faster\n\n\\b Made the installer deny reboots while running (\\W{http://msdn.microsoft.com/en-us/library/aa376890}{WM_QUERYENDSESSION})\n\n\\b Made the \\R{reboot}{Reboot} command first quit and then reboot so everything is always cleaned-up\n\n\\S2{} New/Changed Commands\n\n\\b Added << and >> to \\R{intop}{IntOp}\n\n\\b Added \\R{geterrorlevel}{GetErrorLevel} and \\R{seterrorlevel}{SetErrorLevel}\n\n\\b Fixed \\R{copyfiles}{CopyFiles} usage checking problem\n\n\\b Made \\R{reboot}{Reboot} call \\R{onrebootfailed}{.onRebootFailed} and quit on failure instead of setting the error flag\n\n\\S2{} Minor Changes\n\n\\b Added Albanian language files\n\n\\b Added NSIS_CONFIG_COMPONENTPAGE_ALTERNATIVE configuration option which makes components only be toggled when the user clicks on the checkbox and makes \\R{onmouseoversection}{.onMouseOverSection} only be called when the user selects a component\n\n\\b Added some CppUnit tests\n\n\\b Both _?= and /D= now require a space before them so they can safely remove the space from $CMDLINE\n\n\\b Fixed a bug that caused the uninstaller CRC-check to fail if \\R{packhdr}{!packhdr} created a non-512-bytes-aligned exehead\n\n\\b Fixed a compiler crash caused by using \\R{getcurrentaddress}{GetCurrentAddress}\n\n\\b Fixed errors when using '\\R{file}{File} /r .' on Windows\n\n\\b Fixed gcc 3.4 compile errors\n\n\\b Fixed inconsistencies between error levels and the \\R{errorlevels}{documentation}\n\n\\b Fixed some minor memory leaks\n\n\\b Language file fixes\n\n\\b Makefile improvements\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.71}: Made the selected language only be saved if the installation was successful\n\n\\b Some code refactoring\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc}: Rewrote StrSort and fixed StrStrAdv. See the \\L{../Docs/StrFunc/StrFunc.txt}{readme} for a complete changelog\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Fixed some cases where the banner would not show on the foreground\n\n\\H{v2.01} 2.01\n\nReleased on September 24th, 2004\n\n\\S1{v2.01-rn} Release Notes\n\n\\b See \\R{build_posix}{Compiling NSIS Sources} for information about compiling makensis on POSIX platforms\n\n\\b NSIS doesn't create installers for Linux/Mac OS X etc., but you can compile Windows installers on these platforms\n\n\\b UpgradeDLL is still provided in UpgradeDLL.nsh for backwards compatibility\n\n\\S1{v2.01-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Compiler (makensis) supports POSIX platforms (Linux, *BSD, Mac OS X, etc.)\n\n\\b \\R{library}{New system} for DLL/TLB library setup\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{abgfont}{BGFont} that allows setting the background text font\n\n\\b Added SW_HIDE to \\R{execshell}{ExecShell}'s accepted show modes\n\n\\b \\R{rmdir}{RMDir} can now be used with both /r and /REBOOTOK at the same time\n\n\\b Extended maximum binary data for \\R{writeregbin}{WriteRegBin} to 3 * NSIS_MAX_STRLEN\n\n\\b Added \\R{execute}{!execute}\n\n\\S2{} Minor Changes\n\n\\b LZMA exehead is now 34KB and should also decompress faster\n\n\\b Windows 95 (OSR2)/98/ME no longer see drive free space capped to 2GB\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern User Interface}: New orange theme by MoNKi\n\n\\b Speedup background gradient painting\n\n\\b \\L{../Examples/LogicLib.nsi}{LogicLib} 2.5: Added AndIf, AndUnless, OrIf, OrUnless. Avoids unused variable warnings by requiring !defines before using certain features.\n\n\\b \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc}: Added support for uninstaller, some fixes and improvements. See the \\L{../Docs/StrFunc/StrFunc.txt}{readme} for a complete changelog\n\n\\b The plug-ins folder is properly removed when the system is rebooted\n\n\\b \\R{setoutpath}{SetOutPath} \"-\" works again\n\n\\b Fixed a bug which made plug-ins that didn't have lower case extension not be found\n\n\\b Fixed a bug that caused directories with drives that had their current directory set to an invalid directory to not be accepted in the directory selection page\n\n\\b Fixed a crash in makensis caused by defining a macro in a file included by another macro\n\n\\b makensis shows meaningful errors for compression errors instead of just magic numbers\n\n\\b Fixed a bug with \\R{aallowrootdirinstall}{AllowRootDirInstall} used along with \\R{ainstalldirregkey}{InstallDirRegKey} that caused the directory in the registry to be ignored\n\n\\b Fixed \\R{FileRead}{FileRead} setting the error flag when a null character is the first character it reads\n\n\\b Fixed a bug which caused the background gradient to paint slowly\n\n\\b \\R{file}{File} paths relative to the root folder work again\n\n\\b Added \\L{../Include/Colors.nsh}{Colors.nsh}\n\n\\b Made Times New Roman default font for the background text because it should always have support for the locale's language\n\n\\b Fixed compilation of NSISdl under VS.NET\n\n\\b \\R{setctlcolors}{SetCtlColors} /BRANDING wasn't working right, if just one of the background or text color were specified\n\n\\b Language file fixes and improvements\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/System/System.html}{System}: New, hopefully more informative, documentation; fixed some bugs\n\n\\b \\L{../Docs/Banner/Readme.txt}{Banner}: Added getWindow to allow greater control over the banner window\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.41}: Bitmaps are now automatically centered, fixed a bug which prevented enabling the next button from the leave function of InstallOptions pages, fixed a rare freeze\n\n\\b Zip2Exe 0.32: Fixed codepage problems\n\n\\b \\L{../Docs/nsExec/nsExec.txt}{nsExec}: Always create a valid input handle, fixed a problem when called from a path with spaces\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch}: Close all open file handles when one of them fail to open\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: Added /NOIEPROXY (based on memph's code)\n\n\\H{v2.0} 2.0\n\nReleased on February 7th, 2004\n\n\\S1{v2.0-rn} Release Notes\n\n\\b Finnish, Bulgarian and Thai language files are outdated and do not contain all needed translations\n\n\\S1{v2.0-cl} Changelog\n\n\\S2{} Changes from 1.98\n\n\\b \\R{langs}{Multiple languages in one installer support} (with RTL support)\n\n\\b \\R{plugindlls}{Easier plug-in system}\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern User Interface} (optional)\n\n\\b \\W{http://www.7-zip.org/}{LZMA} compression which provides installers 20% smaller than bzip2\n\n\\b \\R{pages}{Easier paging system} (no more .onNextPage, .onPrevPage)\n\n\\b Components are presented as a tree which allows sub components\n\n\\b \\R{varuser}{User variables} ($VARNAME)\n\n\\b \\R{aicon}{Icon} and \\R{auninstallicon}{UninstallIcon} support any color depth and sizes, not just 32x32x16\n\n\\b \\R{acheckbitmap}{CheckBitmap} supports any color depth\n\n\\b Improved large files handling\n\n\\b \\R{alicensedata}{License data} can be RTF\n\n\\b CHM documentation for easy browsing\n\n\\b \\R{silent}{Better silent support}\n\n\\b New include files for easier scripting: \\L{../Examples/LogicLib.nsi}{LogicLib}, \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} and \\L{../Include/Sections.nsh}{Sections}\n\n\\b Improved plug-ins: \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}, \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl} and \\L{../Docs/Splash/splash.txt}{Splash}\n\n\\b New plug-ins: \\L{../Docs/AdvSplash/advsplash.txt}{AdvSplash}, \\L{../Docs/Banner/Readme.txt}{Banner}, \\L{../Docs/BgImage/BgImage.txt}{BgImage}, \\L{../Docs/Dialer/Dialer.txt}{Dialer}, \\L{../Examples/languages.nsi}{LangDLL}, \\L{../Docs/Math/Math.txt}{Math}, \\L{../Docs/nsExec/nsExec.txt}{nsExec}, \\L{../Docs/StartMenu/Readme.txt}{StartMenu}, \\L{../Docs/System/System.html}{System}, \\L{../Examples/UserInfo/UserInfo.nsi}{UserInfo} and \\L{../Docs/VPatch/Readme.html}{VPatch}\n\n\\b New and improved utilities: \\L{../Docs/makensisw/Readme.txt}{MakeNSISw}, NSIS Menu (NSIS.exe), NSIS Update (Bin\\\\NSIS Update.exe) and zip2exe (Bin\\\\zip2exe.exe)\n\n\\b New commands: \\R{addplugindir}{!addplugindir}, \\R{echo}{!echo}, \\R{ifmacrodef}{!ifmacrodef}, \\R{ifmacrondef}{!ifmacrondef}, \\R{verbose}{!verbose}, \\R{aaddbrandingimage}{AddBrandingImage}, \\R{asetallowskipfiles}{AllowSkipFiles}, \\R{achangeui}{ChangeUI}, \\R{acheckbitmap}{CheckBitmap}, \\R{createfont}{CreateFont}, \\R{adirvar}{DirVar}, \\R{adirverify}{DirVerify}, \\R{enablewindow}{EnableWindow}, \\R{afilebufsize}{FileBufSize}, \\R{flushini}{FlushINI}, \\R{sgetcurinsttype}{GetCurInstType}, \\R{getdlgitem}{GetDlgItem}, \\R{getinstdirerror}{GetInstDirError}, \\R{ifabort}{IfAbort}, \\R{ifsilent}{IfSilent}, \\R{initpluginsdir}{InitPluginsDir}, \\R{sinsttypegettext}{InstTypeGetText}, \\R{sinsttypesettext}{InstTypeSetText}, \\R{langstring}{LangString}, \\R{alicensebkcolor}{LicenseBkColor}, \\R{alicenseforceselection}{LicenseForceSelection}, \\R{licenselangstring}{LicenseLangString}, \\R{loadlanguagefile}{LoadLanguageFile}, \\R{lockwindow}{LockWindow}, \\R{page}{Page}, \\R{pageex}{PageEx}, \\R{reservefile}{ReserveFile}, \\R{sectiongetinsttypes}{SectionGetInstTypes}, \\R{ssectiongetsize}{SectionGetSize}, \\R{sectionsetinsttypes}{SectionSetInstTypes}, \\R{ssectionsetsize}{SectionSetSize}, \\R{setbrandingimage}{SetBrandingImage}, SetCompressionLevel, \\R{asetcompressor}{SetCompressor}, \\R{asetcompressordictsize}{SetCompressorDictSize}, \\R{setctlcolors}{SetCtlColors}, \\R{ssetcurinsttype}{SetCurInstType}, SetPluginUnload, \\R{setsilent}{SetSilent}, \\R{showwindow}{ShowWindow}, SubSection (replaced by \\R{ssectiongroup}{SectionGroup}), SubSectionEnd (replaced by \\R{ssectiongroupend}{SectionGroupEnd}), \\R{var}{Var}, \\R{viaddversionkey}{VIAddVersionKey}, \\R{viproductversion}{VIProductVersion} and \\R{axpstyle}{XPStyle}\n\n\\b Removed commands: DirShow, DisabledBitmap, EnabledBitmap and SectionDivider\n\n\\b All this and a smaller overhead! =)\n\n\\b A lot more... See below for more information\n\n\\S2{} Changes from RC4\n\n\\b Command line parser ignored any switches after tokens that are not switches\n\n\\b Last part of the path specified in \\R{ainstalldir}{InstallDir} was appended even if selected folder name was the same\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.70}: Improved documentation, new Init custom function for Welcome and Finish page\n\n\\b Added \\L{../Docs/StrFunc/StrFunc.txt}{StrFunc} by deguix\n\n\\b Updated and fixed language files\n\n\\b Updated, fixed and improved documentation\n\n\\H{v2.0rc4} 2.0 Release Candidate 4\n\nReleased on February 2nd, 2004\n\n\\S1{v2.0rc4-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b Fixed MBCS mishandling in exehead, InstallOptions and nsExec\n\n\\S2{} Minor Changes\n\n\\b Language files updates and fixes\n\n\\b Fixed logging (NSIS_CONFIG_LOG)\n\n\\b Fixed compile errors caused by removing some config.h options\n\n\\b NSIS compiles without PSDK again\n\n\\b Documentation fixes\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/NSISdl/ReadMe.txt}{NSISdl}: All potential and rare crashes should be completely fixed now\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: Fixed a rare crash related to ListItems and a small memory leak when using ValidateText\n\n\\H{v2.0rc3} 2.0 Release Candidate 3\n\nReleased on January 26th, 2004\n\n\\S1{v2.0rc3-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Fixed some bugs with LZMA/bzip2 and non-solid compression\n\n\\b Fixed a bug that caused escaping not to be ignored on extended !define lines\n\n\\b Language files updates and fixes\n\n\\b Fixed installer crash when certain language strings were not referenced in all languages\n\n\\b Some new and improved graphics\n\n\\b Made CreateShortcut case insensitive when parsing hot key\n\n\\b Some documentation improvements and fix-ups\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.69}: Made all uninstaller pages work without installer pages and fixed top text on uninstaller license page\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Fixed resize bug, fixed some UI issues in the settings dialog\n\n\\b NSIS Update: Improved UI\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions}: Fixed minor problems with the new NOTIFY flag\n\n\\H{v2.0rc2} 2.0 Release Candidate 2\n\nReleased on January 5th, 2004\n\n\\S1{v2.0rc2-cl} Changelog\n\n\\S2{} Minor Changes\n\n\\b Set focus to the main control in each page to ease keyboard control (plug-ins too)\n\n\\b LangStrings and user variables limit is now 16383 and is enforced\n\n\\b Fixed control colors set using \\R{setctlcolors}{SetCtlColors} not changing when the system colors were changed\n\n\\b Log window now responds to the context menu key\n\n\\b Fixed a bug which caused beeping when the space key is hit on the components tree\n\n\\b Added code to prevent weird usage of WM_COMMAND which can cause weird behavior\n\n\\b Fixed compile errors when NSIS_CONFIG_COMPONENTPAGE, NSIS_CONFIG_PLUGIN_SUPPORT or NSIS_SUPPORT_HWNDS are not defined\n\n\\b More language files updated to the latest version\n\n\\b Fixed CHM's script errors\n\n\\b Documentation improvements\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.4}: NOTIFY for link, drop list and list box; UI fixes and improvements. See IO's \\L{../Docs/InstallOptions/Changelog.txt}{change log} for a complete list\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: Improved user interface, added support for named symbol sets and fixed best compressor selector\n\n\\H{v2.0rc1} 2.0 Release Candidate 1\n\nReleased on December 27th, 2003\n\n\\S1{v2.0rc1-rn} Release Notes\n\n\\b Trying the LZMA compression method for your installer is recommended. It often gives a 20% better compression ratio.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.68}: The setting to change the title size on the Welcome page and Finish page has been changed\n\n\\S1{v2.0rc1-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b LZMA compression support. Added \\R{asetcompressordictsize}{SetCompresssorDictSize}.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.68}: New settings for extra space for title and text on Welcome page and Finish page, improved handling of verbose settings, language file string for uninstaller reboot information, more\n\n\\b Shell folders are now detected using shell API functions and not the registry. This is the recommended method by Microsoft. New constants have been added in the process ($FONTS, $SENDTO and more...). See \\k{varconstant} for more details.\n\n\\b Added \\L{../Examples/LogicLib.nsi}{LogicLib} to distribution (easier conditional execution etc.)\n\n\\b Added \\R{adirverify}{DirVerify} and \\R{getinstdirerror}{GetInstDirError} to allow custom error checking when the installation directory is invalid or the drive does not have enough space\n\n\\b Support for reading environmental variables at compile time: \\R{compenvvar}{$%envVarName%}\n\n\\b Added /SD parameter for \\R{messagebox}{MessageBox}. Allows to set default for silent installers.\n\n\\b New conditional compilation options: \\R{ifmacrodef}{!ifmacrodef} and \\R{ifmacrondef}{!ifmacrondef}.\n\n\\b New sections macros for mutually exclusive section selection\n\n\\b Improved RTL support by adding WS_EX_RTLREADING wherever possible\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.3}: Added new control type \"Button\", added new flag \"NOTIFY\", added new flag \"NOWORDWRAP\" for multi-line text boxes, reduced size down to 12K\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW}: More options to set the compression method\n\n\\b Zip2Exe 0.31: Fixed compression setting, LZMA compression support\n\n\\b \\L{../Docs/VPatch/Readme.html}{VPatch 2.1}: Better error handling and exit code for GenPat\n\n\\H{v2.0b4} 2.0 Beta 4\n\nReleased on November 19th, 2003\n\n\\S1{v2.0b4-rn} Release Notes\n\n\\b The /LANG parameter is no longer available for any text setting instructions. You must use a \\R{langstring}{LangString} if you want to make a certain text multilingual. This means you can also set one text for all languages. To make the license data multilingual you should use \\R{licenselangstring}{LicenseLangString}.\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.67}: Because of the new syntax for pages, renaming of settings and variable names etc., you have to make some changes to your scripts, see the \\L{../Docs/Modern UI/Readme.html}{Modern UI Readme} for details.\n\n\\b \\R{page}{Custom Pages} now have a leave function. As this parameter is placed before the caption you have to add another \"\" empty string for the title to work.\n\n\\b \\R{onselchange}{.onSelChange} is no longer called when the components page is created.\n\n\\b The icons folder has been renamed to Graphics and was reorganized. If you were using any files from Contrib\\\\Icons in your script, you should update it to point to the new image or icon path.\n\n\\b UpgradeDLL has been changed, it's \\e{highly recommend} that you include the new version in your script using \\c{!include \"UpgradeDLL.nsh\"} instead of the old one.\n\n\\S1{v2.0b4-cl} Changelog\n\n\\S2{} Major Changes\n\n\\b CHM documentation - searchable and comes with an index\n\n\\b User variables ($VARNAME) that can be declared with the \\R{var}{Var} command\n\n\\b Support for all pages in both installer and uninstaller. Components, directory and license pages can be used for the uninstaller\n\n\\b Improved large files handling (way lower requirements to compile a 2GB installer now)\n\n\\b Full support for RTL languages, including support for LTR and RTL languages in one installer\n\n\\b \\L{../Docs/Modern UI/Readme.html}{Modern UI 1.67}: New system & syntax for pages, settings (support for multiple pages of the same type, page specific settings, more customization options etc.), Welcome/Finish pages for uninstaller, \\R{alicenseforceselection}{LicenseForceSelection} support, new options for Finish page / language selection dialog, fixes, more\n\n\\b Extraction progress\n\n\\b No more unprocessed strings, variables can be used everywhere\n\n\\b Leave function for custom \\R{pages}{pages}: Input on InstallOptions pages can be validated using script code\n\n\\b Interface improvements: Better ClearType support, no more flickering\n\n\\b \\R{onmouseoversection}{OnMouseOver text} is only displayed when mouse over section\n\n\\b NLF language files (v6): language specific fonts, RTL and more strings\n\n\\b Inner LangStrings can be used in the script\n\n\\b No more /LANG, only LangStrings - easier to set one string to all languages\n\n\\b LangStrings are no longer installer/uninstaller specific (no un.)\n\n\\S2{} New/Changed Commands\n\n\\b Added \\R{pageex}{PageEx}, \\R{pagecallbacks}{PageCallbacks} and \\R{adirvar}{DirVar} - it's now a lot easier to add the same page type twice\n\n\\b Added \\R{afilebufsize}{FileBufSize}\n\n\\b Added \\R{viaddversionkey}{VIAddVersionKey}: add version information resource to the installer\n\n\\b Added \\R{asetallowskipfiles}{AllowSkipFiles}: set whether the user should be able to skip a file when overwriting failed\n\n\\b Added \\R{alicenseforceselection}{LicenseForceSelection}: checkbox or radio buttons on license page to let user agree with license or not\n\n\\b Added \\R{ssectionsetsize}{SectionSetSize}, \\R{ssectiongetsize}{SectionGetSize}, \\R{ssetcurinsttype}{SetCurInstType} and \\R{sgetcurinsttype}{GetCurInstType}\n\n\\b Replaced SetBkColor with \\R{setctlcolors}{SetCtlColors} which can set text color too\n\n\\b Added \\R{ifsilent}{IfSilent} and \\R{setsilent}{SetSilent} to allow better /S interaction\n\n\\b Added support for standard predefines: $\\{__DATE__\\}, $\\{__TIME__\\}, $\\{__TIMESTAMP__\\}, $\\{__FILE__\\}, $\\{__LINE__\\}\n\n\\b Added ifdiff and lastusd for \\R{asetoverwrite}{SetOverwrite}\n\n\\b /o Switch for \\R{ssection}{Section} provides ability to unselect the section by default\n\n\\b New parameter for DirText to set the browse dialog text\n\n\\b Added \\R{rmdir}{RMDir /REBOOTOK}: remove folders on reboot\n\n\\b \\R{ainsttype}{InstType} /NOCUSTOM and /COMPONENTSONLYONCUSTOM work together\n\n\\b Added base_dir for \\R{gettempfilename}{GetTempFileName}\n\n\\S2{} Minor Changes\n\n\\b RO sections can now be in \\R{ainsttype}{InstTypes} too (defaults to old behavior)\n\n\\b Increased limit of InstTypes to 32\n\n\\b Improved macros & functions: UpgradeDLL, GetParent, GetParameters. Using the new versions is recommended.\n\n\\b Fixed SetOutPath not setting current directory if the directory didn't exist before\n\n\\b Components tree: fixed problems with sub-sections with RO sections as children, SF_EXPAND now refreshes the components tree and added SF_PSELECTED for partially selected sub-sections\n\n\\b Improved \\R{aaddbrandingimage}{AddBrandingImage}: doesn't depend on the UI, can set image on the bottom and on the right, support for custom padding value\n\n\\b Better installation directory verification\n\n\\b Fixed all known problems with temporary files and directories\n\n\\b Documentation fixes\n\n\\b Minor bug fixes\n\n\\b Code clean-ups and some more comments\n\n\\b More...\n\n\\S2{} Utilities and Plug-ins\n\n\\b \\L{../Docs/makensisw/Readme.txt}{MakeNSISW 2.0}: UI to define symbols, easy access to recent scripts, toolbar and more\n\n\\b Zip2Exe 0.3: based on header files, improved interface, Modern UI support, new script code, improved folder detection\n\n\\b \\L{../Docs/InstallOptions/Readme.html}{InstallOptions 2.2}: added LINK control, added EXTENDEDSELECT flag for list boxes which replaces MULTISELECT that now acts exactly as the real style flag ([double] click turns on or off selection), fixes\n\n\\b BgImage plug-in stability fixes\n\n\\b Added vPatch: patch generator and plug-in that applies the patches\n\n\\b Banner plug-in improvements: responds to messages and some new /set tricks by brainsucker\n\n\\b AdvSpalsh plug-in improvements: smaller, better transparency support and a possible bug fix\n\n\\b System plug-in improvements: Unicode, GUID and COM support \n\n\\b nsExec plug-in improvements: ability to run 16 bit code and tabs to spaces conversion\n\n\\b Math plug-in\n\n\\b Delphi unit for NSIS plug-ins\n\n\\H{v2.0b3} 2.0 Beta 3\n\nReleased on March 16th, 2003\n\n\\b Modern UI 1.63: Header bitmap support, new defines to change the description area, single macro for language selection dialog, more!\n\n\\b New tutorial in the documentation\n\n\\b define_if_last in \\R{page}{Page} command also works when a define has not been specified for all \\R{page}{Page} commands.\\\\<br\\\\>This fixes the problem with the Modern UI \"Click Next\" / \"Click Install\" texts.\n\n\\b Added \\R{sectionsetinsttypes}{SectionSetInstTypes} and \\R{sectiongetinsttypes}{SectionGetInstTypes}\n\n\\b \\R{reboot}{Reboot} command does not force a reboot anymore (allows the user to save work)\n\n\\b !if[n]def/!else fixes\n\n\\b \\R{logset}{LogSet} on now really starts logging\n\n\\b Cancel button available on all pages after the instfiles page but the last page unless /ENABLECANCEL was used in its \\R{page}{Page} command\n\n\\b License page: No more limit on RTF size\n\n\\b LangDLL: Option to auto-count number of languages, shell font support\n\n\\b \\R{page}{Page} and \\R{uninstpage}{UninstPage} can not be used inside sections/functions\n\n\\b \\R{createdirectory}{CreateDirectory} now uses the error flag\n\n\\b \\R{enumregkey}{EnumRegKey}/Value output_var check fixed\n\n\\b Updated translations\n\n\\b Dreaded BSOD after plug-ins enumeration finally banished\n\n\\b Minimize button and \\R{abggradient}{BGGradient} and BGImage compatibility fixes\n\n\\b \\R{writeinistr}{WriteINIStr} with empty value works again\n\n\\b Added \\R{flushini}{FlushINI}\n\n\\H{v2.0b2} 2.0 Beta 2\n\nReleased on February 26th, 2003\n\n\\b NSIS Menu: links to all NSIS utilities, documentation and websites\n\n\\b NSIS Update: check for new releases, download latest development files\n\n\\b Dialer plugin to connect to the internet\n\n\\b Improved filename validation\n\n\\b VC7 compiler compatibility issues fixed\n\n\\b \\R{createdirectory}{CreateDirectory} sets error flag\n\n\\b InstallOptions: INI File State value fixed\n\n\\b Updated translations\n\n\\b Minor fixes\n\n\\H{v2.0b1} 2.0 Beta 1\n\nReleased on February 9th, 2003\n\n\\b User interface improvements: better order/grouping of controls, button selection problems fixed, added minimize box, transparent \\R{abrandingtext}{BrandingText}\n\n\\b \\R{langstring}{LangString} improvements: can be used before they have been defined, warning if not present in all language tables\n\n\\b New version of the Modern User Interface with UI improvements, bugfixes and some small new features\n\n\\b InstallOptions 2.0 with support for custom font and DPI settings, groupboxes, grouped controls, lots of bugfixes etc.\n\n\\b No more random compression ratios\n\n\\b \\R{setoutpath}{SetOutPath} now sets the working directory\n\n\\b File names are validated, directory given by the user will now always work\n\n\\b $QUICKLAUNCH now works with \\R{setshellvarcontext}{SetShellVarContext} all\n\n\\b Automatically appended directory name in the directory selection dialog will no longer contain squares if not all characters are ASCII.\n\n\\b Fixed a bug with remote drives and available space (\\\\\\\\remote\\\\drive)\n\n\\b Plug-in function's names are now case insensitive\n\n\\b Fixed a bug with specifying \\R{aicon}{Icon} twice\n\n\\b Include dirs (!addincludedir)\n\n\\b On leave function for pages\n\n\\b Installers can now really contain more than one branding image\n\n\\b All !if/!else/!endif problems should be solved now\n\n\\b SetFont \"MS Shell Dlg\" adds the DS_SHELLFONT style\n\n\\b Win9x rename on reboot now also works when the destination file does not exist\n\n\\b \\R{deleteregkey}{DeleteRegKey} works on default value\n\n\\b nsExec can be called from an installer executed by CreateProcess\n\n\\b \\R{writeuninstaller}{WriteUninstaller} sets error code\n\n\\b Banner.dll compatible with Modern UI\n\n\\b Fixed focus problems in MakeNSISw\n\n\\b Updated and new translations\n\n\\b Some new bitmaps for the MUI by Virtlink\n\n\\b Faster and better MakeNSISw integration\n\n\\b \\R{detect.netframework}{New .NET Framework detection function}\n\n\\b Minor bugfixes\n\n\\b Code clean-ups (compiles on VC7)\n\n\\H{v2.0b0} 2.0 Beta 0\n\nReleased on December 6th, 2002\n\n\\b New paging system\n\n\\b Added \\R{page}{Page} and  \\R{uninstpage}{UninstPage}\n\n\\b Removed .onNextPage, .onPrevPage, .onInitDialog\n\n\\b New easier version of the Modern User Interface with better multilanguage support, InstallOptions integration, welcome and finish page etc.\n\n\\b Custom pages no longer flicker when created\n\n\\b Added accelerator keys\n\n\\b Added \\R{langstring}{LangString} and LangStringUP for user defined multilingual strings\n\n\\b Added support for transparent check marks\n\n\\b Added InitPluginsDir\n\n\\b Renamed nsisconf.nsi to nsisconf.nsh\n\n\\b Added CreateShortcut comment/description parameter\n\n\\b Splash.exe is now a plugin (splash.dll)\n\n\\b Added new plugins: System, AdvSplash, nsExec, UserInfo, BgImage, Banner and StartMenu\n\n\\b !ifdef and friends can now be used in macros\n\n\\b \\R{sendmessage}{SendMessage} can send strings (put \\cw{STR:} before a param) and supports timeouts\n\n\\b Right mouse button \"Copy to clipboard\" context menu for the Details window\n\n\\b Plugin syntax now requires dll name, e.g. dll::func not just func\n\n\\b Licence text receives initial focus (page up & down work immediately, return key still works)\n\n\\b Made Win9x move/delete on reboot support proper and function like on Win2k\n\n\\b Now always loads RichEdit v2 if present (links work on Win9x)\n\n\\b \\R{deleteregkey}{DeleteRegKey} now complains if given a third parameter (other than /ifempty)\n\n\\b \\R{regdll}{RegDLL} now works with DLLs dependent on DLLs from the same directory\n\n\\b $\\{LANG_langName\\} defined as the language id when loading a NLF\n\n\\b Fixed a few bugs that caused the installer to load slower than before\n\n\\b Uninstall can now get command line parameters too\n\n\\b Added ReserveFile\n\n\\b Added ExDLL.h\n\n\\b Included makensisw 1.9 (lots of changes)\n\n\\b Updated InstallOptions\n\n\\b Updated ZIP2EXE\n\n\\b Updated HTTP download plugin, NSIS-dl (timeout added, better proxy detection)\n\n\\b A lot of new language files\n\n\\b A lot of new icons and check marks\n\n\\b Changed section flags values\n\n\\b \\R{sectionsetflags}{SectionSetFlags} can now set bold too\n\n\\b \\R{sectionsetflags}{SectionSetFlags} now works in silent installers too\n\n\\b SectionSetName for sub sections doesn't need '-' in front of the name\n\n\\b Added SetPluginUnload\n\n\\b Hidden section can now use \\R{ssectionin}{SectionIn} too\n\n\\b \\R{file}{File} /nonfatal switch added\n\n\\b Plugins no longer add size to their containing section\n\n\\b Defines can now be used inside define names ($\\{bla$\\{blo\\}\\})\n\n\\b New docs format (WOOHA!)\n\n\\b EXE header size a lot smaller, 33.5KB for bzip2 and 34KB for zlib\n\n\\b Lots of other bugs fixed...\n\n\\H{v2.0a7} 2.0 Alpha 7\n\nReleased on August 29th, 2002\n\n\\b Can now select the language from .onInit ($LANGUAGE is a variable)\n\n\\b Added CreateFont\n\n\\b Added \\R{onmouseoversection}{.onMouseOverSection}\n\n\\b Added .onInitDialog and un.onInitDialog\n\n\\b Added SetStaticBkColor\n\n\\b Disabled UseOuterUIItem\n\n\\b SendMessage WM_SETTEXT treats lParam as a string and not a number\n\n\\b \\R{copyfiles}{CopyFiles} script message no longer always prints (silent)\n\n\\b Custom install type text can now be changed\n\n\\b \\R{achangeui}{ChangeUI} can now change IDD_VERIFY\n\n\\b Default license color now fits the user system\n\n\\b Summary reports the right number of required sections\n\n\\b Checkbox is only required in IDD_DIR if logging is enabled\n\n\\b Not using /LANG now really causes the script compiler to use the last used language\n\n\\b Fixed a bug with MBCS and the uninstaller text\n\n\\b MBCS to Unicode and Unicode to MBCS conversion bugs fixed\n\n\\b Fixed a bug that caused RTF not to show on Windows 9x\n\n\\b Added a dialog that shows up if compress whole is used and initial decompressing lasts longer than a second\n\n\\b Updated to InstallOptions 1.3\n\n\\b MakeNSISw 1.7 included\n\n\\b Added modern UI by Joost Verburg (Examples\\\\Modern UI)\n\n\\b Added new full color icons by adni18\n\n\\b Added Dutch, Korean, Russian, Swedish and Traditional Chinese language files\n\n\\b Updated Spanish language file version (thanks to LsMoNKi)\n\n\\b Added /TRIM(LEFT|RIGHT|CENTER) for BrandingText\n\n\\b EXE header size down to 36.5KB\n\n\\b Added yi-pixel.ico and yi-pixel-uninstall.ico by Jan T. Sott\n\n\\b Fixed a bug with macros at the end of the file\n\n\\b Sub-sections can now have defined names too\n\n\\b Added LangDLL.dll plugin\n\n\\b \\R{callinstdll}{CallInstDLL} /NOUNLOAD added (works on plugin calls too)\n\n\\H{v2.0a6} 2.0 Alpha 6\n\nReleased on August 10th, 2002\n\n\\b Fixed two bugs with the plug-in mechanism\n\n\\b Fixed infinite loop bug\n\n\\H{v2.0a5} 2.0 Alpha 5\n\nReleased on August 9th, 2002\n\n\\b Added UseOuterUIItem\n\n\\b Enhanced \\R{achangeui}{ChangeUI}\n\n\\b Enhanced SetDlgItemText\n\n\\b Added one-section.nsi example file\n\n\\b Optimized Ximon's code for plug-in DLLs (back to 37KB)\n\n\\b If default user language doesn't fit exactly, will try to find primary language match\n\n\\b Fixed some strings that got replaced (space available and required etc.)\n\n\\b Compiles without MS Platform SDK\n\n\\b Included Spanish.nlf\n\n\\b Included MagicLime.exe by snowchyld\n\n\\H{v2.0a4} 2.0 Alpha 4\n\nReleased on August 5th, 2002\n\n\\b Added automatic detection, packing, unpacking and deletion of plugin dlls\n\n\\b Added simplified calling syntax for plugin dlls\n\n\\b Added PluginDir\n\n\\H{v2.0a3} 2.0 Alpha 3\n\nReleased on August 4th, 2002\n\n\\b Added \\R{loadlanguagefile}{LoadLanguageFile}\n\n\\b Added $LANGUAGE\n\n\\b Added /LANG option to string setters (\\R{aname}{Name}, \\R{acaption}{Caption}, etc.)\n\n\\b 'LogSet on' now builds a log file if not already created\n\n\\H{v2.0a2} 2.0 Alpha 2\n\nReleased on July 31st, 2002\n\n\\b Added $\\{NSISDIR\\}\n\n\\b Added \\R{axpstyle}{XPStyle}\n\n\\b Added \\R{asetfont}{SetFont}\n\n\\b Added \\R{achangeui}{ChangeUI}\n\n\\b Added AddBrandingImage, and \\R{setbrandingimage}{SetBrandingImage}\n\n\\b Added  \\R{asetcompressor}{SetCompressor} (no more makensis-bz2.exe)\n\n\\b Added \\R{alicensebkcolor}{LicenseBkColor}\n\n\\b 'SpaceTexts none' now causes no space texts to appear\n\n\\b \\R{aicon}{Icon} and \\R{auninstallicon}{UninstallIcon} now support icons of any type\n\n\\b \\R{acheckbitmap}{CheckBitmap} now support bitmaps with any color table/depth\n\n\\b Unused resources are removed before writing out the installer\n\n\\b Documented \\R{error}{!error} and \\R{warning}{!warning}\n\n\\b Added \\R{echo}{!echo} and \\R{verbose}{!verbose}\n\n\\b Added force option for \\R{acrccheck}{CRCCheck}\n\n\\b Updated to Makensisw 1.6\n\n\\b Updated to InstallOptions 1.2\n\n\\b Installer can now be compressed using UPX\n\n\\b A hint is shown if a line is longer than the detail window\n\n\\b Modern style folder select dialog\n\n\\b License data can now be RTF\n\n\\b \\R{awindowicon}{WindowIcon} is now handled in the compiler\n\n\\b Removed debug version (it never worked anyway)\n\n\\b Faster compile time (WIN32_LEAN_AND_MEAN)\n\n\\H{v2.0a1} 2.0 Alpha 1\n\nReleased on July 9th, 2002\n\n\\b Added expand node option to \\R{ssection}{Section} and SubSection\n\n\\b Added preserve file attribute option to \\R{file}{File} command\n\n\\b Copy-All bug fix in Makensisw\n\n\\b Added NSISDIR to the define list\n\n\\b Reorganized NSIS directory structure\n\n\\H{v2.0a0} 2.0 Alpha 0\n\nReleased on May 22nd, 2002\n\n\\b TreeView component list (care of Jeff Doozan)\n\n\\b No more SectionDivider, but SubSection and SubSectionEnd.\n\n\\b No more EnabledBitmap/DisabledBitmap, just \\R{acheckbitmap}{CheckBitmap}. (with tons of button states)\n\n\\b Bugfixes of brokenness.\n\n\\b Added ! for \\R{ssection}{Section}/SubSection to make bold.\n\n\\b Made config.h have hacks for easier building for me. :)\n\n\\H{cl-older} Older Versions\n\n\\W{http://wayback.archive.org/web/20100820151646/http://www.nullsoft.com/free/nsis/version-history.html}{NSIS 1.x version history}\n", "/*\r\n * build.cpp\r\n * \r\n * This file is a part of NSIS.\r\n * \r\n * Copyright (C) 1999-2023 Nullsoft and Contributors\r\n * \r\n * Licensed under the zlib/libpng license (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * \r\n * Licence details can be found in the file COPYING.\r\n * \r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.\r\n *\r\n * Unicode support added by Jim Park -- 08/07/2007\r\n */\r\n\r\n#include \"tchar.h\"\r\n#include \"Platform.h\"\r\n#include <stdio.h>\r\n#include \"exehead/config.h\"\r\n\r\n#include <nsis-version.h>\r\n\r\n#include \"build.h\"\r\n#include \"util.h\"\r\n#include \"fileform.h\"\r\n#include \"writer.h\"\r\n#include \"crc32.h\"\r\n#include \"manifest.h\"\r\n#include \"icon.h\"\r\n#include \"utf.h\" // For NStream\r\n#include \"BinInterop.h\"\r\n\r\n#include \"exehead/api.h\"\r\n#include \"exehead/resource.h\"\r\n\r\n#include <stdexcept>\r\n\r\n#include \"ResourceEditor.h\"\r\n#include \"DialogTemplate.h\"\r\n#include \"ResourceVersionInfo.h\"\r\n#include \"tstring.h\"\r\n\r\n#include <stdio.h>\r\n#include <stdarg.h>\r\n#ifndef _WIN32\r\n#  include <locale.h>\r\n#  include <unistd.h>\r\n#  include <limits.h>\r\n#  include <stdlib.h>\r\n#endif\r\n\r\n#include <cassert> // for assert\r\n\r\n#define RET_UNLESS_OK( function_rc ) do { \\\r\n  int rc = (function_rc); \\\r\n  if ( rc != PS_OK) \\\r\n    return rc; \\\r\n} while (false)\r\n\r\nusing namespace std;\r\n\r\nnamespace { // begin anonymous namespace\r\n\r\nbool isSimpleChar(TCHAR ch)\r\n{\r\n  return (ch == _T('.') ) || (ch == _T('_') ) || (ch >= _T('0') && ch <= _T('9')) || (ch >= _T('A') && ch <= _T('Z')) || (ch >= _T('a') && ch <= _T('z'));\r\n}\r\n\r\n} // end of anonymous namespace\r\n\r\nnamespace MakensisAPI {\r\n#ifdef _WIN64\r\n  const TCHAR* SigintEventNameFmt = _T(\"makensis win32 sigint event %Iu\"); // %u is the notify HWND, this is to make sure we abort the correct instance\r\n#else\r\n  const TCHAR* SigintEventNameFmt = _T(\"makensis win32 sigint event %u\");\r\n#endif\r\n  const TCHAR* SigintEventNameLegacy = _T(\"makensis win32 signint event\"); // \"sigNint\" typo is part of the API now and cannot be changed\r\n}\r\n\r\nconst WORD DefaultPEDllCharacteristics = IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE|IMAGE_DLLCHARACTERISTICS_NO_SEH|IMAGE_DLLCHARACTERISTICS_NX_COMPAT|IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE; //forums.winamp.com/showthread.php?t=344755\r\n\r\nvoid CEXEBuild::define(const TCHAR *p, const TCHAR *v)\r\n{\r\n  definedlist.add(p,v);\r\n}\r\n\r\nCEXEBuild::~CEXEBuild()\r\n{\r\n  free_loaded_icon(installer_icon);\r\n  free_loaded_icon(uninstaller_icon);\r\n\r\n  delete [] m_exehead;\r\n\r\n  int nlt = lang_tables.getlen() / sizeof(LanguageTable);\r\n  LanguageTable *nla = (LanguageTable*)lang_tables.get();\r\n\r\n  for (int i = 0; i < nlt; i++)\r\n    DeleteLangTable(nla+i);\r\n\r\n  if (postbuild_cmds) postbuild_cmds->delete_all();\r\n  if (postubuild_cmds) postubuild_cmds->delete_all();\r\n}\r\n\r\nCEXEBuild::CEXEBuild(signed char pponly, bool warnaserror) :\r\n  preprocessonly(pponly),\r\n  m_exehead(0),\r\n  m_exehead_size(0)\r\n{\r\n  set_verbosity(3);\r\n  if (warnaserror) diagstate.set_warning_as_error();\r\n\r\n  curlinereader=0;\r\n  curfilename=0, linecnt=0;\r\n  cur_ifblock=NULL;\r\n  last_line_had_slash=0;\r\n  inside_comment=false;\r\n  multiple_entries_instruction=0;\r\n\r\n  build_include_depth=0;\r\n\r\n  has_called_write_output=false;\r\n\r\n  ns_func.add(_T(\"\"),0); // make sure offset 0 is special on these (i.e. never used by a label)\r\n  ns_label.add(_T(\"\"),0);\r\n\r\n  definedlist.add(_T(\"NSIS_VERSION\"), NSIS_VERSION);\r\n  definedlist.add(_T(\"NSIS_PACKEDVERSION\"), NSIS_PACKEDVERSION);\r\n\r\n  m_target_type=TARGET_X86UNICODE;\r\n#ifdef _WIN32\r\n  if (sizeof(void*) > 4) m_target_type = TARGET_AMD64; // BUGBUG: scons 'TARGET_ARCH' should specify the default\r\n#endif\r\n#ifdef _M_ARM64\r\n  m_target_type = TARGET_ARM64; // BUGBUG: scons 'TARGET_ARCH' should specify the default\r\n#endif\r\n  build_unicode=TARGET_X86ANSI != m_target_type;\r\n  build_lockedunicodetarget=false;\r\n\r\n  // automatically generated header file containing all defines\r\n#include <nsis-defines.h>\r\n\r\n  // no longer optional\r\n  definedlist.add(_T(\"NSIS_SUPPORT_STANDARD_PREDEFINES\"));\r\n  definedlist.add(_T(\"NSIS_SUPPORT_NAMED_USERVARS\"));\r\n  definedlist.add(_T(\"NSIS_SUPPORT_LANG_IN_STRINGS\"));\r\n\r\n#ifdef _WIN32\r\n  definedlist.add(_T(\"NSIS_WIN32_MAKENSIS\"));\r\n#endif\r\n#ifdef _UNICODE\r\n  definedlist.add(_T(\"NSIS_UNICODE_MAKENSIS\")); // This define might go away once makensis.exe is always unicode\r\n#endif\r\n  if (sizeof(void*) > 4) definedlist.add(_T(\"NSIS_MAKENSIS64\"));\r\n\r\n  db_opt_save=db_opt_save_u=db_full_size=db_full_size_u=0;\r\n  db_comp_save=db_comp_save_u=0;\r\n\r\n  // Added by Amir Szekely 31st July 2002\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  compressor = &zlib_compressor;\r\n#endif\r\n  build_compressor_set = false;\r\n  build_compressor_final = false;\r\n  build_compress_whole = false;\r\n  build_compress=1;\r\n  build_compress_level=9;\r\n  build_compress_dict_size=1<<23;\r\n\r\n  cur_entries=&build_entries;\r\n  cur_instruction_entry_map=&build_instruction_entry_map;\r\n  cur_datablock=&build_datablock;\r\n  cur_datablock_cache=&build_datablock_cache;\r\n  cur_functions=&build_functions;\r\n  cur_labels=&build_labels;\r\n  cur_sections=&build_sections;\r\n  cur_header=&build_header;\r\n  cur_strlist=&build_strlist;\r\n  cur_langtables=&build_langtables;\r\n  cur_ctlcolors=&build_ctlcolors;\r\n  cur_pages=&build_pages;\r\n  cur_page=0;\r\n  cur_page_type=-1;\r\n\r\n  build_filebuflen=32<<20; // 32mb\r\n\r\n  sectiongroup_open_cnt=0;\r\n  build_cursection_isfunc=0;\r\n  build_cursection=NULL;\r\n  // init public data.\r\n  build_packname[0]=build_packcmd[0]=build_output_filename[0]=0;\r\n  postbuild_cmds=postubuild_cmds=NULL;\r\n\r\n  // Added by ramon 23 May 2003\r\n  build_allowskipfiles=1;\r\n\r\n  // Added by ramon 6 jun 2003\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\n  version_fixedflags=0;\r\n#endif\r\n\r\n  build_overwrite=build_last_overwrite=0;\r\n  build_crcchk=1;\r\n  build_datesave=1;\r\n  build_optimize_datablock=1;\r\n\r\n  memset(&build_header,-1,sizeof(build_header));\r\n\r\n  build_header.install_reg_rootkey=0;\r\n  build_header.flags=CH_FLAGS_NO_ROOT_DIR;\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  build_header.lb_bg=RGB(0,0,0);\r\n  build_header.lb_fg=RGB(0,255,0);\r\n#endif\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n  build_header.license_bg=-COLOR_BTNFACE;\r\n#endif\r\n  build_header.install_directory_ptr=0;\r\n  build_header.install_directory_auto_append=0;\r\n  build_header.install_reg_key_ptr=0;\r\n  build_header.install_reg_value_ptr=0;\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  memset(build_header.install_types,0,sizeof(build_header.install_types));\r\n#endif\r\n  memset(&build_header.blocks,0,sizeof(build_header.blocks));\r\n\r\n  uninstall_mode=0;\r\n  uninstall_size_full=0;\r\n  uninstall_size=UINT_MAX;\r\n\r\n  memset(&build_uninst,-1,sizeof(build_uninst));\r\n\r\n  build_header.install_reg_rootkey=0;\r\n  build_uninst.flags=0;\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  build_uninst.lb_bg=RGB(0,0,0);\r\n  build_uninst.lb_fg=RGB(0,255,0);\r\n#endif\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n  build_uninst.license_bg=-COLOR_BTNFACE;\r\n#endif\r\n  build_uninst.install_directory_ptr=0;\r\n  build_uninst.install_directory_auto_append=0;\r\n  build_uninst.install_reg_key_ptr=0;\r\n  build_uninst.install_reg_value_ptr=0;\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  memset(build_uninst.install_types,0,sizeof(build_uninst.install_types));\r\n#endif\r\n  memset(&build_uninst.blocks,0,sizeof(build_uninst.blocks));\r\n\r\n  uninstaller_writes_used=0;\r\n\r\n  build_strlist.addemptystring();\r\n  ubuild_strlist.addemptystring();\r\n\r\n  build_langstring_num=0;\r\n  ubuild_langstring_num=0;\r\n\r\n  build_font[0]=0;\r\n  build_font_size=0;\r\n\r\n  m_unicon_size=0;\r\n\r\n  branding_image_found=false;\r\n\r\n  no_space_texts=false;\r\n\r\n  m_currentmacroname=NULL;\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  build_plugin_unload=0;\r\n  m_pPlugins=0;\r\n#endif\r\n\r\n  last_used_lang=NSIS_DEFAULT_LANG;\r\n\r\n  res_editor=0;\r\n\r\n  PEDllCharacteristics = DefaultPEDllCharacteristics;\r\n  PESubsysVerMaj = PESubsysVerMin = (WORD) -1;\r\n  manifest_flags = manifest::flags_default;\r\n  manifest_comctl = manifest::comctl_old;\r\n  manifest_exec_level = manifest::exec_level_admin;\r\n  manifest_dpiaware = manifest::dpiaware_notset;\r\n  manifest_lpaware = manifest::lpaware_notset;\r\n  manifest_sosl.setdefault();\r\n\r\n  enable_last_page_cancel=0;\r\n  uenable_last_page_cancel=0;\r\n\r\n  license_res_id=IDD_LICENSE;\r\n\r\n  disable_window_icon=0;\r\n\r\n  notify_hwnd=0;\r\n\r\n#ifdef NSIS_SUPPORT_BGBG\r\n  bg_default_font.lfHeight=40;\r\n  bg_default_font.lfWidth=0;\r\n  bg_default_font.lfEscapement=0;\r\n  bg_default_font.lfOrientation=0;\r\n  bg_default_font.lfWeight=FW_BOLD;\r\n  bg_default_font.lfItalic=TRUE;\r\n  bg_default_font.lfUnderline=FALSE;\r\n  bg_default_font.lfStrikeOut=FALSE;\r\n  bg_default_font.lfCharSet=DEFAULT_CHARSET;\r\n  bg_default_font.lfOutPrecision=OUT_DEFAULT_PRECIS;\r\n  bg_default_font.lfClipPrecision=CLIP_DEFAULT_PRECIS;\r\n  bg_default_font.lfQuality=DEFAULT_QUALITY;\r\n  bg_default_font.lfPitchAndFamily=DEFAULT_PITCH;\r\n  my_strncpy(bg_default_font.lfFaceName,_T(\"Times New Roman\"),LF_FACESIZE);\r\n  memcpy(&bg_font,&bg_default_font,sizeof(LOGFONT));\r\n#endif\r\n\r\n  defcodepage_set=false;\r\n  uDefCodePage=CP_ACP;\r\n\r\n  InitLangTables();\r\n\r\n  // Register static user variables $0, $1 and so on\r\n  // with ONE of reference count, to avoid warning on these vars\r\n  TCHAR Aux[3];\r\n  int i;\r\n  for (i = 0; i < 10; i++)    // 0 - 9\r\n  {\r\n    wsprintf(Aux, _T(\"%d\"), i);\r\n    m_UserVarNames.add(Aux,1);\r\n  }\r\n  for (i = 0; i < 10; i++)        // 10 - 19\r\n  {\r\n    wsprintf(Aux, _T(\"R%d\"), i);\r\n    m_UserVarNames.add(Aux,1);\r\n  }\r\n  m_UserVarNames.add(_T(\"CMDLINE\"),1);       // 20 everything before here doesn't have trailing slash removal\r\n  m_UserVarNames.add(_T(\"INSTDIR\"),1);       // 21\r\n  m_UserVarNames.add(_T(\"OUTDIR\"),1);        // 22\r\n  m_UserVarNames.add(_T(\"EXEDIR\"),1);        // 23\r\n  m_UserVarNames.add(_T(\"LANGUAGE\"),1);      // 24\r\n  m_UserVarNames.add(_T(\"TEMP\"),-1);         // 25\r\n  m_UserVarNames.add(_T(\"PLUGINSDIR\"),-1);   // 26\r\n  m_UserVarNames.add(_T(\"EXEPATH\"),-1);      // 27\r\n  m_UserVarNames.add(_T(\"EXEFILE\"),-1);      // 28\r\n  m_UserVarNames.add(_T(\"HWNDPARENT\"),-1);   // 29\r\n  m_UserVarNames.add(_T(\"_CLICK\"),-1);       // 30\r\n  m_UserVarNames.add(_T(\"_OUTDIR\"),1);       // 31 Note: nsDialogs also uses this\r\n\r\n  m_iBaseVarsNum = m_UserVarNames.getnum();\r\n\r\n  m_ShellConstants.add(_T(\"WINDIR\"),CSIDL_WINDOWS,CSIDL_WINDOWS);\r\n  m_ShellConstants.add(_T(\"SYSDIR\"),CSIDL_SYSTEM,CSIDL_SYSTEM);\r\n  m_ShellConstants.add(_T(\"SMPROGRAMS\"),CSIDL_PROGRAMS, CSIDL_COMMON_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"SMSTARTUP\"),CSIDL_STARTUP, CSIDL_COMMON_STARTUP);\r\n  m_ShellConstants.add(_T(\"DESKTOP\"),CSIDL_DESKTOPDIRECTORY, CSIDL_COMMON_DESKTOPDIRECTORY);\r\n  m_ShellConstants.add(_T(\"STARTMENU\"),CSIDL_STARTMENU, CSIDL_COMMON_STARTMENU);\r\n  m_ShellConstants.add(_T(\"QUICKLAUNCH\"), CSIDL_APPDATA, CSIDL_APPDATA);\r\n  m_ShellConstants.add(_T(\"DOCUMENTS\"),CSIDL_PERSONAL, CSIDL_COMMON_DOCUMENTS);\r\n  m_ShellConstants.add(_T(\"SENDTO\"),CSIDL_SENDTO, CSIDL_SENDTO);\r\n  m_ShellConstants.add(_T(\"RECENT\"),CSIDL_RECENT, CSIDL_RECENT);\r\n  m_ShellConstants.add(_T(\"FAVORITES\"),CSIDL_FAVORITES, CSIDL_COMMON_FAVORITES);\r\n  m_ShellConstants.add(_T(\"MUSIC\"),CSIDL_MYMUSIC, CSIDL_COMMON_MUSIC);\r\n  m_ShellConstants.add(_T(\"PICTURES\"),CSIDL_MYPICTURES, CSIDL_COMMON_PICTURES);\r\n  m_ShellConstants.add(_T(\"VIDEOS\"),CSIDL_MYVIDEO, CSIDL_COMMON_VIDEO);\r\n  m_ShellConstants.add(_T(\"NETHOOD\"), CSIDL_NETHOOD, CSIDL_NETHOOD);\r\n  m_ShellConstants.add(_T(\"FONTS\"), CSIDL_FONTS, CSIDL_FONTS);\r\n  m_ShellConstants.add(_T(\"TEMPLATES\"), CSIDL_TEMPLATES, CSIDL_COMMON_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"APPDATA\"), CSIDL_APPDATA, CSIDL_COMMON_APPDATA); // Note: There is no all-users roaming appdata folder.\r\n  m_ShellConstants.add(_T(\"LOCALAPPDATA\"), CSIDL_LOCAL_APPDATA, CSIDL_COMMON_APPDATA);\r\n  m_ShellConstants.add(_T(\"PRINTHOOD\"), CSIDL_PRINTHOOD, CSIDL_PRINTHOOD);\r\n  //m_ShellConstants.add(_T(\"ALTSTARTUP\"), CSIDL_ALTSTARTUP, CSIDL_COMMON_ALTSTARTUP);\r\n  m_ShellConstants.add(_T(\"INTERNET_CACHE\"), CSIDL_INTERNET_CACHE, CSIDL_INTERNET_CACHE);\r\n  m_ShellConstants.add(_T(\"COOKIES\"), CSIDL_COOKIES, CSIDL_COOKIES);\r\n  m_ShellConstants.add(_T(\"HISTORY\"), CSIDL_HISTORY, CSIDL_HISTORY);\r\n  m_ShellConstants.add(_T(\"PROFILE\"), CSIDL_PROFILE, CSIDL_PROFILE);\r\n  m_ShellConstants.add(_T(\"ADMINTOOLS\"), CSIDL_ADMINTOOLS, CSIDL_COMMON_ADMINTOOLS);\r\n  m_ShellConstants.add(_T(\"RESOURCES\"), CSIDL_RESOURCES, CSIDL_RESOURCES);\r\n  m_ShellConstants.add(_T(\"RESOURCES_LOCALIZED\"), CSIDL_RESOURCES_LOCALIZED, CSIDL_RESOURCES_LOCALIZED);\r\n  m_ShellConstants.add(_T(\"CDBURN_AREA\"), CSIDL_CDBURN_AREA, CSIDL_CDBURN_AREA);\r\n\r\n  // Constants that are not affected by SetShellVarContext\r\n  m_ShellConstants.add(_T(\"USERAPPDATA\"), CSIDL_APPDATA, CSIDL_APPDATA|0x40); // 0x40 to differentiate it from $QUICKLAUNCH\r\n  m_ShellConstants.add(_T(\"USERLOCALAPPDATA\"), CSIDL_LOCAL_APPDATA, CSIDL_LOCAL_APPDATA);\r\n  m_ShellConstants.add(_T(\"USERTEMPLATES\"), CSIDL_TEMPLATES, CSIDL_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"USERSTARTMENU\"), CSIDL_STARTMENU, CSIDL_STARTMENU);\r\n  m_ShellConstants.add(_T(\"USERSMPROGRAMS\"), CSIDL_PROGRAMS, CSIDL_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"USERDESKTOP\"), CSIDL_DESKTOPDIRECTORY, CSIDL_DESKTOPDIRECTORY);\r\n  m_ShellConstants.add(_T(\"COMMONLOCALAPPDATA\"), CSIDL_COMMON_APPDATA, CSIDL_COMMON_APPDATA);\r\n  m_ShellConstants.add(_T(\"COMMONPROGRAMDATA\"), CSIDL_COMMON_APPDATA, CSIDL_COMMON_APPDATA); // a.k.a. %ProgramData%\r\n  m_ShellConstants.add(_T(\"COMMONTEMPLATES\"), CSIDL_COMMON_TEMPLATES, CSIDL_COMMON_TEMPLATES);\r\n  m_ShellConstants.add(_T(\"COMMONSTARTMENU\"), CSIDL_COMMON_STARTMENU, CSIDL_COMMON_STARTMENU);\r\n  m_ShellConstants.add(_T(\"COMMONSMPROGRAMS\"), CSIDL_COMMON_PROGRAMS, CSIDL_COMMON_PROGRAMS);\r\n  m_ShellConstants.add(_T(\"COMMONDESKTOP\"), CSIDL_COMMON_DESKTOPDIRECTORY, CSIDL_COMMON_DESKTOPDIRECTORY);\r\n\r\n  // PROGRAMFILES&COMMONFILES does a registry lookup and the required string offsets are filled in later.\r\n  // We do this later because the unicode mode has to be locked when we call add_string...\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES\"),   0, 0);\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES32\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"PROGRAMFILES64\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES\"),   0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES32\"), 0, 0);\r\n  m_ShellConstants.add(_T(\"COMMONFILES64\"), 0, 0);\r\n\r\n  set_uninstall_mode(0);\r\n  set_code_type_predefines();\r\n}\r\n\r\nvoid CEXEBuild::initialize(const TCHAR *makensis_path)\r\n{\r\n  tstring nsis_dir;\r\n  const TCHAR *dir = _tgetenv(_T(\"NSISDIR\"));\r\n  if (dir) nsis_dir = dir;\r\n  else {\r\n#ifndef NSIS_CONFIG_CONST_DATA_PATH\r\n    nsis_dir = get_dir_name(get_executable_dir(makensis_path));\r\n#else\r\n    nsis_dir = _T(PREFIX_DATA);\r\n#endif\r\n  }\r\n  definedlist.add(_T(\"NSISDIR\"), nsis_dir.c_str());\r\n\r\n  tstring includes_dir = nsis_dir;\r\n  includes_dir += PLATFORM_PATH_SEPARATOR_STR _T(\"Include\");\r\n  include_dirs.add(includes_dir.c_str(),0);\r\n\r\n  stubs_dir = nsis_dir;\r\n  stubs_dir += PLATFORM_PATH_SEPARATOR_STR _T(\"Stubs\");\r\n\r\n  if (set_compressor(_T(\"zlib\"), false) != PS_OK || set_target_architecture_data() != PS_OK)\r\n  {\r\n    throw runtime_error(\"error setting default stub\");\r\n  }\r\n\r\n  tstring uninst = stubs_dir + PLATFORM_PATH_SEPARATOR_STR + _T(\"uninst\");\r\n  uninstaller_icon = load_icon_file(uninst.c_str());\r\n  changed_target = false;\r\n}\r\n\r\n\r\nint CEXEBuild::getcurdbsize() { return cur_datablock->getlen(); }\r\n\r\n\r\nvoid CEXEBuild::init_shellconstantvalues()\r\n{\r\n  static bool done = false;\r\n  if (done) return ; else done = true;\r\n\r\n  const int orgunmode = uninstall_mode, t64 = is_target_64bit(), reg = 0x80, r32 = t64 ? 0xC0 : reg, r64 = r32 ^ 0x40;\r\n  set_uninstall_mode(0);\r\n  // Note: The order matters because some of the strings are preprocessed and cf must be <= 0x40\r\n  unsigned int pf       = add_asciistring(_T(\"ProgramFilesDir\"), 0);\r\n  unsigned int cf       = add_asciistring(_T(\"CommonFilesDir\"), 0);\r\n  unsigned int pf_def   = add_asciistring(_T(\"C:\\\\Program Files\")); // Ultimate fallback\r\n  // TODO: 64-bit targets could use CSIDL_PROGRAM_FILES+CSIDL_PROGRAM_FILESX86?\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES\"),   reg | pf, pf_def);\r\n  unsigned int pf_var = add_asciistring(_T(\"$PROGRAMFILES\")); // Fallback for the 32/64 specific constants if the WOW registry view fails\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES32\"), r32 | pf, reg != r32 ? pf_var : pf_def);\r\n  m_ShellConstants.set_values(_T(\"PROGRAMFILES64\"), r64 | pf, reg != r64 ? pf_var : pf_def);\r\n  unsigned int cf_def   = add_asciistring(_T(\"$PROGRAMFILES\\\\Common Files\"));\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES\"),    reg | cf, cf_def);\r\n  unsigned int cf_var = add_asciistring(_T(\"$COMMONFILES\"));\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES32\"),  r32 | cf, reg != r32 ? cf_var : cf_def);\r\n  m_ShellConstants.set_values(_T(\"COMMONFILES64\"),  r64 | cf, reg != r64 ? cf_var : cf_def);\r\n\r\n  if ( (pf >= 0x40 || pf_def >= 0xFF || pf_var > 0xFF) // BUGBUG: pf_def should be \">\"?\r\n    || (cf >  0x40 || cf_def >  0xFF || cf_var > 0xFF) )\r\n  {\r\n    // see Source\\exehead\\util.c for implementation details\r\n    // basically, it knows it needs to get folders from the registry when the 0x80 is on\r\n    const char* msg = \"Internal compiler error: too many strings added to strings block before adding shell constants!\";\r\n    ERROR_MSG(_T(\"%\") NPRIns, msg);\r\n    throw out_of_range(msg);\r\n  }\r\n\r\n  set_uninstall_mode(1);\r\n  unsigned int unpf = add_asciistring(_T(\"ProgramFilesDir\"), 0);\r\n  unsigned int uncf = add_asciistring(_T(\"CommonFilesDir\"), 0);\r\n  unsigned int unpf_def = add_asciistring(_T(\"C:\\\\Program Files\"));\r\n  unsigned int unpf_var = add_asciistring(_T(\"$PROGRAMFILES\"));\r\n  unsigned int uncf_def = add_asciistring(_T(\"$PROGRAMFILES\\\\Common Files\"));\r\n  unsigned int uncf_var = add_asciistring(_T(\"$COMMONFILES\"));\r\n  set_uninstall_mode(orgunmode);\r\n\r\n  if ( unpf != pf || unpf_def != pf_def || unpf_var != pf_var\r\n    || uncf != cf || uncf_def != cf_def || uncf_var != cf_var )\r\n  {\r\n    const char* msg = \"Internal compiler error: installer's shell constants are different than uninstallers!\";\r\n    ERROR_MSG(_T(\"%\") NPRIns, msg);\r\n    throw out_of_range(msg);\r\n  }\r\n}\r\n\r\n// returns offset in stringblock\r\nint CEXEBuild::add_string(const TCHAR *string, int process/*=1*/, UINT codepage/*=-2*/)\r\n{\r\n  if (!string || !*string) return 0;\r\n  build_lockedunicodetarget = true;\r\n  init_shellconstantvalues();\r\n  if ((UINT)-2 == codepage)\r\n  {\r\n    codepage = curlinereader ? curlinereader->StreamEncoding().GetCodepage() : CP_UTF8;\r\n    // If the current source file is Unicode we have to pick a real codepage for ANSI!\r\n    // It might not be the correct codepage but it's the best we can do.\r\n    // Not using CP_ACP to avoid heisenbugs when compiled on a different system.\r\n    if (NStreamEncoding::IsUnicodeCodepage(codepage)) codepage = 1252;\r\n  }\r\n  if (*string == _T('$') && *(string+1) == _T('('))\r\n  {\r\n    int idx = 0;\r\n    TCHAR *cp = _tcsdup(string+2);\r\n    TCHAR *p = _tcschr(cp, _T(')'));\r\n    if (p && p[1] == _T('\\0') ) { // if string is only a language str identifier\r\n      *p = 0;\r\n      idx = DefineLangString(cp, process);\r\n    }\r\n    free(cp);\r\n    if (idx < 0) return idx;\r\n  }\r\n\r\n  int i;\r\n  if (process)\r\n  {\r\n    ExpandoString<TCHAR, NSIS_MAX_STRLEN*4> buf;\r\n    // NOTE: It is impossible to know how much preprocessing will increase the size, we have to guess\r\n    buf.Reserve(_tcsclen(string) * 2);\r\n    preprocess_string(buf, string, codepage); // BUGBUG: This could overflow buf\r\n    i = cur_strlist->add(buf, (WORD)codepage, true);\r\n  }\r\n  else\r\n    i = cur_strlist->add(string, (WORD)codepage, false);\r\n  return i;\r\n}\r\n\r\nint CEXEBuild::add_asciistring(const TCHAR *string, int process/*=1*/)\r\n{\r\n  return add_string(string, process, 1252);\r\n}\r\n\r\nint CEXEBuild::add_intstring(const int i) // returns offset in stringblock\r\n{\r\n  TCHAR buf[32];\r\n  wsprintf(buf, _T(\"%d\"), i);\r\n  return add_asciistring(buf, false);\r\n}\r\n\r\n#ifdef _UNICODE\r\nchar* convert_processed_string_to_ansi(char *out, const TCHAR *in, WORD codepage)\r\n{\r\n    const TCHAR *p=in;\r\n    for (;;)\r\n    {\r\n        _TUCHAR i = (_TUCHAR)*p++;\r\n        if (NS_IS_CODE(i)) // Note: this includes '\\0'\r\n        {\r\n            // convert all character up to, and including this code\r\n            int c = (int)(p-in), cb = WideCharToMultiByte(codepage, 0, in, c, out, c*2, NULL, NULL);\r\n            if (!cb && i) return 0;\r\n            out += cb;\r\n            if (i == _T('\\0'))\r\n                break;\r\n            else if (i == NS_SKIP_CODE)\r\n                // BUGBUG: Shouldn't the escaped code be converted from wchar_t to codepage as well?\r\n                *out++ = (char) *in++; // simply copy escaped code (01..04)\r\n            else\r\n            {\r\n                WORD w = *p++; // special NSIS code is following by a WORD we need to output unchanged\r\n                *out++ = LOBYTE(w);\r\n                *out++ = HIBYTE(w);\r\n            }\r\n            in = p;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n#endif\r\n\r\n// based on Dave Laundon's code\r\nint CEXEBuild::preprocess_string(TCHAR *out, const TCHAR *in, WORD codepage/*=CP_ACP*/)\r\n{\r\n  const TCHAR *p=in;\r\n  while (*p)\r\n  {\r\n    const TCHAR *np;\r\n#ifdef _UNICODE\r\n    np = CharNext(p);\r\n#else\r\n    np = CharNextExA(codepage, p, 0);\r\n#endif\r\n    if (np - p > 1) // multibyte TCHAR\r\n    {\r\n      size_t len = np - p;\r\n      while (len--)\r\n      {\r\n        _TUCHAR i = (_TUCHAR)*p++;\r\n        if (NS_IS_CODE(i)) {\r\n          *out++ = (TCHAR)NS_SKIP_CODE;\r\n        }\r\n        *out++=(TCHAR)i;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    _TUCHAR i = (_TUCHAR)*p;\r\n\r\n    p=np; // increment p.\r\n\r\n    // Test for characters extending into the variable codes\r\n    if (NS_IS_CODE(i)) {\r\n      *out++ = (TCHAR)NS_SKIP_CODE;\r\n      // out does get the NS_CODE as well because of\r\n      // \"*out++=(TCHAR)i\" at the end.\r\n    }\r\n    else if (i == _T('$'))\r\n    {\r\n      if (*p == _T('$'))\r\n        p++; // Can simply convert $$ to $ now\r\n      else\r\n      {\r\n        // starts with a $ but not $$.\r\n        bool bProceced=false;\r\n        if (*p)\r\n        {\r\n          const TCHAR *pUserVarName = p;\r\n          while (isSimpleChar(*pUserVarName))\r\n            pUserVarName++;\r\n\r\n          while (pUserVarName > p)\r\n          {\r\n            if (m_ShellConstants.get(p, truncate_cast(int, (size_t)(pUserVarName - p))) >= 0)\r\n              break; // Woops it's a shell constant\r\n\r\n            int idxUserVar = m_UserVarNames.get(p, truncate_cast(int, (size_t)(pUserVarName - p)));\r\n            if (idxUserVar >= 0)\r\n            {\r\n              // Well, using variables inside string formatting doesn't mean\r\n              // using the variable, because it will be always an empty string\r\n              // which is also memory wasting\r\n              // So the line below must be commented !??\r\n              //m_UserVarNames.inc_reference(idxUserVar);\r\n              *out++ = (TCHAR) NS_VAR_CODE; // Named user variable;\r\n              WORD w = FIX_ENDIAN_INT16(CODE_SHORT(idxUserVar));\r\n              unsigned int w4 = sizeof(TCHAR) > 2 ? FIX_ENDIAN_INT32(CODE_SHORT(idxUserVar)) : w; // Maybe this is too much endian fixing?\r\n              if (sizeof(TCHAR) < 2) *((WORD*)out) = w, out += 2; else *out = (TCHAR) w4, out++;\r\n              p += pUserVarName-p; // zip past the user var string.\r\n              bProceced = true;\r\n              break;\r\n            }\r\n            pUserVarName--;\r\n          }\r\n        }// if ( *p )\r\n        if (!bProceced && *p)\r\n        {\r\n          const TCHAR *pShellConstName = p;\r\n          while (isSimpleChar(*pShellConstName))\r\n            pShellConstName++;\r\n\r\n          while (pShellConstName > p)\r\n          {\r\n            // Look for the identifier in the shell constants list of strings.\r\n            int idxConst = m_ShellConstants.get((TCHAR*)p, truncate_cast(int, (size_t)(pShellConstName - p)));\r\n\r\n            // If found...\r\n            if (idxConst >= 0)\r\n            {\r\n              init_shellconstantvalues();\r\n              int CSIDL_Value_current = m_ShellConstants.get_value1(idxConst);\r\n              int CSIDL_Value_all = m_ShellConstants.get_value2(idxConst);\r\n              *out++=(TCHAR)NS_SHELL_CODE; // Constant code identifier\r\n#ifdef _UNICODE\r\n            *out++=MAKEWORD(CSIDL_Value_current, CSIDL_Value_all);\r\n#else\r\n            *out++=(TCHAR)CSIDL_Value_current;\r\n            *out++=(TCHAR)CSIDL_Value_all;\r\n#endif\r\n              p = pShellConstName; // zip past the shell constant string.\r\n              bProceced = true;\r\n              break;\r\n            }\r\n\r\n            // We are looking from the longest identifier first and work\r\n            // smaller.\r\n            pShellConstName--;\r\n          }\r\n        }\r\n        if ( !bProceced && *p == _T('(') )\r\n        {\r\n          int idx = -1;\r\n          TCHAR *cp = _tcsdup(p+1); // JP: Bad... should avoid memory alloc.\r\n          TCHAR *pos = _tcschr(cp, _T(')'));\r\n          if (pos)\r\n          {\r\n            *pos = 0;\r\n            idx = DefineLangString(cp);\r\n            if (idx < 0)\r\n            {\r\n              *out++ = (TCHAR)NS_LANG_CODE; // Next word is lang-string Identifier\r\n              WORD w = FIX_ENDIAN_INT16(CODE_SHORT(-idx-1));\r\n              unsigned int w4 = sizeof(TCHAR) > 2 ? FIX_ENDIAN_INT32(CODE_SHORT(-idx-1)) : w; // Maybe this is too much endian fixing?\r\n              if (sizeof(TCHAR) < 2) *((WORD*)out) = w, out += 2; else *out = (TCHAR) w4, out++;\r\n              p += _tcslen(cp) + 2;\r\n              bProceced = true;\r\n            }\r\n          }\r\n          free(cp);\r\n        }\r\n        if ( bProceced )\r\n          continue; // outermost while\r\n        else\r\n        {\r\n          TCHAR tbuf[64], cBracket = _T('\\0');\r\n          bool bDoWarning = true;\r\n\r\n          if ( *p == _T('[') ) cBracket = _T(']');\r\n          else if ( *p == _T('(') ) cBracket = _T(')');\r\n          else if ( *p == _T('{') ) cBracket = _T('}');\r\n\r\n          my_strncpy(tbuf,p,COUNTOF(tbuf));\r\n\r\n          if ( cBracket != 0 )\r\n          {\r\n            if (_tcschr(tbuf,cBracket)) (_tcschr(tbuf,cBracket)+1)[0]=0;\r\n            if ( tbuf[0] == _T('{') && tbuf[_tcslen(tbuf)-1] == _T('}') )\r\n            {\r\n              TCHAR *tstIfDefine = _tcsdup(tbuf+1);\r\n              tstIfDefine[_tcslen(tstIfDefine)-1] = _T('\\0');\r\n              bDoWarning = definedlist.find(tstIfDefine) == NULL;\r\n              // If it's a defined identifier, then don't warn.\r\n            }\r\n          }\r\n          else\r\n          {\r\n            if (_tcsstr(tbuf,_T(\" \"))) _tcsstr(tbuf,_T(\" \"))[0]=0;\r\n          }\r\n          if ( bDoWarning )\r\n            warning_fl(DW_VAR_IGNORED_UNKNOWN, _T(\"unknown variable/constant \\\"%\") NPRIs _T(\"\\\" detected, ignoring\"),tbuf);\r\n          i = _T('$'); // redundant since i is already '$' and has not changed.\r\n        }\r\n      } // else\r\n    } // else if (i == _T('$'))\r\n    *out++=(TCHAR)i;\r\n  } // outside while\r\n  *out=0;\r\n  return 0;\r\n}\r\n\r\n// what it does is, when you pass it the offset of the last item added, it will determine if\r\n// that data is already present in the datablock, and if so, reference it instead (and shorten\r\n// the datablock as necessary). Reduces overhead if you want to add files to a couple places.\r\n// Woo, an optimizing installer generator, now we're styling.\r\n\r\nint CEXEBuild::datablock_optimize(int start_offset, int first_int)\r\n{\r\n  int this_len = cur_datablock->getlen() - start_offset;\r\n\r\n  cached_db_size this_size = {first_int, start_offset};\r\n  this->cur_datablock_cache->add(&this_size, sizeof(cached_db_size));\r\n\r\n  if (!this->build_optimize_datablock || this_len < (int) sizeof(int))\r\n    return start_offset;\r\n\r\n#ifdef DEBUG\r\n  assert(dynamic_cast<MMapBuf*>(cur_datablock));\r\n#endif\r\n  MMapBuf *db = static_cast<MMapBuf*>(cur_datablock);\r\n  db->setro(TRUE);\r\n\r\n  cached_db_size *db_sizes = (cached_db_size *) this->cur_datablock_cache->get();\r\n  int db_sizes_num = this->cur_datablock_cache->getlen() / sizeof(cached_db_size);\r\n  db_sizes_num--; // don't compare with the one we just added\r\n\r\n  for (int i = 0; i < db_sizes_num; i++)\r\n  {\r\n    if (db_sizes[i].first_int == first_int)\r\n    {\r\n      int pos = db_sizes[i].start_offset;\r\n      int left = this_len;\r\n      while (left > 0)\r\n      {\r\n        int l = min(left, build_filebuflen);\r\n        void *newstuff = db->get(start_offset + this_len - left, l);\r\n        void *oldstuff = db->getmore(pos + this_len - left, l);\r\n\r\n        int res = memcmp(newstuff, oldstuff, l);\r\n\r\n        db->release(oldstuff, l);\r\n        db->release();\r\n\r\n        if (res) break;\r\n\r\n        left -= l;\r\n      }\r\n\r\n      if (!left)\r\n      {\r\n        db_opt_save += this_len;\r\n        db->resize(max(start_offset, pos + this_len));\r\n        db->setro(FALSE);\r\n        this->cur_datablock_cache->resize(cur_datablock_cache->getlen() - sizeof(cached_db_size));\r\n        return pos;\r\n      }\r\n    }\r\n  }\r\n\r\n  db->setro(FALSE);\r\n  return start_offset;\r\n}\r\n\r\nbool CEXEBuild::datablock_finddata(IMMap&mmap, int mmstart, int size, int*ofs)\r\n{\r\n  const int first_int = size;\r\n  size &= ~ 0x80000000;\r\n#ifdef DEBUG\r\n  assert(dynamic_cast<MMapBuf*>(cur_datablock));\r\n#endif\r\n  MMapBuf *db = static_cast<MMapBuf*>(cur_datablock);\r\n  cached_db_size *db_sizes = (cached_db_size *) this->cur_datablock_cache->get();\r\n  int db_sizes_num = this->cur_datablock_cache->getlen() / sizeof(cached_db_size);\r\n  for (int i = 0; i < db_sizes_num; i++)\r\n  {\r\n    if (db_sizes[i].first_int != first_int) continue;\r\n    int left = size, oldpos = db_sizes[i].start_offset;\r\n    while (left > 0)\r\n    {\r\n      int cbCmp = min(left, build_filebuflen);\r\n      void *newstuff = mmap.get(mmstart + size - left, cbCmp);\r\n      void *oldstuff = db->get(sizeof(int) + oldpos + size - left, cbCmp);\r\n      int res = memcmp(newstuff, oldstuff, cbCmp);\r\n      mmap.release(), db->release();\r\n      if (res) break;\r\n      left -= cbCmp;\r\n    }\r\n    if (!left)\r\n    {\r\n      if (ofs) *ofs = oldpos;\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nint CEXEBuild::add_db_data(IMMap *mmap) // returns offset\r\n{\r\n  build_compressor_set = true;\r\n\r\n  int done = 0;\r\n\r\n  if (!mmap)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_db_data() called with invalid mapped file\\n\"));\r\n    return -1;\r\n  }\r\n\r\n  int length = mmap->getsize();\r\n\r\n  if (length < 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_db_data() called with length=%d\\n\"), length);\r\n    return -1;\r\n  }\r\n\r\n  // Jim Park: This kind of stuff looks scary and it is.  cur_datablock is\r\n  // most likely to point to a MMapBuf type right now so it works.\r\n  MMapBuf *db = (MMapBuf *) this->cur_datablock;\r\n\r\n  int st = db->getlen();\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (length && !build_compress_whole && build_compress)\r\n  {\r\n    // grow datablock so that there is room to compress into\r\n    int bufferlen, of = false, tmp = 0;\r\n    of |= !si_add(tmp, length, 1024);\r\n    of |= !si_add(tmp, tmp, length / 4); // give a nice 25% extra space\r\n    if (!of)\r\n    {\r\n      bufferlen = tmp;\r\n      of |= !si_add(tmp, st, bufferlen);\r\n      of |= !si_add(tmp, tmp, sizeof(int));\r\n    }\r\n    if (of) // we've hit a signed integer overflow (file is over 1.6 GB)\r\n      bufferlen = INT_MAX - st - sizeof(int); // so maximize compressor room and hope the file compresses well\r\n\r\n    db->resize(st + bufferlen + sizeof(int));\r\n\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      extern void quit(); quit();\r\n    }\r\n\r\n    int avail_in = length;\r\n    int avail_out = bufferlen;\r\n    int ret;\r\n    while (avail_in > 0)\r\n    {\r\n      int in_len = min(this->build_filebuflen, avail_in);\r\n      int out_len = min(this->build_filebuflen, avail_out);\r\n\r\n      compressor->SetNextIn((char*) mmap->get(length - avail_in, in_len), in_len);\r\n      compressor->SetNextOut((char*) db->get(st + sizeof(int) + bufferlen - avail_out, out_len), out_len);\r\n      if ((ret = compressor->Compress(0)) < 0)\r\n      {\r\n        ERROR_MSG(_T(\"Error: add_db_data() - compress() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n        return -1;\r\n      }\r\n      mmap->release();\r\n      db->flush(out_len);\r\n      db->release();\r\n      avail_in -= in_len - compressor->GetAvailIn();\r\n      avail_out -= out_len - compressor->GetAvailOut();\r\n\r\n      if (!avail_out)\r\n        // not enough space in the output buffer - no compression is better\r\n        break;\r\n    }\r\n\r\n    // if not enough space in the output buffer - no compression is better\r\n    if (avail_out)\r\n    {\r\n      char *out;\r\n\r\n      char a;\r\n      compressor->SetNextIn(&a,0);\r\n\r\n      do\r\n      {\r\n        int out_len = min(build_filebuflen, avail_out);\r\n\r\n        out = (char *) db->get(st + sizeof(int) + bufferlen - avail_out, out_len);\r\n\r\n        compressor->SetNextOut(out, out_len);\r\n        if ((ret = compressor->Compress(C_FINISH)) < 0)\r\n        {\r\n          ERROR_MSG(_T(\"Error: add_db_data() - compress() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n          return -1;\r\n        }\r\n\r\n        db->flush(out_len);\r\n        db->release();\r\n\r\n        avail_out -= out_len - compressor->GetAvailOut();\r\n      }\r\n      while (compressor->GetNextOut() - out > 0 && avail_out > 0);\r\n\r\n      compressor->End();\r\n\r\n      int used = bufferlen - avail_out;\r\n\r\n      // never store compressed if output buffer is full (compression increased the size...)\r\n      if (avail_out && (build_compress == 2 || used < length))\r\n      {\r\n        done=1;\r\n        db->resize(st + used + sizeof(int));\r\n\r\n        *(int*)db->get(st, sizeof(int)) = FIX_ENDIAN_INT32(used | 0x80000000);\r\n        db->release();\r\n\r\n        int nst = datablock_optimize(st, used | 0x80000000);\r\n        if (nst == st) db_comp_save += length - used;\r\n        else st = nst;\r\n      }\r\n    }\r\n    else\r\n      compressor->End();\r\n  }\r\n#endif // NSIS_CONFIG_COMPRESSION_SUPPORT\r\n\r\n  if (!done)\r\n  {\r\n    // Adding the same file twice can push cur_datablock over the limit\r\n    // because datablock_optimize() happens too late. Let's try to find a dupe early.\r\n    if (this->build_optimize_datablock && st + length < 0)\r\n    {\r\n      int oldst;\r\n      if (datablock_finddata(*mmap, 0, length, &oldst))\r\n        return (db_full_size += length, db_opt_save += length, oldst);\r\n    }\r\n\r\n    db->resize(st + sizeof(int) + length);\r\n    int *plen = (int *) db->get(st, sizeof(int));\r\n    *plen = FIX_ENDIAN_INT32(length);\r\n    db->release();\r\n\r\n    int left = length;\r\n    while (left > 0)\r\n    {\r\n      int l = min(build_filebuflen, left);\r\n      int *p = (int *) db->get(st + sizeof(int) + length - left, l);\r\n      memcpy(p, mmap->get(length - left, l), l);\r\n      db->flush(l);\r\n      db->release();\r\n      mmap->release();\r\n      left -= l;\r\n    }\r\n\r\n    st = datablock_optimize(st, length);\r\n  }\r\n\r\n  db_full_size += length + sizeof(int);\r\n  return st;\r\n}\r\n\r\nint CEXEBuild::add_db_data(const char *data, int length) // returns offset\r\n{\r\n  MMapFake fakemap;\r\n  fakemap.set(data, length);\r\n  return add_db_data(&fakemap);\r\n}\r\n\r\nint CEXEBuild::add_data(const char *data, int length, IGrowBuf *dblock) // returns offset\r\n{\r\n  build_compressor_set=true;\r\n\r\n  int done=0;\r\n\r\n  if (length < 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: add_data() called with length=%d\\n\"),length);\r\n    return -1;\r\n  }\r\n\r\n  int st=dblock->getlen();\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (!build_compress_whole && build_compress)\r\n  {\r\n    // grow datablock so that there is room to compress into\r\n    int bufferlen=length+1024+length/4; // give a nice 25% extra space\r\n    dblock->resize(st+bufferlen+sizeof(int));\r\n\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      extern void quit(); quit();\r\n    }\r\n\r\n    compressor->SetNextIn((char*)data, length);\r\n    compressor->SetNextOut((char*)dblock->get() + st + sizeof(int), bufferlen);\r\n\r\n    compressor->Compress(C_FINISH);\r\n\r\n    int used=bufferlen-compressor->GetAvailOut();\r\n\r\n    // never store compressed if output buffer is full\r\n    if (compressor->GetAvailOut() && (build_compress == 2 || used < length))\r\n    {\r\n      done=1;\r\n      dblock->resize(st+used+sizeof(int));\r\n\r\n      *((int*)((char *)dblock->get()+st)) = FIX_ENDIAN_INT32(used|0x80000000);\r\n    }\r\n    compressor->End();\r\n  }\r\n#endif // NSIS_CONFIG_COMPRESSION_SUPPORT\r\n\r\n  if (!done)\r\n  {\r\n    dblock->resize(st);\r\n    int rl = FIX_ENDIAN_INT32(length);\r\n    dblock->add(&rl,sizeof(int));\r\n    dblock->add(data,length);\r\n  }\r\n\r\n  return st;\r\n}\r\n\r\nint CEXEBuild::add_label(const TCHAR *name)\r\n{\r\n  if (!build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Label declaration not valid outside of function/section\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if ((name[0] >= _T('0') && name[0] <= _T('9')) || name[0] == _T('-') || name[0] == _T(' ') || name[0] == _T(':'))\r\n  {\r\n    ERROR_MSG(_T(\"Error: labels must not begin with 0-9, -, :, or a space.\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  int cs=build_cursection->code;\r\n  int ce=cs+build_cursection->code_size;\r\n\r\n  TCHAR *p=_tcsdup(name);\r\n  if (p[_tcslen(p)-1] == _T(':')) p[_tcslen(p)-1]=0;\r\n  int offs=ns_label.add(p,0);\r\n  free(p);\r\n\r\n  int n=cur_labels->getlen()/sizeof(section);\r\n\r\n  // Check to see if the label already exists.\r\n  if (n)\r\n  {\r\n    section *t=(section*)cur_labels->get();\r\n    while (n--)\r\n    {\r\n      // Labels beginning with '.' are global and can be jumped to from any function or section.\r\n      if ((*name == _T('.') || (t->code >= cs && t->code <= ce))  &&\r\n          t->name_ptr==offs)\r\n      {\r\n        if (*name == _T('.')) ERROR_MSG(_T(\"Error: global label \\\"%\") NPRIs _T(\"\\\" already declared\\n\"),name);\r\n        else\r\n        {\r\n          const TCHAR *szType = _T(\"section\");\r\n          if (build_cursection_isfunc)\r\n            szType = _T(\"function\");\r\n          ERROR_MSG(_T(\"Error: label \\\"%\") NPRIs _T(\"\\\" already declared in %\") NPRIs _T(\"\\n\"),name,szType);\r\n        }\r\n        return PS_ERROR;\r\n      }\r\n      t++;\r\n    }\r\n  }\r\n\r\n  section s={0};\r\n  s.name_ptr = offs;\r\n  s.code = ce;\r\n  cur_labels->add(&s,sizeof(s));\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_function(const TCHAR *funname)\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function open when creating function (use FunctionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section open when creating function (use SectionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (cur_page)\r\n  {\r\n    ERROR_MSG(_T(\"Error: PageEx open when creating function (use PageExEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (!funname[0])\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function must have a name\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  set_uninstall_mode(!_tcsnicmp(funname,_T(\"un.\"),3));\r\n\r\n  // ns_func contains all the function names defined.\r\n  int addr=ns_func.add(funname,0);\r\n  int n=cur_functions->getlen()/sizeof(section), x;\r\n  section *tmp=(section*)cur_functions->get();\r\n  for (x = 0; x < n; x ++)\r\n  {\r\n    if (tmp[x].name_ptr == addr)\r\n    {\r\n      ERROR_MSG(_T(\"Error: Function named \\\"%\") NPRIs _T(\"\\\" already exists.\\n\"),funname);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  cur_functions->resize((n+1)*sizeof(section));\r\n  build_cursection=((section*)cur_functions->get())+n;\r\n  build_cursection_isfunc=1;\r\n  build_cursection->name_ptr=addr;\r\n  build_cursection->code=cur_entries->getlen()/sizeof(entry);\r\n  build_cursection->code_size=0;\r\n  build_cursection->install_types=0;\r\n  build_cursection->flags=0;\r\n  build_cursection->size_kb=0;\r\n  memset(build_cursection->name,0,sizeof(build_cursection->name));\r\n  \r\n  if (uninstall_mode)\r\n    set_code_type_predefines(funname+3);\r\n  else\r\n    set_code_type_predefines(funname);\r\n  \r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::function_end()\r\n{\r\n  if (!build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: No function open, FunctionEnd called\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  // add ret.\r\n  add_entry_direct(EW_RET);\r\n\r\n  build_cursection_isfunc=0;\r\n  build_cursection=NULL;\r\n\r\n  set_uninstall_mode(0);\r\n  \r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n\r\n\r\nint CEXEBuild::section_add_flags(int flags)\r\n{\r\n  if (!build_cursection || build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't modify flags when no section is open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  build_cursection->flags |= flags;\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::section_add_install_type(int inst_type)\r\n{\r\n  if (!build_cursection || build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't modify flags when no section is open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection->install_types == ~0)\r\n    build_cursection->install_types = 0;\r\n  build_cursection->install_types |= inst_type;\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::section_add_size_kb(int kb)\r\n{\r\n  if (build_cursection)\r\n  {\r\n    build_cursection->size_kb+=kb;\r\n  }\r\n}\r\n\r\nint CEXEBuild::section_end()\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionEnd specified in function (not section)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (!build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionEnd specified and no sections open\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  add_entry_direct(EW_RET);\r\n  build_cursection->code_size--;\r\n  build_cursection=NULL;\r\n  if (!sectiongroup_open_cnt)\r\n    set_uninstall_mode(0);\r\n  \r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_section(const TCHAR *secname, const TCHAR *defname, int expand/*=0*/)\r\n{\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section can't create section (already in function, use FunctionEnd first)\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (cur_page) {\r\n    ERROR_MSG(_T(\"Error: PageEx already open, call PageExEnd first\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section already open, call SectionEnd first\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  section new_section;\r\n  new_section.flags = SF_SELECTED;\r\n  new_section.flags |= expand ? SF_EXPAND : 0;\r\n  new_section.code_size = 0;\r\n  new_section.size_kb = 0;\r\n\r\n  TCHAR *name = (TCHAR*)secname;\r\n\r\n  if (name[0] == _T('\\x1F'))    // SectionGroup/SectionGroupEnd\r\n  {\r\n    if (name[1])\r\n    {\r\n      new_section.flags |= SF_SECGRP;\r\n      name++;\r\n    }\r\n    else\r\n      new_section.flags |= SF_SECGRPEND;\r\n  }\r\n\r\n  int hidden = (name[0] == _T('-'));\r\n  if (hidden)\r\n    name++;\r\n  \r\n  if (name[0] == _T('!'))\r\n  {\r\n    name++;\r\n    new_section.flags |= SF_BOLD;\r\n  }\r\n\r\n  int old_uninstall_mode = uninstall_mode;\r\n\r\n  set_uninstall_mode(0);\r\n\r\n  if (!_tcsnicmp(name, _T(\"un.\"), 3))\r\n  {\r\n    set_uninstall_mode(1);\r\n    name += 3;\r\n  }\r\n\r\n  if (!_tcsicmp(name, _T(\"uninstall\")))\r\n  {\r\n    set_uninstall_mode(1);\r\n  }\r\n\r\n  if ((new_section.flags & SF_SECGRPEND) && sectiongroup_open_cnt && old_uninstall_mode)\r\n  {\r\n    set_uninstall_mode(1);\r\n  }\r\n\r\n  if (sectiongroup_open_cnt)\r\n  {\r\n    if (uninstall_mode != old_uninstall_mode)\r\n    {\r\n      ERROR_MSG(_T(\"Error: Can't create %\") NPRIs _T(\" section in %\") NPRIs _T(\" section group (use SectionGroupEnd first)\\n\"), uninstall_mode ? _T(\"uninstaller\") : _T(\"installer\"), old_uninstall_mode ? _T(\"uninstaller\") : _T(\"installer\"));\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  new_section.code = cur_entries->getlen() / sizeof(entry);\r\n\r\n  new_section.install_types = (!hidden && *name) ? 0 : ~0;\r\n  new_section.name_ptr = hidden ? 0 : add_string(name);\r\n  memset(&new_section.name,0,sizeof(new_section.name));\r\n\r\n  cur_sections->add(&new_section, sizeof(section));\r\n  build_cursection = (section *) cur_sections->get() + cur_header->blocks[NB_SECTIONS].num;\r\n\r\n  if (defname[0])\r\n  {\r\n    TCHAR buf[1024];\r\n    wsprintf(buf, _T(\"%d\"), cur_header->blocks[NB_SECTIONS].num);\r\n    if (definedlist.add(defname, buf))\r\n    {\r\n      ERROR_MSG(_T(\"Error: \\\"%\") NPRIs _T(\"\\\" already defined, can't assign section index!\\n\"), defname);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n\r\n  cur_header->blocks[NB_SECTIONS].num++;\r\n\r\n  if (new_section.flags & (SF_SECGRP | SF_SECGRPEND))\r\n  {\r\n    add_entry_direct(EW_RET);\r\n    build_cursection->code_size = 0;\r\n\r\n    build_cursection = 0;\r\n\r\n    if (new_section.flags & SF_SECGRPEND)\r\n    {\r\n      sectiongroup_open_cnt--;\r\n      if (sectiongroup_open_cnt < 0)\r\n      {\r\n        ERROR_MSG(_T(\"SectionGroupEnd: no SectionGroups are open\\n\"));\r\n        return PS_ERROR;\r\n      }\r\n      if (!sectiongroup_open_cnt)\r\n      {\r\n        set_uninstall_mode(0);\r\n      }\r\n    }\r\n    else\r\n      sectiongroup_open_cnt++;\r\n  }\r\n  \r\n  set_code_type_predefines(name);\r\n    \r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_entry(const entry *ent)\r\n{\r\n  if (!build_cursection && !uninstall_mode)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Can't add entry, no section or function is open!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  cur_entries->add(ent,sizeof(entry));\r\n  cur_instruction_entry_map->add(&multiple_entries_instruction,sizeof(int));\r\n  build_cursection->code_size++;\r\n  cur_header->blocks[NB_ENTRIES].num++;\r\n\r\n  multiple_entries_instruction=1;\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_entry_direct(int which, int o0, int o1, int o2, int o3, int o4, int o5 /*o#=0*/)\r\n{\r\n  entry ent;\r\n  ent.which = which;\r\n  ent.offsets[0] = o0;\r\n  ent.offsets[1] = o1;\r\n  ent.offsets[2] = o2;\r\n  ent.offsets[3] = o3;\r\n  ent.offsets[4] = o4;\r\n  ent.offsets[5] = o5;\r\n  return add_entry(&ent);\r\n}\r\n\r\nint CEXEBuild::resolve_jump_int(const TCHAR *fn, int *a, int offs, int start, int end)\r\n{\r\n  if (*a > 0)\r\n  {\r\n    TCHAR *lname=(TCHAR*)ns_label.get()+*a;\r\n    if (lname[0] == _T('-') || lname[0]==_T('+'))\r\n    {\r\n      int jump = _ttoi(lname);\r\n      int *skip_map = (int *) cur_instruction_entry_map->get();\r\n      int maxoffs = cur_instruction_entry_map->getlen() / (int) sizeof(int);\r\n\r\n      int direction = 1;\r\n      if (jump < 0)\r\n        direction = -1;\r\n\r\n      for (; jump != 0; jump -= direction)\r\n      {\r\n        offs += direction;\r\n        if (offs >= 0 && offs < maxoffs)\r\n        {\r\n          while (skip_map[offs])\r\n          {\r\n            offs += direction;\r\n          }\r\n        }\r\n      }\r\n\r\n      *a = offs + 1;\r\n    }\r\n    else\r\n    {\r\n      section *s = (section*)cur_labels->get();\r\n      int n=cur_labels->getlen()/sizeof(section);\r\n      while (n-->0)\r\n      {\r\n        if ((*lname == _T('.') || (s->code >= start && s->code <= end)) && s->name_ptr == *a)\r\n        {\r\n          *a = s->code+1;     // jumps are to the absolute position, +1 (to differentiate between no jump, and jumping to offset 0)\r\n          s->flags++;\r\n          if (*lname == _T('.'))\r\n          {\r\n            // bug #2593369 - mark functions with used global labels as used\r\n            // XXX this puts another hole in function reference counting\r\n            //     a recursive function, for example, will never be optimized\r\n            int nf=cur_functions->getlen()/sizeof(section);\r\n            section *func=(section *)cur_functions->get();\r\n            while (nf-- > 0)\r\n            {\r\n              int fstart = func->code;\r\n              int fend = func->code + func->code_size;\r\n              if (s->code >= fstart && s->code <= fend)\r\n              {\r\n                func->flags++;\r\n                break;\r\n              }\r\n              func++;\r\n            }\r\n          }\r\n          return 0;\r\n        }\r\n        s++;\r\n      }\r\n\r\n      ERROR_MSG(_T(\"Error: could not resolve label \\\"%\") NPRIs _T(\"\\\" in %\") NPRIs _T(\"\\n\"),lname,fn);\r\n      return 1;\r\n    }\r\n  }\r\n  else if (*a < 0) // to jump to a user variable target, -variable_index-1 is already stored.\r\n  {\r\n  }\r\n  // otherwise, *a is 0, which means no jump and we also leave it intact\r\n  return 0;\r\n}\r\n\r\nint CEXEBuild::resolve_call_int(const TCHAR *fn, const TCHAR *str, int fptr, int *ofs)\r\n{\r\n  if (fptr < 0) return 0;\r\n  int nf=cur_functions->getlen()/sizeof(section);\r\n  section *sec=(section *)cur_functions->get();\r\n  while (nf-- > 0)\r\n  {\r\n    if (sec->name_ptr>0 && sec->name_ptr == fptr)\r\n    {\r\n      ofs[0]=sec->code;\r\n      sec->flags++;\r\n      return 0;\r\n    }\r\n    sec++;\r\n  }\r\n  ERROR_MSG(_T(\"Error: resolving %\") NPRIs _T(\" function \\\"%\") NPRIs _T(\"\\\" in %\") NPRIs _T(\"\\n\"),str,(TCHAR*)ns_func.get()+fptr,fn);\r\n  ERROR_MSG(_T(\"Note: uninstall functions must begin with \\\"un.\\\", and install functions must not\\n\"));\r\n  return 1;\r\n}\r\n\r\nint CEXEBuild::resolve_instruction(const TCHAR *fn, const TCHAR *str, entry *w, int offs, int start, int end)\r\n{\r\n  if (w->which == EW_NOP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n  }\r\n#ifdef NSIS_SUPPORT_MESSAGEBOX\r\n  else if (w->which == EW_MESSAGEBOX)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[5],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n  else if (w->which == EW_IFFILEEXISTS)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n  }\r\n  else if (w->which == EW_IFFLAG)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n  }\r\n#ifdef NSIS_SUPPORT_STROPTS\r\n  else if (w->which == EW_STRCMP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n#ifdef NSIS_SUPPORT_INTOPTS\r\n  else if (w->which == EW_INTCMP)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[3],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[4],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n#ifdef NSIS_SUPPORT_HWNDS\r\n  else if (w->which == EW_ISWINDOW)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    if (resolve_jump_int(fn,&w->offsets[2],offs,start,end)) return 1;\r\n  }\r\n#endif\r\n  else if (w->which == EW_CALL)\r\n  {\r\n    if (w->offsets[0] >= 0 && w->offsets[1]) // get as jump\r\n    {\r\n      if (resolve_jump_int(fn,&w->offsets[0],offs,start,end)) return 1;\r\n    }\r\n    else\r\n    {\r\n      if (w->offsets[0] >= 0 && resolve_call_int(fn,str,w->offsets[0],w->offsets)) return 1;\r\n      // if w->offsets[0] >= 0, EW_CALL requires that it 1-based.\r\n      // otherwise, if < 0, it needs an increment anyway (since it\r\n      // was encoded with a -2 base, to prevent it looking like an\r\n      // empty string \"\")\r\n      w->offsets[0]++;\r\n    }\r\n  }\r\n#ifdef NSIS_SUPPORT_STROPTS\r\n  else if (w->which == EW_GETFUNCTIONADDR)\r\n  {\r\n    if (w->offsets[1] < 0)\r\n    {\r\n      ERROR_MSG(_T(\"Error: GetFunctionAddress requires a real function to get address of.\\n\"));\r\n      return 1;\r\n    }\r\n\r\n    if (resolve_call_int(fn,str,w->offsets[1],&w->offsets[1])) return 1;\r\n\r\n    w->which=EW_ASSIGNVAR;\r\n    w->offsets[1]=add_intstring(w->offsets[1]+1); // +1 here to make 1-based.\r\n  }\r\n  else if (w->which == EW_GETLABELADDR)\r\n  {\r\n    if (resolve_jump_int(fn,&w->offsets[1],offs,start,end)) return 1;\r\n    w->which=EW_ASSIGNVAR;\r\n    w->offsets[1]=add_intstring(w->offsets[1]);\r\n  }\r\n#endif\r\n  return 0;\r\n}\r\n\r\nint CEXEBuild::resolve_coderefs(const TCHAR *str)\r\n{\r\n  // resolve jumps&calls\r\n  {\r\n    section *sec=(section *)cur_functions->get();\r\n    int l=cur_functions->getlen()/sizeof(section);\r\n    entry *w=(entry *)cur_entries->get();\r\n    while (l-- > 0)\r\n    {\r\n      int x;\r\n      for (x = sec->code; x < sec->code+sec->code_size; x ++)\r\n      {\r\n        TCHAR fname[1024];\r\n        wsprintf(fname,_T(\"function \\\"%\") NPRIs _T(\"\\\"\"),ns_func.get()+sec->name_ptr);\r\n        if (resolve_instruction(fname,str,w+x,x,sec->code,sec->code+sec->code_size)) return 1;\r\n      }\r\n      sec++;\r\n    }\r\n\r\n    int cnt=0;\r\n    sec=(section *)cur_sections->get();\r\n    l=cur_sections->getlen()/sizeof(section);\r\n    while (l-- > 0)\r\n    {\r\n      int x=sec->name_ptr;\r\n      TCHAR fname[1024];\r\n      tstring section_name;\r\n      if (x < 0)\r\n      {\r\n        // lang string\r\n        section_name = _T(\"$(lang string)\");\r\n      }\r\n      else\r\n      {\r\n        // normal string\r\n        cur_strlist->get(x,section_name);\r\n      }\r\n      if (x) wsprintf(fname,_T(\"%\") NPRIs _T(\" section \\\"%\") NPRIs _T(\"\\\" (%d)\"),str,section_name.c_str(),cnt);\r\n      else wsprintf(fname,_T(\"unnamed %\") NPRIs _T(\" section (%d)\"),str,cnt);\r\n      for (x = sec->code; x < sec->code+sec->code_size; x ++)\r\n      {\r\n        if (resolve_instruction(fname,str,w+x,x,sec->code,sec->code+sec->code_size))\r\n          return 1;\r\n      }\r\n      sec++;\r\n      cnt++;\r\n    }\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n    if (cur_pages->getlen()) {\r\n      page *p=(page *)cur_pages->get();\r\n      int i = 0;\r\n      while (i < cur_header->blocks[NB_PAGES].num) {\r\n        TCHAR pagestr[1024];\r\n        wsprintf(pagestr, _T(\"%\") NPRIs _T(\" pages\"), str);\r\n        if (resolve_call_int(pagestr,p->dlg_id?_T(\"pre-page\"):_T(\"create-page\"),p->prefunc,&p->prefunc)) return 1;\r\n        if (resolve_call_int(pagestr,_T(\"show-page\"),p->showfunc,&p->showfunc)) return 1;\r\n        if (resolve_call_int(pagestr,_T(\"leave-page\"),p->leavefunc,&p->leavefunc)) return 1;\r\n        p++;\r\n        i++;\r\n      }\r\n    }\r\n#endif\r\n#endif\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n  // resolve callbacks\r\n  {\r\n    struct {\r\n      const TCHAR *name;\r\n      int *p;\r\n    } callbacks[] = {\r\n      {_T(\"%\") NPRIs _T(\".onInit\"), &cur_header->code_onInit},\r\n      {_T(\"%\") NPRIs _T(\".on%\") NPRIs _T(\"InstSuccess\"), &cur_header->code_onInstSuccess},\r\n      {_T(\"%\") NPRIs _T(\".on%\") NPRIs _T(\"InstFailed\"), &cur_header->code_onInstFailed},\r\n      {_T(\"%\") NPRIs _T(\".onUserAbort\"), &cur_header->code_onUserAbort},\r\n      {_T(\"%\") NPRIs _T(\".onVerifyInstDir\"), &cur_header->code_onVerifyInstDir},\r\n#ifdef NSIS_CONFIG_ENHANCEDUI_SUPPORT\r\n      {_T(\"%\") NPRIs _T(\".onGUIInit\"), &cur_header->code_onGUIInit},\r\n      {_T(\"%\") NPRIs _T(\".onGUIEnd\"), &cur_header->code_onGUIEnd},\r\n      {_T(\"%\") NPRIs _T(\".onMouseOverSection\"), &cur_header->code_onMouseOverSection},\r\n#endif//NSIS_CONFIG_ENHANCEDUI_SUPPORT\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n      {_T(\"%\") NPRIs _T(\".onSelChange\"), &cur_header->code_onSelChange},\r\n#endif//NSIS_CONFIG_COMPONENTPAGE\r\n#ifdef NSIS_SUPPORT_REBOOT\r\n      {_T(\"%\") NPRIs _T(\".onRebootFailed\"), &cur_header->code_onRebootFailed},\r\n#endif//NSIS_SUPPORT_REBOOT\r\n      {0, 0}\r\n    };\r\n\r\n    for (int i = 0; callbacks[i].name; i++) {\r\n      const TCHAR *un = uninstall_mode ? _T(\"un\") : _T(\"\");\r\n      TCHAR fname[1024];\r\n      wsprintf(fname, callbacks[i].name, un, un);\r\n      TCHAR cbstr[1024];\r\n      wsprintf(cbstr, _T(\"%\") NPRIs _T(\" callback\"), str);\r\n      TCHAR cbstr2[1024];\r\n      wsprintf(cbstr2, _T(\"%\") NPRIs _T(\".callbacks\"), un);\r\n\r\n      if (resolve_call_int(cbstr,cbstr2,ns_func.find(fname,0),callbacks[i].p))\r\n        return PS_ERROR;\r\n    }\r\n  }\r\n#endif//NSIS_SUPPORT_CODECALLBACKS\r\n\r\n  // optimize unused functions\r\n  {\r\n    section *sec=(section *)cur_functions->get();\r\n    int l=cur_functions->getlen()/sizeof(section);\r\n    entry *w=(entry*)cur_entries->get();\r\n    while (l-- > 0)\r\n    {\r\n      if (sec->name_ptr)\r\n      {\r\n        if (!sec->flags)\r\n        {\r\n          if (sec->code_size>0)\r\n          {\r\n            warning(DW_UNUSED_FUNCTION, _T(\"%\") NPRIs _T(\" function \\\"%\") NPRIs _T(\"\\\" not referenced - zeroing code (%d-%d) out\\n\"),str,\r\n              ns_func.get()+sec->name_ptr,\r\n              sec->code,sec->code+sec->code_size);\r\n            memset(w+sec->code,0,sec->code_size*sizeof(entry));\r\n          }\r\n        }\r\n      }\r\n      sec++;\r\n    }\r\n  }\r\n\r\n  // give warnings on unused labels\r\n  {\r\n    section *t=(section*)cur_labels->get();\r\n    int n=cur_labels->getlen()/sizeof(section);\r\n    while (n-->0)\r\n    {\r\n      if (!t->flags)\r\n      {\r\n        TCHAR *n=(TCHAR*)ns_label.get()+t->name_ptr;\r\n        if (*n == _T('.')) warning(DW_UNUSED_GLOBALLABEL, _T(\"global label \\\"%\") NPRIs _T(\"\\\" not used\"),n);\r\n        else warning(DW_UNUSED_LABEL, _T(\"label \\\"%\") NPRIs _T(\"\\\" not used\"),n);\r\n      }\r\n      t++;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\nint CEXEBuild::add_page(int type)\r\n{\r\n  page pg = {\r\n    0,\r\n    0,\r\n#ifdef NSIS_SUPPORT_CODECALLBACKS\r\n    -1,\r\n    -1,\r\n    -1,\r\n#endif\r\n    0,\r\n  };\r\n\r\n#ifndef NSIS_CONFIG_LICENSEPAGE\r\n  if (type == PAGE_LICENSE)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"license\", \"NSIS_CONFIG_LICENSEPAGE\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n#ifndef NSIS_CONFIG_COMPONENTPAGE\r\n  if (type == PAGE_COMPONENTS)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"components\", \"NSIS_CONFIG_COMPONENTPAGE\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n#ifndef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (type == PAGE_COMPONENTS)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't add %\") NPRIns _T(\" page, %\") NPRIns _T(\" not defined.\\n\"), \"uninstConfirm\", \"NSIS_CONFIG_UNINSTALL_SUPPORT\");\r\n    return PS_ERROR;\r\n  }\r\n#endif\r\n\r\n  struct {\r\n    int wndproc_id;\r\n    int dlg_id;\r\n    const TCHAR *name;\r\n  } ids[] = {\r\n    {PWP_CUSTOM, 0, _T(\"custom\")}, // custom\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n    {PWP_LICENSE, IDD_LICENSE, _T(\"license\")}, // license\r\n#else\r\n    {0, IDD_LICENSE, _T(\"license\")}, // license\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    {PWP_SELCOM, IDD_SELCOM, _T(\"components\")}, // components\r\n#else\r\n    {0, IDD_SELCOM, _T(\"components\")}, // components\r\n#endif\r\n    {PWP_DIR, IDD_DIR, _T(\"directory\")}, // directory\r\n    {PWP_INSTFILES, IDD_INSTFILES, _T(\"instfiles\")}, // instfiles\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    {PWP_UNINST, IDD_UNINST, _T(\"uninstConfirm\")}, // uninstConfirm\r\n#else\r\n    {0, IDD_UNINST, _T(\"uninstConfirm\")}, // uninstConfirm\r\n#endif\r\n    {PWP_COMPLETED, -1, NULL} // completed\r\n  };\r\n\r\n  pg.wndproc_id = ids[type].wndproc_id;\r\n  pg.dlg_id = ids[type].dlg_id;\r\n\r\n  cur_pages->add(&pg,sizeof(page));\r\n\r\n  cur_page = (page *)cur_pages->get() + cur_header->blocks[NB_PAGES].num++;\r\n  cur_page_type = type;\r\n  \r\n  set_code_type_predefines(ids[type].name);\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::page_end()\r\n{\r\n  cur_page = 0;\r\n\r\n  set_code_type_predefines();\r\n  return PS_OK;\r\n}\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\nint CEXEBuild::AddVersionInfo()\r\n{\r\n  GrowBuf VerInfoStream;\r\n\r\n  // Should probably check for (4 & version_fixedflags) here, but VIProductVersion without VIAddVersionKey\r\n  // fails silently, so VIFileVersion does the same...\r\n  if ( rVersionInfo.GetStringTablesCount() > 0 )\r\n  {\r\n    if ( !(1 & version_fixedflags) )\r\n    {\r\n      ERROR_MSG(_T(\"Error: VIProductVersion is required when other version information functions are used.\\n\"));\r\n      return PS_ERROR;\r\n    }\r\n    else\r\n    {\r\n      if ( !(2 & version_fixedflags) )\r\n      {\r\n        // This error string should match the one used by the TOK_VI_SETFILEVERSION handler\r\n        ERROR_MSG(_T(\"Error: invalid %\") NPRIs _T(\" format, should be X.X.X.X\\n\"),_T(\"VIProductVersion\"));\r\n        return PS_ERROR;\r\n      }\r\n\r\n      try\r\n      {\r\n        init_res_editor();\r\n        for ( int i = 0; i < rVersionInfo.GetStringTablesCount(); i++ )\r\n        {\r\n          LANGID lang_id = rVersionInfo.GetLangID(i);\r\n          int code_page = rVersionInfo.GetCodePage(i);\r\n\r\n          const TCHAR *lang_name = GetLangNameAndCPForVersionResource(lang_id, NULL, false);\r\n\r\n          const TCHAR *recverkeys = \r\n            _T(\"FileVersion\\0\")\r\n            _T(\"FileDescription\\0\")\r\n            _T(\"LegalCopyright\\0\");\r\n          for(;;)\r\n          {\r\n            if ( !*recverkeys ) break;\r\n            if ( !rVersionInfo.FindKey(lang_id, code_page, recverkeys) )\r\n              warning(DW_VI_MISSINGSTDKEY, _T(\"Generating version information for language \\\"%04d-%\") NPRIs _T(\"\\\" without standard key \\\"%\") NPRIs _T(\"\\\"\"), lang_id, lang_name, recverkeys);\r\n            recverkeys += _tcsclen(recverkeys) + 1;\r\n          }\r\n\r\n          rVersionInfo.ExportToStream(VerInfoStream, i);\r\n          res_editor->UpdateResource(RT_VERSION, 1, lang_id, (BYTE*)VerInfoStream.get(), VerInfoStream.getlen());\r\n        }\r\n      }\r\n      catch (exception& err) {\r\n        ERROR_MSG(_T(\"Error adding version information: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n        return PS_ERROR;\r\n      }\r\n    }\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_SUPPORT_VERSION_INFO\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\nint CEXEBuild::ProcessPages()\r\n{\r\n  SCRIPT_MSG(_T(\"Processing pages... \"));\r\n\r\n  int license_normal=0;\r\n  int license_fsrb=0;\r\n  int license_fscb=0;\r\n  int selcom=0;\r\n  int dir=0;\r\n  int uninstconfirm=0;\r\n  int instlog=0, instlog_used;\r\n  int main=0;\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\nagain:\r\n#endif\r\n\r\n  instlog_used = 0;\r\n\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  if ((cur_header->flags & (CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) == 0)\r\n#endif\r\n  {\r\n    main++;\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n#define LS(inst, uninst) (uninstall_mode ? uninst : inst)\r\n#else\r\n#define LS(inst, uninst) inst\r\n#endif\r\n\r\n    DefineInnerLangString(NLF_BRANDING);\r\n\r\n    if (!cur_pages->getlen()) {\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n      if (uninstall_mode) {\r\n        if (HasUserDefined(NLF_UNINST_TEXT)) {\r\n          add_page(PAGE_UNINSTCONFIRM);\r\n          page_end();\r\n        }\r\n        add_page(PAGE_INSTFILES);\r\n        page_end();\r\n        add_page(PAGE_COMPLETED);\r\n        page_end();\r\n      }\r\n      else\r\n#endif\r\n      {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n        if (HasUserDefined(NLF_LICENSE_TEXT) && HasUserDefined(NLF_LICENSE_DATA)) {\r\n          add_page(PAGE_LICENSE);\r\n          page_end();\r\n        }\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n        if (HasUserDefined(NLF_COMP_TEXT)) {\r\n          add_page(PAGE_COMPONENTS);\r\n          page_end();\r\n        }\r\n#endif\r\n        if (HasUserDefined(NLF_DIR_TEXT)) {\r\n          add_page(PAGE_DIRECTORY);\r\n          page_end();\r\n        }\r\n        add_page(PAGE_INSTFILES);\r\n        page_end();\r\n        add_page(PAGE_COMPLETED);\r\n        page_end();\r\n      }\r\n    }\r\n    // start processing the pages\r\n    {\r\n      int i = 0;\r\n      page *p = (page *) cur_pages->get();\r\n\r\n      for (i = 0; i < cur_header->blocks[NB_PAGES].num; i++, p++) {\r\n        page *pp = 0;\r\n\r\n        if (i) {\r\n          pp = p - 1;\r\n\r\n          // set back button\r\n          p->flags |= PF_BACK_SHOW;\r\n          if (pp->wndproc_id != PWP_COMPLETED && p->wndproc_id != PWP_COMPLETED && p->wndproc_id != PWP_INSTFILES)\r\n            p->flags |= PF_BACK_ENABLE;\r\n          if (!p->back)\r\n            p->back = DefineInnerLangString(NLF_BTN_BACK);\r\n\r\n          // set previous page's next button\r\n          if (!pp->next) {\r\n            int str = 0;\r\n\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n            if (pp->wndproc_id == PWP_LICENSE && (!(pp->flags & PF_LICENSE_FORCE_SELECTION) || HasUserDefined(NLF_BTN_LICENSE)))\r\n              str = NLF_BTN_LICENSE;\r\n            else\r\n#endif\r\n            if (p->wndproc_id == PWP_INSTFILES)\r\n              str = LS(NLF_BTN_INSTALL, NLF_BTN_UNINSTALL);\r\n            else\r\n              str = NLF_BTN_NEXT;\r\n\r\n            pp->next = DefineInnerLangString(str);\r\n          }\r\n\r\n          // set previous page's click next text\r\n          if (!pp->clicknext) {\r\n            int str = 0;\r\n\r\n            if (p->wndproc_id == PWP_INSTFILES)\r\n              str = LS(NLF_CLICK_INSTALL, NLF_CLICK_UNINSTALL);\r\n            else\r\n              str = NLF_CLICK_NEXT;\r\n\r\n            pp->clicknext = DefineInnerLangString(str);\r\n          }\r\n        }\r\n\r\n        // enable next button\r\n        if (p->wndproc_id != PWP_INSTFILES)\r\n          p->flags |= PF_NEXT_ENABLE;\r\n\r\n        // set cancel button\r\n        if (!p->cancel)\r\n          p->cancel = DefineInnerLangString(NLF_BTN_CANCEL);\r\n        if (p->wndproc_id != PWP_INSTFILES && p->wndproc_id != PWP_COMPLETED)\r\n          p->flags |= PF_CANCEL_ENABLE;\r\n\r\n        // set caption\r\n        struct {\r\n          int caption;\r\n          int ucaption;\r\n        } captions[] = {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n          {NLF_SUBCAPTION_LICENSE, NLF_SUBCAPTION_LICENSE},\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n          {NLF_SUBCAPTION_OPTIONS, NLF_SUBCAPTION_OPTIONS},\r\n#endif\r\n          {NLF_SUBCAPTION_DIR, NLF_SUBCAPTION_DIR},\r\n          {NLF_SUBCAPTION_INSTFILES, NLF_USUBCAPTION_INSTFILES},\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n          {NLF_USUBCAPTION_CONFIRM, NLF_USUBCAPTION_CONFIRM},\r\n#endif\r\n          {NLF_SUBCAPTION_COMPLETED, NLF_USUBCAPTION_COMPLETED}\r\n        };\r\n\r\n        if (!p->caption && p->wndproc_id != PWP_CUSTOM) {\r\n          p->caption = DefineInnerLangString(LS(captions[p->wndproc_id].caption, captions[p->wndproc_id].ucaption));\r\n        }\r\n\r\n        // set texts\r\n        switch (p->dlg_id) {\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n          case IDD_LICENSE:\r\n          case IDD_LICENSE_FSRB:\r\n          case IDD_LICENSE_FSCB:\r\n          {\r\n            if (!(p->flags & PF_PAGE_EX))\r\n              p->dlg_id = license_res_id;\r\n            if (!(p->flags & (PF_LICENSE_FORCE_SELECTION | PF_LICENSE_NO_FORCE_SELECTION)))\r\n              p->dlg_id = license_res_id;\r\n\r\n            p->flags |= PF_NO_NEXT_FOCUS;\r\n\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_LICENSE_DATA, 0);\r\n\r\n            if (p->dlg_id == IDD_LICENSE) {\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT, NLF_ULICENSE_TEXT));\r\n\r\n              license_normal++;\r\n            }\r\n            else if (p->dlg_id == IDD_LICENSE_FSCB) {\r\n              p->flags |= PF_LICENSE_FORCE_SELECTION;\r\n\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT_FSCB, NLF_ULICENSE_TEXT_FSCB));\r\n              if (!p->parms[2])\r\n                p->parms[2] = DefineInnerLangString(NLF_BTN_LICENSE_AGREE);\r\n\r\n              license_fscb++;\r\n            }\r\n            else if (p->dlg_id == IDD_LICENSE_FSRB) {\r\n              p->flags |= PF_LICENSE_FORCE_SELECTION;\r\n\r\n              if (!p->parms[0])\r\n                p->parms[0] = DefineInnerLangString(LS(NLF_LICENSE_TEXT_FSRB, NLF_ULICENSE_TEXT_FSRB));\r\n              if (!p->parms[2])\r\n                p->parms[2] = DefineInnerLangString(NLF_BTN_LICENSE_AGREE);\r\n              if (!p->parms[3])\r\n                p->parms[3] = DefineInnerLangString(NLF_BTN_LICENSE_DISAGREE);\r\n\r\n              license_fsrb++;\r\n            }\r\n            break;\r\n          }\r\n#endif\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n          case IDD_SELCOM:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(LS(NLF_COMP_TEXT, NLF_UCOMP_TEXT));\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT1, NLF_UCOMP_SUBTEXT1));\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT2, NLF_UCOMP_SUBTEXT2));\r\n            if (!p->parms[3] && !uninstall_mode && HasUserDefined(NLF_COMP_SUBTEXT1))\r\n              p->parms[3] = p->parms[1];\r\n            if (!p->parms[4] && !uninstall_mode && HasUserDefined(NLF_COMP_SUBTEXT2))\r\n              p->parms[4] = p->parms[2];\r\n            else if (!p->parms[4])\r\n              p->parms[4] = DefineInnerLangString(LS(NLF_COMP_SUBTEXT1_NO_INST_TYPES, NLF_UCOMP_SUBTEXT1_NO_INST_TYPES));\r\n\r\n            DefineInnerLangString(NLF_SPACE_REQ);\r\n            DefineInnerLangString(NLF_BYTE);\r\n            DefineInnerLangString(NLF_KILO);\r\n            DefineInnerLangString(NLF_MEGA);\r\n            DefineInnerLangString(NLF_GIGA);\r\n\r\n            selcom++;\r\n            break;\r\n          }\r\n#endif\r\n          case IDD_DIR:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(LS(NLF_DIR_TEXT, NLF_UDIR_TEXT));\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(LS(NLF_DIR_SUBTEXT, NLF_UDIR_SUBTEXT));\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(NLF_BTN_BROWSE);\r\n            if (!p->parms[3])\r\n              p->parms[3] = DefineInnerLangString(LS(NLF_DIR_BROWSETEXT, NLF_UDIR_BROWSETEXT));\r\n            if (!p->parms[4])\r\n              p->parms[4] = m_UserVarNames.get(_T(\"INSTDIR\"));\r\n            else\r\n              p->parms[4]--;\r\n\r\n            DefineInnerLangString(NLF_SPACE_AVAIL);\r\n            DefineInnerLangString(NLF_SPACE_REQ);\r\n            DefineInnerLangString(NLF_BYTE);\r\n            DefineInnerLangString(NLF_KILO);\r\n            DefineInnerLangString(NLF_MEGA);\r\n            DefineInnerLangString(NLF_GIGA);\r\n#ifdef NSIS_CONFIG_LOG\r\n            DefineInnerLangString(NLF_LOG_INSTALL_PROCESS);\r\n#endif\r\n\r\n            dir++;\r\n            break;\r\n          }\r\n          case IDD_INSTFILES:\r\n          {\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_BTN_DETAILS);\r\n            if (!p->parms[2])\r\n              p->parms[2] = DefineInnerLangString(NLF_COMPLETED);\r\n\r\n            DefineInnerLangString(NLF_COPY_DETAILS);\r\n\r\n            instlog++;\r\n            instlog_used++;\r\n            break;\r\n          }\r\n          case IDD_UNINST:\r\n          {\r\n            if (!p->parms[0])\r\n              p->parms[0] = DefineInnerLangString(NLF_UNINST_TEXT);\r\n            if (!p->parms[1])\r\n              p->parms[1] = DefineInnerLangString(NLF_UNINST_SUBTEXT);\r\n            if (!p->parms[4])\r\n              p->parms[4] = m_UserVarNames.get(_T(\"INSTDIR\"));\r\n            else\r\n              p->parms[4]--;\r\n\r\n            uninstconfirm++;\r\n            break;\r\n          }\r\n        }\r\n\r\n        p->flags &= ~PF_PAGE_EX;\r\n      }\r\n\r\n      p--;\r\n\r\n      if (!p->next)\r\n        p->next = DefineInnerLangString(NLF_BTN_CLOSE);\r\n      if (p->wndproc_id == PWP_COMPLETED)\r\n        (p-1)->next = DefineInnerLangString(NLF_BTN_CLOSE);\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n      if (uninstall_mode) {\r\n        if (!uenable_last_page_cancel && instlog_used)\r\n          p->flags &= ~PF_CANCEL_ENABLE;\r\n      }\r\n      else\r\n#endif\r\n      {\r\n        if (!enable_last_page_cancel && instlog_used)\r\n          p->flags &= ~PF_CANCEL_ENABLE;\r\n      }\r\n\r\n      if (!instlog_used) {\r\n        warning(DW_INSTFILESPAGE_NOT_USED, _T(\"%\") NPRIs _T(\"age instfiles not used, no sections will be executed!\"), uninstall_mode ? _T(\"Uninstall p\") : _T(\"P\"));\r\n      }\r\n    }\r\n  }\r\n\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!uninstall_mode) {\r\n      set_uninstall_mode(1);\r\n      goto again;\r\n    }\r\n    else\r\n      set_uninstall_mode(0);\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n\r\n\r\n  SCRIPT_MSG(_T(\"Done!\\n\"));\r\n\r\n#define REMOVE_ICON(id) if (disable_window_icon) { \\\r\n    BYTE* dlg = res_editor->GetResource(RT_DIALOG, id, NSIS_DEFAULT_LANG); \\\r\n    if (dlg) { \\\r\n      CDialogTemplate dt(dlg,build_unicode,uDefCodePage); \\\r\n      res_editor->FreeResource(dlg); \\\r\n      if (dt.RemoveItem(IDC_ULICON)) { \\\r\n        DialogItemTemplate* text = dt.GetItem(IDC_INTROTEXT); \\\r\n        DialogItemTemplate* prog = dt.GetItem(IDC_PROGRESS); \\\r\n        if (text) { \\\r\n          text->sWidth += text->sX; \\\r\n          text->sX = 0; \\\r\n        } \\\r\n        if (prog) { \\\r\n          prog->sWidth += prog->sX; \\\r\n          prog->sX = 0; \\\r\n        } \\\r\n         \\\r\n        DWORD dwSize; \\\r\n        dlg = dt.Save(dwSize); \\\r\n        res_editor->UpdateResource(RT_DIALOG, id, NSIS_DEFAULT_LANG, dlg, dwSize); \\\r\n        dt.FreeSavedTemplate(dlg); \\\r\n      } \\\r\n    } \\\r\n  }\r\n\r\n  try {\r\n    SCRIPT_MSG(_T(\"Removing unused resources... \"));\r\n    init_res_editor();\r\n#ifdef NSIS_CONFIG_LICENSEPAGE\r\n    if (!license_normal) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE);\r\n    if (!license_fsrb) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE_FSRB, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE_FSRB);\r\n    if (!license_fscb) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_LICENSE_FSCB, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_LICENSE_FSCB);\r\n#endif // NSIS_CONFIG_LICENSEPAGE\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    if (!selcom) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_SELCOM, NSIS_DEFAULT_LANG, 0, 0);\r\n      res_editor->UpdateResource(RT_BITMAP, IDB_BITMAP1, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_SELCOM);\r\n#endif // NSIS_CONFIG_COMPONENTPAGE\r\n    if (!dir) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_DIR, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_DIR);\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!uninstconfirm) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_UNINST, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_UNINST);\r\n#endif // NSIS_CONFIG_UNINSTALL_SUPPORT\r\n    if (!instlog) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_INSTFILES, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n    else REMOVE_ICON(IDD_INSTFILES);\r\n    if (!main) {\r\n      res_editor->UpdateResource(RT_DIALOG, IDD_INST, NSIS_DEFAULT_LANG, 0, 0);\r\n      if (!build_compress_whole && !build_crcchk)\r\n        res_editor->UpdateResource(RT_DIALOG, IDD_VERIFY, NSIS_DEFAULT_LANG, 0, 0);\r\n    }\r\n\r\n    SCRIPT_MSG(_T(\"Done!\\n\"));\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\nvoid CEXEBuild::PrepareInstTypes()\r\n{\r\n  if (!(cur_header->flags & CH_FLAGS_NO_CUSTOM))\r\n    cur_header->install_types[NSIS_MAX_INST_TYPES] = DefineInnerLangString(NLF_COMP_CUSTOM);\r\n\r\n  // set insttype list for RO sections that didn't use SectionIn\r\n  int i = cur_header->blocks[NB_SECTIONS].num;\r\n  section *sections = (section *) cur_sections->get();\r\n\r\n  while (i--)\r\n  {\r\n    if (sections[i].flags & SF_RO && !sections[i].install_types)\r\n      sections[i].install_types = ~0;\r\n  }\r\n\r\n  // set selection to first insttype\r\n  if (cur_header->install_types[0])\r\n  {\r\n    int i = cur_header->blocks[NB_SECTIONS].num;\r\n    section *sections = (section *) cur_sections->get();\r\n\r\n    // if /o was used abort since the user did his manual choice\r\n    while (i--)\r\n      if ((sections[i].flags & SF_SELECTED) == 0)\r\n        return;\r\n\r\n    i = cur_header->blocks[NB_SECTIONS].num;\r\n\r\n    while (i--)\r\n      if ((sections[i].install_types & 1) == 0)\r\n        sections[i].flags &= ~SF_SELECTED;\r\n  }\r\n}\r\n#endif\r\n\r\nvoid CEXEBuild::AddStandardStrings()\r\n{\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (uninstall_mode)\r\n  {\r\n    cur_header->str_uninstchild = add_asciistring(_T(\"$TEMP\\\\Un.exe\"));\r\n    cur_header->str_uninstcmd = add_asciistring(_T(\"\\\"$TEMP\\\\Un.exe\\\" $0 _?=$INSTDIR\\\\\"));\r\n  }\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n  cur_header->str_wininit = is_target_64bit() ? 0 : add_asciistring(_T(\"$WINDIR\\\\wininit.ini\"));\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n}\r\n\r\nwriter_target_info CEXEBuild::mk_writer_target_info() { return writer_target_info(build_unicode, is_target_64bit()); }\r\n\r\nvoid CEXEBuild::PrepareHeaders(IGrowBuf *hdrbuf)\r\n{\r\n  const writer_target_info ti = mk_writer_target_info();\r\n  const unsigned int cbHdr = get_header_size();\r\n  GrowBuf blocks_buf;\r\n  growbuf_writer_sink sink(&blocks_buf, ti);\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  cur_header->blocks[NB_PAGES].offset = cbHdr + blocks_buf.getlen();\r\n  page_writer::write_block(cur_pages, &sink);\r\n#endif\r\n\r\n  cur_header->blocks[NB_SECTIONS].offset = cbHdr + blocks_buf.getlen();\r\n  section_writer::write_block(cur_sections, &sink);\r\n\r\n  cur_header->blocks[NB_ENTRIES].offset = cbHdr + blocks_buf.getlen();\r\n  entry_writer::write_block(cur_entries, &sink);\r\n\r\n  cur_header->blocks[NB_STRINGS].offset = cbHdr + blocks_buf.getlen();\r\n  blocks_buf.add(cur_strlist->getstorageptr(), cur_strlist->gettotalsize());\r\n\r\n  cur_header->blocks[NB_LANGTABLES].offset = cbHdr + blocks_buf.getlen();\r\n  lang_table_writer::write_block(cur_langtables, &sink, cur_header->langtable_size);\r\n\r\n  cur_header->blocks[NB_CTLCOLORS].offset = cbHdr + blocks_buf.getlen();\r\n  ctlcolors_writer::write_block(cur_ctlcolors, &sink);\r\n\r\n#ifdef NSIS_SUPPORT_BGBG\r\n  if (cur_header->bg_color1 != -1)\r\n  {\r\n    bg_font.lfFaceName[LF_FACESIZE-1] = 0;\r\n\r\n    cur_header->blocks[NB_BGFONT].offset = cbHdr + blocks_buf.getlen();\r\n\r\n    LOGFONT_writer w(&sink);\r\n    w.write(&bg_font);\r\n  }\r\n#endif\r\n\r\n  growbuf_writer_sink sink2(hdrbuf, ti);\r\n  header_writer header(&sink2);\r\n  header.write(cur_header, ti);\r\n\r\n  sink2.write_growbuf(&blocks_buf);\r\n}\r\n\r\nint CEXEBuild::SetVarsSection()\r\n{\r\n  try {\r\n    init_res_editor();\r\n\r\n    VerifyDeclaredUserVarRefs(&m_UserVarNames);\r\n    int MaxUserVars = m_UserVarNames.getnum();\r\n    int stringSize = NSIS_MAX_STRLEN * (build_unicode?2:1);\r\n    if (!res_editor->SetPESectionVirtualSize(NSIS_VARS_SECTION, MaxUserVars * stringSize))\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12346: invalid exehead cannot find section \\\"%\") NPRIs _T(\"\\\"!\\n\"), _T(NSIS_VARS_SECTION));\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::SetManifest()\r\n{\r\n  try {\r\n    init_res_editor();\r\n    manifest::SPECIFICATION spec = { (manifest::flags) manifest_flags, manifest_dpiaware, manifest_dpiawareness.c_str(), manifest_lpaware, &manifest_sosl, manifest_maxversiontested.c_str() };\r\n    string manifest = manifest::generate(manifest_comctl, manifest_exec_level, spec);\r\n\r\n    if (manifest == \"\")\r\n      return PS_OK;\r\n\r\n    if (!build_unicode && manifest_lpaware >= manifest::lpaware_true)\r\n      throw std::runtime_error(\"Incompatible option\");\r\n\r\n    // TODO: Ideally we should allow this but we must be sure that the manifest is custom and not a manifest from the stub\r\n    //if (res_editor->ResourceExists(MAKEINTRESOURCE(24), 1, CResourceEditor::ANYLANGID))\r\n    //  return PS_OK; // Allow user to completely override the manifest with PEAddResource\r\n\r\n    // Saved directly as binary into the exe.\r\n    res_editor->UpdateResource(MAKEINTRESOURCE(24), 1, NSIS_DEFAULT_LANG, (LPBYTE) const_cast<char*>(manifest.c_str()), (DWORD) manifest.length());\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"Error setting manifest: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::UpdatePEHeader()\r\n{\r\n  try {\r\n    PIMAGE_NT_HEADERS headers = CResourceEditor::GetNTHeaders(m_exehead);\r\n    // workaround for bug #2697027, #2725883, #2803097\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MajorImageVersion) = FIX_ENDIAN_INT16(6);\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MinorImageVersion) = FIX_ENDIAN_INT16(0);\r\n    // Override SubsystemVersion?\r\n    if (PESubsysVerMaj != (WORD) -1)\r\n    {\r\n      *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MajorSubsystemVersion) = FIX_ENDIAN_INT16(PESubsysVerMaj);\r\n      *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, MinorSubsystemVersion) = FIX_ENDIAN_INT16(PESubsysVerMin);\r\n    }\r\n    // DllCharacteristics\r\n    *GetCommonMemberFromPEOptHdr(headers->OptionalHeader, DllCharacteristics) = FIX_ENDIAN_INT16(PEDllCharacteristics);\r\n  } catch (std::runtime_error& err) {\r\n    ERROR_MSG(_T(\"Error updating PE headers: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::set_default_output_filename(const tstring& filename)\r\n{\r\n    if (build_output_filename[0] == 0)\r\n        my_strncpy(build_output_filename,filename.c_str(),COUNTOF(build_output_filename));\r\n}\r\n\r\nint CEXEBuild::check_write_output_errors() const\r\n{\r\n  if (has_called_write_output)\r\n  {\r\n    ERROR_MSG(_T(\"Error (write_output): write_output already called, can't continue\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_output_filename[0])\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: never had OutFile command\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_sections.getlen())\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: no sections specified\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (!build_entries.getlen())\r\n  {\r\n    ERROR_MSG(_T(\"Error: invalid script: no entries specified\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (build_cursection)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Section left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (sectiongroup_open_cnt)\r\n  {\r\n    ERROR_MSG(_T(\"Error: SectionGroup left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (cur_page)\r\n  {\r\n    ERROR_MSG(_T(\"Error: PageEx left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  // deal with functions, for both install and uninstall modes.\r\n  if (build_cursection_isfunc)\r\n  {\r\n    ERROR_MSG(_T(\"Error: Function left open at EOF\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::prepare_uninstaller() {\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (ubuild_entries.getlen())\r\n  {\r\n    if (!uninstaller_writes_used)\r\n    {\r\n      warning(DW_UNCODE_WITHOUT_UNEXE, _T(\"Uninstaller script code found but WriteUninstaller never used - no uninstaller will be created.\"));\r\n      return PS_OK;\r\n    }\r\n\r\n    build_uninst.flags|=build_header.flags&(CH_FLAGS_PROGRESS_COLORED|CH_FLAGS_NO_ROOT_DIR);\r\n\r\n    set_uninstall_mode(1);\r\n\r\n    DefineInnerLangString(NLF_UCAPTION);\r\n\r\n    if (resolve_coderefs(_T(\"uninstall\")))\r\n      return PS_ERROR;\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n    // set sections to the first insttype\r\n    PrepareInstTypes();\r\n#endif\r\n\r\n    // Add standard strings to string table\r\n    AddStandardStrings();\r\n\r\n    set_uninstall_mode(0);\r\n  }\r\n  else if (uninstaller_writes_used)\r\n  {\r\n    ERROR_MSG(_T(\"Error: no Uninstall section specified, but WriteUninstaller used %d time(s)\\n\"),uninstaller_writes_used);\r\n    return PS_ERROR;\r\n  }\r\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::pack_exe_header()\r\n{\r\n  if (!(build_packname[0] && build_packcmd[0])) {\r\n    // header not asked to be packed\r\n    return PS_OK;\r\n  }\r\n\r\n  // write out exe header, pack, read back in, and\r\n  // update the header info\r\n  if (m_exehead_size != write_octets_to_file(build_packname, m_exehead, m_exehead_size))\r\n  {\r\n    ERROR_MSG(_T(\"Error: writing temporary file \\\"%\") NPRIs _T(\"\\\" for pack\\n\"),build_packname);\r\n    return PS_ERROR;\r\n  }\r\n  int ec = sane_system(build_packcmd);\r\n  if (ec == -1)\r\n  {\r\n    _tremove(build_packname);\r\n    ERROR_MSG(_T(\"Error: calling packer on \\\"%\") NPRIs _T(\"\\\"\\n\"),build_packname);\r\n    return PS_ERROR;\r\n  }\r\n  if (ec != 0)\r\n    warning(DW_PACKHDR_RETNONZERO, _T(\"Packer returned %d, \\\"%\") NPRIs _T(\"\\\" might still be unpacked\\n\"),ec,build_packname);\r\n\r\n  int result = update_exehead(build_packname);\r\n  _tremove(build_packname);\r\n\r\n  if (result != PS_OK)\r\n  {\r\n    ERROR_MSG(_T(\"Error: reading temporary file \\\"%\") NPRIs _T(\"\\\" after pack\\n\"),build_packname);\r\n    return result;\r\n  }\r\n\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::write_output(void)\r\n{\r\n#ifndef NSIS_CONFIG_CRC_SUPPORT\r\n  build_crcchk=0;\r\n#endif\r\n\r\n  RET_UNLESS_OK( check_write_output_errors() );\r\n\r\n  has_called_write_output=true;\r\n  if (!changed_target && !build_unicode)\r\n    warning(DW_GENERIC_DEPRECATED, _T(\"ANSI targets are deprecated\"));\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  RET_UNLESS_OK( add_plugins_dir_initializer() );\r\n#endif //NSIS_CONFIG_PLUGIN_SUPPORT\r\n\r\n#ifdef NSIS_SUPPORT_VERSION_INFO\r\n  RET_UNLESS_OK( AddVersionInfo() );\r\n#endif //NSIS_SUPPORT_VERSION_INFO\r\n\r\n  RET_UNLESS_OK( prepare_uninstaller() );\r\n\r\n  DefineInnerLangString(NLF_CAPTION);\r\n  if (resolve_coderefs(_T(\"install\")))\r\n    return PS_ERROR;\r\n\r\n#ifdef NSIS_CONFIG_COMPONENTPAGE\r\n  // set sections to the first insttype\r\n  PrepareInstTypes();\r\n#endif\r\n\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  RET_UNLESS_OK( ProcessPages() );\r\n#endif //NSIS_CONFIG_VISIBLE_SUPPORT\r\n\r\n  // Generate language tables\r\n  RET_UNLESS_OK( GenerateLangTables() );\r\n\r\n  // Setup user variables PE section\r\n  RET_UNLESS_OK( SetVarsSection() );\r\n\r\n  // Set XML manifest\r\n  RET_UNLESS_OK( SetManifest() );\r\n\r\n  // Add standard strings to string table\r\n  AddStandardStrings();\r\n\r\n  try {\r\n    // Load icon from exe, if needed\r\n    if (installer_icon.empty())\r\n    {\r\n      init_res_editor();\r\n      installer_icon = load_icon_res(res_editor, IDI_ICON2);\r\n    }\r\n\r\n    // Set icon\r\n    set_main_icon(res_editor, IDI_ICON2, installer_icon, uninstaller_icon);\r\n\r\n    // Save all changes to the exe header\r\n    close_res_editor();\r\n  }\r\n  catch (exception& err) {\r\n    ERROR_MSG(_T(\"\\nError: %\") NPRIs _T(\"\\n\"), CtoTStrParam(err.what()));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  // Final PE touch-ups\r\n  RET_UNLESS_OK( UpdatePEHeader() );\r\n\r\n  RET_UNLESS_OK( pack_exe_header() );\r\n\r\n\r\n  build_optimize_datablock=0;\r\n\r\n  UINT data_block_size_before_uninst = build_datablock.getlen();\r\n\r\n  RET_UNLESS_OK( uninstall_generate() );\r\n\r\n  unsigned char limit = 0; // Limit the number of retries in case the host has some kind of bug\r\nretry_output:\r\n  {\r\n    tstring full_path = get_full_path(build_output_filename), fnamebuf = get_file_name(build_output_filename);\r\n    notify(MakensisAPI::NOTIFY_OUTPUT, full_path.c_str());\r\n    INFO_MSG(_T(\"\\nOutput: \\\"%\") NPRIs _T(\"\\\"\\n\"), full_path.c_str());\r\n    const TCHAR *fname = fnamebuf.c_str();\r\n    // Warn when special compatibility names are used. See also: http://github.com/wixtoolset/wix4/commit/3f4341b8ac4d13dffb1d6ba773d48ccc0ab07cf8\r\n    if (!_tcsicmp(fname, _T(\"setup.exe\")))\r\n    {\r\n      const bool orgdispwarn = display_warnings;\r\n      display_warnings = false; // Don't display warning inline in the middle of our statistics output.\r\n      warning(DW_INSECURE_OUTFILENAME, _T(\"Insecure filename \\\"%\") NPRIs _T(\"\\\", Windows will unsafely load compatibility shims into the process.\"), fname);\r\n      display_warnings = orgdispwarn;\r\n    }\r\n  }\r\n\r\n  FILE *fp = FOPEN(build_output_filename,(\"w+b\"));\r\n  if (!fp)\r\n  {\r\n    ERROR_MSG(_T(\"Can't open output file\\n\"));\r\n    if (++limit && prompt_for_output_path(build_output_filename, COUNTOF(CEXEBuild::build_output_filename))) goto retry_output;\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (fwrite(m_exehead,1,m_exehead_size,fp) != m_exehead_size)\r\n  {\r\n    ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),m_exehead_size);\r\n    fclose(fp);\r\n    return PS_ERROR;\r\n  }\r\n\r\n  crc32_t crc=0;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n  #ifdef NSIS_CONFIG_CRC_ANAL\r\n    crc=CRC32(crc,m_exehead,(DWORD)m_exehead_size);\r\n  #else\r\n    crc=CRC32(crc,m_exehead+512,(DWORD)m_exehead_size-512);\r\n  #endif\r\n#endif\r\n\r\n  firstheader fh={0,};\r\n  fh.nsinst[0]=FH_INT1;\r\n  fh.nsinst[1]=FH_INT2;\r\n  fh.nsinst[2]=FH_INT3;\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n  fh.flags=(build_crcchk?(build_crcchk==2?FH_FLAGS_FORCE_CRC:0):FH_FLAGS_NO_CRC);\r\n#else\r\n  fh.flags=0;\r\n#endif\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  if (build_header.flags&(CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) fh.flags |= FH_FLAGS_SILENT;\r\n#endif\r\n  fh.siginfo=FH_SIG;\r\n\r\n  int installinfo_compressed;\r\n  int fd_start = 0;\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (build_compress_whole)\r\n  {\r\n    int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n    if (n != C_OK)\r\n    {\r\n      ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n      return PS_ERROR;\r\n    }\r\n  }\r\n#endif\r\n\r\n  {\r\n    GrowBuf ihd;\r\n    {\r\n      GrowBuf hdrcomp;\r\n\r\n      PrepareHeaders(&hdrcomp);\r\n\r\n      if (add_data((char*)hdrcomp.get(),hdrcomp.getlen(),&ihd) < 0)\r\n        return PS_ERROR;\r\n\r\n      fh.length_of_header=hdrcomp.getlen();\r\n      installinfo_compressed=ihd.getlen();\r\n    }\r\n\r\n    if (!build_compress_whole)\r\n      fh.length_of_all_following_data=ihd.getlen()+build_datablock.getlen()+(int)sizeof(firstheader)+(build_crcchk?sizeof(crc32_t):0);\r\n    else\r\n      fd_start=ftell(fp);\r\n\r\n    try\r\n    {\r\n      file_writer_sink sink(fp, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n    catch (...)\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(fh));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    if (build_compress_whole) {\r\n      if (deflateToFile(fp,(char*)ihd.get(),ihd.getlen()))\r\n      {\r\n        fclose(fp);\r\n        return PS_ERROR;\r\n      }\r\n    }\r\n    else\r\n#endif\r\n    {\r\n      if (fwrite(ihd.get(),1,ihd.getlen(),fp) != (unsigned int)ihd.getlen())\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),ihd.getlen());\r\n        fclose(fp);\r\n        return PS_ERROR;\r\n      }\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n      crc_writer_sink crc_sink((crc32_t *) &crc);\r\n      firstheader_writer w(&crc_sink);\r\n      w.write(&fh);\r\n\r\n      crc=CRC32(crc,(unsigned char*)ihd.get(),ihd.getlen());\r\n#endif\r\n    }\r\n  }\r\n\r\n  INFO_MSG(_T(\"Install: \"));\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n  int np=build_header.blocks[NB_PAGES].num;\r\n  if (PAGE_COMPLETED != PAGE_INSTFILES && np) --np; // Special page not part of count\r\n  INFO_MSG(_T(\"%d page%\") NPRIs _T(\" (%d bytes), \"),np,np==1?_T(\"\"):_T(\"s\"),np*sizeof(page));\r\n#endif\r\n#define IsRequiredSection(s) ( (!(s).name_ptr && ((s).flags & SF_SELECTED)) || (((s).flags & (SF_RO|SF_SELECTED)) == (SF_RO|SF_SELECTED)))\r\n  {\r\n    int ns=build_sections.getlen()/sizeof(section), x;\r\n    section *s=(section*)build_sections.get();\r\n    unsigned int req=0;\r\n    for (x = 0; x < ns; x ++) if (IsRequiredSection(s[x])) ++req;\r\n    INFO_MSG(_T(\"%d section%\") NPRIs,ns,ns==1?_T(\"\"):_T(\"s\"));\r\n    if (req) INFO_MSG(_T(\" (%u required)\"),req);\r\n    INFO_MSG(_T(\" (%d bytes), \"), build_sections.getlen());\r\n  }\r\n  int ne=build_header.blocks[NB_ENTRIES].num;\r\n  INFO_MSG(_T(\"%d instruction%\") NPRIs _T(\" (%d bytes), \"),ne,ne==1?_T(\"\"):_T(\"s\"),ne*sizeof(entry));\r\n  int ns=build_strlist.getnum();\r\n  INFO_MSG(_T(\"%d string%\") NPRIs _T(\" (%d bytes), \"),ns,ns==1?_T(\"\"):_T(\"s\"),build_strlist.gettotalsize());\r\n  int nlt=build_header.blocks[NB_LANGTABLES].num;\r\n  INFO_MSG(_T(\"%d language table%\") NPRIs _T(\" (%d bytes).\\n\"),nlt,nlt==1?_T(\"\"):_T(\"s\"),build_langtables.getlen());\r\n  if (ubuild_entries.getlen())\r\n  {\r\n    INFO_MSG(_T(\"Uninstall: \"));\r\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\r\n    np=build_uninst.blocks[NB_PAGES].num;\r\n    if (PAGE_COMPLETED != PAGE_INSTFILES && np) --np; // Special page not part of count\r\n    INFO_MSG(_T(\"%d page%\") NPRIs _T(\" (%d bytes), \"),np,np==1?_T(\"\"):_T(\"s\"),ubuild_pages.getlen());\r\n#endif\r\n    {\r\n      int ns=ubuild_sections.getlen()/sizeof(section), x;\r\n      section *s=(section*)ubuild_sections.get();\r\n      unsigned int req=0;\r\n      for (x = 0; x < ns; x ++) if (IsRequiredSection(s[x])) ++req;\r\n      INFO_MSG(_T(\"%d section%\") NPRIs,ns,ns==1?_T(\"\"):_T(\"s\"));\r\n      if (req) INFO_MSG(_T(\" (%u required)\"),req);\r\n      INFO_MSG(_T(\" (%d bytes), \"), ubuild_sections.getlen());\r\n    }\r\n    ne=build_uninst.blocks[NB_ENTRIES].num;\r\n    INFO_MSG(_T(\"%d instruction%\") NPRIs _T(\" (%d bytes), \"),ne,ne==1?_T(\"\"):_T(\"s\"),ubuild_entries.getlen());\r\n    ns=ubuild_strlist.getnum();\r\n    INFO_MSG(_T(\"%d string%\") NPRIs _T(\" (%d bytes), \"),ns,ns==1?_T(\"\"):_T(\"s\"),ubuild_strlist.gettotalsize());\r\n    nlt=build_uninst.blocks[NB_LANGTABLES].num;\r\n    INFO_MSG(_T(\"%d language table%\") NPRIs _T(\" (%d bytes).\\n\"),nlt,nlt==1?_T(\"\"):_T(\"s\"),ubuild_langtables.getlen());\r\n  }\r\n\r\n\r\n  if (db_opt_save)\r\n  {\r\n    size_t total_out_size_estimate=\r\n      m_exehead_size+sizeof(fh)+build_datablock.getlen()+(build_crcchk?sizeof(crc32_t):0);\r\n    int pc=(int)((db_opt_save*1000)/(db_opt_save+total_out_size_estimate));\r\n    FriendlySize fs(db_opt_save);\r\n    INFO_MSG(_T(\"Datablock optimizer saved %u%\") NPRIs _T(\" (~%d.%d%%).\\n\"),\r\n      fs.UInt(),fs.Scale(),pc/10,pc%10);\r\n  }\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  INFO_MSG(_T(\"\\nUsing %\") NPRIs _T(\"%\") NPRIs _T(\" compression.\\n\\n\"), compressor->GetName(), build_compress_whole?_T(\" (compress whole)\"):_T(\"\"));\r\n#endif\r\n\r\n  unsigned int total_usize=(unsigned int) m_exehead_original_size;\r\n\r\n  INFO_MSG(_T(\"EXE header size:          %10u / %u bytes\\n\"),m_exehead_size,m_exehead_original_size);\r\n\r\n  if (build_compress_whole) {\r\n    INFO_MSG(_T(\"Install code:                          (%d bytes)\\n\"),\r\n      sizeof(fh)+fh.length_of_header);\r\n  }\r\n  else {\r\n    INFO_MSG(_T(\"Install code:             %10d / %d bytes\\n\"),\r\n      sizeof(fh)+installinfo_compressed,\r\n      sizeof(fh)+fh.length_of_header);\r\n  }\r\n\r\n  total_usize+=sizeof(fh)+fh.length_of_header;\r\n\r\n  {\r\n    unsigned int dbsize;\r\n    UINT64 dbsizeu;\r\n    dbsize = build_datablock.getlen();\r\n    if (uninstall_size > 0 && uninstall_size < UINT_MAX) dbsize -= uninstall_size;\r\n\r\n    if (build_compress_whole) {\r\n      dbsizeu = dbsize;\r\n      INFO_MSG(_T(\"Install data:                          (%u bytes)\\n\"),dbsize); // dbsize==dbsizeu and is easy to print\r\n    }\r\n    else {\r\n      dbsizeu = db_full_size - uninstall_size_full;\r\n      FriendlySize us(dbsizeu, GFSF_BYTESIFPOSSIBLE); // uncompressed installer size\r\n      FriendlySize cs(dbsize, GFSF_BYTESIFPOSSIBLE | (us.UInt()==dbsizeu ? GFSF_HIDEBYTESCALE : 0)); // compressed installer size\r\n      INFO_MSG(_T(\"Install data:             %10u%\") NPRIs _T(\" / %u%\") NPRIs _T(\"\\n\"),\r\n        cs.UInt(),cs.Scale(),us.UInt(),us.Scale()); // \"123 / 456 bytes\" or \"123 KiB / 456 MiB\"\r\n    }\r\n    UINT future = (build_crcchk ? sizeof(int) : 0) + (uninstall_size > 0 && uninstall_size < UINT_MAX ? uninstall_size_full : 0);\r\n    UINT maxsize = (~(UINT)0) - (total_usize + future), totsizadd = dbsizeu < maxsize ? (UINT)dbsizeu : maxsize;\r\n    total_usize += totsizadd; // Might not be accurate, it is more important to not overflow the additions coming up\r\n  }\r\n\r\n  if (uninstall_size < UINT_MAX)\r\n  {\r\n    if (build_compress_whole)\r\n      INFO_MSG(_T(\"Uninstall code+data:                   (%u bytes)\\n\"),uninstall_size_full);\r\n    else\r\n      INFO_MSG(_T(\"Uninstall code+data:      %10u / %u bytes\\n\"),uninstall_size,uninstall_size_full);\r\n    total_usize += uninstall_size_full;\r\n  }\r\n\r\n  if (build_compress_whole) {\r\n    INFO_MSG(_T(\"Compressed data:          \"));\r\n  }\r\n\r\n  if (build_datablock.getlen())\r\n  {\r\n    build_datablock.setro(TRUE);\r\n    int dbl = build_datablock.getlen();\r\n    int left = dbl;\r\n    while (left > 0)\r\n    {\r\n      int l = min(build_filebuflen, left);\r\n      char *dbptr = (char *) build_datablock.get(dbl - left, l);\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n      if (build_compress_whole)\r\n      {\r\n        if (deflateToFile(fp,dbptr,l))\r\n        {\r\n          fclose(fp);\r\n          return PS_ERROR;\r\n        }\r\n      }\r\n      else\r\n#endif\r\n      {\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n        crc=CRC32(crc,(unsigned char *)dbptr,l);\r\n#endif\r\n        if ((int)fwrite(dbptr,1,l,fp) != l)\r\n        {\r\n          ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),l);\r\n          fclose(fp);\r\n          return PS_ERROR;\r\n        }\r\n        fflush(fp);\r\n      }\r\n      build_datablock.release();\r\n      left -= l;\r\n    }\r\n    build_datablock.setro(FALSE);\r\n    build_datablock.clear();\r\n  }\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n  if (build_compress_whole)\r\n  {\r\n    if (deflateToFile(fp,NULL,0))\r\n    {\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n    compressor->End();\r\n\r\n    unsigned fend = ftell(fp);\r\n\r\n    fh.length_of_all_following_data=ftell(fp)-fd_start+(build_crcchk?sizeof(crc32_t):0);\r\n    INFO_MSG(\r\n      _T(\"%10d / %d bytes\\n\"),\r\n      ftell(fp) - fd_start,\r\n      data_block_size_before_uninst + fh.length_of_header + sizeof(firstheader) + uninstall_size_full\r\n    );\r\n\r\n    fseek(fp,fd_start,SEEK_SET);\r\n\r\n    try\r\n    {\r\n      file_writer_sink sink(fp, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n    catch (...)\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(fh));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    if (build_crcchk)\r\n    {\r\n      // check rest of CRC\r\n      fseek(fp,fd_start,SEEK_SET);\r\n      for (;;)\r\n      {\r\n        char buf[32768];\r\n        unsigned int l=(unsigned int)fread(buf,1,sizeof(buf),fp);\r\n        if (!l) break;\r\n        crc=CRC32(crc,(unsigned char *)buf,l);\r\n      }\r\n    }\r\n#endif\r\n    fseek(fp,fend,SEEK_SET); // reset eof flag\r\n  }\r\n#endif\r\n\r\n  if (build_crcchk)\r\n  {\r\n    total_usize+=sizeof(int);\r\n    int rcrc = FIX_ENDIAN_INT32(crc);\r\n    if (fwrite(&rcrc,1,sizeof(crc32_t),fp) != sizeof(crc32_t))\r\n    {\r\n      ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"),sizeof(crc32_t));\r\n      fclose(fp);\r\n      return PS_ERROR;\r\n    }\r\n    INFO_MSG(_T(\"CRC (0x%08X):                  4 / 4 bytes\\n\"),crc);\r\n  }\r\n  INFO_MSG(_T(\"\\n\"));\r\n  {\r\n    long fileend = ftell(fp);\r\n    UINT pc=(UINT)(((UINT64)fileend*1000)/(total_usize));\r\n    INFO_MSG(_T(\"Total size:               %10u / %u bytes (%u.%u%%)\\n\"),\r\n      fileend,total_usize,pc/10,pc%10);\r\n  }\r\n  fclose(fp);\r\n  RET_UNLESS_OK(run_postbuild_cmds(postbuild_cmds, build_output_filename, _T(\"Finalize\")));\r\n  print_warnings();\r\n  return PS_OK;\r\n}\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\nint CEXEBuild::deflateToFile(FILE *fp, char *buf, int len) // len==0 to flush\r\n{\r\n  build_compressor_set=true;\r\n\r\n  char obuf[65536];\r\n  bool flush=false;\r\n  compressor->SetNextIn(buf,len);\r\n  if (!buf||!len)\r\n  {\r\n    char a;\r\n    compressor->SetNextIn(&a,0);\r\n    flush=C_FINISH;\r\n  }\r\n  for (;;)\r\n  {\r\n    compressor->SetNextOut(obuf,sizeof(obuf));\r\n    int ret=compressor->Compress(flush);\r\n    if (ret<0 && (ret!=-1 || !flush))\r\n    {\r\n      ERROR_MSG(_T(\"Error: deflateToFile: deflate() failed(%\") NPRIs _T(\" [%d])\\n\"), compressor->GetErrStr(ret), ret);\r\n      return 1;\r\n    }\r\n    size_t l=compressor->GetNextOut()-obuf;\r\n    if (l)\r\n    {\r\n      if (fwrite(obuf,1,l,fp) != l)\r\n      {\r\n        ERROR_MSG(_T(\"Error: deflateToFile fwrite(%lu) failed\\n\"),(unsigned long)l);\r\n        return 1;\r\n      }\r\n      fflush(fp);\r\n    }\r\n    if (!compressor->GetAvailIn() && (!flush || !l)) break;\r\n  }\r\n  return 0;\r\n}\r\n#endif\r\n\r\nint CEXEBuild::uninstall_generate()\r\n{\r\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\r\n  if (ubuild_entries.getlen() && uninstaller_writes_used)\r\n  {\r\n    SCRIPT_MSG(_T(\"Generating uninstaller... \"));\r\n\r\n    const int start_offset = postubuild_cmds ? truncate_cast(int, m_exehead_size) : 0;\r\n    entry *ent = (entry *) build_entries.get();\r\n    if (!ent) return PS_ERROR; // Check this early\r\n\r\n    MMapBuf udata;\r\n    firstheader fh={0,};\r\n\r\n    GrowBuf uhd;\r\n    {\r\n      GrowBuf udata_exehead;\r\n\r\n      set_uninstall_mode(1);\r\n\r\n      PrepareHeaders(&udata_exehead);\r\n\r\n      fh.length_of_header=udata_exehead.getlen();\r\n      int err=add_data((char*)udata_exehead.get(),udata_exehead.getlen(),&uhd);\r\n      set_uninstall_mode(0);\r\n      if (err < 0) return PS_ERROR;\r\n    }\r\n\r\n    crc32_t crc=0;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    bool calc_crc = true;\r\n#else\r\n    bool calc_crc = false;\r\n#endif\r\n\r\n    // Get offsets of icons to replace for uninstall\r\n    // Also makes sure that the icons are there and in the right size.\r\n    LPBYTE unicon_data = generate_uninstall_icon_data(installer_icon, uninstaller_icon, m_unicon_size);\r\n    if (generate_unicons_offsets(m_exehead, m_exehead_size, unicon_data, IDI_ICON2) == 0)\r\n    {\r\n      delete [] unicon_data;\r\n      return PS_ERROR;\r\n    }\r\n\r\n    int uns = uninstaller_writes_used;\r\n    int uninstdata_offset = build_datablock.getlen();\r\n    for (int ents = build_header.blocks[NB_ENTRIES].num; ents--; ent++)\r\n    {\r\n      if (ent->which == EW_WRITEUNINSTALLER)\r\n      {\r\n        ent->offsets[1] = uninstdata_offset;\r\n        ent->offsets[2] = start_offset ? 0 : (int) m_unicon_size;\r\n        if (!--uns)\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (!start_offset && add_db_data((char *)unicon_data,m_unicon_size) < 0)\r\n    {\r\n      delete [] unicon_data;\r\n      return PS_ERROR;\r\n    }\r\n\r\n    if (start_offset || calc_crc)\r\n    {\r\n      // create the uninstaller\r\n      LPBYTE uninst_header = (LPBYTE) malloc(m_exehead_size);\r\n      if (!uninst_header)\r\n      {\r\n        delete [] unicon_data;\r\n        return PS_ERROR;\r\n      }\r\n\r\n      memcpy(uninst_header, m_exehead, m_exehead_size);\r\n\r\n      // patch the icons\r\n      LPBYTE seeker = unicon_data;\r\n      while (*seeker) {\r\n        DWORD dwSize = FIX_ENDIAN_INT32(*(LPDWORD) seeker);\r\n        seeker += sizeof(DWORD);\r\n        DWORD dwOffset = FIX_ENDIAN_INT32(*(LPDWORD) seeker);\r\n        seeker += sizeof(DWORD);\r\n        memcpy(uninst_header + dwOffset, seeker, dwSize);\r\n        seeker += dwSize;\r\n      }\r\n\r\n      if (calc_crc)\r\n      {\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n#ifdef NSIS_CONFIG_CRC_ANAL\r\n        crc=CRC32(crc, uninst_header, (DWORD)m_exehead_size);\r\n#else\r\n        crc=CRC32(crc, uninst_header + 512, (DWORD)m_exehead_size - 512);\r\n#endif\r\n#endif\r\n      }\r\n\r\n      // write the exehead\r\n      if (start_offset)\r\n        udata.add((char *)uninst_header, truncate_cast(int, m_exehead_size));\r\n\r\n      free(uninst_header);\r\n    }\r\n    delete [] unicon_data;\r\n\r\n    fh.nsinst[0]=FH_INT1;\r\n    fh.nsinst[1]=FH_INT2;\r\n    fh.nsinst[2]=FH_INT3;\r\n    fh.flags=FH_FLAGS_UNINSTALL;\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    fh.flags|=(build_crcchk?(build_crcchk==2?FH_FLAGS_FORCE_CRC:0):FH_FLAGS_NO_CRC);\r\n#endif\r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n    if (build_uninst.flags&(CH_FLAGS_SILENT|CH_FLAGS_SILENT_LOG)) fh.flags |= FH_FLAGS_SILENT;\r\n#endif\r\n    fh.siginfo=FH_SIG;\r\n    fh.length_of_all_following_data=\r\n      uhd.getlen()+ubuild_datablock.getlen()+(int)sizeof(firstheader)+(build_crcchk?sizeof(crc32_t):0);\r\n\r\n    {\r\n      growbuf_writer_sink sink(&udata, mk_writer_target_info());\r\n      firstheader_writer w(&sink);\r\n      w.write(&fh);\r\n    }\r\n\r\n    ubuild_datablock.setro(TRUE);\r\n\r\n#ifdef NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    if (build_compress_whole) {\r\n      // compress uninstaller too\r\n      {\r\n        char obuf[65536];\r\n        int n = compressor->Init(build_compress_level, build_compress_dict_size);\r\n        if (n != C_OK)\r\n        {\r\n          ERROR_MSG(_T(\"Internal compiler error #12345: deflateInit() failed(%\") NPRIs _T(\" [%d]).\\n\"), compressor->GetErrStr(n), n);\r\n          extern void quit(); quit();\r\n        }\r\n\r\n        compressor->SetNextIn((char*)uhd.get(), uhd.getlen());\r\n        while (compressor->GetAvailIn())\r\n        {\r\n          compressor->SetNextOut(obuf, sizeof(obuf));\r\n          compressor->Compress(0);\r\n          if (compressor->GetNextOut() - obuf > 0)\r\n          {\r\n            udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          }\r\n        }\r\n\r\n        int avail_in = ubuild_datablock.getlen();\r\n        int in_pos = 0;\r\n        while (avail_in > 0) {\r\n          int l = min(avail_in, build_filebuflen);\r\n\r\n          char *p = (char*)ubuild_datablock.get(in_pos, l);\r\n          compressor->SetNextIn(p, l);\r\n\r\n          while (compressor->GetAvailIn())\r\n          {\r\n            compressor->SetNextOut(obuf, sizeof(obuf));\r\n            compressor->Compress(0);\r\n            if (compressor->GetNextOut() - obuf > 0)\r\n              udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          }\r\n\r\n          ubuild_datablock.release();\r\n\r\n          avail_in -= l;\r\n          in_pos += l;\r\n        }\r\n\r\n        for (;;)\r\n        {\r\n          compressor->SetNextOut(obuf, sizeof(obuf));\r\n          compressor->Compress(C_FINISH);\r\n          if (compressor->GetNextOut() - obuf > 0)\r\n            udata.add(obuf, truncate_cast(int, (size_t)(compressor->GetNextOut() - obuf)));\r\n          else break;\r\n        }\r\n        compressor->End();\r\n      }\r\n\r\n      firstheader *ufh=(firstheader *)udata.get(start_offset, sizeof(firstheader));\r\n      ufh->length_of_all_following_data=FIX_ENDIAN_INT32((udata.getlen()-start_offset)+(build_crcchk?sizeof(crc32_t):0));\r\n      udata.release();\r\n    }\r\n    else\r\n#endif//NSIS_CONFIG_COMPRESSION_SUPPORT\r\n    {\r\n      udata.add(uhd.get(), uhd.getlen());\r\n\r\n      int st = udata.getlen();\r\n      int length = ubuild_datablock.getlen();\r\n      int left = length;\r\n      udata.resize(st + left);\r\n      while (left > 0)\r\n      {\r\n        int l = min(build_filebuflen, left);\r\n        void *p = ubuild_datablock.get(length - left, l);\r\n        memcpy(udata.get(st + length - left, l), p, l);\r\n        udata.flush(l);\r\n        udata.release();\r\n        ubuild_datablock.release();\r\n        left -= l;\r\n      }\r\n    }\r\n\r\n    ubuild_datablock.clear();\r\n\r\n    udata.setro(TRUE);\r\n\r\n#ifdef NSIS_CONFIG_CRC_SUPPORT\r\n    if (build_crcchk)\r\n    {\r\n      int pos = 0;\r\n      int left = udata.getlen() - start_offset;\r\n      while (left > 0)\r\n      {\r\n        int l = min(build_filebuflen, left);\r\n        crc = CRC32(crc, (unsigned char *) udata.get(pos + start_offset, l), l);\r\n        udata.release();\r\n        pos += l;\r\n        left -= l;\r\n      }\r\n      udata.setro(FALSE);\r\n      FIX_ENDIAN_INT32_INPLACE(crc);\r\n      udata.add(&crc, sizeof(crc));\r\n      udata.setro(TRUE);\r\n    }\r\n#endif\r\n\r\n    if (start_offset)\r\n    {\r\n      TCHAR* fpath;\r\n      if (!(fpath = create_tempfile_path()))\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't get temporary path\\n\"));\r\n        return PS_ERROR;\r\n      }\r\n      MANAGE_WITH(fpath, free);\r\n      FILE *hfile = FOPEN(fpath, (\"wb\"));\r\n      if (!hfile)\r\n      {\r\n        ERROR_MSG(_T(\"Error: failed opening file \\\"%\") NPRIs _T(\"\\\"\\n\"), fpath);\r\n        return PS_ERROR;\r\n      }\r\n      int succ = udata.write_to_external_file(hfile);\r\n      fclose(hfile);\r\n      if (!succ)\r\n      {\r\n        ERROR_MSG(_T(\"Error: can't write %d bytes to output\\n\"), udata.getlen());\r\n        return PS_ERROR;\r\n      }\r\n      udata.clear();\r\n\r\n      if (PS_OK != run_postbuild_cmds(postubuild_cmds, fpath, _T(\"UninstFinalize\")))\r\n      {\r\n        return PS_ERROR;\r\n      }\r\n\r\n      MMapFile udata_in;\r\n      UINT64 udata_size;\r\n      if (!(udata_size = udata_in.setfile(fpath)))\r\n      {\r\n        ERROR_MSG(_T(\"Error: failed creating mmap of \\\"%\") NPRIs _T(\"\\\"\\n\"), fpath);\r\n        return PS_ERROR;\r\n      }\r\n      if (udata_size > NSIS_MAX_EXEFILESIZE || add_db_data(&udata_in) < 0)\r\n        return PS_ERROR;\r\n\r\n      assert(NSIS_MAX_EXEFILESIZE <= ~(UINT32)0);\r\n      uninstall_size_full = (UINT32) udata_size;\r\n      udata_in.clear();\r\n      _tremove(fpath);\r\n    }\r\n    else\r\n    {\r\n      if (add_db_data(&udata) < 0)\r\n        return PS_ERROR;\r\n\r\n      //uninstall_size_full=fh.length_of_all_following_data + sizeof(int) + unicondata_size - 32 + sizeof(int);\r\n      uninstall_size_full = fh.length_of_all_following_data+(int)m_unicon_size;\r\n    }\r\n\r\n    // compressed size\r\n    uninstall_size=build_datablock.getlen()-uninstdata_offset;\r\n    SCRIPT_MSG(_T(\"Done!\\n\"));\r\n  }\r\n#endif\r\n  return PS_OK;\r\n}\r\n\r\n#define SWAP(x,y,i) { i _ii; _ii=x; x=y; y=_ii; }\r\n\r\nvoid CEXEBuild::set_uninstall_mode(int un)\r\n{\r\n  if (un != uninstall_mode)\r\n  {\r\n    uninstall_mode=un;\r\n    if (un)\r\n    {\r\n      cur_datablock=&ubuild_datablock;\r\n      cur_datablock_cache=&ubuild_datablock_cache;\r\n      cur_entries=&ubuild_entries;\r\n      cur_instruction_entry_map=&ubuild_instruction_entry_map;\r\n      cur_functions=&ubuild_functions;\r\n      cur_labels=&ubuild_labels;\r\n      cur_pages=&ubuild_pages;\r\n      cur_sections=&ubuild_sections;\r\n      cur_header=&build_uninst;\r\n      cur_strlist=&ubuild_strlist;\r\n      cur_langtables=&ubuild_langtables;\r\n      cur_ctlcolors=&ubuild_ctlcolors;\r\n\r\n      definedlist.add(_T(\"__UNINSTALL__\"));\r\n    }\r\n    else\r\n    {\r\n      cur_datablock=&build_datablock;\r\n      cur_datablock_cache=&build_datablock_cache;\r\n      cur_entries=&build_entries;\r\n      cur_instruction_entry_map=&build_instruction_entry_map;\r\n      cur_functions=&build_functions;\r\n      cur_labels=&build_labels;\r\n      cur_pages=&build_pages;\r\n      cur_sections=&build_sections;\r\n      cur_header=&build_header;\r\n      cur_strlist=&build_strlist;\r\n      cur_langtables=&build_langtables;\r\n      cur_ctlcolors=&build_ctlcolors;\r\n\r\n      definedlist.del(_T(\"__UNINSTALL__\"));\r\n    }\r\n\r\n    SWAP(db_opt_save_u,db_opt_save,UINT64);\r\n    SWAP(db_comp_save_u,db_comp_save,int);\r\n    SWAP(db_full_size_u,db_full_size,UINT64);\r\n  }\r\n}\r\n\r\nextern FILE *g_output;\r\n\r\n/* Useful for debugging.\r\nbool IsStringASCII(const TCHAR* s)\r\n{\r\n  while (*s) { if (!_istascii(*s++)) return false; }\r\n  return true;\r\n}\r\n*/\r\n\r\nint CEXEBuild::get_verbosity() const\r\n{\r\n  int v = 0;\r\n  if (display_errors)\r\n  {\r\n    v++;\r\n    if (display_warnings)\r\n    {\r\n      v++;\r\n      if (display_info)\r\n      {\r\n        v++;\r\n        if (display_script)\r\n        {\r\n          v++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nvoid CEXEBuild::set_verbosity(int lvl)\r\n{\r\n  if (preprocessonly) lvl = STD_MIN(lvl, 1);\r\n  display_errors = lvl > 0;\r\n  display_warnings = lvl > 1;\r\n  display_info = lvl > 2;\r\n  display_script = lvl > 3;\r\n  extern int g_display_errors;\r\n  g_display_errors = display_errors;\r\n}\r\n\r\nint CEXEBuild::parse_pragma(LineParser &line)\r\n{\r\n  const int rvSucc = PS_OK, rvWarn = PS_WARNING, rvErr = PS_WARNING; // rvErr is not PS_ERROR because we want !pragma parsing to be very forgiving.\r\n  const TCHAR badParamMsg[] = _T(\"Unknown pragma\");\r\n\r\n  if (line.gettoken_enum(1, _T(\"internal\\0\")) == 0)\r\n  {\r\n    if (line.gettoken_enum(2, _T(\"x\\0\")) == 0)\r\n    {\r\n      const TCHAR *name = line.gettoken_str(3);\r\n      int succ, num = line.gettoken_intx(4, &succ);SCRIPT_MSG(_T(\"%#x %d\\n\"),num,succ);\r\n      return ((succ ? definedlist.set_si32(name, num) : definedlist.set(name, _T(\"\"))), rvSucc);\r\n    }\r\n    return rvErr;\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"verifyloadimage\\0\")) == 0)\r\n  {\r\n    bool valid = LoadImageCanLoadFile(line.gettoken_str(2));\r\n    return valid ? rvSucc : (warning_fl(DW_BADFORMAT_EXTERNAL_FILE, _T(\"Unsupported format %\") NPRIs, line.gettoken_str(2)), rvWarn);\r\n  }\r\n\r\n  // 2.47 shipped with a corrupted CHM file (bug #1129). This minimal verification command exists because the !searchparse hack we added does not work with codepage 936!\r\n  if (line.gettoken_enum(1, _T(\"verifychm\\0\")) == 0)\r\n  {\r\n    struct { UINT32 Sig, Ver, cbH; } chm;\r\n    NIStream f;\r\n    bool valid = f.OpenFileForReading(line.gettoken_str(2), NStreamEncoding::BINARY);\r\n    valid = valid && 12 == f.ReadOctets(&chm, 12);\r\n    valid = valid && FIX_ENDIAN_INT32(chm.Sig) == 0x46535449 && (FIX_ENDIAN_INT32(chm.Ver)|1) == 3; // 'ITSF' v2..3\r\n    return valid ? rvSucc : (ERROR_MSG(_T(\"Error: Invalid format\\n\")), PS_ERROR);\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"w\\150i\\160\\0\")) == 0)\r\n  {\r\n    int succ, ec = line.gettoken_int(2, &succ);\r\n    SCRIPT_MSG(_T(\"%\") NPRIns _T(\"\\n\"), \"N\\123I\\123, i\\164 \\162eall\\171 install\\163 ll\\141\\155as wit\\150o\\165t s\\141fety \\147l\\141\\163s!\");\r\n    exit(succ ? ec : 1);\r\n  }\r\n\r\n  if (line.gettoken_enum(1, _T(\"warning\\0\")) == -1)\r\n    return (warning_fl(DW_PP_PRAGMA_UNKNOWN, _T(\"Unknown pragma\")), rvErr);\r\n\r\n  enum { woperr = 0, wopwar, wopdis, wopena, wopdef, woppus, woppop, invalidwop };\r\n  int warnOp = line.gettoken_enum(2, _T(\"error\\0warning\\0disable\\0enable\\0default\\0push\\0pop\\0\")), ret = rvSucc;\r\n  if (warnOp < 0)\r\n    ret = rvErr, warning_fl(DW_PP_PRAGMA_UNKNOWN, badParamMsg); // Unknown warning pragma action\r\n  else if (warnOp == woppus) // warning: push\r\n    diagstate.push();\r\n  else if (warnOp == woppop) // warning: pop\r\n  {\r\n    if (!diagstate.pop())\r\n      ret = rvWarn, warning_fl(DW_PP_PRAGMA_INVALID, _T(\"Unexpected\"));\r\n  }\r\n  else // warning: error/warning/disable/enable/default <%code%|all> [..]\r\n  {\r\n    for (int ti = 3; ti < line.getnumtokens(); ++ti)\r\n    {\r\n      DIAGCODE code = static_cast<DIAGCODE>(line.gettoken_int(ti));\r\n      bool all = line.gettoken_enum(ti, _T(\"all\\0\")) == 0, isCode = diagstate.is_valid_code(code);\r\n      switch((isCode||all) ? warnOp : invalidwop)\r\n      {\r\n      case woperr: all ? diagstate.set_all(DiagState::werror) : diagstate.error(code); break;\r\n      case wopwar: all ? diagstate.set_all(DiagState::wwarning) : diagstate.warning(code); break;\r\n      case wopdis: all ? diagstate.set_all(DiagState::wdisabled) : diagstate.disable(code); break;\r\n      case wopena: all ? diagstate.set_all(DiagState::wenabled) : diagstate.enable(code); break;\r\n      case wopdef: all ? diagstate.set_all(DiagState::get_default_state()) : diagstate.def(code); break;\r\n      default: ret = rvWarn, warning_fl(DW_PP_PRAGMA_INVALID, _T(\"Invalid number: \\\"%\") NPRIs _T(\"\\\"\"), line.gettoken_str(ti));\r\n      }\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nvoid DiagState::push()\r\n{\r\n  DiagState *p = new DiagState();\r\n  *p = *this; // Copy the current state\r\n  p->m_pStack = m_pStack, m_pStack = p; // ...and push it on the stack\r\n}\r\nbool DiagState::pop()\r\n{\r\n  if (!m_pStack) return false;\r\n  DiagState *pPop = m_pStack; // Get the item on the top of the stack\r\n  *this = *pPop; // ...and assign it as the current state\r\n  pPop->m_pStack = 0; // The pop'ed item no longer owns the next item on the stack\r\n  delete pPop;\r\n  return true;\r\n}\r\n\r\nvoid CEXEBuild::warninghelper(DIAGCODE dc, bool fl, const TCHAR *fmt, va_list args)\r\n{\r\n  bool showcode = dc != DIAGCODE_INTERNAL_HIDEDIAGCODE;\r\n  if (diagstate.is_disabled(dc)) return ;\r\n  bool aserror = diagstate.is_error(dc);\r\n\r\n  TCHAR codbuf[11+2+!0];\r\n  _stprintf(codbuf, showcode ? _T(\"%u: \") : _T(\"\"), static_cast<unsigned int>(dc));\r\n  ExpandoString<TCHAR, COUNTOF(codbuf) + NSIS_MAX_STRLEN + 100> msgbuf;\r\n  ExpandoString<TCHAR, COUNTOF(codbuf) + 200> fmtbuf;\r\n  fmtbuf.StrFmt(_T(\"%\") NPRIs _T(\"%\") NPRIs, codbuf, fmt);\r\n  size_t cchMsg = msgbuf.StrVFmt(fmtbuf.GetPtr(), args);\r\n  if (fl)\r\n  {\r\n    msgbuf.Reserve(cchMsg+2+_tcslen(curfilename)+1+11+1+!0);\r\n    _stprintf(&msgbuf[cchMsg], _T(\" (%\") NPRIs _T(\":%u)\"), curfilename, linecnt);\r\n  }\r\n  const TCHAR *msg = msgbuf.GetPtr();\r\n\r\n  m_warnings.add(msg,0); // Add to list of warnings to display at the end\r\n\r\n  MakensisAPI::datatransfer_e hostevent = MakensisAPI::NOTIFY_WARNING;\r\n  if (aserror)\r\n    hostevent = MakensisAPI::NOTIFY_ERROR, display_warnings = display_errors;\r\n\r\n  notify(hostevent, msg); // Notify the host\r\n\r\n  if (display_warnings) // Print \"warning %msgwithcodeprefix%\" or \"warning: %msg%\"\r\n    PrintColorFmtMsg_WARN(_T(\"warning%\") NPRIs _T(\"%\") NPRIs _T(\"\\n\"), showcode ? _T(\" \") : _T(\": \"), msg);\r\n\r\n  if (aserror)\r\n  {\r\n    ERROR_MSG(_T(\"Error: warning treated as error\\n\"));\r\n    extern int g_display_errors;\r\n    if (!has_called_write_output) g_display_errors = false; // This is a hack to avoid the \"stale file in %temp%\" warning.\r\n    extern void quit(); quit();\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::warning(DIAGCODE dc, const TCHAR *s, ...)\r\n{\r\n  va_list val;\r\n  va_start(val, s);\r\n  warninghelper(dc, false, s, val);\r\n  va_end(val);\r\n}\r\n\r\nvoid CEXEBuild::warning_fl(DIAGCODE dc, const TCHAR *s, ...)\r\n{\r\n  va_list val;\r\n  va_start(val, s);\r\n  warninghelper(dc, true, s, val);\r\n  va_end(val);\r\n}\r\n\r\nvoid CEXEBuild::ERROR_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_errors || notify_hwnd)\r\n  {\r\n    ExpandoString<TCHAR, NSIS_MAX_STRLEN + 100> buf;\r\n    va_list val;\r\n    va_start(val,s);\r\n    buf.StrVFmt(s,val);\r\n    va_end(val);\r\n\r\n    notify(MakensisAPI::NOTIFY_ERROR, buf.GetPtr());\r\n    if (display_errors)\r\n    {\r\n      PrintColorFmtMsg_ERR(_T(\"%\") NPRIs, buf.GetPtr());\r\n    }\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::SCRIPT_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_script)\r\n  {\r\n    va_list val;\r\n    va_start(val,s);\r\n    _vftprintf(g_output,s,val);\r\n    va_end(val);\r\n    fflush(g_output);\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::INFO_MSG(const TCHAR *s, ...) const\r\n{\r\n  if (display_info)\r\n  {\r\n    va_list val;\r\n    va_start(val,s);\r\n    _vftprintf(g_output,s,val);\r\n    va_end(val);\r\n    fflush(g_output);\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::print_warnings()\r\n{\r\n  int nw=0,x=m_warnings.getcount();\r\n  if (!x || !display_warnings) return;\r\n  TCHAR *p=m_warnings.get();\r\n  while (x>0) if (!p[--x]) nw++;\r\n  SetPrintColorWARN();\r\n  _ftprintf(g_output,_T(\"\\n%d warning%\") NPRIs _T(\":\\n\"),nw,nw==1?_T(\"\"):_T(\"s\"));\r\n  for (x = 0; x < nw; x ++)\r\n  {\r\n    _ftprintf(g_output,_T(\"  %\") NPRIs _T(\"\\n\"),p);\r\n    p+=_tcslen(p)+1;\r\n  }\r\n  FlushOutputAndResetPrintColor();\r\n}\r\n\r\nvoid CEXEBuild::notify(MakensisAPI::datatransfer_e code, const TCHAR *data) const\r\n{\r\n#ifdef _WIN32\r\n  if (notify_hwnd)\r\n  {\r\n    DWORD cb = (DWORD) (_tcslen(data)+1) * sizeof(TCHAR);\r\n#ifdef _UNICODE\r\n    extern NStreamEncoding g_outputenc;\r\n    extern void quit();\r\n    CharEncConv cec;\r\n    if (!g_outputenc.IsUTF16LE())\r\n    {\r\n      size_t cbConv;\r\n      if (!cec.Initialize(g_outputenc.GetCodepage(), -1) || !(data = (const TCHAR*) cec.Convert(data, cb, &cbConv)))\r\n        PrintColorFmtMsg_ERR(_T(\"conversion failed!\\n\")), quit(); // Cannot use ERROR_MSG() here!\r\n      cb = (DWORD) (cbConv + NStreamEncoding::GetCodeUnitSize(g_outputenc.GetCodepage())); // cbConv does not include the \\0.\r\n    }\r\n#endif\r\n    COPYDATASTRUCT cds = {(DWORD) code, cb, (void*) data};\r\n    SendMessage(notify_hwnd, WM_COPYDATA, 0, (LPARAM)&cds);\r\n  }\r\n#endif\r\n}\r\n\r\nbool CEXEBuild::hostapi_request_data(MakensisAPI::datatransfer_e operation, UINT minver, HOSTAPIREQUESTDATAPROC proc, void*cookie, const void* input, size_t inputsize) const\r\n{\r\n  using namespace MakensisAPI;\r\n#ifdef _WIN32\r\n  struct helper {\r\n    static INT_PTR CALLBACK Proc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)\r\n    {\r\n      size_t *data = (size_t*) GetWindowLongPtr(hWnd, DWLP_USER);\r\n      if (Msg == WM_CLOSE)\r\n      {\r\n        if (lParam) SendMessage((HWND) wParam, WM_COPYDATA, (SIZE_T) hWnd, lParam);\r\n        return DestroyWindow(hWnd) | PostMessage(NULL, WM_QUIT, 0, 0);\r\n      }\r\n      return data && ((CEXEBuild::HOSTAPIREQUESTDATAPROC)data[0])((void*) data[1], hWnd, Msg, wParam, lParam); // We don't set DWLP_MSGRESULT nor care about the return value\r\n    }\r\n  };\r\n  if (!notify_hwnd || (minver && (UINT) SendMessage(notify_hwnd, QUERYHOST, QH_SUPPORTEDVERSION, 0) < minver)) return false;\r\n  size_t data[] = { (size_t) proc, (size_t) cookie };\r\n  COPYDATASTRUCT cds = { (DWORD) operation, (DWORD) inputsize, (void*) input };\r\n  HWND hWnd = CreateWindowEx(WS_EX_TOOLWINDOW, WC_DIALOG, NULL, WS_POPUP|WS_DISABLED, 0, 0, 0, 0, NULL, NULL, NULL, NULL);\r\n  SetWindowLongPtr(hWnd, DWLP_USER, (LONG_PTR) data);\r\n  SetWindowLongPtr(hWnd, DWLP_DLGPROC, (LONG_PTR) helper::Proc);\r\n  SendMessage(hWnd, WM_CLOSE, (SIZE_T) notify_hwnd, (SIZE_T) &cds);\r\n  if (hWnd) for (MSG msg; (int) GetMessage(&msg, NULL, 0, 0) > 0;) DispatchMessage(&msg);\r\n  return !!hWnd;\r\n#else\r\n  return false;\r\n#endif\r\n}\r\n\r\nbool CEXEBuild::prompt_for_output_path(TCHAR*path, UINT pathcap) const\r\n{\r\n  using namespace MakensisAPI;\r\n#ifdef _WIN32\r\n  struct handler {\r\n    static bool CALLBACK proc(void*cookie, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)\r\n    {\r\n      size_t *io = (size_t*) cookie;\r\n      COPYDATASTRUCT*pCDS = (COPYDATASTRUCT*) lParam;\r\n      if (Msg == WM_COPYDATA && pCDS->cbData > sizeof(TCHAR) && pCDS->cbData <= io[2] * sizeof(TCHAR))\r\n      {\r\n        _tcscpy((TCHAR*) io[1], (TCHAR*) ((COPYDATASTRUCT*)lParam)->lpData);\r\n        return (io[0] = (pCDS->dwData == MakensisAPI::PROMPT_FILEPATH));\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n  size_t io[] = { false, (size_t) path, pathcap }, cb;\r\n  TinyGrowBuf inputbuf((IGrowBuf::size_type) (cb = FIELD_OFFSET(PROMPT_FILEPATH_DATA, Path[pathcap])));\r\n  PROMPT_FILEPATH_DATA *p = (PROMPT_FILEPATH_DATA*) inputbuf.get();\r\n  p->Platform = (sizeof(void*) * 8) | sizeof(TCHAR), p->Reserved = 0;\r\n  _tcscpy(p->Path, path);\r\n  return hostapi_request_data(PROMPT_FILEPATH, 0x03006000, handler::proc, io, p, cb) && io[0];\r\n#else\r\n  return false;\r\n#endif\r\n}\r\n\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\nint CEXEBuild::initialize_default_plugins(bool newtargetarc)\r\n{\r\n  if (!m_pPlugins)\r\n  {\r\n    plugin_used = uninst_plugin_used = false;\r\n    newtargetarc = true;\r\n  }\r\n  if (!newtargetarc) return PS_OK;\r\n\r\n  m_pPlugins = &m_plugins[m_target_type];\r\n\r\n  tstring searchPath = definedlist.find(_T(\"NSISDIR\"));\r\n  searchPath += PLATFORM_PATH_SEPARATOR_STR _T(\"Plugins\") PLATFORM_PATH_SEPARATOR_STR;\r\n  searchPath += get_target_suffix();\r\n\r\n  SCRIPT_MSG(_T(\"Processing default plugins: \\\"%\") NPRIs PLATFORM_PATH_SEPARATOR_STR _T(\"*.dll\\\"\\n\"), searchPath.c_str());\r\n  if (!m_pPlugins->Initialize(searchPath.c_str(), is_target_64bit(), !!display_script))\r\n  {\r\n    ERROR_MSG(_T(\"Error initializing default plugins!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  SCRIPT_MSG(_T(\"\\n\"));\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::add_plugins_dir_initializer(void)\r\n{\r\n  if (!plugin_used && !uninst_plugin_used) return PS_OK;\r\n\r\n  SCRIPT_MSG(_T(\"Adding plug-ins initializing function... \"));\r\n\r\n  bool uninstall = !plugin_used;\r\n\r\n  int ret;\r\n  int zero_offset;\r\n\r\n  int var_zero;\r\n  var_zero=m_UserVarNames.get(_T(\"0\"));\r\n\r\nagain:\r\n  // Function [un.]Initialize_____Plugins\r\n  ret=add_function(uninstall?_T(\"un.Initialize_____Plugins\"):_T(\"Initialize_____Plugins\"));\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // don't move this, depends on [un.]\r\n  zero_offset=add_asciistring(_T(\"$0\"));\r\n\r\n  // SetDetailsPrint none (don't update lastused)\r\n  ret=add_entry_direct(EW_SETFLAG, FLAG_OFFSET(status_update), add_intstring(6), -1);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // StrCmp $PLUGINSDIR \"\"\r\n  ret=add_entry_direct(EW_STRCMP, add_asciistring(_T(\"$PLUGINSDIR\")), 0, 0, ns_label.add(_T(\"Initialize_____Plugins_done\"),0));\r\n  if (ret != PS_OK) return ret;\r\n  // Push $0\r\n  ret=add_entry_direct(EW_PUSHPOP, zero_offset);\r\n  if (ret != PS_OK) return ret;\r\n  // ClearErrors\r\n  ret=add_entry_direct(EW_SETFLAG, FLAG_OFFSET(exec_error));\r\n  if (ret != PS_OK) return ret;\r\n  // GetTempFileName $0\r\n  ret=add_entry_direct(EW_GETTEMPFILENAME, var_zero, add_asciistring(_T(\"$TEMP\")));\r\n  if (ret != PS_OK) return ret;\r\n  // Delete $0 [simple, nothing that could clash with special temp permissions]\r\n  ret=add_entry_direct(EW_DELETEFILE, zero_offset, DEL_SIMPLE);\r\n  if (ret != PS_OK) return ret;\r\n  // CreateDirectory $0 - a dir instead of that temp file\r\n  ret=add_entry_direct(EW_CREATEDIR, zero_offset, 0, 1);\r\n  if (ret != PS_OK) return ret;\r\n  // IfErrors Initialize_____Plugins_error - detect errors\r\n  ret=add_entry_direct(EW_IFFLAG, ns_label.add(_T(\"Initialize_____Plugins_error\"),0), 0, FLAG_OFFSET(exec_error));\r\n  if (ret != PS_OK) return ret;\r\n  // Copy $0 to $PLUGINSDIR\r\n  ret=add_entry_direct(EW_ASSIGNVAR, m_UserVarNames.get(_T(\"PLUGINSDIR\")), zero_offset);\r\n  if (ret != PS_OK) return ret;\r\n  // Pop $0\r\n  ret=add_entry_direct(EW_PUSHPOP, var_zero, 1);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // done\r\n  if (add_label(_T(\"Initialize_____Plugins_done\"))) return PS_ERROR;\r\n  // Return\r\n  ret=add_entry_direct(EW_RET);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // error\r\n  if (add_label(_T(\"Initialize_____Plugins_error\"))) return PS_ERROR;\r\n  // error message box\r\n  ret=add_entry_direct(EW_MESSAGEBOX, MB_OK|MB_ICONSTOP|(IDOK<<21), add_asciistring(_T(\"Error! Can't initialize plug-ins directory. Please try again later.\")));\r\n  if (ret != PS_OK) return ret;\r\n  // Quit\r\n  ret=add_entry_direct(EW_QUIT);\r\n  if (ret != PS_OK) return ret;\r\n\r\n  // FunctionEnd\r\n  ret=function_end();\r\n  if (ret != PS_OK) return ret;\r\n\r\n  if (uninst_plugin_used && !uninstall) {\r\n    uninstall = true;\r\n    goto again;\r\n  }\r\n\r\n  SCRIPT_MSG(_T(\"Done!\\n\"));\r\n\r\n  return PS_OK;\r\n}\r\n#endif // NSIS_CONFIG_PLUGIN_SUPPORT\r\n\r\nvoid CEXEBuild::init_res_editor()\r\n{\r\n  build_compressor_set = true;\r\n  if (!res_editor)\r\n    res_editor = new CResourceEditor(m_exehead, (DWORD)m_exehead_size);\r\n}\r\n\r\nvoid CEXEBuild::close_res_editor()\r\n{\r\n  if (!res_editor) return;\r\n  DWORD newsize;\r\n\r\n  // get size\r\n  newsize = res_editor->Save(NULL, newsize);\r\n  unsigned char *new_header = new unsigned char[newsize];\r\n\r\n  // save\r\n  int rc = res_editor->Save(new_header, newsize);\r\n  assert(rc == 0);\r\n\r\n  update_exehead(new_header, newsize);\r\n\r\n  // TODO: resource-controlling class\r\n  delete [] new_header;\r\n\r\n  delete res_editor;\r\n  res_editor=0;\r\n}\r\n\r\nint CEXEBuild::DeclaredUserVar(const TCHAR *szVarName)\r\n{\r\n  if (m_ShellConstants.get((TCHAR*)szVarName) >= 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: name \\\"%\") NPRIs _T(\"\\\" in use by constant\\n\"), szVarName);\r\n    return PS_ERROR;\r\n  }\r\n\r\n  int idxUserVar = m_UserVarNames.get((TCHAR*)szVarName);\r\n  if (idxUserVar >= 0)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable \\\"%\") NPRIs _T(\"\\\" already declared\\n\"), szVarName);\r\n    return PS_ERROR;\r\n  }\r\n  const TCHAR *pVarName = szVarName;\r\n  size_t iVarLen = _tcslen(szVarName);\r\n\r\n  if (iVarLen > 60)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable name too long!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  else if (!iVarLen)\r\n  {\r\n    ERROR_MSG(_T(\"Error: variable with empty name!\\n\"));\r\n    return PS_ERROR;\r\n  }\r\n  else\r\n  {\r\n    while (*pVarName)\r\n    {\r\n      if (!isSimpleChar(*pVarName))\r\n      {\r\n        ERROR_MSG(_T(\"Error: invalid characters in variable name \\\"%\") NPRIs _T(\"\\\", use only characters [a-z][A-Z][0-9], '.' and '_'\\n\"), szVarName);\r\n        return PS_ERROR;\r\n      }\r\n      pVarName++;\r\n    }\r\n  }\r\n\r\n  m_UserVarNames.add(szVarName);\r\n  if (m_UserVarNames.getnum() > MAX_CODED)\r\n  {\r\n    ERROR_MSG(_T(\"Error: too many user variables declared. Maximum allowed is %u.\\n\"), MAX_CODED - m_iBaseVarsNum);\r\n    return PS_ERROR;\r\n  }\r\n  return PS_OK;\r\n}\r\n\r\n\r\nint CEXEBuild::GetUnsafeUserVarIndex(LineParser &line, int token)\r\n{\r\n  TCHAR *p = line.gettoken_str(token);\r\n  int idx = IsVarPrefix(p) ? m_UserVarNames.get(++p) : -1;\r\n  if (idx >= 0 && m_UserVarNames.get_reference(idx) >= 0) m_UserVarNames.inc_reference(idx);\r\n  return idx;\r\n}\r\nint CEXEBuild::GetUserVarIndex(LineParser &line, int token)\r\n{\r\n  TCHAR *p = line.gettoken_str(token);\r\n  if (IsVarPrefix(p))\r\n  {\r\n    int idxUserVar = m_UserVarNames.get(p+1);\r\n    if (idxUserVar >= 0 && m_UserVarNames.get_reference(idxUserVar) >= 0)\r\n    {\r\n      m_UserVarNames.inc_reference(idxUserVar);\r\n      return idxUserVar;\r\n    }\r\n    else\r\n    {\r\n      int idxConst = m_ShellConstants.get(p+1);\r\n      if (idxConst >= 0)\r\n      {\r\n        ERROR_MSG(_T(\"Error: cannot change constants : %\") NPRIs _T(\"\\n\"), p);\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nvoid CEXEBuild::VerifyDeclaredUserVarRefs(UserVarsStringList *pVarsStringList)\r\n{\r\n  for (int i = m_iBaseVarsNum; i < pVarsStringList->getnum(); i++)\r\n  {\r\n    if (!pVarsStringList->get_reference(i))\r\n    {\r\n      warning(DW_VAR_NOREF, _T(\"Variable \\\"%\") NPRIs _T(\"\\\" not referenced or never set, wasting memory!\"), pVarsStringList->idx2name(i));\r\n    }\r\n  }\r\n}\r\n\r\nbool CEXEBuild::IsIntOrUserVar(const LineParser &line, int token) const\r\n{\r\n  const TCHAR *p = line.gettoken_str(token);\r\n  if (IsVarPrefix(p))\r\n  {\r\n    int idxUserVar = m_UserVarNames.get(p+1);\r\n    return (idxUserVar >= 0 && m_UserVarNames.get_reference(idxUserVar) >= 0);\r\n  }\r\n  int succ;\r\n  line.gettoken_int(token, &succ);\r\n  return succ != false;\r\n}\r\n\r\nint CEXEBuild::set_target_architecture_data()\r\n{\r\n  build_strlist.setunicode(build_unicode), ubuild_strlist.setunicode(build_unicode);\r\n  size_t t64 = is_target_64bit(), i;\r\n\r\n  WORD dc = DefaultPEDllCharacteristics;\r\n  if ((dc & IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) && t64) dc |= IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA;\r\n  if (m_target_type == TARGET_ARM64) dc &= ~IMAGE_DLLCHARACTERISTICS_NO_SEH; // ARM64 forces exception directory?\r\n  PEDllCharacteristics = dc;\r\n\r\n  if (build_unicode)\r\n  {\r\n    definedlist.set(_T(\"NSIS_UNICODE\"));\r\n    definedlist.set(_T(\"NSIS_CHAR_SIZE\"), _T(\"2\"));\r\n  }\r\n  else\r\n  {\r\n    definedlist.del(_T(\"NSIS_UNICODE\"));\r\n    definedlist.set(_T(\"NSIS_CHAR_SIZE\"), _T(\"1\"));\r\n  }\r\n  definedlist.set(_T(\"NSIS_PTR_SIZE\"), t64 ? _T(\"8\") : _T(\"4\"));\r\n\r\n  const TCHAR* tsuff = get_target_suffix(m_target_type, _T(\"\"));\r\n  if (!*tsuff) return PS_ERROR;\r\n  tstring cpu = get_string_prefix(tsuff, _T(\"-\"));\r\n  definedlist.set(_T(\"NSIS_CPU\"), cpu.c_str()); // Used by Library.nsh to pick the correct RegTool\r\n\r\n  struct { TARGETTYPE tt; const TCHAR *def; const TCHAR *val; } static const tdef[] = {\r\n    { TARGET_X86ANSI,    _T(\"NSIS_IX86\"),  _T(\"300\") },\r\n    { TARGET_X86UNICODE, _T(\"NSIS_IX86\"),  _T(\"400\") },\r\n    { TARGET_AMD64,      _T(\"NSIS_AMD64\"), _T(\"1\")   },\r\n    { TARGET_ARM64,      _T(\"NSIS_ARM64\"), _T(\"1\")   }\r\n  };\r\n  for (i = 0; i < COUNTOF(tdef); ++i) definedlist.del(tdef[i].def);\r\n  unsigned int success = false;\r\n  for (i = 0; i < COUNTOF(tdef); ++i) if (tdef[i].tt == m_target_type) definedlist.set(tdef[i].def, tdef[i].val), ++success;\r\n\r\n  return success ? PS_OK : PS_ERROR;\r\n}\r\n\r\nconst TCHAR* CEXEBuild::get_target_suffix(CEXEBuild::TARGETTYPE tt, const TCHAR*defval) const\r\n{\r\n  switch(tt)\r\n  {\r\n  case TARGET_X86ANSI   : return _T(\"x86-ansi\");\r\n  case TARGET_X86UNICODE: return _T(\"x86-unicode\");\r\n  case TARGET_AMD64     : return _T(\"amd64-unicode\");\r\n  case TARGET_ARM64     : return _T(\"arm64-unicode\");\r\n  default: return defval;\r\n  }\r\n}\r\n\r\nint CEXEBuild::change_target_architecture(TARGETTYPE tt)\r\n{\r\n  const bool wide = TARGET_X86ANSI != tt;\r\n  if (build_compressor_set || (build_unicode != wide && build_lockedunicodetarget))\r\n  {\r\n    ERROR_MSG(_T(\"Error: Can't change target %\") NPRIs _T(\" after data already got compressed or header already changed!\\n\"), _T(\"architecture\"));\r\n    return PS_ERROR;\r\n  }\r\n\r\n  if (TARGET_X86ANSI == m_target_type || TARGET_X86UNICODE == m_target_type)\r\n    m_previous_x86_unicode = build_unicode;\r\n  m_target_type = tt;\r\n  build_unicode = wide;\r\n\r\n  int ec = set_target_architecture_data();\r\n  if (PS_OK == ec) ec = load_stub();\r\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\r\n  if (PS_OK == ec) ec = initialize_default_plugins(true);\r\n#endif\r\n  changed_target = true;\r\n  return ec;\r\n}\r\n\r\nint CEXEBuild::set_compressor(const tstring& compressor, const bool solid) {\r\n  stub_filename = stubs_dir + PLATFORM_PATH_SEPARATOR_STR + compressor;\r\n  if (solid)\r\n    stub_filename += _T(\"_solid\");\r\n  return load_stub();\r\n}\r\n\r\nCEXEBuild::TARGETTYPE CEXEBuild::get_target_type(const TCHAR*s) const\r\n{\r\n  for(int i = CEXEBuild::TARGETFIRST; i < CEXEBuild::TARGETCOUNT; ++i)\r\n  {\r\n    CEXEBuild::TARGETTYPE tt = (CEXEBuild::TARGETTYPE) i;\r\n    if (!_tcsicmp(get_target_suffix(tt, _T(\"\")),s) && *s) return tt;\r\n  }\r\n  return TARGET_UNKNOWN;\r\n}\r\n\r\nvoid CEXEBuild::print_bad_targettype_parameter(const TCHAR*cmdname, const TCHAR*prefix) const\r\n{\r\n  tstring errstr = cmdname;\r\n  errstr += _T(\": Target parameter must be one of: \"), errstr += prefix;\r\n  for(int comma = 0, i = CEXEBuild::TARGETFIRST; i < CEXEBuild::TARGETCOUNT; ++i)\r\n  {\r\n    const TCHAR *ts = get_target_suffix((CEXEBuild::TARGETTYPE) i, 0);\r\n    if (!ts) continue;\r\n    if (comma++) errstr += _T(\", \"), errstr += prefix;\r\n    errstr += ts;\r\n  }\r\n  ERROR_MSG(_T(\"Error: %\") NPRIs _T(\"\\n\"), errstr.c_str());\r\n}\r\n\r\nint CEXEBuild::load_stub()\r\n{\r\n  return update_exehead(stub_filename+_T(\"-\")+get_target_suffix(), &m_exehead_original_size);\r\n}\r\n\r\nint CEXEBuild::update_exehead(const tstring& file, size_t *size/*=NULL*/) {\r\n  unsigned long exehead_size;\r\n  unsigned char *exehead = alloc_and_read_file(file.c_str(), exehead_size);\r\n  if (!exehead)\r\n  {\r\n    ERROR_MSG(_T(\"Error: reading stub \\\"%\") NPRIs _T(\"\\\"\\n\"), file.c_str());\r\n    return PS_ERROR;\r\n  }\r\n  update_exehead(exehead, exehead_size);\r\n  if (size) *size = exehead_size;\r\n  free(exehead);\r\n  return PS_OK;\r\n}\r\n\r\nvoid CEXEBuild::update_exehead(const unsigned char *new_exehead, size_t new_size) {\r\n  assert(m_exehead != new_exehead);\r\n\r\n  // align exehead to 512\r\n  m_exehead_size = align_to_512(new_size);\r\n\r\n  delete [] m_exehead;\r\n  m_exehead = new unsigned char[m_exehead_size];\r\n\r\n  // copy exehead\r\n  memcpy(m_exehead, new_exehead, new_size);\r\n\r\n  // zero rest of exehead\r\n  memset(m_exehead + new_size, 0, m_exehead_size - new_size);\r\n}\r\n\r\nvoid CEXEBuild::set_code_type_predefines(const TCHAR *value)\r\n{\r\n  definedlist.del(_T(\"__SECTION__\"));\r\n  definedlist.del(_T(\"__FUNCTION__\"));\r\n  definedlist.del(_T(\"__PAGEEX__\"));\r\n  definedlist.del(_T(\"__GLOBAL__\"));\r\n\r\n  switch (GetCurrentTokenPlace())\r\n  {\r\n    case TP_SEC:\r\n      definedlist.add(_T(\"__SECTION__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    case TP_FUNC:\r\n      definedlist.add(_T(\"__FUNCTION__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    case TP_PAGEEX:\r\n      definedlist.add(_T(\"__PAGEEX__\"), value==NULL?_T(\"\"):value);\r\n    break;\r\n    default:\r\n      definedlist.add(_T(\"__GLOBAL__\"));\r\n  }\r\n}\r\n\r\nvoid CEXEBuild::postbuild_cmd::delete_all()\r\n{\r\n  for (struct postbuild_cmd *p = this, *tmp; p;)\r\n  {\r\n    tmp = p, p = p->next;\r\n    delete [] tmp;\r\n  }\r\n}\r\n\r\nCEXEBuild::postbuild_cmd* CEXEBuild::postbuild_cmd::make(const TCHAR *cmdstr, int cmpop, int cmpval)\r\n{\r\n  postbuild_cmd *p = (postbuild_cmd*) (new BYTE[FIELD_OFFSET(postbuild_cmd, cmd[_tcsclen(cmdstr)+!0])]);\r\n  p->next = NULL, _tcscpy(p->cmd, cmdstr);\r\n  p->cmpop = cmpop, p->cmpval = cmpval;\r\n  return p;\r\n}\r\n\r\nint CEXEBuild::run_postbuild_cmds(const postbuild_cmd *cmds, const TCHAR *templatearg_pc1, const TCHAR* commandname)\r\n{\r\n  for (const postbuild_cmd *cmd = cmds; cmd; cmd = cmd->next)\r\n  {\r\n    const TCHAR *cmdstr = cmd->cmd, *searchstart = cmdstr;\r\n    TCHAR *arg, *cmdstrbuf = NULL, *tmpbuf;\r\n    for (; (arg = _tcsstr(const_cast<TCHAR*>(searchstart), _T(\"%1\")));) // While found, replace %1 with templatearg_pc1\r\n    {\r\n      const size_t cchtpc1 = _tcslen(templatearg_pc1);\r\n      tmpbuf = (TCHAR*) malloc((_tcslen(cmdstr) + cchtpc1 + !0) * sizeof(TCHAR));\r\n      if (!tmpbuf)\r\n      {\r\n        ERROR_MSG(_T(\"Error: Can't allocate memory for %\") NPRIs _T(\" command\\n\"), commandname);\r\n        return PS_ERROR;\r\n      }\r\n      arg -= ((UINT_PTR)cmdstr)/sizeof(TCHAR), arg += ((UINT_PTR)tmpbuf)/sizeof(TCHAR);\r\n      _tcscpy(tmpbuf, cmdstr);\r\n      free(cmdstrbuf);\r\n      memmove(arg + cchtpc1, arg + 2, (_tcslen(arg + 2) + !0) * sizeof(TCHAR));\r\n      memmove(arg, templatearg_pc1, cchtpc1 * sizeof(TCHAR));\r\n      // BUGBUG: Should we call PathConvertWinToPosix on templatearg_pc1?\r\n      cmdstr = cmdstrbuf = tmpbuf, searchstart = arg + cchtpc1;\r\n    }\r\n    SCRIPT_MSG(_T(\"\\n%\") NPRIs _T(\" command: %\") NPRIs _T(\"\\n\"), commandname, cmdstr);\r\n    int ret = sane_system(cmdstr);\r\n    if (!check_external_exitcode(ret, cmd->cmpop, cmd->cmpval))\r\n    {\r\n      ERROR_MSG(_T(\"%\") NPRIs _T(\" command returned %d, aborting\\n\"), commandname, ret);\r\n      return PS_ERROR;\r\n    }\r\n    if (ret != 0) INFO_MSG(_T(\"%\") NPRIs _T(\" command returned %d\\n\"), commandname, ret);\r\n    free(cmdstrbuf);\r\n  }\r\n  return PS_OK;\r\n}\r\n\r\nint CEXEBuild::check_external_exitcode(int exitcode, int op, int val)\r\n{\r\n  switch(op)\r\n  {\r\n  case 0: return exitcode < val;\r\n  case 1: return exitcode > val;\r\n  case 2: return exitcode != val;\r\n  case 3: return exitcode == val;\r\n  case 4: return -1; // ignore\r\n  }\r\n  return 0;\r\n}\r\n", "/*\n * main.c: executable header main code\n * \n * This file is a part of NSIS.\n * \n * Copyright (C) 1999-2023 Nullsoft and Contributors\n * \n * Licensed under the zlib/libpng license (the \"License\");\n * you may not use this file except in compliance with the License.\n * \n * Licence details can be found in the file COPYING.\n * \n * This software is provided 'as-is', without any express or implied\n * warranty.\n */\n\n#include \"../Platform.h\"\n#include <shlobj.h>\n#include \"resource.h\"\n#include \"util.h\"\n#include \"fileform.h\"\n#include \"state.h\"\n#include \"ui.h\"\n#include \"lang.h\"\n#include \"exec.h\"\n#include \"plugin.h\"\n\n#ifndef LOAD_LIBRARY_SEARCH_USER_DIRS\n#define LOAD_LIBRARY_SEARCH_USER_DIRS 0x00000400\n#define LOAD_LIBRARY_SEARCH_SYSTEM32  0x00000800\n#endif\n#ifndef SHTDN_REASON_FLAG_PLANNED\n#define SHTDN_REASON_FLAG_PLANNED 0x80000000\n#endif\n#ifndef SHTDN_REASON_MAJOR_APPLICATION\n#define SHTDN_REASON_MAJOR_APPLICATION 0x00040000\n#endif\n#ifndef SHTDN_REASON_MINOR_INSTALLATION\n#define SHTDN_REASON_MINOR_INSTALLATION 0x0002\n#endif\n#ifndef SHUTDOWN_RESTART\n#define SHUTDOWN_RESTART 0x00000004\n#endif\n#ifndef SHUTDOWN_FORCE_OTHERS\n#define SHUTDOWN_FORCE_OTHERS 0x00000001\n#endif\n#ifndef SHUTDOWN_GRACE_OVERRIDE\n#define SHUTDOWN_GRACE_OVERRIDE 0x00000020\n#endif\n\n#if defined(_MSC_VER) && _MSC_VER >= 1200\nEXTERN_C IMAGE_DOS_HEADER __ImageBase;\n#define HINST_THISCOMPONENT ( (HINSTANCE) &__ImageBase )\n#define HINST_APPLICATION HINST_THISCOMPONENT\n#else\n#define HINST_APPLICATION ( (HINSTANCE) GetModuleHandle(NULL) )\n#endif\n\n#if !defined(NSIS_CONFIG_VISIBLE_SUPPORT) && !defined(NSIS_CONFIG_SILENT_SUPPORT)\n#error One of NSIS_CONFIG_SILENT_SUPPORT or NSIS_CONFIG_VISIBLE_SUPPORT must be defined.\n#endif\n#ifdef NSIS_COMPRESS_WHOLE\nextern HANDLE dbd_hFile;\n#endif\n\nTCHAR g_caption[NSIS_MAX_STRLEN*2]; // Why does this have to be NSIS_MAX_STRLEN*2?\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\nHWND g_hwnd;\nHANDLE g_hInstance;\n#endif\nvoid *g_SHGetFolderPath;\nDWORD g_WinVer;\n\nvoid NSISCALL CleanUp();\n\nTCHAR *ValidateTempDir()\n{\n  validate_filename(state_temp_dir);\n  if (!validpathspec(state_temp_dir))\n    return NULL;\n  addtrailingslash(state_temp_dir);\n  CreateNormalDirectory(state_temp_dir);\n  // state_language is used as a temp var here\n  return my_GetTempFileName(state_language, state_temp_dir);\n}\n\n\nNSIS_ENTRYPOINT_GUINOCRT\nEXTERN_C void NSISWinMainNOCRT()\n{\n  int ret = 0;\n  const TCHAR *m_Err = _LANG_ERRORWRITINGTEMP;\n  int cl_flags = 0;\n\n  TCHAR *realcmds;\n  TCHAR seekchar=_T(' ');\n  TCHAR *cmdline;\n  OSVERSIONINFOEX ovi;\n\n  SetErrorMode(SEM_NOOPENFILEERRORBOX | SEM_FAILCRITICALERRORS);\n\n  // Get the version as reported by Windows\n  if (sizeof(void*) < 8)\n  {\n    *((UINT32*)&ovi.szCSDVersion[0]) = 0; // Zero out SP\n    *((UINT64*)&ovi.wServicePackMajor) = 0; // wServicePackMajor, wSuiteMask and wProductType\n  }\n  ovi.dwOSVersionInfoSize = sizeof(OSVERSIONINFOEX);\n  if (!GetVersionEx((OSVERSIONINFO*) &ovi) && sizeof(void*) < 8)\n  {\n    ovi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n    GetVersionEx((OSVERSIONINFO*) &ovi);\n    if (sizeof(TCHAR) == 2 || ovi.dwPlatformId == VER_PLATFORM_WIN32_NT)\n    {\n      ovi.wProductType = 4; // TODO: For < NT4SP6, look it up in the registry. 4 means not W9x and not VER_NT_*\n      ovi.wServicePackMajor = ovi.szCSDVersion[0] == 'S' ? ovi.szCSDVersion[13] - '0' : 0;\n    }\n  }\n  if (sizeof(TCHAR) == 1 && ovi.dwPlatformId < VER_PLATFORM_WIN32_NT)\n  {\n    ovi.wProductType = 0;\n    ovi.wServicePackMajor = ovi.szCSDVersion[1] >= 'A' ? ovi.szCSDVersion[1] - ('A'-1) : 0; // A, B or C\n  }\n  if (sizeof(void*) < 8 && ovi.dwMajorVersion < 10) // Ideally (sizeof(TCHAR) == 1 && ovi.dwMajorVersion < 5) but the compatibility tab emulates this bug\n  {\n    ovi.dwBuildNumber &= 0xffff; // Remove W9x garbage\n  }\n  // Save the packed version information\n  {\n    UINT32 *p = &g_osinfo.WVBuild;\n    p[0] = ovi.dwBuildNumber;\n    p[1] = MAKELONG(MAKEWORD(ovi.wProductType, ovi.wServicePackMajor), MAKEWORD(ovi.dwMinorVersion, ovi.dwMajorVersion));\n  }\n\n  {\n    // bug #1125: Don't load modules from the application nor current directory.\n    // SetDefaultDllDirectories() allows us to restrict implicitly loaded and \n    // dynamically loaded modules to just %windir%\\System32 and directories \n    // added with AddDllDirectory(). This prevents DLL search order attacks (CAPEC-471).\n    // CoCreateInstance(CLSID_ShellLink, ...) fails on Vista if SetDefaultDllDirectories is called\n    BOOL avoidwinbug = IsWinVista();\n    if (!avoidwinbug)\n    {\n      FARPROC fp = myGetProcAddress(MGA_SetDefaultDllDirectories);\n      if (fp) ((BOOL(WINAPI*)(DWORD))fp)(LOAD_LIBRARY_SEARCH_SYSTEM32|LOAD_LIBRARY_SEARCH_USER_DIRS);\n    }\n    // SetDefaultDllDirectories might not be available so we try to preload various libraries as \n    // best we can before Windows gets a chance to mess things up by loading from the wrong directory.\n    {\n      static const char preload[] = \n        \"UXTHEME\\0\" // Vista: OleInitialize calls NtUserCreateWindowEx and that pulls in UXTheme.dll\n        \"USERENV\\0\" // Vista: SHGetFileInfo ends up in SHELL32.kfapi::GetUserProfileDir and that pulls in UserEnv.dll\n        \"SETUPAPI\\0\" // XP: SHGetFileInfo ends up in CMountPoint::_InitLocalDriveHelper and that pulls in SetupAPI.dll\n        \"APPHELP\\0\" // Vista: SHGetFileInfo ... SHELL32.SHILAliasTranslate ... SHELL32.ApphelpCheckShellObject\n        \"PROPSYS\\0\" // Vista: SHGetFileInfo ... SHELL32.SHILAliasTranslate ... SHLWAPI.#187 ... SHLWAPI.#505/SHPropertyBag_ReadGUID\n        \"DWMAPI\\0\" // Win7 without KB2533623: UXTheme pulls in DWMAPI.dll\n        \"CRYPTBASE\\0\" // Win7 without KB2533623: OleInitialize ... RPCRT4.UuidCreate ... RPCRT4.GenerateRandomNumber\n        \"OLEACC\\0\" // Vista: SHFileOperation ... SHELL32.CProgressDialogUI::_Setup ... SHELL32.GetRoleTextW\n        \"CLBCATQ\\0\" // XP.SP2&SP3: SHAutoComplete ... OLE32!InitializeCatalogIfNecessary ... OLE32!CComCatalog::TryToLoadCLB\n        \"NTMARTA\\0\" // Win7 without KB2533623 (Bug #1204): SHGetFileInfo ... SetEntriesInAcl ... ADVAPI32!AccProvpLoadMartaFunctions\n#ifndef NSIS_SUPPORT_GETDLLVERSION\n        \"VERSION\\0\"\n#endif\n      ;\n      const char *dll;\n      for (dll = preload; dll[0]; dll += lstrlenA(dll) + 1)\n        LoadSystemLibrary(dll);\n    }\n  }\n\n  // Because myGetProcAddress now loads dlls with a full path \n  // under GetSystemDirectory() the previous issues in <= v3.0b2 with \n  // 'SetOutPath' and/or 'File \"shfolder.dll\"' no longer apply.\n  // All MGA dlls still need to be loaded early here because installers \n  // running under WoW64 might disable WoW64 FS redirection in .onInit and \n  // because GetSystemDirectory() can return the native system32 path we need\n  // the redirection to be turned off so LoadLibrary uses the correct folder.\n  // Note: We also import directly from KERNEL32, ADVAPI32 and SHELL32 so they \n  // are exempt from this requirement and SHELL32 imports from SHLWAPI on \n  // WoW64 systems and it is also on the KnownDLLs list so \n  // SHLWAPI also gets a pass and that just leaves \n#ifdef NSIS_SUPPORT_GETDLLVERSION\n  myGetProcAddress(MGA_GetFileVersionInfo); // VERSION\n#endif\n  g_SHGetFolderPath = myGetProcAddress(MGA_SHGetFolderPath); // and SHFOLDER\n\n#ifndef _WIN64\n  {\n    // KEY_WOW64_xxKEY flags causes registry functions to fail on WinNT4 & Win2000.\n    // We don't filter them out because all registry instructions are supposed to fail when \n    // accessing a unsupported view and RegKey* takes care of that by looking at the WOW64 flag.\n    FARPROC fp = myGetProcAddress(MGA_IsOS);\n    enum { os_wow6432 = 30 };\n    if (fp && ((BOOL(WINAPI*)(UINT))fp)(os_wow6432)) g_osinfo.WVProd |= NSIS_OSINFO_PROD_WOW64FLAG;\n  }\n#endif\n\n  InitCommonControls();\n\n#if defined(NSIS_SUPPORT_ACTIVEXREG) || defined(NSIS_SUPPORT_CREATESHORTCUT)\n  {\n    extern HRESULT g_hres;\n    g_hres=OleInitialize(NULL);\n  }\n#endif\n\n\n  {\n    // workaround for bug #1008632\n    // http://sourceforge.net/tracker/index.php?func=detail&aid=1008632&group_id=22049&atid=373085\n    //\n    // without this, SHGetSpecialFolderLocation doesn't always recognize\n    // some special folders, like the desktop folder for all users, on\n    // Windows 9x. unlike SHGetSpecialFolderPath, which is not available\n    // on all versions of Windows, SHGetSpecialFolderLocation doesn't try\n    // too hard to make sure the caller gets what he asked for. so we give\n    // it a little push in the right direction by doing part of the work\n    // for it.\n    //\n    // part of what SHGetFileInfo does, is to convert a path into an idl.\n    // to do this conversion, it first needs to initialize the list of \n    // special idls, which are exactly the idls we use to get the paths\n    // of special folders (CSIDL_*).\n\n    SHFILEINFO shfi;\n    SHGetFileInfo(_T(\"\"), 0, &shfi, sizeof(SHFILEINFO), 0);\n  }\n\n  mystrcpy(g_caption,_LANG_GENERIC_ERROR);\n\n  mystrcpy(state_command_line, GetCommandLine());\n\n#ifdef NSIS_CONFIG_VISIBLE_SUPPORT\n  g_hInstance = HINST_APPLICATION;\n#endif//NSIS_CONFIG_VISIBLE_SUPPORT\n\n  cmdline = state_command_line;\n  if (*cmdline == _T('\\\"')) seekchar = *cmdline++;\n\n  cmdline=findchar(cmdline, seekchar);\n  cmdline=CharNext(cmdline);\n  realcmds=cmdline;\n\n  while (*cmdline)\n  {\n    // skip over any spaces\n    while (*cmdline == _T(' ')) cmdline++;\n    \n    // get char we should look for to get the next parm\n    seekchar = _T(' ');\n    if (cmdline[0] == _T('\\\"'))\n    {\n      cmdline++;\n      seekchar = _T('\\\"');\n    }\n\n    // is it a switch?\n    if (cmdline[0] == _T('/'))\n    {\n      cmdline++;\n\n#define END_OF_ARG(c) (c == _T(' ') || c == _T('\\0'))\n\n#if defined(NSIS_CONFIG_VISIBLE_SUPPORT) && defined(NSIS_CONFIG_SILENT_SUPPORT)\n      if (cmdline[0] == _T('S') && END_OF_ARG(cmdline[1]))\n        g_exec_flags.silent = 1; // bug #1076 - just set the silent flag. the user really wants it silent.\n                                 // loadHeaders() will not reset this as it uses |= to apply the script flags.\n                                 // there is also no option to force non-silent like `CRCCheck force`\n#endif//NSIS_CONFIG_SILENT_SUPPORT && NSIS_CONFIG_VISIBLE_SUPPORT\n#ifdef NSIS_CONFIG_CRC_SUPPORT\n      if (CMP4CHAR(cmdline, _T(\"NCRC\")) && END_OF_ARG(cmdline[4]))\n        cl_flags |= FH_FLAGS_NO_CRC;\n#endif//NSIS_CONFIG_CRC_SUPPORT\n\n      if (CMP4CHAR(cmdline-2, _T(\" /D=\")))\n      {\n        *(cmdline-2)=_T('\\0'); // keep this from being passed to uninstaller if necessary\n        mystrcpy(state_install_directory,cmdline+2);\n        break; // /D= must always be last\n      }\n    }\n\n    // skip over our parm\n    cmdline = findchar(cmdline, seekchar);\n    // skip the quote\n    if (*cmdline == _T('\\\"'))\n      cmdline++;\n  }\n\n  GetTempPath(NSIS_MAX_STRLEN, state_temp_dir);\n  if (!ValidateTempDir())\n  {\n    GetWindowsDirectory(state_temp_dir, NSIS_MAX_STRLEN - 5); // leave space for \\Temp\n    mystrcat(state_temp_dir, _T(\"\\\\Temp\"));\n    if (!ValidateTempDir())\n    {\n      // Bug #2909242:\n      // When running at <= Low IL we cannot write to %Temp% but we can try the temp folder used by IE.\n      // There does not seem to be a API to get the low temp dir directly, so we build the path on our own\n\n      GetTempPath(NSIS_MAX_STRLEN - 4, state_temp_dir); // leave space for \\Low\n      mystrcat(state_temp_dir, _T(\"Low\"));\n\n      // If we don't call SetEnvironmentVariable \n      // child processes will use %temp% and not %temp%\\Low\n      // and some apps probably can't handle a read only %temp%\n      // Do it before ValidateTempDir() because it appends a backslash.\n      // TODO: Should this be moved to ValidateTempDir() so it also updates for %windir%\\Temp?\n      SetEnvironmentVariable(_T(\"TEMP\"), state_temp_dir);\n      SetEnvironmentVariable(_T(\"TMP\"), state_temp_dir);\n\n      if (!ValidateTempDir())\n      {\n        goto end;\n      }\n    }\n  }\n  DeleteFile(state_language);\n\n  m_Err = loadHeaders(cl_flags);\n  if (m_Err) goto end;\n\n#ifdef NSIS_CONFIG_UNINSTALL_SUPPORT\n  if (g_is_uninstaller)\n  {\n    TCHAR *p = findchar(state_command_line, 0);\n\n    // state_command_line has state_install_directory right after it in memory, so reading\n    // a bit over state_command_line won't do any harm\n    while (p >= state_command_line && !CMP4CHAR(p, _T(\" _?=\"))) p--;\n\n    m_Err = _LANG_UNINSTINITERROR;\n\n    if (p >= state_command_line)\n    {\n      *p=0; // terminate before \"_?=\"\n      p+=4; // skip over \" _?=\"\n      if (is_valid_instpath(p))\n      {\n        mystrcpy(state_install_directory, p);\n        mystrcpy(state_output_directory, p);\n        m_Err = 0;\n      }\n      else\n      {\n        goto end;\n      }\n    }\n    else\n    {\n      int admin = UserIsAdminGrpMember();\n      WORD tries; // 0xfffe attempts or bust\n      size_t cchtmpslash = mystrlen(state_temp_dir);\n      LPTSTR unexe = g_usrvars[5], unexecmd = g_usrvars[6];\n\n      mystrcpy(g_usrvars[0], realcmds);\n      if (!(*state_install_directory))\n      {\n        mystrcpy(state_install_directory, state_exe_directory);\n      }\n\n      for (tries = 0; ++tries != 0;)\n      {\n        DWORD retry = 0, ec;\nretry_un_dir:\n        wsprintf(state_temp_dir + cchtmpslash, _T(\"~nsu%X.tmp\"), tries);\n        GetNSISString(unexe, g_header->str_uninstchild); // '$TEMP\\Un.exe'\n        if (admin)\n        {\n          ec = CreateRestrictedDirectory(state_temp_dir);\n        }\n        else\n        {\n          ec = CreateNormalDirectory(state_temp_dir);\n        }\n\n        if (ec)\n        {\n          // Delete previous uninstaller\n          if (DeleteFile(unexe))\n          {\n            myDelete(state_temp_dir, DEL_DIR|DEL_RECURSE);\n            if (!retry++) goto retry_un_dir;\n          }\n        }\n        else\n        {\n          HANDLE hProc;\n          SetCurrentDirectory(state_temp_dir);\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\n          MoveFileOnReboot(state_temp_dir, NULL);\n#endif\n          if (CopyFile(state_exe_path, unexe, TRUE))\n          {\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\n            MoveFileOnReboot(unexe, NULL);\n#endif\n            GetNSISString(unexecmd, g_header->str_uninstcmd); // '\"$TEMP\\Un.exe\" $0 _?=$INSTDIR\\'\n            hProc = myCreateProcess(unexecmd);\n            if (hProc)\n            {\n              CloseHandle(hProc);\n              m_Err = 0; // Success\n            }\n            else if (!retry++ && !file_exists(unexe))\n            {\n              // Another instance deleted us between CopyFile and CreateProcess\n              goto retry_un_dir;\n            }\n          }\n          break; // We called CreateProcess; success or failure, we are done.\n        }\n      }\n      goto end;\n    }\n  }\n#endif//NSIS_CONFIG_UNINSTALL_SUPPORT\n\n  g_exec_flags.errlvl = -1;\n  ret = ui_doinstall();\n\n#ifdef NSIS_CONFIG_LOG\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\n  log_write(1);\n#endif//!NSIS_CONFIG_LOG_ODS && !NSIS_CONFIG_LOG_STDOUT\n#endif//NSIS_CONFIG_LOG\nend:\n\n  CleanUp();\n\n#if defined(NSIS_SUPPORT_ACTIVEXREG) || defined(NSIS_SUPPORT_CREATESHORTCUT)\n  OleUninitialize();\n#endif\n\n  if (m_Err)\n  {\n    my_MessageBox(m_Err, MB_OK | MB_ICONSTOP | (IDOK << 21));\n    ExitProcess(2);\n  }\n\n#ifdef NSIS_SUPPORT_REBOOT\n  if (g_exec_flags.reboot_called)\n  {\n    const DWORD reason = SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_MAJOR_APPLICATION | SHTDN_REASON_MINOR_INSTALLATION;\n    BOOL (WINAPI *IS)(LPTSTR,LPTSTR,DWORD,DWORD,DWORD);\n    HANDLE hToken;\n    TOKEN_PRIVILEGES tkp;\n    if (OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken))\n    {\n      LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME, &tkp.Privileges[0].Luid);\n      tkp.PrivilegeCount = 1;\n      tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\n      AdjustTokenPrivileges(hToken, FALSE, &tkp, 0, (PTOKEN_PRIVILEGES)NULL, 0);\n    }\n\n    IS=myGetProcAddress(MGA_InitiateShutdown);\n    if ( (IS && !IS(NULL, NULL, 0, SHUTDOWN_RESTART | SHUTDOWN_FORCE_OTHERS | SHUTDOWN_GRACE_OVERRIDE, reason))\n      || (!ExitWindowsEx(EWX_REBOOT, reason))\n      )\n      ExecuteCallbackFunction(CB_ONREBOOTFAILED);\n  }\n#endif//NSIS_SUPPORT_REBOOT\n\n  if (g_exec_flags.errlvl != -1)\n    ret = g_exec_flags.errlvl;\n\n  ExitProcess(ret);\n}\n\nvoid NSISCALL CleanUp()\n{\n  if (g_db_hFile != INVALID_HANDLE_VALUE)\n  {\n    CloseHandle(g_db_hFile);\n    g_db_hFile = INVALID_HANDLE_VALUE;\n  }\n#ifdef NSIS_COMPRESS_WHOLE\n  if (dbd_hFile != INVALID_HANDLE_VALUE)\n  {\n    CloseHandle(dbd_hFile);\n    dbd_hFile = INVALID_HANDLE_VALUE;\n  }\n#endif\n#ifdef NSIS_CONFIG_PLUGIN_SUPPORT\n  // Notify plugins that we are about to unload\n  Plugins_UnloadAll();\n\n  // Clean up after plug-ins\n  myDelete(state_plugins_dir, DEL_DIR | DEL_RECURSE | DEL_REBOOT);\n#endif // NSIS_CONFIG_PLUGIN_SUPPORT\n#ifdef DEBUG\n  // GlobalFree(g_header); ?\n#endif\n}\n", "/*\r\n * util.c\r\n * \r\n * This file is a part of NSIS.\r\n * \r\n * Copyright (C) 1999-2023 Nullsoft and Contributors\r\n * \r\n * Licensed under the zlib/libpng license (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * \r\n * Licence details can be found in the file COPYING.\r\n * \r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.\r\n *\r\n * Unicode support by Jim Park -- 08/11/2007\r\n */\r\n\r\n#include \"../Platform.h\"\r\n#include <shellapi.h>\r\n#include \"util.h\"\r\n#include \"state.h\"\r\n#include \"config.h\"\r\n#include \"lang.h\"\r\n#include \"fileform.h\"\r\n#include \"exec.h\"\r\n#include \"ui.h\"\r\n#include \"resource.h\"\r\n#include \"../tchar.h\"\r\n\r\n#ifdef NSIS_CONFIG_LOG\r\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\r\nTCHAR g_log_file[1024];\r\n#endif\r\n#endif\r\n\r\n// *** DO NOT DECLARE MORE VARIABLES INSIDE THESE PRAGMAS ***\r\n// This will produce a special section called \".ndata\" (stands for nsis data)\r\n// this way makensis during build time, can search for this section by name\r\n// and change the virtual size of this section\r\n// which results in extra memory for extra variables without code to do allocation :)\r\n// nsis then removes the \"DISCARDABLE\" style from section (for safe)\r\n#ifdef _MSC_VER\r\n#  pragma bss_seg(NSIS_VARS_SECTION)\r\nNSIS_STRING g_usrvarssection[1];\r\n#  pragma bss_seg()\r\n#  pragma comment(linker, \"/section:\" NSIS_VARS_SECTION \",rwd\")\r\n#else\r\n#  ifdef __GNUC__\r\n// GCC does not treat g_usrvarssection as a bss section so we keep the size as small as possible.\r\n// NSIS_STRING g_usrvarssection[31] is required to remove this hack but that really bloats the exehead.\r\nTCHAR g_usrvarssection[1] __attribute__((section (NSIS_VARS_SECTION)));\r\nconst NSIS_STRING*const g_usrvarsstart = (const NSIS_STRING*const) g_usrvarssection;\r\n#  else\r\n#    error Unknown compiler. You must implement the separate PE section yourself.\r\n#  endif\r\n#endif\r\n\r\nconst UINT32 g_restrictedacl[] = {\r\n  0x00340002, 0x00000002, // ACL (ACL_REVISION2, 2 ACEs)\r\n  0x00180300, // ACCESS_ALLOWED_ACE:ACE_HEADER (ACCESS_ALLOWED_ACE_TYPE, CONTAINER_INHERIT_ACE|OBJECT_INHERIT_ACE)\r\n  0x10000000, // ACCESS_ALLOWED_ACE:ACCESS_MASK: GENERIC_ALL\r\n  0x00000201, 0x05000000, 0x00000020, 0x00000220, // ACCESS_ALLOWED_ACE:SID (BUILTIN\\Administrators) NOTE: GetAdminGrpSid() relies on this being the first SID in the ACL\r\n  0x00140300, // ACCESS_ALLOWED_ACE:ACE_HEADER (ACCESS_ALLOWED_ACE_TYPE, CONTAINER_INHERIT_ACE|OBJECT_INHERIT_ACE)\r\n  0x00130041, // ACCESS_ALLOWED_ACE:ACCESS_MASK: DELETE|READ_CONTROL|SYNCHRONIZE|FILE_DELETE_CHILD|FILE_LIST_DIRECTORY\r\n  0x00000101, 0x01000000, 0x00000000 // ACCESS_ALLOWED_ACE:SID (WORLD\\Everyone)\r\n};\r\n\r\nDWORD NSISCALL CreateRestrictedDirectory(LPCTSTR path)\r\n{\r\n  PSID admingrpsid = GetAdminGrpSid();\r\n  SECURITY_DESCRIPTOR sd = { 1, 0, SE_DACL_PRESENT, admingrpsid, admingrpsid, NULL, GetAdminGrpAcl() };\r\n  SECURITY_ATTRIBUTES sa = { sizeof(SECURITY_ATTRIBUTES), &sd, FALSE };\r\n  return CreateDirectory(path, &sa) ? ERROR_SUCCESS : GetLastError();\r\n}\r\nDWORD NSISCALL CreateNormalDirectory(LPCTSTR path)\r\n{\r\n  return CreateDirectory(path, NULL) ? ERROR_SUCCESS : GetLastError();\r\n}\r\n\r\nBOOL NSISCALL UserIsAdminGrpMember()\r\n{\r\n  FARPROC iuaa = myGetProcAddress(MGA_IsUserAnAdmin);\r\n  return iuaa && ((BOOL(WINAPI*)())iuaa)();\r\n}\r\n\r\nHANDLE NSISCALL myCreateProcess(TCHAR *cmd)\r\n{\r\n  PROCESS_INFORMATION ProcInfo;\r\n  static STARTUPINFO StartUp;\r\n  StartUp.cb=sizeof(StartUp);\r\n  if (!CreateProcess(NULL, cmd, NULL, NULL, FALSE, CREATE_DEFAULT_ERROR_MODE, NULL, NULL, &StartUp, &ProcInfo))\r\n    return NULL;\r\n  CloseHandle(ProcInfo.hThread);\r\n  return ProcInfo.hProcess;\r\n}\r\n\r\nBOOL NSISCALL myShellExecuteEx(SHELLEXECUTEINFO*pSEI)\r\n{\r\n  pSEI->cbSize = sizeof(SHELLEXECUTEINFO);\r\n  pSEI->lpIDList = NULL; // Must set this because SEE_MASK_INVOKEIDLIST might be set by ExecShell[Wait]\r\n  return ShellExecuteEx(pSEI);\r\n}\r\n\r\n/*BOOL NSISCALL my_SetWindowText(HWND hWnd, const TCHAR *val)\r\n{\r\n  return SendMessage(hWnd,WM_SETTEXT,0,(LPARAM)val);\r\n}*/\r\n\r\nBOOL NSISCALL my_SetDialogItemText(HWND dlg, UINT idx, const TCHAR *val)\r\n{\r\n  return SetDlgItemText(dlg,idx,val);\r\n//  return my_SetWindowText(GetDlgItem(dlg, idx), val);\r\n}\r\n\r\nint NSISCALL my_GetDialogItemText(UINT idx, TCHAR *val)\r\n{\r\n  extern HWND m_curwnd;\r\n  return GetDlgItemText(m_curwnd, idx, val, NSIS_MAX_STRLEN);\r\n//  return my_GetWindowText(GetDlgItem(m_curwnd, idx), val, NSIS_MAX_STRLEN);\r\n}\r\n\r\nint NSISCALL my_MessageBox(const TCHAR *text, UINT type) {\r\n  int _type = type & 0x001FFFFF;\r\n  static MSGBOXPARAMS mbp = {\r\n    sizeof(MSGBOXPARAMS),\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    MAKEINTRESOURCE(IDI_ICON2),\r\n    0,\r\n    0,\r\n    0\r\n  };\r\n  \r\n#ifdef NSIS_CONFIG_SILENT_SUPPORT\r\n  // default for silent installers\r\n  if (g_exec_flags.silent && type >> 21)\r\n    return type >> 21;\r\n#endif\r\n  // no silent or no default, just show\r\n  if (g_exec_flags.rtl)\r\n    _type ^= MB_RIGHT | MB_RTLREADING;\r\n\r\n  mbp.hwndOwner = g_hwnd;\r\n  mbp.hInstance = g_hInstance;\r\n  mbp.lpszText = text;\r\n  mbp.lpszCaption = g_caption; // Should call update_caption() here?\r\n  mbp.dwStyle = _type;\r\n  \r\n  return MessageBoxIndirect(&mbp);\r\n}\r\n\r\nBOOL NSISCALL delete_with_ro_attr_handling(LPCTSTR fileordir,int flags) \r\n{\r\n  const DWORD attr=remove_ro_attr(fileordir);\r\n  if (attr != INVALID_FILE_ATTRIBUTES) \r\n  {\r\n    if (flags & DEL_DIR)\r\n    {\r\n      if (RemoveDirectory(fileordir)) return TRUE;\r\n    }\r\n    else\r\n    {\r\n      if (DeleteFile(fileordir)) return TRUE;\r\n    }\r\n\r\n    // Not sure if wininit.ini and MoveFileEx handle RO attr in the same \r\n    // way so we just play it safe\r\n    if (!(flags & DEL_REBOOT)) SetFileAttributes(fileordir,attr);\r\n  }\r\n  return FALSE;\r\n}\r\n\r\nvoid NSISCALL myDelete(TCHAR *buf, int flags)\r\n{\r\n  static TCHAR lbuf[NSIS_MAX_STRLEN];\r\n  const int rebootflag=(flags & DEL_REBOOT);\r\n\r\n  HANDLE h;\r\n  WIN32_FIND_DATA fd;\r\n  TCHAR *fn;\r\n  int valid_dir=is_valid_instpath(buf);\r\n\r\n  if ((flags & DEL_SIMPLE))\r\n  {\r\n    g_exec_flags.exec_error += !DeleteFile(buf);\r\n    return;\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n  if (!(flags & DEL_DIR) || (valid_dir && (flags & DEL_RECURSE)))\r\n#endif//NSIS_SUPPORT_RMDIR\r\n  {\r\n    mystrcpy(lbuf,buf);\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n    if (flags & DEL_DIR)\r\n      mystrcat(lbuf,_T(\"\\\\*.*\"));\r\n    else\r\n#endif//NSIS_SUPPORT_RMDIR\r\n      trimslashtoend(buf);\r\n\r\n    // only append backslash if the path isn't relative to the working directory [bug #1851273]\r\n    if (*buf || *lbuf == _T('\\\\'))\r\n      mystrcat(buf,_T(\"\\\\\"));\r\n\r\n    fn=buf+mystrlen(buf);\r\n\r\n    h = FindFirstFile(lbuf,&fd);\r\n    if (h != INVALID_HANDLE_VALUE)\r\n    {\r\n      do\r\n      {\r\n        TCHAR *fdfn = fd.cFileName;\r\n#ifndef _UNICODE\r\n        if (*findchar(fdfn, _T('?')) && *fd.cAlternateFileName)\r\n          // name contains unicode, use short name\r\n          fdfn = fd.cAlternateFileName;\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n        if (fdfn[0] == _T('.') && !fdfn[1]) continue;\r\n        if (fdfn[0] == _T('.') && fdfn[1] == _T('.') && !fdfn[2]) continue;\r\n#endif//NSIS_SUPPORT_RMDIR\r\n        {\r\n          mystrcpy(fn,fdfn);\r\n          if (fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)\r\n          {\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n            if ((flags & (DEL_DIR | DEL_RECURSE)) == (DEL_DIR | DEL_RECURSE))\r\n            {\r\n              myDelete(buf,flags);\r\n            }\r\n#endif//NSIS_SUPPORT_RMDIR\r\n          }\r\n          else\r\n          {\r\n            log_printf2(_T(\"Delete: DeleteFile(\\\"%s\\\")\"),buf);\r\n            \r\n            if (!delete_with_ro_attr_handling(buf,rebootflag))\r\n            {\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n              if (rebootflag)\r\n              {\r\n                log_printf2(_T(\"Delete: DeleteFile on Reboot(\\\"%s\\\")\"),buf);\r\n                update_status_text(LANG_DELETEONREBOOT,buf);\r\n                MoveFileOnReboot(buf,NULL);\r\n              }\r\n              else\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n              {\r\n                log_printf2(_T(\"Delete: DeleteFile failed(\\\"%s\\\")\"),buf);\r\n                g_exec_flags.exec_error++;\r\n              }\r\n            }\r\n            else\r\n              update_status_text(LANG_DELETEFILE,buf);\r\n          }\r\n        }\r\n      } while (FindNextFile(h,&fd));\r\n      FindClose(h);\r\n    }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n    if (flags & DEL_DIR)\r\n      fn[-1]=0;\r\n#endif//NSIS_SUPPORT_RMDIR\r\n  }\r\n\r\n#ifdef NSIS_SUPPORT_RMDIR\r\n  if ((flags & DEL_DIR))\r\n  {\r\n    if (!valid_dir)\r\n    {\r\n      log_printf2(_T(\"RMDir: RemoveDirectory invalid input(\\\"%s\\\")\"),buf);\r\n      g_exec_flags.exec_error++;\r\n    }\r\n    else if (file_exists(buf))\r\n    {\r\n      addtrailingslash(buf);\r\n      log_printf2(_T(\"RMDir: RemoveDirectory(\\\"%s\\\")\"),buf);\r\n      if (!delete_with_ro_attr_handling(buf,DEL_DIR|rebootflag))\r\n      {\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n        if (rebootflag)\r\n        {\r\n          log_printf2(_T(\"RMDir: RemoveDirectory on Reboot(\\\"%s\\\")\"),buf);\r\n          update_status_text(LANG_DELETEONREBOOT,buf);\r\n          MoveFileOnReboot(buf,NULL);\r\n        }\r\n        else\r\n#endif//NSIS_SUPPORT_MOVEONREBOOT\r\n        {\r\n          log_printf2(_T(\"RMDir: RemoveDirectory failed(\\\"%s\\\")\"),buf);\r\n          g_exec_flags.exec_error++;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        update_status_text(LANG_REMOVEDIR,buf);\r\n      }\r\n    }\r\n  }\r\n#endif//NSIS_SUPPORT_RMDIR\r\n}\r\n\r\nTCHAR *NSISCALL addtrailingslash(TCHAR *str)\r\n{\r\n  if (lastchar(str)!=_T('\\\\')) mystrcat(str,_T(\"\\\\\"));\r\n  return str;\r\n}\r\n\r\n/*char NSISCALL lastchar(const char *str)\r\n{\r\n  return *CharPrev(str,str+mystrlen(str));\r\n}*/\r\n\r\nTCHAR * NSISCALL findchar(TCHAR *str, TCHAR c)\r\n{\r\n  while (*str && *str != c)\r\n  {\r\n    str = CharNext(str);\r\n  }\r\n  return str;\r\n}\r\n\r\n// Separates a full path to the directory portion and file name portion\r\n// and returns the pointer to the filename portion.\r\nTCHAR * NSISCALL trimslashtoend(TCHAR *buf)\r\n{\r\n  TCHAR *p = buf + mystrlen(buf);\r\n  do\r\n  {\r\n    if (*p == _T('\\\\'))\r\n      break;\r\n    p = CharPrev(buf, p);\r\n  } while (p > buf);\r\n\r\n  *p = 0;\r\n\r\n  return p + 1;\r\n}\r\n\r\nint NSISCALL validpathspec(TCHAR *ubuf)\r\n{\r\n  TCHAR dl = ubuf[0] | 0x20; // convert alleged drive letter to lower case\r\n  return ((ubuf[0] == _T('\\\\') && ubuf[1] == _T('\\\\')) ||\r\n          (dl >= _T('a') && dl <= _T('z') && ubuf[1] == _T(':')));\r\n}\r\n\r\nTCHAR * NSISCALL skip_root(TCHAR *path)\r\n{\r\n  TCHAR *p = CharNext(path);\r\n  TCHAR *p2 = CharNext(p);\r\n\r\n  if (*path && p[0] == _T(':') && p[1] == _T('\\\\'))\r\n  {\r\n    return CharNext(p2);\r\n  }\r\n  else if (path[0] == _T('\\\\') && path[1] == _T('\\\\'))\r\n  {\r\n    // skip host and share name\r\n    int x = 2;\r\n    while (x--)\r\n    {\r\n      p2 = findchar(p2, _T('\\\\'));\r\n      if (!*p2)\r\n        return NULL;\r\n      p2++; // skip backslash\r\n    }\r\n\r\n    return p2;\r\n  }\r\n  else\r\n    return NULL;\r\n}\r\n\r\nint NSISCALL is_valid_instpath(TCHAR *s)\r\n{\r\n  static TCHAR tmp[NSIS_MAX_STRLEN];\r\n  TCHAR *root;\r\n\r\n  mystrcpy(tmp, s);\r\n\r\n  root = skip_root(tmp);\r\n\r\n  if (!root)\r\n    return 0;\r\n\r\n  // must be called after skip_root or AllowRootDirInstall won't work.\r\n  // validate_filename removes trailing backslashes and so converts\r\n  // \"C:\\\" to \"C:\" which is not a valid directory. skip_root returns\r\n  // NULL for \"C:\" so the above test returns 0.\r\n  // validate_filename is called so directories such as \"C:\\ \" will\r\n  // not pass as a valid non-root directory.\r\n  validate_filename(root);\r\n\r\n  if ((g_flags & CH_FLAGS_NO_ROOT_DIR) && (!*root || *root == _T('\\\\')))\r\n    return 0;\r\n\r\n  while (mystrlen(tmp) > root - tmp)\r\n  {\r\n    WIN32_FIND_DATA *fd = file_exists(tmp);\r\n    // if the directory bit not set then it's a file, which is not a valid inst dir...\r\n    // GetFileAttributes is not used because it doesn't work with certain files (error 32)\r\n    // as for concerns of the user using * or ?, that's invalid anyway...\r\n    if (fd && !(fd->dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY))\r\n      return 0;\r\n    trimslashtoend(tmp);\r\n  }\r\n\r\n  // if the root drive exists\r\n  addtrailingslash(tmp); // don't check the current directory, check the root directory\r\n  if (GetFileAttributes(tmp) == INVALID_FILE_ATTRIBUTES)\r\n    return 0;\r\n\r\n  return 1;\r\n}\r\n\r\n// Used strictly for the wininit.ini file which is an ASCII file.\r\nchar * NSISCALL mystrstriA(char *a, const char *b)\r\n{\r\n  int l = lstrlenA(b);\r\n  while (lstrlenA(a) >= l)\r\n  {\r\n    char c = a[l];\r\n    a[l] = 0;\r\n    if (!lstrcmpiA(a, b))\r\n    {\r\n      a[l] = c;\r\n      return a;\r\n    }\r\n    a[l] = c;\r\n    a = CharNextA(a);\r\n  }\r\n  return NULL;\r\n}\r\n\r\n\r\n#ifndef _NSIS_NODEFLIB_CRTMEMCPY\r\n// mini_memcpy takes the number of bytes to copy.\r\nvoid NSISCALL mini_memcpy(void *out, const void *in, UINT_PTR cb)\r\n{\r\n  char *dst = (char*) out, *src = (char*) in;\r\n  while (cb-- > 0) *dst++ = *src++;\r\n}\r\n#endif\r\n\r\nDWORD NSISCALL remove_ro_attr(LPCTSTR file)\r\n{\r\n  const DWORD attr = GetFileAttributes(file);\r\n  if (attr != INVALID_FILE_ATTRIBUTES)\r\n    SetFileAttributes(file,attr&(~FILE_ATTRIBUTE_READONLY));\r\n  return attr;\r\n}\r\n\r\nHANDLE NSISCALL myOpenFile(const TCHAR *fn, DWORD da, DWORD cd)\r\n{\r\n  int attr = GetFileAttributes(fn);\r\n  return CreateFile(\r\n    fn,\r\n    da,\r\n    FILE_SHARE_READ,\r\n    NULL,\r\n    cd,\r\n    attr == INVALID_FILE_ATTRIBUTES ? 0 : attr,\r\n    NULL\r\n  );\r\n}\r\n\r\nTCHAR * NSISCALL my_GetTempFileName(TCHAR *buf, const TCHAR *dir)\r\n{\r\n  int n = 100;\r\n  while (n--)\r\n  {\r\n    TCHAR prefix[4] = _T(\"nsa\");\r\n    prefix[2] += (TCHAR)(GetTickCount() % 26);\r\n    if (GetTempFileName(dir, prefix, 0, buf))\r\n      return buf;\r\n  }\r\n  *buf = 0;\r\n  return 0;\r\n}\r\n\r\nBOOL NSISCALL myReadFile(HANDLE h, LPVOID buf, DWORD cb)\r\n{\r\n  DWORD cbio;\r\n  return ReadFile(h, buf, cb, &cbio, NULL) && cb == cbio;\r\n}\r\n\r\nBOOL NSISCALL myWriteFile(HANDLE h, const void*buf, DWORD cb)\r\n{\r\n  DWORD cbio;\r\n  return WriteFile(h, buf, cb, &cbio, NULL) && cb == cbio;\r\n}\r\n\r\n// Reading skips the BOM if present, writing writes it to a empty file\r\nHRESULT NSISCALL UTF16LEBOM(HANDLE h, INT_PTR ForWrite)\r\n{\r\n  DWORD orgpos = SetFilePointer(h, 0, NULL, FILE_CURRENT);\r\n  if (0 == orgpos)\r\n  {\r\n    BYTE bom[2];\r\n    if (myReadFile(h, bom, 2) && (0xfeff == *(USHORT*) &bom[0]))\r\n    {\r\n      return S_OK;\r\n    }\r\n    else if (ForWrite)\r\n    {\r\n      if (0 == SetFilePointer(h, 0, NULL, FILE_CURRENT)) // Is the file empty?\r\n      {\r\n        static const BYTE bom16le[] = { 0xff, 0xfe };\r\n        return myWriteFile(h, bom16le, 2) ? S_OK : E_FAIL;\r\n      }\r\n    }\r\n    SetFilePointer(h, 0, NULL, FILE_BEGIN); // The file may have started with something that was not a BOM, undo the read\r\n  }\r\n  return S_FALSE;\r\n}\r\n\r\n#ifdef NSIS_SUPPORT_MOVEONREBOOT\r\n#ifndef _WIN64\r\n/** Modifies the wininit.ini file to rename / delete a file.\r\n *\r\n * @param prevName The previous / current name of the file.\r\n * @param newName The new name to move the file to.  If NULL, the current file\r\n * will be deleted.\r\n */\r\nvoid RenameViaWininit(const TCHAR* prevName, const TCHAR* newName)\r\n{\r\n  static char szRenameLine[1024];\r\n  static TCHAR wininit[1024];\r\n  static TCHAR tmpbuf[1024];\r\n\r\n  int cchRenameLine;\r\n  LPCSTR szRenameSec = \"[Rename]\\r\\n\"; // rename section marker\r\n  HANDLE hfile;\r\n  DWORD dwFileSize, dwRenameLinePos;\r\n  char *pszWinInit;   // Contains the file contents of wininit.ini\r\n\r\n  int spn;   // length of the short path name in TCHARs.\r\n\r\n  // Optimized mystrcpy(tmpbuf, _T(\"NUL\")):\r\n  if (sizeof(TCHAR) == 1)\r\n    *(UINT32*)tmpbuf = ((UINT32)'N' <<  0) | ((UINT32)'U' <<  8) | ((UINT32)'L' << 16) | ((UINT32)'\\0' << 24);\r\n  else\r\n    *(UINT64*)tmpbuf = ((UINT64)'N' <<  0) | ((UINT64)'U' << 16) | ((UINT64)'L' << 32) | ((UINT64)'\\0' << 48);\r\n\r\n  if (newName) {\r\n    // create the file if it's not already there to prevent GetShortPathName from failing\r\n    CloseHandle(myOpenFile(newName,0,CREATE_NEW));\r\n    spn = GetShortPathName(newName,tmpbuf,1024);\r\n    if (!spn || spn > 1024)\r\n      return;\r\n  }\r\n  // wininit is used as a temporary here\r\n  spn = GetShortPathName(prevName,wininit,1024);\r\n  if (!spn || spn > 1024)\r\n    return;\r\n#ifdef _UNICODE\r\n  cchRenameLine = wsprintfA(szRenameLine, \"%ls=%ls\\r\\n\", tmpbuf, wininit);\r\n#else\r\n  cchRenameLine = wsprintfA(szRenameLine, \"%s=%s\\r\\n\", tmpbuf, wininit);\r\n#endif\r\n  // Get the path to the wininit.ini file.\r\n  GetNSISString(wininit, g_header->str_wininit);\r\n\r\n  hfile = myOpenFile(wininit, GENERIC_READ | GENERIC_WRITE, OPEN_ALWAYS);\r\n\r\n  if (hfile != INVALID_HANDLE_VALUE)\r\n  {\r\n    // We are now working on the Windows wininit file\r\n    dwFileSize = GetFileSize(hfile, NULL);\r\n    pszWinInit = (char*) GlobalAlloc(GPTR, dwFileSize + cchRenameLine + 10);\r\n\r\n    if (pszWinInit != NULL)\r\n    {\r\n      if (myReadFile(hfile, pszWinInit, dwFileSize))\r\n      {\r\n        // Look for the rename section in the current file.\r\n        LPSTR pszRenameSecInFile = mystrstriA(pszWinInit, szRenameSec);\r\n        if (pszRenameSecInFile == NULL)\r\n        {\r\n          // No rename section.  So we add it to the end of file.\r\n          lstrcpyA(pszWinInit+dwFileSize, szRenameSec);\r\n          dwFileSize += 10;\r\n          dwRenameLinePos = dwFileSize;\r\n        }\r\n        else\r\n        {\r\n          // There is a rename section, but is there another section after it?\r\n          char *pszFirstRenameLine = pszRenameSecInFile+10;\r\n          char *pszNextSec = mystrstriA(pszFirstRenameLine,\"\\n[\");\r\n          if (pszNextSec)\r\n          {\r\n            char *p = pszWinInit + dwFileSize;\r\n            char *pEnd = pszWinInit + dwFileSize + cchRenameLine;\r\n\r\n            while (p > pszNextSec)\r\n            {\r\n              *pEnd-- = *p--;\r\n            }\r\n\r\n            dwRenameLinePos = BUGBUG64TRUNCATE(DWORD, pszNextSec - pszWinInit) + 1; // +1 for the \\n\r\n          }\r\n          // rename section is last, stick item at end of file\r\n          else dwRenameLinePos = dwFileSize;\r\n        }\r\n\r\n        mini_memcpy(&pszWinInit[dwRenameLinePos], szRenameLine, cchRenameLine);\r\n        dwFileSize += cchRenameLine;\r\n\r\n        SetFilePointer(hfile, 0, NULL, FILE_BEGIN);\r\n        myWriteFile(hfile, pszWinInit, dwFileSize);\r\n\r\n        GlobalFree(pszWinInit);\r\n      }\r\n    }\r\n    \r\n    CloseHandle(hfile);\r\n  }\r\n}\r\n#endif\r\n\r\n/**\r\n * MoveFileOnReboot tries to move a file by the name of pszExisting to the\r\n * name pszNew.\r\n *\r\n * @param pszExisting The old name of the file.\r\n * @param pszNew The new name of the file.\r\n */\r\nvoid NSISCALL MoveFileOnReboot(LPCTSTR pszExisting, LPCTSTR pszNew)\r\n{\r\n#ifndef _WIN64 // Shut up GCC unused warning\r\n  BOOL fOk =\r\n#endif\r\n    MoveFileEx(pszExisting, pszNew, MOVEFILE_DELAY_UNTIL_REBOOT|MOVEFILE_REPLACE_EXISTING);\r\n#ifndef _WIN64\r\n  if (!fOk)\r\n  {\r\n    RenameViaWininit(pszExisting, pszNew);\r\n  }\r\n#endif\r\n\r\n#ifdef NSIS_SUPPORT_REBOOT\r\n  g_exec_flags.exec_reboot++;\r\n#endif\r\n}\r\n#endif\r\n\r\n#define GetAltViewREGSAM() ( sizeof(void*) > 4 ? KEY_WOW64_32KEY : KEY_WOW64_64KEY )\r\nHKEY NSISCALL GetRegKeyAndSAM(HKEY hKey, REGSAM*pRS)\r\n{\r\n  const REGSAM samviewmask = (KEY_WOW64_32KEY|KEY_WOW64_64KEY);\r\n  const REGSAM incompatsamview = SystemSupportsAltRegView() ? 0 : GetAltViewREGSAM();\r\n  REGSAM sam = *pRS, incompatsam = incompatsamview;\r\n#ifdef C_ASSERT\r\n  {C_ASSERT(REGROOTVIEWTOSAMVIEW(REGROOTVIEW32|REGROOTVIEW64) == (KEY_WOW64_32KEY|KEY_WOW64_64KEY));}\r\n#endif\r\n  if ((sam & KEY_FORCEVIEW) && IsRegRootkeyForcedView(hKey))\r\n  {\r\n    REGSAM keysamview = REGROOTVIEWTOSAMVIEW(hKey);\r\n    if (keysamview == samviewmask) keysamview = (g_exec_flags.alter_reg_view & ~incompatsamview); // HKxxANY tries to honor SetRegView\r\n    sam &= ~samviewmask, sam |= (keysamview & ~(sizeof(void*) > 4 ? 0 : KEY_WOW64_32KEY)); // HKxx32 has the *_32KEY bit set but WinNT4&2000 cannot handle any KEY_WOW64_xxKEY flags.\r\n    hKey = (HKEY) ( (UINT_PTR) hKey & ~(REGROOTVIEW32|REGROOTVIEW64) );\r\n  }\r\n  else if (sam & KEY_ALTERVIEW)\r\n  {\r\n    sam |= g_exec_flags.alter_reg_view; // We don't mask away the incompatsamview bits because the operation is supposed to fail if the view is not supported.\r\n  }\r\n  *pRS = sam & ~(NSIS_REGSAM_PRIVATEMASK); // Filter away internal flags\r\n  return (incompatsam & sam) ? NULL : hKey; // Fail if the requested view is not supported\r\n}\r\nLONG NSISCALL RegKeyOpen(HKEY hBase, LPCTSTR SubKey, REGSAM RS, HKEY*phKey)\r\n{\r\n  if (!(hBase = GetRegKeyAndSAM(hBase, &RS))) return ERROR_INVALID_HANDLE; // ERROR_CANTOPEN?\r\n  return RegOpenKeyEx(hBase, SubKey, 0, RS, phKey);\r\n}\r\nLONG NSISCALL RegKeyCreate(HKEY hBase, LPCTSTR SubKey, REGSAM RS, HKEY*phKey)\r\n{\r\n  if (!(hBase = GetRegKeyAndSAM(hBase, &RS))) return ERROR_INVALID_HANDLE; // ERROR_CANTOPEN?\r\n  return RegCreateKeyEx(hBase, SubKey, 0, 0, 0, RS, 0, phKey, 0);\r\n}\r\n\r\nvoid NSISCALL myRegGetStr(HKEY root, const TCHAR *sub, const TCHAR *name, TCHAR *out, UINT altview)\r\n{\r\n  HKEY hKey;\r\n  DWORD cb = NSIS_MAX_STRLEN*sizeof(TCHAR), rt, ec;\r\n  REGSAM samview = altview ? GetAltViewREGSAM() : 0;\r\n  if ((ec = RegKeyOpen(root, sub, KEY_READ|samview, &hKey)) == ERROR_SUCCESS)\r\n  {\r\n    ec = RegQueryValueEx(hKey, name, NULL, &rt, (LPBYTE)out, &cb);\r\n    RegCloseKey(hKey);\r\n    out[NSIS_MAX_STRLEN-1] = 0; // Make sure the string is terminated. This could potentially truncate a long string by 1 character!\r\n  }\r\n  if (ec != ERROR_SUCCESS || (rt != REG_SZ && rt != REG_EXPAND_SZ)) *out = 0; // Empty string on failure\r\n}\r\n\r\nvoid NSISCALL iptrtostr(TCHAR *s, INT_PTR d)\r\n{\r\n#ifdef _WIN64\r\n  static const TCHAR c[] = _T(\"%Id\"); \r\n#else\r\n  static const TCHAR c[] = _T(\"%d\");\r\n#endif\r\n  wsprintf(s,c,d);\r\n}\r\n\r\nINT_PTR NSISCALL strtoiptr(const TCHAR *s)\r\n{\r\n  UINT_PTR v=0;\r\n  INT_PTR sign=1; // sign of positive\r\n  TCHAR m=10; // base of 10\r\n  TCHAR t=_T('9'); // cap top of numbers at 9\r\n\r\n  if (*s == _T('-'))\r\n  {\r\n    s++;  //skip over -\r\n    sign=-1; // sign flip\r\n  }\r\n\r\n  if (*s == _T('0'))\r\n  {\r\n    s++; // skip over 0\r\n    if (s[0] >= _T('0') && s[0] <= _T('7'))\r\n    {\r\n      m=8; // base of 8\r\n      t=_T('7'); // cap top at 7\r\n    }\r\n    if ((s[0] & ~0x20) == _T('X'))\r\n    {\r\n      m=16; // base of 16\r\n      s++; // advance over 'x'\r\n    }\r\n  }\r\n\r\n  for (;;)\r\n  {\r\n    int c=*s++;\r\n    if (c >= _T('0') && c <= t) c-=_T('0');\r\n    // clever little trick to do both upper and lowercase A-F.\r\n    else if (m==16 && (c & ~0x20) >= _T('A') && (c & ~0x20) <= _T('F')) c = (c & 7) + 9;\r\n    else break;\r\n    v*=m;\r\n    v+=c;\r\n  }\r\n  return ((INT_PTR)v)*sign;\r\n}\r\n\r\n// Straight copies of selected shell functions.  Calling local functions\r\n// requires less code than DLL functions.  For the savings to outweigh the cost\r\n// of a new function there should be about a couple of dozen or so calls.\r\nTCHAR * NSISCALL mystrcpy(TCHAR *out, const TCHAR *in)\r\n{\r\n  return lstrcpyn(out, in, NSIS_MAX_STRLEN);\r\n}\r\n\r\nint NSISCALL mystrlen(const TCHAR *in)\r\n{\r\n  return lstrlen(in);\r\n}\r\n\r\nTCHAR * NSISCALL mystrcat(TCHAR *out, const TCHAR *concat)\r\n{\r\n  return lstrcat(out, concat);\r\n}\r\n\r\nint StrWideToACP(LPCWSTR Src, char* Dst, int DstCap)\r\n{\r\n  return WideCharToMultiByte(CP_ACP, 0, Src, -1, Dst, DstCap, NULL, NULL);\r\n}\r\n\r\n#ifndef UNICODE\r\nvoid strcpyWideToT(TCHAR *out, LPCWSTR in)\r\n{\r\n  StrWideToACP(in, out, NSIS_MAX_STRLEN);\r\n}\r\n#endif\r\n\r\n#if !defined(_WIN64) && !defined(UNICODE)\r\nHRESULT ComIIDFromString(LPCTSTR str, IID*out)\r\n{\r\n  WCHAR buf[130];\r\n  signed char i;\r\n  for (i = 0; i >= 0; ++i)\r\n    if (!(buf[i] = str[i]))\r\n      return IIDFromString(buf, out);\r\n  return E_FAIL;\r\n}\r\n#endif\r\n\r\nTCHAR ps_tmpbuf[NSIS_MAX_STRLEN*2];\r\n\r\nconst TCHAR SYSREGKEY[]   = _T(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\");\r\nconst TCHAR QUICKLAUNCH[] = _T(\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\r\n\r\ntypedef HRESULT (WINAPI* PFNSHGETFOLDERPATH)(HWND, int, HANDLE, DWORD, LPTSTR);\r\nextern void *g_SHGetFolderPath;\r\ntypedef LPITEMIDLIST (WINAPI* PFNSHCLONESPECIALIDLIST)(HWND, int, BOOL);\r\n\r\n// Based on Dave Laundon's simplified process_string\r\n// The string actually has a lot of different data encoded into it.  This\r\n// function extracts the special data out and puts it into outbuf.\r\nTCHAR * NSISCALL GetNSISString(TCHAR *outbuf, int strtab)\r\n{\r\n  // This looks at the g_block (copied from header->blocks) and\r\n  // indexes into the language\r\n  TCHAR *in = (TCHAR*)GetNSISStringNP(GetNSISTab(strtab));\r\n  TCHAR *out = ps_tmpbuf;\r\n\r\n  // Still working within ps_tmpbuf, so set out to the\r\n  // current position that is passed in.\r\n  if (outbuf >= ps_tmpbuf && \r\n     (size_t) (outbuf - ps_tmpbuf) < COUNTOF(ps_tmpbuf))\r\n  {\r\n    out = outbuf;\r\n    outbuf = 0;\r\n  }\r\n\r\n  while (*in && out - ps_tmpbuf < NSIS_MAX_STRLEN)\r\n  {\r\n    _TUCHAR nVarIdx = (_TUCHAR)*in++;\r\n    int nData;\r\n    int fldrs[4];\r\n    if (nVarIdx < NS_SKIP_CODE)\r\n    {\r\n      // The next 2 BYTEs in the string might be coding either a value 0..MAX_CODED (nData), or 2 CSIDL of Special folders (for NS_SHELL_CODE)\r\n      nData = DECODE_SHORT(in);\r\n      // There are 2 CSIDL parameters for each context and query must be used before create \r\n      // because of bug #820 (CSIDL_FLAG_CREATE failures on root paths are cached in Vista).\r\n#ifdef _UNICODE\r\n      fldrs[1] = LOBYTE(*in); // current user\r\n      fldrs[0] = fldrs[1] | CSIDL_FLAG_CREATE;\r\n      fldrs[3] = HIBYTE(*in); // all users\r\n      fldrs[2] = fldrs[3] | CSIDL_FLAG_CREATE;\r\n#else\r\n      fldrs[0] = in[0] | CSIDL_FLAG_CREATE; // current user\r\n      fldrs[1] = in[0];\r\n      fldrs[2] = in[1] | CSIDL_FLAG_CREATE; // all users\r\n      fldrs[3] = in[1];\r\n#endif\r\n      in += sizeof(SHORT)/sizeof(TCHAR);\r\n\r\n      if (nVarIdx == NS_SHELL_CODE)\r\n      {\r\n        LPITEMIDLIST idl;\r\n\r\n        int x = 2;\r\n        BOOL isWin9598 = IsWin9598();\r\n        /*\r\n        SHGetFolderPath as provided by shfolder.dll is used to get special folders\r\n        unless the installer is running on Windows 95/98. For 95/98 shfolder.dll is\r\n        only used for the Application Data and Documents folder (if the DLL exists).\r\n        Otherwise, the old SHGetSpecialFolderLocation API is called.\r\n\r\n        The reason for not using shfolder.dll for all folders on 95/98 is that some\r\n        unsupported folders (such as the Start Menu folder for all users) are\r\n        simulated instead of returning an error so we can fall back on the current\r\n        user folder.\r\n\r\n        SHGetFolderPath in shell32.dll could be called directly for Windows versions\r\n        later than 95/98 but there is no need to do so, because shfolder.dll is still\r\n        provided and calls shell32.dll.\r\n        */\r\n        BOOL use_shfolder =\r\n          // Use shfolder if not on 95/98\r\n          !isWin9598 ||\r\n          // Unless the Application Data or Documents folder is requested\r\n          (\r\n            (fldrs[3] == CSIDL_COMMON_APPDATA) ||\r\n            (fldrs[3] == CSIDL_COMMON_DOCUMENTS)\r\n          );\r\n\r\n        /* Carry on... shfolder stuff is over. */\r\n\r\n        if (g_exec_flags.all_user_var)\r\n        {\r\n          x = 4; // Get common folder > Create common folder > Get user folder > Create user folder\r\n        }\r\n\r\n        if (fldrs[1] & 0x80)\r\n        {\r\n          myRegGetStr(HKEY_LOCAL_MACHINE, SYSREGKEY, GetNSISStringNP(fldrs[1] & 0x3F), out, fldrs[1] & 0x40);\r\n          if (!*out)\r\n            GetNSISString(out, fldrs[3]);\r\n          x = 0;\r\n        }\r\n        else if (fldrs[1] == CSIDL_SYSTEM) // Does not work on 95, 98 nor NT4. Works on ME and 2000+.\r\n        {\r\n          GetSystemDirectory(out, NSIS_MAX_STRLEN);\r\n          x = 0;\r\n        }\r\n        else if (fldrs[1] == CSIDL_WINDOWS) // Does not work on 95, 98 nor NT4. Works on ME and 2000+.\r\n        {\r\n          GetWindowsDirectory(out, NSIS_MAX_STRLEN);\r\n          x = 0;\r\n        }\r\n\r\n        while (x--)\r\n        {\r\n          PFNSHCLONESPECIALIDLIST SHCSILFunc;\r\n          int idandflags = fldrs[x] & ~0x40, create = idandflags & CSIDL_FLAG_CREATE;\r\n\r\n          if (g_SHGetFolderPath && use_shfolder)\r\n          {\r\n            PFNSHGETFOLDERPATH SHGetFolderPathFunc = (PFNSHGETFOLDERPATH) g_SHGetFolderPath;\r\n            if (!SHGetFolderPathFunc(g_hwnd, idandflags, NULL, SHGFP_TYPE_CURRENT, out))\r\n            {\r\n              break;\r\n            }\r\n          }\r\n\r\n          // This function exists in 95 & NT4 but was undocumented back then so we have to import it by ordinal.\r\n          SHCSILFunc = (PFNSHCLONESPECIALIDLIST) myGetProcAddress(MGA_SHCloneSpecialIDList);\r\n          idl = SHCSILFunc(g_hwnd, LOBYTE(idandflags), create);\r\n          if (idl)\r\n          {\r\n            BOOL res = SHGetPathFromIDList(idl, out);\r\n            CoTaskMemFree(idl);\r\n            if (res) break;\r\n          }\r\n\r\n          *out=0;\r\n        }\r\n\r\n        if (*out)\r\n        {\r\n          // all users' version is CSIDL_APPDATA only for $QUICKLAUNCH\r\n          // for normal $APPDATA, it'd be CSIDL_APPDATA_COMMON\r\n          if (fldrs[3] == CSIDL_APPDATA)\r\n          {\r\n            mystrcat(out, QUICKLAUNCH); // append suffix path for $QUICKLAUNCH\r\n          }\r\n        }\r\n        validate_filename(out);\r\n      }\r\n      else if (nVarIdx == NS_VAR_CODE)\r\n      {\r\n        if (nData == 29) // $HWNDPARENT\r\n          iptrtostr(out, (INT_PTR) g_hwnd);\r\n        else\r\n          mystrcpy(out, g_usrvars[nData]);\r\n        // validate the directory name\r\n        if ((unsigned int)(nData - 21) < 7) {\r\n          // validate paths for $INSTDIR, $OUTDIR, $EXEDIR, $LANGUAGE, $TEMP, $PLUGINSDIR and $EXEPATH\r\n          // $LANGUAGE is just a number anyway...\r\n          validate_filename(out);\r\n        }\r\n      } // == VAR_CODES_START\r\n      else if (nVarIdx == NS_LANG_CODE)\r\n      {\r\n        GetNSISString(out, -nData-1);\r\n      }\r\n      out += mystrlen(out);\r\n    }\r\n    else if (nVarIdx == NS_SKIP_CODE)\r\n    {\r\n      *out++ = *in++;\r\n    }\r\n    else // Normal char\r\n    {\r\n      *out++ = nVarIdx;\r\n    }\r\n  } // while\r\n  *out = 0;\r\n  if (outbuf)\r\n    return mystrcpy(outbuf, ps_tmpbuf);\r\n  return ps_tmpbuf;\r\n}\r\n\r\nvoid NSISCALL validate_filename(TCHAR *in) {\r\n  TCHAR *nono = _T(\"*?|<>/\\\":\");\r\n  TCHAR *out;\r\n  TCHAR *out_save;\r\n\r\n  // ignoring spaces is wrong, _T(\" C:\\blah\") is invalid\r\n  //while (*in == _T(' ')) in = CharNext(in);\r\n\r\n  if (in[0] == _T('\\\\') && in[1] == _T('\\\\') && in[2] == _T('?') && in[3] == _T('\\\\'))\r\n  {\r\n    // at least four bytes\r\n    in += 4;\r\n  }\r\n  if (*in)\r\n  {\r\n    // at least two bytes\r\n    if (validpathspec(in)) in += 2;\r\n  }\r\n  out = out_save = in;\r\n  while (*in)\r\n  {\r\n    if ((_TUCHAR)*in > 31 && !*findchar(nono, *in))\r\n    {\r\n      mini_memcpy(out, in, CharNext(in) - in);\r\n      out = CharNext(out);\r\n    }\r\n    in = CharNext(in);\r\n  }\r\n  *out = 0;\r\n  // now trim rightmost backslashes & spaces\r\n  do\r\n  {\r\n    out = CharPrev(out_save, out);\r\n    if (*out == _T(' ') || *out == _T('\\\\'))\r\n      *out = 0;\r\n    else\r\n      break;\r\n  } while (out_save < out);\r\n}\r\n\r\n#ifdef NSIS_CONFIG_LOG\r\nint log_dolog;\r\nTCHAR log_text[2048]; // 1024 for each wsprintf\r\n\r\n#if !defined(NSIS_CONFIG_LOG_ODS) && !defined(NSIS_CONFIG_LOG_STDOUT)\r\nvoid NSISCALL log_write(int close)\r\n{\r\n  static HANDLE fp=INVALID_HANDLE_VALUE;\r\n  if (close)\r\n  {\r\n    if (fp!=INVALID_HANDLE_VALUE)\r\n    {\r\n      CloseHandle(fp);\r\n    }\r\n    fp=INVALID_HANDLE_VALUE;\r\n    return;\r\n  }\r\n  if (log_dolog)\r\n  {\r\n    if (g_log_file[0] && fp==INVALID_HANDLE_VALUE)\r\n    {\r\n      fp = myOpenFile(g_log_file,GENERIC_WRITE,OPEN_ALWAYS);\r\n      if (fp!=INVALID_HANDLE_VALUE)\r\n        SetFilePointer(fp,0,NULL,FILE_END);\r\n    }\r\n    if (fp!=INVALID_HANDLE_VALUE)\r\n    {\r\n      mystrcat(log_text,_T(\"\\r\\n\"));\r\n      myWriteFile(fp,log_text,mystrlen(log_text)*sizeof(TCHAR));\r\n    }\r\n  }\r\n}\r\n#endif//!NSIS_CONFIG_LOG_ODS && !NSIS_CONFIG_LOG_STDOUT\r\n\r\nconst TCHAR * _RegKeyHandleToName(HKEY hKey)\r\n{\r\n  if (hKey == HKEY_CLASSES_ROOT) return _T(\"HKEY_CLASSES_ROOT\");\r\n  if (hKey == HKEY_CURRENT_USER) return _T(\"HKEY_CURRENT_USER\");\r\n  if (hKey == HKEY_LOCAL_MACHINE) return _T(\"HKEY_LOCAL_MACHINE\");\r\n  if (hKey == HKEY_USERS) return _T(\"HKEY_USERS\");\r\n  if (hKey == HKEY_PERFORMANCE_DATA) return _T(\"HKEY_PERFORMANCE_DATA\");\r\n  if (hKey == HKEY_CURRENT_CONFIG) return _T(\"HKEY_CURRENT_CONFIG\");\r\n  if (hKey == HKEY_DYN_DATA) return _T(\"HKEY_DYN_DATA\");\r\n  if (hKey == HKSHCTX) return _T(\"HKSHCTX\");\r\n  if (hKey == HKSHCTX32) return _T(\"HKSHCTX32\");\r\n  if (hKey == HKSHCTX64) return _T(\"HKSHCTX64\");\r\n  if (hKey == HKCR32) return _T(\"HKCR32\");\r\n  if (hKey == HKCR64) return _T(\"HKCR64\");\r\n  if (hKey == HKCU32) return _T(\"HKCU32\");\r\n  if (hKey == HKCU64) return _T(\"HKCU64\");\r\n  if (hKey == HKLM32) return _T(\"HKLM32\");\r\n  if (hKey == HKLM64) return _T(\"HKLM64\");\r\n  if (hKey == HKSHCTXANY) return _T(\"HKSHCTXANY\");\r\n  if (hKey == HKCRANY) return _T(\"HKCRANY\");\r\n  if (hKey == HKCUANY) return _T(\"HKCUANY\");\r\n  if (hKey == HKLMANY) return _T(\"HKLMANY\");\r\n  return _T(\"HK??\");\r\n}\r\n\r\nvoid _LogData2Hex(TCHAR *buf, size_t cchbuf, BYTE *data, size_t cbdata)\r\n{\r\n  TCHAR *p = buf;\r\n  int dots = 0;\r\n  size_t i, bufbytes = cchbuf / 3; // 2 hex digits, one space/null\r\n\r\n  if (cbdata > bufbytes)\r\n    bufbytes--, dots++;\r\n  else\r\n    bufbytes = cbdata;\r\n\r\n  for (i = 0; i < bufbytes; i++)\r\n  {\r\n    wsprintf(p, _T(\"%02x%c\"), data[i], (i == bufbytes - 1) ? _T('\\0') : _T(' '));\r\n    p += 3;\r\n  }\r\n\r\n  if (dots) mystrcat(buf, _T(\"...\"));\r\n}\r\n\r\n#ifdef NSIS_CONFIG_LOG_TIMESTAMP\r\nvoid log_timestamp(TCHAR *buf)\r\n{\r\n  SYSTEMTIME st;\r\n  GetLocalTime(&st);\r\n  wsprintf(buf,_T(\"[%04hu/%02hu/%02hu %02hu:%02hu:%02hu] \"), st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute, st.wSecond);\r\n}\r\n#else\r\n#  define log_timestamp(x)\r\n#endif//NSIS_CONFIG_LOG_TIMESTAMP\r\n\r\nvoid log_printf(TCHAR *format, ...)\r\n{\r\n#if defined(NSIS_CONFIG_LOG_STDOUT)\r\n  HANDLE hStdOut;\r\n#endif\r\n  va_list val;\r\n  va_start(val,format);\r\n\r\n  log_text[0] = _T('\\0');\r\n  log_timestamp(log_text);\r\n  wvsprintf(log_text+mystrlen(log_text),format,val);\r\n\r\n  va_end(val);\r\n#if defined(NSIS_CONFIG_LOG_ODS)\r\n  if (log_dolog)\r\n    OutputDebugString(log_text);\r\n#elif defined(NSIS_CONFIG_LOG_STDOUT)\r\n  if (log_dolog && (hStdOut = GetStdHandle(STD_OUTPUT_HANDLE)) != INVALID_HANDLE_VALUE)\r\n  {\r\n    const DWORD cch = lstrlen(log_text), cb = cch * sizeof(TCHAR);\r\n#ifdef UNICODE\r\n    DWORD conmode, cchio;\r\n    if (GetConsoleMode(hStdOut, &conmode))\r\n    {\r\n      WriteConsoleW(hStdOut, log_text, cch, &cchio, 0);\r\n      myWriteFile(hStdOut, \"\\n\", 1);\r\n    }\r\n    else\r\n#endif //~ UNICODE\r\n    {\r\n      myWriteFile(hStdOut, log_text, cb);\r\n      myWriteFile(hStdOut, _T(\"\\n\"), 1 * sizeof(TCHAR));\r\n    }\r\n  }\r\n#else\r\n  log_write(0);\r\n#endif\r\n}\r\n#endif//NSIS_CONFIG_LOG\r\n\r\n// Jim Park: This function is non-reentrant because of the static.\r\nWIN32_FIND_DATA * NSISCALL file_exists(TCHAR *buf)\r\n{\r\n  HANDLE h;\r\n  static WIN32_FIND_DATA fd;\r\n  h = FindFirstFile(buf,&fd);\r\n  if (h != INVALID_HANDLE_VALUE)\r\n  {\r\n    FindClose(h);\r\n    return &fd;\r\n  }\r\n  return NULL;\r\n}\r\n\r\n// Jim Park: Keep these as chars since there's only ANSI version of\r\n// GetProcAddress.\r\nstruct MGA_FUNC\r\n{\r\n  const char *dll;\r\n  const char *func;\r\n};\r\n\r\nstruct MGA_FUNC MGA_FUNCS[] = {\r\n#ifdef _UNICODE\r\n  {\"KERNEL32\", \"SetDefaultDllDirectories\"},\r\n#ifndef _WIN64\r\n  {\"KERNEL32\", \"GetDiskFreeSpaceExW\"},\r\n  {\"KERNEL32\", \"GetUserDefaultUILanguage\"},\r\n#endif\r\n#if !defined(_WIN64) || defined(_M_IA64)\r\n  {\"ADVAPI32\", \"RegDeleteKeyExW\"},\r\n#endif\r\n  {\"ADVAPI32\", \"InitiateShutdownW\"},\r\n  {\"SHELL32\", \"SHGetKnownFolderPath\"},\r\n  {\"SHELL32\", (CHAR*) 680}, // IsUserAnAdmin\r\n  {\"SHELL32\", (CHAR*) 89}, // SHCloneSpecialIDList\r\n#ifndef _WIN64\r\n  {\"SHLWAPI\", (CHAR*) 437}, // IsOS\r\n#endif\r\n  {\"SHLWAPI\",  \"SHAutoComplete\"},\r\n  {\"SHFOLDER\", \"SHGetFolderPathW\"},\r\n#ifdef NSIS_SUPPORT_GETDLLVERSION\r\n  {\"VERSION\",  \"GetFileVersionInfoSizeW\"},\r\n  {\"VERSION\",  \"GetFileVersionInfoW\"},\r\n  {\"VERSION\",  \"VerQueryValueW\"}\r\n#endif\r\n};\r\n#else\r\n  {\"KERNEL32\", \"SetDefaultDllDirectories\"},\r\n  {\"KERNEL32\", \"GetDiskFreeSpaceExA\"},\r\n  {\"KERNEL32\", \"GetUserDefaultUILanguage\"},\r\n  {\"ADVAPI32\", \"RegDeleteKeyExA\"},\r\n  {\"ADVAPI32\", \"InitiateShutdownA\"},\r\n  {\"SHELL32\", \"SHGetKnownFolderPath\"},\r\n  {\"SHELL32\", (CHAR*) 680}, // IsUserAnAdmin\r\n  {\"SHELL32\", (CHAR*) 89}, // SHCloneSpecialIDList\r\n#ifndef _WIN64\r\n  {\"SHLWAPI\", (CHAR*) 437}, // IsOS\r\n#endif\r\n  {\"SHLWAPI\",  \"SHAutoComplete\"},\r\n  {\"SHFOLDER\", \"SHGetFolderPathA\"},\r\n#ifdef NSIS_SUPPORT_GETDLLVERSION\r\n  {\"VERSION\",  \"GetFileVersionInfoSizeA\"},\r\n  {\"VERSION\",  \"GetFileVersionInfoA\"},\r\n  {\"VERSION\",  \"VerQueryValueA\"}\r\n#endif\r\n};\r\n#endif\r\n\r\nHMODULE NSISCALL LoadSystemLibrary(LPCSTR name)\r\n{\r\n  LPCTSTR fmt = sizeof(*fmt) > 1 ? TEXT(\"%s%S.dll\") : TEXT(\"%s%s.dll\"); // The module name is always ANSI\r\n  BYTE bytebuf[(MAX_PATH+1+20+1+3+!0) * sizeof(*fmt)]; // 20+4 is more than enough for \r\n  LPTSTR path = (LPTSTR) bytebuf;                      // the dllnames we are using.\r\n\r\n  UINT cch = GetSystemDirectory(path, MAX_PATH);\r\n  if (cch > MAX_PATH) // MAX_PATH was somehow not large enough and we don't support \r\n    cch = 0;          // \\\\?\\ paths so we have to settle for just the name.\r\n  wsprintf(path + cch, fmt, TEXT(\"\\\\\") + (!cch || path[cch-1] == '\\\\'), name);\r\n\r\n  return LoadLibraryEx(path, NULL, LOAD_WITH_ALTERED_SEARCH_PATH);\r\n}\r\n\r\n/**\r\n * Given a function enum, it will load the appropriate DLL and get the\r\n * process address of the function and return the pointer.  It's up to\r\n * the caller to know how to call that function, however.\r\n *\r\n * @param func Enum value that indexes the MGA_FUNCS array.\r\n * @return Pointer to the function identified by the enum value.\r\n */\r\nvoid* NSISCALL myGetProcAddress(const enum myGetProcAddressFunctions func)\r\n{\r\n  const char *dllname = MGA_FUNCS[func].dll;\r\n  HMODULE hModule;\r\n\r\n  hModule = GetModuleHandleA(dllname);    // Avoid LoadLibrary if possible because \r\n  if (!hModule)                           // it can crash on 64-bit dlls if \r\n    hModule = LoadSystemLibrary(dllname); // WoW64 FS redirection is off.\r\n\r\n  return hModule\r\n    ? GetProcAddress(hModule, MGA_FUNCS[func].func)\r\n    : (FARPROC) hModule; // Optimized \"return NULL;\"\r\n}\r\n\r\nvoid NSISCALL MessageLoop(UINT uCheckedMsg)\r\n{\r\n  MSG msg;\r\n  while (PeekMessage(&msg, NULL, uCheckedMsg, uCheckedMsg, PM_REMOVE))\r\n    DispatchMessage(&msg);\r\n}\r\n\r\n/**\r\n * This function is useful for Unicode support.  Since the Windows\r\n * GetProcAddress function always takes a char*, this function wraps\r\n * the windows call and does the appropriate translation when\r\n * appropriate.\r\n *\r\n * @param dllHandle Handle to the DLL loaded by LoadLibrary[Ex].\r\n * @param funcName The name of the function to get the address of.\r\n * @return The pointer to the function.  Null if failure.\r\n */\r\nvoid * NSISCALL NSISGetProcAddress(HANDLE dllHandle, TCHAR* funcName)\r\n{\r\n#ifdef _UNICODE\r\n  char ansiName[256];\r\n  if (StrWideToACP(funcName, ansiName, 256) != 0)\r\n    return GetProcAddress(dllHandle, ansiName);\r\n  return NULL;\r\n#else\r\n  return GetProcAddress(dllHandle, funcName);\r\n#endif\r\n}\r\n\r\nDWORD NSISCALL WaitForProcess(HANDLE hProcess)\r\n{\r\n  DWORD excod;\r\n  while (WaitForSingleObject(hProcess, 100) == WAIT_TIMEOUT)\r\n    MessageLoop(WM_PAINT);\r\n\r\n  GetExitCodeProcess(hProcess, &excod);\r\n  return excod;\r\n}\r\n"], "filenames": ["Docs/src/history.but", "Source/build.cpp", "Source/exehead/Main.c", "Source/exehead/util.c"], "buggy_code_start_loc": [11, 2329, 351, 71], "buggy_code_end_loc": [11, 2331, 405, 79], "fixing_code_start_loc": [12, 2329, 351, 70], "fixing_code_end_loc": [16, 2331, 414, 75], "type": "NVD-CWE-noinfo", "message": "Nullsoft Scriptable Install System (NSIS) before 3.09 mishandles access control for an uninstaller directory.", "other": {"cve": {"id": "CVE-2023-37378", "sourceIdentifier": "cve@mitre.org", "published": "2023-07-03T20:15:09.620", "lastModified": "2023-11-07T04:16:54.580", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Nullsoft Scriptable Install System (NSIS) before 3.09 mishandles access control for an uninstaller directory."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nullsoft:nullsoft_scriptable_install_system:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.09", "matchCriteriaId": "18F35A89-2710-4212-8C1C-1333A64EBDAA"}]}]}], "references": [{"url": "http://sf.net/p/nsis/bugs/1296", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Permissions Required"]}, {"url": "https://github.com/kichik/nsis/commit/281e2851fe669d10e0650fc89d0e7fb74a598967", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/kichik/nsis/commit/409b5841479c44fbf33a6ba97c1146e46f965467", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/kichik/nsis/commit/c40cf78994e74a1a3a381a850c996b251e3277c0", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://lists.debian.org/debian-lts-announce/2023/07/msg00005.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A65FBUMHLZ7GBV3VDKUB5EK3A7X2UUWK/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OZPAAU57IA3NP6UOUXNBUQBAYK3JB2IM/", "source": "cve@mitre.org"}, {"url": "https://nsis.sourceforge.io/Docs/AppendixF.html#v3.09", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://sourceforge.net/p/nsis/news/2023/07/nsis-309-released/", "source": "cve@mitre.org", "tags": ["Release Notes"]}]}, "github_commit_url": "https://github.com/kichik/nsis/commit/281e2851fe669d10e0650fc89d0e7fb74a598967"}}