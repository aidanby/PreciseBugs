{"buggy_code": ["<?php\n/**\n * Copyright (C) 2019 thirty bees\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@thirtybees.com so we can send you a copy immediately.\n *\n * @author    thirty bees <modules@thirtybees.com>\n * @copyright 2019 thirty bees\n * @license   Academic Free License (AFL 3.0)\n */\n\nuse BeesBlogModule\\BeesBlogPost;\n\nif (!defined('_TB_VERSION_')) {\n    exit;\n}\n\n/**\n * Class BeesBlogDetailsModuleFrontController\n */\nclass BeesBlogPostModuleFrontController extends ModuleFrontController\n{\n    /**\n     * @var string\n     */\n    public $report = '';\n\n    /**\n     * @var int $idPost\n     */\n    protected $idPost;\n\n    /**\n     * @var BeesBlogPost $blogPost;\n     */\n    protected $blogPost;\n\n    /**\n     * @var BeesBlog $module\n     */\n    public $module;\n\n    /**\n     * Initialize content\n     *\n     * @return void\n     * @throws PrestaShopException\n     */\n    public function initContent()\n    {\n        parent::initContent();\n\n        $post = $this->getBeesBlogPost();\n        if (! $post) {\n            Tools::redirect(BeesBlog::getBeesBlogLink());\n            return;\n        }\n\n        // mark post as viewed\n        BeesBlogPost::viewed($post->id);\n\n        if (Configuration::get(BeesBlog::SOCIAL_SHARING)) {\n            $this->context->controller->addCSS(_PS_MODULE_DIR_.'beesblog/views/css/socialmedia.css', 'all');\n            $this->context->controller->addJS(_PS_MODULE_DIR_.'beesblog/views/js/socialmedia.js');\n        }\n        Media::addJsDef([\n            'sharing_name' => addcslashes($post->title, \"'\"),\n            'sharing_url' => addcslashes(Tools::getHttpHost(true).$_SERVER['REQUEST_URI'], \"'\"),\n            'sharing_img' => addcslashes(Tools::getHttpHost(true).'/img/beesblog/posts/'.(int) $post->id.'.jpg', \"'\"),\n        ]);\n\n        $postProperties = [\n            'meta_title'           => $post->meta_title.' - '.Configuration::get('PS_SHOP_NAME'),\n            'meta_description'     => $post->meta_description,\n            'meta_keywords'        => $post->meta_keywords,\n            'blogHome'             => BeesBlog::getBeesBlogLink(),\n            'post'                 => $post,\n            'authorStyle'          => Configuration::get(BeesBlog::AUTHOR_STYLE),\n            'showAuthor'           => (bool) Configuration::get(BeesBlog::SHOW_AUTHOR),\n            'showDate'             => (bool) Configuration::get(BeesBlog::SHOW_DATE),\n            'socialSharing'        => Configuration::get(BeesBlog::SOCIAL_SHARING) && Module::isEnabled('socialsharing'),\n            'disableCategoryImage' => (bool) Configuration::get(BeesBlog::SHOW_CATEGORY_IMAGE),\n            'showViewed'           => (bool) Configuration::get(BeesBlog::SHOW_POST_COUNT),\n            'showNoImage'          => (bool) Configuration::get(BeesBlog::SHOW_NO_IMAGE),\n            'showComments'         => (bool) Configuration::get(BeesBlog::DISQUS_USERNAME),\n            'disqusUsername'       => Configuration::get(BeesBlog::DISQUS_USERNAME),\n            'PS_SC_TWITTER'        => Configuration::get('PS_SC_TWITTER'),\n            'PS_SC_FACEBOOK'       => Configuration::get('PS_SC_FACEBOOK'),\n            'PS_SC_PINTEREST'      => Configuration::get('PS_SC_PINTEREST'),\n        ];\n        $postProperties = array_merge($postProperties, [\n            'displayBeesBlogBeforePost' => Hook::exec('displayBeesBlogBeforePost', $postProperties),\n            'displayBeesBlogAfterPost' => Hook::exec('displayBeesBlogAfterPost', $postProperties),\n        ]);\n\n        $this->context->smarty->assign($postProperties);\n\n        $this->setTemplate('post.tpl');\n    }\n\n    /**\n     * Returns blog post ID\n     *\n     * @return int\n     * @throws PrestaShopDatabaseException\n     * @throws PrestaShopException\n     */\n    public function getBeesBlogPostId()\n    {\n        if (is_null($this->idPost)) {\n            $this->idPost = (int)BeesBlogPost::getIdByRewrite(Tools::getValue('blog_rewrite'));\n        }\n        return $this->idPost;\n    }\n\n    /**\n     * Returns associated blog post\n     *\n     * @return BeesBlogPost\n     * @throws PrestaShopDatabaseException\n     * @throws PrestaShopException\n     */\n    public function getBeesBlogPost()\n    {\n        if (is_null($this->blogPost)) {\n            $postId = $this->getBeesBlogPostId();\n            if ($postId) {\n                $blogPost = new BeesBlogPost($postId, $this->context->language->id);\n                if (Validate::isLoadedObject($blogPost) && $blogPost->active && $blogPost->lang_active) {\n                    $this->blogPost = $blogPost;\n                }\n            }\n        }\n        return $this->blogPost;\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright (C) 2019 thirty bees\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@thirtybees.com so we can send you a copy immediately.\n *\n * @author    thirty bees <modules@thirtybees.com>\n * @copyright 2019 thirty bees\n * @license   Academic Free License (AFL 3.0)\n */\n\nuse BeesBlogModule\\BeesBlogPost;\n\nif (!defined('_TB_VERSION_')) {\n    exit;\n}\n\n/**\n * Class BeesBlogDetailsModuleFrontController\n */\nclass BeesBlogPostModuleFrontController extends ModuleFrontController\n{\n    /**\n     * @var string\n     */\n    public $report = '';\n\n    /**\n     * @var int $idPost\n     */\n    protected $idPost;\n\n    /**\n     * @var BeesBlogPost $blogPost;\n     */\n    protected $blogPost;\n\n    /**\n     * @var BeesBlog $module\n     */\n    public $module;\n\n    /**\n     * Initialize content\n     *\n     * @return void\n     * @throws PrestaShopException\n     */\n    public function initContent()\n    {\n        parent::initContent();\n\n        $post = $this->getBeesBlogPost();\n        if (! $post) {\n            Tools::redirect(BeesBlog::getBeesBlogLink());\n            return;\n        }\n\n        // mark post as viewed\n        BeesBlogPost::viewed($post->id);\n\n        if (Configuration::get(BeesBlog::SOCIAL_SHARING)) {\n            $this->context->controller->addCSS(_PS_MODULE_DIR_.'beesblog/views/css/socialmedia.css', 'all');\n            $this->context->controller->addJS(_PS_MODULE_DIR_.'beesblog/views/js/socialmedia.js');\n        }\n        Media::addJsDef([\n            'sharing_name' => addcslashes($post->title, \"'\"),\n            'sharing_url' => addcslashes($post->link, \"'\"),\n            'sharing_img' => addcslashes(Tools::getHttpHost(true).'/img/beesblog/posts/'.(int) $post->id.'.jpg', \"'\"),\n        ]);\n\n        $postProperties = [\n            'meta_title'           => $post->meta_title.' - '.Configuration::get('PS_SHOP_NAME'),\n            'meta_description'     => $post->meta_description,\n            'meta_keywords'        => $post->meta_keywords,\n            'blogHome'             => BeesBlog::getBeesBlogLink(),\n            'post'                 => $post,\n            'authorStyle'          => Configuration::get(BeesBlog::AUTHOR_STYLE),\n            'showAuthor'           => (bool) Configuration::get(BeesBlog::SHOW_AUTHOR),\n            'showDate'             => (bool) Configuration::get(BeesBlog::SHOW_DATE),\n            'socialSharing'        => Configuration::get(BeesBlog::SOCIAL_SHARING) && Module::isEnabled('socialsharing'),\n            'disableCategoryImage' => (bool) Configuration::get(BeesBlog::SHOW_CATEGORY_IMAGE),\n            'showViewed'           => (bool) Configuration::get(BeesBlog::SHOW_POST_COUNT),\n            'showNoImage'          => (bool) Configuration::get(BeesBlog::SHOW_NO_IMAGE),\n            'showComments'         => (bool) Configuration::get(BeesBlog::DISQUS_USERNAME),\n            'disqusUsername'       => Configuration::get(BeesBlog::DISQUS_USERNAME),\n            'PS_SC_TWITTER'        => Configuration::get('PS_SC_TWITTER'),\n            'PS_SC_FACEBOOK'       => Configuration::get('PS_SC_FACEBOOK'),\n            'PS_SC_PINTEREST'      => Configuration::get('PS_SC_PINTEREST'),\n        ];\n        $postProperties = array_merge($postProperties, [\n            'displayBeesBlogBeforePost' => Hook::exec('displayBeesBlogBeforePost', $postProperties),\n            'displayBeesBlogAfterPost' => Hook::exec('displayBeesBlogAfterPost', $postProperties),\n        ]);\n\n        $this->context->smarty->assign($postProperties);\n\n        $this->setTemplate('post.tpl');\n    }\n\n    /**\n     * Returns blog post ID\n     *\n     * @return int\n     * @throws PrestaShopDatabaseException\n     * @throws PrestaShopException\n     */\n    public function getBeesBlogPostId()\n    {\n        if (is_null($this->idPost)) {\n            $this->idPost = (int)BeesBlogPost::getIdByRewrite(Tools::getValue('blog_rewrite'));\n        }\n        return $this->idPost;\n    }\n\n    /**\n     * Returns associated blog post\n     *\n     * @return BeesBlogPost\n     * @throws PrestaShopDatabaseException\n     * @throws PrestaShopException\n     */\n    public function getBeesBlogPost()\n    {\n        if (is_null($this->blogPost)) {\n            $postId = $this->getBeesBlogPostId();\n            if ($postId) {\n                $blogPost = new BeesBlogPost($postId, $this->context->language->id);\n                if (Validate::isLoadedObject($blogPost) && $blogPost->active && $blogPost->lang_active) {\n                    $this->blogPost = $blogPost;\n                }\n            }\n        }\n        return $this->blogPost;\n    }\n}\n"], "filenames": ["controllers/front/post.php"], "buggy_code_start_loc": [76], "buggy_code_end_loc": [77], "fixing_code_start_loc": [76], "fixing_code_end_loc": [77], "type": "CWE-79", "message": "The beesblog (aka Bees Blog) component before 1.6.2 for thirty bees allows Reflected XSS because controllers/front/post.php sharing_url is mishandled.", "other": {"cve": {"id": "CVE-2023-52264", "sourceIdentifier": "cve@mitre.org", "published": "2023-12-30T23:15:42.477", "lastModified": "2024-01-05T20:46:48.340", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The beesblog (aka Bees Blog) component before 1.6.2 for thirty bees allows Reflected XSS because controllers/front/post.php sharing_url is mishandled."}, {"lang": "es", "value": "El componente beesblog (tambi\u00e9n conocido como Bees Blog) anterior a 1.6.2 para thirty bees permite XSS reflejado porque controllers/front/post.php Sharing_url no se maneja correctamente."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:thirtybees:bees_blog:*:*:*:*:*:thirty_bees:*:*", "versionEndExcluding": "1.6.2", "matchCriteriaId": "546A216E-4E69-48C3-B422-0F9F45F17CB7"}]}]}], "references": [{"url": "https://github.com/thirtybees/beesblog/commit/a3aeed8fcf01c8e4112c168cf2ef7d67c8056daf", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/thirtybees/beesblog/compare/1.6.1...1.6.2", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://zigrin.com/advisories/thirty-bees-reflected-cross-site-scripting-vulnerability/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thirtybees/beesblog/commit/a3aeed8fcf01c8e4112c168cf2ef7d67c8056daf"}}