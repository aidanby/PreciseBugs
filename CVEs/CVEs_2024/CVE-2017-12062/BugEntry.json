{"buggy_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User Page\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses database_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses icon_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n * @uses utility_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'database_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'icon_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'utility_api.php' );\n\nauth_reauthenticate();\n\naccess_ensure_global_level( config_get( 'manage_user_threshold' ) );\n\n$t_cookie_name = config_get( 'manage_users_cookie' );\n$t_lock_image = '<i class=\"fa fa-lock fa-lg\" alt=\"' . lang_get( 'protected' ) . '\" />';\n\n$f_save          = gpc_get_bool( 'save' );\n$f_filter        = utf8_strtoupper( gpc_get_string( 'filter', config_get( 'default_manage_user_prefix' ) ) );\n$f_page_number   = gpc_get_int( 'page_number', 1 );\n\nif( !$f_save && !is_blank( gpc_get_cookie( $t_cookie_name, '' ) ) ) {\n\t$t_manage_arr = explode( ':', gpc_get_cookie( $t_cookie_name ) );\n\n\t# Hide Inactive\n\t$f_hide_inactive = (bool)$t_manage_arr[0];\n\n\t# Sort field\n\tif ( isset( $t_manage_arr[1] ) ) {\n\t\t$f_sort = $t_manage_arr[1];\n\t} else {\n\t\t$f_sort = 'username';\n\t}\n\n\t# Sort order\n\tif ( isset( $t_manage_arr[2] ) ) {\n\t\t$f_dir = $t_manage_arr[2];\n\t} else {\n\t\t$f_dir = 'DESC';\n\t}\n\n\t# Show Disabled\n\tif ( isset( $t_manage_arr[3] ) ) {\n\t\t$f_show_disabled = $t_manage_arr[3];\n\t}\n} else {\n\t$f_sort          = gpc_get_string( 'sort', 'username' );\n\t$f_dir           = gpc_get_string( 'dir', 'ASC' );\n\t$f_hide_inactive = gpc_get_bool( 'hideinactive' );\n\t$f_show_disabled = gpc_get_bool( 'showdisabled' );\n}\n\n# Clean up the form variables\nif( !db_field_exists( $f_sort, db_get_table( 'user' ) ) ) {\n\t$c_sort = 'username';\n} else {\n\t$c_sort = addslashes( $f_sort );\n}\n\n$c_dir = ( $f_dir == 'ASC' ) ? 'ASC' : 'DESC';\n\n# OFF = show inactive users, anything else = hide them\n$c_hide_inactive = ( $f_hide_inactive == OFF ) ? OFF : ON;\n$t_hide_inactive_filter = '&amp;hideinactive=' . $c_hide_inactive;\n\n# OFF = hide disabled users, anything else = show them\n$c_show_disabled = ( $f_show_disabled == OFF ) ? OFF : ON;\n$t_show_disabled_filter = '&amp;showdisabled=' . $c_show_disabled;\n\n# set cookie values for hide inactive, sort by, dir and show disabled\nif( $f_save ) {\n\t$t_manage_string = $c_hide_inactive.':'.$c_sort.':'.$c_dir.':'.$c_show_disabled;\n\tgpc_set_cookie( $t_cookie_name, $t_manage_string, true );\n}\n\nlayout_page_header( lang_get( 'manage_users_link' ) );\n\nlayout_page_begin( 'manage_overview_page.php' );\n\nprint_manage_menu( 'manage_user_page.php' );\n\n# New Accounts Form BEGIN\n\n$t_days_old = 7 * SECONDS_PER_DAY;\n$t_query = 'SELECT COUNT(*) AS new_user_count FROM {user}\n\tWHERE ' . db_helper_compare_time( db_param(), '<=', 'date_created', $t_days_old );\n$t_result = db_query( $t_query, array( db_now() ) );\n$t_row = db_fetch_array( $t_result );\n$t_new_user_count = $t_row['new_user_count'];\n\n# Never Logged In Form BEGIN\n\n$t_query = 'SELECT COUNT(*) AS unused_user_count FROM {user}\n\tWHERE ( login_count = 0 ) AND ( date_created = last_visit )';\n$t_result = db_query( $t_query );\n$t_row = db_fetch_array( $t_result );\n$t_unused_user_count = $t_row['unused_user_count'];\n\n# Manage Form BEGIN\n\n$t_prefix_array = array();\n\n$t_prefix_array['ALL'] = lang_get( 'show_all_users' );\n\nfor( $i = 'A'; $i != 'AA'; $i++ ) {\n\t$t_prefix_array[$i] = $i;\n}\n\nfor( $i = 0; $i <= 9; $i++ ) {\n\t$t_prefix_array[(string)$i] = (string)$i;\n}\n$t_prefix_array['UNUSED'] = lang_get( 'users_unused' );\n$t_prefix_array['NEW'] = lang_get( 'users_new' );\n\necho '<div class=\"col-md-12 col-xs-12\">';\necho '<div class = \"space-10\"></div>';\necho '<div class=\"center\" >';\necho '  <div class=\"btn-toolbar inline\" >';\necho '    <div class=\"btn-group\" >';\nforeach ( $t_prefix_array as $t_prefix => $t_caption ) {\n\tif( $t_prefix === 'UNUSED' ) {\n\t\t$t_title = ' title=\"[' . $t_unused_user_count . '] (' . lang_get( 'never_logged_in_title' ) . ')\"';\n\t} else if( $t_prefix === 'NEW' ) {\n\t\t$t_title = ' title=\"[' . $t_new_user_count . '] (' . lang_get( '1_week_title' ) . ')\"';\n\t} else {\n\t\t$t_title = '';\n\t}\n\t$t_active = (string)$t_prefix === $f_filter ? 'active' : '';\n\t\tprint_manage_user_sort_link( 'manage_user_page.php',\n\t\t\t$t_caption,\n\t\t\t$c_sort,\n\t\t\t$c_dir, null, $c_hide_inactive, $t_prefix, $c_show_disabled,\n\t\t\t'btn btn-xs btn-white btn-primary ' . $t_active );\n}\necho '</div>';\necho '</div>';\necho '</div>';\necho '<div class=\"space-10\"></div >';\n\n$t_where_params = array();\nif( $f_filter === 'ALL' ) {\n\t$t_where = '(1 = 1)';\n} else if( $f_filter === 'UNUSED' ) {\n\t$t_where = '(login_count = 0) AND ( date_created = last_visit )';\n} else if( $f_filter === 'NEW' ) {\n\t$t_where = db_helper_compare_time( db_param(), '<=', 'date_created', $t_days_old );\n\t$t_where_params[] = db_now();\n} else {\n\t$t_where_params[] = $f_filter . '%';\n\t$t_where = db_helper_like( 'UPPER(username)' );\n}\n\n$p_per_page = 50;\n\n$t_offset = ( ( $f_page_number - 1 ) * $p_per_page );\n\n$t_total_user_count = 0;\n\n# Get the user data in $c_sort order\n$t_result = '';\n\nif( ON != $c_show_disabled ) {\n\t$t_where .= ' AND enabled = ' . db_param();\n\t$t_where_params[] = true;\n}\n\nif( OFF != $c_hide_inactive ) {\n\t$t_where .= ' AND ' . db_helper_compare_time( db_param(), '<', 'last_visit', $t_days_old );\n\t$t_where_params[] = db_now();\n}\n\n$t_query = 'SELECT count(*) as user_count FROM {user} WHERE ' . $t_where;\n$t_result = db_query( $t_query, $t_where_params );\n$t_row = db_fetch_array( $t_result );\n$t_total_user_count = $t_row['user_count'];\n\n$t_page_count = ceil( $t_total_user_count / $p_per_page );\nif( $t_page_count < 1 ) {\n\t$t_page_count = 1;\n}\n\n# Make sure $p_page_number isn't past the last page.\nif( $f_page_number > $t_page_count ) {\n\t$f_page_number = $t_page_count;\n}\n\n# Make sure $p_page_number isn't before the first page\nif( $f_page_number < 1 ) {\n\t$f_page_number = 1;\n}\n\n\n$t_query = 'SELECT * FROM {user} WHERE ' . $t_where . ' ORDER BY ' . $c_sort . ' ' . $c_dir;\n$t_result = db_query( $t_query, $t_where_params, $p_per_page, $t_offset );\n\n$t_users = array();\nwhile( $t_row = db_fetch_array( $t_result ) ) {\n\t$t_users[] = $t_row;\n}\n\n$t_user_count = count( $t_users );\n?>\n<div class=\"widget-box widget-color-blue2\">\n<div class=\"widget-header widget-header-small\">\n<h4 class=\"widget-title lighter\">\n\t<i class=\"ace-icon fa fa-users\"></i>\n\t<?php echo lang_get('manage_accounts_title') ?>\n\t<span class=\"badge\"><?php echo $t_total_user_count ?></span>\n</h4>\n</div>\n\n<div class=\"widget-body\">\n<div class=\"widget-toolbox padding-8 clearfix\">\n\t<div id=\"manage-user-div\" class=\"form-container\">\n\t\t<div class=\"pull-left\">\n\t\t\t<?php print_form_button( 'manage_user_create_page.php', lang_get( 'create_new_account_link' ), null, null, 'btn btn-primary btn-white btn-round' ) ?>\n\t\t</div>\n\t\t<?php if( $f_filter === 'UNUSED' ) { ?>\n\t\t<div class=\"pull-left\">\n\t\t\t<?php print_form_button('manage_user_prune.php', lang_get('prune_accounts'), null, null, 'btn btn-primary btn-white btn-round') ?>\n\t\t</div>\n\t\t<?php } ?>\n\t<div class=\"pull-right\">\n\t<form id=\"manage-user-filter\" method=\"post\" action=\"manage_user_page.php\" class=\"form-inline\">\n\t\t<fieldset>\n\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t<input type=\"hidden\" name=\"sort\" value=\"<?php echo $c_sort ?>\" />\n\t\t\t<input type=\"hidden\" name=\"dir\" value=\"<?php echo $c_dir ?>\" />\n\t\t\t<input type=\"hidden\" name=\"save\" value=\"1\" />\n\t\t\t<input type=\"hidden\" name=\"filter\" value=\"<?php echo $f_filter ?>\" />\n\t\t\t<label class=\"inline\">\n\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"hideinactive\" value=\"<?php echo ON ?>\" <?php check_checked( (int)$c_hide_inactive, ON ); ?> />\n\t\t\t<span class=\"lbl\"> <?php echo lang_get( 'hide_inactive' ) ?></span>\n\t\t\t</label>\n\t\t\t<label class=\"inline\">\n\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"showdisabled\" value=\"<?php echo ON ?>\" <?php check_checked( (int)$c_show_disabled, ON ); ?> />\n\t\t\t<span class=\"lbl\"> <?php echo lang_get( 'show_disabled' ) ?></span>\n\t\t\t</label>\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-sm btn-white btn-round\" value=\"<?php echo lang_get( 'filter_button' ) ?>\" />\n\t\t</fieldset>\n\t</form>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"widget-main no-padding\">\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-striped table-bordered table-condensed table-hover\">\n\t\t<thead>\n\t\t\t<tr>\n<?php\n\t# Print column headers with sort links\n\t$t_columns = array(\n\t\t'username', 'realname', 'email', 'access_level',\n\t\t'enabled', 'protected', 'date_created', 'last_visit'\n\t);\n\n\tforeach( $t_columns as $t_col ) {\n\t\techo \"\\t<th>\";\n\t\tprint_manage_user_sort_link( 'manage_user_page.php',\n\t\t\tlang_get( $t_col ),\n\t\t\t$t_col,\n\t\t\t$c_dir, $c_sort, $c_hide_inactive, $f_filter, $c_show_disabled );\n\t\tprint_sort_icon( $c_dir, $c_sort, $t_col );\n\t\techo \"</th>\\n\";\n\t}\n?>\n\t\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n<?php\n\t$t_date_format = config_get( 'normal_date_format' );\n\t$t_access_level = array();\n\tfor( $i=0; $i<$t_user_count; $i++ ) {\n\t\t# prefix user data with u_\n\t\t$t_user = $t_users[$i];\n\t\textract( $t_user, EXTR_PREFIX_ALL, 'u' );\n\n\t\t$u_date_created  = date( $t_date_format, $u_date_created );\n\t\t$u_last_visit    = date( $t_date_format, $u_last_visit );\n\n\t\tif( !isset( $t_access_level[$u_access_level] ) ) {\n\t\t\t$t_access_level[$u_access_level] = get_enum_element( 'access_levels', $u_access_level );\n\t\t} ?>\n\t\t\t<tr>\n\t\t\t\t<td><?php\n\t\t\t\t\tif( access_has_global_level( $u_access_level ) ) { ?>\n\t\t\t\t\t\t<a href=\"manage_user_edit_page.php?user_id=<?php echo $u_id ?>\"><?php echo string_display_line( $u_username ) ?></a><?php\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo string_display_line( $u_username );\n\t\t\t\t\t} ?>\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo string_display_line( $u_realname ) ?></td>\n\t\t\t\t<td><?php print_email_link( $u_email, $u_email ) ?></td>\n\t\t\t\t<td><?php echo $t_access_level[$u_access_level] ?></td>\n\t\t\t\t<td class=\"center\"><?php echo trans_bool( $u_enabled ) ?></td>\n\t\t\t\t<td class=\"center\"><?php\n\t\t\t\t\tif( $u_protected ) {\n\t\t\t\t\t\techo ' ' . $t_lock_image;\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '&#160;';\n\t\t\t\t\t} ?>\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo $u_date_created ?></td>\n\t\t\t\t<td><?php echo $u_last_visit ?></td>\n\t\t\t</tr>\n<?php\n\t}  # end for\n?>\n\t\t</tbody>\n\t</table>\n</div>\n</div>\n\n<div class=\"widget-toolbox padding-8 clearfix\">\n\t<div id=\"manage-user-edit-div\" class=\"form-inline pull-left\">\n\t\t<form id=\"manage-user-edit-form\" method=\"get\" action=\"manage_user_edit_page.php\" class=\"form-inline\"\n\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>>\n\t\t\t<label class=\"inline\" for=\"username\"><?php echo lang_get( 'search' ) ?></label>\n\t\t\t<input id=\"username\" type=\"text\" name=\"username\" class=\"input-sm\" value=\"\" />\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-sm btn-white btn-round\" value=\"<?php echo lang_get( 'manage_user' ) ?>\" />\n\t\t</form>\n\t</div>\n\t<div class=\"btn-toolbar pull-right\">\n\t\t<?php\n\t\t# @todo hack - pass in the hide inactive filter via cheating the actual filter value\n\t\tprint_page_links( 'manage_user_page.php', 1, $t_page_count, (int)$f_page_number, $f_filter . $t_hide_inactive_filter . $t_show_disabled_filter . \"&amp;sort=$c_sort&amp;dir=$c_dir\");\n\t\t?>\n\t</div>\n</div>\n</div>\n</div>\n</div>\n<?php\nlayout_page_end();\n"], "fixing_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User Page\n *\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses database_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses icon_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses string_api.php\n * @uses utility_api.php\n */\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'database_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'icon_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'string_api.php' );\nrequire_api( 'utility_api.php' );\n\nauth_reauthenticate();\n\naccess_ensure_global_level( config_get( 'manage_user_threshold' ) );\n\n$t_cookie_name = config_get( 'manage_users_cookie' );\n$t_lock_image = '<i class=\"fa fa-lock fa-lg\" alt=\"' . lang_get( 'protected' ) . '\" />';\n\n$f_save          = gpc_get_bool( 'save' );\n$f_filter        = utf8_strtoupper( gpc_get_string( 'filter', config_get( 'default_manage_user_prefix' ) ) );\n$f_page_number   = gpc_get_int( 'page_number', 1 );\n\nif( !$f_save && !is_blank( gpc_get_cookie( $t_cookie_name, '' ) ) ) {\n\t$t_manage_arr = explode( ':', gpc_get_cookie( $t_cookie_name ) );\n\n\t# Hide Inactive\n\t$f_hide_inactive = (bool)$t_manage_arr[0];\n\n\t# Sort field\n\tif ( isset( $t_manage_arr[1] ) ) {\n\t\t$f_sort = $t_manage_arr[1];\n\t} else {\n\t\t$f_sort = 'username';\n\t}\n\n\t# Sort order\n\tif ( isset( $t_manage_arr[2] ) ) {\n\t\t$f_dir = $t_manage_arr[2];\n\t} else {\n\t\t$f_dir = 'DESC';\n\t}\n\n\t# Show Disabled\n\tif ( isset( $t_manage_arr[3] ) ) {\n\t\t$f_show_disabled = $t_manage_arr[3];\n\t}\n} else {\n\t$f_sort          = gpc_get_string( 'sort', 'username' );\n\t$f_dir           = gpc_get_string( 'dir', 'ASC' );\n\t$f_hide_inactive = gpc_get_bool( 'hideinactive' );\n\t$f_show_disabled = gpc_get_bool( 'showdisabled' );\n}\n\n# Clean up the form variables\nif( !db_field_exists( $f_sort, db_get_table( 'user' ) ) ) {\n\t$c_sort = 'username';\n} else {\n\t$c_sort = addslashes( $f_sort );\n}\n\n$c_dir = ( $f_dir == 'ASC' ) ? 'ASC' : 'DESC';\n\n# OFF = show inactive users, anything else = hide them\n$c_hide_inactive = ( $f_hide_inactive == OFF ) ? OFF : ON;\n$t_hide_inactive_filter = '&amp;hideinactive=' . $c_hide_inactive;\n\n# OFF = hide disabled users, anything else = show them\n$c_show_disabled = ( $f_show_disabled == OFF ) ? OFF : ON;\n$t_show_disabled_filter = '&amp;showdisabled=' . $c_show_disabled;\n\n# set cookie values for hide inactive, sort by, dir and show disabled\nif( $f_save ) {\n\t$t_manage_string = $c_hide_inactive.':'.$c_sort.':'.$c_dir.':'.$c_show_disabled;\n\tgpc_set_cookie( $t_cookie_name, $t_manage_string, true );\n}\n\nlayout_page_header( lang_get( 'manage_users_link' ) );\n\nlayout_page_begin( 'manage_overview_page.php' );\n\nprint_manage_menu( 'manage_user_page.php' );\n\n# New Accounts Form BEGIN\n\n$t_days_old = 7 * SECONDS_PER_DAY;\n$t_query = 'SELECT COUNT(*) AS new_user_count FROM {user}\n\tWHERE ' . db_helper_compare_time( db_param(), '<=', 'date_created', $t_days_old );\n$t_result = db_query( $t_query, array( db_now() ) );\n$t_row = db_fetch_array( $t_result );\n$t_new_user_count = $t_row['new_user_count'];\n\n# Never Logged In Form BEGIN\n\n$t_query = 'SELECT COUNT(*) AS unused_user_count FROM {user}\n\tWHERE ( login_count = 0 ) AND ( date_created = last_visit )';\n$t_result = db_query( $t_query );\n$t_row = db_fetch_array( $t_result );\n$t_unused_user_count = $t_row['unused_user_count'];\n\n# Manage Form BEGIN\n\n$t_prefix_array = array();\n\n$t_prefix_array['ALL'] = lang_get( 'show_all_users' );\n\nfor( $i = 'A'; $i != 'AA'; $i++ ) {\n\t$t_prefix_array[$i] = $i;\n}\n\nfor( $i = 0; $i <= 9; $i++ ) {\n\t$t_prefix_array[(string)$i] = (string)$i;\n}\n$t_prefix_array['UNUSED'] = lang_get( 'users_unused' );\n$t_prefix_array['NEW'] = lang_get( 'users_new' );\n\necho '<div class=\"col-md-12 col-xs-12\">';\necho '<div class = \"space-10\"></div>';\necho '<div class=\"center\" >';\necho '  <div class=\"btn-toolbar inline\" >';\necho '    <div class=\"btn-group\" >';\nforeach ( $t_prefix_array as $t_prefix => $t_caption ) {\n\tif( $t_prefix === 'UNUSED' ) {\n\t\t$t_title = ' title=\"[' . $t_unused_user_count . '] (' . lang_get( 'never_logged_in_title' ) . ')\"';\n\t} else if( $t_prefix === 'NEW' ) {\n\t\t$t_title = ' title=\"[' . $t_new_user_count . '] (' . lang_get( '1_week_title' ) . ')\"';\n\t} else {\n\t\t$t_title = '';\n\t}\n\t$t_active = (string)$t_prefix === $f_filter ? 'active' : '';\n\t\tprint_manage_user_sort_link( 'manage_user_page.php',\n\t\t\t$t_caption,\n\t\t\t$c_sort,\n\t\t\t$c_dir, null, $c_hide_inactive, $t_prefix, $c_show_disabled,\n\t\t\t'btn btn-xs btn-white btn-primary ' . $t_active );\n}\necho '</div>';\necho '</div>';\necho '</div>';\necho '<div class=\"space-10\"></div >';\n\n$t_where_params = array();\nif( $f_filter === 'ALL' ) {\n\t$t_where = '(1 = 1)';\n} else if( $f_filter === 'UNUSED' ) {\n\t$t_where = '(login_count = 0) AND ( date_created = last_visit )';\n} else if( $f_filter === 'NEW' ) {\n\t$t_where = db_helper_compare_time( db_param(), '<=', 'date_created', $t_days_old );\n\t$t_where_params[] = db_now();\n} else {\n\t$t_where_params[] = $f_filter . '%';\n\t$t_where = db_helper_like( 'UPPER(username)' );\n}\n\n$p_per_page = 50;\n\n$t_offset = ( ( $f_page_number - 1 ) * $p_per_page );\n\n$t_total_user_count = 0;\n\n# Get the user data in $c_sort order\n$t_result = '';\n\nif( ON != $c_show_disabled ) {\n\t$t_where .= ' AND enabled = ' . db_param();\n\t$t_where_params[] = true;\n}\n\nif( OFF != $c_hide_inactive ) {\n\t$t_where .= ' AND ' . db_helper_compare_time( db_param(), '<', 'last_visit', $t_days_old );\n\t$t_where_params[] = db_now();\n}\n\n$t_query = 'SELECT count(*) as user_count FROM {user} WHERE ' . $t_where;\n$t_result = db_query( $t_query, $t_where_params );\n$t_row = db_fetch_array( $t_result );\n$t_total_user_count = $t_row['user_count'];\n\n$t_page_count = ceil( $t_total_user_count / $p_per_page );\nif( $t_page_count < 1 ) {\n\t$t_page_count = 1;\n}\n\n# Make sure $p_page_number isn't past the last page.\nif( $f_page_number > $t_page_count ) {\n\t$f_page_number = $t_page_count;\n}\n\n# Make sure $p_page_number isn't before the first page\nif( $f_page_number < 1 ) {\n\t$f_page_number = 1;\n}\n\n\n$t_query = 'SELECT * FROM {user} WHERE ' . $t_where . ' ORDER BY ' . $c_sort . ' ' . $c_dir;\n$t_result = db_query( $t_query, $t_where_params, $p_per_page, $t_offset );\n\n$t_users = array();\nwhile( $t_row = db_fetch_array( $t_result ) ) {\n\t$t_users[] = $t_row;\n}\n\n$t_user_count = count( $t_users );\n?>\n<div class=\"widget-box widget-color-blue2\">\n<div class=\"widget-header widget-header-small\">\n<h4 class=\"widget-title lighter\">\n\t<i class=\"ace-icon fa fa-users\"></i>\n\t<?php echo lang_get('manage_accounts_title') ?>\n\t<span class=\"badge\"><?php echo $t_total_user_count ?></span>\n</h4>\n</div>\n\n<div class=\"widget-body\">\n<div class=\"widget-toolbox padding-8 clearfix\">\n\t<div id=\"manage-user-div\" class=\"form-container\">\n\t\t<div class=\"pull-left\">\n\t\t\t<?php print_form_button( 'manage_user_create_page.php', lang_get( 'create_new_account_link' ), null, null, 'btn btn-primary btn-white btn-round' ) ?>\n\t\t</div>\n\t\t<?php if( $f_filter === 'UNUSED' ) { ?>\n\t\t<div class=\"pull-left\">\n\t\t\t<?php print_form_button('manage_user_prune.php', lang_get('prune_accounts'), null, null, 'btn btn-primary btn-white btn-round') ?>\n\t\t</div>\n\t\t<?php } ?>\n\t<div class=\"pull-right\">\n\t<form id=\"manage-user-filter\" method=\"post\" action=\"manage_user_page.php\" class=\"form-inline\">\n\t\t<fieldset>\n\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>\n\t\t\t<input type=\"hidden\" name=\"sort\" value=\"<?php echo $c_sort ?>\" />\n\t\t\t<input type=\"hidden\" name=\"dir\" value=\"<?php echo $c_dir ?>\" />\n\t\t\t<input type=\"hidden\" name=\"save\" value=\"1\" />\n\t\t\t<input type=\"hidden\" name=\"filter\" value=\"<?php echo string_attribute( $f_filter ); ?>\" />\n\t\t\t<label class=\"inline\">\n\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"hideinactive\" value=\"<?php echo ON ?>\" <?php check_checked( (int)$c_hide_inactive, ON ); ?> />\n\t\t\t<span class=\"lbl\"> <?php echo lang_get( 'hide_inactive' ) ?></span>\n\t\t\t</label>\n\t\t\t<label class=\"inline\">\n\t\t\t<input type=\"checkbox\" class=\"ace\" name=\"showdisabled\" value=\"<?php echo ON ?>\" <?php check_checked( (int)$c_show_disabled, ON ); ?> />\n\t\t\t<span class=\"lbl\"> <?php echo lang_get( 'show_disabled' ) ?></span>\n\t\t\t</label>\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-sm btn-white btn-round\" value=\"<?php echo lang_get( 'filter_button' ) ?>\" />\n\t\t</fieldset>\n\t</form>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"widget-main no-padding\">\n\t<div class=\"table-responsive\">\n\t\t<table class=\"table table-striped table-bordered table-condensed table-hover\">\n\t\t<thead>\n\t\t\t<tr>\n<?php\n\t# Print column headers with sort links\n\t$t_columns = array(\n\t\t'username', 'realname', 'email', 'access_level',\n\t\t'enabled', 'protected', 'date_created', 'last_visit'\n\t);\n\n\tforeach( $t_columns as $t_col ) {\n\t\techo \"\\t<th>\";\n\t\tprint_manage_user_sort_link( 'manage_user_page.php',\n\t\t\tlang_get( $t_col ),\n\t\t\t$t_col,\n\t\t\t$c_dir, $c_sort, $c_hide_inactive, $f_filter, $c_show_disabled );\n\t\tprint_sort_icon( $c_dir, $c_sort, $t_col );\n\t\techo \"</th>\\n\";\n\t}\n?>\n\t\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n<?php\n\t$t_date_format = config_get( 'normal_date_format' );\n\t$t_access_level = array();\n\tfor( $i=0; $i<$t_user_count; $i++ ) {\n\t\t# prefix user data with u_\n\t\t$t_user = $t_users[$i];\n\t\textract( $t_user, EXTR_PREFIX_ALL, 'u' );\n\n\t\t$u_date_created  = date( $t_date_format, $u_date_created );\n\t\t$u_last_visit    = date( $t_date_format, $u_last_visit );\n\n\t\tif( !isset( $t_access_level[$u_access_level] ) ) {\n\t\t\t$t_access_level[$u_access_level] = get_enum_element( 'access_levels', $u_access_level );\n\t\t} ?>\n\t\t\t<tr>\n\t\t\t\t<td><?php\n\t\t\t\t\tif( access_has_global_level( $u_access_level ) ) { ?>\n\t\t\t\t\t\t<a href=\"manage_user_edit_page.php?user_id=<?php echo $u_id ?>\"><?php echo string_display_line( $u_username ) ?></a><?php\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo string_display_line( $u_username );\n\t\t\t\t\t} ?>\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo string_display_line( $u_realname ) ?></td>\n\t\t\t\t<td><?php print_email_link( $u_email, $u_email ) ?></td>\n\t\t\t\t<td><?php echo $t_access_level[$u_access_level] ?></td>\n\t\t\t\t<td class=\"center\"><?php echo trans_bool( $u_enabled ) ?></td>\n\t\t\t\t<td class=\"center\"><?php\n\t\t\t\t\tif( $u_protected ) {\n\t\t\t\t\t\techo ' ' . $t_lock_image;\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '&#160;';\n\t\t\t\t\t} ?>\n\t\t\t\t</td>\n\t\t\t\t<td><?php echo $u_date_created ?></td>\n\t\t\t\t<td><?php echo $u_last_visit ?></td>\n\t\t\t</tr>\n<?php\n\t}  # end for\n?>\n\t\t</tbody>\n\t</table>\n</div>\n</div>\n\n<div class=\"widget-toolbox padding-8 clearfix\">\n\t<div id=\"manage-user-edit-div\" class=\"form-inline pull-left\">\n\t\t<form id=\"manage-user-edit-form\" method=\"get\" action=\"manage_user_edit_page.php\" class=\"form-inline\"\n\t\t\t<?php # CSRF protection not required here - form does not result in modifications ?>>\n\t\t\t<label class=\"inline\" for=\"username\"><?php echo lang_get( 'search' ) ?></label>\n\t\t\t<input id=\"username\" type=\"text\" name=\"username\" class=\"input-sm\" value=\"\" />\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-sm btn-white btn-round\" value=\"<?php echo lang_get( 'manage_user' ) ?>\" />\n\t\t</form>\n\t</div>\n\t<div class=\"btn-toolbar pull-right\">\n\t\t<?php\n\t\t# @todo hack - pass in the hide inactive filter via cheating the actual filter value\n\t\tprint_page_links( 'manage_user_page.php', 1, $t_page_count, (int)$f_page_number, $f_filter . $t_hide_inactive_filter . $t_show_disabled_filter . \"&amp;sort=$c_sort&amp;dir=$c_dir\");\n\t\t?>\n\t</div>\n</div>\n</div>\n</div>\n</div>\n<?php\nlayout_page_end();\n"], "filenames": ["manage_user_page.php"], "buggy_code_start_loc": [275], "buggy_code_end_loc": [276], "fixing_code_start_loc": [275], "fixing_code_end_loc": [276], "type": "CWE-79", "message": "An XSS issue was discovered in manage_user_page.php in MantisBT 2.x before 2.5.2. The 'filter' field is not sanitized before being rendered in the Manage User page, allowing remote attackers to execute arbitrary JavaScript code if CSP is disabled.", "other": {"cve": {"id": "CVE-2017-12062", "sourceIdentifier": "cve@mitre.org", "published": "2017-08-01T15:29:00.593", "lastModified": "2017-08-15T17:17:01.677", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An XSS issue was discovered in manage_user_page.php in MantisBT 2.x before 2.5.2. The 'filter' field is not sanitized before being rendered in the Manage User page, allowing remote attackers to execute arbitrary JavaScript code if CSP is disabled."}, {"lang": "es", "value": "Se detect\u00f3 una vulnerabilidad de tipo Cross-Site Scripting (XSS) en manage_user_page.php en MantisBT en sus versiones 2.X anteriores a la 2.5.2. El campo \"filter\" no se sanitiza antes de que se renderice en la p\u00e1gina Manage User, permitiendo a los atacantes remotos ejecutar c\u00f3digo JavaScript arbitrario si se deshabilita la pol\u00edtica de seguridad de contenido (CSP)."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "3E6AF670-28C3-4D7E-9EB4-E0B366CE818E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "021CC8F4-B310-4DBF-9D50-B8A357158E4D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.1.2:*:*:*:*:*:*:*", "matchCriteriaId": "D73E7205-12E1-4C57-A120-91C4C0760305"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.1.3:*:*:*:*:*:*:*", "matchCriteriaId": "262EC0CC-0716-4AED-9255-13288A297879"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "2550F1FD-5104-4BAA-80F6-C6202D7326B4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "AAFDE5FC-B891-4ACA-BCAB-83EB9D49C91F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.2.2:*:*:*:*:*:*:*", "matchCriteriaId": "5F89D994-7F93-4839-8A57-F4CD633576E8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.2.3:*:*:*:*:*:*:*", "matchCriteriaId": "2154CE53-2DED-4023-96D5-515468E226B0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.2.4:*:*:*:*:*:*:*", "matchCriteriaId": "CFF4779C-8E14-4CB1-BCB4-80F4C5020629"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.3.0:*:*:*:*:*:*:*", "matchCriteriaId": "83C79C70-F6BE-485D-952A-44E5E9F16D39"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "2B5AE145-E1B4-40EF-A3B8-A13C114D3D3B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "A77FD43E-A573-408F-A566-0959DAF442AD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.3.3:*:*:*:*:*:*:*", "matchCriteriaId": "CCB5C9D9-8EC1-46C7-BB09-84ED20E6E61E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.4.0:*:*:*:*:*:*:*", "matchCriteriaId": "9258FCA1-6948-4DFE-BE50-5A39B5A64120"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.4.1:*:*:*:*:*:*:*", "matchCriteriaId": "4582B6DC-A625-41B2-ABF8-CF3BCF90A590"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.4.2:*:*:*:*:*:*:*", "matchCriteriaId": "7F06B9BB-77DF-4185-A496-88DA8DABDDB4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.5.0:*:*:*:*:*:*:*", "matchCriteriaId": "FE637AB4-0E47-4063-8CFF-F163A27D7F14"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:2.5.1:*:*:*:*:*:*:*", "matchCriteriaId": "75EE73EE-2A07-48BE-B7B9-C21643EC25B8"}]}]}], "references": [{"url": "http://openwall.com/lists/oss-security/2017/08/01/1", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://openwall.com/lists/oss-security/2017/08/01/2", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.securitytracker.com/id/1039030", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/9b5b71dadbeeeec27efea59f562ac5bd6d2673b7", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://mantisbt.org/bugs/view.php?id=23166", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/mantisbt/mantisbt/commit/9b5b71dadbeeeec27efea59f562ac5bd6d2673b7"}}