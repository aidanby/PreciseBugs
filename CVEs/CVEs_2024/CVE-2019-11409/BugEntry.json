{"buggy_code": ["<?php\n/* $Id$ */\n/*\n\tv_exec.php\n\tCopyright (C) 2008 Mark J Crane\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\n\t1. Redistributions of source code must retain the above copyright notice,\n\t   this list of conditions and the following disclaimer.\n\n\t2. Redistributions in binary form must reproduce the above copyright\n\t   notice, this list of conditions and the following disclaimer in the\n\t   documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\tAUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n\tOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\tSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\tINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\tCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\tARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\tPOSSIBILITY OF SUCH DAMAGE.\n*/\ninclude \"root.php\";\nrequire_once \"resources/require.php\";\nrequire_once \"resources/check_auth.php\";\n\nif (permission_exists('operator_panel_view')) {\n\t//access granted\n}\nelse {\n\techo \"access denied\";\n\texit;\n}\n\n//authorized referrer\n// \tif(stristr($_SERVER[\"HTTP_REFERER\"], '/index.php') === false) {\n// \t\tif(stristr($_SERVER[\"HTTP_REFERER\"], '/index_inc.php') === false) {\n// \t\t\techo \" access denied\";\n// \t\t\texit;\n// \t\t}\n// \t}\n\n//http get variables set to php variables\n\tif (count($_GET)>0) {\n\t\t$switch_cmd = trim(check_str($_GET[\"cmd\"]));\n\t\t$action = trim(check_str($_GET[\"action\"]));\n\t\t$data = trim(check_str($_GET[\"data\"]));\n\t\t$direction = trim(check_str($_GET[\"direction\"]));\n\t\t$username = $_SESSION['username'];\n\t}\n\n//authorized commands\n// \tif (stristr($switch_cmd, '&uuid=') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_kill') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_transfer') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_record') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'user_status') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'callcenter_config') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'originate') == true) {\n// \t\t//authorized;\n// \t} else {\n// \t\t//not found. this command is not authorized\n// \t\techo \"access denied\";\n// \t\texit;\n// \t}\n\nif (count($_GET)>0) {\n\n\t//setup the event socket connection\n\t\t$fp = event_socket_create($_SESSION['event_socket_ip_address'], $_SESSION['event_socket_port'], $_SESSION['event_socket_password']);\n\n\tif (stristr($action, 'user_status') == true) {\n\t\t$user_status = $data;\n\t\tswitch ($user_status) {\n\t\tcase \"Available\":\n\t\t\t$user_status = \"Available\";\n\t\t\t//update the user state\n\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\tbreak;\n\t\tcase \"Available_On_Demand\":\n\t\t\t$user_status = \"Available (On Demand)\";\n\t\t\t//update the user state\n\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\tbreak;\n\t\tcase \"Logged_Out\":\n\t\t\t$user_status = \"Logged Out\";\n\t\t\t//update the user state\n\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\tbreak;\n\t\tcase \"On_Break\":\n\t\t\t$user_status = \"On Break\";\n\t\t\t//update the user state\n\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\tbreak;\n\t\tcase \"Do_Not_Disturb\":\n\t\t\t$user_status = \"Do Not Disturb\";\n\t\t\t//update the user state\n\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$user_status = \"\";\n\t\t}\n\t}\n\n\t//fs cmd\n\tif (strlen($switch_cmd) > 0) {\n\n\t\t//set the status so they are compatible with mod_callcenter\n\t\t\t$switch_cmd = str_replace(\"Available_On_Demand\", \"'Available (On Demand)'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"Logged_Out\", \"'Logged Out'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"On_Break\", \"'On Break'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"Do_Not_Disturb\", \"'Logged Out'\", $switch_cmd);\n\n\t\t/*\n\t\t//if ($action == \"energy\") {\n\t\t\t//conference 3001-example.org energy 103\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t$tmp_value = $result_array[1];\n\t\t\t//if ($direction == \"up\") { $tmp_value = $tmp_value + 100; }\n\t\t\t//if ($direction == \"down\") { $tmp_value = $tmp_value - 100; }\n\t\t\t//echo \"energy $tmp_value<br />\\n\";\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t//}\n\t\tif ($action == \"volume_in\") {\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t$tmp_value = $result_array[1];\n\t\t\tif ($direction == \"up\") { $tmp_value = $tmp_value + 1; }\n\t\t\tif ($direction == \"down\") { $tmp_value = $tmp_value - 1; }\n\t\t\t//echo \"volume $tmp_value<br />\\n\";\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t}\n\t\tif ($action == \"volume_out\") {\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t$tmp_value = $result_array[1];\n\t\t\tif ($direction == \"up\") { $tmp_value = $tmp_value + 1; }\n\t\t\tif ($direction == \"down\") { $tmp_value = $tmp_value - 1; }\n\t\t\t//echo \"volume $tmp_value<br />\\n\";\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t}\n\t\t*/\n\n\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\tif ($action == \"record\") {\n\t\t\tif (trim($_GET[\"action2\"]) == \"stop\") {\n\t\t\t\t$x=0;\n\t\t\t\twhile (true) {\n\t\t\t\t\tif ($x > 0) {\n\t\t\t\t\t\t$dest_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\"_\".$x.\".wav\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$dest_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\";\n\t\t\t\t\t}\n\t\t\t\t\tif (!file_exists($dest_file)) {\n\t\t\t\t\t\trename($_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\", $dest_file);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t$x++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n?>"], "fixing_code": ["<?php\n/* $Id$ */\n/*\n\tv_exec.php\n\tCopyright (C) 2008 Mark J Crane\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\n\t1. Redistributions of source code must retain the above copyright notice,\n\t   this list of conditions and the following disclaimer.\n\n\t2. Redistributions in binary form must reproduce the above copyright\n\t   notice, this list of conditions and the following disclaimer in the\n\t   documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\tAUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n\tOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\tSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\tINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\tCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\tARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\tPOSSIBILITY OF SUCH DAMAGE.\n*/\ninclude \"root.php\";\nrequire_once \"resources/require.php\";\nrequire_once \"resources/check_auth.php\";\n\nif (permission_exists('operator_panel_view')) {\n\t//access granted\n}\nelse {\n\techo \"access denied\";\n\texit;\n}\n\n//authorized referrer\n// \tif(stristr($_SERVER[\"HTTP_REFERER\"], '/index.php') === false) {\n// \t\tif(stristr($_SERVER[\"HTTP_REFERER\"], '/index_inc.php') === false) {\n// \t\t\techo \" access denied\";\n// \t\t\texit;\n// \t\t}\n// \t}\n\n//http get variables set to php variables\n\tif (count($_GET)>0) {\n\t\t$switch_cmd = trim(check_str($_GET[\"cmd\"]));\n\t\t$action = trim(check_str($_GET[\"action\"]));\n\t\t$data = trim(check_str($_GET[\"data\"]));\n\t\t$direction = trim(check_str($_GET[\"direction\"]));\n\t\t$username = $_SESSION['username'];\n\t}\n\n//authorized commands\n// \tif (stristr($switch_cmd, '&uuid=') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_kill') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_transfer') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($switch_cmd, 'uuid_record') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'user_status') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'callcenter_config') == true) {\n// \t\t//authorized;\n// \t} elseif (stristr($action, 'originate') == true) {\n// \t\t//authorized;\n// \t} else {\n// \t\t//not found. this command is not authorized\n// \t\techo \"access denied\";\n// \t\texit;\n// \t}\n\nif (count($_GET)>0) {\n\n\t//setup the event socket connection\n\t\t$fp = event_socket_create($_SESSION['event_socket_ip_address'], $_SESSION['event_socket_port'], $_SESSION['event_socket_password']);\n\n\t//get the status\n\t\tif (stristr($action, 'user_status') == true) {\n\t\t\t$user_status = $data;\n\t\t\tswitch ($user_status) {\n\t\t\tcase \"Available\":\n\t\t\t\t$user_status = \"Available\";\n\t\t\t\t//update the user state\n\t\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\t\tbreak;\n\t\t\tcase \"Available_On_Demand\":\n\t\t\t\t$user_status = \"Available (On Demand)\";\n\t\t\t\t//update the user state\n\t\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\t\tbreak;\n\t\t\tcase \"Logged_Out\":\n\t\t\t\t$user_status = \"Logged Out\";\n\t\t\t\t//update the user state\n\t\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\t\tbreak;\n\t\t\tcase \"On_Break\":\n\t\t\t\t$user_status = \"On Break\";\n\t\t\t\t//update the user state\n\t\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\t\tbreak;\n\t\t\tcase \"Do_Not_Disturb\":\n\t\t\t\t$user_status = \"Do Not Disturb\";\n\t\t\t\t//update the user state\n\t\t\t\t$cmd = \"api callcenter_config agent set state \".$username.\"@\".$_SESSION['domain_name'].\" Waiting\";\n\t\t\t\t$response = event_socket_request($fp, $cmd);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$user_status = \"\";\n\t\t\t}\n\t\t}\n\n\t//allow specific commands\n\t\tif (strlen($switch_cmd) > 0) {\n\t\t\tif (stristr($switch_cmd, 'originate') == true) {}\n\t\t\telseif (stristr($switch_cmd, 'uuid_record') == true) {}\n\t\t\telseif (stristr($switch_cmd, 'uuid_transfer') == true) {}\n\t\t\telseif (stristr($switch_cmd, 'eavesdrop') == true) {}\n\t\t\telseif (stristr($switch_cmd, 'uuid_kill') == true) {}\n\t\t\telse {\n\t\t\t\t$switch_cmd = '';\n\t\t\t}\n\t\t\tif (stristr($switch_cmd, 'system') == true) {\n\t\t\t\t$switch_cmd = '';\n\t\t\t}\n\t\t}\n\n\t//switch cmd\n\t\tif (strlen($switch_cmd) > 0) {\n\n\t\t\t//set the status so they are compatible with mod_callcenter\n\t\t\t$switch_cmd = str_replace(\"Available_On_Demand\", \"'Available (On Demand)'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"Logged_Out\", \"'Logged Out'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"On_Break\", \"'On Break'\", $switch_cmd);\n\t\t\t$switch_cmd = str_replace(\"Do_Not_Disturb\", \"'Logged Out'\", $switch_cmd);\n\n\t\t\t/*\n\t\t\t//if ($action == \"energy\") {\n\t\t\t\t//conference 3001-example.org energy 103\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t\t$tmp_value = $result_array[1];\n\t\t\t\t//if ($direction == \"up\") { $tmp_value = $tmp_value + 100; }\n\t\t\t\t//if ($direction == \"down\") { $tmp_value = $tmp_value - 100; }\n\t\t\t\t//echo \"energy $tmp_value<br />\\n\";\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t\t//}\n\t\t\tif ($action == \"volume_in\") {\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t\t$tmp_value = $result_array[1];\n\t\t\t\tif ($direction == \"up\") { $tmp_value = $tmp_value + 1; }\n\t\t\t\tif ($direction == \"down\") { $tmp_value = $tmp_value - 1; }\n\t\t\t\t//echo \"volume $tmp_value<br />\\n\";\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t\t}\n\t\t\tif ($action == \"volume_out\") {\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\t\t\t\t$result_array = explode(\"=\",$switch_result);\n\t\t\t\t$tmp_value = $result_array[1];\n\t\t\t\tif ($direction == \"up\") { $tmp_value = $tmp_value + 1; }\n\t\t\t\tif ($direction == \"down\") { $tmp_value = $tmp_value - 1; }\n\t\t\t\t//echo \"volume $tmp_value<br />\\n\";\n\t\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd.' '.$tmp_value);\n\t\t\t}\n\t\t\t*/\n\n\t\t\t//run the command\n\t\t\t$switch_result = event_socket_request($fp, 'api '.$switch_cmd);\n\n\t\t\t//record stop\n\t\t\tif ($action == \"record\") {\n\t\t\t\tif (trim($_GET[\"action2\"]) == \"stop\") {\n\t\t\t\t\t$x=0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif ($x > 0) {\n\t\t\t\t\t\t\t$dest_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\"_\".$x.\".wav\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$dest_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!file_exists($dest_file)) {\n\t\t\t\t\t\t\trename($_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\", $dest_file);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$x++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n}\n\n?>\n"], "filenames": ["app/operator_panel/exec.php"], "buggy_code_start_loc": [84], "buggy_code_end_loc": [185], "fixing_code_start_loc": [84], "fixing_code_end_loc": [204], "type": "CWE-78", "message": "app/operator_panel/exec.php in the Operator Panel module in FusionPBX 4.4.3 suffers from a command injection vulnerability due to a lack of input validation that allows authenticated non-administrative attackers to execute commands on the host. This can further lead to remote code execution when combined with an XSS vulnerability also present in the FusionPBX Operator Panel module.", "other": {"cve": {"id": "CVE-2019-11409", "sourceIdentifier": "cve@mitre.org", "published": "2019-06-17T19:15:11.327", "lastModified": "2022-04-18T17:16:57.080", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "app/operator_panel/exec.php in the Operator Panel module in FusionPBX 4.4.3 suffers from a command injection vulnerability due to a lack of input validation that allows authenticated non-administrative attackers to execute commands on the host. This can further lead to remote code execution when combined with an XSS vulnerability also present in the FusionPBX Operator Panel module."}, {"lang": "es", "value": "app / operator_panel / exec.php en el m\u00f3dulo del panel del operador en FreePBX 4.4.3 sufre una vulnerabilidad de inyecci\u00f3n de comandos debido a la falta de validaci\u00f3n de entrada que permite a los atacantes no administrativos autenticados ejecutar comandos en el host. Esto puede llevar adem\u00e1s a la ejecuci\u00f3n remota de c\u00f3digo cuando se combina con una vulnerabilidad XSS tambi\u00e9n presente en el m\u00f3dulo del Panel del operador de FusionPBX"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fusionpbx:fusionpbx:4.4.3:*:*:*:*:*:*:*", "matchCriteriaId": "ED771627-B19B-4F2E-8366-2D98F13BF022"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/153256/FusionPBX-4.4.3-Remote-Command-Execution.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "http://packetstormsecurity.com/files/155344/FusionPBX-Operator-Panel-exec.php-Command-Execution.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "https://blog.gdssecurity.com/labs/2019/6/7/rce-using-caller-id-multiple-vulnerabilities-in-fusionpbx.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/fusionpbx/fusionpbx/commit/e43ca27ba2d9c0109a6bf198fe2f8d79f63e0611", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fusionpbx/fusionpbx/commit/e43ca27ba2d9c0109a6bf198fe2f8d79f63e0611"}}