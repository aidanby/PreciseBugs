{"buggy_code": ["<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/files/file.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webusers/webuser_group.class.php');\r\n\r\nfunction run()\r\n{\r\n\tglobal $user;\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n\t\r\n\t$out = '';\r\n\t$item = new file();\r\n\t\t\t\r\n\tswitch($_REQUEST['act'])\r\n\t{\r\n        case \"json\":\r\n        case 1: // json retrieval & operations\r\n\t\t\tif($_REQUEST['op']=='upload')\r\n\t\t\t{\r\n                $tmp_name = $_REQUEST['tmp_name'];\r\n                if($tmp_name==\"{{BASE64}}\")\r\n                    $tmp_name = base64_encode($_REQUEST['name']);\r\n\r\n                $file = file::register_upload(\r\n                    $tmp_name,\r\n                    $_REQUEST['name'],\r\n                    $_REQUEST['parent']\r\n                );\r\n\r\n\t\t\t\tif(!empty($file))\r\n                {\r\n\t\t\t\t\techo json_encode(array('id' => $file->id, 'name' => $file->name));\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo json_encode(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n            switch($_REQUEST['op'])\r\n            {\r\n                case 'create_folder':\r\n                    file::create_folder($_REQUEST['name'], $_REQUEST['mime'], $_REQUEST['parent']);\r\n\t\t\t\t    echo json_encode(true);\r\n                    break;\r\n\r\n\t\t\t    case 'edit_folder':\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->name = $_REQUEST['name'];\r\n                    $f->mime = $_REQUEST['mime'];\r\n                    $ok = $f->save();\r\n                    echo json_encode($ok);\r\n                    break;\r\n\r\n                case 'edit_file':\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->name = $_REQUEST['name'];\r\n                    $ok = $f->save();\r\n                    echo json_encode($ok);\r\n                    break;\r\n\r\n                case 'duplicate_file':\r\n                    //error_reporting(~0);\r\n                    //ini_set('display_errors', 1);\r\n                    $status = false;\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->id = 0;\r\n                    $f->insert();\r\n                    if(!empty($f->id))\r\n                    {\r\n                        $done = copy(\r\n                            NAVIGATE_PRIVATE.'/'.$website->id.'/files/'.intval($_REQUEST['id']),\r\n                            NAVIGATE_PRIVATE.'/'.$website->id.'/files/'.$f->id\r\n                        );\r\n                        $status = \"true\";\r\n                        if(!$done)\r\n                        {\r\n                            $f->delete();\r\n                            $status = t(56, \"Unexpected error\");\r\n                        }\r\n                    }\r\n                    echo $status;\r\n                    break;\r\n\r\n                case 'move':\r\n                    if(is_array($_REQUEST['item']))\r\n                    {\r\n                        $ok = true;\r\n                        for($i=0; $i < count($_REQUEST['item']); $i++)\r\n                        {\r\n                            unset($item);\r\n                            $item = new file();\r\n                            $item->load($_REQUEST['item'][$i]);\r\n                            $item->parent = $_REQUEST['folder'];\r\n                            $ok = $ok & $item->update();\r\n                        }\r\n                        echo json_encode(($ok? true : false));\r\n                    }\r\n                    else\r\n                    {\r\n                        $item->load($_REQUEST['item']);\r\n                        $item->parent = $_REQUEST['folder'];\r\n                        echo json_encode($item->update());\r\n                    }\r\n                    break;\r\n\r\n                case 'delete':\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n                        $item->load($_REQUEST['id']);\r\n\t                    $status = $item->delete();\r\n                        echo json_encode($status);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\techo $e->getMessage();\r\n\t\t\t\t\t}\r\n                    break;\r\n\r\n                case 'permissions':\r\n                    $item->load($_REQUEST['id']);\r\n\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->access = intval($_POST['access']);\r\n                        $item->permission = intval($_POST['permission']);\r\n                        $item->enabled = intval($_POST['enabled']);\r\n                        $item->groups = $_POST['groups'];\r\n                        if($item->access < 3)\r\n                            $item->groups = array();\r\n                        $status = $item->save();\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        echo json_encode(array(\r\n                            'access' => $item->access,\r\n                            'groups' => $item->groups,\r\n                            'permission' => $item->permission,\r\n                            'enabled' => $item->enabled\r\n                        ));\r\n                    }\r\n                    break;\r\n\r\n                case 'description':\r\n                    $item->load($_REQUEST['id']);\r\n\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->title = array();\r\n                        $item->description = array();\r\n\r\n                        foreach($website->languages as $language)\r\n                        {\r\n                            $lcode = $language['code'];\r\n\r\n                            if(!isset($_REQUEST['titles'][$lcode]))\r\n                                break;\r\n\r\n                            $item->title[$lcode]\t= $_REQUEST['titles'][$lcode];\r\n                            $item->description[$lcode]\t= $_REQUEST['descriptions'][$lcode];\r\n                        }\r\n\r\n                        $status = $item->save();\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        // return file title and description (alt)\r\n                        $data = array(\r\n                            'title' => $item->title,\r\n                            'description' => $item->description\r\n                        );\r\n                        echo json_encode($data);\r\n                    }\r\n                    break;\r\n\r\n                case 'focalpoint':\r\n                    $item->load($_REQUEST['id']);\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->focalpoint = $_REQUEST['top'].'#'.$_REQUEST['left'];\r\n                        $status = $item->save();\r\n                        // remove cached thumbnails\r\n                        file::thumbnails_remove($item->id);\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        if(empty($item->focalpoint))\r\n                        {\r\n                            $item->focalpoint = '50#50';\r\n                            $item->save();\r\n                            // remove cached thumbnails\r\n                            file::thumbnails_remove($item->id);\r\n                        }\r\n                        echo $item->focalpoint;\r\n                    }\r\n                    break;\r\n\r\n                case 'video_info':\r\n                    if($_REQUEST['provider']=='youtube')\r\n                    {\r\n                        $item->load_from_youtube($_REQUEST['reference'], false); // force cache reload\r\n                    }\r\n                    else if($_REQUEST['provider']=='vimeo')\r\n                    {\r\n                        $item->load_from_vimeo($_REQUEST['reference'], false); // force cache reload\r\n                    }\r\n                    else // uploaded video (file) (may also be provider=\"file\")\r\n                    {\r\n                        if(!empty($_REQUEST['reference']) && is_numeric($_REQUEST['reference']))\r\n                            $item->load($_REQUEST['reference']);\r\n                        else if(is_numeric($_REQUEST['provider']))\r\n                            $item->load($_REQUEST['provider']); // needed in some case\r\n                        else\r\n                            unset($item);\r\n\r\n                        if(!empty($item))\r\n                        {\r\n                            // add some extra data\r\n                            $item->extra        = array(\r\n                                'reference'  =>  $item->id,\r\n                                'link'      =>  '',\r\n                                'thumbnail' =>  'img/icons/ricebowl/mimetypes/video.png',\r\n                                'thumbnail_big' => 'img/icons/ricebowl/mimetypes/video.png',\r\n                                'thumbnail_url' => 'img/icons/ricebowl/mimetypes/video.png',\r\n                                'duration' => '',\r\n                                'embed_code'  => '<video src=\"'.file::file_url($item->id, 'inline').'></video>'\r\n                            );\r\n                        }\r\n                    }\r\n                    if(!empty($item))\r\n                        echo json_encode($item);\r\n                    else\r\n                        echo false;\r\n                    break;\r\n            }\r\n\t\t\tsession_write_close();\r\n\t\t\t$DB->disconnect();\r\n\t\t\texit;\r\n\t\t\tbreak;\r\n\r\n\t\t\t\r\n\t\tcase 2:\t// show/edit item properties\r\n        case \"edit\":\r\n\t\t\t$item->load($_REQUEST['id']);\r\n\r\n            if(@$_REQUEST['op']=='replace_file')\r\n            {\r\n                if($_FILES['file-replace']['error'] == 0)\r\n                {\r\n                    $destination = NAVIGATE_PRIVATE.'/'.$item->website.'/files/'.$item->id;\r\n                    $filesize = filesize($_FILES['file-replace']['tmp_name']);\r\n\r\n                    if($filesize > 0) // not an empty file, continue\r\n                    {\r\n                        @unlink($destination);\r\n                        $item->size = $filesize;\r\n\r\n                        if(move_uploaded_file($_FILES['file-replace']['tmp_name'], $destination))\r\n                        {\r\n                            $mime = file::getMime($_FILES['file-replace']['name'], $destination);\r\n                            $item->mime = $mime[0];\r\n                            $item->type = $mime[1];\r\n                            $item->date_added = core_time();\r\n                            $item->uploaded_by = (empty($user->id) ? '0' : $user->id);\r\n                            $item->refresh(); // including save\r\n\r\n                            $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n                        }\r\n                        else\r\n                        {\r\n                            $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                }\r\n            }\r\n\t\t\telse if(isset($_REQUEST['form-sent']))\r\n\t\t\t{\r\n\t\t\t\t$item->load_from_post();\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t$item->save();\r\n\t\t\t\t\tunset($item);\r\n\t\t\t\t\t$item = new file();\r\n\t\t\t\t\t$item->load($_REQUEST['id']);\r\n                    $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n\t\t\t\t}\r\n\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification($e->getMessage(), true, true);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$out = files_item_properties($item);\r\n\t\t\tbreak;\t\t\t\r\n\t\t\r\n\t\tcase 10:\r\n\t\tcase 'media_browser':\r\n\t\t\tfiles_media_browser($_GET['limit'], $_GET['offset']);\r\n\t\t\tbreak;\r\n\t\t\t\r\n        case 92: // pixlr (image editor) overlay remover\r\n        case 'pixlr_exit':\r\n\t\t\tob_clean();\r\n            file::thumbnails_remove(intval($_GET['id']));\r\n\r\n\t\t\techo '\r\n\t\t\t<html>\r\n\t\t\t<head></head>\r\n\t\t\t<body>\r\n\t\t\t<script language=\"javascript\" type=\"text/javascript\">\r\n\t\t\t\t//window.parent.eval(\"$(\\'#thumbnail-cache\\').attr(\\'src\\', $(\\'#thumbnail-cache\\').attr(\\'src\\') + \\'&refresh=\\' + new Date().getTime());\");\r\n\t\t\t\twindow.parent.eval(\\'$(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\\');\r\n\t\t\t\twindow.parent.eval(\"pixlr.overlay.hide();\");\r\n\t\t\t</script>\r\n\t\t\t</body>\r\n\t\t\t</html>\t\r\n\t\t\t';\r\n\t\t\t\r\n\t\t\tcore_terminate();\r\n\t\t\tbreak;\r\n\t\t/*\t\r\n\t\tcase 91: // picnik editing\r\n\t\t\tob_clean();\r\n\t\t\t\r\n\t\t\t// $strPicnikUrl is the URL that we use to launch Picnik.\r\n\t\t\t$strPicnikUrl = \"http://www.picnik.com/service\";\t\r\n\t\t\t// $aPicnikParams collects together all the params we'll give Picnik.  Start with an API key\r\n\t\t\t$aPicnikParams['_apikey'] = $website->picnik_api_key;\r\n\t\t\t// tell Picnik where to send the exported image\r\n\t\t\t$aPicnikParams['_export'] = NAVIGATE_URL.'/navigate_upload.php?wid='.$website->id.'&engine=picnik&id='.$_REQUEST['id'].'&engine=picnik&session_id='.session_id();\r\n\t\t\t// give the export button a title\r\n\t\t\t$aPicnikParams['_export_title'] = t(34, 'Save');\r\n\t\t\t// turn on the close button, and tell it to come back here\r\n\t\t\t//$aPicnikParams['_close_target'] = $strRoot;\r\n\t\t\t// send in the previous \"king\" image in case the user feels like decorating it\r\n\t\t\t$aPicnikParams['_import'] = NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$_REQUEST['id'].'&disposition=attachment&sid='.session_id();\t\r\n\t\t\t// tell Picnik to redirect the user to the following URL after the HTTP POST instead of just redirecting to _export\r\n\t\t\t$aPicnikParams['_redirect'] = NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$_REQUEST['id'].'&disposition=inline&ts='.core_time(); //'javascript: return false;';\r\n\t\t\r\n\t\t\t// tell Picnik our name.  It'll use it in a few places as appropriate\r\n\t\t\t$aPicnikParams['_host_name'] = 'Navigate';\r\n\t\t\t// turn off the \"Save &amp; Share\" tab so users don't get confused\r\n\t\t\t$aPicnikParams['_exclude'] = \"out\";\r\n\t\t\r\n\t\t\techo '<html><head></head><body>';\r\n\t\t\r\n\t\t\techo '<form id=\"picnik_form\" method=\"POST\" action=\"'.$strPicnikUrl.'\" style=\" visibility: hidden; \">';\r\n\t\t\t\r\n\t\t\t// put all the API parameters into the form as hidden inputs\r\n\t\t\tforeach( $aPicnikParams as $key => $value ) {\r\n\t\t\t\techo \"<input type='hidden' name='$key' value='$value'/>\\n\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//echo \"<input type='text' name='address' value='Your Majesty'/>\\n\";\r\n\t\t\techo \"<input type='submit' value='Picnik'/>\\n\";\r\n\t\t\techo \"</form>\";\r\n\t\t\techo '<script language=\"javascript\" type=\"text/javascript\">\r\n\t\t\t\t\tdocument.forms[0].submit();\r\n\t\t\t\t  </script>';\r\n\t\t\techo '</body></html>';\r\n\r\n\t\t\tcore_terminate();\r\n\t\t\tbreak;\r\n\t\t*/\r\n\t\t\r\n\t\tcase 0: // list / search result\r\n\t\tdefault:\t\t\t\t\t\t\r\n\t\t\t// show requested folder or search\r\n\t\t\t$out = files_browser($_REQUEST['parent'], $_REQUEST['navigate-quicksearch']);\r\n            users_log::action($_REQUEST['fid'], intval($_REQUEST['parent']), 'list', '', json_encode($_REQUEST));\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\treturn $out;\r\n}\r\n\r\nfunction files_browser($parent, $search=\"\")\r\n{\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n    global $events;\r\n    global $user;\r\n    global $current_version;\r\n\t\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t$navibrowse = new navibrowse('files');\r\n\t\r\n\t$navibars->title(t(89, 'Files'));\r\n\r\n    // we attach an event to \"files\" which will be fired by navibars to put an extra button (if necessary)\r\n    $extra_actions = array();\r\n    $events->add_actions(\r\n        'files',\r\n        array(\r\n            'navibrowse' => &$navibrowse,\r\n            'navibars' => &$navibars\r\n        ),\r\n        $extra_actions\r\n    );\r\n\r\n\t$navibars->add_actions(\r\n        array(\r\n            '<a href=\"#\" onclick=\"navigate_files_uploader();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/page_white_get.png\"> '.t(140, 'Upload').'</a>',\r\n            '<a href=\"#\" onclick=\"navigate_files_edit_folder();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_add.png\"> '.t(141, 'Folder').'</a>',\r\n            ($user->permission(\"files.delete\")=='true'?\r\n\t\t\t    '<a href=\"#\" onclick=\"navigate_files_remove();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>' :\r\n                '')\r\n        )\r\n    );\r\n\r\n\t$navibars->add_actions(\r\n        array(\r\n            '<a href=\"?fid='.$_REQUEST['fid'].'&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_home.png\"> '.t(18, 'Home').'</a>',\r\n\t\t\t'search_form'\r\n        )\r\n    );\r\n\t\r\n\tif(!empty($search))\r\n\t{\r\n\t\t$path = '/'.t(41, 'Search').': '.$search;\r\n\t\t$parent = 0;\r\n\t\t$previous = 0;\r\n\t\t$files = file::filesBySearch($search);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(empty($parent)) \r\n\t\t{\r\n\t\t\t$parent = 0;\r\n\t\t\t$previous = 0;\r\n\t\t\t$path = '/';\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$previous = $DB->query_single('parent', 'nv_files', ' id = '.intval($parent).' AND website = '.$website->id);\r\n\t\t\t$path = file::getFullPathTo($parent);\r\n\t\t}\r\n\t\r\n\t\t$files = file::filesOnPath($parent);\r\n\t}\r\n\t\r\n\t$navibrowse->items($files);\r\n\t$navibrowse->path($path, $parent, $previous);\t\r\n\t$navibrowse->setUrl('?fid='.$_REQUEST['fid'].'&parent=');\r\n\t$navibrowse->onDblClick('navigate_files_dblclick');\r\n\t$navibrowse->onRightClick('navigate_files_contextmenu');\r\n\t$navibrowse->onMove('navigate_files_move');\r\n    $navibrowse_hierarchy = $navibrowse->generate();\r\n\t$navibars->add_content($navibrowse_hierarchy);\r\n    \r\n    $layout->add_script('\r\n        navigate_file_drop(\r\n            \".navibrowse\",\r\n            \"'.$parent.'\",\r\n            {\r\n                afterAll: function()\r\n                {\r\n                    location.replace(\"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&parent='.$parent.'\");\r\n                }\r\n            },\r\n            true\r\n        );\r\n    ');\r\n\r\n\r\n    // CONTEXT MENU\r\n\r\n\t// extensions: add new contextmenu functions\r\n\t$extra_contextmenu_actions = array();\r\n\t$events->trigger(\r\n\t\t\"files\",\r\n\t\t\"contextmenu\",\r\n\t\tarray(\r\n\t\t\t'navibars' => &$navibars,\r\n\t\t\t'actions' => &$extra_contextmenu_actions\r\n\t\t)\r\n\t);\r\n\tif(!empty($extra_contextmenu_actions))\r\n\t\tarray_unshift($extra_contextmenu_actions, '<hr />');\r\n\r\n    $navibars->add_content('\r\n        <ul id=\"navigate-files-contextmenu\" style=\"display: none;\">\r\n            <li action=\"open\"><a href=\"#\"><span class=\"ui-icon ui-icon-arrowreturnthick-1-e\"></span>'.t(499, \"Open\").'</a></li>\r\n            <li action=\"rename\"><a href=\"#\"><span class=\"ui-icon ui-icon-pencil\"></span>'.t(500, \"Rename\").'</a></li>\r\n            <li action=\"duplicate\"><a href=\"#\"><span class=\"ui-icon ui-icon-copy\"></span>'.t(477, \"Duplicate\").'</a></li>\r\n            '.($user->permission(\"files.delete\")==\"true\"? '<li action=\"delete\"><a href=\"#\"><span class=\"ui-icon ui-icon-trash\"></span>'.t(35, 'Delete').'</a></li>' : '').'\r\n            '.implode(\"\\n\", $extra_contextmenu_actions).'\r\n        </ul>\r\n    ');\r\n\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t// PLUPLOAD\r\n\t\t$navibars->add_content('<div id=\"navigate-files-uploader\"></div>');\r\n\r\n\t\t$layout->add_script('\r\n\t\t\tplupload.addI18n(\r\n\t\t\t{\r\n\t\t\t\t\"Select files\" : \"'.t(142, 'Select files').'\",\r\n\t\t\t\t\"Add files to the upload queue and click the start button.\" : \"'.t(143, 'Add files to the upload queue and click the start button.').'\",\r\n\t\t\t\t\"Filename\" : \"'.t(144, 'Filename').'\",\r\n\t\t\t\t\"Status\" : \"'.t(68, 'Status').'\",\r\n\t\t\t\t\"Size\" : \"'.t(145, 'Size').'\",\r\n\t\t\t\t\"Add files\" : \"'.t(146, 'Select files').'\",\r\n\t\t\t\t\"Start upload\":\"'.t(147, 'Start upload').'\",\r\n\t\t\t\t\"Stop current upload\" : \"'.t(148, 'Stop current upload').'\",\r\n\t\t\t\t\"Start uploading queue\" : \"'.t(149, 'Start uploading queue').'\",\r\n\t\t\t\t\"Drag files here.\" : \"'.t(150, 'Drag files here.').'\",\r\n\t\t\t\t\"Uploaded %d/%d files\": \"'.t(338, 'Uploaded %d/%d files').'\",\r\n\t\t\t\t\"N/A\": \"'.t(339, 'N/A').'\",\r\n\t\t\t\t\"File extension error.\": \"'.t(340, 'File extension error').'\",\r\n\t\t\t\t\"File size error.\": \"'.t(341, 'File size error').'\",\r\n\t\t\t\t\"Init error.\": \"'.t(342, 'Init error').'\",\r\n\t\t\t\t\"HTTP Error.\": \"'.t(343, 'HTTP Error').'\",\r\n\t\t\t\t\"Security error.\": \"'.t(344, 'Security error').'\",\r\n\t\t\t\t\"Generic error.\": \"'.t(345, 'Generic error').'\",\r\n\t\t\t\t\"IO error.\": \"'.t(346, 'IO error').'\",\r\n\t\t\t\t\"Stop Upload\": \"'.t(347, 'Stop upload').'\",\r\n\t\t\t\t\"Add Files\": \"'.t(348, 'Add files').'\",\r\n\t\t\t\t\"Start Upload\": \"'.t(349, 'Start upload').'\",\r\n\t\t\t\t\"%d files queued\": \"'.t(350, '%d files queued').'\"\r\n\t\t\t});\r\n\t\t');\r\n\r\n\t\t$layout->add_script('\r\n\t\t\tfunction navigate_files_uploader()\r\n\t\t\t{\r\n\t\t\t\t$(\"#navigate-files-uploader\").plupload(\r\n\t\t\t\t{\r\n\t\t\t\t\t// General settings\r\n\t\t\t        runtimes : \"html5,flash,silverlight\",\r\n\t\t\t\t\turl : \"'.NAVIGATE_URL.'/navigate_upload.php?session_id='.session_id().'\",\r\n\t\t\t\t\tmax_file_size : \"'.NAVIGATE_UPLOAD_MAX_SIZE.'mb\",\r\n\t\t\t\t\tchunk_size : \"384kb\",\r\n\t\t\t\t\tunique_names: false,\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\trename: true,\r\n\t\t\t\t\tpreinit: attachCallbacks,\r\n\t\t\t\t\tflash_swf_url: \"'.NAVIGATE_URL.'/lib/external/plupload/js/Moxie.swf\",\r\n\t\t\t        silverlight_xap_url: \"'.NAVIGATE_URL.'/lib/external/plupload/js/Moxie.xap\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfunction attachCallbacks(Uploader)\r\n\t\t\t\t{\r\n\t\t\t\t\tUploader.bind(\"FileUploaded\", function(Up, File, Response)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tasync: true,\r\n\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=json&op=upload\",\r\n\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttype: \"post\",\r\n\t\t\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t    tmp_name: \"{{BASE64}}\",\r\n\t\t\t\t\t\t\t    name: File.name,\r\n\t\t\t\t\t\t\t    parent: '.$parent.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t            $(\"#navigate-files-uploader\").dialog(\r\n\t            {\r\n\t                title: \"'.t(142, 'Select files').'\",\r\n\t                height: 355,\r\n\t                width: 650,\r\n\t                modal: true,\r\n\t                close: function()\r\n\t                {\r\n\t                    window.location.reload();\r\n\t                }\r\n\t            });\r\n\r\n\t            $(\".plupload_wrapper\").removeClass(\"plupload_scroll\");\r\n\r\n\t            $(\"#navigate-files-uploader\").on(\"mouseenter\", function()\r\n\t            {\r\n\t                $(\"div.plupload input\").css(\"z-index\",\"99999\");\r\n\t            });\r\n\t\t    }'\r\n\t    );\r\n\t}\r\n\t\t\t\t\t\t \r\n\t$layout->add_script('\r\n\t\tfunction navigate_files_remove(elements)\r\n\t\t{\r\n\t\t    if(!elements || elements==\"\" || elements==undefined || $(elements).length == 0)\r\n\t\t        var elements = $(\".ui-selected img\").parent();\r\n\r\n\t\t\tif($(elements).length > 0)\r\n\t\t\t{\r\n\t\t\t\t$(\"<div>'.t(151, 'These items will be permanently deleted and cannot be recovered. Are you sure?').'</div>\").dialog(\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"'.t(59, 'Confirmation').'\",\r\n\t\t\t\t\tresizable: false,\r\n\t\t\t\t\theight:140,\r\n\t\t\t\t\tmodal: true,\r\n\t\t\t\t\tbuttons:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"'.t(152, 'Continue').'\": function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$(elements).each(function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t    if(!$(this) || !$(this).attr) return;\r\n\t\t\t\t\t\t\t\tvar itemId = $(this).attr(\"id\").substring(5);\r\n\r\n\t\t\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&op=delete&id=\" + itemId,\r\n\t\t\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$(\"#item-\" + itemId).remove();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t');\r\n\r\n\t$navibars->add_content('\r\n\t\t<div id=\"navigate-edit-folder\" style=\" display: none; \">\r\n            <form action=\"#\" onsubmit=\"return false;\">\r\n                <input type=\"submit\" value=\"\" style=\" display: none; \" />\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(159, 'Name').'</label>\r\n                    '.$naviforms->textfield('folder-name', '').'\r\n                </div>\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(160, 'Type').'</label>\r\n                    '.$naviforms->selectfield(\r\n                        'folder-mime',\r\n                        array(\r\n                                0 => 'folder/generic',\r\n                                1 => 'folder/images',\r\n                                2 => 'folder/audio',\r\n                                3 => 'folder/video',\r\n                                4 => 'folder/flash',\r\n                                5 => 'folder/documents'\r\n                            ),\r\n                        array(\r\n                                0 => t(161, 'Generic'),\r\n                                1 => t(29, 'Images'),\r\n                                2 => t(31, 'Audio'),\r\n                                3 => t(30, 'Video'),\r\n                                4 => t(186, 'Adobe Flash'),\r\n                                5 => t(32, 'Documents')\r\n                            ),\r\n                        'folder/generic'\r\n                    ).'\r\n                </div>\r\n            </form>\r\n\t\t</div>\r\n\r\n\t\t<div id=\"navigate-edit-file\" style=\" display: none; \">\r\n            <form action=\"#\" onsubmit=\"return false;\">\r\n                <input type=\"submit\" value=\"\" style=\" display: none; \" />\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(159, 'Name').'</label>\r\n                    '.$naviforms->textfield('file-name', '').'\r\n                </div>\r\n            </form>\r\n\t\t</div>\r\n\t');\r\n\r\n\t$layout->add_script('\r\n\t\tfunction navigate_files_edit_folder(id, name, mime)\r\n\t\t{\r\n\t\t\t$(\"#navigate-edit-folder\").dialog(\r\n\t\t\t{\r\n\t\t\t\ttitle: \"'.t(141, 'Folder').'\",\r\n\t\t\t\tresizable: false,\r\n\t\t\t\theight: 200,\r\n\t\t\t\twidth: 625,\r\n\t\t\t\tmodal: true,\r\n\t\t\t\tbuttons:\r\n\t\t\t\t{\r\n\t\t\t\t\t\"'.t(152, 'Continue').'\": function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t    var op = \"edit_folder\";\r\n\t\t\t\t\t\tif(!id)\r\n\t\t\t\t\t\t    op = \"create_folder\";\r\n\r\n\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\ttype: \"post\",\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tname: $(\"#folder-name\").val(),\r\n\t\t\t\t\t\t\t\tmime: $(\"#folder-mime\").val(),\r\n\t\t\t\t\t\t\t\tparent: \"'.$parent.'\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&id=\" + id + \"&op=\" + op,\r\n\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$(\"#navigate-edit-folder\").dialog(\"close\");\r\n\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#navigate-edit-folder\").dialog(\"close\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#folder-name\").val(name);\r\n\t\t\t$(\"#folder-mime\").val(mime).trigger(\"change\");\r\n\t\t}\r\n\t');\r\n\r\n    $layout->add_script('\r\n\t    $.ajax({\r\n\t        type: \"GET\",\r\n\t        dataType: \"script\",\r\n\t        cache: true,\r\n\t        url: \"lib/packages/files/files.js?r='.$current_version->revision.'\",\r\n\t        complete: function()\r\n\t        {\r\n                if(typeof navigate_files_onload == \"function\")\r\n\t\t\t\t    navigate_files_onload();\r\n\t        }\r\n\t    });\r\n\t');\r\n\r\n\treturn $navibars->generate();\r\n}\r\n\r\nfunction files_item_properties($item)\r\n{\r\n\tglobal $user;\r\n\tglobal $website;\r\n\tglobal $layout;\r\n\tglobal $user;\r\n\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t\r\n\t$navibars->title(t(89, 'Files'));\r\n\r\n    $layout->navigate_media_browser();\t// we can use media browser in this function\r\n\r\n\t$navibars->add_actions(\r\n\t    array(\r\n\t        '<a href=\"#\" id=\"file-replace-trigger\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/page_refresh.png\"> '.t(659, \"Replace file\").'</a>'\r\n        )\r\n    );\r\n\r\n    $layout->add_script('\r\n        $(\"#file-replace-trigger\").on(\"click\", function(e)\r\n        {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            $(this).parent().find(\"form\").remove();\r\n            $(this).after(\\'<form action=\"?fid=files&act=edit&op=replace_file&id='.$item->id.'\" enctype=\"multipart/form-data\" method=\"post\"><input type=\"file\" name=\"file-replace\" style=\" display: none;\" /></form>\\');\r\n            $(this).next().find(\"input\").on(\"change\", function()\r\n            {\r\n                if($(this).val()!=\"\")\r\n                    $(this).parent().submit();\r\n            });\r\n            $(this).next().find(\"input\").trigger(\"click\");\r\n    \r\n            return false;\r\n        });\r\n    ');\r\n\t\t\t\t\t\t\t\t\r\n\t$navibars->add_actions(\r\n\t\tarray(\r\n\t\t\t'<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>',\r\n\t\t\t($user->permission(\"files.delete\")==\"true\"?\r\n\t\t\t\t'<a href=\"#\" onclick=\"navigate_delete_dialog();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>' :\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n\r\n\t$navibars->add_actions(\r\n\t\tarray(\r\n\t\t\t'<a href=\"?fid='.$_REQUEST['fid'].'&act=0&parent='.$item->parent.'\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_up.png\"> '.t(139, 'Back').'</a>',\r\n\t\t\t'search_form'\r\n\t\t)\r\n\t);\r\n\r\n\t$delete_html = array();\r\n\t$delete_html[] = '<script language=\"javascript\" type=\"text/javascript\">';\r\n\t$delete_html[] = 'function navigate_delete_dialog()';\t\t\r\n\t$delete_html[] = '{';\t\t\t\t\r\n\t$delete_html[] = '$(\"<div id=\\\"navigate-delete-dialog\\\">'.t(57, 'Do you really want to delete this item?').'</div>\").dialog(\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t\tresizable: true,\r\n\t\t\t\t\t\t\theight: 150,\r\n\t\t\t\t\t\t\twidth: 300,\r\n\t\t\t\t\t\t\tmodal: true,\r\n\t\t\t\t\t\t\ttitle: \"'.t(59, 'Confirmation').'\",\r\n\t\t\t\t\t\t\tbuttons: \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"'.t(35, 'Delete').'\": function()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&op=delete&id='.$item->id.'\",\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tif(data==\"true\" || data==\"1\")\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.location.href = \"?fid='.$_REQUEST['fid'].'&act=0&parent='.$item->parent.'\";\r\n\t\t\t\t\t\t\t\t\t\t\telse if(data!=\"\")\r\n\t\t\t\t\t\t\t\t\t\t\t\tnavigate_notification(data);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t$(this).dialog(\"close\");\t\t\r\n                                    $(\"#navigate-delete-dialog\").remove();\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t\t\t\t$(\"#navigate-delete-dialog\").remove();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}';\t\t\r\n\t$delete_html[] = '</script>';\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t$navibars->add_content(implode(\"\\n\", $delete_html));\r\n\t\r\n\t$navibars->form();\r\n\r\n\t$navibars->add_tab(t(43, \"Main\"));\r\n\t\r\n\t$navibars->add_tab_content($naviforms->hidden('form-sent', 'true'));\r\n\t$navibars->add_tab_content($naviforms->hidden('id', $item->id));\t\r\n\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>ID</label>',\r\n\t\t\t'<span>'.$item->id.'</span>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(144, 'Filename').'</label>',\r\n\t\t\t$naviforms->textfield('name', $item->name),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(145, 'Size').'</label>',\r\n\t\t\t'<span>'.core_bytes($item->size).'</span>'\r\n        )\r\n    );\r\n\r\n    $navibars->add_tab_content_row(\r\n        array(\r\n            '<label>'.t(160, 'Type').'</label>',\r\n            $naviforms->selectfield('type',\r\n                array(\r\n                    0 => 'image',\r\n                    1 => 'video',\r\n                    2 => 'audio',\r\n                    3 => 'document',\r\n                    4 => 'flash',\r\n                    5 => 'file'\r\n                ),\r\n                array(\r\n                    0 => t(157, 'Image'),\r\n                    1 => t(272, 'Video'),\r\n                    2 => t(31, 'Audio'),\r\n                    3 => t(539, 'Document'),\r\n                    4 => 'Flash',\r\n                    5 => t(82, 'File')\r\n                ),\r\n                $item->type,\r\n                false\r\n            )\r\n        )\r\n    );\r\n\r\n    // retrieve a full list of mimetypes by extension\r\n    $mimetypes = array_values(file::mimetypes());\r\n    // remove duplicate entries\r\n    $mimetypes = array_unique($mimetypes);\r\n    sort($mimetypes);\r\n    $mimetypes = array_filter($mimetypes);\r\n\r\n    $navibars->add_tab_content_row(array(\r\n            '<label>MIME</label>',\r\n            $naviforms->selectfield('mime',\r\n                $mimetypes,\r\n                $mimetypes,\r\n                $item->mime,\r\n                false\r\n            )\r\n        )\r\n    );\r\n\r\n    $navibars->add_tab_content_row(array(\r\n            '<label>'.t(364, 'Access').'</label>',\r\n            $naviforms->selectfield('access',\r\n                array(\r\n                    0 => 0,\r\n                    1 => 2,\r\n                    2 => 1,\r\n                    3 => 3\r\n                ),\r\n                array(\r\n                    0 => t(254, 'Everybody'),\r\n                    1 => t(362, 'Not signed in'),\r\n                    2 => t(361, 'Web users only'),\r\n                    3 => t(512, 'Selected web user groups')\r\n                ),\r\n                $item->access,\r\n                'navigate_webuser_groups_visibility($(this).val());',\r\n                false,\r\n                array(\r\n                    1 => t(363, 'Users who have not yet signed in')\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    $webuser_groups = webuser_group::all_in_array();\r\n\r\n    $navibars->add_tab_content_row(\r\n        array(\r\n            '<label>'.t(506, \"Groups\").'</label>',\r\n            $naviforms->multiselect(\r\n                'groups',\r\n                array_keys($webuser_groups),\r\n                array_values($webuser_groups),\r\n                $item->groups\r\n            )\r\n        ),\r\n        'webuser-groups-field'\r\n    );\r\n\r\n    $layout->add_script('\r\n        function navigate_webuser_groups_visibility(access_value)\r\n        {\r\n            if(access_value==3)\r\n                $(\"#webuser-groups-field\").show();\r\n            else\r\n                $(\"#webuser-groups-field\").hide();\r\n        }\r\n\r\n        navigate_webuser_groups_visibility('.$item->access.');\r\n    ');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(array(\r\n            '<label>'.t(80, 'Permission').'</label>',\r\n            $naviforms->selectfield('permission',\r\n                array(\r\n                        0 => 0,\r\n                        1 => 1,\r\n                        2 => 2\r\n                    ),\r\n                array(\r\n                        0 => t(69, 'Published'),\r\n                        1 => t(70, 'Private'),\r\n                        2 => t(81, 'Hidden')\r\n                    ),\r\n                $item->permission\r\n            )\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(65, 'Enabled').'</label>',\r\n\t\t$naviforms->checkbox('enabled', $item->enabled),\r\n        )\r\n    );\r\n\r\n\t$website_root = $website->absolute_path(true).'/object';\r\n\tif(empty($website_root)) $website_root = NVWEB_OBJECT;\r\n\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(153, 'Embed link').'</label>',\r\n\t\t'<a href=\"'.$website_root.'?id='.$item->id.'&disposition=inline\" target=\"_blank\">'.$website_root.'?id='.$item->id.'&disposition=inline</a>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(154, 'Download link').'</label>',\r\n        '<a href=\"'.$website_root.'?id='.$item->id.'&disposition=attachment\">'.$website_root.'?id='.$item->id.'&disposition=attachment</a>'\r\n        )\r\n    );\r\n\r\n\tif($item->type == 'image')\r\n\t{\r\n\t\t$navibars->add_tab(t(157, \"Image\"));\r\n\t\t\r\n\t\t$navibars->add_tab_content_row(array(\r\n            '<label>'.t(155, 'Width').' / '.t(156, 'Height').'</label>',\r\n\t\t\t$naviforms->textfield('width', $item->width, '50px'),\r\n            'x',\r\n            $naviforms->textfield('height', $item->height, '50px'),\r\n            'px'\r\n\t\t));\r\n\r\n        $original = NAVIGATE_DOWNLOAD.'?wid='.$item->website.'&id='.$item->id.'&disposition=inline';\r\n        $navibars->add_tab_content_row(\r\n            array(\r\n                '<label>'.t(274, 'Preview').'</label>',\r\n                '<div><img id=\"image-preview\" src=\"'.$original.'&seed='.core_time().'\" width=\"400px\" /></div>'\r\n            )\r\n        );\r\n\r\n        $layout->add_script('\r\n            $(\"#image-preview\").on(\"dblclick\", function()\r\n            {\r\n                navigate_image_preview($(this).attr(\"src\"), $(\"#name\").val());\r\n            });\r\n        ');\r\n\r\n        $navibars->add_tab_content_row(\r\n            array(\r\n                '<label>&nbsp;</label>'.\r\n                '<button onclick=\"navigate_media_browser_focalpoint('.$item->id.'); return false;\"><img src=\"img/icons/silk/picture-measurement.png\" align=\"absmiddle\"> '.t(540, 'Focal point').'</button>'\r\n            )\r\n        );\r\n\r\n        $original_image_link = NAVIGATE_DOWNLOAD.'?id='.$item->id.'&disposition=inline&sid='.session_id().'&seed='.time();\r\n        if(strpos(NAVIGATE_DOWNLOAD, '//')==0)\r\n            $original_image_link = $website->protocol.substr($original_image_link, 2);\r\n\r\n        // Photopea only works with https, so the \"edit with Photopea\" button will only appear if the website supports the protocol\r\n        $photopea_upload = NAVIGATE_URL.'/navigate_upload.php?wid='.$website->id.'&engine=photopea&id='.$item->id.'&session_id='.session_id().'&seed=';\r\n        if(strpos($photopea_upload, '//')==0)\r\n            $photopea_upload = $website->protocol.substr($original_image_link, 2);\r\n        $photopea_upload = str_replace('http:', 'https:', $photopea_upload);\r\n\r\n        $navibars->add_tab_content_row(array(\r\n            '<label>'.t(170, 'Edit').'</label>',\r\n            '<script language=\"javascript\" type=\"text/javascript\">\r\n\t\t\t\tfunction navigate_pixlr_edit()\r\n\t\t\t\t{\t\t\t\t    \t\t\t\t    \r\n\t\t\t\t\tpixlr.overlay.show({\r\n\t\t\t\t\t\tservice: \"editor\",\r\n\t\t\t\t\t\tloc: \"'.$user->language.'\",\r\n\t\t\t\t\t\timage: \"'.$original_image_link.'\",\r\n\t\t\t\t\t\ttitle: \"'.$item->name.'\",\r\n\t\t\t\t\t\ttarget: \"'.NAVIGATE_URL.'/navigate_upload.php?wid='.$website->id.'&engine=pixlr&id='.$item->id.'&session_id='.session_id().'&seed=\" + + new Date().getTime(),\r\n\t\t\t\t\t\texit: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=pixlr_exit&id='.$item->id.'&ts=\" + + new Date().getTime(),\r\n\t\t\t\t\t\tcredentials: true,\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\treferrer: \"Navigate CMS\",\r\n\t\t\t\t\t\ticon: \"'.NAVIGATE_URL.'/img/navigate-isotype-16x16.png\",\r\n\t\t\t\t\t\tlocktitle: true,\r\n\t\t\t\t\t\tlocktype: \"png\",\r\n\t\t\t\t\t\tredirect: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=pixlr_exit&id='.$item->id.'&ts=\" + + new Date().getTime()\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// add a close button\r\n\t\t\t\t\tvar close_button = $(\\'<a href=\"#\"><span class=\"fa-stack\"><i class=\"fa fa-circle fa-stack-2x\"></i><i class=\"fa fa-close fa-stack-1x fa-inverse\"></i></span></a>\\');\r\n\t\t\t\t\tclose_button.css({\r\n\t\t\t\t\t    \"position\": \"absolute\",\r\n\t\t\t\t\t    \"right\": \"-20px\",\r\n\t\t\t\t\t    \"top\": \"-20px\",\r\n\t\t\t\t\t    \"font-size\": \"20px\",\r\n\t\t\t\t\t    \"color\": \"#222\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclose_button.on(\"click\", function()\r\n\t\t\t\t\t{\r\n\t\t\t\t        pixlr.overlay.hide();\r\n\t\t\t\t        $(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(\"div:last\").prepend(close_button);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfunction navigate_photopea_edit()\r\n\t\t\t\t{\r\n\t\t\t\t    var photopea_edit_json = \r\n\t\t\t\t    {\r\n                        \"files\": \r\n                        [\r\n                            \"'.str_replace('http:', 'https:', $original_image_link).'\"\r\n                        ],\r\n                        \"server\" : \r\n                        {\r\n\t\t                    \"url\" : \"'.$photopea_upload.'\" + new Date().getTime(),\r\n\t\t                    \"formats\" : [ \"png\" ]\r\n\t                    },\r\n\t                    \"environment\" : \r\n\t                    {\r\n\t\t                    \"rulers\"  : true, \r\n\t\t                    \"compact\" : false,        \r\n\t\t                    \"theme\"  : 2,              \r\n\t\t                    \"lang\"   : \"'.$user->language.'\",   \t\t\r\n\t\t                    \"localsave\" : true,     \r\n\t\t                    \"autosave\"  : false,         \r\n\t\t                    \"showbranding\": true\t\t                    \r\n\t                    }\r\n\t\t\t\t    };\r\n\t\t\t\t    \r\n\t\t\t\t    $(\"<iframe id=\\\"files-photopea-wrapper\\\" src=\\\"https:\\/\\/www.photopea.com?p=\" + encodeURI(JSON.stringify(photopea_edit_json)) + \"\\\"><\\/iframe>\").\r\n\t\t\t\t        dialog({\r\n\t\t\t\t            title: \"Photopea\",\r\n\t\t\t\t            modal: true,\r\n\t\t\t\t            width: \"95%\",\r\n\t\t\t\t            height: $(window).height() - 64,\r\n\t\t\t\t            open: function(event, ui)\r\n\t\t\t\t            {\r\n\t\t\t\t                $(\"#files-photopea-wrapper\").css(\"width\", \"99%\");\r\n\t\t\t\t            },\r\n\t\t\t\t            close: function()\r\n\t\t\t\t            {\r\n\t\t\t\t                $(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\r\n\t\t\t\t                $(\"#files-photopea-wrapper\").remove();\r\n\t\t\t\t                $(this).remove();\r\n\t\t\t\t            }\r\n\t\t\t\t        });\r\n\r\n\t\t\t\t}\r\n\t\t\t</script>\r\n\t\t\t<a href=\"#\" class=\"button\" onclick=\"navigate_pixlr_edit();\"><img src=\"'.NAVIGATE_URL.'/img/logos/pixlr.png\" width=\"100px\" height=\"42px\" /></a> '.\r\n            ($website->protocol == 'https://' && false? '<a href=\"#\" class=\"button\" onclick=\"navigate_photopea_edit();\"><img src=\"'.NAVIGATE_URL.'/img/logos/photopea.png\" width=\"100px\" height=\"42px\" /></a>' : '')\r\n        ));\r\n\r\n        $navibars->add_tab(t(334, 'Description'));\r\n\r\n        $website_languages_selector = $website->languages();\r\n        $website_languages_selector = array_merge(array('' => '('.t(443, 'All').')'), $website_languages_selector);\r\n\r\n        $navibars->add_tab_content_row(array(\r\n            '<label>'.t(63, 'Languages').'</label>',\r\n            $naviforms->buttonset(\r\n                'files_description_language_selector',\r\n                $website_languages_selector,\r\n                '',\r\n                \"navigate_tabform_language_selector(this);\"\r\n            )\r\n        ));\r\n\r\n        foreach($website->languages_list as $lang)\r\n        {\r\n            $language_info = '<span class=\"navigate-form-row-language-info\" title=\"'.language::name_by_code($lang).'\"><img src=\"img/icons/silk/comment.png\" align=\"absmiddle\" />'.$lang.'</span>';\r\n\r\n            $navibars->add_tab_content_row(\r\n                array(\r\n                    '<label>'.t(67, 'Title').' '.$language_info.'</label>',\r\n                    $naviforms->textfield('title-'.$lang, @$item->title[$lang]),\r\n                ),\r\n                '',\r\n                'lang=\"'.$lang.'\"'\r\n            );\r\n\r\n            $navibars->add_tab_content_row(\r\n                array(\r\n                    '<label>'.t(334, 'Description').' '.$language_info.'</label>',\r\n                    $naviforms->textfield('description-'.$lang, @$item->description[$lang])\r\n                ),\r\n                '',\r\n                'lang=\"'.$lang.'\"'\r\n            );\r\n        }\r\n\r\n    }\r\n\telse if($item->type=='video')\r\n\t{\r\n\t\t$navibars->add_tab(t(272, \"Video\"));\r\n\t\t/*\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(272, 'Video').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"video_'.$item->id.'\" style=\"display:block;width:640px;height:360px;float:left;\" class=\"video\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<video controls=\"controls\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'\t<source src=\"'.NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline\" type=\"'.$item->mime.'\" />',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</video>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\r\n                                            ));\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t$layout->add_script('         \r\n\t\t\t$(\"#video_'.$item->id.' video\").mediaelementplayer(\r\n\t\t\t{\r\n\t\t\t\tpluginPath: \"'.NAVIGATE_URL.'/lib/external/mediaelement/\"\r\n\t\t\t});\r\n\t\t');\t\t\t\t\r\n\t\t*/\t\r\n\t\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(272, 'Video').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"video_'.$item->id.'\" style=\"display:block;width:640px;height:360px;float:left;\" class=\"video\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"http://www.adobe.com/go/getflashplayer\"><img src=\"http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif\" alt=\"Get Adobe Flash player\" /></a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<script language=\"javascript\" type=\"text/javascript\" src=\"http://bitcast-b.bitgravity.com/player/6/functions.js\"></script>'\r\n                                            ));\r\n\t\r\n\t\t$layout->add_script('         \r\n\t\t\tvar flashvars = {};\r\n\t\t\tflashvars.AutoPlay = \"false\";\r\n\t\t\tflashvars.File = \"'.urlencode(NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline').'\";\r\n\t\t\tflashvars.Mode = \"ondemand\";\r\n\t\t\tvar params = {};\r\n\t\t\tparams.allowFullScreen = \"true\";\r\n\t\t\tparams.allowScriptAccess = \"always\";\r\n\t\t\tvar attributes = {};\r\n\t\t\tattributes.id = \"bitgravity_player_6\";\r\n\t\t\tswfobject.embedSWF(stablerelease, \"video_'.$item->id.'\", \"640\", \"360\", \"9.0.115\", \"http://bitcast-b.bitgravity.com/player/expressInstall.swf\", flashvars, params, attributes);\t\r\n\t\t');\r\n\t}\r\n\telse if($item->type=='audio')\r\n\t{\r\n\t\t$navibars->add_tab(t(31, \"Audio\"));\r\n\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(31, 'Audio').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"audio_'.$item->id.'\" style=\"display:block;float:left;\" class=\"audio\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<audio controls=\"controls\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'\t<source src=\"'.NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline\" type=\"'.$item->mime.'\" />',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</audio>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\r\n                                            ));\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t$layout->add_script('         \r\n\t\t\t$(\"#audio_'.$item->id.' audio\").mediaelementplayer(\r\n\t\t\t{\r\n\t\t\t\tpluginPath: \"'.NAVIGATE_URL.'/lib/external/mediaelement/\"\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#audio_'.$item->id.'\").addClass(\"ui-state-default\");\r\n\t\t');\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\r\n\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\treturn $navibars->generate();\r\n\r\n}\r\n\r\nfunction files_media_browser($limit = 50, $offset = 0)\r\n{\r\n\tglobal $DB;\r\n    global $website;\r\n    global $user;\r\n\r\n    // access & permissions string helpers\r\n    $access = array(\r\n        0 => '', //<img src=\"img/icons/silk/page_white_go.png\" align=\"absmiddle\" title=\"'.t(254, 'Everybody').'\" />',\r\n        1 => '<img src=\"img/icons/silk/lock.png\" align=\"absmiddle\" title=\"'.t(361, 'Web users only').'\" />',\r\n        2 => '<img src=\"img/icons/silk/user_gray.png\" align=\"absmiddle\" title=\"'.t(363, 'Users who have not yet signed up or signed in').'\" />',\r\n        3 => '<img src=\"img/icons/silk/group_key.png\" align=\"absmiddle\" title=\"'.t(512, \"Selected web user groups\").'\" />'\r\n    );\r\n\r\n    $permissions = array(\r\n        0 => '', //'<img src=\"img/icons/silk/world.png\" align=\"absmiddle\" title=\"'.t(69, 'Published').'\" />',\r\n        1 => '<img src=\"img/icons/silk/world_dawn.png\" align=\"absmiddle\" title=\"'.t(70, 'Private').'\" />',\r\n        2 => '<img src=\"img/icons/silk/world_night.png\" align=\"absmiddle\" title=\"'.t(81, 'Hidden').'\" />'\r\n    );\r\n\r\n\t$wid = $_REQUEST['website'];\r\n    $ws = new website();\r\n    if(empty($wid))\r\n    {\r\n        $ws = $website;\r\n        $wid = $website->id;\r\n    }\r\n    else\r\n    {\r\n        $ws->load($wid);\r\n\r\n        // check if the current user is allowed to access the website files\r\n        if(!empty($user->websites) && !in_array($wid, $user->websites))\r\n            $ws->share_files_media_browser = false;\r\n    }\r\n\r\n\t// check if the chosen website allows sharing its files (or it's the current website)\r\n\tif( $ws->id == $website->id || $ws->share_files_media_browser == '1' )\r\n\t{\r\n\t\t$media = (empty($_REQUEST['media'])? 'image' : $_REQUEST['media']);\r\n\t\t$text = $_REQUEST['text'];\r\n\r\n\t\t$out = array();\r\n\r\n\t    $limit = $offset + $limit;\r\n\t    $offset = 0;\r\n\t    $total = 0;\r\n\r\n\t    $order = $_REQUEST['order'];\r\n\t    switch($order)\r\n\t    {\r\n\t        case 'name_ASC':\r\n\t            $order = ' name ASC';\r\n\t            break;\r\n\r\n\t        case 'name_DESC':\r\n\t            $order = ' name DESC';\r\n\t            break;\r\n\r\n\t        case 'date_added_ASC':\r\n\t            $order = ' date_added ASC';\r\n\t            break;\r\n\r\n\t        case 'date_added_DESC':\r\n\t        default:\r\n\t            $order = ' date_added DESC';\r\n\t    }\r\n\r\n\t\tif($media=='folder')\r\n\t\t{\r\n\t\t\t$parent = 0;\r\n\t\t\t$files = file::filesOnPath($_REQUEST['parent'], $wid, $order);\r\n\t\t\tif($_REQUEST['parent'] > 0)\t// add \"back\" special folder\r\n\t\t\t{\r\n\t\t\t\t$previous = $DB->query_single(\r\n\t                'parent',\r\n\t                'nv_files',\r\n\t                ' id = '.$_REQUEST['parent'].' AND website = '.$wid\r\n\t            );\r\n\t\t\t\tarray_unshift(\r\n\t                $files,\r\n\t                json_decode('{\"id\":\"'.$previous.'\",\"type\":\"folder\",\"name\":\"'.t(139, 'Back').'\",\"mime\":\"folder\\/back\",\"navipath\":\"/foo\"}')\r\n\t            );\r\n\t\t\t}\r\n\r\n\t        $total = count($files);\r\n\t        $files_shown = array();\r\n\t        for($i=$offset; $i+$offset < $limit; $i++)\r\n\t        {\r\n\t            if(empty($files[$i])) break;\r\n\r\n\t            // search by text in a folder\r\n\t            if(!empty($text))\r\n\t                if(stripos($files[$i]->name, $text)===false) continue;\r\n\r\n\t            $files_shown[] = $files[$i];\r\n\t        }\r\n\t\t}\r\n\t    else if($media=='youtube')\r\n\t    {\r\n\t        // list($files_shown, $total) = files_youtube_search($offset, $limit, $text, $order);\r\n\t    }\r\n\t\telse\r\n\t    {\r\n\t\t\tlist($files_shown, $total) = file::filesByMedia($media, $offset, $limit, $wid, $text, $order);\r\n\t    }\r\n\r\n\t\tforeach($files_shown as $f)\r\n\t\t{\r\n\t        $website_root = $ws->absolute_path(true).'/object';\r\n\t        if(empty($website_root))\r\n\t            $website_root = NVWEB_OBJECT;\r\n\t        $download_link = $website_root.'?id='.$f->id.'&disposition=attachment';\r\n\r\n\t        if($f->type == 'image')\r\n\t\t\t{\r\n\t            $f->title = json_decode($f->title, true);\r\n\t            $f->description = json_decode($f->description, true);\r\n\r\n\t\t\t\t$icon = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline&width=75&height=75';\r\n\t\t\t\t$original = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline';\r\n\t\t\t\t$out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               image-width=\"'.$f->width.'\"\r\n\t\t\t\t               image-height=\"'.$f->height.'\"\r\n\t\t\t\t               image-title=\"'.base64_encode(json_encode($f->title, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               image-description=\"'.base64_encode(json_encode($f->description, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\t\t\t\t               \r\n\t\t\t\t               id=\"file-'.$f->id.'\">\r\n\t\t\t\t               <div class=\"file-access-icons\">'.$access[$f->access].$permissions[$f->permission].'</div>\r\n\t\t\t\t               <div class=\"file-image-wrapper\"><img src=\"'.$icon.'\" title=\"'.$f->name.'\" data-src-original=\"'.$original.'\" /></div>\r\n\t                      </div>';\r\n\t\t\t}\r\n\t        else if($f->type == 'youtube')\r\n\t        {\r\n\t            $out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               image-width=\"'.$f->width.'\"\r\n\t\t\t\t               image-height=\"'.$f->height.'\"\r\n\t\t\t\t               image-title=\"'.base64_encode(json_encode($f->title, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               image-description=\"'.base64_encode(json_encode($f->description, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\r\n\t\t\t\t               id=\"file-youtube#'.$f->id.'\">\r\n\t\t\t\t               <img src=\"'.$f->thumbnail->url.'\" title=\"'.$f->title.'\" width=\"75\" height=\"53\" />\r\n\t\t\t\t               <span>'.$f->title.'</span>\r\n\t                      </div>';\r\n\t        }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$icon = navibrowse::mimeIcon($f->mime, $f->type);\r\n\r\n\t\t\t\tif($f->mime == 'application/pdf' && extension_loaded('imagick'))\r\n                    $icon = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline&type=thumbnail&width=75&height=75';\r\n\r\n\t\t\t\t$navipath = file::getFullPathTo($f->id);\r\n\t\t\t\t$out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               navipath=\"'.$navipath.'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\r\n\t\t\t\t               id=\"file-'.$f->id.'\">\r\n\t\t\t\t               <div class=\"file-access-icons\">'.$access[$f->access].$permissions[$f->permission].'</div>\r\n\t\t\t\t               <div class=\"file-icon-wrapper\"><img src=\"'.$icon.'\" width=\"50\" height=\"50\" title=\"'.$f->name.'\" /></div>\r\n\t                           <span style=\"clear: both; display: block; height: 0px;\"></span>'.\r\n\t                           $f->name.'\r\n\t                       </div>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif($total > $limit + $offset)\r\n\t\t{\r\n\t\t\t$out[] = '<div class=\"ui-corner-all\" id=\"file-more\">\r\n\t                    <img src=\"'.NAVIGATE_URL.'/img/icons/ricebowl/actions/forward.png\" width=\"32\" height=\"32\"  style=\"margin-top: 14px;\" />'.\r\n\t                    t(234, 'More elements').'\r\n\t                  </div>';\r\n\t\t}\r\n\r\n\t\techo implode(\"\\n\", $out);\r\n\t}\r\n\t\r\n\tsession_write_close();\r\n\t$DB->disconnect();\r\n\texit;\r\n}\r\n\r\n?>", "<?php\r\n@ini_set('max_execution_time','3600');\r\n@ini_set('max_input_time','3600');\r\n\r\nheader(\"Content-Type: application/json\");\r\n\r\nif(empty($_REQUEST['session_id']))\r\n    die('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Failed to retrieve session_id.\"}, \"id\" : \"id\"}');\r\n\r\nsession_id($_REQUEST['session_id']);\r\n\r\nrequire_once('cfg/globals.php');\r\nrequire_once('cfg/common.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/files/file.class.php');\r\n\r\n//file_put_contents(NAVIGATE_PATH . '/private/debug.txt', print_r($_REQUEST, true).print_r($_FILES, true));\r\n\r\n/* global variables */\r\nglobal $DB;\r\nglobal $user;\r\nglobal $config;\r\nglobal $layout;\r\nglobal $website;\r\n\r\n// create database connection\r\n$DB = new database();\r\nif(!$DB->connect())\r\n\tdie(APP_NAME.' # ERROR<br /> '.$DB->get_last_error());\r\n\r\n// session checking\r\nif(empty($_SESSION['APP_USER#'.APP_UNIQUE]))\r\n{\r\n\t$DB->disconnect();\r\n\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"No user logged in.\"}, \"id\" : \"id\"}');\r\n}\r\nelse\r\n{\r\n\t$user = new user();\r\n\t$user->load($_SESSION['APP_USER#'.APP_UNIQUE]);\r\n}\r\n\r\n// load the working website\r\n$website = new Website();\r\nif(!empty($_SESSION['website_active']))\r\n\t$website->load($_SESSION['website_active']);\r\nelse\t\r\n\t$website->load(); // load the first available\r\n\r\n\r\n// force loading user permissions before desconnecting from the database\r\n$foo = $user->permission(\"foo\");\r\n\r\nsession_write_close();\r\n$DB->disconnect();\r\n\r\nfunction navigate_upload_remove_temporary($targetDir, $maxFileAge=86400)\r\n{\r\n\tif(is_dir($targetDir) && ($dir = opendir($targetDir)))\r\n\t{\r\n\t\twhile (($file = readdir($dir)) !== false) \r\n\t\t{\r\n\t\t\t$filePath = $targetDir . DIRECTORY_SEPARATOR . $file;\r\n\t\t\r\n\t\t\t// Remove temp files if they are older than the max age\r\n\t\t\tif (preg_match('/\\\\.tmp$/', $file) && (filemtime($filePath) < time() - $maxFileAge))\r\n\t\t\t\t@unlink($filePath);\r\n\t\t}\r\n\t\tclosedir($dir);\r\n\t}\r\n}\r\n\r\n// HTTP headers for no cache etc\r\n/*\r\nheader('Content-type: text/plain; charset=UTF-8');\r\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\r\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\r\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\r\nheader(\"Pragma: no-cache\");\r\n*/\r\n\r\n// Settings\r\n$targetDir = NAVIGATE_PRIVATE.'/'.$website->id.'/files';\r\n$maxFileAge = 24 * 60 * 60; // Temp file age in seconds (1 day)\r\n\r\n// no maximum uploading / execution time\r\n@set_time_limit(0);\r\n\r\n//file_put_contents(NAVIGATE_PRIVATE.'/'.$website->id.'/files/out.txt', print_r($_FILES, true));\r\n\r\n// filedrop drag'n'drop engine\t\r\nif($_REQUEST['engine']=='dropzone')\r\n{\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t$tmpfilename = tempnam($targetDir, \"upload-\");\r\n\t\t$tmpfilename = basename($tmpfilename);\r\n\r\n\t\tif(count($_FILES) > 0)\r\n\t\t{\r\n\t\t\tif(!file_exists($_FILES['upload']['tmp_name']))\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Uploaded file missing.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\tif(empty($_SERVER['HTTP_ACCEPT_CHARSET']))\r\n\t\t\t\t$_SERVER['HTTP_ACCEPT_CHARSET'] = 'UTF-8';\r\n\r\n\t\t\t$original_filename = mb_convert_encoding($_FILES['upload']['name'], 'UTF-8', $_SERVER['HTTP_ACCEPT_CHARSET']);\r\n\r\n\t\t\tif(move_uploaded_file($_FILES['upload']['tmp_name'], $targetDir.'/'.$tmpfilename ) )\r\n\t\t\t{\r\n\t\t\t\techo json_encode(array(\"filename\" => $original_filename, 'temporal' => $tmpfilename));\r\n\t\t\t}\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t\tcore_terminate();\r\n\t\t}\r\n\t\telse if(isset($_GET['up']))\r\n\t\t{\r\n\t\t\tif(isset($_GET['base64']))\r\n\t\t\t{\r\n\t\t\t\t$content = base64_decode(file_get_contents('php://input'));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$content = file_get_contents('php://input');\r\n\t\t\t}\r\n\r\n\t\t\t$headers = getallheaders();\r\n\t\t\t$headers = array_change_key_case($headers, CASE_UPPER);\r\n\r\n\t\t\tif( file_put_contents( $targetDir.'/'.$tmpfilename, $content ) )\r\n\t\t\t{\r\n\t\t\t\techo json_encode(array(\"filename\" => $headers['UP-FILENAME'], 'temporal' => $tmpfilename));\r\n\t\t\t}\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t\tcore_terminate();\r\n\t\t}\r\n\t}\r\n}\r\nelse if($_REQUEST['engine']=='picnik')\r\n{\r\n\t// PHP script to receive image data from Picnik via HTTP POST\r\n\t// retrieve the image's attributes from the $_FILES array\r\n\t$image_tmp_filename = $_FILES['file']['tmp_name'];\r\n\t$image_filename = $_FILES['file']['name'];\r\n\t\r\n\t// Save the image to disk.  It'll go into the same directory as\r\n\t// this script.  You'd probably want to put it somewhere else in the\r\n\t// file system like a \"/images\" directory, or maybe even into a database.\r\n\t// Make sure your web server has write access to the destination dir,\r\n\t// or the call to file_put_contents isn't going to work.\r\n\t$image_data = file_get_contents( $image_tmp_filename );\r\n\t\r\n\tif(!empty($_REQUEST['id']) && file_exists($targetDir.'/'.$_REQUEST['id']))\r\n\t{\t\r\n\t\tfile_put_contents( $targetDir.'/'.$_REQUEST['id'], $image_data );\r\n\t}\r\n\t\r\n\tcore_terminate();\r\n}\r\nelse if($_REQUEST['engine']=='pixlr')\r\n{\t\r\n\tif(!empty($_REQUEST['id']) && file_exists($targetDir.'/'.$_REQUEST['id']))\r\n\t{\t\r\n\t\tif(!empty($_REQUEST['image']))\r\n\t\t{\r\n\t\t\t//file_put_contents( $targetDir.'/'.$_REQUEST['id'], $_REQUEST['image'] );\r\n\t\t\t//copy( $_REQUEST['image'], $targetDir.'/'.$_REQUEST['id'].'.pixlr' );\r\n\r\n\t\t\t// download the file even if the user loads a different page\r\n\t\t\t@ignore_user_abort(true);\r\n\t\t\t\r\n\t\t\t$size = core_filesize_curl($_REQUEST['image']);\r\n\r\n\t\t\t$content = str_pad('', 512, 'navigate_upload from '.$_REQUEST['image'].' ('.$size.') ');\t   \r\n\t\t\theader(\"HTTP/1.1 200 OK\");  \r\n\t\t\theader(\"Content-Length: \".strlen($content));  \r\n\t\t\techo $content; // output content  \r\n\t\t\theader('Connection: close');\r\n\t\t\t\r\n\t\t\t//$image = core_http_request($_REQUEST['image']);\r\n\t\t\t$image = file_get_contents($_REQUEST['image']);\r\n\t\t\tfile_put_contents($targetDir.'/'.$_REQUEST['id'].'.pixlr', $image);\r\n\r\n\t\t\tif(file_exists($targetDir.'/'.$_REQUEST['id'].'.pixlr'))\r\n\t\t\t{\r\n\t\t\t\tif(filesize($targetDir.'/'.$_REQUEST['id'].'.pixlr')!=$size)\r\n\t\t\t\t{\r\n\t\t\t\t\t@unlink($targetDir.'/'.$_REQUEST['id'].'.pixlr');\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tunlink($targetDir.'/'.$_REQUEST['id']);\r\n\t\t\t\t\trename($targetDir.'/'.$_REQUEST['id'].'.pixlr', $targetDir.'/'.$_REQUEST['id']);\r\n\t\t\t\t\t// update file info and remove old thumbnails\r\n\t\r\n\t\t\t\t\t$DB = new database();\r\n\t\t\t\t\t$DB->connect();\r\n\t\r\n\t\t\t\t\t$file = new file();\r\n\t\t\t\t\t$file->load($_REQUEST['id']);\r\n\t\t\t\t\t$file->refresh();\t\t\t\r\n\t\t\t\t\t$DB->disconnect();\t\t\t\t\r\n\t\r\n\t\t\t\t\tcore_terminate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\techo false;\r\n\tcore_terminate();\r\n}\r\nelse if($_REQUEST['engine']=='photopea')\r\n{\r\n\tif(!empty($_REQUEST['id']) && file_exists($targetDir.'/'.$_REQUEST['id']))\r\n    {\r\n\t\tif(!empty($_POST['p']))\r\n\t\t{\r\n\t\t\t// download the file even if the user loads a different page\r\n\t\t\t@ignore_user_abort(true);\r\n\r\n            $p = json_decode( $_POST[\"p\"] );\t// parse JSON\r\n            $image = $p->versions[0]->data; // always PNG\r\n            unset($p); // free memory\r\n            $image = base64_decode($image);\r\n\r\n            file_put_contents($targetDir.'/'.$_REQUEST['id'].'.photopea', $image);\r\n            unset($image);\r\n\r\n            $filesize = filesize($targetDir.'/'.$_REQUEST['id'].'.photopea');\r\n\r\n            if(file_exists($targetDir.'/'.$_REQUEST['id'].'.photopea') && $filesize > 128)\r\n\t\t\t{\r\n                unlink($targetDir.'/'.$_REQUEST['id']);\r\n                rename($targetDir.'/'.$_REQUEST['id'].'.photopea', $targetDir.'/'.$_REQUEST['id']);\r\n\r\n                header(\"HTTP/1.1 200 OK\");\r\n                header('Access-Control-Allow-Origin: *');\r\n                echo 'Image saved! ('.core_bytes($filesize).')'; // output content\r\n                header('Connection: close');\r\n\r\n                // update file info and remove old thumbnails\r\n                $DB = new database();\r\n                $DB->connect();\r\n                $file = new file();\r\n                $file->load($_REQUEST['id']);\r\n                $file->refresh();\r\n                $DB->disconnect();\r\n\t\t\t}\r\n\t\t\telse\r\n            {\r\n                @unlink($targetDir.'/'.$_REQUEST['id'].'.photopea'); // too small, ignore image\r\n\r\n                header(\"HTTP/1.1 200 OK\");\r\n                header('Access-Control-Allow-Origin: *');\r\n                echo 'ERROR!'; // output content\r\n                header('Connection: close');\r\n            }\r\n\t\t}\r\n\t}\r\n\tcore_terminate();\r\n}\r\nelse if($_REQUEST['engine']=='tinymce')\r\n{\r\n\t$DB = new database();\r\n\t$DB->connect();\r\n\r\n    $file = file::register_upload(\r\n        $_FILES['file']['tmp_name'],\r\n        $_FILES['file']['name'],\r\n        0,\r\n\t    NULL,\r\n\t    true\r\n    );\r\n\r\n\tif(!empty($file))\r\n\t\techo json_encode(array('location' => file::file_url($file->id)));\r\n\telse\r\n\t\techo json_encode(false);\r\n\t\r\n\t$DB->disconnect();\r\n\tcore_terminate();\r\n}\r\nelse\r\n{\r\n\t// plUpload engine\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t// Get parameters\r\n\t\t$chunk = isset($_REQUEST[\"chunk\"]) ? $_REQUEST[\"chunk\"] : 0;\r\n\t\t$chunks = isset($_REQUEST[\"chunks\"]) ? $_REQUEST[\"chunks\"] : 0;\r\n\t\t$fileName = isset($_REQUEST[\"name\"]) ? $_REQUEST[\"name\"] : '';\r\n\r\n\t\t// Clean the fileName for security reasons\r\n\t\t$fileName = base64_encode($fileName);\r\n\r\n\t\t// Remove old temp files\r\n\t\tif (is_dir($targetDir) && ($dir = opendir($targetDir)))\r\n\t\t{\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t}\r\n\t\telse\r\n\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Failed to open temp directory.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t// Look for the content type header\r\n\t\tif (isset($_SERVER[\"HTTP_CONTENT_TYPE\"]))\r\n\t\t\t$contentType = $_SERVER[\"HTTP_CONTENT_TYPE\"];\r\n\r\n\t\tif (isset($_SERVER[\"CONTENT_TYPE\"]))\r\n\t\t\t$contentType = $_SERVER[\"CONTENT_TYPE\"];\r\n\r\n\t\tif (strpos($contentType, \"multipart\") !== false)\r\n\t\t{\r\n\t\t\tif (isset($_FILES['file']['tmp_name']) && is_uploaded_file($_FILES['file']['tmp_name']))\r\n\t\t\t{\r\n\t\t\t\t// Open temp file\r\n\t\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, ($chunk == 0 ? \"wb\" : \"ab\"));\r\n\t\t\t\tif ($out)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Read binary input stream and append it to temp file\r\n\t\t\t\t\t$in = fopen($_FILES['file']['tmp_name'], \"rb\");\r\n\r\n\t\t\t\t\tif ($in)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile ($buff = fread($in, 4096))\r\n\t\t\t\t\t\t\tfwrite($out, $buff);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 101, \"message\": \"Failed to open input stream.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\t\t\tfclose($out);\r\n\t\t\t\t\t@unlink($_FILES['file']['tmp_name']);\r\n\r\n\t\t\t\t\t// save meta file info into database (need a new db connection, we do this in the caller script)\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 102, \"message\": \"Failed to open output stream.\"}, \"id\" : \"id\"}');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 103, \"message\": \"Failed to move uploaded file.\"}, \"id\" : \"id\"}');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Open temp file\r\n\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");\r\n\t\t\tif ($out)\r\n\t\t\t{\r\n\t\t\t\t// Read binary input stream and append it to temp file\r\n\t\t\t\t$in = fopen(\"php://input\", \"rb\");\r\n\r\n\t\t\t\tif ($in)\r\n\t\t\t\t{\r\n\t\t\t\t\twhile ($buff = fread($in, 4096))\r\n\t\t\t\t\t\tfwrite($out, $buff);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 101, \"message\": \"Failed to open input stream.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\t\tfclose($out);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 102, \"message\": \"Failed to open output stream.\"}, \"id\" : \"id\"}');\r\n\t\t}\r\n\r\n\t\t// Return JSON-RPC response\r\n\t\tdie('{\"jsonrpc\" : \"2.0\", \"result\" : null, \"id\" : \"id\"}');\r\n\t}\r\n}\r\n\r\n?>"], "fixing_code": ["<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/files/file.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webusers/webuser_group.class.php');\r\n\r\nfunction run()\r\n{\r\n\tglobal $user;\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n\t\r\n\t$out = '';\r\n\t$item = new file();\r\n\t\t\t\r\n\tswitch($_REQUEST['act'])\r\n\t{\r\n        case \"json\":\r\n        case 1: // json retrieval & operations\r\n\t\t\tif($_REQUEST['op']=='upload')\r\n\t\t\t{\r\n                $tmp_name = $_REQUEST['tmp_name'];\r\n                if($tmp_name==\"{{BASE64}}\")\r\n                    $tmp_name = base64_encode($_REQUEST['name']);\r\n\r\n                $file = file::register_upload(\r\n                    $tmp_name,\r\n                    $_REQUEST['name'],\r\n                    $_REQUEST['parent']\r\n                );\r\n\r\n\t\t\t\tif(!empty($file))\r\n                {\r\n\t\t\t\t\techo json_encode(array('id' => $file->id, 'name' => $file->name));\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo json_encode(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n            switch($_REQUEST['op'])\r\n            {\r\n                case 'create_folder':\r\n                    file::create_folder($_REQUEST['name'], $_REQUEST['mime'], $_REQUEST['parent']);\r\n\t\t\t\t    echo json_encode(true);\r\n                    break;\r\n\r\n\t\t\t    case 'edit_folder':\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->name = $_REQUEST['name'];\r\n                    $f->mime = $_REQUEST['mime'];\r\n                    $ok = $f->save();\r\n                    echo json_encode($ok);\r\n                    break;\r\n\r\n                case 'edit_file':\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->name = $_REQUEST['name'];\r\n                    $ok = $f->save();\r\n                    echo json_encode($ok);\r\n                    break;\r\n\r\n                case 'duplicate_file':\r\n                    //error_reporting(~0);\r\n                    //ini_set('display_errors', 1);\r\n                    $status = false;\r\n                    $f = new file();\r\n                    $f->load(intval($_REQUEST['id']));\r\n                    $f->id = 0;\r\n                    $f->insert();\r\n                    if(!empty($f->id))\r\n                    {\r\n                        $done = copy(\r\n                            NAVIGATE_PRIVATE.'/'.$website->id.'/files/'.intval($_REQUEST['id']),\r\n                            NAVIGATE_PRIVATE.'/'.$website->id.'/files/'.$f->id\r\n                        );\r\n                        $status = \"true\";\r\n                        if(!$done)\r\n                        {\r\n                            $f->delete();\r\n                            $status = t(56, \"Unexpected error\");\r\n                        }\r\n                    }\r\n                    echo $status;\r\n                    break;\r\n\r\n                case 'move':\r\n                    if(is_array($_REQUEST['item']))\r\n                    {\r\n                        $ok = true;\r\n                        for($i=0; $i < count($_REQUEST['item']); $i++)\r\n                        {\r\n                            unset($item);\r\n                            $item = new file();\r\n                            $item->load($_REQUEST['item'][$i]);\r\n                            $item->parent = $_REQUEST['folder'];\r\n                            $ok = $ok & $item->update();\r\n                        }\r\n                        echo json_encode(($ok? true : false));\r\n                    }\r\n                    else\r\n                    {\r\n                        $item->load($_REQUEST['item']);\r\n                        $item->parent = $_REQUEST['folder'];\r\n                        echo json_encode($item->update());\r\n                    }\r\n                    break;\r\n\r\n                case 'delete':\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n                        $item->load($_REQUEST['id']);\r\n\t                    $status = $item->delete();\r\n                        echo json_encode($status);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\techo $e->getMessage();\r\n\t\t\t\t\t}\r\n                    break;\r\n\r\n                case 'permissions':\r\n                    $item->load($_REQUEST['id']);\r\n\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->access = intval($_POST['access']);\r\n                        $item->permission = intval($_POST['permission']);\r\n                        $item->enabled = intval($_POST['enabled']);\r\n                        $item->groups = $_POST['groups'];\r\n                        if($item->access < 3)\r\n                            $item->groups = array();\r\n                        $status = $item->save();\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        echo json_encode(array(\r\n                            'access' => $item->access,\r\n                            'groups' => $item->groups,\r\n                            'permission' => $item->permission,\r\n                            'enabled' => $item->enabled\r\n                        ));\r\n                    }\r\n                    break;\r\n\r\n                case 'description':\r\n                    $item->load($_REQUEST['id']);\r\n\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->title = array();\r\n                        $item->description = array();\r\n\r\n                        foreach($website->languages as $language)\r\n                        {\r\n                            $lcode = $language['code'];\r\n\r\n                            if(!isset($_REQUEST['titles'][$lcode]))\r\n                                break;\r\n\r\n                            $item->title[$lcode]\t= $_REQUEST['titles'][$lcode];\r\n                            $item->description[$lcode]\t= $_REQUEST['descriptions'][$lcode];\r\n                        }\r\n\r\n                        $status = $item->save();\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        // return file title and description (alt)\r\n                        $data = array(\r\n                            'title' => $item->title,\r\n                            'description' => $item->description\r\n                        );\r\n                        echo json_encode($data);\r\n                    }\r\n                    break;\r\n\r\n                case 'focalpoint':\r\n                    $item->load($_REQUEST['id']);\r\n                    if(!empty($_POST))\r\n                    {\r\n                        $item->focalpoint = $_REQUEST['top'].'#'.$_REQUEST['left'];\r\n                        $status = $item->save();\r\n                        // remove cached thumbnails\r\n                        file::thumbnails_remove($item->id);\r\n                        echo json_encode($status);\r\n                    }\r\n                    else\r\n                    {\r\n                        if(empty($item->focalpoint))\r\n                        {\r\n                            $item->focalpoint = '50#50';\r\n                            $item->save();\r\n                            // remove cached thumbnails\r\n                            file::thumbnails_remove($item->id);\r\n                        }\r\n                        echo $item->focalpoint;\r\n                    }\r\n                    break;\r\n\r\n                case 'video_info':\r\n                    if($_REQUEST['provider']=='youtube')\r\n                    {\r\n                        $item->load_from_youtube($_REQUEST['reference'], false); // force cache reload\r\n                    }\r\n                    else if($_REQUEST['provider']=='vimeo')\r\n                    {\r\n                        $item->load_from_vimeo($_REQUEST['reference'], false); // force cache reload\r\n                    }\r\n                    else // uploaded video (file) (may also be provider=\"file\")\r\n                    {\r\n                        if(!empty($_REQUEST['reference']) && is_numeric($_REQUEST['reference']))\r\n                            $item->load($_REQUEST['reference']);\r\n                        else if(is_numeric($_REQUEST['provider']))\r\n                            $item->load($_REQUEST['provider']); // needed in some case\r\n                        else\r\n                            unset($item);\r\n\r\n                        if(!empty($item))\r\n                        {\r\n                            // add some extra data\r\n                            $item->extra        = array(\r\n                                'reference'  =>  $item->id,\r\n                                'link'      =>  '',\r\n                                'thumbnail' =>  'img/icons/ricebowl/mimetypes/video.png',\r\n                                'thumbnail_big' => 'img/icons/ricebowl/mimetypes/video.png',\r\n                                'thumbnail_url' => 'img/icons/ricebowl/mimetypes/video.png',\r\n                                'duration' => '',\r\n                                'embed_code'  => '<video src=\"'.file::file_url($item->id, 'inline').'></video>'\r\n                            );\r\n                        }\r\n                    }\r\n                    if(!empty($item))\r\n                        echo json_encode($item);\r\n                    else\r\n                        echo false;\r\n                    break;\r\n            }\r\n\t\t\tsession_write_close();\r\n\t\t\t$DB->disconnect();\r\n\t\t\texit;\r\n\t\t\tbreak;\r\n\r\n\t\t\t\r\n\t\tcase 2:\t// show/edit item properties\r\n        case \"edit\":\r\n\t\t\t$item->load($_REQUEST['id']);\r\n\r\n            if(@$_REQUEST['op']=='replace_file')\r\n            {\r\n                if($_FILES['file-replace']['error'] == 0)\r\n                {\r\n                    $destination = NAVIGATE_PRIVATE.'/'.$item->website.'/files/'.$item->id;\r\n                    $filesize = filesize($_FILES['file-replace']['tmp_name']);\r\n\r\n                    if($filesize > 0) // not an empty file, continue\r\n                    {\r\n                        @unlink($destination);\r\n                        $item->size = $filesize;\r\n\r\n                        if(move_uploaded_file($_FILES['file-replace']['tmp_name'], $destination))\r\n                        {\r\n                            $mime = file::getMime($_FILES['file-replace']['name'], $destination);\r\n                            $item->mime = $mime[0];\r\n                            $item->type = $mime[1];\r\n                            $item->date_added = core_time();\r\n                            $item->uploaded_by = (empty($user->id) ? '0' : $user->id);\r\n                            $item->refresh(); // including save\r\n\r\n                            $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n                        }\r\n                        else\r\n                        {\r\n                            $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    $layout->navigate_notification(t(262, 'Error uploading file'), true, true);\r\n                }\r\n            }\r\n\t\t\telse if(isset($_REQUEST['form-sent']))\r\n\t\t\t{\r\n\t\t\t\t$item->load_from_post();\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t$item->save();\r\n\t\t\t\t\tunset($item);\r\n\t\t\t\t\t$item = new file();\r\n\t\t\t\t\t$item->load($_REQUEST['id']);\r\n                    $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n\t\t\t\t}\r\n\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification($e->getMessage(), true, true);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$out = files_item_properties($item);\r\n\t\t\tbreak;\t\t\t\r\n\t\t\r\n\t\tcase 10:\r\n\t\tcase 'media_browser':\r\n\t\t\tfiles_media_browser($_GET['limit'], $_GET['offset']);\r\n\t\t\tbreak;\r\n\t\t\t\r\n        case 92: // pixlr (image editor) overlay remover\r\n        case 'pixlr_exit':\r\n\t\t\tob_clean();\r\n            file::thumbnails_remove(intval($_GET['id']));\r\n\r\n\t\t\techo '\r\n\t\t\t<html>\r\n\t\t\t<head></head>\r\n\t\t\t<body>\r\n\t\t\t<script language=\"javascript\" type=\"text/javascript\">\r\n\t\t\t\t//window.parent.eval(\"$(\\'#thumbnail-cache\\').attr(\\'src\\', $(\\'#thumbnail-cache\\').attr(\\'src\\') + \\'&refresh=\\' + new Date().getTime());\");\r\n\t\t\t\twindow.parent.eval(\\'$(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\\');\r\n\t\t\t\twindow.parent.eval(\"pixlr.overlay.hide();\");\r\n\t\t\t</script>\r\n\t\t\t</body>\r\n\t\t\t</html>\t\r\n\t\t\t';\r\n\t\t\t\r\n\t\t\tcore_terminate();\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 0: // list / search result\r\n\t\tdefault:\t\t\t\t\t\t\r\n\t\t\t// show requested folder or search\r\n\t\t\t$out = files_browser($_REQUEST['parent'], $_REQUEST['navigate-quicksearch']);\r\n            users_log::action($_REQUEST['fid'], intval($_REQUEST['parent']), 'list', '', json_encode($_REQUEST));\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\treturn $out;\r\n}\r\n\r\nfunction files_browser($parent, $search=\"\")\r\n{\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n    global $events;\r\n    global $user;\r\n    global $current_version;\r\n\t\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t$navibrowse = new navibrowse('files');\r\n\t\r\n\t$navibars->title(t(89, 'Files'));\r\n\r\n    // we attach an event to \"files\" which will be fired by navibars to put an extra button (if necessary)\r\n    $extra_actions = array();\r\n    $events->add_actions(\r\n        'files',\r\n        array(\r\n            'navibrowse' => &$navibrowse,\r\n            'navibars' => &$navibars\r\n        ),\r\n        $extra_actions\r\n    );\r\n\r\n\t$navibars->add_actions(\r\n        array(\r\n            '<a href=\"#\" onclick=\"navigate_files_uploader();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/page_white_get.png\"> '.t(140, 'Upload').'</a>',\r\n            '<a href=\"#\" onclick=\"navigate_files_edit_folder();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_add.png\"> '.t(141, 'Folder').'</a>',\r\n            ($user->permission(\"files.delete\")=='true'?\r\n\t\t\t    '<a href=\"#\" onclick=\"navigate_files_remove();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>' :\r\n                '')\r\n        )\r\n    );\r\n\r\n\t$navibars->add_actions(\r\n        array(\r\n            '<a href=\"?fid='.$_REQUEST['fid'].'&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_home.png\"> '.t(18, 'Home').'</a>',\r\n\t\t\t'search_form'\r\n        )\r\n    );\r\n\t\r\n\tif(!empty($search))\r\n\t{\r\n\t\t$path = '/'.t(41, 'Search').': '.$search;\r\n\t\t$parent = 0;\r\n\t\t$previous = 0;\r\n\t\t$files = file::filesBySearch($search);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(empty($parent)) \r\n\t\t{\r\n\t\t\t$parent = 0;\r\n\t\t\t$previous = 0;\r\n\t\t\t$path = '/';\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$previous = $DB->query_single('parent', 'nv_files', ' id = '.intval($parent).' AND website = '.$website->id);\r\n\t\t\t$path = file::getFullPathTo($parent);\r\n\t\t}\r\n\t\r\n\t\t$files = file::filesOnPath($parent);\r\n\t}\r\n\t\r\n\t$navibrowse->items($files);\r\n\t$navibrowse->path($path, $parent, $previous);\t\r\n\t$navibrowse->setUrl('?fid='.$_REQUEST['fid'].'&parent=');\r\n\t$navibrowse->onDblClick('navigate_files_dblclick');\r\n\t$navibrowse->onRightClick('navigate_files_contextmenu');\r\n\t$navibrowse->onMove('navigate_files_move');\r\n    $navibrowse_hierarchy = $navibrowse->generate();\r\n\t$navibars->add_content($navibrowse_hierarchy);\r\n    \r\n    $layout->add_script('\r\n        navigate_file_drop(\r\n            \".navibrowse\",\r\n            \"'.$parent.'\",\r\n            {\r\n                afterAll: function()\r\n                {\r\n                    location.replace(\"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&parent='.$parent.'\");\r\n                }\r\n            },\r\n            true\r\n        );\r\n    ');\r\n\r\n\r\n    // CONTEXT MENU\r\n\r\n\t// extensions: add new contextmenu functions\r\n\t$extra_contextmenu_actions = array();\r\n\t$events->trigger(\r\n\t\t\"files\",\r\n\t\t\"contextmenu\",\r\n\t\tarray(\r\n\t\t\t'navibars' => &$navibars,\r\n\t\t\t'actions' => &$extra_contextmenu_actions\r\n\t\t)\r\n\t);\r\n\tif(!empty($extra_contextmenu_actions))\r\n\t\tarray_unshift($extra_contextmenu_actions, '<hr />');\r\n\r\n    $navibars->add_content('\r\n        <ul id=\"navigate-files-contextmenu\" style=\"display: none;\">\r\n            <li action=\"open\"><a href=\"#\"><span class=\"ui-icon ui-icon-arrowreturnthick-1-e\"></span>'.t(499, \"Open\").'</a></li>\r\n            <li action=\"rename\"><a href=\"#\"><span class=\"ui-icon ui-icon-pencil\"></span>'.t(500, \"Rename\").'</a></li>\r\n            <li action=\"duplicate\"><a href=\"#\"><span class=\"ui-icon ui-icon-copy\"></span>'.t(477, \"Duplicate\").'</a></li>\r\n            '.($user->permission(\"files.delete\")==\"true\"? '<li action=\"delete\"><a href=\"#\"><span class=\"ui-icon ui-icon-trash\"></span>'.t(35, 'Delete').'</a></li>' : '').'\r\n            '.implode(\"\\n\", $extra_contextmenu_actions).'\r\n        </ul>\r\n    ');\r\n\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t// PLUPLOAD\r\n\t\t$navibars->add_content('<div id=\"navigate-files-uploader\"></div>');\r\n\r\n\t\t$layout->add_script('\r\n\t\t\tplupload.addI18n(\r\n\t\t\t{\r\n\t\t\t\t\"Select files\" : \"'.t(142, 'Select files').'\",\r\n\t\t\t\t\"Add files to the upload queue and click the start button.\" : \"'.t(143, 'Add files to the upload queue and click the start button.').'\",\r\n\t\t\t\t\"Filename\" : \"'.t(144, 'Filename').'\",\r\n\t\t\t\t\"Status\" : \"'.t(68, 'Status').'\",\r\n\t\t\t\t\"Size\" : \"'.t(145, 'Size').'\",\r\n\t\t\t\t\"Add files\" : \"'.t(146, 'Select files').'\",\r\n\t\t\t\t\"Start upload\":\"'.t(147, 'Start upload').'\",\r\n\t\t\t\t\"Stop current upload\" : \"'.t(148, 'Stop current upload').'\",\r\n\t\t\t\t\"Start uploading queue\" : \"'.t(149, 'Start uploading queue').'\",\r\n\t\t\t\t\"Drag files here.\" : \"'.t(150, 'Drag files here.').'\",\r\n\t\t\t\t\"Uploaded %d/%d files\": \"'.t(338, 'Uploaded %d/%d files').'\",\r\n\t\t\t\t\"N/A\": \"'.t(339, 'N/A').'\",\r\n\t\t\t\t\"File extension error.\": \"'.t(340, 'File extension error').'\",\r\n\t\t\t\t\"File size error.\": \"'.t(341, 'File size error').'\",\r\n\t\t\t\t\"Init error.\": \"'.t(342, 'Init error').'\",\r\n\t\t\t\t\"HTTP Error.\": \"'.t(343, 'HTTP Error').'\",\r\n\t\t\t\t\"Security error.\": \"'.t(344, 'Security error').'\",\r\n\t\t\t\t\"Generic error.\": \"'.t(345, 'Generic error').'\",\r\n\t\t\t\t\"IO error.\": \"'.t(346, 'IO error').'\",\r\n\t\t\t\t\"Stop Upload\": \"'.t(347, 'Stop upload').'\",\r\n\t\t\t\t\"Add Files\": \"'.t(348, 'Add files').'\",\r\n\t\t\t\t\"Start Upload\": \"'.t(349, 'Start upload').'\",\r\n\t\t\t\t\"%d files queued\": \"'.t(350, '%d files queued').'\"\r\n\t\t\t});\r\n\t\t');\r\n\r\n\t\t$layout->add_script('\r\n\t\t\tfunction navigate_files_uploader()\r\n\t\t\t{\r\n\t\t\t\t$(\"#navigate-files-uploader\").plupload(\r\n\t\t\t\t{\r\n\t\t\t\t\t// General settings\r\n\t\t\t        runtimes : \"html5,flash,silverlight\",\r\n\t\t\t\t\turl : \"'.NAVIGATE_URL.'/navigate_upload.php?session_id='.session_id().'\",\r\n\t\t\t\t\tmax_file_size : \"'.NAVIGATE_UPLOAD_MAX_SIZE.'mb\",\r\n\t\t\t\t\tchunk_size : \"384kb\",\r\n\t\t\t\t\tunique_names: false,\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\trename: true,\r\n\t\t\t\t\tpreinit: attachCallbacks,\r\n\t\t\t\t\tflash_swf_url: \"'.NAVIGATE_URL.'/lib/external/plupload/js/Moxie.swf\",\r\n\t\t\t        silverlight_xap_url: \"'.NAVIGATE_URL.'/lib/external/plupload/js/Moxie.xap\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfunction attachCallbacks(Uploader)\r\n\t\t\t\t{\r\n\t\t\t\t\tUploader.bind(\"FileUploaded\", function(Up, File, Response)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tasync: true,\r\n\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=json&op=upload\",\r\n\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttype: \"post\",\r\n\t\t\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t    tmp_name: \"{{BASE64}}\",\r\n\t\t\t\t\t\t\t    name: File.name,\r\n\t\t\t\t\t\t\t    parent: '.$parent.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t            $(\"#navigate-files-uploader\").dialog(\r\n\t            {\r\n\t                title: \"'.t(142, 'Select files').'\",\r\n\t                height: 355,\r\n\t                width: 650,\r\n\t                modal: true,\r\n\t                close: function()\r\n\t                {\r\n\t                    window.location.reload();\r\n\t                }\r\n\t            });\r\n\r\n\t            $(\".plupload_wrapper\").removeClass(\"plupload_scroll\");\r\n\r\n\t            $(\"#navigate-files-uploader\").on(\"mouseenter\", function()\r\n\t            {\r\n\t                $(\"div.plupload input\").css(\"z-index\",\"99999\");\r\n\t            });\r\n\t\t    }'\r\n\t    );\r\n\t}\r\n\t\t\t\t\t\t \r\n\t$layout->add_script('\r\n\t\tfunction navigate_files_remove(elements)\r\n\t\t{\r\n\t\t    if(!elements || elements==\"\" || elements==undefined || $(elements).length == 0)\r\n\t\t        var elements = $(\".ui-selected img\").parent();\r\n\r\n\t\t\tif($(elements).length > 0)\r\n\t\t\t{\r\n\t\t\t\t$(\"<div>'.t(151, 'These items will be permanently deleted and cannot be recovered. Are you sure?').'</div>\").dialog(\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"'.t(59, 'Confirmation').'\",\r\n\t\t\t\t\tresizable: false,\r\n\t\t\t\t\theight:140,\r\n\t\t\t\t\tmodal: true,\r\n\t\t\t\t\tbuttons:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"'.t(152, 'Continue').'\": function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$(elements).each(function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t    if(!$(this) || !$(this).attr) return;\r\n\t\t\t\t\t\t\t\tvar itemId = $(this).attr(\"id\").substring(5);\r\n\r\n\t\t\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&op=delete&id=\" + itemId,\r\n\t\t\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$(\"#item-\" + itemId).remove();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t');\r\n\r\n\t$navibars->add_content('\r\n\t\t<div id=\"navigate-edit-folder\" style=\" display: none; \">\r\n            <form action=\"#\" onsubmit=\"return false;\">\r\n                <input type=\"submit\" value=\"\" style=\" display: none; \" />\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(159, 'Name').'</label>\r\n                    '.$naviforms->textfield('folder-name', '').'\r\n                </div>\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(160, 'Type').'</label>\r\n                    '.$naviforms->selectfield(\r\n                        'folder-mime',\r\n                        array(\r\n                                0 => 'folder/generic',\r\n                                1 => 'folder/images',\r\n                                2 => 'folder/audio',\r\n                                3 => 'folder/video',\r\n                                4 => 'folder/flash',\r\n                                5 => 'folder/documents'\r\n                            ),\r\n                        array(\r\n                                0 => t(161, 'Generic'),\r\n                                1 => t(29, 'Images'),\r\n                                2 => t(31, 'Audio'),\r\n                                3 => t(30, 'Video'),\r\n                                4 => t(186, 'Adobe Flash'),\r\n                                5 => t(32, 'Documents')\r\n                            ),\r\n                        'folder/generic'\r\n                    ).'\r\n                </div>\r\n            </form>\r\n\t\t</div>\r\n\r\n\t\t<div id=\"navigate-edit-file\" style=\" display: none; \">\r\n            <form action=\"#\" onsubmit=\"return false;\">\r\n                <input type=\"submit\" value=\"\" style=\" display: none; \" />\r\n                <div class=\"navigate-form-row\">\r\n                    <label>'.t(159, 'Name').'</label>\r\n                    '.$naviforms->textfield('file-name', '').'\r\n                </div>\r\n            </form>\r\n\t\t</div>\r\n\t');\r\n\r\n\t$layout->add_script('\r\n\t\tfunction navigate_files_edit_folder(id, name, mime)\r\n\t\t{\r\n\t\t\t$(\"#navigate-edit-folder\").dialog(\r\n\t\t\t{\r\n\t\t\t\ttitle: \"'.t(141, 'Folder').'\",\r\n\t\t\t\tresizable: false,\r\n\t\t\t\theight: 200,\r\n\t\t\t\twidth: 625,\r\n\t\t\t\tmodal: true,\r\n\t\t\t\tbuttons:\r\n\t\t\t\t{\r\n\t\t\t\t\t\"'.t(152, 'Continue').'\": function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t    var op = \"edit_folder\";\r\n\t\t\t\t\t\tif(!id)\r\n\t\t\t\t\t\t    op = \"create_folder\";\r\n\r\n\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\ttype: \"post\",\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tname: $(\"#folder-name\").val(),\r\n\t\t\t\t\t\t\t\tmime: $(\"#folder-mime\").val(),\r\n\t\t\t\t\t\t\t\tparent: \"'.$parent.'\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&id=\" + id + \"&op=\" + op,\r\n\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$(\"#navigate-edit-folder\").dialog(\"close\");\r\n\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#navigate-edit-folder\").dialog(\"close\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#folder-name\").val(name);\r\n\t\t\t$(\"#folder-mime\").val(mime).trigger(\"change\");\r\n\t\t}\r\n\t');\r\n\r\n    $layout->add_script('\r\n\t    $.ajax({\r\n\t        type: \"GET\",\r\n\t        dataType: \"script\",\r\n\t        cache: true,\r\n\t        url: \"lib/packages/files/files.js?r='.$current_version->revision.'\",\r\n\t        complete: function()\r\n\t        {\r\n                if(typeof navigate_files_onload == \"function\")\r\n\t\t\t\t    navigate_files_onload();\r\n\t        }\r\n\t    });\r\n\t');\r\n\r\n\treturn $navibars->generate();\r\n}\r\n\r\nfunction files_item_properties($item)\r\n{\r\n\tglobal $user;\r\n\tglobal $website;\r\n\tglobal $layout;\r\n\tglobal $user;\r\n\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t\r\n\t$navibars->title(t(89, 'Files'));\r\n\r\n    $layout->navigate_media_browser();\t// we can use media browser in this function\r\n\r\n\t$navibars->add_actions(\r\n\t    array(\r\n\t        '<a href=\"#\" id=\"file-replace-trigger\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/page_refresh.png\"> '.t(659, \"Replace file\").'</a>'\r\n        )\r\n    );\r\n\r\n    $layout->add_script('\r\n        $(\"#file-replace-trigger\").on(\"click\", function(e)\r\n        {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            $(this).parent().find(\"form\").remove();\r\n            $(this).after(\\'<form action=\"?fid=files&act=edit&op=replace_file&id='.$item->id.'\" enctype=\"multipart/form-data\" method=\"post\"><input type=\"file\" name=\"file-replace\" style=\" display: none;\" /></form>\\');\r\n            $(this).next().find(\"input\").on(\"change\", function()\r\n            {\r\n                if($(this).val()!=\"\")\r\n                    $(this).parent().submit();\r\n            });\r\n            $(this).next().find(\"input\").trigger(\"click\");\r\n    \r\n            return false;\r\n        });\r\n    ');\r\n\t\t\t\t\t\t\t\t\r\n\t$navibars->add_actions(\r\n\t\tarray(\r\n\t\t\t'<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>',\r\n\t\t\t($user->permission(\"files.delete\")==\"true\"?\r\n\t\t\t\t'<a href=\"#\" onclick=\"navigate_delete_dialog();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>' :\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n\r\n\t$navibars->add_actions(\r\n\t\tarray(\r\n\t\t\t'<a href=\"?fid='.$_REQUEST['fid'].'&act=0&parent='.$item->parent.'\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/folder_up.png\"> '.t(139, 'Back').'</a>',\r\n\t\t\t'search_form'\r\n\t\t)\r\n\t);\r\n\r\n\t$delete_html = array();\r\n\t$delete_html[] = '<script language=\"javascript\" type=\"text/javascript\">';\r\n\t$delete_html[] = 'function navigate_delete_dialog()';\t\t\r\n\t$delete_html[] = '{';\t\t\t\t\r\n\t$delete_html[] = '$(\"<div id=\\\"navigate-delete-dialog\\\">'.t(57, 'Do you really want to delete this item?').'</div>\").dialog(\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\t\tresizable: true,\r\n\t\t\t\t\t\t\theight: 150,\r\n\t\t\t\t\t\t\twidth: 300,\r\n\t\t\t\t\t\t\tmodal: true,\r\n\t\t\t\t\t\t\ttitle: \"'.t(59, 'Confirmation').'\",\r\n\t\t\t\t\t\t\tbuttons: \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"'.t(35, 'Delete').'\": function()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\t\t\t\t\turl: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid='.$_REQUEST['fid'].'&act=json&op=delete&id='.$item->id.'\",\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function(data)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tif(data==\"true\" || data==\"1\")\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.location.href = \"?fid='.$_REQUEST['fid'].'&act=0&parent='.$item->parent.'\";\r\n\t\t\t\t\t\t\t\t\t\t\telse if(data!=\"\")\r\n\t\t\t\t\t\t\t\t\t\t\t\tnavigate_notification(data);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t$(this).dialog(\"close\");\t\t\r\n                                    $(\"#navigate-delete-dialog\").remove();\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"'.t(58, 'Cancel').'\": function()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$(this).dialog(\"close\");\r\n\t\t\t\t\t\t\t\t\t$(\"#navigate-delete-dialog\").remove();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}';\t\t\r\n\t$delete_html[] = '</script>';\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t$navibars->add_content(implode(\"\\n\", $delete_html));\r\n\t\r\n\t$navibars->form();\r\n\r\n\t$navibars->add_tab(t(43, \"Main\"));\r\n\t\r\n\t$navibars->add_tab_content($naviforms->hidden('form-sent', 'true'));\r\n\t$navibars->add_tab_content($naviforms->hidden('id', $item->id));\t\r\n\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>ID</label>',\r\n\t\t\t'<span>'.$item->id.'</span>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(144, 'Filename').'</label>',\r\n\t\t\t$naviforms->textfield('name', $item->name),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(145, 'Size').'</label>',\r\n\t\t\t'<span>'.core_bytes($item->size).'</span>'\r\n        )\r\n    );\r\n\r\n    $navibars->add_tab_content_row(\r\n        array(\r\n            '<label>'.t(160, 'Type').'</label>',\r\n            $naviforms->selectfield('type',\r\n                array(\r\n                    0 => 'image',\r\n                    1 => 'video',\r\n                    2 => 'audio',\r\n                    3 => 'document',\r\n                    4 => 'flash',\r\n                    5 => 'file'\r\n                ),\r\n                array(\r\n                    0 => t(157, 'Image'),\r\n                    1 => t(272, 'Video'),\r\n                    2 => t(31, 'Audio'),\r\n                    3 => t(539, 'Document'),\r\n                    4 => 'Flash',\r\n                    5 => t(82, 'File')\r\n                ),\r\n                $item->type,\r\n                false\r\n            )\r\n        )\r\n    );\r\n\r\n    // retrieve a full list of mimetypes by extension\r\n    $mimetypes = array_values(file::mimetypes());\r\n    // remove duplicate entries\r\n    $mimetypes = array_unique($mimetypes);\r\n    sort($mimetypes);\r\n    $mimetypes = array_filter($mimetypes);\r\n\r\n    $navibars->add_tab_content_row(array(\r\n            '<label>MIME</label>',\r\n            $naviforms->selectfield('mime',\r\n                $mimetypes,\r\n                $mimetypes,\r\n                $item->mime,\r\n                false\r\n            )\r\n        )\r\n    );\r\n\r\n    $navibars->add_tab_content_row(array(\r\n            '<label>'.t(364, 'Access').'</label>',\r\n            $naviforms->selectfield('access',\r\n                array(\r\n                    0 => 0,\r\n                    1 => 2,\r\n                    2 => 1,\r\n                    3 => 3\r\n                ),\r\n                array(\r\n                    0 => t(254, 'Everybody'),\r\n                    1 => t(362, 'Not signed in'),\r\n                    2 => t(361, 'Web users only'),\r\n                    3 => t(512, 'Selected web user groups')\r\n                ),\r\n                $item->access,\r\n                'navigate_webuser_groups_visibility($(this).val());',\r\n                false,\r\n                array(\r\n                    1 => t(363, 'Users who have not yet signed in')\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    $webuser_groups = webuser_group::all_in_array();\r\n\r\n    $navibars->add_tab_content_row(\r\n        array(\r\n            '<label>'.t(506, \"Groups\").'</label>',\r\n            $naviforms->multiselect(\r\n                'groups',\r\n                array_keys($webuser_groups),\r\n                array_values($webuser_groups),\r\n                $item->groups\r\n            )\r\n        ),\r\n        'webuser-groups-field'\r\n    );\r\n\r\n    $layout->add_script('\r\n        function navigate_webuser_groups_visibility(access_value)\r\n        {\r\n            if(access_value==3)\r\n                $(\"#webuser-groups-field\").show();\r\n            else\r\n                $(\"#webuser-groups-field\").hide();\r\n        }\r\n\r\n        navigate_webuser_groups_visibility('.$item->access.');\r\n    ');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(array(\r\n            '<label>'.t(80, 'Permission').'</label>',\r\n            $naviforms->selectfield('permission',\r\n                array(\r\n                        0 => 0,\r\n                        1 => 1,\r\n                        2 => 2\r\n                    ),\r\n                array(\r\n                        0 => t(69, 'Published'),\r\n                        1 => t(70, 'Private'),\r\n                        2 => t(81, 'Hidden')\r\n                    ),\r\n                $item->permission\r\n            )\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(65, 'Enabled').'</label>',\r\n\t\t$naviforms->checkbox('enabled', $item->enabled),\r\n        )\r\n    );\r\n\r\n\t$website_root = $website->absolute_path(true).'/object';\r\n\tif(empty($website_root)) $website_root = NVWEB_OBJECT;\r\n\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(153, 'Embed link').'</label>',\r\n\t\t'<a href=\"'.$website_root.'?id='.$item->id.'&disposition=inline\" target=\"_blank\">'.$website_root.'?id='.$item->id.'&disposition=inline</a>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(array(\r\n        '<label>'.t(154, 'Download link').'</label>',\r\n        '<a href=\"'.$website_root.'?id='.$item->id.'&disposition=attachment\">'.$website_root.'?id='.$item->id.'&disposition=attachment</a>'\r\n        )\r\n    );\r\n\r\n\tif($item->type == 'image')\r\n\t{\r\n\t\t$navibars->add_tab(t(157, \"Image\"));\r\n\t\t\r\n\t\t$navibars->add_tab_content_row(array(\r\n            '<label>'.t(155, 'Width').' / '.t(156, 'Height').'</label>',\r\n\t\t\t$naviforms->textfield('width', $item->width, '50px'),\r\n            'x',\r\n            $naviforms->textfield('height', $item->height, '50px'),\r\n            'px'\r\n\t\t));\r\n\r\n        $original = NAVIGATE_DOWNLOAD.'?wid='.$item->website.'&id='.$item->id.'&disposition=inline';\r\n        $navibars->add_tab_content_row(\r\n            array(\r\n                '<label>'.t(274, 'Preview').'</label>',\r\n                '<div><img id=\"image-preview\" src=\"'.$original.'&seed='.core_time().'\" width=\"400px\" /></div>'\r\n            )\r\n        );\r\n\r\n        $layout->add_script('\r\n            $(\"#image-preview\").on(\"dblclick\", function()\r\n            {\r\n                navigate_image_preview($(this).attr(\"src\"), $(\"#name\").val());\r\n            });\r\n        ');\r\n\r\n        $navibars->add_tab_content_row(\r\n            array(\r\n                '<label>&nbsp;</label>'.\r\n                '<button onclick=\"navigate_media_browser_focalpoint('.$item->id.'); return false;\"><img src=\"img/icons/silk/picture-measurement.png\" align=\"absmiddle\"> '.t(540, 'Focal point').'</button>'\r\n            )\r\n        );\r\n\r\n        $original_image_link = NAVIGATE_DOWNLOAD.'?id='.$item->id.'&disposition=inline&sid='.session_id().'&seed='.time();\r\n        if(strpos(NAVIGATE_DOWNLOAD, '//')==0)\r\n            $original_image_link = $website->protocol.substr($original_image_link, 2);\r\n\r\n        // Photopea only works with https, so the \"edit with Photopea\" button will only appear if the website supports the protocol\r\n        $photopea_upload = NAVIGATE_URL.'/navigate_upload.php?wid='.$website->id.'&engine=photopea&id='.$item->id.'&session_id='.session_id().'&seed=';\r\n        if(strpos($photopea_upload, '//')==0)\r\n            $photopea_upload = $website->protocol.substr($original_image_link, 2);\r\n        $photopea_upload = str_replace('http:', 'https:', $photopea_upload);\r\n\r\n        $navibars->add_tab_content_row(array(\r\n            '<label>'.t(170, 'Edit').'</label>',\r\n            '<script language=\"javascript\" type=\"text/javascript\">\r\n\t\t\t\tfunction navigate_pixlr_edit()\r\n\t\t\t\t{\t\t\t\t    \t\t\t\t    \r\n\t\t\t\t\tpixlr.overlay.show({\r\n\t\t\t\t\t\tservice: \"editor\",\r\n\t\t\t\t\t\tloc: \"'.$user->language.'\",\r\n\t\t\t\t\t\timage: \"'.$original_image_link.'\",\r\n\t\t\t\t\t\ttitle: \"'.$item->name.'\",\r\n\t\t\t\t\t\ttarget: \"'.NAVIGATE_URL.'/navigate_upload.php?wid='.$website->id.'&engine=pixlr&id='.$item->id.'&session_id='.session_id().'&seed=\" + + new Date().getTime(),\r\n\t\t\t\t\t\texit: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=pixlr_exit&id='.$item->id.'&ts=\" + + new Date().getTime(),\r\n\t\t\t\t\t\tcredentials: true,\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\treferrer: \"Navigate CMS\",\r\n\t\t\t\t\t\ticon: \"'.NAVIGATE_URL.'/img/navigate-isotype-16x16.png\",\r\n\t\t\t\t\t\tlocktitle: true,\r\n\t\t\t\t\t\tlocktype: \"png\",\r\n\t\t\t\t\t\tredirect: \"'.NAVIGATE_URL.'/'.NAVIGATE_MAIN.'?fid=files&act=pixlr_exit&id='.$item->id.'&ts=\" + + new Date().getTime()\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// add a close button\r\n\t\t\t\t\tvar close_button = $(\\'<a href=\"#\"><span class=\"fa-stack\"><i class=\"fa fa-circle fa-stack-2x\"></i><i class=\"fa fa-close fa-stack-1x fa-inverse\"></i></span></a>\\');\r\n\t\t\t\t\tclose_button.css({\r\n\t\t\t\t\t    \"position\": \"absolute\",\r\n\t\t\t\t\t    \"right\": \"-20px\",\r\n\t\t\t\t\t    \"top\": \"-20px\",\r\n\t\t\t\t\t    \"font-size\": \"20px\",\r\n\t\t\t\t\t    \"color\": \"#222\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclose_button.on(\"click\", function()\r\n\t\t\t\t\t{\r\n\t\t\t\t        pixlr.overlay.hide();\r\n\t\t\t\t        $(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(\"div:last\").prepend(close_button);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfunction navigate_photopea_edit()\r\n\t\t\t\t{\r\n\t\t\t\t    var photopea_edit_json = \r\n\t\t\t\t    {\r\n                        \"files\": \r\n                        [\r\n                            \"'.str_replace('http:', 'https:', $original_image_link).'\"\r\n                        ],\r\n                        \"server\" : \r\n                        {\r\n\t\t                    \"url\" : \"'.$photopea_upload.'\" + new Date().getTime(),\r\n\t\t                    \"formats\" : [ \"png\" ]\r\n\t                    },\r\n\t                    \"environment\" : \r\n\t                    {\r\n\t\t                    \"rulers\"  : true, \r\n\t\t                    \"compact\" : false,        \r\n\t\t                    \"theme\"  : 2,              \r\n\t\t                    \"lang\"   : \"'.$user->language.'\",   \t\t\r\n\t\t                    \"localsave\" : true,     \r\n\t\t                    \"autosave\"  : false,         \r\n\t\t                    \"showbranding\": true\t\t                    \r\n\t                    }\r\n\t\t\t\t    };\r\n\t\t\t\t    \r\n\t\t\t\t    $(\"<iframe id=\\\"files-photopea-wrapper\\\" src=\\\"https:\\/\\/www.photopea.com?p=\" + encodeURI(JSON.stringify(photopea_edit_json)) + \"\\\"><\\/iframe>\").\r\n\t\t\t\t        dialog({\r\n\t\t\t\t            title: \"Photopea\",\r\n\t\t\t\t            modal: true,\r\n\t\t\t\t            width: \"95%\",\r\n\t\t\t\t            height: $(window).height() - 64,\r\n\t\t\t\t            open: function(event, ui)\r\n\t\t\t\t            {\r\n\t\t\t\t                $(\"#files-photopea-wrapper\").css(\"width\", \"99%\");\r\n\t\t\t\t            },\r\n\t\t\t\t            close: function()\r\n\t\t\t\t            {\r\n\t\t\t\t                $(\"#image-preview\").attr(\"src\", $(\"#image-preview\").attr(\"src\") + \"&refresh=\" + new Date().getTime());\r\n\t\t\t\t                $(\"#files-photopea-wrapper\").remove();\r\n\t\t\t\t                $(this).remove();\r\n\t\t\t\t            }\r\n\t\t\t\t        });\r\n\r\n\t\t\t\t}\r\n\t\t\t</script>\r\n\t\t\t<a href=\"#\" class=\"button\" onclick=\"navigate_pixlr_edit();\"><img src=\"'.NAVIGATE_URL.'/img/logos/pixlr.png\" width=\"100px\" height=\"42px\" /></a> '.\r\n            ($website->protocol == 'https://' && false? '<a href=\"#\" class=\"button\" onclick=\"navigate_photopea_edit();\"><img src=\"'.NAVIGATE_URL.'/img/logos/photopea.png\" width=\"100px\" height=\"42px\" /></a>' : '')\r\n        ));\r\n\r\n        $navibars->add_tab(t(334, 'Description'));\r\n\r\n        $website_languages_selector = $website->languages();\r\n        $website_languages_selector = array_merge(array('' => '('.t(443, 'All').')'), $website_languages_selector);\r\n\r\n        $navibars->add_tab_content_row(array(\r\n            '<label>'.t(63, 'Languages').'</label>',\r\n            $naviforms->buttonset(\r\n                'files_description_language_selector',\r\n                $website_languages_selector,\r\n                '',\r\n                \"navigate_tabform_language_selector(this);\"\r\n            )\r\n        ));\r\n\r\n        foreach($website->languages_list as $lang)\r\n        {\r\n            $language_info = '<span class=\"navigate-form-row-language-info\" title=\"'.language::name_by_code($lang).'\"><img src=\"img/icons/silk/comment.png\" align=\"absmiddle\" />'.$lang.'</span>';\r\n\r\n            $navibars->add_tab_content_row(\r\n                array(\r\n                    '<label>'.t(67, 'Title').' '.$language_info.'</label>',\r\n                    $naviforms->textfield('title-'.$lang, @$item->title[$lang]),\r\n                ),\r\n                '',\r\n                'lang=\"'.$lang.'\"'\r\n            );\r\n\r\n            $navibars->add_tab_content_row(\r\n                array(\r\n                    '<label>'.t(334, 'Description').' '.$language_info.'</label>',\r\n                    $naviforms->textfield('description-'.$lang, @$item->description[$lang])\r\n                ),\r\n                '',\r\n                'lang=\"'.$lang.'\"'\r\n            );\r\n        }\r\n\r\n    }\r\n\telse if($item->type=='video')\r\n\t{\r\n\t\t$navibars->add_tab(t(272, \"Video\"));\r\n\t\t/*\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(272, 'Video').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"video_'.$item->id.'\" style=\"display:block;width:640px;height:360px;float:left;\" class=\"video\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<video controls=\"controls\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'\t<source src=\"'.NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline\" type=\"'.$item->mime.'\" />',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</video>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\r\n                                            ));\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t$layout->add_script('         \r\n\t\t\t$(\"#video_'.$item->id.' video\").mediaelementplayer(\r\n\t\t\t{\r\n\t\t\t\tpluginPath: \"'.NAVIGATE_URL.'/lib/external/mediaelement/\"\r\n\t\t\t});\r\n\t\t');\t\t\t\t\r\n\t\t*/\t\r\n\t\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(272, 'Video').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"video_'.$item->id.'\" style=\"display:block;width:640px;height:360px;float:left;\" class=\"video\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"http://www.adobe.com/go/getflashplayer\"><img src=\"http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif\" alt=\"Get Adobe Flash player\" /></a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<script language=\"javascript\" type=\"text/javascript\" src=\"http://bitcast-b.bitgravity.com/player/6/functions.js\"></script>'\r\n                                            ));\r\n\t\r\n\t\t$layout->add_script('         \r\n\t\t\tvar flashvars = {};\r\n\t\t\tflashvars.AutoPlay = \"false\";\r\n\t\t\tflashvars.File = \"'.urlencode(NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline').'\";\r\n\t\t\tflashvars.Mode = \"ondemand\";\r\n\t\t\tvar params = {};\r\n\t\t\tparams.allowFullScreen = \"true\";\r\n\t\t\tparams.allowScriptAccess = \"always\";\r\n\t\t\tvar attributes = {};\r\n\t\t\tattributes.id = \"bitgravity_player_6\";\r\n\t\t\tswfobject.embedSWF(stablerelease, \"video_'.$item->id.'\", \"640\", \"360\", \"9.0.115\", \"http://bitcast-b.bitgravity.com/player/expressInstall.swf\", flashvars, params, attributes);\t\r\n\t\t');\r\n\t}\r\n\telse if($item->type=='audio')\r\n\t{\r\n\t\t$navibars->add_tab(t(31, \"Audio\"));\r\n\r\n\t\t$navibars->add_tab_content_row(array(\t'<label>'.t(31, 'Audio').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<div id=\"audio_'.$item->id.'\" style=\"display:block;float:left;\" class=\"audio\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'<audio controls=\"controls\">',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'\t<source src=\"'.NAVIGATE_DOWNLOAD.'?wid='.$website->id.'&id='.$item->id.'&disposition=inline\" type=\"'.$item->mime.'\" />',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</audio>',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\r\n                                            ));\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t$layout->add_script('         \r\n\t\t\t$(\"#audio_'.$item->id.' audio\").mediaelementplayer(\r\n\t\t\t{\r\n\t\t\t\tpluginPath: \"'.NAVIGATE_URL.'/lib/external/mediaelement/\"\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#audio_'.$item->id.'\").addClass(\"ui-state-default\");\r\n\t\t');\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\r\n\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\treturn $navibars->generate();\r\n\r\n}\r\n\r\nfunction files_media_browser($limit = 50, $offset = 0)\r\n{\r\n\tglobal $DB;\r\n    global $website;\r\n    global $user;\r\n\r\n    // access & permissions string helpers\r\n    $access = array(\r\n        0 => '', //<img src=\"img/icons/silk/page_white_go.png\" align=\"absmiddle\" title=\"'.t(254, 'Everybody').'\" />',\r\n        1 => '<img src=\"img/icons/silk/lock.png\" align=\"absmiddle\" title=\"'.t(361, 'Web users only').'\" />',\r\n        2 => '<img src=\"img/icons/silk/user_gray.png\" align=\"absmiddle\" title=\"'.t(363, 'Users who have not yet signed up or signed in').'\" />',\r\n        3 => '<img src=\"img/icons/silk/group_key.png\" align=\"absmiddle\" title=\"'.t(512, \"Selected web user groups\").'\" />'\r\n    );\r\n\r\n    $permissions = array(\r\n        0 => '', //'<img src=\"img/icons/silk/world.png\" align=\"absmiddle\" title=\"'.t(69, 'Published').'\" />',\r\n        1 => '<img src=\"img/icons/silk/world_dawn.png\" align=\"absmiddle\" title=\"'.t(70, 'Private').'\" />',\r\n        2 => '<img src=\"img/icons/silk/world_night.png\" align=\"absmiddle\" title=\"'.t(81, 'Hidden').'\" />'\r\n    );\r\n\r\n\t$wid = $_REQUEST['website'];\r\n    $ws = new website();\r\n    if(empty($wid))\r\n    {\r\n        $ws = $website;\r\n        $wid = $website->id;\r\n    }\r\n    else\r\n    {\r\n        $ws->load($wid);\r\n\r\n        // check if the current user is allowed to access the website files\r\n        if(!empty($user->websites) && !in_array($wid, $user->websites))\r\n            $ws->share_files_media_browser = false;\r\n    }\r\n\r\n\t// check if the chosen website allows sharing its files (or it's the current website)\r\n\tif( $ws->id == $website->id || $ws->share_files_media_browser == '1' )\r\n\t{\r\n\t\t$media = (empty($_REQUEST['media'])? 'image' : $_REQUEST['media']);\r\n\t\t$text = $_REQUEST['text'];\r\n\r\n\t\t$out = array();\r\n\r\n\t    $limit = $offset + $limit;\r\n\t    $offset = 0;\r\n\t    $total = 0;\r\n\r\n\t    $order = $_REQUEST['order'];\r\n\t    switch($order)\r\n\t    {\r\n\t        case 'name_ASC':\r\n\t            $order = ' name ASC';\r\n\t            break;\r\n\r\n\t        case 'name_DESC':\r\n\t            $order = ' name DESC';\r\n\t            break;\r\n\r\n\t        case 'date_added_ASC':\r\n\t            $order = ' date_added ASC';\r\n\t            break;\r\n\r\n\t        case 'date_added_DESC':\r\n\t        default:\r\n\t            $order = ' date_added DESC';\r\n\t    }\r\n\r\n\t\tif($media=='folder')\r\n\t\t{\r\n\t\t\t$parent = 0;\r\n\t\t\t$files = file::filesOnPath($_REQUEST['parent'], $wid, $order);\r\n\t\t\tif($_REQUEST['parent'] > 0)\t// add \"back\" special folder\r\n\t\t\t{\r\n\t\t\t\t$previous = $DB->query_single(\r\n\t                'parent',\r\n\t                'nv_files',\r\n\t                ' id = '.$_REQUEST['parent'].' AND website = '.$wid\r\n\t            );\r\n\t\t\t\tarray_unshift(\r\n\t                $files,\r\n\t                json_decode('{\"id\":\"'.$previous.'\",\"type\":\"folder\",\"name\":\"'.t(139, 'Back').'\",\"mime\":\"folder\\/back\",\"navipath\":\"/foo\"}')\r\n\t            );\r\n\t\t\t}\r\n\r\n\t        $total = count($files);\r\n\t        $files_shown = array();\r\n\t        for($i=$offset; $i+$offset < $limit; $i++)\r\n\t        {\r\n\t            if(empty($files[$i])) break;\r\n\r\n\t            // search by text in a folder\r\n\t            if(!empty($text))\r\n\t                if(stripos($files[$i]->name, $text)===false) continue;\r\n\r\n\t            $files_shown[] = $files[$i];\r\n\t        }\r\n\t\t}\r\n\t    else if($media=='youtube')\r\n\t    {\r\n\t        // list($files_shown, $total) = files_youtube_search($offset, $limit, $text, $order);\r\n\t    }\r\n\t\telse\r\n\t    {\r\n\t\t\tlist($files_shown, $total) = file::filesByMedia($media, $offset, $limit, $wid, $text, $order);\r\n\t    }\r\n\r\n\t\tforeach($files_shown as $f)\r\n\t\t{\r\n\t        $website_root = $ws->absolute_path(true).'/object';\r\n\t        if(empty($website_root))\r\n\t            $website_root = NVWEB_OBJECT;\r\n\t        $download_link = $website_root.'?id='.$f->id.'&disposition=attachment';\r\n\r\n\t        if($f->type == 'image')\r\n\t\t\t{\r\n\t            $f->title = json_decode($f->title, true);\r\n\t            $f->description = json_decode($f->description, true);\r\n\r\n\t\t\t\t$icon = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline&width=75&height=75';\r\n\t\t\t\t$original = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline';\r\n\t\t\t\t$out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               image-width=\"'.$f->width.'\"\r\n\t\t\t\t               image-height=\"'.$f->height.'\"\r\n\t\t\t\t               image-title=\"'.base64_encode(json_encode($f->title, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               image-description=\"'.base64_encode(json_encode($f->description, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\t\t\t\t               \r\n\t\t\t\t               id=\"file-'.$f->id.'\">\r\n\t\t\t\t               <div class=\"file-access-icons\">'.$access[$f->access].$permissions[$f->permission].'</div>\r\n\t\t\t\t               <div class=\"file-image-wrapper\"><img src=\"'.$icon.'\" title=\"'.$f->name.'\" data-src-original=\"'.$original.'\" /></div>\r\n\t                      </div>';\r\n\t\t\t}\r\n\t        else if($f->type == 'youtube')\r\n\t        {\r\n\t            $out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               image-width=\"'.$f->width.'\"\r\n\t\t\t\t               image-height=\"'.$f->height.'\"\r\n\t\t\t\t               image-title=\"'.base64_encode(json_encode($f->title, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               image-description=\"'.base64_encode(json_encode($f->description, JSON_HEX_QUOT | JSON_HEX_APOS)).'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\r\n\t\t\t\t               id=\"file-youtube#'.$f->id.'\">\r\n\t\t\t\t               <img src=\"'.$f->thumbnail->url.'\" title=\"'.$f->title.'\" width=\"75\" height=\"53\" />\r\n\t\t\t\t               <span>'.$f->title.'</span>\r\n\t                      </div>';\r\n\t        }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$icon = navibrowse::mimeIcon($f->mime, $f->type);\r\n\r\n\t\t\t\tif($f->mime == 'application/pdf' && extension_loaded('imagick'))\r\n                    $icon = NAVIGATE_DOWNLOAD.'?wid='.$wid.'&id='.$f->id.'&disposition=inline&type=thumbnail&width=75&height=75';\r\n\r\n\t\t\t\t$navipath = file::getFullPathTo($f->id);\r\n\t\t\t\t$out[] = '<div class=\"ui-corner-all draggable-'.$f->type.'\"\r\n\t\t\t\t               mediatype=\"'.$f->type.'\"\r\n\t\t\t\t               mimetype=\"'.$f->mime.'\"\r\n\t\t\t\t               navipath=\"'.$navipath.'\"\r\n\t\t\t\t               download-link=\"'.$download_link.'\"\r\n\t\t\t\t               data-file-id=\"'.$f->id.'\"\r\n\t\t\t\t               id=\"file-'.$f->id.'\">\r\n\t\t\t\t               <div class=\"file-access-icons\">'.$access[$f->access].$permissions[$f->permission].'</div>\r\n\t\t\t\t               <div class=\"file-icon-wrapper\"><img src=\"'.$icon.'\" width=\"50\" height=\"50\" title=\"'.$f->name.'\" /></div>\r\n\t                           <span style=\"clear: both; display: block; height: 0px;\"></span>'.\r\n\t                           $f->name.'\r\n\t                       </div>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif($total > $limit + $offset)\r\n\t\t{\r\n\t\t\t$out[] = '<div class=\"ui-corner-all\" id=\"file-more\">\r\n\t                    <img src=\"'.NAVIGATE_URL.'/img/icons/ricebowl/actions/forward.png\" width=\"32\" height=\"32\"  style=\"margin-top: 14px;\" />'.\r\n\t                    t(234, 'More elements').'\r\n\t                  </div>';\r\n\t\t}\r\n\r\n\t\techo implode(\"\\n\", $out);\r\n\t}\r\n\t\r\n\tsession_write_close();\r\n\t$DB->disconnect();\r\n\texit;\r\n}\r\n\r\n?>", "<?php\r\n@ini_set('max_execution_time','3600');\r\n@ini_set('max_input_time','3600');\r\n\r\nheader(\"Content-Type: application/json\");\r\n\r\nif(empty($_REQUEST['session_id']))\r\n    die('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Failed to retrieve session_id.\"}, \"id\" : \"id\"}');\r\n\r\nsession_id($_REQUEST['session_id']);\r\n\r\nrequire_once('cfg/globals.php');\r\nrequire_once('cfg/common.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/files/file.class.php');\r\n\r\n//file_put_contents(NAVIGATE_PATH . '/private/debug.txt', print_r($_REQUEST, true).print_r($_FILES, true));\r\n\r\n/* global variables */\r\nglobal $DB;\r\nglobal $user;\r\nglobal $config;\r\nglobal $layout;\r\nglobal $website;\r\n\r\n// create database connection\r\n$DB = new database();\r\nif(!$DB->connect())\r\n\tdie(APP_NAME.' # ERROR<br /> '.$DB->get_last_error());\r\n\r\n// session checking\r\nif(empty($_SESSION['APP_USER#'.APP_UNIQUE]))\r\n{\r\n\t$DB->disconnect();\r\n\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"No user logged in.\"}, \"id\" : \"id\"}');\r\n}\r\nelse\r\n{\r\n\t$user = new user();\r\n\t$user->load($_SESSION['APP_USER#'.APP_UNIQUE]);\r\n}\r\n\r\n// load the working website\r\n$website = new Website();\r\nif(!empty($_SESSION['website_active']))\r\n\t$website->load($_SESSION['website_active']);\r\nelse\t\r\n\t$website->load(); // load the first available\r\n\r\n\r\n// force loading user permissions before desconnecting from the database\r\n$foo = $user->permission(\"foo\");\r\n\r\nsession_write_close();\r\n$DB->disconnect();\r\n\r\nfunction navigate_upload_remove_temporary($targetDir, $maxFileAge=86400)\r\n{\r\n\tif(is_dir($targetDir) && ($dir = opendir($targetDir)))\r\n\t{\r\n\t\twhile (($file = readdir($dir)) !== false) \r\n\t\t{\r\n\t\t\t$filePath = $targetDir . DIRECTORY_SEPARATOR . $file;\r\n\t\t\r\n\t\t\t// Remove temp files if they are older than the max age\r\n\t\t\tif (preg_match('/\\\\.tmp$/', $file) && (filemtime($filePath) < time() - $maxFileAge))\r\n\t\t\t\t@unlink($filePath);\r\n\t\t}\r\n\t\tclosedir($dir);\r\n\t}\r\n}\r\n\r\n// HTTP headers for no cache etc\r\n/*\r\nheader('Content-type: text/plain; charset=UTF-8');\r\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\r\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\r\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\r\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\r\nheader(\"Pragma: no-cache\");\r\n*/\r\n\r\n// Settings\r\n$targetDir = NAVIGATE_PRIVATE.'/'.$website->id.'/files';\r\n$maxFileAge = 24 * 60 * 60; // Temp file age in seconds (1 day)\r\n\r\n// no maximum uploading/execution time\r\n@set_time_limit(0);\r\n\r\n// filedrop drag'n'drop engine\t\r\nif($_REQUEST['engine']=='dropzone')\r\n{\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t$tmpfilename = tempnam($targetDir, \"upload-\");\r\n\t\t$tmpfilename = basename($tmpfilename);\r\n\r\n\t\tif(count($_FILES) > 0)\r\n\t\t{\r\n\t\t\tif(!file_exists($_FILES['upload']['tmp_name']))\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Uploaded file missing.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\tif(empty($_SERVER['HTTP_ACCEPT_CHARSET']))\r\n\t\t\t\t$_SERVER['HTTP_ACCEPT_CHARSET'] = 'UTF-8';\r\n\r\n\t\t\t$original_filename = mb_convert_encoding($_FILES['upload']['name'], 'UTF-8', $_SERVER['HTTP_ACCEPT_CHARSET']);\r\n\r\n\t\t\tif(move_uploaded_file($_FILES['upload']['tmp_name'], $targetDir.'/'.$tmpfilename ) )\r\n\t\t\t{\r\n\t\t\t\techo json_encode(array(\"filename\" => $original_filename, 'temporal' => $tmpfilename));\r\n\t\t\t}\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t\tcore_terminate();\r\n\t\t}\r\n\t\telse if(isset($_GET['up']))\r\n\t\t{\r\n\t\t\tif(isset($_GET['base64']))\r\n\t\t\t{\r\n\t\t\t\t$content = base64_decode(file_get_contents('php://input'));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$content = file_get_contents('php://input');\r\n\t\t\t}\r\n\r\n\t\t\t$headers = getallheaders();\r\n\t\t\t$headers = array_change_key_case($headers, CASE_UPPER);\r\n\r\n\t\t\tif( file_put_contents( $targetDir.'/'.$tmpfilename, $content ) )\r\n\t\t\t{\r\n\t\t\t\techo json_encode(array(\"filename\" => $headers['UP-FILENAME'], 'temporal' => $tmpfilename));\r\n\t\t\t}\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t\tcore_terminate();\r\n\t\t}\r\n\t}\r\n}\r\nelse if($_REQUEST['engine']=='pixlr')\r\n{\t\r\n\tif(!empty($_REQUEST['id']) && file_exists($targetDir.'/'.$_REQUEST['id']))\r\n\t{\t\r\n\t\tif(!empty($_REQUEST['image']))\r\n\t\t{\r\n\t\t\t//file_put_contents( $targetDir.'/'.$_REQUEST['id'], $_REQUEST['image'] );\r\n\t\t\t//copy( $_REQUEST['image'], $targetDir.'/'.$_REQUEST['id'].'.pixlr' );\r\n\r\n\t\t\t// download the file even if the user loads a different page\r\n\t\t\t@ignore_user_abort(true);\r\n\t\t\t\r\n\t\t\t$size = core_filesize_curl($_REQUEST['image']);\r\n\r\n\t\t\t$content = str_pad('', 512, 'navigate_upload from '.$_REQUEST['image'].' ('.$size.') ');\t   \r\n\t\t\theader(\"HTTP/1.1 200 OK\");  \r\n\t\t\theader(\"Content-Length: \".strlen($content));  \r\n\t\t\techo $content; // output content  \r\n\t\t\theader('Connection: close');\r\n\t\t\t\r\n\t\t\t//$image = core_http_request($_REQUEST['image']);\r\n\t\t\t$image = file_get_contents($_REQUEST['image']);\r\n\t\t\tfile_put_contents($targetDir.'/'.$_REQUEST['id'].'.pixlr', $image);\r\n\r\n\t\t\tif(file_exists($targetDir.'/'.$_REQUEST['id'].'.pixlr'))\r\n\t\t\t{\r\n\t\t\t\tif(filesize($targetDir.'/'.$_REQUEST['id'].'.pixlr')!=$size)\r\n\t\t\t\t{\r\n\t\t\t\t\t@unlink($targetDir.'/'.$_REQUEST['id'].'.pixlr');\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tunlink($targetDir.'/'.$_REQUEST['id']);\r\n\t\t\t\t\trename($targetDir.'/'.$_REQUEST['id'].'.pixlr', $targetDir.'/'.$_REQUEST['id']);\r\n\t\t\t\t\t// update file info and remove old thumbnails\r\n\t\r\n\t\t\t\t\t$DB = new database();\r\n\t\t\t\t\t$DB->connect();\r\n\t\r\n\t\t\t\t\t$file = new file();\r\n\t\t\t\t\t$file->load($_REQUEST['id']);\r\n\t\t\t\t\t$file->refresh();\t\t\t\r\n\t\t\t\t\t$DB->disconnect();\t\t\t\t\r\n\t\r\n\t\t\t\t\tcore_terminate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\techo false;\r\n\tcore_terminate();\r\n}\r\nelse if($_REQUEST['engine']=='photopea')\r\n{\r\n\tif(!empty($_REQUEST['id']) && file_exists($targetDir.'/'.$_REQUEST['id']))\r\n    {\r\n\t\tif(!empty($_POST['p']))\r\n\t\t{\r\n\t\t\t// download the file even if the user loads a different page\r\n\t\t\t@ignore_user_abort(true);\r\n\r\n            $p = json_decode( $_POST[\"p\"] );\t// parse JSON\r\n            $image = $p->versions[0]->data; // always PNG\r\n            unset($p); // free memory\r\n            $image = base64_decode($image);\r\n\r\n            file_put_contents($targetDir.'/'.$_REQUEST['id'].'.photopea', $image);\r\n            unset($image);\r\n\r\n            $filesize = filesize($targetDir.'/'.$_REQUEST['id'].'.photopea');\r\n\r\n            if(file_exists($targetDir.'/'.$_REQUEST['id'].'.photopea') && $filesize > 128)\r\n\t\t\t{\r\n                unlink($targetDir.'/'.$_REQUEST['id']);\r\n                rename($targetDir.'/'.$_REQUEST['id'].'.photopea', $targetDir.'/'.$_REQUEST['id']);\r\n\r\n                header(\"HTTP/1.1 200 OK\");\r\n                header('Access-Control-Allow-Origin: *');\r\n                echo 'Image saved! ('.core_bytes($filesize).')'; // output content\r\n                header('Connection: close');\r\n\r\n                // update file info and remove old thumbnails\r\n                $DB = new database();\r\n                $DB->connect();\r\n                $file = new file();\r\n                $file->load($_REQUEST['id']);\r\n                $file->refresh();\r\n                $DB->disconnect();\r\n\t\t\t}\r\n\t\t\telse\r\n            {\r\n                @unlink($targetDir.'/'.$_REQUEST['id'].'.photopea'); // too small, ignore image\r\n\r\n                header(\"HTTP/1.1 200 OK\");\r\n                header('Access-Control-Allow-Origin: *');\r\n                echo 'ERROR!'; // output content\r\n                header('Connection: close');\r\n            }\r\n\t\t}\r\n\t}\r\n\tcore_terminate();\r\n}\r\nelse if($_REQUEST['engine']=='tinymce')\r\n{\r\n\t$DB = new database();\r\n\t$DB->connect();\r\n\r\n    $file = file::register_upload(\r\n        $_FILES['file']['tmp_name'],\r\n        $_FILES['file']['name'],\r\n        0,\r\n\t    NULL,\r\n\t    true\r\n    );\r\n\r\n\tif(!empty($file))\r\n\t\techo json_encode(array('location' => file::file_url($file->id)));\r\n\telse\r\n\t\techo json_encode(false);\r\n\t\r\n\t$DB->disconnect();\r\n\tcore_terminate();\r\n}\r\nelse\r\n{\r\n\t// plUpload engine\r\n\tif($user->permission(\"files.upload\")==\"true\")\r\n\t{\r\n\t\t// Get parameters\r\n\t\t$chunk = isset($_REQUEST[\"chunk\"]) ? $_REQUEST[\"chunk\"] : 0;\r\n\t\t$chunks = isset($_REQUEST[\"chunks\"]) ? $_REQUEST[\"chunks\"] : 0;\r\n\t\t$fileName = isset($_REQUEST[\"name\"]) ? $_REQUEST[\"name\"] : '';\r\n\r\n\t\t// Clean the fileName for security reasons\r\n\t\t$fileName = base64_encode($fileName);\r\n\r\n\t\t// Remove old temp files\r\n\t\tif (is_dir($targetDir) && ($dir = opendir($targetDir)))\r\n\t\t{\r\n\t\t\tnavigate_upload_remove_temporary($targetDir, $maxFileAge);\r\n\t\t}\r\n\t\telse\r\n\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 100, \"message\": \"Failed to open temp directory.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t// Look for the content type header\r\n\t\tif (isset($_SERVER[\"HTTP_CONTENT_TYPE\"]))\r\n\t\t\t$contentType = $_SERVER[\"HTTP_CONTENT_TYPE\"];\r\n\r\n\t\tif (isset($_SERVER[\"CONTENT_TYPE\"]))\r\n\t\t\t$contentType = $_SERVER[\"CONTENT_TYPE\"];\r\n\r\n\t\tif (strpos($contentType, \"multipart\") !== false)\r\n\t\t{\r\n\t\t\tif (isset($_FILES['file']['tmp_name']) && is_uploaded_file($_FILES['file']['tmp_name']))\r\n\t\t\t{\r\n\t\t\t\t// Open temp file\r\n\t\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, ($chunk == 0 ? \"wb\" : \"ab\"));\r\n\t\t\t\tif ($out)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Read binary input stream and append it to temp file\r\n\t\t\t\t\t$in = fopen($_FILES['file']['tmp_name'], \"rb\");\r\n\r\n\t\t\t\t\tif ($in)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile ($buff = fread($in, 4096))\r\n\t\t\t\t\t\t\tfwrite($out, $buff);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 101, \"message\": \"Failed to open input stream.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\t\t\tfclose($out);\r\n\t\t\t\t\t@unlink($_FILES['file']['tmp_name']);\r\n\r\n\t\t\t\t\t// save meta file info into database (need a new db connection, we do this in the caller script)\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 102, \"message\": \"Failed to open output stream.\"}, \"id\" : \"id\"}');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 103, \"message\": \"Failed to move uploaded file.\"}, \"id\" : \"id\"}');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Open temp file\r\n\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");\r\n\t\t\tif ($out)\r\n\t\t\t{\r\n\t\t\t\t// Read binary input stream and append it to temp file\r\n\t\t\t\t$in = fopen(\"php://input\", \"rb\");\r\n\r\n\t\t\t\tif ($in)\r\n\t\t\t\t{\r\n\t\t\t\t\twhile ($buff = fread($in, 4096))\r\n\t\t\t\t\t\tfwrite($out, $buff);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 101, \"message\": \"Failed to open input stream.\"}, \"id\" : \"id\"}');\r\n\r\n\t\t\t\tfclose($out);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdie('{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 102, \"message\": \"Failed to open output stream.\"}, \"id\" : \"id\"}');\r\n\t\t}\r\n\r\n\t\t// Return JSON-RPC response\r\n\t\tdie('{\"jsonrpc\" : \"2.0\", \"result\" : null, \"id\" : \"id\"}');\r\n\t}\r\n}\r\n\r\n?>"], "filenames": ["lib/packages/files/files.php", "navigate_upload.php"], "buggy_code_start_loc": [336, 86], "buggy_code_end_loc": [380, 159], "fixing_code_start_loc": [335, 86], "fixing_code_end_loc": [335, 135], "type": "CWE-22", "message": "An \"Unrestricted Upload of File with Dangerous Type\" issue with directory traversal in navigate_upload.php in Naviwebs Navigate CMS 2.8 allows authenticated attackers to achieve remote code execution via a POST request with engine=picnik and id=../../../navigate_info.php.", "other": {"cve": {"id": "CVE-2018-17553", "sourceIdentifier": "cve@mitre.org", "published": "2018-10-03T20:29:15.130", "lastModified": "2018-11-19T20:29:52.253", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An \"Unrestricted Upload of File with Dangerous Type\" issue with directory traversal in navigate_upload.php in Naviwebs Navigate CMS 2.8 allows authenticated attackers to achieve remote code execution via a POST request with engine=picnik and id=../../../navigate_info.php."}, {"lang": "es", "value": "Un problema de \"subida sin restricci\u00f3n de archivos con tipos peligrosos\" con salto de directorio en navigate_upload.php en Naviwebs Navigate CMS 2.8 permite que atacantes autenticados logren ejecutar c\u00f3digo de forma remota mediante una petici\u00f3n POST con engine=picnik y id=../../../navigate_info.php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}, {"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:naviwebs:navigate_cms:2.8:*:*:*:*:*:*:*", "matchCriteriaId": "2702E2BF-A94B-4B2B-9433-5BC479FA1991"}]}]}], "references": [{"url": "https://github.com/NavigateCMS/Navigate-CMS/commit/2bdcb8b3c5bb23851a2115db96585f1ac8cb2d1e", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/rapid7/metasploit-framework/pull/10704", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/45561/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/NavigateCMS/Navigate-CMS/commit/2bdcb8b3c5bb23851a2115db96585f1ac8cb2d1e"}}