{"buggy_code": ["_ = require 'underscore'\nnet = require 'net'\nSocksClient = require('socks').SocksClient\npunycode = require 'punycode'\nutil = require 'util'\n\n\n@SERVERS = require './servers.json'\n\ncleanParsingErrors = (string) =>\n\treturn string.replace(/^[:\\s]+/, '').replace(/^https?[:\\/]+/, '') || string\n\n@lookup = (addr, options, done) =>\n\tif typeof done is 'undefined' and typeof options is 'function'\n\t\tdone = options\n\t\toptions = {}\n\n\t_.defaults options,\n\t\tfollow: 2\n\t\ttimeout: 60000 # 60 seconds in ms\n\n\tdone = _.once done\n\n\tserver = options.server\n\tproxy = options.proxy\n\ttimeout = options.timeout\n\n\tif not server\n\t\tswitch true\n\t\t\twhen _.contains addr, '@'\n\t\t\t\tdone new Error 'lookup: email addresses not supported'\n\t\t\t\treturn\n\n\t\t\twhen net.isIP(addr) isnt 0\n\t\t\t\tserver = @SERVERS['_']['ip']\n\n\t\t\telse\n\t\t\t\ttld = punycode.toASCII addr\n\t\t\t\twhile true\n\t\t\t\t\tserver = @SERVERS[tld]\n\t\t\t\t\tif not tld or server\n\t\t\t\t\t\tbreak\n\t\t\t\t\ttld = tld.replace /^.+?(\\.|$)/, ''\n\n\tif not server\n\t\tdone new Error 'lookup: no whois server is known for this kind of object'\n\t\treturn\n\n\tif typeof server is 'string'\n\t\tparts = server.split ':'\n\t\tserver =\n\t\t\thost: parts[0]\n\t\t\tport: parts[1]\n\n\tif typeof proxy is 'string'\n\t\tparts = proxy.split ':'\n\t\tproxy =\n\t\t\tipaddress: parts[0]\n\t\t\tport: parseInt parts[1]\n\n\t_.defaults server,\n\t\tport: 43\n\t\tquery: \"$addr\\r\\n\"\n\n\tif proxy\n\t\t_.defaults proxy,\n\t\t\ttype: 5\n\n\n\t_lookup = (socket, done) =>\n\t\tidn = addr\n\t\tif server.punycode isnt false and options.punycode isnt false\n\t\t\tidn = punycode.toASCII addr\n\t\tif options.encoding\n\t\t\tsocket.setEncoding options.encoding\n\t\tsocket.write server.query.replace '$addr', idn\n\n\t\tdata = ''\n\t\tsocket.on 'data', (chunk) =>\n\t\t\tdata += chunk\n\n\t\tsocket.on 'timeout', =>\n\t\t\tsocket.destroy()\n\t\t\tdone new Error 'lookup: timeout'\n\n\t\tsocket.on 'error', (err) =>\n\t\t\tdone err\n\n\t\tsocket.on 'close', (err) =>\n\t\t\tif options.follow > 0\n\t\t\t\tmatch = data.replace(/\\r/gm, '').match /(ReferralServer|Registrar Whois|Whois Server|WHOIS Server|Registrar WHOIS Server):[^\\S\\n]*((?:r?whois|https?):\\/\\/)?(.*)/\n\t\t\t\tif match? and match[3] != server.host\n\t\t\t\t\toptions = _.extend {}, options,\n\t\t\t\t\t\tfollow: options.follow - 1\n\t\t\t\t\t\tserver: match[3].trim()\n\n\t\t\t\t\toptions.server = cleanParsingErrors(options.server)\n\n\t\t\t\t\t@lookup addr, options, (err, parts) =>\n\t\t\t\t\t\tif err?\n\t\t\t\t\t\t\treturn done err\n\n\t\t\t\t\t\tif options.verbose\n\t\t\t\t\t\t\tdone null, [\n\t\t\t\t\t\t\t\tserver: if ('object' == typeof server) then server.host.trim() else server.trim()\n\t\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t\t].concat(parts)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdone null, parts\n\t\t\t\t\treturn\n\n\t\t\tif options.verbose\n\t\t\t\tdone null, [\n\t\t\t\t\tserver: if ('object' == typeof server) then server.host.trim() else server.trim()\n\t\t\t\t\tdata: data\n\t\t\t\t]\n\t\t\telse\n\t\t\t\tdone null, data\n\n\tif !Number.isInteger(server.port)\n\t\tserver.port = 43\n\n\tif proxy\n\t\tSocksClient.createConnection\n\t\t\tproxy: proxy\n\t\t\tdestination:\n\t\t\t\thost: server.host\n\t\t\t\tport: server.port\n\t\t\tcommand: 'connect'\n\t\t\ttimeout: timeout\n\t\t, (err, info) =>\n\t\t\tif err?\n\t\t\t\treturn done err\n\t\t\t{socket} = info\n\t\t\tif timeout\n\t\t\t\tsocket.setTimeout timeout\n\n\t\t\t_lookup socket, done\n\n\t\t\tsocket.resume()\n\n\telse\n\t\tsockOpts =\n\t\t\thost: server.host\n\t\t\tport: server.port\n\n\t\tif options.bind\n\t\t\tsockOpts.localAddress = options.bind\n\n\t\tsocket = net.connect sockOpts\n\t\tif timeout\n\t\t\tsocket.setTimeout timeout\n\t\t_lookup socket, done\n"], "fixing_code": ["_ = require 'underscore'\nnet = require 'net'\nSocksClient = require('socks').SocksClient\npunycode = require 'punycode'\nutil = require 'util'\n\n\n@SERVERS = require './servers.json'\n\ncleanParsingErrors = (string) =>\n\treturn string.replace(/^[:\\s]+/, '').replace(/^https?[:\\/]+/, '') || string\n\n@lookup = (addr, options, done) =>\n\tif typeof done is 'undefined' and typeof options is 'function'\n\t\tdone = options\n\t\toptions = {}\n\t\t\n      if addr == '__proto__'\n              done new Error 'lookup: __proto__ is not allowed to lookup'\n\t\treturn\n\n\t_.defaults options,\n\t\tfollow: 2\n\t\ttimeout: 60000 # 60 seconds in ms\n\n\tdone = _.once done\n\n\tserver = options.server\n\tproxy = options.proxy\n\ttimeout = options.timeout\n\n\tif not server\n\t\tswitch true\n\t\t\twhen _.contains addr, '@'\n\t\t\t\tdone new Error 'lookup: email addresses not supported'\n\t\t\t\treturn\n\n\t\t\twhen net.isIP(addr) isnt 0\n\t\t\t\tserver = @SERVERS['_']['ip']\n\n\t\t\telse\n\t\t\t\ttld = punycode.toASCII addr\n\t\t\t\twhile true\n\t\t\t\t\tserver = @SERVERS[tld]\n\t\t\t\t\tif not tld or server\n\t\t\t\t\t\tbreak\n\t\t\t\t\ttld = tld.replace /^.+?(\\.|$)/, ''\n\n\tif not server\n\t\tdone new Error 'lookup: no whois server is known for this kind of object'\n\t\treturn\n\n\tif typeof server is 'string'\n\t\tparts = server.split ':'\n\t\tserver =\n\t\t\thost: parts[0]\n\t\t\tport: parts[1]\n\n\tif typeof proxy is 'string'\n\t\tparts = proxy.split ':'\n\t\tproxy =\n\t\t\tipaddress: parts[0]\n\t\t\tport: parseInt parts[1]\n\n\t_.defaults server,\n\t\tport: 43\n\t\tquery: \"$addr\\r\\n\"\n\n\tif proxy\n\t\t_.defaults proxy,\n\t\t\ttype: 5\n\n\n\t_lookup = (socket, done) =>\n\t\tidn = addr\n\t\tif server.punycode isnt false and options.punycode isnt false\n\t\t\tidn = punycode.toASCII addr\n\t\tif options.encoding\n\t\t\tsocket.setEncoding options.encoding\n\t\tsocket.write server.query.replace '$addr', idn\n\n\t\tdata = ''\n\t\tsocket.on 'data', (chunk) =>\n\t\t\tdata += chunk\n\n\t\tsocket.on 'timeout', =>\n\t\t\tsocket.destroy()\n\t\t\tdone new Error 'lookup: timeout'\n\n\t\tsocket.on 'error', (err) =>\n\t\t\tdone err\n\n\t\tsocket.on 'close', (err) =>\n\t\t\tif options.follow > 0\n\t\t\t\tmatch = data.replace(/\\r/gm, '').match /(ReferralServer|Registrar Whois|Whois Server|WHOIS Server|Registrar WHOIS Server):[^\\S\\n]*((?:r?whois|https?):\\/\\/)?(.*)/\n\t\t\t\tif match? and match[3] != server.host\n\t\t\t\t\toptions = _.extend {}, options,\n\t\t\t\t\t\tfollow: options.follow - 1\n\t\t\t\t\t\tserver: match[3].trim()\n\n\t\t\t\t\toptions.server = cleanParsingErrors(options.server)\n\n\t\t\t\t\t@lookup addr, options, (err, parts) =>\n\t\t\t\t\t\tif err?\n\t\t\t\t\t\t\treturn done err\n\n\t\t\t\t\t\tif options.verbose\n\t\t\t\t\t\t\tdone null, [\n\t\t\t\t\t\t\t\tserver: if ('object' == typeof server) then server.host.trim() else server.trim()\n\t\t\t\t\t\t\t\tdata: data\n\t\t\t\t\t\t\t].concat(parts)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdone null, parts\n\t\t\t\t\treturn\n\n\t\t\tif options.verbose\n\t\t\t\tdone null, [\n\t\t\t\t\tserver: if ('object' == typeof server) then server.host.trim() else server.trim()\n\t\t\t\t\tdata: data\n\t\t\t\t]\n\t\t\telse\n\t\t\t\tdone null, data\n\n\tif !Number.isInteger(server.port)\n\t\tserver.port = 43\n\n\tif proxy\n\t\tSocksClient.createConnection\n\t\t\tproxy: proxy\n\t\t\tdestination:\n\t\t\t\thost: server.host\n\t\t\t\tport: server.port\n\t\t\tcommand: 'connect'\n\t\t\ttimeout: timeout\n\t\t, (err, info) =>\n\t\t\tif err?\n\t\t\t\treturn done err\n\t\t\t{socket} = info\n\t\t\tif timeout\n\t\t\t\tsocket.setTimeout timeout\n\n\t\t\t_lookup socket, done\n\n\t\t\tsocket.resume()\n\n\telse\n\t\tsockOpts =\n\t\t\thost: server.host\n\t\t\tport: server.port\n\n\t\tif options.bind\n\t\t\tsockOpts.localAddress = options.bind\n\n\t\tsocket = net.connect sockOpts\n\t\tif timeout\n\t\t\tsocket.setTimeout timeout\n\t\t_lookup socket, done\n"], "filenames": ["index.coffee"], "buggy_code_start_loc": [16], "buggy_code_end_loc": [16], "fixing_code_start_loc": [17], "fixing_code_end_loc": [21], "type": "CWE-1321", "message": "A vulnerability classified as critical has been found in Furqan node-whois. Affected is an unknown function of the file index.coffee. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to launch the attack remotely. The name of the patch is 46ccc2aee8d063c7b6b4dee2c2834113b7286076. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216252.", "other": {"cve": {"id": "CVE-2020-36618", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-19T14:15:10.100", "lastModified": "2022-12-29T18:22:18.633", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical has been found in Furqan node-whois. Affected is an unknown function of the file index.coffee. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to launch the attack remotely. The name of the patch is 46ccc2aee8d063c7b6b4dee2c2834113b7286076. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216252."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-1321"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:furqansofware:node_whois:-:*:*:*:*:node.js:*:*", "matchCriteriaId": "E609A11A-A7F5-4315-8F51-5E34CA70E9BC"}]}]}], "references": [{"url": "https://github.com/FurqanSoftware/node-whois/commit/46ccc2aee8d063c7b6b4dee2c2834113b7286076", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/FurqanSoftware/node-whois/pull/105", "source": "cna@vuldb.com", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216252", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/FurqanSoftware/node-whois/commit/46ccc2aee8d063c7b6b4dee2c2834113b7286076"}}