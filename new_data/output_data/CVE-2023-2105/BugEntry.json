{"buggy_code": ["<?php defined('BASEPATH') or exit('No direct script access allowed');\n\n/* ----------------------------------------------------------------------------\n * Easy!Appointments - Online Appointment Scheduler\n *\n * @package     EasyAppointments\n * @author      A.Tselegidis <alextselegidis@gmail.com>\n * @copyright   Copyright (c) Alex Tselegidis\n * @license     https://opensource.org/licenses/GPL-3.0 - GPLv3\n * @link        https://easyappointments.org\n * @since       v1.5.0\n * ---------------------------------------------------------------------------- */\n\n/**\n * Login controller.\n *\n * Handles the login page functionality. \n *\n * @package Controllers\n */\nclass Login extends EA_Controller {\n    /**\n     * Login constructor.\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->load->library('accounts');\n        $this->load->library('email_messages');\n\n        script_vars([\n            'dest_url' => session('dest_url', site_url('calendar')),\n        ]);\n    }\n\n    /**\n     * Render the login page. \n     */\n    public function index()\n    {\n        html_vars([\n            'page_title' => lang('login'),\n            'base_url' => config('base_url'),\n            'dest_url' => session('dest_url', site_url('calendar')),\n            'company_name' => setting('company_name')\n        ]);\n        \n        $this->load->view('pages/login');\n    }\n\n    /**\n     * Validate the provided credentials and start a new session if the validation was successful. \n     */\n    public function validate()\n    {\n        try\n        {\n            $username = request('username');\n\n            if (empty($username))\n            {\n                throw new InvalidArgumentException('No username value provided.');\n            }\n\n            $password = request('password');\n\n            if (empty($password))\n            {\n                throw new InvalidArgumentException('No password value provided.');\n            }\n\n            $user_data = $this->accounts->check_login($username, $password);\n\n            if (empty($user_data))\n            {\n                throw new InvalidArgumentException('Invalid credentials provided, please try again.');\n            }\n\n            session($user_data); // Save data in the session.\n\n            json_response([\n                'success' => TRUE,\n            ]);\n        }\n        catch (Throwable $e)\n        {\n            json_exception($e);\n        }\n    }\n}\n"], "fixing_code": ["<?php defined('BASEPATH') or exit('No direct script access allowed');\n\n/* ----------------------------------------------------------------------------\n * Easy!Appointments - Online Appointment Scheduler\n *\n * @package     EasyAppointments\n * @author      A.Tselegidis <alextselegidis@gmail.com>\n * @copyright   Copyright (c) Alex Tselegidis\n * @license     https://opensource.org/licenses/GPL-3.0 - GPLv3\n * @link        https://easyappointments.org\n * @since       v1.5.0\n * ---------------------------------------------------------------------------- */\n\n/**\n * Login controller.\n *\n * Handles the login page functionality. \n *\n * @package Controllers\n */\nclass Login extends EA_Controller {\n    /**\n     * Login constructor.\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->load->library('accounts');\n        $this->load->library('email_messages');\n\n        script_vars([\n            'dest_url' => session('dest_url', site_url('calendar')),\n        ]);\n    }\n\n    /**\n     * Render the login page. \n     */\n    public function index()\n    {\n        html_vars([\n            'page_title' => lang('login'),\n            'base_url' => config('base_url'),\n            'dest_url' => session('dest_url', site_url('calendar')),\n            'company_name' => setting('company_name')\n        ]);\n        \n        $this->load->view('pages/login');\n    }\n\n    /**\n     * Validate the provided credentials and start a new session if the validation was successful. \n     */\n    public function validate()\n    {\n        try\n        {\n            $username = request('username');\n\n            if (empty($username))\n            {\n                throw new InvalidArgumentException('No username value provided.');\n            }\n\n            $password = request('password');\n\n            if (empty($password))\n            {\n                throw new InvalidArgumentException('No password value provided.');\n            }\n\n            $user_data = $this->accounts->check_login($username, $password);\n\n            if (empty($user_data))\n            {\n                throw new InvalidArgumentException('Invalid credentials provided, please try again.');\n            }\n            \n            $this->session->sess_regenerate();\n\n            session($user_data); // Save data in the session.\n\n            json_response([\n                'success' => TRUE,\n            ]);\n        }\n        catch (Throwable $e)\n        {\n            json_exception($e);\n        }\n    }\n}\n"], "filenames": ["application/controllers/Login.php"], "buggy_code_start_loc": [78], "buggy_code_end_loc": [78], "fixing_code_start_loc": [79], "fixing_code_end_loc": [81], "type": "CWE-384", "message": "Session Fixation in GitHub repository alextselegidis/easyappointments prior to 1.5.0.", "other": {"cve": {"id": "CVE-2023-2105", "sourceIdentifier": "security@huntr.dev", "published": "2023-04-15T14:15:07.703", "lastModified": "2023-04-24T19:16:05.580", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Session Fixation in GitHub repository alextselegidis/easyappointments prior to 1.5.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-384"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:easyappointments:easyappointments:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.5.0", "matchCriteriaId": "063BC3E9-AA71-49D6-9CEE-F2E7E7B9D687"}]}]}], "references": [{"url": "https://github.com/alextselegidis/easyappointments/commit/7f37350fab9d729a9350d96369ff0f453cf7b840", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/de213e0b-a227-4fc3-bbe7-0b33fbf308e1", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/alextselegidis/easyappointments/commit/7f37350fab9d729a9350d96369ff0f453cf7b840"}}