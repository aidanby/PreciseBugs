{"buggy_code": ["@using SmartStore.Web.Models.Boards;\n@model ForumPostModel\n@Html.Raw(\"<a name=\\\"{0}\\\"></a>\".FormatInvariant(Model.Id))\n\n<div class=\"block block-bordered forum-post card\" id=\"post@(Model.Id)\" data-id=\"@Model.Id\">\n    <div class=\"block-title card-header\">\n        @if (Model.CustomerId > 0)\n        {\n            if (Model.AllowViewingProfiles && !Model.IsCustomerGuest)\n            {\n                @Html.RouteLink(Model.CustomerName, \"CustomerProfile\", new { id = Model.CustomerId }, new { @class = \"username\" })\n            }\n            else\n            {\n                <span class=\"username\">@Model.CustomerName</span>\n            }\n        }\n\n        <div class=\"d-flex align-items-center\">\n            @if (Model.IsCurrentCustomerAllowedToEditPost)\n            {\n                <i class=\"far fa-edit\"></i>\n                @Html.ActionLink(T(\"Forum.EditPost\").Text, \"PostEdit\", new { id = Model.Id }, new { @class = \"edit-post-link-button\" })\n            }\n                \n            @if (Model.IsCurrentCustomerAllowedToDeletePost)\n            {\n                <i class=\"fa fa-times\"></i>\n                @Html.ActionLink(T(\"Forum.DeletePost\").Text, \"PostDelete\", new { id = Model.Id }, new { onClick = \"return confirm(\" + T(\"Common.AreYouSure\").JsText + \");\", @class = \"delete-post-link-button\" })\n            }\n            @{\n                var postLinkRoutValues = Model.CurrentTopicPage == 1\n                    ? (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName })\n                    : (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName, page = Model.CurrentTopicPage });\n            }\n            <a class=\"post-link\" title=\"@T(\"Forum.PostLinkTitle\")\" href=\"@(Url.RouteUrl(\"TopicSlug\", postLinkRoutValues))#@(Model.Id)\">\n                #@(Model.Id)\n            </a>\n        </div>\n    </div>\n\n    <div class=\"block-body card-body row@(Model.Published ? \"\" : \" disabled\")\">\n        <div class=\"post-info col-2 d-none d-sm-block\">\n            <div class=\"user-info mt-3 text-center\">\n                <div class=\"avatar\">\n                    @{ Html.RenderPartial(\"Customer.Avatar\", Model.Avatar); }\n                </div>\n                <div class=\"user-stats mt-2\">\n                    @if (Model.IsCustomerForumModerator)\n                    {\n                        <div class=\"status\">\n\t\t\t\t\t\t\t<span class=\"pr-1\">@T(\"Forum.Status\"):</span>\n\t\t\t\t\t\t\t<span class=\"stat-value\">@T(\"Forum.Moderator\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersPostCount)\n                    {\n                        <div class=\"totalposts\">\n\t\t\t\t\t\t\t<span class=\"pr-1\">@T(\"Forum.TotalPosts\"):</span>\n\t\t\t\t\t\t\t<span class=\"stat-value\">@Model.ForumPostCount.ToString(\"N0\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersJoinDate && !Model.IsCustomerGuest)\n                    {\n                        <div class=\"joined\">\n                            <span class=\"pr-1\">@T(\"Forum.Joined\"):</span>\n\t\t\t\t\t\t\t<span class=\"stat-value\">@Model.CustomerJoinDate.ToNativeString(\"d\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersLocation && !Model.IsCustomerGuest && Model.CustomerLocation.HasValue())\n                    {\n                        <div class=\"location\">\n                            <span class=\"pr-1\">@T(\"Forum.Location\"):</span>\n\t\t\t\t\t\t\t<span class=\"stat-value\">@Model.CustomerLocation</span>\n                        </div>\n                    }\n                    @if (Model.AllowPrivateMessages && !Model.IsCustomerGuest)\n\t\t\t\t    {\n                        <a class=\"btn btn btn-outline-info btn-flat button-pm mt-2\" rel=\"nofollow\" href=\"@Url.Action(\"Send\", \"PrivateMessages\", new { id = Model.CustomerId })\">\n                            <i class=\"fa fa-user\"></i>\n                            <span>@T(\"Forum.PrivateMessages.PM\")</span>\n                        </a>\n\t\t\t\t    }\n                </div>\n            </div>\n        </div>\n        <div class=\"post-content col col-sm-10\">\n            <div class=\"post-stats text-muted mb-1\">\n                <span class=\"posttime\">\n                    <span class=\"pr-1\">@T(\"Forum.Posted\"):</span>\n\t\t\t\t    <span class=\"stat-value\">@Model.PostCreatedOnStr</span>\n                </span>\n                <span class=\"votes@(Model.VoteCount > 0 ? \"\" : \" hide\")\" title=\"@T(\"Common.Liked\")\">\n                    <span class=\"pl-1 pr-1\">&middot;</span>\n                    <span><i class=\"fa fa-thumbs-up\"></i></span>\n\t\t\t\t    <span class=\"vote-count stat-value\">@Model.VoteCount.ToString(\"N0\")</span>\n                </span>\n            </div>\n            <div class=\"post-body\">\n                <div class=\"posttext\" dir=\"auto\">\n                    @Html.Raw(Model.FormattedText)\n                </div>\n                @Html.Hidden(\"Id\", Model.Id)\n            </div>\n\n            @if (Model.SignaturesEnabled && Model.FormattedSignature.HasValue())\n            {\n                <div class=\"signature text-muted\" dir=\"auto\">\n                    @Html.Raw(Model.FormattedSignature)\n                </div>\n            }\n        </div>\n    </div>\n\n    <div class=\"text-right\">\n        <div class=\"functions\">\n            <a href=\"#\" class=\"btn btn-link btn-sm font-weight-600\">\n                @T(\"Forum.Top\")\n            </a>\n            <a class=\"btn btn-outline-info btn-flat btn-sm\" href=\"@Url.Action(\"PostCreate\", new { id = Model.ForumTopicId, quote = Model.Id })\">\n                <i class=\"fa fa-quote-left\"></i>\n                <span>@T(\"Forum.QuotePost\")</span>\n            </a>\n            @if (Model.AllowVoting)\n            {\n                <button type=\"button\" class=\"btn btn-outline-success btn-flat btn-sm post-vote-button post-vote-up@(Model.Vote ? \" hide\" : \"\")\" value=\"true\">\n                    <i class=\"fa fa-thumbs-up\"></i>\n                    <span>@T(\"Common.LikeIt\")</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-danger btn-flat btn-sm post-vote-button post-vote-down@(Model.Vote ? \"\" : \" hide\")\" value=\"false\">\n                    <i class=\"fa fa-thumbs-down\"></i>\n                    <span>@T(\"Common.DoNotLikeIt\")</span>\n                </button>\n            }\n        </div>\n    </div>\n</div>\n"], "fixing_code": ["@using SmartStore.Web.Models.Boards;\n@using SmartStore.Core.Html;\n\n@model ForumPostModel\n@Html.Raw(\"<a name=\\\"{0}\\\"></a>\".FormatInvariant(Model.Id))\n\n<div class=\"block block-bordered forum-post card\" id=\"post@(Model.Id)\" data-id=\"@Model.Id\">\n    <div class=\"block-title card-header\">\n        @if (Model.CustomerId > 0)\n        {\n            if (Model.AllowViewingProfiles && !Model.IsCustomerGuest)\n            {\n                @Html.RouteLink(Model.CustomerName, \"CustomerProfile\", new { id = Model.CustomerId }, new { @class = \"username\" })\n            }\n            else\n            {\n                <span class=\"username\">@Model.CustomerName</span>\n            }\n        }\n\n        <div class=\"d-flex align-items-center\">\n            @if (Model.IsCurrentCustomerAllowedToEditPost)\n            {\n                <i class=\"far fa-edit\"></i>\n                @Html.ActionLink(T(\"Forum.EditPost\").Text, \"PostEdit\", new { id = Model.Id }, new { @class = \"edit-post-link-button\" })\n            }\n\n            @if (Model.IsCurrentCustomerAllowedToDeletePost)\n            {\n                <i class=\"fa fa-times\"></i>\n                @Html.ActionLink(T(\"Forum.DeletePost\").Text, \"PostDelete\", new { id = Model.Id }, new { onClick = \"return confirm(\" + T(\"Common.AreYouSure\").JsText + \");\", @class = \"delete-post-link-button\" })\n            }\n            @{\n                var postLinkRoutValues = Model.CurrentTopicPage == 1\n                    ? (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName })\n                    : (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName, page = Model.CurrentTopicPage });\n            }\n            <a class=\"post-link\" title=\"@T(\"Forum.PostLinkTitle\")\" href=\"@(Url.RouteUrl(\"TopicSlug\", postLinkRoutValues))#@(Model.Id)\">\n                #@(Model.Id)\n            </a>\n        </div>\n    </div>\n\n    <div class=\"block-body card-body row@(Model.Published ? \"\" : \" disabled\")\">\n        <div class=\"post-info col-2 d-none d-sm-block\">\n            <div class=\"user-info mt-3 text-center\">\n                <div class=\"avatar\">\n                    @{ Html.RenderPartial(\"Customer.Avatar\", Model.Avatar); }\n                </div>\n                <div class=\"user-stats mt-2\">\n                    @if (Model.IsCustomerForumModerator)\n                    {\n                        <div class=\"status\">\n                            <span class=\"pr-1\">@T(\"Forum.Status\"):</span>\n                            <span class=\"stat-value\">@T(\"Forum.Moderator\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersPostCount)\n                    {\n                        <div class=\"totalposts\">\n                            <span class=\"pr-1\">@T(\"Forum.TotalPosts\"):</span>\n                            <span class=\"stat-value\">@Model.ForumPostCount.ToString(\"N0\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersJoinDate && !Model.IsCustomerGuest)\n                    {\n                        <div class=\"joined\">\n                            <span class=\"pr-1\">@T(\"Forum.Joined\"):</span>\n                            <span class=\"stat-value\">@Model.CustomerJoinDate.ToNativeString(\"d\")</span>\n                        </div>\n                    }\n                    @if (Model.ShowCustomersLocation && !Model.IsCustomerGuest && Model.CustomerLocation.HasValue())\n                    {\n                        <div class=\"location\">\n                            <span class=\"pr-1\">@T(\"Forum.Location\"):</span>\n                            <span class=\"stat-value\">@Model.CustomerLocation</span>\n                        </div>\n                    }\n                    @if (Model.AllowPrivateMessages && !Model.IsCustomerGuest)\n                    {\n                        <a class=\"btn btn btn-outline-info btn-flat button-pm mt-2\" rel=\"nofollow\" href=\"@Url.Action(\"Send\", \"PrivateMessages\", new { id = Model.CustomerId })\">\n                            <i class=\"fa fa-user\"></i>\n                            <span>@T(\"Forum.PrivateMessages.PM\")</span>\n                        </a>\n                    }\n                </div>\n            </div>\n        </div>\n        <div class=\"post-content col col-sm-10\">\n            <div class=\"post-stats text-muted mb-1\">\n                <span class=\"posttime\">\n                    <span class=\"pr-1\">@T(\"Forum.Posted\"):</span>\n                    <span class=\"stat-value\">@Model.PostCreatedOnStr</span>\n                </span>\n                <span class=\"votes@(Model.VoteCount > 0 ? \"\" : \" hide\")\" title=\"@T(\"Common.Liked\")\">\n                    <span class=\"pl-1 pr-1\">&middot;</span>\n                    <span><i class=\"fa fa-thumbs-up\"></i></span>\n                    <span class=\"vote-count stat-value\">@Model.VoteCount.ToString(\"N0\")</span>\n                </span>\n            </div>\n            <div class=\"post-body\">\n                <div class=\"posttext\" dir=\"auto\">\n                    @Html.Raw(HtmlUtils.SanitizeHtml(Model.FormattedText))\n                </div>\n                @Html.Hidden(\"Id\", Model.Id)\n            </div>\n\n            @if (Model.SignaturesEnabled && Model.FormattedSignature.HasValue())\n            {\n                <div class=\"signature text-muted\" dir=\"auto\">\n                    @Html.Raw(Model.FormattedSignature)\n                </div>\n            }\n        </div>\n    </div>\n\n    <div class=\"text-right\">\n        <div class=\"functions\">\n            <a href=\"#\" class=\"btn btn-link btn-sm font-weight-600\">\n                @T(\"Forum.Top\")\n            </a>\n            <a class=\"btn btn-outline-info btn-flat btn-sm\" href=\"@Url.Action(\"PostCreate\", new { id = Model.ForumTopicId, quote = Model.Id })\">\n                <i class=\"fa fa-quote-left\"></i>\n                <span>@T(\"Forum.QuotePost\")</span>\n            </a>\n            @if (Model.AllowVoting)\n            {\n                <button type=\"button\" class=\"btn btn-outline-success btn-flat btn-sm post-vote-button post-vote-up@(Model.Vote ? \" hide\" : \"\")\" value=\"true\">\n                    <i class=\"fa fa-thumbs-up\"></i>\n                    <span>@T(\"Common.LikeIt\")</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-danger btn-flat btn-sm post-vote-button post-vote-down@(Model.Vote ? \"\" : \" hide\")\" value=\"false\">\n                    <i class=\"fa fa-thumbs-down\"></i>\n                    <span>@T(\"Common.DoNotLikeIt\")</span>\n                </button>\n            }\n        </div>\n    </div>\n</div>\n"], "filenames": ["src/Presentation/SmartStore.Web/Views/Boards/Partials/_ForumPost.cshtml"], "buggy_code_start_loc": [1], "buggy_code_end_loc": [102], "fixing_code_start_loc": [2], "fixing_code_end_loc": [104], "type": "NVD-CWE-noinfo", "message": "An issue was discovered in Smartstore (aka SmartStoreNET) through 4.1.1. Views/Boards/Partials/_ForumPost.cshtml does not call HtmlUtils.SanitizeHtml on certain text for a forum post.", "other": {"cve": {"id": "CVE-2021-32608", "sourceIdentifier": "cve@mitre.org", "published": "2021-05-12T15:15:07.743", "lastModified": "2022-11-09T03:32:39.810", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in Smartstore (aka SmartStoreNET) through 4.1.1. Views/Boards/Partials/_ForumPost.cshtml does not call HtmlUtils.SanitizeHtml on certain text for a forum post."}, {"lang": "es", "value": "Se detect\u00f3 un problema en Smartstore (tambi\u00e9n se conoce como SmartStoreNET) hasta versiones 4.1.1. El archivo Views/Boards/Partials/_ForumPost.cshtml no llama a la funci\u00f3n HtmlUtils.SanitizeHtml en determinado texto para una publicaci\u00f3n del foro"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:smartstore:smartstore:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.1.1", "matchCriteriaId": "AC3913BE-40B9-4F22-B649-585745D07E47"}]}]}], "references": [{"url": "https://blog.sonarsource.com/smartstorenet-malicious-message-leading-to-e-commerce-takeover/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/smartstore/SmartStoreNET/commit/ae03d45e23734555a2aef0b0c3d33c21e076c20f", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/smartstore/SmartStoreNET/commit/ae03d45e23734555a2aef0b0c3d33c21e076c20f"}}