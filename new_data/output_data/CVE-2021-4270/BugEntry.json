{"buggy_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Web;\nusing System.Web.Mvc;\nusing System.Web.Mvc.Html;\n\nnamespace ImprintCMS.Models\n{\n    public static class ViewHelpers\n    {\n\n        public static string ControllerName(this ViewContext source)\n        {\n            var name = source.RouteData.Values[\"controller\"] as string;\n            if (string.IsNullOrWhiteSpace(name)) return null;\n            return name;\n        }\n\n        public static string ActionName(this ViewContext source)\n        {\n            var name = source.RouteData.Values[\"action\"] as string;\n            if (string.IsNullOrWhiteSpace(name)) return null;\n            return name;\n        }\n\n        public static bool IsForController(this ViewContext context, string name)\n        {\n            return context.ControllerName().Equals(name, StringComparison.InvariantCultureIgnoreCase);\n        }\n\n        public static bool IsForAction(this ViewContext context, string name)\n        {\n            return context.ActionName().Equals(name, StringComparison.InvariantCultureIgnoreCase);\n        }\n\n        public static HtmlString ToRichText(this string source)\n        {\n            source = source.Replace(\"[score]\", \"<span class=\\\"score level\").Replace(\"[/score]\", \"\\\">[score]</span>\");\n            return new HtmlString(source);\n        }\n\n        public static string ToBookListDate(this DateTime date)\n        {\n            if (date <= DateTime.Today) return SitePhrases.LabelIsReleased;\n            var formatString = SitePhrases.LabelToBeReleased + \" {0} \" + date.ToString(\"MMMM\").ToLowerInvariant();\n            if (date.Day < 11) return string.Format(formatString, SitePhrases.UnitMonthPrimo);\n            if (date.Day < 21) return string.Format(formatString, SitePhrases.UnitMonthMedio);\n            return string.Format(formatString, SitePhrases.UnitMonthUltimo);\n        }\n\n        public static HtmlString RichTextSection(this HtmlHelper helper, string content, string heading)\n        {\n            if (string.IsNullOrWhiteSpace(content)) return null;\n            var buffer = \"<section>\";\n            if (!string.IsNullOrWhiteSpace(heading)) buffer += \"\\n\\t<h2>\" + heading + \"</h2>\";\n            buffer += \"\\n\\t\" + content.ToRichText();\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString RichTextSection(this HtmlHelper helper, string content)\n        {\n            return RichTextSection(helper, content, string.Empty);\n        }\n\n        public static HtmlString RelatedArticlesSection(this HtmlHelper helper, IEnumerable<Article> articles, string subjectName)\n        {\n            if (!articles.Any(_ => _.IsVisible)) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"relatedarticles\\\">\";\n            buffer += \"\\n\\t<h2>\" + string.Format(SitePhrases.HeadingArticlesAbout, subjectName) + \"</h2>\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var article in articles.OrderByDescending(_ => _.Date))\n            {\n                buffer += \"\\n\\t\\t<li><a href=\\\"\" + urlHelper.Action(\"article\", \"home\", new { id = article.Id }) + \"\\\">\" + article.Title + \"</a></li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookTitleSection(this HtmlHelper helper, Book book)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"title\\\">\";\n            buffer += \"\\n\\t<ul class=\\\"relations\\\">\";\n            foreach (var relation in book.Relations.OrderBy(r => r.SequenceIdentifier))\n            {\n                if (relation.Person.HasPage)\n                {\n                    buffer += \"\\n\\t\\t<li><a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = relation.PersonId }) + \"\\\">\" + relation.PersonName + \"</a></li>\";\n                }\n                else\n                {\n                    buffer += \"\\n\\t\\t<li>\" + relation.PersonName + \"</li>\";\n                }\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n\\t<h1>\" + book.Title + \"</h1>\";\n            if (!string.IsNullOrWhiteSpace(book.Subtitle))\n            {\n                buffer += \"\\n\\t<p class=\\\"subtitle\\\">\" + book.Subtitle + \"</p>\";\n            }\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookExcerptSection(this HtmlHelper helper, Book book)\n        {\n            if (book.ExcerptId == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"excerpt\\\">\";\n            buffer += \"\\n\\t<p><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = book.UploadedFile.Category, fileName = book.UploadedFile.FileName }) + \"\\\">\" + string.Format(SitePhrases.LabelExcerpt, book.Title) + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookAudioExcerptSection(this HtmlHelper helper, Book book)\n        {\n            if (book.AudioExcerptId == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"audioexcerpt\\\">\";\n            buffer += \"\\n\\t<audio controls=\\\"true\\\" src=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = book.UploadedFile1.Category, fileName = book.UploadedFile1.FileName }) + \"\\\">\" + SitePhrases.LabelAudioExcerptPlaceholder + \"</audio>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookCoverSection(this HtmlHelper helper, Book book)\n        {\n            if (!book.Editions.Any(_ => _.LargeCoverId != null)) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var edition = book.Editions.Where(e => e.LargeCoverId != null).OrderBy(e => e.Number).Last();\n            var buffer = \"<section class=\\\"cover\\\">\";\n            buffer += \"\\n\\t\" + CoverImage(helper, edition);\n            buffer += \"\\n\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = edition.UploadedFile.Category, fileName = edition.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargeCover + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionMetadataSection(this HtmlHelper helper, Edition edition)\n        {\n            var buffer = \"<section class=\\\"metadata\\\">\";\n            buffer += \"\\n\\t<h2>\" + edition.Binding.Name + \"</h2>\";\n            if (!string.IsNullOrWhiteSpace(edition.AdditionalInfo)) buffer += \"\\n\\t<p class=\\\"additionalinfo\\\">\" + edition.AdditionalInfo + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"isbn\\\">\" + string.Format(SitePhrases.LabelIsbn, edition.Isbn.AsIsbn()) + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"releaseyear\\\">\" + (edition.Binding.HideEditionNumber ? edition.ReleaseDate.Year.ToString(\"\") : string.Format(SitePhrases.LabelEditionAndYear, edition.Number, edition.ReleaseDate.Year)) + \"</p>\";\n            if (edition.PageCount != null) buffer += \"\\n\\t<p class=\\\"pagecount\\\">\" + string.Format(SitePhrases.UnitPages, edition.PageCount) + \"</p>\";\n            if (edition.Price != null) buffer += \"\\n\\t<p class=\\\"price\\\">\" + string.Format(SitePhrases.UnitPrice, edition.Price) + \"</p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionPurchaseOptionsSection(this HtmlHelper helper, Edition edition, IEnumerable<ExternalStore> stores)\n        {\n            if (!edition.IsForSale) return new HtmlString(\"<section class=\\\"purchaseoptions\\\">\\n\\t<p class=\\\"notforsale\\\">\" + (!string.IsNullOrWhiteSpace(edition.AlternativeNotForSaleMessage) ? edition.AlternativeNotForSaleMessage : SitePhrases.LabelNotForSale) + \"</p>\\n</section>\");\n            if (!edition.Binding.UsesExternalStores) return new HtmlString(\"<section class=\\\"purchaseoptions\\\">\\n\\t<p class=\\\"addtobasket\\\">\" + helper.ActionLink(SitePhrases.LabelAddToShop, \"add\", \"shop\", new { id = edition.Id }, new { @class = \"addtobasket\" }) + \"</p>\\n</section>\");\n            var buffer = \"<section class=\\\"purchaseoptions\\\">\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var store in edition.Binding.SupportedStores(stores).OrderBy(_ => _.SequenceIdentifier))\n            {\n                buffer += \"\\n\\t\\t<li><a href=\\\"\" + string.Format(\"{0}{1}{2}\", store.UrlPrefix, edition.Isbn, store.UrlPostfix) + \"\\\" target=\\\"_blank\\\">\" + string.Format(SitePhrases.LabelBuyFrom, store.Name) + \"</a></li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonBooksSection(this HtmlHelper helper, Person person)\n        {\n            var relationsToShow = person.Relations.Where(_ => _.Role.ShowBookList && _.Book.IsVisible);\n            if (!relationsToShow.Any()) return null;\n            var buffer = \"<section class=\\\"books\\\">\";\n            foreach (var role in relationsToShow.GroupBy(_ => _.Role).OrderBy(_ => _.Key.SequenceIdentifier))\n            {\n                buffer += \"\\n\\t<h2>\" + (role.Key.BookListHeading ?? role.Key.Name) + \"</h2>\";\n                buffer += \"\\n\\t<ul>\";\n                foreach (var book in role.Select(_ => _.Book).OrderBy(_ => _.CachedReleaseYear))\n                {\n                    buffer += \"\\n\\t\\t<li>\" + BookPersonPageEntry(helper, book) + \"</li>\";\n                }\n                buffer += \"\\n\\t</ul>\";\n            }\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonMainImageSection(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"mainimage\\\">\";\n            buffer += \"\\n\\t\" + PersonImage(helper, person);\n            if (!string.IsNullOrWhiteSpace(person.MainImage.Photographer)) buffer += \"\\n\\t<p class=\\\"photographer\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, person.MainImage.Photographer) + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = person.MainImage.UploadedFile.Category, fileName = person.MainImage.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargePortrait + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonSecondaryImagesSection(this HtmlHelper helper, Person person)\n        {\n            if (person.PersonImages.Count() < 2) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"secondaryimages\\\">\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var image in person.PersonImages.OrderBy(_ => _.SequenceIdentifier).Skip(1))\n            {\n                buffer += \"\\n\\t\\t<li>\";\n                buffer += \"\\n\\t\\t\\t\" + PersonImage(helper, person, image.LargeImageId);\n                if (!string.IsNullOrWhiteSpace(image.Photographer)) buffer += \"\\n\\t\\t\\t<p class=\\\"photographer\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, image.Photographer) + \"</p>\";\n                buffer += \"\\n\\t\\t\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = image.UploadedFile.Category, fileName = image.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargePortrait + \"</a></p>\";\n                buffer += \"\\n\\t\\t</li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonLinkCard(this HtmlHelper helper, Person person)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = person.Id }) + \"\\\" class=\\\"linkcard person\\\">\";\n            buffer += \"\\n\\t\" + PersonThumbnail(helper, person);\n            if (person.MainImage == null) buffer += \"<span class=\\\"imageplaceholder\\\"></span>\";\n            buffer += \"\\n\\t<p class=\\\"name\\\">\" + person.FullName + \"</p>\";\n            buffer += \"\\n</a>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonLinkCardList(this HtmlHelper helper, IEnumerable<Person> people)\n        {\n            if (!people.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist people\\\">\";\n            foreach (var person in people)\n            {\n                buffer += \"\\n<li>\";\n                buffer += \"\\n\" + PersonLinkCard(helper, person);\n                buffer += \"\\n</li>\";\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PeopleAsGroupedCards(this HtmlHelper helper, IEnumerable<Person> people)\n        {\n            if (!people.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist people\\\">\";\n            foreach (var peopleUnderLetter in people.GroupBy(_ => _.LastName[0]))\n            {\n                buffer += \"\\n<li class=\\\"groupingkey\\\">\" + peopleUnderLetter.Key + \"</li>\";\n                foreach (var person in peopleUnderLetter)\n                {\n                    buffer += \"\\n<li>\";\n                    buffer += \"\\n\" + PersonLinkCard(helper, person);\n                    buffer += \"\\n</li>\";\n                }\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionLinkCard(this HtmlHelper helper, Edition edition, bool showReleaseDate = false, bool showBlurb = false)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = edition.BookId }) + \"\\\" class=\\\"linkcard book\\\">\";\n            buffer += \"\\n\\t\" + CoverImage(helper, edition);\n            buffer += \"\\n\\t<p class=\\\"people\\\">\" + edition.Book.RelationNames() + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"title\\\">\" + edition.Book.Title + \"</p>\";\n            if (!string.IsNullOrWhiteSpace(edition.Book.Subtitle))\n            {\n                buffer += \"\\n\\t<p class=\\\"subtitle\\\">\" + edition.Book.Subtitle + \"</p>\";\n            }\n            if (showReleaseDate)\n            {\n                buffer += \"\\n\\t<p class=\\\"\" + string.Format(\"date{0}\", edition.ReleaseDate > DateTime.Today ? \" tobereleased\" : string.Empty) + \"\\\">\" + edition.ReleaseDate.ToBookListDate() + \"</p>\";\n            }\n            if (!string.IsNullOrWhiteSpace(edition.Blurb) && showBlurb)\n            {\n                buffer += \"\\n\\t<p class=\\\"blurb\\\">\" + edition.Blurb.ToRichText() + \"</p>\";\n            }\n            if (edition.Book.IsDebut)\n            {\n                buffer += \"\\n\\t<p class=\\\"isdebut\\\">\" + SitePhrases.LabelIsDebut + \"</p>\";\n            }\n            buffer += \"\\n</a>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionLinkCardList(this HtmlHelper helper, IEnumerable<Edition> editions, bool showReleaseDate = false, bool showBlurb = false)\n        {\n            if (!editions.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist editions\\\">\";\n            foreach (var edition in editions)\n            {\n                buffer += \"\\n<li>\";\n                buffer += \"\\n\" + EditionLinkCard(helper, edition, showReleaseDate, showBlurb);\n                buffer += \"\\n</li>\";\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookListAsCards(this HtmlHelper helper, BookList list)\n        {\n            return EditionLinkCardList(helper, list.BookListMemberships.OrderBy(m => m.SequenceIdentifier).Where(m => m.Edition.LargeCoverId != null).Select(m => m.Edition), showReleaseDate: true, showBlurb: true);\n        }\n\n        public static HtmlString BooksAsCards(this HtmlHelper helper, IEnumerable<Book> books)\n        {\n            var editions = books.Where(_ => _.Editions.Any(e => e.LargeCoverId != null)).Select(_ => _.Editions.Where(e => e.LargeCoverId != null).OrderBy(e => e.Number).Last());\n            return EditionLinkCardList(helper, editions, showReleaseDate: false, showBlurb: false);\n        }\n\n        public static HtmlString PersonThumbnail(this HtmlHelper helper, int ImageId, string name)\n        {\n            var legend = helper.Encode(string.Format(SitePhrases.LabelAuthorImage, name));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedthumbnail\", \"upload\", new { id = ImageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"person thumbnail\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString PersonThumbnail(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            return PersonThumbnail(helper, person.MainImage.LargeImageId, person.FullName);\n        }\n\n        public static HtmlString PersonImage(this HtmlHelper helper, Person person, int imageId)\n        {\n            var legend = helper.Encode(string.Format(SitePhrases.LabelAuthorImage, person.FullName));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedportrait\", \"upload\", new { id = imageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"person\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString PersonImage(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            return PersonImage(helper, person, person.MainImage.LargeImageId);\n        }\n\n        public static HtmlString CoverImage(this HtmlHelper helper, Edition edition)\n        {\n            if (edition.LargeCoverId == null) return null;\n            var legend = helper.Encode(string.Format(SitePhrases.LabelCoverImage, edition.Book.Title));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedcover\", \"upload\", new { id = edition.LargeCoverId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"cover\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString ArticleImage(this HtmlHelper helper, Article article)\n        {\n            if (article.ImageId == null) return null;\n            var legend = helper.Encode(string.Format(SitePhrases.LabelArticleImage, article.Title));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedarticleimage\", \"upload\", new { id = article.ImageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"article\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString ArticleChosenImage(this HtmlHelper helper, Article article)\n        {\n            switch (article.ImageType())\n            {\n                case ArticleImageTypes.ArticleImage:\n                    return ArticleImage(helper, article);\n                case ArticleImageTypes.BookCover:\n                    return CoverImage(helper, article.ImageEdition);\n                case ArticleImageTypes.PersonThumbnail:\n                    return PersonThumbnail(helper, article.ImagePerson);\n                default:\n                    return null;\n            }\n        }\n\n        public static HtmlString ArticleChosenImageInLink(this HtmlHelper helper, Article article)\n        {\n            if (ArticleChosenImage(helper, article) != null)\n            {\n                var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n                return new HtmlString(\"<a href=\\\"\" + urlHelper.Action(\"article\", \"home\", new { id = article.Id }) + \"\\\">\" + ArticleChosenImage(helper, article) + \"</a>\");\n            }\n            return null;\n        }\n\n        public static HtmlString ArticleChosenImageSection(this HtmlHelper helper, Article article)\n        {\n            if (article.ImageType() == ArticleImageTypes.None) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"image\";\n            if (article.ImageType() == ArticleImageTypes.PersonThumbnail) buffer += \" thumbnail\";\n            buffer += \"\\\">\";\n            buffer += \"\\n\\t\" + ArticleChosenImage(helper, article);\n            if (article.ImageType() == ArticleImageTypes.PersonThumbnail && !string.IsNullOrWhiteSpace(article.ImagePerson.MainImage.Photographer)) buffer += \"\\n\\t<p class=\\\"photographer article\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, article.ImagePerson.MainImage.Photographer) + \"</p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString ArticleLinks(this HtmlHelper helper, Article article)\n        {\n            var people = article.PersonToArticles.Where(p => p.Person.IsVisible && p.Person.HasPage).OrderBy(p => p.SequenceIdentifier).Select(p => p.Person);\n            var books = article.BookToArticles.Where(b => b.Book.IsVisible).OrderBy(b => b.SequenceIdentifier).Select(b => b.Book);\n            if (!people.Any() && !books.Any()) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<ul class=\\\"links\\\">\";\n            foreach (var person in people)\n            {\n                buffer += \"\\n\\t<li>\";\n                buffer += \"\\n\\t\\t<a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = person.Id }) + \"\\\">\" + person.FullName + \"</a>\";\n                buffer += \"\\n\\t</li>\";\n            }\n            foreach (var book in books)\n            {\n                buffer += \"\\n\\t<li>\";\n                buffer += \"\\n\\t\\t<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = book.Id }) + \"\\\">\" + book.Title + \"</a>\";\n                buffer += \"\\n\\t</li>\";\n            }\n            buffer += \"\\n</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static string RelationNames(this Book book)\n        {\n            return string.Join(\" / \", book.Relations.OrderBy(r => r.SequenceIdentifier).Select(r => r.PersonName));\n        }\n\n        public static HtmlString ImageDownload(this HtmlHelper helper, string url, string label, string notice)\n        {\n            if (string.IsNullOrWhiteSpace(url)) return null;\n            if (string.IsNullOrWhiteSpace(notice)) return new HtmlString(\"<a href=\\\"\" + url + \"\\\" class=\\\"imagedownload\\\">\" + helper.Encode(label) + \"</a>\");\n            return new HtmlString(\"<a href=\\\"\" + url + \"\\\" class=\\\"imagedownload withnotice\\\" data-notice=\\\"\" + notice + \"\\\" data-acceptlabel=\\\"\" + SitePhrases.LabelProceedToDownload + \"\\\" data-cancellabel=\\\"\" + SitePhrases.LabelCancel + \"\\\">\" + helper.Encode(label) + \"</a>\");\n        }\n\n        public static HtmlString DeleteConfirmation(this HtmlHelper helper, string name)\n        {\n            return new HtmlString(Phrases.LabelDeleteConfirmationPrefix + \" <em>\" + helper.Encode(name) + \"</em>\" + Phrases.LabelDeleteConfirmationSuffix);\n        }\n\n        public static HtmlString RemoveConfirmation(this HtmlHelper helper, string name, string container)\n        {\n            return new HtmlString(Phrases.LabelRemoveConfirmationPrefix + \" <em>\" + helper.Encode(name) + \"</em> \" + Phrases.LabelRemoveConfirmationMiddlePart + \" <em>\" + helper.Encode(container) + \"</em>\" + Phrases.LabelRemoveConfirmationSuffix);\n        }\n\n        public static HtmlString DeleteDependencies(this HtmlHelper helper, string name)\n        {\n            return new HtmlString(Phrases.LabelDeleteDependenciesPrefix + \" <em>\" + helper.Encode(name) + \"</em>\" + Phrases.LabelDeleteDependenciesSuffix);\n        }\n\n        public static HtmlString Twitter(this HtmlHelper helper, string message, string hashtags)\n        {\n            return new HtmlString(\"<a href=\\\"https://twitter.com/share\\\" class=\\\"twitter-share-button\\\" data-text=\\\"\" + HttpUtility.HtmlEncode(message) + \"\\\" data-lang=\\\"en\\\" data-hashtags=\\\"\" + hashtags + \"\\\">Tweet</a>\\n<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src='//platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document,'script','twitter-wjs');</script>\");\n        }\n\n        public static HtmlString Facebook(this HtmlHelper helper)\n        {\n            var url = helper.ViewContext.RequestContext.HttpContext.Request.Url;\n            return new HtmlString(\"<iframe src=\\\"https://www.facebook.com/plugins/like.php?href=\" + url + \"&amp;send=false&amp;layout=button_count&amp;width=450&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\" style=\\\"border:none; overflow:hidden; width:450px; height:21px;\\\" allowTransparency=\\\"true\\\"></iframe>\");\n        }\n\n        public static HtmlString GoogleAnalytics(this HtmlHelper helper, string trackingCode)\n        {\n            if (string.IsNullOrWhiteSpace(trackingCode)) return null;\n            return new HtmlString(\"\\n<script type=\\\"text/javascript\\\">\\n\\tvar gaJsHost = ((\\\"https:\\\" == document.location.protocol) ? \\\"https://ssl.\\\" : \\\"http://www.\\\");\\n\\tdocument.write(unescape(\\\"%3Cscript src='\\\" + gaJsHost + \\\"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\\\"));\\n</script>\\n<script type=\\\"text/javascript\\\">\\n\\ttry {\\n\\t\\tvar pageTracker = _gat._getTracker(\\\"\" + trackingCode + \"\\\");\\n\\t\\tpageTracker._trackPageview();\\n\\t} catch(err) {}\\n</script>\");\n        }\n\n        public static HtmlString SearchForm(this HtmlHelper helper, string action, string query)\n        {\n            return new HtmlString(string.Format(\n                @\"<form method=\"\"get\"\" action=\"\"{0}\"\" id=\"\"searchform\"\">\n<fieldset>\n\t<p>\n\t\t<input type=\"\"search\"\" name=\"\"q\"\" id=\"\"query\"\" value=\"\"{1}\"\" placeholder=\"\"{2}\"\" />\n\t\t<input type=\"\"submit\"\" id=\"\"button\"\" value=\"\"{3}\"\" /></p>\n</fieldset>\n</form>\", action, query, SitePhrases.LabelSearchPlaceholder, SitePhrases.LabelSearch));\n        }\n\n        public static HtmlString Legend(this HtmlHelper helper, string text)\n        {\n            return new HtmlString(\"<span class=\\\"widget legend\\\" title=\\\"\" + helper.Encode(text) + \"\\\">\" + SitePhrases.LabelLegendPlaceholder + \"</span>\");\n        }\n\n        public static HtmlString Email(this HtmlHelper helper, string email)\n        {\n            return new HtmlString(\"<a href=\\\"mailto:\" + email + \"\\\">\" + email + \"</a>\");\n        }\n\n        public static HtmlString EditShortcut(this HtmlHelper helper)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var actionUrl = urlHelper.Action(\"index\", \"admin\");\n            var actionLabel = Phrases.PagenameAdmin;\n            if (helper.ViewContext.IsForController(\"books\") && helper.ViewContext.IsForAction(\"details\"))\n            {\n                actionUrl = urlHelper.Action(\"editbook\", \"admin\", new { id = helper.ViewContext.RouteData.Values[\"id\"] as string }, null);\n                actionLabel = Phrases.PagenameEditBook;\n            }\n            if (helper.ViewContext.IsForController(\"authors\") && helper.ViewContext.IsForAction(\"details\"))\n            {\n                actionUrl = urlHelper.Action(\"editperson\", \"admin\", new { id = helper.ViewContext.RouteData.Values[\"id\"] as string }, null);\n                actionLabel = Phrases.PagenameEditPerson;\n            }\n            if (helper.ViewContext.HttpContext.Request.Url == null) return null;\n            return new HtmlString(String.Format(\n                @\"\n<div id=\"\"editshortcut\"\">\n    <a href=\"\"{0}\"\">{1}</a>\n    |\n    <a href=\"\"{2}\"\">{3}</a>\n</div>\", actionUrl, actionLabel, urlHelper.Action(\"logout\", \"account\", new { ReturnUrl = helper.ViewContext.HttpContext.Request.Url.AbsolutePath }, null), Phrases.LabelLogOutSimple));\n        }\n\n        public static HtmlString RelationLinkOrName(this HtmlHelper helper, Relation relation)\n        {\n            return relation.Person.HasPage\n                ? helper.ActionLink(relation.ReversePersonName, \"details\", \"authors\", new { id = relation.PersonId }, null)\n                : new HtmlString(relation.ReversePersonName);\n        }\n\n        public static HtmlString BookPersonPageEntry(this HtmlHelper helper, Book book)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            if (book.HasExternalPublisher)\n            {\n                return new HtmlString(String.Format(\"{0}{1}. {2}, {3}\",\n                      book.Title,\n                      !String.IsNullOrWhiteSpace(book.Subtitle) ? String.Format(\". {0}\", book.Subtitle) : string.Empty,\n                      book.ExternalPublisher,\n                      book.CachedReleaseYear));\n            }\n            return new HtmlString(String.Format(\"{0}{1}, {2}\",\n                \"<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = book.Id }, null) + \"\\\">\" + book.Title + \"</a>\",\n                !String.IsNullOrWhiteSpace(book.Subtitle) ? String.Format(\". {0}\", book.Subtitle) : string.Empty,\n                book.CachedReleaseYear));\n        }\n\n        public static string ToWord(this bool source)\n        {\n            return source ? Phrases.UnitYes : Phrases.UnitNo;\n        }\n\n    }\n\n}"], "fixing_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Web;\nusing System.Web.Mvc;\nusing System.Web.Mvc.Html;\n\nnamespace ImprintCMS.Models\n{\n    public static class ViewHelpers\n    {\n\n        public static string ControllerName(this ViewContext source)\n        {\n            var name = source.RouteData.Values[\"controller\"] as string;\n            if (string.IsNullOrWhiteSpace(name)) return null;\n            return name;\n        }\n\n        public static string ActionName(this ViewContext source)\n        {\n            var name = source.RouteData.Values[\"action\"] as string;\n            if (string.IsNullOrWhiteSpace(name)) return null;\n            return name;\n        }\n\n        public static bool IsForController(this ViewContext context, string name)\n        {\n            return context.ControllerName().Equals(name, StringComparison.InvariantCultureIgnoreCase);\n        }\n\n        public static bool IsForAction(this ViewContext context, string name)\n        {\n            return context.ActionName().Equals(name, StringComparison.InvariantCultureIgnoreCase);\n        }\n\n        public static HtmlString ToRichText(this string source)\n        {\n            source = source.Replace(\"[score]\", \"<span class=\\\"score level\").Replace(\"[/score]\", \"\\\">[score]</span>\");\n            return new HtmlString(source);\n        }\n\n        public static string ToBookListDate(this DateTime date)\n        {\n            if (date <= DateTime.Today) return SitePhrases.LabelIsReleased;\n            var formatString = SitePhrases.LabelToBeReleased + \" {0} \" + date.ToString(\"MMMM\").ToLowerInvariant();\n            if (date.Day < 11) return string.Format(formatString, SitePhrases.UnitMonthPrimo);\n            if (date.Day < 21) return string.Format(formatString, SitePhrases.UnitMonthMedio);\n            return string.Format(formatString, SitePhrases.UnitMonthUltimo);\n        }\n\n        public static HtmlString RichTextSection(this HtmlHelper helper, string content, string heading)\n        {\n            if (string.IsNullOrWhiteSpace(content)) return null;\n            var buffer = \"<section>\";\n            if (!string.IsNullOrWhiteSpace(heading)) buffer += \"\\n\\t<h2>\" + heading + \"</h2>\";\n            buffer += \"\\n\\t\" + content.ToRichText();\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString RichTextSection(this HtmlHelper helper, string content)\n        {\n            return RichTextSection(helper, content, string.Empty);\n        }\n\n        public static HtmlString RelatedArticlesSection(this HtmlHelper helper, IEnumerable<Article> articles, string subjectName)\n        {\n            if (!articles.Any(_ => _.IsVisible)) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"relatedarticles\\\">\";\n            buffer += \"\\n\\t<h2>\" + string.Format(SitePhrases.HeadingArticlesAbout, subjectName) + \"</h2>\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var article in articles.OrderByDescending(_ => _.Date))\n            {\n                buffer += \"\\n\\t\\t<li><a href=\\\"\" + urlHelper.Action(\"article\", \"home\", new { id = article.Id }) + \"\\\">\" + article.Title + \"</a></li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookTitleSection(this HtmlHelper helper, Book book)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"title\\\">\";\n            buffer += \"\\n\\t<ul class=\\\"relations\\\">\";\n            foreach (var relation in book.Relations.OrderBy(r => r.SequenceIdentifier))\n            {\n                if (relation.Person.HasPage)\n                {\n                    buffer += \"\\n\\t\\t<li><a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = relation.PersonId }) + \"\\\">\" + relation.PersonName + \"</a></li>\";\n                }\n                else\n                {\n                    buffer += \"\\n\\t\\t<li>\" + relation.PersonName + \"</li>\";\n                }\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n\\t<h1>\" + book.Title + \"</h1>\";\n            if (!string.IsNullOrWhiteSpace(book.Subtitle))\n            {\n                buffer += \"\\n\\t<p class=\\\"subtitle\\\">\" + book.Subtitle + \"</p>\";\n            }\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookExcerptSection(this HtmlHelper helper, Book book)\n        {\n            if (book.ExcerptId == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"excerpt\\\">\";\n            buffer += \"\\n\\t<p><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = book.UploadedFile.Category, fileName = book.UploadedFile.FileName }) + \"\\\">\" + string.Format(SitePhrases.LabelExcerpt, book.Title) + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookAudioExcerptSection(this HtmlHelper helper, Book book)\n        {\n            if (book.AudioExcerptId == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"audioexcerpt\\\">\";\n            buffer += \"\\n\\t<audio controls=\\\"true\\\" src=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = book.UploadedFile1.Category, fileName = book.UploadedFile1.FileName }) + \"\\\">\" + SitePhrases.LabelAudioExcerptPlaceholder + \"</audio>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookCoverSection(this HtmlHelper helper, Book book)\n        {\n            if (!book.Editions.Any(_ => _.LargeCoverId != null)) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var edition = book.Editions.Where(e => e.LargeCoverId != null).OrderBy(e => e.Number).Last();\n            var buffer = \"<section class=\\\"cover\\\">\";\n            buffer += \"\\n\\t\" + CoverImage(helper, edition);\n            buffer += \"\\n\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = edition.UploadedFile.Category, fileName = edition.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargeCover + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionMetadataSection(this HtmlHelper helper, Edition edition)\n        {\n            var buffer = \"<section class=\\\"metadata\\\">\";\n            buffer += \"\\n\\t<h2>\" + edition.Binding.Name + \"</h2>\";\n            if (!string.IsNullOrWhiteSpace(edition.AdditionalInfo)) buffer += \"\\n\\t<p class=\\\"additionalinfo\\\">\" + edition.AdditionalInfo + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"isbn\\\">\" + string.Format(SitePhrases.LabelIsbn, edition.Isbn.AsIsbn()) + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"releaseyear\\\">\" + (edition.Binding.HideEditionNumber ? edition.ReleaseDate.Year.ToString(\"\") : string.Format(SitePhrases.LabelEditionAndYear, edition.Number, edition.ReleaseDate.Year)) + \"</p>\";\n            if (edition.PageCount != null) buffer += \"\\n\\t<p class=\\\"pagecount\\\">\" + string.Format(SitePhrases.UnitPages, edition.PageCount) + \"</p>\";\n            if (edition.Price != null) buffer += \"\\n\\t<p class=\\\"price\\\">\" + string.Format(SitePhrases.UnitPrice, edition.Price) + \"</p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionPurchaseOptionsSection(this HtmlHelper helper, Edition edition, IEnumerable<ExternalStore> stores)\n        {\n            if (!edition.IsForSale) return new HtmlString(\"<section class=\\\"purchaseoptions\\\">\\n\\t<p class=\\\"notforsale\\\">\" + (!string.IsNullOrWhiteSpace(edition.AlternativeNotForSaleMessage) ? edition.AlternativeNotForSaleMessage : SitePhrases.LabelNotForSale) + \"</p>\\n</section>\");\n            if (!edition.Binding.UsesExternalStores) return new HtmlString(\"<section class=\\\"purchaseoptions\\\">\\n\\t<p class=\\\"addtobasket\\\">\" + helper.ActionLink(SitePhrases.LabelAddToShop, \"add\", \"shop\", new { id = edition.Id }, new { @class = \"addtobasket\" }) + \"</p>\\n</section>\");\n            var buffer = \"<section class=\\\"purchaseoptions\\\">\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var store in edition.Binding.SupportedStores(stores).OrderBy(_ => _.SequenceIdentifier))\n            {\n                buffer += \"\\n\\t\\t<li><a href=\\\"\" + string.Format(\"{0}{1}{2}\", store.UrlPrefix, edition.Isbn, store.UrlPostfix) + \"\\\" target=\\\"_blank\\\">\" + string.Format(SitePhrases.LabelBuyFrom, store.Name) + \"</a></li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonBooksSection(this HtmlHelper helper, Person person)\n        {\n            var relationsToShow = person.Relations.Where(_ => _.Role.ShowBookList && _.Book.IsVisible);\n            if (!relationsToShow.Any()) return null;\n            var buffer = \"<section class=\\\"books\\\">\";\n            foreach (var role in relationsToShow.GroupBy(_ => _.Role).OrderBy(_ => _.Key.SequenceIdentifier))\n            {\n                buffer += \"\\n\\t<h2>\" + (role.Key.BookListHeading ?? role.Key.Name) + \"</h2>\";\n                buffer += \"\\n\\t<ul>\";\n                foreach (var book in role.Select(_ => _.Book).OrderBy(_ => _.CachedReleaseYear))\n                {\n                    buffer += \"\\n\\t\\t<li>\" + BookPersonPageEntry(helper, book) + \"</li>\";\n                }\n                buffer += \"\\n\\t</ul>\";\n            }\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonMainImageSection(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"mainimage\\\">\";\n            buffer += \"\\n\\t\" + PersonImage(helper, person);\n            if (!string.IsNullOrWhiteSpace(person.MainImage.Photographer)) buffer += \"\\n\\t<p class=\\\"photographer\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, person.MainImage.Photographer) + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = person.MainImage.UploadedFile.Category, fileName = person.MainImage.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargePortrait + \"</a></p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonSecondaryImagesSection(this HtmlHelper helper, Person person)\n        {\n            if (person.PersonImages.Count() < 2) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"secondaryimages\\\">\";\n            buffer += \"\\n\\t<ul>\";\n            foreach (var image in person.PersonImages.OrderBy(_ => _.SequenceIdentifier).Skip(1))\n            {\n                buffer += \"\\n\\t\\t<li>\";\n                buffer += \"\\n\\t\\t\\t\" + PersonImage(helper, person, image.LargeImageId);\n                if (!string.IsNullOrWhiteSpace(image.Photographer)) buffer += \"\\n\\t\\t\\t<p class=\\\"photographer\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, image.Photographer) + \"</p>\";\n                buffer += \"\\n\\t\\t\\t<p class=\\\"download\\\"><a href=\\\"\" + urlHelper.Action(\"display\", \"upload\", new { category = image.UploadedFile.Category, fileName = image.UploadedFile.FileName }) + \"\\\">\" + SitePhrases.LabelLargePortrait + \"</a></p>\";\n                buffer += \"\\n\\t\\t</li>\";\n            }\n            buffer += \"\\n\\t</ul>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonLinkCard(this HtmlHelper helper, Person person)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = person.Id }) + \"\\\" class=\\\"linkcard person\\\">\";\n            buffer += \"\\n\\t\" + PersonThumbnail(helper, person);\n            if (person.MainImage == null) buffer += \"<span class=\\\"imageplaceholder\\\"></span>\";\n            buffer += \"\\n\\t<p class=\\\"name\\\">\" + person.FullName + \"</p>\";\n            buffer += \"\\n</a>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PersonLinkCardList(this HtmlHelper helper, IEnumerable<Person> people)\n        {\n            if (!people.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist people\\\">\";\n            foreach (var person in people)\n            {\n                buffer += \"\\n<li>\";\n                buffer += \"\\n\" + PersonLinkCard(helper, person);\n                buffer += \"\\n</li>\";\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString PeopleAsGroupedCards(this HtmlHelper helper, IEnumerable<Person> people)\n        {\n            if (!people.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist people\\\">\";\n            foreach (var peopleUnderLetter in people.GroupBy(_ => _.LastName[0]))\n            {\n                buffer += \"\\n<li class=\\\"groupingkey\\\">\" + peopleUnderLetter.Key + \"</li>\";\n                foreach (var person in peopleUnderLetter)\n                {\n                    buffer += \"\\n<li>\";\n                    buffer += \"\\n\" + PersonLinkCard(helper, person);\n                    buffer += \"\\n</li>\";\n                }\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionLinkCard(this HtmlHelper helper, Edition edition, bool showReleaseDate = false, bool showBlurb = false)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = edition.BookId }) + \"\\\" class=\\\"linkcard book\\\">\";\n            buffer += \"\\n\\t\" + CoverImage(helper, edition);\n            buffer += \"\\n\\t<p class=\\\"people\\\">\" + edition.Book.RelationNames() + \"</p>\";\n            buffer += \"\\n\\t<p class=\\\"title\\\">\" + edition.Book.Title + \"</p>\";\n            if (!string.IsNullOrWhiteSpace(edition.Book.Subtitle))\n            {\n                buffer += \"\\n\\t<p class=\\\"subtitle\\\">\" + edition.Book.Subtitle + \"</p>\";\n            }\n            if (showReleaseDate)\n            {\n                buffer += \"\\n\\t<p class=\\\"\" + string.Format(\"date{0}\", edition.ReleaseDate > DateTime.Today ? \" tobereleased\" : string.Empty) + \"\\\">\" + edition.ReleaseDate.ToBookListDate() + \"</p>\";\n            }\n            if (!string.IsNullOrWhiteSpace(edition.Blurb) && showBlurb)\n            {\n                buffer += \"\\n\\t<p class=\\\"blurb\\\">\" + edition.Blurb.ToRichText() + \"</p>\";\n            }\n            if (edition.Book.IsDebut)\n            {\n                buffer += \"\\n\\t<p class=\\\"isdebut\\\">\" + SitePhrases.LabelIsDebut + \"</p>\";\n            }\n            buffer += \"\\n</a>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString EditionLinkCardList(this HtmlHelper helper, IEnumerable<Edition> editions, bool showReleaseDate = false, bool showBlurb = false)\n        {\n            if (!editions.Any()) return null;\n            var buffer = \"<ul class=\\\"linkcardlist editions\\\">\";\n            foreach (var edition in editions)\n            {\n                buffer += \"\\n<li>\";\n                buffer += \"\\n\" + EditionLinkCard(helper, edition, showReleaseDate, showBlurb);\n                buffer += \"\\n</li>\";\n            }\n            buffer += \"</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString BookListAsCards(this HtmlHelper helper, BookList list)\n        {\n            return EditionLinkCardList(helper, list.BookListMemberships.OrderBy(m => m.SequenceIdentifier).Where(m => m.Edition.LargeCoverId != null).Select(m => m.Edition), showReleaseDate: true, showBlurb: true);\n        }\n\n        public static HtmlString BooksAsCards(this HtmlHelper helper, IEnumerable<Book> books)\n        {\n            var editions = books.Where(_ => _.Editions.Any(e => e.LargeCoverId != null)).Select(_ => _.Editions.Where(e => e.LargeCoverId != null).OrderBy(e => e.Number).Last());\n            return EditionLinkCardList(helper, editions, showReleaseDate: false, showBlurb: false);\n        }\n\n        public static HtmlString PersonThumbnail(this HtmlHelper helper, int ImageId, string name)\n        {\n            var legend = helper.Encode(string.Format(SitePhrases.LabelAuthorImage, name));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedthumbnail\", \"upload\", new { id = ImageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"person thumbnail\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString PersonThumbnail(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            return PersonThumbnail(helper, person.MainImage.LargeImageId, person.FullName);\n        }\n\n        public static HtmlString PersonImage(this HtmlHelper helper, Person person, int imageId)\n        {\n            var legend = helper.Encode(string.Format(SitePhrases.LabelAuthorImage, person.FullName));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedportrait\", \"upload\", new { id = imageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"person\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString PersonImage(this HtmlHelper helper, Person person)\n        {\n            if (person.MainImage == null) return null;\n            return PersonImage(helper, person, person.MainImage.LargeImageId);\n        }\n\n        public static HtmlString CoverImage(this HtmlHelper helper, Edition edition)\n        {\n            if (edition.LargeCoverId == null) return null;\n            var legend = helper.Encode(string.Format(SitePhrases.LabelCoverImage, edition.Book.Title));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedcover\", \"upload\", new { id = edition.LargeCoverId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"cover\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString ArticleImage(this HtmlHelper helper, Article article)\n        {\n            if (article.ImageId == null) return null;\n            var legend = helper.Encode(string.Format(SitePhrases.LabelArticleImage, article.Title));\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var source = urlHelper.Action(\"cachedarticleimage\", \"upload\", new { id = article.ImageId });\n            return new HtmlString(\"<img src=\\\"\" + source + \"\\\" class=\\\"article\\\" alt=\\\"\" + legend + \"\\\" title=\\\"\" + legend + \"\\\" />\");\n        }\n\n        public static HtmlString ArticleChosenImage(this HtmlHelper helper, Article article)\n        {\n            switch (article.ImageType())\n            {\n                case ArticleImageTypes.ArticleImage:\n                    return ArticleImage(helper, article);\n                case ArticleImageTypes.BookCover:\n                    return CoverImage(helper, article.ImageEdition);\n                case ArticleImageTypes.PersonThumbnail:\n                    return PersonThumbnail(helper, article.ImagePerson);\n                default:\n                    return null;\n            }\n        }\n\n        public static HtmlString ArticleChosenImageInLink(this HtmlHelper helper, Article article)\n        {\n            if (ArticleChosenImage(helper, article) != null)\n            {\n                var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n                return new HtmlString(\"<a href=\\\"\" + urlHelper.Action(\"article\", \"home\", new { id = article.Id }) + \"\\\">\" + ArticleChosenImage(helper, article) + \"</a>\");\n            }\n            return null;\n        }\n\n        public static HtmlString ArticleChosenImageSection(this HtmlHelper helper, Article article)\n        {\n            if (article.ImageType() == ArticleImageTypes.None) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<section class=\\\"image\";\n            if (article.ImageType() == ArticleImageTypes.PersonThumbnail) buffer += \" thumbnail\";\n            buffer += \"\\\">\";\n            buffer += \"\\n\\t\" + ArticleChosenImage(helper, article);\n            if (article.ImageType() == ArticleImageTypes.PersonThumbnail && !string.IsNullOrWhiteSpace(article.ImagePerson.MainImage.Photographer)) buffer += \"\\n\\t<p class=\\\"photographer article\\\">\" + string.Format(SitePhrases.LabelPhotoCredit, article.ImagePerson.MainImage.Photographer) + \"</p>\";\n            buffer += \"\\n</section>\";\n            return new HtmlString(buffer);\n        }\n\n        public static HtmlString ArticleLinks(this HtmlHelper helper, Article article)\n        {\n            var people = article.PersonToArticles.Where(p => p.Person.IsVisible && p.Person.HasPage).OrderBy(p => p.SequenceIdentifier).Select(p => p.Person);\n            var books = article.BookToArticles.Where(b => b.Book.IsVisible).OrderBy(b => b.SequenceIdentifier).Select(b => b.Book);\n            if (!people.Any() && !books.Any()) return null;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var buffer = \"<ul class=\\\"links\\\">\";\n            foreach (var person in people)\n            {\n                buffer += \"\\n\\t<li>\";\n                buffer += \"\\n\\t\\t<a href=\\\"\" + urlHelper.Action(\"details\", \"authors\", new { id = person.Id }) + \"\\\">\" + person.FullName + \"</a>\";\n                buffer += \"\\n\\t</li>\";\n            }\n            foreach (var book in books)\n            {\n                buffer += \"\\n\\t<li>\";\n                buffer += \"\\n\\t\\t<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = book.Id }) + \"\\\">\" + book.Title + \"</a>\";\n                buffer += \"\\n\\t</li>\";\n            }\n            buffer += \"\\n</ul>\";\n            return new HtmlString(buffer);\n        }\n\n        public static string RelationNames(this Book book)\n        {\n            return string.Join(\" / \", book.Relations.OrderBy(r => r.SequenceIdentifier).Select(r => r.PersonName));\n        }\n\n        public static HtmlString ImageDownload(this HtmlHelper helper, string url, string label, string notice)\n        {\n            if (string.IsNullOrWhiteSpace(url)) return null;\n            if (string.IsNullOrWhiteSpace(notice)) return new HtmlString(\"<a href=\\\"\" + url + \"\\\" class=\\\"imagedownload\\\">\" + helper.Encode(label) + \"</a>\");\n            return new HtmlString(\"<a href=\\\"\" + url + \"\\\" class=\\\"imagedownload withnotice\\\" data-notice=\\\"\" + notice + \"\\\" data-acceptlabel=\\\"\" + SitePhrases.LabelProceedToDownload + \"\\\" data-cancellabel=\\\"\" + SitePhrases.LabelCancel + \"\\\">\" + helper.Encode(label) + \"</a>\");\n        }\n\n        public static HtmlString DeleteConfirmation(this HtmlHelper helper, string name)\n        {\n            return new HtmlString(Phrases.LabelDeleteConfirmationPrefix + \" <em>\" + helper.Encode(name) + \"</em>\" + Phrases.LabelDeleteConfirmationSuffix);\n        }\n\n        public static HtmlString RemoveConfirmation(this HtmlHelper helper, string name, string container)\n        {\n            return new HtmlString(Phrases.LabelRemoveConfirmationPrefix + \" <em>\" + helper.Encode(name) + \"</em> \" + Phrases.LabelRemoveConfirmationMiddlePart + \" <em>\" + helper.Encode(container) + \"</em>\" + Phrases.LabelRemoveConfirmationSuffix);\n        }\n\n        public static HtmlString DeleteDependencies(this HtmlHelper helper, string name)\n        {\n            return new HtmlString(Phrases.LabelDeleteDependenciesPrefix + \" <em>\" + helper.Encode(name) + \"</em>\" + Phrases.LabelDeleteDependenciesSuffix);\n        }\n\n        public static HtmlString Twitter(this HtmlHelper helper, string message, string hashtags)\n        {\n            return new HtmlString(\"<a href=\\\"https://twitter.com/share\\\" class=\\\"twitter-share-button\\\" data-text=\\\"\" + HttpUtility.HtmlEncode(message) + \"\\\" data-lang=\\\"en\\\" data-hashtags=\\\"\" + hashtags + \"\\\">Tweet</a>\\n<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src='//platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document,'script','twitter-wjs');</script>\");\n        }\n\n        public static HtmlString Facebook(this HtmlHelper helper)\n        {\n            var url = helper.ViewContext.RequestContext.HttpContext.Request.Url;\n            return new HtmlString(\"<iframe src=\\\"https://www.facebook.com/plugins/like.php?href=\" + url + \"&amp;send=false&amp;layout=button_count&amp;width=450&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\" style=\\\"border:none; overflow:hidden; width:450px; height:21px;\\\" allowTransparency=\\\"true\\\"></iframe>\");\n        }\n\n        public static HtmlString GoogleAnalytics(this HtmlHelper helper, string trackingCode)\n        {\n            if (string.IsNullOrWhiteSpace(trackingCode)) return null;\n            return new HtmlString(\"\\n<script type=\\\"text/javascript\\\">\\n\\tvar gaJsHost = ((\\\"https:\\\" == document.location.protocol) ? \\\"https://ssl.\\\" : \\\"http://www.\\\");\\n\\tdocument.write(unescape(\\\"%3Cscript src='\\\" + gaJsHost + \\\"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\\\"));\\n</script>\\n<script type=\\\"text/javascript\\\">\\n\\ttry {\\n\\t\\tvar pageTracker = _gat._getTracker(\\\"\" + trackingCode + \"\\\");\\n\\t\\tpageTracker._trackPageview();\\n\\t} catch(err) {}\\n</script>\");\n        }\n\n        public static HtmlString SearchForm(this HtmlHelper helper, string action, string query)\n        {\n            return new HtmlString(string.Format(\n                @\"<form method=\"\"get\"\" action=\"\"{0}\"\" id=\"\"searchform\"\">\n<fieldset>\n\t<p>\n\t\t<input type=\"\"search\"\" name=\"\"q\"\" id=\"\"query\"\" value=\"\"{1}\"\" placeholder=\"\"{2}\"\" />\n\t\t<input type=\"\"submit\"\" id=\"\"button\"\" value=\"\"{3}\"\" /></p>\n</fieldset>\n</form>\", action, helper.AttributeEncode(query), SitePhrases.LabelSearchPlaceholder, SitePhrases.LabelSearch));\n        }\n\n        public static HtmlString Legend(this HtmlHelper helper, string text)\n        {\n            return new HtmlString(\"<span class=\\\"widget legend\\\" title=\\\"\" + helper.Encode(text) + \"\\\">\" + SitePhrases.LabelLegendPlaceholder + \"</span>\");\n        }\n\n        public static HtmlString Email(this HtmlHelper helper, string email)\n        {\n            return new HtmlString(\"<a href=\\\"mailto:\" + email + \"\\\">\" + email + \"</a>\");\n        }\n\n        public static HtmlString EditShortcut(this HtmlHelper helper)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            var actionUrl = urlHelper.Action(\"index\", \"admin\");\n            var actionLabel = Phrases.PagenameAdmin;\n            if (helper.ViewContext.IsForController(\"books\") && helper.ViewContext.IsForAction(\"details\"))\n            {\n                actionUrl = urlHelper.Action(\"editbook\", \"admin\", new { id = helper.ViewContext.RouteData.Values[\"id\"] as string }, null);\n                actionLabel = Phrases.PagenameEditBook;\n            }\n            if (helper.ViewContext.IsForController(\"authors\") && helper.ViewContext.IsForAction(\"details\"))\n            {\n                actionUrl = urlHelper.Action(\"editperson\", \"admin\", new { id = helper.ViewContext.RouteData.Values[\"id\"] as string }, null);\n                actionLabel = Phrases.PagenameEditPerson;\n            }\n            if (helper.ViewContext.HttpContext.Request.Url == null) return null;\n            return new HtmlString(String.Format(\n                @\"\n<div id=\"\"editshortcut\"\">\n    <a href=\"\"{0}\"\">{1}</a>\n    |\n    <a href=\"\"{2}\"\">{3}</a>\n</div>\", actionUrl, actionLabel, urlHelper.Action(\"logout\", \"account\", new { ReturnUrl = helper.ViewContext.HttpContext.Request.Url.AbsolutePath }, null), Phrases.LabelLogOutSimple));\n        }\n\n        public static HtmlString RelationLinkOrName(this HtmlHelper helper, Relation relation)\n        {\n            return relation.Person.HasPage\n                ? helper.ActionLink(relation.ReversePersonName, \"details\", \"authors\", new { id = relation.PersonId }, null)\n                : new HtmlString(relation.ReversePersonName);\n        }\n\n        public static HtmlString BookPersonPageEntry(this HtmlHelper helper, Book book)\n        {\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n            if (book.HasExternalPublisher)\n            {\n                return new HtmlString(String.Format(\"{0}{1}. {2}, {3}\",\n                      book.Title,\n                      !String.IsNullOrWhiteSpace(book.Subtitle) ? String.Format(\". {0}\", book.Subtitle) : string.Empty,\n                      book.ExternalPublisher,\n                      book.CachedReleaseYear));\n            }\n            return new HtmlString(String.Format(\"{0}{1}, {2}\",\n                \"<a href=\\\"\" + urlHelper.Action(\"details\", \"books\", new { id = book.Id }, null) + \"\\\">\" + book.Title + \"</a>\",\n                !String.IsNullOrWhiteSpace(book.Subtitle) ? String.Format(\". {0}\", book.Subtitle) : string.Empty,\n                book.CachedReleaseYear));\n        }\n\n        public static string ToWord(this bool source)\n        {\n            return source ? Phrases.UnitYes : Phrases.UnitNo;\n        }\n\n    }\n\n}"], "filenames": ["ImprintCMS/Models/ViewHelpers.cs"], "buggy_code_start_loc": [475], "buggy_code_end_loc": [476], "fixing_code_start_loc": [475], "fixing_code_end_loc": [476], "type": "CWE-79", "message": "A vulnerability was found in Imprint CMS. It has been classified as problematic. Affected is the function SearchForm of the file ImprintCMS/Models/ViewHelpers.cs. The manipulation of the argument query leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 6140b140ccd02b5e4e7d6ba013ac1225724487f4. It is recommended to apply a patch to fix this issue. VDB-216474 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4270", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-21T19:15:13.683", "lastModified": "2022-12-27T22:50:15.293", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Imprint CMS. It has been classified as problematic. Affected is the function SearchForm of the file ImprintCMS/Models/ViewHelpers.cs. The manipulation of the argument query leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 6140b140ccd02b5e4e7d6ba013ac1225724487f4. It is recommended to apply a patch to fix this issue. VDB-216474 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:imprint_cms_project:imprint_cms:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-04-09", "matchCriteriaId": "ECEA6863-3FD1-4B8C-A2B8-58593299D0D3"}]}]}], "references": [{"url": "https://github.com/peders/Imprint-CMS/commit/6140b140ccd02b5e4e7d6ba013ac1225724487f4", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216474", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/peders/Imprint-CMS/commit/6140b140ccd02b5e4e7d6ba013ac1225724487f4"}}