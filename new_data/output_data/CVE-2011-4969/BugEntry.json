{"buggy_code": ["var jQuery = (function() {\n\n// Define a local copy of jQuery\nvar jQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// A simple way to check for HTML strings or ID strings\n\t// (both of which we optimize for)\n\tquickExpr = /^(?:[^<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n\t// Check if a string has a non-whitespace character in it\n\trnotwhite = /\\S/,\n\n\t// Used for trimming whitespace\n\ttrimLeft = /^\\s+/,\n\ttrimRight = /\\s+$/,\n\n\t// Check for digits\n\trdigit = /\\d/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\n\n\t// JSON RegExp\n\trvalidchars = /^[\\],:{}\\s]*$/,\n\trvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\n\trvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\n\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n\n\t// Useragent RegExp\n\trchrome = /(chrome)[ \\/]([\\w.]+)/,\n\trwebkit = /(webkit)[ \\/]([\\w.]+)/,\n\tropera = /(opera)(?:.*version)?[ \\/]([\\w.]+)/,\n\trmsie = /(msie) ([\\w.]+)/,\n\trmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/,\n\n\t// Matches dashed string for camelizing\n\trdashAlpha = /-([a-z]|[0-9])/ig,\n\trmsPrefix = /^-ms-/,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn ( letter + \"\" ).toUpperCase();\n\t},\n\n\t// Keep a UserAgent string for use with jQuery.browser\n\tuserAgent = navigator.userAgent,\n\n\t// For matching the engine and version of the browser\n\tbrowserMatch,\n\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// The ready event handler\n\tDOMContentLoaded,\n\n\t// Save a reference to some core methods\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tpush = Array.prototype.push,\n\tslice = Array.prototype.slice,\n\ttrim = String.prototype.trim,\n\tindexOf = Array.prototype.indexOf,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {};\n\njQuery.fn = jQuery.prototype = {\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem, ret, doc;\n\n\t\t// Handle $(\"\"), $(null), or $(undefined)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\t// The body element only exists once, optimize finding it\n\t\tif ( selector === \"body\" && !context && document.body ) {\n\t\t\tthis.context = document;\n\t\t\tthis[0] = document.body;\n\t\t\tthis.selector = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = quickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\t\t\t\t\tdoc = (context ? context.ownerDocument || context : document);\n\n\t\t\t\t\t// If a single string is passed in and it's a single tag\n\t\t\t\t\t// just do a createElement and skip the rest\n\t\t\t\t\tret = rsingleTag.exec( selector );\n\n\t\t\t\t\tif ( ret ) {\n\t\t\t\t\t\tif ( jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\t\tselector = [ document.createElement( ret[1] ) ];\n\t\t\t\t\t\t\tjQuery.fn.attr.call( selector, context, true );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselector = [ doc.createElement( ret[1] ) ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = jQuery.buildFragment( [ match[1] ], [ doc ] );\n\t\t\t\t\t\tselector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.merge( this, selector );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id !== match[2] ) {\n\t\t\t\t\t\t\treturn rootjQuery.find( selector );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn (context || rootjQuery).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif (selector.selector !== undefined) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The current version of jQuery being used\n\tjquery: \"@VERSION\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\t// The number of elements contained in the matched element set\n\tsize: function() {\n\t\treturn this.length;\n\t},\n\n\ttoArray: function() {\n\t\treturn slice.call( this, 0 );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems, name, selector ) {\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = this.constructor();\n\n\t\tif ( jQuery.isArray( elems ) ) {\n\t\t\tpush.apply( ret, elems );\n\n\t\t} else {\n\t\t\tjQuery.merge( ret, elems );\n\t\t}\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\tret.context = this.context;\n\n\t\tif ( name === \"find\" ) {\n\t\t\tret.selector = this.selector + (this.selector ? \" \" : \"\") + selector;\n\t\t} else if ( name ) {\n\t\t\tret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\n\t\t}\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Attach the listeners\n\t\tjQuery.bindReady();\n\n\t\t// Add the callback\n\t\treadyList.done( fn );\n\n\t\treturn this;\n\t},\n\n\teq: function( i ) {\n\t\treturn i === -1 ?\n\t\t\tthis.slice( i ) :\n\t\t\tthis.slice( i, +i + 1 );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ),\n\t\t\t\"slice\", slice.call(arguments).join(\",\") );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\t\t// Either a released hold or an DOMready/load event and not yet ready\n\t\tif ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {\n\t\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\t\tif ( !document.body ) {\n\t\t\t\treturn setTimeout( jQuery.ready, 1 );\n\t\t\t}\n\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\n\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there are functions bound, to execute\n\t\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t\t// Trigger any bound ready events\n\t\t\tif ( jQuery.fn.trigger ) {\n\t\t\t\tjQuery( document ).trigger( \"ready\" ).unbind( \"ready\" );\n\t\t\t}\n\t\t}\n\t},\n\n\tbindReady: function() {\n\t\tif ( readyList ) {\n\t\t\treturn;\n\t\t}\n\n\t\treadyList = jQuery._Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the\n\t\t// browser event has already occurred.\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\treturn setTimeout( jQuery.ready, 1 );\n\t\t}\n\n\t\t// Mozilla, Opera and webkit nightlies currently support this event\n\t\tif ( document.addEventListener ) {\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", jQuery.ready, false );\n\n\t\t// If IE event model is used\n\t\t} else if ( document.attachEvent ) {\n\t\t\t// ensure firing before onload,\n\t\t\t// maybe late but safe also for iframes\n\t\t\tdocument.attachEvent( \"onreadystatechange\", DOMContentLoaded );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.attachEvent( \"onload\", jQuery.ready );\n\n\t\t\t// If IE and not a frame\n\t\t\t// continually check to see if the document is ready\n\t\t\tvar toplevel = false;\n\n\t\t\ttry {\n\t\t\t\ttoplevel = window.frameElement == null;\n\t\t\t} catch(e) {}\n\n\t\t\tif ( document.documentElement.doScroll && toplevel ) {\n\t\t\t\tdoScrollCheck();\n\t\t\t}\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray || function( obj ) {\n\t\treturn jQuery.type(obj) === \"array\";\n\t},\n\n\t// A crude way of determining if an object is a window\n\tisWindow: function( obj ) {\n\t\treturn obj && typeof obj === \"object\" && \"setInterval\" in obj;\n\t},\n\n\tisNaN: function( obj ) {\n\t\treturn obj == null || !rdigit.test( obj ) || isNaN( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\treturn obj == null ?\n\t\t\tString( obj ) :\n\t\t\tclass2type[ toString.call(obj) ] || \"object\";\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Must be an Object.\n\t\t// Because of IE, we also have to check the presence of the constructor property.\n\t\t// Make sure that DOM nodes and window objects don't pass through, as well\n\t\tif ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\n\t\tvar key;\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tfor ( var name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow msg;\n\t},\n\n\tparseJSON: function( data ) {\n\t\tif ( typeof data !== \"string\" || !data ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Make sure leading/trailing whitespace is removed (IE can't handle it)\n\t\tdata = jQuery.trim( data );\n\n\t\t// Attempt to parse using the native JSON parser first\n\t\tif ( window.JSON && window.JSON.parse ) {\n\t\t\treturn window.JSON.parse( data );\n\t\t}\n\n\t\t// Make sure the incoming data is actual JSON\n\t\t// Logic borrowed from http://json.org/json2.js\n\t\tif ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n\t\t\t.replace( rvalidtokens, \"]\" )\n\t\t\t.replace( rvalidbraces, \"\")) ) {\n\n\t\t\treturn (new Function( \"return \" + data ))();\n\n\t\t}\n\t\tjQuery.error( \"Invalid JSON: \" + data );\n\t},\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\ttry {\n\t\t\tif ( window.DOMParser ) { // Standard\n\t\t\t\ttmp = new DOMParser();\n\t\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t\t} else { // IE\n\t\t\t\txml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t\t\t\txml.async = \"false\";\n\t\t\t\txml.loadXML( data );\n\t\t\t}\n\t\t} catch( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\t// Workarounds based on findings by Jim Driscoll\n\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n\tglobalEval: function( data ) {\n\t\tif ( data && rnotwhite.test( data ) ) {\n\t\t\t// We use execScript on Internet Explorer\n\t\t\t// We use an anonymous function so that context is window\n\t\t\t// rather than jQuery in Firefox\n\t\t\t( window.execScript || function( data ) {\n\t\t\t\twindow[ \"eval\" ].call( window, data );\n\t\t\t} )( data );\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( object, callback, args ) {\n\t\tvar name, i = 0,\n\t\t\tlength = object.length,\n\t\t\tisObj = length === undefined || jQuery.isFunction( object );\n\n\t\tif ( args ) {\n\t\t\tif ( isObj ) {\n\t\t\t\tfor ( name in object ) {\n\t\t\t\t\tif ( callback.apply( object[ name ], args ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; i < length; ) {\n\t\t\t\t\tif ( callback.apply( object[ i++ ], args ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isObj ) {\n\t\t\t\tfor ( name in object ) {\n\t\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; i < length; ) {\n\t\t\t\t\tif ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t},\n\n\t// Use native String.trim function wherever possible\n\ttrim: trim ?\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttrim.call( text );\n\t\t} :\n\n\t\t// Otherwise use our own trimming functionality\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttext.toString().replace( trimLeft, \"\" ).replace( trimRight, \"\" );\n\t\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( array, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( array != null ) {\n\t\t\t// The window, strings (and functions) also have 'length'\n\t\t\t// The extra typeof function check is to prevent crashes\n\t\t\t// in Safari 2 (See: #3039)\n\t\t\t// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\n\t\t\tvar type = jQuery.type( array );\n\n\t\t\tif ( array.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow( array ) ) {\n\t\t\t\tpush.call( ret, array );\n\t\t\t} else {\n\t\t\t\tjQuery.merge( ret, array );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, array ) {\n\n\t\tif ( indexOf ) {\n\t\t\treturn indexOf.call( array, elem );\n\t\t}\n\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tif ( array[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar i = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof second.length === \"number\" ) {\n\t\t\tfor ( var l = second.length; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar ret = [], retVal;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value, key, ret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\t// jquery objects are treated as arrays\n\t\t\tisArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( key in elems ) {\n\t\t\t\tvalue = callback( elems[ key ], key, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn ret.concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tif ( typeof context === \"string\" ) {\n\t\t\tvar tmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\tvar args = slice.call( arguments, 2 ),\n\t\t\tproxy = function() {\n\t\t\t\treturn fn.apply( context, args.concat( slice.call( arguments ) ) );\n\t\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Mutifunctional method to get and set values to a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, key, value, exec, fn, pass ) {\n\t\tvar length = elems.length;\n\n\t\t// Setting many attributes\n\t\tif ( typeof key === \"object\" ) {\n\t\t\tfor ( var k in key ) {\n\t\t\t\tjQuery.access( elems, k, key[k], exec, fn, value );\n\t\t\t}\n\t\t\treturn elems;\n\t\t}\n\n\t\t// Setting one attribute\n\t\tif ( value !== undefined ) {\n\t\t\t// Optionally, function values get executed if exec is true\n\t\t\texec = !pass && exec && jQuery.isFunction(value);\n\n\t\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t\t\tfn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );\n\t\t\t}\n\n\t\t\treturn elems;\n\t\t}\n\n\t\t// Getting an attribute\n\t\treturn length ? fn( elems[0], key ) : undefined;\n\t},\n\n\tnow: function() {\n\t\treturn (new Date()).getTime();\n\t},\n\n\t// Use of jQuery.browser is frowned upon.\n\t// More details: http://docs.jquery.com/Utilities/jQuery.browser\n\tuaMatch: function( ua ) {\n\t\tua = ua.toLowerCase();\n\n\t\tvar match = rchrome.exec( ua ) ||\n\t\t\trwebkit.exec( ua ) ||\n\t\t\tropera.exec( ua ) ||\n\t\t\trmsie.exec( ua ) ||\n\t\t\tua.indexOf(\"compatible\") < 0 && rmozilla.exec( ua ) ||\n\t\t\t[];\n\n\t\treturn { browser: match[1] || \"\", version: match[2] || \"0\" };\n\t},\n\n\tsub: function() {\n\t\tfunction jQuerySub( selector, context ) {\n\t\t\treturn new jQuerySub.fn.init( selector, context );\n\t\t}\n\t\tjQuery.extend( true, jQuerySub, this );\n\t\tjQuerySub.superclass = this;\n\t\tjQuerySub.fn = jQuerySub.prototype = this();\n\t\tjQuerySub.fn.constructor = jQuerySub;\n\t\tjQuerySub.sub = this.sub;\n\t\tjQuerySub.fn.init = function init( selector, context ) {\n\t\t\tif ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {\n\t\t\t\tcontext = jQuerySub( context );\n\t\t\t}\n\n\t\t\treturn jQuery.fn.init.call( this, selector, context, rootjQuerySub );\n\t\t};\n\t\tjQuerySub.fn.init.prototype = jQuerySub.fn;\n\t\tvar rootjQuerySub = jQuerySub(document);\n\t\treturn jQuerySub;\n\t},\n\n\tbrowser: {}\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nbrowserMatch = jQuery.uaMatch( userAgent );\nif ( browserMatch.browser ) {\n\tjQuery.browser[ browserMatch.browser ] = true;\n\tjQuery.browser.version = browserMatch.version;\n}\n\n// Deprecated, use jQuery.browser.webkit instead\nif ( jQuery.browser.webkit ) {\n\tjQuery.browser.safari = true;\n}\n\n// IE doesn't match non-breaking spaces with \\s\nif ( rnotwhite.test( \"\\xA0\" ) ) {\n\ttrimLeft = /^[\\s\\xA0]+/;\n\ttrimRight = /[\\s\\xA0]+$/;\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n\n// Cleanup functions for the document ready method\nif ( document.addEventListener ) {\n\tDOMContentLoaded = function() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n\t\tjQuery.ready();\n\t};\n\n} else if ( document.attachEvent ) {\n\tDOMContentLoaded = function() {\n\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\tdocument.detachEvent( \"onreadystatechange\", DOMContentLoaded );\n\t\t\tjQuery.ready();\n\t\t}\n\t};\n}\n\n// The DOM ready check for Internet Explorer\nfunction doScrollCheck() {\n\tif ( jQuery.isReady ) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\t// If IE is used, use the trick by Diego Perini\n\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\tdocument.documentElement.doScroll(\"left\");\n\t} catch(e) {\n\t\tsetTimeout( doScrollCheck, 1 );\n\t\treturn;\n\t}\n\n\t// and execute any waiting functions\n\tjQuery.ready();\n}\n\nreturn jQuery;\n\n})();\n", "module(\"core\", { teardown: moduleTeardown });\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$\" );\n});\n\ntest(\"jQuery()\", function() {\n\texpect(29);\n\n\t// Basic constructor's behavior\n\n\tequals( jQuery().length, 0, \"jQuery() === jQuery([])\" );\n\tequals( jQuery(undefined).length, 0, \"jQuery(undefined) === jQuery([])\" );\n\tequals( jQuery(null).length, 0, \"jQuery(null) === jQuery([])\" );\n\tequals( jQuery(\"\").length, 0, \"jQuery('') === jQuery([])\" );\n\tequals( jQuery(\"#\").length, 0, \"jQuery('#') === jQuery([])\" );\n\n\tvar obj = jQuery(\"div\");\n\tequals( jQuery(obj).selector, \"div\", \"jQuery(jQueryObj) == jQueryObj\" );\n\n\t\t// can actually yield more than one, when iframes are included, the window is an array as well\n\tequals( jQuery(window).length, 1, \"Correct number of elements generated for jQuery(window)\" );\n\n\n\tvar main = jQuery(\"#qunit-fixture\");\n\tsame( jQuery(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\n/*\n\t// disabled since this test was doing nothing. i tried to fix it but i'm not sure\n\t// what the expected behavior should even be. FF returns \"\\n\" for the text node\n\t// make sure this is handled\n\tvar crlfContainer = jQuery('<p>\\r\\n</p>');\n\tvar x = crlfContainer.contents().get(0).nodeValue;\n\tequals( x, what???, \"Check for \\\\r and \\\\n in jQuery()\" );\n*/\n\n\t/* // Disabled until we add this functionality in\n\tvar pass = true;\n\ttry {\n\t\tjQuery(\"<div>Testing</div>\").appendTo(document.getElementById(\"iframe\").contentDocument.body);\n\t} catch(e){\n\t\tpass = false;\n\t}\n\tok( pass, \"jQuery('&lt;tag&gt;') needs optional document parameter to ease cross-frame DOM wrangling, see #968\" );*/\n\n\tvar code = jQuery(\"<code/>\");\n\tequals( code.length, 1, \"Correct number of elements generated for code\" );\n\tequals( code.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\tvar img = jQuery(\"<img/>\");\n\tequals( img.length, 1, \"Correct number of elements generated for img\" );\n\tequals( img.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\tvar div = jQuery(\"<div/><hr/><code/><b/>\");\n\tequals( div.length, 4, \"Correct number of elements generated for div hr code b\" );\n\tequals( div.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\n\tequals( jQuery([1,2,3]).get(1), 2, \"Test passing an array to the factory\" );\n\n\tequals( jQuery(document.body).get(0), jQuery(\"body\").get(0), \"Test passing an html node to the factory\" );\n\n\tvar exec = false;\n\n\tvar elem = jQuery(\"<div/>\", {\n\t\twidth: 10,\n\t\tcss: { paddingLeft:1, paddingRight:1 },\n\t\tclick: function(){ ok(exec, \"Click executed.\"); },\n\t\ttext: \"test\",\n\t\t\"class\": \"test2\",\n\t\tid: \"test3\"\n\t});\n\n\tequals( elem[0].style.width, \"10px\", \"jQuery() quick setter width\");\n\tequals( elem[0].style.paddingLeft, \"1px\", \"jQuery quick setter css\");\n\tequals( elem[0].style.paddingRight, \"1px\", \"jQuery quick setter css\");\n\tequals( elem[0].childNodes.length, 1, \"jQuery quick setter text\");\n\tequals( elem[0].firstChild.nodeValue, \"test\", \"jQuery quick setter text\");\n\tequals( elem[0].className, \"test2\", \"jQuery() quick setter class\");\n\tequals( elem[0].id, \"test3\", \"jQuery() quick setter id\");\n\n\texec = true;\n\telem.click();\n\n\t// manually clean up detached elements\n\telem.remove();\n\n\tfor ( var i = 0; i < 3; ++i ) {\n\t\telem = jQuery(\"<input type='text' value='TEST' />\");\n\t}\n\tequals( elem[0].defaultValue, \"TEST\", \"Ensure cached nodes are cloned properly (Bug #6655)\" );\n\n\t// manually clean up detached elements\n\telem.remove();\n\n\tequals( jQuery(\" <div/> \").length, 1, \"Make sure whitespace is trimmed.\" );\n\tequals( jQuery(\" a<div/>b \").length, 1, \"Make sure whitespace and other characters are trimmed.\" );\n\n\tvar long = \"\";\n\tfor ( var i = 0; i < 128; i++ ) {\n\t\tlong += \"12345678\";\n\t}\n\n\tequals( jQuery(\" <div>\" + long + \"</div> \").length, 1, \"Make sure whitespace is trimmed on long strings.\" );\n\tequals( jQuery(\" a<div>\" + long + \"</div>b \").length, 1, \"Make sure whitespace and other characters are trimmed on long strings.\" );\n});\n\ntest(\"selector state\", function() {\n\texpect(31);\n\n\tvar test;\n\n\ttest = jQuery(undefined);\n\tequals( test.selector, \"\", \"Empty jQuery Selector\" );\n\tequals( test.context, undefined, \"Empty jQuery Context\" );\n\n\ttest = jQuery(document);\n\tequals( test.selector, \"\", \"Document Selector\" );\n\tequals( test.context, document, \"Document Context\" );\n\n\ttest = jQuery(document.body);\n\tequals( test.selector, \"\", \"Body Selector\" );\n\tequals( test.context, document.body, \"Body Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\");\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(\"#notfoundnono\");\n\tequals( test.selector, \"#notfoundnono\", \"#notfoundnono Selector\" );\n\tequals( test.context, document, \"#notfoundnono Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\", document);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\", document.body);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture Context\" );\n\n\t// Test cloning\n\ttest = jQuery(test);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(document.body).find(\"#qunit-fixture\");\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture find Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture find Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\");\n\tequals( test.selector, \"#qunit-fixture.filter(div)\", \"#qunit-fixture filter Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").not(\"div\");\n\tequals( test.selector, \"#qunit-fixture.not(div)\", \"#qunit-fixture not Selector\" );\n\tequals( test.context, document, \"#qunit-fixture not Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\").not(\"div\");\n\tequals( test.selector, \"#qunit-fixture.filter(div).not(div)\", \"#qunit-fixture filter, not Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter, not Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\").not(\"div\").end();\n\tequals( test.selector, \"#qunit-fixture.filter(div)\", \"#qunit-fixture filter, not, end Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter, not, end Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").parent(\"body\");\n\tequals( test.selector, \"#qunit-fixture.parent(body)\", \"#qunit-fixture parent Selector\" );\n\tequals( test.context, document, \"#qunit-fixture parent Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").eq(0);\n\tequals( test.selector, \"#qunit-fixture.slice(0,1)\", \"#qunit-fixture eq Selector\" );\n\tequals( test.context, document, \"#qunit-fixture eq Context\" );\n\n\tvar d = \"<div />\";\n\tequals(\n\t\tjQuery(d).appendTo(jQuery(d)).selector,\n\t\tjQuery(d).appendTo(d).selector,\n\t\t\"manipulation methods make same selector for jQuery objects\"\n\t);\n});\n\ntest( \"globalEval\", function() {\n\n\texpect( 3 );\n\n\tjQuery.globalEval( \"var globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test variable declarations are global\" );\n\n\twindow.globalEvalTest = false;\n\n\tjQuery.globalEval( \"globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test variable assignments are global\" );\n\n\twindow.globalEvalTest = false;\n\n\tjQuery.globalEval( \"this.globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test context (this) is the window object\" );\n\n\twindow.globalEvalTest = undefined;\n});\n\nif ( !isLocal ) {\ntest(\"browser\", function() {\n\tstop();\n\n\tjQuery.get(\"data/ua.txt\", function(data){\n\t\tvar uas = data.split(\"\\n\");\n\t\texpect( (uas.length - 1) * 2 );\n\n\t\tjQuery.each(uas, function(){\n\t\t\tvar parts = this.split(\"\\t\");\n\t\t\tif ( parts[2] ) {\n\t\t\t\tvar ua = jQuery.uaMatch( parts[2] );\n\t\t\t\tequals( ua.browser, parts[0], \"Checking browser for \" + parts[2] );\n\t\t\t\tequals( ua.version, parts[1], \"Checking version string for \" + parts[2] );\n\t\t\t}\n\t\t});\n\n\t\tstart();\n\t});\n});\n}\n\ntest(\"noConflict\", function() {\n\texpect(7);\n\n\tvar $$ = jQuery;\n\n\tequals( jQuery, jQuery.noConflict(), \"noConflict returned the jQuery object\" );\n\tequals( jQuery, $$, \"Make sure jQuery wasn't touched.\" );\n\tequals( $, original$, \"Make sure $ was reverted.\" );\n\n\tjQuery = $ = $$;\n\n\tequals( jQuery.noConflict(true), $$, \"noConflict returned the jQuery object\" );\n\tequals( jQuery, originaljQuery, \"Make sure jQuery was reverted.\" );\n\tequals( $, original$, \"Make sure $ was reverted.\" );\n\tok( $$(\"#qunit-fixture\").html(\"test\"), \"Make sure that jQuery still works.\" );\n\n\tjQuery = $$;\n});\n\ntest(\"trim\", function() {\n\texpect(9);\n\n\tvar nbsp = String.fromCharCode(160);\n\n\tequals( jQuery.trim(\"hello  \"), \"hello\", \"trailing space\" );\n\tequals( jQuery.trim(\"  hello\"), \"hello\", \"leading space\" );\n\tequals( jQuery.trim(\"  hello   \"), \"hello\", \"space on both sides\" );\n\tequals( jQuery.trim(\"  \" + nbsp + \"hello  \" + nbsp + \" \"), \"hello\", \"&nbsp;\" );\n\n\tequals( jQuery.trim(), \"\", \"Nothing in.\" );\n\tequals( jQuery.trim( undefined ), \"\", \"Undefined\" );\n\tequals( jQuery.trim( null ), \"\", \"Null\" );\n\tequals( jQuery.trim( 5 ), \"5\", \"Number\" );\n\tequals( jQuery.trim( false ), \"false\", \"Boolean\" );\n});\n\ntest(\"type\", function() {\n\texpect(23);\n\n\tequals( jQuery.type(null), \"null\", \"null\" );\n\tequals( jQuery.type(undefined), \"undefined\", \"undefined\" );\n\tequals( jQuery.type(true), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(false), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(Boolean(true)), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(0), \"number\", \"Number\" );\n\tequals( jQuery.type(1), \"number\", \"Number\" );\n\tequals( jQuery.type(Number(1)), \"number\", \"Number\" );\n\tequals( jQuery.type(\"\"), \"string\", \"String\" );\n\tequals( jQuery.type(\"a\"), \"string\", \"String\" );\n\tequals( jQuery.type(String(\"a\")), \"string\", \"String\" );\n\tequals( jQuery.type({}), \"object\", \"Object\" );\n\tequals( jQuery.type(/foo/), \"regexp\", \"RegExp\" );\n\tequals( jQuery.type(new RegExp(\"asdf\")), \"regexp\", \"RegExp\" );\n\tequals( jQuery.type([1]), \"array\", \"Array\" );\n\tequals( jQuery.type(new Date()), \"date\", \"Date\" );\n\tequals( jQuery.type(new Function(\"return;\")), \"function\", \"Function\" );\n\tequals( jQuery.type(function(){}), \"function\", \"Function\" );\n\tequals( jQuery.type(window), \"object\", \"Window\" );\n\tequals( jQuery.type(document), \"object\", \"Document\" );\n\tequals( jQuery.type(document.body), \"object\", \"Element\" );\n\tequals( jQuery.type(document.createTextNode(\"foo\")), \"object\", \"TextNode\" );\n\tequals( jQuery.type(document.getElementsByTagName(\"*\")), \"object\", \"NodeList\" );\n});\n\ntest(\"isPlainObject\", function() {\n\texpect(14);\n\n\tstop();\n\n\t// The use case that we want to match\n\tok(jQuery.isPlainObject({}), \"{}\");\n\n\t// Not objects shouldn't be matched\n\tok(!jQuery.isPlainObject(\"\"), \"string\");\n\tok(!jQuery.isPlainObject(0) && !jQuery.isPlainObject(1), \"number\");\n\tok(!jQuery.isPlainObject(true) && !jQuery.isPlainObject(false), \"boolean\");\n\tok(!jQuery.isPlainObject(null), \"null\");\n\tok(!jQuery.isPlainObject(undefined), \"undefined\");\n\n\t// Arrays shouldn't be matched\n\tok(!jQuery.isPlainObject([]), \"array\");\n\n\t// Instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new Date), \"new Date\");\n\n\tvar fn = function(){};\n\n\t// Functions shouldn't be matched\n\tok(!jQuery.isPlainObject(fn), \"fn\");\n\n\t// Again, instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new fn), \"new fn (no methods)\");\n\n\t// Makes the function a little more realistic\n\t// (and harder to detect, incidentally)\n\tfn.prototype = {someMethod: function(){}};\n\n\t// Again, instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new fn), \"new fn\");\n\n\t// DOM Element\n\tok(!jQuery.isPlainObject(document.createElement(\"div\")), \"DOM Element\");\n\n\t// Window\n\tok(!jQuery.isPlainObject(window), \"window\");\n\n\ttry {\n\t\tvar iframe = document.createElement(\"iframe\");\n\t\tdocument.body.appendChild(iframe);\n\n\t\twindow.iframeDone = function(otherObject){\n\t\t\t// Objects from other windows should be matched\n\t\t\tok(jQuery.isPlainObject(new otherObject), \"new otherObject\");\n\t\t\tdocument.body.removeChild( iframe );\n\t\t\tstart();\n\t\t};\n\n\t\tvar doc = iframe.contentDocument || iframe.contentWindow.document;\n\t\tdoc.open();\n\t\tdoc.write(\"<body onload='window.parent.iframeDone(Object);'>\");\n\t\tdoc.close();\n\t} catch(e) {\n\t\tdocument.body.removeChild( iframe );\n\n\t\tok(true, \"new otherObject - iframes not supported\");\n\t\tstart();\n\t}\n});\n\ntest(\"isFunction\", function() {\n\texpect(19);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function(\"+String+\")\" );\n\tok( jQuery.isFunction(Array), \"Array Function(\"+Array+\")\" );\n\tok( jQuery.isFunction(Object), \"Object Function(\"+Object+\")\" );\n\tok( jQuery.isFunction(Function), \"Function Function(\"+Function+\")\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";\n\tok( !jQuery.isFunction(mystr), \"Function String\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar myarr = [ \"function\" ];\n\tok( !jQuery.isFunction(myarr), \"Function Array\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar myfunction = { \"function\": \"test\" };\n\tok( !jQuery.isFunction(myfunction), \"Function Object\" );\n\n\t// Make sure normal functions still work\n\tvar fn = function(){};\n\tok( jQuery.isFunction(fn), \"Normal Function\" );\n\n\tvar obj = document.createElement(\"object\");\n\n\t// Firefox says this is a function\n\tok( !jQuery.isFunction(obj), \"Object Element\" );\n\n\t// IE says this is an object\n\t// Since 1.3, this isn't supported (#2968)\n\t//ok( jQuery.isFunction(obj.getAttribute), \"getAttribute Function\" );\n\n\tvar nodes = document.body.childNodes;\n\n\t// Safari says this is a function\n\tok( !jQuery.isFunction(nodes), \"childNodes Property\" );\n\n\tvar first = document.body.firstChild;\n\n\t// Normal elements are reported ok everywhere\n\tok( !jQuery.isFunction(first), \"A normal DOM Element\" );\n\n\tvar input = document.createElement(\"input\");\n\tinput.type = \"text\";\n\tdocument.body.appendChild( input );\n\n\t// IE says this is an object\n\t// Since 1.3, this isn't supported (#2968)\n\t//ok( jQuery.isFunction(input.focus), \"A default function property\" );\n\n\tdocument.body.removeChild( input );\n\n\tvar a = document.createElement(\"a\");\n\ta.href = \"some-function\";\n\tdocument.body.appendChild( a );\n\n\t// This serializes with the word 'function' in it\n\tok( !jQuery.isFunction(a), \"Anchor Element\" );\n\n\tdocument.body.removeChild( a );\n\n\t// Recursive function calls have lengths and array-like properties\n\tfunction callme(callback){\n\t\tfunction fn(response){\n\t\t\tcallback(response);\n\t\t}\n\n\t\tok( jQuery.isFunction(fn), \"Recursive Function Call\" );\n\n\t\tfn({ some: \"data\" });\n\t};\n\n\tcallme(function(){\n\t\tcallme(function(){});\n\t});\n});\n\ntest(\"isXMLDoc - HTML\", function() {\n\texpect(4);\n\n\tok( !jQuery.isXMLDoc( document ), \"HTML document\" );\n\tok( !jQuery.isXMLDoc( document.documentElement ), \"HTML documentElement\" );\n\tok( !jQuery.isXMLDoc( document.body ), \"HTML Body Element\" );\n\n\tvar iframe = document.createElement(\"iframe\");\n\tdocument.body.appendChild( iframe );\n\n\ttry {\n\t\tvar body = jQuery(iframe).contents()[0];\n\n\t\ttry {\n\t\t\tok( !jQuery.isXMLDoc( body ), \"Iframe body element\" );\n\t\t} catch(e) {\n\t\t\tok( false, \"Iframe body element exception\" );\n\t\t}\n\n\t} catch(e) {\n\t\tok( true, \"Iframe body element - iframe not working correctly\" );\n\t}\n\n\tdocument.body.removeChild( iframe );\n});\n\nif ( !isLocal ) {\ntest(\"isXMLDoc - XML\", function() {\n\texpect(3);\n\tstop();\n\tjQuery.get(\"data/dashboard.xml\", function(xml) {\n\t\tok( jQuery.isXMLDoc( xml ), \"XML document\" );\n\t\tok( jQuery.isXMLDoc( xml.documentElement ), \"XML documentElement\" );\n\t\tok( jQuery.isXMLDoc( jQuery(\"tab\", xml)[0] ), \"XML Tab Element\" );\n\t\tstart();\n\t});\n});\n}\n\ntest(\"isWindow\", function() {\n\texpect( 12 );\n\n\tok( jQuery.isWindow(window), \"window\" );\n\tok( !jQuery.isWindow(), \"empty\" );\n\tok( !jQuery.isWindow(null), \"null\" );\n\tok( !jQuery.isWindow(undefined), \"undefined\" );\n\tok( !jQuery.isWindow(document), \"document\" );\n\tok( !jQuery.isWindow(document.documentElement), \"documentElement\" );\n\tok( !jQuery.isWindow(\"\"), \"string\" );\n\tok( !jQuery.isWindow(1), \"number\" );\n\tok( !jQuery.isWindow(true), \"boolean\" );\n\tok( !jQuery.isWindow({}), \"object\" );\n\t// HMMM\n\t// ok( !jQuery.isWindow({ setInterval: function(){} }), \"fake window\" );\n\tok( !jQuery.isWindow(/window/), \"regexp\" );\n\tok( !jQuery.isWindow(function(){}), \"function\" );\n});\n\ntest(\"jQuery('html')\", function() {\n\texpect(18);\n\n\tQUnit.reset();\n\tjQuery.foo = false;\n\tvar s = jQuery(\"<script>jQuery.foo='test';</script>\")[0];\n\tok( s, \"Creating a script\" );\n\tok( !jQuery.foo, \"Make sure the script wasn't executed prematurely\" );\n\tjQuery(\"body\").append(\"<script>jQuery.foo='test';</script>\");\n\tok( jQuery.foo, \"Executing a scripts contents in the right context\" );\n\n\t// Test multi-line HTML\n\tvar div = jQuery(\"<div>\\r\\nsome text\\n<p>some p</p>\\nmore text\\r\\n</div>\")[0];\n\tequals( div.nodeName.toUpperCase(), \"DIV\", \"Make sure we're getting a div.\" );\n\tequals( div.firstChild.nodeType, 3, \"Text node.\" );\n\tequals( div.lastChild.nodeType, 3, \"Text node.\" );\n\tequals( div.childNodes[1].nodeType, 1, \"Paragraph.\" );\n\tequals( div.childNodes[1].firstChild.nodeType, 3, \"Paragraph text.\" );\n\n\tQUnit.reset();\n\tok( jQuery(\"<link rel='stylesheet'/>\")[0], \"Creating a link\" );\n\n\tok( !jQuery(\"<script/>\")[0].parentNode, \"Create a script\" );\n\n\tok( jQuery(\"<input/>\").attr(\"type\", \"hidden\"), \"Create an input and set the type.\" );\n\n\tvar j = jQuery(\"<span>hi</span> there <!-- mon ami -->\");\n\tok( j.length >= 2, \"Check node,textnode,comment creation (some browsers delete comments)\" );\n\n\tok( !jQuery(\"<option>test</option>\")[0].selected, \"Make sure that options are auto-selected #2050\" );\n\n\tok( jQuery(\"<div></div>\")[0], \"Create a div with closing tag.\" );\n\tok( jQuery(\"<table></table>\")[0], \"Create a table with closing tag.\" );\n\n\t// Test very large html string #7990\n\tvar i;\n\tvar li = \"<li>very large html string</li>\";\n\tvar html = [\"<ul>\"];\n\tfor ( i = 0; i < 50000; i += 1 ) {\n\t\thtml.push(li);\n\t}\n\thtml.push(\"</ul>\");\n\thtml = jQuery(html.join(\"\"))[0];\n\tequals( html.nodeName.toUpperCase(), \"UL\");\n\tequals( html.firstChild.nodeName.toUpperCase(), \"LI\");\n\tequals( html.childNodes.length, 50000 );\n});\n\ntest(\"jQuery('html', context)\", function() {\n\texpect(1);\n\n\tvar $div = jQuery(\"<div/>\")[0];\n\tvar $span = jQuery(\"<span/>\", $div);\n\tequals($span.length, 1, \"Verify a span created with a div context works, #1763\");\n});\n\nif ( !isLocal ) {\ntest(\"jQuery(selector, xml).text(str) - Loaded via XML document\", function() {\n\texpect(2);\n\tstop();\n\tjQuery.get(\"data/dashboard.xml\", function(xml) {\n\t\t// tests for #1419 where IE was a problem\n\t\tvar tab = jQuery(\"tab\", xml).eq(0);\n\t\tequals( tab.text(), \"blabla\", \"Verify initial text correct\" );\n\t\ttab.text(\"newtext\");\n\t\tequals( tab.text(), \"newtext\", \"Verify new text correct\" );\n\t\tstart();\n\t});\n});\n}\n\ntest(\"end()\", function() {\n\texpect(3);\n\tequals( \"Yahoo\", jQuery(\"#yahoo\").parent().end().text(), \"Check for end\" );\n\tok( jQuery(\"#yahoo\").end(), \"Check for end with nothing to end\" );\n\n\tvar x = jQuery(\"#yahoo\");\n\tx.parent();\n\tequals( \"Yahoo\", jQuery(\"#yahoo\").text(), \"Check for non-destructive behaviour\" );\n});\n\ntest(\"length\", function() {\n\texpect(1);\n\tequals( jQuery(\"#qunit-fixture p\").length, 6, \"Get Number of Elements Found\" );\n});\n\ntest(\"size()\", function() {\n\texpect(1);\n\tequals( jQuery(\"#qunit-fixture p\").size(), 6, \"Get Number of Elements Found\" );\n});\n\ntest(\"get()\", function() {\n\texpect(1);\n\tsame( jQuery(\"#qunit-fixture p\").get(), q(\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"), \"Get All Elements\" );\n});\n\ntest(\"toArray()\", function() {\n\texpect(1);\n\tsame( jQuery(\"#qunit-fixture p\").toArray(),\n\t\tq(\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"),\n\t\t\"Convert jQuery object to an Array\" )\n})\n\ntest(\"get(Number)\", function() {\n\texpect(2);\n\tequals( jQuery(\"#qunit-fixture p\").get(0), document.getElementById(\"firstp\"), \"Get A Single Element\" );\n\tstrictEqual( jQuery(\"#firstp\").get(1), undefined, \"Try get with index larger elements count\" );\n});\n\ntest(\"get(-Number)\",function() {\n\texpect(2);\n\tequals( jQuery(\"p\").get(-1), document.getElementById(\"first\"), \"Get a single element with negative index\" );\n\tstrictEqual( jQuery(\"#firstp\").get(-2), undefined, \"Try get with index negative index larger then elements count\" );\n})\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = jQuery(\"div\");\n\tdiv.each(function(){this.foo = \"zoo\";});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"slice()\", function() {\n\texpect(7);\n\n\tvar $links = jQuery(\"#ap a\");\n\n\tsame( $links.slice(1,2).get(), q(\"groups\"), \"slice(1,2)\" );\n\tsame( $links.slice(1).get(), q(\"groups\", \"anchor1\", \"mark\"), \"slice(1)\" );\n\tsame( $links.slice(0,3).get(), q(\"google\", \"groups\", \"anchor1\"), \"slice(0,3)\" );\n\tsame( $links.slice(-1).get(), q(\"mark\"), \"slice(-1)\" );\n\n\tsame( $links.eq(1).get(), q(\"groups\"), \"eq(1)\" );\n\tsame( $links.eq(\"2\").get(), q(\"anchor1\"), \"eq('2')\" );\n\tsame( $links.eq(-1).get(), q(\"mark\"), \"eq(-1)\" );\n});\n\ntest(\"first()/last()\", function() {\n\texpect(4);\n\n\tvar $links = jQuery(\"#ap a\"), $none = jQuery(\"asdf\");\n\n\tsame( $links.first().get(), q(\"google\"), \"first()\" );\n\tsame( $links.last().get(), q(\"mark\"), \"last()\" );\n\n\tsame( $none.first().get(), [], \"first() none\" );\n\tsame( $none.last().get(), [], \"last() none\" );\n});\n\ntest(\"map()\", function() {\n\texpect(8);\n\n\tsame(\n\t\tjQuery(\"#ap\").map(function(){\n\t\t\treturn jQuery(this).find(\"a\").get();\n\t\t}).get(),\n\t\tq(\"google\", \"groups\", \"anchor1\", \"mark\"),\n\t\t\"Array Map\"\n\t);\n\n\tsame(\n\t\tjQuery(\"#ap > a\").map(function(){\n\t\t\treturn this.parentNode;\n\t\t}).get(),\n\t\tq(\"ap\",\"ap\",\"ap\"),\n\t\t\"Single Map\"\n\t);\n\n\t//for #2616\n\tvar keys = jQuery.map( {a:1,b:2}, function( v, k ){\n\t\treturn k;\n\t});\n\tequals( keys.join(\"\"), \"ab\", \"Map the keys from a hash to an array\" );\n\n\tvar values = jQuery.map( {a:1,b:2}, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( values.join(\"\"), \"12\", \"Map the values from a hash to an array\" );\n\n\t// object with length prop\n\tvar values = jQuery.map( {a:1,b:2, length:3}, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( values.join(\"\"), \"123\", \"Map the values from a hash with a length property to an array\" );\n\n\tvar scripts = document.getElementsByTagName(\"script\");\n\tvar mapped = jQuery.map( scripts, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( mapped.length, scripts.length, \"Map an array(-like) to a hash\" );\n\n\tvar nonsense = document.getElementsByTagName(\"asdf\");\n\tvar mapped = jQuery.map( nonsense, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( mapped.length, nonsense.length, \"Map an empty array(-like) to a hash\" );\n\n\tvar flat = jQuery.map( Array(4), function( v, k ){\n\t\treturn k % 2 ? k : [k,k,k];//try mixing array and regular returns\n\t});\n\tequals( flat.join(\"\"), \"00012223\", \"try the new flatten technique(#2616)\" );\n});\n\ntest(\"jQuery.merge()\", function() {\n\texpect(8);\n\n\tvar parse = jQuery.merge;\n\n\tsame( parse([],[]), [], \"Empty arrays\" );\n\n\tsame( parse([1],[2]), [1,2], \"Basic\" );\n\tsame( parse([1,2],[3,4]), [1,2,3,4], \"Basic\" );\n\n\tsame( parse([1,2],[]), [1,2], \"Second empty\" );\n\tsame( parse([],[1,2]), [1,2], \"First empty\" );\n\n\t// Fixed at [5998], #3641\n\tsame( parse([-2,-1], [0,1,2]), [-2,-1,0,1,2], \"Second array including a zero (falsy)\");\n\n\t// After fixing #5527\n\tsame( parse([], [null, undefined]), [null, undefined], \"Second array including null and undefined values\");\n\tsame( parse({length:0}, [1,2]), {length:2, 0:1, 1:2}, \"First array like\");\n});\n\ntest(\"jQuery.extend(Object, Object)\", function() {\n\texpect(28);\n\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" },\n\t\tdeep1 = { foo: { bar: true } },\n\t\tdeep1copy = { foo: { bar: true } },\n\t\tdeep2 = { foo: { baz: true }, foo2: document },\n\t\tdeep2copy = { foo: { baz: true }, foo2: document },\n\t\tdeepmerged = { foo: { bar: true, baz: true }, foo2: document },\n\t\tarr = [1, 2, 3],\n\t\tnestedarray = { arr: arr };\n\n\tjQuery.extend(settings, options);\n\tsame( settings, merged, \"Check if extended: settings must be extended\" );\n\tsame( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n\n\tjQuery.extend(settings, null, options);\n\tsame( settings, merged, \"Check if extended: settings must be extended\" );\n\tsame( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n\n\tjQuery.extend(true, deep1, deep2);\n\tsame( deep1.foo, deepmerged.foo, \"Check if foo: settings must be extended\" );\n\tsame( deep2.foo, deep2copy.foo, \"Check if not deep2: options must not be modified\" );\n\tequals( deep1.foo2, document, \"Make sure that a deep clone was not attempted on the document\" );\n\n\tok( jQuery.extend(true, {}, nestedarray).arr !== arr, \"Deep extend of object must clone child array\" );\n\n\t// #5991\n\tok( jQuery.isArray( jQuery.extend(true, { arr: {} }, nestedarray).arr ), \"Cloned array heve to be an Array\" );\n\tok( jQuery.isPlainObject( jQuery.extend(true, { arr: arr }, { arr: {} }).arr ), \"Cloned object heve to be an plain object\" );\n\n\tvar empty = {};\n\tvar optionsWithLength = { foo: { length: -1 } };\n\tjQuery.extend(true, empty, optionsWithLength);\n\tsame( empty.foo, optionsWithLength.foo, \"The length property must copy correctly\" );\n\n\tempty = {};\n\tvar optionsWithDate = { foo: { date: new Date } };\n\tjQuery.extend(true, empty, optionsWithDate);\n\tsame( empty.foo, optionsWithDate.foo, \"Dates copy correctly\" );\n\n\tvar myKlass = function() {};\n\tvar customObject = new myKlass();\n\tvar optionsWithCustomObject = { foo: { date: customObject } };\n\tempty = {};\n\tjQuery.extend(true, empty, optionsWithCustomObject);\n\tok( empty.foo && empty.foo.date === customObject, \"Custom objects copy correctly (no methods)\" );\n\n\t// Makes the class a little more realistic\n\tmyKlass.prototype = { someMethod: function(){} };\n\tempty = {};\n\tjQuery.extend(true, empty, optionsWithCustomObject);\n\tok( empty.foo && empty.foo.date === customObject, \"Custom objects copy correctly\" );\n\n\tvar ret = jQuery.extend(true, { foo: 4 }, { foo: new Number(5) } );\n\tok( ret.foo == 5, \"Wrapped numbers copy correctly\" );\n\n\tvar nullUndef;\n\tnullUndef = jQuery.extend({}, options, { xnumber2: null });\n\tok( nullUndef.xnumber2 === null, \"Check to make sure null values are copied\");\n\n\tnullUndef = jQuery.extend({}, options, { xnumber2: undefined });\n\tok( nullUndef.xnumber2 === options.xnumber2, \"Check to make sure undefined values are not copied\");\n\n\tnullUndef = jQuery.extend({}, options, { xnumber0: null });\n\tok( nullUndef.xnumber0 === null, \"Check to make sure null values are inserted\");\n\n\tvar target = {};\n\tvar recursive = { foo:target, bar:5 };\n\tjQuery.extend(true, target, recursive);\n\tsame( target, { bar:5 }, \"Check to make sure a recursive obj doesn't go never-ending loop by not copying it over\" );\n\n\tvar ret = jQuery.extend(true, { foo: [] }, { foo: [0] } ); // 1907\n\tequals( ret.foo.length, 1, \"Check to make sure a value with coersion 'false' copies over when necessary to fix #1907\" );\n\n\tvar ret = jQuery.extend(true, { foo: \"1,2,3\" }, { foo: [1, 2, 3] } );\n\tok( typeof ret.foo != \"string\", \"Check to make sure values equal with coersion (but not actually equal) overwrite correctly\" );\n\n\tvar ret = jQuery.extend(true, { foo:\"bar\" }, { foo:null } );\n\tok( typeof ret.foo !== \"undefined\", \"Make sure a null value doesn't crash with deep extend, for #1908\" );\n\n\tvar obj = { foo:null };\n\tjQuery.extend(true, obj, { foo:\"notnull\" } );\n\tequals( obj.foo, \"notnull\", \"Make sure a null value can be overwritten\" );\n\n\tfunction func() {}\n\tjQuery.extend(func, { key: \"value\" } );\n\tequals( func.key, \"value\", \"Verify a function can be extended\" );\n\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged2 = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tsame( settings, merged2, \"Check if extended: settings must be extended\" );\n\tsame( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tsame( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tsame( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"jQuery.each(Object,Function)\", function() {\n\texpect(14);\n\tjQuery.each( [0,1,2], function(i, n){\n\t\tequals( i, n, \"Check array iteration\" );\n\t});\n\n\tjQuery.each( [5,6,7], function(i, n){\n\t\tequals( i, n - 5, \"Check array iteration\" );\n\t});\n\n\tjQuery.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tequals( i, n, \"Check object iteration\" );\n\t});\n\n\tvar total = 0;\n\tjQuery.each([1,2,3], function(i,v){ total += v; });\n\tequals( total, 6, \"Looping over an array\" );\n\ttotal = 0;\n\tjQuery.each([1,2,3], function(i,v){ total += v; if ( i == 1 ) return false; });\n\tequals( total, 3, \"Looping over an array, with break\" );\n\ttotal = 0;\n\tjQuery.each({\"a\":1,\"b\":2,\"c\":3}, function(i,v){ total += v; });\n\tequals( total, 6, \"Looping over an object\" );\n\ttotal = 0;\n\tjQuery.each({\"a\":3,\"b\":3,\"c\":3}, function(i,v){ total += v; return false; });\n\tequals( total, 3, \"Looping over an object, with break\" );\n\n\tvar f = function(){};\n\tf.foo = \"bar\";\n\tjQuery.each(f, function(i){\n\t\tf[i] = \"baz\";\n\t});\n\tequals( \"baz\", f.foo, \"Loop over a function\" );\n\n\tvar stylesheet_count = 0;\n\tjQuery.each(document.styleSheets, function(i){\n\t\tstylesheet_count++;\n\t});\n\tequals(stylesheet_count, 2, \"should not throw an error in IE while looping over document.styleSheets and return proper amount\");\n\n});\n\ntest(\"jQuery.makeArray\", function(){\n\texpect(17);\n\n\tequals( jQuery.makeArray(jQuery(\"html>*\"))[0].nodeName.toUpperCase(), \"HEAD\", \"Pass makeArray a jQuery object\" );\n\n\tequals( jQuery.makeArray(document.getElementsByName(\"PWD\")).slice(0,1)[0].name, \"PWD\", \"Pass makeArray a nodelist\" );\n\n\tequals( (function(){ return jQuery.makeArray(arguments); })(1,2).join(\"\"), \"12\", \"Pass makeArray an arguments array\" );\n\n\tequals( jQuery.makeArray([1,2,3]).join(\"\"), \"123\", \"Pass makeArray a real array\" );\n\n\tequals( jQuery.makeArray().length, 0, \"Pass nothing to makeArray and expect an empty array\" );\n\n\tequals( jQuery.makeArray( 0 )[0], 0 , \"Pass makeArray a number\" );\n\n\tequals( jQuery.makeArray( \"foo\" )[0], \"foo\", \"Pass makeArray a string\" );\n\n\tequals( jQuery.makeArray( true )[0].constructor, Boolean, \"Pass makeArray a boolean\" );\n\n\tequals( jQuery.makeArray( document.createElement(\"div\") )[0].nodeName.toUpperCase(), \"DIV\", \"Pass makeArray a single node\" );\n\n\tequals( jQuery.makeArray( {length:2, 0:\"a\", 1:\"b\"} ).join(\"\"), \"ab\", \"Pass makeArray an array like map (with length)\" );\n\n\tok( !!jQuery.makeArray( document.documentElement.childNodes ).slice(0,1)[0].nodeName, \"Pass makeArray a childNodes array\" );\n\n\t// function, is tricky as it has length\n\tequals( jQuery.makeArray( function(){ return 1;} )[0](), 1, \"Pass makeArray a function\" );\n\n\t//window, also has length\n\tequals( jQuery.makeArray(window)[0], window, \"Pass makeArray the window\" );\n\n\tequals( jQuery.makeArray(/a/)[0].constructor, RegExp, \"Pass makeArray a regex\" );\n\n\tok( jQuery.makeArray(document.getElementById(\"form\")).length >= 13, \"Pass makeArray a form (treat as elements)\" );\n\n\t// For #5610\n\tsame( jQuery.makeArray({length: \"0\"}), [], \"Make sure object is coerced properly.\");\n\tsame( jQuery.makeArray({length: \"5\"}), [], \"Make sure object is coerced properly.\");\n});\n\ntest(\"jQuery.isEmptyObject\", function(){\n\texpect(2);\n\n\tequals(true, jQuery.isEmptyObject({}), \"isEmptyObject on empty object literal\" );\n\tequals(false, jQuery.isEmptyObject({a:1}), \"isEmptyObject on non-empty object literal\" );\n\n\t// What about this ?\n\t// equals(true, jQuery.isEmptyObject(null), \"isEmptyObject on null\" );\n});\n\ntest(\"jQuery.proxy\", function(){\n\texpect(7);\n\n\tvar test = function(){ equals( this, thisObject, \"Make sure that scope is set properly.\" ); };\n\tvar thisObject = { foo: \"bar\", method: test };\n\n\t// Make sure normal works\n\ttest.call( thisObject );\n\n\t// Basic scoping\n\tjQuery.proxy( test, thisObject )();\n\n\t// Another take on it\n\tjQuery.proxy( thisObject, \"method\" )();\n\n\t// Make sure it doesn't freak out\n\tequals( jQuery.proxy( null, thisObject ), undefined, \"Make sure no function was returned.\" );\n\n        // Partial application\n        var test2 = function( a ){ equals( a, \"pre-applied\", \"Ensure arguments can be pre-applied.\" ); };\n        jQuery.proxy( test2, null, \"pre-applied\" )();\n\n        // Partial application w/ normal arguments\n        var test3 = function( a, b ){ equals( b, \"normal\", \"Ensure arguments can be pre-applied and passed as usual.\" ); };\n        jQuery.proxy( test3, null, \"pre-applied\" )( \"normal\" );\n\n\t// Test old syntax\n\tvar test4 = { meth: function( a ){ equals( a, \"boom\", \"Ensure old syntax works.\" ); } };\n\tjQuery.proxy( test4, \"meth\" )( \"boom\" );\n});\n\ntest(\"jQuery.parseJSON\", function(){\n\texpect(8);\n\n\tequals( jQuery.parseJSON(), null, \"Nothing in, null out.\" );\n\tequals( jQuery.parseJSON( null ), null, \"Nothing in, null out.\" );\n\tequals( jQuery.parseJSON( \"\" ), null, \"Nothing in, null out.\" );\n\n\tsame( jQuery.parseJSON(\"{}\"), {}, \"Plain object parsing.\" );\n\tsame( jQuery.parseJSON(\"{\\\"test\\\":1}\"), {\"test\":1}, \"Plain object parsing.\" );\n\n\tsame( jQuery.parseJSON(\"\\n{\\\"test\\\":1}\"), {\"test\":1}, \"Make sure leading whitespaces are handled.\" );\n\n\ttry {\n\t\tjQuery.parseJSON(\"{a:1}\");\n\t\tok( false, \"Test malformed JSON string.\" );\n\t} catch( e ) {\n\t\tok( true, \"Test malformed JSON string.\" );\n\t}\n\n\ttry {\n\t\tjQuery.parseJSON(\"{'a':1}\");\n\t\tok( false, \"Test malformed JSON string.\" );\n\t} catch( e ) {\n\t\tok( true, \"Test malformed JSON string.\" );\n\t}\n});\n\ntest(\"jQuery.parseXML\", 4, function(){\n\tvar xml, tmp;\n\ttry {\n\t\txml = jQuery.parseXML( \"<p>A <b>well-formed</b> xml string</p>\" );\n\t\ttmp = xml.getElementsByTagName( \"p\" )[ 0 ];\n\t\tok( !!tmp, \"<p> present in document\" );\n\t\ttmp = tmp.getElementsByTagName( \"b\" )[ 0 ];\n\t\tok( !!tmp, \"<b> present in document\" );\n\t\tstrictEqual( tmp.childNodes[ 0 ].nodeValue, \"well-formed\", \"<b> text is as expected\" );\n\t} catch (e) {\n\t\tstrictEqual( e, undefined, \"unexpected error\" );\n\t}\n\ttry {\n\t\txml = jQuery.parseXML( \"<p>Not a <<b>well-formed</b> xml string</p>\" );\n\t\tok( false, \"invalid xml not detected\" );\n\t} catch( e ) {\n\t\tstrictEqual( e, \"Invalid XML: <p>Not a <<b>well-formed</b> xml string</p>\", \"invalid xml detected\" );\n\t}\n});\n\ntest(\"jQuery.sub() - Static Methods\", function(){\n    expect(18);\n    var Subclass = jQuery.sub();\n    Subclass.extend({\n        topLevelMethod: function() {return this.debug;},\n        debug: false,\n        config: {\n            locale: \"en_US\"\n        },\n        setup: function(config) {\n            this.extend(true, this.config, config);\n        }\n    });\n    Subclass.fn.extend({subClassMethod: function() { return this;}});\n\n    //Test Simple Subclass\n    ok(Subclass.topLevelMethod() === false, \"Subclass.topLevelMethod thought debug was true\");\n    ok(Subclass.config.locale == \"en_US\", Subclass.config.locale + \" is wrong!\");\n    same(Subclass.config.test, undefined, \"Subclass.config.test is set incorrectly\");\n    equal(jQuery.ajax, Subclass.ajax, \"The subclass failed to get all top level methods\");\n\n    //Create a SubSubclass\n    var SubSubclass = Subclass.sub();\n\n    //Make Sure the SubSubclass inherited properly\n    ok(SubSubclass.topLevelMethod() === false, \"SubSubclass.topLevelMethod thought debug was true\");\n    ok(SubSubclass.config.locale == \"en_US\", SubSubclass.config.locale + \" is wrong!\");\n    same(SubSubclass.config.test, undefined, \"SubSubclass.config.test is set incorrectly\");\n    equal(jQuery.ajax, SubSubclass.ajax, \"The subsubclass failed to get all top level methods\");\n\n    //Modify The Subclass and test the Modifications\n    SubSubclass.fn.extend({subSubClassMethod: function() { return this;}});\n    SubSubclass.setup({locale: \"es_MX\", test: \"worked\"});\n    SubSubclass.debug = true;\n    SubSubclass.ajax = function() {return false;};\n    ok(SubSubclass.topLevelMethod(), \"SubSubclass.topLevelMethod thought debug was false\");\n    same(SubSubclass(document).subClassMethod, Subclass.fn.subClassMethod, \"Methods Differ!\");\n    ok(SubSubclass.config.locale == \"es_MX\", SubSubclass.config.locale + \" is wrong!\");\n    ok(SubSubclass.config.test == \"worked\", \"SubSubclass.config.test is set incorrectly\");\n    notEqual(jQuery.ajax, SubSubclass.ajax, \"The subsubclass failed to get all top level methods\");\n\n    //This shows that the modifications to the SubSubClass did not bubble back up to it's superclass\n    ok(Subclass.topLevelMethod() === false, \"Subclass.topLevelMethod thought debug was true\");\n    ok(Subclass.config.locale == \"en_US\", Subclass.config.locale + \" is wrong!\");\n    same(Subclass.config.test, undefined, \"Subclass.config.test is set incorrectly\");\n    same(Subclass(document).subSubClassMethod, undefined, \"subSubClassMethod set incorrectly\");\n    equal(jQuery.ajax, Subclass.ajax, \"The subclass failed to get all top level methods\");\n});\n\ntest(\"jQuery.sub() - .fn Methods\", function(){\n\texpect(378);\n\n\tvar Subclass = jQuery.sub(),\n\t\t\tSubclassSubclass = Subclass.sub(),\n\t\t\tjQueryDocument = jQuery(document),\n\t\t\tselectors, contexts, methods, method, arg, description;\n\n\tjQueryDocument.toString = function(){ return \"jQueryDocument\"; };\n\n\tSubclass.fn.subclassMethod = function(){};\n\tSubclassSubclass.fn.subclassSubclassMethod = function(){};\n\n\tselectors = [\n\t\t\"body\",\n\t\t\"html, body\",\n\t\t\"<div></div>\"\n\t];\n\n\tmethods = [ // all methods that return a new jQuery instance\n\t\t[\"eq\", 1],\n\t\t[\"add\", document],\n\t\t[\"end\"],\n\t\t[\"has\"],\n\t\t[\"closest\", \"div\"],\n\t\t[\"filter\", document],\n\t\t[\"find\", \"div\"]\n\t];\n\n\tcontexts = [undefined, document, jQueryDocument];\n\n\tjQuery.each(selectors, function(i, selector){\n\n\t\tjQuery.each(methods, function(){\n\t\t\tmethod = this[0];\n\t\t\targ = this[1];\n\n\t\t\tjQuery.each(contexts, function(i, context){\n\n\t\t\t\tdescription = \"(\\\"\"+selector+\"\\\", \"+context+\").\"+method+\"(\"+(arg||\"\")+\")\";\n\n\t\t\t\tsame(\n\t\t\t\t\tjQuery(selector, context)[method](arg).subclassMethod, undefined,\n\t\t\t\t\t\"jQuery\"+description+\" doesn't have Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tjQuery(selector, context)[method](arg).subclassSubclassMethod, undefined,\n\t\t\t\t\t\"jQuery\"+description+\" doesn't have SubclassSubclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclass(selector, context)[method](arg).subclassMethod, Subclass.fn.subclassMethod,\n\t\t\t\t\t\"Subclass\"+description+\" has Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclass(selector, context)[method](arg).subclassSubclassMethod, undefined,\n\t\t\t\t\t\"Subclass\"+description+\" doesn't have SubclassSubclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclassSubclass(selector, context)[method](arg).subclassMethod, Subclass.fn.subclassMethod,\n\t\t\t\t\t\"SubclassSubclass\"+description+\" has Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclassSubclass(selector, context)[method](arg).subclassSubclassMethod, SubclassSubclass.fn.subclassSubclassMethod,\n\t\t\t\t\t\"SubclassSubclass\"+description+\" has SubclassSubclass methods\"\n\t\t\t\t);\n\n\t\t\t});\n\t\t});\n\t});\n\n});\n\ntest(\"jQuery.camelCase()\", function() {\n\n\tvar tests = {\n\t\t\"foo-bar\": \"fooBar\",\n\t\t\"foo-bar-baz\": \"fooBarBaz\",\n\t\t\"girl-u-want\": \"girlUWant\",\n\t\t\"the-4th-dimension\": \"the4thDimension\",\n\t\t\"-o-tannenbaum\": \"OTannenbaum\",\n\t\t\"-moz-illa\": \"MozIlla\",\n\t\t\"-ms-take\": \"msTake\"\n\t};\n\n\texpect(7);\n\n\tjQuery.each( tests, function( key, val ) {\n\t\tequal( jQuery.camelCase( key ), val, \"Converts: \" + key + \" => \" + val );\n\t});\n});\n"], "fixing_code": ["var jQuery = (function() {\n\n// Define a local copy of jQuery\nvar jQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// A simple way to check for HTML strings or ID strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\tquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n\t// Check if a string has a non-whitespace character in it\n\trnotwhite = /\\S/,\n\n\t// Used for trimming whitespace\n\ttrimLeft = /^\\s+/,\n\ttrimRight = /\\s+$/,\n\n\t// Check for digits\n\trdigit = /\\d/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\n\n\t// JSON RegExp\n\trvalidchars = /^[\\],:{}\\s]*$/,\n\trvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\n\trvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\n\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n\n\t// Useragent RegExp\n\trchrome = /(chrome)[ \\/]([\\w.]+)/,\n\trwebkit = /(webkit)[ \\/]([\\w.]+)/,\n\tropera = /(opera)(?:.*version)?[ \\/]([\\w.]+)/,\n\trmsie = /(msie) ([\\w.]+)/,\n\trmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/,\n\n\t// Matches dashed string for camelizing\n\trdashAlpha = /-([a-z]|[0-9])/ig,\n\trmsPrefix = /^-ms-/,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn ( letter + \"\" ).toUpperCase();\n\t},\n\n\t// Keep a UserAgent string for use with jQuery.browser\n\tuserAgent = navigator.userAgent,\n\n\t// For matching the engine and version of the browser\n\tbrowserMatch,\n\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// The ready event handler\n\tDOMContentLoaded,\n\n\t// Save a reference to some core methods\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tpush = Array.prototype.push,\n\tslice = Array.prototype.slice,\n\ttrim = String.prototype.trim,\n\tindexOf = Array.prototype.indexOf,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {};\n\njQuery.fn = jQuery.prototype = {\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem, ret, doc;\n\n\t\t// Handle $(\"\"), $(null), or $(undefined)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\t// The body element only exists once, optimize finding it\n\t\tif ( selector === \"body\" && !context && document.body ) {\n\t\t\tthis.context = document;\n\t\t\tthis[0] = document.body;\n\t\t\tthis.selector = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = quickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\t\t\t\t\tdoc = (context ? context.ownerDocument || context : document);\n\n\t\t\t\t\t// If a single string is passed in and it's a single tag\n\t\t\t\t\t// just do a createElement and skip the rest\n\t\t\t\t\tret = rsingleTag.exec( selector );\n\n\t\t\t\t\tif ( ret ) {\n\t\t\t\t\t\tif ( jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\t\tselector = [ document.createElement( ret[1] ) ];\n\t\t\t\t\t\t\tjQuery.fn.attr.call( selector, context, true );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselector = [ doc.createElement( ret[1] ) ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = jQuery.buildFragment( [ match[1] ], [ doc ] );\n\t\t\t\t\t\tselector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.merge( this, selector );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id !== match[2] ) {\n\t\t\t\t\t\t\treturn rootjQuery.find( selector );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn (context || rootjQuery).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif (selector.selector !== undefined) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The current version of jQuery being used\n\tjquery: \"@VERSION\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\t// The number of elements contained in the matched element set\n\tsize: function() {\n\t\treturn this.length;\n\t},\n\n\ttoArray: function() {\n\t\treturn slice.call( this, 0 );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems, name, selector ) {\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = this.constructor();\n\n\t\tif ( jQuery.isArray( elems ) ) {\n\t\t\tpush.apply( ret, elems );\n\n\t\t} else {\n\t\t\tjQuery.merge( ret, elems );\n\t\t}\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\tret.context = this.context;\n\n\t\tif ( name === \"find\" ) {\n\t\t\tret.selector = this.selector + (this.selector ? \" \" : \"\") + selector;\n\t\t} else if ( name ) {\n\t\t\tret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\n\t\t}\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Attach the listeners\n\t\tjQuery.bindReady();\n\n\t\t// Add the callback\n\t\treadyList.done( fn );\n\n\t\treturn this;\n\t},\n\n\teq: function( i ) {\n\t\treturn i === -1 ?\n\t\t\tthis.slice( i ) :\n\t\t\tthis.slice( i, +i + 1 );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ),\n\t\t\t\"slice\", slice.call(arguments).join(\",\") );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\t\t// Either a released hold or an DOMready/load event and not yet ready\n\t\tif ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {\n\t\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\t\tif ( !document.body ) {\n\t\t\t\treturn setTimeout( jQuery.ready, 1 );\n\t\t\t}\n\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\n\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there are functions bound, to execute\n\t\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t\t// Trigger any bound ready events\n\t\t\tif ( jQuery.fn.trigger ) {\n\t\t\t\tjQuery( document ).trigger( \"ready\" ).unbind( \"ready\" );\n\t\t\t}\n\t\t}\n\t},\n\n\tbindReady: function() {\n\t\tif ( readyList ) {\n\t\t\treturn;\n\t\t}\n\n\t\treadyList = jQuery._Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the\n\t\t// browser event has already occurred.\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\treturn setTimeout( jQuery.ready, 1 );\n\t\t}\n\n\t\t// Mozilla, Opera and webkit nightlies currently support this event\n\t\tif ( document.addEventListener ) {\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", jQuery.ready, false );\n\n\t\t// If IE event model is used\n\t\t} else if ( document.attachEvent ) {\n\t\t\t// ensure firing before onload,\n\t\t\t// maybe late but safe also for iframes\n\t\t\tdocument.attachEvent( \"onreadystatechange\", DOMContentLoaded );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.attachEvent( \"onload\", jQuery.ready );\n\n\t\t\t// If IE and not a frame\n\t\t\t// continually check to see if the document is ready\n\t\t\tvar toplevel = false;\n\n\t\t\ttry {\n\t\t\t\ttoplevel = window.frameElement == null;\n\t\t\t} catch(e) {}\n\n\t\t\tif ( document.documentElement.doScroll && toplevel ) {\n\t\t\t\tdoScrollCheck();\n\t\t\t}\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray || function( obj ) {\n\t\treturn jQuery.type(obj) === \"array\";\n\t},\n\n\t// A crude way of determining if an object is a window\n\tisWindow: function( obj ) {\n\t\treturn obj && typeof obj === \"object\" && \"setInterval\" in obj;\n\t},\n\n\tisNaN: function( obj ) {\n\t\treturn obj == null || !rdigit.test( obj ) || isNaN( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\treturn obj == null ?\n\t\t\tString( obj ) :\n\t\t\tclass2type[ toString.call(obj) ] || \"object\";\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Must be an Object.\n\t\t// Because of IE, we also have to check the presence of the constructor property.\n\t\t// Make sure that DOM nodes and window objects don't pass through, as well\n\t\tif ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\n\t\tvar key;\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tfor ( var name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow msg;\n\t},\n\n\tparseJSON: function( data ) {\n\t\tif ( typeof data !== \"string\" || !data ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Make sure leading/trailing whitespace is removed (IE can't handle it)\n\t\tdata = jQuery.trim( data );\n\n\t\t// Attempt to parse using the native JSON parser first\n\t\tif ( window.JSON && window.JSON.parse ) {\n\t\t\treturn window.JSON.parse( data );\n\t\t}\n\n\t\t// Make sure the incoming data is actual JSON\n\t\t// Logic borrowed from http://json.org/json2.js\n\t\tif ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n\t\t\t.replace( rvalidtokens, \"]\" )\n\t\t\t.replace( rvalidbraces, \"\")) ) {\n\n\t\t\treturn (new Function( \"return \" + data ))();\n\n\t\t}\n\t\tjQuery.error( \"Invalid JSON: \" + data );\n\t},\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\ttry {\n\t\t\tif ( window.DOMParser ) { // Standard\n\t\t\t\ttmp = new DOMParser();\n\t\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t\t} else { // IE\n\t\t\t\txml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n\t\t\t\txml.async = \"false\";\n\t\t\t\txml.loadXML( data );\n\t\t\t}\n\t\t} catch( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\t// Workarounds based on findings by Jim Driscoll\n\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n\tglobalEval: function( data ) {\n\t\tif ( data && rnotwhite.test( data ) ) {\n\t\t\t// We use execScript on Internet Explorer\n\t\t\t// We use an anonymous function so that context is window\n\t\t\t// rather than jQuery in Firefox\n\t\t\t( window.execScript || function( data ) {\n\t\t\t\twindow[ \"eval\" ].call( window, data );\n\t\t\t} )( data );\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( object, callback, args ) {\n\t\tvar name, i = 0,\n\t\t\tlength = object.length,\n\t\t\tisObj = length === undefined || jQuery.isFunction( object );\n\n\t\tif ( args ) {\n\t\t\tif ( isObj ) {\n\t\t\t\tfor ( name in object ) {\n\t\t\t\t\tif ( callback.apply( object[ name ], args ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; i < length; ) {\n\t\t\t\t\tif ( callback.apply( object[ i++ ], args ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isObj ) {\n\t\t\t\tfor ( name in object ) {\n\t\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; i < length; ) {\n\t\t\t\t\tif ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t},\n\n\t// Use native String.trim function wherever possible\n\ttrim: trim ?\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttrim.call( text );\n\t\t} :\n\n\t\t// Otherwise use our own trimming functionality\n\t\tfunction( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttext.toString().replace( trimLeft, \"\" ).replace( trimRight, \"\" );\n\t\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( array, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( array != null ) {\n\t\t\t// The window, strings (and functions) also have 'length'\n\t\t\t// The extra typeof function check is to prevent crashes\n\t\t\t// in Safari 2 (See: #3039)\n\t\t\t// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\n\t\t\tvar type = jQuery.type( array );\n\n\t\t\tif ( array.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow( array ) ) {\n\t\t\t\tpush.call( ret, array );\n\t\t\t} else {\n\t\t\t\tjQuery.merge( ret, array );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, array ) {\n\n\t\tif ( indexOf ) {\n\t\t\treturn indexOf.call( array, elem );\n\t\t}\n\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tif ( array[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar i = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof second.length === \"number\" ) {\n\t\t\tfor ( var l = second.length; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar ret = [], retVal;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value, key, ret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\t// jquery objects are treated as arrays\n\t\t\tisArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( key in elems ) {\n\t\t\t\tvalue = callback( elems[ key ], key, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn ret.concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tif ( typeof context === \"string\" ) {\n\t\t\tvar tmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\tvar args = slice.call( arguments, 2 ),\n\t\t\tproxy = function() {\n\t\t\t\treturn fn.apply( context, args.concat( slice.call( arguments ) ) );\n\t\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Mutifunctional method to get and set values to a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, key, value, exec, fn, pass ) {\n\t\tvar length = elems.length;\n\n\t\t// Setting many attributes\n\t\tif ( typeof key === \"object\" ) {\n\t\t\tfor ( var k in key ) {\n\t\t\t\tjQuery.access( elems, k, key[k], exec, fn, value );\n\t\t\t}\n\t\t\treturn elems;\n\t\t}\n\n\t\t// Setting one attribute\n\t\tif ( value !== undefined ) {\n\t\t\t// Optionally, function values get executed if exec is true\n\t\t\texec = !pass && exec && jQuery.isFunction(value);\n\n\t\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t\t\tfn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );\n\t\t\t}\n\n\t\t\treturn elems;\n\t\t}\n\n\t\t// Getting an attribute\n\t\treturn length ? fn( elems[0], key ) : undefined;\n\t},\n\n\tnow: function() {\n\t\treturn (new Date()).getTime();\n\t},\n\n\t// Use of jQuery.browser is frowned upon.\n\t// More details: http://docs.jquery.com/Utilities/jQuery.browser\n\tuaMatch: function( ua ) {\n\t\tua = ua.toLowerCase();\n\n\t\tvar match = rchrome.exec( ua ) ||\n\t\t\trwebkit.exec( ua ) ||\n\t\t\tropera.exec( ua ) ||\n\t\t\trmsie.exec( ua ) ||\n\t\t\tua.indexOf(\"compatible\") < 0 && rmozilla.exec( ua ) ||\n\t\t\t[];\n\n\t\treturn { browser: match[1] || \"\", version: match[2] || \"0\" };\n\t},\n\n\tsub: function() {\n\t\tfunction jQuerySub( selector, context ) {\n\t\t\treturn new jQuerySub.fn.init( selector, context );\n\t\t}\n\t\tjQuery.extend( true, jQuerySub, this );\n\t\tjQuerySub.superclass = this;\n\t\tjQuerySub.fn = jQuerySub.prototype = this();\n\t\tjQuerySub.fn.constructor = jQuerySub;\n\t\tjQuerySub.sub = this.sub;\n\t\tjQuerySub.fn.init = function init( selector, context ) {\n\t\t\tif ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {\n\t\t\t\tcontext = jQuerySub( context );\n\t\t\t}\n\n\t\t\treturn jQuery.fn.init.call( this, selector, context, rootjQuerySub );\n\t\t};\n\t\tjQuerySub.fn.init.prototype = jQuerySub.fn;\n\t\tvar rootjQuerySub = jQuerySub(document);\n\t\treturn jQuerySub;\n\t},\n\n\tbrowser: {}\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nbrowserMatch = jQuery.uaMatch( userAgent );\nif ( browserMatch.browser ) {\n\tjQuery.browser[ browserMatch.browser ] = true;\n\tjQuery.browser.version = browserMatch.version;\n}\n\n// Deprecated, use jQuery.browser.webkit instead\nif ( jQuery.browser.webkit ) {\n\tjQuery.browser.safari = true;\n}\n\n// IE doesn't match non-breaking spaces with \\s\nif ( rnotwhite.test( \"\\xA0\" ) ) {\n\ttrimLeft = /^[\\s\\xA0]+/;\n\ttrimRight = /[\\s\\xA0]+$/;\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n\n// Cleanup functions for the document ready method\nif ( document.addEventListener ) {\n\tDOMContentLoaded = function() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n\t\tjQuery.ready();\n\t};\n\n} else if ( document.attachEvent ) {\n\tDOMContentLoaded = function() {\n\t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\tdocument.detachEvent( \"onreadystatechange\", DOMContentLoaded );\n\t\t\tjQuery.ready();\n\t\t}\n\t};\n}\n\n// The DOM ready check for Internet Explorer\nfunction doScrollCheck() {\n\tif ( jQuery.isReady ) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\t// If IE is used, use the trick by Diego Perini\n\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\tdocument.documentElement.doScroll(\"left\");\n\t} catch(e) {\n\t\tsetTimeout( doScrollCheck, 1 );\n\t\treturn;\n\t}\n\n\t// and execute any waiting functions\n\tjQuery.ready();\n}\n\nreturn jQuery;\n\n})();\n", "module(\"core\", { teardown: moduleTeardown });\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$\" );\n});\n\ntest(\"jQuery()\", function() {\n\texpect(29);\n\n\t// Basic constructor's behavior\n\n\tequals( jQuery().length, 0, \"jQuery() === jQuery([])\" );\n\tequals( jQuery(undefined).length, 0, \"jQuery(undefined) === jQuery([])\" );\n\tequals( jQuery(null).length, 0, \"jQuery(null) === jQuery([])\" );\n\tequals( jQuery(\"\").length, 0, \"jQuery('') === jQuery([])\" );\n\tequals( jQuery(\"#\").length, 0, \"jQuery('#') === jQuery([])\" );\n\n\tvar obj = jQuery(\"div\");\n\tequals( jQuery(obj).selector, \"div\", \"jQuery(jQueryObj) == jQueryObj\" );\n\n\t\t// can actually yield more than one, when iframes are included, the window is an array as well\n\tequals( jQuery(window).length, 1, \"Correct number of elements generated for jQuery(window)\" );\n\n\n\tvar main = jQuery(\"#qunit-fixture\");\n\tsame( jQuery(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\n/*\n\t// disabled since this test was doing nothing. i tried to fix it but i'm not sure\n\t// what the expected behavior should even be. FF returns \"\\n\" for the text node\n\t// make sure this is handled\n\tvar crlfContainer = jQuery('<p>\\r\\n</p>');\n\tvar x = crlfContainer.contents().get(0).nodeValue;\n\tequals( x, what???, \"Check for \\\\r and \\\\n in jQuery()\" );\n*/\n\n\t/* // Disabled until we add this functionality in\n\tvar pass = true;\n\ttry {\n\t\tjQuery(\"<div>Testing</div>\").appendTo(document.getElementById(\"iframe\").contentDocument.body);\n\t} catch(e){\n\t\tpass = false;\n\t}\n\tok( pass, \"jQuery('&lt;tag&gt;') needs optional document parameter to ease cross-frame DOM wrangling, see #968\" );*/\n\n\tvar code = jQuery(\"<code/>\");\n\tequals( code.length, 1, \"Correct number of elements generated for code\" );\n\tequals( code.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\tvar img = jQuery(\"<img/>\");\n\tequals( img.length, 1, \"Correct number of elements generated for img\" );\n\tequals( img.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\tvar div = jQuery(\"<div/><hr/><code/><b/>\");\n\tequals( div.length, 4, \"Correct number of elements generated for div hr code b\" );\n\tequals( div.parent().length, 0, \"Make sure that the generated HTML has no parent.\" );\n\n\tequals( jQuery([1,2,3]).get(1), 2, \"Test passing an array to the factory\" );\n\n\tequals( jQuery(document.body).get(0), jQuery(\"body\").get(0), \"Test passing an html node to the factory\" );\n\n\tvar exec = false;\n\n\tvar elem = jQuery(\"<div/>\", {\n\t\twidth: 10,\n\t\tcss: { paddingLeft:1, paddingRight:1 },\n\t\tclick: function(){ ok(exec, \"Click executed.\"); },\n\t\ttext: \"test\",\n\t\t\"class\": \"test2\",\n\t\tid: \"test3\"\n\t});\n\n\tequals( elem[0].style.width, \"10px\", \"jQuery() quick setter width\");\n\tequals( elem[0].style.paddingLeft, \"1px\", \"jQuery quick setter css\");\n\tequals( elem[0].style.paddingRight, \"1px\", \"jQuery quick setter css\");\n\tequals( elem[0].childNodes.length, 1, \"jQuery quick setter text\");\n\tequals( elem[0].firstChild.nodeValue, \"test\", \"jQuery quick setter text\");\n\tequals( elem[0].className, \"test2\", \"jQuery() quick setter class\");\n\tequals( elem[0].id, \"test3\", \"jQuery() quick setter id\");\n\n\texec = true;\n\telem.click();\n\n\t// manually clean up detached elements\n\telem.remove();\n\n\tfor ( var i = 0; i < 3; ++i ) {\n\t\telem = jQuery(\"<input type='text' value='TEST' />\");\n\t}\n\tequals( elem[0].defaultValue, \"TEST\", \"Ensure cached nodes are cloned properly (Bug #6655)\" );\n\n\t// manually clean up detached elements\n\telem.remove();\n\n\tequals( jQuery(\" <div/> \").length, 1, \"Make sure whitespace is trimmed.\" );\n\tequals( jQuery(\" a<div/>b \").length, 1, \"Make sure whitespace and other characters are trimmed.\" );\n\n\tvar long = \"\";\n\tfor ( var i = 0; i < 128; i++ ) {\n\t\tlong += \"12345678\";\n\t}\n\n\tequals( jQuery(\" <div>\" + long + \"</div> \").length, 1, \"Make sure whitespace is trimmed on long strings.\" );\n\tequals( jQuery(\" a<div>\" + long + \"</div>b \").length, 1, \"Make sure whitespace and other characters are trimmed on long strings.\" );\n});\n\ntest(\"selector state\", function() {\n\texpect(31);\n\n\tvar test;\n\n\ttest = jQuery(undefined);\n\tequals( test.selector, \"\", \"Empty jQuery Selector\" );\n\tequals( test.context, undefined, \"Empty jQuery Context\" );\n\n\ttest = jQuery(document);\n\tequals( test.selector, \"\", \"Document Selector\" );\n\tequals( test.context, document, \"Document Context\" );\n\n\ttest = jQuery(document.body);\n\tequals( test.selector, \"\", \"Body Selector\" );\n\tequals( test.context, document.body, \"Body Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\");\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(\"#notfoundnono\");\n\tequals( test.selector, \"#notfoundnono\", \"#notfoundnono Selector\" );\n\tequals( test.context, document, \"#notfoundnono Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\", document);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\", document.body);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture Context\" );\n\n\t// Test cloning\n\ttest = jQuery(test);\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture Context\" );\n\n\ttest = jQuery(document.body).find(\"#qunit-fixture\");\n\tequals( test.selector, \"#qunit-fixture\", \"#qunit-fixture find Selector\" );\n\tequals( test.context, document.body, \"#qunit-fixture find Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\");\n\tequals( test.selector, \"#qunit-fixture.filter(div)\", \"#qunit-fixture filter Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").not(\"div\");\n\tequals( test.selector, \"#qunit-fixture.not(div)\", \"#qunit-fixture not Selector\" );\n\tequals( test.context, document, \"#qunit-fixture not Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\").not(\"div\");\n\tequals( test.selector, \"#qunit-fixture.filter(div).not(div)\", \"#qunit-fixture filter, not Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter, not Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").filter(\"div\").not(\"div\").end();\n\tequals( test.selector, \"#qunit-fixture.filter(div)\", \"#qunit-fixture filter, not, end Selector\" );\n\tequals( test.context, document, \"#qunit-fixture filter, not, end Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").parent(\"body\");\n\tequals( test.selector, \"#qunit-fixture.parent(body)\", \"#qunit-fixture parent Selector\" );\n\tequals( test.context, document, \"#qunit-fixture parent Context\" );\n\n\ttest = jQuery(\"#qunit-fixture\").eq(0);\n\tequals( test.selector, \"#qunit-fixture.slice(0,1)\", \"#qunit-fixture eq Selector\" );\n\tequals( test.context, document, \"#qunit-fixture eq Context\" );\n\n\tvar d = \"<div />\";\n\tequals(\n\t\tjQuery(d).appendTo(jQuery(d)).selector,\n\t\tjQuery(d).appendTo(d).selector,\n\t\t\"manipulation methods make same selector for jQuery objects\"\n\t);\n});\n\ntest( \"globalEval\", function() {\n\n\texpect( 3 );\n\n\tjQuery.globalEval( \"var globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test variable declarations are global\" );\n\n\twindow.globalEvalTest = false;\n\n\tjQuery.globalEval( \"globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test variable assignments are global\" );\n\n\twindow.globalEvalTest = false;\n\n\tjQuery.globalEval( \"this.globalEvalTest = true;\" );\n\tok( window.globalEvalTest, \"Test context (this) is the window object\" );\n\n\twindow.globalEvalTest = undefined;\n});\n\nif ( !isLocal ) {\ntest(\"browser\", function() {\n\tstop();\n\n\tjQuery.get(\"data/ua.txt\", function(data){\n\t\tvar uas = data.split(\"\\n\");\n\t\texpect( (uas.length - 1) * 2 );\n\n\t\tjQuery.each(uas, function(){\n\t\t\tvar parts = this.split(\"\\t\");\n\t\t\tif ( parts[2] ) {\n\t\t\t\tvar ua = jQuery.uaMatch( parts[2] );\n\t\t\t\tequals( ua.browser, parts[0], \"Checking browser for \" + parts[2] );\n\t\t\t\tequals( ua.version, parts[1], \"Checking version string for \" + parts[2] );\n\t\t\t}\n\t\t});\n\n\t\tstart();\n\t});\n});\n}\n\ntest(\"noConflict\", function() {\n\texpect(7);\n\n\tvar $$ = jQuery;\n\n\tequals( jQuery, jQuery.noConflict(), \"noConflict returned the jQuery object\" );\n\tequals( jQuery, $$, \"Make sure jQuery wasn't touched.\" );\n\tequals( $, original$, \"Make sure $ was reverted.\" );\n\n\tjQuery = $ = $$;\n\n\tequals( jQuery.noConflict(true), $$, \"noConflict returned the jQuery object\" );\n\tequals( jQuery, originaljQuery, \"Make sure jQuery was reverted.\" );\n\tequals( $, original$, \"Make sure $ was reverted.\" );\n\tok( $$(\"#qunit-fixture\").html(\"test\"), \"Make sure that jQuery still works.\" );\n\n\tjQuery = $$;\n});\n\ntest(\"trim\", function() {\n\texpect(9);\n\n\tvar nbsp = String.fromCharCode(160);\n\n\tequals( jQuery.trim(\"hello  \"), \"hello\", \"trailing space\" );\n\tequals( jQuery.trim(\"  hello\"), \"hello\", \"leading space\" );\n\tequals( jQuery.trim(\"  hello   \"), \"hello\", \"space on both sides\" );\n\tequals( jQuery.trim(\"  \" + nbsp + \"hello  \" + nbsp + \" \"), \"hello\", \"&nbsp;\" );\n\n\tequals( jQuery.trim(), \"\", \"Nothing in.\" );\n\tequals( jQuery.trim( undefined ), \"\", \"Undefined\" );\n\tequals( jQuery.trim( null ), \"\", \"Null\" );\n\tequals( jQuery.trim( 5 ), \"5\", \"Number\" );\n\tequals( jQuery.trim( false ), \"false\", \"Boolean\" );\n});\n\ntest(\"type\", function() {\n\texpect(23);\n\n\tequals( jQuery.type(null), \"null\", \"null\" );\n\tequals( jQuery.type(undefined), \"undefined\", \"undefined\" );\n\tequals( jQuery.type(true), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(false), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(Boolean(true)), \"boolean\", \"Boolean\" );\n\tequals( jQuery.type(0), \"number\", \"Number\" );\n\tequals( jQuery.type(1), \"number\", \"Number\" );\n\tequals( jQuery.type(Number(1)), \"number\", \"Number\" );\n\tequals( jQuery.type(\"\"), \"string\", \"String\" );\n\tequals( jQuery.type(\"a\"), \"string\", \"String\" );\n\tequals( jQuery.type(String(\"a\")), \"string\", \"String\" );\n\tequals( jQuery.type({}), \"object\", \"Object\" );\n\tequals( jQuery.type(/foo/), \"regexp\", \"RegExp\" );\n\tequals( jQuery.type(new RegExp(\"asdf\")), \"regexp\", \"RegExp\" );\n\tequals( jQuery.type([1]), \"array\", \"Array\" );\n\tequals( jQuery.type(new Date()), \"date\", \"Date\" );\n\tequals( jQuery.type(new Function(\"return;\")), \"function\", \"Function\" );\n\tequals( jQuery.type(function(){}), \"function\", \"Function\" );\n\tequals( jQuery.type(window), \"object\", \"Window\" );\n\tequals( jQuery.type(document), \"object\", \"Document\" );\n\tequals( jQuery.type(document.body), \"object\", \"Element\" );\n\tequals( jQuery.type(document.createTextNode(\"foo\")), \"object\", \"TextNode\" );\n\tequals( jQuery.type(document.getElementsByTagName(\"*\")), \"object\", \"NodeList\" );\n});\n\ntest(\"isPlainObject\", function() {\n\texpect(14);\n\n\tstop();\n\n\t// The use case that we want to match\n\tok(jQuery.isPlainObject({}), \"{}\");\n\n\t// Not objects shouldn't be matched\n\tok(!jQuery.isPlainObject(\"\"), \"string\");\n\tok(!jQuery.isPlainObject(0) && !jQuery.isPlainObject(1), \"number\");\n\tok(!jQuery.isPlainObject(true) && !jQuery.isPlainObject(false), \"boolean\");\n\tok(!jQuery.isPlainObject(null), \"null\");\n\tok(!jQuery.isPlainObject(undefined), \"undefined\");\n\n\t// Arrays shouldn't be matched\n\tok(!jQuery.isPlainObject([]), \"array\");\n\n\t// Instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new Date), \"new Date\");\n\n\tvar fn = function(){};\n\n\t// Functions shouldn't be matched\n\tok(!jQuery.isPlainObject(fn), \"fn\");\n\n\t// Again, instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new fn), \"new fn (no methods)\");\n\n\t// Makes the function a little more realistic\n\t// (and harder to detect, incidentally)\n\tfn.prototype = {someMethod: function(){}};\n\n\t// Again, instantiated objects shouldn't be matched\n\tok(!jQuery.isPlainObject(new fn), \"new fn\");\n\n\t// DOM Element\n\tok(!jQuery.isPlainObject(document.createElement(\"div\")), \"DOM Element\");\n\n\t// Window\n\tok(!jQuery.isPlainObject(window), \"window\");\n\n\ttry {\n\t\tvar iframe = document.createElement(\"iframe\");\n\t\tdocument.body.appendChild(iframe);\n\n\t\twindow.iframeDone = function(otherObject){\n\t\t\t// Objects from other windows should be matched\n\t\t\tok(jQuery.isPlainObject(new otherObject), \"new otherObject\");\n\t\t\tdocument.body.removeChild( iframe );\n\t\t\tstart();\n\t\t};\n\n\t\tvar doc = iframe.contentDocument || iframe.contentWindow.document;\n\t\tdoc.open();\n\t\tdoc.write(\"<body onload='window.parent.iframeDone(Object);'>\");\n\t\tdoc.close();\n\t} catch(e) {\n\t\tdocument.body.removeChild( iframe );\n\n\t\tok(true, \"new otherObject - iframes not supported\");\n\t\tstart();\n\t}\n});\n\ntest(\"isFunction\", function() {\n\texpect(19);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function(\"+String+\")\" );\n\tok( jQuery.isFunction(Array), \"Array Function(\"+Array+\")\" );\n\tok( jQuery.isFunction(Object), \"Object Function(\"+Object+\")\" );\n\tok( jQuery.isFunction(Function), \"Function Function(\"+Function+\")\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";\n\tok( !jQuery.isFunction(mystr), \"Function String\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar myarr = [ \"function\" ];\n\tok( !jQuery.isFunction(myarr), \"Function Array\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar myfunction = { \"function\": \"test\" };\n\tok( !jQuery.isFunction(myfunction), \"Function Object\" );\n\n\t// Make sure normal functions still work\n\tvar fn = function(){};\n\tok( jQuery.isFunction(fn), \"Normal Function\" );\n\n\tvar obj = document.createElement(\"object\");\n\n\t// Firefox says this is a function\n\tok( !jQuery.isFunction(obj), \"Object Element\" );\n\n\t// IE says this is an object\n\t// Since 1.3, this isn't supported (#2968)\n\t//ok( jQuery.isFunction(obj.getAttribute), \"getAttribute Function\" );\n\n\tvar nodes = document.body.childNodes;\n\n\t// Safari says this is a function\n\tok( !jQuery.isFunction(nodes), \"childNodes Property\" );\n\n\tvar first = document.body.firstChild;\n\n\t// Normal elements are reported ok everywhere\n\tok( !jQuery.isFunction(first), \"A normal DOM Element\" );\n\n\tvar input = document.createElement(\"input\");\n\tinput.type = \"text\";\n\tdocument.body.appendChild( input );\n\n\t// IE says this is an object\n\t// Since 1.3, this isn't supported (#2968)\n\t//ok( jQuery.isFunction(input.focus), \"A default function property\" );\n\n\tdocument.body.removeChild( input );\n\n\tvar a = document.createElement(\"a\");\n\ta.href = \"some-function\";\n\tdocument.body.appendChild( a );\n\n\t// This serializes with the word 'function' in it\n\tok( !jQuery.isFunction(a), \"Anchor Element\" );\n\n\tdocument.body.removeChild( a );\n\n\t// Recursive function calls have lengths and array-like properties\n\tfunction callme(callback){\n\t\tfunction fn(response){\n\t\t\tcallback(response);\n\t\t}\n\n\t\tok( jQuery.isFunction(fn), \"Recursive Function Call\" );\n\n\t\tfn({ some: \"data\" });\n\t};\n\n\tcallme(function(){\n\t\tcallme(function(){});\n\t});\n});\n\ntest(\"isXMLDoc - HTML\", function() {\n\texpect(4);\n\n\tok( !jQuery.isXMLDoc( document ), \"HTML document\" );\n\tok( !jQuery.isXMLDoc( document.documentElement ), \"HTML documentElement\" );\n\tok( !jQuery.isXMLDoc( document.body ), \"HTML Body Element\" );\n\n\tvar iframe = document.createElement(\"iframe\");\n\tdocument.body.appendChild( iframe );\n\n\ttry {\n\t\tvar body = jQuery(iframe).contents()[0];\n\n\t\ttry {\n\t\t\tok( !jQuery.isXMLDoc( body ), \"Iframe body element\" );\n\t\t} catch(e) {\n\t\t\tok( false, \"Iframe body element exception\" );\n\t\t}\n\n\t} catch(e) {\n\t\tok( true, \"Iframe body element - iframe not working correctly\" );\n\t}\n\n\tdocument.body.removeChild( iframe );\n});\n\ntest(\"XSS via location.hash\", function() {\n\texpect(1);\n\t\n\tstop();\n\tjQuery._check9521 = function(x){\n\t\tok( x, \"script called from #id-like selector with inline handler\" );\n\t\tjQuery(\"#check9521\").remove();\n\t\tdelete jQuery._check9521;\n\t\tstart();\n\t};\n\ttry {\n\t\t// This throws an error because it's processed like an id\n\t\tjQuery( '#<img id=\"check9521\" src=\"no-such-.gif\" onerror=\"jQuery._check9521(false)\">' ).appendTo(\"#qunit-fixture\");\n\t} catch (err) {\n\t\tjQuery._check9521(true);\n\t};\n});\n\nif ( !isLocal ) {\ntest(\"isXMLDoc - XML\", function() {\n\texpect(3);\n\tstop();\n\tjQuery.get(\"data/dashboard.xml\", function(xml) {\n\t\tok( jQuery.isXMLDoc( xml ), \"XML document\" );\n\t\tok( jQuery.isXMLDoc( xml.documentElement ), \"XML documentElement\" );\n\t\tok( jQuery.isXMLDoc( jQuery(\"tab\", xml)[0] ), \"XML Tab Element\" );\n\t\tstart();\n\t});\n});\n}\n\ntest(\"isWindow\", function() {\n\texpect( 12 );\n\n\tok( jQuery.isWindow(window), \"window\" );\n\tok( !jQuery.isWindow(), \"empty\" );\n\tok( !jQuery.isWindow(null), \"null\" );\n\tok( !jQuery.isWindow(undefined), \"undefined\" );\n\tok( !jQuery.isWindow(document), \"document\" );\n\tok( !jQuery.isWindow(document.documentElement), \"documentElement\" );\n\tok( !jQuery.isWindow(\"\"), \"string\" );\n\tok( !jQuery.isWindow(1), \"number\" );\n\tok( !jQuery.isWindow(true), \"boolean\" );\n\tok( !jQuery.isWindow({}), \"object\" );\n\t// HMMM\n\t// ok( !jQuery.isWindow({ setInterval: function(){} }), \"fake window\" );\n\tok( !jQuery.isWindow(/window/), \"regexp\" );\n\tok( !jQuery.isWindow(function(){}), \"function\" );\n});\n\ntest(\"jQuery('html')\", function() {\n\texpect(18);\n\n\tQUnit.reset();\n\tjQuery.foo = false;\n\tvar s = jQuery(\"<script>jQuery.foo='test';</script>\")[0];\n\tok( s, \"Creating a script\" );\n\tok( !jQuery.foo, \"Make sure the script wasn't executed prematurely\" );\n\tjQuery(\"body\").append(\"<script>jQuery.foo='test';</script>\");\n\tok( jQuery.foo, \"Executing a scripts contents in the right context\" );\n\n\t// Test multi-line HTML\n\tvar div = jQuery(\"<div>\\r\\nsome text\\n<p>some p</p>\\nmore text\\r\\n</div>\")[0];\n\tequals( div.nodeName.toUpperCase(), \"DIV\", \"Make sure we're getting a div.\" );\n\tequals( div.firstChild.nodeType, 3, \"Text node.\" );\n\tequals( div.lastChild.nodeType, 3, \"Text node.\" );\n\tequals( div.childNodes[1].nodeType, 1, \"Paragraph.\" );\n\tequals( div.childNodes[1].firstChild.nodeType, 3, \"Paragraph text.\" );\n\n\tQUnit.reset();\n\tok( jQuery(\"<link rel='stylesheet'/>\")[0], \"Creating a link\" );\n\n\tok( !jQuery(\"<script/>\")[0].parentNode, \"Create a script\" );\n\n\tok( jQuery(\"<input/>\").attr(\"type\", \"hidden\"), \"Create an input and set the type.\" );\n\n\tvar j = jQuery(\"<span>hi</span> there <!-- mon ami -->\");\n\tok( j.length >= 2, \"Check node,textnode,comment creation (some browsers delete comments)\" );\n\n\tok( !jQuery(\"<option>test</option>\")[0].selected, \"Make sure that options are auto-selected #2050\" );\n\n\tok( jQuery(\"<div></div>\")[0], \"Create a div with closing tag.\" );\n\tok( jQuery(\"<table></table>\")[0], \"Create a table with closing tag.\" );\n\n\t// Test very large html string #7990\n\tvar i;\n\tvar li = \"<li>very large html string</li>\";\n\tvar html = [\"<ul>\"];\n\tfor ( i = 0; i < 50000; i += 1 ) {\n\t\thtml.push(li);\n\t}\n\thtml.push(\"</ul>\");\n\thtml = jQuery(html.join(\"\"))[0];\n\tequals( html.nodeName.toUpperCase(), \"UL\");\n\tequals( html.firstChild.nodeName.toUpperCase(), \"LI\");\n\tequals( html.childNodes.length, 50000 );\n});\n\ntest(\"jQuery('html', context)\", function() {\n\texpect(1);\n\n\tvar $div = jQuery(\"<div/>\")[0];\n\tvar $span = jQuery(\"<span/>\", $div);\n\tequals($span.length, 1, \"Verify a span created with a div context works, #1763\");\n});\n\nif ( !isLocal ) {\ntest(\"jQuery(selector, xml).text(str) - Loaded via XML document\", function() {\n\texpect(2);\n\tstop();\n\tjQuery.get(\"data/dashboard.xml\", function(xml) {\n\t\t// tests for #1419 where IE was a problem\n\t\tvar tab = jQuery(\"tab\", xml).eq(0);\n\t\tequals( tab.text(), \"blabla\", \"Verify initial text correct\" );\n\t\ttab.text(\"newtext\");\n\t\tequals( tab.text(), \"newtext\", \"Verify new text correct\" );\n\t\tstart();\n\t});\n});\n}\n\ntest(\"end()\", function() {\n\texpect(3);\n\tequals( \"Yahoo\", jQuery(\"#yahoo\").parent().end().text(), \"Check for end\" );\n\tok( jQuery(\"#yahoo\").end(), \"Check for end with nothing to end\" );\n\n\tvar x = jQuery(\"#yahoo\");\n\tx.parent();\n\tequals( \"Yahoo\", jQuery(\"#yahoo\").text(), \"Check for non-destructive behaviour\" );\n});\n\ntest(\"length\", function() {\n\texpect(1);\n\tequals( jQuery(\"#qunit-fixture p\").length, 6, \"Get Number of Elements Found\" );\n});\n\ntest(\"size()\", function() {\n\texpect(1);\n\tequals( jQuery(\"#qunit-fixture p\").size(), 6, \"Get Number of Elements Found\" );\n});\n\ntest(\"get()\", function() {\n\texpect(1);\n\tsame( jQuery(\"#qunit-fixture p\").get(), q(\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"), \"Get All Elements\" );\n});\n\ntest(\"toArray()\", function() {\n\texpect(1);\n\tsame( jQuery(\"#qunit-fixture p\").toArray(),\n\t\tq(\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"),\n\t\t\"Convert jQuery object to an Array\" )\n})\n\ntest(\"get(Number)\", function() {\n\texpect(2);\n\tequals( jQuery(\"#qunit-fixture p\").get(0), document.getElementById(\"firstp\"), \"Get A Single Element\" );\n\tstrictEqual( jQuery(\"#firstp\").get(1), undefined, \"Try get with index larger elements count\" );\n});\n\ntest(\"get(-Number)\",function() {\n\texpect(2);\n\tequals( jQuery(\"p\").get(-1), document.getElementById(\"first\"), \"Get a single element with negative index\" );\n\tstrictEqual( jQuery(\"#firstp\").get(-2), undefined, \"Try get with index negative index larger then elements count\" );\n})\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = jQuery(\"div\");\n\tdiv.each(function(){this.foo = \"zoo\";});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"slice()\", function() {\n\texpect(7);\n\n\tvar $links = jQuery(\"#ap a\");\n\n\tsame( $links.slice(1,2).get(), q(\"groups\"), \"slice(1,2)\" );\n\tsame( $links.slice(1).get(), q(\"groups\", \"anchor1\", \"mark\"), \"slice(1)\" );\n\tsame( $links.slice(0,3).get(), q(\"google\", \"groups\", \"anchor1\"), \"slice(0,3)\" );\n\tsame( $links.slice(-1).get(), q(\"mark\"), \"slice(-1)\" );\n\n\tsame( $links.eq(1).get(), q(\"groups\"), \"eq(1)\" );\n\tsame( $links.eq(\"2\").get(), q(\"anchor1\"), \"eq('2')\" );\n\tsame( $links.eq(-1).get(), q(\"mark\"), \"eq(-1)\" );\n});\n\ntest(\"first()/last()\", function() {\n\texpect(4);\n\n\tvar $links = jQuery(\"#ap a\"), $none = jQuery(\"asdf\");\n\n\tsame( $links.first().get(), q(\"google\"), \"first()\" );\n\tsame( $links.last().get(), q(\"mark\"), \"last()\" );\n\n\tsame( $none.first().get(), [], \"first() none\" );\n\tsame( $none.last().get(), [], \"last() none\" );\n});\n\ntest(\"map()\", function() {\n\texpect(8);\n\n\tsame(\n\t\tjQuery(\"#ap\").map(function(){\n\t\t\treturn jQuery(this).find(\"a\").get();\n\t\t}).get(),\n\t\tq(\"google\", \"groups\", \"anchor1\", \"mark\"),\n\t\t\"Array Map\"\n\t);\n\n\tsame(\n\t\tjQuery(\"#ap > a\").map(function(){\n\t\t\treturn this.parentNode;\n\t\t}).get(),\n\t\tq(\"ap\",\"ap\",\"ap\"),\n\t\t\"Single Map\"\n\t);\n\n\t//for #2616\n\tvar keys = jQuery.map( {a:1,b:2}, function( v, k ){\n\t\treturn k;\n\t});\n\tequals( keys.join(\"\"), \"ab\", \"Map the keys from a hash to an array\" );\n\n\tvar values = jQuery.map( {a:1,b:2}, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( values.join(\"\"), \"12\", \"Map the values from a hash to an array\" );\n\n\t// object with length prop\n\tvar values = jQuery.map( {a:1,b:2, length:3}, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( values.join(\"\"), \"123\", \"Map the values from a hash with a length property to an array\" );\n\n\tvar scripts = document.getElementsByTagName(\"script\");\n\tvar mapped = jQuery.map( scripts, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( mapped.length, scripts.length, \"Map an array(-like) to a hash\" );\n\n\tvar nonsense = document.getElementsByTagName(\"asdf\");\n\tvar mapped = jQuery.map( nonsense, function( v, k ){\n\t\treturn v;\n\t});\n\tequals( mapped.length, nonsense.length, \"Map an empty array(-like) to a hash\" );\n\n\tvar flat = jQuery.map( Array(4), function( v, k ){\n\t\treturn k % 2 ? k : [k,k,k];//try mixing array and regular returns\n\t});\n\tequals( flat.join(\"\"), \"00012223\", \"try the new flatten technique(#2616)\" );\n});\n\ntest(\"jQuery.merge()\", function() {\n\texpect(8);\n\n\tvar parse = jQuery.merge;\n\n\tsame( parse([],[]), [], \"Empty arrays\" );\n\n\tsame( parse([1],[2]), [1,2], \"Basic\" );\n\tsame( parse([1,2],[3,4]), [1,2,3,4], \"Basic\" );\n\n\tsame( parse([1,2],[]), [1,2], \"Second empty\" );\n\tsame( parse([],[1,2]), [1,2], \"First empty\" );\n\n\t// Fixed at [5998], #3641\n\tsame( parse([-2,-1], [0,1,2]), [-2,-1,0,1,2], \"Second array including a zero (falsy)\");\n\n\t// After fixing #5527\n\tsame( parse([], [null, undefined]), [null, undefined], \"Second array including null and undefined values\");\n\tsame( parse({length:0}, [1,2]), {length:2, 0:1, 1:2}, \"First array like\");\n});\n\ntest(\"jQuery.extend(Object, Object)\", function() {\n\texpect(28);\n\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" },\n\t\tdeep1 = { foo: { bar: true } },\n\t\tdeep1copy = { foo: { bar: true } },\n\t\tdeep2 = { foo: { baz: true }, foo2: document },\n\t\tdeep2copy = { foo: { baz: true }, foo2: document },\n\t\tdeepmerged = { foo: { bar: true, baz: true }, foo2: document },\n\t\tarr = [1, 2, 3],\n\t\tnestedarray = { arr: arr };\n\n\tjQuery.extend(settings, options);\n\tsame( settings, merged, \"Check if extended: settings must be extended\" );\n\tsame( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n\n\tjQuery.extend(settings, null, options);\n\tsame( settings, merged, \"Check if extended: settings must be extended\" );\n\tsame( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n\n\tjQuery.extend(true, deep1, deep2);\n\tsame( deep1.foo, deepmerged.foo, \"Check if foo: settings must be extended\" );\n\tsame( deep2.foo, deep2copy.foo, \"Check if not deep2: options must not be modified\" );\n\tequals( deep1.foo2, document, \"Make sure that a deep clone was not attempted on the document\" );\n\n\tok( jQuery.extend(true, {}, nestedarray).arr !== arr, \"Deep extend of object must clone child array\" );\n\n\t// #5991\n\tok( jQuery.isArray( jQuery.extend(true, { arr: {} }, nestedarray).arr ), \"Cloned array heve to be an Array\" );\n\tok( jQuery.isPlainObject( jQuery.extend(true, { arr: arr }, { arr: {} }).arr ), \"Cloned object heve to be an plain object\" );\n\n\tvar empty = {};\n\tvar optionsWithLength = { foo: { length: -1 } };\n\tjQuery.extend(true, empty, optionsWithLength);\n\tsame( empty.foo, optionsWithLength.foo, \"The length property must copy correctly\" );\n\n\tempty = {};\n\tvar optionsWithDate = { foo: { date: new Date } };\n\tjQuery.extend(true, empty, optionsWithDate);\n\tsame( empty.foo, optionsWithDate.foo, \"Dates copy correctly\" );\n\n\tvar myKlass = function() {};\n\tvar customObject = new myKlass();\n\tvar optionsWithCustomObject = { foo: { date: customObject } };\n\tempty = {};\n\tjQuery.extend(true, empty, optionsWithCustomObject);\n\tok( empty.foo && empty.foo.date === customObject, \"Custom objects copy correctly (no methods)\" );\n\n\t// Makes the class a little more realistic\n\tmyKlass.prototype = { someMethod: function(){} };\n\tempty = {};\n\tjQuery.extend(true, empty, optionsWithCustomObject);\n\tok( empty.foo && empty.foo.date === customObject, \"Custom objects copy correctly\" );\n\n\tvar ret = jQuery.extend(true, { foo: 4 }, { foo: new Number(5) } );\n\tok( ret.foo == 5, \"Wrapped numbers copy correctly\" );\n\n\tvar nullUndef;\n\tnullUndef = jQuery.extend({}, options, { xnumber2: null });\n\tok( nullUndef.xnumber2 === null, \"Check to make sure null values are copied\");\n\n\tnullUndef = jQuery.extend({}, options, { xnumber2: undefined });\n\tok( nullUndef.xnumber2 === options.xnumber2, \"Check to make sure undefined values are not copied\");\n\n\tnullUndef = jQuery.extend({}, options, { xnumber0: null });\n\tok( nullUndef.xnumber0 === null, \"Check to make sure null values are inserted\");\n\n\tvar target = {};\n\tvar recursive = { foo:target, bar:5 };\n\tjQuery.extend(true, target, recursive);\n\tsame( target, { bar:5 }, \"Check to make sure a recursive obj doesn't go never-ending loop by not copying it over\" );\n\n\tvar ret = jQuery.extend(true, { foo: [] }, { foo: [0] } ); // 1907\n\tequals( ret.foo.length, 1, \"Check to make sure a value with coersion 'false' copies over when necessary to fix #1907\" );\n\n\tvar ret = jQuery.extend(true, { foo: \"1,2,3\" }, { foo: [1, 2, 3] } );\n\tok( typeof ret.foo != \"string\", \"Check to make sure values equal with coersion (but not actually equal) overwrite correctly\" );\n\n\tvar ret = jQuery.extend(true, { foo:\"bar\" }, { foo:null } );\n\tok( typeof ret.foo !== \"undefined\", \"Make sure a null value doesn't crash with deep extend, for #1908\" );\n\n\tvar obj = { foo:null };\n\tjQuery.extend(true, obj, { foo:\"notnull\" } );\n\tequals( obj.foo, \"notnull\", \"Make sure a null value can be overwritten\" );\n\n\tfunction func() {}\n\tjQuery.extend(func, { key: \"value\" } );\n\tequals( func.key, \"value\", \"Verify a function can be extended\" );\n\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged2 = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tsame( settings, merged2, \"Check if extended: settings must be extended\" );\n\tsame( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tsame( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tsame( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"jQuery.each(Object,Function)\", function() {\n\texpect(14);\n\tjQuery.each( [0,1,2], function(i, n){\n\t\tequals( i, n, \"Check array iteration\" );\n\t});\n\n\tjQuery.each( [5,6,7], function(i, n){\n\t\tequals( i, n - 5, \"Check array iteration\" );\n\t});\n\n\tjQuery.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tequals( i, n, \"Check object iteration\" );\n\t});\n\n\tvar total = 0;\n\tjQuery.each([1,2,3], function(i,v){ total += v; });\n\tequals( total, 6, \"Looping over an array\" );\n\ttotal = 0;\n\tjQuery.each([1,2,3], function(i,v){ total += v; if ( i == 1 ) return false; });\n\tequals( total, 3, \"Looping over an array, with break\" );\n\ttotal = 0;\n\tjQuery.each({\"a\":1,\"b\":2,\"c\":3}, function(i,v){ total += v; });\n\tequals( total, 6, \"Looping over an object\" );\n\ttotal = 0;\n\tjQuery.each({\"a\":3,\"b\":3,\"c\":3}, function(i,v){ total += v; return false; });\n\tequals( total, 3, \"Looping over an object, with break\" );\n\n\tvar f = function(){};\n\tf.foo = \"bar\";\n\tjQuery.each(f, function(i){\n\t\tf[i] = \"baz\";\n\t});\n\tequals( \"baz\", f.foo, \"Loop over a function\" );\n\n\tvar stylesheet_count = 0;\n\tjQuery.each(document.styleSheets, function(i){\n\t\tstylesheet_count++;\n\t});\n\tequals(stylesheet_count, 2, \"should not throw an error in IE while looping over document.styleSheets and return proper amount\");\n\n});\n\ntest(\"jQuery.makeArray\", function(){\n\texpect(17);\n\n\tequals( jQuery.makeArray(jQuery(\"html>*\"))[0].nodeName.toUpperCase(), \"HEAD\", \"Pass makeArray a jQuery object\" );\n\n\tequals( jQuery.makeArray(document.getElementsByName(\"PWD\")).slice(0,1)[0].name, \"PWD\", \"Pass makeArray a nodelist\" );\n\n\tequals( (function(){ return jQuery.makeArray(arguments); })(1,2).join(\"\"), \"12\", \"Pass makeArray an arguments array\" );\n\n\tequals( jQuery.makeArray([1,2,3]).join(\"\"), \"123\", \"Pass makeArray a real array\" );\n\n\tequals( jQuery.makeArray().length, 0, \"Pass nothing to makeArray and expect an empty array\" );\n\n\tequals( jQuery.makeArray( 0 )[0], 0 , \"Pass makeArray a number\" );\n\n\tequals( jQuery.makeArray( \"foo\" )[0], \"foo\", \"Pass makeArray a string\" );\n\n\tequals( jQuery.makeArray( true )[0].constructor, Boolean, \"Pass makeArray a boolean\" );\n\n\tequals( jQuery.makeArray( document.createElement(\"div\") )[0].nodeName.toUpperCase(), \"DIV\", \"Pass makeArray a single node\" );\n\n\tequals( jQuery.makeArray( {length:2, 0:\"a\", 1:\"b\"} ).join(\"\"), \"ab\", \"Pass makeArray an array like map (with length)\" );\n\n\tok( !!jQuery.makeArray( document.documentElement.childNodes ).slice(0,1)[0].nodeName, \"Pass makeArray a childNodes array\" );\n\n\t// function, is tricky as it has length\n\tequals( jQuery.makeArray( function(){ return 1;} )[0](), 1, \"Pass makeArray a function\" );\n\n\t//window, also has length\n\tequals( jQuery.makeArray(window)[0], window, \"Pass makeArray the window\" );\n\n\tequals( jQuery.makeArray(/a/)[0].constructor, RegExp, \"Pass makeArray a regex\" );\n\n\tok( jQuery.makeArray(document.getElementById(\"form\")).length >= 13, \"Pass makeArray a form (treat as elements)\" );\n\n\t// For #5610\n\tsame( jQuery.makeArray({length: \"0\"}), [], \"Make sure object is coerced properly.\");\n\tsame( jQuery.makeArray({length: \"5\"}), [], \"Make sure object is coerced properly.\");\n});\n\ntest(\"jQuery.isEmptyObject\", function(){\n\texpect(2);\n\n\tequals(true, jQuery.isEmptyObject({}), \"isEmptyObject on empty object literal\" );\n\tequals(false, jQuery.isEmptyObject({a:1}), \"isEmptyObject on non-empty object literal\" );\n\n\t// What about this ?\n\t// equals(true, jQuery.isEmptyObject(null), \"isEmptyObject on null\" );\n});\n\ntest(\"jQuery.proxy\", function(){\n\texpect(7);\n\n\tvar test = function(){ equals( this, thisObject, \"Make sure that scope is set properly.\" ); };\n\tvar thisObject = { foo: \"bar\", method: test };\n\n\t// Make sure normal works\n\ttest.call( thisObject );\n\n\t// Basic scoping\n\tjQuery.proxy( test, thisObject )();\n\n\t// Another take on it\n\tjQuery.proxy( thisObject, \"method\" )();\n\n\t// Make sure it doesn't freak out\n\tequals( jQuery.proxy( null, thisObject ), undefined, \"Make sure no function was returned.\" );\n\n        // Partial application\n        var test2 = function( a ){ equals( a, \"pre-applied\", \"Ensure arguments can be pre-applied.\" ); };\n        jQuery.proxy( test2, null, \"pre-applied\" )();\n\n        // Partial application w/ normal arguments\n        var test3 = function( a, b ){ equals( b, \"normal\", \"Ensure arguments can be pre-applied and passed as usual.\" ); };\n        jQuery.proxy( test3, null, \"pre-applied\" )( \"normal\" );\n\n\t// Test old syntax\n\tvar test4 = { meth: function( a ){ equals( a, \"boom\", \"Ensure old syntax works.\" ); } };\n\tjQuery.proxy( test4, \"meth\" )( \"boom\" );\n});\n\ntest(\"jQuery.parseJSON\", function(){\n\texpect(8);\n\n\tequals( jQuery.parseJSON(), null, \"Nothing in, null out.\" );\n\tequals( jQuery.parseJSON( null ), null, \"Nothing in, null out.\" );\n\tequals( jQuery.parseJSON( \"\" ), null, \"Nothing in, null out.\" );\n\n\tsame( jQuery.parseJSON(\"{}\"), {}, \"Plain object parsing.\" );\n\tsame( jQuery.parseJSON(\"{\\\"test\\\":1}\"), {\"test\":1}, \"Plain object parsing.\" );\n\n\tsame( jQuery.parseJSON(\"\\n{\\\"test\\\":1}\"), {\"test\":1}, \"Make sure leading whitespaces are handled.\" );\n\n\ttry {\n\t\tjQuery.parseJSON(\"{a:1}\");\n\t\tok( false, \"Test malformed JSON string.\" );\n\t} catch( e ) {\n\t\tok( true, \"Test malformed JSON string.\" );\n\t}\n\n\ttry {\n\t\tjQuery.parseJSON(\"{'a':1}\");\n\t\tok( false, \"Test malformed JSON string.\" );\n\t} catch( e ) {\n\t\tok( true, \"Test malformed JSON string.\" );\n\t}\n});\n\ntest(\"jQuery.parseXML\", 4, function(){\n\tvar xml, tmp;\n\ttry {\n\t\txml = jQuery.parseXML( \"<p>A <b>well-formed</b> xml string</p>\" );\n\t\ttmp = xml.getElementsByTagName( \"p\" )[ 0 ];\n\t\tok( !!tmp, \"<p> present in document\" );\n\t\ttmp = tmp.getElementsByTagName( \"b\" )[ 0 ];\n\t\tok( !!tmp, \"<b> present in document\" );\n\t\tstrictEqual( tmp.childNodes[ 0 ].nodeValue, \"well-formed\", \"<b> text is as expected\" );\n\t} catch (e) {\n\t\tstrictEqual( e, undefined, \"unexpected error\" );\n\t}\n\ttry {\n\t\txml = jQuery.parseXML( \"<p>Not a <<b>well-formed</b> xml string</p>\" );\n\t\tok( false, \"invalid xml not detected\" );\n\t} catch( e ) {\n\t\tstrictEqual( e, \"Invalid XML: <p>Not a <<b>well-formed</b> xml string</p>\", \"invalid xml detected\" );\n\t}\n});\n\ntest(\"jQuery.sub() - Static Methods\", function(){\n    expect(18);\n    var Subclass = jQuery.sub();\n    Subclass.extend({\n        topLevelMethod: function() {return this.debug;},\n        debug: false,\n        config: {\n            locale: \"en_US\"\n        },\n        setup: function(config) {\n            this.extend(true, this.config, config);\n        }\n    });\n    Subclass.fn.extend({subClassMethod: function() { return this;}});\n\n    //Test Simple Subclass\n    ok(Subclass.topLevelMethod() === false, \"Subclass.topLevelMethod thought debug was true\");\n    ok(Subclass.config.locale == \"en_US\", Subclass.config.locale + \" is wrong!\");\n    same(Subclass.config.test, undefined, \"Subclass.config.test is set incorrectly\");\n    equal(jQuery.ajax, Subclass.ajax, \"The subclass failed to get all top level methods\");\n\n    //Create a SubSubclass\n    var SubSubclass = Subclass.sub();\n\n    //Make Sure the SubSubclass inherited properly\n    ok(SubSubclass.topLevelMethod() === false, \"SubSubclass.topLevelMethod thought debug was true\");\n    ok(SubSubclass.config.locale == \"en_US\", SubSubclass.config.locale + \" is wrong!\");\n    same(SubSubclass.config.test, undefined, \"SubSubclass.config.test is set incorrectly\");\n    equal(jQuery.ajax, SubSubclass.ajax, \"The subsubclass failed to get all top level methods\");\n\n    //Modify The Subclass and test the Modifications\n    SubSubclass.fn.extend({subSubClassMethod: function() { return this;}});\n    SubSubclass.setup({locale: \"es_MX\", test: \"worked\"});\n    SubSubclass.debug = true;\n    SubSubclass.ajax = function() {return false;};\n    ok(SubSubclass.topLevelMethod(), \"SubSubclass.topLevelMethod thought debug was false\");\n    same(SubSubclass(document).subClassMethod, Subclass.fn.subClassMethod, \"Methods Differ!\");\n    ok(SubSubclass.config.locale == \"es_MX\", SubSubclass.config.locale + \" is wrong!\");\n    ok(SubSubclass.config.test == \"worked\", \"SubSubclass.config.test is set incorrectly\");\n    notEqual(jQuery.ajax, SubSubclass.ajax, \"The subsubclass failed to get all top level methods\");\n\n    //This shows that the modifications to the SubSubClass did not bubble back up to it's superclass\n    ok(Subclass.topLevelMethod() === false, \"Subclass.topLevelMethod thought debug was true\");\n    ok(Subclass.config.locale == \"en_US\", Subclass.config.locale + \" is wrong!\");\n    same(Subclass.config.test, undefined, \"Subclass.config.test is set incorrectly\");\n    same(Subclass(document).subSubClassMethod, undefined, \"subSubClassMethod set incorrectly\");\n    equal(jQuery.ajax, Subclass.ajax, \"The subclass failed to get all top level methods\");\n});\n\ntest(\"jQuery.sub() - .fn Methods\", function(){\n\texpect(378);\n\n\tvar Subclass = jQuery.sub(),\n\t\t\tSubclassSubclass = Subclass.sub(),\n\t\t\tjQueryDocument = jQuery(document),\n\t\t\tselectors, contexts, methods, method, arg, description;\n\n\tjQueryDocument.toString = function(){ return \"jQueryDocument\"; };\n\n\tSubclass.fn.subclassMethod = function(){};\n\tSubclassSubclass.fn.subclassSubclassMethod = function(){};\n\n\tselectors = [\n\t\t\"body\",\n\t\t\"html, body\",\n\t\t\"<div></div>\"\n\t];\n\n\tmethods = [ // all methods that return a new jQuery instance\n\t\t[\"eq\", 1],\n\t\t[\"add\", document],\n\t\t[\"end\"],\n\t\t[\"has\"],\n\t\t[\"closest\", \"div\"],\n\t\t[\"filter\", document],\n\t\t[\"find\", \"div\"]\n\t];\n\n\tcontexts = [undefined, document, jQueryDocument];\n\n\tjQuery.each(selectors, function(i, selector){\n\n\t\tjQuery.each(methods, function(){\n\t\t\tmethod = this[0];\n\t\t\targ = this[1];\n\n\t\t\tjQuery.each(contexts, function(i, context){\n\n\t\t\t\tdescription = \"(\\\"\"+selector+\"\\\", \"+context+\").\"+method+\"(\"+(arg||\"\")+\")\";\n\n\t\t\t\tsame(\n\t\t\t\t\tjQuery(selector, context)[method](arg).subclassMethod, undefined,\n\t\t\t\t\t\"jQuery\"+description+\" doesn't have Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tjQuery(selector, context)[method](arg).subclassSubclassMethod, undefined,\n\t\t\t\t\t\"jQuery\"+description+\" doesn't have SubclassSubclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclass(selector, context)[method](arg).subclassMethod, Subclass.fn.subclassMethod,\n\t\t\t\t\t\"Subclass\"+description+\" has Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclass(selector, context)[method](arg).subclassSubclassMethod, undefined,\n\t\t\t\t\t\"Subclass\"+description+\" doesn't have SubclassSubclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclassSubclass(selector, context)[method](arg).subclassMethod, Subclass.fn.subclassMethod,\n\t\t\t\t\t\"SubclassSubclass\"+description+\" has Subclass methods\"\n\t\t\t\t);\n\t\t\t\tsame(\n\t\t\t\t\tSubclassSubclass(selector, context)[method](arg).subclassSubclassMethod, SubclassSubclass.fn.subclassSubclassMethod,\n\t\t\t\t\t\"SubclassSubclass\"+description+\" has SubclassSubclass methods\"\n\t\t\t\t);\n\n\t\t\t});\n\t\t});\n\t});\n\n});\n\ntest(\"jQuery.camelCase()\", function() {\n\n\tvar tests = {\n\t\t\"foo-bar\": \"fooBar\",\n\t\t\"foo-bar-baz\": \"fooBarBaz\",\n\t\t\"girl-u-want\": \"girlUWant\",\n\t\t\"the-4th-dimension\": \"the4thDimension\",\n\t\t\"-o-tannenbaum\": \"OTannenbaum\",\n\t\t\"-moz-illa\": \"MozIlla\",\n\t\t\"-ms-take\": \"msTake\"\n\t};\n\n\texpect(7);\n\n\tjQuery.each( tests, function( key, val ) {\n\t\tequal( jQuery.camelCase( key ), val, \"Converts: \" + key + \" => \" + val );\n\t});\n});\n"], "filenames": ["src/core.js", "test/unit/core.js"], "buggy_code_start_loc": [19, 467], "buggy_code_end_loc": [21, 467], "fixing_code_start_loc": [19, 468], "fixing_code_end_loc": [21, 486], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag.", "other": {"cve": {"id": "CVE-2011-4969", "sourceIdentifier": "secalert@redhat.com", "published": "2013-03-08T22:55:01.050", "lastModified": "2019-04-16T18:29:00.267", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag."}, {"lang": "es", "value": "Una vulnerabilidad de ejecuci\u00f3n de comandos en sitios cruzados (XSS) en jQuery antes de v1.6.3, cuando se seleccionan elementos location.hash, permite a atacantes remotos inyectar secuencias de comandos web o HTML a trav\u00e9s de una etiqueta hecha a mano.\r\n"}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.6.2", "matchCriteriaId": "BD9A1F33-4167-4B67-A850-54FC30B85EE3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery:1.6:*:*:*:*:*:*:*", "matchCriteriaId": "BC2A1ACA-CC4B-468C-9CDD-9BCBA79F99C7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery:1.6.1:*:*:*:*:*:*:*", "matchCriteriaId": "D63213CA-0F92-4F5E-86A1-CC09E7552B4B"}]}]}], "references": [{"url": "http://blog.jquery.com/2011/09/01/jquery-1-6-3-released/", "source": "secalert@redhat.com"}, {"url": "http://blog.mindedsecurity.com/2011/07/jquery-is-sink.html", "source": "secalert@redhat.com"}, {"url": "http://bugs.jquery.com/ticket/9521", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2013/01/31/3", "source": "secalert@redhat.com"}, {"url": "http://www.securityfocus.com/bid/58458", "source": "secalert@redhat.com"}, {"url": "http://www.securitytracker.com/id/1036620", "source": "secalert@redhat.com"}, {"url": "http://www.ubuntu.com/usn/USN-1722-1", "source": "secalert@redhat.com"}, {"url": "https://github.com/jquery/jquery/commit/db9e023e62c1ff5d8f21ed9868ab6878da2005e9", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05111017", "source": "secalert@redhat.com"}, {"url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05158380", "source": "secalert@redhat.com"}, {"url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05232730", "source": "secalert@redhat.com"}, {"url": "https://lists.apache.org/thread.html/ff8dcfe29377088ab655fda9d585dccd5b1f07fabd94ae84fd60a7f8@%3Ccommits.pulsar.apache.org%3E", "source": "secalert@redhat.com"}, {"url": "https://security.netapp.com/advisory/ntap-20190416-0007/", "source": "secalert@redhat.com"}]}, "github_commit_url": "https://github.com/jquery/jquery/commit/db9e023e62c1ff5d8f21ed9868ab6878da2005e9"}}