{"buggy_code": ["<?php\n\n/**\n * @file controllers/grid/queries/QueryTitleGridColumn.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class QueryTitleGridColumn\n *\n * @ingroup controllers_grid_queries\n *\n * @brief Implements a query tile column.\n */\n\nnamespace PKP\\controllers\\grid\\queries;\n\nuse PKP\\controllers\\grid\\ColumnBasedGridCellProvider;\nuse PKP\\controllers\\grid\\GridColumn;\nuse PKP\\controllers\\grid\\GridHandler;\nuse PKP\\linkAction\\LinkAction;\nuse PKP\\linkAction\\request\\AjaxModal;\n\nclass QueryTitleGridColumn extends GridColumn\n{\n    /** @var array Action args for link actions */\n    public $_actionArgs;\n\n    /**\n     * Constructor\n     *\n     * @param array $actionArgs Action args for link actions\n     */\n    public function __construct($actionArgs)\n    {\n        $this->_actionArgs = $actionArgs;\n\n        $cellProvider = new ColumnBasedGridCellProvider();\n\n        parent::__construct(\n            'name',\n            'common.name',\n            null,\n            null,\n            $cellProvider,\n            ['width' => 60, 'alignment' => GridColumn::COLUMN_ALIGNMENT_LEFT]\n        );\n    }\n\n\n    //\n    // Public methods\n    //\n    /**\n     * Method expected by ColumnBasedGridCellProvider\n     * to render a cell in this column.\n     *\n     * @copydoc ColumnBasedGridCellProvider::getTemplateVarsFromRowColumn()\n     */\n    public function getTemplateVarsFromRow($row)\n    {\n        // We do not need any template variables because\n        // the only content of this column's cell will be\n        // an action. See QueryTitleGridColumn::getCellActions().\n        return ['label' => ''];\n    }\n\n\n    //\n    // Override methods from GridColumn\n    //\n    /**\n     * @copydoc GridColumn::getCellActions()\n     */\n    public function getCellActions($request, $row, $position = GridHandler::GRID_ACTION_POSITION_DEFAULT)\n    {\n        // Retrieve the submission file.\n        $query = $row->getData();\n        $headNote = $query->getHeadNote();\n\n        // Create the cell action to download a file.\n        $router = $request->getRouter();\n        $actionArgs = array_merge(\n            $this->_actionArgs,\n            ['queryId' => $query->getId()]\n        );\n\n        return array_merge(\n            parent::getCellActions($request, $row, $position),\n            [\n                new LinkAction(\n                    'readQuery',\n                    new AjaxModal(\n                        $router->url($request, null, null, 'readQuery', null, $actionArgs),\n                        $headNote ? $headNote->getTitle() : '&mdash;',\n                        'modal_edit'\n                    ),\n                    ($headNote && $headNote->getTitle() != '') ? htmlspecialchars($headNote->getTitle()) : '&mdash;',\n                    null\n                )\n            ]\n        );\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * @file controllers/grid/queries/QueryTitleGridColumn.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class QueryTitleGridColumn\n *\n * @ingroup controllers_grid_queries\n *\n * @brief Implements a query tile column.\n */\n\nnamespace PKP\\controllers\\grid\\queries;\n\nuse PKP\\controllers\\grid\\ColumnBasedGridCellProvider;\nuse PKP\\controllers\\grid\\GridColumn;\nuse PKP\\controllers\\grid\\GridHandler;\nuse PKP\\linkAction\\LinkAction;\nuse PKP\\linkAction\\request\\AjaxModal;\n\nclass QueryTitleGridColumn extends GridColumn\n{\n    /** @var array Action args for link actions */\n    public $_actionArgs;\n\n    /**\n     * Constructor\n     *\n     * @param array $actionArgs Action args for link actions\n     */\n    public function __construct($actionArgs)\n    {\n        $this->_actionArgs = $actionArgs;\n\n        $cellProvider = new ColumnBasedGridCellProvider();\n\n        parent::__construct(\n            'name',\n            'common.name',\n            null,\n            null,\n            $cellProvider,\n            ['width' => 60, 'alignment' => GridColumn::COLUMN_ALIGNMENT_LEFT]\n        );\n    }\n\n\n    //\n    // Public methods\n    //\n    /**\n     * Method expected by ColumnBasedGridCellProvider\n     * to render a cell in this column.\n     *\n     * @copydoc ColumnBasedGridCellProvider::getTemplateVarsFromRowColumn()\n     */\n    public function getTemplateVarsFromRow($row)\n    {\n        // We do not need any template variables because\n        // the only content of this column's cell will be\n        // an action. See QueryTitleGridColumn::getCellActions().\n        return ['label' => ''];\n    }\n\n\n    //\n    // Override methods from GridColumn\n    //\n    /**\n     * @copydoc GridColumn::getCellActions()\n     */\n    public function getCellActions($request, $row, $position = GridHandler::GRID_ACTION_POSITION_DEFAULT)\n    {\n        // Retrieve the submission file.\n        $query = $row->getData();\n        $headNote = $query->getHeadNote();\n\n        // Create the cell action to download a file.\n        $router = $request->getRouter();\n        $actionArgs = array_merge(\n            $this->_actionArgs,\n            ['queryId' => $query->getId()]\n        );\n\n        return array_merge(\n            parent::getCellActions($request, $row, $position),\n            [\n                new LinkAction(\n                    'readQuery',\n                    new AjaxModal(\n                        $router->url($request, null, null, 'readQuery', null, $actionArgs),\n                        $headNote ? htmlspecialchars($headNote->getTitle()) : '&mdash;',\n                        'modal_edit'\n                    ),\n                    ($headNote && $headNote->getTitle() != '') ? htmlspecialchars($headNote->getTitle()) : '&mdash;',\n                    null\n                )\n            ]\n        );\n    }\n}\n"], "filenames": ["controllers/grid/queries/QueryTitleGridColumn.php"], "buggy_code_start_loc": [96], "buggy_code_end_loc": [97], "fixing_code_start_loc": [96], "fixing_code_end_loc": [97], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository pkp/pkp-lib prior to 3.3.0-16.", "other": {"cve": {"id": "CVE-2023-5892", "sourceIdentifier": "security@huntr.dev", "published": "2023-11-01T01:15:07.627", "lastModified": "2023-11-08T23:54:30.143", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository pkp/pkp-lib prior to 3.3.0-16."}, {"lang": "es", "value": "Cross-site Scripting (XSS): almacenado en el repositorio de GitHub pkp/pkp-lib anterior a 3.3.0-16."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sfu:pkp_web_application_library:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.3.0-16", "matchCriteriaId": "60CE0E67-FCF5-4A26-A91E-514946B97D99"}]}]}], "references": [{"url": "https://github.com/pkp/pkp-lib/commit/a0485a5c7410821e0432c079ca676ee6026bffb9", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.com/bounties/16719252-d88d-43cc-853a-24ff75a067d8", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pkp/pkp-lib/commit/a0485a5c7410821e0432c079ca676ee6026bffb9"}}