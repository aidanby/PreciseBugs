{"buggy_code": ["<?php $path = mw_includes_url() . \"toolbar/editor_tools/rte_image_editor/\"; ?>\n\n<script>\n    mw.parent().require(\"external_callbacks.js\");\n    mw.lib.require('mwui');\n    mw.require(\"events.js\");\n    mw.require(\"forms.js\");\n    mw.require(\"files.js\");\n    mw.require(\"url.js\");\n</script>\n\n<?php\n\nif (array_key_exists('types', $_GET)) {\n    $types = explode(',', $_GET['types']);\n\n} else {\n    $types = array('files', 'images', 'videos');\n}\n\nif (array_key_exists('title', $_GET)) {\n    $title = $_GET['title'];\n\n} else {\n    $title = __('Media');\n}\n\n\n?>\n\n<div id=\"filepick\"></div>\n\n<script>\n    var hash = location.hash.replace(/#/g, \"\");\n\n    hash = hash !== '' ? hash : 'insert_html';\n\n    UpdateImage = function (url) {\n        if (mw.parent().image.currentResizing) {\n            if (mw.parent().image.currentResizing[0].nodeName === 'IMG') {\n                mw.parent().image.currentResizing.attr(\"src\", url);\n                mw.parent().image.currentResizing.css('height', 'auto');\n            }\n            else {\n                mw.parent().image.currentResizing.css(\"backgroundImage\", 'url(' + mw.files.safeFilename(url) + ')');\n                mw.top().wysiwyg.bgQuotesFix(mw.parent().image.currentResizing[0])\n            }\n        }\n        if(window.thismodal) {\n            thismodal.result(url);\n        }\n    };\n\n    afterMediaIsInserted = function (url, todo, eventType) {\n\n        todo = todo || false;\n        if (url === false) {\n            if (eventType === 'done') {\n\n            }\n            if (window.thismodal) {\n                thismodal.remove();\n            }\n            return false;\n        }\n\n        if (hash === 'fileWindow') {\n            $('body').trigger('change', [url]);\n            return false;\n        }\n        if (!todo) {\n            if (hash !== '') {\n                if (hash === 'editimage') {\n                    UpdateImage(url);\n                    if(mw.parent().image.currentResizing){\n                        mw.parent().wysiwyg.change(mw.parent().image.currentResizing[0])\n                        mw.parent().image.resize.resizerSet(mw.parent().image.currentResizing[0]);\n                        mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], url])\n                    }\n                } else if (hash === 'set_bg_image') {\n                    mw.parent().wysiwyg.set_bg_image(url);\n                    mw.parent().wysiwyg.change(mw.parent().current_element);\n                    mw.parent().askusertostay = true;\n                } else {\n                    if (typeof parent[hash] === 'function') {\n                        parent[hash](url, eventType);\n                    } else {\n                        if(mw.parent().iframecallbacks['insert_image']) {\n                            mw.parent().iframecallbacks['insert_image'](url, eventType);\n                        }\n\n                    }\n                }\n            } else {\n                mw.parent().wysiwyg.restore_selection();\n                mw.parent().wysiwyg.insert_image(url, true);\n\n\n            }\n        }\n    };\n\n\n    GlobalEmbed = false;\n\n\n    $(document).ready(function () {\n\n\n        mw.on.hashParam('select-file', function (pval) {\n\n            if (hash === 'fileWindow') {\n                $('body').trigger('change', [pval]);\n                return false;\n            }\n\n            var type = mw.url.type(pval);\n            GlobalEmbed = mw.embed.generate(type, pval);\n            if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                if (hash === 'editimage') {\n\n\n                    mw.parent().iframecallbacks[hash](pval);\n                    if(mw.parent().image.currentResizing && mw.parent().image.currentResizing){\n                        mw.parent().image.resize.resizerSet(mw.parent().image.currentResizing[0]);\n\n                    }\n\n                } else {\n\n                    mw.parent().iframecallbacks[hash](GlobalEmbed);\n                }\n\n            } else if (typeof parent[hash] === 'function') {\n\n                parent[hash](GlobalEmbed)\n            }\n            if(mw.parent().image.currentResizing && mw.parent().image.currentResizing[0]) {\n                mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], this]);\n            }\n\n            if(window.thismodal) {\n                thismodal.result(pval)\n            }\n\n            mw.parent().dialog.remove('mw_rte_image');\n\n            mw.notification.success('<?php _ejs('The image is changed') ?>');\n\n\n        });\n\n        Progress = mw.$('#mw-upload-progress');\n\n        ProgressBar = Progress.find('.mw-ui-progress-bar');\n        ProgressInfo = Progress.find('.mw-ui-progress-info');\n        ProgressPercent = Progress.find('.mw-ui-progress-percent');\n        ProgressDoneHTML = '<span class=\"ico iDone\" style=\"top:-6px;\"></span>&nbsp;<?php _e(\"Done! All files have been uploaded\"); ?>.';\n        ProgressErrorHTML = function (filename) {\n            return '<span class=\"ico iRemove\" style=\"top:-6px;\"></span>&nbsp;<?php _e(\"Error\"); ?>! \"' + filename + '\" - <?php _e(\"Invalid filetype\"); ?>.';\n        }\n\n        mw.require('filepicker.js');\n\n        var picker = new mw.filePicker({\n            element:'#filepick',\n            nav: 'tabs',\n            footer: true,\n            boxed: false,\n            dropDownTargetMode: 'dialog',\n            label: null\n        });\n\n\n\n        $(picker).on('Result', function (e, res) {\n            var filetypes = '<?php print join(\",\", $types);; ?>';\n            var url = res.src ? res.src : res;\n            if (filetypes.indexOf('images') !== -1) {\n                afterMediaIsInserted(url, '', \"FileUploaded\");\n            }\n            else if (filetypes === 'videos' || filetypes === 'media') {\n                afterMediaIsInserted(url, 'video', \"FileUploaded\");\n            }\n            else if (filetypes === 'files') {\n                if (item.src.contains(\"base64\")) {\n                    afterMediaIsInserted(url, '', \"FileUploaded\");\n                } else {\n                    afterMediaIsInserted(url, 'files', \"FileUploaded\");\n                }\n\n            }\n            if(window.thismodal) {\n                thismodal.result(url);\n                thismodal.remove()\n            }\n        })\n\n\n        mw.$(\"xc.dropable-zone\").each(function () {\n            var li = $(this);\n            var _li = this;\n            var filetypes = '<?php print join(\",\", $types);; ?>';\n\n            var frame = mw.files.uploader({\n                filetypes: filetypes,\n                element: li\n            });\n            frame.width = li.width();\n            frame.height = li.height();\n            $(frame).on(\"progress\", function (frame, file) {\n\n                Progress.show();\n\n                Progress.width(file.percent + '%');\n\n                ProgressPercent.html(file.percent + '%');\n\n                ProgressInfo.html(file.name);\n\n\n\n\n            });\n            $(frame).on(\"FileUploaded\", function (frame, item) {\n                if (filetypes.indexOf('images') !== -1) {\n                    afterMediaIsInserted(item.src, '', \"FileUploaded\");\n                }\n                else if (filetypes === 'videos' || filetypes === 'media') {\n                    afterMediaIsInserted(item.src, 'video', \"FileUploaded\");\n                }\n                else if (filetypes === 'files') {\n                    if (item.src.contains(\"base64\")) {\n                        afterMediaIsInserted(item.src, '', \"FileUploaded\");\n                    } else {\n                        afterMediaIsInserted(item.src, 'files', \"FileUploaded\");\n                    }\n\n                }\n                if(window.thismodal) {\n                    thismodal.result(item.src)\n                }\n\n            });\n\n            $(frame).on(\"done\", function (frame, item) {\n                Progress.hide();\n                //ProgressBar.width('0%');\n                ProgressPercent.html('');\n                ProgressInfo.html(ProgressDoneHTML);\n                afterMediaIsInserted(false, '', \"done\");\n\n            });\n\n\n            $(frame).on(\"error\", function (frame, file) {\n                ProgressPercent.html('');\n                ProgressInfo.html(ProgressErrorHTML(file.name));\n            });\n\n\n\n        });\n\n\n        var urlSearcher = mw.$(\"#media_search_field\");\n        var submit = mw.$('#btn_insert');\n        var status = mw.$(\"#image_status\");\n\n\n        urlSearcher.bind('keyup paste', function (e) {\n            GlobalEmbed = false;\n            if (e.type === 'keyup') {\n                mw.on.stopWriting(urlSearcher[0], function () {\n                    var val = urlSearcher.val();\n                    var type = mw.url.type(val);\n                    if (status[0]) {\n                        status[0].className = type;\n                        if (type !== 'image') {\n                            status.empty();\n                        } else {\n                            status.html('<img class=\"image_status_preview_image\" src=\"' + val + '\" />');\n                        }\n                    }\n\n                    GlobalEmbed = mw.embed.generate(type, val);\n                });\n            } else {\n                setTimeout(function () {\n                    var val = urlSearcher.val();\n                    if (hash === 'fileWindow') {\n\n                        if(window.thismodal) {\n                            thismodal.result(val)\n                        }\n                        $('body').trigger('change', [val]);\n                        return false;\n                    }\n                    var type = mw.url.type(val);\n                    GlobalEmbed = mw.embed.generate(type, val);\n                    if (type !== 'link') {\n                        if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                            if (hash.contains(\"edit\")) {\n                                mw.parent().iframecallbacks[hash](val);\n                            } else {\n                                mw.parent().iframecallbacks[hash](GlobalEmbed);\n                            }\n                        } else if (typeof parent[hash] === 'function') {\n                            parent[hash](GlobalEmbed);\n\n                        }\n                        if(window.thismodal) {\n                            thismodal.result(GlobalEmbed)\n                        }\n                        mw.parent().dialog.remove('mw_rte_image');\n                    }\n                }, 500);\n            }\n\n        });\n\n\n        submit.click(function () {\n\n\n            var val = urlSearcher.val();\n            if (hash === 'fileWindow') {\n                $('body').trigger('change', [val]);\n                return false;\n            }\n            var type = mw.url.type(val);\n            if (type !== 'link') {\n                if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                    mw.parent().iframecallbacks[hash](GlobalEmbed);\n                } else if (typeof parent[hash] === 'function') {\n                    parent[hash](GlobalEmbed)\n                }\n            } else {\n\n                if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                    mw.parent().iframecallbacks[hash](val);\n                } else if (typeof parent[hash] === 'function') {\n                    parent[hash](val)\n                }\n\n            }\n            if(window.thismodal) {\n                thismodal.result(val)\n            }\n            if(mw.parent().image.currentResizing) {\n                mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], val]);\n\n            }\n\n            mw.parent().dialog.remove('mw_rte_image');\n        });\n\n        var selector = '#image_tabs option';\n        $('#image_tabs select').on('change', function () {\n            var selected = this.options[this.selectedIndex];\n            var mode = 'dialog';\n            var index = this.selectedIndex;\n\n            var active = $('.tab').eq(index).show();\n            var rep = document.createElement('div');\n            var dialog = mw.top().dialog({\n                overlay: true,\n                beforeRemove: function () {\n                    $(rep).replaceWith(active)\n                }\n            })\n\n            if(mode === 'dialog' && index > 0) {\n\n            } else {\n                $('.tab').hide()//.eq(index).show()\n            }\n\n            active.before(rep);\n\n\n            active.appendTo(dialog.dialogContainer)\n\n            if (selected.id === 'browseTab') {\n\n                if (!window.fileBrowserLoaded) {\n                    window.fileBrowserLoaded = true;\n                    mw.top().load_module('files/admin', '#file_module_live_edit_adm', function () {\n\n                    }, {'filetype':'images'});\n                }\n\n            } else {\n             }\n            if(window.thismodal){\n                if(this.selectedIndex === ($(selector).length - 1)){\n                    thismodal.resize(800)\n                } else if(this.selectedIndex === 2){\n                    thismodal.resize(600)\n                } else {\n                    thismodal.resize(460)\n                }\n            }\n        })\n\n\n    });\n    /* end document ready  */\n\n\n    mw.embed = {\n        generate: function (type, url) {\n            switch (type) {\n                case 'link':\n                    return mw.embed.link(url);\n                    break;\n                case 'image':\n                    return mw.embed.image(url);\n                    break;\n                case 'youtube':\n                    return mw.embed.youtube(url);\n                    break;\n                case 'vimeo':\n                    return mw.embed.vimeo(url);\n                    break;\n                default:\n                    return false;\n            }\n        },\n        link: function (url, text) {\n            if (!!text) {\n                return '<a href=\"' + url + '\" title=\"' + text + '\">' + text + '</a>';\n            } else {\n                return '<a href=\"' + url + '\">' + url + '</a>';\n            }\n        },\n        image: function (url, text) {\n            if (!!text) {\n                return '<img class=\"element\" src=\"' + url + '\"  alt=\"' + text + '\" title=\"' + text + '\" />';\n            } else {\n                return '<img class=\"element\" src=\"' + url + '\"  alt=\"\"  />';\n            }\n        },\n        youtube: function (url) {\n            var id;\n            if (url.contains('youtu.be')) {\n                id = url.split('/').pop();\n                if (!id) {\n                    id = id.pop();\n                }\n                return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + id + '?v=1&wmode=transparent\" frameborder=\"0\" allowfullscreen></iframe></div>';\n            } else {\n                id = mw.url.getUrlParams(url).v;\n                return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + id + '?v=1&wmode=transparent\" frameborder=\"0\" allowfullscreen></iframe></div>';\n            }\n        },\n        vimeo: function (url) {\n            var id = url.split('/').pop();\n            if (!id) {\n                id = id.pop();\n            }\n            return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe src=\"https://player.vimeo.com/video/' + id + '?title=0&amp;byline=0&amp;portrait=0&amp;badge=0&amp;color=bc9b6a&wmode=transparent\" width=\"560\" height=\"315\" frameborder=\"0\" allowFullScreen></iframe></div>';\n        }\n    }\n\n</script>\n\n\n<style >\n\n/*    body, html {\n        overflow: hidden;\n    }*/\n\n    .mw-upload-filetypes {\n        list-style: none;\n        overflow: hidden;\n        position: relative;\n        z-index: 1;\n        text-align: center;\n    }\n\n    .mw-upload-filetypes li {\n        margin: 0 3px;\n        font-size: 11px;\n        display: inline-block;\n        position: relative;\n        cursor: default;\n        min-width: 100px;\n        text-align: center;\n        overflow: hidden;\n        transition: opacity 0.12s;\n        -moz-transition: opacity 0.12s;\n        -webkit-transition: opacity 0.12s;\n        -o-transition: opacity 0.12s;\n    }\n\n    .mw-upload-filetypes li:hover .mw-ui-btn {\n        background-color: #262626;\n        color: white;\n        border-color: #262626;\n    }\n\n    .mw-upload-filetypes li.disabled, .mw-upload-filetypes li.hovered {\n        opacity: 0.4;\n    }\n\n    .mw-upload-filetypes .mw-upload-frame {\n        color: #333333;\n    }\n\n    .mw-upload-filetypes [class*='mw-icon-'] {\n        font-size: 40px;\n    }\n\n    .mw-upload-filetypes li span {\n        display: flex;\n        white-space: nowrap;\n        margin-top: 12px;\n    }\n\n    .mw-upload-filetypes li iframe {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n    }\n\n    .mw-upload-filetypes li.disabled iframe, .mw-upload-filetypes li.hovered iframe {\n        left: -9999px;\n    }\n\n    .tab {\n        display: none;\n    }\n\n    #media_search_field {\n        float: left;\n        width: 275px;\n        margin-inline-end: 15px;\n    }\n    .image-tabs-header > div h6{\n        margin-bottom: 0;\n    }\n    .image-tabs-header{\n        display: flex;\n        justify-content: space-between;\n        align-content: center;\n        align-items: center;\n        padding-bottom: 10px;\n    }\n\n\n</style>\n<div class=\"module-live-edit-settings\">\n\n\n    <div class=\"mw-ui-progress\" id=\"mw-upload-progress\" style=\"display: none\">\n        <div class=\"mw-ui-progress-bar\" style=\"width: 0%;\"></div>\n        <div class=\"mw-ui-progress-info\"></div>\n        <span class=\"mw-ui-progress-percent\"></span>\n    </div>\n\n</div>\n"], "fixing_code": ["<?php $path = mw_includes_url() . \"toolbar/editor_tools/rte_image_editor/\"; ?>\n\n<script>\n    mw.parent().require(\"external_callbacks.js\");\n    mw.lib.require('mwui');\n    mw.require(\"events.js\");\n    mw.require(\"forms.js\");\n    mw.require(\"files.js\");\n    mw.require(\"url.js\");\n</script>\n\n<?php\n\nif (array_key_exists('types', $_GET)) {\n    $types = explode(',', $_GET['types']);\n    $types = xss_clean($types);\n} else {\n    $types = array('files', 'images', 'videos');\n}\n\nif (array_key_exists('title', $_GET)) {\n    $title = $_GET['title'];\n    $title = xss_clean($title);\n} else {\n    $title = __('Media');\n}\n\n?>\n\n<div id=\"filepick\"></div>\n\n<script>\n    var hash = location.hash.replace(/#/g, \"\");\n\n    hash = hash !== '' ? hash : 'insert_html';\n\n    UpdateImage = function (url) {\n        if (mw.parent().image.currentResizing) {\n            if (mw.parent().image.currentResizing[0].nodeName === 'IMG') {\n                mw.parent().image.currentResizing.attr(\"src\", url);\n                mw.parent().image.currentResizing.css('height', 'auto');\n            } else {\n                mw.parent().image.currentResizing.css(\"backgroundImage\", 'url(' + mw.files.safeFilename(url) + ')');\n                mw.top().wysiwyg.bgQuotesFix(mw.parent().image.currentResizing[0])\n            }\n        }\n        if (window.thismodal) {\n            thismodal.result(url);\n        }\n    };\n\n    afterMediaIsInserted = function (url, todo, eventType) {\n\n        todo = todo || false;\n        if (url === false) {\n            if (eventType === 'done') {\n\n            }\n            if (window.thismodal) {\n                thismodal.remove();\n            }\n            return false;\n        }\n\n        if (hash === 'fileWindow') {\n            $('body').trigger('change', [url]);\n            return false;\n        }\n        if (!todo) {\n            if (hash !== '') {\n                if (hash === 'editimage') {\n                    UpdateImage(url);\n                    if (mw.parent().image.currentResizing) {\n                        mw.parent().wysiwyg.change(mw.parent().image.currentResizing[0])\n                        mw.parent().image.resize.resizerSet(mw.parent().image.currentResizing[0]);\n                        mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], url])\n                    }\n                } else if (hash === 'set_bg_image') {\n                    mw.parent().wysiwyg.set_bg_image(url);\n                    mw.parent().wysiwyg.change(mw.parent().current_element);\n                    mw.parent().askusertostay = true;\n                } else {\n                    if (typeof parent[hash] === 'function') {\n                        parent[hash](url, eventType);\n                    } else {\n                        if (mw.parent().iframecallbacks['insert_image']) {\n                            mw.parent().iframecallbacks['insert_image'](url, eventType);\n                        }\n\n                    }\n                }\n            } else {\n                mw.parent().wysiwyg.restore_selection();\n                mw.parent().wysiwyg.insert_image(url, true);\n\n\n            }\n        }\n    };\n\n\n    GlobalEmbed = false;\n\n\n    $(document).ready(function () {\n\n\n        mw.on.hashParam('select-file', function (pval) {\n\n            if (hash === 'fileWindow') {\n                $('body').trigger('change', [pval]);\n                return false;\n            }\n\n            var type = mw.url.type(pval);\n            GlobalEmbed = mw.embed.generate(type, pval);\n            if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                if (hash === 'editimage') {\n\n\n                    mw.parent().iframecallbacks[hash](pval);\n                    if (mw.parent().image.currentResizing && mw.parent().image.currentResizing) {\n                        mw.parent().image.resize.resizerSet(mw.parent().image.currentResizing[0]);\n\n                    }\n\n                } else {\n\n                    mw.parent().iframecallbacks[hash](GlobalEmbed);\n                }\n\n            } else if (typeof parent[hash] === 'function') {\n\n                parent[hash](GlobalEmbed)\n            }\n            if (mw.parent().image.currentResizing && mw.parent().image.currentResizing[0]) {\n                mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], this]);\n            }\n\n            if (window.thismodal) {\n                thismodal.result(pval)\n            }\n\n            mw.parent().dialog.remove('mw_rte_image');\n\n            mw.notification.success('<?php _ejs('The image is changed') ?>');\n\n\n        });\n\n        Progress = mw.$('#mw-upload-progress');\n\n        ProgressBar = Progress.find('.mw-ui-progress-bar');\n        ProgressInfo = Progress.find('.mw-ui-progress-info');\n        ProgressPercent = Progress.find('.mw-ui-progress-percent');\n        ProgressDoneHTML = '<span class=\"ico iDone\" style=\"top:-6px;\"></span>&nbsp;<?php _e(\"Done! All files have been uploaded\"); ?>.';\n        ProgressErrorHTML = function (filename) {\n            return '<span class=\"ico iRemove\" style=\"top:-6px;\"></span>&nbsp;<?php _e(\"Error\"); ?>! \"' + filename + '\" - <?php _e(\"Invalid filetype\"); ?>.';\n        }\n\n        mw.require('filepicker.js');\n\n        var picker = new mw.filePicker({\n            element: '#filepick',\n            nav: 'tabs',\n            footer: true,\n            boxed: false,\n            dropDownTargetMode: 'dialog',\n            label: null\n        });\n\n\n        $(picker).on('Result', function (e, res) {\n            var filetypes = '<?php print join(\",\", $types);; ?>';\n            var url = res.src ? res.src : res;\n            if (filetypes.indexOf('images') !== -1) {\n                afterMediaIsInserted(url, '', \"FileUploaded\");\n            } else if (filetypes === 'videos' || filetypes === 'media') {\n                afterMediaIsInserted(url, 'video', \"FileUploaded\");\n            } else if (filetypes === 'files') {\n                if (item.src.contains(\"base64\")) {\n                    afterMediaIsInserted(url, '', \"FileUploaded\");\n                } else {\n                    afterMediaIsInserted(url, 'files', \"FileUploaded\");\n                }\n\n            }\n            if (window.thismodal) {\n                thismodal.result(url);\n                thismodal.remove()\n            }\n        })\n\n\n        mw.$(\"xc.dropable-zone\").each(function () {\n            var li = $(this);\n            var _li = this;\n            var filetypes = '<?php print join(\",\", $types);; ?>';\n\n            var frame = mw.files.uploader({\n                filetypes: filetypes,\n                element: li\n            });\n            frame.width = li.width();\n            frame.height = li.height();\n            $(frame).on(\"progress\", function (frame, file) {\n\n                Progress.show();\n\n                Progress.width(file.percent + '%');\n\n                ProgressPercent.html(file.percent + '%');\n\n                ProgressInfo.html(file.name);\n\n\n            });\n            $(frame).on(\"FileUploaded\", function (frame, item) {\n                if (filetypes.indexOf('images') !== -1) {\n                    afterMediaIsInserted(item.src, '', \"FileUploaded\");\n                } else if (filetypes === 'videos' || filetypes === 'media') {\n                    afterMediaIsInserted(item.src, 'video', \"FileUploaded\");\n                } else if (filetypes === 'files') {\n                    if (item.src.contains(\"base64\")) {\n                        afterMediaIsInserted(item.src, '', \"FileUploaded\");\n                    } else {\n                        afterMediaIsInserted(item.src, 'files', \"FileUploaded\");\n                    }\n\n                }\n                if (window.thismodal) {\n                    thismodal.result(item.src)\n                }\n\n            });\n\n            $(frame).on(\"done\", function (frame, item) {\n                Progress.hide();\n                //ProgressBar.width('0%');\n                ProgressPercent.html('');\n                ProgressInfo.html(ProgressDoneHTML);\n                afterMediaIsInserted(false, '', \"done\");\n\n            });\n\n\n            $(frame).on(\"error\", function (frame, file) {\n                ProgressPercent.html('');\n                ProgressInfo.html(ProgressErrorHTML(file.name));\n            });\n\n\n        });\n\n\n        var urlSearcher = mw.$(\"#media_search_field\");\n        var submit = mw.$('#btn_insert');\n        var status = mw.$(\"#image_status\");\n\n\n        urlSearcher.bind('keyup paste', function (e) {\n            GlobalEmbed = false;\n            if (e.type === 'keyup') {\n                mw.on.stopWriting(urlSearcher[0], function () {\n                    var val = urlSearcher.val();\n                    var type = mw.url.type(val);\n                    if (status[0]) {\n                        status[0].className = type;\n                        if (type !== 'image') {\n                            status.empty();\n                        } else {\n                            status.html('<img class=\"image_status_preview_image\" src=\"' + val + '\" />');\n                        }\n                    }\n\n                    GlobalEmbed = mw.embed.generate(type, val);\n                });\n            } else {\n                setTimeout(function () {\n                    var val = urlSearcher.val();\n                    if (hash === 'fileWindow') {\n\n                        if (window.thismodal) {\n                            thismodal.result(val)\n                        }\n                        $('body').trigger('change', [val]);\n                        return false;\n                    }\n                    var type = mw.url.type(val);\n                    GlobalEmbed = mw.embed.generate(type, val);\n                    if (type !== 'link') {\n                        if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                            if (hash.contains(\"edit\")) {\n                                mw.parent().iframecallbacks[hash](val);\n                            } else {\n                                mw.parent().iframecallbacks[hash](GlobalEmbed);\n                            }\n                        } else if (typeof parent[hash] === 'function') {\n                            parent[hash](GlobalEmbed);\n\n                        }\n                        if (window.thismodal) {\n                            thismodal.result(GlobalEmbed)\n                        }\n                        mw.parent().dialog.remove('mw_rte_image');\n                    }\n                }, 500);\n            }\n\n        });\n\n\n        submit.click(function () {\n\n\n            var val = urlSearcher.val();\n            if (hash === 'fileWindow') {\n                $('body').trigger('change', [val]);\n                return false;\n            }\n            var type = mw.url.type(val);\n            if (type !== 'link') {\n                if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                    mw.parent().iframecallbacks[hash](GlobalEmbed);\n                } else if (typeof parent[hash] === 'function') {\n                    parent[hash](GlobalEmbed)\n                }\n            } else {\n\n                if (typeof mw.parent().iframecallbacks[hash] === 'function') {\n                    mw.parent().iframecallbacks[hash](val);\n                } else if (typeof parent[hash] === 'function') {\n                    parent[hash](val)\n                }\n\n            }\n            if (window.thismodal) {\n                thismodal.result(val)\n            }\n            if (mw.parent().image.currentResizing) {\n                mw.parent().trigger('imageSrcChanged', [mw.parent().image.currentResizing[0], val]);\n\n            }\n\n            mw.parent().dialog.remove('mw_rte_image');\n        });\n\n        var selector = '#image_tabs option';\n        $('#image_tabs select').on('change', function () {\n            var selected = this.options[this.selectedIndex];\n            var mode = 'dialog';\n            var index = this.selectedIndex;\n\n            var active = $('.tab').eq(index).show();\n            var rep = document.createElement('div');\n            var dialog = mw.top().dialog({\n                overlay: true,\n                beforeRemove: function () {\n                    $(rep).replaceWith(active)\n                }\n            })\n\n            if (mode === 'dialog' && index > 0) {\n\n            } else {\n                $('.tab').hide()//.eq(index).show()\n            }\n\n            active.before(rep);\n\n\n            active.appendTo(dialog.dialogContainer)\n\n            if (selected.id === 'browseTab') {\n\n                if (!window.fileBrowserLoaded) {\n                    window.fileBrowserLoaded = true;\n                    mw.top().load_module('files/admin', '#file_module_live_edit_adm', function () {\n\n                    }, {'filetype': 'images'});\n                }\n\n            } else {\n            }\n            if (window.thismodal) {\n                if (this.selectedIndex === ($(selector).length - 1)) {\n                    thismodal.resize(800)\n                } else if (this.selectedIndex === 2) {\n                    thismodal.resize(600)\n                } else {\n                    thismodal.resize(460)\n                }\n            }\n        })\n\n\n    });\n    /* end document ready  */\n\n\n    mw.embed = {\n        generate: function (type, url) {\n            switch (type) {\n                case 'link':\n                    return mw.embed.link(url);\n                    break;\n                case 'image':\n                    return mw.embed.image(url);\n                    break;\n                case 'youtube':\n                    return mw.embed.youtube(url);\n                    break;\n                case 'vimeo':\n                    return mw.embed.vimeo(url);\n                    break;\n                default:\n                    return false;\n            }\n        },\n        link: function (url, text) {\n            if (!!text) {\n                return '<a href=\"' + url + '\" title=\"' + text + '\">' + text + '</a>';\n            } else {\n                return '<a href=\"' + url + '\">' + url + '</a>';\n            }\n        },\n        image: function (url, text) {\n            if (!!text) {\n                return '<img class=\"element\" src=\"' + url + '\"  alt=\"' + text + '\" title=\"' + text + '\" />';\n            } else {\n                return '<img class=\"element\" src=\"' + url + '\"  alt=\"\"  />';\n            }\n        },\n        youtube: function (url) {\n            var id;\n            if (url.contains('youtu.be')) {\n                id = url.split('/').pop();\n                if (!id) {\n                    id = id.pop();\n                }\n                return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + id + '?v=1&wmode=transparent\" frameborder=\"0\" allowfullscreen></iframe></div>';\n            } else {\n                id = mw.url.getUrlParams(url).v;\n                return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/' + id + '?v=1&wmode=transparent\" frameborder=\"0\" allowfullscreen></iframe></div>';\n            }\n        },\n        vimeo: function (url) {\n            var id = url.split('/').pop();\n            if (!id) {\n                id = id.pop();\n            }\n            return '<div class=\"element mw-embed-iframe\" style=\"height:315px;width:560px;\"><iframe src=\"https://player.vimeo.com/video/' + id + '?title=0&amp;byline=0&amp;portrait=0&amp;badge=0&amp;color=bc9b6a&wmode=transparent\" width=\"560\" height=\"315\" frameborder=\"0\" allowFullScreen></iframe></div>';\n        }\n    }\n\n</script>\n\n\n<style>\n\n    /*    body, html {\n            overflow: hidden;\n        }*/\n\n    .mw-upload-filetypes {\n        list-style: none;\n        overflow: hidden;\n        position: relative;\n        z-index: 1;\n        text-align: center;\n    }\n\n    .mw-upload-filetypes li {\n        margin: 0 3px;\n        font-size: 11px;\n        display: inline-block;\n        position: relative;\n        cursor: default;\n        min-width: 100px;\n        text-align: center;\n        overflow: hidden;\n        transition: opacity 0.12s;\n        -moz-transition: opacity 0.12s;\n        -webkit-transition: opacity 0.12s;\n        -o-transition: opacity 0.12s;\n    }\n\n    .mw-upload-filetypes li:hover .mw-ui-btn {\n        background-color: #262626;\n        color: white;\n        border-color: #262626;\n    }\n\n    .mw-upload-filetypes li.disabled, .mw-upload-filetypes li.hovered {\n        opacity: 0.4;\n    }\n\n    .mw-upload-filetypes .mw-upload-frame {\n        color: #333333;\n    }\n\n    .mw-upload-filetypes [class*='mw-icon-'] {\n        font-size: 40px;\n    }\n\n    .mw-upload-filetypes li span {\n        display: flex;\n        white-space: nowrap;\n        margin-top: 12px;\n    }\n\n    .mw-upload-filetypes li iframe {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n    }\n\n    .mw-upload-filetypes li.disabled iframe, .mw-upload-filetypes li.hovered iframe {\n        left: -9999px;\n    }\n\n    .tab {\n        display: none;\n    }\n\n    #media_search_field {\n        float: left;\n        width: 275px;\n        margin-inline-end: 15px;\n    }\n\n    .image-tabs-header > div h6 {\n        margin-bottom: 0;\n    }\n\n    .image-tabs-header {\n        display: flex;\n        justify-content: space-between;\n        align-content: center;\n        align-items: center;\n        padding-bottom: 10px;\n    }\n\n\n</style>\n<div class=\"module-live-edit-settings\">\n\n\n    <div class=\"mw-ui-progress\" id=\"mw-upload-progress\" style=\"display: none\">\n        <div class=\"mw-ui-progress-bar\" style=\"width: 0%;\"></div>\n        <div class=\"mw-ui-progress-info\"></div>\n        <span class=\"mw-ui-progress-percent\"></span>\n    </div>\n\n</div>\n"], "filenames": ["userfiles/modules/microweber/toolbar/editor_tools/rte_image_editor/index.php"], "buggy_code_start_loc": [16], "buggy_code_end_loc": [546], "fixing_code_start_loc": [16], "fixing_code_end_loc": [538], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Reflected in GitHub repository microweber/microweber prior to 2.0.", "other": {"cve": {"id": "CVE-2023-5244", "sourceIdentifier": "security@huntr.dev", "published": "2023-09-28T01:15:09.060", "lastModified": "2023-09-29T17:53:12.883", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Reflected in GitHub repository microweber/microweber prior to 2.0."}, {"lang": "es", "value": "Cross-site Scripting (XSS): reflejado en el repositorio de GitHub microweber/microweber anterior a 2.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.0, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 3.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.0", "matchCriteriaId": "A3C150C1-4763-474B-91B5-B571C53BEC4D"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/1cb846f8f54ff6f5c668f3ae64dd81740a7e8968", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/a3bd58ba-ca59-4cba-85d1-799f73a76470", "source": "security@huntr.dev", "tags": ["Permissions Required"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/1cb846f8f54ff6f5c668f3ae64dd81740a7e8968"}}