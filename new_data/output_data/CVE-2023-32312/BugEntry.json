{"buggy_code": ["  _    _ __  __ ____  _____           _____ ____  \n | |  | |  \\/  |  _ \\|  __ \\    /\\   / ____/ __ \\ \n | |  | | \\  / | |_) | |__) |  /  \\ | |   | |  | |\n | |  | | |\\/| |  _ <|  _  /  / /\\ \\| |   | |  | |\n | |__| | |  | | |_) | | \\ \\ / ____ | |___| |__| |\n  \\____/|_|  |_|____/|_|  \\_/_/    \\_\\_____\\____/ \n                                                   \n----------------------------------------------------\n\nUmbraco extensibility code has been installed for integrating Azure Active Directory\nOAuth with ASP.Net Identity for Umbraco back office users\n\t\t\t\nDOCUMENTATION, NOTES AND CODE have been installed to this file: \n\"~/App_Start/UmbracoADAuthExtensions.cs\"\nPlease read for information on integrating Active Directory OAuth providers \nfor ASP.Net Identity for the Umbraco back office.\n\nThe usage of this extension method in your OWIN startup class will look like this:\n\n            app.ConfigureBackOfficeAzureActiveDirectoryAuth(\n              \"YOUR_TENANT\",\n              \"YOUR_CLIENT_ID\",\n              \"YOUR_POST_LOGIN_REDIRECT_URL\",\n              new System.Guid(\"ISSUER_ID\"));\n\n\nFiles have been installed into your App_Start folder if you have a Web Application project \nor into App_Code if you have a Website project. \n\nAll of these files include lots of code comments, documentation & notes to assist with extending\nthe ASP.Net Identity implementaion for back office users in Umbraco. For all 3rd party \nASP.Net providers, their dependencies will need to be manually installed. See comments in the\nfollowing files for full details:\n\n* UmbracoStandardOwinStartup.cs \tIncludes code snippets to enable 3rd party ASP.Net Identity \n\t\t\t\t\t\t\t\t\tproviders to work with the Umbraco back office.\n\t\t\t\t\t\t\t\t\tTo enable the 'UmbracoStandardOwinStartup', update the web.config\n\t\t\t\t\t\t\t\t\tappSetting \"owin:appStartup\" to be: \"UmbracoStandardOwinStartup\"\n\n* UmbracoCustomOwinStartup\t\t\tIncludes code snippets to customize the Umbraco ASP.Net \n\t\t\t\t\t\t\t\t\tIdentity implementation for back office users as well as \n\t\t\t\t\t\t\t\t\tsnippets to enable 3rd party ASP.Net Identity providers to work.\n\t\t\t\t\t\t\t\t\tTo enable the 'UmbracoCustomOwinStartup', update the web.config\n\t\t\t\t\t\t\t\t\tappSetting \"owin:appStartup\" to be: \"UmbracoCustomOwinStartup\"\n", "using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\nusing System.Security.Claims;\nusing System.Threading.Tasks;\nusing System.Web;\nusing Microsoft.Owin;\nusing Owin;\nusing Umbraco.Core;\nusing Umbraco.Web.Security;\nusing Microsoft.Owin.Security.OpenIdConnect;\n\nnamespace $rootnamespace$\n{\n    public static class UmbracoADAuthExtensions\n    {\n\n        ///  <summary>\n        ///  Configure ActiveDirectory sign-in\n        ///  </summary>\n        ///  <param name=\"app\"></param>\n        ///  <param name=\"tenant\">\n        ///  Your tenant ID i.e. YOURDIRECTORYNAME.onmicrosoft.com OR this could be the GUID of your tenant ID\n        ///  </param>\n        ///  <param name=\"clientId\">\n        ///  Also known as the Application Id in the azure portal\n        ///  </param>\n        ///  <param name=\"postLoginRedirectUri\">\n        ///  The URL that will be redirected to after login is successful, example: http://mydomain.com/umbraco/;\n        ///  </param>\n        ///  <param name=\"issuerId\">\n        /// \n        ///  This is the \"Issuer Id\" for you Azure AD application. This is a GUID value of your tenant ID.\n        /// \n        ///  If this value is not set correctly then accounts won't be able to be detected \n        ///  for un-linking in the back office. \n        /// \n        ///  </param>\n        /// <param name=\"caption\"></param>\n        /// <param name=\"style\"></param>\n        /// <param name=\"icon\"></param>\n        /// <remarks>\n        ///  ActiveDirectory account documentation for ASP.Net Identity can be found:\n        ///  https://github.com/AzureADSamples/WebApp-WebAPI-OpenIDConnect-DotNet\n        ///  </remarks>\n        public static void ConfigureBackOfficeAzureActiveDirectoryAuth(this IAppBuilder app, \n            string tenant, string clientId, string postLoginRedirectUri, Guid issuerId,\n            string caption = \"Active Directory\", string style = \"btn-microsoft\", string icon = \"fa-windows\")\n        {         \n            var authority = string.Format(\n                CultureInfo.InvariantCulture, \n                \"https://login.windows.net/{0}\", \n                tenant);\n\n            var adOptions = new OpenIdConnectAuthenticationOptions\n            {\n                SignInAsAuthenticationType = Constants.Security.BackOfficeExternalAuthenticationType,\n                ClientId = clientId,\n                Authority = authority,\n                RedirectUri = postLoginRedirectUri\n            };\n\n            adOptions.ForUmbracoBackOffice(style, icon);            \n            adOptions.Caption = caption;\n            //Need to set the auth tyep as the issuer path\n            adOptions.AuthenticationType = string.Format(\n                CultureInfo.InvariantCulture,\n                \"https://sts.windows.net/{0}/\",\n                issuerId);\n            app.UseOpenIdConnectAuthentication(adOptions);            \n        }    \n\n    }\n    \n}\n"], "fixing_code": ["_    _ __  __ ____  _____           _____ ____  \n | |  | |  \\/  |  _ \\|  __ \\    /\\   / ____/ __ \\ \n | |  | | \\  / | |_) | |__) |  /  \\ | |   | |  | |\n | |  | | |\\/| |  _ <|  _  /  / /\\ \\| |   | |  | |\n | |__| | |  | | |_) | | \\ \\ / ____ | |___| |__| |\n  \\____/|_|  |_|____/|_|  \\_/_/    \\_\\_____\\____/ \n                                                   \n----------------------------------------------------\n\nUmbraco extensibility code has been installed for integrating Azure Active Directory\nOAuth with ASP.Net Identity for Umbraco back office users\n\t\t\t\nDOCUMENTATION, NOTES AND CODE have been installed to this file: \n\"~/App_Start/UmbracoADAuthExtensions.cs\"\nPlease read for information on integrating Active Directory OAuth providers \nfor ASP.Net Identity for the Umbraco back office.\n\nThe usage of this extension method in your OWIN startup class will look like this:\n\n            app.ConfigureBackOfficeAzureActiveDirectoryAuthentication(\n              \"YOUR_TENANT\",\n              \"YOUR_CLIENT_ID\",\n              \"YOUR_CLIENT_SECRET\",\n              \"YOUR_POST_LOGIN_REDIRECT_URL\",\n              new System.Guid(\"ISSUER_ID\"));\n\n\nFiles have been installed into your App_Start folder if you have a Web Application project \nor into App_Code if you have a Website project. \n\nAll of these files include lots of code comments, documentation & notes to assist with extending\nthe ASP.Net Identity implementaion for back office users in Umbraco. For all 3rd party \nASP.Net providers, their dependencies will need to be manually installed. See comments in the\nfollowing files for full details:\n\n* UmbracoStandardOwinStartup.cs \tIncludes code snippets to enable 3rd party ASP.Net Identity \n\t\t\t\t\t\t\t\t\tproviders to work with the Umbraco back office.\n\t\t\t\t\t\t\t\t\tTo enable the 'UmbracoStandardOwinStartup', update the web.config\n\t\t\t\t\t\t\t\t\tappSetting \"owin:appStartup\" to be: \"UmbracoStandardOwinStartup\"\n\n* UmbracoCustomOwinStartup\t\t\tIncludes code snippets to customize the Umbraco ASP.Net \n\t\t\t\t\t\t\t\t\tIdentity implementation for back office users as well as \n\t\t\t\t\t\t\t\t\tsnippets to enable 3rd party ASP.Net Identity providers to work.\n\t\t\t\t\t\t\t\t\tTo enable the 'UmbracoCustomOwinStartup', update the web.config\n\t\t\t\t\t\t\t\t\tappSetting \"owin:appStartup\" to be: \"UmbracoCustomOwinStartup\"", "using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\nusing System.Security.Claims;\nusing System.Threading.Tasks;\nusing System.Web;\nusing Microsoft.Owin;\nusing Owin;\nusing Umbraco.Core;\nusing Umbraco.Web.Security;\nusing Microsoft.Owin.Security.OpenIdConnect;\n\nnamespace $rootnamespace$\n{\n    public static class UmbracoADAuthExtensions\n    {\n\n        ///  <summary>\n        ///  Configure ActiveDirectory sign-in\n        ///  </summary>\n        ///  <param name=\"app\"></param>\n        ///  <param name=\"tenant\">\n        ///  Your tenant ID i.e. YOURDIRECTORYNAME.onmicrosoft.com OR this could be the GUID of your tenant ID\n        ///  </param>\n        ///  <param name=\"clientId\">\n        ///  Also known as the Application Id in the azure portal\n        ///  </param>\n        ///  <param name=\"postLoginRedirectUri\">\n        ///  The URL that will be redirected to after login is successful, example: http://mydomain.com/umbraco/;\n        ///  </param>\n        ///  <param name=\"issuerId\">\n        /// \n        ///  This is the \"Issuer Id\" for you Azure AD application. This is a GUID value of your tenant ID.\n        /// \n        ///  If this value is not set correctly then accounts won't be able to be detected \n        ///  for un-linking in the back office. \n        /// \n        ///  </param>\n        /// <param name=\"caption\"></param>\n        /// <param name=\"style\"></param>\n        /// <param name=\"icon\"></param>\n        /// <remarks>\n        ///  ActiveDirectory account documentation for ASP.Net Identity can be found:\n        ///  https://github.com/AzureADSamples/WebApp-WebAPI-OpenIDConnect-DotNet\n        ///  </remarks>\n        public static void ConfigureBackOfficeAzureActiveDirectoryAuthentication(this IAppBuilder app, \n            string tenant, string clientId, string clientSecret, string postLoginRedirectUri, Guid issuerId,\n            string caption = \"Active Directory\", string style = \"btn-microsoft\", string icon = \"fa-windows\")\n        {         \n            var authority = string.Format(\n                CultureInfo.InvariantCulture, \n                \"https://login.windows.net/{0}\", \n                tenant);\n\n            var adOptions = new OpenIdConnectAuthenticationOptions\n            {\n                SignInAsAuthenticationType = Constants.Security.BackOfficeExternalAuthenticationType,\n                ClientId = clientId,\n                Authority = authority,\n                RedirectUri = postLoginRedirectUri\n            };\n            if (clientSecret != null)  \n                adOptions.ClientSecret=clientSecret;\n\n            adOptions.ForUmbracoBackOffice(style, icon);            \n            adOptions.Caption = caption;\n            //Need to set the auth type as the issuer path\n            adOptions.AuthenticationType = string.Format(\n                CultureInfo.InvariantCulture,\n                \"https://sts.windows.net/{0}/\",\n                issuerId);\n            app.UseOpenIdConnectAuthentication(adOptions);            \n        }\n\n        [Obsolete(\"ConfigureBackOfficeAzureActiveDirectoryAuth has been deprecated , Please use ConfigureBackOfficeAzureActiveDirectoryAuthentication with clientSecret instead!\")]\n        public static void ConfigureBackOfficeAzureActiveDirectoryAuth(this IAppBuilder app, \n            string tenant, string clientId, string postLoginRedirectUri, Guid issuerId,\n            string caption = \"Active Directory\", string style = \"btn-microsoft\", string icon = \"fa-windows\")\n        {         \n            ConfigureBackOfficeAzureActiveDirectoryAuthentication(app,tenant,clientId,null,\n            postLoginRedirectUri,issuerId,\n            caption,style,icon);\n        }       \n\n    }\n\n\n    \n}"], "filenames": ["build/ActiveDirectory.Readme.txt", "src/App_Start/UmbracoADAuthExtensions.cs"], "buggy_code_start_loc": [1, 47], "buggy_code_end_loc": [45, 77], "fixing_code_start_loc": [1, 47], "fixing_code_end_loc": [46, 91], "type": "NVD-CWE-noinfo", "message": "UmbracoIdentityExtensions is an Umbraco add-on package that enables easy extensibility points for ASP.Net Identity integration. In affected versions client secrets are not required which may expose some endpoints to untrusted actors. Since Umbraco is not a single-page application, the implicit flow is not safe. For traditional MVC applications, it is recommended to use the authorization code flow, which requires the client to authenticate with the authorization server using a client secret. This flow provides better security, as it involves exchanging an authorization code for an access token and/or ID token, rather than directly returning tokens in the URL fragment. This issue has been patched in commit `e792429f9` and a release to Nuget is pending. Users are advised to upgrade when possible.", "other": {"cve": {"id": "CVE-2023-32312", "sourceIdentifier": "security-advisories@github.com", "published": "2023-06-09T20:15:10.190", "lastModified": "2023-06-20T18:08:10.447", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "UmbracoIdentityExtensions is an Umbraco add-on package that enables easy extensibility points for ASP.Net Identity integration. In affected versions client secrets are not required which may expose some endpoints to untrusted actors. Since Umbraco is not a single-page application, the implicit flow is not safe. For traditional MVC applications, it is recommended to use the authorization code flow, which requires the client to authenticate with the authorization server using a client secret. This flow provides better security, as it involves exchanging an authorization code for an access token and/or ID token, rather than directly returning tokens in the URL fragment. This issue has been patched in commit `e792429f9` and a release to Nuget is pending. Users are advised to upgrade when possible."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.7, "baseSeverity": "LOW"}, "exploitabilityScore": 2.2, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:umbraco:umbraco_identity_extensibility:*:*:*:*:*:umbraco:*:*", "versionEndIncluding": "2.0.0", "matchCriteriaId": "8326937F-AAE7-4E79-B983-3C7BC9A4B8DA"}]}]}], "references": [{"url": "https://docs.umbraco.com/umbraco-cms/reference/security/external-login-providers", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/umbraco/UmbracoIdentityExtensions/commit/e792429f9d1fa25c1ba4f7a61d23ee02fedd6dc9", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/umbraco/UmbracoIdentityExtensions/pull/53", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/umbraco/UmbracoIdentityExtensions/security/advisories/GHSA-f2rf-8mwf-6jfh", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/umbraco/UmbracoIdentityExtensions/commit/e792429f9d1fa25c1ba4f7a61d23ee02fedd6dc9"}}