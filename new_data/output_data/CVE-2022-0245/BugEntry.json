{"buggy_code": ["<?php include(erLhcoreClassDesign::designtpl('lhchat/lists_titles/cannedmsgedit.tpl.php'));?>\n\n<?php if (isset($errors)) : ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\n<?php endif; ?>\n\n<?php if (isset($updated)) : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Updated'); ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\n<?php endif; ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsg/confirm_global.tpl.php'));?>\n\n<form action=\"<?php echo erLhcoreClassDesign::baseurl('chat/cannedmsgedit')?>/<?php echo $canned_message->id?>\" method=\"post\" onsubmit=\"return confirmSave()\">\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsgform.tpl.php'));?>\n    \n    <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"Save_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"Update_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Update');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"Cancel_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Cancel');?>\"/>\n\t</div>\n\n</form>\n", "<?php include(erLhcoreClassDesign::designtpl('lhchat/lists_titles/newcannedmsg.tpl.php'));?>\n\n<?php if (isset($errors)) : ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\n<?php endif; ?>\n\n<form action=\"<?php echo erLhcoreClassDesign::baseurl('chat/newcannedmsg')?>\" method=\"post\">\n    \n    <?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsgform.tpl.php'));?>\n\t\n\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n\t   <input type=\"submit\" class=\"btn btn-secondary\" name=\"Save_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save');?>\"/></li>\n\t   <input type=\"submit\" class=\"btn btn-secondary\" name=\"Cancel_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Cancel');?>\"/></li>\n\t</div>\n</form>\n", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhchat/cannedmsgedit.tpl.php');\n\n$Msg = erLhcoreClassChat::getSession()->load( 'erLhcoreClassModelCannedMsg', (int)$Params['user_parameters']['id'] );\n\n/**\n * Append user departments filter\n * */\n$userDepartments = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($currentUser->getUserID(), $currentUser->cache_version);\n\nif ($userDepartments !== true) {\n\tif ((!erLhcoreClassUser::instance()->hasAccessTo('lhcannedmsg','see_global') && $Msg->department_id == 0) ||\n        (!empty(array_diff($Msg->department_ids_front, $userDepartments)) && $Msg->department_id == -1)\n    ) {\n        $tpl->setFile( 'lhkernel/validation_error.tpl.php');\n        $tpl->set('show_close_button',true);\n        $tpl->set('auto_close_dialog',true);\n        $tpl->set('errors',[erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','You cannot modify canned messages for the departments you are not assigned to!')]);\n        $Result['content'] = $tpl->fetch();\n\t\treturn;\n\t}\n}\n\nif ( isset($_POST['Cancel_action']) ) {\n    erLhcoreClassModule::redirect('chat/cannedmsg');\n    exit;\n}\n\nif (isset($_POST['Update_action']) || isset($_POST['Save_action'])  )\n{\n   $previousState = $Msg->getState();\n\n   $Errors = erLhcoreClassAdminChatValidatorHelper::validateCannedMessage($Msg, $userDepartments);\n   \n   erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.canned_msg_before_save',array('departments' => $userDepartments, 'errors' => & $Errors, 'msg' => & $Msg, 'scope' => 'global'));\n   \n    if (count($Errors) == 0)\n    {\n        $Msg->saveThis();\n        \n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.canned_msg_after_save',array('msg' => & $Msg));\n\n        $currentState = $Msg->getState();\n\n        erLhcoreClassLog::logObjectChange(array(\n            'object' => $Msg,\n            'check_log' => true,\n            'msg' => array(\n                'prev' => $previousState,\n                'curr' => $currentState,\n                'user_id' => $currentUser->getUserID()\n            )\n        ));\n        \n        if (isset($_POST['Save_action'])) {\n            erLhcoreClassModule::redirect('chat/cannedmsg');\n            exit;\n        } else {\n            $tpl->set('updated',true);\n        }\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$tpl->set('canned_message',$Msg);\n$tpl->set('limitDepartments',$userDepartments !== true ? array('filterin' => array('id' => $userDepartments)) : array());\n\n$Result['content'] = $tpl->fetch();\n$Result['additional_footer_js'] = '<script src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.cannedmsg.js').'\"></script>';\n\n$Result['path'] = array(\narray('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','System configuration')),\narray('url' => erLhcoreClassDesign::baseurl('chat/cannedmsg'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Canned messages')),\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Edit canned message')));\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.cannedmsgedit_path',array('result' => & $Result));\n\n?>", "<?php\n\n$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg', array());\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhchat/newcannedmsg.tpl.php');\n$CannedMessage = new erLhcoreClassModelCannedMsg();\n\n/**\n * Append user departments filter\n * */\n$userDepartments = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($currentUser->getUserID(), $currentUser->cache_version);\n\nif ( isset($_POST['Cancel_action']) ) {\n    erLhcoreClassModule::redirect('chat/cannedmsg');\n    exit;\n}\n\nif (isset($_POST['Save_action']))\n{\n    $Errors = erLhcoreClassAdminChatValidatorHelper::validateCannedMessage($CannedMessage, $userDepartments);\n\n    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_newcannedmsg', array('departments' => $userDepartments, 'scope' => 'global', 'errors' => & $Errors, 'msg' => & $CannedMessage));\n\n    if (count($Errors) == 0)\n    {\n        $CannedMessage->saveThis();\n\n        erLhcoreClassLog::logObjectChange(array(\n            'object' => $CannedMessage,\n            'check_log' => true,\n            'msg' => array(\n                'new' => $CannedMessage->getState(),\n                'user_id' => $currentUser->getUserID()\n            )\n        ));\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg_saved', array('msg' => & $CannedMessage));\n\n        erLhcoreClassModule::redirect('chat/cannedmsg');\n        exit ;\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$tpl->set('canned_message',$CannedMessage);\n$tpl->set('limitDepartments',$userDepartments !== true ? array('filterin' => array('id' => $userDepartments)) : array());\n\n$Result['content'] = $tpl->fetch();\n$Result['additional_footer_js'] = '<script src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.cannedmsg.js').'\"></script>';\n\n$Result['path'] = array(\narray('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','System configuration')),\narray('url' => erLhcoreClassDesign::baseurl('chat/cannedmsg'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Canned messages')),\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','New canned message')),\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg_path',array('result' => & $Result));\n?>", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhgroupchat/options.tpl.php');\n\n$gcOptions = erLhcoreClassModelChatConfig::fetch('groupchat_options');\n$data = (array)$gcOptions->data;\n\n\nif ( isset($_POST['StoreOptions']) ) {\n\n    $definition = array(\n        'supervisor' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::OPTIONAL, 'int'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n    $Errors = array();\n\n    if ( $form->hasValidData( 'supervisor' ) ) {\n        $data['supervisor'] = $form->supervisor;\n    } else {\n        $data['supervisor'] = 0;\n    }\n\n    $gcOptions->explain = '';\n    $gcOptions->type = 0;\n    $gcOptions->hidden = 1;\n    $gcOptions->identifier = 'groupchat_options';\n    $gcOptions->value = serialize($data);\n    $gcOptions->saveThis();\n\n    $CacheManager = erConfigClassLhCacheConfig::getInstance();\n    $CacheManager->expireCache(true);\n\n    $tpl->set('updated','done');\n}\n\n$tpl->set('gc_options',$data);\n\n$Result['content'] = $tpl->fetch();\n\n$Result['path'] = array(\n    array(\n        'url' => erLhcoreClassDesign::baseurl('system/configuration'),\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('mobile/settings', 'Settings')\n    ),\n    array(\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('groupchat/settings', 'Options')\n    )\n);\n\n?>", "<?php\r\n\r\n$tpl = erLhcoreClassTemplate::getInstance('lhnotifications/settings.tpl.php');\r\n\r\n$nSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings');\r\n$data = (array)$nSettings->data;\r\n\r\nif ( isset($_POST['StoreOptions']) ) {\r\n\r\n    $definition = array(\r\n        'enabled' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'require_interaction' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'renotify' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'subject' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'icon' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'http_host' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'badge' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'vibrate' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'public_key' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'private_key' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        )\r\n    );\r\n\r\n    $form = new ezcInputForm( INPUT_POST, $definition );\r\n    $Errors = array();\r\n\r\n    if ( $form->hasValidData( 'enabled' ) && $form->enabled == true ) {\r\n        $data['enabled'] = 1;\r\n    } else {\r\n        $data['enabled'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'require_interaction' ) && $form->require_interaction == true ) {\r\n        $data['require_interaction'] = 1;\r\n    } else {\r\n        $data['require_interaction'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'renotify' ) && $form->renotify == true ) {\r\n        $data['renotify'] = 1;\r\n    } else {\r\n        $data['renotify'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'public_key' ) && $form->public_key != '' ) {\r\n        $data['public_key'] = $form->public_key;\r\n    } else {\r\n        $data['public_key'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'http_host' ) && $form->http_host != '' ) {\r\n        $data['http_host'] = $form->http_host;\r\n    } else {\r\n        $data['http_host'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'icon' ) && $form->icon != '' ) {\r\n        $data['icon'] = $form->icon;\r\n    } else {\r\n        $data['icon'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'badge' ) && $form->badge != '' ) {\r\n        $data['badge'] = $form->badge;\r\n    } else {\r\n        $data['badge'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'vibrate' ) && $form->vibrate != '' ) {\r\n        $data['vibrate'] = $form->vibrate;\r\n    } else {\r\n        $data['vibrate'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'subject' ) && $form->subject != '' ) {\r\n        $data['subject'] = $form->subject;\r\n    } else {\r\n        $data['subject'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'private_key' ) && $form->private_key != '' ) {\r\n        $data['private_key'] = $form->private_key;\r\n    }\r\n\r\n    $nSettings->explain = '';\r\n    $nSettings->type = 0;\r\n    $nSettings->hidden = 1;\r\n    $nSettings->identifier = 'notifications_settings';\r\n    $nSettings->value = serialize($data);\r\n    $nSettings->saveThis();\r\n    \r\n    // Cleanup cache to recompile templates etc.\r\n    $CacheManager = erConfigClassLhCacheConfig::getInstance();\r\n    $CacheManager->expireCache();\r\n\r\n    $tpl->set('updated','done');\r\n}\r\n\r\n$tpl->set('n_settings',$data);\r\n\r\n$Result['content'] = $tpl->fetch();\r\n\r\n$Result['path'] = array(\r\n    array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/configuration','System configuration')),\r\n    array(\r\n        'url' => erLhcoreClassDesign::baseurl('notifications/index'),\r\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/index', 'Notifications')\r\n    ),\r\n    array(\r\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/index', 'Settings')\r\n    )\r\n);\r\n\r\n?>"], "fixing_code": ["<?php include(erLhcoreClassDesign::designtpl('lhchat/lists_titles/cannedmsgedit.tpl.php'));?>\n\n<?php if (isset($errors)) : ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\n<?php endif; ?>\n\n<?php if (isset($updated)) : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Updated'); ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\n<?php endif; ?>\n\n<?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsg/confirm_global.tpl.php'));?>\n\n<form action=\"<?php echo erLhcoreClassDesign::baseurl('chat/cannedmsgedit')?>/<?php echo $canned_message->id?>\" method=\"post\" onsubmit=\"return confirmSave()\">\n\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsgform.tpl.php'));?>\n    \n    <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n\t  <input type=\"submit\" class=\"btn btn-secondary\" name=\"Save_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"Update_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Update');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"Cancel_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Cancel');?>\"/>\n\t</div>\n\n</form>\n", "<?php include(erLhcoreClassDesign::designtpl('lhchat/lists_titles/newcannedmsg.tpl.php'));?>\n\n<?php if (isset($errors)) : ?>\n\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/validation_error.tpl.php'));?>\n<?php endif; ?>\n\n<form action=\"<?php echo erLhcoreClassDesign::baseurl('chat/newcannedmsg')?>\" method=\"post\">\n\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\n\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/cannedmsgform.tpl.php'));?>\n\t\n\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n\t   <input type=\"submit\" class=\"btn btn-secondary\" name=\"Save_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save');?>\"/></li>\n\t   <input type=\"submit\" class=\"btn btn-secondary\" name=\"Cancel_action\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Cancel');?>\"/></li>\n\t</div>\n</form>\n", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhchat/cannedmsgedit.tpl.php');\n\n$Msg = erLhcoreClassChat::getSession()->load( 'erLhcoreClassModelCannedMsg', (int)$Params['user_parameters']['id'] );\n\n/**\n * Append user departments filter\n * */\n$userDepartments = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($currentUser->getUserID(), $currentUser->cache_version);\n\nif ($userDepartments !== true) {\n\tif ((!erLhcoreClassUser::instance()->hasAccessTo('lhcannedmsg','see_global') && $Msg->department_id == 0) ||\n        (!empty(array_diff($Msg->department_ids_front, $userDepartments)) && $Msg->department_id == -1)\n    ) {\n        $tpl->setFile( 'lhkernel/validation_error.tpl.php');\n        $tpl->set('show_close_button',true);\n        $tpl->set('auto_close_dialog',true);\n        $tpl->set('errors',[erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','You cannot modify canned messages for the departments you are not assigned to!')]);\n        $Result['content'] = $tpl->fetch();\n\t\treturn;\n\t}\n}\n\nif ( isset($_POST['Cancel_action']) ) {\n    erLhcoreClassModule::redirect('chat/cannedmsg');\n    exit;\n}\n\nif (isset($_POST['Update_action']) || isset($_POST['Save_action'])  )\n{\n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('chat/cannedmsg');\n        exit;\n    }\n\n   $previousState = $Msg->getState();\n\n   $Errors = erLhcoreClassAdminChatValidatorHelper::validateCannedMessage($Msg, $userDepartments);\n   \n   erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.canned_msg_before_save',array('departments' => $userDepartments, 'errors' => & $Errors, 'msg' => & $Msg, 'scope' => 'global'));\n   \n    if (count($Errors) == 0)\n    {\n        $Msg->saveThis();\n        \n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.canned_msg_after_save',array('msg' => & $Msg));\n\n        $currentState = $Msg->getState();\n\n        erLhcoreClassLog::logObjectChange(array(\n            'object' => $Msg,\n            'check_log' => true,\n            'msg' => array(\n                'prev' => $previousState,\n                'curr' => $currentState,\n                'user_id' => $currentUser->getUserID()\n            )\n        ));\n        \n        if (isset($_POST['Save_action'])) {\n            erLhcoreClassModule::redirect('chat/cannedmsg');\n            exit;\n        } else {\n            $tpl->set('updated',true);\n        }\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$tpl->set('canned_message',$Msg);\n$tpl->set('limitDepartments',$userDepartments !== true ? array('filterin' => array('id' => $userDepartments)) : array());\n\n$Result['content'] = $tpl->fetch();\n$Result['additional_footer_js'] = '<script src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.cannedmsg.js').'\"></script>';\n\n$Result['path'] = array(\narray('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','System configuration')),\narray('url' => erLhcoreClassDesign::baseurl('chat/cannedmsg'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Canned messages')),\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Edit canned message')));\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.cannedmsgedit_path',array('result' => & $Result));\n\n?>", "<?php\n\n$response = erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg', array());\n\n$tpl = erLhcoreClassTemplate::getInstance( 'lhchat/newcannedmsg.tpl.php');\n$CannedMessage = new erLhcoreClassModelCannedMsg();\n\n/**\n * Append user departments filter\n * */\n$userDepartments = erLhcoreClassUserDep::parseUserDepartmetnsForFilter($currentUser->getUserID(), $currentUser->cache_version);\n\nif ( isset($_POST['Cancel_action']) ) {\n    erLhcoreClassModule::redirect('chat/cannedmsg');\n    exit;\n}\n\nif (isset($_POST['Save_action']))\n{\n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('chat/cannedmsg');\n        exit;\n    }\n\n    $Errors = erLhcoreClassAdminChatValidatorHelper::validateCannedMessage($CannedMessage, $userDepartments);\n\n    erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.before_newcannedmsg', array('departments' => $userDepartments, 'scope' => 'global', 'errors' => & $Errors, 'msg' => & $CannedMessage));\n\n    if (count($Errors) == 0)\n    {\n        $CannedMessage->saveThis();\n\n        erLhcoreClassLog::logObjectChange(array(\n            'object' => $CannedMessage,\n            'check_log' => true,\n            'msg' => array(\n                'new' => $CannedMessage->getState(),\n                'user_id' => $currentUser->getUserID()\n            )\n        ));\n\n        erLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg_saved', array('msg' => & $CannedMessage));\n\n        erLhcoreClassModule::redirect('chat/cannedmsg');\n        exit ;\n\n    }  else {\n        $tpl->set('errors',$Errors);\n    }\n}\n\n$tpl->set('canned_message',$CannedMessage);\n$tpl->set('limitDepartments',$userDepartments !== true ? array('filterin' => array('id' => $userDepartments)) : array());\n\n$Result['content'] = $tpl->fetch();\n$Result['additional_footer_js'] = '<script src=\"'.erLhcoreClassDesign::designJS('js/angular.lhc.cannedmsg.js').'\"></script>';\n\n$Result['path'] = array(\narray('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','System configuration')),\narray('url' => erLhcoreClassDesign::baseurl('chat/cannedmsg'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','Canned messages')),\narray('title' => erTranslationClassLhTranslation::getInstance()->getTranslation('chat/cannedmsg','New canned message')),\n);\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('chat.newcannedmsg_path',array('result' => & $Result));\n?>", "<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhgroupchat/options.tpl.php');\n\n$gcOptions = erLhcoreClassModelChatConfig::fetch('groupchat_options');\n$data = (array)$gcOptions->data;\n\n\nif ( isset($_POST['StoreOptions']) ) {\n\n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect('groupchat/options');\n        exit;\n    }\n\n    $definition = array(\n        'supervisor' => new ezcInputFormDefinitionElement(\n            ezcInputFormDefinitionElement::OPTIONAL, 'int'\n        )\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n    $Errors = array();\n\n    if ( $form->hasValidData( 'supervisor' ) ) {\n        $data['supervisor'] = $form->supervisor;\n    } else {\n        $data['supervisor'] = 0;\n    }\n\n    $gcOptions->explain = '';\n    $gcOptions->type = 0;\n    $gcOptions->hidden = 1;\n    $gcOptions->identifier = 'groupchat_options';\n    $gcOptions->value = serialize($data);\n    $gcOptions->saveThis();\n\n    $CacheManager = erConfigClassLhCacheConfig::getInstance();\n    $CacheManager->expireCache(true);\n\n    $tpl->set('updated','done');\n}\n\n$tpl->set('gc_options',$data);\n\n$Result['content'] = $tpl->fetch();\n\n$Result['path'] = array(\n    array(\n        'url' => erLhcoreClassDesign::baseurl('system/configuration'),\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('mobile/settings', 'Settings')\n    ),\n    array(\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('groupchat/settings', 'Options')\n    )\n);\n\n?>", "<?php\r\n\r\n$tpl = erLhcoreClassTemplate::getInstance('lhnotifications/settings.tpl.php');\r\n\r\n$nSettings = erLhcoreClassModelChatConfig::fetch('notifications_settings');\r\n$data = (array)$nSettings->data;\r\n\r\nif ( isset($_POST['StoreOptions']) ) {\r\n\r\n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\r\n        erLhcoreClassModule::redirect('notifications/index');\r\n        exit;\r\n    }\r\n\r\n    $definition = array(\r\n        'enabled' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'require_interaction' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'renotify' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'boolean'\r\n        ),\r\n        'subject' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'icon' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'http_host' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'badge' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'vibrate' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'public_key' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        ),\r\n        'private_key' => new ezcInputFormDefinitionElement(\r\n            ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw'\r\n        )\r\n    );\r\n\r\n    $form = new ezcInputForm( INPUT_POST, $definition );\r\n    $Errors = array();\r\n\r\n    if ( $form->hasValidData( 'enabled' ) && $form->enabled == true ) {\r\n        $data['enabled'] = 1;\r\n    } else {\r\n        $data['enabled'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'require_interaction' ) && $form->require_interaction == true ) {\r\n        $data['require_interaction'] = 1;\r\n    } else {\r\n        $data['require_interaction'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'renotify' ) && $form->renotify == true ) {\r\n        $data['renotify'] = 1;\r\n    } else {\r\n        $data['renotify'] = 0;\r\n    }\r\n\r\n    if ( $form->hasValidData( 'public_key' ) && $form->public_key != '' ) {\r\n        $data['public_key'] = $form->public_key;\r\n    } else {\r\n        $data['public_key'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'http_host' ) && $form->http_host != '' ) {\r\n        $data['http_host'] = $form->http_host;\r\n    } else {\r\n        $data['http_host'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'icon' ) && $form->icon != '' ) {\r\n        $data['icon'] = $form->icon;\r\n    } else {\r\n        $data['icon'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'badge' ) && $form->badge != '' ) {\r\n        $data['badge'] = $form->badge;\r\n    } else {\r\n        $data['badge'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'vibrate' ) && $form->vibrate != '' ) {\r\n        $data['vibrate'] = $form->vibrate;\r\n    } else {\r\n        $data['vibrate'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'subject' ) && $form->subject != '' ) {\r\n        $data['subject'] = $form->subject;\r\n    } else {\r\n        $data['subject'] = '';\r\n    }\r\n\r\n    if ( $form->hasValidData( 'private_key' ) && $form->private_key != '' ) {\r\n        $data['private_key'] = $form->private_key;\r\n    }\r\n\r\n    $nSettings->explain = '';\r\n    $nSettings->type = 0;\r\n    $nSettings->hidden = 1;\r\n    $nSettings->identifier = 'notifications_settings';\r\n    $nSettings->value = serialize($data);\r\n    $nSettings->saveThis();\r\n    \r\n    // Cleanup cache to recompile templates etc.\r\n    $CacheManager = erConfigClassLhCacheConfig::getInstance();\r\n    $CacheManager->expireCache();\r\n\r\n    $tpl->set('updated','done');\r\n}\r\n\r\n$tpl->set('n_settings',$data);\r\n\r\n$Result['content'] = $tpl->fetch();\r\n\r\n$Result['path'] = array(\r\n    array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('system/configuration','System configuration')),\r\n    array(\r\n        'url' => erLhcoreClassDesign::baseurl('notifications/index'),\r\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/index', 'Notifications')\r\n    ),\r\n    array(\r\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('notifications/index', 'Settings')\r\n    )\r\n);\r\n\r\n?>"], "filenames": ["lhc_web/design/defaulttheme/tpl/lhchat/cannedmsgedit.tpl.php", "lhc_web/design/defaulttheme/tpl/lhchat/newcannedmsg.tpl.php", "lhc_web/modules/lhchat/cannedmsgedit.php", "lhc_web/modules/lhchat/newcannedmsg.php", "lhc_web/modules/lhgroupchat/options.php", "lhc_web/modules/lhnotifications/settings.php"], "buggy_code_start_loc": [14, 8, 31, 19, 9, 8], "buggy_code_end_loc": [14, 9, 31, 19, 9, 8], "fixing_code_start_loc": [15, 8, 32, 20, 10, 9], "fixing_code_end_loc": [17, 11, 37, 25, 15, 14], "type": "CWE-352", "message": "Cross-Site Request Forgery (CSRF) in GitHub repository livehelperchat/livehelperchat prior to 2.0.", "other": {"cve": {"id": "CVE-2022-0245", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-18T06:15:06.847", "lastModified": "2022-01-24T17:11:36.130", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-Site Request Forgery (CSRF) in GitHub repository livehelperchat/livehelperchat prior to 2.0."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-Site Request Forgery (CSRF) en el repositorio de GitHub livehelperchat/livehelperchat versiones anteriores a 2.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:livehelperchat:livehelperchat:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.0", "matchCriteriaId": "463AB89F-ABE6-460C-BC3E-AFD91E280FA0"}]}]}], "references": [{"url": "https://github.com/livehelperchat/livehelperchat/commit/c2fa19afeb8b1ea927fea3fd452515c95f289fb9", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/6a6aca72-32b7-45b3-a8ba-9b400b2d669c", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/livehelperchat/livehelperchat/commit/c2fa19afeb8b1ea927fea3fd452515c95f289fb9"}}